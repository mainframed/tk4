AI01     TITLE '''IEDQAI'' - SKIP FORWARD AND SCAN ROUTINE'
IEDQAI   CSECT
         SPACE 3
*C386000                                                        SA59004
*A260500,276600-277200,303000,313000,593000,599000,625600,647000 S22025
*A029000,097000,134600-135200,139000,166000,248040-249840,257000 S22025
*C030000,152000-156000,182000,190000,213000-218000,252400-255600 S22025
*C270000,354000,362000-366000,448000,462000,476000,562000-564000 S22025
*D164000-168000,180000,184000,236000,280000-294000,300000-306000 S22025
*D312000-316000,318000-332000,398000-444000,570000-574000        S22025
*C194000-196000                                                 SA55417
*A652000                                                        SA54273
*C584800                                                        SA54273
*
         SPACE 3
***********************************************************************
*C606000                                                         S22029
*D170000-172000,178000                                           S22029
*                                                                     *
*C504000                                                         S21903
*TITLE: 'IEDQAI' - SKIP FORWARD AND SCAN ROUTINE                      *
*                                                                     *
*STATUS -- CHANGE LEVEL 0                                             *
*                                                                     *
*FUNCTION -- MOVES THE SCAN POINTER FORWARD IN THE HEADER A           *
*   SPECIFIED NUMBER OF BYTES, OR ACCESSES AND RETURNS TO THE         *
*   CALLER THE NEXT FIELD BEYOND THE SCAN POINTER AND OPTIONALLY      *
*   COMPARES THE FIELD FOUND WITH A FIELD WHOSE ADDRESS IS PASSED.    *
*                                                                     *
*   ENTRY FOR SKIP FORWARD --                                         *
*                                                                     *
*   THE SCAN POINTER IS UPDATED BY THE SPECIFIED NUMBER OF NON-BLANK  *
*   CHARACTERS.                                                       *
*                                                                     *
*   RETURN CODES -- REGISTER 15                                       *
*         X'00' IF NORMAL COMPLETION                                  *
*         X'04' IF OUT-OF-BUFFER DETECTED BEFORE SKIP COUNT COMPLETE  *
*                                                                     *
*   ENTRY FOR FIXED SCAN --                                           *
*                                                                     *
*   THE CALLER MAY DEFINE THE NEXT FIELD AS THE NEXT 'N' DATA         *
*   BYTES  IN THE BUFFER.  IF THE CHARACTER STRING HAS BEEN PASSED    *
*   IN THE PARAMETER LIST, THE FIELD FOUND IS COMPARED TO IT.         *
*                                                                     *
*   RETURN CODES -- REGISTER 15                                       *
*         X'00'  CHARACTERS NOT FOUND                                 *
*         OFFSET TO NEXT FIELD IF STRING FOUND                        *
*                                                                     *
*   IF END-OF-BUFFER DETECTED, THE MULTIPLE BUFFER HEADER EXIT        *
*   IS TAKEN.                                                         *
*                                                                     *
*   ENTRY FOR VARIABLE SCAN --                                        *
*   THE CALLER MAY DEFINE THE NEXT FIELD AS THE NEXT CONTIGUOUS       *
*   STRING OF DATA BYTES, DELIMITED BY A BLANK.  THIS IS THE          *
*   VARIABLE SCAN FUNCTION.  FOR THIS FUNCTION,  THE ROUTINE LOOPS    *
*   TO THE BUFFER STEP ROUTINE UNTIL A NON-BLANK CHARACTER IS         *
*   RETURNED.  THIS CHARACTER IS STORED IN THE AVT WORK AREA.  THE    *
*   ROUTINE LOOPS AGAIN TO THE BUFFER STEP ROUTINE,  ADDING DATA      *
*   BYTES TO THE AVT WORK AREA UNTIL (1) A BLANK DELIMITER IS         *
*   FOUND OR (2) THE EIGHT-BYTE AVT WORK AREA IS FILLED.  AT THIS     *
*   POINT THE NORMAL SCAN END EXIT IS TAKEN.                          *
*                                                                     *
*   IF RETURN FROM THE BUFFER STEP ROUTINE INDICATES THAT THE END     *
*   OF THE BUFFER HAS BEEN PASSED,  THE MULTIPLE BUFFER HEADER EXIT   *
*   IS TAKEN.                                                         *
*                                                                     *
*   NORMAL SCAN END EXIT --                                           *
*   THE OFFSET TO THE END OF THE FIELD IN THE BUFFER IS STORED        *
*   EITHER IN THE PREFIX SCAN POINTER (PRFSCAN) OR IN A REGISTER      *
*   SPECIFIED BY THE CALLER.  A RETURN CODE OF ZERO IS SET IN         *
*   REGISTER 15,  UNLESS REGISTER 15 ITSELF CONTAINS THE SCAN         *
*   POINTER OFFSET,  AND RETURN IS MADE TO THE CALLER VIA THE         *
*   RETURN INTERFACE ROUTINE.                                         *
*                                                                     *
*   MULTIPLE BUFFER HEADER EXIT --                                    *
*   A NEGATIVE RETURN CODE IS SET IN REGISTER 15.  IF THE CALLER      *
*   HAS SPECIFIED A RETURN REGISTER,  RETURN IS MADE TO THE CALLER    *
*   VIA THE RETURN INTERFACE ROUTINE.                                 *
*                                                                     *
*   IF NO RETURN REGISTER IS SPECIFIED,  THE PORTION OF THE FIELD     *
*   THAT HAS BEEN ACCESSED IS MOVED FROM THE AVT WORK AREA TO THE     *
*   SCB SAVE AREA (SCBMBSSA).  THE USER'S REGISTERS,  SAVED IN THE    *
*   AVT,  ARE MOVED TO THE SCB REGISTER SAVE AREA (SCBRGSAV).  THE    *
*   PREFIX SCAN POINTER (PRFSCAN) IS UPDATED TO POINT BEYOND THE      *
*   END OF THE BUFFER.  THE ADDRESS OF THE PARAMETER LIST IS SAVED    *
*   IN THE SCB (SCBMBHEN).  RETURN IS MADE TO THE CALLER VIA THE      *
*   RETURN INTERFACE ROUTINE.                                         *
*                                                                     *
*   MULTIPLE BUFFER HEADER ENTRY --                                   *
*   THE ROUTINE MAY BE ENTERED DIRECTLY FROM THE START MH ROUTINE     *
*   TO COMPLETE A SCAN FUNCTION INTERRUPTED BY A MULTIPLE BUFFER      *
*   HEADER SITUATION,  OR FROM THE FORWARD ROUTINE TO FIND SECOND-    *
*   ARY DESTINATIONS FOR MULTIPLE ROUTING.  IF ENTRY IS FROM START    *
*   MH,  THE USER'S REGISTERS,  SAVED IN THE SCB,  ARE MOVED TO THE   *
*   AVT SAVE AREA FOR THIS ROUTINE AND A NEW RETURN ADDRESS IS        *
*   COMPUTED AND STORED IN THE SAVE AREA.  THE SCB SAVE AREA IS       *
*   EXAMINED TO DETERMINE IF THE FIRST CHARACTER HAS BEEN FOUND.      *
*   IF IT HAS NOT,  A HALFWORD X'FFFF' IS SET IN THE SCB SAVE AREA    *
*   AND THE APPROPRIATE SCAN FUNCTION IS RESUMED AS IF INITIALLY      *
*   ENTERED.  IF THE FIRST CHARACTER HAS BEEN FOUND,  THE PORTION     *
*   OF THE FIELD FOUND IS MOVED BACK FROM THE SCB SAVE AREA TO THE    *
*   AVT WORK AREA.  A HALFWORD X'FFFF' IS SET IN THE SCB SAVE AREA.   *
*   IF A FIXED SCAN FUNCTION IS BEING COMPLETED,  THE FUNCTION IS     *
*   RESUMED AS IF INITIALLY ENTERED.  IF A VARIABLE SCAN FUNCTION     *
*   IS BEING COMPLETED,  THE FUNCTION IS RESUMED AT AN ENTRY PAST     *
*   THE POINT WHERE THE FIRST CHARACTER IS BEING FOUND.               *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQAI' TO SKIP FORWARD A FIXED LENGTH OR TO SCAN FOR AND    *
*   RETURN THE NEXT FIELD. CALLING SEQUENCE FROM USER INTERFACE IS:   *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 - THE ADDRESS OF A PARAMETER LIST BUILT BY THE         *
*   CALLER (EITHER THE SETSCAN MACRO EXPANSION OR A HIGHER LEVEL MH   *
*   ROUTINE).  PARAMETER LIST FORMAT IS:                              *
*                                                                     *
*   SCAN FUNCTION PARAMETER LIST (INDEX FLAG = X'00')                 *
*        *********************************                            *
*        *       * PARAM *  REG  * SCAN  *                            *
*        * INDEX * LIST  * OFF-  *  LNG  *                            *
*        *       *  LNG  *  SET  *       *                            *
*        *********************************                            *
*        *          ADDRESS OF          *                             *
*        *       CHARACTER STRING       *                             *
*        *          (OPTIONAL)          *                             *
*        *********************************                            *
*                                                                     *
*   SKIP FORWARD FUNCTION PARAMETER LIST (INDEX FLAG = X'01')         *
*        *********************************                            *
*        *       * PARAM *               *                            *
*        * INDEX * LIST  *  SKIP COUNT   *                            *
*        *       * LNGTH *               *                            *
*        *********************************                            *
*                                                                     *
*   REGISTER 3 - THE ADDRESS OF THE SCB.                              *
*                                                                     *
*   REGISTER 4 - THE ADDRESS OF THE LCB.                              *
*                                                                     *
*   REGISTER 6 - THE ADDRESS OF THE CURRENT BUFFER.                   *
*                                                                     *
*   REGISTER 9 - THE ADDRESS OF THE AVT.                              *
*                                                                     *
*   REGISTER 12 - THE ENTRY POINT ADDRESS AND BASE REGISTER FOR       *
*                                                                     *
*   REGISTER 13 - THE ADDRESS OF THE CALLING ROUTINE'S SAVE AREA.     *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 - RETURN CODE.  ITS VALUE IS X'00' FOR SUCCESSFUL     *
*   COMPLETION,  A NEGATIVE VALUE IF A SCAN FUNCTION FAILS TO         *
*   COMPLETE (MULTIPLE BUFFER HEADER DETECTED), OR X'04' IF THE       *
*   SKIP FAILS TO COMPLETE.  FOR SETSCAN 0,  REGISTER 15 CONTAINS     *
*   THE ADDRESS OF THE CURRENT SETTING OF THE SCAN POINTER.           *
*                                                                     *
*   AVT WORK AREA (AVTDOUBL) - ON SUCCESSFUL COMPLETION OF A SCAN     *
*   FUNCTION, THE NEXT FIELD IN THE BUFFER.                           *
*                                                                     *
*   AVT PARAMETER AREA (AVTPARM) - ON SUCCESSFUL COMPLETION OF A      *
*   SCAN FUNCTION,  THE FIRST HALFWORD CONTAINS THE LENGTH OF THE     *
*   FIELD RETURNED. IF REQUESTED BY THE CALLER, THE SECOND HALFWORD   *
*   CONTAINS THE OFFSET IN THE BUFFER TO THE END OF THE FIELD BEING   *
*   RETURNED.                                                         *
*                                                                     *
*   BUFFER PREFIX SCAN POINTER (PRFSCAN) - ON SUCCESSFUL COMPLETION   *
*   OF A SCAN FUNCTION, AND IF REQUESTED BY THE CALLER, THE OFFSET    *
*   IN THE BUFFER TO THE END OF THE FIELD BEING RETURNED. ON          *
*   SUCCESSFUL COMPLETION OF THE SKIP FORWARD FUNCTION, THE OFFSET    *
*   OF THE SCAN POINTER MOVED FORWARD THE SPECIFIED LENGTH.  ON A     *
*   MULTIPLE BUFFER HEADER EXIT,  THE OFFSET TO A POINT ONE BYTE      *
*   BEYOND THE END OF DATA IN THE BUFFER.                             *
*                                                                     *
*   SCB SAVE AREA (SCBMBSSA) - ON A MULTIPLE BUFFER HEADER EXIT FOR   *
*   A SCAN FUNCTION,  THE BYTES OF THE FIELD REQUESTED ACCESSED       *
*   FROM THIS BUFFER,  PADDED WITH BLANKS (IF NECESSARY TO FILL       *
*   SCBMBSSA) AT THE HIGH-ORDER END.                                  *
*                                                                     *
*   SCB MULTIPLE BUFFER HEADER ENTRY FIELD (SCBMBHEN) - ON A          *
*   MULTIPLE BUFFER HEADER EXIT,  THE ADDRESS OF THE PARAMETER LIST   *
*                                                                     *
*   SCB REGISTER SAVE AREA (SCBRGSAV) (IF DEFINED) - ON A MULTIPLE    *
*   BUFFER HEADER EXIT,  THE USER'S REGISTERS.                        *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   AVT - ADDRESS VECTOR TABLE.                                       *
*                                                                     *
*   SCB - STATION CONTROL BLOCK FOR CURRENT STATION.                  *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED.                                 *
*                                                                     *
*EXITS,  NORMAL -- SUCCESSFUL COMPLETION OF A SCAN FUNCTION.  THE     *
*   AVT WORK AREA (AVTDOUBL) CONTAINS THE FIELD FROM THE BUFFER.      *
*   THE AVT PARAMETER AREA (AVTPARM) CONTAINS IN THE HIGH-ORDER       *
*   HALFWORD THE LENGTH OF THE FIELD.  THE OFFSET IN THE BUFFER TO    *
*   THE END OF THE FIELD IS STORED EITHER IN THE LOW-ORDER HALFWORD   *
*   OF THE AVT PARAMETER AREA OR IN THE BUFFER PREFIX SCAN POINTER    *
*   (PRFSCAN).  REGISTER 15 CONTAINS A RETURN CODE OF X'00'.          *
*                                                                     *
*   SUCCESSFUL COMPLETION OF A SKIP FUNCTION.  THE BUFFER PREFIX      *
*   SCAN POINTER CONTAINS THE OFFSET OF THE SCAN POINTER MOVED        *
*   FORWARD THE SPECIFIED LENGTH.  REGISTER 15 CONTAINS A RETURN      *
*   CODE OF X'00'.                                                    *
*                                                                     *
*   A SCAN FUNCTION FAILS TO COMPLETE IN THIS BUFFER.  THE BUFFER     *
*   PREFIX SCAN POINTER CONTAINS THE OFFSET TO A POINT ONE BYTE       *
*   BEYOND THE END OF DATA IN THE BUFFER.  THE SCB SAVE AREA          *
*   (SCBMBSSA) CONTAINS THE BYTES ACCESSED FROM THIS BUFFER,          *
*   PADDED WITH BLANKS (IF NECESSARY TO FILL SCBMBSSA) AT THE         *
*   HIGH-ORDER END.  THE SCB MULTIPLE BUFFER HEADER ENTRY FIELD       *
*   (SCBMBHEN) CONTAINS THE ADDRESS OF THE PARAMETER LIST.  THE       *
*   SCB REGISTER SAVE AREA (SCBRGSAV),  IF DEFINED,  CONTAINS THE     *
*   CALLER'S REGISTERS.  REGISTER 15 CONTAINS A NEGATIVE RETURN       *
*   CODE.                                                             *
*                                                                     *
*   SUCCESSFUL COMPLETION OF SETSCAN 0.  REGISTER 15 CONTAINS THE     *
*   ADDRESS OF THE CURRENT SETTING OF THE SCAN POINTER.               *
*                                                                     *
*EXITS,  ERROR -- THE SKIP FUNCTION FAILS TO COMPLETE.  REGISTER 15   *
*   CONTAINS A RETURN CODE OF X'04'.                                  *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DEPENDS UPON THE INTERNAL      *
*   REPRESENTATION OF AN EXTERNAL CHARACTER SET WHICH IS              *
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS      *
*   BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,    *
*   BY REASSEMBLY, WILL RESULT IN CORRECT MODULE FOR THE NEW          *
*   DEFINITIONS.                                                      *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        ADDRESS OF PARAMETER LIST
         SPACE
RBLANK2  EQU   2                        BLANK COMPARE REGISTER
RWORK2   EQU   2                        WORK REGISTER
         SPACE
RSCB     EQU   3                        ADDRESS OF SCB
         SPACE
RLCB     EQU   4                        ADDR OF LCB              S22025
RUNIT    EQU   8                        ADDRESS OF CURRENT UNIT  S22025
         SPACE
RSCAN    EQU   5                        ADDRESS OF SCAN POINTER
         SPACE
RPREFIX  EQU   6                        ADDRESS OF BUFFER
         SPACE
RSCANOFF EQU   7                        OFFSET OF SCAN POINTER
         SPACE
RCOMP8   EQU   8                        COMPARE CHARACTERS ADDRESS
         SPACE
RAVT     EQU   9                        ADDRESS OF AVT
         SPACE
RPARLEN  EQU   10                       LENGTH PARAMETER
         SPACE
REOUAD   EQU   11                       ADDR OF END OF CURRENT UNIT
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       ADDRESS OF SAVE AREA
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       BRANCH & RTN CODE REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
INC1     EQU   1                        INCREMENT VALUE OF 1
ONE      EQU   1                        MBH-ENTRY FLAG
TWO      EQU   2                        LENGTH OF A HALFWORD
FOUR     EQU   4                        LENGTH OF A FULLWORD
LBALR    EQU   6                        LNG OF LOAD + BALR
SIX      EQU   6                        OFFSET TO MBSSA LAST BYTE
SEVEN    EQU   7                        CLEAR LENGTH FOR AVTDOUBL
MBSSALEN EQU   7                        LENGTH OF SCB SAVE AREA
COMP     EQU   8                        LNG OF COMPARE PARAM LIST
MAX      EQU   8                        SIZE OF AVT WORK AREA
HI       EQU   X'2'                     HIGH CONDITION           S22025
         SPACE
PARMLEN  EQU   1                        PARAMETER LIST LENGTH
SKIPLEN  EQU   2                        OFFSET TO SKIP LENGTH
PARMREG  EQU   2                        OFFSET TO REGISTER OFFSET
SCANLEN  EQU   3                        OFFSET TO SCAN LENGTH
PARMBLNK EQU   4                        BLANK CHARACTER
PARMCHAR EQU   4                        OFFSET TO COMPARE CHARS
REG14OFF EQU   12                       OFFSET TO REG 14
REG15OFF EQU   16                       OFFSET TO REG 15
         SPACE
SKIPFLAG EQU   1                        SKIP FUNCTION FLAG
         SPACE
SETSCAN  EQU   X'01'                    ENTRY FROM SETSCAN MACRO
MBHFLAG  EQU   X'01'                    MULT BFR HEADER FLAG
NOMBH    EQU   X'01'                    'NO MBH' FLAG
MLTRFLAG EQU   X'02'                    MULTIPLE-ROUTE FLAG
NOBLANKN EQU   X'02'                    'NO BLANK' FLAG
         SPACE
CLERZONE EQU   X'0F'                    MASK TO CLEAR BYTES-FOUND
*                                         COUNT IN SCB
PREVSAVE EQU   4                        PREVIOUS SAVE AREA ADDR  S22025
NEXTSAVE EQU   8                        NEXT SAVE AREA ADDRESS   S22025
         EJECT
         USING IEDQAVTD,RAVT
         USING IEDQLCB,RLCB                                      S22025
         USING IEDQSCB,RSCB
         USING IEDQPRF,RPREFIX
         USING IEDQAI,RBASE
         SPACE
IEDQAI01 EQU   *
IEDQAI   IEDHJN SKIPSCAN                ID AND DATE              S22025
         CLC   PRFSCAN(TWO),PRFSIZE     RUNOUT FROM A PREVIOUS MACRO
         BH    MINUS4                   YES, EXIT
         SPACE
         SR    RSCANOFF,RSCANOFF        CLEAR REG SEVEN          S22025
         SPACE
         LH    RSCANOFF,PRFSCAN         GET PREFIX SCAN POINTER
         N     RSCANOFF,AVTCLRHI        CLEAR TOP HALF OF REGISTER
         SPACE
         LR    R15,RSCANOFF             INITIALIZE FOR SCAN      S22025
         SPACE
         TM    AVTEZERO(R1),NOBLANKN    ARE BLANKS BYPASSED
         BO    LOADAXAD                 NO, INITIALIZE FOR SCAN  S22025
         SPACE
         LA    RBLANK2,AVTEBLNK         ASSUME EBCDIC BLANK
         CLI   PARMLEN(R1),FOUR        IS PARM LIST LENGTH=4    SA55417
         BE    LOADAXAD                YES-PROCEED              SA55417
         SPACE
         IC    RBLANK2,PARMBLNK(,R1)    PICK UP BLANK FROM PARMLIST
         SPACE
LOADAXAD EQU   *
         LR    RUNIT,RPREFIX            SET FIRST UNIT ADDR AND  S22025
         LH    REOUAD,AVTKEYLE            KEYLE FOR SCAN SUB-RTN S22025
         SR    RPARLEN,RPARLEN          INITIALIZE FOR COUNT     S22025
         L     R14,SCBMBHEN-1           GET ADDR IN MBH FIELD    S22025
         CLC   AVTINOUT,0(R14)          DOES IT POINT TO END     S22025
         BNE   MULTBUFN                 NO, MBH ENTRY, BRANCH
         SPACE
         TM    AVTEZERO(R1),SKIPFLAG    IS IT SCAN FUNCTION
         BO    SKIP                     NO, GO PROCESS SKIP
         SPACE
INITSCAN EQU   *
         MVI   AVTDOUBL,AVTEBLNK        CLEAR AVT WORK AREA
         MVC   AVTDOUBL+1(SEVEN),AVTDOUBL TO ALL BLANKS
         SPACE
SELSCAN  EQU   *
         CLI   SCANLEN(R1),AVTEFF       IS IT VARIABLE LENGTH
         BE    VAR                      YES, GO PROCESS VARIABLE
         SPACE
         B     FIX                      NO, GO PROCESS FIXED
         SPACE
**************************************************************** S22025
* VARIABLE LENGTH SCAN - NEXT FIELD IN BUFFER DELIMITED BY     * S22025
*  BLANKS MOVED TO AVTDOUBL (MAX 8 BYTES)                      * S22025
**************************************************************** S22025
         SPACE
MOVAR    EQU   *                                                 S22025
         IC    R0,AVTEZERO(,RSCAN)      PUT DATA BYTE            S22025
         STC   R0,AVTDOUBL(RPARLEN)       INTO AVT SAVE AREA     S22025
         LA    RPARLEN,INC1(,RPARLEN)   INCREMENT COUNT REGISTER S22025
         STC   RPARLEN,AVTPARM+1        STORE LNG OF CHARS FOUND S22025
         CLI   AVTPARM+1,MAX            IS AVT WORK AREA FULL    S22025
         BE    SCANEND                  YES, GO TO SCAN EXIT     S22025
         SPACE
VAR      EQU   *                                                 S22025
         BAL   R14,LOOP                 GET ADDR OF 1ST/NXT UNIT S22025
         B     SCANMBHX                 OUT-OF-BUF, EXIT         S22025
         SPACE
         EX    RBLANK2,CLIBLANK         IS CHAR A BLANK          S22025
         SPACE
         BNE   MOVAR                    NO, SAVE IT              S22025
         SPACE
         LTR   RPARLEN,RPARLEN          HAS FST NON-BLNK BEEN FOUND
         BZ    LOOP                     NO, GET NEXT CHAR        S22025
         SPACE
         B     SCANEND1                 YES, THIS IS BLANK DELEMITER
         SPACE 2
**************************************************************** S22025
* LOOP THRU BUFFER UNITS TO FIND ADDR OF SCAN POINTER OFFSET   * S22025
*  R8 HAS ADDR OF 1ST/NXT UNIT, RB HAS VALUE OF AVTKEYLE       * S22025
**************************************************************** S22025
         SPACE
NXTUNIT  EQU   *                                                 S22025
         L     RUNIT,PRFTIC-IEDQPRF(RUNIT)                       S22025
         SR    R15,REOUAD               DECREMENT OFFSET         S22025
LOOP     EQU   *                                                 S22025
         CR    R15,REOUAD               IS OFFSET IN THIS UNIT   S22025
         BNL   NXTUNIT                  NO, GET NEXT UNIT        S22025
         SPACE
         LA    RSCANOFF,INC1(,RSCANOFF) YES, INCR SCAN OFFSET    S22025
         LA    R15,INC1(R15)            INCREMENT REG BY 1       S22025
         LA    RSCAN,AVTUMALN-1(R15,RUNIT) GET ADDR OF OFFSET    S22025
         CH    RSCANOFF,PRFSIZE         OUT OF BUFFER            S22025
         BCR   HI,R14                   YES, RETURN AS ERROR     S22025
         SPACE
         B     FOUR(R14)                NO, CONTINUE PROCESSING  S22025
         EJECT
**************************************************************** S22025
* IF ENTRY IS FROM A DIRECT BRANCH FROM STARTMH TO CONTINUE A  * S22025
* SCAN FROM PREVIOUS BUFFER, RESET FIELDS AND REGISTERS AS ON  * S22025
* ORIGINAL ENTRY                                               * S22025
**************************************************************** S22025
         SPACE
MULTBUFN EQU   *                                                 S22025
         IC    RPARLEN,SCBDESTL         PICK UP BYTES FOUND CT   S22025
         NI    SCBDESTL,CLERZONE        RESET FIELD TO ZERO      S22025
         SRA   RPARLEN,FOUR             SHIFT TO ALIGN COUNT     S22025
         LA    RSCAN,LCBCPA             SET TO MOVE FROM LCB     S22025
         TM    SCBMBHEN+2,MLTRFLAG      ENTRY FROM MULTIPLE ROUTE
         BO    MRMBHENT                 YES, BRANCH
         SPACE
         LR    RSCAN,R13                SAVE CONTENTS OF R13     S22025
         LA    R13,AVTSAVE2             LOAD ADDR OF MH REGISTER S22025
         LA    R14,AVTINOUT             GET ADDR OF DUMMY INEND/
         IC    R0,SCBMBHEN-1              OUTEND PARM LIST AND
         ST    R14,SCBMBHEN-1             SET IT INTO SCB
         STC   R0,SCBMBHEN-1
         EX    AVTEZERO,AVTEXS2A        MOVE SAVED REGS TO AVT
         SPACE
         SR    R14,R14                  CLEAR REGISTER           S22025
         IC    R14,PARMLEN(,R1)         PICK UP LNG OF PARM LIST
         LA    R14,LBALR(R14,R1)        ADD PARM LIST ADDR + OFFSET
         ST    R14,REG14OFF(,R13)       SET AS RETURN ADDRESS
         LR    R13,RSCAN                RESTORE CONTENTS OF R13  S22025
         LA    RSCAN,SCBMBSSA           RESET TO MOVE FROM SCB   S22025
         B     MBHSELSC                 BRANCH TO CHECK ENTRY
         SPACE
         SPACE
MRMBHENT EQU   *
         NI    SCBMBHEN+2,X'FF'-MLTRFLAG-MBHFLAG CLEAR FLAGS     S22025
MBHSELSC EQU   *                                                 S22025
         LTR   RPARLEN,RPARLEN          ANDY BYTES SAVED         S22025
         BZ    INITSCAN                 ZERO COUNT, INITIAL ENTRY
         SPACE
         MVC   AVTDOUBL(MBSSALEN),0(RSCAN)                       S22025
         MVI   AVTDOUBL+7,AVTEBLNK     MAKE LAST BYTE A BLANK
         B     SELSCAN                  RESUME PROCESSING        S22025
         EJECT
SKIP     EQU   *
         LH    RPARLEN,SKIPLEN(,R1)     SET LENGTH PARAMETER
         N     RPARLEN,AVTCLRHI         CLEAR TOP HALF OF REGISTER
         BZ    ADDRRET                  ZERO, GO RETURN ADDRESS
         SPACE
         TM    AVTEZERO(R1),NOBLANKN    ARE BLANKS BYPASSED
         BO    SKIPADD                  NO, ADD TO SKIP
         SPACE
SKIPLOOP EQU   *
         BAL   R14,LOOP                 GET CHAR ADDRESS         S22025
         B     SKPEOBUF                 RUN OUT OF BUFFER, EXIT
         SPACE
         EX    RBLANK2,CLIBLANK         IS IT BLANK
         BE    LOOP                     YES, GET NEXT CHAR       S22025
         SPACE
         BCT   RPARLEN,LOOP             NO, IS COUNT COMPLETE    S22025
         SPACE
         B     UPSCAN                   COUNT ZERO, UPDATE PREFIX
*                                         SCAN POINTER & EXIT
         SPACE
SKIPADD  EQU   *
         LH    RWORK2,PRFSIZE           GET TOTAL DATA SIZE
         N     RWORK2,AVTCLRHI
         AR    RSCANOFF,RPARLEN         ADD SKIP LNG TO SCAN PTR
         CR    RSCANOFF,RWORK2          RUN OUT OF BUFFER
         BL    UPSCAN                   NO, UPDATE AND EXIT     SA59004
         SPACE
SKPEOBUF EQU   *
         LA    R15,AVTECD4              SET BAD RETURN CODE
         B     EXIT                     LINK TO LM TO EXIT
         EJECT
FIX      EQU   *
         BAL   R14,LOOP                 GET CHAR ADDRESS         S22025
         B     SCANMBHX                 RUN OUT OF BUFFER, EXIT
         SPACE
         TM    AVTEZERO(R1),NOBLANKN    ARE BLANKS BYPASSED
         BO    MOFIX                    NO, DON'T TEST FOR BLANK
         SPACE
         EX    RBLANK2,CLIBLANK         IS IT BLANK
         BE    LOOP                     YES, GET NEXT CHAR       S22025
         SPACE
MOFIX    EQU   *
         IC    R0,AVTEZERO(,RSCAN)      NO, PUT IT INTO
         STC   R0,AVTDOUBL(RPARLEN)       AVT SAVE AREA
         LA    RPARLEN,INC1(,RPARLEN)   INCREMENT COUNT REGISTER
         EX    RPARLEN,CLIX             IS COUNT SATISFIED
         BNE   LOOP                     NO, GET NEXT CHAR        S22025
         SPACE
*        B     SCANEND                  YES, FALL THRU TO SCAN END
         EJECT
SCANEND  EQU   *
         LA    RSCANOFF,INC1(,RSCANOFF) BUMP SCAN OFFSET
         SPACE
SCANEND1 EQU   *
         STC   RPARLEN,AVTPARM+1        RETURN LNG OF FIELD FOUND
         TM    PARMLEN(R1),COMP         IS A COMPARE REQUESTED
         BNO   NOCOMP                   NO, RETURN TO CALLER
         SPACE
         L     RCOMP8,PARMCHAR(,R1)     YES, GET ADDR OF COMPARE
*                                         CHARACTERS
         BCTR  RPARLEN,AVTEZERO         DECREMENT CT FOR EXECUTE S21903
         EX    RPARLEN,CLCX             COMPARE STRING FOUND WITH
*                                         STRING SOUGHT
         BNE   ZERORTN                  NOT EQUAL, SET RETURN
         SPACE
* EQUAL, TREAT AS IF NO COMPARE.
         SPACE
NOCOMP   EQU   *
         BCTR  RSCANOFF,AVTEZERO        POINT TO LAST BYTE OF FIELD
         TM    AVTEZERO(R1),SETSCAN     IS ENTRY FROM SETSCAN MACRO
         BO    TESTREG                  YES, GO TEST FOR REG RETURN
         SPACE
         CLI   PARMREG(R1),AVTEZERO     IS RETURN IN REG REQUESTED
         BE    UPSCAN                   NO, GO UPDATE SCAN POINTER
         SPACE
         LR    R15,RSCANOFF             YES, RETURN OFFSET IN R15
         B     EXIT                     RETURN TO CALLER
         SPACE
TESTREG  EQU   *
         CLI   PARMREG(R1),AVTEZERO     IS RETURN IN REG REQUESTED
         BNE   LINKAL                   YES, GO LINK TO GET ADDRESS
         SPACE
UPSCAN   EQU   *
         STH   RSCANOFF,PRFSCAN         NO, UPDATE SCAN POINTER FLD
         SPACE
ZERORTN  EQU   *
         SR    R15,R15                  SET ZERO RETURN IN REG 15
         SPACE
EXIT     EQU   *
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025
         SPACE
LINKAL   EQU   *
         SPACE
         CLI   PARMREG(R1),REG15OFF     IS RETURN REQ IN REG 15
         BNE   SETSAVE                  NO, GO RETURN IN SAVE AREA
         SPACE 1
         B     GOODRTN                   SET R15 AND RETURN      S22025
         SPACE 1
         SPACE
ADDRRET  EQU   *
         SPACE 1
         BAL   R14,LOOP                 GET ADDR OF SCAN PTR     S22025
         SPACE 1
         B     NEGFOUR                 OUT OF BUFFER-RETURN     SA54273
         SPACE 1
         BCTR  RSCAN,AVTEZERO           SET TO ORIGNAL SCAN PTR  S22025
         SPACE 1
GOODRTN  EQU   *                                                 S22025
         LR    R15,RSCAN                YES, RETURN ADDR IN REG 15
         B     EXIT                     RETURN TO MH
         SPACE
SETSAVE  EQU   *
         L     R13,PREVSAVE(R13)        POINT TO PREV SAVE AREA  S22025
         SR    RWORK2,RWORK2            PICK UP OFFSET TO RETURN
         IC    RWORK2,PARMREG(,R1)        REGISTER IN SAVE AREA
         ST    RSCAN,AVTEZERO(RWORK2,R13) SET ADDR IN RETURN REG
         L     R13,NEXTSAVE(R13)        CURRENT SAVE AREA        S22025
         B     ZERORTN                  CLEAR R15 AND RETURN TO MH
         EJECT
SCANMBHX EQU   *
         TM    PRFSTAT1,PRFTSMSG       TIME SHARING MESSAGE      S22029
         BO    SCANEND1                 BRANCH ON YES
         SPACE
         CLI   PARMREG(R1),AVTEZERO     IS RTN REQ IN REG
         BE    TESTLAST                 NO, GO TEST IF LAST BUFFER
         SPACE
         L     R15,SCBMBHEN-1           GET MBH ENTRY FIELD
         CLC   AVTINOUT,AVTEZERO(R15)   DOES IT POINT TO X'0100'
         BE    TESTANY                  YES, INITIAL ENTRY FROM
*                                         MH, BRANCH
         SPACE
         TM    SCBMBHEN+2,MLTRFLAG     ENTRY FROM MULTIPLE ROUTE
         BO    TESTLAST                YES, GO DO MBH PROCESSING
         SPACE
TESTANY  EQU   *
         LTR   RPARLEN,RPARLEN          ANY BYTES FOUND
         BNZ   MINUS4                   YES, SPLIT FIELD, BYPASS
*                                         MBH PROCESSING
         TM    PARMLEN(R1),FOUR+NOMBH   MBH-COMPARE REQUESTED
         BNZ   MINUS4                   NO, BYPASS MBH PROCESSING
         SPACE
         B     SAVECONT                 YES, GO SAVE COUNT
         SPACE
TESTLAST EQU   *
         TM    PRFSTAT1,PRFNLSTN        IS IT LAST BUFFER
         BNO   MINUS4                   YES, BYPASS MBH PROCESSING
         SPACE
         MVC   SCBMBSSA(MBSSALEN),AVTDOUBL SAVE DATA IN SCB
         SPACE
SAVECONT EQU   *
         LR    RSCAN,R13                SAVE CONTENTS OF R13     S22025
         LA    R13,AVTSAVE2             LOAD ADDR OF MH REGS     S22025
         SLL   RPARLEN,FOUR             SHIFT TO ALIGN COUNT
         EX    RPARLEN,OIX              SAVE BYTES-FOUND COUNT
         SPACE
         EX    AVTEZERO,AVTEXA2S        MOVE REGS FROM AVT TO SCB
         SPACE
         STH   RSCANOFF,PRFSCAN         POINT SC PT BEYOND BFR END
         SPACE
         LA    R1,ONE(,R1)              SET MBH-ENTRY BIT
         IC    R0,SCBMBHEN-1            SAVE HIGH-ORDER BYTE
         ST    R1,SCBMBHEN-1            SAVE PARAM LIST ADDR IN SCB
         STC   R0,SCBMBHEN-1            RESTORE HIGH-ORDER BYTE
         LR    R13,RSCAN                RESTORE CONTENTS OF R13  S22025
         SPACE
MINUS4   EQU   *
         STC   RPARLEN,AVTPARM+1        PASS COUNT FOUND TO USER
NEGFOUR  EQU   *                                                SA54273
         LA    R15,AVTECD4              SET ERROR
         LNR   R15,R15                    RETURN CODE
         B     EXIT                     RETURN
         SPACE 3
********* EXECUTED INSTRUCTION *********
         SPACE
CLIX     CLI   SCANLEN(R1),AVTEZERO     TEST IF COUNT SATISFIED
         SPACE
CLCX     CLC   AVTEZERO(INC1,RCOMP8),AVTDOUBL COMPARE STRING FOUND
*                                         WITH STRING SOUGHT
         SPACE
CLIBLANK CLI   AVTEZERO(RSCAN),AVTEZERO COMPARE FOR BLANK
         SPACE
OIX      OI    SCBDESTL,AVTEZERO        SAVE  SCB BYTES-FOUND FLD
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         TSCBD
         END
