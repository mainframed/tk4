         TITLE 'IEDAYI  - TSINPUT'
IEDAYI   CSECT
         SPACE 1
         DC    AL1(DSPMCPL2),X'00'      ACTIVATION KEY
         SPACE 1
***********************************************************************
*                                                                     *
*                                                                M2688
*                                                                M3278
*                                                                TS1628
*                                                                M0030
*                                                                 M3462
*                                                                 M0045
*                                                                 M5303
*                                                                 M5469
*          POST VS2-1.6 CHANGES
*0000083300,373879,373880,386422                     UY74706   @YA11732
*0000083300,373300,374210-374260                               @YA11732
*                                      OY11039 FIX INCLUDED IN @YA11732
*0000092500-092960                                              YA08403
*C083300                                                        YA06046
*A716700,716800,677940,677960                                   YA04775
*A461700-461920                                                 YA06046
*C462000                                                        YA06046
*C581000                                                       @SA77948
*D581700-585200                                                @SA77948
*          RELEASE 1, VS/2 CHANGES                              YS06327
*D005600,185000                                                 YS06327
*C005500,177000,190000                                          YS06327
*A182500-183500                                                 YS06327
*          RELEASE 21 DELETIONS                                       *
*0884006200,013800,175000-179000,184000,185000-187000,190000,    S22029
*0884200000,230000-233000,235000-235300,337000,341000-342000,    S22029
*0884347000,350000,485000,490600-491500,516400-517600,525700-    S22029
*0884526600,962000-970000                                        S22029
*0884                                                            A44839
*                                                                     *
*0884005860,083300,129000,142000,183000,227000,235600,236400,    S22028
*0884240500,246000,335200,338000,339200,358940,368700,463000,    S22028
*0884486200                                                      S22028
*                                                              @Y17XAYP
*        TCAM VERSION 10.0 CHANGES                             @Y17XAYP
*                                                              @Y17XAYP
*A150500,189700                                                @Y17XAYP
*C186200                                                       @Y17XAYP
*                                                              @G36XRYP
*A143500                                                       @G36XRYP
*A213500,360500,367500,432600,518000,673400.791700             @G36XRYP
*C175000-175700,518000,828100,956200,959000                    @G36XRYP
*D214200-217700,674100,792400                                  @G36XRYP
*                                                              @G36XRYP
*C221900,431200-432600                                         @OZ16528
*A396900,436100,441000,471800                                  @OZ16528
*A450800                                                       @OZ16528
*A448700,458500,469000                                         @OZ24913
*A343700                                                       @OY19848
************************************************************** @Y17XAYP
*                                                              @Y17XAYP
* MODULE NAME = IEDAYI (TCAM,TSO)                              @Y17XAYP
*                                                              @Y17XAYP
* DESCRIPTIVE NAME = TIME SHARING INPUT ROUTINE                @Y17XAYP
*                                                              @Y17XAYP
* COPYRIGHT = NONE                                             @Y17XAYP
*                                                              @Y17XAYP
* STATUS = VERSION 10.0                                        @G36XRYP
*                                                                     *
* FUNCTION -                                                          *
*    THIS ROUTINE IS RESPONSIBLE FOR MOVING THE INCOMING TEXT FROM A  *
*    TCAM BUFFER INTO A TIME SHARING BUFFER OR BUFFERS AND PLACING    *
*    THE BUFFER(S) ON THE INPUT QUEUE.                                *
*                                                                     *
* ENTRY POINTS -                                                      *
*    ENTRY IS ALWAYS THROUGH THE FIRST EXECUTABLE INSTRUCTION.        *
*    CONTROL IS ALWAYS RECEIVED FROM THE TCAM DISPATCHER UNDER ONE OF *
*    THE FOLLOWING CONDITIONS.                                        *
*                                                                     *
*    1 - EITHER THE PCI APPENDAGE, WHICH INDICATES A FULL TCAM BUFFER,*
*        OR THE LINE END APPENDAGE, WHICH INDICATES THE END OF THE    *
*        MESSAGE (EOT, EOB, BREAK-IN, OR TIME OUT), QPOSTS A TCAM     *
*        BUFFER TO THE MHR.  THE FORWARD AND LOGON MACROS IN THE      *
*        INHDR SECTION OF THE MHR PERFORM THE INITIALIZATION NECES-   *
*        SARY TO DIRECT THE BUFFER TO TSINPUT.  SUBSEQUENTLY, AT THE  *
*        END OF THE INPUT MESSAGE HANDLING ROUTINES, THE BUFFER IS    *
*        QPOSTED TO THE TSINPUT DESTINATION QCB.                      *
*                                                                     *
*    2 - WHEN ONE OF THE TIOC ROUTINES (TGET, TCLEARQ, TSOUTPUT, OR   *
*        ATTENTION) QPOSTS TSINPUT'S DESTINATION QCB TO ITSELF FOR    *
*        THE PURPOSE OF REMOVING THE SYSTEM LWAIT CONDITION.          *
*                                                                     *
* INPUT -                                                             *
*    THE FOLLOWING PARAMETERS ARE PASSED WHEN CONTROL IS RECEIVED AS  *
*    THE RESULT OF ENTRY (1) DESCRIBED ABOVE.                         *
*        REGISTER 1  CONTAINS THE TCAM BUFFER ADDRESS.                *
*        REGISTER 7  CONTAINS TSINPUT'S DESTINATION QCB ADDRESS.      *
*        REGISTER 11 CONTAINS THE ADDRESS OF THE TCAM DISPATCHER.     *
*        REGISTER 13 CONTAINS THE ADDRESS OF AVTSAVE2.                *
*        REGISTER 15 CONTAINS THE ENTRY POINT ADDRESS OF TSINPUT.     *
*                                                                     *
*    THE FOLLOWING PARAMETERS ARE PASSED WHEN CONTROL IS RECEIVED AS  *
*    THE RESULT OF ENTRY (2) DESCRIBED ABOVE.                         *
*        REGISTER 1  CONTAINS TSINPUT'S DESTINATION QCB ADDRESS.      *
*        REGISTER 7  CONTAINS TSINPUT'S DESTINATION QCB ADDRESS.      *
*        REGISTER 11 CONTAINS THE ADDRESS OF THE TCAM DISPATCHER.     *
*        REGISTER 13 CONTAINS THE ADDRESS OF AVTSAVE2.                *
*        REGISTER 15 CONTAINS THE ENTRY POINT ADDRESS OF TSINPUT.     *
*                                                                     *
* OUTPUT -                                                            *
*    REGISTER 1 - CONTAINS THE ADDRESS OF THE FIRST AND ONLY OR FIRST *
*    IN A CHAIN OF ELEMENTS TO BE POSTED BY THE TCAM DISPATCHER.  IF  *
*    NO ELEMENTS ARE TO BE POSTED, REGISTER 1 MUST CONTAIN ZEROS. THE *
*    ELEMENTS BEING POSTED MAY BE QCB'S, LCB'S, OR TCAM BASIC UNITS   *
*    (ALWAYS RETURNED AS ONE TCAM BUFFER).  THIS CHAIN OF ELEMENTS    *
*    MAY CONTAIN ANY NUMBER OF QCB'S AND/OR LCB'S, HOWEVER, IF A TCAM *
*    BUFFER IS BEING POSTED, IT WILL ALWAYS APPEAR AS THE LAST        *
*    ELEMENT IN THE CHAIN.                                            *
*                                                                     *
*    REGISTER 11 - CONTAINS THE ADDRESS OF THE TCAM DISPATCHER.       *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    THE QTIP SVC (SVC 101) WITH THE APPROPRIATE ENTRY CODES, IS      *
*    USED BY THIS ROUTINE TO PASS CONTROL TO A ROUTINE WITHIN QTIP    *
*    NAMED 'IEDAYII'.  IEDAYII IS A LOGICAL EXTENSION OF TSINPUT USED *
*    TO INTERFACE WITH THE CONTROL BLOCKS AND BUFFERS WITHIN THE TSO  *
*    REGION.                                                          *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    CONTROL IS ALWAYS RETURNED BY BRANCHING TO 'DSPCHAIN' WITHIN THE *
*    TCAM DISPATCHER.                                                 *
*                                                                     *
* EXITS, ERROR -                                                      *
*    NONE                                                             *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    THE FIRST BYTE OF THE TCAM BUFFER 'PRFSRCE' FIELD IS CLEARED IN  *
*    ORDER TO SAVE INFORMATION CONTAINED IN LCB AND THE STATUS OF THE *
*    TCAM BUFFER IF INSUFFICIENT TS BUFFERS ARE AVAILABLE TO PROCESS  *
*    ALL THE DATA IN THE TCAM BUFFER.                                 *
*                                                                     *
*    A DOUBLE WORD AREA IN THE AVT LABELED 'AVTDOUBL' IS USED TO      *
*    BUILD THE CHAIN OF ELEMENTS TO BE POSTED BY THE TCAM DISPATCHER  *
*    AFTER EXITING FROM TSINPUT.                                      *
*                                                                     *
* ATTRIBUTES -                                                        *
*    SERIALLY-REUSABLE, REFRESHABLE, ENABLED                          *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    THIS ROUTINE IS DEPENDENT ON THE FOLLOWING EBCDIC CHARACTERS.    *
*        X'0D' - EBCDIC CARRIAGE RETURN CHARACTER.  EQUATED TO        *
*        'CARRRTRN' WITHIN THIS ROUTINE.                              *
*                                                                     *
*        X'15' - EBCDIC NEW LINE CHARACTER.  EQUATED TO 'NEWLINE'     *
*        WITHIN THIS ROUTINE.                                         *
*                                                                     *
*        X'25' - EBCDIC LINE FEED CHARACTER.  EQUATED TO 'LINEFEED'   *
*        WITHIN THIS ROUTINE.                                         *
*                                                                     *
* NOTES -                                                             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
********                                                       ********
******** REGISTER EQUATES                                      ********
********                                                       ********
***********************************************************************
         SPACE 1
R0       EQU   0                        INDEX REGISTER
RWRKZ    EQU   R0                       WORK/PARAMETER REGISTER
RPARM    EQU   1                        WORK/PARAMETER REGISTER
RSCANF   EQU   2                        POINTER TO BEGIN OF DATA SCANED
RWRK2    EQU   RSCANF                   WORK/PARAMETER REGISTER
RSCANL   EQU   3                        POINTER TO END OF DATA SCANNED
RSCB     EQU   RSCANL                   SCB ADDRESS
RWRK3    EQU   RSCB                     WORK/PARAMETER REGISTER
RBUEND   EQU   4                        END OF BASIC UNIT BEING SCANNED
RLCB     EQU   RBUEND                   LCB ADDRESS
RBUADR   EQU   5                        ADDR OF BASIC UNIT BEING SCANED
RTRMNTRE EQU   RBUADR                   ADDR OF TERMINAL ENTRY TABLE
RPREFIX  EQU   6                        TCAM BUFFER ADDRESS
RQCB     EQU   7                        QCB ADDRESS
RWRK7    EQU   RQCB                     WORK/PARAMETER REGISTER
RDSZE    EQU   8                        SIZE OF DATA IN TCAM BUFFER
RWRK8    EQU   RDSZE                    WORK/PARAMETER REGISTER
RTSB     EQU   9                        TSB ADDRESS
RTIOC    EQU   10                       TIOCRPT ADDRESS
RDISP    EQU   11                       DISPATCHER ADDRESS (IEDQEA)
RWK11    EQU   RDISP                    WORK/PARAMETER REGISTER
RBASE    EQU   12                       BASE REGISTER
RAVT     EQU   13                       ADDRESS OF AVTSAVE2
RETRN    EQU   14                       RETURN ADDRESS
RDEL     EQU   RETRN                    OFFSET TO DATA IN TCAM BFR
RWK14    EQU   RDEL                     WORK/PARAMETER REGISTER
RNTRE    EQU   15                       ENTRY POINT
RTRNCD   EQU   RNTRE                    RETURN CODE
RWK15    EQU   RTRNCD                   WORK/PARAMETER REGISTER
         EJECT
***********************************************************************
********                                                       ********
******** MASKS AND DISPLACEMENTS                               ********
********                                                       ********
***********************************************************************
         SPACE 1
K0       EQU   0                        NULL DISPLACEMENT
K1       EQU   1                        BYTE DISPLACEMENT
CC3270ND EQU   1                        AID CHAR LENGTH FOR 3270 S22028
K2       EQU   2                        LENGTH FIELD
K3       EQU   3                        LENGTH FIELD
CC3270D3 EQU   3                        CONTROL CHAR LNG FOR     S22028
*                                       3270                     S22028
K4       EQU   4                        WORD DISPLACEMENT
CC3270D6 EQU   6                        TOTAL CONTROL CHAR       S22028
*                                       LENGTH                   S22028
*                                       FOR 3270
NOTEQUAL EQU   7                        MASK FOR A CONDITION CODE OF 7
EQUAL    EQU   8                        MASK FOR CONDIT'N CODE 8
K11      EQU   11                       BYTE DISPLACEMENT        S22029
K12      EQU   12                       SAVE AREA OFFSET
K24      EQU   24                       LENGTH FIELD
K64      EQU   64                       LENGTH FIELD           @G36XRYP
K68      EQU   68                       LENGTH FIELD
ONE      EQU   X'01'                    CONSTANT
CARRRTRN EQU   X'0D'                    CARRIAGE RETURN CHARACTER
NEWLINE  EQU   X'15'                    NEW LINE CHARACTER
WAITQBFR EQU   X'10'                    USED TO INDICATE TCAM BFR HAS
*                                       BEEN ON TCAM BFR WAIT QUEUE
NOTMOVED EQU   X'20'                    IND NOT ALL OF SCANNED DATA IN
*                                       TCAM BFR WAS MOVED TO TS BFR(S)
LINEFEED EQU   X'25'                    LINE FEED CHARACTER
SBA      EQU   X'11'                    SBA CHARACTER            S22028
TIMEOUT  EQU   X'40'                    TIME OUT OCCURED IN THIS BFR
WRITEBRK EQU   X'80'                    WRITE BREAK IN PROGRESS
CC32706  EQU   X'08'                    TCAM BUFFER HAS MORE     S22028
*                                       THAN                     S22028
*                                       ONE CONTROL CHARACTER
OFF      EQU   X'FF'                    USED TO RESET BITS
ZEROS    EQU   X'00'                    MASK TO ZERO SAVE AREA @YA11732
         EJECT
********
******** ESTABLISH ADDRESSABILITY
********
         USING *,RBASE                  ESTABLISH ADDRESSABILITY
         LR    RBASE,RNTRE              PUT ENTRY PT ADDR INTO BASE REG
IEDAYI   IEDHJN AYI0000                                        @Y17XAYP
         USING AVTSAVE2,RAVT            USE RAVT AS AVT BASE REGISTER
         USING TIOCRPT,RTIOC            USE RTIOC AS TIOCRPT BASE REG
         USING TSB,RTSB                 USE RTSB AS TSB BASE REGISTER
         SPACE 2
********
******** INITIALIZATION-GET POINTERS TO THE TIOCRPT AND THE AVT.  ALSO
******** CLEAR A WORK AREA FOR A TCAM BUFFER RETURN QUEUE.
********
TSIN0010 EQU   *
         ST    RDISP,AVTSAVE2+K68       SAVE TCAM DISPATCHER ADDRESS
         L     RWRK2,CVTPTR             GET CVT ADDRESS
         TM    AVTBIT3,AVTTSAB          DID TSO ABEND           YA08403
         BZ    TSOUP                    YES                     YA08403
         LA    RQCB,K0(R0,RQCB)         CLEAR HI ORDER BYTE     YA08403
         LA    RPARM,K0(R0,RPARM)       CLEAR HI ORDER BYTE     YA08403
         CLR   RPARM,RQCB              WAS A TCAM BUFFER PASSED YA08403
         BE    TSIN2050              NO, RETURN CONTROL TO TCAM YA08403
         B     TSIN0174                 YES,RETURN TCAM BUFFER  YA08403
TSOUP    EQU   *                                                YA08403
         USING CVT,RWRK2                USE RWRK2 AS CVT BASE REG
         L     RTIOC,CVTAQAVT           GET TCX ADDRESS        @G36XRYP
         L     RTIOC,TCXRPT-IEDQTCX(,RTIOC) GET ADDR TIOCRPT   @G36XRYP
         DROP  RWRK2                    DROP RWRK2 AS CVT BASE REG
         XC    AVTDOUBL,AVTDOUBL        CLEAR A WORK AREA IN THE AVT
         SPACE 2
********
******** ENTRY CHECK
********
         LA    RQCB,K0(R0,RQCB)         CLEAR HI ORDER BYTE OF REGISTER
         LA    RPARM,K0(R0,RPARM)       CLEAR HI ORDER BYTE OF REGISTER
         CLR   RPARM,RQCB               WAS A TCAM BUFFER PASSED
         BE    TSIN2000                 BRANCH IF NO
         LR    RPREFIX,RPARM            GET TCAM BUFFER ADDRESS
         USING IEDQPRF,RPREFIX          USE RPREFIX AS PREFIX BASE REG
         SPACE 2
********
******** FIND ASSOCIATED LCB AND SCB FOR THIS TERMINAL
********
         USING IEDQLCB,RLCB             USE RLCB AS LCB BASE REGISTER
         USING IEDQSCB,RSCB             USE RSCB AS SCB BASE REGISTER
         L     RLCB,PRFLCB-K1           GET LCB ADDRESS
         L     RSCB,LCBSCBA-K1          ADDRESS OF THE CURRENT SCB
         SPACE 2
********
******** FIND ASSOCIATED TERMINAL ENTRY TABLE AND QCB FOR THIS TERMINAL
********
         USING IEDNTRM,RTRMNTRE         TRM PREFIX             @Y17XAYP
         USING IEDQQCB,RQCB             USE RQCB AS QCB BASE REGISTER
         LH    RPARM,PRFSRCE            GET INDEX TO TNT
         L     RWK15,AVTRNMPT           GET ADDRESS OF TNT
         BALR  RETRN,RNTRE              BR TO CODE AT BEGINNING OF TNT
         LR    RTRMNTRE,RPARM           GET ADDR OF TERM ENTRY TABLE
         LA    RQCB,TRMPRFSZ            GET SIZE OF TRM PREFIX @Y17XAYP
         SR    RTRMNTRE,RQCB            BACK UP TO PREFIX      @Y17XAYP
         TM    TRMSTATE,TRMPREF         IS THERE A PREFIX      @Y17XAYP
         BNO   NOTRMBRK                 NO, TRMWRBRK CAN'T BE  @Y17XAYP
*                                       SET                    @Y17XAYP
         TM    TRMBYTE2,TRMWRBRK        WRITE BREAK IN PROGRESS@Y17XAYP
         BNO   NOTRMBRK                 NO, DON'T INDICATE     @Y17XAYP
*                                       WRITE BREAK IN PROGRESS@Y17XAYP
         OI    LCBTSOB,LCBWRBRK         INDICATE WRITE BREAK   @Y17XAYP
*                                       IN PROGRESS            @Y17XAYP
         NI    TRMBYTE2,OFF-TRMWRBRK    TURN OFF TRM WRITE     @Y17XAYP
*                                       BREAK INDICATOR        @Y17XAYP
NOTRMBRK EQU   *                                               @Y17XAYP
         L     RQCB,TRMDESTQ-K1         GET DEST QCB ADDR FOR THIS TERM
         TM    QCBFLAG,QCBTSSES         IS TSO SESSION IN PROGRESS
         BZ    TSIN0174                 RETURN TCAM BFR IF NOT
         TM    AVTBIT3,AVTTSAB          DID TSO ABEND            A44839
         BO    TSIN0174                 RETURN TCAM BUFFERS IF   A44839
*                                       YES                      A44839
         DROP  RTRMNTRE                 DROP TERM ENTRY TBL BASE REG
         SPACE 2
********
******** FIND ASSOCIATED TSB FOR THIS TERMINAL
********
         ST    RQCB,AVTSAVE2+K64        SAVE QCB ADDR FOR QTIP9@ZM46757
         LH    RWRK8,QCBTJID            GET ASID               @G36XRYP
         BCTR  RWRK8,0                  MINUS ONE FOR INDEX    @ZM46757
         SLL   RWRK8,2                  MULTIPLY ASID BY 4     @G36XRYP
         L     RWRK2,CVTPTR             GET CVT ADDRESS        @G36XRYP
         L     RWRK2,CVTASVT-CVT(RWRK2) GET ASVT ADDRESS       @G36XRYP
         AR    RWRK2,RWRK8              GET INDEX TO ASCB      @G36XRYP
         L     RTSB,ASVTENTY-ASVT(RWRK2) GET ASCB ADDRESS      @ZM46757
         L     RTSB,ASCBTSB-ASCBEGIN(RTSB)     GET TSB ASSRESS @ZM46758
         SPACE 2
********
******** IF THIS IS THE LAST TCAM BUFFER OF THE MESSAGE, PERFORM END OF
******** MESSAGE PROCESSING AND SAVE RELATED INFORMATION IN THE FIRST
******** BYTE OF THE TIC FIELD IN THE FIRST BASIC UNIT OF THE TCAM
******** BUFFER ACCORDING TO THE FOLLOWING FORMAT.
********
********       BIT 0 - WILL REFLECT THE LCBWRBRK BIT.
********
********       BIT 1 - WILL REFLECT THE OCCURANCE OF TIME OUT (X'01' IN
********               LCBSENS0).
********
********       BIT 2 - WILL INDICATE THAT PART OF THE LAST LINE SCANNED
********               IN THIS TCAM BFR WAS NOT MOVED TO TS BFR(S).
********
********       BIT 3 - WILL INDICATE THAT THIS BUFFER HAS BEEN ON THE
********               TCAM BUFFER WAIT QUEUE.
********
         CLC   PRFSIZE,AVTFZERO         IS SIZE FIELD ZEROS
         BE    TSIN0174                 RETURN TCAM BFR IS YES
         USING IEDQTSI,RWRK8            EST TSINPUT'S QCB BASE
         L     RWRK8,AVTTSOPT           ADDR OF TSINPUT'S QCB
         LA    RWRK8,TSIBUFQ            ADDR OF BFR WAIT QUEUE
         DROP  RWRK8                    DROP TSINPUT'S QCB BASE
         TM    TSBFLG1,TSBIFLSH         IS TCLEARQ INPUT IN PROGRESS
         BO    TSIN0012                 YES, CHECK TCAM BFR WAIT QUEUE
         NI    PRFTIC,AVTEZERO          CLEAR FIRST BYTE OF TIC FIELD
         TM    PRFSTAT1,PRFNHDRN        NOT FIRST BUFFER OF MSG@OZ16528
         BO    TSINOK                   YES, SKIP CLEAR        @OZ16528
         MVI   SCBSRCE,ZEROS            CLEAR SAVE AREA        @OZ16528
TSINOK   EQU   *                                               @OZ16528
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST TCAM BFR OF MSG
         BO    TSIN0019                 BRANCH IF NO
         NI    QCBFLAG,OFF-QCBREAD      IND READ NO LONGER HAS PRIORITY
         TM    LCBTSOB,LCBWRBRK         DID A WRITE BREAK OCCUR
         BZ    TSIN0011                 BRANCH IF NO
         OI    PRFTIC,WRITEBRK          IND WRITE BREAK IN PROGRESS
         SPACE 1
TSIN0011 EQU   *
         NI    LCBTSOB,OFF-LCBWRBRK     RESET WRITE BREAK INDICATOR
         TM    PRFSTAT1,PRFCNCLN        IS THIS TCAM MSG TO BE CANCELED
         BO    TSIN0012                 BRANCH IF YES
         TM    SCBERR3,SCBATTN+SCBSATTN+SCBXPI+SCBXPD  DID ATTEN OCCUR
         BZ    TSIN0018                 BRANCH IF NO
         OI    PRFSTAT1,PRFCNCLN        IND THAT MSG IS TO BE CANCELED
         SPACE 1
TSIN0012 EQU   *
         TM    QCBTSOF2,QCBBUFQ         ANY TCAM BFRS ON WAIT QUEUE FOR
*                                       THIS QCB
         BZ    TSIN0016                 BRANCH IF NONE FOR THIS QCB
         LR    RWK11,RPREFIX            SAVE PASSED TCAM BFR ADDRESS
         LA    RTSB,K0(R0,RTSB)         CLEAR HI-ORDER BYTE OF REG
         SPACE 1
TSIN0013 EQU   *
         L     RPREFIX,K0(R0,RWRK8)     GET NEXT TCAM BFR ON WAIT QUEUE
         LA    RPREFIX,K0(R0,RPREFIX)   CLEAR HI-ORDER BYTE OF REG
         LTR   RPREFIX,RPREFIX          ANY MORE TCAM BFRS ON QUEUE
         BZ    TSIN0015                 BRANCH IF NO MORE
         L     RWRK2,PRFQCBA-K1         GET ADDR OF ASSOCIATED TSB
         LA    RWRK2,K0(R0,RWRK2)       CLEAR HI-ORDER BYTE OF REG
         CR    RTSB,RWRK2               IS BFR PART OF THIS TCAM MSG
         BE    TSIN0014                 BRANCH IF YES
         LA    RWRK8,PRFLINK-K1         ADDR OF NEXT BFR POINTER
         B     TSIN0013                 BRANCH TO CONTINUE SEARCH
         SPACE 1
TSIN0014 EQU   *
         MVC   K1(K3,RWRK8),PRFLINK     RE-CHAIN TCAM BFR WAIT QUEUE
         LA    RETRN,TSIN0013           SET RETURN ADDR TO CONT SCAN
         B     TSIN4000                 BRANCH TO BFR RETURN ROUTINE
         SPACE 1
TSIN0015 EQU   *
         NI    QCBTSOF2,OFF-QCBBUFQ     IND NO MORE TCAM BFRS ARE IN
*                                       THE WAIT QUEUE FOR THIS QCB
         LR    RPREFIX,RWK11            RESTORE LAST TCAM BFR ADDRESS
         USING IEDQTSI,RWRK8            EST TSINPUT'S QCB BASE REGISTER
         L     RWRK8,AVTTSOPT           GET ADDR OF TSINPUT'S QCB
         LA    RWRK8,TSIBUFQ            GET ADDR OF TCAM BFR WAIT QUEUE
         DROP  RWRK8                    DROP TSINPUT'S QCB BASE REG
         SPACE 1
TSIN0016 EQU   *
         TM    TSBFLG1,TSBIFLSH         IS TCLEARQ INPUT IN PROGRESS
         BO    TSIN2028                 YES, RETURN TCAM BUFFER
         CLC   TSBIBFP,AVTFZERO         ANY TS BFRS ON INPUT HDR QUEUE
         BE    TSIN0017                 BRANCH IF NONE FOR THIS TSB
         SPACE 2
********
******** CALL QTIP TO DELETE ANY FRAGMENT MESSAGE WHICH MAY BE ON THE
******** INPUT QUEUE.
********
         QTIP  8,(RAVT)
         SPACE 2
********
******** IF AUTOMATIC CHARACTER PROMPTING IS IN PROGRESS, REPROMPT THE
******** USER WITH THE PROMPT CHARACTER OR THE LAST LINE NUMBER.
********
TSIN0017 EQU   *
         TM    TSBFLG2,TSBAUTON         IS AUTO PROMPTING IN PROGRESS
         BZ    TSIN0174                 BRANCH IF NO
         OI    SCBERR2,SCBALN           TELL TCAM TO PROMPT THE USER
         B     TSIN0174                 BRANCH TO RETURN TCAM BUFFER
         DROP  RSCB                     DROP RSCB AS SCB BASE REGISTER
         SPACE 1
TSIN0018 EQU   *
         TM    LCBSENS0,ONE             DID TIME OUT OCCUR IN THIS BFR
         BZ    TSIN0019                 BRANCH IF NO
         OI    PRFTIC,TIMEOUT           IND TIME OUT OCCURED IN BFR
         SPACE 2
********
******** DETERMINE WHETHER THIS IS A TCAM HEADER OR A TCAM TEXT BUFFER
******** AND SET THE DATA OFFSET EQUAL TO THE APPROPRIATE TCAM PREFIX
******** SIZE PLUS THE NUMBER OF RESERVES (FROM LCBISZE).
********
TSIN0019 EQU   *
         LH    RDSZE,PRFSIZE            SIZE OF DATA IN TCAM BFR
         SR    RPARM,RPARM              CLEAR FOR INSERTION     YS06327
         IC    RPARM,LCBISZE            GET NUMBER OF RESERVES  YS06327
         DROP  RLCB                     DROP LCB BASE REG       YS06327
         LA    RDEL,AVTHDRSZ(,RPARM)    DATA OFFSET FOR HDR     YS06327
         TM    PRFSTAT1,PRFNHDRN        IS THIS FIRST BFR OF MESSAGE
         BZ    TSIN0028                 BRANCH IF YES
         LA    RDEL,AVTTXTSZ(,RPARM)    DATA OFFSET FOR TXT     YS06327
         SPACE 2
********
******** DETERMINE IF THERE ARE ANY TCAM BUFFERS ON THE TCAM BUFFER
******** WAIT QUEUE FOR THIS TSB.  IF THERE ARE, PLACE THIS TCAM BUFFER
******** ON THE QUEUE.
********
TSIN0020 EQU   *
         STH   RDEL,PRFSRCE             PUT DATA OFFSET INTO HDR BFR
         SR    RDSZE,RDEL               ACTUAL SIZE OF DATA IN TCAM BFR
         STH   RDSZE,PRFSIZE            STORE UPDATED DATA SIZE
         TM    QCBTSOF2,QCBBUFQ         ANY TCAM BFRS ON BFR WAIT QUEUE
*                                       FOR THIS TSB
         BO    TSIN0240                 YES, PUT BFR ON WAIT Q
         B     TSIN0052                 BRANCH TO PROCESS TCAM BUFFER
         SPACE 2
********
******** SINCE THIS IS THE FIRST TCAM BUFFER OF THE MESSAGE, THE FIRST
******** TWO OR THREE BYTES OF DATA MAY BE ALL ZEROS. IF SO, ADJUST
******** DATA OFFSET AND DATA SIZE VALUES TO EXCLUDE THESE BYTES.
********
TSIN0028 EQU   *
         LA    RSCANF,K12(RDEL,RPREFIX) POINT TO 1ST DATA CHAR   S22029
         SR    RDSZE,RDEL               DATA SIZE IN BUFFER      S22029
         SPACE 1
TSIN0029 EQU   *
         LTR   RDSZE,RDSZE              ANY DATA LEFT IN TCAM BFR
         BZ    TSIN0040                 BRANCH IF NO MORE        S22028
         CLI   K0(RSCANF),AVTEZERO      IS THIS BYTE OF DATA ALL ZEROS
         BNE   TSIN0030                 BRANCH IF NO
         LA    RSCANF,K1(R0,RSCANF)     POINT TO NEXT CHAR IN TCAM BFR
         LA    RDEL,K1(R0,RDEL)         INCREMENT DATA OFFSET
         BCTR  RDSZE,R0                 DECR SIZE OF DATA IN TCAM BFR
         B     TSIN0029                 BR TO CHECK ZEROES AGAIN S22028
         SPACE 2                                                 S22028
********
******** CHECK FOR 3270 TERMINAL, IF IT IS, BYPASS THE CONTROL
******** CHARACTERS IN SCANNING.  THE CONTROL CHARACTERS WILL BE MOVED
******** INTO TS BUFFERS BY IEDAYII.  THERE WILL BE ONE CONTROL (AID)
******** CHARACTER WHEN ONLY PROGRAM FUNCTION KEYS ARE ENTERED, BUT
******** THERE WILL BE EITHER THREE OR SIX CONTROL CHARACTERS IF ANY
******** TEXT DATA IS ENTERED. IF THE FOURTH CHARACTER IS X'11',
******** THE NUMBER OF CONTROL CHARACTERS WILL BE SIX. OTHERWISE
******** THERE WILL BE THREE CONTROL CHARACTERS. BIT 4 (X'08') IN THE
******** FIRST BYTE OF THE TIC FIELD IN THE TCAM BUFFER (PRFTIC)
******** WILL BE TURNED ON INDICATING TO IEDAYII THAT THERE ARE MORE
******** THAN ONE CONTROL CHARACTERS TO MOVE.
********
TSIN0030 EQU   *                                                 S22028
         TM    TSBSTAT,TSB3270          TEST FOR 3270            S22028
         BZ    TSIN0040                 BRANCH IF NO             S22028
         CH    RDSZE,CC3270L            IS DATA SIZE LESS THAN 3 S22028
         BNL   TSIN0032                 BRANCH IF NO             S22028
         LA    RDEL,CC3270ND(R0,RDEL)   ADD 1 TO DATA OFFSET     S22028
         BCTR  RDSZE,R0                 MINUS 1 FROM DATA SIZE   S22028
         B     TSIN0040                 GO TO STORE DATA SIZE    S22028
         SPACE 1                                                 S22028
TSIN0032 EQU   *                                                 S22028
         LA    RDEL,CC3270D3(R0,RDEL)   ADD 3 TO DATA OFFSET     S22028
         SH    RDSZE,CC3270L            SUBTRACT 3 FROM DATA     S22028
*                                       SIZE                     S22028
         OI    PRFTIC,CC32706           BUFFER HAS MORE THAN 1   S22028
*                                       CONTROL CHARACTERS
         CH    RDSZE,CC3270L            ANOTHER SBA FOLLOWS    @OY19848
         BL    TSIN0040                 NO                     @OY19848
         CLI   CC3270D3(RSCANF),SBA     CHECK FOR SBA CHAR       S22028
         BNE   TSIN0040                 BRANCH IF NOT            S22028
         SPACE 1                                                 S22028
         LA    RDEL,CC3270D3(R0,RDEL)   ADD 3 MORE TO DATA       S22028
*                                       OFFSET                   S22028
         SH    RDSZE,CC3270L            SUBTRACT 3 MORE FROM     S22028
*                                       DATA SIZE                S22028
         SPACE 2
********
******** STORE THE UPDATED DATA SIZE AND THE DATA OFFSET IN THE HEADER
******** BUFFER.
********
TSIN0040 EQU   *                                                 S22028
         STH   RDEL,PRFSRCE             PUT DATA OFFSET INTO HDR BFR
         STH   RDSZE,PRFSIZE            STORE UPDATED DATA SIZE
         SPACE 2
********
******** IF THERE ARE ANY TIME SHARING BUFFERS ON THE INPUT QUEUE FOR
******** THIS TSB, GET A POINTER TO THE LAST HEADER BUFFER ON THIS
******** QUEUE.
********
TSIN0052 EQU   *
         USING TIOCBUF,RWK11            USE RWK11 AS TS BFR BASE REG
         L     RWK11,TSBIBFP-K1         GET FIRST BFR ON INPUT QUEUE
         LR    RWK15,RWK11              SAVE BUFFER PTR        @G36XRYP
         LA    RWK11,K0(R0,RWK11)       CLEAR HI ORDER BYTE OF REG
         LTR   RWK11,RWK11              ANY TS BFRS ON INPUT HDR QUEUE
         BZ    TSIN0062                 BRANCH IF NONE
         SPACE 1
TSIN0056 EQU   *
         CLC   BUFFHEAD,AVTFZERO        MORE HDR BFRS ON INPUT QUEUE
         BE    TSIN0058                 BRANCH IF NO MORE      @G36XRYP
         L     RWK11,BUFFHEAD-K1        GET ADDR OF NEXT HDR BFR ON Q
         B     TSIN0056                 CONT SEARCH FOR LAST HDR BFR
         SPACE 2
********                                                       @G36XRYP
******** ENSURE THAT THE INPUT QUEUE HAS NOT CHANGED DURING
******** SEARCH.  IF IT HAS, RE-SEARCH, OTHERWISE, THE FOLLOWING
******** TEST FOR BUFFFRAG WILL BE VALID.  THE BUFFER BEING TESTED
******** CAN ONLY BE DEQUED ASYNCHRONOUSLY BY TGET OR TCLEARQ.
******** TGET WILL NOT DEQUEUE A MSG WITH BUFFFRAG ON.  IF BUFFFRAG
******** IS OFF, IT WILL REMAIN OFF NO MATTER WHERE THE BUFFER
******** RESIDES AT THE MOMENT IT IS CHECKED, SINCE ONLY TSINPUT
******** TURNS ON BUFFFRAG.  IF TCLEARQ OCCURS BEFORE THE TEST,
******** THE REST OF THE MESSAGE WILL BE DISCARDED ANYWAY.
********
TSIN0058 EQU   *                                               @G36XRYP
         CL    RWK15,TSBIBFP-K1         HAS QUEUE CHANGED      @G36XRYP
         BNE   TSIN0052                 YES, RE-SEARCH         @G36XRYP
         SPACE 2
********
******** IF THIS TCAM BUFFER IS NOT A HEADER BUFFER, AND IF THERE ARE
******** NO INCOMPLETE TIME SHARING BUFFERS AND NO TCAM BUFFERS BEING
******** HELD FOR THIS TERMINAL, THE DATA SHOULD BE IGNORED.
********
TSIN0060 EQU   *
         TM    BUFFFL2,BUFFFRAG         IS LAST TCAM MSG ON Q COMPLETE
         BO    TSIN0070                 BRANCH IF NOT
         SPACE 1
TSIN0062 EQU   *
         TM    PRFSTAT1,PRFNHDRN        IS THIS FIRST TCAM BFR OF MSG
         BO    TSIN0174                 BRANCH IF NO
         SPACE 2
********
******** DETERMINE IF ANY TS BUFFERS ARE AVAILABLE TO PROCESS THE TCAM
******** BUFFER.  IF SO, CALCULATE THE BEGINNING ADDRESS OF THE DATA
******** WITHIN THE TCAM BUFFER.  OTHERWISE, PLACE THE TCAM BUFFER ON
******** THE TCAM BUFFER WAIT QUEUE.
********
         TM    TSBFLG2,TSBBIPI          IS THIS PARTIAL LINE COMPLETION
         BO    TSIN0070                 BRANCH IF YES
         CLC   TIOCNFBF,AVTFZERO        ARE THERE ANY FREE TS BUFFERS
         BE    TSIN0240                 NO, PUT BFR ON WAIT Q
         SPACE 2
********
******** DETERMINE IF THE DATA IN THE TCAM BUFFER BEGINS IN THE FIRST
******** BASIC UNIT.  IF NOT, PART OF THE DATA HAS ALREADY BEEN MOVED
******** PRIOR TO THE BUFFER HAVING BEEN PLACED ON THE TCAM WAIT QUEUE.
******** IN THIS EVENT, THE DATA MUST START IN THE SECOND BASIC UNIT OF
******** THE BUFFER.
********
TSIN0070 EQU   *
         LH    RDSZE,PRFSIZE            GET SIZE OF DATA IN TCAM BFR
         LR    RBUADR,RPREFIX           SET B.U. SCAN PTR TO BFR ADDR
         LH    RDEL,PRFSRCE             GET OFFSET TO DATA IN TCAM BFR
         LH    RWK15,AVTKEYLE           GET BASIC UNIT SIZE
         CLR   RDEL,RWK15               DOES DATA BEGIN IN FIRST B.U.
         BL    TSIN0090                 BRANCH IF YES
         L     RBUADR,PRFTIC            GET ADDR OF SECOND BASIC UNIT
         SR    RDEL,RWK15               DECR DATA OFFSET BY FIRST B.U.
         SPACE 1
TSIN0090 EQU   *
         LA    RSCANL,K12(RDEL,RBUADR)  CALCULATE BEGIN OF DATA ADDRESS
         LH    RBUEND,AVTKEYLE          GET BASIC UNIT SIZE
         LA    RBUEND,K12(RBUADR,RBUEND)  PT TO END OF THIS BASIC UNIT
         LA    RWK15,K0(RDSZE,RSCANL)   DOES DATA END IN THIS  @OZ16528
         CLR   RWK15,RBUEND             UNIT                   @OZ16528
         BNL   TSIN0091                 NO, DATA END POINTER OK@OZ16528
         LR    RBUEND,RWK15             CORRECT THE END POINTER@OZ16528
TSIN0091 EQU   *                                               @OZ16528
         DROP  RQCB                     DROP RQCB AS QCB BASE REGISTER
         SPACE 2
********
******** REMOVE ALL LINE FEED CHARACTERS FROM THE BEGINNING OF EACH TS
******** MESSAGE PRIOR TO SCANNING IT FOR VALID DATA.
********
TSIN0092 EQU   *
         LR    RPARM,RDSZE              SAVE ORIGINAL DATA SIZE
         SPACE 1
TSIN0093 EQU   *
         LTR   RDSZE,RDSZE              ANY DATA IN TCAM BFR TO SCAN
         BNZ   TSIN0094                 BRANCH IF YES
         STH   RDSZE,PRFSIZE            UPDATE SIZE OF DATA IN TCAM BFR
         B     TSIN0170                 BRANCH TO PROCESS TCAM BUFFER
         SPACE 1
TSIN0094 EQU   *
         CLI   K0(RSCANL),LINEFEED      IS NEXT CHAR A LINE FEED CHAR
         BNE   TSIN0095                 BRANCH IF NOT TO SCAN DATA
         LA    RSCANL,K1(R0,RSCANL)     INCR END SCAN PTR TO NEXT CHAR
         BCTR  RDSZE,R0                 DECR DATA SIZE BY ONE
         CLR   RBUEND,RSCANL            IS SCAN TO END OF BASIC UNIT
         LA    RETRN,TSIN0093           SET UP RETURN ADDRESS
         BCR   NOTEQUAL,RETRN           CONT IF NOT END OF BASIC UNIT
         B     TSIN0150                 BR TO GET ANOTHER BASIC UNIT
         SPACE 1
TSIN0095 EQU   *
         LH    RDEL,PRFSRCE             GET OFFSET TO DATA IN TCAM BFR
         SR    RPARM,RDSZE              CALCULATE NEW DATA OFFSET
         AR    RDEL,RPARM               ADD TO OLD DATA OFFSET
         STH   RDEL,PRFSRCE             STORE UPDATED DATA OFFSET
         STH   RDSZE,PRFSIZE            STORE UPDATED DATA SIZE
         SPACE 2
********
******** SCAN THE BASIC UNIT CURRENTLY POINTING TO FOR AN SBA, CARRIAGE
******** RETURN, NEW LINE, LINE FEED, LINE DELETE, OR CHARACTER DELETE
******** CHARACTER.  IF ONE OF THESE CHARACTERS IS ENCOUNTERED, TAKE
******** THE APPROPRIATE ACTION DESCRIBED BELOW.  OTHERWISE, CONTINUE
******** SCANNING WITH THE NEXT BASIC UNIT OF THE TCAM BUFFER.  WHEN NO
******** MORE BASIC UNITS REMAIN TO BE SCANNED, CONTINUE PROCESSING.
********
TSIN0096 EQU   *
         LR    RSCANF,RSCANL            INITIALIZE BEGIN SCAN POINTER
         SR    RWRK7,RWRK7              INIT CHARACTER COUNT TO ZERO
         CLC   TSBIBFP,AVTFZERO         ANY TS BFRS ON INPUT HDR QUEUE
         BE    TSIN0102                 BRANCH IF NONE
         TM    BUFFFL1,BUFFNLCR         IS LAST MSG ON QUEUE COMPLETE
         BO    TSIN0102                 BRANCH IF YES
         LH    RWRK7,BUFFWORK           GET PREVIOUS CHARACTER COUNT
         CLR   RBUEND,RSCANL            IS NEW UNIT NEEDED     @OZ16528
         BE    TSIN0102                 BRANCH IF YES          @OZ16528
         TM    PRFSTAT1,PRFNHDRN        NOT FIRST BUFFER OF MSG@OZ16528
         BO    TSIN0104                 CHECK SKIP CONTROL CHAR@OZ16528
         SPACE 1
TSIN0102 EQU   *
         CLR   RBUEND,RSCANL            IS SCAN TO END OF BASIC UNIT
         BNE   TSIN0105                 BRANCH IF NOT          @YA11732
         BAL   RETRN,TSIN0150           BR TO GET ANOTHER BASIC UNIT
         LA    RWK15,K0(RDSZE,RSCANL)   DATA END BEFORE THE    @OZ16528
         CLR   RWK15,RBUEND             END OF THIS UNIT       @OZ16528
         BNL   TSIN0103                  NO.. END POINTER OK   @OZ16528
         LR    RBUEND,RWK15              CORRECT END POINTER   @OZ16528
TSIN0103 EQU   *                                               @OZ16528
         SPACE 1
********
******** WHEN AN SBA CHARACTER IS ENCOUNTERED IN THE DATA, THE SBA PLUS
******** THE FOLLOWING TWO CONTROL CHARACTERS MUST NOT BE COUNTED AS
******** VALID DATA. WHEN THE SBA IS FOUND WITHIN THE LAST TWO CHARAC-
******** TERS OF A BUFFER UNIT, ONE OR MORE FOLLOWING CONTROL CHARAC-
******** TERS MAY BE IN THE NEXT BUFFER UNIT AND MUST ALSO BE SKIPPED.
********                                                       @YA11732
TSIN0104 EQU   *                                               @YA11732
         USING IEDQLCB,RWK15                                   @YA11732
         USING IEDQSCB,RPARM                                   @YA11732
         L     RWK15,PRFLCB-K1           GET LCB ADDRESS       @YA11732
         L     RPARM,LCBSCBA-K1          SCB ADRESSABILITY     @YA11732
         CLI   SCBSRCE,ZEROS           CONTROL CHARS. TO SKIP  @YA11732
         BE    TSIN0105                 NO, CONTINUE           @YA11732
         SR    RDEL,RDEL                ZERO WORK REGISTER     @YA11732
         IC    RDEL,SCBSRCE             GET NUMBER TO SKIP     @YA11732
         AR    RSCANL,RDEL              ADD NUMBER TO SCAN PTR @YA11732
         AR    RWRK7,RDEL               COUNT SBA CHAR AS DATA @OZ24913
         SR    RDSZE,RDEL               DECREMENT DATA COUNT   @YA11732
         SR    RDEL,RDEL                ZERO WORK REGISTER     @YA11732
         STC   RDEL,SCBSRCE             CLEAR SAVE AREA        @YA11732
         LTR   RDSZE,RDSZE              ANY DATA IN TCAM BUFFER@OZ16528
         BZ    TSIN0115                 NO, CK IF LAST BUFFER  @OZ16528
         DROP  RWK15                                           @YA11732
         DROP  RPARM                                           @YA11732
         SPACE 1                                               @YA11732
TSIN0105 EQU   *                                               @YA11732
         CLI   K0(RSCANL),SBA           CHECK FOR SBA CHAR.    @YA11732
         BNE   TSIN0106                 NO, BRANCH             @YA11732
         LR    RDEL,RBUEND              LOAD END OF BUFFER PTR @YA11732
         SH    RDEL,CC3270L             SUBTRACT THREE         @YA11732
         CR    RSCANL,RDEL              SBA WITHIN TWO OF END  @YA11732
         BH    TSIN010S                 YES GO CALCULATE       @YA11732
         LA    RSCANL,CC3270D3(R0,RSCANL) ADD 3 TO SCAN COUNT  @YA11732
         LA    RWRK7,CC3270D3(R0,RWRK7) COUNT SBA CHAR AS DATA @OZ24913
         SH    RDSZE,CC3270L            DECREMENT DATA SIZE -3 @YA11732
         LTR   RDSZE,RDSZE              ANY DATA IN TCAM BFR?  @YA11732
         BZ    TSIN0115                 NO, CHK IF LAST BUFFER @YA11732
         B     TSIN0102                 CONTINUE CHECKING      @YA11732
         SPACE 1                                               @YA11732
TSIN010S EQU   *
         USING IEDQLCB,RWK15                                   @YA11732
         USING IEDQSCB,RPARM                                   @YA11732
         L     RWK15,PRFLCB-K1          GET LCB ADDRESS        @YA11732
         L     RPARM,LCBSCBA-K1         SCB ADDRESSABILITY     @YA11732
         SR    RDEL,RDEL                ZERO WORK REGISTER     @YA11732
         LR    RDEL,RSCANL              LOAD SCAN POINTER      @YA11732
         SR    RDEL,RBUEND              HOW MANY CHARS FRM END @YA11732
         LPR   RDEL,RDEL                CONVERT TO POSITIVE    @YA11732
         AR    RSCANL,RDEL              ADD TO SCAN COUNTER    @YA11732
         AR    RWRK7,RDEL               COUNT SBA CHAR AS DATA @OZ24913
         SR    RDSZE,RDEL               DECREMENT DATA SIZE    @YA11732
         SH    RDEL,CC3270L             GET THREES COMPLEMENT  @YA11732
         LPR   RDEL,RDEL                CONVERT TO POSITIVE    @YA11732
         STC   RDEL,SCBSRCE             SAVE NUMBER FOR NXT BU @YA11732
         LTR   RDSZE,RDSZE              ANY DATA IN TCAM BUFFER@OZ16528
         BZ    TSIN0115                 NO, CK IF LAST BUFFER  @OZ16528
         DROP  RWK15                                           @YA11732
         DROP  RPARM                                           @YA11732
         B     TSIN0102                 CHECK FOR END OF BFR   @YA11732
         SPACE 1                                               @YA11732
TSIN0106 EQU   *
         CLI   TSBLNDCC,K0              0 MEANS NO DELETE CHAR  OS58447
         BE    TSIN0107                 NO CHAR, DON'T COMPARE  OS58447
         CLC   K0(K1,RSCANL),TSBLNDCC   IS THE NEXT CHAR LINE DELETE
         BE    TSIN0130                 BRANCH IF YES
TSIN0107 EQU   *                                                OS58447
         CLI   K0(RSCANL),NEWLINE       IS THE NEXT CHAR NEW LINE CHAR
         BE    TSIN0120                 BRANCH IF YES
         CLI   K0(RSCANL),CARRRTRN      IS THE NEXT CHAR CARRIAGE RETRN
         BE    TSIN0120                 BRANCH IF YES
         CLI   TSBCHDCC,K0              0 MEANS NO DELETE CHAR  OS58447
         BE    TSIN0108                 NO CHAR, DON'T COMPARE  OS58447
         CLC   K0(K1,RSCANL),TSBCHDCC   IS THE NEXT CHAR CHAR DELETE
         BNE   TSIN0108                 BRANCH IF NO
         LTR   RWRK7,RWRK7              DOES CHARACTER COUNT EQUAL ZERO
         BZ    TSIN0110                 BRANCH IF YES
         BCTR  RWRK7,R0                 DECR CHARACTER COUNT BY ONE
         B     TSIN0110                 CONTINUE SCANNING
         SPACE 1
TSIN0108 EQU   *
         CLI   K0(RSCANL),LINEFEED      IS THE NEXT CHAR LINE FEED CHAR
         BE    TSIN0110                 BRANCH IF YES
         LA    RWRK7,K1(R0,RWRK7)       INCR CHARACTER COUNT BY ONE
         SPACE 1
TSIN0110 EQU   *
         LA    RSCANL,K1(R0,RSCANL)     INCR END SCAN PTR TO NEXT CHAR
         BCT   RDSZE,TSIN0102           CONT SCAN IF MORE DATA LEFT
         SPACE 1
TSIN0115 EQU   *                                               @YA11732
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST TCAM BFR OF MSG
         BO    TSIN0170                 BRANCH IF NO
         SPACE 1
TSIN0120 EQU   *
         TM    PRFTIC,NOTMOVED          ANY UNMOVED DATA IN TCAM BFR
*                                       FROM A PREVIOUS SCAN
         BO    TSIN0122                 BRANCH IF YES
         LTR   RWRK7,RWRK7              DOES CHARACTER COUNT EQUAL ZERO
         BNZ   TSIN0122                 BRANCH IF NO
         LR    RSCANF,RSCANL            INDICATE A NULL LINE
         LTR   RDSZE,RDSZE              WAS LAST CHAR SCANNED CR OR NL
         BZ    TSIN0136                 BRANCH IF NO
         LA    RSCANL,K1(R0,RSCANL)     INCR END SCAN PTR PAST CR OR NL
         B     TSIN0136                 BRANCH TO CHAR/LINE DELETE RTN
         SPACE 1
TSIN0122 EQU   *
         LTR   RDSZE,RDSZE              WAS LAST CHAR SCANNED CR OR NL
         BZ    TSIN0170                 BRANCH IF NO TO MOVE DATA
         LA    RSCANL,K1(R0,RSCANL)     INCR END SCAN PTR PAST CR OR NL
         B     TSIN0170                 BRANCH TO MOVE DATA
         SPACE 2
********
******** DELETE THE INPUT LINE WHICH IS CURRENTLY BEING SCANNED AND
******** INCREMENT THE BEGIN AND END SCAN POINTER TO THE NEXT
******** CHARACTER IN THE TCAM BUFFER.  IF THE TCAM BUFFER IS NOT THE
******** FIRST BUFFER OF THE MESSAGE AND THE LAST CHARACTER MOVED INTO
******** TIME SHARING BUFFERS FOR THIS MESSAGE WAS NOT A CARRAGE RETURN
******** CHARACTER, A FRAGMENT MESSAGE WHICH IS PART OF THE LINE TO BE
******** DELETED EXISTS ON THE TS BUFFER INPUT QUEUE.  IN THIS CASE,
******** THE FRAGMENT MESSAGE WILL BE REMOVED FROM THE INPUT QUEUE.
********
TSIN0130 EQU   *
         BCTR  RDSZE,R0                 DECREMENT DATA SIZE BY ONE
         LA    RSCANL,K1(R0,RSCANL)     INCR END PTR PAST LINE DEL CHAR
         LR    RSCANF,RSCANL            RESET BEGINNING OF SCAN PTR
         LTR   RDSZE,RDSZE              ANY DATA LEFT TO SCAN
         BZ    TSIN0136                 BRANCH IF NO MORE
         CLR   RBUEND,RSCANL            IS SCAN TO END OF BASIC UNIT
         BNE   TSIN0132                 BRANCH IF NO
         BAL   RETRN,TSIN0150           BR TO GET ANOTHER BASIC UNIT
         SPACE 1
TSIN0132 EQU   *
         CLI   K0(RSCANL),NEWLINE       IS THE NEXT CHAR NEW LINE CHAR
         BE    TSIN0134                 BRANCH IF YES
         CLI   K0(RSCANL),CARRRTRN      IS THE NEXT CHAR CARRIAGE RETRN
         BNE   TSIN0136                 BRANCH IF NO
         SPACE 1
TSIN0134 EQU   *
         LA    RSCANL,K1(R0,RSCANL)     INCR END SCAN PTR PAST CR OR NL
         SPACE 2
********
******** THE FOLLOWING SECTION OF CODE IS COMMON TO BOTH LINE DELETE
******** AND CHARACTER DELETE FUNCTIONS.  IF PART OF THIS TS MESSAGE
******** HAS ALREADY BEEN MOVED INTO TS BUFFERS, RETURN ALL BUT THE
******** HEADER BUFFER ASSOCIATED WITH THIS TS MESSAGE.
********
TSIN0136 EQU   *
         STH   RDSZE,PRFSIZE            UPDATE AMOUNT OF DATA IN BUFFER
         CLC   TSBIBFP,AVTFZERO         ANY TS BFRS ON INPUT HDR QUEUE
         BE    TSIN0138                 BRANCH IF NONE
         TM    BUFFFL1,BUFFNLCR         IS LAST MSG ON QUEUE COMPLETE
         BO    TSIN0138                 BRANCH IF YES
         SPACE 2
********
******** CALL QTIP SVC TO DELETE THE INPUT LINE CURRENTLY BEING SCANNED
********
         QTIP  8,(RAVT)
         B     TSIN0172                 BR TO INIT FOR NEXT SCAN
         SPACE 1
TSIN0138 EQU   *
         CLR   RSCANF,RSCANL            IS NEXT CHARACTER CR OR NL
         BNE   TSIN0170                 BRANCH IF YES
         LTR   RDSZE,RDSZE              ANY MORE DATA LEFT TO SCAN
         BZ    TSIN0170                 BR IF NO TO CREATE A NULL LINE
         SR    RWRK7,RWRK7              RESET CHARACTER COUNT TO ZERO
         B     TSIN0102                 BR TO CONTINUE SCANNING DATA
         SPACE 2
********
******** DETERMINE IF ANY MORE BASIC UNITS REMAIN TO BE SCANED.  IF SO,
******** POINT TO THE NEXT BASIC UNIT AND CALCULATE THE BEGINNING OF
******** DATA WITHIN THIS BASIC UNIT.
********
TSIN0150 EQU   *
         DROP  RPREFIX                  DROP RPREFIX AS TCAM BFR BASE
         USING IEDQPRF,RBUADR           USE RBUADR AS TCAM BFR BASE REG
         L     RBUADR,PRFTIC            GET ADR OF NEXT BASIC UNIT
         DROP  RBUADR                   DROP RBUADR AS TCAM BFR BASE
         USING IEDQPRF,RPREFIX          USE RPREFIX AS TCAM BFR BASE
         LA    RSCANL,K12(R0,RBUADR)    POINT TO DATA IN THE NEXT B.U.
         CLR   RSCANF,RBUEND            IS BEGIN SCAN AT END LAST B.U.
         BNE   TSIN0160                 BRANCH IF NOT
         LR    RSCANF,RSCANL            SET BEGIN SCAN EQUAL END SCAN
         SPACE 1
TSIN0160 EQU   *
         LH    RBUEND,AVTKEYLE          GET BASIC UNIT SIZE
         LA    RBUEND,K12(RBUADR,RBUEND)  PT TO END OF THIS BASIC UNIT
         BR    RETRN                    RETURN TO CALLER
         SPACE 2
********
******** CALL QTIP SVC TO MOVE THE SCANED DATA IN THE TCAM BUFFER
******** INTO TIME SHARING BUFFER(S).
********
TSIN0170 EQU   *
         QTIP  9,(RAVT)
         SPACE 2
********
******** DETERMINE IF THE MOVE ROUTINE WAS SUCCESSFUL IN OBTAINING
******** ENOUGH TS BUFFERS TO MOVE THE SCANED DATA IN THE TCAM BUFFER
******** INTO TS BUFFER(S).  IF NOT, RETURN ANY TCAM BASIC UNITS WHICH
******** MAY BE EMPTY AND PLACE THE REMAINDER OF THE TCAM BUFFER ON THE
******** TIOCRPT BUFFER WAIT QUEUE.  IF QTIP HAS INDICATED THAT THE MSG
******** WAS TOO LONG, CANCEL IT.  OTHERWISE, DETERMINE IF ANY MORE
******** DATA REMAINS TO BE SCANNED.  IF NOT, RETURN THE EMPTY TCAM
******** BUFFER.
********
         LR    RWK11,RTRNCD             GET PTR TO LAST TS HDR ON QUEUE
         SRL   RTRNCD,K24               RIGHT ADJUST RETURN CODE
         LTR   RTRNCD,RTRNCD            RTRN CODE IND NO TS BFRS AVAIL
         BNZ   TSIN0180                 BRANCH IF YES
         SPACE 1
TSIN0172 EQU   *
         TM    PRFSTAT1,PRFCNCLN        DID QTIP CANCEL MSG?    YA06046
         BNO   OVER                     BRANCH NO              @G36XRYP
         L     RSCB,PRFLCB-K1           GET LCB ADDRESS        @G36XRYP
         L     RSCB,LCBSCBA-K1-IEDQLCB(RSCB) GET SCB ADDRESS   @G36XRYP
         USING IEDQSCB,RSCB             SCB ADDRESSABILITY     @G36XRYP
         OI    SCBERR1,SCBCUTFN         INDICATE CUTOFF MSG    @G36XRYP
*                                       TO BE SENT             @G36XRYP
         B     TSIN0016                 CANCEL MSG             @G36XRYP
         DROP  RSCB                                            @G36XRYP
OVER     LH    RDSZE,PRFSIZE            GET UNMOVED DATA SIZE   YA06046
         LTR   RDSZE,RDSZE              ANY MORE DATA LEFT TO SCAN
         BNZ   TSIN0176                 BRANCH IF YES
         SPACE 1
TSIN0174 EQU   *
         LA    RETRN,TSIN2020           RETURN TO CHK BFR WAIT QUEUE
         B     TSIN4000                 PUT TCAM BFR ON RETURN QUEUE
         SPACE 1
TSIN0176 EQU   *
         TM    BUFFFL1,BUFFNLCR         IS LAST TS MSG COMPLETE
         BZ    TSIN0096                 CONT SCANNING IF NOT
         CLC   TIOCNFBF,AVTFZERO        ARE THERE ANY FREE TS BUFFERS
         BNE   TSIN0092                 BRANCH IF YES TO CONTINUE SCAN
         DROP  RWK11                    DROP RWK11 AS TS BFR BASE REG
         SPACE 2
********
******** DETERMINE IF ANY EMPTY TCAM BASIC UNITS CAN BE RETURNED PRIOR
******** TO PLACING THE TCAM BUFFER ON THE TCAM BUFFER WAIT QUEUE.
********
TSIN0180 EQU   *
         CLI   PRFNBUNT,ONE             MORE THAN ONE BASIC UNIT IN BFR
         BE    TSIN0240                 BRANCH IF NO
         LR    RBUADR,RPREFIX           GET ADDR OF FIRST BASIC UNIT
         LH    RDEL,PRFSRCE             GET OFFSET TO DATA IN TCAM BFR
         LH    RWK15,AVTKEYLE           GET BASIC UNIT SIZE
         SR    RWRK3,RWRK3              CLEAR REGISTER
         IC    RWRK3,PRFNBUNT           GET NO. BASIC UNITS IN TCAM BFR
         BCTR  RWRK3,R0                 DECR NO. BASIC UNITS BY ONE
         SPACE 2
********
******** CALCULATE THE NUMBER OF TCAM BASIC UNITS WHICH ARE EMPTY AND
******** CAN BE RETURNED.
********
TSIN0200 EQU   *
         DROP  RPREFIX                  DROP RPREFIX AS TCAM BFR BASE
         USING IEDQPRF,RBUADR            USE RBUADR AS TCAM BFR BASE
         CR    RDEL,RWK15               DOES DATA BEGIN IN THIS B.U.
         BL    TSIN0210                 BRANCH IF YES
         SR    RDEL,RWK15               DECR DATA OFFSET BY DATA AREA
         L     RBUADR,PRFTIC            GET ADDR OF NEXT BASIC UNIT
         BCT   RWRK3,TSIN0200                  CONT IF NOT LAST B.U.
         SPACE 2
********
******** IF THE UNMOVED DATA DOES NOT BEGIN IN THE FIRST BASIC UNIT,
******** DETERMINE IF THE DATA OFFSET IN THE BEGINING BASIC UNIT IS
******** LARGE ENOUGH TO ALLOW THE PREFIX OF THAT BASIC UNIT TO BE
******** OVERLAYED WITH THE HEADER AND THE FIRST BASIC UNIT TO BE RE-
******** TURNED.
********
TSIN0210 EQU   *
         CLR   RBUADR,RPREFIX           DOES DATA BEGIN IN THE FIRST BU
         BE    TSIN0240                 BRANCH IF YES
         TM    PRFSTAT1,PRFNHDRN        HEADER PREFIX            S22029
         BO    TSIN0215                 NO, USE TEXT PREFIX      S22029
         LA    RDSZE,AVTHDRSZ           COMPARAND FOR HDR PRF SZ S22029
         B     TSIN0220                 CHECK FOR EMPTY BASIC    S22029
*                                       UNITS TO RETURN
TSIN0215 EQU   *                                                 S22029
         LA    RDSZE,AVTTXTSZ           COMPARAND FOR TXT PRF SZ S22029
TSIN0220 EQU   *                                                 S22029
         CR    RDEL,RDSZE               ENOUGH ROOM FOR PREFIX   S22029
         BL    TSIN0230                 BRANCH IF NO
         SPACE 2
********
******** MOVE HEADER PREFIX TO OVERLAY PREFIX OF FIRST BASIC UNIT
******** CONTAINING UNMOVED DATA AND RETURN EMPTY BASIC UNITS.
********
         MVC   PRFTIC(K1),PRFTIC-IEDQPRF(RPREFIX) MOVE FLAGS TO TIC FLD
         L     RWK15,PRFTIC             SAVE FLAGS AND TIC ADDRESS
         LA    RDSZE,K11(RDSZE)         UPDATE FOR MOVE COUNT    S22029
         EX    RDSZE,MOVEPRFX           MOVE BUFFER PREFIX INTO  S22029
*                                       NEW FIRST BASIC UNIT
         ST    RWK15,PRFTIC             RESTORE FLAGS AND TIC ADDRESS
         STH   RDEL,PRFSRCE             STORE UPDATED DATA OFFSET
         LA    RWRK3,K1(R0,RWRK3)        INCR NO. OF BASIC UNITS BY 1
         STC   RWRK3,PRFNBUNT           NO. BASIC UNITS GOING ON QUEUE
         DROP  RBUADR                   DROP RBUADR AS TCAM BFR BASE
         USING IEDQPRF,RPREFIX          USE RPREFIX AS TCAM BFR BASE
         IC    RWK14,PRFNBUNT           GET TOTAL NO. OF BASIC UNITS
         SR    RWK14,RWRK3              CALC NO. BASIC UNITS TO RETURN
         STC   RWK14,PRFNBUNT           NO. BASIC UNITS BEING RETURNED
         BAL   RETRN,TSIN4000           RETURN BASIC UNITS
         LR    RPREFIX,RBUADR           PT TO BFR TO BE PLACED ON QUEUE
         B     TSIN0240                 BR TO PLACE TCAM BFR ON QUEUE
         SPACE 2
********
******** RETURN THE EMPTY BASIC UNITS WHICH FOLLOW THE FIRST BASIC UNIT
******** AND CHAIN TO THE FIRST BASIC UNIT THE BASIC UNITS WHICH
******** CONTAIN UNMOVED DATA.
********
TSIN0230 EQU   *
         LA    RWRK3,K2(R0,RWRK3)       INCR NO. OF BASIC UNITS BY 2
         AR    RDEL,RWK15               INCR DATA OFFSET FOR HEADER
         SR    RWK15,RWK15              CLEAR REGISTER
         IC    RWK15,PRFNBUNT           GET TOTAL NO. OF BASIC UNITS
         CLR   RWRK3,RWK15              CAN ANY BASIC UNITS BE RETURNED
         BE    TSIN0240                 BR IF NO TO PUT BFR ON WAIT Q
         STC   RWRK3,PRFNBUNT           NO. BASIC UNITS GOING ON QUEUE
         LR    RPARM,RPREFIX            SAVE ADDR OF FIRST BASIC UNIT
         L     RPREFIX,PRFTIC           GET ADDR OF SECOND BASIC UNIT
         SR    RWK15,RWRK3              CALC NO. BASIC UNITS TO RETURN
         STC   RWK15,PRFNBUNT           NO. BASIC UNITS BEING RETURNED
         DROP  RPREFIX                  DROP RPREFIX AS TCAM BFR BASE
         USING IEDQPRF,RPARM            USE RPARM AS TCAM BFR BASE REG
         XC    PRFTIC+K1(K3),PRFTIC+K1  CLEAR TIC FIELD
         LA    RBUADR,K0(R0,RBUADR)     CLEAR HI-ORDER BYTE OF REG
         O     RBUADR,PRFTIC            MOVE FLAGS TO HI-ORDER BYTE
         ST    RBUADR,PRFTIC            CHAIN BASIC UNITS TOGETHER
         STH   RDEL,PRFSRCE             STORE UPDATED DATA OFFSET
         DROP  RPARM                    DROP RPARM AS TCAM BFR BASE REG
         USING IEDQPRF,RPREFIX          USE RPREFIX AS TCAM BFR BASE
         BAL   RETRN,TSIN4000           RETURN BASIC UNITS
         LR    RPREFIX,RPARM            PT TO BFR TO BE PLACED ON QUEUE
         SPACE 2
********
******** THE FOLLOWING ROUTINE IS USED TO PLACE A TCAM BUFFER ON THE
******** BUFFER WAIT QUEUE, LOCATED IN TSINPUT'S DESTINATION QCB,
******** UNTIL TIME SHARING BUFFERS BECOME AVAILABLE TO PROCESS IT.
******** IF ANY TCAM BUFFERS ASSOCIATED WITH THIS QCB ARE IN THE WAIT
******** QUEUE, CHAIN THIS TCAM BUFFER TO THE LAST SUCH BUFFER FOR THIS
******** QCB.  OTHERWISE, PUT THE BUFFER AT THE END OF THE QUEUE.
********
         USING IEDQTSI,RWRK8            USE RWRK8 AS TSINPUT QCB BASE
TSIN0240 EQU   *
         ST    RTSB,PRFQCBA-K1          SAVE TSB ADDR IN TCAM BFR
         USING IEDQQCB,RQCB             USE RQCB AS QCB BASE REGISTER
         LH    RPARM,TSBASRCE           GET TNT INDEX          @G36XRYP
         L     RNTRE,AVTRNMPT           GET TNT CODE ADDRESS   @G36XRYP
         BALR  RETRN,RNTRE              GET TTE                @G36XRYP
         USING IEDQTRM,RPARM            TTE ADDRESSABILITY     @G36XRYP
         L     RQCB,TRMDESTQ-K1         GET QCB ADDRESS        @G36XRYP
         ST    RQCB,AVTSAVE2+K64        SAVE QCB FOR QTIP 9    @G36XRYP
         DROP  RPARM                                           @G36XRYP
         L     RWRK8,AVTTSOPT           GET ADDR OF TSINPUT'S QCB
         LA    RPREFIX,K0(R0,RPREFIX)   CLEAR HI-ORDER BYTE OF REGISTER
         CLC   TSIBUFQ,AVTFZERO         ANY TCAM BFRS ON WAIT QUEUE
         BNE   TSIN0270                 BRANCH IF YES
         ST    RPREFIX,TSIBUFQ          PUT TCAM BUFFER ON WAIT QUEUE
         XC    PRFLINK,PRFLINK          CLEAR LINK FIELD OF LAST BFR
         B     TSIN0400                 BRANCH TO END
         SPACE 1
TSIN0270 EQU   *
         DROP  RPREFIX                  DROP RPREFIX AS TCAM BFR BASE
         USING IEDQPRF,RWRK3            USE RWRK3 AS TCAM BFR BASE REG
         L     RWRK3,TSIBUFQ            GET ADDR OF FIRST BFR ON QUEUE
         TM    QCBTSOF2,QCBBUFQ         ANY BFRS ON QUEUE FOR THIS QCB
         BZ    TSIN0340                 BRANCH IF NONE
         LA    RTSB,K0(R0,RTSB)         CLEAR HI ORDER BYTE OF TSB REG
         LA    RWRK8,TSIBUFQ            ADDR OF BFR WAIT QUEUE
         DROP  RWRK8                    DROP TSINPUT'S BASE REG
         SPACE 1
TSIN0280 EQU   *
         L     RWRK2,PRFQCBA-K1         GET ADDR OF TSB FOR THIS BUFFER
         LA    RWRK2,K0(R0,RWRK2)       CLEAR HI ORDER BYTE OF REGISTER
         CLR   RTSB,RWRK2               IS TSB FOR THIS QUEUE BFR EQUAL
*                                       TO CURRENT TSB SEARCHING FOR
         BE    TSIN0300                 BRANCH IF YES
         LA    RWRK8,PRFLINK-K1         SAVE ADDR OF LINK FIELD
         L     RWRK3,PRFLINK-K1         GET ADDR OF NEXT BFR IN QUEUE
         B     TSIN0280                 CONT SEARCH FOR ASSOCIATED TSB
         SPACE 1
TSIN0300 EQU   *
         DROP  RWRK3                    DROP TCAM BFR BASE REG
         USING IEDQPRF,RPREFIX          EST TCAM BFR BASE REG
         TM    PRFTIC,WAITQBFR          WAS THIS BFR ON THE WAIT QUEUE
         BZ    TSIN0320                 BRANCH IF NOT
         MVC   PRFLINK,K1(RWRK8)        CHAIN TO NEXT BFR ON Q
         ST    RPREFIX,K0(RWRK8)        CHAIN TO PREVIOUS BFR
         B     TSIN0400                 BRANCH TO END
         DROP  RPREFIX                  DROP TCAM BFR BASE REG
         USING IEDQPRF,RWRK3            EST TCAM BFR BASE REG
         SPACE 1
TSIN0320 EQU   *
         CLC   PRFLINK,AVTFZERO         IS THIS THE LAST BFR IN QUEUE
         BE    TSIN0380                 BRANCH IF YES
         L     RWK15,PRFLINK-K1         GET ADDR OF NEXT BFR IN QUEUE
         DROP  RWRK3                    DROP RWRK3 AS TCAM BFR BASE REG
         USING IEDQPRF,RWK15            USE RWK15 AS TCAM BFR BASE REG
         L     RWRK2,PRFQCBA-K1         GET ADDR OF TSB FOR THIS BUFFER
         LA    RWRK2,K0(R0,RWRK2)       CLEAR HI ORDER BYTE OF REGISTER
         CLR   RTSB,RWRK2               IS THE NEXT BFR ALSO ASSOCIATED
*                                       WITH THE CURRENT TSB
         BNE   TSIN0380                 BRANCH IF NO
         LR    RWRK3,RWK15              POINT TO NEXT BFR IN QUEUE
         B     TSIN0320                 CONTINUE SCAN
         DROP  RWK15                    DROP RWK15 AS TCAM BFR BASE REG
         USING IEDQPRF,RWRK3            USE RWRK3 AS TCAM BFR BASE REG
         SPACE 1
TSIN0340 EQU   *
         CLC   PRFLINK,AVTFZERO         IS THIS LAST TCAM BFR IN QUEUE
         BE    TSIN0380                 BRANCH IF YES
         L     RWRK3,PRFLINK-K1         GET NEXT BFR IN QUEUE
         B     TSIN0340                 CONT SEARCH FOR LAST BFR IN Q
         SPACE 1
TSIN0380 EQU   *
         MVC   PRFLINK-IEDQPRF(K3,RPREFIX),PRFLINK  CHAIN NEW BFR TO
*                                       THE NEXT BFR ON THE WAIT QUEUE
         ST    RPREFIX,PRFLINK-K1       CHAIN NEW BFR TO THE PREVIOUS
*                                       BFR ON THE WAIT QUEUE
         SPACE 1
TSIN0400 EQU   *
         OI    QCBTSOF2,QCBBUFQ         IND BFRS IN QUEUE FOR THIS QCB
         DROP  RWRK3                    DROP RWRK3 AS TCAM BFR BASE REG
         USING IEDQPRF,RPREFIX          EST TCAM BFR BASE REG
         OI    PRFTIC,WAITQBFR          IND BFR WAS ON THE WAIT QUEUE
         TM    TIOCFLG,TIOCSYLW         IS THE SYSTEM IN LWAIT
         BO    TSIN0440                 BRANCH IF YES
         SPACE 2
********
******** CALL QTIP SVC TO PUT THE SYSTEM IN AN LWAIT CONDITION.
********
         QTIP  7,(RAVT)
         SPACE 1
TSIN0440 EQU   *
         OI    QCBTSOF1,QCBNOBUF        LOCK USER'S KEYBOARD TO INPUT
         B     TSIN2020                 BRANCH TO CHK BFR WAIT Q
         DROP  RPREFIX,RQCB             DROP BASE REGISTERS
         SPACE 2
********
******** TURN OFF TSINPUT'S POST BIT
********
TSIN2000 EQU   *
         USING IEDQTSI,RQCB             USE RQCB AS TSINPUT'S QCB BASE
         NI    TSIFLAG,OFF-TSIPOST      TURN OFF TSINPUT'S POST BIT
         DROP  RQCB                     DROP RQCB AS TSINPUT'S QCB BASE
         SPACE 2
********
******** DETERMINE IF ANY TCAM BUFFERS ARE CHAINED TO THE TCAM BUFFER
******** WAIT QUEUE.  IF SO, AND IF TS BUFFERS ARE NOW AVAILABLE,
******** REMOVE THE TCAM BUFFERS ONE AT A TIME IN FIFO ORDER FROM THE
******** WAIT QUEUE IN ORDER TO PROCESS THEM.
********
TSIN2020 EQU   *
         USING IEDQTSI,RWRK8            USE RWRK8 AS TSINPUT'S QCB BASE
         L     RWRK8,AVTTSOPT           GET ADDR OF TSINPUT'S QCB
         LA    RWRK8,TSIBUFQ            ADDR OF BFR WAIT QUEUE
         DROP  RWRK8                    DROP TSINPUT'S BASE REG
         SPACE 1
TSIN2022 EQU   *
         USING IEDQPRF,RPREFIX          USE PREFIX AS TCAM BFR BASE
         L     RPREFIX,K0(R0,RWRK8)     GET NEXT BFR ON QUEUE
         LA    RPREFIX,K0(R0,RPREFIX)   CLR HI-ORDER BYTE OF REG
         LTR   RPREFIX,RPREFIX          ANY MORE BFRS ON QUEUE
         BZ    TSIN2040                 BRANCH IF NO MORE
         TM    AVTBIT3,AVTTSAB          DID TSO ABEND            A44839
         BNO   TSIN2023                 GET TSO ADDR IF NO       A44839
         L     RWRK2,PRFLINK-K1         GET NEXT BFR ON QUEUE    A44839
         LA    RWRK2,K0(R0,RWRK2)       CLR HI-ORDER BYTE OF REG A44839
         ST    RWRK2,K0(R0,RWRK8)       RE-CHAIN BFR WAIT QUEUE  A44839
         BAL   RETRN,TSIN4000           GO TO RETURN BUFFER      A44839
         B     TSIN2022                 CONTINUE SCAN            A44839
TSIN2023 EQU   *                                                 A44839
         LTR   RTIOC,RTIOC              RPT EXIST? / TSO UP?    YA04775
         BZ    TSIN2050                 NO, RETURN TO DISPATCH  YA04775
         L     RTSB,PRFQCBA-K1          GET TSB ADDRESS
         TM    TSBFLG1,TSBIFLSH         IS TCLEARQ IN PROGRESS
         BO    TSIN2026                 BRANCH IF YES
         CLC   TIOCNFBF,AVTFZERO        ARE THERE ANY FREE TS BUFFERS
         LA    RETRN,TSIN0052           SET RETURN TO PROC BFR
         BNE   TSIN2032                 BRANCH IF ANY FREE BFRS
         SPACE 2
********
******** FIND THE NEXT BUFFER ON THE WAIT QUEUE WHICH IS NOT ASSOCIATED
******** WITH THE CURRENT BUFFER.
********
TSIN2024 EQU   *
         L     RWRK2,PRFLINK-K1         GET ADDR OF NEXT BFR IN QUEUE
         CLC   PRFQCBA,K1(RWRK2)        IS NEXT BFR ASSOCIATED WITH THE
*                                       SAME TSB AS BFR JUST REMOVED
         LA    RWRK8,PRFLINK-K1         SAVE PTR TO LINK FIELD
         BNE   TSIN2022                 BRANCH IF NOT
         LR    RPREFIX,RWRK2            UPDATE CURRENT BFR PTR
         B     TSIN2024                 BRANCH TO CONTINUE SCAN
         SPACE 2
********
******** IF INPUT QUEUE FLUSHING HAS OCCURRED, RETURN THIS TCAM BUFFER.
******** IF THE TCAM BUFFER IS THE LAST OF THE MESSAGE, TERMINATE INPUT
******** QUEUE FLUSHING AND RETURN THE BUFFER.
********
TSIN2026 EQU   *
         BAL   RETRN,TSIN2032           BR TO REMOVE THIS BUFFER
         SPACE 1
TSIN2028 EQU   *
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST BFR OF MESSAGE
         BO    TSIN2030                 NO, RETURN TCAM BFR
         SPACE 2
********
******** CALL QTIP SVC TO TERMINATE TCLEARQ INPUT PROCESSING.
********
         QTIP  5,(RAVT)
         SPACE 1
TSIN2030 EQU   *
         BAL   RETRN,TSIN4000           RETURN TCAM BUFFER
         B     TSIN2022                 BRANCH TO CONTINUE SCAN
         SPACE 2
********
******** THE FOLLOWING SUBROUTINE IS USED TO REMOVE A TCAM BUFFER FROM
******** THE TCAM BUFFER WAIT QUEUE.
********
TSIN2032 EQU   *
         USING IEDQQCB,RQCB             EST TERM DEST QCB BASE
         LR    RWK11,RETRN              SAVE RETURN ADDRESS    @G36XRYP
         LH    RPARM,TSBASRCE           GET TNT INDEX          @G36XRYP
         L     RNTRE,AVTRNMPT           GET ADDRESS TNT CODE   @G36XRYP
         BALR  RETRN,RNTRE              GET TTE ADDRESS        @G36XRYP
         USING IEDQTRM,RPARM            TTE ADDRESSABILITY     @G36XRYP
         L     RQCB,TRMDESTQ-K1         GET QCB ADDRESS        @G36XRYP
         ST    RQCB,AVTSAVE2+K64        SAVE QCB FOR QTIP 9    @G36XRYP
         DROP  RPARM                                           @G36XRYP
         LR    RETRN,RWK11              RESTORE RETURN ADDRESS @G36XRYP
         L     RWRK2,PRFLINK-K1         GET NEXT BFR ON QUEUE
         LA    RWRK2,K0(R0,RWRK2)       CLR HI-ORDER BYTE OF REG
         ST    RWRK2,K0(R0,RWRK8)       RE-CHAIN BFR WAIT QUEUE
         LTR   RWRK2,RWRK2              ANY MORE BFRS ON QUEUE
         BZ    TSIN2034                 BRANCH IF NO MORE
         CLC   PRFQCBA,PRFQCBA-IEDQPRF(RWRK2) IS THE NEXT BFR ON
*                                       THE QUEUE PART OF THIS TCAM MSG
         BCR   EQUAL,RETRN              RETURN TO CALLER IF YES
         SPACE 1
TSIN2034 EQU   *
         NI    QCBTSOF2,OFF-QCBBUFQ     INDICATE NO MORE BUFFERS
*                                       ON WAIT QUEUE FOR THIS QCB
         BR    RETRN                    RETURN TO CALLER
         DROP  RPREFIX,RQCB             DROP BASE REGISTERS
         SPACE 2
********
******** DETERMINE IF ENOUGH TS BUFFERS ARE AVAILABLE TO REMOVE THE
******** SYSTEM FROM LWAIT.  IS SO, REMOVE ANY TSB'S WHICH MAY BE ON
******** THE TSB WAIT QUEUE AND UNLOCK THE ASSOCIATED TERMINAL KEYBOARD
******** TO ALLOW ANOTHER READ TO BE ISSUED.
********
TSIN2040 EQU   *
         TM    AVTBIT3,AVTTSAB          DID TSO ABEND            A44839
         BO    TSIN2050                 RETURN CONTROL TO TCAM   A44839
*                                       DISPATCHER IF YES
         LTR   RTIOC,RTIOC              RPT EXIST? / TSO UP?    YA04775
         BZ    TSIN2050                 NO,RETURN TO DISPATCHER YA04775
         TM    TIOCFLG,TIOCSYLW         IS THE SYSTEM IN LWAIT
         BZ    TSIN2050                 BRANCH IF NO
         SR    RWRK2,RWRK2              CLEAR REGISTER          YA00161
         CH    RWRK2,TIOCNFBF           ANY FREE BUFFERS AT ALL YA00161
         BE    TSIN2050                 NO, DON'T REMOVE LWAIT  YA00161
         CLC   TIOCNFBF,TIOCUSLW        ENOUGH FREE TS BFRS TO REMOVE
*                                       SYSTEM LWAIT CONDITION
         BL    TSIN2050                 BRANCH IF NO
         SPACE 2
********
******** CALL QTIP TO REMOVE THE SYSTEM FROM LWAIT
********
         QTIP  6,(RAVT)
         SPACE 2
********
******** RETURN CONTROL TO DSPCHAIN WITHIN THE TCAM DISPATCHER.  ALSO
******** RETURN ANY FREE TCAM BUFFERS AND/OR ANY QCBS WAITING TO BE
******** POSTED.
********
TSIN2050 EQU   *
         USING IEDQDISP,RDISP           TCAM DISPATCHER BASE REGISTER
         L     RDISP,AVTSAVE2+K68       RESTORE TCAM DISPATCHER ADDRESS
         L     RPARM,AVTDOUBL           GET QCB AND/OR TCAM BFR ADDR
         BAL   RETRN,DSPCHAIN           RETURN TO TCAM DISP    @G36XRYP
         DROP  RDISP                    DROP TCAM DISPATCHER BASE REG
         SPACE 2
********
******** PLACE TCAM BUFFER ON RETURN QUEUE.  THIS QUEUE IS A DOUBLE
******** WORD WORK AREA LOCATED AT AVTDOUBL.  ALL BASIC UNITS PLACED ON
******** THIS QUEUE ARE CHAINED TOGETHER AS ONE BUFFER VIA THE TIC
******** FIELD.  THE FIRST BASIC UNIT PLACED ON THIS QUEUE WILL BE THE
******** BUFFER HEADER FOR ALL BASIC UNITS BEING RETURNED.  IF ADDING
******** A BUFFER TO THE LAST BUFFER ALREADY ON THIS QUEUE WOULD CAUSE
******** THE ONE BYTE BASIC UNIT COUNT FIELD TO OVERFLOW, ANOTHER
******** BUFFER HEADER WILL BE ADDED TO THE END OF THE QUEUE AND
******** CHAINNING WILL CONTINUE WITH THIS BUFFER.  THIS QUEUE MAY ALSO
******** CONTAIN ONE OR MORE LCB'S OR QCB'S WHICH ARE TO BE TPOSTED TO
******** THEMSELVES.  THE LCB'S, QCB'S, AND THE TCAM HEADERS ARE
******** CHAINED TOGETHER VIA THEIR LINK FIELDS.  THE TCAM HEADERS, IF
******** PRESENT, WILL ALWAYS BE THE LAST ELEMENTS IN THIS QUEUE.
******** THE FIRST WORD OF AVTDOUBL WILL POINT TO THIS CHAIN.  THE
******** SECOND WORD OF AVTDOUBL WILL POINT TO THE LAST BASIC UNIT ON
******** THE QUEUE.
********
TSIN4000 EQU   *
         USING IEDQPRF,RPREFIX          USE RPREFIX AS TCAM BFR BASE
         XC    PRFLINK,PRFLINK          CLEAR BUFFER LINK FIELD
         SR    RWRK2,RWRK2              CLEAR REGISTER
         IC    RWRK2,PRFNBUNT           NO. OF BASIC UNITS TO RETURN
         L     RWK15,AVTDOUBL           GET FIRST ELEMENT ON RETURN Q
         LTR   RWK15,RWK15              ANY ELEMENTS ON RETURN QUEUE
         BZ    TSIN4010                 BRANCH IF NONE
         SPACE 1
TSIN4002 EQU   *
         CLC   PRFLINK-IEDQPRF(K3,RWK15),AVTFZERO  IS THIS ELEMENT THE
*                                       LAST ELEMENT IN THE LINK CHAIN
         BE    TSIN4004                 BRANCH IF YES
         L     RWK15,K4(R0,RWK15)       GET ADDR OF NEXT ELEMENT
         B     TSIN4002                 BRANCH TO CONTINUE SEARCH
         SPACE 1
TSIN4004 EQU   *
         CLC   AVTDOUBL+K4(K4),AVTFZERO  ANY BASIC UNITS ON RETRN QUEUE
         BE    TSIN4006                 BRANCH IF NONE
         DROP  RPREFIX                  DROP RPREFIX AS PREFIX BASE REG
         USING IEDQPRF,RWK15            USE RWK15 AS PREFIX BASE REG
         SR    RWRKZ,RWRKZ              CLEAR REGISTER
         IC    RWRKZ,PRFNBUNT           GET NO. OF BASIC UNITS ON QUEUE
         ALR   RWRKZ,RWRK2              UP COUNT BY NO. BEING RETURNED
         CH    RWRKZ,C255               CAN THESE BASIC UNITS BE ADDED
*                                       TO HDR BFR ON THE RETURN QUEUE
         BH    TSIN4005                 BR IF NO TO ADD ANOTHER HDR BFR
         STC   RWRKZ,PRFNBUNT           STORE UPDATED COUNT IN HDR
         L     RWK15,AVTDOUBL+K4        ADDR OF LAST BASIC UNIT ON Q
         ST    RPREFIX,PRFTIC           PUT RETURNED BASIC UNITS ON Q
         B     TSIN4020                 BR TO COMPLETE CHAIN
         SPACE 1
TSIN4005 EQU   *
         ST    RPREFIX,PRFLINK-K1       CHAIN THIS HDR TO LAST ON QUEUE
         MVI   PRFPRI,PRISBPCI          RESTORE BUFFER PRIORITY
         B     TSIN4008                 BRANCH TO COMPLETE CHAIN
         SPACE 1
TSIN4006 EQU   *
         DROP  RWK15                    DROP RWK15 AS TCAM BFR BASE REG
         USING IEDQQCB,RWK15            USE RWK15 AS QCB BASE REG
         IC    RWRKZ,QCBPRI             PICK UP ELEMENT PRIORITY
         SLL   RWRKZ,K24                LEFT ADJUST PRIORITY
         LA    RPREFIX,K0(R0,RPREFIX)   CLEAR HI-ORDER BYTE OF REGISTER
         OR    RPREFIX,RWRKZ            RESTORE PRIORITY
         ST    RPREFIX,QCBLINK-K1       CHAIN HDR TO LAST QCB OR LCB
         SPACE 1
TSIN4008 EQU   *
         DROP  RWK15                    DROP RWK15 AS PREFIX BASE REG
         USING IEDQPRF,RPREFIX          USE RPREFIX AS PREFIX BASE REG
         LA    RWK15,AVTBFRTB           GET BFR RETURN QCB ADDRESS
         ST    RWK15,PRFQCBA-K1         PUT BFR RETURN QCB ADDR IN HDR
         MVI   PRFPRI,PRISBPCI          PUT BFR PRIORITY IN HDR BFR
         B     TSIN4020                 BR TO COMPLETE CHAIN
         SPACE 1
TSIN4010 EQU   *
         ST    RPREFIX,AVTDOUBL         PUT BFR ON RETURN QUEUE
         B     TSIN4008                 BR TO PUT TCAM HEADER ON QUEUE
         SPACE 1
TSIN4030 EQU   *
         L     RPREFIX,PRFTIC           NEXT BASIC UNIT BEING RETURNED
         SPACE 1
TSIN4020 EQU   *
         BCT   RWRK2,TSIN4030           SEARCH FOR LAST BASIC UNIT ON Q
         ST    RPREFIX,AVTDOUBL+K4      UPDATE LAST IN QUEUE POINTER
         XC    PRFTIC,PRFTIC            ZERO TIC FLD OF LAST BASIC UNIT
         BR    RETRN                    RETURN TO CALLER
         DROP  RPREFIX,RTSB,RTIOC,RAVT  DROP CONTROL BLOCK BASE REGS
         EJECT
***********************************************************************
********                                                       ********
******** CONSTANTS                                             ********
********                                                       ********
***********************************************************************
         SPACE 1
MOVEPRFX MVC   K0(K0,RBUADR),K0(RPREFIX)  MOVE OLD BFR PREFIX    S22029
*                                       INTO NEW 1ST BASIC UNIT
C255     DC    H'255'                   CONSTANT 255 USED TO CHECK FOR
*                                       BASIC UNIT COUNT OVERFLOW
CC3270L  DC    H'3'                     CONSTANT USED TO CHECK   S22028
*                                       3270 CONTROL CHAR LENGTH
PATCH    DC    10F'0'                   PATCH AREA             @YA11732
         SPACE 3
***********************************************************************
********                                                       ********
******** DSECTS                                                ********
********                                                       ********
***********************************************************************
         SPACE 1
         TTCXD
********
******** AVT - ADDRESS VECTOR TABLE
********
         SPACE 1
         TAVTD
         EJECT
********
******** TIOCBUF - TIOC BUFFER FORMAT
********
         SPACE 1
         IKJTIOCB
         EJECT
********
******** CVT - COMMUNICATIONS VECTOR TABLE
********
         SPACE 1
CVT      DSECT
         CVT
         EJECT
********
******** TCAM DISPATCHER
********
         SPACE 1
         TDISPD
         EJECT
********
******** LCB - LINE CONTROL BLOCK
********
         SPACE 1
         TLCBD
         EJECT
********
******** TCAM BUFFER PREFIX
********
         SPACE 1
         TPRFD
         EJECT
********
******** TCAM BUFFER PRIORITIES
********
         SPACE 1
         TPRIOR
         EJECT
********
******** QCB - DESTINATION QUEUE ELEMENT CONTROL BLOCK
********
         SPACE 1
         TQCBD
         EJECT
********
******** SCB - STATION CONTROL BLOCK
********
         SPACE 1
         TSCBD
         EJECT
********
******** TIOCRPT - TIOC REFERENCE POINTER TABLE
********
         SPACE 1
         IKJTIOCP
         EJECT
********
******** TERMINAL ENTRY TABLE
********
         SPACE 1
         TTRMD
         EJECT
********
******** TSB - TERMINAL STATUS BLOCK
********
         SPACE 1
         IKJTSB
         EJECT
********
******** ASCB - ADDRESS SPACE CONTROL BLOCK
********
         SPACE 1
         IHAASCB
         EJECT
********
******** DESTINATION QCB FOR TSINPUT
********
         SPACE 1
         TTSID
         SPACE 1
         IHAASVT                                             @ZM46757
         END
