DQGT     TITLE     '''IEDQGT''    -   TRANSPARENT CCW BUILDER'
IEDQGT   CSECT
*A-000000-999999                                               @X31X8I0
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A115000,149000,164100-164300,508100,458000                      S21903
*C022000,048000,050000,072000,074000,148000,150000,198000,228000,S21903
*C278000,284000,286000,304000,306000,392000,400000,434000,440000,S21903
*C442000,458000,462000,474000,478000,486000,498000,508000,512000,S21903
*C520000,528000,584500,549000,564000,572000,590000,602000,604000,S21903
*C612000,616000,626000,630000,640000,648000,672000,674000,702000,S21903
*C720000,736000,756000,768000,772000,804000,806000,820000,832000,S21903
*C850000,864000,870000,884000,896000,924000,928000               S21903
*A427400                                                        SA50219
*A468000                                                         A44884
*A870000                                                         A50198
*C872000,878000                                                  A50198
*A166000                                                        SA53639
*C216000                                                        SA53639
*A42650-426350                                                   S99238
*C216000                                                         S99238
*A186000,426600,966000                                          SA61750
*A202000,43800,588000,780000,786000,796000,838000               SA63953
*A078400-079600,083000,098600-099200,186100-186600,186700,186800,X01004
*A411000,718100-719900,720200-721800,722200-723800,724200-725800,X01004
*A726600-727800                                                  X01004
*C078000,082000,098000,160000,186000,314000,410000,412000,718000,X01004
*C722000,724000,726000,964000                                    X01004
*D260000,316000,372000,720000,728000-730000                      X01004
*A186650,186720-186760,191500-195000,234600-235200,310100-311800,Y01004
*A331000,358100-359000,392500-393500,478300-479500,519000,521000,Y01004
*A528300-529500,617000,619000,621000,646600-647200,718650,       Y01004
*A806100-807900,833000,953000,955000,957000,959000,961000,963000,Y01004
*A965000                                                         Y01004
*C191000,198000,214000,234000,290000-292000,310000,392000,478000,Y01004
*C518000,520000,528000,532000-538000,556000,616000,618000,620000,Y01004
*C622000,650000,698000,719000,719700-719850,720300-720600,       Y01004
*C721100-726000,726900-727700,732000,748000-750000,806000,       Y01004
*C844000-846000,852000                                           Y01004
*D206000,400000-404000,500000-508000,522000,632000-640000,       Y01004
*D652000-654000,700000-702000,752000,758000-772000,854000-928000 Y01004
*D427200-427400,484000                                          SA63953
*A396000                                                        SA64671
*C396000                                                        SA64671
*C718960-719020,C720800-720940,A721010,A725810-725980            Y05331
*A079400,191000,718160-720760,726800-730800,850600-851200        Y02027
*C079200,079600                                                  Y02027
*D191000-195200,718160-721300,726800-727400                      Y02027
         SPACE 3
*A270000                                                       @XA03967
*A723300,727000,846000                                          OX01433
*A302000                                                       @SA73588
*D303000,C276000                                               @OS76520
*A731600                                                       @OY12651
*C396000,D396600-397500,C426300,A438600,A564000                @OY12980
*C726800,D729200,A731600                                       @OZ11198
*A004000                                                       @Z30X8IJ
*C015200,116000,124000,168000-184000,186200-186240             @Z30X8IJ
*C210000-212000,220000,272000,294000,366000,468500,470000      @Z30X8IJ
*C546000-548500,556000-562000                                  @Z30X8IJ
*D565000-569000,C396000,C426300                                @OY15018
*D396200-396400                                                @OZ18772
*C731800-731840                                                @OY16444
*A731920                                                       @OY16444
*A496000,A558000,A723760,A797000                               @OZ25095
***********************************************************************
*                                                                     *
*TITLE -- 'IEDQGT'    TRANSPARENT TRANSMISSION CCW BUILDER            *
*                                                                     *
*  MODULE NAME = IEDQGT                                               *
*                                                                     *
*  DESCRIPTIVE NAME = TRANSPARENT TRANSMISSION CCW BUIDLER            *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  CHANGE LEVEL 8                                     @Z30X8IJ
*                                                                     *
*FUNCTION -- TO BUILD THE NECESSARY CCWS IN EACH BUFFER UNIT TO       *
*   SEND TRANSPARENT DATA IN TRANSPARENT MODE IN THE CORRECT BLOCK    *
*   SIZE TO A TERMINAL AND TO CONSTRUCT IN THE LCB A SEQUENCE TO      *
*   WRITE DLE/ETB AND RD RESP.                                        *
*                                                                     *
*ENTRY POINT -- IEDQGT - AS A RESULT OF THE OUTBUF MACRO IN MH        *
*   CALLING SEQUENCE -               L    R6,BUFFERAD                 *
*                                    LA   R15,IEDQGT                  *
*                                    BALR R14,R15                     *
*                                                                     *
*INPUT -- A BUFFER ADDRESS IN R6, BLOCK SIZE IN SCBBKFCT+1 (HALF WORD)*
*   AND AVTSAVE2 IN R 13.                                             *
*                                                                     *
*OUTPUT -- EACH UNIT WILL HAVE A CCW TO WRITE OUT THE FIRST PORTION   *
*   OF THE UNIT TO BE CONTAINED IN THE BLOCK THAT INCLUDES THAT       *
*   UNIT. THE UNIT CONTAINING THE LAST BYTE OF DATA OF THE FIRST      *
*   BLOCK IN THIS TRANSMISSION WILL TIC TO THE LCB CHANNEL PROGRAM    *
*   AREA TO THE CCW TO WRITE THE DLE/ETB SEQUENCE.  THE LCBCPA        *
*   WILL CONTAIN THE NUMBER OF BYTES LEFT TO WRITE IN THIS UNIT,      *
*   THE ADDRESS OF THE UNIT AND THE VALUE FORMERLY IN THAT UNIT'S     *
*   TIC FIELD.  IF THIS IS NOT THE FIRST BLOCK THE UNIT CONTAINING    *
*   THE  LAST BYTE OF DATA FOR THE CURRENT BLOCK WILL HAVE A FLAG     *
*   INDICATING THIS AND THE TIC OP CODE AREA WILL CONTAIN THE         *
*   NUMBER OF BYTES LEFT TO BE WRITTEN FROM THIS UNIT.  IF AT READ    *
*   RESPONSE TIME ALL UNITS TO WRITE OUT THE NEXT BLOCK ARE NOT       *
*   AVAILABLE, THE CONDITION WILL BE TREATED LIKE A CHANNEL PROGRAM   *
*   CHECK AND CHANNEL WILL BE MADE TO EXECUTE A WRITE SYNC LOOP       *
*   WRITING SYNC CHARACTERS TO THE TERMINAL.  WHEN THE REQUIRED       *
*   UNITS ARRIVE, NORMAL TRANSMISSION WILL BE RESUMED BY CAUSING      *
*   THE WRSYNC LOOP TO TIC TO A WRITE DLE/STX SEQUENCE AND TIC TO     *
*   THE NEXT UNIT TO BE TRANSMITTED.  FOR OS/VS, WHEN ALL UNITS RE-   *
*   QUIRED TO WRITE THE NEXT BLOCK ARE AVAILABLE, THE DATA AND TIC    *
*   ADDRESSES IN ALL APPLICABLE CCWS IN THE LCB AND THE UNITS ARE     *
*   CONVERTED TO REAL BEFORE EXITTING TO THE DISPATCHER.  THIS   Y02027
*   OPERATION IS SERIALIZED BY ISSUING SETLOCK.  OTHERWISE, THESEY02027
*   ADDRESSES REMAIN VIRTUAL.                                    Y02027
*                                                                     *
*                                                                     *
*EXITS-NORMAL -- TO THE CALLING ROUTINE VIA BR 14                     *
*                                                                     *
*EXITS-ERROR -- NONE                                                  *
*                                                                     *
*TABLES/WORK AREAS -- LCB, SCB, PREFIX, CCW, DCB, AVT.                *
*                                                                     *
*ATTRIBUTES -- REUSABLE,REFRESHABLE,RESIDENT,SUPERVISOR STATE,   Y02027
*   AND SUPERVISOR MODE, SETLOCK, OTHERWISE, ENABLED AND PROBLEM Y02027
*   PROGRAM MODE.                                                     *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER      *
*   SET.                                                              *
*                                                                     *
***********************************************************************
*                                                                     *
         EJECT
*        REGISTER EQUATES                                             *
***********************************************************************
R0       EQU   0                        WORK REGISTER          @Z30X8IJ
RUNIT    EQU   1                        NEXT UNIT ADDR
RDCB     EQU   2                        DCB ADDR
RSCB     EQU   3                        SCB ADDR
RLCB     EQU   4                        LCB ADDRESS            @Z30X8IJ
RSIZE    EQU   5                        SIZE OF BFR
RPREFIX  EQU   6                        BUFFER ADDRESS
RKEY     EQU   7                        LENGTH REMAINING IN UNIT
R8       EQU   8                        WORK REG
RETB     EQU   9                        COUNT REMAINING IN ETB SIZE
R10      EQU   10                       WORK REG
R11      EQU   11                       WORK REG
R12      EQU   12                       WORK REG
RAVT     EQU   13                       AVT BASE
R14      EQU   14                       RETURN REG
RBASE    EQU   15                       BASE REG
***********************************************************************
*        ESTABLISH BASE ADDRESSABILITY                                *
***********************************************************************
         USING IHADCB,RDCB
         USING IEDQLCB,RLCB
         USING IEDQSCB,RSCB
         USING IEDQPRF,RPREFIX
         USING AVTSAVE2,RAVT            AVT ADDRESSABILITY.      X01004
         USING    IEDQDISP,R11
         USING *,RBASE
***********************************************************************
*        MISCELLANEOUS EQUATES                                        *
***********************************************************************
XXXUSED  EQU   X'20'
XXXPCISD EQU   X'51'                    PCI=X CODED             SA53639
ETBCH    EQU   8                        OFFSET TO ETB          @Z30X8IJ
DLESTXCH EQU   10                       OFFSET TO THE TABLE    @Z30X8IJ
ETXCH    EQU   ETBCH+1                  OFFSET TO DLE/ETX      @Z30X8IJ
TWO      EQU   2                        CONSTANT VALUE PRINT   @Z30X8IJ
NINE     EQU   9                        CONSTANT VALUE 9       @Z30X8IJ
DONE     EQU   X'01'                    LAST BIT INDICATOR     @Z30X8IJ
FLAGETB  EQU   X'20'                    ETB FLAG               @Z30X8IJ
ETBDONE  EQU   X'02'                    ETB FINISHED           @Z30X8IJ
LAST     EQU   X'02'                    LAST UNIT INDICATOR    @Z30X8IJ
TICCHECK EQU   X'07'                    INVALID TIC INDICATOR,   X01004
*                                       OR FLAG INDICATING A     X01004
*                                       NON-TIC OP CODE.         X01004
EIGHT    EQU   8                        LENGTH OF A CCW.         X01004
SEVEN    EQU   7                        3-BYTE ICM MASK.         X01004
ELEVEN   EQU   11                       CONSTANT               @Z30X8IJ
TWELVE   EQU   12                       CONSTANT VALUE 12      @Z30X8IJ
ONE      EQU   1                        CONSTANT.                Y01004
THREE    EQU   3                        CONSTANT.                Y01004
FOUR     EQU   4                        CONSTANT.                Y01004
ZERO     EQU   0                        CONSTANT                 X01004
X20      EQU   X'20'                    TPROCESS ENTRY FLAG     SA61750
         EJECT
IEDQGT   IEDHJN GTSTART
         L     RLCB,PRFLCB-1            ADDR OF LCB
*        BUFFER ADDRESS IS IN REGISTER 6 WHEN ENTERED.           Y01004
         L     RSCB,LCBSCBA-1           SCB ADDR
         L     RDCB,LCBDCBPT            DCB ADDR
         LA    RDCB,0(RDCB)              FORCE POSITIVE         SA63953
         SR    R12,R12                  CLEAR FOR IC'S
*        AVTDOUBL FIRST WORD IS A WORK AREA TO BUILD FLAGS FOR CCWS
         MVI   AVTDOUBL,CCWCD+CCWSLI    MOVE CHAIN DATA AND    @Z30X8IJ
         MVI   AVTDOUBL+ONE,CCWCD+CCWSLI  SUPPRESS INCORRECT   @Z30X8IJ
*                                         LENGTH BITS          @Z30X8IJ
         MVC   AVTDOUBL+TWO(TWO),AVTFZERO  SET NO-PCI FLAGS.     Y01004
         TM    DCBPCI,XXXPCISD          PCI ON SEND SPEC.       SA53639
         BZ    NOSET                    BR NO
         OI    AVTDOUBL,CCWPCI          SET PCI BIT            @Z30X8IJ
NOSET    EQU   *
         NC    LCBLSPCI(3),LCBLSPCI     FIRST TIME
         BZ    FIRSTONE                 BR IF FIRST
         MVI   AVTDOUBL+3,X'FF'         SET INDICATOR FOR 0 LSPCIS21903
         LH    RETB,LCBETB(RLCB)        SET ETB SIZE
         LTR   RETB,RETB                ANY LEFT
         BNZ   AROUND                   BRANCH IF SIZE NOT ZERO. Y01004
GETETB   EQU   *                                                 Y01004
         LH    RETB,SCBBKFCT+ONE        GET ETB SIZE FROM SCB.   Y01004
AROUND   EQU   *
         LH    RSIZE,PRFSIZE            SIZE OF BFR
         LH    RKEY,AVTKEYLE            SIZE OF EACH UNIT
         LR    RUNIT,RPREFIX            INITIALIZE
         IC    R12,PRFNBUNT             NO OF UNITS THIS BFR
         SR    R11,R11                  CLEAR R11
         IC    R11,LCBISZE              IDLE CHARACTERS IN THIS BFR
         LA    R11,PRFSTXT-PRFSUNIT(R11)     TXT SIZE + IDLES
         TM    PRFSTAT1,PRFNHDRN        THIS A HDR
         BO    SETSIZE                  BR NO
         LA    R11,PRFSHDR-PRFSTXT(R11)  RESET FOR IDLES + HDR
SETSIZE  EQU   *
         TM    PRFSTAT1,PRFCNCLN        SPECIAL ETB CHECK BFR
         BNO   OKETBRT                  BR NO
         OI    LCBCPA+12,XXXUSED        FORCE CHNL PGM CK
         LH    R11,SCBEOB               COUNT TO EOB THIS BFR
         CLR   R11,RKEY                 IS IT IN FIRST UNIT
         BL    OKETBRT                  BR IF IN FIRST UNIT
SET      EQU   *
         MVC   PRFOPCDE-IEDQPRF(8,RUNIT),LCBCPA SET DUMMY CCW  @XA03967
         L     RETB,DCBSCTAD-1          SCT ADDRESS            @XA03967
         SR    R8,R8                    EOT INDEX              @XA03967
         ICM   R8,ONE,THREE(RETB)       EOT OFFSET             @XA03967
         LA    R8,ONE(R8,RETB)          EOT SEQUENCE           @XA03967
         STCM  R8,SEVEN,PRFIOADR-IEDQPRF(RUNIT)                @XA03967
         NI    PRFFLAGS-IEDQPRF(RUNIT),AVTEFF-CCWCC RESET CHAIN@XA03967
         MVI   PRFTIC-IEDQPRF(RUNIT),CCWTIC  SET TIC IN BFR    @Z30X8IJ
         CR    R11,RKEY                 IS IT IN THIS UNIT
         BL    OUT                      BRANCH IF IN THIS ONE  @OS76520
         BCTR  R12,0                    DECREMENT BUFFER COUNT   S21903
         SR    RSIZE,RKEY               DECR SIZE BY 1 UNIT
         SR    R11,RKEY                DECR CNT TO ETB
         L     RUNIT,PRFTIC-IEDQPRF(RUNIT) NEXT UNIT             S21903
         B     SET                      BRANCH TO CHECK NEXT UNITS21903
OUT      EQU   *
         MVI   AVTDOUBL+3,X'FF'         FORCE NOT FIRST TIME
         ST    RUNIT,LCBWRSTX+8(RLCB)   SET ADDR OF UNIT TO WRITE
         MVI   LCBWRSTX+8(RLCB),CCWTIC  SET TIC OP CODE
         ST    RUNIT,LCBNEXT(RLCB)      SET ADDR OF NEXT UNIT  @Z30X8IJ
*                                         TO BE SENT           @Z30X8IJ
         LH    RETB,SCBBKFCT+1          ETB COUNT
OKETBRT  EQU   *
         SR    RSIZE,R11                ADJUST NO OF BYTES TO WR
         SR    RKEY,R11                 AND BYTES IN UNIT
         CLI   AVTDOUBL+3,X'FF'         INDICATOR SET            S21903
         BNE   CKWRETX1                 BRANCH TO CHECK SIZE     S21903
         TM    LCBCPA+12,XXXUSED        CHANL. PGM. CK.
         BNO   SETFLAGS                 BRANCH IF NO.            Y01004
CKWRETX1 EQU   *                                                 Y01004
         CR    RSIZE,RETB               IS DATA SIZE LARGER THAN Y01004
*                                       ETB SIZE                 Y01004
         BH    SETFLAGS                 BRANCH IF YES - NO STX   Y01004
*                                       SHOULD BE WRITTEN.       Y01004
         TM    PRFSTAT1,PRFNLSTN        IS THIS THE LAST BLOCK   Y01004
         BO    SETFLAGS                 BRANCH IF NO.            Y01004
* IF FIRST BLOCK IS ALSO LAST BLOCK, WRITE ETX INSTEAD OF ETB.   Y01004
         ST    R11,AVTDOUBL+FOUR        SAVE ETB SIZE.           Y01004
         L     R10,DCBSCTAD-ONE         ADDRESS OF SPECIAL       Y01004
*                                       CHARACTERS TABLE.        Y01004
         SR    R11,R11                  CLEAR FOR IC.            Y01004
         IC    R11,ETXCH(,R10)          GET OFFSET TO DLE/ETX.   Y01004
         LA    R11,ONE(R10,R11)         ADDRESS OF DLE/ETX.      Y01004
         ST    R11,LCBWRETB(,RLCB)      SET ADDRESS FOR WRITE.   Y01004
         MVI   LCBWRETB(RLCB),CCWWRITE  SET WRITE OP CODE.       Y01004
         OI    LCBWRETB+FOUR(RLCB),CCWSKIP  SET ON SKIP FLAG.    Y01004
         L     R11,AVTDOUBL+FOUR        RESTORE ETB SIZE.        Y01004
SETFLAGS EQU   *
         ICM   R8,TWO,AVTDOUBL          GET CCW FLAGS            X01004
         IC    R8,AVTDOUBL+2            PCI FLAGS OPTION
         LA    R11,AVTUMALN(R11,RUNIT)     ADDR FOR WRITE
BLDCCWS  EQU   *
         MVC   LCBWORK+1(3,RLCB),PRFTIC+1-IEDQPRF(RUNIT)
         ST    R11,PRFOPCDE-IEDQPRF(RUNIT)      CCW ADDR
         MVI   PRFOPCDE-IEDQPRF(RUNIT),CCWWRITE
         STH   R8,PRFFLAGS-IEDQPRF(RUNIT)   SET FLAGS
         MVI   PRFTIC-IEDQPRF(RUNIT),CCWTIC  SET TIC OP CODE.    Y01004
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*
*        THE CCW IN EACH UNIT MUST WRITE OUT THE SMALLEST OF 3
*        THINGS. -- SIZE OF DATA, SIZE OF ETB, OR UNIT LENGTH.
*
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
COMPARE  EQU   *
         CR    RETB,RKEY                IS ETB LESS THAN KEY
         BNH   CKSIZE                   BR YES - ETB LESS OR = TO KEY
         CR    RSIZE,RKEY               IS SIZE LESS THAN KEY
         BL    SETSIZE1                 BR IF SIZE IS LOW
         LR     R0,RKEY                 SET FOR STH
         SR    RETB,RKEY                DECR CTS FOR ETB
         SR    RSIZE,RKEY               AND SIZE
         B     COMMON                   EXECUTE COMMON CODE.     Y01004
CKSIZE   EQU   *                                                 Y01004
         CR    RETB,RSIZE               IS ETB SIZE LESS THAN    Y01004
*                                       DATA SIZE                Y01004
         BNH   SETETB                   BRANCH IF ETB SIZE IS    Y01004
*                                       LOW OR EQUAL.            Y01004
SETSIZE1 EQU   *                                                 Y01004
         LR    R0,RSIZE                 SET R0 FOR STH.          Y01004
         SR    RKEY,RSIZE               DECREMENT KEY SIZE.      Y01004
         SR    RETB,RSIZE               DECREMENT ETB SIZE.      Y01004
COMMON   EQU   *
         LTR   RDCB,RDCB                IS CCW TO BE BUILT
         BM    DECR                     BR NO
         STH   R0,PRFCOUNT-IEDQPRF(RUNIT)  STORE SIZE IN BUFFER@Z30X8IJ
DECR     EQU   *
         BCT   R12,NEXTUNIT             IS THERE A NEXT UNIT BR YES
         STH   RETB,LCBETB(RLCB)        SAVE ETB COUNT FOR NEXT BFR
         TM    PRFSTAT1,PRFNLSTN        LAST BFR
         BO    NOFLAG                   BR NO
*        SOME TERMINALS MUST HAVE EVEN BLK SIZE WRITTEN TO THEM
*        IN TRANSPARENT MODE
         LTR   RETB,RETB                IS BLKSIZE DEPLETED
         BZ    CONTINUE                 BR YES
         SR    RSIZE,RSIZE              ZERO FOR IC
         TM    PRFTIC-IEDQPRF(RUNIT),FLAGETB   ETB THIS BFR UNIT
         BZ    NOETB                    BRANCH IF NO.            Y01004
         IC    RSIZE,PRFOPCDE-IEDQPRF(,RUNIT)  ASSUME YES.       Y01004
         B     ETBTHERE                 GO CALCULATE START ADDR. Y01004
NOETB    EQU   *                                                 Y01004
         TM    PRFTIC+3-IEDQPRF(RUNIT),LAST   FLAGGED LAST
         BNO   NOTLAST                  YES-IT HAS BEEN LINKED @OY15018
         MVI   PRFOPCDE-IEDQPRF(RUNIT),AVTEZERO DLE ETX SIGNAL @OY15018
         MVI   PRFFLAGS-IEDQPRF(RUNIT),CCWSLI+CCWCD PCI OFF    @OY15018
         B     ETBTHERE                 GO CALC START ADDRESS  @OY15018
NOTLAST  EQU   *                                               @OY15018
         IC    RSIZE,LCBCOUNT(RLCB)     GET COUNT FROM LCB
ETBTHERE EQU   *
         LA    RKEY,AVTUMALN(RUNIT)     ADDR OF DATA START
         SR    R10,R10                  CLEAR FOR ICM            X01004
         ICM   R10,SEVEN,PRFIOADR-IEDQPRF(RUNIT) ADDR OF START   X01004
*                                                WRITE           X01004
         SR    R10,RKEY                 DATAT START - WRITE STATR
*        IS AMOUNT NOT INCLUDED IN CCW COUNT ( INCLUDES PRFX + IDLES
          AR   RSIZE,R10
         AH    RSIZE,PRFCOUNT-IEDQPRF(RUNIT)    TOTAL SIZE OF DATA
         LA    R8,AVTUMALN-1(RUNIT,RSIZE)   ADDR OF LAST DATA BYTE
         TM    SCBBSCFM,SCBNPDTR        DOES HE WANT PADDING     S99238
         BO    CONTINUE                 NO,CONTINUE            @OY15018
         SPACE
         CLI   0(R8),X'37'              IS IT AN EOT
         BNE   PADTEST                  BR NOT EOT
         LH    R10,PRFSRCE              SOURCE OFFSET           SA61750
         N     R10,AVTCLRHI             CLEAR HIGH HALF         SA61750
         BZ    SETBLANK                 BRANCH IF YES           SA61750
         ST    RUNIT,AVTDOUBL+4         SAVE REGISTER ONE       SA61750
         LR    RUNIT,R10                SOURCE OFFSET           SA61750
         LR    R10,RBASE                SAVE BASE REG           SA61750
         L     RBASE,AVTRNMPT           CONVERSION LOGIC        SA61750
         BALR  R14,RBASE                COMPUTE TNT ENTRY ADDR  SA61750
         LR    RBASE,R10                RESTORE BASE REGISTER   SA61750
         LR    R10,RUNIT                TNT ENTRY ADDRESS       SA61750
         L     RUNIT,AVTDOUBL+4         RESTORE REGISTER ONE    SA61750
         TM    TRMSTATE-IEDQTRM(R10),X20 PROCESS ENTRY          SA61750
         BO    PADTEST                  BRANCH IF YES           SA61750
SETBLANK EQU   *                                                SA61750
         MVI   0(R8),X'40'              BLANK OUT EOT
PADTEST  EQU   *
         CH    RETB,SCBBKFCT+1          ANY LEFT IN THIS BLK    SA50219
         BE    CONTINUE                 BR NO                   SA50219
CKBLK    EQU   *
         LH    RKEY,AVTKEYLE            GET KEYLENGTH
         SR    RKEY,RSIZE               DECR KEY BY AMT THERE
         CLR   RKEY,RETB                WILL ALL PADS FIT THIS UNIT
         BL    EXKEY                    BR NO
         LR    R10,RETB                 SET AMT TO MOVE
         MVI   PRFOPCDE-IEDQPRF(RUNIT),AVTEZERO                 SA63953
         MVI   PRFFLAGS-IEDQPRF(RUNIT),CCWSLI+CCWCD PCI OFF    @OY12980
*        SET NO MORE TO SEND                                    SA63953
         BAL   R14,MOVEIT               BRANCH TO INSERT PADS    S21903
         B     CONTINUE                 BRANCH TO CONTINUE TEST  S21903
MOVEIT   EQU   *
         LTR   R10,R10                  ANY TO MOVE
         BCR   8,R14                    NO RETURN
         LA    R8,AVTUMALN(RUNIT,RSIZE)  ADDR FIRST BYTE TO PAD
         MVI   0(R8),X'40'              SET BLANK FOR PAD
         BCT   R10,MOVEBLK              BR IF MORE THAN 1 BYTE
         LA    R10,1                    IF JUST 1 IT IS DONE ALREADY
         B     NOMOVE                   BRANCH                   S21903
*
MOVEBLK  EQU   *
         BCTR  R10,0                    DECREMENT COUNT          S21903
         EX    R10,MOVE                 MOVE IN PADS
         LA    R10,2(R10)               ADD 2 BACK
NOMOVE   EQU   *
         LR    R8,R10                   PUT SIZE INTO REG 8    @Z30X8IJ
         AH    R8,PRFSIZE               INCR SIZE BY NO. OF PADS A44884
         STH   R8,PRFSIZE               RESET PRFSIZE TO NEW NO. A44884
         SR    R8,R8                    CLEAR REGISTER 8       @Z30X8IJ
         TM    PRFTIC-IEDQPRF(RUNIT),FLAGETB    ETB THIS UNIT
         BO    SETTIC                   BR IF ETB TO SET TIC     S21903
         TM    PRFTIC+3-IEDQPRF(RUNIT),LAST      THIS LAST
         BO    LASTUNIT                 BRANCH IF YES.           Y01004
         IC    R8,LCBCOUNT(,RLCB)       GET REMAINING UNIT SIZE. Y01004
         AR    R10,R8                   CALCULATE NEW SIZE.      Y01004
         STC   R10,LCBCOUNT(,RLCB)      UPDATE SIZE IN LCB.      Y01004
         BR    R14                      RETURN.                  Y01004
LASTUNIT EQU   *                                                 Y01004
         AH    R10,PRFCOUNT-IEDQPRF(RUNIT)    GET NEW COUNT
         STC   R10,PRFCOUNT+1-IEDQPRF(RUNIT)   SET NEW COUNT
         TM    LCBCPA+12,XXXUSED        CHNL PGM CK
         BCR   14,R14                   BR NO TO RETURN
         TM    LCBCPA+12,ETBDONE        HAS AN ETB BEEN FOUND
         BCR   1,R14                    BR IF YES - NO CHANGES
         MVI   PRFOPCDE-IEDQPRF(RUNIT),CCWWRITE   SET OP CDE
         MVI   LCBCOUNT(RLCB),AVTEZERO  SET NO COUNT LEFT
         BR    R14                      RETURN                   S21903
MOVE     MVC   1(0,R8),0(R8)            PROPAGATE BLANKS
SETTIC   EQU   *
         IC    R8,PRFOPCDE-IEDQPRF(RUNIT)    SAVE SIZE
         AR    R10,R8                   FOR NEW SIZE LEFT
         STC   R10,PRFOPCDE-IEDQPRF(RUNIT)
         CLI   PRFOPCDE-IEDQPRF(RUNIT),AVTEZERO IS OP CODE 0?  @OZ25095
         BNER  R14                      BRANCH IF NO- RETURN   @OZ25095
         MVI   PRFFLAGS-IEDQPRF(RUNIT),CCWSLI+CCWCD PCI OFF    @OZ25095
         BR    R14                      RETURN                   S21903
*
EXKEY    EQU   *
         LR    R10,RKEY                 ANY TO MOVE              S21903
         BAL   R14,MOVEIT               MOVE REST OF UNIT
         SR    RETB,RKEY                DECR ETB COUNT
         SR    R8,R8                    CLEAR FOR ICM.           Y01004
         ICM   R8,SEVEN,AVTBFREB+ONE    GET BUFFER ADDRESS.      Y01004
         BZ    CONTINUE                 BRANCH IF NO BUFFERS ARE Y01004
*                                       AVAILABLE.               Y01004
         MVC   AVTBFREB+1(3),PRFLINK-IEDQPRF(R8)
         TM    PRFTIC+3-IEDQPRF(RUNIT),LAST
         BO    NEWTIC                   BRANCH IF LAST UNIT.     Y01004
         ST    R8,LCBNEXT(,RLCB)        SET ADDRESS OF NEXT UNIT Y01004
*                                       TO BE SENT.              Y01004
         MVI   PRFTIC+THREE-IEDQPRF(R8),LAST  SET NEW LAST UNIT. Y01004
         B     TICFIXED                 GO UPDATE UNIT COUNT.    Y01004
NEWTIC   EQU   *                                                 Y01004
         L     R10,PRFTIC-IEDQPRF(RUNIT)   SAVE TIC ADDR
         STCM  R8,SEVEN,PRFTIC+ONE-IEDQPRF(RUNIT)  SET NEW TIC   Y01004
*                                       ADDRESS IN UNIT.         Y01004
         STCM  R10,SEVEN,PRFTIC+ONE-IEDQPRF(R8)  SET TIC FOR NEW Y01004
*                                       UNIT.                    Y01004
TICFIXED EQU   *
         LR    RUNIT,R8                 NEW LAST UNIT ADDR
         IC    R8,PRFNBUNT              ADD TO UNIT COUNT
         LA    R8,ONE(R8)               INCREMENT UNIT COUNT   @Z30X8IJ
         STC   R8,PRFNBUNT              PUT COUNT IN BUFFER    @Z30X8IJ
         LH    R8,AVTAVFCT              GET AVAIL BFR COUNT    @Z30X8IJ
         BCTR  R8,R0                    DECREMENT THE COUNT      S21903
         STH   R8,AVTAVFCT              OF AVAILABLE BFRS
         XC    PRFFLAGS-IEDQPRF(4,RUNIT),PRFFLAGS-IEDQPRF(RUNIT)
         MVI   PRFFLAGS-IEDQPRF(RUNIT),CCWSLI+CCWCD   SET FLAGS
         LA    R8,AVTUMALN(RUNIT)       ADDR TO WRITE
         ST    R8,PRFIOADR-ONE-IEDQPRF(RUNIT)  PUT WRITE ADDR  @Z30X8IJ
*                                                IN BUFFER     @Z30X8IJ
         MVI   PRFOPCDE-IEDQPRF(RUNIT),AVTEZERO ZERO CMD FIELD @Z30X8IJ
         MVI   PRFFLAGS-IEDQPRF(RUNIT),CCWSLI+CCWCD PCI OFF    @OZ25095
         MVI   PRFTIC-IEDQPRF(RUNIT),CCWTIC  PUT TIC IN BUFFER @Z30X8IJ
         SR    RSIZE,RSIZE              CLEAR REGISTER 8       @Z30X8IJ
         B     CKBLK                    BRANCH TO CHECK BLOCK    S21903
CONTINUE EQU   *
         TM    PRFTIC-IEDQPRF(RUNIT),FLAGETB       SET ALREADY
         BO    NOFLAG                   BR YES
         OI    PRFTIC-IEDQPRF(RUNIT),FLAGETB
         TM    LCBCPA+12,XXXUSED        CHNL PGM CK
         BNO   NOSETA                   BR NO
         TM    LCBCPA+12,ETBDONE        HAS ETB BEEN DONE BEFORE
         BO    NOSETA                   BR YES
         LR    R0,RKEY                  SET REMAINING CT IN R0  SA63953
         BAL   R8,SETWRETB              BRANCH TO SET WRITE ETB  S21903
NOSETA   EQU   *
         NI    PRFFLAGS-IEDQPRF(RUNIT),X'FF'-CCWCD    CHAIN OFF
         OI    PRFFLAGS-IEDQPRF(RUNIT),CCWCC      NEW FLAG
         OI    LCBCPA+12,ETBDONE        SET ETB DONE FOR PADS
NOFLAG   EQU   *
         CLI   AVTDOUBL+3,X'FF'         INDICATOR SET            S21903
         BNE   FIRST                    BRANCH IF NOT SET        S21903
         L     R10,LCBLAST(RLCB)        GET LAST UNIT OF PREV. BFR
         ST    RUNIT,LCBLAST(RLCB)
         TM    PRFSTAT1,PRFCNCLN        ETB ERROR RECOVERY
         BO    TESTCPA                  BRANCH IF YES            S21903
         TM    PRFTIC+3-IEDQPRF(R10),LAST
         BO    NONEXT                   BRANCH IF LAST UNIT.     Y01004
         STCM  RPREFIX,SEVEN,LCBNEXT+ONE(RLCB)  SET ADDRESS OF   Y01004
*                                       NEXT UNIT TO BE SENT.    Y01004
         B     TESTCPA                  TEST FOR CHANNEL PGM CHK Y01004
NONEXT   EQU   *                                                 Y01004
         STCM  RPREFIX,SEVEN,PRFTIC+ONE-IEDQPRF(R10)  SET ADDR.  Y01004
*                                       OF NEXT BUFFER.          Y01004
TESTCPA  EQU   *
         TM    LCBCPA+12,XXXUSED        CHANNEL PROGRAM CHECK    S21903
         BNO    RETURN                  BR IF NO
         B     KEEPON                   CONTINUE CHECKING        S21903
FIRSTONE EQU   *
         XC    LCBNEXT+1(3,RLCB),LCBNEXT+1(RLCB)
*        THIS FIELD SHOULD BE CLEARED AT FIRST TIME
         MVI   LCBCOUNT(RLCB),AVTEZERO  RESET AMT LEFT TO WRITE TO 0
         NI    LCBCPA+12,X'FF'-ETBDONE  SET FLAG OFF
         XC    LCBWRSTX+9(3,RLCB),LCBWRSTX+9(RLCB)   CLEAR
         MVI   LCBWRSTX+EIGHT(RLCB),CCWTIC SET DLE/STX'S TIC OP  Y01004
*                                       CODE ONCE, THEN NO MORE. Y01004
*        CPA MUST BE INITIALIZED FOR WR DLE ETB, RD RESP, WR DLE STX
         STCM  RPREFIX,SEVEN,LCBLSPCI   SET UP LCBLSPCI.         Y01004
         L     R10,DCBSCTAD-1           ADDR OF SPECIAL CHARS. TBL
         IC    R12,ETBCH(R10)           OFFSET TO ETB CHAR.
         LA    R11,1(R10,R12)           ADDR OF DLE ETB
         ST    R11,LCBWRETB(RLCB)       DCW ADDR
         MVI   LCBWRETB(RLCB),CCWWRITE
         MVI   LCBWRETB+4(RLCB),CCWCC+CCWSLI
         MVI   LCBWRETB+7(RLCB),TWO
         MVI   LCBTPCD+3,TPDLEETX      SET TP OP CODE
         MVI   LCBTPCD+4,TPRDRPEB       SET TP OP CODE           S21903
         MVI   LCBTPCD+5,TPDLESTX       SET TP OP CODE           S21903
         LA    RSIZE,LCBERCCW+12        ADDR FOR READ
         ST    RSIZE,LCBRDRSP(RLCB)     ADDR
         MVI    LCBRDRSP(RLCB),CCWREAD    OPCODE
         MVI   LCBRDRSP+4(RLCB),AVTEZERO    NO FLAGS
         MVI    LCBRDRSP+7(RLCB),NINE   COUNT
         IC    R12,DLESTXCH(R10)        CHARACTERS TBL OFFSET
         LA    R11,1(R10,R12)           CHAR. ADDRESS
         ST    R11,LCBWRETX(RLCB)       CCW ADDR
         MVI    LCBWRETX(RLCB),CCWWRITE  OP CODE
         MVI   LCBWRETX+4(RLCB),CCWCD+CCWSLI
         MVI    LCBWRETX+7(RLCB),TWO     COUNT
         B     GETETB                   GO GET ETB SIZE FROM SCB Y01004
FIRST    EQU   *
         ST    RUNIT,LCBLAST(RLCB)      SET ADDR OF LAST UNIT THIS BFR
         NC    LCBWRSTX+9(3,RLCB),LCBWRSTX+9(RLCB)  IS IT SET
         BNZ   KEEPON                   BR IF SET ALREADY
         STCM  RPREFIX,SEVEN,LCBWRSTX+NINE(RLCB)  SET THE WRITE  Y01004
*                                       DLE/STX TO TIC TO BUFFER Y01004
KEEPON   EQU   *
         TM    LCBCPA+TWELVE,ETBDONE    ARE WE SET TO SEND BLOCK X01004
         BNO   RETURN                   BRANCH IF NO.            X01004
         STM   R11,RBASE,AVTSAVE2  SAVE REGISTERS USED BY MACROS Y02027
         MODESET MODE=SUP
*                                       GET INTO SUPERVISOR MODE Y02027
         MODESET EXTKEY=SUPR
*                                       GET INTO SUPERVISOR KEY  Y02027
         LR    R10,RAVT                 SAVE AVT ADDRESS         Y02027
SETTRAN  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=CHANNEL PROGRAM,X
               IGE0004G(SETERP),IGE0004H(SETERP),IGG019QE(SETERP),     X
               IEDQGA(SETASSC,SETCONC),'PCI LINEEND,AND START I/O      X
               APPENDAGES ARE LOCKED ON THIS RESOURCE THRU THE EXCP    X
               PROCESSOR ISSUING SETLOCK (ERP,BUFFER ASSOCIATION AND   X
               TRANSPARENT CCW BUILD MUST ISSUE SETLOCK'
         LR    RAVT,R10                 RESTORE AVT ADDRESS      Y02027
         LM    R11,RBASE,AVTSAVE2       RETORE REGISTERS USED    Y02027
*                                       BY MACROS                Y02027
PCILOCK  EQU   *                                                 Y02027
         TS    LCBPCILK                 PCI ACTIVE ON THIS LINE  Y02027
         BNE   PCILOCK                  YES, LOOP FOR MP TILL    Y02027
*                                       PCI COMPLETE             Y02027
         LA    RKEY,LCBWRSTX(,RLCB)     RKEY HAS ADDRESS OF      Y01004
*                                       WRITE DLE/STX.           Y01004
         TM    LCBCPA+FOUR,CCWCC+CCWCD  REAL CHANNEL PROGRAM     Y01004
         BNO   DONE2                    BRANCH NO                Y01004
*                                                                Y01004
REAL     EQU   *                                                 Y01004
         LR    RETB,RKEY                TIC TO ADDRESS TO RETB   Y01004
         ICM   R10,SEVEN,PRFIOADR-IEDQPRF(RKEY) DATA ADDRESS     Y01004
         LRA   R10,0(,R10)              CONVERT TO REAL ADDRESS  Y01004
         STCM  R10,SEVEN,PRFIOADR-IEDQPRF(RKEY) SET REAL         Y01004
         TM    PRFFLAGS-IEDQPRF(RKEY),CCWCC+CCWCD LAST CCW       Y01004
         BZ    DONE1                    BRANCH YES               Y01004
*                                                                Y01004
         LA    RKEY,EIGHT(,RKEY)        BUMP TO NEXT CCW         Y01004
         TM    PRFOPCDE-IEDQPRF(RKEY),SEVEN  NEXT CCW A TIC      Y01004
         BNZ   REAL                     BRANCH YES - CONVERT     Y01004
*                                                                Y01004
         ICM   RKEY,SEVEN,PRFTIC-IEDQPRF+1(RETB) TIC TO ADDRESS  Y01004
         CLM   RBASE,EIGHT,FLAG         HAS LSPCI BEEN DONE     OX01433
         BE    CCWOK                    BR YES                  OX01433
         LA     RSIZE,0(RKEY)           ADDR OF FIRST UNIT      OX01433
*        IN CHANNEL PROGRAM                                     OX01433
         LA    R10,LCBERCCW             LCBCPA START            OX01433
         SR    R10,RSIZE                IS CCW BEFORE LCB       OX01433
         BP    PKLSPCI                  BR YES                  OX01433
         L     RSIZE,LCBDCBPT           ADDR OF DCB             OX01455
         SR    R10,R10                  CLAER FOR IC            OX01455
         IC    R10,DCBEIOBX-IHADCB(RSIZE)  LCB SIZE             OX01455
         AR    R10,RLCB                 END OF CPA              OX01455
         LA    RSIZE,0(RKEY)            RESET RSIZE             OX01455
         SR    R10,RSIZE                IS CCW PAST LCB         OX01433
         BP    CCWOK                    BR IS CCW IS IN LCB     OX01433
PKLSPCI  EQU   *                                                OX01433
         CLM   RKEY,SEVEN,LCBLSPCI      IS THIS UNIT FIRST INPCIOX01433
         BE    SETSW                    BR IF FIRST             OX01433
         L     R10,LCBLSPCI-1           GET LSPCI FIRST UNIT    OX01433
         BAL   RSIZE,SETOPCD            SET 0 OPCODE            OX01433
         ICM   R10,SEVEN,PRFTIC+1-IEDQPRF(R10)                  OX01455
*        NEXT UNIT IN LSPCI                                     OX01433
SETOPCD  EQU   *                                                OX01433
         MVI   PRFOPCDE-IEDQPRF(R10),AVTEZERO                   OX01433
         MVI   PRFFLAGS-IEDQPRF(RUNIT),CCWSLI+CCWCD PCI OFF    @OZ25095
*        SET 0 OP CODE                                          OX01433
         CLM   RKEY,SEVEN,PRFTIC+ONE-IEDQPRF(R10)               OX01433
*              IS THIS THE FIRST IN CHNL PGM                    OX01433
         BNER  RSIZE                    BR IF NOT               OX01433
         LRA   RSIZE,0(RKEY)            CONVERT TO REAL         OX01433
         STCM  RSIZE,SEVEN,PRFTIC+ONE-IEDQPRF(R10)              OX01433
*              SET REAL TIC                                     OX01433
         OI    PRFTIC-IEDQPRF(R10),CCWREAL FLAG AS REAL         OX01433
SETSW    EQU   *                                                OX01433
         ICM   RBASE,EIGHT,FLAG         SET LSPCI DONE          OX01433
CCWOK    EQU   *                                                OX01433
         LRA   R10,0(,RKEY)             CONVERT TO REAL          Y01004
         STCM  R10,SEVEN,PRFTIC-IEDQPRF+1(RETB) SET REAL TIC TO  Y01004
         OI    PRFTIC-IEDQPRF(RETB),AVTE80 SET REAL OP CODE      Y01004
         TM    PRFTIC-IEDQPRF+THREE(RETB),TICCHECK INVALID TIC   Y01004
         BZ    REAL                     BNCH NO - CONTINUE       Y01004
*                                                                Y01004
DONE1    EQU   *                                                 Y01004
         LRA   RKEY,LCBWRSTX(,RLCB)     REAL ADDR OF WRITE DLE   Y01004
DONE2    EQU   *                                                 Y01004
         ICM   RKEY,EIGHT,LCBCPA+EIGHT  TIC OP CODE              Y01004
         TM    LCBCPA+EIGHT,AVTE80      CHANNEL PROGRAM ACTIVE?      VM
         BNO   NOVIRT                   NO,BRANCH                    VM
         L     R10,AVTSAVTP             SECONDARY AVT POINTER        VM
         L     R10,SAVTDIAG-IEDNSVTD(0,R10) VM DIAG ROUTINE          VM
         LTR   R10,R10                  IN VM MACHINE ?              VM
         BZ    NOVIRT                   NO,BRANCH                    VM
         ST    RBASE,AVTSAVE2+TWELVE    SAVE REGISTER 15          M VM
         LA    R0,LCBCPA+EIGHT          ADDR OF TIC,IEDQDA PARAMETER VM
         ST    RLCB,AVTSAVE2            CURRENT LCB ADDRESS          VM
*                                       ALSO PARAMETER FOR IEDQDA    VM
         LR    RBASE,R10                VM DIAG ROUTINE ADDR         VM
         ST    RKEY,LCBCPA+EIGHT        LINK INTO VIRTUAL CHANNEL    VM
*                                       PROGRAM                      VM
         BALR  R14,RBASE                LINK INTO REAL               VM
*                                       CHANNEL PROGRAM              VM
         L     RBASE,AVTSAVE2+TWELVE    RESTORE REG 15         M     VM
         B     ENDVIRT                  DONE WITH VM SUPPORT CODE    VM
NOVIRT   EQU   *                                                     VM
         ST    RKEY,LCBCPA+EIGHT        LINK INTO CHANNEL PROGRAMY01004
*                                       IN CHANNEL PGM. IN LCB.  X01004
ENDVIRT  EQU   *                                                     VM
         MVI   LCBCPA+TWELVE,AVTEZERO   RESET CHANNEL PGM. CHECK X01004
*                                       FLAG IN LCB.             X01004
         MVI   LCBPCILK,ZERO            CLEAR PCI LOCK FOR MP    Y02027
         STM   R11,RBASE,AVTSAVE2       SAVE REGS USED BY      @OZ11198
*                                       SETLOCK ROUTINE          Y02027
         LR    R10,RAVT                 SAVE AVT ADDRESS         Y02027
RSETTRAN SETLOCK RELEASE,TYPE=LOCAL,RELATED=CHANNEL PROGRAM,           X
               IEDQGT(SETTRAN)
         LR    RAVT,R10                 RESTORE AVT ADDRESS      Y02027
*                                       SETLOCK ROUTINE          Y02027
         MODESET EXTKEY=TCAM
*                                       RESET KEY TO TCAM'S KEY  Y02027
         MODESET MODE=PROB
*                                       RESET TO PROBLEM PROGRAM Y02027
*                                       MODE                     Y02027
         LM    R11,RBASE,AVTSAVE2       RESTORE REGISTERS USED @OZ11198
         CLI   LCBINCAM,AVTEFF          EXCP NEEDED            @OY12651
         BNE   RETURN                   NO,RETURN              @OY12651
         MVI   LCBINCAM,AVTEZERO        RESET EXCP NEEDED      @OY12651
         NI    LCBCHAIN,AVTEFF-LCBSCRNN RESET SCREEN RQST BIT  @OY12651
         LA    RUNIT,LCBCPA             GET START ADDRESS      @OY16444
         STCM  RUNIT,SEVEN,LCBSTART     SET START ADDRESS      @OY16444
         LA    RUNIT,LCBFLAG1           IOB ADDRESS            @OY12651
         EXCPVR (1),SUBSYS                                     @OY12651
         LR    RBASE,R11                RESTORE BASE           @OY16444
RETURN   DS    0H                                                Y01004
         L    R11,AVTEA                 DISPATCHER BASE
         B     DSPDISP                  BRANCH TO DISPATCHER     S21903
NEXTUNIT EQU   *
         LPR   RDCB,RDCB                RESET FLAG
         LH    RKEY,AVTKEYLE            RESET KEY
         L     RUNIT,LCBWORK(RLCB)      NEXT UNIT ADDR
*        ADDR NEXT UNIT
         ICM   R8,TWO,AVTDOUBL+ONE      SET CCW FLAGS.           Y01004
         ICM   R8,ONE,AVTFZERO          SET BYTE AFTER FLAGS = 0 Y01004
         LA    R11,AVTUMALN(RUNIT)      ADDR TO WRITE FROM
         B     BLDCCWS                  BRANCH TO BUILD CCWS     S21903
SETETB   EQU   *
         SR    RSIZE,RETB               DECR SIZE BR AMOUNT TO WRITE
         SR    RKEY,RETB                DECR KEY
         LR    R0,RKEY                  SET REMAINING COUNT     SA63953
         CR    RSIZE,RKEY               IS SIZE LESS THAN FULL UNIT
         BH    STCKEY                   BR YES
         LR    R0,RSIZE                 SET REMAINING COUNT     SA63953
STCKEY   EQU   *
         LTR   RDCB,RDCB                IS ANYTHING TO BE ALTERED
         BM    NOSTC                    BR IF NOT
         STH   RETB,PRFCOUNT-IEDQPRF(RUNIT)
         OI    PRFTIC-IEDQPRF(RUNIT),FLAGETB  SET ETB HERE      SA63953
         STC   R0,PRFOPCDE-IEDQPRF(RUNIT)  SET COUNT LEFT       SA63953
         CLI   PRFOPCDE-IEDQPRF(RUNIT),AVTEZERO IS OP CODE 0?  @OZ25095
         BNE   PCIOK                    BRANCH IF NO- CONTINUE @OZ25095
         MVI   PRFFLAGS-IEDQPRF(RUNIT),CCWSLI+CCWCD PCI OFF    @OZ25095
PCIOK    EQU   *                                               @OZ25096
         NI    PRFFLAGS-IEDQPRF(RUNIT),X'FF'-CCWCD
         OI    PRFFLAGS-IEDQPRF(RUNIT),CCWCC
         OI    LCBCPA+12,ETBDONE
         CLI   AVTDOUBL+3,X'FF'         FIRST TIME               S21903
         BNE   NOSTCA                   BRANCH IF YES.           Y01004
         TM    LCBCPA+TWELVE,XXXUSED    WAS THERE A CHAN PGM CHK Y01004
         BNO   NOSTC                    BRANCH IF NO.            Y01004
         TM    LCBCPA+TWELVE,ETBDONE    WAS ETB FOUND IN BUFFER  Y01004
         BNO   NOSTCA                   BRANCH IF NO.            Y01004
         TM    LCBCPA+TWELVE,DONE       HAS WRITE FOR BLOCK BEEN Y01004
*                                       SET UP ALREADY           Y01004
         BO    NOSTC                    BRANCH IF YES.           Y01004
         OI    LCBCPA+TWELVE,DONE       IT'S BEING SET UP NOW.   Y01004
         ICM   R8,SEVEN,LCBNEXT+ONE(RLCB) GET ADDRESS OF NEXT    Y01004
*                                       UNIT TO BE SENT.         Y01004
         BZ    NOSTCB                   BRANCH IF IT'S THE FIRST Y01004
*                                       ETB FOR THIS MESSAGE.    Y01004
         TM    LCBWRSTX+ELEVEN(RLCB),LAST  IS THIS THE LAST UNIT A50198
         BNO   NOSTCB                   BRANCH IF NO TO SET UNIT A50198
*                                       ADDRESS.                 A50198
         STCM  RPREFIX,SEVEN,LCBWRSTX+NINE(RLCB) SET ADDRESS OF  Y01004
*                                       THIS BUFFER TO WRITE.    Y01004
         B     NOSTCB                   GO SET LAST UNIT TO TIC  Y01004
*                                       TO THE WRITE DLE/ETB.    Y01004
NOSTCA   EQU   *
         NC    LCBNEXT+1(3,RLCB),LCBNEXT+1(RLCB)
         BNZ   NOSTC                    IF NEXT IS ZERO THIS IS
*        THE FIRST UNIT OF THE FIRST BFR
*        OR FIRST ETB UNIT IN MSG
NOSTCB   EQU   *
         BAL   R8,SETWRETB              BRANCH TO WRITE ETB      S21903
NOSTC    EQU   *
         LH    RETB,SCBBKFCT+1          RESET ETB COUNT
         LTR   RKEY,RKEY                MORE IN UNIT
         BZ    DECR                     BR NO
         LNR   RDCB,RDCB                SET FLAG NOT TO MODIFY CCWS
         B     COMPARE                  RETURN                   S21903
         SPACE 3
SETWRETB EQU   *
         ST    RUNIT,LCBLSTWR(RLCB)     ADDR LAST UNIT BEING WRTN
         STC   R0,LCBCOUNT(RLCB)        SET COUNT               SA63953
         MVC   LCBNEXT+1(3,RLCB),PRFTIC+1-IEDQPRF(RUNIT)
         LA    R11,LCBWRETB(RLCB)       ADDR OF WR DLE ETB
         ST    R11,PRFTIC-IEDQPRF(RUNIT)        THIS UNIT MUST TIC
         MVI   PRFTIC-IEDQPRF(RUNIT),CCWTIC
         MVI    PRFOPCDE-IEDQPRF(RUNIT),CCWWRITE
         BR    R8                       RETURN                   S21903
FLAG     DC    X'7F'                                            OX01433
         EJECT
         IHAPSA
         EJECT
         TLCBD
LCBLSTWR EQU   LCBCPA+52-IEDQLCB        ADDR LAST UNIT BEING WRITTEN
LCBLAST  EQU   LCBCPA+64-IEDQLCB        ADDR LAST UNIT ASSIGNED
LCBNEXT  EQU   LCBCPA+56-IEDQLCB        ADDR NEXT UNIT TO BE SENT
LCBCOUNT EQU   LCBCPA+52-IEDQLCB        CT OF REM. SIZE IN UNIT
LCBETB   EQU   LCBCPA+60-IEDQLCB        REMAINING ETB COUNT
LCBWRETB EQU   LCBCPA+24-IEDQLCB        ADDR TO WR ETB FROM
LCBRDRSP EQU   LCBCPA+32-IEDQLCB        ADDR TO READ RESP FROM
LCBWRSTX EQU   LCBCPA+40-IEDQLCB        ADDR TO WR ETX FROM
LCBWRETX  EQU   LCBCPA+40-IEDQLCB
LCBWORK  EQU   LCBCPA+60-IEDQLCB        WORK AREA
         EJECT
         DCBD  DSORG=TX
         EJECT
         TDISPD
         EJECT
         TSCBD
         EJECT
         TPRFD
         EJECT
         TCCWD
         EJECT
         TAVTD                                                   X01004
         EJECT
         TTPD
         TTRMD                                                  SA61750
         END
