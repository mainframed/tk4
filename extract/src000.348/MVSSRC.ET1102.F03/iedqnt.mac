         TITLE 'IEDQNT, 3705 CHECKPOINT - LOAD 1                       *
                        '
IEDQNT   CSECT ,                                                01S0001
@PROLOG  DS    0H                                               01S0002
*   RBASE=REG15;                    /* SET BASE REGISTER             */
         LR    RBASE,REG15                                      02S0303
*   GEN REFS(RBASE) NOSETS;                                     02S0304
*                                   /*
         USING IEDQNT,RBASE            ESTABLISH ADDRESSABILITY
IEDQNT   IEDHJN AFTERHJN,HJN           MODULE IDENTIFICATION MACRO
*   RCAVT=AVTCKAVT;                 /* GET ADDRESS OF THE CKPT AVT   */
         L     RCAVT,AVTCKAVT-1(,RAVT)                          02S0305
         LA    RCAVT,0(,RCAVT)                                  02S0305
*   RCKPT=CAVTNWA;                  /* GET ADDR OF CKPT WORK AREA    */
         L     RCKPT,CAVTNWA(,RCAVT)                            02S0306
*   CKPSAVE2(1)=REG12;              /* SAVE BASE ADDRESS OF IEDQNF   */
         ST    REG12,CKPSAVE2(,RCKPT)                           02S0307
*   CKPSAVE2(2)=REG14;              /* SAVE RETURN ADDRESS           */
         ST    REG14,CKPSAVE2+4(,RCKPT)                         02S0308
*   ROPCE=OPCCKPTF;                 /* GET OPCE ADDRESS - OPCE TO BE
*                                      CKPT'D IS THE FIRST ONE ON THE
*                                      OP CONTROL QUEUE FOR     02S0309
*                                      CHECKPOINT                    */
         L     @10,AVTOCGET(,RAVT)                              02S0309
         L     ROPCE,OPCCKPTF(,@10)                             02S0309
*   RSAVE=ADDR(CKPSAVE1(1));        /* SET SAVE AREA ADDRESS         */
         LR    RSAVE,RCKPT                                      02S0310
*   RFY                                                         02S0311
*    (REG12,                                                    02S0311
*     REG14) UNRSTD;                                            02S0311
*                                                               02S0312
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT DOES THE PROCESSING THAT IS NECESSARY TO*/
*   /* PERFORM THE FUNCTION OF THE MODULE. FIRST THE COMMAND IS      */
*   /* IDENTIFIED AND THE 'SELECT' VALUES ARE SET UP. CONTROL        */
*   /* COMMANDS (SUCH AS IPL) ARE THOSE WHICH ARE DIRECTED TO THE    */
*   /* 3705 ITSELF. RESOURCE COMMANDS (SUCH AS MODIFY BHSET) ARE     */
*   /* THOSE WHICH ARE DIRECTED TO A RESOURCE OF THE 3705. SPECIAL   */
*   /* PROCESSING IS DONE FOR EACH OF THE TWO TYPES OF COMMANDS. IF  */
*   /* I/O IS REQUESTED, THEN IEDQNW IS CALLED TO ISSUE THE EXCP TO  */
*   /* GET THE I/O STARTED.                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0312
*                                                               03S0312
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.COMMAND: THIS SEGMENT DETERMINES THE COMMAND THAT IS  */
*   /* TO BE CHECKPOINTED BY LOOKING FOR ICHNG, TCHNG, OR A SPECIFIC */
*   /* MODIFY COMMAND. WHEN THE COMMAND IS FOUND, THE 'SELECT' VALUES*/
*   /* FOR THE COMMAND ARE INSERTED INTO CKPNSELT. THE FIRST BYTE OF */
*   /* THIS FIELD (CKPCUSEL) IS USED IN SUBSEQUENT DECISIONS TO      */
*   /* SELECT THE PATH THAT IS TO BE TAKEN FOR THE COMMAND. AFTER    */
*   /* EACH 'SELECT' VALUE IS USED, THE SELECT FIELD IF SHIFTED SO   */
*   /* THAT A NEW 'SELECT' VALUE APPEARS IN CKPCUSEL.                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0312
*   DO;                                                         03S0312
*     RFY                                                       03S0313
*       RTAB RSTD;                                              03S0313
*     IF OCOPTCDE=OCICHNG           /* TEST FOR ICHNG COMMAND        */
*       THEN                        /* THIS IS AN ICHNG COMMAND      */
         CLI   OCOPTCDE(ROPCE),X'49'                            03S0314
         BNE   @RF00314                                         03S0314
*       CKPSLVAL=ICHNGSEL;          /* GET ICHNG SELECT VALUES       */
         MVC   CKPSLVAL(3,RCKPT),ICHNGSEL                       03S0315
*     ELSE                          /* NOT AN ICHNG                  */
*       IF OCOPTCDE=OCTCHNG         /* TEST FOR TCHNG COMMAND        */
*         THEN                      /* THIS IS A TCHNG COMMSND       */
         B     @RC00314                                         03S0316
@RF00314 CLI   OCOPTCDE(ROPCE),X'56'                            03S0316
         BNE   @RF00316                                         03S0316
*         CKPSLVAL=TCHNGSEL;        /* GET TCHNG SELECT VALUES       */
         MVC   CKPSLVAL(3,RCKPT),TCHNGSEL                       03S0317
*       ELSE                        /* NOT A TCHNG COMMAND           */
*         DO;                                                   03S0318
         B     @RC00316                                         03S0318
@RF00316 DS    0H                                               03S0319
*           RTAB=ADDR(CMDTABLE);    /* GET ADDRESS OF THE TABLE OF
*                                      VALID MODIFY COMMANDS         */
         LA    RTAB,CMDTABLE                                    03S0319
*           DO WHILE OCSWITCH^=CMDID;/* SEARCH COMMAND TABLE LOOKING
*                                      FOR THE CURRENT COMMAND       */
         B     @DE00320                                         03S0320
@DL00320 DS    0H                                               03S0321
*             RTAB=RTAB+LENGTH(TABENTRY);/* POINT TO NEXT ENTRY      */
         AL    RTAB,@CF00327                                    03S0321
*           END;                                                03S0322
@DE00320 CLC   OCSWITCH(1,ROPCE),CMDID(RTAB)                    03S0322
         BNE   @DL00320                                         03S0322
*           CKPSLVAL=TABSELCT;      /* GET THE SELECT VALUES FOR THIS
*                                      COMMAND                       */
         MVC   CKPSLVAL(3,RCKPT),TABSELCT(RTAB)                 03S0323
*         END;                                                  03S0324
*     RFY                                                       03S0325
*       RTAB UNRSTD;                                            03S0325
@RC00316 DS    0H                                               03S0325
@RC00314 DS    0H                                               03S0326
*   END;                                                        03S0326
*   IF CKPCUSEL=CNT                 /* TEST COMMAND TYPE             */
*     THEN                          /* COMMAND IS A CONTROL COMMAND  */
         CLI   CKPCUSEL(RCKPT),1                                02S0327
         BNE   @RF00327                                         02S0327
*                                                               03S0328
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS.CONTROL: THIS SEGMENT PROCESSES THE CONTROL COMMANDS*/
*     /* THAT ARE DIRECTED TO THE LOCAL 3705. THE CONTROL RECORD AREA*/
*     /* IN THE CHECKPOINT WORKAREA IS INITIALIZED WITH ALL OF THE   */
*     /* CHANGEABLE DATA (EXCEPT FOR NCPTRACE) IN THE 3705'S DEVICE  */
*     /* DEPENDENT FIELDS. A WRITE IS REQUESTED FROM THE CONTROL     */
*     /* PORTION OF THE WORKAREA.                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               03S0328
*     DO;                                                       03S0328
*       MVC(CKPSLVAL,CKPSLNEW);     /* SHIFT 'SELECT' VALUES FOR NEXT
*                                      PATH SELECTION                */
         MVC   CKPSLVAL(3,RCKPT),CKPSLNEW(RCKPT)                03S0329
*       IF OCSWITCH=OCACTVTE        /* TEST FOR ACTIVATE COMMAND     */
*         THEN                      /* THIS IS AN ACTIVATE COMMAND   */
         CLI   OCSWITCH(ROPCE),X'22'                            03S0330
         BNE   @RF00330                                         03S0330
*         IF NCPREST=OFF            /* TEST FOR 3705 RESTART         */
*           THEN                    /* THIS IS NOT A 3705 RESTART    */
         L     @14,CKPNDEVF(,RCKPT)                             03S0331
         TM    NCPREST(@14),B'00010000'                         03S0331
         BNZ   @RF00331                                         03S0331
*           DO;                                                 03S0332
*             NCPREST=ON;           /* INDICATE RESTART FOR NEXT
*                                      ENTRY                         */
         OI    NCPREST(@14),B'00010000'                         03S0333
*             CKPCUSEL=TIMEDATE;    /* UPDATE SELECT VALUE TO   03S0334
*                                      INDICATE THAT TIME DATA IS
*                                      NEEDED                        */
         MVI   CKPCUSEL(RCKPT),X'01'                            03S0334
*           END;                                                03S0335
*       IF CKPCUSEL=TIMEDATE        /* TEST FOR REQUEST FOR TIME
*                                      UPDATE                        */
*         THEN                      /* TIME UPDATE IS REQUESTED      */
@RF00331 DS    0H                                               03S0336
@RF00330 CLI   CKPCUSEL(RCKPT),1                                03S0336
         BNE   @RF00336                                         03S0336
*         DO;                                                   03S0337
*           GEN NOREFS SETS(REG00,RPARM);                       03S0338
*                                /*
            TIME  ,                 GET DATE AND TIME
*           CKPDATE=RPARM;          /* SET DATE                      */
         STCM  RPARM,15,CKPDATE(RCKPT)                          03S0339
*           CKPTIME=REG00;          /* SET TIME                      */
         STCM  REG00,15,CKPTIME(RCKPT)                          03S0340
*         END;                                                  03S0341
*       CKPBCKUP=NCPBKUPN;          /* UPDATE BACKUP NAME            */
@RF00336 L     @14,CKPNDEVF(,RCKPT)                             03S0342
         MVC   CKPBCKUP(8,RCKPT),NCPBKUPN(@14)                  03S0342
*       CKPIPLTX=NCPTXID;           /* UPDATE IPL TEXT NAME          */
         MVC   CKPIPLTX(8,RCKPT),NCPTXID(@14)                   03S0343
*       CKPTRSTA=NCPFLAG1;          /* UPDATE STATUS FLAGS           */
         MVC   CKPTRSTA(1,RCKPT),NCPFLAG1(@14)                  03S0344
*       RPARM=ADDR(CKPTRSTA)-(ADDR(NCPFLAG1)-ADDR(IEDNCP));/* SET REG
*                                      TO POINT TO CKPTRSTA AS IF IT
*                                      WERE THE NCPFLAG1 FIELD       */
         LA    RPARM,CKPTRSTA(,RCKPT)                           03S0345
         BCTR  RPARM,0                                          03S0345
*       RPARM->NCPTRACE=OFF;        /* TURN OFF THE NCPTRACE FLAG IN
*                                      THE CKPT FIELD                */
         NI    NCPTRACE(RPARM),B'11111101'                      03S0346
*       CKPRWCMD=CKPWRITE;          /* SET COMMAND TYPE TO WRITE     */
         MVI   CKPRWCMD(RCKPT),X'05'                            03S0347
*       CKPRWBC=CKPCRLEN;           /* SET LENGTH TO LENGTH OF  03S0348
*                                      CONTROL RECORD                */
         SLR   @14,@14                                          03S0348
         IC    @14,CKPCRLEN(,RCKPT)                             03S0348
         STH   @14,CKPRWBC(,RCKPT)                              03S0348
*       CKPRWADD=ADDR(CKPNCNTL);    /* SET DATA ADDR TO THE CONTROL
*                                      RECORD                        */
         LA    @14,CKPNCNTL(,RCKPT)                             03S0349
         STCM  @14,7,CKPRWADD(RCKPT)                            03S0349
*       MVC(CKPSLVAL,CKPSLNEW);     /* SHIFT 'SELECT' VALUES FOR NEXT
*                                      PATH SELECTION                */
         MVC   CKPSLVAL(3,RCKPT),CKPSLNEW(RCKPT)                03S0350
*       CKPENCDE=0;                 /* SET I/O REQUESTED             */
         MVI   CKPENCDE(RCKPT),X'00'                            03S0351
*     END;                                                      03S0352
*   ELSE                            /* COMMAND IS A RESOURCE COMMAND */
*                                                               03S0353
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESS.RESOURCE: THIS SEGMENT PROCESSES THE COMMANDS THAT  */
*     /* ARE DIRECTED TO A RESOURCE OF A 3705. EACH RESOURCE HAS TWO */
*     /* NONCONTIGUOUS RECORDS ON THE CKPT DATA SET THAT ARE         */
*     /* MAINTAINED IN A 'FLIP/FLOP' MANNER. IF THE FIRST RECORD WAS */
*     /* UPDATED ON THE LAST CKPT, THEN THE SECOND RECORD WILL BE    */
*     /* UPDATED ON THIS CKPT (AND VICE VERSA). THIS SEGMENT SETS UP */
*     /* TO READ THE RECORD MOST RECENTLY WRITTEN TO GET THE MOST UP */
*     /* TO DATE CKPT INFORMATION FOR THIS RESOURCE.                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               03S0353
*     DO;                                                       03S0353
         B     @RC00327                                         03S0353
@RF00327 DS    0H                                               03S0354
*       REG15=ADDR(CKPRW);          /* SET ADDR TO CONTAIN ADDR OF
*                                      GETMAIN'ED AREA               */
         LA    REG15,CKPRW(,RCKPT)                              03S0354
*       REG00=CKPBLKSZ;             /* GET NUMBER OF BYTES TO GETMAIN*/
         LH    REG00,CKPBLKSZ(,RCKPT)                           03S0355
*       GEN REFS(REG00,REG15,CKPGETML) SETS(RPARM);             03S0356
*                                 /*                           @YM07021
        GETMAIN EC,LV=(REG00),A=(REG15),SP=0,MF=(E,CKPGETML(RCKPT))
*       IF REG15=0                  /* TEST RETURN FROM GETMAIN      */
*         THEN                      /* GETMAIN WAS GOOD              */
         SLR   @14,@14                                          03S0357
         CR    REG15,@14                                        03S0357
         BNE   @RF00357                                         03S0357
*         DO;                                                   03S0358
*           CKPENCDE=0;             /* CLEAR ERROR INDICATOR         */
         MVI   CKPENCDE(RCKPT),X'00'                            03S0359
*           IF OCOPTCDE=OCICHNG     /* TEST COMMAND TYPE             */
*             THEN                  /* COMMAND IS AN ICHNG           */
         CLI   OCOPTCDE(ROPCE),X'49'                            03S0360
         BNE   @RF00360                                         03S0360
*                                                               04S0361
*             /*******************************************************/
*             /*                                                     */
*             /* PROCESS.RESOURCE.ICINIT: THIS SEGMENT INITIALIZES   */
*             /* FIELDS NEEDED BY IEDQNU TO COMPLETE THE CKPT OF AN  */
*             /* ICHNG COMMAND. THE MOVE BUFFER PARAMETER LIST USED  */
*             /* TO MOVE THE DEVICE RECORD TO THE CKPT RECORD IS     */
*             /* INITIALIZED.                                        */
*             /*                                                     */
*             /*******************************************************/
*                                                               04S0361
*             DO;                                               04S0361
*               RFY                                             04S0362
*                 RPLMV RSTD;                                   04S0362
*               RPLMV=ADDR(CKPSAVE2(10));/* GET ADDRESS OF MOVE 04S0363
*                                      BUFFER PARM LIST              */
         LA    RPLMV,CKPSAVE2+36(,RCKPT)                        04S0363
*               PLMVFLG1=''B;       /* CLEAR FLAG BYTE 1             */
         MVI   PLMVFLG1(RPLMV),X'00'                            04S0364
*               PLMVFLG2=''B;       /* CLEAR FLAG BYTE 2             */
         MVI   PLMVFLG2(RPLMV),X'00'                            04S0365
*               PLMVUNCA=0;         /* CLEAR CHAIN ADDRESS           */
         ST    @14,PLMVUNCA(,RPLMV)                             04S0366
*               IF OCICTYPE=OCICSID /* TEST ICHNG LINE TYPE          */
*                 THEN              /* THIS IS A SWITCHED LINE WITH
*                                      ID VERIFICATION               */
         CLI   OCICTYPE(ROPCE),0                                04S0367
         BNE   @RF00367                                         04S0367
*                                                               05S0368
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.RESOURCE.ICINIT.SWITCHID: THIS SEGMENT  */
*                 /* INITIALIZES FOR ICHNG TO A SWITCHED LINE WITH ID*/
*                 /* VERIFICATION.                                   */
*                 /*                                                 */
*                 /***************************************************/
*                                                               05S0368
*                 DO;                                           05S0368
*                   PLMVTU=ADDR(CNRDVBDU);/* SET TARGET TO RECEIVE
*                                      ...                           */
         L     @12,RCKPREC+201(,RCKPT)                          05S0369
         LA    @12,CNRDVBDU(,@12)                               05S0369
         ST    @12,PLMVTU(,RPLMV)                               05S0369
*                   PLMVTD=ADDR(CNRDVBDU);/* ... LINE SESSION INFO   */
         ST    @12,PLMVTD(,RPLMV)                               05S0370
*                   PLMVSU=OCUNIT;  /* SET UNIT ADDRESS OF UNIT WITH
*                                      LINE SESSION INFO             */
         L     @12,OCUNIT(,ROPCE)                               05S0371
         ST    @12,PLMVSU(,RPLMV)                               05S0371
*                   CKPTTCIN=PRUTTCIN;/* SAVE TTCIN OF THE LINE      */
         L     @12,IEDPRUQP(,RPLMV)                             05S0372
         LH    @10,PRUTTCIN(,@12)                               05S0372
         N     @10,@CF01747                                     05S0372
         STH   @10,CKPTTCIN(,RCKPT)                             05S0372
*                   CKPDATCT=PRUDATCT;/* SAVE DATA COUNT OF THE LINE
*                                      SESSION INFO                  */
         LH    @10,PRUDATCT(,@12)                               05S0373
         STH   @10,CKPDATCT(,RCKPT)                             05S0373
*                   PLMVLNTH=PRUDATCT;/* SET MOVE LENGTH             */
         STH   @10,PLMVLNTH(,RPLMV)                             05S0374
*                   PLMVSD=ADDR(IEDBDU);/* START MOVE WITH THE BDU   */
         AL    @12,@CF00235                                     05S0375
         ST    @12,PLMVSD(,RPLMV)                               05S0375
*                   CKPTNTNB=0;     /* INDICATE THAT THERE ARE NO
*                                      MORE DEVICE RECORDS TO PROCESS*/
         STH   @14,CKPTNTNB(,RCKPT)                             05S0376
*                 END;                                          05S0377
*               ELSE                /* NOT SWITCHED LINE WITH ID
*                                      VERIFICATION - EITHER LEASED,
*                                      SWITCHED, OR MULTIPOINT LINE  */
*                                                               05S0378
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.RESOURCE.ICINIT.MULTILEA: THIS SEGMENT  */
*                 /* INITIALIZES FOR ICHNG FOR A LEASED OR SWITCHED  */
*                 /* LINE WITH NO ID VERIFICATION AND FOR A          */
*                 /* MULTIPOINT LINE. THE SINGLE DEVICE RECORD FOR A */
*                 /* LEASED OR SWITCHED LINE IS LOCATED. FOR A       */
*                 /* MULTIPOINT LINE THE FIRST VALID DEVICE RECORD   */
*                 /* MUST BE FOUND.                                  */
*                 /*                                                 */
*                 /***************************************************/
*                                                               05S0378
*                 DO;                                           05S0378
         B     @RC00367                                         05S0378
@RF00367 DS    0H                                               05S0379
*                   IF OCICTYPE=OCICLES/* TEST ICHNG LINE TYPE       */
*                     THEN          /* THIS IS A LEASED LINE OR A
*                                      SWITCHED LINE WITH NO ID 05S0379
*                                      VERIFICATION                  */
         CLI   OCICTYPE(ROPCE),1                                05S0379
         BNE   @RF00379                                         05S0379
*                     DO;                                       05S0380
*                       PLMVSU=OCUNIT;/* SET UNIT CONTAINING DEVICE
*                                      RECORD                        */
         L     @14,OCUNIT(,ROPCE)                               05S0381
         ST    @14,PLMVSU(,RPLMV)                               05S0381
*                       PLMVSD=ADDR(LEARCD);/* POINT TO START OF
*                                      DEVICE RECORD                 */
         L     @14,IEDPRUQP(,RPLMV)                             05S0382
         LA    @14,LEARCD+18(,@14)                              05S0382
         ST    @14,PLMVSD(,RPLMV)                               05S0382
*                       CKPTNTNB=0; /* INDICATE THAT THERE ARE NO
*                                      MORE DEVICE RECORDS TO PROCESS*/
         SLR   @14,@14                                          05S0383
         STH   @14,CKPTNTNB(,RCKPT)                             05S0383
*                     END;                                      05S0384
*                   ELSE            /* NOT LEASED OR SWITCHED - MUST
*                                      BE MULTIPOINT LINE            */
*                     DO;                                       05S0385
         B     @RC00379                                         05S0385
@RF00379 DS    0H                                               05S0386
*                                                               06S0386
*                       /*********************************************/
*                       /*                                           */
*                       /* PROCESS.RESOURCE.ICINIT.MULTILEA.TNTINIT: */
*                       /* THIS SEGMENT FINDS THE FIRST TNT OFFSET IN*/
*                       /* THE CKPT UNITS FOR A MULTIPOINT LINE AND  */
*                       /* SAVES IT IN OFFSET. IT INITIALIZES        */
*                       /* POINTERS AND COUNTS FOR THE TNT OFFSETS   */
*                       /* AND EXITS POINTING TO THE SECOND TNT      */
*                       /* OFFSET AND THE FIRST DEVICE RECORD.       */
*                       /*                                           */
*                       /*********************************************/
*                                                               06S0386
*                       DO;                                     06S0386
*                         CKPTNTUN=OCUNIT;/* SET POINTER TO UNIT WITH
*                                      TNT OFFSETS                   */
         L     @14,OCUNIT(,ROPCE)                               06S0387
         ST    @14,CKPTNTUN(,RCKPT)                             06S0387
*                         CKPTNTPT=ADDR(ICTNTOFF);/* POINT TO FIRST
*                                      TNT OFFSET                    */
         LA    @12,ICTNTOFF(,@14)                               06S0388
         ST    @12,CKPTNTPT(,RCKPT)                             06S0388
*                         OFSENTRY=CKPTNTPT->MOVECHAR;/* PUT FIRST
*                                      TNT OFFSET IN WORKAREA        */
         MVC   OFSENTRY(3),MOVECHAR(@12)                        06S0389
*                         CKPTNTPT=CKPTNTPT+LENGTH(ICTNTOFF);/* POINT
*                                      TO SECOND TNT OFFSET          */
         AL    @12,@CF00066                                     06S0390
         ST    @12,CKPTNTPT(,RCKPT)                             06S0390
*                         CKPTNTNB=ICTNTNO-1;/* GET NUMBER OF TNT
*                                      OFFSETS LEFT TO SCAN          */
         LH    @12,ICTNTNO(,@14)                                06S0391
         BCTR  @12,0                                            06S0391
         STH   @12,CKPTNTNB(,RCKPT)                             06S0391
*                         CKPTNTLN=AVTKEYLE-2*LENGTH(ICTNTOFF);/* SET
*                                      LENGTH OF TNT DATA REMAINING
*                                      IN THIS UNIT                  */
         LH    @12,AVTKEYLE(,RAVT)                              06S0392
         SL    @12,@CF00071                                     06S0392
         STH   @12,CKPTNTLN(,RCKPT)                             06S0392
*                         REG00=ICTNTNU;/* GET NUMBER OF UNITS  06S0393
*                                      CONTAINING TNT OFFSETS        */
         SLR   REG00,REG00                                      06S0393
         IC    REG00,ICTNTNU(,@14)                              06S0393
*                         RPARM=OCUNIT;/* GET POINTER TO FIRST UNIT
*                                      WITH TNT OFFSETS              */
         LR    RPARM,@14                                        06S0394
*                         DO UNTIL REG00=0;/* FIND FIRST UNIT THAT
*                                      CONTAINS DEVICE RECORDS       */
@DL00395 DS    0H                                               06S0396
*                           RPARM=RPARM->ICTNTTIC;/* GET POINTER TO
*                                      NEXT UNIT                     */
         L     RPARM,ICTNTTIC(,RPARM)                           06S0396
*                           REG00=REG00-1;/* DECREMENT COUNT OF TNT
*                                      UNITS                         */
         BCTR  REG00,0                                          06S0397
*                         END;                                  06S0398
@DE00395 LTR   REG00,REG00                                      06S0398
         BNZ   @DL00395                                         06S0398
*                         PLMVSU=RPARM;/* SET POINTER TO UNIT THAT
*                                      CONTAINS THE FIRST DEVICE
*                                      RECORD                        */
         ST    RPARM,PLMVSU(,RPLMV)                             06S0399
*                         PLMVTU=RPARM;/* POINT TO SAME UNIT AS 06S0400
*                                      TARGET                        */
         ST    RPARM,PLMVTU(,RPLMV)                             06S0400
*                         PLMVSD=ADDR(MULRCDS);/* POINT TO FIRST
*                                      DEVICE RECORD                 */
         L     @14,IEDPRUQP(,RPLMV)                             06S0401
         LA    @14,MULRCDS+18(,@14)                             06S0401
         ST    @14,PLMVSD(,RPLMV)                               06S0401
*                         PLMVTD=ADDR(MULRCDS);/* POINT TO SAME 06S0402
*                                      RECORD AS TARGET              */
         ST    @14,PLMVTD(,RPLMV)                               06S0402
*                       END;                                    06S0403
*                       DO WHILE OFFSET=0;/* SEARCH TNT OFFSETS FOR A
*                                      NON-ZERO TNT OFFSET           */
         B     @DE00404                                         05S0404
@DL00404 DS    0H                                               05S0405
*                                                               06S0405
*                         /*******************************************/
*                         /*                                         */
*                         /* PROCESS.RESOURCE.ICINIT.MULTILEA.TNTMOVE*/
*                         /* : THIS SEGMENT MOVES THE TNT OFFSET     */
*                         /* ENTRY ADDRESSED BY CKPTNTPT INTO        */
*                         /* OFSENTRY AND EXITS WITH CKPTNTPT        */
*                         /* POINTING TO THE NEXT TNT OFFSET.        */
*                         /*                                         */
*                         /*******************************************/
*                                                               06S0405
*                         DO;                                   06S0405
*                           CKPTNTNB=CKPTNTNB-1;/* DECREMENT NUMBER
*                                      OF OFFSETS LEFT TO PROCESS    */
         LH    @14,CKPTNTNB(,RCKPT)                             06S0406
         BCTR  @14,0                                            06S0406
         STH   @14,CKPTNTNB(,RCKPT)                             06S0406
*                           RPARM=ADDR(OFSENTRY);/* SET POINTER TO
*                                      TARGET OF TNT MOVE            */
         LA    RPARM,OFSENTRY                                   06S0407
*                           REG00=LENGTH(ICTNTOFF);/* SET LENGTH OF
*                                      TNT OFFSET ENTRY              */
         LA    REG00,3                                          06S0408
*                           REG15=CKPTNTLN;/* SET LENGTH OF TNT DATA
*                                      IN THIS UNIT                  */
         LH    REG15,CKPTNTLN(,RCKPT)                           06S0409
*                           IF REG15>REG00/* TEST FOR MORE DATA THAN
*                                      IS NEEDED                     */
*                             THEN  /* THERE IS MORE DATA IN THIS
*                                      UNIT THAN IS NEEDED           */
         CR    REG15,REG00                                      06S0410
         BNH   @RF00410                                         06S0410
*                             REG15=REG00;/* RESET LENGTH-TO-MOVE TO
*                                      ENTRY LENGTH                  */
         LR    REG15,REG00                                      06S0411
*                           DO UNTIL REG15=0;/* MOVE THE TNT DATA    */
@RF00410 DS    0H                                               06S0412
@DL00412 DS    0H                                               06S0413
*                             RPARM->MOVECHAR(1:REG15)=CKPTNTPT->
*                                 MOVECHAR(1:REG15);/* MOVE TNT DATA
*                                      FROM THE UNIT TO THE WORKAREA */
         LR    @14,REG15                                        06S0413
         BCTR  @14,0                                            06S0413
         L     @12,CKPTNTPT(,RCKPT)                             06S0413
         EX    @14,@SM01748                                     06S0413
*                             CKPTNTPT=CKPTNTPT+REG15;/* POINT TO
*                                      NEXT AVIALABLE DATA           */
         ALR   @12,REG15                                        06S0414
         ST    @12,CKPTNTPT(,RCKPT)                             06S0414
*                             RPARM=RPARM+REG15;/* BUMP TO NEXT 06S0415
*                                      TARGET BYTE IN WORKAREA       */
         ALR   RPARM,REG15                                      06S0415
*                             CKPTNTLN=CKPTNTLN-REG15;/* DECREMENT
*                                      DATA LEFT IN THIS UNIT        */
         LH    @14,CKPTNTLN(,RCKPT)                             06S0416
         SLR   @14,REG15                                        06S0416
         STH   @14,CKPTNTLN(,RCKPT)                             06S0416
*                             IF CKPTNTLN<=0/* TEST FOR MORE DATA IN
*                                      THIS UNIT                     */
*                               THEN/* NO MORE DATA IN THIS UNIT     */
         LTR   @14,@14                                          06S0417
         BP    @RF00417                                         06S0417
*                               DO;                             06S0418
*                                 CKPTNTUN=ICTNTTIC;/* POINT TO NEXT
*                                      UNIT                          */
         L     @14,CKPTNTUN(,RCKPT)                             06S0419
         L     @14,ICTNTTIC(,@14)                               06S0419
         ST    @14,CKPTNTUN(,RCKPT)                             06S0419
*                                 CKPTNTPT=ADDR(ICTNTDAT);/* POINT TO
*                                      DATA IN NEXT UNIT             */
         LA    @14,ICTNTDAT(,@14)                               06S0420
         ST    @14,CKPTNTPT(,RCKPT)                             06S0420
*                                 CKPTNTLN=AVTKEYLE;/* SET LENGTH OF
*                                      DATA IN NEXT UNIT             */
         LH    @14,AVTKEYLE(,RAVT)                              06S0421
         STH   @14,CKPTNTLN(,RCKPT)                             06S0421
*                               END;                            06S0422
*                             REG00=REG00-REG15;/* SET DATA LEFT TO
*                                      BE MOVED                      */
@RF00417 SLR   REG00,REG15                                      06S0423
*                             REG15=REG00;/* SET LENGTH FOR NEXT MOVE*/
         LR    REG15,REG00                                      06S0424
*                           END;                                06S0425
@DE00412 LTR   REG15,REG15                                      06S0425
         BNZ   @DL00412                                         06S0425
*                         END;                                  06S0426
*                         PLMVLNTH=DEVLEN;/* SET LENGTH OF DEVICE
*                                      RECORD TO BE SKIPPED          */
         L     @14,PLMVSD(,RPLMV)                               05S0427
         SLR   @12,@12                                          05S0427
         IC    @12,DEVLEN(,@14)                                 05S0427
         STH   @12,PLMVLNTH(,RPLMV)                             05S0427
*                         RPARM=RPLMV;/* SET ADDRESS OF PARAMETER
*                                      LIST                          */
         LR    RPARM,RPLMV                                      05S0428
*                         CALL IEDMVBFR;/* CALL MOVE BUFFER ROUTINE
*                                      TO SKIP DEVICE RECORD         */
         L     @12,AVTSAVTP(,RAVT)                              05S0429
         L     @15,SAVTMVBF(,@12)                               05S0429
         BALR  @14,@15                                          05S0429
*                       END;                                    05S0430
@DE00404 LH    @14,OFFSET                                       05S0430
         N     @14,@CF01747                                     05S0430
         LTR   @14,@14                                          05S0430
         BZ    @DL00404                                         05S0430
*                       OCTRMTBL=OFFSET;/* SAVE TNT OFFSET           */
         LH    @14,OFFSET                                       05S0431
         N     @14,@CF01747                                     05S0431
         STH   @14,OCTRMTBL(,ROPCE)                             05S0431
*                                                               06S0432
*                       /*********************************************/
*                       /*                                           */
*                       /* PROCESS.RESOURCE.ICINIT.MULTILEA.SETRSID: */
*                       /* THIS SEGMENT FINDS THE RSID IN THE DEVICE */
*                       /* RECORD. PLMVSD POINTS TO THE DEVICE       */
*                       /* RECORD. THE FIRST BYTE OF THE DEVICE      */
*                       /* RECORD IS THE LENGTH OF THE DEVICE RECORD.*/
*                       /* THE NEXT TWO BYTES ARE THE RSID. MOVE THE */
*                       /* RSID TO A SAVEAREA, REMOVE THE SUBAREA    */
*                       /* ADDRESS, AND SAVE RSID IN THE OPCE.       */
*                       /*                                           */
*                       /*********************************************/
*                                                               06S0432
*                       DO;                                     06S0432
*                         RPARM=PLMVSU+12+AVTKEYLE;/* SET END OF THE
*                                      UNIT ADDRESS                  */
         LA    RPARM,12                                         06S0433
         AL    RPARM,PLMVSU(,RPLMV)                             06S0433
         AH    RPARM,AVTKEYLE(,RAVT)                            06S0433
*                         IF PLMVSD+3<=RPARM/* TEST FOR RSID FULLY
*                                      CONTAINED IN THIS UNIT        */
*                           THEN    /* RSID FULLY IN THIS UNIT       */
         L     @14,PLMVSD(,RPLMV)                               06S0434
         LA    @12,3                                            06S0434
         ALR   @12,@14                                          06S0434
         CR    @12,RPARM                                        06S0434
         BH    @RF00434                                         06S0434
*                           RSID=DEVID;/* SAVE RSID                  */
         MVC   RSID(2),DEVID(@14)                               06S0435
*                         ELSE      /* NOT FULLY IN THIS UNIT        */
*                           IF PLMVSD+2=RPARM/* TEST FOR FIRST BYTE
*                                      OF RSID IN THIS UNIT          */
*                             THEN  /* FIRST BYTE IS IN THIS UNIT    */
         B     @RC00434                                         06S0436
@RF00434 L     @14,PLMVSD(,RPLMV)                               06S0436
         LA    @12,2                                            06S0436
         ALR   @12,@14                                          06S0436
         CR    @12,RPARM                                        06S0436
         BNE   @RF00436                                         06S0436
*                             DO;                               06S0437
*                               RSID1=PLMVSD->MOVECHAR(2:2);/* GET
*                                      FIRST BYTE OF RSID            */
         MVC   RSID1(1),MOVECHAR+1(@14)                         06S0438
*                               RSID2=PLMVSU->ICTNTTIC->ICTNTDAT(1:1);
         L     @14,PLMVSU(,RPLMV)                               06S0439
         L     @14,ICTNTTIC(,@14)                               06S0439
         MVC   RSID2(1),ICTNTDAT(@14)                           06S0439
*                                   /* GET SECOND BYTE OF RSID FROM
*                                      THE NEXT UNIT                 */
*                             END;                              06S0440
*                           ELSE    /* RSID IN THE NEXT UNIT         */
*                             RSID=PLMVSU->ICTNTTIC->ICTNTDAT(1:2);/*
*                                      GET RSID FROM NEXT UNIT       */
         B     @RC00436                                         06S0441
@RF00436 L     @14,PLMVSU(,RPLMV)                               06S0441
         L     @14,ICTNTTIC(,@14)                               06S0441
         MVC   RSID(2),ICTNTDAT(@14)                            06S0441
*                         OCRSID=(SAVTZELM&&'FFFF'X)&RSID;/* CLEAR
*                                      SUBAREA ADDR FROM THE RESOURCE
*                                      ID                            */
@RC00436 DS    0H                                               06S0442
@RC00434 L     @14,AVTSAVTP(,RAVT)                              06S0442
         L     @12,@CF01742                                     06S0442
         LH    @14,SAVTZELM(,@14)                               06S0442
         N     @14,@CF01747                                     06S0442
         XR    @12,@14                                          06S0442
         SLR   @14,@14                                          06S0442
         ICM   @14,3,RSID                                       06S0442
         NR    @12,@14                                          06S0442
         STH   @12,OCRSID(,ROPCE)                               06S0442
*                       END;                                    06S0443
*                     END;                                      05S0444
*                   CKPTTCIN=OCTRMTBL;/* SET TNT OFFSET FOR THE 05S0445
*                                      DEVICE                        */
@RC00379 LH    @14,OCTRMTBL(,ROPCE)                             05S0445
         N     @14,@CF01747                                     05S0445
         STH   @14,CKPTTCIN(,RCKPT)                             05S0445
*                   CKPDATCT=DEVLEN+LENGTH(IEDBDU);/* SET DATA IN
*                                      CKPT RECORD TO LENGTH OF 05S0446
*                                      DEVICE RECORD PLUS LENGTH OF A
*                                      BDU                           */
         L     @14,PLMVSD(,RPLMV)                               05S0446
         LA    @12,6                                            05S0446
         SLR   @10,@10                                          05S0446
         IC    @10,DEVLEN(,@14)                                 05S0446
         ALR   @12,@10                                          05S0446
         STH   @12,CKPDATCT(,RCKPT)                             05S0446
*                 END;                                          05S0447
*               IF LENCNR+CKPDATCT>CKPBLKSZ/* TEST FOR CKPT DATA TOO
*                                      BIG FOR CKPT RECORD           */
*                 THEN              /* DATA IS TOO BIG               */
@RC00367 LH    @14,LENCNR                                       04S0448
         AH    @14,CKPDATCT(,RCKPT)                             04S0448
         CH    @14,CKPBLKSZ(,RCKPT)                             04S0448
         BNH   @RF00448                                         04S0448
*                 CKPENCDE=CKPTOOBG;/* SET 'DATA TOO BIG' MESSAGE
*                                      INDICATOR                     */
         MVI   CKPENCDE(RCKPT),X'0C'                            04S0449
*               RFY                                             04S0450
*                 RPLMV UNRSTD;                                 04S0450
@RF00448 DS    0H                                               04S0451
*             END;                                              04S0451
*           IF CKPENCDE=0           /* TEST FOR ERRORS DETECTED IN
*                                      ICHNG INITIALIZATION          */
*             THEN                  /* NO ERRORS FOUND               */
@RF00360 CLI   CKPENCDE(RCKPT),0                                03S0452
         BNE   @RF00452                                         03S0452
*                                                               04S0453
*             /*******************************************************/
*             /*                                                     */
*             /* PROCESS.RESOURCE.READINIT: INITIALIZE THE CKPT      */
*             /* WORKAREA FOR A READ OF THE CKPT RECORD.             */
*             /*                                                     */
*             /*******************************************************/
*                                                               04S0453
*             DO;                                               04S0453
*               RPARM=OCTRMTBL;     /* GET RESOURCE'S TNT OFFSET     */
         LH    RPARM,OCTRMTBL(,ROPCE)                           04S0454
         N     RPARM,@CF01747                                   04S0454
*               CKPNRSID=OCRSID;    /* GET RESOURCE TO BE CKPT'ED    */
         LH    @14,OCRSID(,ROPCE)                               04S0455
         N     @14,@CF01747                                     04S0455
         STH   @14,CKPNRSID(,RCKPT)                             04S0455
*               CALL IEDQTNT;       /* GET THE TERMINAL ENTRY ADDRESS
*                                      FOR THE RESOURCE              */
         L     @15,AVTRNMPT(,RAVT)                              04S0456
         BALR  @14,@15                                          04S0456
*               CKPTRMAD=RPARM-PREFIXSZ;/* SAVE TERM ENTRY PREFIX
*                                      ADDR                          */
         LR    @14,RPARM                                        04S0457
         SH    @14,PREFIXSZ                                     04S0457
         ST    @14,CKPTRMAD(,RCKPT)                             04S0457
*               IF TRMCKPRN=ON      /* DETERMINE WHICH RECORD TO
*                                      UPDATE                        */
*                 THEN              /* UPDATE THE SECOND RECORD      */
         TM    TRMCKPRN(@14),B'00000010'                        04S0458
         BNO   @RF00458                                         04S0458
*                 CKPNTRK=0;        /* CLEAR ALTERNATE RECORD   04S0459
*                                      INDICATOR TO INDICATE THAT
*                                      FIRST RECORD IS TO BE READ FOR
*                                      INFO                          */
         SLR   @14,@14                                          04S0459
         STH   @14,CKPNTRK(,RCKPT)                              04S0459
*               ELSE                /* UPDATE FIRST RECORD           */
*                 CKPNTRK=CKPTRKCN; /* SET ALTERNATE RECORD INDICATOR
*                                      TO INDICATE THAT SECOND RECORD
*                                      IS TO BE READ FOR INFO        */
         B     @RC00458                                         04S0460
@RF00458 LH    @14,CKPTRKCN(,RCKPT)                             04S0460
         STH   @14,CKPNTRK(,RCKPT)                              04S0460
*               MVC(CKPSLVAL,CKPSLNEW);/* SHIFT 'SELECT' VALUES FOR
*                                      NEXT PATH SELECTION           */
@RC00458 MVC   CKPSLVAL(3,RCKPT),CKPSLNEW(RCKPT)                04S0461
*               CKPRWCMD=CKPREAD;   /* SET READ COMMAND              */
         MVI   CKPRWCMD(RCKPT),X'06'                            04S0462
*               CKPRWBC=CKPBLKSZ;   /* SET LENGTH TO LENGTH OF A
*                                      BLOCK                         */
         LH    @14,CKPBLKSZ(,RCKPT)                             04S0463
         STH   @14,CKPRWBC(,RCKPT)                              04S0463
*             END;                                              04S0464
*         END;                                                  03S0465
*       ELSE                        /* GETMAIN FAILED                */
*         DO;                                                   03S0466
         B     @RC00357                                         03S0466
@RF00357 DS    0H                                               03S0467
*           CKPENCDE=CKPGETFL;      /* SET GETMAIN FAILED ERROR CODE */
         MVI   CKPENCDE(RCKPT),X'04'                            03S0467
*           CKPRWADD=0;             /* CLEAR DATA ADDRESS TO SHOW
*                                      GETMAIN FAILED                */
         SLR   @14,@14                                          03S0468
         STCM  @14,7,CKPRWADD(RCKPT)                            03S0468
*         END;                                                  03S0469
*     END;                                                      03S0470
@RC00357 DS    0H                                               03S0471
*   IF CKPENCDE=0                   /* TEST FOR I/O REQUESTED        */
*     THEN                          /* I/O WAS REQUESTED             */
@RC00327 CLI   CKPENCDE(RCKPT),0                                02S0471
         BNE   @RF00471                                         02S0471
*     DO;                                                       02S0472
*       CALL IEDQNW;                /* CALL ROUTINE TO START I/O     */
         L     @15,CAVTCRIO(,RCAVT)                             02S0473
         BALR  @14,@15                                          02S0473
*       CKPENCDE=REG15;             /* SAVE RETURN CODE              */
         STC   REG15,CKPENCDE(,RCKPT)                           02S0474
*     END;                                                      02S0475
*                                                               02S0476
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE THAT WAS   */
*   /* ALTERED BY THE MODULE PROCEDURE STATEMENT. REGISTER 2 AND     */
*   /* REGISTER 12 ARE RESTORED TO THEIR REQUIRED VALUE FOR IEDQNF.  */
*   /* IF I/O WAS STARTED, THEN RETURN TO IEDQNF TO WAIT FOR I/O     */
*   /* COMPLETION. IF I/O WAS NOT STARTED, RETURN TO IEDQNF          */
*   /* REQUESTING THAT IEDQNU BE LOADED TO WRITE AN ERROR MESSAGE AND*/
*   /* TO NOTIFY OP CONTROL THAT THE CKPT IS COMPLETE.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0476
*   RFY                                                         02S0476
*    (REG2,                                                     02S0476
*     REG12,                                                    02S0476
*     REG14) RSTD;                                              02S0476
@RF00471 DS    0H                                               02S0477
*   REG2=CAVTTCWA;                  /* RESTORE ADDRESS OF TCAM  02S0477
*                                      CHECKPOINT WORKAREA           */
         L     REG2,CAVTTCWA(,RCAVT)                            02S0477
*   REG12=CKPSAVE2(1);              /* RESTORE IEDQNF'S BASE REGISTER*/
         L     REG12,CKPSAVE2(,RCKPT)                           02S0478
*   REG14=CKPSAVE2(2);              /* RESTORE RETURN ADDRESS        */
         L     REG14,CKPSAVE2+4(,RCKPT)                         02S0479
*   IF CKPENCDE=0                   /* TEST FOR I/O STARTED          */
*     THEN                          /* I/O WAS STARTED               */
         CLI   CKPENCDE(RCKPT),0                                02S0480
         BNE   @RF00480                                         02S0480
*     DO;                                                       02S0481
*       CAVTWTG=CKPCNCPW;           /* SET WHERE-TO-GO TO MODULE ID
*                                      OF MODULE TO GET CONTROL WHEN
*                                      THE I/O COMPLETES             */
         MVI   CAVTWTG(RCAVT),X'78'                             02S0482
*       REG14=REG14+CKPRETNL;       /* SET IEDQNF RETURN POINT THAT
*                                      REQUESTS NO ADDITIONAL MODULE
*                                      LOAD                          */
         AL    REG14,@CF00327                                   02S0483
*     END;                                                      02S0484
*   ELSE                            /* I/O WAS NOT STARTED           */
*     DO;                                                       02S0485
         B     @RC00480                                         02S0485
@RF00480 DS    0H                                               02S0486
*       REG15=CKPCNCPW;             /* SET MODULE ID FOR NEXT MODULE
*                                      TO BE LOADED                  */
         LA    REG15,120                                        02S0486
*       CKPCUSEL=CKPNOTFY;          /* SET SELECT VALUE TO REQUEST
*                                      THAT OP CONTROL BE NOTIFIED
*                                      THAT CKPT HAS COMPLETED       */
         MVI   CKPCUSEL(RCKPT),X'0A'                            02S0487
*     END;                                                      02S0488
*   RFY                                                         02S0489
*    (REG2,                                                     02S0489
*     REG12,                                                    02S0489
*     REG14) UNRSTD;                                            02S0489
*   END IEDQNT                                                  01S0490
*                                                               01S0490
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCAVTD  )                                       */
*/*%INCLUDE SYSLIB  (TCKPD   )                                       */
*/*%INCLUDE SYSLIB  (TCNRD   )                                       */
*/*%INCLUDE SYSLIB  (TNCPID  )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (COMMAND )                                       */
*/*%INCLUDE SYSUT5  (CONTROL )                                       */
*/*%INCLUDE SYSUT5  (RESOURCE)                                       */
*/*%INCLUDE SYSUT5  (ICINIT  )                                       */
*/*%INCLUDE SYSUT5  (SWITCHID)                                       */
*/*%INCLUDE SYSUT5  (MULTILEA)                                       */
*/*%INCLUDE SYSUT5  (TNTINIT )                                       */
*/*%INCLUDE SYSUT5  (TNTMOVE )                                       */
*/*%INCLUDE SYSUT5  (SETRSID )                                       */
*/*%INCLUDE SYSUT5  (READINIT)                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*                                                               01S0490
*       ;                                                       01S0490
@EL00001 DS    0H                                               01S0490
@EF00001 DS    0H                                               01S0490
@ER00001 BR    @14                                              01S0490
@DATA    DS    0H
@SM01748 MVC   MOVECHAR(0,RPARM),MOVECHAR(@12)
         DS    0F
         DS    0F
@CF00066 DC    F'3'
@CF00327 DC    F'4'
@CF00071 DC    F'6'
@CF00235 DC    F'12'
@CF01747 DC    XL4'0000FFFF'
@CF01742 DC    XL4'FFFF'
         DS    0D
PREFIXSZ DC    AL2(14)
LENCNR   DC    AL2(CNRDVBDU-IEDQCNRD)
OFSENTRY DS    CL3
         ORG   OFSENTRY
OFFSET   DS    FL2
OFSTATUS DS    FL1
         ORG   OFSENTRY+3
RSID     DS    CL2
         ORG   RSID
RSID1    DS    CL1
RSID2    DS    CL1
         ORG   RSID+2
CMDTABLE DS    CL44
         ORG   CMDTABLE
CHNLD    DS    CL4
         ORG   CHNLD
@NM00172 DC    X'07'
@NM00173 DC    X'01'
@NM00174 DC    X'01'
@NM00175 DC    X'0A'
         ORG   CMDTABLE+4
BKUP     DS    CL4
         ORG   BKUP
@NM00176 DC    X'03'
@NM00177 DC    X'01'
@NM00178 DC    X'02'
@NM00179 DC    X'0A'
         ORG   CMDTABLE+8
IPLC     DS    CL4
         ORG   IPLC
@NM00180 DC    X'11'
@NM00181 DC    X'01'
@NM00182 DC    X'02'
@NM00183 DC    X'0A'
         ORG   CMDTABLE+12
SWBACK   DS    CL4
         ORG   SWBACK
@NM00184 DC    X'16'
@NM00185 DC    X'01'
@NM00186 DC    X'02'
@NM00187 DC    X'0A'
         ORG   CMDTABLE+16
ACTVTE   DS    CL4
         ORG   ACTVTE
@NM00188 DC    X'22'
@NM00189 DC    X'01'
@NM00190 DC    X'02'
@NM00191 DC    X'0A'
         ORG   CMDTABLE+20
BHSET    DS    CL4
         ORG   BHSET
@NM00192 DC    X'1D'
@NM00193 DC    X'02'
@NM00194 DC    X'01'
@NM00195 DC    X'0A'
         ORG   CMDTABLE+24
CHGSSP   DS    CL4
         ORG   CHGSSP
@NM00196 DC    X'A0'
@NM00197 DC    X'02'
@NM00198 DC    X'02'
@NM00199 DC    X'0A'
         ORG   CMDTABLE+28
CHGNP    DS    CL4
         ORG   CHGNP
@NM00200 DC    X'90'
@NM00201 DC    X'02'
@NM00202 DC    X'03'
@NM00203 DC    X'0A'
         ORG   CMDTABLE+32
SESSNL   DS    CL4
         ORG   SESSNL
@NM00204 DC    X'1E'
@NM00205 DC    X'02'
@NM00206 DC    X'04'
@NM00207 DC    X'0A'
         ORG   CMDTABLE+36
TRANL    DS    CL4
         ORG   TRANL
@NM00208 DC    X'1F'
@NM00209 DC    X'02'
@NM00210 DC    X'05'
@NM00211 DC    X'0A'
         ORG   CMDTABLE+40
SSELCT   DS    CL4
         ORG   SSELCT
@NM00212 DC    X'26'
@NM00213 DC    X'02'
@NM00214 DC    X'06'
@NM00215 DC    X'0A'
         ORG   CMDTABLE+44
ICHNG    DS    CL4
         ORG   ICHNG
@NM00216 DC    X'49'
ICHNGSEL DS    CL3
         ORG   ICHNGSEL
@NM00217 DC    X'02'
@NM00218 DC    X'07'
@NM00219 DC    X'0A'
         ORG   ICHNG+4
TCHNG    DS    CL4
         ORG   TCHNG
@NM00220 DC    X'56'
TCHNGSEL DS    CL3
         ORG   TCHNGSEL
@NM00221 DC    X'02'
@NM00222 DC    X'08'
@NM00223 DC    X'0A'
         ORG   TCHNG+4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RCAVT    EQU   @05
RCKPT    EQU   @04
ROPCE    EQU   @03
RPLMV    EQU   @08
RAVT     EQU   @09
REG00    EQU   @00
RPARM    EQU   @01
REG2     EQU   @02
RTAB     EQU   @06
RBASE    EQU   @11
REG12    EQU   @12
RSAVE    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
CVTPTR   EQU   16
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00003 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00003
AVTCKAVT EQU   @NM00003+1
AVTOCGET EQU   IEDQAVTD+392
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00083 EQU   IEDQAVTD+1232
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTMVBF EQU   IEDNSVTD+160
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDQCKAD EQU   0
CAVTTCWA EQU   IEDQCKAD
CAVTNWA  EQU   IEDQCKAD+4
CAVTWTG  EQU   IEDQCKAD+8
CAVTWL1  EQU   IEDQCKAD+12
CAVTWL2  EQU   CAVTWL1+8
CAVTCRIO EQU   IEDQCKAD+28
IEDQCKPD EQU   0
CKPSAVE1 EQU   IEDQCKPD
CKPIOB   EQU   IEDQCKPD+72
CKPIOECB EQU   CKPIOB+4
CKPIOSK  EQU   CKPIOB+32
CKPEXCP  EQU   IEDQCKPD+116
CKPECBL  EQU   IEDQCKPD+120
CKPCNVRT EQU   CKPECBL
CKPIOQL  EQU   IEDQCKPD+132
@NM00107 EQU   CKPIOQL
CKPCTTRB EQU   IEDQCKPD+144
CKPCRLEN EQU   IEDQCKPD+160
CKPCCWS  EQU   IEDQCKPD+168
CKPTIC   EQU   CKPCCWS+24
CKPRW    EQU   CKPCCWS+32
CKPRWCMD EQU   CKPRW
CKPRWADD EQU   CKPRW+1
CKPRWBC  EQU   CKPRW+6
@NM00110 EQU   IEDQCKPD+208
CKPGETML EQU   @NM00110
CKPMSG   EQU   IEDQCKPD+220
CKPMSGTX EQU   CKPMSG+4
CKPMSGTP EQU   CKPMSG+41
CKPCNTLR EQU   IEDQCKPD+288
CKPFLAGS EQU   CKPCNTLR
CKPPRQNO EQU   CKPCNTLR+17
IEDQCDRD EQU   0
CDRTTRLI EQU   IEDQCDRD+9
CDRDATA  EQU   IEDQCDRD+12
IEDQCRED EQU   0
CRELINK  EQU   IEDQCRED+4
CREOFFS  EQU   IEDQCRED+12
CKPREQTB EQU   0
CKPCTFLG EQU   CKPREQTB
CKPNRES  EQU   0
CKPNFLG  EQU   CKPNRES+4
CKPAVT   EQU   0
IEDQCNRD EQU   0
CNRDATTM EQU   IEDQCNRD+2
CNRCNTL  EQU   IEDQCNRD+10
CNRBHSET EQU   IEDQCNRD+12
CNRBHFUN EQU   CNRBHSET
CNRDEVRC EQU   IEDQCNRD+19
RCKPREC  EQU   0
IEDNCP   EQU   0
NCPFLAG1 EQU   IEDNCP+1
NCPREST  EQU   NCPFLAG1
NCPTRACE EQU   NCPFLAG1
NCPBKUPN EQU   IEDNCP+2
NCPTXID  EQU   IEDNCP+10
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
@NM00133 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00133
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCPARM   EQU   IEDQOPCE+28
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQOPCD EQU   0
OPCAQCTL EQU   IEDQOPCD+180
OPCLDNME EQU   IEDQOPCD+212
OPCCKPTF EQU   IEDQOPCD+248
OPCSPEC  EQU   IEDQOPCD+300
ROPCAVT  EQU   0
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLG1 EQU   IEDPLMV+18
PLMVFLG2 EQU   IEDPLMV+19
PLMVUNCA EQU   IEDPLMV+20
IEDPLMVP EQU   0
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
RTRM     EQU   0
MOVECHAR EQU   0
IEDMVBFR EQU   0
IEDQNW   EQU   0
IEDQTNT  EQU   0
ICTNT    EQU   0
ICTNTTIC EQU   ICTNT+8
ICTNTDAT EQU   ICTNT+12
ICTNTCTL EQU   ICTNTDAT
ICTNTNO  EQU   ICTNTCTL
ICTNTNU  EQU   ICTNTCTL+2
ICTNTOFF EQU   ICTNTDAT+3
MULTIPNT EQU   0
MULRCDS  EQU   MULTIPNT+4
LEASED   EQU   0
LEARCD   EQU   LEASED+2
DEVRCD   EQU   0
DEVLEN   EQU   DEVRCD
DEVID    EQU   DEVRCD+1
TABENTRY EQU   0
CMDID    EQU   TABENTRY
TABSELCT EQU   TABENTRY+1
CNTTDU   EQU   TABSELCT+1
CKPINIT  EQU   CKPEXCP
CKPTWA   EQU   CKPMSGTX
CKPSAVE2 EQU   CKPTWA
CKPTRMAD EQU   CKPTWA+60
CKPNCNTL EQU   CKPCNTLR
CKPTRSTA EQU   CKPNCNTL+2
CKPIPLTX EQU   CKPNCNTL+4
CKPBLKSZ EQU   CKPNCNTL+12
CKPTRKCN EQU   CKPNCNTL+16
CKPDATTM EQU   CKPNCNTL+22
CKPDATE  EQU   CKPDATTM
CKPTIME  EQU   CKPDATTM+4
CKPBCKUP EQU   CKPNCNTL+30
CKPNFLDS EQU   CKPEXCP
CKPENCDE EQU   CKPNFLDS+7
CKPNDEVF EQU   CKPNFLDS+12
CKPNSELT EQU   CKPNFLDS+16
CKPCUSEL EQU   CKPNSELT
CKPSLNEW EQU   CKPNSELT+1
CKPNTRK  EQU   CKPNFLDS+20
CKPNRSID EQU   CKPNFLDS+22
CKPSLVAL EQU   CKPNSELT
CKPOVER  EQU   CKPMSGTP+1
CKPOPNFL EQU   CKPFLAGS
CDRINCFM EQU   CDRTTRLI
CDRCREQR EQU   IEDQCDRD
CDRCKFLG EQU   CDRCREQR
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICTYPE EQU   OCICDADR
OCICSW   EQU   OCICDADR+3
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
IEDPRUQP EQU   PLMVSU
TRMPRE1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
ICCKPT   EQU   CKPSAVE2+8
CKPTNTUN EQU   ICCKPT
CKPTNTPT EQU   ICCKPT+4
CKPTNTLN EQU   ICCKPT+8
CKPTNTNB EQU   ICCKPT+10
CKPTC    EQU   ICCKPT+12
CKPTTCIN EQU   CKPTC
CKPDATCT EQU   CKPTC+2
CNRDVDAT EQU   CNRDEVRC
CNRDVPRF EQU   CNRDVDAT
CNRDVTC  EQU   CNRDVPRF
CNRDVBDU EQU   CNRDVDAT+12
BDUTEXT  EQU   BDUEND
CDROPCB  EQU   CDRDATA
CKPMSGPN EQU   CKPMSGTP+6
CKPTTRLT EQU   CKPTIC+5
OCCIB    EQU   OCREQVAL
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CNRDVRCD EQU   CNRDVDAT+18
@NM00170 EQU   CNRDVPRF+4
CNRDVC   EQU   CNRDVTC+2
CNRDVT   EQU   CNRDVTC
@NM00169 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00168 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
OCICINAC EQU   OCICSW
@NM00139 EQU   OCICSW
OCICATST EQU   OCICDADR+1
@NM00138 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
CDRCKOPT EQU   CDRCREQR+41
CDRCKPQB EQU   CDRCREQR+38
CDRCKQCB EQU   CDRCREQR+17
CDRCKQBC EQU   CDRCREQR+14
CDRCKMSG EQU   CDRCREQR+12
CDRCKOFF EQU   CDRCREQR+10
@NM00124 EQU   CDRCREQR+9
@NM00123 EQU   CDRCREQR+8
CDRCKOUT EQU   CDRCREQR+6
CDRCKIN  EQU   CDRCREQR+4
@NM00122 EQU   CDRCREQR+1
CDRCKRNC EQU   CDRCKFLG
CDROPTN  EQU   CDRINCFM+7
CDRSEQOU EQU   CDRINCFM+5
CDRSEQIN EQU   CDRINCFM+3
CDROFFS  EQU   CDRINCFM+1
CDRSTAT  EQU   CDRINCFM
@NM00121 EQU   CKPOPNFL
CKPOPNCR EQU   CKPOPNFL
CKPOPNIN EQU   CKPOPNFL
CKPOPNEN EQU   CKPOPNFL
@NM00120 EQU   CKPOPNFL
CKPTRKSA EQU   CKPOVER+4
CKPTRKLN EQU   CKPOVER+2
CKPRCDSR EQU   CKPOVER
CKPNTTE  EQU   CKPNFLDS+8
@NM00119 EQU   CKPNFLDS
@NM00118 EQU   CKPNCNTL+21
CKPBLKPT EQU   CKPNCNTL+20
@NM00117 EQU   CKPNCNTL+18
@NM00116 EQU   CKPNCNTL+14
CKPSWTCH EQU   CKPNCNTL+3
@NM00115 EQU   CKPNCNTL
CKPCTTRA EQU   CKPINIT+24
@NM00114 EQU   CKPINIT+22
CKPIPERE EQU   CKPINIT+20
CKPDATIM EQU   CKPINIT+12
CKPCTTRC EQU   CKPINIT+8
CKPDATLN EQU   CKPINIT+6
CKPKEYLN EQU   CKPINIT+5
CKPRCDNO EQU   CKPINIT+4
CKPHEDNO EQU   CKPINIT+2
CKPCYLNO EQU   CKPINIT
NOTIFY   EQU   TABSELCT+2
RESPATH  EQU   CNTTDU
TYPE     EQU   TABSELCT
DEVDATA  EQU   DEVRCD+3
LEADESC  EQU   LEASED+1
LEANCPLV EQU   LEASED
MULCURNB EQU   MULTIPNT+3
MULMAX   EQU   MULTIPNT+2
MULDESC  EQU   MULTIPNT+1
MULNCPLV EQU   MULTIPNT
@NM00171 EQU   ICTNT
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00167 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00166 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00165 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
@NM00164 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00163 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00162 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00161 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00160 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHSDI EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00159 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00158 EQU   PRUTIC
@NM00157 EQU   IEDPRUQD+4
@NM00156 EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
PLMVSCTG EQU   PLMVFLG1
PLMVUNCF EQU   PLMVFLG1
OPCBOTTM EQU   IEDQOPCD+1172
@NM00155 EQU   IEDQOPCD+1088
@NM00154 EQU   IEDQOPCD+936
@NM00153 EQU   IEDQOPCD+928
@NM00152 EQU   IEDQOPCD+368
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00151 EQU   OPCSPEC
@NM00150 EQU   OPCSPEC
@NM00149 EQU   OPCSPEC
@NM00148 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
@NM00147 EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCGETBF EQU   IEDQOPCD+276
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00146 EQU   OPCLDNME+5
OPCMODID EQU   OPCLDNME+3
@NM00145 EQU   OPCLDNME
OPCXCTL  EQU   IEDQOPCD+204
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCSAVE  EQU   IEDQOPCD+56
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00144 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCCOPCE EQU   IEDQOPCD+12
OPCAVTPT EQU   IEDQOPCD+8
OPCDOUBL EQU   IEDQOPCD
@NM00143 EQU   OCLDNME+4
@NM00142 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00141 EQU   OCREQFLG
@NM00140 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00137 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCCKDAT1 EQU   OCRSTGTM
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCWTG    EQU   IEDQOPCE+30
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00136 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00135 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00134 EQU   @NM00133+2
OCCONID  EQU   OCDEST
OCRLN    EQU   IEDQOPCE+15
OCRESP   EQU   OCFLAG
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00132 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00131 EQU   OCRUDEST+1
@NM00130 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
NCPLTRAC EQU   IEDNCP+26
NCPCKPT  EQU   IEDNCP+22
NCPDPDCB EQU   IEDNCP+18
@NM00129 EQU   NCPFLAG1
NCPBKUP  EQU   NCPFLAG1
NCPIPLD  EQU   NCPFLAG1
NCPBGUP  EQU   NCPFLAG1
NCPDAUTO EQU   NCPFLAG1
NCPIAUTO EQU   NCPFLAG1
NCPLEN   EQU   IEDNCP
CNRMSSEL EQU   IEDQCNRD+18
CNRCTLIM EQU   IEDQCNRD+17
CNRCSLIM EQU   IEDQCNRD+16
CNRNEGPL EQU   IEDQCNRD+15
CNRSSPAU EQU   IEDQCNRD+14
CNRBHPOS EQU   CNRBHSET+1
@NM00128 EQU   CNRBHFUN
CNRBHFN0 EQU   CNRBHFUN
@NM00127 EQU   CNRCNTL+1
CNRFRDR  EQU   CNRCNTL
CNRFMSS  EQU   CNRCNTL
CNRFCTL  EQU   CNRCNTL
CNRFCSL  EQU   CNRCNTL
CNRFNPL  EQU   CNRCNTL
CNRFSSP  EQU   CNRCNTL
CNRFBHSC EQU   CNRCNTL
CNRFBHS  EQU   CNRCNTL
CNRTIME  EQU   CNRDATTM+4
CNRDATE  EQU   CNRDATTM
CNRTNTOF EQU   IEDQCNRD
CKPIOTR  EQU   CKPAVT+21
CKPSUBT  EQU   CKPAVT+20
CKPLODPT EQU   CKPAVT+16
CKPRADDR EQU   CKPAVT+12
CKPNADDR EQU   CKPAVT+8
CKPBIT2  EQU   CKPAVT+7
CKPBIT1  EQU   CKPAVT+6
CKPINTLV EQU   CKPAVT+4
CKPOPCIN EQU   CKPAVT+2
CKPOPCON EQU   CKPAVT
CKPTYPE  EQU   CKPNRES+5
@NM00126 EQU   CKPNFLG
CKPLULOG EQU   CKPNFLG
CKPEPMOD EQU   CKPNFLG
CKPRSACT EQU   CKPNFLG
CKPREMB  EQU   CKPNFLG
CKPCOHRT EQU   CKPNRES+2
CKPSUBST EQU   CKPNRES
CKPCTSEC EQU   CKPREQTB+6
CKPCTOFF EQU   CKPREQTB+4
CKPCTTTR EQU   CKPREQTB+1
CKPCTDER EQU   CKPCTFLG
CKPCTACT EQU   CKPCTFLG
CREDEB   EQU   CREOFFS
CREECB   EQU   IEDQCRED+8
@NM00125 EQU   CRELINK+1
CREPRI   EQU   CRELINK
CREQCBAD EQU   IEDQCRED+1
CREKEY   EQU   IEDQCRED
CDRKEY   EQU   IEDQCDRD+8
CDRTIME  EQU   IEDQCDRD+4
CDRDATE  EQU   IEDQCDRD
CKPSECT1 EQU   CKPCNTLR+37
CKPTTRT1 EQU   CKPCNTLR+34
CKPSECIN EQU   CKPCNTLR+32
CKPSECCR EQU   CKPCNTLR+30
CKPSECLI EQU   CKPCNTLR+28
CKPSECLT EQU   CKPCNTLR+26
CKPINCLN EQU   CKPCNTLR+24
CKPTTRLI EQU   CKPCNTLR+21
CKPRPERT EQU   CKPCNTLR+20
CKPCKRLN EQU   CKPCNTLR+18
CKPCPERT EQU   CKPPRQNO
CKPIPERT EQU   CKPCNTLR+16
CKPCPRCD EQU   CKPCNTLR+15
CKPCKRQS EQU   CKPCNTLR+14
CKPBPERR EQU   CKPCNTLR+12
CKPTTRIN EQU   CKPCNTLR+9
CKPINRNO EQU   CKPCNTLR+8
CKPTTRCR EQU   CKPCNTLR+5
CKPCRRNO EQU   CKPCNTLR+4
CKPINCNO EQU   CKPCNTLR+3
CKPINCNT EQU   CKPCNTLR+2
CKPTTRCT EQU   CKPCNTLR+1
CKPOPCRD EQU   CKPFLAGS
CKPOPTFN EQU   CKPFLAGS
CKPSTAIN EQU   CKPFLAGS
CKPERR   EQU   CKPFLAGS
@NM00113 EQU   CKPFLAGS
CKPFSCN2 EQU   CKPFLAGS
CKPFSCN1 EQU   CKPFLAGS
CKPNORML EQU   CKPFLAGS
@NM00112 EQU   CKPMSG+65
CKPMSGGL EQU   CKPMSG+61
@NM00111 EQU   CKPMSG+2
CKPMSGLN EQU   CKPMSG
CKPWKALN EQU   @NM00110+10
@NM00109 EQU   CKPRW+5
CKPRWFLG EQU   CKPRW+4
CKPSCHID EQU   CKPCCWS+16
CKPSETSC EQU   CKPCCWS+8
CKPSEEKC EQU   CKPCCWS
@NM00108 EQU   IEDQCKPD+164
CKPERRCT EQU   IEDQCKPD+163
CKPSWCH2 EQU   IEDQCKPD+162
CKPSWCH1 EQU   IEDQCKPD+161
CKPPARM2 EQU   IEDQCKPD+156
CKPCPARM EQU   IEDQCKPD+148
CKPSECTR EQU   CKPCTTRB
CKPLDRB  EQU   IEDQCKPD+140
CKPLREB  EQU   IEDQCKPD+136
CKPNDRB  EQU   @NM00107
CKPIOQF  EQU   IEDQCKPD+128
CKPEPLOC EQU   CKPCNVRT
CKPECB   EQU   IEDQCKPD+112
CKPIOR   EQU   CKPIOSK+7
CKPIOHH  EQU   CKPIOSK+5
CKPIOCC  EQU   CKPIOSK+3
CKPIOBB  EQU   CKPIOSK+1
CKPIOM   EQU   CKPIOSK
CKPIORC  EQU   CKPIOB+30
CKPIOBCI EQU   CKPIOB+28
CKPIORST EQU   CKPIOB+25
@NM00106 EQU   CKPIOB+24
CKPIODCB EQU   CKPIOB+21
@NM00105 EQU   CKPIOB+20
CKPIOCPA EQU   CKPIOB+17
CKPIOSIO EQU   CKPIOB+16
CKPIOCSW EQU   CKPIOB+9
CKPIOFL3 EQU   CKPIOB+8
@NM00104 EQU   CKPIOECB+1
CKPIOECC EQU   CKPIOECB
CKPIOSN1 EQU   CKPIOB+3
CKPIOSN0 EQU   CKPIOB+2
CKPIOFL2 EQU   CKPIOB+1
CKPIOFL1 EQU   CKPIOB
CAVTNIOE EQU   CAVTWL2+5
CAVTEOL3 EQU   CAVTWL2+4
CAVTNQE  EQU   CAVTWL2+1
CAVTEOL2 EQU   CAVTWL2
CAVTTIOE EQU   CAVTWL1+5
CAVTEOL1 EQU   CAVTWL1+4
CAVTTQE  EQU   CAVTWL1
@NM00103 EQU   IEDQCKAD+10
CAVTFLGS EQU   IEDQCKAD+9
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
BDUMODIF EQU   IEDBDU+1
BDUCMND  EQU   IEDBDU
SAVTBITN EQU   IEDNSVTD+312
@NM00102 EQU   SAVTCKQB+8
@NM00101 EQU   SAVTCKEC+1
@NM00100 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00099 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00098 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00097 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00096 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
@NM00095 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00094 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00093 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00092 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00091 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00090 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00089 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00088 EQU   IEDQAVTD+1242
@NM00087 EQU   IEDQAVTD+1241
@NM00086 EQU   IEDQAVTD+1240
@NM00085 EQU   IEDQAVTD+1237
@NM00084 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00083
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00082 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00081 EQU   IEDQAVTD+1140
@NM00080 EQU   IEDQAVTD+1137
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
@NM00074 EQU   AVTBIT4
@NM00073 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00072 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00071 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00070 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00069 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00068 EQU   AVTBIT2
@NM00067 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00066 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00065 EQU   IEDQAVTD+950
@NM00064 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00063 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL2
@NM00058 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00050 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00049 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00048 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00047 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00046 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00045 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00037 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00036 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00035 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00020 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTCRDYN EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00018 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00014 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00013 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00012 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTOSECB EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00452 EQU   @RC00357
@RC00480 EQU   @EL00001
@ENDDATA EQU   *
         END   IEDQNT,(C'PLS0353',0701,76363)
