         TITLE 'IGFDD0, DISK SELECT                                  '
IGFDD0   CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGFDD0    73.192'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @08,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@08                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @09,@01                                             0001
         USING @DATD,@09                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @09,8(,@13)                                         0001
         LR    @13,@09                                             0001
*                                   /* LIST VERSION                  */
*   DO;                             /* ?IGFDERR INIT                 */
*                                                                  0084
*     /***************************************************************/
*     /*                                                             */
*     /* IGFDERR - INITIALIZE RECOVERY ENVIRONMENT                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0085
*     DERPLIST=DERPLIST&&DERPLIST;  /* CLEAR PARAMETER LIST          */
         XC    DERPLIST(48),DERPLIST                               0085
*     DERFUNK=DERINIT;              /* INDICATE INIT FUNCTION        */
         MVI   DERFUNK,X'01'                                       0086
*     DERREC=ADDR(DERRECPM);        /* POINT TO REC PARMS            */
         LA    @14,DERRECPM                                        0087
         ST    @14,DERREC                                          0087
*     DERRETRY=ADDR(IGFDD0R);       /* POINT TO RETRY ROUTINE        */
         LA    @14,IGFDD0R                                         0088
         ST    @14,DERRETRY                                        0088
*     GEN SETS(DERDATD)(MVC DERDATD,@SIZDATD);/* SET UP SPN, SIZE    */
         MVC DERDATD,@SIZDATD
*     DERDISK='1'B;                 /* INDICATE RESOURCE HELD        */
         OI    DERDISK,B'00100000'                                 0090
*     DERPFX=DERRMASK;              /* SET UP RUB MASK               */
         MVC   DERPFX(2),@CB00270                                  0091
*     DERRCODE=CODEBASE;            /* SAVE CODEREG                  */
         ST    CODEBASE,DERRCODE                                   0092
*     DERRDATA=DATABASE;            /* SAVE DATAREG                  */
         ST    DATABASE,DERRDATA                                   0093
*     DERRDDR=DDRPTR;               /* SAVE DDRCOM POINTER           */
         ST    DDRPTR,DERRDDR                                      0094
*     DERRSAVE=SAVEPTR;             /* SAVE REGISTER 13              */
         ST    SAVEPTR,DERRSAVE                                    0095
*     CALL IGFDE0(DERPLIST);        /* ISSUE ESTAE                   */
         LA    @14,DERPLIST                                        0096
         ST    @14,@AL00001                                        0096
         L     @15,@CV00219                                        0096
         LA    @01,@AL00001                                        0096
         BALR  @14,@15                                             0096
*   END;                            /* ?IGFDERR INIT                 */
*                                   /* ESTAE ESTABLISHED             */
*   DDRINV2=DDRVUS;                 /* VALIDATE USER                 */
         MVI   DDRINV2(DDRPTR),X'03'                               0098
*   CALL IGFDD1;                    /* DISK VALIDATE MODULE          */
         L     @15,@CV00220                                        0099
         BALR  @14,@15                                             0099
*   IF RTNCODE^=0 THEN              /* RETURN CODE                   */
         LTR   RTNCODE,RTNCODE                                     0100
         BZ    @RF00100                                            0100
*     DO;                           /* IS NON-ZERO                   */
*       DDRTER1=DDRTNF;             /* SET USER NOT FOUND            */
         MVI   DDRTER1(DDRPTR),X'01'                               0102
*       DERLRC=4;                   /* SET LOCAL RETURN CODE         */
         MVI   DERLRC,X'04'                                        0103
*     END;                                                         0104
*   ELSE                                                           0105
*     DO;                           /* RETURN CODE IS ZERO           */
*                                                                  0105
         B     @RC00100                                            0105
@RF00100 DS    0H                                                  0106
*/*  OBTAIN A RESOURCE VIA ENQ                                       */
*                                                                  0106
*       DO;                         /* ENQ (QNAME,RNAME,E,,SYSTEM) 0106
*                                      RET(USE)                      */
*         RESPECIFY                                                0107
*          (GPR01P)RESTRICTED;                                     0107
*         I056(1:16)=I056(1:16)&&I056(1:16);/* ZERO OUT THE TABLE    */
         XC    I056(16),I056                                       0108
*         I05604(1)=LENGTH(RNAME);  /* LENGTH OF MINOR RESOURCE NAME */
         MVI   I05604,X'05'                                        0109
*         I05606(1)=ADDR(QNAME);    /* ADDRESS OF MAJOR RESOURCE NAME*/
         LA    @14,QNAME                                           0110
         ST    @14,I05606                                          0110
*         I05607(1)=ADDR(RNAME);    /* ADDRESS OF MINOR RESOURCE NAME*/
         LA    @14,RNAME                                           0111
         ST    @14,I05607                                          0111
*         I05603(1)='01000000'B;    /* SET BIT STRING 1 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05603,B'01000000'                                  0112
*         I05605(1)='01000011'B;    /* SET BIT STRING 2 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05605,B'01000011'                                  0113
*         I05603(1,1)='1'B;         /* SET END OF LIST BIT           */
         OI    I05603,B'10000000'                                  0114
*         GPR01P=ADDR(I05602);      /* LOAD LIST ADDRESS             */
         LA    GPR01P,I05602                                       0115
*         SVC(56);                  /* ISSUE ENQ SVC                 */
         SVC   56                                                  0116
*         RESPECIFY                                                0117
*          (GPR01P)UNRESTRICTED;                                   0117
*       END;                        /* ENQ (QNAME,RNAME,E,,SYSTEM) 0118
*                                      RET(USE)                      */
*       IF RTNCODE=0 THEN           /* ENQ SUCCESSFUL                */
         LTR   RTNCODE,RTNCODE                                     0119
         BNZ   @RF00119                                            0119
*         DDRRDENQ='1'B;            /* YES-SET DDRCOM BIT THAT     0120
*                                      INDICATES THAT DDR OWN'S THIS
*                                      RESOURCE                      */
         OI    DDRRDENQ(DDRPTR),B'00100000'                        0120
*       CALL IGFDV0;                /* BRANCH TO COMMON SECLECT      */
@RF00119 L     @15,@CV00222                                        0121
         BALR  @14,@15                                             0121
*       DERLRC=RTNCODE;             /* SET LOCAL RETURN CODE TO REG
*                                      15                            */
         STC   RTNCODE,DERLRC                                      0122
*       IF DERLRC=0 THEN            /* IS RETURN CODE ZERO           */
         SR    @14,@14                                             0123
         IC    @14,DERLRC                                          0123
         LTR   @14,@14                                             0123
         BNZ   @RF00123                                            0123
*         DO;                       /* YES - ISSUE PROCEED MESSAGE 0124
*                                      (IGF502E)                     */
*           DO;                     /* ?IGFDMSG MSG(IGF502E)       0125
*                                      CODE(FROM-CUA,TO-CUA) RETRY(6)*/
*                                                                  0125
*             /*******************************************************/
*             /*                                                     */
*             /* IGFDMSG - INVOKE THE DDR/MIH MESSAGE WRITER         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0126
*             DDRMSGCD=DDRM502E;    /* SET UP MSG CODE               */
         MVI   DDRMSGCD(DDRPTR),X'03'                              0126
*             DDRMSGPN=2;           /* SET UP NO. OF SUBST. CODES    */
         MVI   DDRMSGPN(DDRPTR),X'02'                              0127
*             DDRMSGPC(1)=DDRPFM;   /* SET SUBSTITUTION CODE 1       */
         MVI   DDRMSGPC(DDRPTR),X'02'                              0128
*             DDRMSGPC(2)=DDRPTO;   /* SET SUBSTITUTION CODE 2       */
         MVI   DDRMSGPC+1(DDRPTR),X'03'                            0129
*             RTNCODE=12;           /* INDICATE MESSAGE NOT DONE YET */
         LA    RTNCODE,12                                          0130
*             DO DDRRETRY=1 TO 6 WHILE(RTNCODE=12);/* LOOP UNTIL MSG
*                                      DONE                          */
         LA    @14,1                                               0131
         STC   @14,DDRRETRY(,DDRPTR)                               0131
@DL00131 CH    RTNCODE,@CH00288                                    0131
         BNE   @DC00131                                            0131
*               CALL IGFDM0;        /* OUTPUT MESSAGE                */
         L     @15,@CV00221                                        0132
         BALR  @14,@15                                             0132
*             END;                  /* END OF RETRY LOOP             */
         LA    @14,1                                               0133
         SR    @12,@12                                             0133
         IC    @12,DDRRETRY(,DDRPTR)                               0133
         AR    @14,@12                                             0133
         STC   @14,DDRRETRY(,DDRPTR)                               0133
         CH    @14,@CH00289                                        0133
         BNH   @DL00131                                            0133
@DC00131 DS    0H                                                  0134
*           END;                    /* ?IGFDMSG MSG(IGF502E)       0134
*                                      CODE(FROM-CUA,TO-CUA) RETRY(6)*/
*           DDRTER1=0;              /* IGNORE ALL ERRORS             */
         MVI   DDRTER1(DDRPTR),X'00'                               0135
*         END;                                                     0136
*     END;                                                         0137
@RF00123 DS    0H                                                  0138
*   IF DDRRDENQ='1'B THEN           /* IS ALLOCATION RESOURCE HELD   */
@RC00100 TM    DDRRDENQ(DDRPTR),B'00100000'                        0138
         BNO   @RF00138                                            0138
*     DO;                           /* YES                           */
*                                                                  0139
*       /*************************************************************/
*       /*                                                           */
*       /* DEQUEUE ROUTINE                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0140
*       DO;                         /* DEQ (QNAME,RNAME,,SYSTEM)   0140
*                                      RET(HAVE)                     */
*         I048(1:20)=I048(1:20)&&I048(1:20);                       0141
         XC    I048(20),I048                                       0141
*         RFY                                                      0142
*           GPR01F RESTRICTED;                                     0142
*         I04804(1)='11000000'B;    /* LISTEND BYTE                  */
         MVI   I04804,B'11000000'                                  0143
*         I04805(1)=LENGTH(RNAME);  /* SET LENGTH                    */
         MVI   I04805,X'05'                                        0144
*         I04806(1)='01000001'B;    /* OPTIONS                       */
         MVI   I04806,B'01000001'                                  0145
*         I04807(1)=ADDR(QNAME);    /* QNAME ADDRESS                 */
         LA    @14,QNAME                                           0146
         ST    @14,I04807                                          0146
*         I04808(1)=ADDR(RNAME);    /* RNAME ADDRESS                 */
         LA    @14,RNAME                                           0147
         ST    @14,I04808                                          0147
*         GPR01F=ADDR(I04802);                                     0148
         LA    GPR01F,I04802                                       0148
*         SVC(48);                                                 0149
         SVC   48                                                  0149
*         RFY                                                      0150
*           GPR01F UNRESTRICTED;                                   0150
*       END;                        /* DEQ (QNAME,RNAME,,SYSTEM)   0151
*                                      RET(HAVE)                     */
*       DDRRDENQ='0'B;              /* CLEAR DDRCOM BIT THAT       0152
*                                      INDICATES THAT DDR OWN'S THIS
*                                      RESOURCE                      */
         NI    DDRRDENQ(DDRPTR),B'11011111'                        0152
*     END;                                                         0153
*                                                                  0153
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE COMMON EXIT ROUTINE FOR THIS MODULE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0154
*IGFDD0R:                                                          0154
*   ;                                                              0154
@RF00138 DS    0H                                                  0154
IGFDD0R  DS    0H                                                  0155
*   DO;                             /* ?IGFDERR CANCEL               */
*                                                                  0155
*     /***************************************************************/
*     /*                                                             */
*     /* IGFDERR - CANCEL RECOVERY ENVIRONMENT                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0156
*     DERFUNK=DERCANC;              /* INDICATE CANCEL               */
         MVI   DERFUNK,X'02'                                       0156
*     CALL IGFDE0(DERPLIST);        /* CANCEL ESTAE                  */
         LA    @14,DERPLIST                                        0157
         ST    @14,@AL00001                                        0157
         L     @15,@CV00219                                        0157
         LA    @01,@AL00001                                        0157
         BALR  @14,@15                                             0157
*   END;                            /* ?IGFDERR CANCEL               */
*                                   /* ESTAE CANCEL                  */
*   RETURN CODE(DERLRC);            /* BACK TO CALLER                */
         SR    @12,@12                                             0159
         IC    @12,DERLRC                                          0159
         L     @13,4(,@13)                                         0159
         L     @00,@SIZDATD                                        0159
         LR    @01,@09                                             0159
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@12                                             0159
         L     @14,12(,@13)                                        0159
         LM    @00,@12,20(@13)                                     0159
         BR    @14                                                 0159
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31)REG(1),                                      0160
*     GPR01P PTR(31)REG(1);                                        0160
*   DCL                                                            0161
*     1 I056 DEF(ILIST)BDY(WORD)CHAR(32767),/* LIST FOR ENQ          */
*       3 I05601 PTR(31),           /* TCB OR ECB ADDRESS            */
*       3 I05602(*)CHAR(12)BDY(WORD),/* ARRAY OF RESOURCE ELEMENTS   */
*         5 I05603 BIT(8),          /* BIT FLAGS 1                   */
*         5 I05604 PTR(8),          /* MINOR RESOURCE NAME LENGTH    */
*         5 I05605 BIT(8),          /* BIT FLAGS 2                   */
*         5 * CHAR(1),              /* CONTROL PGM USE               */
*         5 I05606 PTR(31),         /* MAJOR RESOURCE NAME ADDR      */
*         5 I05607 PTR(31);         /* MINOR RESOURCE NAME ADDR      */
*   DCL                                                            0162
*     1 I048 DEF(ILIST)CHAR(32767)BDY(WORD),                       0162
*       3 I04801 PTR(31),           /* TCB ADDR                      */
*       3 I04802(*)CHAR(12)BDY(WORD),                              0162
*         5 I04803 PTR(31),         /* UCB @ IN LAST ENTRY           */
*           7 I04804 BIT(8),        /* FLAGS                         */
*           7 I04805 PTR(8),        /* MINOR RESOURCE NAME LENGTH    */
*           7 I04806 BIT(8),        /* FLAGS                         */
*           7 * CHAR(1),            /* CONTROL PROGRAM USE           */
*         5 I04807 PTR(31),         /* MAJOR RESOURCE NAME @         */
*         5 I04808 PTR(31);         /* MINOR RESOURCE NAME @         */
*   DECLARE                                                        0163
*     ILIST CHAR(20)BDY(DWORD);     /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256)BASED,                                        0164
*     I031F FIXED(31)BASED,                                        0164
*     I031P PTR(31)BASED,                                          0164
*     I015F FIXED(15)BASED,                                        0164
*     I015P PTR(15)BASED,                                          0164
*     I008P PTR(8)BASED,                                           0164
*     I001C CHAR(1)BASED;                                          0164
*   END IGFDD0                                                     0165
*                                                                  0165
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHADDR  )                                       */
*                                                                  0165
*       ;                                                          0165
@EL00001 L     @13,4(,@13)                                         0165
@EF00001 L     @00,@SIZDATD                                        0165
         LR    @01,@09                                             0165
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0165
         BR    @14                                                 0165
@DATA    DS    0H
@CH00289 DC    H'6'
@CH00288 DC    H'12'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    1A
IGFDD0   CSECT
         DS    0F
@DATD    DSECT
         DS    0D
DERPLIST DS    CL48
         ORG   DERPLIST
DERFUNK  DS    AL1
DERSWCHS DS    BL1
         ORG   DERSWCHS
DERCRASH DS    BL1
DERPERK  EQU   DERSWCHS+0
DERECALL EQU   DERSWCHS+0
DERESTAE EQU   DERSWCHS+0
@NM00008 EQU   DERSWCHS+0
         ORG   DERPLIST+2
@NM00009 DS    CL2
DERREC   DS    AL4
DERSPEC  DS    AL4
DERRETRY DS    AL4
DERDATD  DS    CL4
         ORG   DERDATD
DERDASPN DS    FL1
DERDALNG DS    FL3
         ORG   DERPLIST+20
DERRSRC  DS    BL1
         ORG   DERRSRC
DERTAPE  DS    BL1
DERUREC  EQU   DERRSRC+0
DERDISK  EQU   DERRSRC+0
@NM00010 EQU   DERRSRC+0
         ORG   DERPLIST+21
DERLRC   DS    AL1
DERRUB   DS    CL18
         ORG   DERRUB
DERPFX   DS    BL2
DERRCODE DS    AL4
DERRDATA DS    AL4
DERRDDR  DS    AL4
DERRSAVE DS    AL4
         ORG   DERPLIST+40
DERGMSPL DS    CL4
         ORG   DERGMSPL
DERGMSPN DS    FL1
DERGMLNG DS    FL3
         ORG   DERPLIST+44
DERGMADR DS    AL4
         ORG   DERPLIST+48
ILIST    DS    CL20
@ENDDATD EQU   *
IGFDD0   CSECT
         DS    0F
@SIZDATD DC    AL1(245)
         DC    AL3(@ENDDATD-@DATD)
@CV00219 DC    V(IGFDE0)
@CV00220 DC    V(IGFDD1)
@CV00221 DC    V(IGFDM0)
@CV00222 DC    V(IGFDV0)
         DS    0D
@CB00270 DC    B'0000000011100100'
QNAME    DC    CL8'SYSIEFSD'
RNAME    DC    CL5'DDRDA'
DERRECPM DS    CL24
         ORG   DERRECPM
@NM00011 DC    CL8'IGFDI0'
@NM00012 DC    CL8'IGFDD0'
@NM00013 DC    CL8'73192'
         ORG   DERRECPM+24
         DS    CL1
IGFDD0P  DC    13F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CODEBASE EQU   @08
DATABASE EQU   @09
DDRPTR   EQU   @10
SAVEPTR  EQU   @13
RTNCODE  EQU   @15
GPR01P   EQU   @01
GPR01F   EQU   @01
DDRCOM   EQU   0
DDRSHORT EQU   DDRCOM
DDRCNTRL EQU   DDRSHORT+8
DDRSRC   EQU   DDRCNTRL
DDRSTAT  EQU   DDRCNTRL+1
DDRDCHAR EQU   DDRCNTRL+2
DDRDSTAT EQU   DDRDCHAR+1
DDRLONG  EQU   DDRCOM+24
DDRROWN  EQU   DDRLONG+8
DDRRDENQ EQU   DDRROWN
DDRMIHT  EQU   DDRLONG+12
DDRTER   EQU   DDRLONG+36
DDRTER1  EQU   DDRTER
DDRINV   EQU   DDRLONG+38
DDRINV2  EQU   DDRINV+1
DDRAPP   EQU   DDRLONG+40
DDRIOF   EQU   DDRLONG+52
DDRIOF2  EQU   DDRIOF+1
DDRMSG   EQU   DDRLONG+54
DDRMSGCD EQU   DDRMSG+1
DDRMSGP  EQU   DDRLONG+56
DDRMSGPN EQU   DDRMSGP
DDRMSGPC EQU   DDRMSGP+1
DDRLABEL EQU   DDRLONG+64
DDRRETRY EQU   DDRLONG+65
DDRREC   EQU   DDRLONG+66
DDRREC2  EQU   DDRREC+1
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
I056     EQU   ILIST
I05602   EQU   I056+4
I05603   EQU   I05602
I05604   EQU   I05602+1
I05605   EQU   I05602+2
I05606   EQU   I05602+4
I05607   EQU   I05602+8
I048     EQU   ILIST
I04802   EQU   I048+4
I04803   EQU   I04802
I04804   EQU   I04803
I04805   EQU   I04803+1
I04806   EQU   I04803+2
I04807   EQU   I04802+4
I04808   EQU   I04802+8
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00015 EQU   I04803+3
I04801   EQU   I048
@NM00014 EQU   I05602+3
I05601   EQU   I056
@NM00007 EQU   DDRREC2
DDRRFMTO EQU   DDRREC2
DDRREC1  EQU   DDRREC
DDRLNOP  EQU   DDRLABEL
@NM00006 EQU   DDRLABEL
DDRLSD   EQU   DDRLABEL
DDRLNSL  EQU   DDRLABEL
DDRLNL   EQU   DDRLABEL
DDRLBLP  EQU   DDRLABEL
DDRLAL   EQU   DDRLABEL
DDRMSGOP EQU   DDRMSG
@NM00005 EQU   DDRIOF2
DDRICNT  EQU   DDRIOF2
DDRIMNT  EQU   DDRIOF2
DDRILAB  EQU   DDRIOF2
DDRITAKE EQU   DDRIOF2
DDRWHICH EQU   DDRIOF2
DDRIOF1  EQU   DDRIOF
DDRCOUNT EQU   DDRLONG+48
DDRIBUF  EQU   DDRLONG+44
DDRIBUFL EQU   DDRLONG+42
DDRAPP2  EQU   DDRAPP+1
DDRAPP1  EQU   DDRAPP
DDRINV1  EQU   DDRINV
DDRTER2  EQU   DDRTER+1
DDRTEST  EQU   DDRLONG+32
DDRUASCB EQU   DDRLONG+28
DDRUTCB  EQU   DDRLONG+24
DDRUIOB  EQU   DDRLONG+20
DDRUDEB  EQU   DDRMIHT+4
DDRUDCB  EQU   DDRMIHT
DDRASID  EQU   DDRLONG+10
DDRMIH   EQU   DDRLONG+9
DDRFIRST EQU   DDRROWN
@NM00004 EQU   DDRROWN
DDRRUENQ EQU   DDRROWN
DDRRTENQ EQU   DDRROWN
DDRFMUCB EQU   DDRLONG+4
DDRTOUCB EQU   DDRLONG
DDRTOCUA EQU   DDRSHORT+21
DDRFMCUA EQU   DDRSHORT+18
DDRUASID EQU   DDRSHORT+16
DDRUIOSB EQU   DDRSHORT+12
@NM00003 EQU   DDRDSTAT
DDRUR    EQU   DDRDSTAT
DDRMT    EQU   DDRDSTAT
DDRDA    EQU   DDRDSTAT
DDRBUFL  EQU   DDRDSTAT
DDRMDR   EQU   DDRDCHAR
@NM00002 EQU   DDRSTAT
DDRSIRB  EQU   DDRSTAT
DDRPRG   EQU   DDRSTAT
DDRRMV   EQU   DDRSTAT
DDRHAMA  EQU   DDRSTAT
DDRQUE   EQU   DDRSTAT
DDRACTV  EQU   DDRSTAT
@NM00001 EQU   DDRSRC
DDRPAGE  EQU   DDRSRC
DDRSYS   EQU   DDRSRC
DDROPER  EQU   DDRSRC
DDRNXT   EQU   DDRSHORT+4
DDRID    EQU   DDRSHORT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IGFDD0,(C'PL/S-II',0402,73192)
