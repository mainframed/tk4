         TITLE 'IGFDI1, DDR TERMINATOR                                 *
                        '
IGFDI1   CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGFDI1    77.223'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @08,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@08                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @09,@01                                             0001
         USING @DATD,@09                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @09,8(,@13)                                         0001
         LR    @13,@09                                             0001
*                                                                  0251
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE INTERNAL WORK AREAS                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0251
*   ABTERMSW='0'B;                  /* NOT ABNORMAL TERMINATION      */
*   DROPQSW='0'B;                   /* DO NOT TERMINATE ENTIRE QUEUE */
*   TAPESW='0'B;                    /* NOT TAPE SWAP COMPLETE YET  0253
*                                                            @YM07712*/
         NI    ABTERMSW,B'00011111'                                0253
*   ORIGUCB=0;                      /* NO UCB DETERMINED YET         */
         SLR   ORIGUCB,ORIGUCB                                     0254
*   ASCBPTR=R1;                     /* SAVE ADDRESS OF CURRENT ASCB  */
         LR    ASCBPTR,R1                                          0255
*   FROMUCB=0;                      /* FROM UCB NOT FOUND YET        */
         SLR   FROMUCB,FROMUCB                                     0256
*   TOUCB=0;                        /* TO UCB NOT FOUND YET          */
*                                                                  0257
         SLR   TOUCB,TOUCB                                         0257
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE ENTRY CONDITION (NORMAL OR ESOTERIC EXIT)           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0258
*   IF DDRPTR=0                     /* NO DDRCOM ADDRESS - KILL QUEUE*/
*       ×(DERPTR^=0&DERCRASH='1'B)  /* ESOTERIC EXIT - DDR CANNOT  0258
*                                      RECOVER - TERMINATE QUEUE     */
*       ×(SDWAPTR>0&SDWACLUP='1'B)  /* ESOTERIC EXIT - DDR CANNOT  0258
*                                      RECOVER - TERMINATE QUEUE     */
*     THEN                          /* MUST TERMINATE DDR WAIT QUEUE */
         SLR   @14,@14                                             0258
         CR    DDRPTR,@14                                          0258
         BE    @RT00258                                            0258
         CR    DERPTR,@14                                          0258
         BE    @GL00001                                            0258
         TM    DERCRASH(DERPTR),B'10000000'                        0258
         BO    @RT00258                                            0258
@GL00001 LTR   SDWAPTR,SDWAPTR                                     0258
         BNP   @RF00258                                            0258
         LR    @14,SDWAPTR                                         0258
         TM    SDWACLUP(@14),B'10000000'                           0258
         BNO   @RF00258                                            0258
@RT00258 DS    0H                                                  0259
*     DROPQSW='1'B;                 /* INDICATE DROP QUEUE REQUIRED  */
         OI    DROPQSW,B'01000000'                                 0259
*   ELSE                            /* NOT FATAL CONDITION           */
*     DO;                           /* SINGLE REQUEST TO PROCESS     */
         B     @RC00258                                            0260
@RF00258 DS    0H                                                  0261
*       DO;                         /* ?IGFDERR INIT NODDRCOM        */
*                                                                  0261
*         /***********************************************************/
*         /*                                                         */
*         /* IGFDERR - INITIALIZE RECOVERY ENVIRONMENT               */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0262
*         DERPTR=ADDR(DERAREA);     /* POINT TO DERPLIST AREA        */
         LA    DERPTR,DERAREA                                      0262
*         DERPLIST=DERPLIST&&DERPLIST;/* CLEAR PARAMETER LIST        */
         XC    DERPLIST(48,DERPTR),DERPLIST(DERPTR)                0263
*         DERFUNK=DERINIT;          /* INDICATE INIT FUNCTION        */
         MVI   DERFUNK(DERPTR),X'01'                               0264
*         DERREC=ADDR(DERRECPM);    /* POINT TO REC PARMS            */
         LA    @14,DERRECPM                                        0265
         ST    @14,DERREC(,DERPTR)                                 0265
*         DERSPEC=ADDR(IGFDI1);     /* POINT TO SPECIAL EXIT         */
         L     @14,@CA00028                                        0266
         ST    @14,DERSPEC(,DERPTR)                                0266
*         DERRETRY=ADDR(IGFDI1R);   /* POINT TO RETRY ROUTINE        */
         LA    @14,IGFDI1R                                         0267
         ST    @14,DERRETRY(,DERPTR)                               0267
*         GEN SETS(DERDATD) REFS(DERPTR)                           0268
*             (MVC DERDATD(4,DERPTR),@SIZDATD)   ;/* SET UP SPN, SIZE*/
         MVC DERDATD(4,DERPTR),@SIZDATD
*         DERPFX=DERRMASK;          /* SET UP RUB MASK               */
         MVC   DERPFX(2,DERPTR),@CB01166                           0269
*         DERRCODE=CODEBASE;        /* SAVE CODEREG                  */
         ST    CODEBASE,DERRCODE(,DERPTR)                          0270
*         DERRDATA=DATABASE;        /* SAVE DATAREG                  */
         ST    DATABASE,DERRDATA(,DERPTR)                          0271
*         DERRSAVE=SAVEPTR;         /* SAVE REGISTER 13              */
         ST    SAVEPTR,DERRSAVE(,DERPTR)                           0272
*         CALL IGFDE0(DERPLIST);    /* ISSUE ESTAE                   */
         ST    DERPTR,@AL00001                                     0273
         L     @15,@CV00100                                        0273
         LA    @01,@AL00001                                        0273
         BALR  @14,@15                                             0273
*       END;                        /* ?IGFDERR INIT NODDRCOM        */
*                                                                  0274
*       /*************************************************************/
*       /*                                                           */
*       /* INFORM JES3 THAT PROCESSING FOR CURRENT SWAP REQUEST IS   */
*       /* COMPLETED                                         @Y02BKCI*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0275
*       SSOBFUNC=SSOBDDR4;          /* SET FUNCTION CODE FOR SWAP  0275
*                                      PROCESSING COMPLETED  @Y02BKCI*/
         L     @14,DDRSSOB(,DDRPTR)                                0275
         MVC   SSOBFUNC(2,@14),@CH00044                            0275
*       IF DDRTER1=0 THEN           /* Q. SWAP SUCCESSFUL    @Y02BKCI*/
         CLI   DDRTER1(DDRPTR),0                                   0276
         BNE   @RF00276                                            0276
*         SSDR4SWP='1'B;            /* YES, INDICATE SO (NOTE THAT 0277
*                                      SSDRSFRU AND SSDRSTOU HAVE  0277
*                                      ALREADY BEEN SET UP BY IGFDW0)
*                                                            @Y02BKCI*/
         L     @14,SSOBINDV(,@14)                                  0277
         OI    SSDR4SWP(@14),B'00001000'                           0277
*       ELSE                                                       0278
*         SSDR4SWP='0'B;            /* INDICATE SWAP UNSUCCESSFUL  0278
*                                                            @Y02BKCI*/
*                                                                  0278
         B     @RC00276                                            0278
@RF00276 L     @14,DDRSSOB(,DDRPTR)                                0278
         L     @14,SSOBINDV(,@14)                                  0278
         NI    SSDR4SWP(@14),B'11110111'                           0278
*       /*************************************************************/
*       /*                                                           */
*       /* ? IEFSSREQ (SSOB);                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0279
*/*                                                                  */
*/*  PASS CONTROL TO JOB ENTRY SUBSYSTEM TO                          */
*/*  PROCESS REQUEST -                                               */
*/*                                                                  */
*/*    INPUT - REGISTER 1 POINTS TO A ONE-                           */
*/*            WORD PARAMETER LIST WHICH                             */
*/*            POINTS TO THE SSOB                                    */
*/*                                                                  */
*                                                                  0279
*       CALL SSREQ(SSOB);           /* ATTEMPT TO COMMUNICATE WITH 0279
*                                      JES3                  @Y02BKCI*/
@RC00276 L     @14,DDRSSOB(,DDRPTR)                                0279
         ST    @14,@AL00001                                        0279
         MVI   @AL00001,X'80'                                      0279
         L     @12,CVTPTR                                          0279
         L     @12,CVTJESCT(,@12)                                  0279
         L     @15,JESSSREQ(,@12)                                  0279
         LA    @01,@AL00001                                        0279
         BALR  @14,@15                                             0279
*       IF^(RTNCODE=SSRTOK×RTNCODE=SSRTNSUP×RTNCODE=SSRTNTUP) THEN/*
*                                      Q. RETURN CODE ACCEPTABLE   0280
*                                                            @Y02BKCI*/
         LTR   RTNCODE,RTNCODE                                     0280
         BZ    @RF00280                                            0280
         CH    RTNCODE,@CH00040                                    0280
         BE    @RF00280                                            0280
         CH    RTNCODE,@CH00081                                    0280
         BE    @RF00280                                            0280
*         DO;                       /* NO, RETURN CODE IS EITHER   0281
*                                      INVALID OR INDICATES LOGIC  0281
*                                      ERROR                 @Y02BKCI*/
*           GEN(ABEND X'C0D',DUMP,,SYSTEM);/* FORCE ENTRY TO ESTAE 0282
*                                      HANDLER (IGFDE1)      @Y02BKCI*/
         ABEND X'C0D',DUMP,,SYSTEM
*         END;                                                     0283
*                                                                  0283
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE WHETHER REQUEST IS BEING TERMINATED NORMALLY OR */
*       /* ABNORMALLY AND ISSUE THE PROPER MESSAGE                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0284
*       IF DDRTER1^=0 THEN                                         0284
@RF00280 CLI   DDRTER1(DDRPTR),0                                   0284
         BE    @RF00284                                            0284
*         DO;                       /* ABNORMAL TERMINATION          */
*           ABTERMSW='1'B;          /* INDICATE ABNORMAL TERMINATION */
*                                                                  0286
         OI    ABTERMSW,B'10000000'                                0286
*           /*********************************************************/
*           /*                                                       */
*           /* IGF512I SWAP FROM XXX TERMINATED - REASON             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0287
*           DO;                     /* ?IGFDMSG MSG(IGF512I)RETRY(2)C
*                                      ODE(FROM-CUA,TERM-CODE)       */
*                                                                  0287
*             /*******************************************************/
*             /*                                                     */
*             /* IGFDMSG - INVOKE THE DDR/MIH MESSAGE WRITER         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0288
*             DDRMSGCD=DDRM512I;    /* SET UP MSG CODE               */
         MVI   DDRMSGCD(DDRPTR),X'09'                              0288
*             DDRMSGPN=2;           /* SET UP NO. OF SUBST. CODES    */
         MVI   DDRMSGPN(DDRPTR),X'02'                              0289
*             DDRMSGPC(1)=DDRPFM;   /* SET SUBSTITUTION CODE 1       */
         MVI   DDRMSGPC(DDRPTR),X'02'                              0290
*             DDRMSGPC(2)=DDRPTM;   /* SET SUBSTITUTION CODE 2       */
         MVI   DDRMSGPC+1(DDRPTR),X'07'                            0291
*             RTNCODE=12;           /* INDICATE MESSAGE NOT DONE YET */
         LA    RTNCODE,12                                          0292
*             DO DDRRETRY=1 TO 2 WHILE(RTNCODE=12);/* LOOP UNTIL MSG
*                                      DONE                          */
         LA    @14,1                                               0293
         STC   @14,DDRRETRY(,DDRPTR)                               0293
@DL00293 CH    RTNCODE,@CH00128                                    0293
         BNE   @DC00293                                            0293
*               CALL IGFDM0;        /* OUTPUT MESSAGE                */
         L     @15,@CV00101                                        0294
         BALR  @14,@15                                             0294
*             END;                  /* END OF RETRY LOOP             */
         LA    @14,1                                               0295
         SLR   @12,@12                                             0295
         IC    @12,DDRRETRY(,DDRPTR)                               0295
         ALR   @14,@12                                             0295
         STC   @14,DDRRETRY(,DDRPTR)                               0295
         CH    @14,@CH00092                                        0295
         BNH   @DL00293                                            0295
@DC00293 DS    0H                                                  0296
*           END;                    /* ?IGFDMSG MSG(IGF512I)RETRY(2)C
*                                      ODE(FROM-CUA,TERM-CODE)       */
*         END;                                                     0297
*       ELSE                        /* NORMAL TERMINATION            */
*         IF DDRMT='1'B THEN        /* TAPE REQUEST - MUST INDICATE
*                                      THAT TAPE SWAP IS FINISHED    */
         B     @RC00284                                            0298
@RF00284 TM    DDRMT(DDRPTR),B'00100000'                           0298
         BNO   @RF00298                                            0298
*           DO;                     /*                       @YM07712*/
*             TAPESW='1'B;          /* INDICATE TAPE SWAP COMPLETE 0300
*                                                            @YM07712*/
*                                                                  0300
         OI    TAPESW,B'00100000'                                  0300
*             /*******************************************************/
*             /*                                                     */
*             /* IGF505I SWAP FROM XXX TO YYY COMPLETE               */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0301
*             DO;                   /* ?IGFDMSG MSG(IGF505I)RETRY(2)C
*                                      ODE(FROM-CUA,TO-CUA)          */
*                                                                  0301
*               /*****************************************************/
*               /*                                                   */
*               /* IGFDMSG - INVOKE THE DDR/MIH MESSAGE WRITER       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0302
*               DDRMSGCD=DDRM505I;  /* SET UP MSG CODE               */
         MVI   DDRMSGCD(DDRPTR),X'05'                              0302
*               DDRMSGPN=2;         /* SET UP NO. OF SUBST. CODES    */
         MVI   DDRMSGPN(DDRPTR),X'02'                              0303
*               DDRMSGPC(1)=DDRPFM; /* SET SUBSTITUTION CODE 1       */
         MVI   DDRMSGPC(DDRPTR),X'02'                              0304
*               DDRMSGPC(2)=DDRPTO; /* SET SUBSTITUTION CODE 2       */
         MVI   DDRMSGPC+1(DDRPTR),X'03'                            0305
*               RTNCODE=12;         /* INDICATE MESSAGE NOT DONE YET */
         LA    RTNCODE,12                                          0306
*               DO DDRRETRY=1 TO 2 WHILE(RTNCODE=12);/* LOOP UNTIL 0307
*                                      MSG DONE                      */
         LA    @14,1                                               0307
         STC   @14,DDRRETRY(,DDRPTR)                               0307
@DL00307 CH    RTNCODE,@CH00128                                    0307
         BNE   @DC00307                                            0307
*                 CALL IGFDM0;      /* OUTPUT MESSAGE                */
         L     @15,@CV00101                                        0308
         BALR  @14,@15                                             0308
*               END;                /* END OF RETRY LOOP             */
         LA    @14,1                                               0309
         SLR   @12,@12                                             0309
         IC    @12,DDRRETRY(,DDRPTR)                               0309
         ALR   @14,@12                                             0309
         STC   @14,DDRRETRY(,DDRPTR)                               0309
         CH    @14,@CH00092                                        0309
         BNH   @DL00307                                            0309
@DC00307 DS    0H                                                  0310
*             END;                  /* ?IGFDMSG MSG(IGF505I)RETRY(2)C
*                                      ODE(FROM-CUA,TO-CUA)          */
*           END;                    /*                       @YM07712*/
*     END;                                                         0312
*                                                                  0312
@RF00298 DS    0H                                                  0312
@RC00284 DS    0H                                                  0313
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUIRE THE LOCK(S) REQUIRED TO SERIALIZE THE DDR WAIT QUEUE  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0313
*   RFY                                                            0313
*    (R11,                                                         0313
*     R12,                                                         0313
*     R13,                                                         0313
*     R14) RSTD;                                                   0313
@RC00258 DS    0H                                                  0314
*   R13SAVE=SAVEPTR;                /* SAVE R13 ACROSS SETLOCK       */
         LR    R13SAVE,SAVEPTR                                     0314
*   GENERATE REFS(FLC,PSALITA) SETS(R11,R12,R13,R14);              0315
GETLOCL SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        **
               RELATED=(LOCAL,IGFDI1(RELLOCL))
*   IF ASCBASID=MASTER THEN         /* MASTER MEMORY                 */
         CLC   ASCBASID(2,ASCBPTR),@CH00042                        0316
         BNE   @RF00316                                            0316
*     GENERATE REFS(FLC,PSALITA) SETS(R11,R12,R13,R14);            0317
GETCMS SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                           **
               RELATED=(CMS,IGFDI1(RELCMS))
*     RFY                                                          0318
*      (R11,                                                       0318
*       R12,                                                       0318
*       R13,                                                       0318
*       R14) UNRSTD;                                               0318
@RF00316 DS    0H                                                  0319
*   SAVEPTR=R13SAVE;                /* RESTORE REGISTER 13           */
*                                                                  0319
         LR    SAVEPTR,R13SAVE                                     0319
*   /*****************************************************************/
*   /*                                                               */
*   /* TERMINATE THE REQUESTED DDR REQUEST OR THE ENTIRE WAIT QUEUE  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*   ASXBPTR=ASCBASXB;               /* PICK UP ADDRESS OF ASXB       */
         MVC   ASXBPTR(4),ASCBASXB(ASCBPTR)                        0320
*   IF DROPQSW='1'B THEN            /* ENTIRE QUEUE TO BE DROPPED    */
         TM    DROPQSW,B'01000000'                                 0321
         BNO   @RF00321                                            0321
*     CALL DI1ALL;                  /* TERMINATE ENTIRE DDR WAIT   0322
*                                      QUEUE                         */
         BAL   @14,DI1ALL                                          0322
*   ELSE                            /* SINGLE REQUEST TO BE HANDLED  */
*     IF DDRSYS='1'B&DDRDA='1'B&DDRPRG='0'B THEN                   0323
         B     @RC00321                                            0323
@RF00321 TM    DDRSYS(DDRPTR),B'01000000'                          0323
         BNO   @RF00323                                            0323
         TM    DDRDA(DDRPTR),B'01000000'                           0323
         BNO   @RF00323                                            0323
         TM    DDRPRG(DDRPTR),B'00001000'                          0323
         BNZ   @RF00323                                            0323
*       DO;                         /* AN UNPURGED, SYSTEM INITIATED
*                                      DISK SWAP IS TO BE TERMINATED
*                                      - ALL RELATED REQUESTS MUST 0324
*                                      ALSO BE TERMINATED            */
*         ORIGUCB=IOSUCB;           /* PICK UP ADDRESS OF ORIGINAL 0325
*                                      'FROM' DEVICE - ALL OTHER   0325
*                                      SWAPS FOR THIS DEVICE WILL  0325
*                                      ALSO BE TERMINATED            */
         L     @14,IOSBPTR(,DDRPTR)                                0325
         L     ORIGUCB,IOSUCB(,@14)                                0325
*         CALL DI1RELAT;            /* TERMINATE ALL REQUESTS RELATED
*                                      TO THE ORIGINAL REQUEST       */
         BAL   @14,DI1RELAT                                        0326
*       END;                                                       0327
*     ELSE                          /* NOT SYSTEM DISK REQUEST       */
*       DO;                         /* ONLY A SINGLE REQUEST IS TO BE
*                                      TERMINATED                    */
         B     @RC00323                                            0328
@RF00323 DS    0H                                                  0329
*         FROMUCB=DDRFMUCB;         /* PICK UP ADDRESS OF 'FROM' UCB */
         L     FROMUCB,DDRFMUCB(,DDRPTR)                           0329
*         TOUCB=DDRTOUCB;           /* PICK UP ADDRESS OF 'TO' UCB   */
         L     TOUCB,DDRTOUCB(,DDRPTR)                             0330
*         CALL DI1POST;             /* POST THIS REQUESTS AS BEING 0331
*                                      COMPLETE                      */
         BAL   @14,DI1POST                                         0331
*         CALL DI1RLSE;             /* RELEASE AND RESTART THE     0332
*                                      DEVICES HELD BY DDR           */
         BAL   @14,DI1RLSE                                         0332
*       END;                                                       0333
*                                                                  0333
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE RETURN CODE IN THIS MODULES DERPLIST               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0334
*   IF ASXBDDR=0 THEN               /* IS THE DDR WAIT QUEUE EMPTY   */
@RC00323 DS    0H                                                  0334
@RC00321 L     @14,ASXBPTR                                         0334
         ICM   @12,15,ASXBDDR(@14)                                 0334
         BNZ   @RF00334                                            0334
*     ADDR(DERAREA)->DERLRC=RCQMT;  /* YES, INDICATE QUEUE IS EMPTY  */
         LA    @14,DERAREA                                         0335
         MVI   DERLRC(@14),X'04'                                   0335
*   ELSE                            /* NOT, MORE ELEMENTS TO PROCESS */
*     ADDR(DERAREA)->DERLRC=RCQNMT; /* INDICATE QUEUE NOT EMPTY      */
*                                                                  0336
         B     @RC00334                                            0336
@RF00334 LA    @14,DERAREA                                         0336
         MVI   DERLRC(@14),X'00'                                   0336
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE THE LOCK(S) OBTAINED TO SERIALIZE THE DDR WAIT QUEUE  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0337
*   RFY                                                            0337
*    (R11,                                                         0337
*     R12,                                                         0337
*     R13,                                                         0337
*     R14) RSTD;                                                   0337
@RC00334 DS    0H                                                  0338
*   R13SAVE=SAVEPTR;                /* SAVE R13 ACROSS SETLOCK       */
         LR    R13SAVE,SAVEPTR                                     0338
*   IF ASCBASID=MASTER THEN         /* RELEASE CMS LOCK IF HELD      */
         CLC   ASCBASID(2,ASCBPTR),@CH00042                        0339
         BNE   @RF00339                                            0339
*     GENERATE REFS(FLC,PSALITA) SETS(R11,R12,R13,R14);            0340
RELCMS SETLOCK RELEASE,TYPE=CMS,RELATED=(CMS,IGFDI1(GETCMS))
*     GENERATE REFS(FLC,PSALITA) SETS(R11,R12,R13,R14);            0341
@RF00339 DS    0H                                                  0341
RELLOCL SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGFDI1(GETLOCL))
*     RFY                                                          0342
*      (R11,                                                       0342
*       R12,                                                       0342
*       R13,                                                       0342
*       R14) UNRSTD;                                               0342
*   SAVEPTR=R13SAVE;                /* RESTORE REG 13                */
         LR    SAVEPTR,R13SAVE                                     0343
*   IF DROPQSW='0'B THEN            /* CANCEL ESTAE IF NECESSARY     */
         TM    DROPQSW,B'01000000'                                 0344
         BNZ   @RF00344                                            0344
*IGFDI1R:                           /* ESTAE RETRY POINT             */
*     DO;                           /* ?IGFDERR CANCEL               */
*                                                                  0345
IGFDI1R  DS    0H                                                  0346
*       /*************************************************************/
*       /*                                                           */
*       /* IGFDERR - CANCEL RECOVERY ENVIRONMENT                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0346
*       DERPTR=ADDR(DERAREA);       /* POINT TO DERPLIST AREA        */
         LA    DERPTR,DERAREA                                      0346
*       DERFUNK=DERCANC;            /* INDICATE CANCEL               */
         MVI   DERFUNK(DERPTR),X'02'                               0347
*       CALL IGFDE0(DERPLIST);      /* CANCEL ESTAE                  */
         ST    DERPTR,@AL00001                                     0348
         L     @15,@CV00100                                        0348
         LA    @01,@AL00001                                        0348
         BALR  @14,@15                                             0348
*     END;                          /* ?IGFDERR CANCEL               */
*   RETURN CODE(ADDR(DERAREA)->DERLRC);/* RETURN TO CALLER           */
@RF00344 LA    @12,DERAREA                                         0350
         SLR   @11,@11                                             0350
         IC    @11,DERLRC(,@12)                                    0350
         L     @13,4(,@13)                                         0350
         L     @00,@SIZDATD                                        0350
         LR    @01,@09                                             0350
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@11                                             0350
         L     @14,12(,@13)                                        0350
         LM    @00,@12,20(@13)                                     0350
         BR    @14                                                 0350
*   GENERATE NOREFS NOSETS(EJECT);                                 0351
*                                                                  0351
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE DI1ALL - POST ALL REQUESTS ON THE DDR WAIT QUEUE   */
*   /* WITH PERMANENT ERRORS (IF SYSTEM REQUESTS), RELEASE ALL SHORT */
*   /* DDRCOMS ON THE QUEUE, AND RESTART ALL CONTROLLED DEVICES      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0352
*DI1ALL:                                                           0352
*   PROCEDURE;                      /* SUBROUTINE ENTRY POINT        */
*                                                                  0352
         B     @PB00002                                            0352
DI1ALL   STM   @14,@12,@SA00002                                    0352
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN THE ENTIRE DDR WAIT QUEUE AND TERMINATE ALL REQUESTS     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0353
*   DO WHILE(ASXBDDR^=0);           /* LOOP UNTIL QUEUE IS EMPTY     */
         B     @DE00353                                            0353
@DL00353 DS    0H                                                  0354
*     DDRPTR=ASXBDDR;               /* PICK UP ADDRESS OF DDRCOM     */
         L     @14,ASXBPTR                                         0354
         L     DDRPTR,ASXBDDR(,@14)                                0354
*     IF DDRID='DDR ' THEN          /* IS THIS A FULL DDRCOM         */
         CLC   DDRID(4,DDRPTR),@CC02752                            0355
         BNE   @RF00355                                            0355
*       DO;                         /* YES, THE 'FROM' AND 'TO'    0356
*                                      DEVICES MAY HAVE TO BE      0356
*                                      RESTARTE* D                   */
*         FROMUCB=DDRFMUCB;         /* SAVE FROM UCB ADDRESS         */
         L     FROMUCB,DDRFMUCB(,DDRPTR)                           0357
*         TOUCB=DDRTOUCB;           /* SAVE TO UCB ADDRESS           */
         L     TOUCB,DDRTOUCB(,DDRPTR)                             0358
*       END;                                                       0359
*     CALL DI1POST;                 /* POST THE REQUEST WITH A     0360
*                                      PERMANENT I/O ERROR (IF SYS)  */
@RF00355 BAL   @14,DI1POST                                         0360
*   END;                            /* END OF SCAN LOOP - CONTINUE 0361
*                                      LOOPING UNTIL ALL DDRCOMS ARE
*                                      POSTED AND DELETED FROM QUEUE */
@DE00353 L     @14,ASXBPTR                                         0361
         ICM   @12,15,ASXBDDR(@14)                                 0361
         BNZ   @DL00353                                            0361
*   CALL DI1RLSE;                   /* RELEASE ANY DEVICES CONTROLLED
*                                      BY DDR                        */
         BAL   @14,DI1RLSE                                         0362
*   RETURN;                         /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0363
@EF00002 DS    0H                                                  0363
@ER00002 LM    @14,@12,@SA00002                                    0363
         BR    @14                                                 0363
*   END DI1ALL;                     /* END OF SUBROUTINE             */
@PB00002 DS    0H                                                  0365
*   GENERATE NOREFS NOSETS(EJECT);                                 0365
*                                                                  0365
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE DI1RELAT - POST AND RELEASE ALL REQUESTS RELATED TO*/
*   /* A SYSTEM DISK SWAP WHICH IS BEING TERMINATED                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0366
*DI1RELAT:                                                         0366
*   PROCEDURE;                      /* SUBROUTINE ENTRY POINT      0366
*                                                            @YM04069*/
         B     @PB00003                                            0366
DI1RELAT STM   @14,@12,@SA00003                                    0366
*   FROMUCB=DDRFMUCB;               /* SAVE 'FROM' UCB ADDRESS       */
         L     FROMUCB,DDRFMUCB(,DDRPTR)                           0367
*   TOUCB=DDRTOUCB;                 /* SAVE 'TO' UCB ADDRESS         */
*                                                                  0368
         L     TOUCB,DDRTOUCB(,DDRPTR)                             0368
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN ALL SUBSEQUENT ENTRIES IN THE DDR WAIT QUEUE FOR RELATED */
*   /* REQUESTS (NOTE - THE SCAN STARTS AT THE REQUESTED DDRCOM)     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0369
*   DO WHILE(DDRPTR^=0);            /* LOOP UNTIL END OF QUEUE FOUND */
         B     @DE00369                                            0369
@DL00369 DS    0H                                                  0370
*     NEXT=DDRNXT;                  /* SAVE ADDRESS OF NEXT DDRCOM ON
*                                      QUEUE                         */
         L     NEXT,DDRNXT(,DDRPTR)                                0370
*     IF(DDRSYS='1'B&DDRDA='1'B&IOSUCB=ORIGUCB)/* IS THIS A RELATED
*                                      REQUEST (SYSTEM SWAP FOR THE
*                                      SAME DASD DEVICE)             */
*         ×DDRID='DDR '             /* OR THE ORIGINAL REQUEST       */
*         ×DDRPRG='1'B THEN         /* OR A PURGED REQUEST           */
         TM    DDRSYS(DDRPTR),B'01000000'                          0371
         BNO   @GL00010                                            0371
         TM    DDRDA(DDRPTR),B'01000000'                           0371
         BNO   @GL00010                                            0371
         L     @14,IOSBPTR(,DDRPTR)                                0371
         C     ORIGUCB,IOSUCB(,@14)                                0371
         BE    @RT00371                                            0371
@GL00010 CLC   DDRID(4,DDRPTR),@CC02752                            0371
         BE    @RT00371                                            0371
         TM    DDRPRG(DDRPTR),B'00001000'                          0371
         BNO   @RF00371                                            0371
@RT00371 DS    0H                                                  0372
*       CALL DI1POST;               /* YES, POST THE REQUEST AS    0372
*                                      COMPLETE                      */
         BAL   @14,DI1POST                                         0372
*     DDRPTR=NEXT;                  /* POINT TO NEXT DDRCOM ON QUEUE */
@RF00371 LR    DDRPTR,NEXT                                         0373
*   END;                            /* END OF LOOP - CONTINUE      0374
*                                      SCANNING UNTIL END OF DDR WAIT
*                                      QUEUE *                       */
@DE00369 LTR   DDRPTR,DDRPTR                                       0374
         BNZ   @DL00369                                            0374
*   CALL DI1RLSE;                   /* RESTART THE DEVICES CONTROLLED
*                                      BY DDR                        */
         BAL   @14,DI1RLSE                                         0375
*   RETURN;                         /* RETURN TO CALLER              */
@EL00003 DS    0H                                                  0376
@EF00003 DS    0H                                                  0376
@ER00003 LM    @14,@12,@SA00003                                    0376
         BR    @14                                                 0376
*   END DI1RELAT;                   /* END OF SUBROUTINE             */
@PB00003 DS    0H                                                  0378
*   GENERATE NOREFS NOSETS(EJECT);                                 0378
*                                                                  0378
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE DI1POST - POST THE CURRENT DDRCOM (IF NECESSARY)   */
*   /* AND REMOVE IT FROM THE DDR WAIT QUEUE, FREEING IT IF IT IS NOT*/
*   /* WITHIN IGFDIOS WORK AREA                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0379
*DI1POST:                                                          0379
*   PROCEDURE;                      /* SUBROUTINE ENTRY POINT      0379
*                                                            @YM04069*/
*                                                                  0379
         B     @PB00004                                            0379
DI1POST  STM   @14,@12,@SA00004                                    0379
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE REQUEST IS AN UNPURGED SYSTEM INITIATED REQUEST, THE   */
*   /* IOSB MUST BE POSTED TO RESTART OR KILL THE I/O WHICH CAUSED   */
*   /* THE ERROR                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0380
*   IF DDRSYS='1'B&DDRPRG='0'B THEN /* IS IT A SYSTEM REQUEST        */
         TM    DDRSYS(DDRPTR),B'01000000'                          0380
         BNO   @RF00380                                            0380
         TM    DDRPRG(DDRPTR),B'00001000'                          0380
         BNZ   @RF00380                                            0380
*     DO;                           /* YES, IT MUST BE POSTED        */
*       IF ABTERMSW='1'B×DROPQSW='1'B THEN/* IS THE REQUEST TO BE  0382
*                                      POSTED WITH AN ERROR          */
         TM    ABTERMSW,B'11000000'                                0382
         BZ    @RF00382                                            0382
*         DO;                       /* YES, SET UP TO POST WITH A  0383
*                                      PERMANENT I/O ERROR           */
*           IOSEX='1'B;             /* SET UP FOR ERROR EXCP         */
*           IOSERR='0'B;                                           0385
         L     @14,IOSBPTR(,DDRPTR)                                0385
         OI    IOSEX(@14),B'00000100'                              0385
         NI    IOSERR(@14),B'11011111'                             0385
*         END;                                                     0386
*       ELSE                        /* NO, REQUEST TERMINATED      0387
*                                      NORMALLY                      */
*         DO;                       /* SET UP TO RETRY ORIGINAL I/O  */
         B     @RC00382                                            0387
@RF00382 DS    0H                                                  0388
*           IOSEX='0'B;             /* SET UP FOR ERROR EXCP         */
*           IOSERR='1'B;                                           0389
         L     @14,IOSBPTR(,DDRPTR)                                0389
         OI    IOSERR(@14),B'00100000'                             0389
         NI    IOSEX(@14),B'11111011'                              0389
*           EWA=EWA&&EWA;           /* CLEAR ERROR WORK AREA         */
         L     @14,EWAPTR(,@14)                                    0390
         XC    EWA(160,@14),EWA(@14)                               0390
*         END;                                                     0391
*       IF ASCBASID^=DDRUASID THEN  /* Q. DDR AND USER ASIDS THE SAME
*                                                            @YM08363*/
@RC00382 SLR   @14,@14                                             0392
         ICM   @14,3,ASCBASID(ASCBPTR)                             0392
         CH    @14,DDRUASID(,DDRPTR)                               0392
         BE    @RF00392                                            0392
*         DO;                       /* DIFFERENT ASIDS       @YM04069*/
*                                                                  0393
*           /*********************************************************/
*           /*                                                       */
*           /* RELEASE LOCKS                                 @YM04069*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0394
*           RFY                                                    0394
*            (R11,                                                 0394
*             R12,                                                 0394
*             R13,                                                 0394
*             R14) RSTD;            /*                       @YM04069*/
*           R13SAVE=SAVEPTR;        /* SAVE R13 ACROSS SETLOCK     0395
*                                                            @YM04069*/
         LR    R13SAVE,SAVEPTR                                     0395
*           IF ASCBASID=MASTER THEN /* Q. DDR IN MASTER MEMORY     0396
*                                                            @YM08363*/
         SLR   @06,@06                                             0396
         ICM   @06,3,ASCBASID(ASCBPTR)                             0396
         CH    @06,@CH00042                                        0396
         BNE   @RF00396                                            0396
*             GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);    0397
*                                                   /*YES-RELEASE CMS*
RELCMSV SETLOCK RELEASE,TYPE=CMS,RELATED=(CMS,IGFDI1(GETCMSV))
*           ELSE                                                   0398
*             ;                     /* CMS LOCK IS NOT HELD  @YM04069*/
@RF00396 DS    0H                                                  0399
*           GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);      0399
*                                                   /*YES-RELEASE LOC*
RELLOCAL SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGFDI1(GETLOCAL))
*           SAVEPTR=R13SAVE;        /* RESTORE REG 13        @YM04069*/
         LR    SAVEPTR,R13SAVE                                     0400
*           RFY                                                    0401
*            (R11,                                                 0401
*             R12,                                                 0401
*             R13,                                                 0401
*             R14) UNRSTD;          /*                       @YM04069*/
*                                                                  0401
*           /*********************************************************/
*           /*                                                       */
*           /* GETMAIN FOR SRB AND SAVE AREA                 @YM04069*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0402
*           RFY                                                    0402
*            (SRBPTR) RSTD;         /*                       @YM07702*/
*           DO;                     /* GETMAIN (R)                 0403
*                                      LV(LENGTH(CONBLOC))SP(SPN)    */
*             RESPECIFY                                            0404
*              (GPR01F,                                            0404
*               GPR00F) RESTRICTED;                                0404
*             GPR00F=LENGTH(CONBLOC);/* LENGTH REQUESTED             */
         LA    GPR00F,120                                          0405
*             GPR01F=SPN;           /* SP IN REG 1                   */
         LA    GPR01F,245                                          0406
*             GEN(SLL   GPR01F,24)                                 0407
*             NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;         0407
         SLL   GPR01F,24
*             GPR00F=GPR00F×GPR01F; /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0408
*             GPR01F=-1;            /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0409
         BCTR  GPR01F,0                                            0409
*             SVC(10);              /* R-FORM OF GETMAIN             */
         SVC   10                                                  0410
*             RESPECIFY                                            0411
*              (GPR01F,                                            0411
*               GPR00F) UNRESTRICTED;                              0411
*           END;                    /* GETMAIN (R)                 0412
*                                      LV(LENGTH(CONBLOC))SP(SPN)  0412
*                                                            @YM04069*/
*           SRBPTR=R1;              /* INIT SRB PTR          @YM04069*/
*                                                                  0413
         LR    SRBPTR,R1                                           0413
*           /*********************************************************/
*           /*                                                       */
*           /* INITIALIZE SRB                                @YM04069*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0414
*           CONBLOC=CONBLOC&&CONBLOC;/* CLEAR GETMAINED AREA @YM04069*/
         XC    CONBLOC(120,SRBPTR),CONBLOC(SRBPTR)                 0414
*           CONCODE=CODEBASE;       /* SAVE CODE BASE FOR SRB      0415
*                                                            @YM04069*/
         ST    CODEBASE,CONCODE(,SRBPTR)                           0415
*           SRBID='SRB ';           /* SRB IDENTIFIER        @YM04069*/
         MVC   SRBID(4,SRBPTR),@CC02764                            0416
*           SRBASCB=ASVTENTY(DDRUASID);/* ASCB ADDRESS       @YM04069*/
         LH    @14,DDRUASID(,DDRPTR)                               0417
         SLA   @14,2                                               0417
         L     @12,CVTPTR                                          0417
         L     @12,ASVTPTR(,@12)                                   0417
         L     @14,ASVTENTY-4(@14,@12)                             0417
         ST    @14,SRBASCB(,SRBPTR)                                0417
*           SRBEP=ADDR(IGFDISRB);   /* SRB CODE ENTRY POINT  @YM04069*/
         LA    @14,IGFDISRB                                        0418
         ST    @14,SRBEP(,SRBPTR)                                  0418
*           SRBPARM=DDRUIOSB;       /* IOSB ADDRESS          @YM04069*/
         MVC   SRBPARM(4,SRBPTR),DDRUIOSB(DDRPTR)                  0419
*           IF DDRID='DDR ' THEN    /* Q. USER TCB ADDR AVAILABLE  0420
*                                                            @YM08363*/
         CLC   DDRID(4,DDRPTR),@CC02752                            0420
         BNE   @RF00420                                            0420
*             SRBPTCB=DDRUTCB;      /* YES, GET IT - ELSE LEAVE ZERO
*                                                            @YM08363*/
         MVC   SRBPTCB(4,SRBPTR),DDRUTCB(DDRPTR)                   0421
*           SRBPASID=DDRUASID;      /* USER ASID             @YM04069*/
*                                                                  0422
@RF00420 MVC   SRBPASID(2,SRBPTR),DDRUASID(DDRPTR)                 0422
*           /*********************************************************/
*           /*                                                       */
*           /* SCHEDULE PART OF IGFDI1 TO BE EXECUTED IN THE CORRECT */
*           /* ADDRESS SP ACE                                @YM04069*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0423
*           GENERATE REFS(SRBPTR,CVTGSMQ,SRBFLNK) FLOWS(IGFDISRB)  0423
*               (SCHEDULE SRB=(SRBPTR),SCOPE=GLOBAL);/*      @YM04069*/
*                                                                  0423
         SCHEDULE SRB=(SRBPTR),SCOPE=GLOBAL
*           /*********************************************************/
*           /*                                                       */
*           /* OBTAIN LOCKS                                  @YM04069*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0424
*           RFY                                                    0424
*            (SRBPTR) UNRSTD;       /*                       @YM07702*/
*           RFY                                                    0425
*            (R11,                                                 0425
*             R12,                                                 0425
*             R13,                                                 0425
*             R14) RSTD;            /*                       @YM04069*/
*           R13SAVE=SAVEPTR;        /* SAVE R13 ACROSS SETLOCK     0426
*                                                            @YM04069*/
         LR    R13SAVE,SAVEPTR                                     0426
*           GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);      0427
*                                                   /*YES-GET LOCAL*/
GETLOCAL SETLOCK OBTAIN,TYPE=LOCAL,RELATED=(LOCAL,IGFDI1(RELLOCAL)),  **
               MODE=UNCOND                                    @YM04069
*           IF ASCBASID=MASTER THEN /* Q. DDR IN MASTER MEMORY     0428
*                                                            @YM08363*/
         CLC   ASCBASID(2,ASCBPTR),@CH00042                        0428
         BNE   @RF00428                                            0428
*             GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);    0429
*                                                   /*YES- GET  CMS*/
GETCMSV SETLOCK OBTAIN,TYPE=CMS,RELATED=(CMS,IGFDI1(RELCMSV)),        **
               MODE=UNCOND                                    @YM04069
*           ELSE                                                   0430
*             ;                     /* CMS LOCK IS NOT OBTAIN      0430
*                                                            @YM04069*/
@RF00428 DS    0H                                                  0431
*           SAVEPTR=R13SAVE;        /* RESTORE REG 13        @YM04069*/
         LR    SAVEPTR,R13SAVE                                     0431
*           RFY                                                    0432
*            (R11,                                                 0432
*             R12,                                                 0432
*             R13,                                                 0432
*             R14) UNRSTD;          /*                       @YM04069*/
*         END;                      /*                       @YM04069*/
*       ELSE                        /* THE SAME ASID         @YM04069*/
*         DO;                       /*                       @YM04069*/
         B     @RC00392                                            0434
@RF00392 DS    0H                                                  0435
*           GENERATE(STM   14,12,12(13));/* SAVE REGISTERS ACROSS SVC
*                                      15 BRANCH ENTRY               */
         STM   14,12,12(13)
*           R1=DDRUIOSB;            /* SET UP REGISTER 1 FOR SVC 15
*                                      (ADDRESS OF IOSB)             */
         L     R1,DDRUIOSB(,DDRPTR)                                0436
*           CALL IGC015;            /* POST THE IOSB WITH AN ERROR OR
*                                      REQUEST RETRY OF THE REQUEST  */
         L     @12,CVTPTR                                          0437
         L     @12,IOCOMPTR(,@12)                                  0437
         L     @15,IOCSVCF(,@12)                                   0437
         BALR  @14,@15                                             0437
*           GENERATE(LM    14,12,12(13));/* RESTORE REGISTERS        */
         LM    14,12,12(13)
*         END;                      /*                       @YM04069*/
*     END;                                                         0440
*                                                                  0440
@RC00392 DS    0H                                                  0441
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN THE DDR WAIT QUEUE FOR THE ELEMENT PRECEEDING THE BEING  */
*   /* TERMINATED                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0441
*   WDDRPTR=ADDR(ASXBDDR)-(ADDR(DDRNXT)-ADDR(DDRSHORT));/* POINT TO
*                                      VIRTUAL DDRCOM OVERLAYING THE
*                                      ASXB SO THAT DDRNXT         0441
*                                      CORRESPONDS TO ASXBDDR - THIS
*                                      TAKES CARE OF THE FIRST     0441
*                                      ELEMENT ON THE DDR WAIT QUEUE */
@RF00380 L     WDDRPTR,ASXBPTR                                     0441
         LA    WDDRPTR,ASXBDDR(,WDDRPTR)                           0441
         SH    WDDRPTR,@CH00040                                    0441
*   DO WHILE(WDDRPTR^=0&WDDRPTR->DDRNXT^=DDRPTR);/* SCAN THE QUEUE 0442
*                                      UNTIL THE ELEMENT PRECEEDING
*                                      THE TERMINATED ELEMENT IS   0442
*                                      FOUND                         */
         B     @DE00442                                            0442
@DL00442 DS    0H                                                  0443
*     WDDRPTR=WDDRPTR->DDRNXT;      /* STEP TO NEXT ELEMENT ON QUEUE */
         L     WDDRPTR,DDRNXT(,WDDRPTR)                            0443
*   END;                            /* END OF SCAN LOOP              */
@DE00442 LTR   WDDRPTR,WDDRPTR                                     0444
         BZ    @DC00442                                            0444
         C     DDRPTR,DDRNXT(,WDDRPTR)                             0444
         BNE   @DL00442                                            0444
@DC00442 DS    0H                                                  0445
*   IF WDDRPTR^=0 THEN              /* IF PREVIOUS ELEMENT FOUND,  0445
*                                      DEQUEUE CURRENT ELEMENT FROM
*                                      DDR WAIT QUEUE                */
         LTR   WDDRPTR,WDDRPTR                                     0445
         BZ    @RF00445                                            0445
*     WDDRPTR->DDRNXT=DDRNXT;       /* REMOVE ELEMENT FROM QUEUE     */
*                                                                  0446
         MVC   DDRNXT(4,WDDRPTR),DDRNXT(DDRPTR)                    0446
*   /*****************************************************************/
*   /*                                                               */
*   /* FREEMAIN THE DDRCOM IF IT WAS GETMAINED SEPARATELY (I.E. IT IS*/
*   /* NOT CONTAINED WITHIN THE WORK AREA BELONGING TO IGFDI0)       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0447
*   IF DDRID^='DDR ' THEN           /* IS THIS A FULL DDRCOM         */
@RF00445 CLC   DDRID(4,DDRPTR),@CC02752                            0447
         BE    @RF00447                                            0447
*     DO;                           /* NO, IT CAN BE FREED           */
*       RFY                                                        0449
*        (RTCB) RSTD;               /* TCB REG               @YM04069*/
*       RTCB=CURRTCB;               /* PICK UP CURRENT TCB ADDRESS   */
         L     @14,CVTPTR                                          0450
         L     @14,CVTTCBP(,@14)                                   0450
         L     RTCB,CURRTCB(,@14)                                  0450
*       RASCB=ASCBPTR;              /* POINT TO CURRENT ASCB         */
         LR    RASCB,ASCBPTR                                       0451
*       DO;                         /* FREEMAIN(R) LV(LENGTH(DDRSHORT
*                                      ))SP(DDRSPN)A(DDRSHORT) BRANCH*/
*         RESPECIFY                                                0453
*          (GPR01F,                                                0453
*           GPR00F) RESTRICTED;                                    0453
*         GPR00F=LENGTH(DDRSHORT);  /* LENGTH REQUESTED              */
         LA    GPR00F,24                                           0454
*         GPR01F=DDRSPN;            /* SP IN REG 1                   */
         LA    GPR01F,245                                          0455
*         GEN(SLL   GPR01F,24)                                     0456
*         NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;             0456
         SLL   GPR01F,24
*         GPR00F=GPR00F×GPR01F;     /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0457
*         GPR01F=ADDR(DDRSHORT);    /* SET REGISTER ONE              */
         LR    GPR01F,DDRPTR                                       0458
*         CALL CVTRMBR;             /* BRANCH ENTRY POINT            */
         L     @12,CVTPTR                                          0459
         L     @15,CVTRMBR(,@12)                                   0459
         BALR  @14,@15                                             0459
*         RESPECIFY                                                0460
*          (GPR01F,                                                0460
*           GPR00F) UNRESTRICTED;                                  0460
*       END;                        /* FREEMAIN(R) LV(LENGTH(DDRSHORT
*                                      ))SP(DDRSPN)A(DDRSHORT) BRANCH*/
*       RFY                                                        0462
*        (RTCB) UNRSTD;             /* TCB REG               @YM04069*/
*     END;                                                         0463
*   RETURN;                         /* RETURN TO CALLER              */
@EL00004 DS    0H                                                  0464
@EF00004 DS    0H                                                  0464
@ER00004 LM    @14,@12,@SA00004                                    0464
         BR    @14                                                 0464
*   END DI1POST;                    /* END OF SUBROUTINE             */
         B     @EL00004                                            0465
@PB00004 DS    0H                                                  0466
*   GENERATE NOREFS NOSETS(EJECT);                                 0466
*                                                                  0466
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE DI1RLSE - RELEASE AND RESTART THE DEVICES          */
*   /* CONTROLLED BY DDR                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0467
*DI1RLSE:                           /* SUBROUTINE ENTRY POINT        */
*   PROCEDURE;                                                     0467
*                                                                  0467
         B     @PB00005                                            0467
DI1RLSE  STM   @14,@12,@SA00005                                    0467
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE 'FROM' DEVICE IS CONTROLLED, RESTART IT        @YM07702*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0468
*   IF FROMUCB^=0 THEN              /* IS THERE A 'FROM' DEVICE      */
         LTR   FROMUCB,FROMUCB                                     0468
         BZ    @RF00468                                            0468
*     DO;                           /* YES, SEE IF IT IS CONTROLLED  */
*       UCBPTR=FROMUCB;             /* POINT TO 'FROM' UCB           */
         LR    UCBPTR,FROMUCB                                      0470
*       PFXPTR=UCBPTR;              /* POINT TO 'FROM' UCB   @YM02567*/
         LR    PFXPTR,UCBPTR                                       0471
*       IF UCBDDRSW='1'B&UCBQISCE='1'B THEN/* DDRCONTROLS THE 'FROM'
*                                      DEVICE                        */
*                                                                  0472
         TM    UCBDDRSW(UCBPTR),B'00000001'                        0472
         BNO   @RF00472                                            0472
         TM    UCBQISCE(UCBPTR),B'00000001'                        0472
         BNO   @RF00472                                            0472
*         /***********************************************************/
*         /*                                                         */
*         /* RELEASE AND RESTART THE 'FROM' DEVICE                   */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0473
*         CALL DI1IOSG;             /* TURN OFF BITS AND CREATE    0473
*                                      INTERRUPT                     */
         BAL   @14,DI1IOSG                                         0473
*     END;                          /*                       @YM07702*/
*                                                                  0474
@RF00472 DS    0H                                                  0475
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE 'TO' DEVICE IS CONTROLLED, RESTART IT          @YM07702*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0475
*   IF TOUCB^=0 THEN                /* IS THERE A 'TO' DEVICE        */
@RF00468 LTR   TOUCB,TOUCB                                         0475
         BZ    @RF00475                                            0475
*     DO;                           /* YES, SEE IF IT IS CONTROLLED  */
*       UCBPTR=TOUCB;               /* POINT TO 'TO' UCB     @YM07702*/
         LR    UCBPTR,TOUCB                                        0477
*       PFXPTR=UCBPTR;              /* POINT TO 'TO' UCB     @YM02567*/
         LR    PFXPTR,UCBPTR                                       0478
*       IF UCBDDRSW='1'B&UCBQISCE='1'B THEN/* DDR CONTROLS THE 'TO'
*                                      DEVICE                        */
*                                                                  0479
         TM    UCBDDRSW(UCBPTR),B'00000001'                        0479
         BNO   @RF00479                                            0479
         TM    UCBQISCE(UCBPTR),B'00000001'                        0479
         BNO   @RF00479                                            0479
*         /***********************************************************/
*         /*                                                         */
*         /* RELEASE AND RESTART THE 'TO' DEVICE                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0480
*         CALL DI1IOSG;             /* TURN OFF BITS AND CREATE    0480
*                                      INTERRUPT                     */
         BAL   @14,DI1IOSG                                         0480
*     END;                                                         0481
*   RETURN;                         /* RETURN TO CALLER              */
@EL00005 DS    0H                                                  0482
@EF00005 DS    0H                                                  0482
@ER00005 LM    @14,@12,@SA00005                                    0482
         BR    @14                                                 0482
*   END DI1RLSE;                    /* END OF SUBROUTINE             */
         B     @EL00005                                            0483
@PB00005 DS    0H                                                  0484
*   GENERATE NOREFS NOSETS(EJECT);  /*                       @YM07702*/
*                                                                  0484
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE DI1IOSG - TURN OFF TWO UCB FLAGS AND CREATE AN     */
*   /* INTERRUPT (INPUT-UCB ADDRESS IN REG 7).               @YM07702*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0485
*DI1IOSG:                           /* SUBROUTINE ENTRY POINT      0485
*                                                            @YM07702*/
*   PROCEDURE;                      /*                       @YM07702*/
         B     @PB00006                                            0485
DI1IOSG  STM   @14,@12,@SA00006                                    0485
*   R13SAVE=SAVEPTR;                /* SAVE REGISTER 13      @YM07702*/
         LR    R13SAVE,SAVEPTR                                     0486
*   SAVEPTR=ADDR(SAVEIOS);          /* POINT TO REGISTER SAVE AREA TO
*                                      BE USED BY IOSGEN     @YM07702*/
         LA    SAVEPTR,SAVEIOS                                     0487
*   RFY                                                            0488
*    (IOSGENR5) RSTD;               /* IOSGEN REG            @YM07702*/
*   GENERATE REFS(PFXPTR,SAVEPTR,UCBFLA,UCBFLB,UCBFLC,CVTPTR,CVTIXAVL,
*       IOCGENA,UCBBGN,UCBCHAN,UCBOB,FLCIOPSW,FLCIOAA,FLCCSW,FLCINPSW,
*       PSA,IOSGENR5)                                              0489
*       (IOSGEN UCBFLG,UCB=(PFXPTR),VAR=OFF,TABLE=UCBQISCE)        0489
*   (IOSGEN UCBFLG,UCB=(PFXPTR),VAR=OFF,TABLE=UCBDDRSW);           0489
         IOSGEN UCBFLG,UCB=(PFXPTR),VAR=OFF,TABLE=UCBQISCE
         IOSGEN UCBFLG,UCB=(PFXPTR),VAR=OFF,TABLE=UCBDDRSW
*   IF TAPESW='1'B×ABTERMSW='1'B×DROPQSW='1'B THEN/* SIMULATE AN I/O
*                                      INTERRUPT TO RESTART THE I/O
*                                      QUEUE AFTER UNSUCCESSFUL SWAP
*                                      OR SUCCESSFUL TAPE SWAP     0490
*                                      (OPERATOR ACTION WILL GENERATE
*                                      DEVICE END INTERRUPT FOR    0490
*                                      SUCCESSFUL DIRECT ACCESS OR 0490
*                                      UNIT RECORD SWAP)     @YM07712*/
         TM    TAPESW,B'11100000'                                  0490
         BZ    @RF00490                                            0490
*     GEN(IOSINTRP UCB=(PFXPTR),BRANCH=YES);/* SIM INTRUPT   @ZA25419*/
         IOSINTRP UCB=(PFXPTR),BRANCH=YES
*   SAVEPTR=R13SAVE;                /* RESTORE REGISTER 13   @YM07702*/
@RF00490 LR    SAVEPTR,R13SAVE                                     0492
*   RFY                                                            0493
*    (IOSGENR5) UNRSTD;             /* IOSGEN WORK REG       @YM07702*/
*   RETURN;                         /* RETURN TO CALLER      @YM07702*/
@EL00006 DS    0H                                                  0494
@EF00006 DS    0H                                                  0494
@ER00006 LM    @14,@12,@SA00006                                    0494
         BR    @14                                                 0494
*   END DI1IOSG;                    /* END OF SUBROUTINE     @YM07702*/
*                                                                  0496
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SRB SUBROUTINE EXECUTES VIA A SRB WHICH IS SCHEDULED IN  */
*   /* IGFDI1. THE SRB WAS GETMAIN FROM SUBPOOL 245. THE INPUT       */
*   /* REGISTERS ARE R0=SRB ADDRESS,R1=IOSB ADDRESS, AND R15=        */
*   /* IGFDISRB ENTRY POINT.                                 @YM04069*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0496
*IGFDISRB:                                                         0496
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @YM04069*/
IGFDISRB DS    0H                                                  0497
*   RFY                                                            0497
*    (SRBPTR) RSTD;                 /*                       @YM07702*/
*   SRBPTR=R0;                      /* INIT SRB BASE         @YM04069*/
         LR    SRBPTR,R0                                           0498
*   CODEBASE=CONCODE;               /* INIT MODULE BASE REG  @YM04069*/
         L     CODEBASE,CONCODE(,SRBPTR)                           0499
*   RFY                                                            0500
*    (R5,                                                          0500
*     R11,                                                         0500
*     R12,                                                         0500
*     R13,                                                         0500
*     R14) RSTD;                    /*                       @YM04069*/
*   R5=R14;                         /* SAVE RETURN ADDRESS   @YM04069*/
         LR    R5,R14                                              0501
*   GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);              0502
*                                                         /*@YM04069*/
SETLOCK SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,               @YM04069 **
               RELATED=(LOCAL,IGFDI1(FREELOCK));             @YM04069
*   RFY                                                            0503
*    (R11,                                                         0503
*     R12,                                                         0503
*     R13,                                                         0503
*     R14) UNRSTD;                  /*                       @YM04069*/
*   R13=ADDR(CONSAVE);              /* GET SAVE AREA         @YM04069*/
         LA    R13,CONSAVE(,SRBPTR)                                0504
*   GEN(STM 14,12,12(13));          /* SAVE REGS IN GETMAIN AREA   0505
*                                                            @YM04069*/
         STM 14,12,12(13)
*   CALL IGC015;                    /* POST THE IOSB WITH AN ERROR OR
*                                      REQUEST RETRY OF THE REQUEST
*                                                            @YM04069*/
         L     @12,CVTPTR                                          0506
         L     @12,IOCOMPTR(,@12)                                  0506
         L     @15,IOCSVCF(,@12)                                   0506
         BALR  @14,@15                                             0506
*   GEN(LM 14,12,12(13));           /* RESTORE REGS          @YM04069*/
         LM 14,12,12(13)
*   RFY                                                            0508
*    (R11,                                                         0508
*     R12,                                                         0508
*     R13,                                                         0508
*     R14) RSTD;                    /*                       @YM04069*/
*   GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);              0509
*                                                         /*@YM04069*/
SETSAL SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,               @YM04069 **
               RELATED=(SALLOC,IGFDI1(FREESAL));             @YM04069
*   RFY                                                            0510
*    (R11,                                                         0510
*     R12,                                                         0510
*     R13,                                                         0510
*     R14) UNRSTD;                  /*                       @YM04069*/
*   DO;                             /* FREEMAIN(RU)                0511
*                                      LV(LENGTH(CONBLOC))A(CONBLOC)
*                                      SP(SPN) BRANCH(GLOBAL)        */
*     RESPECIFY                                                    0512
*      (GPR01F,                                                    0512
*       GPR03F,                                                    0512
*       GPR00F,                                                    0512
*       GPR04P) RESTRICTED;                                        0512
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0513
*     GPR03F=3;                     /* SET TYPE                      */
         LA    GPR03F,3                                            0514
*     GPR00F=LENGTH(CONBLOC);       /* LENGTH REQUESTED              */
         LA    GPR00F,120                                          0515
*     GPR01F=ADDR(CONBLOC);         /* SET REGISTER ONE              */
         LR    GPR01F,SRBPTR                                       0516
*     GPR03F=GPR03F+((SPN)*256);    /* SUBPOOL VALUE                 */
         AL    GPR03F,@CF02786                                     0517
*     GPR04P=WSAGGMFM;              /* POINT TO SAVE AREA            */
         L     @14,CVTPTR                                          0518
         L     @12,CVTSPSA(,@14)                                   0518
         L     GPR04P,WSAGGMFM(,@12)                               0518
*     CALL CVTGLMN;                 /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@14)                                   0519
         BALR  @14,@15                                             0519
*     RESPECIFY                                                    0520
*      (GPR01F,                                                    0520
*       GPR03F,                                                    0520
*       GPR00F,                                                    0520
*       GPR04P) UNRESTRICTED;                                      0520
*   END;                            /* FREEMAIN(RU)                0521
*                                      LV(LENGTH(CONBLOC))A(CONBLOC)
*                                      SP(SPN) BRANCH(GLOBAL)        */
*   RFY                                                            0522
*    (R11,                                                         0522
*     R12,                                                         0522
*     R13,                                                         0522
*     R14) RSTD;                    /*                       @YM04069*/
*   GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);              0523
*                                                         /*@YM04069*/
FREESAL SETLOCK RELEASE,TYPE=SALLOC,                   @YM04069       **
               RELATED=(SALLOC,IGFDI1(GETSAL));             @YM04069
*   GENERATE REFS(PSALITA,FLC) SETS(R11,R12,R13,R14);              0524
*                                                         /*@YM04069*/
FREELOCK SETLOCK RELEASE,TYPE=LOCAL,                    @YM04069      **
               RELATED=(LOCAL,IGFDI1(SETLOCK));             @YM04069
*   R14=R5;                         /* RESTORE RETURN ADDRESS      0525
*                                                            @YM04069*/
         LR    R14,R5                                              0525
*   RFY                                                            0526
*    (R5,                                                          0526
*     R11,                                                         0526
*     R12,                                                         0526
*     R13,                                                         0526
*     R14,                                                         0526
*     SRBPTR) UNRSTD;               /*                       @YM07702*/
*   RETURN;                         /* RETURN TO CALLER      @YM04069*/
@EL00007 DS    0H                                                  0527
@EF00007 DS    0H                                                  0527
@ER00007 BR    @14                                                 0527
*   END IGFDISRB;                   /*                       @YM04069*/
*                                                                  0529
*   /*****************************************************************/
*   /*                                                               */
*   /* ?EPILOG - GENERATE DECLARES FOR SYSTEM MACROS                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0529
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0529
*     GPR01F FIXED(31) REG(1),                                     0529
*     GPR03F FIXED(31) REG(3),                                     0529
*     GPR04P PTR(31) REG(4);                                       0529
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0530
*     I031F FIXED(31) BASED,                                       0530
*     I031P PTR(31) BASED,                                         0530
*     I015F FIXED(15) BASED,                                       0530
*     I015P PTR(15) BASED,                                         0530
*     I008P PTR(8) BASED,                                          0530
*     I001C CHAR(1) BASED;                                         0530
*   END IGFDI1                      /* END OF MODULE                 */
*                                                                  0531
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHADDR  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOCM)                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IEFJESCT)                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*                                                                  0531
*       ;                                                          0531
@EL00001 L     @13,4(,@13)                                         0531
@EF00001 L     @00,@SIZDATD                                        0531
         LR    @01,@09                                             0531
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0531
         BR    @14                                                 0531
@DATA    DS    0H
@CH00042 DC    H'1'
@CH00092 DC    H'2'
@CH00040 DC    H'4'
@CH00081 DC    H'8'
@CH00128 DC    H'12'
@CH00044 DC    H'31'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@SA00006 DS    15F
@AL00001 DS    1A
IGFDI1   CSECT
         DS    0F
@CF02786 DC    F'62720'
@DATD    DSECT
         DS    0D
ASXBPTR  DS    A
@NM00001 DS    BL1
         ORG   @NM00001
ABTERMSW DS    BL1
DROPQSW  EQU   @NM00001+0
TAPESW   EQU   @NM00001+0
@NM00002 EQU   @NM00001+0
         ORG   @NM00001+1
         DS    CL3
SAVEIOS  DS    CL64
         ORG   SAVEIOS
@NM00006 DS    16F
         ORG   SAVEIOS+64
DERAREA  DS    CL48
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGFDI1   CSECT
         DS    0F
@SIZDATD DC    AL1(245)
         DC    AL3(@ENDDATD-@DATD)
@CA00028 DC    A(IGFDI1)
@CV00100 DC    V(IGFDE0)
@CV00101 DC    V(IGFDM0)
         DS    0D
@CC02752 DC    C'DDR '
@CC02764 DC    C'SRB '
@CB01166 DC    B'0000000011100100'
DERRECPM DS    CL24
         ORG   DERRECPM
@NM00024 DC    CL8'IGFDI0'
@NM00025 DC    CL8'IGFDI1'
@NM00026 DC    CL8'77223'
         ORG   DERRECPM+24
         DS    CL2
IGFDI1P  DC    13F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R13SAVE  EQU   @03
NEXT     EQU   @11
WDDRPTR  EQU   @03
TOUCB    EQU   @04
FROMUCB  EQU   @06
ORIGUCB  EQU   @03
UCBPTR   EQU   @03
ASCBPTR  EQU   @05
CODEBASE EQU   @08
DATABASE EQU   @09
SDWAPTR  EQU   @00
R0       EQU   @00
R1       EQU   @01
DERPTR   EQU   @02
RTCB     EQU   @04
R5       EQU   @05
IOSGENR5 EQU   @05
SRBPTR   EQU   @06
RASCB    EQU   @07
PFXPTR   EQU   @07
DDRPTR   EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
SAVEPTR  EQU   @13
R14      EQU   @14
RTNCODE  EQU   @15
GPR01F   EQU   @01
GPR00F   EQU   @00
GPR03F   EQU   @03
GPR04P   EQU   @04
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
FLCIOPSW EQU   PSA+56
FLCCSW   EQU   PSA+64
FLCINPSW EQU   PSA+120
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCIOAA  EQU   FLCIOA+1
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
@NM00003 EQU   0
CURRTCB  EQU   @NM00003+4
IGC015   EQU   0
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBID    EQU   SRB
SRBFLNK  EQU   SRB+4
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBPASID EQU   SRBFLC+2
SRBPTCB  EQU   SRBFLC+4
SRBEP    EQU   SRB+20
SRBPARM  EQU   SRB+28
CONBLOC  EQU   0
CONSAVE  EQU   CONBLOC+44
CONCODE  EQU   CONBLOC+116
ASVT     EQU   0
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
ASCB     EQU   0
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASXB     EQU   0
ASXBSPSA EQU   ASXB+112
ASXBDDR  EQU   ASXB+124
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIXAVL EQU   CVTMAP+124
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
DDRCOM   EQU   0
DDRSHORT EQU   DDRCOM
DDRID    EQU   DDRSHORT
DDRNXT   EQU   DDRSHORT+4
DDRCNTRL EQU   DDRSHORT+8
DDRSRC   EQU   DDRCNTRL
DDRSYS   EQU   DDRSRC
DDRSTAT  EQU   DDRCNTRL+1
DDRPRG   EQU   DDRSTAT
DDRDCHAR EQU   DDRCNTRL+2
DDRDSTAT EQU   DDRDCHAR+1
DDRDA    EQU   DDRDSTAT
DDRMT    EQU   DDRDSTAT
DDRUIOSB EQU   DDRSHORT+12
DDRUASID EQU   DDRSHORT+16
DDRLONG  EQU   DDRCOM+24
DDRTOUCB EQU   DDRLONG
DDRFMUCB EQU   DDRLONG+4
DDRROWN  EQU   DDRLONG+8
DDRMIHT  EQU   DDRLONG+12
DDRUTCB  EQU   DDRLONG+24
DDRTER   EQU   DDRLONG+36
DDRTER1  EQU   DDRTER
DDRINV   EQU   DDRLONG+38
DDRAPP   EQU   DDRLONG+40
DDRIOF   EQU   DDRLONG+52
DDRIOF2  EQU   DDRIOF+1
DDRMSG   EQU   DDRLONG+54
DDRMSGCD EQU   DDRMSG+1
DDRMSGP  EQU   DDRLONG+56
DDRMSGPN EQU   DDRMSGP
DDRMSGPC EQU   DDRMSGP+1
DDRLABEL EQU   DDRLONG+64
DDRRETRY EQU   DDRLONG+65
DDRREC   EQU   DDRLONG+66
DDRREC2  EQU   DDRREC+1
DDRUSER  EQU   DDRLONG+68
DDRSSOB  EQU   DDRLONG+76
DERPLIST EQU   0
DERFUNK  EQU   DERPLIST
DERSWCHS EQU   DERPLIST+1
DERCRASH EQU   DERSWCHS
DERREC   EQU   DERPLIST+4
DERSPEC  EQU   DERPLIST+8
DERRETRY EQU   DERPLIST+12
DERDATD  EQU   DERPLIST+16
DERRSRC  EQU   DERPLIST+20
DERLRC   EQU   DERPLIST+21
DERRUB   EQU   DERPLIST+22
DERPFX   EQU   DERRUB
DERRCODE EQU   DERRUB+2
DERRDATA EQU   DERRUB+6
DERRSAVE EQU   DERRUB+14
DERGMSPL EQU   DERPLIST+40
EWA      EQU   0
EWAHDR   EQU   EWA
EWAFLAGS EQU   EWA+4
EWAFLG1  EQU   EWAFLAGS
EWASCCD  EQU   EWAFLG1
EWASCC3  EQU   EWASCCD
EWAFLG2  EQU   EWAFLAGS+1
EWAFLG3  EQU   EWAFLAGS+2
EWASNSCT EQU   EWAFLAGS+3
EWACNTRS EQU   EWA+10
EWAERPIB EQU   EWA+16
EWARGFG1 EQU   EWAERPIB+4
EWARGFG2 EQU   EWAERPIB+5
EWAXCSW1 EQU   EWAERPIB+6
EWAXCSW2 EQU   EWAERPIB+7
EWAIERP  EQU   EWA+32
IOCOM    EQU   0
IOCGENA  EQU   IOCOM+84
IOCSVCF  EQU   IOCOM+104
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00039 EQU   IOSB+20
IOSCSW   EQU   @NM00039+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSERP   EQU   IOSB+52
IOSDIE   EQU   IOSB+68
IOSDIEFG EQU   IOSDIE
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESSSREQ EQU   JESCT+20
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SSREQ    EQU   0
SDWA     EQU   0
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWACLUP EQU   SDWAERRD
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWAACF2 EQU   SDWAPARQ+1
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SSOB     EQU   0
SSOBFUNC EQU   SSOB+6
SSOBINDV EQU   SSOB+16
SSDR     EQU   0
SSDRFLG2 EQU   SSDR+3
SSDR4SWP EQU   SSDRFLG2
WSAL     EQU   0
WSAG     EQU   0
WSAGGMFM EQU   WSAG+4
WSAC     EQU   0
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBQISCE EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDDRSW EQU   UCBFLC
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00122 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
UCBBGN   EQU   0
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
SWAMGR   EQU   0
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASVT  EQU   CVTS01+208
CVTGSMQ  EQU   CVTS01+264
CVTGLMN  EQU   CVTS01+332
CVTSPSA  EQU   CVTS01+336
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTRMBR  EQU   CVTS01+492
CVTGSDA  EQU   CVTS01+600
ASVTPTR  EQU   CVTASVT
EWAPTR   EQU   IOSERP
IOCOMPTR EQU   CVTIXAVL
IOSBPTR  EQU   DDRUIOSB
EWADDIOS EQU   EWAIERP
EWADAREA EQU   EWAIERP
EWDASNS  EQU   EWADAREA
EWDSNS0  EQU   EWDASNS
EWDSNS1  EQU   EWDASNS+1
EWDMAM   EQU   EWDSNS1
EWDSNS2  EQU   EWDASNS+2
EWDZLOG  EQU   EWDSNS2
EWDWRPS  EQU   EWDZLOG
EWD22    EQU   EWDSNS2
EWDSNS10 EQU   EWDASNS+10
EWDSNS24 EQU   EWDASNS+24
EWDHOMAD EQU   EWADAREA+39
EWDHAFLG EQU   EWDHOMAD
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00121 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00121
UCBSKPFG EQU   @NM00121
UCBRIPND EQU   @NM00121
UCBRTIAC EQU   @NM00121
UCBRSV79 EQU   @NM00121
UCBRSV78 EQU   @NM00121
UCBRSV77 EQU   @NM00121
UCBOLTEP EQU   @NM00121
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00120 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00044 EQU   IOSPCISC+4
@NM00043 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00042 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
EWDEND   EQU   EWADAREA+128
EWDCCWA  EQU   EWADAREA+120
EWDCCW9  EQU   EWADAREA+112
EWDCCW8  EQU   EWADAREA+104
EWDCCW7  EQU   EWADAREA+96
EWDCCW6  EQU   EWADAREA+88
EWDCCW5  EQU   EWADAREA+80
EWDCCW4  EQU   EWADAREA+72
EWDCCW3  EQU   EWADAREA+64
EWDCCW2  EQU   EWADAREA+56
EWDCCW1  EQU   EWADAREA+48
EWDDISP  EQU   EWADAREA+45
EWDHARNO EQU   EWDHOMAD+5
EWDCCHH  EQU   EWDHOMAD+1
EWDHAALT EQU   EWDHAFLG
EWDHADEF EQU   EWDHAFLG
EWDHA5   EQU   EWDHAFLG
EWDHA4   EQU   EWDHAFLG
EWDHA3   EQU   EWDHAFLG
EWDHA2   EQU   EWDHAFLG
EWDHA1   EQU   EWDHAFLG
EWDHA0   EQU   EWDHAFLG
EWDSAVC  EQU   EWADAREA+32
EWDSAVS  EQU   EWADAREA+30
EWDSAVOP EQU   EWADAREA+29
EWDSAVKY EQU   EWADAREA+28
EWDSNS27 EQU   EWDASNS+27
EWDSNS26 EQU   EWDASNS+26
EWDSNS25 EQU   EWDASNS+25
EWDRZRO  EQU   EWDSNS24
EWDSNS23 EQU   EWDASNS+23
EWDSNS22 EQU   EWDASNS+22
EWDSNS21 EQU   EWDASNS+21
EWDSNS20 EQU   EWDASNS+20
EWDSNS19 EQU   EWDASNS+19
EWDSNS18 EQU   EWDASNS+18
EWDSNS17 EQU   EWDASNS+17
EWDSNS16 EQU   EWDASNS+16
EWDSNS15 EQU   EWDASNS+15
EWDSNS14 EQU   EWDASNS+14
EWDSNS13 EQU   EWDASNS+13
EWDSNS12 EQU   EWDASNS+12
EWDSNS11 EQU   EWDASNS+11
EWD107   EQU   EWDSNS10
EWD106   EQU   EWDSNS10
EWD105   EQU   EWDSNS10
EWD104   EQU   EWDSNS10
EWDSTAT  EQU   EWDSNS10
EWD100   EQU   EWDSNS10
EWDSNS9  EQU   EWDASNS+9
EWDSNS8  EQU   EWDASNS+8
EWDSNS7  EQU   EWDASNS+7
EWDSNS6  EQU   EWDASNS+6
EWDSNS5  EQU   EWDASNS+5
EWDSNS4  EQU   EWDASNS+4
EWDSNS3  EQU   EWDASNS+3
EWD27    EQU   EWDSNS2
EWD26    EQU   EWDSNS2
EWD25    EQU   EWDSNS2
EWD24    EQU   EWDSNS2
EWDEDAT  EQU   EWDSNS2
EWDMDA2  EQU   EWD22
EWDCORR  EQU   EWDSNS2
EWDMDA1  EQU   EWDWRPS
EWDOFLO  EQU   EWDSNS1
EWDINHI  EQU   EWDMAM
EWDFP    EQU   EWDSNS1
EWDNRF   EQU   EWDSNS1
EWD13    EQU   EWDSNS1
EWDEOC   EQU   EWDSNS1
EWDTVRN  EQU   EWDSNS1
EWDPERM  EQU   EWDSNS1
EWDSKCK  EQU   EWDSNS0
EWDTCC   EQU   EWDSNS0
EWDOVRN  EQU   EWDSNS0
EWDDATA  EQU   EWDSNS0
EWDEQU   EQU   EWDSNS0
EWDBUSO  EQU   EWDSNS0
EWDINT   EQU   EWDSNS0
EWDCREJ  EQU   EWDSNS0
EWAEND   EQU   EWADDIOS+74
EWA2CHA  EQU   EWADDIOS+72
EWA2CPU  EQU   EWADDIOS+71
EWASCSW  EQU   EWADDIOS+64
EWASNS   EQU   EWADDIOS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00122
UCBHALI  EQU   @NM00122
UCBRSV09 EQU   @NM00122
UCBRSV08 EQU   @NM00122
UCBRSV07 EQU   @NM00122
UCBRSV06 EQU   @NM00122
UCBRSV05 EQU   @NM00122
UCBRSV04 EQU   @NM00122
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00119 EQU   UCB
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALSDMP EQU   WSAL+12
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
SSDRUCBL EQU   SSDR+12
SSDRSTOU EQU   SSDR+8
SSDRSFRU EQU   SSDR+4
@NM00118 EQU   SSDRFLG2
SSDRFLG1 EQU   SSDR+2
SSDRLEN  EQU   SSDR
SSOBRETN EQU   SSOB+12
SSOBSSIB EQU   SSOB+8
SSOBLEN  EQU   SSOB+4
SSOBID   EQU   SSOB
@NM00117 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00116 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00115 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00114 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00113 EQU   SDWADDAT+3
@NM00112 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00111 EQU   SDWADDAT+1
@NM00110 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00109 EQU   SDWADUMP+2
@NM00108 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00107 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00106 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00105 EQU   SDWAACF3
@NM00104 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00103 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00102 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWARCDE EQU   SDWAPARQ
SDWALCPU EQU   SDWACPUA+2
@NM00101 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00100 EQU   SDWA+239
@NM00099 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00098 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
@NM00097 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00096 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00095 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00094 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00093 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00092 EQU   SDWAINC2
@NM00091 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00090 EQU   SDWAILC2
@NM00089 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00088 EQU   SDWANXT2
@NM00087 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00086 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00085 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00084 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00083 EQU   SDWAINC1
@NM00082 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00081 EQU   SDWAILC1
@NM00080 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00079 EQU   SDWANXT1
@NM00078 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00077 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00076 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00075 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00074 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00073 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00072 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00071 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00070 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
SDWAPARM EQU   SDWA
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESQMGR  EQU   JESCT+12
JESUNITS EQU   JESCT+4
@NM00045 EQU   JESCT
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00041 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00040 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSNOTRS EQU   IOSDIEFG
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00039
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00038 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
IOCOEND  EQU   IOCOM+128
IOCPATCH EQU   IOCOM+124
IOCUCBBM EQU   IOCOM+120
IOCQCNT  EQU   IOCOM+116
IOCIOSDQ EQU   IOCOM+112
IOCIOSEQ EQU   IOCOM+108
IOCTCCW  EQU   IOCOM+100
IOCRSVTB EQU   IOCOM+96
IOCMFCNT EQU   IOCOM+92
IOCMFHK  EQU   IOCOM+88
IOCCCH   EQU   IOCOM+80
IOCASYNQ EQU   IOCOM+76
IOCLCHTB EQU   IOCOM+72
IOCATTBL EQU   IOCOM+68
IOCOMEX  EQU   IOCOM+64
IOCSYNCH EQU   IOCOM+56
IOCCATLK EQU   IOCOM+48
IOCPRGID EQU   IOCOM+44
IOCIOSCP EQU   IOCOM+40
IOCORMGT EQU   IOCOM+36
IOCVOID  EQU   IOCOM+32
IOCSTIO  EQU   IOCOM+28
@NM00037 EQU   IOCOM+24
@NM00036 EQU   IOCOM+20
IOCINT   EQU   IOCOM+16
IOCCTBL  EQU   IOCOM+12
IOCHIO   EQU   IOCOM+8
IOCPST   EQU   IOCOM+4
IOCPGCT  EQU   IOCOM+2
IOCVOICT EQU   IOCOM
EWADDISP EQU   EWA+29
EWADCNT  EQU   EWA+28
EWACPU   EQU   EWA+27
@NM00035 EQU   EWA+26
EWACHA   EQU   EWA+24
EWACSEQ  EQU   EWAXCSW2
EWACDIN  EQU   EWAXCSW2
@NM00034 EQU   EWAXCSW2
EWACTEC  EQU   EWAXCSW2
EWACDAV  EQU   EWAXCSW1
EWACCHV  EQU   EWAXCSW1
EWACCMD  EQU   EWAXCSW1
EWACUNS  EQU   EWAXCSW1
EWACSQV  EQU   EWAXCSW1
@NM00033 EQU   EWAXCSW1
EWACITF  EQU   EWAXCSW1
@NM00032 EQU   EWARGFG2
EWACCUE  EQU   EWARGFG2
EWACSTG  EQU   EWARGFG2
EWACSCU  EQU   EWARGFG2
EWACCHA  EQU   EWARGFG2
EWACCPU  EQU   EWARGFG2
EWANORTY EQU   EWARGFG1
EWACCNT  EQU   EWARGFG1
EWACSNS  EQU   EWARGFG1
@NM00031 EQU   EWARGFG1
EWACHIO  EQU   EWARGFG1
EWACTIO  EQU   EWARGFG1
EWACINT  EQU   EWARGFG1
EWACSIO  EQU   EWARGFG1
EWAUCB   EQU   EWAERPIB+1
@NM00030 EQU   EWAERPIB
EWASTUP  EQU   EWA+14
EWACNTR4 EQU   EWACNTRS+3
EWACNTR3 EQU   EWACNTRS+2
EWACNTR2 EQU   EWACNTRS+1
EWACNTR1 EQU   EWACNTRS
EWASSTAT EQU   EWA+8
EWASCTMX EQU   EWASNSCT
@NM00029 EQU   EWASNSCT
EWAJAM   EQU   EWAFLG3
@NM00028 EQU   EWAFLG2
EWADIR   EQU   EWAFLG2
EWACOVF  EQU   EWAFLG2
EWAWTEMP EQU   EWAFLG2
EWAMDR   EQU   EWAFLG2
EWABDSNS EQU   EWAFLG1
EWADDMSG EQU   EWAFLG1
EWASCC1  EQU   EWASCC3
EWASCC2  EQU   EWASCC3
@NM00027 EQU   EWAFLG1
EWA2SNS  EQU   EWAFLG1
EWASLIS  EQU   EWAFLG1
EWAEXT   EQU   EWAHDR
DERGMADR EQU   DERPLIST+44
DERGMLNG EQU   DERGMSPL+1
DERGMSPN EQU   DERGMSPL
DERRDDR  EQU   DERRUB+10
@NM00023 EQU   DERRSRC
DERDISK  EQU   DERRSRC
DERUREC  EQU   DERRSRC
DERTAPE  EQU   DERRSRC
DERDALNG EQU   DERDATD+1
DERDASPN EQU   DERDATD
@NM00022 EQU   DERPLIST+2
@NM00021 EQU   DERSWCHS
DERESTAE EQU   DERSWCHS
DERECALL EQU   DERSWCHS
DERPERK  EQU   DERSWCHS
DDRUBCNT EQU   DDRLONG+72
@NM00020 EQU   DDRUSER+1
DDRUMODE EQU   DDRUSER
@NM00019 EQU   DDRREC2
DDRRFMTO EQU   DDRREC2
DDRREC1  EQU   DDRREC
DDRLNOP  EQU   DDRLABEL
@NM00018 EQU   DDRLABEL
DDRLSD   EQU   DDRLABEL
DDRLNSL  EQU   DDRLABEL
DDRLNL   EQU   DDRLABEL
DDRLBLP  EQU   DDRLABEL
DDRLAL   EQU   DDRLABEL
DDRMSGOP EQU   DDRMSG
@NM00017 EQU   DDRIOF2
DDRICNT  EQU   DDRIOF2
DDRIMNT  EQU   DDRIOF2
DDRILAB  EQU   DDRIOF2
DDRITAKE EQU   DDRIOF2
DDRWHICH EQU   DDRIOF2
DDRIOF1  EQU   DDRIOF
DDRCOUNT EQU   DDRLONG+48
DDRIBUF  EQU   DDRLONG+44
DDRIBUFL EQU   DDRLONG+42
DDRAPP2  EQU   DDRAPP+1
DDRAPP1  EQU   DDRAPP
DDRINV2  EQU   DDRINV+1
DDRINV1  EQU   DDRINV
DDRTER2  EQU   DDRTER+1
DDRTEST  EQU   DDRLONG+32
DDRUASCB EQU   DDRLONG+28
DDRUIOB  EQU   DDRLONG+20
DDRUDEB  EQU   DDRMIHT+4
DDRUDCB  EQU   DDRMIHT
DDRASID  EQU   DDRLONG+10
DDRMIH   EQU   DDRLONG+9
DDRFIRST EQU   DDRROWN
DDRJES3L EQU   DDRROWN
@NM00016 EQU   DDRROWN
DDRRDENQ EQU   DDRROWN
DDRRUENQ EQU   DDRROWN
DDRRTENQ EQU   DDRROWN
DDRTOCUA EQU   DDRSHORT+21
DDRFMCUA EQU   DDRSHORT+18
@NM00015 EQU   DDRDSTAT
DDRUR    EQU   DDRDSTAT
DDRBUFL  EQU   DDRDSTAT
DDRMDR   EQU   DDRDCHAR
@NM00014 EQU   DDRSTAT
DDRSIRB  EQU   DDRSTAT
DDRRMV   EQU   DDRSTAT
DDRHAMA  EQU   DDRSTAT
DDRQUE   EQU   DDRSTAT
DDRACTV  EQU   DDRSTAT
@NM00013 EQU   DDRSRC
DDRPAGE  EQU   DDRSRC
DDROPER  EQU   DDRSRC
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00012 EQU   CVTFIX+248
@NM00011 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
ASVTEND  EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTMAXU EQU   ASVT+516
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00010 EQU   ASVT
CONSA12  EQU   CONSAVE+12
@NM00009 EQU   CONSAVE
CONSRB   EQU   CONBLOC
@NM00008 EQU   SRB+40
@NM00007 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBRMTR  EQU   SRB+24
SRBCPAFF EQU   SRBFLC
@NM00005 EQU   @NM00003+8
@NM00004 EQU   @NM00003
@NM00069 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00068 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00067 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00066 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00065 EQU   FLCFSA
@NM00064 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00063 EQU   FLCMCLA+20
@NM00062 EQU   FLCIOA
@NM00061 EQU   FLCMCLA+15
@NM00060 EQU   FLCMCLA+14
@NM00059 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00058 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00057 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00056 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00055 EQU   FLCPER
@NM00054 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00053 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00052 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00051 EQU   FLCPIILC
@NM00050 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00049 EQU   FLCSVILC
@NM00048 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00047 EQU   PSA+128
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00046 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00447 EQU   @EL00004
@RF00475 EQU   @EL00005
@RF00479 EQU   @EL00005
@PB00007 EQU   @EL00001
@PB00006 EQU   @PB00007
@ENDDATA EQU   *
         END   IGFDI1,(C'PLS1616',0701,77223)
