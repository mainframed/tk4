         TITLE 'IGFPBUCR     - PER PROCESSOR MCH INITIALIZATION        *
                        '
IGFPBUCR CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(24)                                             0001
         DC    C'IGFPBUCR 77334  UZ85100 '                         0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*
* REFS ARE GENERATED FOR NVT FIELDS THAT CONTAIN ADDRESSES OF
* NIP SERVICE ROUTINES, SO IEAPMNIP MACRO CALLS TO THESE ROUTINES
* WILL ASSEMBLE PROPERLY.
*                                                                  0137
*/********************************************************************/
*/*                                                                  */
*/*MAINLINE-                                                         */
*/*          IGFPBUCR                                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0137
*   ABSZERO=0;                      /* ABSOLUTE LOCATION ZERO        */
         SLR   ABSZERO,ABSZERO                                     0137
*   RWAPTR=RVTRWAPT;                /* LOAD BASE FOR RWA             */
         L     @11,CVTPTR(,ABSZERO)                                0138
         L     @11,RVTPTR(,@11)                                    0138
         L     RWAPTR,RVTRWAPT(,@11)                               0138
*   IF INPREG=0                     /* CHECK FOR 0 - ALLOCATE IN REG0*/
*     THEN                                                         0139
         LTR   INPREG,INPREG                                       0139
         BZ    @RT00139                                            0139
*     GOTO ALLOCATE;                /* ALLOCATE ROUTINE              */
*   ELSE                                                           0141
*     IF INPREG=4                   /* CHECK FOR 4 - DEALLOCATE IN 0141
*                                      REG0                          */
*       THEN                                                       0141
         C     INPREG,@CF00046                                     0141
         BE    @RT00141                                            0141
*       GOTO DEALLOC;               /* DEALLOCATE ROUTINE            */
*     ELSE                                                         0143
*       IF INPREG=8                 /* CHECK FOR 8 - CR INIT IN REG0 */
*         THEN                                                     0143
         C     INPREG,@CF00038                                     0143
         BE    @RT00143                                            0143
*         GOTO CRINIT;              /* CR INITIALIZATION             */
*       ELSE                                                       0145
*         IF INPREG=12              /* CHECK FOR 12 - CR RESET       */
*           THEN                                                   0145
         C     INPREG,@CF00032                                     0145
         BE    @RT00145                                            0145
*           GOTO CRRESET;           /* RESET CR                      */
*         ELSE                                                     0147
*           ;                                                      0147
*RETRN4:                                                           0148
*   ;                                                              0148
RETRN4   DS    0H                                                  0149
*   RETURN CODE(4);                 /* RETURN TO CALLER              */
         LA    @15,4                                               0149
         L     @14,12(,@13)                                        0149
         LM    @00,@12,20(@13)                                     0149
         BR    @14                                                 0149
*ALLOCATE:                                                         0150
*   ;                                                              0150
ALLOCATE DS    0H                                                  0151
*   IF CPUREG>CPUHI                 /* IS INPUT CPU ADDRESS > HIGHEST
*                                      ADDRESS                       */
*     THEN                                                         0151
         C     CPUREG,CPUHI                                        0151
         BH    @RT00151                                            0151
*     GOTO RETRN4;                  /* SET FAILING RETURN CODE       */
*   ELSE                                                           0153
*     ;                                                            0153
*   PCCAPTR=PCCAT00P(CPUREG+1);     /* GET PCCA ADDRESS              */
         LR    @11,CPUREG                                          0154
         SLA   @11,2                                               0154
         L     @09,CVTPTR(,ABSZERO)                                0154
         L     @09,CVTPCCAT(,@09)                                  0154
         L     PCCAPTR,PCCAT00P(@11,@09)                           0154
*   GEN(   LRA   REALADR,0(PCCAPTR));/* REAL ADR OF PCCA     @YM00964*/
            LRA   REALADR,0(PCCAPTR)
*   RWAPCCAR(CPUREG+1)=REALADR;     /* STORE PCCA REAL IN RWA      0156
*                                                            @YM00964*/
         LR    @11,CPUREG                                          0156
         SLA   @11,2                                               0156
         ST    REALADR,RWAPCCAR(@11,RWAPTR)                        0156
*   IF PCCAPTR=0                    /* CHECK FOR NO PCCA ADDRESS     */
*     THEN                                                         0157
         SLR   @11,@11                                             0157
         CR    PCCAPTR,@11                                         0157
         BE    @RT00157                                            0157
*     GOTO RETRN4;                  /* SET FAILING RETURN CODE       */
*   ELSE                                                           0159
*     ;                                                            0159
*   IF PCCALRBV=0                   /* CHECK IF LRB EXISTS           */
*     THEN                                                         0160
         C     @11,PCCALRBV(,PCCAPTR)                              0160
         BNE   @RF00160                                            0160
*     DO;                           /* PCCALRBV = 0                  */
*       GEN;                                                       0162
*                /* STORE PROCESSOR ID  */
       STIDP   CPUID
*       GMLGTH=328+MCEL;            /* LENGTH FOR LRB GETMAIN        */
         LA    GMLGTH,328                                          0163
         AH    GMLGTH,MCEL                                         0163
*       IF GMLGTH>4095              /* CHECK LENGTH NOT GREATER THAN
*                                      PAGE                          */
*         THEN                                                     0164
         C     GMLGTH,@CF02029                                     0164
         BH    @RT00164                                            0164
*         GO TO RETRN4;             /* SET FAILING RETURN CODE       */
*       ELSE                                                       0166
*         ;                                                        0166
*       GEN;                                                       0167
*             /* GET CORE FOR LRB  */
       GETMAIN   R,LV=(GMLGTH),SP=245
*       LRBPTR=R1;                  /* BASE POINTER FOR LRB          */
         LR    LRBPTR,R1                                           0168
*       PCCALRBV=R1;                /* STORE VIRTUAL ADDRESS OF LRB  */
         ST    R1,PCCALRBV(,PCCAPTR)                               0169
*       GEN;                                                       0170
*               /* GET REAL ADDRESS OF LRB  */
       LRA  R4,0(R1)
*       PCCALRBR=R4;                /* REAL ADDRESS OF LRB IN PCCA   */
         ST    R4,PCCALRBR(,PCCAPTR)                               0171
*       LRBHCPID=LRBHCPID&&LRBHCPID;/* ZERO OUT WORK AREA            */
         XC    LRBHCPID(8,LRBPTR),LRBHCPID(LRBPTR)                 0172
*       PACK(LRBHCPID(7:8),CVTNUMB);/* PACK RELEASE NO. FROM CVT     */
         L     @11,CVTPTR(,ABSZERO)                                0173
         AL    @11,@CF02075                                        0173
         PACK  LRBHCPID+6(2,LRBPTR),CVTNUMB-252(2,@11)             0173
*       GEN REFS(LRBHCPID);                                        0174
      CVB  R4,LRBHCPID(,LRBPTR)     STRIP OFF ZONES
*       GEN;                                                       0175
*             /*  SHIFT OFF NON PERTINENT INFO */
       SLL   R4,11
       SRL   R4,11
*       LRB(1:64)='00'X;            /* ZERO HEADER PORTION OF LRB    */
         XC    LRB+1(63,LRBPTR),LRB+1(LRBPTR)                      0176
         MVI   LRB(LRBPTR),X'00'                                   0176
*       LRBHREL=R4;                 /* STORE IN RELEASE NUMBER       */
         STC   R4,LRBHREL(,LRBPTR)                                 0177
*       LRBHREL=LRBHREL×VS2BIT;     /* OR IN VS2 ID                  */
         SLR   @11,@11                                             0178
         IC    @11,LRBHREL(,LRBPTR)                                0178
         O     @11,@CF02018                                        0178
         STC   @11,LRBHREL(,LRBPTR)                                0178
*       LRBMPWL='08'X;              /* PHYSICAL WORD LENGTH          */
         MVI   LRBMPWL(LRBPTR),X'08'                               0179
*       LRBHTYPE=LRBHMCH;           /* INITIALE RECORD TYPE          */
         MVI   LRBHTYPE(LRBPTR),X'13'                              0180
*       LRBHSW0='40'X;              /* N S MACHINE - LRBHNS          */
         MVI   LRBHSW0(LRBPTR),X'40'                               0181
*     END;                          /* PCCALRBV = 0                  */
*   ELSE                                                           0183
*     ;                                                            0183
@RF00160 DS    0H                                                  0184
*   IF PCCAPWAV=0                   /* CHECK IF PWA EXISTS           */
*     THEN                                                         0184
         L     @11,PCCAPWAV(,PCCAPTR)                              0184
         LTR   @11,@11                                             0184
         BNZ   @RF00184                                            0184
*     DO;                           /* PCCAPWAV = 0                  */
*       GMLGTH=LENGTH(PWA);         /* LENGTH OF PWA FOR GETMAIN     */
         LA    GMLGTH,1008                                         0186
*       GEN;                                                       0187
*             /*  GETMAIN FOR PWA  */
        GETMAIN  R,LV=(GMLGTH),SP=245
*       PCCAPWAV=R1;                /* VIRTUAL ADDRESS OF PWA IN PCCA*/
         ST    R1,PCCAPWAV(,PCCAPTR)                               0188
*       GEN;                                                       0189
*              /* GET REAL ADDRESS OF PWA  */
       LRA  R4,0(R1)
*       PCCAPWAR=R4;                /* STORE REAL ADDRESS OF PWA     */
         ST    R4,PCCAPWAR(,PCCAPTR)                               0190
*       PWAFRRCT='00000000'X;       /* ZERO OUT FRS COUNT            */
         SLR   @11,@11                                             0191
         L     @09,PWAPTR(,PCCAPTR)                                0191
         ST    @11,PWAFRRCT(,@09)                                  0191
*       PWAFRRCD='00000000'X;       /* ZERO FRR MESSAGE CODE         */
         ST    @11,PWAFRRCD(,@09)                                  0192
*       PWAMFAFL(1:16)='00'X;       /* ZERO ALL RESERVED BITS AND MFA
*                                      FLAG                          */
         XC    PWAMFAFL+1(15,@09),PWAMFAFL+1(@09)                  0193
         MVI   PWAMFAFL(@09),X'00'                                 0193
*       PWASRTHB=RWASRDF;           /* HIR THRESHOLD DEFAULT         */
         MVC   PWASRTHB(8,@09),RWASRDF(RWAPTR)                     0194
*       PWADGTHB=RWADGDF;           /* BUFFER THRESHOLD DEFAULT      */
         MVC   PWADGTHB(8,@09),RWADGDF(RWAPTR)                     0195
*       PWAPDTHB=RWAPDDF;           /* INSTRUCTION PROCESSING DAM- 0196
*                                      AGE THRESHOLD DEFAULT @G55CP2P*/
         MVC   PWAPDTHB(16,@09),RWAPDDF(RWAPTR)                    0196
*       PWASDTHB=RWASDDF;           /* SYSTEM DAMAGE THRESHOLD     0197
*                                      DEFAULT               @G55CP2P*/
         MVC   PWASDTHB(16,@09),RWASDDF(RWAPTR)                    0197
*       PWAIVTHB=RWAIVDF;           /* INVALID REG OR PSW THRESHOLD
*                                      DEFAULT               @G55CP2P*/
         MVC   PWAIVTHB(16,@09),RWAIVDF(RWAPTR)                    0198
*       PWATCTHB=RWATCDF;           /* TOD CLOCK DAMAGE THRESHOLD  0199
*                                      DEFAULT               @G55CP2P*/
         MVC   PWATCTHB(16,@09),RWATCDF(RWAPTR)                    0199
*       PWAPTTHB=RWAPTDF;           /* CPU TIMER DAMAGE THRESHOLD  0200
*                                      DEFAULT               @G55CP2P*/
         MVC   PWAPTTHB(16,@09),RWAPTDF(RWAPTR)                    0200
*       PWACCTHB=RWACCDF;           /* CLOCK COMPARATOR DAMAGE     0201
*                                      THRESHOLD DEFAULT     @G55CP2P*/
*                                                                  0201
         MVC   PWACCTHB(16,@09),RWACCDF(RWAPTR)                    0201
*       /*************************************************************/
*       /*                                                           */
*       /* INIT IGFPNRFH'S SRB FOR NUCLEUS REFRESH.          @G559P2L*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0202
*       PWANRSRB=PWANRSRB&&PWANRSRB;/* CLEAR IGFPNRFH SRB.   @G559P2L*/
         XC    PWANRSRB(44,@09),PWANRSRB(@09)                      0202
*       RFY                                                        0203
*         SRBSECT BASED(ADDR(PWANRSRB));/*                   @G559P2L*/
*       SRBID='SRB ';               /* IDENTIFY AS AN SRB    @G559P2L*/
         AL    @09,@CF02067                                        0204
         MVC   SRBID(4,@09),@CC02035                               0204
*       SRBPASID='0001'X;           /* SET TO RUN IN MASTER'S MEMORY.
*                                                            @G559P2L*/
         MVC   SRBPASID(2,@09),@CH02036                            0205
*       SRBASCB=PSAAOLD;            /* SET TO MASTER'S ASCB. @G559P2L*/
         L     @11,PSAAOLD(,ABSZERO)                               0206
         ST    @11,SRBASCB(,@09)                                   0206
*       SRBRMTR=ADDR(CVTBRET);      /* RESOURCE MANAGER IS A BR 14.
*                                                            @G559P2L*/
         L     @11,CVTPTR(,ABSZERO)                                0207
         LA    @07,CVTBRET(,@11)                                   0207
         ST    @07,SRBRMTR(,@09)                                   0207
*       SRBCPAFF=CSDMASK((PSACPULA&'0F'X)+1);/* RUN ON THIS CPU.   0208
*                                                            @G559P2L*/
         LH    @07,PSACPULA(,ABSZERO)                              0208
         N     @07,@CF02037                                        0208
         ALR   @07,@07                                             0208
         L     @11,CVTCSD(,@11)                                    0208
         ALR   @11,@07                                             0208
         MVC   SRBCPAFF(2,@09),CSDMASK(@11)                        0208
*       SRBEP=ADDR(IGFPNRFH);       /* PUT IN ROUTINE ADDRESS.     0209
*                                                            @ZM45605*/
         L     @11,@CA01993                                        0209
         ST    @11,SRBEP(,@09)                                     0209
*     END;                          /* PCCAPWAV = 0                  */
*   ELSE                                                           0211
*     ;                                                            0211
@RF00184 DS    0H                                                  0212
*                                                                  0212
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT-                                                          */
*/*          BLDIOEL--PART 1                                         */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*          BUILD THE IOEL AND THE MESSAGE BUFFER AND THE LRB       */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*          IF THE CONDITION CODE IS ZERO FROM A STIDC FOR AN       */
*/*          ONLINE CHANNEL THEN THE THE LENGTH OF THE IOEL HAS      */
*/*          BEEN STORED IN THE PSA.THE IOEL LENGTH TO BE PLACED IN  */
*/*          THE PCCA IS THE GREATER OF THE VALUE STORED BY STIDC    */
*/*          OR 112.                                                 */
*/*                                                                  */
*/*          IF ALL ONLINE CHANNELS PRODUCE A STIDC CONDITION CODE   */
*/*          THAT IS NOT EQUAL TO ZERO THEN THE PCCA IOEL LENGTH     */
*/*          WILL BE SET TO 640.                                     */
*/*                                                                  */
*/*N.B.-                                                             */
*/*          THE CAT TABLE IS THE ONE FOR THE EXECUTING CPU SINCE    */
*/*          THE STIDC WILL OPERATE AGAINST THE CHANNELS OF THE      */
*/*          EXECUTING CPU.THE IOEL LENGTH WILL BE PLACED IN THE     */
*/*          PCCA FOR THE CPU AS SPECIFIED BY REGISTER ONE ON ENTRY  */
*/*          TO IGFPBUCR.                                            */
*/*                                                                  */
*/*CHANGE ACTIVITY-                                                  */
*/*      @G51BP2O-                                                   */
*/*          NEW CHANNEL SUPPORT FOR SU51                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0212
*   RFY                                                            0212
*    (R1,                           /* USED FOR THE DO LOOP          */
*     R3,                           /* POINTER TO A CAT ENTRY        */
*     R7)                           /* CHANNEL NUMBER FOR STIDC      */
*         RSTD;                     /* WILL BE UNRSTD AT END         */
*   ABSZERO=ZERO;                   /* PSA ADDRESS OF EXECUTING CPU  */
         SLR   ABSZERO,ABSZERO                                     0213
*   R3=ADDR(PSAPCCAV->              /* PCCA FOR EXECUTING CPU        */
*       PCCACAT);                   /* CAT FOR EXECUTING CPU         */
         L     R3,PSAPCCAV(,ABSZERO)                               0214
         LA    R3,PCCACAT(,R3)                                     0214
*   R7=ZERO;                        /* START WITH CHANNEL ZERO       */
         SLR   R7,R7                                               0215
*   PCCACELL=ZERO;                  /* PCCA FOR CPU INDICATED BY R1  */
         SLR   @11,@11                                             0216
         STH   @11,PCCACELL(,PCCAPTR)                              0216
*   DO R1=1                         /* LOOP THROUGH ALL CHANNELS     */
*         TO LENGTH(PCCACAT)/       /* TOTAL LENGTH OF CAT IN PCCA   */
*         LENGTH(CAT)               /* LENGTH OF ONE CAT ENTRY       */
*         WHILE PCCACELL=ZERO;      /* UNTIL IOEL LENGTH IS GOTTEN   */
         LA    R1,1                                                0217
@DL00217 LH    @11,PCCACELL(,PCCAPTR)                              0217
         LTR   @11,@11                                             0217
         BNZ   @DC00217                                            0217
*     IF CATNOP=NO                  /* I.E. CHANNEL IS ONLINE        */
*       THEN                                                       0218
         TM    CATNOP(R3),B'01000000'                              0218
         BNZ   @RF00218                                            0218
*       DO;                                                        0219
*         GEN REFS(R7)              /* R7 = '0000NN00'X              */
*             (STIDC 0(R7));        /* OUTPUT PLACED IN PSA          */
         STIDC 0(R7)
*         BC(NONZERO,BADSTIDC);     /* BRANCH FOR NON ZERO CC        */
         BC    7,BADSTIDC                                          0221
*         PCCACELL=MAX(FLCCHIL,     /* = VALUE STORED BY STIDC       */
*             112);                 /* = MIN IOEL LENGTH POSSIBLE    */
         LH    @11,FLCCHIL(,ABSZERO)                               0222
         LA    @09,112                                             0222
         CR    @11,@09                                             0222
         BNL   *+6
         LR    @11,@09                                             0222
         STH   @11,PCCACELL(,PCCAPTR)                              0222
*BADSTIDC:                          /* ENTRY FOR NON ZERO STIDC CC   */
*       END;                                                       0223
BADSTIDC DS    0H                                                  0224
*     R7=R7+INCRCHNL;               /* '0000NN00'X + '00000100'X     */
@RF00218 AL    R7,@CF01971                                         0224
*     R3=R3+                        /* CURRENT CAT ENTRY             */
*         LENGTH(CAT);              /* OFFSET TO NEXT CAT ENTRY      */
         AL    R3,@CF00038                                         0225
*   END;                                                           0226
         AL    R1,@CF00069                                         0226
         C     R1,@CF00143                                         0226
         BNH   @DL00217                                            0226
@DC00217 DS    0H                                                  0227
*   RFY                                                            0227
*    (R1,                                                          0227
*     R3,                                                          0227
*     R7) UNRSTD;                                                  0227
*   IF PCCACELL=ZERO                /* => ALL CHANNELS STIDC CC > 0  */
*     THEN                                                         0228
         LH    @11,PCCACELL(,PCCAPTR)                              0228
         LTR   @11,@11                                             0228
         BNZ   @RF00228                                            0228
*     PCCACELL=IOELMAXL;            /* MAXIMUM IOEL LENGTH           */
         MVC   PCCACELL(2,PCCAPTR),@CH01973                        0229
*                                                                  0230
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT-                                                          */
*/*          BLDIOEL--PART 2                                         */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*          GET SPACE FOR NEW IOEL ETC                              */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*          GET SPACE FROM SQA FOR A MESSAGE BUFFER AND THE IOEL    */
*/*          AND AN LRB.                                             */
*/*                                                                  */
*/*          THE ADDRESS OF THE GOTTEN AREA WILL PLACED IN THE PCCA  */
*/*                                                                  */
*/*CHANGE ACTIVITY-                                                  */
*/*      @G51BP2O-                                                   */
*/*          NEW CHANNEL SUPPORT FOR SU51                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0230
*   PCCACCHM=ZERO;                  /* INDICATE NO SPACE GOTTEN      */
@RF00228 SLR   @11,@11                                             0230
         ST    @11,PCCACCHM(,PCCAPTR)                              0230
*   DO;                             /* GETMAIN (R) LV(PCCACELL+LENGTH
*                                      (CDACCHM1)+LENGTH(LRB)+LENGTH(
*                                      LRBCCCH)+LENGTH(LRBCVAR)+16*LE
*                                      NGTH(LRBCMP))SP(245)          */
*     RESPECIFY                                                    0232
*      (GPR01F,                                                    0232
*       GPR00F) RESTRICTED;                                        0232
*     GPR00F=PCCACELL+LENGTH(CDACCHM1)+LENGTH(LRB)+LENGTH(LRBCCCH)+
*         LENGTH(LRBCVAR)+16*LENGTH(LRBCMP);/* LENGTH REQUESTED      */
         LA    GPR00F,216                                          0233
         AH    GPR00F,PCCACELL(,PCCAPTR)                           0233
*     GPR01F=245;                   /* SP IN REG 1                   */
         LA    GPR01F,245                                          0234
*     GEN(SLL   GPR01F,24)                                         0235
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0235
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0236
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0237
         BCTR  GPR01F,0                                            0237
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0238
*     RESPECIFY                                                    0239
*      (GPR01F,                                                    0239
*       GPR00F) UNRESTRICTED;                                      0239
*   END;                            /* GETMAIN (R) LV(PCCACELL+LENGTH
*                                      (CDACCHM1)+LENGTH(LRB)+LENGTH(
*                                      LRBCCCH)+LENGTH(LRBCVAR)+16*LE
*                                      NGTH(LRBCMP))SP(245)          */
*   RFY                                                            0241
*     R1 RSTD;                                                     0241
*   PCCACCHM=R1;                    /* BEGINNING OF GOTTEN AREA      */
         ST    R1,PCCACCHM(,PCCAPTR)                               0242
*   RFY                                                            0243
*     R1 UNRSTD;                                                   0243
*                                                                  0244
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT-                                                          */
*/*          BLDIOEL--PART 3                                         */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*          LINK THE GOTTEN AREA TO THE PCCA AND THE PSA            */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*          THE MESSAGE BUFFER APPEARS FIRST IN THE GOTTEN AREA.    */
*/*          THE POINTER TO THE MESSAGE BUFFER IS SET BY GETMAIN.    */
*/*                                                                  */
*/*          THE LRB FOLLOWS THE MESSAGE BUFFER AND THE IOEL         */
*/*          FOLLOWS THE LRB.POINTERS TO THEM ARE IN THE PCCA.       */
*/*                                                                  */
*/*          THE FIRST WORD OF THE IOEL IS SET TO ALL FOXES.         */
*/*                                                                  */
*/*          THE REMAINDER OF THE INITIALIZATION REQUIRES I/O AND    */
*/*          EXTERNAL INTERRUPTS BE DISABLED.                        */
*/*                                                                  */
*/*          WHEN UPDATING THE PSA THE CORRECT ADDRESS FOR THE PSA   */
*/*          HAS TO BE USED.THE PSA ADDRESS IS A FUNCTION OF THE     */
*/*          PROCESSOR NUMBER CONTAINED IN REGISTER ONE ON INPUT TO  */
*/*          IGFPBUCR.IF THE PROCESSOR INVOLVED IS NOT THE           */
*/*          EXECUTING PROCESSOR THEN THAT PROCESSORS PSA ADDRESS    */
*/*          IS OBTAINED FROM ITS PCCA.IF THE PROCESSOR INVOLVED IS  */
*/*          THE EXECUTING PROCESSOR THEN AN ADDRESS OF ZERO IS      */
*/*          USED IN ORDER TO AVOID REVERSE PREFIXING WHEN RUNNING   */
*/*          IN A MULTIPROCESSOR ENVIRONMENT.                        */
*/*                                                                  */
*/*CHANGE ACTIVITY-                                                  */
*/*      @G51BP2O-                                                   */
*/*          NEW CHANNEL SUPPORT FOR SU51                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0244
*   PCCAELBA=PCCACCHM+              /* LOCATE THE LRB AFTER THE      */
*       LENGTH(CDACCHM1);           /* MESSAGE BUFFER                */
         L     @11,PCCACCHM(,PCCAPTR)                              0244
         LA    @09,64                                              0244
         ALR   @09,@11                                             0244
         ST    @09,PCCAELBA(,PCCAPTR)                              0244
*   PCCAELAD=PCCACCHM+              /* LOCATE THE IOEL AFTER THE     */
*       LENGTH(CDACCHM1)+           /* MESSAGE BUFFER AND THE        */
*       LENGTH(LRBCCCH)+            /* LRB                           */
*       LENGTH(LRB);                /* MORE LRB                      */
         AL    @11,@CF02069                                        0245
         ST    @11,PCCAELAD(,PCCAPTR)                              0245
*   IOELAREA=FOXES;                 /* INIT BEGINNING OF IOEL        */
         MVC   IOELAREA(4,@11),@CB01969                            0246
*   IF PCCAPTR                      /* PCCA FOR CPU INDICATED BY R1  */
*       ^=                          /* IF NOT SAME PCCA              */
*       PSAPCCAV                    /* PCCA FOR EXECUTING CPU        */
*     THEN                                                         0247
         C     PCCAPTR,PSAPCCAV(,ABSZERO)                          0247
         BE    @RF00247                                            0247
*     ABSZERO=PCCAPTR               /* PCCA FOR CPU(REG1) CONTAINS   */
*         ->PCCAPSAV;               /* VIRTUAL ADDRESS OF ITS PSA    */
         L     ABSZERO,PCCAPSAV(,PCCAPTR)                          0248
*   RFY                                                            0249
*     R1 RSTD;                                                     0249
@RF00247 DS    0H                                                  0250
*   R1=PCCAELAD;                    /* VIRTUAL IOEL ADDRESS          */
         L     R1,PCCAELAD(,PCCAPTR)                               0250
*   GEN REFS(R1) SETS(R1)           /* OBTAIN REAL IOEL ADDRESS      */
*       (LRA R1,0(R1));                                            0251
         LRA R1,0(R1)
*   GEN SETS(SMBYTE)                /* TEMPORARILY DISABLE I/O       */
*       (STNSM SMBYTE,X'FC');       /* AND EXTERNAL INTERRUPTS       */
         STNSM SMBYTE,X'FC'
*   CALL IGFPSAD0;                  /* LOW ADDRESS INITIALIZATION    */
         L     @15,@CV02019                                        0253
         BALR  @14,@15                                             0253
*   FLCIOELA=R1;                    /* REAL IOEL ADDRESS TO PSA      */
         STCM  R1,7,FLCIOELA(ABSZERO)                              0254
*   RFY                                                            0255
*     R1 UNRSTD;                                                   0255
*   FLCLCL=FOXES;                   /* LIMITED CHANNEL LOGOUT AREA   */
         MVC   FLCLCL(4,ABSZERO),@CB01969                          0256
*   FLCFLA(49)=FOXES;               /* SET TO FOXES A PORTION OF     */
         MVI   FLCFLA+48(ABSZERO),X'FF'                            0257
*   MVC(FLCFLA(50:72),FLCFLA(49:71));/* THE FIXED LOGOUT AREA        */
         MVC   FLCFLA+49(23,ABSZERO),FLCFLA+48(ABSZERO)            0258
*   CALL IGFPSAE0;                  /* LOW ADDRESS UN-INIT           */
         L     @15,@CV02020                                        0259
         BALR  @14,@15                                             0259
*   GEN SETS(SMBYTE)                /* RE-ENABLE I/O                 */
*       (STOSM SMBYTE,X'FF'-X'FC'); /* AND EXTERNAL INTERRUPTS       */
         STOSM SMBYTE,X'FF'-X'FC'
*   ABSZERO=ZERO;                   /* RESET EXECUTING CPU PSA ADDR  */
         SLR   ABSZERO,ABSZERO                                     0261
*   RETURN CODE(0);                 /* RETURN TO CALLER              */
         SLR   @15,@15                                             0262
         L     @14,12(,@13)                                        0262
         LM    @00,@12,20(@13)                                     0262
         BR    @14                                                 0262
*DEALLOC:                                                          0263
*   ;                                                              0263
DEALLOC  DS    0H                                                  0264
*   IF CPUREG>CPUHI                 /* CHECK INPUT CPU ADDRESS >   0264
*                                      HIGHEST ADDRESS               */
*     THEN                                                         0264
         C     CPUREG,CPUHI                                        0264
         BH    @RT00264                                            0264
*     GOTO RETRN4;                  /* SET FAILINF RETURN CODE       */
*   ELSE                                                           0266
*     ;                                                            0266
*   PCCAPTR=PCCAT00P(CPUREG+1);     /* GET ADDRESS OF PCCA           */
         LR    @11,CPUREG                                          0267
         SLA   @11,2                                               0267
         L     @09,CVTPTR(,ABSZERO)                                0267
         L     @09,CVTPCCAT(,@09)                                  0267
         L     PCCAPTR,PCCAT00P(@11,@09)                           0267
*   RWAPCCAR(CPUREG+1)='00'X;       /* ZERO RWA REAL ADDRESS ENTRY 0268
*                                                            @YM00964*/
         SLR   @09,@09                                             0268
         ST    @09,RWAPCCAR(@11,RWAPTR)                            0268
*   IF PCCAPTR=0                    /* CHECK FOR NO PCCA ADDRESS     */
*     THEN                                                         0269
         SLR   @11,@11                                             0269
         CR    PCCAPTR,@11                                         0269
         BE    @RT00269                                            0269
*     GOTO RETRN4;                  /* SET FAILING RETURN CODE       */
*   ELSE                                                           0271
*     ;                                                            0271
*   IF PCCALRBV=0                   /* IS THERE A LRB TO DEALLOCATE  */
*     THEN                                                         0272
         L     @09,PCCALRBV(,PCCAPTR)                              0272
         CR    @09,@11                                             0272
         BE    @RT00272                                            0272
*     GOTO PWADEAL;                 /* GO CHECK FOR PWA DEALLOCATION */
*   ELSE                                                           0274
*     ;                                                            0274
*   LRBPTR=PCCALRBV;                /* BASE POINTER FOR LRB          */
         LR    LRBPTR,@09                                          0275
*   IF LRBMACT^=0                   /* IS LRB ACTIVE BIT SET         */
*     THEN                                                         0276
         CLI   LRBMACT(LRBPTR),0                                   0276
         BNE   @RT00276                                            0276
*     GOTO RETRN4;                  /* SET FAILING RETURN CODE       */
*   ELSE                                                           0278
*     ;                                                            0278
*   PCCALRBR='00000000'X;           /* ZERO LRB REAL POINTER         */
         SLR   @11,@11                                             0279
         ST    @11,PCCALRBR(,PCCAPTR)                              0279
*   PCCALRBV='00000000'X;           /* ZERO LRB VIRTUAL POINTER      */
         ST    @11,PCCALRBV(,PCCAPTR)                              0280
*   GEN;                                                           0281
*          /* STORE PROCESSOR ID  */
   STIDP   CPUID
*   FMLGTH=328+MCEL;                /* LENGTH OF LRB TO FREEMAIN     */
         LA    FMLGTH,328                                          0282
         AH    FMLGTH,MCEL                                         0282
*   GEN;                                                           0283
*      /* FREEMAIN LRB  */
   FREEMAIN  R,LV=(FMLGTH),A=(LRBPTR),SP=245
*PWADEAL:                                                          0284
*   ;                                                              0284
PWADEAL  DS    0H                                                  0285
*   IF PCCAPWAV^=0                  /* CHECK IF PWA EXISTS           */
*     THEN                                                         0285
         L     @11,PCCAPWAV(,PCCAPTR)                              0285
         LTR   @11,@11                                             0285
         BZ    @RF00285                                            0285
*     DO;                           /* PWA DEALLOCATION              */
*       R1=PWAPTR;                  /* SAVE THE ADDRESS OF THE PWA   */
         L     R1,PWAPTR(,PCCAPTR)                                 0287
*       PCCAPWAR='00000000'X;       /* ZERO PWA REAL POINTER         */
         SLR   @11,@11                                             0288
         ST    @11,PCCAPWAR(,PCCAPTR)                              0288
*       PCCAPWAV='00000000'X;       /* ZERO PWA VIRTUAL POINTER      */
         ST    @11,PCCAPWAV(,PCCAPTR)                              0289
*       FMLGTH=LENGTH(PWA);         /* GET LENGTH OF PWA TO FREEMAIN */
         LA    FMLGTH,1008                                         0290
*       GEN;                                                       0291
*             /* DO FREEMAIN FOR PWA  */
         FREEMAIN  R,LV=(FMLGTH),A=(R1),SP=245
*     END;                          /* PWA DEALLOCATION              */
*   ELSE                                                           0293
*     ;                                                            0293
@RF00285 DS    0H                                                  0294
*                                                                  0294
*/********************************************************************/
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*          FREE CHANNEL CHECK HANDLER MESSAGE BUFFER,THE IOEL AND  */
*/*          LRB                                                     */
*/*                                                                  */
*/*          WHEN SETTING FLCIOELA THE CORRECT ADDRESS FOR THE PSA   */
*/*          HAS TO BE USED.THE PSA ADDRESS IS A FUNCTION OF THE     */
*/*          PROCESSOR NUMBER CONTAINED IN REGISTER ONE ON INPUT TO  */
*/*          IGFPBUCR.IF THE PROCESSOR INVOLVED IS NOT THE           */
*/*          EXECUTING PROCESSOR THEN THAT PROCESSORS PSA ADDRESS    */
*/*          IS OBTAINED FROM ITS PCCA.IF THE PROCESSOR INVOLVED IS  */
*/*          THE EXECUTING PROCESSOR THEN AN ADDRESS OF ZERO IS      */
*/*          USED IN ORDER TO AVOID REVERSE PREFIXING WHEN RUNNING   */
*/*          IN A MULTIPROCESSOR ENVIRONMENT.                        */
*/*                                                                  */
*/*CHANGE ACTIVITY-                                                  */
*/*      @G51BP2O-                                                   */
*/*          NEW CHANNEL SUPPORT FOR SU51                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0294
*   IF PCCACCHM^=0                  /* GETMAIN PREVIOUSLY DONE       */
*     THEN                                                         0294
         L     @11,PCCACCHM(,PCCAPTR)                              0294
         LTR   @11,@11                                             0294
         BZ    @RF00294                                            0294
*     DO;                                                          0295
*       DO;                         /* FREEMAIN(R) LV(PCCACELL+LENGTH
*                                      (CDACCHM1)+LENGTH(LRB)+LENGTH(
*                                      LRBCCCH)+LENGTH(LRBCVAR)+16*LE
*                                      NGTH(LRBCMP))SP(245)A(PCCACCHM
*                                      ->MSGBUF)                     */
*         RESPECIFY                                                0297
*          (GPR01F,                                                0297
*           GPR00F) RESTRICTED;                                    0297
*         GPR00F=PCCACELL+LENGTH(CDACCHM1)+LENGTH(LRB)+LENGTH(LRBCCCH)+
*             LENGTH(LRBCVAR)+16*LENGTH(LRBCMP);/* LENGTH REQUESTED  */
         LA    GPR00F,216                                          0298
         AH    GPR00F,PCCACELL(,PCCAPTR)                           0298
*         GPR01F=245;               /* SP IN REG 1                   */
         LA    GPR01F,245                                          0299
*         GEN(SLL   GPR01F,24)                                     0300
*         NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;             0300
         SLL   GPR01F,24
*         GPR00F=GPR00F×GPR01F;     /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0301
*         GPR01F=ADDR(PCCACCHM->MSGBUF);/* SET REGISTER ONE          */
         L     GPR01F,PCCACCHM(,PCCAPTR)                           0302
*         SVC(10);                  /* R-FORM OF GETMAIN             */
         SVC   10                                                  0303
*         RESPECIFY                                                0304
*          (GPR01F,                                                0304
*           GPR00F) UNRESTRICTED;                                  0304
*       END;                        /* FREEMAIN(R) LV(PCCACELL+LENGTH
*                                      (CDACCHM1)+LENGTH(LRB)+LENGTH(
*                                      LRBCCCH)+LENGTH(LRBCVAR)+16*LE
*                                      NGTH(LRBCMP))SP(245)A(PCCACCHM
*                                      ->MSGBUF)                     */
*       PCCACCHM=ZERO;              /* SPACE HAS BEEN FREED          */
         SLR   @11,@11                                             0306
         ST    @11,PCCACCHM(,PCCAPTR)                              0306
*       PCCAELBA=ZERO;              /* SPACE HAS BEEN FREED          */
         ST    @11,PCCAELBA(,PCCAPTR)                              0307
*       PCCAELAD=ZERO;              /* SPACE HAS BEEN FREED          */
         ST    @11,PCCAELAD(,PCCAPTR)                              0308
*       IF PCCAPTR                  /* PCCA FOR CPU(REG1)            */
*           ^=                      /* IF NOT SAME PCCA              */
*           PSAPCCAV                /* PCCA FOR EXECUTING PROCESSOR  */
*         THEN                                                     0309
         C     PCCAPTR,PSAPCCAV(,ABSZERO)                          0309
         BE    @RF00309                                            0309
*         ABSZERO=PCCAPTR           /* PCCA FOR CPU(REG1) CONTAINS   */
*             ->PCCAPSAV;           /* VIRTUAL ADDRESS OF ITS PSA    */
         L     ABSZERO,PCCAPSAV(,PCCAPTR)                          0310
*       CALL IGFPSAD0;              /* LOW ADDRESS INITIALIZATION    */
@RF00309 L     @15,@CV02019                                        0311
         BALR  @14,@15                                             0311
*       FLCIOELA=ZERO;              /* SPACE HAS BEEN FREED          */
         SLR   @11,@11                                             0312
         STCM  @11,7,FLCIOELA(ABSZERO)                             0312
*       CALL IGFPSAE0;              /* LOW ADDRESS UN-INIT           */
         L     @15,@CV02020                                        0313
         BALR  @14,@15                                             0313
*       ABSZERO=ZERO;               /* RESET EXECUTING CPU PSA ADDR  */
         SLR   ABSZERO,ABSZERO                                     0314
*     END;                                                         0315
*   RETURN CODE(0);                 /* RETURN TO CALLER              */
@RF00294 SLR   @15,@15                                             0316
         L     @14,12(,@13)                                        0316
         LM    @00,@12,20(@13)                                     0316
         BR    @14                                                 0316
*CRINIT:                                                           0317
*   ;                                                              0317
CRINIT   DS    0H                                                  0318
*   PCCAPTR=PSAPCCAV;               /* LOAD PCCA BASE                */
         L     PCCAPTR,PSAPCCAV(,ABSZERO)                          0318
*   IF PCCACPUA^=CPUREG             /* CHECK IF INPUT CPU = EXECUTING
*                                      CPU                           */
*     THEN                                                         0319
         CH    CPUREG,PCCACPUA(,PCCAPTR)                           0319
         BNE   @RT00319                                            0319
*     GOTO RETRN4;                  /* SET FAILING RETURN CODE       */
*   ELSE                                                           0321
*     ;                                                            0321
*   DO PWACNT=1 TO 13;                                             0322
         LA    PWACNT,1                                            0322
@DL00322 DS    0H                                                  0323
*     PWARGPR(PWACNT)=SAVER(PWACNT);/* SAVE A REGISTER               */
         LR    @11,PWACNT                                          0323
         SLA   @11,2                                               0323
         L     @09,PWAPTR(,PCCAPTR)                                0323
         L     @07,SAVER-4(@11,R13)                                0323
         ST    @07,PWARGPR-4(@11,@09)                              0323
*   END;                                                           0324
         AL    PWACNT,@CF00069                                     0324
         C     PWACNT,@CF02056                                     0324
         BNH   @DL00322                                            0324
*   PWARGPR(14)=R13;                /* ADDRESS OF SAVE AREA          */
         L     @11,PWAPTR(,PCCAPTR)                                0325
         ST    R13,PWARGPR+52(,@11)                                0325
*   PWARGPR(15)=SAV14;              /* REG 14 FROM SAVE AREA         */
         L     @09,SAV14(,R13)                                     0326
         ST    @09,PWARGPR+56(,@11)                                0326
*   PWARGPR(16)='00000000'X;        /* SAVE AREA REG 15 RETURN CODE  */
         SLR   @09,@09                                             0327
         ST    @09,PWARGPR+60(,@11)                                0327
*   PWARPSW(5:8)=PWARGPR(15);       /* SAVE AREA REG 14 IN RESUME PSW*/
         MVC   PWARPSW+4(4,@11),PWARGPR+56(@11)                    0328
*   PWARPSW(1:5)=RESMPSW;           /* LOAD REST OF RESUME PSW       */
         MVC   PWARPSW(5,@11),RESMPSW                              0329
*   R1=ADDR(PWARGPR);               /* REG 1 WITH ADDRESS OF SAVE  0330
*                                      AREA                          */
         LA    R1,PWARGPR(,@11)                                    0330
*   CALL RVTEXIT;                   /* ONE WAY CALL TO IGFPEXIT      */
         L     @11,CVTPTR(,ABSZERO)                                0331
         L     @11,RVTPTR(,@11)                                    0331
         L     @15,RVTPEXIT(,@11)                                  0331
         BALR  @14,@15                                             0331
*CRRESET:                                                          0332
*   ;                                                              0332
CRRESET  DS    0H                                                  0333
*   PCCAPTR=PSAPCCAV;               /* GET PCCA BASE                 */
         L     PCCAPTR,PSAPCCAV(,ABSZERO)                          0333
*   IF PCCACPUA^=CPUREG             /* IS INPUT CPU ADDRESS =      0334
*                                      EXECUTING CPU ADDR            */
*     THEN                                                         0334
         CH    CPUREG,PCCACPUA(,PCCAPTR)                           0334
         BNE   @RT00334                                            0334
*     GOTO RETRN4;                  /* SET FAILING RETURN CODE       */
*   ELSE                                                           0336
*     ;                                                            0336
*   GEN;                                                           0337
*      /*  LOAD CONTROL REGISTERS 14 AND 15 */
   LCTL  R14,R14,CRSET14
   LCTL  R15,R15,CRSET15
*   RETURN CODE(0);                 /* RETURN TO CALLER              */
         SLR   @15,@15                                             0338
         L     @14,12(,@13)                                        0338
         LM    @00,@12,20(@13)                                     0338
         BR    @14                                                 0338
*                                                                  0339
*/********************************************************************/
*/*                                                                  */
*/*DEFINE-                                                           */
*/*          EPILOG                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0339
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0339
*     GPR01F FIXED(31) REG(1);                                     0339
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0340
*     I031F FIXED(31) BASED,                                       0340
*     I031P PTR(31) BASED,                                         0340
*     I015F FIXED(15) BASED,                                       0340
*     I015P PTR(15) BASED,                                         0340
*     I008P PTR(8) BASED,                                          0340
*     I001C CHAR(1) BASED;                                         0340
*   END IGFPBUCR                                                   0341
*                                                                  0341
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAPCCA )                                       */
*/*%INCLUDE SYSLIB  (IHANVT  )                                       */
*/*%INCLUDE SYSLIB  (IHALRB  )                                       */
*/*%INCLUDE SYSLIB  (IGFRWA  )                                       */
*/*%INCLUDE SYSLIB  (IGFPWA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPCCAT)                                       */
*/*%INCLUDE SYSLIB  (IHARVT  )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHACSD  )                                       */
*/*%INCLUDE SYSLIB  (IECDCAT )                                       */
*/*%INCLUDE SYSLIB  (IGFCDA  )                                       */
*                                                                  0341
*       ;                                                          0341
@DATA    DS    0H
@CH01973 DC    H'576'
@CH02036 DC    XL2'0001'
@DATD    DSECT
         DS    0F
IGFPBUCR CSECT
         DS    0F
@CF00069 DC    F'1'
@CF00046 DC    F'4'
@CF00038 DC    F'8'
@CF00032 DC    F'12'
@CF02056 DC    F'13'
@CF00143 DC    F'16'
@CF02069 DC    F'144'
@CF02067 DC    F'868'
@CF02029 DC    F'4095'
@CF02075 DC    F'-4'
@CF01971 DC    XL4'00000100'
@CF02018 DC    XL4'80'
@CF02037 DC    XL4'0F'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGFPBUCR CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA01993 DC    A(IGFPNRFH)
@CV02019 DC    V(IGFPSAD0)
@CV02020 DC    V(IGFPSAE0)
         DS    0D
CPUHI    DC    F'15'
CRSET14  DC    XL4'C2000000'
CRSET15  DC    XL4'00000200'
@CC02035 DC    C'SRB '
@CB01969 DC    X'FFFFFFFF'
RESMPSW  DC    X'040C000000'
SMBYTE   DS    CL1
         DS    CL6
CPUID    DS    CL8
         ORG   CPUID
@NM00087 DC    X'00000000'
CPUMOD   DC    X'0000'
MCEL     DC    XL2'0000'
         ORG   CPUID+8
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ABSZERO  EQU   @10
PCCAPTR  EQU   @02
RNVT     EQU   @02
LRBPTR   EQU   @05
RWAPTR   EQU   @06
R3       EQU   @03
INPREG   EQU   @00
CPUREG   EQU   @01
R1       EQU   @01
R2       EQU   @02
PWACNT   EQU   @03
R4       EQU   @04
R7       EQU   @07
GMLGTH   EQU   @08
FMLGTH   EQU   @08
REALADR  EQU   @08
R8       EQU   @08
R13      EQU   @13
GPR01F   EQU   @01
GPR00F   EQU   @00
RCVT     EQU   @03
RENTRY   EQU   @15
RETCODE  EQU   @15
REXIT    EQU   @14
R14      EQU   @14
R15      EQU   @15
         EXTRN IGFPNRFH
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCCHNID EQU   FLCMCLA
FLCCHTM  EQU   FLCCHNID
FLCCHIL  EQU   FLCCHNID+2
FLCIOEL  EQU   FLCMCLA+4
FLCIOELA EQU   FLCIOEL+1
FLCLCL   EQU   FLCMCLA+8
FLCIOA   EQU   FLCMCLA+16
PSAMEDC  EQU   FLCMCLA+76
FLCFSA   EQU   FLCMCLA+80
FLCFLA   EQU   FLCMCLA+88
PSACPULA EQU   PSA+518
PSAPCCAV EQU   PSA+520
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PCCA     EQU   0
PCCACPUA EQU   PCCA+16
PCCAPSAV EQU   PCCA+24
PCCATMST EQU   PCCA+128
PCCATMFL EQU   PCCATMST
PCCATODE EQU   PCCATMST+1
PCCACCE  EQU   PCCATMST+2
PCCAINTE EQU   PCCATMST+3
PCCAEMSB EQU   PCCA+136
PCCAEMSI EQU   PCCAEMSB
PCCARISP EQU   PCCAEMSI
PCCAEMS2 EQU   PCCAEMSI+1
PCCAEMS3 EQU   PCCAEMSI+2
PCCARMSB EQU   PCCAEMSI+3
PCCAPWAV EQU   PCCA+152
PCCAPWAR EQU   PCCA+156
PCCALRBV EQU   PCCA+160
PCCALRBR EQU   PCCA+164
PCCAELAD EQU   PCCA+168
PCCAELBA EQU   PCCA+172
PCCACCHM EQU   PCCA+176
PCCACHAN EQU   PCCA+224
PCCAWERP EQU   PCCA+280
PCCACHPF EQU   PCCAWERP+4
PCCACHBL EQU   PCCAWERP+5
PCCACHVA EQU   PCCAWERP+6
PCCACHTS EQU   PCCAWERP+7
PCCACHS1 EQU   PCCA+288
PCCACHS2 EQU   PCCA+289
PCCACHRB EQU   PCCA+290
PCCACELL EQU   PCCA+302
PCCACHF1 EQU   PCCA+308
PCCACHF2 EQU   PCCA+309
PCCACHF3 EQU   PCCA+310
PCCACHF4 EQU   PCCA+311
PCCAATTR EQU   PCCA+376
PCCACAT  EQU   PCCA+384
NVT      EQU   0
NVTNPATR EQU   NVT+54
NVTNPREN EQU   NVTNPATR
NVTFLLB  EQU   NVT+55
NVTABSAV EQU   NVT+140
NVTFLCN  EQU   NVT+211
NVTWTPSW EQU   NVT+224
NVTWPSW2 EQU   NVTWTPSW+4
NVTFLWSC EQU   NVTWPSW2+3
NVTLOAD  EQU   NVT+232
NVTSENSE EQU   NVT+236
NVTSWAIT EQU   NVT+240
NVTTIME  EQU   NVT+244
NVTUCBFN EQU   NVT+248
NVTWTO   EQU   NVT+252
NVTWTOR  EQU   NVT+256
NVTWTOR2 EQU   NVT+260
NVTOPEN  EQU   NVT+264
NVTMOUNT EQU   NVT+268
NVTVIRT  EQU   NVT+276
NVTREAL  EQU   NVT+280
NVTSCHED EQU   NVT+284
NVTOPIO  EQU   NVT+288
NVTXCTL  EQU   NVT+428
NVTLOCAT EQU   NVT+436
NVTFLPO  EQU   NVT+528
LRB      EQU   0
LRBHTYPE EQU   LRB
LRBHREL  EQU   LRB+1
LRBHSYS  EQU   LRBHREL
LRBHSW0  EQU   LRB+2
LRBHSW1  EQU   LRB+3
LRBHSW2  EQU   LRB+4
LRBMACT  EQU   LRBHSW2
LRBHSW3  EQU   LRB+5
LRBHCPID EQU   LRB+16
LRBBASE  EQU   LRB+24
LRBCVAR  EQU   0
LRBCMP   EQU   LRBCVAR+8
RWA      EQU   0
RWATERM  EQU   RWA
RWASRDF  EQU   RWA+8
RWADGDF  EQU   RWA+16
RWAMSGFL EQU   RWA+27
RWAFLAGS EQU   RWA+28
RWAPCCAR EQU   RWA+40
RWAPDDF  EQU   RWA+48
RWASDDF  EQU   RWA+64
RWAIVDF  EQU   RWA+80
RWATCDF  EQU   RWA+96
RWAPTDF  EQU   RWA+112
RWACCDF  EQU   RWA+128
PWA      EQU   0
PWASRTHB EQU   PWA+360
PWADGTHB EQU   PWA+368
PWAFRRCD EQU   PWA+376
PWAFRRCT EQU   PWA+380
PWAFRR   EQU   PWA+384
PWARGPR  EQU   PWA+704
PWARPSW  EQU   PWA+768
PWAMFAFL EQU   PWA+776
PWAFLAGS EQU   PWA+778
PWANRSRB EQU   PWA+868
PWAPDTHB EQU   PWA+912
PWASDTHB EQU   PWA+928
PWAIVTHB EQU   PWA+944
PWATCTHB EQU   PWA+960
PWAPTTHB EQU   PWA+976
PWACCTHB EQU   PWA+992
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTRMS   EQU   CVTMAP+224
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
CVTNUMB  EQU   CVTRELNO
PCCAVT   EQU   0
PCCAT00P EQU   PCCAVT
RVT      EQU   0
RVTPEXIT EQU   RVT+68
RVTRWAPT EQU   RVT+80
RVTCCHDA EQU   RVT+96
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBID    EQU   SRB
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBCPAFF EQU   SRBFLC
SRBPASID EQU   SRBFLC+2
SRBEP    EQU   SRB+20
SRBRMTR  EQU   SRB+24
SRBPTR   EQU   0
CSD      EQU   0
CSDCPUAL EQU   CSD+8
CSDSCWRD EQU   CSD+12
CSDSCFL1 EQU   CSDSCWRD
CSDSCFL2 EQU   CSDSCWRD+1
CSDSCFL3 EQU   CSDSCWRD+2
CSDSCFL4 EQU   CSDSCWRD+3
CSDFLAGS EQU   CSD+23
CSDMASK  EQU   CSD+128
CAT      EQU   0
CATENTRY EQU   CAT
CATFLG   EQU   CATENTRY
CATNOP   EQU   CATFLG
CATFLA   EQU   CAT+1
CDA      EQU   0
CDACCHM1 EQU   CDA+24
MSGBUF   EQU   0
IOELAREA EQU   0
RVTEXIT  EQU   0
SAVER    EQU   20
@NM00088 EQU   0
SAV14    EQU   @NM00088+12
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PSARSVTE EQU   PSARSVT
LRBHRSW1 EQU   LRBHSW1
LRBHCSW1 EQU   LRBHSW1
LRBHMSW1 EQU   LRBHSW1
LRBMMCH  EQU   LRBBASE
LRBMCEIA EQU   LRBMMCH+8
LRBMTERM EQU   LRBMCEIA
LRBMHARD EQU   LRBMCEIA+1
LRBMINTM EQU   LRBMCEIA+2
LRBMSOFT EQU   LRBMCEIA+3
LRBMPDAR EQU   LRBMMCH+12
LRBMRSR1 EQU   LRBMMCH+13
LRBMRSR2 EQU   LRBMMCH+14
LRBMPWL  EQU   LRBMMCH+15
LRBMFLO  EQU   LRBMMCH+24
LRBMCIC  EQU   LRBMFLO
@NM00062 EQU   LRBMCIC
@NM00064 EQU   LRBMCIC+1
@NM00066 EQU   LRBMCIC+2
@NM00068 EQU   LRBMCIC+3
@NM00070 EQU   LRBMCIC+5
LRBMEDC  EQU   LRBMFLO+12
LRBRDDR  EQU   LRBBASE
LRBCCCH  EQU   LRBBASE
LRBCCUA  EQU   LRBCCCH+49
LRBDMDR  EQU   LRBBASE
LRBNMIH  EQU   LRBBASE
LRBTTER  EQU   LRBBASE
PWAPTR   EQU   PCCAPWAV
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTCSD   EQU   CVTS01+312
CVTPCCAT EQU   CVTS01+416
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RVTPTR   EQU   CVTRMS
CSDPTR   EQU   CVTCSD
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
LRBTUSR  EQU   LRBTTER+8
LRBTWSC  EQU   LRBTTER+4
LRBTLNH  EQU   LRBTTER
LRBNINT  EQU   LRBNMIH+24
LRBNDEVT EQU   LRBNMIH+20
LRBNVOL  EQU   LRBNMIH+14
LRBNCUA1 EQU   LRBNMIH+11
LRBNCUA2 EQU   LRBNMIH+8
LRBNJOB  EQU   LRBNMIH
LRBDSENS EQU   LRBDMDR+8
LRBDVOL  EQU   LRBDMDR+2
LRBDCUA1 EQU   LRBDMDR
LRBCCLOG EQU   LRBCCCH+56
LRBCLOGL EQU   LRBCCCH+54
LRBCHCUA EQU   LRBCCCH+52
LRBCCUA2 EQU   LRBCCUA+1
@NM00076 EQU   LRBCCUA
LRBCCHID EQU   LRBCCCH+48
LRBCDEVT EQU   LRBCCCH+44
LRBCECSW EQU   LRBCCCH+40
LRBCFCSW EQU   LRBCCCH+32
LRBCFCCW EQU   LRBCCCH+24
LRBCAIO  EQU   LRBCCCH+8
LRBCJOB  EQU   LRBCCCH
LRBRDEV2 EQU   LRBRDDR+32
LRBRCUA2 EQU   LRBRDDR+29
LRBRPH2  EQU   LRBRDDR+28
LRBRDEV1 EQU   LRBRDDR+24
LRBRCUA1 EQU   LRBRDDR+21
LRBRPH1  EQU   LRBRDDR+20
LRBRVOL2 EQU   LRBRDDR+14
LRBRVOL1 EQU   LRBRDDR+8
LRBRJOB  EQU   LRBRDDR
LRBMCEL  EQU   LRBMMCH+304
@NM00075 EQU   LRBMFLO+20
LRBMFSA  EQU   LRBMFLO+16
@NM00074 EQU   LRBMFLO+13
LRBMDISC EQU   LRBMEDC
LRBMINTR EQU   LRBMEDC
LRBMINST EQU   LRBMEDC
LRBMCCF  EQU   LRBMEDC
LRBMCNOP EQU   LRBMEDC
LRBMEXSR EQU   LRBMEDC
LRBMCOPR EQU   LRBMEDC
@NM00073 EQU   LRBMEDC
@NM00072 EQU   LRBMFLO+8
LRBMCELL EQU   LRBMCIC+6
LRBMVCC  EQU   @NM00070
LRBMVPT  EQU   @NM00070
@NM00071 EQU   @NM00070
@NM00069 EQU   LRBMCIC+4
LRBMVST  EQU   @NM00068
LRBMVLG  EQU   @NM00068
LRBMVCR  EQU   @NM00068
LRBMVGR  EQU   @NM00068
LRBMVFP  EQU   @NM00068
LRBMVED  EQU   @NM00068
LRBMVRC  EQU   @NM00068
LRBMVFA  EQU   @NM00068
LRBMVIA  EQU   @NM00066
LRBMVPM  EQU   @NM00066
LRBMVMS  EQU   @NM00066
LRBMVWP  EQU   @NM00066
@NM00067 EQU   @NM00066
LRBMFKE  EQU   @NM00066
LRBMFSC  EQU   @NM00066
LRBMFSE  EQU   @NM00066
LRBMIDY  EQU   @NM00064
LRBMIBU  EQU   @NM00064
@NM00065 EQU   @NM00064
LRBMFWN  EQU   @NM00064
LRBMFDG  EQU   @NM00062
@NM00063 EQU   @NM00062
LRBMFED  EQU   @NM00062
LRBMFCD  EQU   @NM00062
LRBMFTD  EQU   @NM00062
LRBMFSR  EQU   @NM00062
LRBMFPD  EQU   @NM00062
LRBMFSD  EQU   @NM00062
LRBMMOSW EQU   LRBMMCH+16
LRBMVEQR EQU   LRBMRSR2
LRBMPGFX EQU   LRBMRSR2
LRBMLSQA EQU   LRBMRSR2
LRBMFSQA EQU   LRBMRSR2
LRBMNUCL EQU   LRBMRSR2
LRBMSPER EQU   LRBMRSR2
LRBMINTC EQU   LRBMRSR2
LRBMOFLN EQU   LRBMRSR2
LRBMCHNG EQU   LRBMRSR1
LRBMSER  EQU   LRBMRSR1
@NM00061 EQU   LRBMRSR1
@NM00060 EQU   LRBMPDAR
LRBMRSRF EQU   LRBMPDAR
LRBMRSRC EQU   LRBMPDAR
LRBMINVP EQU   LRBMPDAR
@NM00059 EQU   LRBMPDAR
LRBMSBUF EQU   LRBMSOFT
LRBMSHIR EQU   LRBMSOFT
LRBMSECC EQU   LRBMSOFT
LRBMSEXD EQU   LRBMSOFT
@NM00058 EQU   LRBMSOFT
LRBMSSFT EQU   LRBMSOFT
LRBMIL80 EQU   LRBMINTM
LRBMICTM EQU   LRBMINTM
LRBMICKC EQU   LRBMINTM
LRBMITOD EQU   LRBMINTM
@NM00057 EQU   LRBMINTM
LRBMHIPD EQU   LRBMHARD
LRBMHSPF EQU   LRBMHARD
LRBMHSTO EQU   LRBMHARD
LRBMHINV EQU   LRBMHARD
LRBMHSD  EQU   LRBMHARD
@NM00056 EQU   LRBMHARD
LRBMHHRD EQU   LRBMHARD
LRBMTINV EQU   LRBMTERM
LRBMTDMG EQU   LRBMTERM
LRBMTWRN EQU   LRBMTERM
LRBMTCKS EQU   LRBMTERM
LRBMTSEC EQU   LRBMTERM
LRBMTTHR EQU   LRBMTERM
@NM00055 EQU   LRBMTERM
LRBMWSC  EQU   LRBMMCH+4
LRBMLNH  EQU   LRBMMCH
@NM00054 EQU   LRBHMSW1
LRBMSYST EQU   LRBHMSW1
@NM00053 EQU   LRBHMSW1
@NM00052 EQU   LRBHCSW1
LRBCERPP EQU   LRBHCSW1
LRBCDATA EQU   LRBHCSW1
LRBCICUA EQU   LRBHCSW1
LRBCNOSP EQU   LRBHCSW1
@NM00051 EQU   LRBHCSW1
LRBCINCO EQU   LRBHCSW1
LRBCMESG EQU   LRBHCSW1
@NM00050 EQU   LRBHRSW1
LRBRSYSI EQU   LRBHRSW1
LRBROPER EQU   LRBHRSW1
LRBRSEC  EQU   LRBHRSW1
LRBRPRIM EQU   LRBHRSW1
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
@NM00089 EQU   @NM00088
CDACCHRS EQU   CDA+17
CDACCHSL EQU   CDA+16
CDACCHIA EQU   CDA+12
CDACCH8A EQU   CDA+8
CDACCH7A EQU   CDA+4
CDACCH6A EQU   CDA
CATEND   EQU   CAT+8
CATCHID  EQU   CAT+4
CATSIOCT EQU   CAT+2
CATFLARS EQU   CATFLA
CATMCRST EQU   CATFLA
CATCCRST EQU   CATFLA
CATIORST EQU   CATFLA
CATBSY   EQU   CATFLA
CATFLG7  EQU   CATFLG
CATFLG6  EQU   CATFLG
CATFLG5  EQU   CATFLG
CATNID   EQU   CATFLG
CATNCPU  EQU   CATFLG
CATNGEN  EQU   CATFLG
CATRES1  EQU   CATFLG
@NM00086 EQU   CSD+160
CSDUCNT  EQU   CSD+124
CSDTCNT  EQU   CSD+120
CSDGDTOD EQU   CSD+116
CSDGDINT EQU   CSD+112
CSDGDCC  EQU   CSD+108
CSDDDRCT EQU   CSD+106
CSDRV044 EQU   CSD+104
CSDMAFF  EQU   CSD+24
CSDRV038 EQU   CSDFLAGS
CSDRV037 EQU   CSDFLAGS
CSDRV036 EQU   CSDFLAGS
CSDRV035 EQU   CSDFLAGS
CSDRV034 EQU   CSDFLAGS
CSDRV033 EQU   CSDFLAGS
CSDRV032 EQU   CSDFLAGS
CSDMP    EQU   CSDFLAGS
CSDACR   EQU   CSD+22
CSDMF1CP EQU   CSD+20
CSDRV043 EQU   CSD+16
CSDRV030 EQU   CSDSCFL4
CSDRV029 EQU   CSDSCFL4
CSDRV028 EQU   CSDSCFL4
CSDRV027 EQU   CSDSCFL4
CSDRV026 EQU   CSDSCFL4
CSDRV025 EQU   CSDSCFL4
CSDRV024 EQU   CSDSCFL4
CSDRV023 EQU   CSDSCFL4
CSDRV022 EQU   CSDSCFL3
CSDRV021 EQU   CSDSCFL3
CSDRV020 EQU   CSDSCFL3
CSDRV019 EQU   CSDSCFL3
CSDRV018 EQU   CSDSCFL3
CSDRV017 EQU   CSDSCFL3
CSDRV016 EQU   CSDSCFL3
CSDRV015 EQU   CSDSCFL3
CSDRV014 EQU   CSDSCFL2
CSDRV013 EQU   CSDSCFL2
CSDRV012 EQU   CSDSCFL2
CSDRV011 EQU   CSDSCFL2
CSDRV010 EQU   CSDSCFL2
CSDRV009 EQU   CSDSCFL2
CSDRV008 EQU   CSDSCFL2
CSDRV007 EQU   CSDSCFL2
CSDRV006 EQU   CSDSCFL1
CSDRV005 EQU   CSDSCFL1
CSDRV004 EQU   CSDSCFL1
CSDRV003 EQU   CSDSCFL1
CSDRV002 EQU   CSDSCFL1
CSDRV001 EQU   CSDSCFL1
CSDSYSND EQU   CSDSCFL1
CSDRV042 EQU   CSDSCFL1
CSDCPUOL EQU   CSD+10
CSDSAFF  EQU   CSDCPUAL
CSDCHAD  EQU   CSD+6
CSDCPUJS EQU   CSD+4
CSDCSD   EQU   CSD
@NM00085 EQU   SRB+40
@NM00084 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBPTCB  EQU   SRBFLC+4
SRBFLNK  EQU   SRB+4
RVTMIH2  EQU   RVT+108
RVTMIH   EQU   RVT+104
RVTCCHCR EQU   RVT+100
RVTMSGLN EQU   RVT+92
RVTMSGPT EQU   RVT+88
RVTLRBPT EQU   RVT+84
RVT01MMM EQU   RVT+76
RVT00MMM EQU   RVT+72
RVTPKREF EQU   RVT+64
RVTPBUCR EQU   RVT+60
RVTPXMFA EQU   RVT+56
RVTPTAIM EQU   RVT+52
RVTPTCON EQU   RVT+48
RVTPTREC EQU   RVT+44
RVTPTSIG EQU   RVT+40
RVTPTERM EQU   RVT+36
RVTPMKTA EQU   RVT+32
RVTPMMSG EQU   RVT+28
RVTPMTHA EQU   RVT+24
RVTPMPFX EQU   RVT+20
RVTPMSCA EQU   RVT+16
RVTPMHCA EQU   RVT+12
RVTPMFRS EQU   RVT+8
RVTPMRTM EQU   RVT+4
RVTPMCIH EQU   RVT
CVTLEVL  EQU   CVTRELNO+2
CVTMDL   EQU   CVTFIX+250
@NM00083 EQU   CVTFIX+248
@NM00082 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
PWACCSRB EQU   PWA+824
PWAWRK   EQU   PWA+792
PWATEST  EQU   PWA+784
PWACPUAD EQU   PWA+782
@NM00081 EQU   PWA+781
PWACNTR  EQU   PWA+780
PWAEDSRB EQU   PWA+779
@NM00080 EQU   PWAFLAGS
PWAENABL EQU   PWAFLAGS
PWANRHED EQU   PWAFLAGS
PWACCHED EQU   PWAFLAGS
PWAREST  EQU   PWAFLAGS
PWAINIT  EQU   PWA+777
PWACR15  EQU   PWA+700
PWACR14  EQU   PWA+696
PWASFLC  EQU   PWA+464
PWAINTC  EQU   PWA+456
PWASOSW  EQU   PWA+448
PWAFRR00 EQU   PWAFRR+12
PWAFRR15 EQU   PWAFRR+8
PWAFRR13 EQU   PWAFRR+4
PWAFRR12 EQU   PWAFRR
PWAESA   EQU   PWA+288
PWASA4   EQU   PWA+216
PWASA3   EQU   PWA+144
PWASA2   EQU   PWA+72
PWASA1   EQU   PWA
RWATEST  EQU   RWA+32
@NM00079 EQU   RWA+29
@NM00078 EQU   RWAFLAGS
RWAWNGQI EQU   RWAFLAGS
@NM00077 EQU   RWAMSGFL
RWAMSG56 EQU   RWAMSGFL
RWAMSG21 EQU   RWAMSGFL
RWAMSG72 EQU   RWAMSGFL
RWAMSG71 EQU   RWAMSGFL
RWAMSG31 EQU   RWAMSGFL
RWAFLCFL EQU   RWA+26
RWAEMRFL EQU   RWA+25
RWACWRFL EQU   RWA+24
RWATLRB  EQU   RWATERM+4
RWATWTO  EQU   RWATERM
LRBCMPCS EQU   LRBCMP+2
LRBCMPPA EQU   LRBCMP
LRBCMPNO EQU   LRBCVAR+6
LRBCMPF2 EQU   LRBCVAR+5
LRBCMPF1 EQU   LRBCVAR+4
LRBCRESD EQU   LRBCVAR+2
LRBCFT   EQU   LRBCVAR
LRBHMCEL EQU   LRBHCPID+6
LRBHMDL  EQU   LRBHCPID+4
LRBHCSER EQU   LRBHCPID+1
@NM00049 EQU   LRBHCPID
LRBHTIME EQU   LRB+12
LRBHDATE EQU   LRB+8
@NM00048 EQU   LRB+7
LRBHCNT  EQU   LRB+6
LRBMCLB  EQU   LRBHSW3
LRBNDEM  EQU   LRBMACT
LRBNCEM  EQU   LRBMACT
@NM00047 EQU   LRBHSW0
LRBHTMC  EQU   LRBHSW0
@NM00046 EQU   LRBHSW0
LRBHNS   EQU   LRBHSW0
LRBHMORE EQU   LRBHSW0
@NM00045 EQU   LRBHSYS
LRBHSYSB EQU   LRBHSYS
NVTLPAHA EQU   NVT+548
NVTLPALO EQU   NVT+544
NVTRMSG  EQU   NVT+540
NVTRLOCK EQU   NVT+536
NVTRCODE EQU   NVT+532
@NM00044 EQU   NVT+529
@NM00043 EQU   NVTFLPO
NVTFLWS  EQU   NVTFLPO
NVTFLQS  EQU   NVTFLPO
@NM00042 EQU   NVTFLPO
NVTSYSP  EQU   NVTFLPO
NVTFLLST EQU   NVTFLPO
NVTRSV48 EQU   NVT+524
NVTRSV47 EQU   NVT+520
NVTRSV46 EQU   NVT+516
@NM00041 EQU   NVT+512
NVTREALR EQU   NVT+508
NVTFASVT EQU   NVT+504
NVTRSV45 EQU   NVT+496
NVTVRLNG EQU   NVT+492
NVTVRREG EQU   NVT+488
NVTLVIRT EQU   NVT+484
NVTRSV4A EQU   NVT+480
NVTLPAND EQU   NVT+476
NVTRMSS  EQU   NVT+472
NVTRPQE  EQU   NVT+468
NVTRLLE  EQU   NVT+464
NVTRJPQ  EQU   NVT+460
NVTVMSS  EQU   NVT+456
NVTVPQE  EQU   NVT+452
NVTVLLE  EQU   NVT+448
NVTVJPQ  EQU   NVT+444
NVTLSEC  EQU   NVTLOCAT+4
NVTLFST  EQU   NVTLOCAT
NVTXSEC  EQU   NVTXCTL+4
NVTXFST  EQU   NVTXCTL
@NM00040 EQU   NVT+425
NVTLPACT EQU   NVT+424
NVTCSLPG EQU   NVT+420
NVTCSIOB EQU   NVT+416
NVTCSLNM EQU   NVT+412
NVTCSLIB EQU   NVT+408
NVTBLDL  EQU   NVT+404
NVTVRBLD EQU   NVT+400
@NM00039 EQU   NVT+392
NVTVRTCB EQU   NVT+388
NVTVVTCB EQU   NVT+384
NVTSPUCB EQU   NVT+382
NVTRSV44 EQU   NVT+380
NVTQSBUF EQU   NVT+376
NVTPTAB  EQU   NVT+372
NVTPAREA EQU   NVT+368
NVTRSV43 EQU   NVT+364
@NM00038 EQU   NVT+363
NVTABWS1 EQU   NVT+362
NVTABCD1 EQU   NVT+360
@NM00037 EQU   NVT+358
NVTCPUAD EQU   NVT+356
NVTTOD   EQU   NVT+352
NVTSPE   EQU   NVT+344
NVTMBEND EQU   NVT+340
NVTMBUF  EQU   NVT+336
NVTDCBSN EQU   NVT+332
NVTDCBOC EQU   NVT+328
NVTDCBIC EQU   NVT+324
@NM00036 EQU   NVT+308
NVTNMBLD EQU   NVT+304
NVTNIPM  EQU   NVT+292
NVTPRMPT EQU   NVT+272
NVTIX    EQU   NVTFLWSC
NVTFLWS1 EQU   NVTWPSW2+2
NVTIDPSW EQU   NVTWPSW2
NVTWPSW1 EQU   NVTWTPSW
NVTMCPSW EQU   NVT+216
@NM00035 EQU   NVT+212
@NM00034 EQU   NVTFLCN
NVTFLRAC EQU   NVTFLCN
NVTFLNCK EQU   NVTFLCN
NVTFLNHC EQU   NVTFLCN
NVTFLASM EQU   NVTFLCN
NVTMP    EQU   NVTFLCN
NVTFLIOC EQU   NVTFLCN
NVTFLAC  EQU   NVTFLCN
NVTFLSG  EQU   NVT+210
NVTTRACE EQU   NVT+208
NVTNXPTR EQU   NVT+204
NVTNXSIZ EQU   NVT+202
@NM00033 EQU   NVT+200
NVTSGPSA EQU   NVT+196
NVTN0MSG EQU   NVT+192
NVTVVPG1 EQU   NVT+188
NVTNBFND EQU   NVT+184
NVTNUCND EQU   NVT+180
NVTSTMAP EQU   NVT+176
NVTRTMSA EQU   NVT+172
NVTMFASA EQU   NVT+168
NVTLSPQE EQU   NVT+164
NVTALSQA EQU   NVT+160
NVTPQSAV EQU   NVT+156
NVTSVC60 EQU   NVT+148
NVTABSEC EQU   NVTABSAV+4
NVTABFST EQU   NVTABSAV
NVTNVSQA EQU   NVT+138
NVTRSVMN EQU   NVT+136
NVTNBMIN EQU   NVT+134
NVTRGNAV EQU   NVT+132
NVTLSQNO EQU   NVT+130
NVTSQANO EQU   NVT+128
NVTLSQAS EQU   NVT+124
NVTLNGFX EQU   NVT+120
NVTIGXER EQU   NVT+116
@NM00032 EQU   NVT+112
NVTRSV49 EQU   NVT+108
NVTNVRSZ EQU   NVT+104
NVTMFA   EQU   NVT+100
NVTDSSNG EQU   NVT+96
NVTMSLNK EQU   NVT+92
NVTVVMDI EQU   NVT+88
NVTIGCER EQU   NVT+84
NVTVBLDL EQU   NVT+80
NVTSVCTB EQU   NVT+76
NVTRSV42 EQU   NVT+72
NVTRSV41 EQU   NVT+68
NVTMASCB EQU   NVT+64
NVTCMTCB EQU   NVT+60
NVTMSTCB EQU   NVT+56
@NM00031 EQU   NVTFLLB
NVTFLSLB EQU   NVTFLLB
@NM00030 EQU   NVTNPATR
NVTNPREU EQU   NVTNPREN
@NM00029 EQU   NVTNPREN
NVTNPSFX EQU   NVT+53
@NM00028 EQU   NVT+52
NVTNPSUF EQU   NVT
@NM00027 EQU   PCCA+512
PCCARV36 EQU   PCCA+380
PCCARV35 EQU   PCCA+378
PCCARV01 EQU   PCCA+377
PCCAR105 EQU   PCCAATTR
PCCAR104 EQU   PCCAATTR
PCCAR103 EQU   PCCAATTR
PCCAR102 EQU   PCCAATTR
PCCAR101 EQU   PCCAATTR
PCCAR100 EQU   PCCAATTR
PCCAIO   EQU   PCCAATTR
PCCACPUM EQU   PCCAATTR
PCCARV63 EQU   PCCA+372
PCCARV62 EQU   PCCA+368
PCCARV61 EQU   PCCA+364
PCCARV60 EQU   PCCA+360
PCCARV59 EQU   PCCA+356
PCCARV58 EQU   PCCA+352
PCCARV57 EQU   PCCA+348
PCCARV56 EQU   PCCA+344
PCCARV55 EQU   PCCA+340
PCCARV54 EQU   PCCA+336
PCCALOGA EQU   PCCA+332
PCCACHID EQU   PCCA+324
PCCACHSV EQU   PCCA+312
PCCARV79 EQU   PCCACHF4
PCCARV78 EQU   PCCACHF4
PCCARV77 EQU   PCCACHF4
PCCARV76 EQU   PCCACHF4
PCCARV75 EQU   PCCACHF4
PCCARV74 EQU   PCCACHF4
PCCARV73 EQU   PCCACHF4
PCCARV72 EQU   PCCACHF4
PCCARV71 EQU   PCCACHF3
PCCARV70 EQU   PCCACHF3
PCCARV69 EQU   PCCACHF3
PCCARV68 EQU   PCCACHF3
PCCARV67 EQU   PCCACHF3
PCCARV66 EQU   PCCACHF3
PCCASLCK EQU   PCCACHF3
PCCAISRB EQU   PCCACHF3
PCCACF28 EQU   PCCACHF2
PCCACF27 EQU   PCCACHF2
PCCACF26 EQU   PCCACHF2
PCCACF25 EQU   PCCACHF2
PCCACF24 EQU   PCCACHF2
PCCACF23 EQU   PCCACHF2
PCCACF22 EQU   PCCACHF2
PCCACF21 EQU   PCCACHF2
PCCACF18 EQU   PCCACHF1
PCCACF17 EQU   PCCACHF1
PCCACF16 EQU   PCCACHF1
PCCACF15 EQU   PCCACHF1
PCCACF14 EQU   PCCACHF1
PCCACF13 EQU   PCCACHF1
PCCACF12 EQU   PCCACHF1
PCCACF11 EQU   PCCACHF1
PCCARV05 EQU   PCCA+307
PCCACHPB EQU   PCCA+306
PCCALGP2 EQU   PCCA+305
PCCALGP1 EQU   PCCA+304
PCCALOGL EQU   PCCA+300
PCCACHW2 EQU   PCCA+296
PCCACHW1 EQU   PCCA+292
PCCAIOSI EQU   PCCA+291
PCCACNRB EQU   PCCACHRB
PCCACCVB EQU   PCCACHRB
PCCACSNB EQU   PCCACHRB
PCCARV52 EQU   PCCACHRB
PCCACHIB EQU   PCCACHRB
PCCACTIB EQU   PCCACHRB
PCCACINB EQU   PCCACHRB
PCCACSIB EQU   PCCACHRB
PCCARV51 EQU   PCCACHS2
PCCARV50 EQU   PCCACHS2
PCCACCRA EQU   PCCACHS2
PCCACURC EQU   PCCACHS2
PCCACNLG EQU   PCCACHS2
PCCACMOD EQU   PCCACHS2
PCCACALT EQU   PCCACHS2
PCCACIOR EQU   PCCACHS2
PCCARV47 EQU   PCCACHS1
PCCACUCB EQU   PCCACHS1
PCCACIBC EQU   PCCACHS1
PCCACAND EQU   PCCACHS1
PCCACNLS EQU   PCCACHS1
PCCACFRR EQU   PCCACHS1
PCCACNRE EQU   PCCACHS1
PCCACCMP EQU   PCCACHS1
PCCACSEQ EQU   PCCACHTS
PCCACDIN EQU   PCCACHTS
PCCARV44 EQU   PCCACHTS
PCCARV43 EQU   PCCACHTS
PCCACTEC EQU   PCCACHTS
PCCACDAV EQU   PCCACHVA
PCCACCHV EQU   PCCACHVA
PCCACCMD EQU   PCCACHVA
PCCACUNS EQU   PCCACHVA
PCCACSQV EQU   PCCACHVA
PCCARV42 EQU   PCCACHVA
PCCARV41 EQU   PCCACHVA
PCCACITF EQU   PCCACHVA
PCCARV40 EQU   PCCACHBL
PCCARV39 EQU   PCCACHBL
PCCARV38 EQU   PCCACHBL
PCCACCUE EQU   PCCACHBL
PCCACSTG EQU   PCCACHBL
PCCACSCU EQU   PCCACHBL
PCCACCHA EQU   PCCACHBL
PCCACCPU EQU   PCCACHBL
PCCACNOR EQU   PCCACHPF
PCCACCNT EQU   PCCACHPF
PCCACSNS EQU   PCCACHPF
PCCARV37 EQU   PCCACHPF
PCCACHIO EQU   PCCACHPF
PCCACTIO EQU   PCCACHPF
PCCACINT EQU   PCCACHPF
PCCACSIO EQU   PCCACHPF
PCCACHUB EQU   PCCAWERP
PCCAR106 EQU   PCCA+228
PCCAR113 EQU   PCCA+226
PCCASRBL EQU   PCCA+225
PCCAR112 EQU   PCCACHAN
PCCAR111 EQU   PCCACHAN
PCCAR110 EQU   PCCACHAN
PCCAR109 EQU   PCCACHAN
PCCAR108 EQU   PCCACHAN
PCCAR107 EQU   PCCACHAN
PCCAEXDM EQU   PCCACHAN
PCCAIRST EQU   PCCACHAN
PCCASRB  EQU   PCCA+180
PCCAEMSA EQU   PCCAEMSB+12
PCCAEMSE EQU   PCCAEMSB+8
PCCAEMSP EQU   PCCAEMSB+4
PCCARMS  EQU   PCCARMSB
PCCARV34 EQU   PCCARMSB
PCCARV33 EQU   PCCARMSB
PCCARV32 EQU   PCCARMSB
PCCARV31 EQU   PCCARMSB
PCCARV30 EQU   PCCARMSB
PCCARV29 EQU   PCCARMSB
PCCARV28 EQU   PCCARMSB
PCCARV27 EQU   PCCAEMS3
PCCARV26 EQU   PCCAEMS3
PCCARV25 EQU   PCCAEMS3
PCCARV24 EQU   PCCAEMS3
PCCARV23 EQU   PCCAEMS3
PCCARV22 EQU   PCCAEMS3
PCCARV21 EQU   PCCAEMS3
PCCARV20 EQU   PCCAEMS3
PCCARV19 EQU   PCCAEMS2
PCCARV18 EQU   PCCAEMS2
PCCARV17 EQU   PCCAEMS2
PCCARV16 EQU   PCCAEMS2
PCCARV15 EQU   PCCAEMS2
PCCARV14 EQU   PCCAEMS2
PCCARV13 EQU   PCCAEMS2
PCCARV12 EQU   PCCAEMS2
PCCARV11 EQU   PCCARISP
PCCARV10 EQU   PCCARISP
PCCARV09 EQU   PCCARISP
PCCARV08 EQU   PCCARISP
PCCARV07 EQU   PCCARISP
PCCARV06 EQU   PCCARISP
PCCASERL EQU   PCCARISP
PCCAPARL EQU   PCCARISP
PCCARPB  EQU   PCCA+132
PCCACTIN EQU   PCCAINTE
PCCANFIN EQU   PCCAINTE
PCCANUIN EQU   PCCAINTE
PCCACTCC EQU   PCCACCE
PCCANFCC EQU   PCCACCE
PCCANUCC EQU   PCCACCE
PCCACTTD EQU   PCCATODE
PCCANFTD EQU   PCCATODE
PCCANUTD EQU   PCCATODE
PCCARV04 EQU   PCCATMFL
PCCARV03 EQU   PCCATMFL
PCCARV02 EQU   PCCATMFL
PCCAMINT EQU   PCCATMFL
PCCAMCC  EQU   PCCATMFL
PCCAVKIL EQU   PCCATMFL
PCCASYNC EQU   PCCATMFL
PCCAINIT EQU   PCCATMFL
PCCARV9E EQU   PCCA+124
PCCARV9D EQU   PCCA+120
PCCARV9C EQU   PCCA+116
PCCARV9B EQU   PCCA+112
PCCARV9A EQU   PCCA+108
PCCARV99 EQU   PCCA+104
PCCARV98 EQU   PCCA+100
PCCARV97 EQU   PCCA+96
PCCARV96 EQU   PCCA+92
PCCARV95 EQU   PCCA+88
PCCARV94 EQU   PCCA+84
PCCARV93 EQU   PCCA+80
PCCARV92 EQU   PCCA+76
PCCARV91 EQU   PCCA+72
PCCARV90 EQU   PCCA+68
PCCARV89 EQU   PCCA+64
PCCARV88 EQU   PCCA+60
PCCARV87 EQU   PCCA+56
PCCARV86 EQU   PCCA+52
PCCARV85 EQU   PCCA+48
PCCARV84 EQU   PCCA+44
PCCARV83 EQU   PCCA+40
PCCARV82 EQU   PCCA+36
PCCARV81 EQU   PCCA+32
PCCAPSAR EQU   PCCA+28
PCCATQEP EQU   PCCA+20
PCCACAFM EQU   PCCA+18
PCCACPID EQU   PCCA+4
PCCAPCCA EQU   PCCA
@NM00026 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00025 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSAACTCD EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00024 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00023 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00022 EQU   FLCFSA
@NM00021 EQU   FLCMCLA+77
PSAMDISC EQU   PSAMEDC
PSAMINTR EQU   PSAMEDC
PSAMINST EQU   PSAMEDC
PSAMCCF  EQU   PSAMEDC
PSAMCNOP EQU   PSAMEDC
PSAMEXSR EQU   PSAMEDC
PSAMCOPR EQU   PSAMEDC
@NM00020 EQU   PSAMEDC
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
@NM00013 EQU   FLCIOEL
FLCCHMOD EQU   FLCCHTM
FLCCHTYP EQU   FLCCHTM
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00139 EQU   ALLOCATE
@RT00141 EQU   DEALLOC
@RT00143 EQU   CRINIT
@RT00145 EQU   CRRESET
@RT00151 EQU   RETRN4
@RT00157 EQU   RETRN4
@RT00164 EQU   RETRN4
@RT00264 EQU   RETRN4
@RT00269 EQU   RETRN4
@RT00272 EQU   PWADEAL
@RT00276 EQU   RETRN4
@RT00319 EQU   RETRN4
@RT00334 EQU   RETRN4
@ENDDATA EQU   *
         END   IGFPBUCR,(C'PLS1549',0701,77334)
