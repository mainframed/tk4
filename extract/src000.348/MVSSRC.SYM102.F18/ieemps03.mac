         TITLE 'IEEMPS03 - QUIESCE COMMAND PROCESSOR                   *
                        '
IEEMPS03 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(19)                                             0001
         DC    C'IEEMPS03R0300075294'                              0001
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         LR    @12,@01                                             0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @10,@01                                             0001
         USING @DATD,@10                                           0001
         LR    @01,@12                                             0001
         ST    @13,@SA00001+4                                      0001
         LR    @13,@10                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   WORKAREA=''B;                   /* ZERO DYNAMIC WORK AREA        */
         XC    WORKAREA(242),WORKAREA                              0080
*   CSCBPTR=R1;                     /* SAVE QUIESCE CSCB ADDR        */
         ST    R1,CSCBPTR                                          0081
*   RETADD=R14;                     /* SAVE RETURN ADDR              */
         ST    R14,RETADD                                          0082
*   CODEREG1=R11;                   /* SAVE CODE REG                 */
         ST    R11,CODEREG1                                        0083
*   DATAREG1=R10;                   /* SAVE DATA REG                 */
         ST    R10,DATAREG1                                        0084
*   DATAEND=R10+@SIZDATD;           /* END OF DATA AREA              */
         LR    @12,R10                                             0085
         AL    @12,@SIZDATD                                        0085
         ST    @12,DATAEND                                         0085
*   ENTRYPT=ADDR(IEEMPS03);         /* ENTRY POINT ADDR              */
         L     @12,@CA00028                                        0086
         ST    @12,ENTRYPT                                         0086
*   MSGID=SEMI;                     /* ESTABLISH MSG DEFAULT         */
*                                                                  0087
         MVC   MSGID(2),@CH01001                                   0087
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR AUTHORIZED SOURCE OF COMMAND                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0088
*   IF CHUCMP=UCMID×                /* MASTER CONSOLE                */
*       ((CHUCMP=RDR)&(AUTHFLG=ON)) /* AUTHORIZED RDR                */
*     THEN                                                         0088
         L     @12,CSCBPTR                                         0088
         L     @09,CVTPTR                                          0088
         L     @09,UCMBASPT(,@09)                                  0088
         AL    @09,@CF02450                                        0088
         L     @09,UCMMCSPT(,@09)                                  0088
         L     @09,UCMDVEPT(,@09)                                  0088
         CLC   CHUCMP(1,@12),UCMID(@09)                            0088
         BE    @RT00088                                            0088
         CLI   CHUCMP(@12),X'80'                                   0088
         BNE   @RF00088                                            0088
         TM    AUTHFLG(@12),B'10000000'                            0088
         BNO   @RF00088                                            0088
@RT00088 DS    0H                                                  0089
*     CONSLID=UCMID;                /* MSTR CNSL RECEIVES ALL MSG'S
*                                      FOR AUTHORIZED COMMAND SOURCES*/
*                                                                  0089
         L     @12,CVTPTR                                          0089
         L     @12,UCMBASPT(,@12)                                  0089
         AL    @12,@CF02450                                        0089
         L     @12,UCMMCSPT(,@12)                                  0089
         L     @12,UCMDVEPT(,@12)                                  0089
         MVC   CONSLID(1),UCMID(@12)                               0089
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE MSG CONSOLE WHEN SOURCE OF COMMAND IS UNAUTHORIZED, */
*   /* THEN ISSUE MSG AND EXIT                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0090
*   ELSE                                                           0090
*     DO;                                                          0090
         B     @RC00088                                            0090
@RF00088 DS    0H                                                  0091
*       IF CHUCMP=RDR×              /* UNAUTHORIZED RDR              */
*           CHUCMP=NULL             /* INTERNAL COMMAND              */
*         THEN                                                     0091
         L     @12,CSCBPTR                                         0091
         CLI   CHUCMP(@12),X'80'                                   0091
         BE    @RT00091                                            0091
         CLI   CHUCMP(@12),0                                       0091
         BNE   @RF00091                                            0091
@RT00091 DS    0H                                                  0092
*         CONSLID=UCMID;            /* MASTER CONSOLE                */
         L     @12,CVTPTR                                          0092
         L     @12,UCMBASPT(,@12)                                  0092
         AL    @12,@CF02450                                        0092
         L     @12,UCMMCSPT(,@12)                                  0092
         L     @12,UCMDVEPT(,@12)                                  0092
         MVC   CONSLID(1),UCMID(@12)                               0092
*       ELSE                                                       0093
*         CONSLID=CHUCMP;           /* ISSUING CONSOLE               */
         B     @RC00091                                            0093
@RF00091 L     @12,CSCBPTR                                         0093
         MVC   CONSLID(1),CHUCMP(@12)                              0093
*       MSGID=CRMI;                 /* COMMAND REJECT MSG ID         */
@RC00091 MVC   MSGID(2),@CH00038                                   0094
*       GOTO EXIT;                  /* ISSUE MSG AND RETURN CONTROL  */
         B     EXIT                                                0095
*     END;                                                         0096
*                                                                  0096
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ESTAE ENVIRONMENT, ENQ ON SYSZVARY AND GETMAIN PAGE    */
*   /* FIXED WORK AREA FOR IEESTPRS                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0097
*   CALL SETUP;                                                    0097
*                                                                  0097
@RC00088 BAL   @14,SETUP                                           0097
*   /*****************************************************************/
*   /*                                                               */
*   /* IF AN ERROR WAS ENCOUNTERED IN SETUP, ISSUE MESSAGE AND EXIT  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0098
*   IF R15=BADRC THEN                                              0098
         C     R15,@CF00059                                        0098
         BE    @RT00098                                            0098
*     GOTO EXIT;                                                   0099
*   R2=ADDR(IEEMPS03);              /* CSECT START ADDR              */
         L     R2,@CA00028                                         0100
*   R3=ADDR(MPS03END);              /* CSECT END ADDR                */
*                                                                  0101
         LA    R3,MPS03END                                         0101
*   /*****************************************************************/
*   /*                                                               */
*   /* FIX CSECT CODE PAGES IN STORAGE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0102
*   CALL PAGEFIX;                                                  0102
*                                                                  0102
         BAL   @14,PAGEFIX                                         0102
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PAGE NOT FIXED, ISSUE MSG AND EXIT                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0103
*   IF R15=BADRC THEN                                              0103
         C     R15,@CF00059                                        0103
         BNE   @RF00103                                            0103
*     DO;                                                          0104
*       DO;                         /* ABEND(183) SYSTEM             */
*         RESPECIFY                                                0106
*          (GPR01F) RESTRICTED;                                    0106
*         GPR01F=((183)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19  */
         L     GPR01F,@CF02448                                     0107
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0108
*         RESPECIFY                                                0109
*          (GPR01F) UNRESTRICTED;                                  0109
*       END;                        /* ABEND(183) SYSTEM GIVE ESTAE
*                                      CONTROL               @YM03534*/
*     END;                                                         0111
*   PGFIX=ON;                       /* SET PAGE FIXED FOOT PRINT     */
@RF00103 OI    PGFIX,B'00010000'                                   0112
*   R2=R10;                         /* ADDR OF DYNAMIC STORAGE       */
         LR    R2,R10                                              0113
*   R3=R2+@SIZDATD;                 /* END ADDR OF DYNAMIC STORAGE   */
*                                                                  0114
         LR    R3,R2                                               0114
         AL    R3,@SIZDATD                                         0114
*   /*****************************************************************/
*   /*                                                               */
*   /* FIX DYNAMIC AREA IN STORAGE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0115
*   CALL PAGEFIX;                                                  0115
*                                                                  0115
         BAL   @14,PAGEFIX                                         0115
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PAGE NOT FIXED, ISSUE MSG AND EXIT                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0116
*   IF R15=BADRC THEN                                              0116
         C     R15,@CF00059                                        0116
         BNE   @RF00116                                            0116
*     DO;                                                          0117
*       DO;                         /* ABEND(183) SYSTEM             */
*         RESPECIFY                                                0119
*          (GPR01F) RESTRICTED;                                    0119
*         GPR01F=((183)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19  */
         L     GPR01F,@CF02448                                     0120
*         SVC(13);                  /* ISSUE ABEND SVC               */
         SVC   13                                                  0121
*         RESPECIFY                                                0122
*          (GPR01F) UNRESTRICTED;                                  0122
*       END;                        /* ABEND(183) SYSTEM GIVE ESTAE
*                                      CONTROL               @YM03534*/
*     END;                                                         0124
*                                                                  0124
*   /*****************************************************************/
*   /*                                                               */
*   /* DISABLE FOR INTERRUPTS - OBTAIN DISP LOCK                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0125
*   GENERATE SETS(R0,R1,R14,R15) REFS(CVTRSTWD,ENABLE) DEFS(DISABLE);
@RF00116 DS    0H                                                  0125
DISABLE SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,REGS=USE,                XX
               RELATED=(CVTRSTWD,IEEMPS03(ENABLE))
*   DSABLE=ON;                      /* SET DISABLED FOOT PRINT       */
         OI    DSABLE,B'00001000'                                  0126
*   R2=ADDR(FRRRTN);                /* ADDR FUNCTIONAL RECOVERY RTN  */
*                                                                  0127
         LA    R2,FRRRTN                                           0127
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH FRR PROTECTION FOR CVTRSTWD                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0128
*   GENERATE REFS(R2,PSACSTK,FRRSCURR,FRRSENTR,FRRSFRRA,FRRSLAST,  0128
*       FRRSELEN,FRRSPARM,PSALSFCC) SETS(R3,R14,R15);              0128
   SETFRR A,FRRAD=(2),PARMAD=(3),WRKREGS=(14,15)
*   RFY                                                            0129
*     FRLST BASED(R3);              /* 24 BYTE FRR PARM LIST         */
*   RVCODERA=R11;                   /* SAVE CODE BASE IN FRR P LIST  */
         ST    R11,RVCODERA(,R3)                                   0130
*   RVDATARA=R10;                   /* SAVE DATA BASE IN FRR P LIST  */
*                                                                  0131
         ST    R10,RVDATARA(,R3)                                   0131
*   /*****************************************************************/
*   /*                                                               */
*   /* SERIALIZE STOP-RESTART REQUESTS VIA CVTRSTWD                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0132
*   CALL SWAPWORD;                                                 0132
*                                                                  0132
         BAL   @14,SWAPWORD                                        0132
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SWAP NOT SUCCESSFUL, ISSUE MSG AND EXIT                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*   IF R15=BADRC THEN                                              0133
         C     R15,@CF00059                                        0133
         BE    @RT00133                                            0133
*     GOTO EXIT;                                                   0134
*                                                                  0134
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FOR CALL TO IEESTPRS, CALL IESSTPRS TO PLACE CPU'S IN  */
*   /* MANUAL STATE, AND CHECK THE IEESTPRS RTN CODE TO DETERMINE    */
*   /* WHETHER STOP-RESTART WAS SUCCESSFUL                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0135
*   CALL STPRSTRT;                                                 0135
*                                                                  0135
         BAL   @14,STPRSTRT                                        0135
*   /*****************************************************************/
*   /*                                                               */
*   /* THE EXIT LABEL CODE CONCLUDES IEEMPS03 PROCESSING             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*EXIT:                                                             0136
*                                                                  0136
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MSG ACCORDING TO MSGID LAST SET BY SUBROUTINES AND FREE */
*   /* SYSTEM RESOURCES                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*   CALL CLEANUP;                                                  0136
EXIT     BAL   @14,CLEANUP                                         0136
*   R14=RETADD;                     /* MASTER SCHED RETURN ADDR      */
         L     R14,RETADD                                          0137
*   RETURN;                         /* RETURN TO CALLER--------------*/
@EL00001 L     @13,4(,@13)                                         0138
@EF00001 L     @00,@SIZDATD                                        0138
         LR    @01,@10                                             0138
         FREEMAIN R,LV=(0),A=(1)
@ER00001 BR    @14                                                 0138
*   RFY                                                            0139
*    (R11,                                                         0139
*     R10) UNRSTD;                  /* FREE CODE AND DATA REGS       */
*                                                                  0140
*/********************************************************************/
*/*                                                                  */
*/* SETUP PROCEDURE                                                  */
*/*                                                                  */
*/* FUNCTION: - ESTABLISH ESTAE ENVIRONMENT                          */
*/*           - ENQ ON SYSZVARY,CPU                                  */
*/*           - GETMAIN IEESTPRS WORK AREA                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0140
*SETUP:                                                            0140
*   PROC OPTIONS(SAVE,SAVEAREA);                                   0140
SETUP    STM   @14,@12,12(@13)                                     0140
         ST    @13,@SA00002+4                                      0140
         LA    @12,@SA00002                                        0140
         ST    @12,8(,@13)                                         0140
         LR    @13,@12                                             0140
*   R2=ADDR(ESTAEPRM);              /* ESTAE PARM AREA USED BY     0141
*                                      ENTESTAE MACRO TO RESTORE CODE
*                                      AND DATA REGS                 */
         LA    R2,ESTAEPRM                                         0141
*   R1=ADDR(ESTAELST);              /* CONTROL BLOCK AREA NORMALLY 0142
*                                      FILLED IN BY LIST VERSION OF
*                                      ESTAE MACRO                   */
*                                                                  0142
         LA    R1,ESTAELST                                         0142
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH ESTAE EXIT                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0143
*   GENERATE REFS(ESTAERTN,R1,R2) SETS(R0,R1,R14,R15);             0143
*                                                                  0143
   ESTAE ESTAERTN,PARAM=(2),MF=(E,(1))
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER ESTAE EXIT ESTABLISHED                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0144
*   IF R15^=GOODRC THEN                                            0144
         LTR   R15,R15                                             0144
         BZ    @RF00144                                            0144
*     DO;                                                          0145
*       MSGID=SEMI;                 /* SYSTEM ERROR MSG              */
         MVC   MSGID(2),@CH01001                                   0146
*       GOTO BADSURTN;              /* RETURN CODE 4 EXIT            */
         B     BADSURTN                                            0147
*     END;                                                         0148
*   ESTENV=ON;                      /* SET ESTAE EXIT ESTABLISHED  0149
*                                      FOOT PRINT ON                 */
*                                                                  0149
@RF00144 OI    ESTENV,B'10000000'                                  0149
*   /*****************************************************************/
*   /*                                                               */
*   /* SERIALIZE MP COMMAND PROCESSING                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*   DO;                             /* ENQ (QNAME,RNAME,E,3,SYSTEM)  */
*     RESPECIFY                                                    0151
*      (GPR01P) RESTRICTED;                                        0151
*     I056(1:16)=I056(1:16)&&I056(1:16);/* ZERO OUT THE TABLE        */
         XC    I056(16),I056                                       0152
*     I05604(1)=3;                  /* LENGTH OF MINOR RESOURCE NAME */
         MVI   I05604,X'03'                                        0153
*     I05606(1)=ADDR(QNAME);        /* ADDRESS OF MAJOR RESOURCE NAME*/
         LA    @12,@CC02246                                        0154
         ST    @12,I05606                                          0154
*     I05607(1)=ADDR(RNAME);        /* ADDRESS OF MINOR RESOURCE NAME*/
         LA    @12,@CC02244                                        0155
         ST    @12,I05607                                          0155
*     I05603(1)='01000000'B;        /* SET BIT STRING 1 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05603,B'01000000'                                  0156
*     I05605(1)='01000000'B;        /* SET BIT STRING 2 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05605,B'01000000'                                  0157
*     I05603(1,1)='1'B;             /* SET END OF LIST BIT           */
         OI    I05603,B'10000000'                                  0158
*     GPR01P=ADDR(I05602);          /* LOAD LIST ADDRESS             */
         LA    GPR01P,I05602                                       0159
*     SVC(56);                      /* ISSUE ENQ SVC                 */
         SVC   56                                                  0160
*     RESPECIFY                                                    0161
*      (GPR01P) UNRESTRICTED;                                      0161
*   END;                            /* ENQ (QNAME,RNAME,E,3,SYSTEM)  */
*   VRYENQ=ON;                      /* SET ENQ FOOT PRINT ON         */
         OI    VRYENQ,B'01000000'                                  0163
*   SRWALN=CSDCPUOL*208;            /* IEESTPRS REQUIRES 208 BYTES OF
*                                      WORK AREA FOR EACH ALIVE CPU  */
*                                                                  0164
         L     @12,CVTPTR                                          0164
         L     @12,CVTCSD(,@12)                                    0164
         LH    @12,CSDCPUOL(,@12)                                  0164
         MH    @12,@CH02336                                        0164
         ST    @12,SRWALN                                          0164
*   /*****************************************************************/
*   /*                                                               */
*   /* GET FIXED WORK AREA FROM LSQA                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0165
*   DO;                             /* GETMAIN (RC) LV(SRWALN)     0165
*                                      SP(253)                       */
*     RESPECIFY                                                    0166
*      (GPR01F,                                                    0166
*       GPR15F,                                                    0166
*       GPR00F) RESTRICTED;                                        0166
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0167
*     GPR15F=0;                     /* RC-TYPE GETMAIN               */
         SLR   GPR15F,GPR15F                                       0168
*     GPR00F=SRWALN;                /* LENGTH REQUESTED              */
         LR    GPR00F,@12                                          0169
*     GPR15F=GPR15F×((253)*256);    /* SP IN BYTE 2                  */
         O     GPR15F,@CF02449                                     0170
*     SVC(120);                     /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0171
*     RESPECIFY                                                    0172
*      (GPR01F,                                                    0172
*       GPR15F,                                                    0172
*       GPR00F) UNRESTRICTED;                                      0172
*   END;                            /* GETMAIN (RC) LV(SRWALN)     0173
*                                      SP(253)                       */
*                                                                  0173
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER GETMAIN WAS SUCCESSFUL                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0174
*   IF R15^=GOODRC THEN                                            0174
         LTR   R15,R15                                             0174
         BZ    @RF00174                                            0174
*     DO;                                                          0175
*       MSGID=GFMI;                 /* GETMAIN FAILED MSG            */
         MVC   MSGID(2),@CH00059                                   0176
*       GOTO BADSURTN;              /* RETURN CODE 4 EXIT            */
         B     BADSURTN                                            0177
*     END;                                                         0178
*   GTMAIN=ON;                      /* SET GETMAIN FOOT PRINT        */
@RF00174 OI    GTMAIN,B'00100000'                                  0179
*   SRWAAD=R1;                      /* SAVE WORK AREA ADDR           */
         ST    R1,SRWAAD                                           0180
*   R3=SRWALN;                      /* WORK AREA LENGTH IN ODD REG   */
         L     R3,SRWALN                                           0181
*   R15=NULL;                       /* ZERO PAD CHAR                 */
         SLR   R15,R15                                             0182
*   R14=NULL;                       /* ZERO LENGTH                   */
         SLR   R14,R14                                             0183
*   R2=R1;                          /* AREA ADDR IN EVEN REG         */
         LR    R2,R1                                               0184
*   GEN(MVCL R2,R14);               /* ZERO WORK AREA                */
         MVCL R2,R14
*   RETURN CODE(GOODRC);            /* NORMAL RETURN ----------------*/
*                                                                  0186
         SLR   @15,@15                                             0186
         L     @13,4(,@13)                                         0186
         L     @14,12(,@13)                                        0186
         LM    @00,@12,20(@13)                                     0186
         BR    @14                                                 0186
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR RETURN TO MAIN LINE                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0187
*BADSURTN:                                                         0187
*   RETURN CODE(BADRC);             /* ISSUE MSG AND EXIT -----------*/
BADSURTN LA    @15,4                                               0187
         L     @13,4(,@13)                                         0187
         L     @14,12(,@13)                                        0187
         LM    @00,@12,20(@13)                                     0187
         BR    @14                                                 0187
*   END;                            /* END SET UP                    */
*                                                                  0189
*/********************************************************************/
*/*                                                                  */
*/* PAGEFIX SUBROUTINE                                               */
*/*                                                                  */
*/* FUNCTION: - FIX STORAGE TO PREVENT PAGE FAULT WHILE DISABLED     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0189
*PAGEFIX:                                                          0189
*   PROC OPTIONS(SAVE,SAVEAREA);                                   0189
PAGEFIX  STM   @14,@12,12(@13)                                     0189
         ST    @13,@SA00003+4                                      0189
         LA    @12,@SA00003                                        0189
         ST    @12,8(,@13)                                         0189
         LR    @13,@12                                             0189
*   RFY                                                            0190
*    (R4) RSTD;                     /* RESTRICT ADDITIONAL WORK REG  */
*   PGFXECB=''B;                    /* ZERO ECB                      */
         SLR   @12,@12                                             0191
         ST    @12,PGFXECB                                         0191
*   R4=ADDR(PGFXECB);               /* LOAD ADDR ECB                 */
*                                                                  0192
         LA    R4,PGFXECB                                          0192
*   /*****************************************************************/
*   /*                                                               */
*   /* FIX PAGES SHORT TERM                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0193
*   GENERATE REFS(R2,R3,R4) SETS(PGFXECB,R14,R15,R0,R1);           0193
   PGFIX R,A=(2),EA=(3),ECB=(4),LONG=N
*   RFY                                                            0194
*    (R4) UNRSTD;                   /* RELEASE LOCAL WORK REG        */
*                                                                  0194
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF PAGE IS FIXED                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0195
*   IF R15=GOODRC THEN                                             0195
         LTR   R15,R15                                             0195
         BZ    @RT00195                                            0195
*     GOTO GOODPF;                  /* NORMAL RETURN                 */
*                                                                  0196
*   /*****************************************************************/
*   /*                                                               */
*   /* WAIT FOR POST IF AN ERROR WAS NOT ENCOUNTERED                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*   IF R15=8 THEN                                                  0197
         C     R15,@CF00065                                        0197
         BNE   @RF00197                                            0197
*     DO;                                                          0198
*                                                                  0198
*       /*************************************************************/
*       /*                                                           */
*       /* WAIT FOR POSTING OF ECB                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0199
*       GENERATE REFS(PGFXECB) SETS(R0,R1,R14,R15);                0199
*                                                                  0199
          WAIT ECB=PGFXECB         /* WAIT FOR POSTING OF ECB       */
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE WHETHER FIX WAS POSTED                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0200
*       IF PGFXCODE=GOODRC THEN                                    0200
         L     @12,PGFXCODE-1                                      0200
         LA    @12,0(,@12)                                         0200
         LTR   @12,@12                                             0200
         BZ    @RT00200                                            0200
*         GOTO GOODPF;              /* NORMAL RETURN                 */
*     END;                                                         0202
*   BADCODE=R15;                    /* SAVE UNEXPECTED RETURN CODE   */
*                                                                  0203
@RF00197 ST    R15,BADCODE                                         0203
*   /*****************************************************************/
*   /*                                                               */
*   /* PAGE NOT FIXED - TERMINATE PROCESSING ------------            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0204
*   RETURN CODE(BADRC);                                            0204
*                                                                  0204
         LA    @15,4                                               0204
         L     @13,4(,@13)                                         0204
         L     @14,12(,@13)                                        0204
         LM    @00,@12,20(@13)                                     0204
         BR    @14                                                 0204
*   /*****************************************************************/
*   /*                                                               */
*   /* NORMAL RETURN TO CALLER                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0205
*GOODPF:                                                           0205
*   RETURN CODE(GOODRC);            /* NORMAL RETURN -----------     */
GOODPF   SLR   @15,@15                                             0205
         L     @13,4(,@13)                                         0205
         L     @14,12(,@13)                                        0205
         LM    @00,@12,20(@13)                                     0205
         BR    @14                                                 0205
*   END;                            /* END OF PAGEFIX SUBROUTINE     */
*                                                                  0207
*/********************************************************************/
*/*                                                                  */
*/* SWAPWORD SUBROUTINE                                              */
*/*                                                                  */
*/* FUNCTION: - SERIALIZE USE OF THE STOP/RESTART RESOURCE WORD      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0207
*SWAPWORD:                                                         0207
*   PROC OPTIONS(SAVE,SAVEAREA);                                   0207
SWAPWORD STM   @14,@12,12(@13)                                     0207
         ST    @13,@SA00004+4                                      0207
         LA    @12,@SA00004                                        0207
         ST    @12,8(,@13)                                         0207
         LR    @13,@12                                             0207
*   R3=(LCCACPUA*65536)+            /* PLACE CPU LOGICAL ADDR,     0208
*                                      LCCACPUA, IN HIGH ORDER 2   0208
*                                      BYTES OF R3 BY MULTIPLYING IT
*                                      WITH 1 GREATER THAN THE MAX 0208
*                                      NUMBER THAT CAN BE CONTAINED
*                                      IN THE LOW ORDER TWO BYTES    */
*       QS;                         /* EBCDIC QS FOR QUIESCE ID      */
         L     @12,LCCAPTR                                         0208
         LH    R3,LCCACPUA(,@12)                                   0208
         SLA   R3,16                                               0208
         LH    @09,QS                                              0208
         N     @09,@CF02455                                        0208
         ALR   R3,@09                                              0208
*   EXFLIHFG=ON;                    /* LCCARSTR ON FOOT PRINT        */
         OI    EXFLIHFG,B'00000100'                                0209
*   LCCARSTR=ON;                    /* WARN FLIH OF CVTRSTWD SPIN    */
         OI    LCCARSTR(@12),B'00001000'                           0210
*/* ---------------  SWAP LOOP FOR CVTRSTWD  ----------------------- */
*                                                                  0211
*SWAPLOOP:                                                         0211
*   R2=NULL;                        /* CVTRSTWD MUST BE ZERO FOR SWAP*/
SWAPLOOP SLR   R2,R2                                               0211
*   CS(R2,R3,CVTRSTWD);             /* COMPARE AND SWAP              */
*                                                                  0212
         L     @12,CVTPTR                                          0212
         CS    R2,@03,CVTRSTWD(@12)                                0212
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST CONDITION CODE FOR EQUAL ON SWAP                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*   BC(8,GOODSWAP);                 /* ------ NORMAL LOOP EXIT ----- */
*                                                                  0213
         BC    8,GOODSWAP                                          0213
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOW ACR TO PROCESS EMERGENCY SIGNAL OR MALFUNCTION ALERT    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0214
*   GENERATE SETS(R0,R14,R15,R1,WNDWSAV,PSACR0);                   0214
*                                                                  0214
   WINDOW WNDWSAV
*   /*****************************************************************/
*   /*                                                               */
*   /* REPEAT LOOP UNTIL EMS/MFA OR GOOD SWAP OCCURS                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0215
*   IF LCCAACR=OFF THEN                                            0215
         L     @12,LCCAPTR                                         0215
         TM    LCCAACR(@12),B'10000000'                            0215
         BZ    @RT00215                                            0215
*     GOTO SWAPLOOP;                                               0216
*                                                                  0216
*/* ---------------- END OF CVTRSTWD SWAP LOOP ----------------------*/
*                                                                  0217
*   /*****************************************************************/
*   /*                                                               */
*   /* RECEIVE CONTROL WHEN MFA/EMS IS ISSUED BY ANOTHER CPU         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0217
*   R1=PSALCCAV;                    /* LCCA VIRTUAL ADDR             */
*                                                                  0217
         L     R1,PSALCCAV                                         0217
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOW MACHINE CHECK ERROR RECOVERY PROCESSING                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0218
*   GENERATE SETS(R0,R1,R14,R15,CVTBTERM,CVTMAP,LCCACPUS,LCCA,WSACACR,
*       WSAC);                                                     0218
   CALLRTM TYPE=ACRLM,CCA=(1)
*   MSGID=SEMI;                     /* SYSTEM ERROR MSG              */
         MVC   MSGID(2),@CH01001                                   0219
*   RETURN CODE(BADRC);             /* ABNORMAL EXIT --------------- */
*                                                                  0220
         LA    @15,4                                               0220
         L     @13,4(,@13)                                         0220
         L     @14,12(,@13)                                        0220
         LM    @00,@12,20(@13)                                     0220
         BR    @14                                                 0220
*   /*****************************************************************/
*   /*                                                               */
*   /* RECEIVE CONTROL AFTER SUCCESSFUL SWAP                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*GOODSWAP:                                                         0221
*   RSTWD=ON;                       /* CVTRSTWD HELD FOOT PRINT      */
GOODSWAP OI    RSTWD,B'00000010'                                   0221
*   LCCARSTR=OFF;                   /* CVTRSTWD SPIN BIT             */
         L     @12,LCCAPTR                                         0222
         NI    LCCARSTR(@12),B'11110111'                           0222
*   EXFLIHFG=OFF;                   /* FOOT PRINT INDICATING SPIN BIT
*                                      IS ON                         */
         NI    EXFLIHFG,B'11111011'                                0223
*   RETURN CODE(GOODRC);            /* NORMAL EXIT -----------       */
         SLR   @15,@15                                             0224
         L     @13,4(,@13)                                         0224
         L     @14,12(,@13)                                        0224
         LM    @00,@12,20(@13)                                     0224
         BR    @14                                                 0224
*   END;                            /* END SWAPWORD PROC             */
*                                                                  0226
*/********************************************************************/
*/*                                                                  */
*/* STPRSTRT SUBROUTINE                                              */
*/*                                                                  */
*/* FUNCTION: - PROVIDE THE INTERFACE TO THE STOP/RESTART SUBROUTINE */
*/*                                                                  */
*/********************************************************************/
*                                                                  0226
*STPRSTRT:                                                         0226
*   PROC OPTIONS(SAVE,SAVEAREA);                                   0226
STPRSTRT STM   @14,@12,12(@13)                                     0226
         ST    @13,@SA00005+4                                      0226
         LA    @12,@SA00005                                        0226
         ST    @12,8(,@13)                                         0226
         LR    @13,@12                                             0226
*   R0='CCC'X;                      /* WAIT STATE CODE FOR         0227
*                                      STOP-RESTART SUBROUTINE       */
         LA    R0,3276                                             0227
*   R1=SRWAAD;                      /* ADDR OF WORK AREA             */
         L     R1,SRWAAD                                           0228
*   STPRS=ON;                       /* FOOT PRINT INDICATING THAT  0229
*                                      IEESTPRS WAS CALLED           */
*                                                                  0229
         OI    STPRS,B'00000001'                                   0229
*   /*****************************************************************/
*   /*                                                               */
*   /* PLACE CPU'S IN MANUAL STATE - RETURN AFTER RESTART            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0230
*   CALL IEESTPRS;                                                 0230
*                                                                  0230
         L     @12,CVTPTR                                          0230
         L     @15,CVTSTPRS(,@12)                                  0230
         BALR  @14,@15                                             0230
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER IEESTPRS WAS SUCCESSFUL                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0231
*   IF R15=GOODRC THEN                                             0231
         SLR   @12,@12                                             0231
         CR    R15,@12                                             0231
         BNE   @RF00231                                            0231
*     DO;                                                          0232
*       MSGID=QSMI;                 /* QUIESCE SUCCESSFUL MSG        */
         MVC   MSGID(2),@CH00078                                   0233
*       RETURN CODE(GOODRC);        /* NORMAL EXIT ----------        */
         LR    @15,@12                                             0234
         L     @13,4(,@13)                                         0234
         L     @14,12(,@13)                                        0234
         LM    @00,@12,20(@13)                                     0234
         BR    @14                                                 0234
*     END;                                                         0235
*   STPRSRC=R15;                    /* SAVE IEESTPRS RETURN CODE     */
@RF00231 ST    R15,STPRSRC                                         0236
*   MSGID=QUMI;                     /* QUIESCE UNSUCCESSFUL MSG      */
         MVC   MSGID(2),@CH00284                                   0237
*   RETURN CODE(BADRC);             /* ABNORMAL EXIT ----------      */
         LA    @15,4                                               0238
         L     @13,4(,@13)                                         0238
         L     @14,12(,@13)                                        0238
         LM    @00,@12,20(@13)                                     0238
         BR    @14                                                 0238
*   END;                            /* END STPRSTRT PROC             */
*                                                                  0240
*/********************************************************************/
*/*                                                                  */
*/* CLEANUP PROCEDURE                                                */
*/*                                                                  */
*/* FUNCTION: - FREE SYSTEM RESOURCES ALLOCATED TO IEEMPS03          */
*/*           - CALL WTOPROC TO ISSUE A STATUS MSG TO THE OPERATOR   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0240
*CLEANUP:                                                          0240
*   PROC OPTIONS(SAVE,SAVEAREA);                                   0240
CLEANUP  STM   @14,@12,12(@13)                                     0240
         ST    @13,@SA00006+4                                      0240
         LA    @12,@SA00006                                        0240
         ST    @12,8(,@13)                                         0240
         LR    @13,@12                                             0240
*   RFY                                                            0241
*    (R4,                                                          0241
*     R10) RSTD;                    /* RESTRICT ADDITIONAL WORK REG
*                                      AND RESTRICT CODE REG         */
*                                                                  0241
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOOT PRINT FOR RESTART RESOURCE WORD OWNERSHIP           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0242
*   IF RSTWD=ON THEN                                               0242
         TM    RSTWD,B'00000010'                                   0242
         BNO   @RF00242                                            0242
*     DO;                                                          0243
*       CVTRSTWD=NULL;              /* RELEASE RESOURCE              */
         L     @12,CVTPTR                                          0244
         SLR   @05,@05                                             0244
         ST    @05,CVTRSTWD(,@12)                                  0244
*       RSTWD=OFF;                  /* ERASE FOOT PRINT              */
         NI    RSTWD,B'11111101'                                   0245
*     END;                                                         0246
*                                                                  0246
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOOT PRINT FOR LCCARSTR OWNERSHIP                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0247
*   IF EXFLIHFG=ON THEN                                            0247
@RF00242 TM    EXFLIHFG,B'00000100'                                0247
         BNO   @RF00247                                            0247
*     DO;                                                          0248
*       LCCARSTR=OFF;               /* RELEASE CVTRSTWD SPIN BIT     */
         L     @12,LCCAPTR                                         0249
         NI    LCCARSTR(@12),B'11110111'                           0249
*       EXFLIHFG=OFF;               /* ERASE FOOT PRINT              */
         NI    EXFLIHFG,B'11111011'                                0250
*     END;                                                         0251
*                                                                  0251
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOOT PRINT FOR DISP LOCK OWNERSHIP                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0252
*   IF DSABLE=ON THEN                                              0252
@RF00247 TM    DSABLE,B'00001000'                                  0252
         BNO   @RF00252                                            0252
*     DO;                                                          0253
*                                                                  0253
*       /*************************************************************/
*       /*                                                           */
*       /* RELEASE RESOURCES AND ENABLE FOR INTERRUPTS               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0254
*       GENERATE SETS(R0,R1,R14,R15) DEFS(ENABLE) REFS(DISABLE,PSACSTK,
*           PSA,PSALITA,FLC,FRRSCURR,FRRS,FRRSEMP,FRRSELEN);       0254
       SETFRR D,WRKREGS=(14,15)    RELEASE FRR PROTECTION
* RELEASE DISP LOCK IMMEDIATELY AFTER FRR IS RELEASED
ENABLE SETLOCK RELEASE,TYPE=DISP,REGS=USE,                            XX
               RELATED=(CVTRSTWD,IEEMPS03(DISABLE))
*       DSABLE=OFF;                 /* ERASE FOOT PRINT              */
         NI    DSABLE,B'11110111'                                  0255
*     END;                                                         0256
*                                                                  0256
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MSG ACCORDING TO MSGID VALUE - DEFAULT TO SYSTEM ERROR  */
*   /* MSG IF MSGID NOT INITIALIZED                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0257
*   CALL WTOPROC;                                                  0257
*                                                                  0257
@RF00252 BAL   @14,WTOPROC                                         0257
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOOT PRINT FOR OWNERSHIP OF FIXED PAGE FRAMES            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0258
*   IF PGFIX=ON THEN                                               0258
         TM    PGFIX,B'00010000'                                   0258
         BNO   @RF00258                                            0258
*     DO;                                                          0259
*       R2=ADDR(IEEMPS03);          /* CSECT START ADDR              */
         L     R2,@CA00028                                         0260
*       R3=ADDR(MPS03END);          /* CSECT END ADDR                */
         LA    R3,MPS03END                                         0261
*       R4=ADDR(PGFXECB);           /* ECB ADDR                      */
*                                                                  0262
         LA    R4,PGFXECB                                          0262
*       /*************************************************************/
*       /*                                                           */
*       /* UNFIX PAGE FRAME ASSIGNMENT                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0263
*       GENERATE REFS(R3,R2,R4) SETS(R0,R1,R14,R15);               0263
      PGFREE R,A=(2),EA=(3),ECB=(4)
*       R2=R10;                     /* START ADDR OF DYNAMIC AREA    */
         LR    R2,R10                                              0264
*       R3=R2+@SIZDATD;             /* END ADDR OF DYNAMIC STORAGE   */
*                                                                  0265
         LR    R3,R2                                               0265
         AL    R3,@SIZDATD                                         0265
*       /*************************************************************/
*       /*                                                           */
*       /* UNFIX PAGE FRAME ASSIGNMENT                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0266
*       GENERATE REFS(R3,R2,R4) SETS(R0,R1,R14,R15);               0266
      PGFREE R,A=(2),EA=(3),ECB=(4)
*       PGFIX=OFF;                  /* ERASE FOOT PRINT              */
         NI    PGFIX,B'11101111'                                   0267
*     END;                                                         0268
*   RFY                                                            0269
*    (R4,                                                          0269
*     R10) UNRSTD;                  /* FREE WORK REG AND DATA REG    */
*                                                                  0269
@RF00258 DS    0H                                                  0270
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOOT PRINT FOR OWNERSHIP OF LSQA SUBPOOL WORK AREA       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0270
*   IF GTMAIN=ON THEN                                              0270
         TM    GTMAIN,B'00100000'                                  0270
         BNO   @RF00270                                            0270
*     DO;                                                          0271
*       DO;                         /* FREEMAIN(RC)                0272
*                                      LV(SRWALN)A(SRWAAD) SP(253)   */
*         RESPECIFY                                                0273
*          (GPR01F,                                                0273
*           GPR15F,                                                0273
*           GPR00F) RESTRICTED;                                    0273
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0274
*         GPR15F=1;                 /* SET TYPE                      */
         LA    GPR15F,1                                            0275
*         GPR00F=SRWALN;            /* LENGTH REQUESTED              */
         L     GPR00F,SRWALN                                       0276
*         GPR01F=ADDR(SRWAAD);      /* SET REGISTER ONE              */
         LA    GPR01F,SRWAAD                                       0277
*         GPR15F=GPR15F+((253)*256);/* SUBPOOL VALUE                 */
         AL    GPR15F,@CF02449                                     0278
*         SVC(120);                 /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0279
*         R15=GPR15F;                                              0280
*         RESPECIFY                                                0281
*          (GPR01F,                                                0281
*           GPR15F,                                                0281
*           GPR00F) UNRESTRICTED;                                  0281
*       END;                        /* FREEMAIN(RC)                0282
*                                      LV(SRWALN)A(SRWAAD) SP(253)   */
*       GTMAIN=OFF;                 /* ERASE FOOT PRINT              */
         NI    GTMAIN,B'11011111'                                  0283
*     END;                                                         0284
*                                                                  0284
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOOT PRINT FOR ENQUEUE ON SYSZVARY-CPU RESOURCE          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0285
*   IF VRYENQ=ON THEN                                              0285
@RF00270 TM    VRYENQ,B'01000000'                                  0285
         BNO   @RF00285                                            0285
*     DO;                                                          0286
*       DO;                         /* DEQ (QNAME,RNAME,3,SYSTEM)    */
*         I048(1:20)=I048(1:20)&&I048(1:20);                       0288
         XC    I048(20),I048                                       0288
*         RFY                                                      0289
*           GPR01F RESTRICTED;                                     0289
*         I04804(1)='11000000'B;    /* LISTEND BYTE                  */
         MVI   I04804,B'11000000'                                  0290
*         I04805(1)=3;              /* SET LENGTH                    */
         MVI   I04805,X'03'                                        0291
*         I04806(1)='01000000'B;    /* OPTIONS                       */
         MVI   I04806,B'01000000'                                  0292
*         I04807(1)=ADDR(QNAME);    /* QNAME ADDRESS                 */
         LA    @12,@CC02246                                        0293
         ST    @12,I04807                                          0293
*         I04808(1)=ADDR(RNAME);    /* RNAME ADDRESS                 */
         LA    @12,@CC02244                                        0294
         ST    @12,I04808                                          0294
*         GPR01F=ADDR(I04802);                                     0295
         LA    GPR01F,I04802                                       0295
*         SVC(48);                                                 0296
         SVC   48                                                  0296
*         RFY                                                      0297
*           GPR01F UNRESTRICTED;                                   0297
*       END;                        /* DEQ (QNAME,RNAME,3,SYSTEM)    */
*       VRYENQ=OFF;                 /* ERASE FOOT PRINT              */
         NI    VRYENQ,B'10111111'                                  0299
*     END;                                                         0300
*   CHFC=ON;                        /* SET FREE CSCB INDICATOR ON IN
*                                      CSCB                          */
@RF00285 L     @12,CSCBPTR                                         0301
         OI    CHFC(@12),B'00000010'                               0301
*   R2=CSCBPTR;                     /* PTR TO QUIESCE CSCB           */
         LR    R2,@12                                              0302
*   GEN(MGCR (2),CHAIN);            /* FREE CSCB                     */
*                                                                  0303
         MGCR (2),CHAIN
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOOT PRINTS TO DETERMINE WHETHER ESTAE EXIT SHOULD BE    */
*   /* REMOVED                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0304
*   IF(ESTENV=ON)&                  /* ESTAE EXIT ESTABLISHED        */
*       (ESTAEFLG=OFF)              /* ESTAE EXIT NOT IN CONTROL     */
*     THEN                                                         0304
         TM    ESTENV,B'10000000'                                  0304
         BNO   @RF00304                                            0304
         TM    ESTAEFLG,B'00100000'                                0304
         BNZ   @RF00304                                            0304
*     DO;                                                          0305
*       GEN(ESTAE 0);               /* RELEASE ESTAE EXIT            */
         ESTAE 0
*     END;                                                         0307
*   RETURN;                         /* RETURN TO CALLER              */
@EL00006 L     @13,4(,@13)                                         0308
@EF00006 DS    0H                                                  0308
@ER00006 LM    @14,@12,12(@13)                                     0308
         BR    @14                                                 0308
*   END;                            /* END CLEAN UP PROC             */
         B     @EL00006                                            0309
*                                                                  0310
*/********************************************************************/
*/*                                                                  */
*/* WTOPROC SUBROUTINE                                               */
*/*                                                                  */
*/* FUNCTION: ISSUE WTO MESSAGES                                     */
*/*                                                                  */
*/* INPUTS: MSGID - USED AS INDEX TO DETERMINE MSG TEXT              */
*/*         STPRSPC - RETURN CODE APPENDED TO MSG IEE753I            */
*/*                                                                  */
*/* DEPENDENCIES: MAPPING MACRO IEZWPL, BASED ON WPLPTR, MUST BE     */
*/*               INCLUDED IN AN OUTER PROCEDURE                     */
*/*                                                                  */
*/* DEFAULT MSG: IEE751E SYSTEM ERROR...                             */
*/*                                                                  */
*/* RESTRICTIONS: THE MAXIMUM MSG LENGTH IS RESTRICTED TO THE LENGTH */
*/*               OF THE BLANK MSG TEXT DECLARED IN THE STATIC WTO   */
*/*               LIST ( SEE DECLARE FOR SW )                        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0310
*WTOPROC:                                                          0310
*   PROC OPTIONS(SAVE,SAVEAREA);                                   0310
*                                                                  0310
WTOPROC  STM   @14,@12,12(@13)                                     0310
         ST    @13,@SA00007+4                                      0310
         LA    @12,@SA00007                                        0310
         ST    @12,8(,@13)                                         0310
         LR    @13,@12                                             0310
*   /*****************************************************************/
*   /*                                                               */
*   /* DYNAMIC STORAGE AREA                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0311
*   DCL                                                            0311
*     1 WTOWKA BDY(DWORD),                                         0311
*      2 MPLIST CHAR(LENGTH(WPL)),  /* WTO PARM LIST                 */
*      2 PACKED CHAR(2);            /* PACKED DECIMAL EQUIVALENT OF
*                                      IEESTPRS RETURN CODE          */
*                                                                  0311
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZED, STATIC STORAGE CREATE WTO LIST FOR MSG'S UP TO 58*/
*   /* CHAR LONG                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0312
*   GEN DATA DEFS(SW);                                             0312
*                                                                  0312
*   /*****************************************************************/
*   /*                                                               */
*   /* LENGTH OF WTO MESSAGES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0313
*   DCL                                                            0313
*     MSGLNTH(5) PTR(8) INIT(LENGTH(MSG01),LENGTH(MSG02),LENGTH(MSG03),
*         LENGTH(MSG04),LENGTH(MSG05));                            0313
*                                                                  0313
*   /*****************************************************************/
*   /*                                                               */
*   /* ADDRESS OF WTO MESSAGES                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   DCL                                                            0314
*     MSGADDR(5) PTR(31) INIT(ADDR(MSG01),ADDR(MSG02),ADDR(MSG03),ADDR(
*         MSG04),ADDR(MSG05));                                     0314
*                                                                  0314
*   /*****************************************************************/
*   /*                                                               */
*   /* DEFINE DESECT FOR VARIABLE MSG TEXT                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0315
*   DCL                                                            0315
*     1 DMSG03 DEF(WPLTXT),                                        0315
*      2 * CHAR(33),                                               0315
*      2 D3NUM CHAR(2),             /* IEESTPRS RETURN CODE          */
*      2 * CHAR(1);                                                0315
*   DCL                                                            0316
*     SW CHAR(LENGTH(WPL)) STATIC LOCAL GENERATED;/* WTO LIST        */
*   DCL                                                            0317
*     MSGTXT CHAR(*) BASED(MSGADDR(MSGID));/* STATIC MSG TEXT        */
*   DCL                                                            0318
*     BNRY FIXED(8) DEF(STPRSRC) POS(4);/* BINARY RETURN CODE        */
*/********************************************************************/
*/* WTO STATIC MESSAGE TEXT                                          */
*/********************************************************************/
*                                                                  0319
*   DCL                                                            0319
*     MSG01 CHAR(LENGTH('IEE345I QUIESCE AUTHORITY INVALID')) INIT(
*         'IEE345I QUIESCE AUTHORITY INVALID'),/* CNSL NOT AUTHORIZED*/
*     MSG02 CHAR(LENGTH('IEE752I QUIESCE WAS SUCCESSFUL')) INIT(   0319
*         'IEE752I QUIESCE WAS SUCCESSFUL'),/* NORMAL EXIT           */
*     MSG03 CHAR(LENGTH('IEE753I QUIESCE WAS UNSUCCESSFUL(  )')) INIT(
*         'IEE753I QUIESCE WAS UNSUCCESSFUL(  )'),/* BAD IEESTPRS RC */
*     MSG04 CHAR(LENGTH(                                           0319
*         'IEE760E QUIESCE COMMAND REJECTED, STORAGE NOT AVAILABLE'))
*         INIT('IEE760E QUIESCE COMMAND REJECTED, STORAGE NOT AVAILABLE
*         ),                        /* GETMAIN FAILURE               */
*     MSG05 CHAR(LENGTH('IEE751E SYSTEM ERROR ENCOUNTERED')) INIT( 0319
*         'IEE751E SYSTEM ERROR ENCOUNTERED');/* SYSTEM ERROR MESSAGE*/
*   DCL                                                            0320
*     ZSMASK BIT(8) INIT('11110000'B);/* LOGICAL 'AND' MASK TO REMOVE
*                                      ZONED DECIMAL SIGN            */
*                                                                  0320
*   /*****************************************************************/
*   /*                                                               */
*   /* WTO CODE SEGMENT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0321
*   WPLPTR=ADDR(MPLIST);            /* MAP DYNAMIC WTO LIST          */
         LA    @12,MPLIST                                          0321
         ST    @12,WPLPTR                                          0321
*   MPLIST=SW;                      /* COPY STATIC WTO LIST INTO   0322
*                                      DYNAMIC STORAGE               */
         MVC   MPLIST(130),SW                                      0322
*   WPLTXT(1:MSGLNTH(MSGID))=MSGTXT(1:MSGLNTH(MSGID));/* COPY MSG    */
*                                                                  0323
         LH    @09,MSGID                                           0323
         SLR   @08,@08                                             0323
         IC    @08,MSGLNTH-1(@09)                                  0323
         BCTR  @08,0                                               0323
         LR    @07,@09                                             0323
         SLA   @07,2                                               0323
         L     @07,MSGADDR-4(@07)                                  0323
         EX    @08,@SM02465                                        0323
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER VARIABLE FIELD MUST BE MOVED INTO MSG       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0324
*   IF MSGID=QUMI THEN                                             0324
         C     @09,@CF00284                                        0324
         BNE   @RF00324                                            0324
*     DO;                                                          0325
*       CVD(BNRY,PACKED);           /* CONVERT IEESTPRS RETURN CODE
*                                      TO PACKED DECIMAL FORMAT      */
         SLR   @09,@09                                             0326
         IC    @09,BNRY                                            0326
         CVD   @09,@TS00001                                        0326
         MVC   PACKED(2),@TS00001+6                                0326
*       UNPK(D3NUM,PACKED);         /* CONVERT PACKED DECIMAL TO   0327
*                                      ZONED DECIMAL                 */
         UNPK  D3NUM(2,@12),PACKED(2)                              0327
*       D3NUM(2:2)=D3NUM(2:2)×ZSMASK;/* SET SIGN OF LOW ORDER DIGIT
*                                      TO BINARY ONE'S LEAVING EBCDIC
*                                      VALUE IN MSG                  */
         OC    D3NUM+1(1,@12),ZSMASK                               0328
*     END;                                                         0329
*   R0=CONSLID;                     /* CONSOLE ADDR DETERMINED BY  0330
*                                      MAINLINE                      */
*                                                                  0330
@RF00324 SLR   R0,R0                                               0330
         IC    R0,CONSLID                                          0330
*   /*****************************************************************/
*   /*                                                               */
*   /* WRITE MSG TO OPERATOR'S CONSOLE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0331
*   GEN(WTO MF=(E,MPLIST));                                        0331
         WTO MF=(E,MPLIST)
*   RETURN;                         /* RETURN TO CALLER ----------   */
@EL00007 L     @13,4(,@13)                                         0332
@EF00007 DS    0H                                                  0332
@ER00007 LM    @14,@12,12(@13)                                     0332
         BR    @14                                                 0332
*   END;                            /* WTOPROC                       */
*                                                                  0334
*/********************************************************************/
*/*                                                                  */
*/* ESTAE EXIT PROCEDURE                                             */
*/*                                                                  */
*/* FUNCTION: - TRAP ABEND CONDITIONS AND PROVIDE DIAGNOSTIC DUMP    */
*/*           - CALL CLEANUP ROUTINE TO FREE SYSTEM RESOURCES        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0334
*ESTAERTN:                                                         0334
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0334
ESTAERTN DS    0H                                                  0335
*   RFY                                                            0335
*    (R10,                                                         0335
*     R11) RSTD;                    /* RESTRICT DATA AND CODE REGS   */
*   DO;                             /* ENTESTAE (R11,R10)SAVEAREA(EST
*                                      RSAV)ERREXIT(NORTCA)PARMREG(R1
*                                      5)                            */
*                                                                  0336
*     /***************************************************************/
*     /*                                                             */
*     /* ENTRY CODE FOR ESTAE ROUTINE. IF RTCA ALLOCATED THEN RESTORE*/
*     /* CODE AND DATA REGS FROM START OF USERS PARM LIST, AND       */
*     /* ESTABLISH ADDR TO ESTAE SAVE AREA IF REQUIRED. IF NO RTCA   */
*     /* AVAILABLE THEN BRANCH TO ERROR CODE AFTER ESTABLISHING      */
*     /* ADDRESSABILITY                                              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0337
*     GEN(USING *,GPR15P);                                         0337
         USING *,GPR15P
*     GEN(CH    GPR00F,*+26);       /* CHECK IF RTCA ALLOC FAILED    */
         CH    GPR00F,*+26
*     GEN(BNE   *+24);              /* NO,SAVE RTM REGS              */
         BNE   *+24
*     GEN(DROP  GPR15P);            /* DROP LOCAL ADDR               */
         DROP  GPR15P
*     GEN(LR    R15,GPR02P);        /* PTR TO USER PARM LIST         */
         LR    R15,GPR02P
*     GEN(L     R11,00(R15));                                      0342
         L     R11,00(R15)
*     GEN(L     R10,04(R15));                                      0343
         L     R10,04(R15)
*     GEN(LA    GPR13P,ESTRSAV);    /* SET PTR TO ESTAE SA           */
         LA    GPR13P,ESTRSAV
*     GEN(B     NORTCA);            /* BRANCH TO ERROR EXIT          */
         B     NORTCA
*     GEN(DC    H'12');             /* NO RTCA AVAIL RC              */
         DC    H'12'
*     GEN(STM   GPR14P,GPR12F,12(GPR13P));/* GOOD R13, SAVE RTM'S  0347
*                                      REGS                          */
         STM   GPR14P,GPR12F,12(GPR13P)
*     GEN(L     R15,0(GPR01P));     /* PTR TO USER PARM LIST         */
         L     R15,0(GPR01P)
*     GEN(L     R11,00(R15));                                      0349
         L     R11,00(R15)
*     GEN(L     R10,04(R15));                                      0350
         L     R10,04(R15)
*     GEN(ST    GPR13P,ESTRSAV+4);  /* SET PTR TO RTM SA             */
         ST    GPR13P,ESTRSAV+4
*     GEN(LA    GPR13P,ESTRSAV);    /* SET PTR TO ESTAE SA           */
         LA    GPR13P,ESTRSAV
*   END;                            /* ENTESTAE (R11,R10)SAVEAREA(EST
*                                      RSAV)ERREXIT(NORTCA)PARMREG(R1
*                                      5)                            */
*   RFY                                                            0354
*    (R10,                                                         0354
*     R11) UNRSTD;                  /* FREE DATA AND CODE REGS       */
*   RFY                                                            0355
*    (R1) RSTD;                     /* RESTRICT INTERFACE REG        */
*   RFY                                                            0356
*     SDWA BASED(SDWAPTR);          /* ESTAE - FRR WORK AREA         */
*   SDWAPTR=R1;                     /* POINTER TO SDWA               */
         ST    R1,SDWAPTR                                          0357
*   RTCAFLG=ON;                     /* RTCA PROVIDED FOOT PRINT      */
         OI    RTCAFLG,B'10000000'                                 0358
*   SDWAMODN=MODNAM;                /* MODULE NAME                   */
         L     @12,SDWAPTR                                         0359
         MVC   SDWAMODN(8,@12),@CC02237                            0359
*   SDWACSCT=CSECTNAM;              /* CSECT NAME                    */
         MVC   SDWACSCT(8,@12),@CC02237                            0360
*   SDWAREXN=ESTAEID;               /* ESTAE EXIT ROUTINE NAME       */
*                                                                  0361
         MVC   SDWAREXN(8,@12),@CC02240                            0361
*   /*****************************************************************/
*   /*                                                               */
*   /* NO RTCA AVAILABLE TO ESTAE RROUTINE                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0362
*NORTCA:                                                           0362
*   ESTR14=R14;                     /* SAVE RETURN ADDR              */
NORTCA   ST    R14,ESTR14                                          0362
*   ESTAEFLG=ON;                    /* ESTAE ENTERED                 */
         OI    ESTAEFLG,B'00100000'                                0363
*   SLEI=ON;                        /* END OF SDUMP STORAGE LIST     */
         OI    SLEI,B'10000000'                                    0364
*   DUMPBUF=DUMPHDR;                /* MOVE SDUMP HEADER LIST TO   0365
*                                      DYNAMIC STORAGE AREA          */
         MVC   DUMPBUF(80),DUMPHDR                                 0365
*   R3=ADDR(DATAREG1);              /* ADDR OF SDUMP STORAGE LIST    */
*                                                                  0366
         LA    R3,DATAREG1                                         0366
*   /*****************************************************************/
*   /*                                                               */
*   /* DUMP DYNAMIC STORAGE AREA                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0367
*   GEN(SDUMP LIST=(3),MF=(E,DUMPBUF));                            0367
         SDUMP LIST=(3),MF=(E,DUMPBUF)
*   DSABLE=OFF;                     /* LOCKS ARE FREE WHEN ESTAE EXIT
*                                      RECEIVES CONTROL              */
         NI    DSABLE,B'11110111'                                  0368
*   MSGID=SEMI;                     /* SYSTEM ERROR MSG              */
         MVC   MSGID(2),@CH01001                                   0369
*   CALL CLEANUP;                   /* ISSUE MSG AND FREE ALOCATED 0370
*                                      RESOURCES                     */
*                                                                  0370
         BAL   @14,CLEANUP                                         0370
*   /*****************************************************************/
*   /*                                                               */
*   /* EXIT IF RTCA WAS NOT PROVIDED                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0371
*   IF RTCAFLG=OFF THEN                                            0371
         TM    RTCAFLG,B'10000000'                                 0371
         BNZ   @RF00371                                            0371
*     DO;                                                          0372
*       R14=ESTR14;                 /* RETURN ADDR FOR ESTAE EXIT    */
         L     R14,ESTR14                                          0373
*       RETURN CODE(NULL);          /* CONTINUE TERMINATION          */
         SLR   @15,@15                                             0374
@EL00008 DS    0H                                                  0374
@EF00008 DS    0H                                                  0374
@ER00008 BR    @14                                                 0374
*     END;                                                         0375
*   R1=SDWAPTR;                     /* RESTORE PTR FOR SETRP         */
@RF00371 L     R1,SDWAPTR                                          0376
*   RFY                                                            0377
*    (R13) RSTD;                    /* RESTRICT SAVE AREA REG        */
*                                                                  0377
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE REGISTER SAVE AREA POINTER                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*   GENERATE SETS(R13);                                            0378
*                                                                  0378
   L R13,4(R13)
*   /*****************************************************************/
*   /*                                                               */
*   /* WRITE RTCA EXIT -----------------------                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0379
*   DO;                             /* SETRP DUMP(NO)RECORD(YES)RC(0)
*                                      REGS(14,12)                   */
*     RESPECIFY                                                    0380
*      (GPR00P,                                                    0380
*       GPR01P,                                                    0380
*       GPR14P,                                                    0380
*       GPR15P) RSTD;                                              0380
*     GPR01P->SDWARCDE=0;           /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0381
*     GPR01P->SDWARCRD='1'B;        /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0382
*     GPR01P->SDWAREQ='0'B;         /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0383
*     GEN(RETURN (14,12));                                         0384
         RETURN (14,12)
*     RESPECIFY                                                    0385
*      (GPR00P,                                                    0385
*       GPR01P,                                                    0385
*       GPR14P,                                                    0385
*       GPR15P) UNRSTD;                                            0385
*   END;                                                           0386
*   RFY                                                            0387
*    (R13) UNRSTD;                  /* FREE SAVE AREA REG            */
*   RFY                                                            0388
*    (R1) UNRSTD;                   /* RELEASE SDWA POINTER REG      */
*   END;                            /* END ESTAERTN PROC             */
         B     @EL00008                                            0389
*                                                                  0390
*/********************************************************************/
*/*                                                                  */
*/* FUNCTIONAL RECOVERY ROUTINE                                      */
*/*                                                                  */
*/* FUNCTION: - FREE CVTRSTWD AND LCCARSTR IF THEY ARE ARE HELD BY   */
*/*             IEEMPS03 WHEN AN ABEND CONDITION OCCURS              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0390
*FRRRTN:                                                           0390
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0390
*                                                                  0390
FRRRTN   DS    0H                                                  0391
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ADDRESSABILITY                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0391
*   RFY                                                            0391
*    (R1) RSTD;                     /* SDWA POINTER                  */
*   RFY                                                            0392
*     SDWA BASED(R1);               /* USE INPUT REG AS BASE         */
*   GENERATE REFS(R1,R12,R14) SETS(R11,R10,R3,R13,ESTRSAV);        0393
   L  R3,0(R1)                     ADDR OF PARM LIST
   L  R11,0(R3)                  CODE REG AT TOP OF LIST
   L  R10,4(R3)                  DATA REG NEXT IN LIST
   LA R13,ESTRSAV                  LOAD SAVE AREA ADDR
   STM 14,12,12(R13)               SAVE REGISTERS
*   FRRENTRY=ON;                    /* FOOT PRINT                    */
*                                                                  0394
         OI    FRRENTRY,B'01000000'                                0394
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER QUIESCE OWNS RESTART RESOURCE WORD          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0395
*   IF RSTWD=ON                     /* TEST FOOT PRINT               */
*     THEN                                                         0395
         TM    RSTWD,B'00000010'                                   0395
         BNO   @RF00395                                            0395
*     DO;                                                          0396
*       CVTRSTWD=NULL;              /* CLEAR RESOURCE WORD           */
         L     @12,CVTPTR                                          0397
         SLR   @09,@09                                             0397
         ST    @09,CVTRSTWD(,@12)                                  0397
*       RSTWD=OFF;                  /* ZERO FOOT PRINT               */
         NI    RSTWD,B'11111101'                                   0398
*     END;                                                         0399
*                                                                  0399
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER LCCARSTR SPIN BIT IS HELD                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0400
*   IF EXFLIHFG=ON THEN                                            0400
@RF00395 TM    EXFLIHFG,B'00000100'                                0400
         BNO   @RF00400                                            0400
*     DO;                                                          0401
*       LCCARSTR=OFF;               /* CLEAR SPIN INDICATOR          */
         L     @12,LCCAPTR                                         0402
         NI    LCCARSTR(@12),B'11110111'                           0402
*       EXFLIHFG=OFF;               /* ZERO FOOT PRINT               */
         NI    EXFLIHFG,B'11111011'                                0403
*     END;                                                         0404
*   SDWAMODN=MODNAM;                /* MODULE NAME                   */
@RF00400 MVC   SDWAMODN(8,R1),@CC02237                             0405
*   SDWACSCT=CSECTNAM;              /* CSECT NAME                    */
         MVC   SDWACSCT(8,R1),@CC02237                             0406
*   SDWAREXN=FRRID;                 /* FRR ROUTINE NAME              */
*                                                                  0407
         MVI   SDWAREXN+6(R1),C' '                                 0407
         MVI   SDWAREXN+7(R1),C' '                                 0407
         MVC   SDWAREXN(6,R1),@CC02242                             0407
*   /*****************************************************************/
*   /*                                                               */
*   /* WRITE OUT RTCA                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0408
*   DO;                             /* SETRP DUMP(NO)RECORD(YES)RC(0)
*                                      FREELOCK(DISP)REGS(14,12)     */
*     RESPECIFY                                                    0409
*      (GPR00P,                                                    0409
*       GPR01P,                                                    0409
*       GPR14P,                                                    0409
*       GPR15P) RSTD;                                              0409
*     GPR01P->SDWARCDE=0;           /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0410
*     GPR01P->SDWARCRD='1'B;        /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0411
*     GPR01P->SDWAREQ='0'B;         /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0412
*     GEN(RETURN (14,12));                                         0413
         RETURN (14,12)
*     RESPECIFY                                                    0414
*      (GPR00P,                                                    0414
*       GPR01P,                                                    0414
*       GPR14P,                                                    0414
*       GPR15P) UNRSTD;                                            0414
*   END;                                                           0415
*   END;                            /* END FRRRTN PROC               */
@EL00009 DS    0H                                                  0416
@EF00009 DS    0H                                                  0416
@ER00009 BR    @14                                                 0416
*   RFY                                                            0417
*    (R1) UNRSTD;                   /* FREE SDWA BASE REG            */
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0418
*     GPR01F FIXED(31) REG(1),                                     0418
*     GPR12F FIXED(31) REG(12),                                    0418
*     GPR15F FIXED(31) REG(15),                                    0418
*     GPR00P PTR(31) REG(0),                                       0418
*     GPR01P PTR(31) REG(1),                                       0418
*     GPR02P PTR(31) REG(2),                                       0418
*     GPR13P PTR(31) REG(13),                                      0418
*     GPR14P PTR(31) REG(14),                                      0418
*     GPR15P PTR(31) REG(15);                                      0418
*   DCL                                                            0419
*     1 I056 DEF(ILIST) BDY(WORD) CHAR(32767),/* LIST FOR ENQ        */
*       3 I05601 PTR(31),           /* TCB OR ECB ADDRESS            */
*       3 I05602(*) CHAR(12) BDY(WORD),/* ARRAY OF RESOURCE ELEMENTS */
*         5 I05603 BIT(8),          /* BIT FLAGS 1                   */
*         5 I05604 PTR(8),          /* MINOR RESOURCE NAME LENGTH    */
*         5 I05605 BIT(8),          /* BIT FLAGS 2                   */
*         5 I05655 CHAR(1),         /* CONTROL PGM USE               */
*         5 I05606 PTR(31),         /* MAJOR RESOURCE NAME ADDR      */
*         5 I05607 PTR(31);         /* MINOR RESOURCE NAME ADDR      */
*   DCL                                                            0420
*     1 I048 DEF(ILIST) CHAR(32767) BDY(WORD),                     0420
*       3 I04801 PTR(31),           /* TCB ADDR                      */
*       3 I04802(*) CHAR(12) BDY(WORD),                            0420
*         5 I04803 PTR(31),         /* UCB @ IN LAST ENTRY           */
*           7 I04804 BIT(8),        /* FLAGS                         */
*           7 I04805 PTR(8),        /* MINOR RESOURCE NAME LENGTH    */
*           7 I04806 BIT(8),        /* FLAGS                         */
*           7 * CHAR(1),            /* CONTROL PROGRAM USE           */
*         5 I04807 PTR(31),         /* MAJOR RESOURCE NAME @         */
*         5 I04808 PTR(31);         /* MINOR RESOURCE NAME @         */
*   DECLARE                                                        0421
*     ILIST CHAR(20) BDY(DWORD);    /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0422
*     I031F FIXED(31) BASED,                                       0422
*     I031P PTR(31) BASED,                                         0422
*     I015F FIXED(15) BASED,                                       0422
*     I015P PTR(15) BASED,                                         0422
*     I008P PTR(8) BASED,                                          0422
*     I001C CHAR(1) BASED;                                         0422
*                                                                  0422
*   /*****************************************************************/
*   /*                                                               */
*   /* PROVIDE SYMBOLIC REFERENCE TO MODULE END ADDR                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0423
*   GEN DATA DEFS(MPS03END);                                       0423
*   END                             /* END IEEMPS03                  */
*                                                                  0424
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEECUCM )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHACSD  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAESTA )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */
*                                                                  0424
*       ;                                                          0424
         B     @EL00001                                            0424
@DATA    DS    0H
@CH00038 DC    H'1'
@CH00078 DC    H'2'
@CH01001 DC    H'5'
@CH02336 DC    H'208'
@SM02465 MVC   WPLTXT(0,@12),MSGTXT(@07)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    18F
@SA00003 DS    18F
@SA00004 DS    18F
@SA00005 DS    18F
@SA00006 DS    18F
@SA00007 DS    18F
IEEMPS03 CSECT
         DS    0F
@CF00284 DC    F'3'
@CH00284 EQU   @CF00284+2
@CF00059 DC    F'4'
@CH00059 EQU   @CF00059+2
@CF00065 DC    F'8'
@CF02449 DC    F'64768'
@CF02448 DC    F'749568'
@CF02450 DC    F'-4'
@CF02455 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
         DS    0D
@TS00001 DS    CL8
WORKAREA DS    CL242
         ORG   WORKAREA
PGFXECB  DS    FL4
         ORG   PGFXECB
@NM00094 DS    CL1
PGFXCODE DS    CL3
         ORG   WORKAREA+4
@NM00095 DS    FL4
         ORG   @NM00095
CONSLID  DS    BL1
@NM00096 DS    BL1
MSGID    DS    FL2
         ORG   WORKAREA+8
ESTAEPRM DS    CL12
         ORG   ESTAEPRM
CODEREG1 DS    AL4
DATAREG1 DS    AL4
DATAEND  DS    AL4
         ORG   DATAEND
SLEI     DS    BL1
         ORG   WORKAREA+20
ENTRYPT  DS    AL4
RETADD   DS    AL4
ESTAELST DS    CL16
SRWALN   DS    FL4
SRWAAD   DS    AL4
WNDWSAV  DS    AL4
STPRSRC  DS    AL4
BADCODE  DS    AL4
FRRR14   DS    AL4
ESTRSAV  DS    18A
ESTR14   DS    AL4
SDWAPTR  DS    AL4
DUMPBUF  DS    CL80
CSCBPTR  DS    AL4
PSAPTR   DS    AL4
WPLPTR   DS    AL4
FOOTPATH DS    CL2
         ORG   FOOTPATH
ESTENV   DS    BL1
VRYENQ   EQU   FOOTPATH+0
GTMAIN   EQU   FOOTPATH+0
PGFIX    EQU   FOOTPATH+0
DSABLE   EQU   FOOTPATH+0
EXFLIHFG EQU   FOOTPATH+0
RSTWD    EQU   FOOTPATH+0
STPRS    EQU   FOOTPATH+0
RTCAFLG  DS    BL1
FRRENTRY EQU   FOOTPATH+1
ESTAEFLG EQU   FOOTPATH+1
         ORG   WORKAREA+242
         DS    CL6
WTOWKA   DS    CL132
         ORG   WTOWKA
MPLIST   DS    CL130
PACKED   DS    CL2
         ORG   WTOWKA+132
         DS    CL4
ILIST    DS    CL20
IEEMPS03 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA00028 DC    A(IEEMPS03)
         DS    0D
DUMMY    DC    AL4(PATCHLOC)
QS       DS    FL2
         ORG   QS
@NM00093 DC    CL2'QS'
         ORG   QS+2
@CC02237 DC    C'IEEMPS03'
@CC02240 DC    C'ESTAERTN'
@CC02246 DC    C'SYSZVARY'
@CC02242 DC    C'FRRRTN'
@CC02244 DC    C'CPU'
MSG01    DC    CL33'IEE345I QUIESCE AUTHORITY INVALID'
MSG02    DC    CL30'IEE752I QUIESCE WAS SUCCESSFUL'
MSG03    DC    CL36'IEE753I QUIESCE WAS UNSUCCESSFUL(  )'
MSG04    DC    CL55'IEE760E QUIESCE COMMAND REJECTED, STORAGE NOT AVAILC
               ABLE'
MSG05    DC    CL32'IEE751E SYSTEM ERROR ENCOUNTERED'
ZSMASK   DC    B'11110000'
MSGLNTH  DC    AL1(33)
         DC    AL1(30)
         DC    AL1(36)
         DC    AL1(55)
         DC    AL1(32)
         DS    CL1
MSGADDR  DC    AL4(MSG01)
         DC    AL4(MSG02)
         DC    AL4(MSG03)
         DC    AL4(MSG04)
         DC    AL4(MSG05)
IEEMPS03 CSECT
DUMPHDR SDUMP HDR='IEEMPS03 - DUMP OF MAIN WORKAREA',MF=L
IEEMPS03 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
IEEMPS03 CSECT
SW WTO  '                                                          ', XX
               MCSFLAG=(REG0,RESP),DESC=5,MF=L           /* @ZA02122*/
IEEMPS03 CSECT
MPS03END  EQU  *                   END OF IEEMPS03
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEEMPS03 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR14P   EQU   @14
GPR15P   EQU   @15
GPR02P   EQU   @02
GPR12F   EQU   @12
GPR13P   EQU   @13
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSACR0   EQU   PSA+776
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTMAP   EQU   0
CVTBTERM EQU   CVTMAP+52
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTCUCB  EQU   CVTMAP+100
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHFC     EQU   CHSTS
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPKE    EQU   CHAIN+28
CHUCMP   EQU   CHAIN+29
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
UCM2EXT  EQU   0
UCM2STA  EQU   UCM2EXT+8
UCM2SFLG EQU   UCM2STA
UCMPRFX  EQU   0
UCMMCENT EQU   UCMPRFX
UCMSAVE0 EQU   UCMPRFX+4
UCMSFLGS EQU   UCMPRFX+84
UCMSFLG1 EQU   UCMSFLGS
UCMSFLG2 EQU   UCMSFLGS+1
UCMXSA   EQU   UCMPRFX+104
UCMSDS1  EQU   UCMPRFX+156
UCMPRFXP EQU   0
UCM      EQU   0
UCMDECB  EQU   UCM+12
UCMRPYI  EQU   UCM+32
UCMPXB   EQU   UCM+68
UCMMODE  EQU   UCMPXB
UCMVDATA EQU   UCM+72
UCMRSV42 EQU   UCM+300
UCMRSV51 EQU   UCM+301
UCMEIL   EQU   0
UCMRECBA EQU   UCMEIL+24
UCMEXIT  EQU   0
UCMLIST  EQU   0
UCMSTS   EQU   UCMLIST+24
UCMATR   EQU   UCMLIST+25
UCMXA    EQU   UCMLIST+26
UCMID    EQU   UCMXA
UCMAUTH  EQU   UCMLIST+40
UCMAUTHA EQU   UCMAUTH
UCMDISP  EQU   UCMLIST+42
UCMDISP1 EQU   UCMDISP
UCMDISP2 EQU   UCMDISP+1
UCMMSG   EQU   UCMLIST+60
UCMMSG1  EQU   UCMMSG
UCMDEVC  EQU   UCMLIST+63
UCMRCT   EQU   UCMLIST+68
UCMSDS5  EQU   UCMRCT
SDWA     EQU   0
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
LCCA     EQU   0
LCCACPUA EQU   LCCA+4
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCARSTR EQU   LCCASPN1
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCAACR  EQU   LCCADSF1
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
CSD      EQU   0
CSDCPUAL EQU   CSD+8
CSDCPUOL EQU   CSD+10
CSDSCWRD EQU   CSD+12
CSDSCFL1 EQU   CSDSCWRD
CSDSCFL2 EQU   CSDSCWRD+1
CSDSCFL3 EQU   CSDSCWRD+2
CSDSCFL4 EQU   CSDSCWRD+3
CSDFLAGS EQU   CSD+23
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
ESTA     EQU   0
ESTAEXT  EQU   ESTA
ESTAFLG1 EQU   ESTAEXT
ESTAIO   EQU   ESTAFLG1
ESTAFGRS EQU   ESTA+12
ESTAFLG2 EQU   ESTAFGRS
WSAC     EQU   0
WSACACR  EQU   WSAC+16
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
FRLST    EQU   0
RVCODERA EQU   FRLST
RVDATARA EQU   FRLST+4
IEESTPRS EQU   0
MSGTXT   EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
UCM2PTR  EQU   0
CSCB     EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTCSD   EQU   CVTS01+312
CVTRSTWD EQU   CVTS01+368
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTSTPRS EQU   CVTS01+536
CVTGSDA  EQU   CVTS01+600
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHINC    EQU   CHAINS01+132
CHCSYSO  EQU   CHAINS01+134
UCMEXTPT EQU   DUMMY
UCMMCSPT EQU   UCMPRFXP
UCMBASPT EQU   CVTCUCB
UCMEILPT EQU   DUMMY
UCMIECBA EQU   UCMRECBA+4
UCMUEWPT EQU   DUMMY
UCMDVEPT EQU   UCMMCENT
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
LCCAPTR  EQU   PSALCCAV
FRRSPTR  EQU   DUMMY
FRREPTR  EQU   DUMMY
ESTAPTR  EQU   DUMMY
@NM00091 EQU   CHINC
AUTHFLG  EQU   @NM00091
I056     EQU   ILIST
I05602   EQU   I056+4
I05603   EQU   I05602
I05604   EQU   I05602+1
I05605   EQU   I05602+2
I05606   EQU   I05602+4
I05607   EQU   I05602+8
I048     EQU   ILIST
I04802   EQU   I048+4
I04803   EQU   I04802
I04804   EQU   I04803
I04805   EQU   I04803+1
I04806   EQU   I04803+2
I04807   EQU   I04802+4
I04808   EQU   I04802+8
DMSG03   EQU   WPLTXT
D3NUM    EQU   DMSG03+33
BNRY     EQU   STPRSRC+3
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00098 EQU   DMSG03+35
@NM00097 EQU   DMSG03
@NM00099 EQU   I04803+3
I04801   EQU   I048
I05655   EQU   I05602+3
I05601   EQU   I056
@NM00092 EQU   @NM00091
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
UCMIECBP EQU   UCMIECBA+1
UCMIECBF EQU   UCMIECBA
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00006 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLMLLEN EQU   WPLML+1
WPLML0   EQU   WPLML
WPLLINES EQU   WPLLS01+3
WPLAREA  EQU   WPLLS01+2
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTB EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00090 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFA EQU   WPLMCSF1
WPLLGH   EQU   WPL
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
ESTARSVI EQU   ESTAFGRS+1
@NM00089 EQU   ESTAFLG2
ESTABRNT EQU   ESTAFLG2
@NM00088 EQU   ESTAFLG2
ESTAEREC EQU   ESTAFLG2
ESTATERM EQU   ESTAFLG2
@NM00087 EQU   ESTAFLG2
ESTAOWNR EQU   ESTA+8
ESTAPARM EQU   ESTA+4
ESTAEXIT EQU   ESTAEXT+1
ESTAHALT EQU   ESTAIO
ESTANOIO EQU   ESTAIO
ESTASYNC EQU   ESTAFLG1
@NM00086 EQU   ESTAFLG1
ESTAESTA EQU   ESTAFLG1
@NM00085 EQU   ESTAFLG1
ESTASTAR EQU   ESTAFLG1
ESTASTAI EQU   ESTAFLG1
@NM00084 EQU   FRRSFLGS+1
@NM00083 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
@NM00082 EQU   CSD+160
CSDMASK  EQU   CSD+128
CSDUCNT  EQU   CSD+124
CSDTCNT  EQU   CSD+120
CSDGDTOD EQU   CSD+116
CSDGDINT EQU   CSD+112
CSDGDCC  EQU   CSD+108
CSDDDRCT EQU   CSD+106
CSDRV044 EQU   CSD+104
CSDMAFF  EQU   CSD+24
CSDRV038 EQU   CSDFLAGS
CSDRV037 EQU   CSDFLAGS
CSDRV036 EQU   CSDFLAGS
CSDRV035 EQU   CSDFLAGS
CSDRV034 EQU   CSDFLAGS
CSDRV033 EQU   CSDFLAGS
CSDRV032 EQU   CSDFLAGS
CSDMP    EQU   CSDFLAGS
CSDACR   EQU   CSD+22
CSDMF1CP EQU   CSD+20
CSDRV043 EQU   CSD+16
CSDRV030 EQU   CSDSCFL4
CSDRV029 EQU   CSDSCFL4
CSDRV028 EQU   CSDSCFL4
CSDRV027 EQU   CSDSCFL4
CSDRV026 EQU   CSDSCFL4
CSDRV025 EQU   CSDSCFL4
CSDRV024 EQU   CSDSCFL4
CSDRV023 EQU   CSDSCFL4
CSDRV022 EQU   CSDSCFL3
CSDRV021 EQU   CSDSCFL3
CSDRV020 EQU   CSDSCFL3
CSDRV019 EQU   CSDSCFL3
CSDRV018 EQU   CSDSCFL3
CSDRV017 EQU   CSDSCFL3
CSDRV016 EQU   CSDSCFL3
CSDRV015 EQU   CSDSCFL3
CSDRV014 EQU   CSDSCFL2
CSDRV013 EQU   CSDSCFL2
CSDRV012 EQU   CSDSCFL2
CSDRV011 EQU   CSDSCFL2
CSDRV010 EQU   CSDSCFL2
CSDRV009 EQU   CSDSCFL2
CSDRV008 EQU   CSDSCFL2
CSDRV007 EQU   CSDSCFL2
CSDRV006 EQU   CSDSCFL1
CSDRV005 EQU   CSDSCFL1
CSDRV004 EQU   CSDSCFL1
CSDRV003 EQU   CSDSCFL1
CSDRV002 EQU   CSDSCFL1
CSDRV001 EQU   CSDSCFL1
CSDSYSND EQU   CSDSCFL1
CSDRV042 EQU   CSDSCFL1
CSDSAFF  EQU   CSDCPUAL
CSDCHAD  EQU   CSD+6
CSDCPUJS EQU   CSD+4
CSDCSD   EQU   CSD
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAIRTP EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCALCCA EQU   LCCA
@NM00057 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00056 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00055 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00054 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00053 EQU   SDWADDAT+3
@NM00052 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00051 EQU   SDWADDAT+1
@NM00050 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00049 EQU   SDWADUMP+2
@NM00048 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00047 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
@NM00046 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00045 EQU   SDWAACF3
@NM00044 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00043 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00042 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00041 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00040 EQU   SDWA+239
@NM00039 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00038 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00037 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00036 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00035 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00034 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00033 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00032 EQU   SDWAINC2
@NM00031 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00030 EQU   SDWAILC2
@NM00029 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00028 EQU   SDWANXT2
@NM00027 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00026 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00025 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00024 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00023 EQU   SDWAINC1
@NM00022 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00021 EQU   SDWAILC1
@NM00020 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00019 EQU   SDWANXT1
@NM00018 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00017 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00016 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00015 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00014 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00013 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00012 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00011 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00010 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAPARM EQU   SDWA
UCMRCTA  EQU   UCMRCT+1
UCMRSV31 EQU   UCMSDS5
UCMSDS5G EQU   UCMSDS5
UCMSDS5F EQU   UCMSDS5
UCMRSV30 EQU   UCMSDS5
UCMRSV29 EQU   UCMSDS5
UCMSDS5C EQU   UCMSDS5
UCMSDS5B EQU   UCMSDS5
UCMSDS5A EQU   UCMSDS5
UCMMLAST EQU   UCMLIST+64
UCMVHRSN EQU   UCMDEVC
UCMDEVG  EQU   UCMDEVC
UCMDEVF  EQU   UCMDEVC
UCMDEVE  EQU   UCMDEVC
UCMDEVD  EQU   UCMDEVC
UCMDEVCC EQU   UCMDEVC
UCMDEVB  EQU   UCMDEVC
UCMDEVA  EQU   UCMDEVC
UCMXOR   EQU   UCMLIST+62
UCMMSG2  EQU   UCMMSG+1
UCMRSV27 EQU   UCMMSG1
UCMRSV26 EQU   UCMMSG1
UCMMSGF  EQU   UCMMSG1
UCMMSGE  EQU   UCMMSG1
UCMMSGD  EQU   UCMMSG1
UCMMSGC  EQU   UCMMSG1
UCMMSGB  EQU   UCMMSG1
UCMMSGA  EQU   UCMMSG1
UCMCOMPC EQU   UCMLIST+56
UCMWLAST EQU   UCMLIST+52
UCMOAOEN EQU   UCMLIST+48
UCMALTEN EQU   UCMLIST+44
UCMRV007 EQU   UCMDISP2
UCMRV006 EQU   UCMDISP2
UCMRV005 EQU   UCMDISP2
UCMRV004 EQU   UCMDISP2
UCMRV003 EQU   UCMDISP2
UCMDISPK EQU   UCMDISP2
UCMDISPJ EQU   UCMDISP2
UCMDISPI EQU   UCMDISP2
UCMDISPH EQU   UCMDISP1
UCMDISPG EQU   UCMDISP1
UCMDISPF EQU   UCMDISP1
UCMDISPE EQU   UCMDISP1
UCMDISPD EQU   UCMDISP1
UCMDISPC EQU   UCMDISP1
UCMDISPB EQU   UCMDISP1
UCMDISPA EQU   UCMDISP1
UCMAUTHB EQU   UCMAUTH+1
UCMRSV23 EQU   UCMAUTHA
UCMRSV22 EQU   UCMAUTHA
UCMRSV21 EQU   UCMAUTHA
UCMRSV20 EQU   UCMAUTHA
UCMRSV19 EQU   UCMAUTHA
UCMAUTH3 EQU   UCMAUTHA
UCMAUTH2 EQU   UCMAUTHA
UCMAUTH1 EQU   UCMAUTHA
UCMOUTQ  EQU   UCMLIST+36
UCMRSV18 EQU   UCMLIST+34
UCMRTCD  EQU   UCMLIST+32
UCMXB    EQU   UCMLIST+28
@NM00009 EQU   UCMXA+1
UCMRSV17 EQU   UCMATR
UCMRSV16 EQU   UCMATR
UCMAT04  EQU   UCMATR
UCMLF    EQU   UCMATR
UCMUF    EQU   UCMATR
UCMXF    EQU   UCMATR
UCMIF    EQU   UCMATR
UCMOF    EQU   UCMATR
UCMTC    EQU   UCMSTS
UCMTD    EQU   UCMSTS
UCMTB    EQU   UCMSTS
UCMTA    EQU   UCMSTS
UCMCF    EQU   UCMSTS
UCMBF    EQU   UCMSTS
UCMPF    EQU   UCMSTS
UCMAF    EQU   UCMSTS
UCMNAME  EQU   UCMLIST+16
UCMUCB   EQU   UCMLIST+12
UCMDCB   EQU   UCMLIST+8
UCMSBR   EQU   UCMLIST+4
UCMECB   EQU   UCMLIST
UCMTPSAV EQU   UCMEXIT+208
UCMXTSAV EQU   UCMEXIT+136
UCMDESCD EQU   UCMEXIT+132
UCMROUTC EQU   UCMEXIT+128
UCMMSTXT EQU   UCMEXIT
UCMDECBA EQU   UCMEIL+20
UCMOECBA EQU   UCMEIL+16
UCMAECBA EQU   UCMEIL+12
UCMXECBA EQU   UCMEIL+8
UCMNIPTR EQU   UCMEIL+4
UCMRSV15 EQU   UCMEIL+3
UCMRTCT  EQU   UCMEIL+2
UCMRPYL  EQU   UCMEIL+1
@NM00008 EQU   UCMEIL
UCMRSV60 EQU   UCM+302
UCMRSV59 EQU   UCMRSV51
UCMRSV58 EQU   UCMRSV51
UCMRSV57 EQU   UCMRSV51
UCMRSV56 EQU   UCMRSV51
UCMRSV55 EQU   UCMRSV51
UCMRSV54 EQU   UCMRSV51
UCMRSV53 EQU   UCMRSV51
UCMRSV52 EQU   UCMRSV51
UCMRSV50 EQU   UCMRSV42
UCMRSV49 EQU   UCMRSV42
UCMRSV48 EQU   UCMRSV42
UCMRSV47 EQU   UCMRSV42
UCMRSV46 EQU   UCMRSV42
UCMRSV45 EQU   UCMRSV42
UCMRSV44 EQU   UCMRSV42
UCMRSV43 EQU   UCMRSV42
UCMJES3T EQU   UCM+296
UCMWAKUP EQU   UCM+292
UCMFRRAD EQU   UCM+288
UCMSWCH  EQU   UCM+284
UCMASCB  EQU   UCM+280
UCMWQECP EQU   UCM+276
UCMORECP EQU   UCM+272
UCMOECBT EQU   UCM+268
UCMOECBH EQU   UCM+264
UCMWECBT EQU   UCM+260
UCMWECBH EQU   UCM+256
UCMMBEND EQU   UCM+252
UCMCTID  EQU   UCM+250
UCMRSV61 EQU   UCM+248
UCMRP2AD EQU   UCM+244
UCMCRAAD EQU   UCM+240
UCMWQLM1 EQU   UCM+238
UCMRV001 EQU   UCM+237
UCMRQLM1 EQU   UCM+236
UCMMBPTR EQU   UCM+232
UCMMQNXT EQU   UCM+228
UCMMQEND EQU   UCM+224
UCMMQPTR EQU   UCM+220
UCMTRECB EQU   UCM+216
UCMMNECB EQU   UCM+212
UCMMNTR  EQU   UCM+208
UCMR9SV  EQU   UCM+204
UCMSAVE4 EQU   UCM+140
UCMSAVE3 EQU   UCM+84
UCMVEL   EQU   UCMVDATA+8
UCMVEZ   EQU   UCMVDATA+4
UCMVEA   EQU   UCMVDATA
UCMINCR  EQU   UCM+71
UCMMODEL EQU   UCM+70
UCMCORE  EQU   UCM+69
UCMFIX   EQU   UCMMODE
UCMMCS   EQU   UCMMODE
UCMOGCE  EQU   UCMMODE
UCMAMFA  EQU   UCMMODE
UCMRSV14 EQU   UCMMODE
UCMTPUTA EQU   UCMMODE
UCMNOCON EQU   UCMMODE
UCMRSV11 EQU   UCMMODE
UCMPXA   EQU   UCM+64
UCMWQEND EQU   UCM+60
UCMWQNR  EQU   UCM+58
UCMRQNR  EQU   UCM+56
UCMWQECB EQU   UCM+52
UCMRQECB EQU   UCM+48
UCMWQLM  EQU   UCM+46
UCMRQLM  EQU   UCM+45
@NM00007 EQU   UCMRPYI
UCMRPYQ  EQU   UCM+28
UCMWTOQ  EQU   UCM+24
UCMLSTP  EQU   UCM+20
UCMARECB EQU   UCM+16
UCMLECB  EQU   UCMDECB
UCMOECB  EQU   UCM+8
UCMAECB  EQU   UCM+4
UCMXECB  EQU   UCM
UCMGMCNT EQU   UCMPRFX+158
UCMSDS2  EQU   UCMPRFX+157
UCMRSV09 EQU   UCMSDS1
UCMRSV08 EQU   UCMSDS1
UCMRSV07 EQU   UCMSDS1
UCMRSV06 EQU   UCMSDS1
UCMRSV05 EQU   UCMSDS1
UCMRSV04 EQU   UCMSDS1
UCMSDS1B EQU   UCMSDS1
UCMSDS1A EQU   UCMSDS1
UCMDTINT EQU   UCMPRFX+152
UCMLOGAD EQU   UCMPRFX+148
UCMNPECB EQU   UCMPRFX+144
UCMTPPTR EQU   UCMPRFX+140
UCMDOMRT EQU   UCMPRFX+136
UCMRUTCK EQU   UCMPRFX+132
UCMQRTN  EQU   UCMPRFX+128
UCM6WD   EQU   UCMXSA+20
UCM5WD   EQU   UCMXSA+16
UCM4WD   EQU   UCMXSA+12
UCM3WD   EQU   UCMXSA+8
UCM2WD   EQU   UCMXSA+4
UCM1WD   EQU   UCMXSA
UCMRSV03 EQU   UCMPRFX+102
UCMHRDRT EQU   UCMPRFX+100
UCMUEXIT EQU   UCMPRFX+97
UCMXCT   EQU   UCMPRFX+96
UCMHCUCM EQU   UCMPRFX+92
UCMCMID  EQU   UCMPRFX+88
UCMOWTOR EQU   UCMPRFX+86
UCMRSV02 EQU   UCMSFLG2
UCMSYSO  EQU   UCMSFLG2
UCMSYSN  EQU   UCMSFLG2
UCMSYSM  EQU   UCMSFLG2
UCMSYSL  EQU   UCMSFLG2
UCMSYSK  EQU   UCMSFLG2
UCMSYSJ  EQU   UCMSFLG2
UCMSYSI  EQU   UCMSFLG2
UCMRSV35 EQU   UCMSFLG1
UCMSYSG  EQU   UCMSFLG1
UCMSYSF  EQU   UCMSFLG1
UCMSYSE  EQU   UCMSFLG1
UCMSYSD  EQU   UCMSFLG1
UCMSYSC  EQU   UCMSFLG1
UCMSYSB  EQU   UCMSFLG1
UCMRSV01 EQU   UCMSFLG1
UCMWTOX  EQU   UCMPRFX+80
UCMDOME  EQU   UCMPRFX+76
UCMSVR0  EQU   UCMSAVE0+68
UCMSVQ0  EQU   UCMSAVE0+64
UCMSVP0  EQU   UCMSAVE0+60
UCMSVO0  EQU   UCMSAVE0+56
UCMSVN0  EQU   UCMSAVE0+52
UCMSVM0  EQU   UCMSAVE0+48
UCMSVL0  EQU   UCMSAVE0+44
UCMSVK0  EQU   UCMSAVE0+40
UCMSVJ0  EQU   UCMSAVE0+36
UCMSVI0  EQU   UCMSAVE0+32
UCMSVH0  EQU   UCMSAVE0+28
UCMSVG0  EQU   UCMSAVE0+24
UCMSVF0  EQU   UCMSAVE0+20
UCMSVE0  EQU   UCMSAVE0+16
UCMSVD0  EQU   UCMSAVE0+12
UCMSVC0  EQU   UCMSAVE0+8
UCMSVB0  EQU   UCMSAVE0+4
UCMSVA0  EQU   UCMSAVE0
UCM2PAD  EQU   UCM2EXT+12
UCM2STAA EQU   UCM2STA+1
UCMRV008 EQU   UCM2SFLG
UCMRSV34 EQU   UCM2SFLG
UCMRSV33 EQU   UCM2SFLG
UCMRSV32 EQU   UCM2SFLG
UCM2DSTR EQU   UCM2SFLG
UCM2DTAK EQU   UCM2SFLG
UCM2SENT EQU   UCM2SFLG
UCM2SDWA EQU   UCM2SFLG
UCM2PST  EQU   UCM2EXT+4
UCM2RID  EQU   UCM2EXT+2
UCM2WID  EQU   UCM2EXT
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00005 EQU   CHSHORT+84
@NM00004 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00003 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPARM   EQU   CHKEY
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00081 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00080 EQU   PSA+1040
PSAUSEND EQU   PSA+1040
PSARV062 EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00079 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00078 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00077 EQU   FLCFSA
@NM00076 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00075 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00074 EQU   FLCIOA
@NM00073 EQU   FLCMCLA+15
@NM00072 EQU   FLCMCLA+14
@NM00071 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00070 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00069 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00068 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00067 EQU   FLCPER
@NM00066 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00065 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00064 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00063 EQU   FLCPIILC
@NM00062 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00061 EQU   FLCSVILC
@NM00060 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00059 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00058 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00098 EQU   EXIT
@RT00133 EQU   EXIT
@RT00195 EQU   GOODPF
@RT00200 EQU   GOODPF
@RT00215 EQU   SWAPLOOP
@RF00304 EQU   @EL00006
@ENDDATA EQU   *
         END   IEEMPS03,(C'PLS2102',0701,75294)
