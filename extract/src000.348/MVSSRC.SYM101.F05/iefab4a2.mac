         TITLE 'IEFAB4A2 - DISPOSITION PROCESSING CONTROL              *
                        '
IEFAB4A2 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(24)                                          01S0001
         DC    C'IEFAB4A2 78054  UZ16857 '                      01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  LA    @11,4095(,@12)                                   01S0001
         USING @PSTART,@12                                      01S0001
         USING @PSTART+4095,@11                                 01S0001
         L     @00,@SIZDATD                                     01S0001
         GSPACE   R,LV=(0)
         LR    @10,@01                                          01S0001
         USING @DATD,@10                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @10,8(,@13)                                      01S0001
         LR    @13,@10                                          01S0001
         MVC   @PC00001(24),0(@01)                              01S0001
*RETCODE = ZERO;                       /*INIT RETURN CODE FIELD      */
         SLR   RETCODE,RETCODE                                  01S0086
*CATRETCD = ZERO;                      /*INIT STEPCAT RTNCD  @ZA06981*/
         SLR   @08,@08                                          01S0087
         ST    @08,CATRETCD                                     01S0087
*CMRBPTR = FRBPTR;                     /*SET PTR TO FIRST REQ BLOCK  */
         L     @02,@PC00001+4                                   01S0088
         L     CMRBPTR,FRBPTR(,@02)                             01S0088
*INITIOSW = OFF;                       /*ETIOT HASNT BEEN INITIALIZED*/
         NI    INITIOSW,B'11111011'                             01S0089
*DO WHILE (CMRBPTR ^= ZERO);           /*PROCESS ALL REQUESTS ON CHN */
         B     @DE00090                                         01S0090
@DL00090 DS    0H                                               01S0091
*  SIOTPTR = CMSIOPTR;                 /*SET PTR TO SIOT OF REQUEST  */
         L     @08,CMSIOPTR(,CMRBPTR)                           01S0091
         ST    @08,SIOTPTR                                      01S0091
*  DSABPTR = SIOTETIO;                 /*SET PTR TO DSAB, IF ANY     */
         MVC   DSABPTR(4),SIOTETIO(@08)                         01S0092
*  IF CMNODISP = NO THEN               /*DISP PROCESSING REQUESTED?  */
         TM    CMNODISP(CMRBPTR),B'10000000'                    01S0093
         BNZ   @RF00093                                         01S0093
*    DO;                               /*YES, SEE IF REQUIRED        */
*      IF SIOTSSDS = NO THEN           /*SUBSYSTEM DATA SET?         */
         TM    SIOTSSDS(@08),B'10000000'                        01S0095
         BNZ   @RF00095                                         01S0095
*        DO;                           /*NO,CONTINUE SET UP & TEST   */
*          IF SIOUCBAD ^= ZERO THEN    /*DEVICE ALLOC'D TO REQ?      */
         SLR   @02,@02                                          01S0097
         ICM   @02,7,SIOUCBAD(@08)                              01S0097
         LTR   @02,@02                                          01S0097
         BZ    @RF00097                                         01S0097
*            DO;                       /*YES,MOVE DEV TYPE TO SIOT   */
*              SIOTDEVT = SIOUCBAD -> UCBTYP;                   01S0099
         MVC   SIOTDEVT(4,@08),UCBTYP(@02)                      01S0099
*              IF SIO3DACC = YES THEN   /*DIRECT ACCESS DEVICE       */
         TM    SIO3DACC(@08),B'00100000'                        01S0100
         BNO   @RF00100                                         01S0100
*                DO;                   /*TURN OFF OPTION BITS@YM05476*/
*                  SIOUBYT2 = SIOUBYT2 & SHPOWMSK;              01S0102
         NI    SIOUBYT2(@08),X'DC'                              01S0102
*                                      /*SHARED FILE AND ALTERNATE
*                                        POWER BITS OFF      @YM05477*/
*                  IF SIOUBYT4 = DA3340 THEN /*IF A 3340     @YM05476*/
         CLI   SIOUBYT4(@08),X'0A'                              01S0103
         BNE   @RF00103                                         01S0103
*                    SIOUBYT2 = SIOUBYT2 & RPSMASK;             01S0104
         NI    SIOUBYT2(@08),X'EF'                              01S0104
*                                      /*RPS BIT OFF ALSO    @YM05476*/
*                END;                  /*END IF DIRECT ACCESS@YM05476*/
@RF00103 DS    0H                                               01S0106
*              IF SIO3TAPE = YES THEN  /*TAPE DEVICE         @YM05477*/
@RF00100 L     @08,SIOTPTR                                      01S0106
         TM    SIO3TAPE(@08),B'10000000'                        01S0106
         BNO   @RF00106                                         01S0106
*                SIOUBYT2 = SIOUBYT2 & OPTIONS;                 01S0107
         NI    SIOUBYT2(@08),X'F4'                              01S0107
*                                      /*OPTIONS BITS OFF    @ZA04104*/
*              IF SIO3UREC = YES THEN  /*UNIT RECORD DEVICE  @YM05476*/
@RF00106 L     @08,SIOTPTR                                      01S0108
         TM    SIO3UREC(@08),B'00001000'                        01S0108
         BNO   @RF00108                                         01S0108
*                IF SIOUBYT4 ^= UR3211 THEN /*NOT A 3211     @YM05476*/
         CLI   SIOUBYT4(@08),X'09'                              01S0109
         BE    @RF00109                                         01S0109
*                  SIOUBYT2 = OPTSOFF; /*ALL OPT BITS OFF    @YM05476*/
         MVI   SIOUBYT2(@08),X'00'                              01S0110
*                ELSE                  /*3211 UNIT RECORD DEV@YM05476*/
*                  SIOUBYT2 = SIOUBYT2 & UCSOPMSK;              01S0111
         B     @RC00109                                         01S0111
@RF00109 L     @08,SIOTPTR                                      01S0111
         NI    SIOUBYT2(@08),X'80'                              01S0111
*                                      /*ALLOW UCS BIT       @YM05476*/
*              IF SIO3DISP = YES THEN  /*GRAPHICS DEVICE     @YM05476*/
@RC00109 DS    0H                                               01S0112
@RF00108 L     @08,SIOTPTR                                      01S0112
         TM    SIO3DISP(@08),B'00010000'                        01S0112
         BNO   @RF00112                                         01S0112
*                SIOUBYT2 = OPTSOFF;   /*ALL OPTION BITS OFF @YM05476*/
         MVI   SIOUBYT2(@08),X'00'                              01S0113
*            END;                                               01S0114
@RF00112 DS    0H                                               01S0115
*          JFCBPTR = SJFCBPTR;         /*SET PTR TO JFCB FOR REQUEST */
@RF00097 L     @08,SIOTPTR                                      01S0115
         L     @02,SJFCBPTR(,@08)                               01S0115
         ST    @02,JFCBPTR                                      01S0115
*          IF JFCBNVOL ^= ZERO &        /*VOL SERS EXIST      @ZA10127*
*             ((SIO3DACC = YES &        /*D.A. DATA SET               *
*               ((SCTSNEW = YES &                               01S0116
*               SIODADSM = YES) ×       /*DADSM SUCCESSFUL IF NEW     *
*               SCTSNEW = NO)) ×        /*OLD D.A. DATA SET           *
*               (SIO3TAPE = YES &       /*IS A TAPE DATA SET          *
*                 JFCBVOLS(ONE)^=SCRTAPE) × /*NOT UNOPENED SCRATCH TAPE
*                                                             @YM06419*
*                 (SIO3TAPE = NO &      /*NOT TAPE AND                *
*                  SIO3DACC = NO &      /*NOT D.A. AND                *
*                  DSABPTR ^= ZERO)) THEN/*                     01S0116
*                                        SEE IF DISP PROSSING NEEDED */
         CLI   JFCBNVOL(@02),0                                  01S0116
         BE    @RF00116                                         01S0116
         TM    SIO3DACC(@08),B'00100000'                        01S0116
         BNO   @GL00003                                         01S0116
         TM    SCTSNEW(@08),B'00000100'                         01S0116
         BNO   @GL00005                                         01S0116
         TM    SIODADSM(@08),B'00000100'                        01S0116
         BO    @RT00116                                         01S0116
@GL00005 L     @08,SIOTPTR                                      01S0116
         TM    SCTSNEW(@08),B'00000100'                         01S0116
         BZ    @RT00116                                         01S0116
@GL00003 L     @08,SIOTPTR                                      01S0116
         TM    SIO3TAPE(@08),B'10000000'                        01S0116
         BNO   @GL00002                                         01S0116
         L     @08,JFCBPTR                                      01S0116
         CLI   JFCBVOLS(@08),X'FF'                              01S0116
         BNE   @RT00116                                         01S0116
@GL00002 L     @08,SIOTPTR                                      01S0116
         TM    SIO3TAPE(@08),B'10100000'                        01S0116
         BNZ   @RF00116                                         01S0116
         ICM   @08,15,DSABPTR                                   01S0116
         BZ    @RF00116                                         01S0116
@RT00116 DS    0H                                               01S0117
*            DO;                       /*DISP PROCESSING IS REQUIRED */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - PRCSDISP                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - PROCESS DISPOSITIONS                          */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS:                 */
*/*     .DETERMINE THE DISPOSITION PROCESSOR TO BE INVOKED           */
*/*     .SET UP THE PROCESSOR INTERFACE                              */
*/*     .INVOKE THE REQUIRED PROCESSOR                               */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     .DETERMINING THE DISPOSITION                                 */
*/*      THE REQUEST BLOCK BEING PROCESSED INDICATES WHETHER NORMAL, */
*/*      CONDITIONAL, OR AN OVERRIDING DISPOSITION IS TO BE USED. IF */
*/*      THE CONDITIONAL DISPOSITION IS TO BE USED, BUT NONE WAS     */
*/*      SPECIFIED, THE NORMAL DISPOSITION WILL BE PROCESSED. THE    */
*/*      DISPOSITION BITS ARE MOVED FROM THE SIOT OR REQUEST BLOCK   */
*/*      INTO A COMMON WORK BYTE, DISPRCR, FOR FUTURE USE.           */
*/*     .SETTING UP THE INTERFACE                                    */
*/*      THE MAJOR PART OF THE INTERFACE IS THE VOLUME LIST. IT IS   */
*/*      THE REQUIRED INPUT TO DADSM SCRATCH AND TO CATALOG MANAGE-  */
*/*      MENT. IF AN ETIOT DOESN'T EXIST, A DUMMY ETIOT MUST BE      */
*/*      CREATED, IF A DIRECT ACCESS DATA SET IS TO BE DELETED,      */
*/*      BECAUSE SCRATCH USES THE ETIOT. THE VOL                     */
*/*      LIST IS ALSO USED BY THE NORMAL MESSAGE ROUTINE,            */
*/*      IEFAB4B0, TO CONSTRUCT THE VOL SERS LINE(S) OF THE DISPOSI- */
*/*      TION MESSAGES. IF CORE IS NOT AVAILABLE FOR THIS LIST THE   */
*/*      FUNCTIONS THAT REQUIRE IT (CATLG,RECATLG AND SCRATCH) CAN   */
*/*      NOT BE PERFORMED. FOR DIRECT ACCESS DELETE, IF A            */
*/*      DUMMY ETIOT MUST BE BUILT, BUT A                            */
*/*      FAILURE OCCURS BUILDING THE DUMMY ETIOT, SCRATCH            */
*/*      CANNOT BE PERFORMED. FOR THESE DATA SETS A 'NOT             */
*/*      (DISP) 5' MSG IS ISSUED VIA AN ALTERNATE MSG ROUTINE WHICH  */
*/*      USES THE JFCB/JFCBX TO CONSTRUCT THE VOL SERS LINE(S) OF    */
*/*      THE MESSAGE. (SEE NVLSTSPC FOR DETAILS OF PROCESSING        */
*/*      DISPOSITIONS WITHOUT A VOLUME LIST.)                        */
*/*     .INVOKING THE REQUIRED PROCESSOR                             */
*/*      THE PROCESSOR IS DETERMINED FROM THE DISPRCR BYTE. THE      */
*/*      PROCESSOR WILL PERFORM THE REQUIRED FUNCTION AND, IF RE-    */
*/*      QUIRED, INVOKE THE NORMAL MESSAGE ROUTINE TO ISSUE THE      */
*/*      APPROPRIATE DISPOSITION MESSAGES.                           */
*/*     .CLEAN UP INTERFACE                                          */
*/*      IF A VOLUME LIST WERE BUILT IT IS FREED. IF A DUMMY ETIOT   */
*/*      ENTRY WERE ALLOCATED, IEFAB4A3 IS CALLED TO UNALLOCATE IT.  */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     REQUEST BLOCK BEING PROCESSED                                */
*/*       CMRBBYT1 OF RB CONTAINS INDICATOR FOR DISP TO BE USED      */
*/*         AND AN INDICATOR TO DETERMINE VALIDITY OF SIOUCBAD       */
*/*       CMODISP CONTAINS OVERRIDE DISP, IF REQUIRED                */
*/*     SIOT                                                         */
*/*       SCTSDISP FIELD CONTAINS NORMAL DISP                        */
*/*       SIOTALTD CONTAINS CONDITIONAL DISPOSITION                  */
*/*       SCTUTYPE CONTAINS DEVICE TYPE ALLOCATED TO THE REQUEST     */
*/*       SIOUCBAD CONTAINS ADDR OF A UCB ALLOCATED TO THE REQUEST   */
*/*     JFCB                                                         */
*/*       JFCBNVOL - NO. VOLUMES FOR DATA SET                @ZA10127*/
*/*       JFCBVOLS - FIRST FIVE VOL SERS OF DATA SET                 */
*/*       JFCDEN - TAPE DENSITY AT WHICH DATA SET RECORDED           */
*/*     JFCBX(S)                                                     */
*/*       JFCBXVOL - UP TO 15 VOL SERS PER JFCBX                     */
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - DISPOSITIONS PROCESSED NORMALLY                    */
*/*     OUTPUT -                                                     */
*/*       DISPOSITIONS PROCESSED AND MESSAGES ISSUED                 */
*/*       REASON CODE = 0                                            */
*/*     RETURN CODES -                                               */
*/*       RETCODE = 0                                                */
*/*       CMRETCDE = RETURN CODE FROM SCRATCH/CATALOG MANAGEMENT     */
*/*                                                                  */
*/*   CONDITION - NO CORE FOR VOLUME LIST, OR A DUMMY ETIOT ENTRY    */
*/*               COULDN'T BE ALLOCATED (DIRECT ACCESS DELETE ONLY)  */
*/*     OUTPUT -                                                     */
*/*       DISPOSITION MESSAGES ISSUED                                */
*/*       DATA SETS KEPT,PASSED OR UNCATALOGED                       */
*/*       TAPE DATA SETS DELETED                                     */
*/*     RETURN CODES -                                               */
*/*       RETCODE = 4                                                */
*/*       CMRETCODE = 0,DISPOSITION PROCESS SUCCESSFULLY             */
*/*                   5,DISP NOT PROCESSED BECAUSE NO VOL LIST       */
*/*                   OTHER, CATLG MGMNT RETURN CODE (FROM UNCATLG)  */
*/*                                                                  */
*/********************************************************************/
*IF CMORDISP = YES THEN                /*OVERRIDE DISP TO BE USED    */
         TM    CMORDISP(CMRBPTR),B'00010000'                    02S0118
         BNO   @RF00118                                         02S0118
*  DISPRCR = CMODISP;                  /*MOVE FROM REQ BLOCK         */
         MVC   DISPRCR(1),CMODISP(CMRBPTR)                      02S0119
*ELSE                                                           02S0120
*  IF CMNMDISP = ON            /*USE NORMAL DISP REQUESTED   */ 02S0120
*    × (CMCNDISP = ON          /*USE CONDL DISP REQUESTED    */ 02S0120
*       & SIOTALTD(5:8) = NOCNDISP) THEN/*                      02S0120
*                                        NORMAL REQ'D OR DEFAULTED   */
         B     @RC00118                                         02S0120
@RF00118 TM    CMNMDISP(CMRBPTR),B'01000000'                    02S0120
         BO    @RT00120                                         02S0120
         TM    CMCNDISP(CMRBPTR),B'00100000'                    02S0120
         BNO   @RF00120                                         02S0120
         L     @08,SIOTPTR                                      02S0120
         TM    SIOTALTD(@08),B'00001111'                        02S0120
         BNZ   @RF00120                                         02S0120
@RT00120 DS    0H                                               02S0121
*    DISPRCR = SCTSDISP & NMLDMSK;     /*GET NORMAL DISP FROM SIOT   */
         L     @08,SIOTPTR                                      02S0121
         MVC   DISPRCR(1),SCTSDISP(@08)                         02S0121
         NI    DISPRCR,B'00011111'                              02S0121
*  ELSE                                /*NORMAL DISP NOT REQ'D       */
*    DISPRCR = SIOTALTD & CNDLDMSK;    /*GET COND'L DISP FROM SIOT   */
         B     @RC00120                                         02S0122
@RF00120 L     @08,SIOTPTR                                      02S0122
         MVC   DISPRCR(1),SIOTALTD(@08)                         02S0122
         NI    DISPRCR,B'00001111'                              02S0122
*ALETIOSW = OFF;                       /*ETIOT ENTRY NOT YET ALLOCD
*                                        FOR THIS REQUEST.           */
@RC00120 DS    0H                                               02S0123
@RC00118 NI    ALETIOSW,B'11111101'                             02S0123
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - BDSPINT                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - BUILD DISP PROCESSING INTERFACE               */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS:                 */
*/*     .SETS UP INPUT FOR THE MESSAGE ROUTINE                       */
*/*     .SETS UP INPUT FOR DISPOSITION PROCESSORS                    */
*/*     .SETS UP INPUT FOR UNIT UNALLOCATION                         */
*/*     .BUILDS DUMMY ETIOT IF NEEDED FOR THIS REQUEST.              */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     .INTERFACE TO MESSAGE ROUTINES                               */
*/*      THE MESSAGE ID IS SET FOR THE NORMAL DISPOSITION MESSAGE.   */
*/*      A DISPOSITION ID IS DETERMINED BY THE POSITION OF THE       */
*/*      DISPOSITION BIT WITHIN THE DISPRCR BYTE. IF THE DISPOSITION */
*/*      IS CATALOG, THE ROUTINE WILL DETERMINE IF THE CATALOG OR    */
*/*      RECATALOG MESSAGE IS TO BE ISSUED AND WILL RESET THE DISP   */
*/*      ID IF NECESSARY. IF AN ALIAS NAME WAS SPECIFIED,    @YM07214*/
*/*      A POINTER TO IT IS SET UP FOR THE MSG(S).           @YM07214*/
*/*                                                                  */
*/*     .INTERFACE TO DISP PROCESSORS                                */
*/*      THE NECESSARY FUNCTION MAP BITS ARE SET IN EITHER A COMMON  */
*/*      BYTE OF THE MAP STRUCTURE, OR IN A BYTE FOR A SPECIFIC      */
*/*      PROCESSOR. A VOLUME LIST IS BUILT WHICH CONTAINS ALL THE    */
*/*      VOLUME SERIAL NUMBERS AND THE DEVICE TYPE OF THE DATA SET.  */
*/*      IF AN ALIAS DSN WAS SPECIFIED, A POINTER TO IT IS   @YM07214*/
*/*      SET UP FOR POSSIBLE USE IN RECATALOG AND UNCATALOG  @YM07214*/
*/*      OPERATIONS, OTHERWISE, A POINTER TO THE 'REAL'      @YM07214*/
*/*      DSN IS SET UP. THE 'REAL' DSN IS ALWAYS SET UP FOR  @YM07214*/
*/*      POSSIBLE USE IN SCRATCH AND CATALOG OPERATIONS.     @YM07214*/
*/*                                                                  */
*/*     .INTERFACE TO UNIT UNALLOCATION                              */
*/*      IF THE CURRENT REQUEST IS ONE WHICH                         */
*/*      SHOULD BE TREATED AS PRIVATE BY UNIT UNALLOCATION, AN       */
*/*      INDICATOR OF THE CONDITION IS SET IN THE COMMON UNALLOCATION*/
*/*      REQUEST BLOCK                                               */
*/*                                                                  */
*/*     .BUILD DUMMY ETIOT                                           */
*/*      FOR DIRECT ACCESS DELETE A DUMMY ETIOT AND/OR       @ZA00061*/
*/*      ETIOT ENTRY MAY (AS INDICATED IN THE INPUT FUNCTION @ZA00061*/
*/*      MAP) HAVE TO BE CREATED.                                    */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     CMUNFMAP - COMMON UNALLOC FUNCTION MAP                       */
*/*       CMPUBPRV - TAPE VOLUMES WITH OVERIDE DISP = KEEP           */
*/*                  TO BE TREATED AS PRIVATE                        */
*/*       CMUNRB - COMMON UNALLOC REQUEST BLOCK                      */
*/*         CMCNDISP- PROCESS CONDITIONAL DISP                       */
*/*         CMORDISP- PROCESS OVERIDE DISP                           */
*/*     DISPRCR - INDICATES DISPOSITION TO BE PROCESSED              */
*/*     DSPFMAP - INPUT FUNCTION MAP                                 */
*/*       INDICATES WHETHER MESSAGES ARE TO BE ISSUED AND THE        */
*/*       RECEIVER                                                   */
*/*     SIOT                                                         */
*/*       SCTUTYPE - DEVICE TYPE ALLOCATED TO DATA SET               */
*/*       SCTBYT3 - CONTAINS DATA SET STATUS INDICATORS              */
*/*     JFCB                                                         */
*/*       JFCBDSNM - DATA SET NAME                                   */
*/*       JFCCAT - DATA SET ALREADY CATALOGED                        */
*/*       JFCVSL - DATA SET VOL SER LIST HAS BEEN UPDATED            */
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - INTERFACES COMPLETED                               */
*/*     OUTPUT -                                                     */
*/*       CMUNRB                                                     */
*/*         CMSETPRV - REQUEST TO BE TREATED AS PRIVATE              */
*/*       DEVTYPE - DEVICE TYPE - IF RECATLG, OBTAINED FROM JFCBX.   */
*/*                 OTHERWISE OBTAINED FROM SIOT.            @YM03582*/
*/*       DUMMY ETIOT ENTRY (ONLY IF NECESSARY)                      */
*/*       PROCESSOR FUNCTION MAP                                     */
*/*       REASON CODE - 0                                            */
*/*       PROCESSOR DATA                                             */
*/*       RETCODE = 0                                                */
*/*   CONDITION - NO CORE FOR VOLUME LIST OR FAILURE ATTEMPTING      */
*/*               TO ALLOCATE DUMMY ETIOT ENTRY                      */
*/*       REASON CODE - 0                                            */
*/*     RETURN CODES -                                               */
*/*       RETCODE = 4                                                */
*/*   CONDITION - NO CORE FOR VOLUME LIST                            */
*/*     OUTPUT                                                       */
*/*       PROCESSOR FUNCTION MAP                                     */
*/*       PROCESSOR DATA                                             */
*/*     RETURN CODES -                                               */
*/*       RETCODE = 4                                                */
*/********************************************************************/
*AIRTCODE = ZERO;                      /*INIT ALT RET CODE   @YM06071*/
         SLR   @08,@08                                          03S0124
         ST    @08,AIRTCODE                                     03S0124
*IRETCODE = ZERO;                      /*INIT INFO'L RETURN CODE     */
         ST    @08,IRETCODE                                     03S0125
*PRCSDATA = PRCSDATA && PRCSDATA;      /*CLEAR PROCESSOR DATA AREA   */
         XC    PRCSDATA(40),PRCSDATA                            03S0126
*PRCSFMAP = PRCSFMAP && PRCSFMAP;      /*CLEAR PROCESSOR FCN MAPS    */
         XC    PRCSFMAP(6),PRCSFMAP                             03S0127
*IF DSPIMSGS = ON THEN                 /*ISSUE MSGS?                 */
         L     @08,@PC00001                                     03S0128
         TM    DSPIMSGS(@08),B'10000000'                        03S0128
         BNO   @RF00128                                         03S0128
*   PRCRMSGS = ON;                     /*SET IN ALLPRMAP             */
         OI    PRCRMSGS,B'10000000'                             03S0129
*IF DSPNEMSG = ON THEN                 /*NO ERROR MSGS?              */
@RF00128 L     @08,@PC00001                                     03S0130
         TM    DSPNEMSG(@08),B'00100000'                        03S0130
         BNO   @RF00130                                         03S0130
*   PRCREMSG = ON;                     /*SET IN ALLPRMAP             */
         OI    PRCREMSG,B'00100000'                             03S0131
*MSGID = DSPMSGID;                     /*PRIME MSGID FOR NORMAL MSG  */
@RF00130 MVI   MSGID,X'01'                                      03S0132
*MSGFLAGS = ZERO;                      /*CLEAR MSGDATA FLAGS         */
         MVI   MSGFLAGS,X'00'                                   03S0133
*IF DSPIMSGS = YES THEN                /*ISSUE MESSAGES              */
         L     @08,@PC00001                                     03S0134
         TM    DSPIMSGS(@08),B'10000000'                        03S0134
         BNO   @RF00134                                         03S0134
*   MSGSYSDS = ON;                     /*MSG TO SYSOUT DATA SET      */
         OI    MSGSYSDS,B'10000000'                             03S0135
*IF DSPMSTAT = YES &                   /*MONITOR STATUS ACTIVE       */
*   DSPPASS = NO THEN                  /*DISP ^= PASS                */
@RF00134 L     @08,@PC00001                                     03S0136
         TM    DSPMSTAT(@08),B'01000000'                        03S0136
         BNO   @RF00136                                         03S0136
         TM    DSPPASS,B'00010000'                              03S0136
         BNZ   @RF00136                                         03S0136
*  DO;                                 /*                    @YM08111*/
*    MSGMSTAT = ON;                    /*MSG TO CONSOLES/TERMINALS   */
         OI    MSGMSTAT,B'01000000'                             03S0138
*    PRCMSTAT = ON;                    /*SET IN ALLPRMAP     @YM08111*/
         OI    PRCMSTAT,B'01000000'                             03S0139
*  END;                                /*                    @YM08111*/
*NOMSGSW = OFF;                        /*INIT LOCAL MSG SWITCH       */
@RF00136 NI    NOMSGSW,B'11011111'                              03S0141
*IF DSPIMSGS = NO &                    /*MSG NOT REQUESTED           */
*   DSPMSTAT = NO &                                             03S0142
*   DSPNEMSG = YES THEN                /*NO ERROR MSGS TO BE ISSUED  */
         L     @08,@PC00001                                     03S0142
         TM    DSPNEMSG(@08),B'00100000'                        03S0142
         BNO   @RF00142                                         03S0142
         TM    DSPIMSGS(@08),B'11000000'                        03S0142
         BNZ   @RF00142                                         03S0142
*  NOMSGSW = ON;                       /*NO MESSAGES TO ISSUE        */
         OI    NOMSGSW,B'00100000'                              03S0143
*IF SIOVAMDS = ON THEN                 /*VIO DATA SET        @YM06116*/
@RF00142 L     @08,SIOTPTR                                      03S0144
         TM    SIOVAMDS(@08),B'00100000'                        03S0144
         BNO   @RF00144                                         03S0144
*   MSGNOVOL = ON;                     /*INDICATE NO VOL SER LINE IN
*                                        MESSAGE             @YM06116*/
         OI    MSGNOVOL,B'00000010'                             03S0145
*IF SIOALIAS = ON THEN                 /*ALIAS DSN           @YM07214*/
@RF00144 L     @08,SIOTPTR                                      03S0146
         TM    SIOALIAS(@08),B'10000000'                        03S0146
         BNO   @RF00146                                         03S0146
*  DO;                                 /*SET UP FOR ALIAS    @YM07214*/
*    MSGDSNP = ADDR(SIOTJFX->JFCBXNAM); /*DSN FOR MSGS       @YM07214*/
         L     @08,SIOTJFX(,@08)                                03S0148
         LA    @08,JFCBXNAM(,@08)                               03S0148
         ST    @08,MSGDSNP                                      03S0148
*    ADSNPTR = ADDR(SIOTJFX->JFCBXNAM); /*DSN FOR UNCATLG, RECATLG
*                                                            @YM07214*/
         ST    @08,ADSNPTR                                      03S0149
*  END;                                /*                    @YM07214*/
*ELSE                                  /*DSN NOT ALIAS       @YM07214*/
*  DO;                                 /*SET UP FOR 'REAL' NAME 03S0151
*                                                            @YM07214*/
         B     @RC00146                                         03S0151
@RF00146 DS    0H                                               03S0152
*    MSGDSNP = ADDR(JFCBDSNM);         /*DSN FOR MSGS        @YM07214*/
         L     @08,JFCBPTR                                      03S0152
         ST    @08,MSGDSNP                                      03S0152
*    ADSNPTR = ADDR(JFCBDSNM);         /*DSN FOR UNCATLG, RECATLG
*                                                            @YM07214*/
         ST    @08,ADSNPTR                                      03S0153
*  END;                                /*                    @YM07214*/
*DSNPTR = ADDR(JFCBDSNM);              /*DSN FOR SCRATCH,CATALOG
*                                                            @YM07214*/
@RC00146 MVC   DSNPTR(4),JFCBPTR                                03S0155
*IF DSPPASS = YES THEN                 /*DISP = PASS                 */
         TM    DSPPASS,B'00010000'                              03S0156
         BNO   @RF00156                                         03S0156
*  DISPRCR = DISPRCR & PASSONLY;       /*CLEAR ANY OTHERS            */
         NI    DISPRCR,X'10'                                    03S0157
*DSPFNDSW = OFF;                       /*INIT EXIT SWITCH FOR SET ID
*                                        LOOP                        */
@RF00156 NI    DSPFNDSW,B'10111111'                             03S0158
*SETIDMSK = DSPIDMSK;                  /*INIT MASK FOR SET ID LOOP   */
         MVI   SETIDMSK,X'7F'                                   03S0159
*DO DISPID = LENGTH(DISPRCR) TO 1 BY -1 /*SCAN TO FIRST BIT FOUND ON */
*    WHILE(DSPFNDSW = OFF);                                     03S0160
         LA    @08,8                                            03S0160
         STC   @08,DISPID                                       03S0160
@DL00160 TM    DSPFNDSW,B'01000000'                             03S0160
         BNZ   @DC00160                                         03S0160
*  IF DISPRCR > SETIDMSK THEN          /*BIT ON IN DISPRCR           */
         CLC   DISPRCR(1),SETIDMSK                              03S0161
         BNH   @RF00161                                         03S0161
*    DSPFNDSW = ON;                    /*SET EXIT SWITCH             */
         OI    DSPFNDSW,B'01000000'                             03S0162
*  ELSE                                /*BIT NOT ON                  */
*    SETIDMSK = SETIDMSK/SHFTABIT;     /*SHIFT MASK ONE PLACE RIGHT  */
         B     @RC00161                                         03S0163
@RF00161 SLR   @08,@08                                          03S0163
         IC    @08,SETIDMSK                                     03S0163
         SRL   @08,1                                            03S0163
         STC   @08,SETIDMSK                                     03S0163
*END;                                                           03S0164
@RC00161 SLR   @08,@08                                          03S0164
         IC    @08,DISPID                                       03S0164
         BCTR  @08,0                                            03S0164
         STC   @08,DISPID                                       03S0164
         LTR   @08,@08                                          03S0164
         BP    @DL00160                                         03S0164
@DC00160 DS    0H                                               03S0165
*DISPID = DISPID + ONE;                /*ADJUST DISP ID              */
         IC    @08,DISPID                                       03S0165
         LA    @08,1(,@08)                                      03S0165
         STC   @08,DISPID                                       03S0165
*IF SIO3TAPE = ON &          /*TAPE REQUEST AND            */   03S0166
*  ((CMCNDISP = ON &         /*EITHER CNDTL DISP AND       */   03S0166
*   (DSPKEEP = ON  ×         /*       KEEP  OR             */   03S0166
*    DSPCATLG = ON))×        /*       CATALOG              */   03S0166
*   (CMORDISP = ON &         /*ORELSE OVERIDE DISP AND     */   03S0166
*    DSPKEEP = ON &          /*       KEEP AND             */   03S0166
*    DSPPUBPR = ON)) THEN/*                                     03S0166
*                                        TREAT AS IF PRIVATE?        */
         L     @08,SIOTPTR                                      03S0166
         TM    SIO3TAPE(@08),B'10000000'                        03S0166
         BNO   @RF00166                                         03S0166
         TM    CMCNDISP(CMRBPTR),B'00100000'                    03S0166
         BNO   @GL00013                                         03S0166
         TM    DSPKEEP,B'00001010'                              03S0166
         BNZ   @RT00166                                         03S0166
@GL00013 TM    CMORDISP(CMRBPTR),B'00010000'                    03S0166
         BNO   @RF00166                                         03S0166
         TM    DSPKEEP,B'00001000'                              03S0166
         BNO   @RF00166                                         03S0166
         L     @08,@PC00001                                     03S0166
         TM    DSPPUBPR(@08),B'10000000'                        03S0166
         BNO   @RF00166                                         03S0166
@RT00166 DS    0H                                               03S0167
*  CMSETPRV = ON;                      /*SET INDICATOR FOR UNALLOC TO
*                                        INSURE THAT THIS DATA SET'S
*                                        VOL WILL BE HANDLED AS 03S0167
*                                        PRIVATE                     */
         OI    CMSETPRV(CMRBPTR),B'00001000'                    03S0167
*DEVTYPE = SIOTDEVT;                   /*SAVE SIOT DEVICE       03S0168
*                                        TYPE                @YM03582*/
@RF00166 L     @08,SIOTPTR                                      03S0168
         MVC   DEVTYPE(4),SIOTDEVT(@08)                         03S0168
*IF DSPCATLG = YES THEN                /*DISP = CATLG                */
         TM    DSPCATLG,B'00000010'                             03S0169
         BNO   @RF00169                                         03S0169
*  DO;                                 /*SEE IF RECATLG OR MSG ONLY  */
*    IF JFCCAT = YES THEN              /*DATA SET ALREADY CATLOGED   */
         L     @08,JFCBPTR                                      03S0171
         TM    JFCCAT(@08),B'10000000'                          03S0171
         BNO   @RF00171                                         03S0171
*      IF ((JFCVSL = YES) ×            /*VOLS ADDED/CHANGD   @YM06071*/
*         (JFCRCTLG = YES & JFCBNVOL = ONE)) THEN /*DSCB TTR CHANGED
*                                                            @YM06071*/
         TM    JFCVSL(@08),B'01000000'                          03S0172
         BO    @RT00172                                         03S0172
         TM    JFCRCTLG(@08),B'00000001'                        03S0172
         BNO   @RF00172                                         03S0172
         CLI   JFCBNVOL(@08),1                                  03S0172
         BNE   @RF00172                                         03S0172
@RT00172 DS    0H                                               03S0173
*        DO;                           /*YES,MUST RECATALOG          */
*          RCATLG = ON;                /*SET INDICATOR IN FCN MAP    */
         OI    RCATLG,B'10000000'                               03S0174
*          IF SIOCDEVT = YES THEN      /* CATALOG DEVTYPE,   @YM08396*/
         L     @08,SIOTPTR                                      03S0175
         TM    SIOCDEVT(@08),B'01000000'                        03S0175
         BNO   @RF00175                                         03S0175
*            DEVTYPE = SIOTJFX->JFCBXDEV;/* PICK UP FROM JFCBX  03S0176
*                                                            @YM03582*/
         L     @08,SIOTJFX(,@08)                                03S0176
         MVC   DEVTYPE(4),JFCBXDEV(@08)                         03S0176
*          IF SIOTCALC = NO THEN       /*EXISTING DATA SET           */
@RF00175 L     @08,SIOTPTR                                      03S0177
         TM    SIOTCALC(@08),B'00010000'                        03S0177
         BNZ   @RF00177                                         03S0177
*            DISPID = RCTLGID;         /*NOT CATLGD WHEN ALLOCATED   */
         MVI   DISPID,X'06'                                     03S0178
*          IF JFCVSL = NO THEN         /*VOLUMES ADDED/CHNGD @YM06071*/
@RF00177 L     @08,JFCBPTR                                      03S0179
         TM    JFCVSL(@08),B'01000000'                          03S0179
         BNZ   @RF00179                                         03S0179
*            AIRTCODE = NVSLCHNG;      /*NO, SET ALT INFO CODE TO
*                                        PREVENT MSG AFTER RECATLOG
*                                                            @YM06071*/
         MVC   AIRTCODE(4),@CF00082                             03S0180
*        END;                                                   03S0181
*      ELSE                            /*VOLUME SERIALS NOT UPDATED  */
*        DO;                                                    03S0182
         B     @RC00172                                         03S0182
@RF00172 DS    0H                                               03S0183
*          CMSGONLY = ON;              /*ISSUE MESSAGE ONLY          */
         OI    CMSGONLY,B'01000000'                             03S0183
*          IF SIOTCALC = NO THEN       /*NOT CATLGD WHEN ALLOCATED   */
         L     @08,SIOTPTR                                      03S0184
         TM    SIOTCALC(@08),B'00010000'                        03S0184
         BNZ   @RF00184                                         03S0184
*            DO;                       /*FORCE 'NOT CATLGD 2' MSG    */
*              CTLGMERR = ON;          /*INDICATE CTLG MGMNT ERROR   */
         OI    CTLGMERR,B'00010000'                             03S0186
*              MSGID = NCMSGID;        /*SET MSGID FOR CTLG ERR MSG  */
         MVI   MSGID,X'03'                                      03S0187
*              DISPID = NRCTLGID;      /*DISPID TO NOT RECTLGD       */
         MVI   DISPID,X'0C'                                     03S0188
*              IRETCODE = NVSLCHNG;    /*SET CTLG MGMNT CODE 8       */
         MVC   IRETCODE(4),@CF00082                             03S0189
*            END;                                               03S0190
*        END;                                                   03S0191
*      ELSE                            /*DATA SET NOT ALREADY IN
*                                        THE CATALOG         @YM06419*/
*        DO;                           /*CHECK DENSITY       @YM06419*/
         B     @RC00171                                         03S0192
@RF00171 DS    0H                                               03S0193
*          IF (SIO3TAPE = YES &         /*TAPE REQUEST        @YM06419*
*             ((SIOUBYT2 & DUALBITS) ^= ZERO) & /*ALLOCATED TO DUAL
*                                         DENSITY DRIVE       @YM06419*
*             (JFCDEN ^= '83'X &       /*DENSITY NOT 800 BPI @YM06419*/
*             JFCDEN ^= 'C3'X &      /*NOT 1600 BPI        @YM06419*/
*           JFCDEN ^= 'D3'X))      /*NOT 6250 BPI        @YM06419*/
*                             THEN/*                            03S0193
*                                        UNKNOWN DENSITY     @YM06419*/
         L     @08,SIOTPTR                                      03S0193
         TM    SIO3TAPE(@08),B'10000000'                        03S0193
         BNO   @RF00193                                         03S0193
         LA    @15,48                                           03S0193
         SLR   @14,@14                                          03S0193
         IC    @14,SIOUBYT2(,@08)                               03S0193
         NR    @15,@14                                          03S0193
         LTR   @15,@15                                          03S0193
         BZ    @RF00193                                         03S0193
         L     @08,JFCBPTR                                      03S0193
         CLI   JFCDEN(@08),X'83'                                03S0193
         BE    @RF00193                                         03S0193
         CLI   JFCDEN(@08),X'C3'                                03S0193
         BE    @RF00193                                         03S0193
         CLI   JFCDEN(@08),X'D3'                                03S0193
         BE    @RF00193                                         03S0193
*            DO;                       /*BAD DENSITY         @YM06419*/
*              CMSGONLY = ON;          /*ONLY ISSUE MSG      @YM06419*/
         OI    CMSGONLY,B'01000000'                             03S0195
*              CMNODEN = ON;           /*REASON FOR FAILURE IN RB
*                                                            @YM06419*/
         OI    CMNODEN(CMRBPTR),B'00000100'                     03S0196
*              MSGID = NCMSGID;        /*NOT CATLGD MESSAGE  @YM06419*/
         MVI   MSGID,X'03'                                      03S0197
*              DISPID = DISPID + LASTID; /*DISPID TO NOT CATLGD 03S0198
*                                                            @YM06419*/
         IC    @08,DISPID                                       03S0198
         LA    @08,6(,@08)                                      03S0198
         STC   @08,DISPID                                       03S0198
*              IRETCODE = NODENSTY;    /*REASON FOR FAILURE  @YM06419*/
         LA    @08,7                                            03S0199
         ST    @08,IRETCODE                                     03S0199
*              MRETCODE = IRETCODE;    /*SET MSG CODE        @YM06419*/
         ST    @08,MRETCODE                                     03S0200
*            END;                      /*END BAD DENSITY     @YM06419*/
*        END;                          /*END CHECK DENSITY   @YM06419*/
@RF00193 DS    0H                                               03S0203
*  END;                                                         03S0203
@RC00171 DS    0H                                               03S0204
*IF DSPDEL = YES &                     /*DATA SET TO BE DELETED      */
*    JFCCAT = YES THEN                 /*D.S. WAS LOCATED IN CATLG   */
@RF00169 TM    DSPDEL,B'00000100'                               03S0204
         BNO   @RF00204                                         03S0204
         L     @08,JFCBPTR                                      03S0204
         TM    JFCCAT(@08),B'10000000'                          03S0204
         BNO   @RF00204                                         03S0204
*  UNCTLGDS = ON;                      /*MUST UNCATALOG TOO          */
         OI    UNCTLGDS,B'00100000'                             03S0205
*IF DSPDEL = NO &                      /*DISP ^= DELETE              */
*    DSPUCTLG = NO THEN                /*DISP ^= UNCATLG             */
@RF00204 TM    DSPDEL,B'00000101'                               03S0206
         BNZ   @RF00206                                         03S0206
*  IF (JFCCAT = YES &           /*CATALOGED DATA SET          */
*     JFCRCTLG = YES &          /*DSCB TTR CHANGED            */
*     JFCBNVOL = ONE) × (SIO3DACC = YES &         /*D.A. DATA SET
*        */             DSPCATLG = YES &          /*D.S. TO BE CATLG
*        */             SCTSNEW = YES) THEN/*                   03S0207
*                                        MUST UPDATE/SET DSCB TTR    */
         L     @08,JFCBPTR                                      03S0207
         TM    JFCCAT(@08),B'10000000'                          03S0207
         BNO   @GL00024                                         03S0207
         TM    JFCRCTLG(@08),B'00000001'                        03S0207
         BNO   @GL00024                                         03S0207
         CLI   JFCBNVOL(@08),1                                  03S0207
         BE    @RT00207                                         03S0207
@GL00024 L     @08,SIOTPTR                                      03S0207
         TM    SIO3DACC(@08),B'00100000'                        03S0207
         BNO   @RF00207                                         03S0207
         TM    DSPCATLG,B'00000010'                             03S0207
         BNO   @RF00207                                         03S0207
         TM    SCTSNEW(@08),B'00000100'                         03S0207
         BNO   @RF00207                                         03S0207
@RT00207 DS    0H                                               03S0208
*    DO;                                                        03S0208
*      UDSCBTTR = ON;                  /*UPDATE DSCB TTR IN CATLG    */
         OI    UDSCBTTR,B'00000100'                             03S0209
*      DSCBTTR = JFCBDSCB;             /*PUT DSCB TTR IN PRCRDATA    */
         L     @08,JFCBPTR                                      03S0210
         MVC   DSCBTTR(3),JFCBDSCB(@08)                         03S0210
*      IF SIOCDEVT = YES THEN          /*DEV TYPE IN JFCBX?  @YM03582*/
         L     @08,SIOTPTR                                      03S0211
         TM    SIOCDEVT(@08),B'01000000'                        03S0211
         BNO   @RF00211                                         03S0211
*        DEVTYPE = SIOTJFX->JFCBXDEV;  /*PICK UP DEVICE TYPE @YM03582*/
         L     @08,SIOTJFX(,@08)                                03S0212
         MVC   DEVTYPE(4),JFCBXDEV(@08)                         03S0212
*    END;                                                       03S0213
@RF00211 DS    0H                                               03S0214
*IF SIO3TAPE = YES THEN                /*IS IT A TAPE D.S.           */
@RF00207 DS    0H                                               03S0214
@RF00206 L     @08,SIOTPTR                                      03S0214
         TM    SIO3TAPE(@08),B'10000000'                        03S0214
         BNO   @RF00214                                         03S0214
*  DO;                                                          03S0215
*    TAPEDS = ON;                      /*TAPE DATA SET               */
         OI    TAPEDS,B'00010000'                               03S0216
*    MSGTPEDS = ON;                    /*INDICATE IN MSG FLAGS       */
         OI    MSGTPEDS,B'00000100'                             03S0217
*    IF DSPDEL = YES &                 /*DELETE FOR TAPE D.S.        */
*        DSABPTR = ZERO THEN           /*UCB ADDRESS NOT AVAILABLE   */
         TM    DSPDEL,B'00000100'                               03S0218
         BNO   @RF00218                                         03S0218
         ICM   @08,15,DSABPTR                                   03S0218
         BNZ   @RF00218                                         03S0218
*      NORWND = ON;                    /*CAN'T DO REWIND             */
         OI    NORWND,B'01000000'                               03S0219
*    ELSE                              /*NOT DELETE                  */
*      DDENTPTR = DSABTIOT;            /*SET PTR TO TIOT ENTRY       */
         B     @RC00218                                         03S0220
@RF00218 L     @08,DSABPTR                                      03S0220
         MVC   DDENTPTR(4),DSABTIOT(@08)                        03S0220
*  END;                                                         03S0221
*ELSE                                  /*ELSE NOT TAPE              */
*  IF SIO3DACC = YES THEN              /*IF DIRECT ACCESS            */
         B     @RC00214                                         03S0222
@RF00214 L     @08,SIOTPTR                                      03S0222
         TM    SIO3DACC(@08),B'00100000'                        03S0222
         BNO   @RF00222                                         03S0222
*    DADS = ON;                        /*DIRECT ACCESS DATA SET      */
         OI    DADS,B'00001000'                                 03S0223
*IF DSPDEL = YES &                     /*DISP = DELETE               */
*    SIOVAMDS = YES THEN               /*VIRTUAL DATA SET            */
@RF00222 DS    0H                                               03S0224
@RC00214 TM    DSPDEL,B'00000100'                               03S0224
         BNO   @RF00224                                         03S0224
         L     @08,SIOTPTR                                      03S0224
         TM    SIOVAMDS(@08),B'00100000'                        03S0224
         BNO   @RF00224                                         03S0224
*  DO;                                                          03S0225
*    VIRTDS = ON;                      /*SET DATA SET TYPE INDICATOR */
         OI    VIRTDS,B'00000001'                               03S0226
*    IF DSABPTR ^= ZERO &                                       03S0227
*        DSABVMSC = YES THEN           /*DATA SET ALREADY SCRATCHED  */
         L     @08,DSABPTR                                      03S0227
         LTR   @08,@08                                          03S0227
         BZ    @RF00227                                         03S0227
         TM    DSABVMSC(@08),B'00010000'                        03S0227
         BNO   @RF00227                                         03S0227
*       VIRDSMSG = ON;                 /*ONLY ISSUE DISP MSG         */
         OI    VIRDSMSG,B'00000010'                             03S0228
*  END;                                                         03S0229
@RF00227 DS    0H                                               03S0230
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT  NAME - BVOLLST                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - BUILD VOLUME LIST                             */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE BUILDS THE VOLUME LIST WHICH IS REQUIRED AS INPUT */
*/*   TO DADSM SCRATCH AND CATALOG MANAGEMENT. A GETMAIN MACRO IS    */
*/*   ISSUED TO GET CORE FOR THE LIST. IF NO CORE IS                 */
*/*   AVAILABLE, AN ERROR CODE IS RETURNED.                          */
*/*                                                                  */
*/*   OPERATION                                                      */
*/*     IF CORE IS OBTAINED FOR THE VOLUME LIST THIS ROUTINE WILL    */
*/*     MOVE THE VOLUME SERIAL INFORMATION INTO THE LIST FROM THE    */
*/*     JFCB/JFCBX OF THE DATA SET. THE ALLOCATED DEVICE TYPE IS     */
*/*     OBTAINED FROM THE SIOT. (SEE A4A2DATA - WORK VARIABLES       */
*/*     SECTION- FOR THE FORMAT OF THE VOLUME LIST.)                 */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - TO BUILD A VOLUME LIST FOR REQUEST BEING PROCESSED   */
*/*   INPUT -                                                        */
*/*     JFCB -                                                       */
*/*       JFCBNVOL - TOTAL # VOL SERS                        @ZA10127*/
*/*       JFCBVOLS - UP TO 5 VOL SERS OF DATA SET                    */
*/*       JFCBFLSQ - FILE SEQUENCE NO. OF TAPE DATA SET              */
*/*     JFCBX(S) -                                                   */
*/*       JFCBXVOL - UP TO 15 VOL SERS PER JFCBX                     */
*/*     DEVTYPE - DEVICE TYPE TO BE PUT IN VOLLIST           @YM03582*/
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - VOL LIST BUILT                                     */
*/*     OUTPUT -                                                     */
*/*       VOLUME LIST                                                */
*/*       REASON CODE - 0                                            */
*/*     RETURN CODES -                                               */
*/*       RETCODE = 0                                                */
*/*                                                                  */
*/*   CONDITION - NO CORE FOR VOL LIST                               */
*/*     OUTPUT - NONE                                                */
*/*     RETURN CODES                                                 */
*/*       RETCODE = 4                                                */
*/*                                                                  */
*/********************************************************************/
*IF DSPVOL1 = YES THEN                 /*ONLY ONE VOL TO PROCESS     */
@RF00224 L     @08,@PC00001                                     04S0230
         TM    DSPVOL1(@08),B'00000010'                         04S0230
         BNO   @RF00230                                         04S0230
*  VLSTCNT = ONE;                      /*SET TOTAL # ENTRIES         */
         MVC   VLSTCNT(4),@CF00052                              04S0231
*ELSE                                  /*PROCESS ALL VOLUMES         */
*  VLSTCNT = JFCBNVOL;                 /*GET COUNT FROM JFCB @ZA10127*/
         B     @RC00230                                         04S0232
@RF00230 L     @08,JFCBPTR                                      04S0232
         SLR   @15,@15                                          04S0232
         IC    @15,JFCBNVOL(,@08)                               04S0232
         ST    @15,VLSTCNT                                      04S0232
*VLSTSIZE = VLSTCNT * LENGTH(VLSTENT)  /*AMT CORE FOR VOLUME LIST    */
*    + LENGTH(VLSTHDR);                                         04S0233
@RC00230 L     @08,VLSTCNT                                      04S0233
         MH    @08,@CH00038                                     04S0233
         AH    @08,@CH00173                                     04S0233
         ST    @08,VLSTSIZE                                     04S0233
* /* ?GETSTORG (SPID,VLSTSIZE,VLSTPTR);*/                       04S0234
*   /* DEFINITIONS OF GETMAIN PARMS */                          04S0234
*   DCL                                                         04S0234
*     GTSTR0   FIXED(31) REG(0),/*GTMN PARM REG*/               04S0234
*     GTSTR1   FIXED(31) REG(1),/*GTMN PARM REG*/               04S0234
*     GTSTR2   PTR(31)   REG(2),/*GTMN PARM REG*/               04S0234
*     GTSTR15  FIXED(31) REG(15),/*GTMN RET COD*/               04S0234
*     GTSTRTCD FIXED(31); /* GETMAIN RTN CODE  */               04S0234
*   DCL                                                         04S0235
*     GTSTR3   FIXED(31) REG(3),/* CLEARING REG*/               04S0235
*     GTSTR4   FIXED(31) REG(4),/* CLEARING REG*/               04S0235
*     GTSTR5   FIXED(31) REG(5),/* CLEARING REG*/               04S0235
*     GTSTR6   FIXED(31) REG(6),/* CLEARING REG*/               04S0235
*     GTSTR7   FIXED(31) REG(7),/* CLEARING REG*/               04S0235
*     GTSTR8   FIXED(31) REG(8),/* CLEARING REG*/               04S0235
*     GTSTZERO FIXED(31) INIT(0),                               04S0235
*     GTST253  FIXED(31) CONSTANT(253);                         04S0235
*   RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/               04S0236
*   GTSTR0 = VLSTSIZE; /* SET AMOUNT*/                          04S0237
         LR    GTSTR0,@08                                       04S0237
*   GTSTR2 = SPID; /* SET SUBPOOL*/                             04S0238
         LA    GTSTR2,230                                       04S0238
*   GENERATE CODE;                                              04S0239
     GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN
*   GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/               04S0240
         ST    GTSTR15,GTSTRTCD                                 04S0240
*   VLSTPTR = GTSTR1; /* ADDR OF GOTN STORG*/                   04S0241
         ST    GTSTR1,VLSTPTR                                   04S0241
*   RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */                04S0242
*   IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */               04S0243
         L     @08,GTSTRTCD                                     04S0243
         LTR   @08,@08                                          04S0243
         BNZ   @RF00243                                         04S0243
*     DO;               /* YES, CLEAR STORAGE.*/                04S0244
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       04S0245
*                          GTSTR7,GTSTR8) RSTD;                 04S0245
*       GTSTR4 = VLSTPTR; /*STORG PTR*/                         04S0246
         L     @03,VLSTPTR                                      04S0246
         LR    GTSTR4,@03                                       04S0246
*       GTSTR5 = VLSTSIZE; /*STORG AMNT*/                       04S0247
         L     GTSTR5,VLSTSIZE                                  04S0247
*       GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/               04S0248
         SLR   GTSTR7,GTSTR7                                    04S0248
*       IF SPID = GTST253 THEN                                  04S0249
         B     @RF00249                                         04S0249
*      GEN                                                      04S0250
*   (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);           04S0250
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8
*       GEN REFS(GTSTR4,GTSTR6);                                04S0251
@RF00249 DS    0H                                               04S0251
          MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG
*       IF SPID = GTST253 THEN                                  04S0252
         B     @RF00252                                         04S0252
*         GEN (MODESET KEYADDR=(2));                            04S0253
         MODESET KEYADDR=(2)
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       04S0254
*                          GTSTR7,GTSTR8) UNRSTD;               04S0254
@RF00252 DS    0H                                               04S0255
*     END;       /* STORAGE CLEARING COMPLETED */               04S0255
*   ELSE                                                        04S0256
*   VLSTPTR= 0;   /* CLEAR RETURN ADDR. */                      04S0256
         B     @RC00243                                         04S0256
@RF00243 SLR   @08,@08                                          04S0256
         ST    @08,VLSTPTR                                      04S0256
*   GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */               04S0257
@RC00243 L     GTSTR15,GTSTRTCD                                 04S0257
*                                      /* RESTORE LIST PRINT STATUS  */
*    /*GET CORE FOR LIST           */                           04S0258
*RETCODE = REG15;                      /*SAVE RETURN CODE            */
         LR    RETCODE,REG15                                    04S0258
*IF RETCODE = ZERO THEN                /*CORE OBTAINED               */
         LTR   RETCODE,RETCODE                                  04S0259
         BNZ   @RF00259                                         04S0259
*  DO;                                 /*BUILD VOLUME LIST           */
*    SERCNTR = ONE;                    /*INDEX FOR SERS IN JFCB/FJCBX*/
         LA    @08,1                                            04S0261
         LR    SERCNTR,@08                                      04S0261
*    JFCBXPTR = SIOTJFX;               /*SET PTR TO FIRST JFCBX      */
         L     @02,SIOTPTR                                      04S0262
         L     JFCBXPTR,SIOTJFX(,@02)                           04S0262
*    VLSERPTR = ADDR(JFCBVOLS);        /*PTR TO SERS IN JFCB/JFCBX   */
         L     VLSERPTR,JFCBPTR                                 04S0263
         LA    VLSERPTR,JFCBVOLS(,VLSERPTR)                     04S0263
*    JVOLSEND = FIVE;                  /*LIMIT OF SERS IN JFCB       */
         LA    JVOLSEND,5                                       04S0264
*    VLENTNO = VLSTCNT;                /*TOTAL # ENTRIES IN VOL LIST */
         L     @02,VLSTPTR                                      04S0265
         MVC   VLENTNO(2,@02),VLSTCNT+2                         04S0265
*    DO VOLCTR = 1 TO VLSTCNT;         /*MAKE ONE ENTRY PER VOLUME   */
         LR    VOLCTR,@08                                       04S0266
         B     @DE00266                                         04S0266
@DL00266 DS    0H                                               04S0267
*      VLDEV(VOLCTR) = DEVTYPE;        /*DEVICE TYPE         @YM03582*/
         L     @08,VLSTPTR                                      04S0267
         LR    @15,VOLCTR                                       04S0267
         MH    @15,@CH00038                                     04S0267
         ST    @15,@TF00001                                     04S0267
         ALR   @15,@08                                          04S0267
         AL    @15,@CF02357                                     04S0267
         MVC   VLDEV-2(4,@15),DEVTYPE                           04S0267
*      VLSERNO(VOLCTR) = JVLSERS(SERCNTR); /*VOLUME SERIAL           */
         LR    @01,@08                                          04S0268
         AL    @01,@TF00001                                     04S0268
         AL    @01,@CF02358                                     04S0268
         LR    @15,SERCNTR                                      04S0268
         MH    @15,@CH00063                                     04S0268
         ALR   @15,VLSERPTR                                     04S0268
         AL    @15,@CF02358                                     04S0268
         MVC   VLSERNO-6(6,@01),JVLSERS(@15)                    04S0268
*      IF TAPEDS = YES THEN            /*TAPE DATA SET               */
         TM    TAPEDS,B'00010000'                               04S0269
         BNO   @RF00269                                         04S0269
*        DO;                                                    04S0270
*          IF VOLCTR = ONE THEN        /*FIRST LIST ENTRY ?          */
         CH    VOLCTR,@CH00052                                  04S0271
         BNE   @RF00271                                         04S0271
*            VLFLSEQ(VOLCTR) = JFCBFLSQ; /*GET FILE SEQ FROM JFCB    */
         L     @01,JFCBPTR                                      04S0272
         LH    @15,JFCBFLSQ(,@01)                               04S0272
         L     @14,@TF00001                                     04S0272
         STH   @15,VLFLSEQ-12(@14,@08)                          04S0272
*          ELSE                        /*NOT FIRST LIST ENTRY        */
*            IF JFCBFLSQ = ZERO THEN   /*FILE SEQ IN JFCB = 0        */
         B     @RC00271                                         04S0273
@RF00271 SLR   @08,@08                                          04S0273
         L     @01,JFCBPTR                                      04S0273
         CH    @08,JFCBFLSQ(,@01)                               04S0273
         BNE   @RF00273                                         04S0273
*              VLFLSEQ(VOLCTR) = ZERO; /*SET FILE SEQ TO 0           */
         LR    @15,VOLCTR                                       04S0274
         MH    @15,@CH00038                                     04S0274
         L     @01,VLSTPTR                                      04S0274
         STH   @08,VLFLSEQ-12(@15,@01)                          04S0274
*            ELSE                      /*FILE SEQ IN JFCB NOT 0      */
*              VLFLSEQ(VOLCTR) = ONE;  /*SET FILE SEQ TO 1           */
         B     @RC00273                                         04S0275
@RF00273 LR    @08,VOLCTR                                       04S0275
         MH    @08,@CH00038                                     04S0275
         LA    @15,1                                            04S0275
         L     @14,VLSTPTR                                      04S0275
         STH   @15,VLFLSEQ-12(@08,@14)                          04S0275
*        END;                                                   04S0276
*      ELSE                            /*NOT TAPE D.S.               */
*        VLFLSEQ(VOLCTR) = ZERO;       /*FILE SEQ MUST BE SET TO 0   */
         B     @RC00269                                         04S0277
@RF00269 LR    @08,VOLCTR                                       04S0277
         MH    @08,@CH00038                                     04S0277
         SLR   @15,@15                                          04S0277
         L     @14,VLSTPTR                                      04S0277
         STH   @15,VLFLSEQ-12(@08,@14)                          04S0277
*      IF VOLCTR = JVOLSEND THEN       /*AT END OF A BLOCK           */
@RC00269 CR    VOLCTR,JVOLSEND                                  04S0278
         BNE   @RF00278                                         04S0278
*        DO;                           /*ADJUST INDEX AND POINTERS   */
*          SERCNTR = ONE;              /*RESET INDEX FOR VOL SERS    */
         LA    SERCNTR,1                                        04S0280
*          JVOLSEND = JVOLSEND + FIFTEEN;  /*ADJUST UPPER LIMIT      */
         AH    JVOLSEND,@CH00064                                04S0281
*          IF VOLCTR ^= FIVE THEN      /*AT END OF FIRST JFCBX       */
         CH    VOLCTR,@CH00085                                  04S0282
         BE    @RF00282                                         04S0282
*            JFCBXPTR = JFCBXNXT;      /*POINT TO NEXT JFCBX         */
         L     JFCBXPTR,JFCBXNXT(,JFCBXPTR)                     04S0283
*          VLSERPTR = ADDR(JFCBXVOL);  /*POINT TO VOL SERS IN JFCBX  */
@RF00282 LA    VLSERPTR,JFCBXVOL(,JFCBXPTR)                     04S0284
*        END;                                                   04S0285
*      ELSE                            /*NOT AT END OF BLOCK         */
*        SERCNTR = SERCNTR + ONE;      /*INCREMENT INDEX FOR VOL SERS*/
         B     @RC00278                                         04S0286
@RF00278 AL    SERCNTR,@CF00052                                 04S0286
*    END;                                                       04S0287
@RC00278 AL    VOLCTR,@CF00052                                  04S0287
@DE00266 C     VOLCTR,VLSTCNT                                   04S0287
         BNH   @DL00266                                         04S0287
*  END;                                                         04S0288
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - BLDETIOT                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - BUILD ETIOT ENTRY FOR 'SPECIAL' SCRATCH       */
*/*                    AND CATALOG PROCESSING                @ZA06981*/
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE BUILDS AN ETIOT AND/OR AN ETIOT ENTRY.            */
*/*   OPERATION - SEE FUNCTION                                       */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*                                                                  */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     INITIOSW - IF OFF, TIOT INITIALIZATION NEEDED                */
*/*     CURDSABP - POINTER TO CURRENT ETIOT ENTRY OR 0               */
*/*                                                                  */
*/* EXIT -                                                           */
*/*                                                                  */
*/*   CONDITION - TIOT INITIALIZED, IF NECESSARY; ETIOT ENTRY BUILT  */
*/*     OUTPUT                                                       */
*/*       ALETIOSW - SET ON IF ETIOT ENTRY BUILT             @ZA00061*/
*/*       INITIOSW - SET ON IF TIOT WERE INITIALIZED                 */
*/*       ETIOT INITIALIZED, IF REQUESTED                            */
*/*       ETIOT DD ENTRY BUILT IF REQUESTED                  @ZA00061*/
*/*     RETURN CODE - 0                                              */
*/*                                                                  */
*/*   CONDITION - ERROR INITIALIZING ETIOT                           */
*/*     OUTPUT - NONE                                                */
*/*     RETURN CODE - 4                                              */
*/*                                                                  */
*/*   CONDITION - ERROR ALLOCATING ETIOT ENTRY                       */
*/*     OUTPUT - NONE                                                */
*/*     RETURN CODE - 8                                              */
*/*                                                                  */
*/*   CONDITION - STEPCAT ALLOCATION FAILURE AT WARM START   @ZA06981*/
*/*     OUTPUT - NONE                                        @ZA06981*/
*/*     RETURN CODE - 12                                     @ZA06981*/
*/*                                                                  */
*/*   CONDITION - TIOT INITIALIZED, BUT ERROR INITIALIZING           */
*/*               ETIOT ENTRY                                        */
*/*     OUTPUT -                                                     */
*/*       INITIOSW - SET ON                                          */
*/*       ETIOT INITIALIZED                                          */
*/*     RETURN CODE - 8                                              */
*/*                                                                  */
*/********************************************************************/
*IF (DSPDEL = ON & DADS = ON ×         /*DISP OF DELETE & DA @ZA06981*/
*    (UNCTLGDS = ON × UDSCBTTR = ON ×  /*UNCAT DS - DSCB TTR @ZA06981*/
*    DSPCATLG = ON × DSPUCTLG = ON) &  /*CATALOG OR UNCATALG @ZA06981*/
*    DSPSCATA = ON) &                  /*ALLOCATE STEPCATS?  @ZA06981*/
*    DSPBETIO = ON &                   /*BUILD ETIOT?                */
*   (INITIOSW = OFF  ×                 /*ETIOT NOT INIT'D    @ZA00061*/
*    SIOVAMDS = ON)  &                 /*VIO DATA SET        @ZA00061*/
*   RETCODE = ZERO THEN                /*VOLLIST BUILT OK?           */
@RF00259 TM    DSPDEL,B'00000100'                               04S0289
         BNO   @GL00035                                         04S0289
         TM    DADS,B'00001000'                                 04S0289
         BO    @GL00034                                         04S0289
@GL00035 TM    UNCTLGDS,B'00100000'                             04S0289
         BO    @GL00037                                         04S0289
         TM    UDSCBTTR,B'00000100'                             04S0289
         BO    @GL00037                                         04S0289
         TM    DSPCATLG,B'00000011'                             04S0289
         BZ    @RF00289                                         04S0289
@GL00037 L     @08,@PC00001                                     04S0289
         TM    DSPSCATA(@08),B'01000000'                        04S0289
         BNO   @RF00289                                         04S0289
@GL00034 L     @08,@PC00001                                     04S0289
         TM    DSPBETIO(@08),B'00000001'                        04S0289
         BNO   @RF00289                                         04S0289
         TM    INITIOSW,B'00000100'                             04S0289
         BZ    @GL00032                                         04S0289
         L     @08,SIOTPTR                                      04S0289
         TM    SIOVAMDS(@08),B'00100000'                        04S0289
         BNO   @RF00289                                         04S0289
@GL00032 LTR   RETCODE,RETCODE                                  04S0289
         BNZ   @RF00289                                         04S0289
*  DO;                                                          04S0290
*    BETIOFMP = BETIOFMP && BETIOFMP;  /* CLEAR FUNCTION MAP.        */
         XC    BETIOFMP(1),BETIOFMP                             04S0291
*    IF INITIOSW = OFF THEN            /* ETIOT INITIALIZATION NEEDED*/
         TM    INITIOSW,B'00000100'                             04S0292
         BNZ   @RF00292                                         04S0292
*      BETINIT = ON;                   /* INITIALIZE TIOT, DSAM QDB. */
         OI    BETINIT,B'10000000'                              04S0293
*    IF SIOVAMDS = ON THEN             /* VAM DATA SET?      @ZA00061*/
@RF00292 L     @08,SIOTPTR                                      04S0294
         TM    SIOVAMDS(@08),B'00100000'                        04S0294
         BNO   @RF00294                                         04S0294
*      BETALLOC = ON;                  /* ALLOCATE ONE ETIOT ENTRY.  */
         OI    BETALLOC,B'01000000'                             04S0295
*    IF DSPSCATA = ON &                /* ALLOCATE STEPCATS? @ZA06981*/
*       INITIOSW = OFF &               /* STEPCATS ALLOCATED @ZA06981*/
*       CATALDSN ^= ZERO THEN          /* ANY STEPCATS?      @ZA06981*/
@RF00294 L     @08,@PC00001                                     04S0296
         TM    DSPSCATA(@08),B'01000000'                        04S0296
         BNO   @RF00296                                         04S0296
         TM    INITIOSW,B'00000100'                             04S0296
         BNZ   @RF00296                                         04S0296
         L     @08,@PC00001+16                                  04S0296
         ICM   @15,15,CATALDSN(@08)                             04S0296
         BZ    @RF00296                                         04S0296
*      BETALCAT = ON;                  /* INDICATE YES       @ZA06981*/
         OI    BETALCAT,B'00001000'                             04S0297
*    CALL IEFAB4A3                     /* CALL DUMMY ETIOT BUILDER   */
*            (BETIOFMP,JSCBPTR,CURDSABP,SIOTPTR,CATALDSN); /*@ZA06981*/
@RF00296 LA    @08,BETIOFMP                                     04S0298
         ST    @08,@AL00001                                     04S0298
         L     @08,@PC00001+8                                   04S0298
         ST    @08,@AL00001+4                                   04S0298
         LA    @08,CURDSABP                                     04S0298
         ST    @08,@AL00001+8                                   04S0298
         LA    @08,SIOTPTR                                      04S0298
         ST    @08,@AL00001+12                                  04S0298
         L     @08,@PC00001+16                                  04S0298
         ST    @08,@AL00001+16                                  04S0298
         L     @15,@CV00307                                     04S0298
         LA    @01,@AL00001                                     04S0298
         BALR  @14,@15                                          04S0298
*    RETCODE = REG15;                  /* SAVE RETURN CODE.          */
         LR    RETCODE,REG15                                    04S0299
*    IF RETCODE = ALCATERR THEN        /* ALLOC STEPCAT ERR  @ZA06981*/
         CH    RETCODE,@CH00038                                 04S0300
         BNE   @RF00300                                         04S0300
*      DO;                             /* STEPCATS NOT ALLOC @ZA06981*/
*        CATRETCD = RETCODE;           /* SET FOR SEGS AB4A2 @ZA06981*/
         ST    RETCODE,CATRETCD                                 04S0302
*        RSNCODE = CATERR;             /* SET FOR MSG PROCES @ZA06981*/
         L     @08,@PC00001+20                                  04S0303
         MVC   RSNCODE(2,@08),@CH00090                          04S0303
*      END;                            /*                    @ZA06981*/
*    IF RETCODE ^= INITERR THEN        /* ETIOT INITIALIZATION ERROR?*/
@RF00300 CH    RETCODE,@CH00163                                 04S0305
         BE    @RF00305                                         04S0305
*      INITIOSW = ON;                  /* DUMMY ETIOT HAS BEEN INIT'D*/
         OI    INITIOSW,B'00000100'                             04S0306
*    IF RETCODE = ZERO &               /* NO ERRORS?                 */
*       SIOVAMDS = ON THEN             /* VIO DATA SET       @ZA00061*/
@RF00305 LTR   RETCODE,RETCODE                                  04S0307
         BNZ   @RF00307                                         04S0307
         L     @08,SIOTPTR                                      04S0307
         TM    SIOVAMDS(@08),B'00100000'                        04S0307
         BNO   @RF00307                                         04S0307
*      ALETIOSW = ON;                  /* ETIOT ENTRY SUCCESSFULLY
*                                         ALLOCATED                  */
         OI    ALETIOSW,B'00000010'                             04S0308
*  END;                                                         04S0309
@RF00307 DS    0H                                               04S0310
*IF RETCODE = ZERO THEN                /*IS RETURN CODE 0            */
@RF00289 LTR   RETCODE,RETCODE                                  02S0310
         BNZ   @RF00310                                         02S0310
*  DO;                                                          02S0311
*    IF DSPKEEP = YES                  /*DISP = KEEP                 */
*        × DSPPASS = YES THEN          /*OR DISP = PASS              */
         TM    DSPKEEP,B'00011000'                              02S0312
         BZ    @RF00312                                         02S0312
*      DO;                             /*PROCESS KEEP/PASS DISPOSIT'N*/
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - KEEPPRCR                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - PROCESS KEEP/PASS DISPOSITION                 */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS:                 */
*/*     .INVOKES MESSAGE ROUTINE, IEFAB4B0 TO ISSUE APPROPRIATE      */
*/*      DISPOSITION MESSAGE.                                        */
*/*     .IF NECESSARY, INVOKES THE RECATALOG FUNCTION OF THE         */
*/*      CATALOG MANAGEMENT PROCESSOR TO UPDATE THE DSCB TTR OF      */
*/*      THE DATA SET IN THE CATALOG. NO MESSAGES ARE ISSUED FOR     */
*/*      THIS FUNCTION.                                              */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - PROCESS KEEP/PASS DISPOSITION                        */
*/*   INPUT -                                                        */
*/*     PRCSFMAP - DISPOSITION PROCESSOR FUNCTION MAP                */
*/*     MSGDATA  - INTERFACE DATA FOR MESSAGE ROUTINE                */
*/*     VLSTPTR  - PTR TO VOLUME LIST                        @YM08111*/
*/*     MSGDSNP - PTR TO DATA SET NAME                       @YM07214*/
*/*     MRETCODE - RETURN CODE TO PRINT (0 FOR KEEP/PASS)            */
*/* EXIT -                                                           */
*/*   CONDITION - REQUIRED FUNCTIONS COMPLETED                       */
*/*   OUTPUT -                                                       */
*/*     KEEP/PASS MESSAGE ISSUED                                     */
*/*     CATALOG UPDATED IF REQUIRED                                  */
*/*   RETURN CODE - NONE                                             */
*/********************************************************************/
*IF PRCRMSGS = YES ×                   /*MSGS ISSUED TO SYSOUT D.S.  */
*    PRCMSTAT = YES THEN               /*MONITOR STATUS IS ACTIVE    */
         TM    PRCRMSGS,B'11000000'                             03S0314
         BZ    @RF00314                                         03S0314
*  CALL IEFAB4B0                       /*INVOKE MESSAGE ROUTINE      */
*      (MSGDATA,VLSTPTR,MSGDSNP,MRETCODE,JSCBPTR); /*        @YM07214*/
         LA    @08,MSGDATA                                      03S0315
         ST    @08,@AL00001                                     03S0315
         LA    @08,VLSTPTR                                      03S0315
         ST    @08,@AL00001+4                                   03S0315
         LA    @08,MSGDSNP                                      03S0315
         ST    @08,@AL00001+8                                   03S0315
         LA    @08,MRETCODE                                     03S0315
         ST    @08,@AL00001+12                                  03S0315
         L     @08,@PC00001+8                                   03S0315
         ST    @08,@AL00001+16                                  03S0315
         L     @15,@CV00308                                     03S0315
         LA    @01,@AL00001                                     03S0315
         BALR  @14,@15                                          03S0315
*IF UDSCBTTR = YES THEN                /*DSCB TTR TO BE UPDATED      */
@RF00314 TM    UDSCBTTR,B'00000100'                             03S0316
         BNO   @RF00316                                         03S0316
*  DO;                                 /*INVOKE RECATLG TO HANDLE    */
*    PRCRMSGS = OFF;                   /*NO MESSAGES TO SYSOUT       */
*    PRCMSTAT = OFF;                   /*NO MSGS TO CONSOLES/TERMINAL*/
*    PRCREMSG = ON;                    /*NO ERROR MSGS               */
         OI    PRCREMSG,B'00100000'                             03S0320
         NI    PRCRMSGS,B'00111111'                             03S0320
*    RCATLG = ON;                      /*INDICATE RECATLG FCN        */
         OI    RCATLG,B'10000000'                               03S0321
*    CALL CTLGPRCR;                    /*CALL CATLG MGMNT PROCESSOR  */
         BAL   @14,CTLGPRCR                                     03S0322
*  END;                                                         03S0323
*IRETCODE = ZERO;                      /* RESET INFO RETCODE         */
@RF00316 SLR   @08,@08                                          03S0324
         ST    @08,IRETCODE                                     03S0324
*CTLGMERR = OFF;                       /* RESET CTLG MAN ERROR BIT   */
         NI    CTLGMERR,B'11101111'                             03S0325
*      END;                                                     02S0326
*    ELSE                              /*DISP NOT KEEP               */
*      IF DSPDEL = YES THEN            /*DISP = DELETE               */
         B     @RC00312                                         02S0327
@RF00312 TM    DSPDEL,B'00000100'                               02S0327
         BNO   @RF00327                                         02S0327
*        DO;                                                    02S0328
*          IF DADS = YES THEN          /*DIRECT ACCESS DATA SET      */
         TM    DADS,B'00001000'                                 02S0329
         BNO   @RF00329                                         02S0329
*            DO;                                                02S0330
*              IF DSPNOSMF = YES THEN  /*SMF RECORD NOT REQ'D        */
         L     @08,@PC00001                                     02S0331
         TM    DSPNOSMF(@08),B'00000100'                        02S0331
         BNO   @RF00331                                         02S0331
*                SUPRSMF = ON;         /*SET INDIC TO SUPPRESS IT    */
         OI    SUPRSMF,B'10000000'                              02S0332
*              IF DSPPURGE = YES THEN  /*IS DISP = PURGE ?           */
@RF00331 L     @08,@PC00001                                     02S0333
         TM    DSPPURGE(@08),B'00001000'                        02S0333
         BNO   @RF00333                                         02S0333
*                PURGEDS = ON;         /*NEED TO PURGE DATA SET      */
         OI    PURGEDS,B'00001000'                              02S0334
*              IF DSPTIONQ = YES THEN  /*TIOT ENQ ?                  */
@RF00333 L     @08,@PC00001                                     02S0335
         TM    DSPTIONQ(@08),B'00010000'                        02S0335
         BNO   @RF00335                                         02S0335
*                TIOTNQED = ON;        /*TIOT IS ENQED               */
         OI    TIOTNQED,B'00010000'                             02S0336
*              IF CMINVUCB = YES THEN  /*UCB PTR IN SIOT VALID?      */
@RF00335 TM    CMINVUCB(CMRBPTR),B'00000100'                    02S0337
         BNO   @RF00337                                         02S0337
*                INVUCBAD = ON;        /*NO,INDICATE CAN'T USE       */
         OI    INVUCBAD,B'10000000'                             02S0338
*              ELSE                    /*UCB PTR IN SIOT NOT VALID   */
*                DLUCBPTR  = SIOUCBAD; /*SET PTR TO UCB FOR SCRATCH  */
         B     @RC00337                                         02S0339
@RF00337 L     @08,SIOTPTR                                      02S0339
         SLR   @02,@02                                          02S0339
         ICM   @02,7,SIOUCBAD(@08)                              02S0339
         ST    @02,DLUCBPTR                                     02S0339
*            END;                                               02S0340
@RC00337 DS    0H                                               02S0341
*          CALL DELPRCR;               /*INVOKE DELETE PROCESSOR     */
@RF00329 BAL   @14,DELPRCR                                      02S0341
*          IF VIRTDS = YES &           /*VIRTUAL DATA SET            */
*             DSABPTR ^= ZERO THEN     /*DSAB EXISTS                 */
         TM    VIRTDS,B'00000001'                               02S0342
         BNO   @RF00342                                         02S0342
         L     @08,DSABPTR                                      02S0342
         SLR   @02,@02                                          02S0342
         CR    @08,@02                                          02S0342
         BE    @RF00342                                         02S0342
*            TIOEFSRT = ZERO;          /*CLEAR UCB POINTER IN TIOT   */
         L     @08,DSABTIOT(,@08)                               02S0343
         STCM  @02,7,TIOEFSRT(@08)                              02S0343
*        END;                                                   02S0344
*      ELSE                            /*DISP NOT = DELETE           */
*        IF DSPCATLG  = YES THEN       /*DISP = CATLG                */
         B     @RC00327                                         02S0345
@RF00327 TM    DSPCATLG,B'00000010'                             02S0345
         BNO   @RF00345                                         02S0345
*          DO;                                                  02S0346
*            IF TAPEDS = ON THEN       /*TAPE DATA SET ?             */
         TM    TAPEDS,B'00010000'                               02S0347
         BNO   @RF00347                                         02S0347
*              DO;                                              02S0348
*                TAPEDENS = JFCDEN;                             02S0349
         L     @08,JFCBPTR                                      02S0349
         MVC   TAPEDENS(1),JFCDEN(@08)                          02S0349
*                IF S3400DSP = YES THEN /*DISP = 3400                */
         L     @08,SIOTPTR                                      02S0350
         TM    S3400DSP(@08),B'01000000'                        02S0350
         BNO   @RF00350                                         02S0350
*                  CTLG3400 = ON;                               02S0351
         OI    CTLG3400,B'00100000'                             02S0351
*              END;                                             02S0352
@RF00350 DS    0H                                               02S0353
*            CALL CTLGPRCR;            /*CALL CATLG PROC             */
@RF00347 BAL   @14,CTLGPRCR                                     02S0353
*          END;                                                 02S0354
*        ELSE                          /*DISP NOT = CATLG            */
*          IF DSPUCTLG = YES THEN      /*IS PURGE CATLG NECESSARY ?  */
         B     @RC00345                                         02S0355
@RF00345 TM    DSPUCTLG,B'00000001'                             02S0355
         BNO   @RF00355                                         02S0355
*            CALL UNCPRCR;             /*CALL UNCATLG PROC           */
         BAL   @14,UNCPRCR                                      02S0356
*    CMRETCDE = IRETCODE;              /*SET INFORMATIONAL RETURN
*                                        CODE                        */
@RF00355 DS    0H                                               02S0357
@RC00345 DS    0H                                               02S0357
@RC00327 DS    0H                                               02S0357
@RC00312 MVC   CMRETCDE(2,CMRBPTR),IRETCODE+2                   02S0357
*    IF SCRERROR = YES THEN            /*SCRATCH ERROR               */
         TM    SCRERROR,B'00000100'                             02S0358
         BNO   @RF00358                                         02S0358
*      CMSCRERR = ON;                  /*INDICATE IN REQ BLK         */
         OI    CMSCRERR(CMRBPTR),B'10000000'                    02S0359
*    ELSE                              /*NOT SCRATCH ERROR           */
*      IF CTLGMERR = YES THEN          /*CTLG MGMNT ERROR            */
         B     @RC00358                                         02S0360
@RF00358 TM    CTLGMERR,B'00010000'                             02S0360
         BNO   @RF00360                                         02S0360
*        CMCATERR = ON;                /*INDICATE IN REQ BLK         */
         OI    CMCATERR(CMRBPTR),B'01000000'                    02S0361
*  END;                                                         02S0362
*ELSE                                  /*NO CORE FOR VOL LIST        */
*  DO;                                 /*USE JFCB/JFCBX TO ISSUE MSGS*/
         B     @RC00310                                         02S0363
@RF00310 DS    0H                                               02S0364
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - NVLSTPRC                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - NO VOLUME LIST PROCESSOR                      */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS:                 */
*/*     .DETERMINE IF ANY OF THE REQUIRED PROCESSING CAN BE DONE     */
*/*      WITHOUT A VOLUME LIST                                       */
*/*     .INVOKE ALTERNATE MESSAGE ROUTINE TO CONSTRUCT REQUIRED      */
*/*      MESSAGE USING JFCB/JFCBX INSTEAD OF A VOL LIST.             */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     IF THE REQUIRED FUNCTION IS EITHER 1) TO PROCESS KEEP OR     */
*/*     PASS DISPOSITION, 2) DELETE A TAPE DATA SET, 3) TO UNCATALOG */
*/*     A DATA SET, AND/OR 4) TO UPDATE THE DSCB TTR OF THE DATA SET,*/
*/*     THIS ROUTINE WILL INVOKE THE APPROPRIATE PROCESSOR. THE      */
*/*     PROCESS FUNCTION MAP WILL INDICATE THAT NO MESSAGES ARE TO   */
*/*     BE ISSUED. THIS ROUTINE WILL DETERMINE THE MESSAGE, IF ANY,  */
*/*     TO ISSUE. THE ALTERNATE MESSAGE ROUTINE IS INVOKED TO        */
*/*     CONSTRUCT AND ISSUE THE MESSAGE.                             */
*/*                                                                  */
*/*     IF NO FUNCTIONS CAN BE PROCESSED THE NECESSARY INDICATORS    */
*/*     ARE SET UP FOR A 'NOT (DISP) 5' MESSAGE AND THE ALTERNATE    */
*/*     MESSAGE ROUTINE IS INVOKED TO CONSTRUCT AND ISSUE THE        */
*/*     MESSAGE.                                             @YM08111*/
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*     PURPOSE - SEE FUNCTION                                       */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     DISPRCR - INDICATES DISPOSITION TO BE PROCESSED              */
*/*     DISPID - ID ASSOCIATED WITH NORMAL DISPOSITION               */
*/*     MSGID - MSG # ID ASSOCIATED WITH NORMAL DISPOSITION MESSAGE  */
*/*     MSGDSNP - DATA SET NAME                              @YM07214*/
*/*     PRCSFMAP - PROCESS OR FUNCTION MAP                           */
*/*     MSGDATA - DATA FOR MESSAGE ROUTINES                          */
*/*     JFCBPTR - PTR TO JFCB OF REQUEST BEING PROCESSED             */
*/*     SJFXPTR - PTR TO FIRST JFCBX FOR DATA SET                    */
*/*                                                                  */
*/* EXITS -                                                          */
*/*   CONDITION - NECESSARY PROCESSING COMPLETED                     */
*/*     OUTPUT -                                                     */
*/*       DSCB TTR UPDATED                                           */
*/*       DATA SETS KEPT,PASSED,DELETED (TAPE ONLY), OR              */
*/*       UNCATALOGED                                                */
*/*       DATA SET DISPOSITION MESSAGES ISSUED                       */
*/*       INFORMATIONAL RETURN CODE SET IN REQUEST BLOCK             */
*/*     RETURN CODE - 4 (SAME AS ON ENTRY)                           */
*/*                                                                  */
*/********************************************************************/
*IF DSPUCTLG = YES ×          /*CAN PROCESS CONDITIONS      */  03S0364
*    (DSPDEL = YES &                                            03S0364
*     TAPEDS = YES) ×                                           03S0364
*     DSPKEEP = YES ×                                           03S0364
*     DSPPASS = YES ×/*                                         03S0364
*                                        ANY NORMAL PROCESSING TO DO?*/
*     (RCATLG = YES &                  /*RECATALOG D.S.      @YM06164*/
*      UDSCBTTR = YES) THEN            /*UPDATE DSCB TTR     @YM06164*/
         TM    DSPUCTLG,B'00000001'                             03S0364
         BO    @RT00364                                         03S0364
         TM    DSPDEL,B'00000100'                               03S0364
         BNO   @GL00046                                         03S0364
         TM    TAPEDS,B'00010000'                               03S0364
         BO    @RT00364                                         03S0364
@GL00046 TM    DSPKEEP,B'00011000'                              03S0364
         BNZ   @RT00364                                         03S0364
         TM    RCATLG,B'10000000'                               03S0364
         BNO   @RF00364                                         03S0364
         TM    UDSCBTTR,B'00000100'                             03S0364
         BNO   @RF00364                                         03S0364
@RT00364 DS    0H                                               03S0365
*  DO;                                 /*YES,DO PROC'NG BUT NO MSGS  */
*    PRCRMSGS = OFF;                   /*MESSAGES NOT REQUESTED      */
*    PRCMSTAT = OFF;                   /*NO MN STATUS MESSAGES       */
*    PRCREMSG = ON;                    /*NO ERROR MESSAGES           */
         OI    PRCREMSG,B'00100000'                             03S0368
         NI    PRCRMSGS,B'00111111'                             03S0368
*    IF UDSCBTTR = YES THEN            /*DSCB TTR TO BE UPDATED      */
         TM    UDSCBTTR,B'00000100'                             03S0369
         BNO   @RF00369                                         03S0369
*      DO;                             /*YES, INVOKE RECTLG FCN      */
*        RCATLG = ON;                                           03S0371
         OI    RCATLG,B'10000000'                               03S0371
*        CALL CTLGPRCR;                /*CATALOG PROCESSOR           */
         BAL   @14,CTLGPRCR                                     03S0372
*      END;                                                     03S0373
*    IF DSPDEL = YES & TAPEDS = YES THEN/*                      03S0374
*                                        DISP = DELETE FOR TAPE D.S. */
@RF00369 TM    DSPDEL,B'00000100'                               03S0374
         BNO   @RF00374                                         03S0374
         TM    TAPEDS,B'00010000'                               03S0374
         BNO   @RF00374                                         03S0374
*      DO;                             /*YES,PROCESS NORMAL DISP     */
*        CALL DELPRCR;                 /*INVOKE DELETE PROCESSOR     */
         BAL   @14,DELPRCR                                      03S0376
*        IF UNCTLGDS = ON THEN         /*WAS DATA SET UNCATALOGED    */
         TM    UNCTLGDS,B'00100000'                             03S0377
         BNO   @RF00377                                         03S0377
*          DO;                         /*YES,ISSUE (NOT) UNCTL'D MSG */
*            IF CTLGMERR = NO THEN     /*ERROR ON UNCATALOG?         */
         TM    CTLGMERR,B'00010000'                             03S0379
         BNZ   @RF00379                                         03S0379
*              DISPID = UCTLGID;       /*NO,SET ID FOR UNCTLG MSG    */
         MVI   DISPID,X'01'                                     03S0380
*            ELSE                      /*ERROR ON UNCATALOG          */
*              DO;                                              03S0381
         B     @RC00379                                         03S0381
@RF00379 DS    0H                                               03S0382
*                DISPID = NUCTLGID;    /*SET ID FOR NOT UNCTLG'D MSG */
         MVI   DISPID,X'07'                                     03S0382
*                MSGID = NCMSGID;      /*CHANGE MSG # ID TO CTLG ERR.*/
         MVI   MSGID,X'03'                                      03S0383
*                MRETCODE = CATLERRC(IRETCODE/4);/*TRANSLATE CATLG
*                                        ERROR CODE                  */
         L     @00,IRETCODE                                     03S0384
         SRDA  @00,32                                           03S0384
         D     @00,@CF00163                                     03S0384
         SLR   @08,@08                                          03S0384
         IC    @08,CATLERRC-1(@01)                              03S0384
         ST    @08,MRETCODE                                     03S0384
*              END;                                             03S0385
*            IF NOMSGSW = NO THEN      /*NEED TO ISSUE MESSAGE       */
@RC00379 TM    NOMSGSW,B'00100000'                              03S0386
         BNZ   @RF00386                                         03S0386
*              CALL IEFAB4B2           /*INVOKE MSG ROUTINE          */
*                  (MSGDATA,SJFCBPTR,SIOTJFX,MRETCODE,          03S0387
*                   JSCBPTR,MSGDSNP);  /*                    @YM07214*/
         LA    @08,MSGDATA                                      03S0387
         ST    @08,@AL00001                                     03S0387
         L     @08,SIOTPTR                                      03S0387
         LA    @02,SJFCBPTR(,@08)                               03S0387
         ST    @02,@AL00001+4                                   03S0387
         LA    @08,SIOTJFX(,@08)                                03S0387
         ST    @08,@AL00001+8                                   03S0387
         LA    @08,MRETCODE                                     03S0387
         ST    @08,@AL00001+12                                  03S0387
         L     @08,@PC00001+8                                   03S0387
         ST    @08,@AL00001+16                                  03S0387
         LA    @08,MSGDSNP                                      03S0387
         ST    @08,@AL00001+20                                  03S0387
         L     @15,@CV00309                                     03S0387
         LA    @01,@AL00001                                     03S0387
         BALR  @14,@15                                          03S0387
*            DISPID = DELID;           /*RESET DISP ID FOR DELETE MSG*/
@RF00386 MVI   DISPID,X'03'                                     03S0388
*            MSGID = DSPMSGID;         /*RESET MSG # ID FOR NML MSG  */
         MVI   MSGID,X'01'                                      03S0389
*                                      /*NOT DELETE OR NOT A TAPE    */
*            MSGMSTAT = OFF;           /*NO MN STATUS FOR DELETE MSGS*/
         NI    MSGMSTAT,B'10111111'                             03S0390
*            MRETCODE = ZERO;          /*RESET ERR CODE TO PRINT     */
         SLR   @08,@08                                          03S0391
         ST    @08,MRETCODE                                     03S0391
*          END;                                                 03S0392
*      END;                                                     03S0393
*    ELSE                                                       03S0394
*      IF DSPUCTLG = YES THEN          /*DISP = UNCTLG?              */
         B     @RC00374                                         03S0394
@RF00374 TM    DSPUCTLG,B'00000001'                             03S0394
         BNO   @RF00394                                         03S0394
*        DO;                           /*YES, PROCESS NORMAL DISP    */
*          CALL UNCPRCR;               /*INVOKE PROCESSOR            */
         BAL   @14,UNCPRCR                                      03S0396
*          IF CTLGMERR = YES THEN      /*UNCTLG ERROR?               */
         TM    CTLGMERR,B'00010000'                             03S0397
         BNO   @RF00397                                         03S0397
*            DO;                       /*YES,SET NOT UNCTL'D MSG     */
*              DISPID = NUCTLGID;      /*SET DISP ID                 */
         MVI   DISPID,X'07'                                     03S0399
*              MSGID = NCMSGID;        /*SET CTLG ERR MSG # ID       */
         MVI   MSGID,X'03'                                      03S0400
*              MRETCODE = CATLERRC(IRETCODE/4);/*TRANSLATE CATLG
*                                        ERROR CODE                  */
         L     @00,IRETCODE                                     03S0401
         SRDA  @00,32                                           03S0401
         D     @00,@CF00163                                     03S0401
         SLR   @08,@08                                          03S0401
         IC    @08,CATLERRC-1(@01)                              03S0401
         ST    @08,MRETCODE                                     03S0401
*            END;                                               03S0402
*        END;                                                   03S0403
@RF00397 DS    0H                                               03S0404
*  END;                                                         03S0404
@RF00394 DS    0H                                               03S0404
@RC00374 DS    0H                                               03S0405
*IF ^(DSPUCTLG = YES ×          /*CAN PROCESS CONDITIONS      */
*      (DSPDEL = YES &                                          03S0405
*       TAPEDS = YES) ×                                         03S0405
*       DSPKEEP = YES ×                                         03S0405
*       DSPPASS = YES×              /*USE PRESET DISPID IN MSG    */
*         VIRDSMSG = YES ×                                      03S0405
*         (CMSGONLY = YES &                                     03S0405
*          CTLGMERR = NO)) THEN/*                               03S0405
*                                        ANY MSG/DISP ID'S TO CHANGE */
@RF00364 TM    DSPUCTLG,B'00000001'                             03S0405
         BO    @RF00405                                         03S0405
         TM    DSPDEL,B'00000100'                               03S0405
         BNO   @GL00053                                         03S0405
         TM    TAPEDS,B'00010000'                               03S0405
         BO    @RF00405                                         03S0405
@GL00053 TM    DSPKEEP,B'00011000'                              03S0405
         BNZ   @RF00405                                         03S0405
         TM    VIRDSMSG,B'00000010'                             03S0405
         BO    @RF00405                                         03S0405
         TM    CTLGMERR,B'00010000'                             03S0405
         BNZ   @RT00405                                         03S0405
         TM    CMSGONLY,B'01000000'                             03S0405
         BO    @RF00405                                         03S0405
@RT00405 DS    0H                                               03S0406
*  DO;                                 /*YES,SET THE NEW ONES        */
*    IF DSPDEL = ON THEN               /*DISP = DELETE?              */
         TM    DSPDEL,B'00000100'                               03S0407
         BNO   @RF00407                                         03S0407
*      MSGID = NDMSGID;                /*CHANGE MSG # ID TO NOT DEL'D*/
         MVI   MSGID,X'02'                                      03S0408
*    IF DSPCATLG = YES THEN            /*DISP = CATLG                */
@RF00407 TM    DSPCATLG,B'00000010'                             03S0409
         BNO   @RF00409                                         03S0409
*      MSGID = NCMSGID;                /*SET CTLG ERR MSG # ID       */
         MVI   MSGID,X'03'                                      03S0410
*    IF DISPID <= LASTID THEN          /*DISPID ALREADY NEGATIVE     */
@RF00409 CLI   DISPID,6                                         03S0411
         BH    @RF00411                                         03S0411
*      DO;                             /*NO, CHANGE & SET ERROR CODE */
*        DISPID = DISPID + LASTID;     /*RESET DISP ID TO NOT (DISP) */
         IC    @08,DISPID                                       03S0413
         LA    @08,6(,@08)                                      03S0413
         STC   @08,DISPID                                       03S0413
*        IRETCODE = NVLCORE;           /*SET INFORMATIONAL RET CODE  */
         LA    @08,5                                            03S0414
         ST    @08,IRETCODE                                     03S0414
*        MRETCODE = NVLCORE;           /*SET RETURN CODE TO PRINT    */
         ST    @08,MRETCODE                                     03S0415
*        MSGTOPER = ON;                /*ISSUE MSG TO OPERATOR TO    */
         OI    MSGTOPER,B'00100000'                             03S0416
*      END;                                                     03S0417
*    ELSE                              /*DISPID IS NOT(DISP)         */
*      IF CTLGMERR = YES THEN          /*CATALOG MGMNT ERROR         */
         B     @RC00411                                         03S0418
@RF00411 TM    CTLGMERR,B'00010000'                             03S0418
         BNO   @RF00418                                         03S0418
*        MRETCODE = CATLERRC(IRETCODE/4);/*TRANSLATE RET CODE        */
         L     @00,IRETCODE                                     03S0419
         SRDA  @00,32                                           03S0419
         D     @00,@CF00163                                     03S0419
         SLR   @08,@08                                          03S0419
         IC    @08,CATLERRC-1(@01)                              03S0419
         ST    @08,MRETCODE                                     03S0419
*    MSGSYSDS = ON;                    /*ISSUE TO SYST. MSG DATA SET */
@RF00418 DS    0H                                               03S0420
@RC00411 OI    MSGSYSDS,B'10000000'                             03S0420
*    IF DSPMSTAT = YES                 /*MONITOR STATUS IS ACTIVE    */
*       & DSPPASS = NO                 /*NOT PASS            @YM08111*/
*       & DSPDEL = NO THEN             /*NOT DELETE          @YM08111*/
         L     @08,@PC00001                                     03S0421
         TM    DSPMSTAT(@08),B'01000000'                        03S0421
         BNO   @RF00421                                         03S0421
         TM    DSPPASS,B'00010100'                              03S0421
         BNZ   @RF00421                                         03S0421
*      MSGMSTAT = ON;                  /*SET IN MSG RTN INTERFACE    */
         OI    MSGMSTAT,B'01000000'                             03S0422
*  END;                                                         03S0423
@RF00421 DS    0H                                               03S0424
*IF NOMSGSW = NO THEN                  /*NEED TO ISSUE MESSAGE       */
@RF00405 TM    NOMSGSW,B'00100000'                              03S0424
         BNZ   @RF00424                                         03S0424
*  CALL IEFAB4B2                       /*INVOKE MESSAGE RTN          */
*      (MSGDATA,SJFCBPTR,SIOTJFX,MRETCODE,                      03S0425
*       JSCBPTR,MSGDSNP);              /*                    @YM07214*/
         LA    @08,MSGDATA                                      03S0425
         ST    @08,@AL00001                                     03S0425
         L     @08,SIOTPTR                                      03S0425
         LA    @02,SJFCBPTR(,@08)                               03S0425
         ST    @02,@AL00001+4                                   03S0425
         LA    @08,SIOTJFX(,@08)                                03S0425
         ST    @08,@AL00001+8                                   03S0425
         LA    @08,MRETCODE                                     03S0425
         ST    @08,@AL00001+12                                  03S0425
         L     @08,@PC00001+8                                   03S0425
         ST    @08,@AL00001+16                                  03S0425
         LA    @08,MSGDSNP                                      03S0425
         ST    @08,@AL00001+20                                  03S0425
         L     @15,@CV00309                                     03S0425
         LA    @01,@AL00001                                     03S0425
         BALR  @14,@15                                          03S0425
*CMRETCDE = IRETCODE;                  /*SET INFOR'L RETURN CODE IN-
*                                        TO REQUEST BLOCK            */
@RF00424 L     @08,IRETCODE                                     03S0426
         STH   @08,CMRETCDE(,CMRBPTR)                           03S0426
*IF IRETCODE ^= ZERO THEN              /*ERROR OCCURRED              */
         LTR   @08,@08                                          03S0427
         BZ    @RF00427                                         03S0427
*  IF CMNODEN = OFF THEN               /*NOT DENSITY ERROR   @YM06419*/
         TM    CMNODEN(CMRBPTR),B'00000100'                     03S0428
         BNZ   @RF00428                                         03S0428
*    IF CTLGMERR = YES THEN            /*CTLG MGMNT ERROR            */
         TM    CTLGMERR,B'00010000'                             03S0429
         BNO   @RF00429                                         03S0429
*      CMCATERR = ON;                  /*INDIC IN REQ BLK            */
         OI    CMCATERR(CMRBPTR),B'01000000'                    03S0430
*    ELSE                              /*NOT CATALOG MGT ERROR       */
*      CMINTERR = ON;                  /*INDIC INTERNAL ERR IN  03S0431
*                                        REQ BLOCK                   */
         B     @RC00429                                         03S0431
@RF00429 OI    CMINTERR(CMRBPTR),B'00010000'                    03S0431
*  ELSE;                               /*                    @YM06419*/
@RF00428 DS    0H                                               03S0433
*  END;                                                         02S0433
@RC00428 DS    0H                                               02S0433
@RF00427 DS    0H                                               02S0434
*IF VLSTPTR ^= ZERO THEN               /*VOL LIST EXIST?             */
@RC00310 L     @08,VLSTPTR                                      02S0434
         LTR   @08,@08                                          02S0434
         BZ    @RF00434                                         02S0434
*  DO;                                                          02S0435
*    RFY (REG0,REG1) RSTD;                                      02S0436
*    REG0 = VLSTSIZE;                                           02S0437
         L     REG0,VLSTSIZE                                    02S0437
*    REG0 = REG0 × SUBPL230;           /*FREE FROM SUBPOOL 230       */
         O     REG0,@CF00282                                    02S0438
*    REG1 = VLSTPTR;                                            02S0439
         LR    REG1,@08                                         02S0439
*    GEN(FREEMAIN R,LV=(0),A=(1));     /*FREE VOLUME LIST            */
         FREEMAIN R,LV=(0),A=(1)
*    RFY (REG0,REG1) UNRSTD;                                    02S0441
*  END;                                                         02S0442
*IF ALETIOSW = ON THEN                 /*WAS AN ETIOT ENTRY ALOCD?   */
@RF00434 TM    ALETIOSW,B'00000010'                             02S0443
         BNO   @RF00443                                         02S0443
*  DO;                                                          02S0444
*    BETIOFMP = BETIOFMP && BETIOFMP;  /*CLEAR FUNCTION MAP          */
         XC    BETIOFMP(1),BETIOFMP                             02S0445
*    BETUNAL = ON;                     /*UNALLOCATE ETIOT ENTRY      */
         OI    BETUNAL,B'00010000'                              02S0446
*    CALL IEFAB4A3                     /*CALL DUMMY ETIOT HANDLER TO
*                                        UNALLOCATE ETIOT ENTRY      */
*           (BETIOFMP,JSCBPTR,CURDSABP,SIOTPTR); /*          @ZA00061*/
         LA    @08,BETIOFMP                                     02S0447
         ST    @08,@AL00001                                     02S0447
         L     @08,@PC00001+8                                   02S0447
         ST    @08,@AL00001+4                                   02S0447
         LA    @08,CURDSABP                                     02S0447
         ST    @08,@AL00001+8                                   02S0447
         LA    @08,SIOTPTR                                      02S0447
         ST    @08,@AL00001+12                                  02S0447
         L     @15,@CV00307                                     02S0447
         LA    @01,@AL00001                                     02S0447
         BALR  @14,@15                                          02S0447
*  END;                                                         02S0448
*            END;                                               01S0449
*        END;                                                   01S0450
*      ELSE                            /*SUBSYSTEM DATA SET          */
*        IF SIOTALCD = YES THEN        /*REQUEST WAS ALLOCATED       */
         B     @RC00095                                         01S0451
@RF00095 L     @08,SIOTPTR                                      01S0451
         TM    SIOTALCD(@08),B'00000010'                        01S0451
         BNO   @RF00451                                         01S0451
*          DO;                         /*SET UP INTERFACE & CALL SSI */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - PRCSSSDS                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SUBSYSTEM DATA SET UNALLOCATION               */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*                                                                  */
*/*   THIS ROUTINE DISPOSES OF A SUBSYSTEM DATA SET BY ISSUING THE   */
*/*   IEFSSREQ MACRO, WHICH GENERATES A CALL STATEMENT FOR JESSREQ,  */
*/*   THE SUBSYSTEM INTERFACE ROUTINE.  THE CONTROL BLOCKS PASSED TO */
*/*   JESSREQ REQUEST THE UNALLOCATION FUNCTION.  ALSO, A DISPOSI-   */
*/*   TION MSG(IEF285I) IS ISSUED, INDICATING WHETHER THE DATA SET   */
*/*   IS A SYSOUT, SYSIN, OR GENERAL SUBSYSTEM DATA SET      @G29AN2F*/
*/*   OPERATION -                                                    */
*/*     THE CONTROL BLOCKS 'SSOB','SSAL', AND 'SSIB'         @G29AN2F*/
*/*     ARE CONSTRUCTED.  THESE THREE CONTROL BLOCKS MAKE UP @G29AN2F*/
*/*     THE INTERFACE NEEDED FOR THE SUBSYSTEM REQUEST MACRO @G29AN2F*/
*/*     IEFSSREQ. AN SSIB IS BUILT FOR REQUEST THAT ARE NOT  @G29AN2F*/
*/*     SYSIN OR SYSOUT REQUEST (I.E. SUBSYS REQUESTS AND    @G29AN2F*/
*/*     REQUESTS ORIGINATING VIA DYNAMIC ALLOCATION KEY      @G29AN2F*/
*/*     X'5C') IN AN SU29 SYSTEM ONLY.  THE SUBSYSTEM NAME   @G29AN2F*/
*/*     THAT IS USED IS THAT FOUND IN THE SIOT. IF A NAME    @G29AN2F*/
*/*     IS NOT PRESENT THEN THE DEFAULT LIFE-OF-JOB SSIB IS  @G29AN2F*/
*/*     IS USED BY THE INTERFACE.                            @G29AN2F*/
*/*     THE SSOB AND SSAL ARE BUILT BY                       @G29AN2F*/
*/*     PLACING IN THEM POINTERS TO FIELDS IN THE SIOT AND DSAB FOR  */
*/*     THE DATA SET BEING PROCESSED, AND BY SETTING SOME INDICATORS */
*/*     TO DEFINE THE REQUEST.  THE IEFSSREQ MACRO IS THEN ISSUED.   */
*/*     THE RETURN CODE FROM THE SUBSYSTEM OR THE INTERFACE TO IT    */
*/*     IS PLACED IN 'CMRETCDE'.  IEFAB4B0 IS CALLED TO ISSUE THE    */
*/*     DISPOSITION MSG, IEF285I, BUT NOT TO ISSUE THE "VOL SER NOS" */
*/*     LINE OF THE MSG.                                             */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*                                                                  */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     CMUNRB - (COMMON UNALLOCATION REQUEST BLOCK)                 */
*/*       CMRBBYT3 - SUBSYSTEM DATA SET FLAGS                        */
*/*       CMOSYOUT - OVERRIDE SYSOUT CLASS                           */
*/*     DSAB - (DATA SET ASSOCIATION BLOCK)                          */
*/*       DSABSSCM - SUBSYSTEM COMMUNICATION AREA PTR                */
*/*       DSABSSNM - SUBSYSTEM NAME                                  */
*/*     DSPFMAP - DISP PROC'G FUNC MAP                               */
*/*     SIOT - (STEP INPUT/OUTPUT TABLE)                             */
*/*       SCTDDNAM - DDNAME                                          */
*/*       SCTOUTNM - SYSOUT PGM NAME                                 */
*/*       SCTOUTNO - SYSOUT FORM NUMBER                              */
*/*       SCTOUTPN - SYSOUT CLASS NAME                               */
*/*       SCTSBYT1 - DUMMY & SYSIN FLAGS                             */
*/*       SCTSBYT3 - SYSOUT FLAGS                                    */
*/*       SCTSDISP - DISPOSITION FLAGS                               */
*/*       SCTUTYPE - DEVICE TYPE                                     */
*/*       SIOTALTD - ALTERNATE DISPOSITION FLAGS                     */
*/*       SIOTDEST - REMOTE DESTINATION                              */
*/*       SIOTETIO - DSAB PTR                                        */
*/*       SIOTOUTC - NUMBER OF COPIES TO BE PRINTED                  */
*/*       SIOTSSNM - SUBSYSTEM NAME                          @G29AN2F*/
*/*     JFCB - (JOB FILE CONTROL BLK)                                */
*/*       JFCBDSNM - DATA SET NAME                                   */
*/*                                                                  */
*/* EXIT -                                                           */
*/*                                                                  */
*/*   CONDITION - FUNCTION COMPLETED                                 */
*/*   OUTPUT -                                                       */
*/*     RESPONSIBILITY FOR THE SUBSYSTEM DATA SET TRANSFERRED TO THE */
*/*     SUBSYSTEM                                                    */
*/*   RETURN CODE -                                                  */
*/*     IRETCODE = 0 (SUCCESS), OR                                   */
*/*                12 (INVALID DESTINATION), OR                      */
*/*                16 (FAILURE)                                      */
*/*                                                                  */
*/********************************************************************/
*RFY SSIB BASED(ADDR(LSSIB));          /* SET UP SSIB BASE   @G29AN2F*/
*SSOBID = SSOBIDNT;                    /* SET SSOB IDENTIFIER.       */
         MVC   SSOBID(4),@CC00280                               02S0454
*SSOBLEN = LENGTH(SSOB);               /* SET SSOB LENGTH.           */
         MVC   SSOBLEN(2),@CH01473                              02S0455
*SSOBFUNC = SSOBUNAL;                  /* SET UNALLOCATION FUNCTION. */
         MVC   SSOBFUNC(2),@CH00183                             02S0456
*SSOBSSIB = ZERO;                      /* ASSUME NO SSIB SO ZERO
*                                         SSOB POINTER       @G29AN2F*/
         SLR   @02,@02                                          02S0457
         ST    @02,SSOBSSIB                                     02S0457
*IF SCTSYSIN = OFF &                   /* NOT SYSIN D.S.? &  @G29AN2F*/
*   SCTSYSOU = OFF &                   /* NOT SYSOUT D.S.?   @G29AN2F*/
*   SIOTSSNM ^= NOSSNM &               /* AND A SUBSYSTEM NAME IS
*                                         PRESENT ?          @G29AN2F*/
*   SU29BIT = ON THEN                  /* & SU29 INSTALLED ? @G29AN2F*/
         TM    SCTSYSIN(@08),B'01000000'                        02S0458
         BNZ   @RF00458                                         02S0458
         TM    SCTSYSOU(@08),B'00001000'                        02S0458
         BNZ   @RF00458                                         02S0458
         CLC   SIOTSSNM(4,@08),@CC00245                         02S0458
         BE    @RF00458                                         02S0458
         L     @02,CVTPTR                                       02S0458
         L     @02,CVTIHASU(,@02)                               02S0458
         TM    SU29BIT(@02),B'00000100'                         02S0458
         BNO   @RF00458                                         02S0458
*  DO;                                 /* YES, CREATE SSIB   @G29AN2F*/
*    SSIB = SSIB && SSIB;              /* CLEAR SSIB         @G29AN2F*/
         LA    @02,LSSIB                                        02S0460
         XC    SSIB(36,@02),SSIB(@02)                           02S0460
*    SSIBID = SSIBIDNT;                /* SET SSIB ID        @G29AN2F*/
         MVC   SSIBID(4,@02),@CC00278                           02S0461
*    SSIBLEN = LENGTH(SSIB);           /* SET SSIB LENGTH    @G29AN2F*/
         MVC   SSIBLEN(2,@02),@CH02329                          02S0462
*    SSIBSSNM = SIOTSSNM;              /* GET SUBSYSTEM NAME    02S0463
*                                         TO BE CALLED       @G29AN2F*/
         MVC   SSIBSSNM(4,@02),SIOTSSNM(@08)                    02S0463
*    SSOBSSIB = ADDR(SSIB);            /* POINT SSOB TO SSIB @G29AN2F*/
         ST    @02,SSOBSSIB                                     02S0464
*  END;                                /*                    @G29AN2F*/
*SSOBINDV = ADDR(SSAL);                /* SET PTR TO SSAL.           */
@RF00458 LA    @08,SSAL                                         02S0466
         ST    @08,SSOBINDV                                     02S0466
*SSALLEN = LENGTH(SSAL);               /* SET SSAL LENGTH.           */
         MVC   SSALLEN(2),@CH02330                              02S0467
*SSALFLG1 = SSALFLG1 && SSALFLG1;      /*SET SWITCHES OFF            */
         XC    SSALFLG1(1),SSALFLG1                             02S0468
*IF CMDEL = ON THEN                    /*DELETE DATA SET ?           */
         TM    CMDEL(CMRBPTR),B'10000000'                       02S0469
         BNO   @RF00469                                         02S0469
*  SSALDELT = ON;                      /*YES                         */
         OI    SSALDELT,B'10000000'                             02S0470
*ELSE                                  /*DONT DELETE DATA SET        */
*  IF CMDYNUNA = ON &                  /*SPIN OFF DATA SET?          */
*     SCTSYSOU = ON THEN               /*SYSOUT DATA SET?            */
         B     @RC00469                                         02S0471
@RF00469 TM    CMDYNUNA(CMRBPTR),B'00100000'                    02S0471
         BNO   @RF00471                                         02S0471
         L     @08,SIOTPTR                                      02S0471
         TM    SCTSYSOU(@08),B'00001000'                        02S0471
         BNO   @RF00471                                         02S0471
*    SSALSPIN = ON;                    /*YES, TELL SUBSYSTEM         */
         OI    SSALSPIN,B'00000100'                             02S0472
*IF CMHOLD = YES THEN                  /*HOLD ?                      */
@RF00471 DS    0H                                               02S0473
@RC00469 TM    CMHOLD(CMRBPTR),B'01000000'                      02S0473
         BNO   @RF00473                                         02S0473
*  SSALHOLD = ON;                      /*YES                         */
         OI    SSALHOLD,B'01000000'                             02S0474
*IF CMNOHOLD = YES THEN                /*NOHOLD OVERRIDE     @ZA08726*/
@RF00473 TM    CMNOHOLD(CMRBPTR),B'00000100'                    02S0475
         BNO   @RF00475                                         02S0475
*  SSALNHLD = ON;                      /*YES                 @ZA08726*/
         OI    SSALNHLD,B'00100000'                             02S0476
*IF CMSSKEEP = ON THEN                 /* IS KEEP DATASET ON @ZA06466*/
@RF00475 TM    CMSSKEEP(CMRBPTR),B'00000010'                    02S0477
         BNO   @RF00477                                         02S0477
*  SSALKEEP = ON;                      /* YES TELL SUBSYSTEM @ZA06466*/
         OI    SSALKEEP,B'00000001'                             02S0478
*IF CMOUSRID = YES THEN                /*OVERIDE DESTINATION?        */
@RF00477 TM    CMOUSRID(CMRBPTR),B'00001000'                    02S0479
         BNO   @RF00479                                         02S0479
*  SSALDEST = CMUIDPTR;                /*YES, USE IT                 */
         MVC   SSALDEST(4),CMUIDPTR(CMRBPTR)                    02S0480
*ELSE                                  /*DONT OVERRIDE DESTINATION   */
*  SSALDEST = ADDR(SIOTDEST);          /*USE DEST FROM SIOT          */
         B     @RC00479                                         02S0481
@RF00479 L     @08,SIOTPTR                                      02S0481
         LA    @08,SIOTDEST(,@08)                               02S0481
         ST    @08,SSALDEST                                     02S0481
*IF CMOVSYOT = ON THEN                 /*USE OVERRIDE SYSOUT CLASS   */
@RC00479 TM    CMOVSYOT(CMRBPTR),B'00001000'                    02S0482
         BNO   @RF00482                                         02S0482
*  SSALCLAS = ADDR(CMOSYOUT);          /*YES                         */
         LA    @08,CMOSYOUT(,CMRBPTR)                           02S0483
         ST    @08,SSALCLAS                                     02S0483
*ELSE                                  /*DONT OVERRIDE SYSOUT CLASS  */
*  SSALCLAS = ADDR(SCTOUTPN);          /*NO                          */
         B     @RC00482                                         02S0484
@RF00482 L     @08,SIOTPTR                                      02S0484
         LA    @08,SCTOUTPN(,@08)                               02S0484
         ST    @08,SSALCLAS                                     02S0484
*SSALDDNM = ADDR(SCTDDNAM);            /* SET DDNAME PTR.            */
@RC00482 L     @08,SIOTPTR                                      02S0485
         LA    @02,SCTDDNAM(,@08)                               02S0485
         ST    @02,SSALDDNM                                     02S0485
*SSALDISP = ADDR(SCTSDISP);            /* SET PTR TO DISP FLAGS.     */
         LA    @02,SCTSDISP(,@08)                               02S0486
         ST    @02,SSALDISP                                     02S0486
*SSALDUMY = ADDR(SCTSBYT1);            /* SET PTR TO DUMMY/SYSIN FLGS*/
         LA    @02,SCTSBYT1(,@08)                               02S0487
         ST    @02,SSALDUMY                                     02S0487
*SSALSOUT = ADDR(SCTSBYT3);            /* SET PTR TO SYSOUT FLAGS.   */
         LA    @02,SCTSBYT3(,@08)                               02S0488
         ST    @02,SSALSOUT                                     02S0488
*SSALUNIT = ADDR(SCTUTYPE);            /* SET UNIT TYPE PTR.         */
         LA    @02,SCTUTYPE(,@08)                               02S0489
         ST    @02,SSALUNIT                                     02S0489
*SSALPGMN = ADDR(SCTOUTNM);            /* SET USER WTR PGM NAME PTR. */
         LA    @02,SCTOUTNM(,@08)                               02S0490
         ST    @02,SSALPGMN                                     02S0490
*SSALFORM = ADDR(SCTOUTNO);            /* SET SYSOUT FORMS NUMBER PTR*/
         LA    @02,SCTOUTNO(,@08)                               02S0491
         ST    @02,SSALFORM                                     02S0491
*SSALADSP = ADDR(SIOTALTD);            /* SET PTR TO ALT DISP.       */
         LA    @02,SIOTALTD(,@08)                               02S0492
         ST    @02,SSALADSP                                     02S0492
*SSALCOPY = ADDR(SIOTOUTC);            /* SET PTR TO NO. OF COPIES.  */
         LA    @02,SIOTOUTC(,@08)                               02S0493
         ST    @02,SSALCOPY                                     02S0493
*SSALSSNM = ADDR(DSABSSNM);            /* SET PTR TO SUBSYSTEM NAME  */
         L     @02,DSABPTR                                      02S0494
         LA    @15,DSABSSNM(,@02)                               02S0494
         ST    @15,SSALSSNM                                     02S0494
*SSALJFCB = SJFCBPTR;                  /* SET JFCB PTR.              */
         MVC   SSALJFCB(4),SJFCBPTR(@08)                        02S0495
*SSALSSCM = DSABSSCM;                  /* SET PTR TO SS COMM. AREA.  */
         MVC   SSALSSCM(4),DSABSSCM(@02)                        02S0496
*SSALCNCL = ZERO;                      /* ZERO UNUSED FIELD.         */
         SLR   @08,@08                                          02S0497
         ST    @08,SSALCNCL                                     02S0497
*RFY (REG0,REG1) RSTD;                 /* PROTECT REGS.              */
*                                                               02S0498
* /* ? IEFSSREQ  (SSOB);*/                                      02S0499
*/*                                           */                02S0499
*/*  PASS CONTROL TO JOB ENTRY SUBSYSTEM TO   */                02S0499
*/*  PROCESS REQUEST -                        */                02S0499
*/*                                           */                02S0499
*/*    INPUT - REGISTER 1 POINTS TO A ONE-    */                02S0499
*/*            WORD PARAMETER LIST WHICH      */                02S0499
*/*            POINTS TO THE SSOB             */                02S0499
*/*                                           */                02S0499
*CALL SSREQ(SSOB);                     /* REQUEST UNALLOCATION BY
*                                           SUBSYSTEM.               */
         LA    @08,SSOB                                         02S0499
         ST    @08,@AL00001                                     02S0499
         MVI   @AL00001,X'80'                                   02S0499
         L     @08,CVTPTR                                       02S0499
         L     @08,CVTJESCT(,@08)                               02S0499
         L     @15,JESSSREQ(,@08)                               02S0499
         LA    @01,@AL00001                                     02S0499
         BALR  @14,@15                                          02S0499
*RFY (REG0,REG1) UNRSTD;               /* RELEASE REGS.              */
*CMRETCDE = REG15;                     /*SET SS INTFC RET CODE       */
         STH   REG15,CMRETCDE(,CMRBPTR)                         02S0501
*IF CMRETCDE ^= ZERO THEN              /*INTERFACE RET CODE ?        */
         LH    @08,CMRETCDE(,CMRBPTR)                           02S0502
         LTR   @08,@08                                          02S0502
         BZ    @RF00502                                         02S0502
*  CMSSIERR = ON;                      /*YES, SAY SO                 */
         OI    CMSSIERR(CMRBPTR),B'00100000'                    02S0503
*ELSE                                  /*INTFC RET CODE = 0          */
*  IF SSOBRETN ^= ZERO THEN            /*SS RET CODE ?               */
         B     @RC00502                                         02S0504
@RF00502 L     @08,SSOBRETN                                     02S0504
         LTR   @08,@08                                          02S0504
         BZ    @RF00504                                         02S0504
*    DO;                                                        02S0505
*      CMSSERR = ON;                   /*YES, SAY SO                 */
         OI    CMSSERR(CMRBPTR),B'00001000'                     02S0506
*      CMRETCDE = SSOBRETN;            /*SET SS RET CODE             */
         STH   @08,CMRETCDE(,CMRBPTR)                           02S0507
*    END;                                                       02S0508
*MSGFLAGS = ZERO;                      /* INIT MSG FLAGS.            */
@RF00504 DS    0H                                               02S0509
@RC00502 MVI   MSGFLAGS,X'00'                                   02S0509
*IF DSPIMSGS = YES                     /* ISSUE DISP MSGS?           */
*   & (SCTSYSOU = ON                   /*DATA SET SYSOUT ?           */
*   × SCTSYSIN = ON                    /*DATA SET SYSIN ?    @G29AN2F*/
*   × SIOTSSGP = ON) THEN              /*OR SUBSYS ?         @G29AN2F*/
         L     @08,@PC00001                                     02S0510
         TM    DSPIMSGS(@08),B'10000000'                        02S0510
         BNO   @RF00510                                         02S0510
         L     @08,SIOTPTR                                      02S0510
         TM    SCTSYSOU(@08),B'00001000'                        02S0510
         BO    @RT00510                                         02S0510
         TM    SCTSYSIN(@08),B'01000000'                        02S0510
         BO    @RT00510                                         02S0510
         TM    SIOTSSGP(@08),B'00010000'                        02S0510
         BNO   @RF00510                                         02S0510
@RT00510 DS    0H                                               02S0511
*  DO;                                                          02S0511
*    MSGSYSDS = ON;                    /* MSG TO SYSTEM DATA SET     */
         OI    MSGSYSDS,B'10000000'                             02S0512
*    IF SCTSYSOU = ON THEN             /* SYSOUT?                    */
         L     @08,SIOTPTR                                      02S0513
         TM    SCTSYSOU(@08),B'00001000'                        02S0513
         BNO   @RF00513                                         02S0513
*      DISPID = SYSOUTID;              /* SET SYSOUT ID FOR MSG.     */
         MVI   DISPID,X'0B'                                     02S0514
*    IF SCTSYSIN = ON THEN             /* SYSIN?                     */
@RF00513 L     @08,SIOTPTR                                      02S0515
         TM    SCTSYSIN(@08),B'01000000'                        02S0515
         BNO   @RF00515                                         02S0515
*      DISPID = SYSINID;               /* SET SYSIN ID FOR MSG.      */
         MVI   DISPID,X'0A'                                     02S0516
*    IF SIOTSSGP = ON THEN             /* SUBSYS DATA SET ?  @G29AN2F*/
@RF00515 L     @08,SIOTPTR                                      02S0517
         TM    SIOTSSGP(@08),B'00010000'                        02S0517
         BNO   @RF00517                                         02S0517
*      DISPID = SUBSYSID;              /* SET SUBSYS ID FOR     02S0518
*                                         DISP MESSAGE       @G29AN2F*/
         MVI   DISPID,X'0D'                                     02S0518
*    MSGID = DSPMSGID;                 /* FOR IEF285I DISP MSG       */
@RF00517 MVI   MSGID,X'01'                                      02S0519
*    DSNPTR = ADDR(SJFCBPTR->JFCBDSNM); /* SET DSN ADDR.             */
         L     @08,SIOTPTR                                      02S0520
         MVC   DSNPTR(4),SJFCBPTR(@08)                          02S0520
*    MSGNOVOL = ON;                    /* NO VOL-SER= LINE IN MSG    */
         OI    MSGNOVOL,B'00000010'                             02S0521
*    MRETCODE = ZERO;                  /* NO ERROR CODE FOR MSG      */
         SLR   @08,@08                                          02S0522
         ST    @08,MRETCODE                                     02S0522
*    CALL IEFAB4B0(MSGDATA,VLSTPTR,DSNPTR,MRETCODE,JSCBPTR); /*ISSUE
*                                       SYSOUT MSG.                  */
         LA    @08,MSGDATA                                      02S0523
         ST    @08,@AL00001                                     02S0523
         LA    @08,VLSTPTR                                      02S0523
         ST    @08,@AL00001+4                                   02S0523
         LA    @08,DSNPTR                                       02S0523
         ST    @08,@AL00001+8                                   02S0523
         LA    @08,MRETCODE                                     02S0523
         ST    @08,@AL00001+12                                  02S0523
         L     @08,@PC00001+8                                   02S0523
         ST    @08,@AL00001+16                                  02S0523
         L     @15,@CV00308                                     02S0523
         LA    @01,@AL00001                                     02S0523
         BALR  @14,@15                                          02S0523
*  END;                                                         02S0524
*          END;                                                 01S0525
*    END;                                                       01S0526
*  ELSE;                               /*DISP PROCING NOT REQUESTED  */
@RF00093 DS    0H                                               01S0528
*  SIOTDSPD = ON;                      /*INDIC DISPOSITION PROCESSED */
@RC00093 L     @08,SIOTPTR                                      01S0528
         OI    SIOTDSPD(@08),B'01000000'                        01S0528
*  CMRBPTR = CMNRBPTR;                 /*GET NEXT REQUEST BLOCK PTR  */
         L     CMRBPTR,CMNRBPTR(,CMRBPTR)                       01S0529
*END;                                                           01S0530
@DE00090 SLR   @08,@08                                          01S0530
         CR    CMRBPTR,@08                                      01S0530
         BNE   @DL00090                                         01S0530
*IF INITIOSW = ON THEN                 /*DUMMY ETIOT BUILT?          */
         TM    INITIOSW,B'00000100'                             01S0531
         BNO   @RF00531                                         01S0531
*  DO;                                                          01S0532
*    BETIOFMP = BETIOFMP && BETIOFMP;  /*CLEAR FUNC. MAP             */
         XC    BETIOFMP(1),BETIOFMP                             01S0533
*    BETFREE = ON;                     /*REQUEST ETIOT CLEANUP       */
         OI    BETFREE,B'00100000'                              01S0534
*    IF CATRETCD = ZERO &              /* CATALOG ALLOC ERR? @ZA06981*/
*       DSPSCATA = ON THEN             /* ALLOCATE CATALOGS? @ZA06981*/
         C     @08,CATRETCD                                     01S0535
         BNE   @RF00535                                         01S0535
         L     @02,@PC00001                                     01S0535
         TM    DSPSCATA(@02),B'01000000'                        01S0535
         BNO   @RF00535                                         01S0535
*      BETUNCAT = ON;                  /* SET UNALLOC ALL    @ZA06981*/
         OI    BETUNCAT,B'00000100'                             01S0536
*    CALL IEFAB4A3                     /*CLEAN UP DUMMY ETIOT        */
*              (BETIOFMP,JSCBPTR,ZERO,ZERO); /*              @ZA00061*/
@RF00535 LA    @02,BETIOFMP                                     01S0537
         ST    @02,@AL00001                                     01S0537
         L     @02,@PC00001+8                                   01S0537
         ST    @02,@AL00001+4                                   01S0537
         LA    @02,@CF00304                                     01S0537
         ST    @02,@AL00001+8                                   01S0537
         LA    @02,@CF00304                                     01S0537
         ST    @02,@AL00001+12                                  01S0537
         L     @15,@CV00307                                     01S0537
         LA    @01,@AL00001                                     01S0537
         BALR  @14,@15                                          01S0537
*  END;                                                         01S0538
*RETURN CODE(RETCODE);                 /*RETURN TO CALLER            */
@RF00531 L     @13,4(,@13)                                      01S0539
         L     @00,@SIZDATD                                     01S0539
         LR    @01,@10                                          01S0539
         FSPACE   R,LV=(0),A=(1)
         LR    @15,@03                                          01S0539
         L     @14,12(,@13)                                     01S0539
         LM    @00,@12,20(@13)                                  01S0539
         BR    @14                                              01S0539
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - DELPRCR                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - DELETE DISPOSITION PROCESSOR                  */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS:                 */
*/*     .INVOKES DADSM SCRATCH TO DELETE DIRECT ACCESS DATA SETS     */
*/*     .INVOKES THE UNCATALOG PROCESSOR TO UNCATALOG THE DATA SET   */
*/*     .INDICATES WHICH TAPE VOLUMES ARE TO BE REWOUND              */
*/*     .INVOKES THE MESSAGE ROUTINE TO ISSUE THE APPROPRIATE        */
*/*      DISPOSITION MESSAGE(S).                                     */
*/*                                                                  */
*/*  OPERATION -                                                     */
*/*     DELETING DIRECT ACCESS DATA SETS-                            */
*/*       THE INTERFACE TO DADSM SCRATCH IS ESTABLISHED AND THE      */
*/*       FUNCTION INVOKED VIA AN SVC. IF A DUMMY ETIOT HAS BEEN     */
*/*       BUILT, IN ORDER TO ENABLE SCRATCH TO DYNAMICALLY ALLOCATE  */
*/*       IF DESIRED, THE INDICATOR IN THE SCRATCH PARAMETER LIST    */
*/*       WHICH, IF ON, PREVENTS DYNAMIC ALLOCATION DURING SCRATCH,  */
*/*       IS TURNED OFF. IF THE DATA SET IS SCRATCHED SUCCESSFULLY.  */
*/*       THE MESSAGE ROUTINE IS INVOKED TO ISSUE THE 'DELETED'      */
*/*       A NON-ZERO RETURN CODE IS RECEIVED FROM DADSM, A 'DELETED' */
*/*       MESSAGE IS ISSUED CONTAINING THE VOL SERS (IF ANY) FROM    */
*/*       WHICH THE DATA SET WAS SCRATCHED AND A 'NOT DELETED'       */
*/*       MESSAGES FOR THE REMAINING VOLUMES                         */
*/*                                                                  */
*/*     UNCATALOGING DATA SETS -                                     */
*/*       IF THE 'UNCATALOG' INDICATOR IS ON THE DATA SET WILL BE    */
*/*       UNCATALOGED VIA THE UNCATALOG PROCESSOR, IF (FOR D.A.      */
*/*       DATA SETS) THE ENTIRE DATA SET WAS SCRATCHED SUCCESS-      */
*/*       FULLY. WHEN A DATA SET IS TO BE UNCATALOGED, THE PROCESSOR */
*/*       IS INVOKED PRIOR TO ISSUING THE 'DELETED' MESSAGE.         */
*/*                                                                  */
*/*     DELETING TAPE DATA SETS -                                    */
*/*       THE 'DELETED' MESSAGE IS ALWAYS ISSUED FOR TAPE DATA SETS. */
*/*       IF THE 'NO REWIND' INDICATOR IS NOT ON, AN INDICATOR IS    */
*/*       SET IN THE TIOT DEVICE ENTRY FOR EACH VOLUME WHICH MUST BE */
*/*       REWOUND. THE TAPE VOLUMES WILL BE REWOUND WHEN THE UNIT IS */
*/*       UNALLOCATED.                                               */
*/*                                                                  */
*/* ENTRY - DELPRCR (INTERNAL PROC)                                  */
*/*  PURPOSE - PROCESS DELETE DISPOSITION                            */
*/*  INPUT -                                                         */
*/*     PRCRFMAP - PROCESSOR FUNCTION MAP (SEE A4A2DATA)             */
*/*     MSGDATA  - MSG ROUTINE INTERFACE DATA                        */
*/*     IRETCODE - INFORMATIONAL RETURN CODE (ZERO ON ENTRY)         */
*/*     DSNPTR - PTR TO DATA SET NAME                                */
*/*     VLSTPTR - PTR TO VOLUME LIST                                 */
*/*     DDENTPTR - PTR TO TIOT DD ENTRY FOR TAPE DATA SETS           */
*/*                                                                  */
*/* EXIT -                                                           */
*/*  CONDITION - DATA SET DELETED/UNCATALOGED                        */
*/*     OUTPUT -                                                     */
*/*       'DELETED' MESSAGE ISSUED TO SYSOUT DATA SET (IF REQUESTED) */
*/*       VTOC UPDATED (D.A. VOLUMES)                                */
*/*       CATALOG UPDATED (IF UNCATALOG REQUIRED)                    */
*/*       INDICATOR SET FOR TAPES TO BE REWOUND                      */
*/*     RETURN CODES -                                               */
*/*       IRETCODE = ZERO                                            */
*/*   CONDITION - D.A. DATA SET NOT COMPLETELY SCRATCHED             */
*/*     OUTPUT -                                                     */
*/*       'DELETED'/'NOT DELETED' MESSAGES ISSUED                    */
*/*       VTOC UPDATED ON VOLS FROM WHICH D.S. SCRATCHED             */
*/*     RETURN CODES -                                               */
*/*       IRETCODE = 4 OR 8 (DADSM RETURN CODE)                      */
*/*                                                                  */
*/********************************************************************/
*DELPRCR:                                                       02S0540
*  PROC;                                                        02S0540
@EL00001 L     @13,4(,@13)                                      02S0540
@EF00001 L     @00,@SIZDATD                                     02S0540
         LR    @01,@10                                          02S0540
         FSPACE   R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  02S0540
         BR    @14                                              02S0540
DELPRCR  STM   @14,@12,@SA00002                                 02S0540
*IF DADS = YES &                       /*DIRECT ACCESS DATA SET      */
*    VIRDSMSG = NO THEN                /*VIRTUAL D.S TO BE SCRATCHED */
         TM    DADS,B'00001000'                                 02S0541
         BNO   @RF00541                                         02S0541
         TM    VIRDSMSG,B'00000010'                             02S0541
         BNZ   @RF00541                                         02S0541
*  DO;                                 /*SCRATCH THE DATA SET        */
*    DSPPARML = DSPPARML && DSPPARML;  /*CLEAR PARM LIST             */
         XC    DSPPARML(20),DSPPARML                            02S0543
*    PARMOP = SCRATCH;                 /*SET OPERATION FOR SCRATCH   */
         MVC   PARMOP(2),@CB00266                               02S0544
*    IF INITIOSW = ON &                /*ETIOT BUILT?        @ZA00061*/
*      ALETIOSW = OFF THEN             /*NO ETIOT ENTRY ALLOCATED
*                                                            @ZA00061*/
         TM    INITIOSW,B'00000100'                             02S0545
         BNO   @RF00545                                         02S0545
         TM    ALETIOSW,B'00000010'                             02S0545
         BNZ   @RF00545                                         02S0545
*      PARMNODA = OFF;                 /*ALLOW SCRATCH TO DYNAMICALLY
*                                        ALLOCATE            @ZA00061*/
         NI    PARMNODA,B'01111111'                             02S0546
*    PARMDSNP = DSNPTR;                /*SET PTR TO DATA SET NAME    */
@RF00545 MVC   PARMDSNP(4),DSNPTR                               02S0547
*    IF SUPRSMF = NO THEN              /*SMF REC NOT SUPPRESSED      */
         TM    SUPRSMF,B'10000000'                              02S0548
         BNZ   @RF00548                                         02S0548
*      PARMSMF = ON;                   /*SMF REC (TYPE 17) REQ'D     */
         OI    PARMSMF,B'10000000'                              02S0549
*    PARMVLP = VLSTPTR;                /*SET PTR TO VOLUME LIST      */
@RF00548 MVC   PARMVLP(4),VLSTPTR                               02S0550
*    IF TIOTNQED = ON THEN             /*SCRATCH CAN'T ENQ ON TIOT   */
         TM    TIOTNQED,B'00010000'                             02S0551
         BNO   @RF00551                                         02S0551
*      PARMNNQ = ON;                   /*SET 'NO ENQ' INDICATOR      */
         OI    PARMNNQ,B'10000000'                              02S0552
*    PARMSCRO = SCRNOVRD;              /*SET NO OVERRIDE DEFAULT     */
@RF00551 NI    PARMSCRO,B'11001111'                             02S0553
         OI    PARMSCRO,B'01000000'                             02S0553
*    IF PURGEDS = YES THEN             /*SCRATCH TO OVERRIDE EXPIR'N
*                                        DATE                        */
         TM    PURGEDS,B'00001000'                              02S0554
         BNO   @RF00554                                         02S0554
*      PARMSCRO = SCROVRD;             /*SET OVERRIDE OPTION         */
         NI    PARMSCRO,B'11011111'                             02S0555
         OI    PARMSCRO,B'01010000'                             02S0555
*    RFY (REG0,REG1) RSTD;                                      02S0556
@RF00554 DS    0H                                               02S0557
*    REG0 = ZERO;                      /*CLEAR REG0 FOR UCB ADDR     */
         SLR   REG0,REG0                                        02S0557
*    IF INVUCBAD = NO THEN             /*UCB IS AVAILABLE FOR SCRATCH*/
         TM    INVUCBAD,B'10000000'                             02S0558
         BNZ   @RF00558                                         02S0558
*      REG0 = DLUCBPTR;                /*SET PTR TO UCB              */
         L     REG0,DLUCBPTR                                    02S0559
*    REG1 = ADDR(DSPPARML);            /*POINT TO INTERFACE PARMS    */
@RF00558 LA    REG1,DSPPARML                                    02S0560
*    SVC (DADSMSCR);                   /*INVOKE DADSM SCRATCH        */
         SVC   29                                               02S0561
*    RFY (REG0,REG1) UNRSTD;                                    02S0562
*    IRETCODE = REG15;                 /*SAVE RETURN CODE            */
         ST    REG15,IRETCODE                                   02S0563
*    IF IRETCODE ^= ZERO &             /*ERROR ON SCRATCH            */
*        PRCREMSG = NO THEN            /*ERROR MSGS TO BE ISSUED     */
         L     @15,IRETCODE                                     02S0564
         LTR   @15,@15                                          02S0564
         BZ    @RF00564                                         02S0564
         TM    PRCREMSG,B'00100000'                             02S0564
         BNZ   @RF00564                                         02S0564
*      DO;                             /*PROCESS ERROR CONDITIONS    */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - DELERPRC                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - DELETE ERROR PROCESSOR                        */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE IS INVOKED WHEN A NON-ZERO RETURN CODE IS         */
*/*   RECEIVED FROM DADSM SCRATCH. THE ROUTINE MUST DETERMINE THE    */
*/*   APPROPRIATE MESSAGE(S) TO ISSUE FOR THE DATA SET AND THE       */
*/*   RECEIVER(S) OF THE MESSAGE. THE MESSAGE ROUTINE, IEFAB4B0, IS  */
*/*   INVOKED TO BUILD THE MESSAGE.                                  */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     IF THE RETURN CODE FROM DADSM IS AN 8, THE DATA SET MAY      */
*/*     HAVE BEEN PARTIALLY SCRATCHED. THE ROUTINE WILL SCAN THE     */
*/*     VOLUME LIST FOR ZEROS IN THE STATUS CODE FIELD. IF ANY ARE   */
*/*     FOUND AN INDICATOR IS SET TO CAUSE THE 'DELETED' MSG TO BE   */
*/*     ISSUED FOR THOSE VOLUMES, IF REQUIRED. THE 'NOT DELETED'     */
*/*     MESSAGE IS ISSUED TO SYSOUT FOR THE REMAINING VOLUMES. THIS  */
*/*     MESSAGE IS ALSO ISSUED TO THE OPERATOR (OR REQUESTING        */
*/*     CONSOLES/TERMINALS) IF A STATUS CODE OF 4, 5 OR 6 IS FOUND.  */
*/*                                                                  */
*/*     IF THE RETURN CODE IS 4, THE DATA SET WAS NOT SCRATCHED FROM */
*/*     ANY OF THE VOLUMES AND THE 'NOT DELETED' MESSAGE IS ISSUED   */
*/*     TO SYSOUT AND TO THE OPERATOR (OR REQUESTING CONSOLES OR     */
*/*     TERMINALS).                                                  */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*  PURPOSE - SEE FUNCTION                                          */
*/*  INPUT -                                                         */
*/*     IRETCODE - DADSM RETURN CODE                                 */
*/*     VOLUME LIST -                                                */
*/*       VLRTNCDE - VOLUME STATUS CODE                              */
*/*     MSGDATA - MSG ROUTINE INTERFACE DATA                         */
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - FUNCTION COMPLETED                                 */
*/*   OUTPUT -                                                       */
*/*     'DELETED'/'NOT DELETED' MSGS ISSUED                          */
*/*   RETURN CODE -                                                  */
*/*     IRETCODE - SAME AS ON ENTRY                                  */
*/********************************************************************/
*SCRERROR = ON;                        /*INDICATE SCRATCH ERROR      */
         OI    SCRERROR,B'00000100'                             03S0566
*IF IRETCODE = NDELED8 THEN            /*DADSM RETURN CODE = 8       */
         CH    @15,@CH00082                                     03S0567
         BNE   @RF00567                                         03S0567
*  DO;                                 /*SEE IF D.S. PARTIALLY SCR'D */
*    MSGOPSW = OFF;                    /*INIT MSG. TO OPERATOR SWITCH*/
         NI    MSGOPSW,B'11101111'                              03S0569
*    DO VOLCTR = 1 TO VLENTNO;         /*SCAN ENTIRE VOLUME LIST     */
         LA    VOLCTR,1                                         03S0570
         B     @DE00570                                         03S0570
@DL00570 DS    0H                                               03S0571
*      IF VLRTNCDE(VOLCTR) = ZERO THEN /*D.S. SCR'D FROM THIS VOLUME */
         LR    @03,VOLCTR                                       03S0571
         MH    @03,@CH00038                                     03S0571
         L     @01,VLSTPTR                                      03S0571
         SLR   @00,@00                                          03S0571
         IC    @00,VLRTNCDE-12(@03,@01)                         03S0571
         CH    @00,@CH00304                                     03S0571
         BNE   @RF00571                                         03S0571
*        MSG0RCDE = ON;                /*SET 'PRINT 0 CODES' IN MSG  */
         OI    MSG0RCDE,B'00010000'                             03S0572
*      ELSE                            /*DS NOT SCRATCHED            */
*        IF VLRTNCDE(VOLCTR) = STATCDE4 ×  /*STATUS CODE IS 4       */
*           VLRTNCDE(VOLCTR) = STATCDE5 ×  /*......OR 5             */
*           VLRTNCDE(VOLCTR) = STATCDE6 THEN/*                  03S0573
*                                        ERR MSG TO OPERATOR         */
         B     @RC00571                                         03S0573
@RF00571 LR    @03,VOLCTR                                       03S0573
         MH    @03,@CH00038                                     03S0573
         L     @01,VLSTPTR                                      03S0573
         SLR   @15,@15                                          03S0573
         IC    @15,VLRTNCDE-12(@03,@01)                         03S0573
         CH    @15,@CH00163                                     03S0573
         BE    @RT00573                                         03S0573
         CH    @15,@CH00085                                     03S0573
         BE    @RT00573                                         03S0573
         CH    @15,@CH00063                                     03S0573
         BNE   @RF00573                                         03S0573
@RT00573 DS    0H                                               03S0574
*          MSGOPSW = ON;               /*MUST SET INDIC'R FOR MSG RTN*/
         OI    MSGOPSW,B'00010000'                              03S0574
*    END;                                                       03S0575
@RF00573 DS    0H                                               03S0575
@RC00571 AL    VOLCTR,@CF00052                                  03S0575
@DE00570 L     @03,VLSTPTR                                      03S0575
         CH    VOLCTR,VLENTNO(,@03)                             03S0575
         BNH   @DL00570                                         03S0575
*    IF MSG0RCDE = YES THEN            /*D.S. PARTIALLY SCRATCHED    */
         TM    MSG0RCDE,B'00010000'                             03S0576
         BNO   @RF00576                                         03S0576
*      DO;                             /*ISSUE NORMAL DISP'N MSG     */
*        MRETCODE = ZERO;              /*NO ERROR CODE FOR MSG       */
         SLR   @15,@15                                          03S0578
         ST    @15,MRETCODE                                     03S0578
*        MSGMSTAT = OFF;               /*NO MN STATUS FOR 'DELETE'   */
         NI    MSGMSTAT,B'10111111'                             03S0579
*        IF PRCRMSGS = YES THEN        /*MESSAGES REQUESTED          */
         TM    PRCRMSGS,B'10000000'                             03S0580
         BNO   @RF00580                                         03S0580
*          CALL IEFAB4B0               /*ISSUE 'DELETED' MSG         */
*              (MSGDATA,VLSTPTR,MSGDSNP,MRETCODE,JSCBPTR); /*@YM07214*/
         LA    @15,MSGDATA                                      03S0581
         ST    @15,@AL00001                                     03S0581
         LA    @15,VLSTPTR                                      03S0581
         ST    @15,@AL00001+4                                   03S0581
         LA    @15,MSGDSNP                                      03S0581
         ST    @15,@AL00001+8                                   03S0581
         LA    @15,MRETCODE                                     03S0581
         ST    @15,@AL00001+12                                  03S0581
         L     @15,@PC00001+8                                   03S0581
         ST    @15,@AL00001+16                                  03S0581
         L     @15,@CV00308                                     03S0581
         LA    @01,@AL00001                                     03S0581
         BALR  @14,@15                                          03S0581
*        MSG0RCDE = OFF;               /*RESET INDICATOR             */
@RF00580 NI    MSG0RCDE,B'11101111'                             03S0582
*      END;                                                     03S0583
*    MSGERCDE = ON;                    /*PRINT REMAINING VOL SERS    */
@RF00576 OI    MSGERCDE,B'00001000'                             03S0584
*  END;                                                         03S0585
*MRETCODE = IRETCODE;                  /*SET MSG ERROR CODE          */
@RF00567 L     @15,IRETCODE                                     03S0586
         ST    @15,MRETCODE                                     03S0586
*DISPID = DISPID + LASTID;             /*SET ID FOR 'NOT DELETED'    */
         IC    @01,DISPID                                       03S0587
         LA    @01,6(,@01)                                      03S0587
         STC   @01,DISPID                                       03S0587
*MSGID = NDMSGID;                      /*SET 'NOT DELETED' MSG ID    */
         MVI   MSGID,X'02'                                      03S0588
*MSGSYSDS = ON;                        /*ISSUE ERR MSG TO SYSOUT D.S.*/
         OI    MSGSYSDS,B'10000000'                             03S0589
*IF IRETCODE = NDELED4                 /*DADSM RETURN CODE = 4       */
*   × MSGOPSW = ON THEN                /*MSG MUST GO TO OPERATOR     */
         CH    @15,@CH00163                                     03S0590
         BE    @RT00590                                         03S0590
         TM    MSGOPSW,B'00010000'                              03S0590
         BNO   @RF00590                                         03S0590
@RT00590 DS    0H                                               03S0591
*  MSGTOPER = ON;                      /*SET INDICATOR FOR MSG RTN   */
         OI    MSGTOPER,B'00100000'                             03S0591
*ELSE                                                           03S0592
*  MSGMSTAT = OFF;                     /*NO MONITOR STATUS   @YM08111*/
         B     @RC00590                                         03S0592
@RF00590 NI    MSGMSTAT,B'10111111'                             03S0592
*IF PRCRMSGS = YES ×                   /*IF ISSUE MSGS OR    @YM08111*/
*    MSGTOPER = ON THEN                /*MSG MUST GO TO OPER @YM08111*/
@RC00590 TM    PRCRMSGS,B'10000000'                             03S0593
         BO    @RT00593                                         03S0593
         TM    MSGTOPER,B'00100000'                             03S0593
         BNO   @RF00593                                         03S0593
@RT00593 DS    0H                                               03S0594
*   CALL IEFAB4B0                      /*ISSUE 'NOT DELETED' MSG     */
*        (MSGDATA,VLSTPTR,MSGDSNP,MRETCODE,JSCBPTR); /*      @YMO7214*/
         LA    @15,MSGDATA                                      03S0594
         ST    @15,@AL00001                                     03S0594
         LA    @15,VLSTPTR                                      03S0594
         ST    @15,@AL00001+4                                   03S0594
         LA    @15,MSGDSNP                                      03S0594
         ST    @15,@AL00001+8                                   03S0594
         LA    @15,MRETCODE                                     03S0594
         ST    @15,@AL00001+12                                  03S0594
         L     @15,@PC00001+8                                   03S0594
         ST    @15,@AL00001+16                                  03S0594
         L     @15,@CV00308                                     03S0594
         LA    @01,@AL00001                                     03S0594
         BALR  @14,@15                                          03S0594
*      END;                                                     02S0595
@RF00593 DS    0H                                               02S0596
*  END;                                                         02S0596
@RF00564 DS    0H                                               02S0597
*IF IRETCODE = ZERO THEN               /*NO ERRORS                   */
@RF00541 ICM   @15,15,IRETCODE                                  02S0597
         BNZ   @RF00597                                         02S0597
*  DO;                                 /*CONTINUE PROCESSING         */
*    IF UNCTLGDS = ON THEN             /*DATA SET TO BE UNCATALOGED  */
         TM    UNCTLGDS,B'00100000'                             02S0599
         BNO   @RF00599                                         02S0599
*      DO;                             /*SET UP FOR UNCATLG PROCESSOR*/
*        DISPID = UCTLGID;             /*SET DISP ID FOR UNCATLG     */
         MVI   DISPID,X'01'                                     02S0601
*        CALL UNCPRCR;                 /*INVOKE UNCATALOG PROCESSOR  */
         BAL   @14,UNCPRCR                                      02S0602
*        MSGID = DSPMSGID;             /*RESET MSG ID IN CASE OF ERR */
         MVI   MSGID,X'01'                                      02S0603
*        DISPID = DELID;               /*RESET DISP ID TO DELETE     */
         MVI   DISPID,X'03'                                     02S0604
*      END;                                                     02S0605
*    MRETCODE = ZERO;                  /*ZERO RETURN CODE FOR MSG    */
@RF00599 SLR   @15,@15                                          02S0606
         ST    @15,MRETCODE                                     02S0606
*    MSGMSTAT = OFF;                   /*NO MN STATUS FOR DELETE MSGS*/
         NI    MSGMSTAT,B'10111111'                             02S0607
*    IF PRCRMSGS = YES THEN            /*PROCESS MESSAGES            */
         TM    PRCRMSGS,B'10000000'                             02S0608
         BNO   @RF00608                                         02S0608
*      CALL IEFAB4B0                   /*INVOKE MSG ROUTINE          */
*          (MSGDATA,VLSTPTR,MSGDSNP,MRETCODE,JSCBPTR); /*    @YM07214*/
         LA    @15,MSGDATA                                      02S0609
         ST    @15,@AL00001                                     02S0609
         LA    @15,VLSTPTR                                      02S0609
         ST    @15,@AL00001+4                                   02S0609
         LA    @15,MSGDSNP                                      02S0609
         ST    @15,@AL00001+8                                   02S0609
         LA    @15,MRETCODE                                     02S0609
         ST    @15,@AL00001+12                                  02S0609
         L     @15,@PC00001+8                                   02S0609
         ST    @15,@AL00001+16                                  02S0609
         L     @15,@CV00308                                     02S0609
         LA    @01,@AL00001                                     02S0609
         BALR  @14,@15                                          02S0609
*  END;                                                         02S0610
@RF00608 DS    0H                                               02S0611
*RFY TIOENTRY BASED(DDENTPTR);                                  02S0611
@RF00597 DS    0H                                               02S0612
*IF TAPEDS = YES &                     /*TAPE DATA SET               */
*    NORWND = NO THEN                  /*TAPE TO BE REWOUND          */
         TM    TAPEDS,B'00010000'                               02S0612
         BNO   @RF00612                                         02S0612
         TM    NORWND,B'01000000'                               02S0612
         BNZ   @RF00612                                         02S0612
*  DO DEVCTR = 1 TO TIOEWTCT;          /*SET REWIND INDICATOR(S)     */
         LA    DEVCTR,1                                         02S0613
         B     @DE00613                                         02S0613
@DL00613 DS    0H                                               02S0614
*    IF TIOUCBP(DEVCTR) ^= ZERO &      /*DEVICE ALLOCATED            */
*        TIOUCBP(DEVCTR) -> UCBREW = NO THEN /*TAPE NOT REWOUND      */
         L     @03,DDENTPTR                                     02S0614
         LR    @15,DEVCTR                                       02S0614
         SLA   @15,2                                            02S0614
         L     @14,TIOUCBP-5(@15,@03)                           02S0614
         LA    @14,0(,@14)                                      02S0614
         LTR   @14,@14                                          02S0614
         BZ    @RF00614                                         02S0614
         TM    UCBREW(@14),B'00010000'                          02S0614
         BNZ   @RF00614                                         02S0614
*      TIORWND(DEVCTR) = ON;           /*SET INDICATOR IN DEV ENTRY  */
         ALR   @03,@15                                          02S0615
         OI    TIORWND-4(@03),B'00000010'                       02S0615
*  END;                                                         02S0616
@RF00614 AL    DEVCTR,@CF00052                                  02S0616
@DE00613 L     @03,DDENTPTR                                     02S0616
         SLR   @15,@15                                          02S0616
         IC    @15,TIOEWTCT(,@03)                               02S0616
         CR    DEVCTR,@15                                       02S0616
         BNH   @DL00613                                         02S0616
*RFY TIOENTRY BASED(DSABTIOT);                                  02S0617
*RETURN;                               /*RETURN TO CALLER            */
@EL00002 DS    0H                                               02S0618
@EF00002 DS    0H                                               02S0618
@ER00002 LM    @14,@12,@SA00002                                 02S0618
         BR    @14                                              02S0618
*END DELPRCR;                                                   02S0619
         B     @EL00002                                         02S0619
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CTLGPRCR                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CATALOG/RECATALOG DISPOSITION PROCESSOR       */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS SEGMENT PROVIDES THE FOLLOWING FUNCTIONS:                 */
*/*   . CATALOGING DATA SETS                                         */
*/*   . RECATALOGING DATA SETS                                       */
*/*   . UPDATING THE DSCB TTR OF DATA SETS                           */
*/*   . ISSUING MESSAGES                                             */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     CATALOGING DATA SETS -                                       */
*/*       THE CATALOG MANAGEMENT PARAMETER LIST (CAMLST) IS BUILT    */
*/*       AND A CATALOG MACRO IS ISSUED TO CATALOG THE DATA SET.     */
*/*       FOR NON SEVEN TRACK TAPE DATA SETS EACH ENTRY IN THE       */
*/*       VOLUME LIST IS PROCESSED AS FOLLOWS:                       */
*/*         IF THE DATA SET REQUESTED A GENERIC DEVICE               */
*/*         TYPE WHICH CONTAINED ONLY 3400 SERIES DRIVES OR IF       */
*/*         THE DATA SET WAS RECORDED IN 6250 BPI, THE DEVICE TYPE   */
*/*         IS SET SO THAT THE DATA SET IS ELIGIBLE FOR 3400 DEVICES */
*/*         ONLY. OTHERWISE THE DEVICE TYPE IS SET SO THAT           */
*/*         THIS DATA SET IS ELIGIBLE FOR 2400 DEVICES.              */
*/*                                                                  */
*/*         THE DENSITY AT WHICH THE DATA SET WAS WRITTEN IS USED    */
*/*         TO SET THE 'DENSITY BYTES' OF THE DEVICE TYPE FIELD IN   */
*/*         THE VOLUME LIST. THIS INSURES THAT THE DATA SET WILL BE  */
*/*         ALLOCATED TO DEVICES WHICH CAN READ IN THE DENSITY       */
*/*         AT WHICH THE DATA SET WAS RECORDED.                      */
*/*                                                                  */
*/*         THE ABOVE PROCESSING IS PERFORMED TO GIVE THE DATA SET   */
*/*         BEING CATALOGED THE MAXIMUM ELIGIBILITY (IN TERMS OF     */
*/*         NUMBER OF DEVICES) WHEN IT IS USED AGAIN.                */
*/*                                                                  */
*/*         WHEN DATA SETS ARE CATALOGED DURING A WARMSTART  @ZA06981*/
*/*         THIS MODULE WILL ALLOW CATALOG MANAGEMENT TO     @ZA06981*/
*/*         DYNAMICALLY ALLOCATE PRIVATE CATALOGS, IF STEP-  @ZA06981*/
*/*         CATS WERE ALLOCATED SUCCESSFULLY OR NOT SPECIFIED@ZA06981*/
*/*                                                          @ZA06981*/
*/*     RECATALOGING DATA SETS -                                     */
*/*       THE CAMLST IS BUILT AS ABOVE EXCEPT THAT THE FUNCTION      */
*/*       CODE IN THE CAMLST IS SET TO RECATALOG. RECATALOGING       */
*/*       IS PERFORMED WHEN THE DATA SET WAS RETRIEVED FROM THE      */
*/*       CATALOG, WAS GIVEN A DISPOSITION OF CATLG, AND HAD ITS     */
*/*       VOLUME LIST OR DSCB TTR CHANGED DURING EXECUTION.  @YM06071*/
*/*       THE FUNCTION IS ALSO PERFORMED FOR A NEW DATA SET THAT HAD */
*/*       BEEN CATALOGED(BY DYNAMIC ALLOCATION) WHEN IT WAS ALLOCATED*/
*/*       AND THAT HAD ITS VOLUME LIST OR DSCB TTR UPDATED.  @YM06071*/
*/*       NO ATTEMPT TO GIVE MAXIMUM ELIGIBILITY IS MADE,    @YM03582*/
*/*       I.E., WHATEVER DEVICE TYPE CAME OUT OF THE CATALOG @YM03582*/
*/*       GOES BACK IN.                                      @YM03582*/
*/*                                                                  */
*/*       WHEN DATA-SETS ARE RECATALOGED DURING A WARMSTART  @ZA06981*/
*/*       THIS MODULE WILL ALLOW CATALOG MANAGEMENT TO DYNAM-@ZA06981*/
*/*       ICALLY ALLOCATE PRIVATE CATALGOS, IF STEPCATS WERE @ZA06981*/
*/*       ALLOCATED SUCCESSFULLY OR NOT SPECIFIED.           @ZA06981*/
*/*                                                          @ZA06981*/
*/*     UPDATING THE DSCB TTR -                                      */
*/*       IF UPDATING THE DSCB TTR IS REQUESTED, THE DSCB-TTR-PRESENT*/
*/*       INDICATOR IN THE CAMLST IS SET ON AND A POINTER TO THE     */
*/*       DSCBTTR (PASSED AS INPUT) IS SET IN THE CAMLST. THIS       */
*/*       FUNCTION IS PERFORMED FOR SINGLE VOLUME DATA SETS WITH     */
*/*       DISPOSITION OF (NEW,CATLG) (EXCEPT THOSE ALLOCATED BY      */
*/*       DYNAMIC ALLOCATION), FOR SINGLE VOLUME DATA SETS           */
*/*       BEING RECATALOGED, AND FOR SINGLE VOLUME DATA SETS THAT    */
*/*       WERE RETRIEVED FROM THE CATALOG, HAD A DISP OF KEEP OR PASS*/
*/*       AND HAD THEIR DSCB TTR CHANGED DURING EXECUTION. THE       */
*/*       DSCBTTR IS USED BY THE OPEN ROUTINES TO READ THE DSCB      */
*/*       DIRECTLY INSTEAD OF SEARCHING THE VTOC LOOKING FOR IT.     */
*/*       FOR A DATA SET ALLOCATED BY DYNAMIC ALLOCATION AS          */
*/*       (NEW,CATLG) THIS FUNCTION IS PERFORMED AT ALLOCATION       */
*/*       TIME.                                                      */
*/*                                                                  */
*/*     ISSUING MESSAGES -                                           */
*/*       IF MESSAGES ARE REQUESTED AND A ZERO RETURN        @YM08111*/
*/*       CODE IS RECEIVED FROM CATALOG MANAGEMENT OR,       @YM08111*/
*/*       IF THE SUPPRESS-ERROR-MSG                          @YM08111*/
*/*       INDICATOR IS OFF AND A NON-ZERO RETURN CODE IS RECEIVED    */
*/*       FROM CATALOG MANAGEMENT, THE DISPOSITION MESSAGE ROUTINE IS*/
*/*       INVOKED TO ISSUE THE MESSAGE. IF A NON-ZERO RETURN CODE IS */
*/*       RECEIVED FROM CATALOG MANAGEMENT, THE RETURN CODE IS       */
*/*       CONVERTED TO A MSG CODE. SEE IEFZB446 FOR THE CONVERSION   */
*/*       TABLE.                                                     */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     PRCRFMAP - PROCESSOR FUNCTION MAP (SEE A4A2DATA)             */
*/*     MSGDATA - MSG ROUTINE INTERFACE                              */
*/*     IRETCODE - INFORMATIONAL RETURN CODE                         */
*/*     DSNPTR - PTR TO DATA SET NAME FOR CATALOG            @YM07214*/
*/*     ADSNPTR - PTR TO DATA SET NAME FOR RECATALOG         @YM07214*/
*/*     MSGDSNP - PTR TO DATA SET NAME FOR MSG               @YM07214*/
*/*     VLSPTR - PTR TO VOLUME LIST                                  */
*/*     DSCBTTR - DSCBTTR FOR DATA SET                               */
*/*     JFCB - CONTAINS DENSITY                                      */
*/*     SIOALIAS - IF ON, ALIAS NAME IS IN JFCBX             @YM03584*/
*/*     JFCBXNAM - ALIAS NAME                                @YM03584*/
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - PROCESSING SUCCESSFUL                              */
*/*     OUTPUT -                                                     */
*/*       'CATALOGED'/'RECATALOGED' MSG ISSUED TO SYSOUT DATA        */
*/*         SET (IF REQUESTED)                                       */
*/*       CATALOG UPDATED                                            */
*/*       DSCBTTR UPDATED IN THE CATALOG                             */
*/*     RETURN CODE -                                                */
*/*       IRETCODE = ZERO                                            */
*/*   CONDITION - DISPOSITION NOT PERFORMED                          */
*/*     OUTPUT -                                                     */
*/*       'NOT CATLGD'/'RECATLGD' MESSAGE ISSUED                     */
*/*       CTLGMERR - CATALOG MANAGEMENT ERROR INDICATOR              */
*/*     RETURN CODE -                                                */
*/*       IRETCODE - SET TO CATALOG MANAGEMENT RETURN CODE           */
*/*                                                                  */
*/********************************************************************/
*CTLGPRCR: PROC;                                                02S0620
CTLGPRCR STM   @14,@12,@SA00003                                 02S0620
*IF CMSGONLY = OFF THEN                /* PROCESSING IS REQUIRED     */
         TM    CMSGONLY,B'01000000'                             02S0621
         BNZ   @RF00621                                         02S0621
*  DO;                                                          02S0622
*    DSPPARML = DSPPARML && DSPPARML;  /* CLEAR CATLG PARM LIST      */
         XC    DSPPARML(20),DSPPARML                            02S0623
*    IF RCATLG = ON THEN               /* RECATALOG REQUEST          */
         TM    RCATLG,B'10000000'                               02S0624
         BNO   @RF00624                                         02S0624
*      DO;                                                      02S0625
*        PARMDSNP =  ADSNPTR;          /* DSN FOR RECATALOG  @YM07214*/
         MVC   PARMDSNP(4),ADSNPTR                              02S0626
*        PARMOP = RECATOP;             /* SET CAMLST TO RECATALOG    */
         MVC   PARMOP(2),@CB00261                               02S0627
*        IF INITOSW = ON &             /* ETIOT INTIALIZED?  @ZA06981*/
*           DSPSCATA = ON &            /* ALLOCATE CATALOGS? @ZA06981*/
*           CATRETCD = ZERO THEN       /* CATALOG ALLOC ERR? @ZA06981*/
         CLC   INITOSW(4),@CF00252                              02S0628
         BNE   @RF00628                                         02S0628
         L     @08,@PC00001                                     02S0628
         TM    DSPSCATA(@08),B'01000000'                        02S0628
         BNO   @RF00628                                         02S0628
         ICM   @08,15,CATRETCD                                  02S0628
         BNZ   @RF00628                                         02S0628
*          PARMNODA = OFF;             /* DYNAMIC ALLOC OKAY @ZA06981*/
         NI    PARMNODA,B'01111111'                             02S0629
*      END;                                                     02S0630
*    ELSE                              /* CATALOG REQUEST            */
*      DO;                             /* CATALOG REQUEST    @YM07214*/
         B     @RC00624                                         02S0631
@RF00624 DS    0H                                               02S0632
*        PARMDSNP = DSNPTR;            /* DSN FOR CATALOG    @YM07214*/
         MVC   PARMDSNP(4),DSNPTR                               02S0632
*        PARMOP = CATLGOP;             /* SET CAMLST TO CATALOG      */
         MVC   PARMOP(2),@CB00205                               02S0633
*        IF INITIOSW = ON &            /* ETIOT INITIALIZED? @ZA06981*/
*           DSPSCATA = ON &            /* ALLOCATE CATALOGS? @ZA06981*/
*           CATRETCD = ZERO THEN       /* CATALOG ALLOC ERR? @ZA06981*/
         TM    INITIOSW,B'00000100'                             02S0634
         BNO   @RF00634                                         02S0634
         L     @08,@PC00001                                     02S0634
         TM    DSPSCATA(@08),B'01000000'                        02S0634
         BNO   @RF00634                                         02S0634
         ICM   @08,15,CATRETCD                                  02S0634
         BNZ   @RF00634                                         02S0634
*          PARMNODA = OFF;             /* DYNAMIC ALLOC OKAY @ZA06981*/
         NI    PARMNODA,B'01111111'                             02S0635
*      END;                            /*                    @YM07214*/
@RF00634 DS    0H                                               02S0637
*    IF UDSCBTTR = ON THEN             /* UPDATE THE DSCB TTR        */
@RC00624 TM    UDSCBTTR,B'00000100'                             02S0637
         BNO   @RF00637                                         02S0637
*      DO;                                                      02S0638
*        PARMUTTR = ON;                /* SET UPDATE DSCBTTR IN CAMLS*/
         OI    PARMUTTR,B'00000010'                             02S0639
*        PARMTTRP = ADDR(DSCBTTR);     /* SET DSCBTTR PTR IN CAMLST  */
         LA    @08,DSCBTTR                                      02S0640
         ST    @08,PARMTTRP                                     02S0640
*      END;                                                     02S0641
*    PARMVLP = VLSTPTR;                /* SET VOL LIST PTR IN CAMLST */
@RF00637 MVC   PARMVLP(4),VLSTPTR                               02S0642
*    IF TAPEDS = ON & RCATLG=OFF THEN /* TAPE DATA SET & NOT RECATLG
*                                                            @YM03582*/
         TM    TAPEDS,B'00010000'                               02S0643
         BNO   @RF00643                                         02S0643
         TM    RCATLG,B'10000000'                               02S0643
         BNZ   @RF00643                                         02S0643
*      DO VOLCTR = ONE TO VLENTNO;     /* UPDATE DEVICE TYPES        */
         LA    VOLCTR,1                                         02S0644
         B     @DE00644                                         02S0644
@DL00644 DS    0H                                               02S0645
*        IF VL7TRK(VOLCTR) = NO THEN   /* MAX ELIGIBILITY    @YM07531*/
         L     @08,VLSTPTR                                      02S0645
         LR    @03,VOLCTR                                       02S0645
         MH    @03,@CH00038                                     02S0645
         ST    @03,@TF00001                                     02S0645
         ALR   @03,@08                                          02S0645
         AL    @03,@CF02363                                     02S0645
         TM    VL7TRK-3(@03),B'10000000'                        02S0645
         BNZ   @RF00645                                         02S0645
*          DO;                         /*9 TRACK TAPES ONLY  @YM07531*/
*            IF CTLG3400 = OFF THEN    /* NOT 3400 ONLY REQUEST      */
         TM    CTLG3400,B'00100000'                             02S0647
         BNZ   @RF00647                                         02S0647
*              VLDEV(VOLCTR,4) = TAPE2400; /* MAKE ELIGIBL FOR 2400'S*/
         AL    @08,@TF00001                                     02S0648
         AL    @08,@CF02364                                     02S0648
         MVI   VLDEV-2(@08),X'01'                               02S0648
*            IF JFCDEN = 'D3'X THEN    /* DS WRITTEN IN 6250 BPI     */
@RF00647 L     @08,JFCBPTR                                      02S0649
         CLI   JFCDEN(@08),X'D3'                                02S0649
         BNE   @RF00649                                         02S0649
*              DO;                                              02S0650
*                VLDEV(VOLCTR,1:2) = ELIG6250;/* MAKE MAX ELIGIBILITY*/
         L     @08,VLSTPTR                                      02S0651
         LR    @03,VOLCTR                                       02S0651
         MH    @03,@CH00038                                     02S0651
         ST    @03,@TF00001                                     02S0651
         ALR   @03,@08                                          02S0651
         AL    @03,@CF02357                                     02S0651
         MVC   VLDEV-2(2,@03),@CB00222                          02S0651
*                VLDEV(VOLCTR,4) = TAPE3400; /* ELIGIBL FOR 3400 ONLY*/
         AL    @08,@TF00001                                     02S0652
         AL    @08,@CF02364                                     02S0652
         MVI   VLDEV-2(@08),X'03'                               02S0652
*              END;                                             02S0653
*            IF JFCDEN = 'C3'X THEN    /* WRITTEN IN 1600 BPI        */
@RF00649 L     @08,JFCBPTR                                      02S0654
         CLI   JFCDEN(@08),X'C3'                                02S0654
         BNE   @RF00654                                         02S0654
*              VLDEV(VOLCTR,1:2) = ELIG1600;/* MAKE MAX ELIGIBILITY  */
         LR    @08,VOLCTR                                       02S0655
         MH    @08,@CH00038                                     02S0655
         L     @03,VLSTPTR                                      02S0655
         ALR   @03,@08                                          02S0655
         AL    @03,@CF02357                                     02S0655
         MVC   VLDEV-2(2,@03),@CB00220                          02S0655
*            IF JFCDEN = '83'X THEN    /* WRITTEN IN 800 BPI         */
@RF00654 L     @08,JFCBPTR                                      02S0656
         CLI   JFCDEN(@08),X'83'                                02S0656
         BNE   @RF00656                                         02S0656
*              IF CTLG3400 = OFF THEN  /*NOT 3400 ONLY               */
         TM    CTLG3400,B'00100000'                             02S0657
         BNZ   @RF00657                                         02S0657
*                VLDEV(VOLCTR,1:2) = ELIG800; /* MAKE MAX ELIGIBILITY*/
         LR    @08,VOLCTR                                       02S0658
         MH    @08,@CH00038                                     02S0658
         L     @03,VLSTPTR                                      02S0658
         ALR   @03,@08                                          02S0658
         AL    @03,@CF02357                                     02S0658
         MVC   VLDEV-2(2,@03),@CB00224                          02S0658
*              ELSE                    /*3400 ONLY                   */
*                VLDEV(VOLCTR,1:2) = ELIG816;/*MAKE MAX ELIGIBILITY  */
         B     @RC00657                                         02S0659
@RF00657 LR    @08,VOLCTR                                       02S0659
         MH    @08,@CH00038                                     02S0659
         L     @03,VLSTPTR                                      02S0659
         ALR   @03,@08                                          02S0659
         AL    @03,@CF02357                                     02S0659
         MVC   VLDEV-2(2,@03),@CB00226                          02S0659
*          END;                        /*END MAX ELIGIBILITY @YM07531*/
*        ELSE;                         /* 7 TRACK NULL ELSE  @YM07531*/
@RF00645 DS    0H                                               02S0662
*      END;                                                     02S0662
@RC00645 AL    VOLCTR,@CF00052                                  02S0662
@DE00644 L     @08,VLSTPTR                                      02S0662
         CH    VOLCTR,VLENTNO(,@08)                             02S0662
         BNH   @DL00644                                         02S0662
*    GEN REFS(DSPPARML)                                         02S0663
*       (CATALOG DSPPARML);            /* (RE) CATALOG THE DATA SET  */
@RF00643 DS    0H                                               02S0663
         CATALOG DSPPARML
*    IRETCODE = REG15;                 /* SAVE CAM RETURN CODE       */
         ST    REG15,IRETCODE                                   02S0664
*    IF AIRTCODE ^= ZERO THEN          /*RECATALOG SITUATION @YM06071*/
         L     @08,AIRTCODE                                     02S0665
         LTR   @08,@08                                          02S0665
         BZ    @RF00665                                         02S0665
*      IF SIOTCALC = NO THEN           /*NOT CTLG'D AT ALLOC @YM06071*/
         L     @01,SIOTPTR                                      02S0666
         TM    SIOTCALC(@01),B'00010000'                        02S0666
         BNZ   @RF00666                                         02S0666
*        DO;                           /*                    @YM06071*/
*          CTLGMERR = ON;              /*INDICATE CATALOG MANAGEMENT
*                                        ERROR               @YM06071*/
         OI    CTLGMERR,B'00010000'                             02S0668
*          MSGID = NCMSGID;            /*SET MSGID FOR CATALOG ERROR
*                                        MESSAGE             @YM06071*/
         MVI   MSGID,X'03'                                      02S0669
*          DISPID = NRCTLGID;          /*MSG TEXT-NOT RECTLGD@YM06164*/
         MVI   DISPID,X'0C'                                     02S0670
*          IRETCODE = AIRTCODE;        /*SET CTLG MGNT CODE  @YM06071*/
         ST    @08,IRETCODE                                     02S0671
*        END;                          /*                    @YM06071*/
*      ELSE;                           /*CTLGD AT ALLOC      @YM07612*/
@RF00666 DS    0H                                               02S0674
*    ELSE                              /*                    @YM06071*/
*      IF IRETCODE ^= ZERO THEN        /* DATA SET NOT (RE) CATLGD   */
         B     @RC00665                                         02S0674
@RF00665 ICM   @08,15,IRETCODE                                  02S0674
         BZ    @RF00674                                         02S0674
*        DO;                                                    02S0675
*          CTLGMERR = ON;              /* ERROR OCCURRED IN CAM      */
         OI    CTLGMERR,B'00010000'                             02S0676
*          MSGID = NCMSGID;            /* IEF287I MESSAGE            */
         MVI   MSGID,X'03'                                      02S0677
*          DISPID = DISPID + LASTID;   /* GET CORRECT DISP IS        */
         IC    @08,DISPID                                       02S0678
         LA    @08,6(,@08)                                      02S0678
         STC   @08,DISPID                                       02S0678
*        END;                                                   02S0679
*  END;                                                         02S0680
@RF00674 DS    0H                                               02S0680
@RC00665 DS    0H                                               02S0681
*IF IRETCODE ^= ZERO THEN              /* ERROR HAS OCCURRED         */
@RF00621 L     @08,IRETCODE                                     02S0681
         LTR   @08,@08                                          02S0681
         BZ    @RF00681                                         02S0681
*  DO;                                                          02S0682
*    IF CMNODEN = NO THEN              /*NOT DENSITY ERROR   @YM06419*/
         TM    CMNODEN(CMRBPTR),B'00000100'                     02S0683
         BNZ   @RF00683                                         02S0683
*      MRETCODE = CATLERRC(IRETCODE/4); /*TRANSLATE CATLG ERROR CODE */
         LR    @00,@08                                          02S0684
         SRDA  @00,32                                           02S0684
         D     @00,@CF00163                                     02S0684
         SLR   @08,@08                                          02S0684
         IC    @08,CATLERRC-1(@01)                              02S0684
         ST    @08,MRETCODE                                     02S0684
*    IF PRCREMSG = OFF THEN            /* MSGS NOT SUPRESSED         */
@RF00683 TM    PRCREMSG,B'00100000'                             02S0685
         BNZ   @RF00685                                         02S0685
*      MSGSYSDS = ON;                  /* MSG GOES TO SYSOUT         */
         OI    MSGSYSDS,B'10000000'                             02S0686
*  END;                                                         02S0687
@RF00685 DS    0H                                               02S0688
*IF ((PRCRMSGS = ON × PRCMSTAT = ON) & /* MSG MUST BE ISSUED @YM08111*/
*    IRETCODE = ZERO) ×                /* IF NOT ERROR       @YM08111*/
*     (PRCREMSG = OFF & IRETCODE ^= ZERO) THEN /* OR IF ERROR AND
*                                        ERROR MSGS. NOT        02S0688
*                                        SUPPRESSED          @YM08111*/
@RF00681 TM    PRCRMSGS,B'11000000'                             02S0688
         BZ    @GL00078                                         02S0688
         ICM   @08,15,IRETCODE                                  02S0688
         BZ    @RT00688                                         02S0688
@GL00078 TM    PRCREMSG,B'00100000'                             02S0688
         BNZ   @RF00688                                         02S0688
         ICM   @08,15,IRETCODE                                  02S0688
         BZ    @RF00688                                         02S0688
@RT00688 DS    0H                                               02S0689
*  CALL IEFAB4B0                       /*SEND MSG            @YM07214*/
*           (MSGDATA,VLSTPTR,MSGDSNP,MRETCODE,JSCBPTR); /*   @YM07214*/
         LA    @08,MSGDATA                                      02S0689
         ST    @08,@AL00001                                     02S0689
         LA    @08,VLSTPTR                                      02S0689
         ST    @08,@AL00001+4                                   02S0689
         LA    @08,MSGDSNP                                      02S0689
         ST    @08,@AL00001+8                                   02S0689
         LA    @08,MRETCODE                                     02S0689
         ST    @08,@AL00001+12                                  02S0689
         L     @08,@PC00001+8                                   02S0689
         ST    @08,@AL00001+16                                  02S0689
         L     @15,@CV00308                                     02S0689
         LA    @01,@AL00001                                     02S0689
         BALR  @14,@15                                          02S0689
*END CTLGPRCR;                                                  02S0690
@EL00003 DS    0H                                               02S0690
@EF00003 DS    0H                                               02S0690
@ER00003 LM    @14,@12,@SA00003                                 02S0690
         BR    @14                                              02S0690
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - UNCPRCR                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - UNCATALOG DISPOSITION PROCESSOR               */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THE FUNCTION OF THIS SEGMENT IS TO UNCATALOG DATA SETS AND     */
*/*   ISSUE MESSAGES INDICATING THE DISPOSITION OF THE DATA SET.     */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     UNCATALOG DATA SETS -                                        */
*/*       THE CATALOG MANAGEMENT PARAMETER LIST IS FILLED IN WITH    */
*/*       THE UNCATALOG FUNCTION CODE AND THE POINTER TO THE         */
*/*       DATA SET NAME.                                             */
*/*                                                                  */
*/*       WHEN DATA SETS ARE UNCATALOGED DURING A WARMSTART  @ZA06981*/
*/*       THIS MODULE WILL ALLOW CATALOG MANAGEMENT TO       @ZA06981*/
*/*       DYNAMICALLY ALLOCATE PRIVATE CATALOGS, IF STEPCATS @ZA06981*/
*/*       WERE ALLOCATED SUCCESSFULLY OR NOT SPECIFIED.      @ZA06981*/
*/*                                                          @ZA06981*/
*/*     ISSUE MESSAGES -                                             */
*/*       IF MESSAGES ARE REQUESTED AND A ZERO RETURN CODE   @YM08111*/
*/*       IS RECEIVED FROM CATALOG MANAGEMENT                @YM08111*/
*/*       OR, IF THE SUPPRESS-ERROR-MSG                      @YM08111*/
*/*       INDICATOR IS OFF AND A NON-ZERO RETURN CODE IS RECEIVED    */
*/*       FROM CATALOG MANAGEMENT, THE DISPOSITION MESSAGE ROUTINE   */
*/*       IS INVOKED TO ISSUE THE MESSAGE. IF A NON-ZERO RETURN      */
*/*       CODE IS RECEIVED THE RETURN CODE IS CONVERTED              */
*/*       TO A MSG CODE. SEE IEFZB446 FOR THE CONVERSION TABLE.      */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - UNCATALOG DATA SETS                                  */
*/*   INPUT -                                                        */
*/*     PRCRFMAP - PROCESSOR FUNCTION MAP (SEE A4A2DATA)             */
*/*     ADSNPTR - DATA SET NAME ADDRESS                      @YM07214*/
*/*     MSGDSNP - DATA SET NAME ADDR FOR MSG                 @YM07214*/
*/*     MSGDATA - MSG ROUTINE INTERFACE                              */
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - DATA SET UNCATALOGED                               */
*/*     OUTPUT -                                                     */
*/*       CATALOG UPDATED                                            */
*/*       'UNCATALOGED' MESSAGE ISSUED (IF REQUESTED)                */
*/*     RETURN CODE -                                                */
*/*       IRETCODE = ZERO                                            */
*/*                                                                  */
*/*   CONDITION - DATA SET NOT UNCATALOGED                           */
*/*     OUTPUT -                                                     */
*/*       'NOT UNCATLGD' MESSAGE ISSUED                              */
*/*       CTLGMERR - CATALOG MANAGEMENT ERROR INDICATOR              */
*/*     RETURN CODE -                                                */
*/*       IRETCODE = RETURN CODE FROM CATALOG MANAGEMENT             */
*/*                                                                  */
*/********************************************************************/
*UNCPRCR: PROC;                                                 02S0691
UNCPRCR  STM   @14,@12,@SA00004                                 02S0691
*DSPPARML = DSPPARML && DSPPARML;      /* CLEAR UNCATLG PARM LIST    */
         XC    DSPPARML(20),DSPPARML                            02S0692
*PARMOP = UNCATOP;                     /* CAMLST FUNC CODE = UNCATLG */
         MVC   PARMOP(2),@CB00299                               02S0693
*IF INITIOSW = ON &                    /* ETIOT INITIALIZED? @ZA06981*/
*   DSPSCATA = ON &                    /* ALLOCATE CATALOGS? @ZA06981*/
*   CATRETCD = ZERO THEN               /* CATALOG ALLOC ERR? @ZA06981*/
         TM    INITIOSW,B'00000100'                             02S0694
         BNO   @RF00694                                         02S0694
         L     @15,@PC00001                                     02S0694
         TM    DSPSCATA(@15),B'01000000'                        02S0694
         BNO   @RF00694                                         02S0694
         ICM   @15,15,CATRETCD                                  02S0694
         BNZ   @RF00694                                         02S0694
*  PARMNODA = OFF;                     /* DYNAMIC ALLOC OKAY @ZA06981*/
         NI    PARMNODA,B'01111111'                             02S0695
*PARMDSNP = ADSNPTR;                   /* CAMLST DSNAME PTR  @YM07214*/
@RF00694 MVC   PARMDSNP(4),ADSNPTR                              02S0696
*GEN REFS(DSPPARML)                                             02S0697
*    (CATALOG DSPPARML);               /* UNCATALOG THE DATA SET     */
         CATALOG DSPPARML
*IRETCODE = REG15;                     /* SAVE CAM ERROR CODE        */
         ST    REG15,IRETCODE                                   02S0698
*IF IRETCODE ^= ZERO THEN              /* UNCATLG NOT SUCCESSFUL     */
         L     @15,IRETCODE                                     02S0699
         LTR   @15,@15                                          02S0699
         BZ    @RF00699                                         02S0699
*  DO;                                                          02S0700
*    CTLGMERR = ON;                    /*CATLG MNGMT ERROR           */
         OI    CTLGMERR,B'00010000'                             02S0701
*    MSGID = NCMSGID;                  /* IEF287I MSG                */
         MVI   MSGID,X'03'                                      02S0702
*    DISPID = DISPID + LASTID;         /* NOT UNCATLGD MESSAGE       */
         IC    @01,DISPID                                       02S0703
         LA    @01,6(,@01)                                      02S0703
         STC   @01,DISPID                                       02S0703
*    MRETCODE = CATLERRC(IRETCODE/4);  /* CONVERT ERR CODE FOR MSG   */
         LR    @00,@15                                          02S0704
         SRDA  @00,32                                           02S0704
         D     @00,@CF00163                                     02S0704
         SLR   @00,@00                                          02S0704
         IC    @00,CATLERRC-1(@01)                              02S0704
         ST    @00,MRETCODE                                     02S0704
*    IF PRCREMSG = OFF THEN            /* MESSAGES NOT SUPPRESSED    */
         TM    PRCREMSG,B'00100000'                             02S0705
         BNZ   @RF00705                                         02S0705
*      MSGSYSDS = ON;                  /* MSG GOES TO SYSOUT         */
         OI    MSGSYSDS,B'10000000'                             02S0706
*  END;                                                         02S0707
@RF00705 DS    0H                                               02S0708
*IF ((PRCRMSGS = ON × PRCMSTAT = ON) & /* MSG MUST BE ISSUED @YM08111*/
*    IRETCODE = ZERO) ×                /* IF NOT ERROR       @YM08111*/
*    (PRCREMSG = OFF & IRETCODE ^= ZERO) THEN /* IF NOT ERROR AND
*                                         ERROR MSGS NOT        02S0708
*                                         SUPPRESSED         @YM08111*/
@RF00699 TM    PRCRMSGS,B'11000000'                             02S0708
         BZ    @GL00083                                         02S0708
         ICM   @15,15,IRETCODE                                  02S0708
         BZ    @RT00708                                         02S0708
@GL00083 TM    PRCREMSG,B'00100000'                             02S0708
         BNZ   @RF00708                                         02S0708
         ICM   @15,15,IRETCODE                                  02S0708
         BZ    @RF00708                                         02S0708
@RT00708 DS    0H                                               02S0709
*  CALL IEFAB4B0                       /*SEND MSG            @YM07214*/
*           (MSGDATA,VLSTPTR,MSGDSNP,MRETCODE,JSCBPTR); /*   @YM07214*/
         LA    @15,MSGDATA                                      02S0709
         ST    @15,@AL00001                                     02S0709
         LA    @15,VLSTPTR                                      02S0709
         ST    @15,@AL00001+4                                   02S0709
         LA    @15,MSGDSNP                                      02S0709
         ST    @15,@AL00001+8                                   02S0709
         LA    @15,MRETCODE                                     02S0709
         ST    @15,@AL00001+12                                  02S0709
         L     @15,@PC00001+8                                   02S0709
         ST    @15,@AL00001+16                                  02S0709
         L     @15,@CV00308                                     02S0709
         LA    @01,@AL00001                                     02S0709
         BALR  @14,@15                                          02S0709
*END UNCPRCR;                                                   02S0710
@EL00004 DS    0H                                               02S0710
@EF00004 DS    0H                                               02S0710
@ER00004 LM    @14,@12,@SA00004                                 02S0710
         BR    @14                                              02S0710
*END IEFAB4A2                                                   01S0711
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A4A2SPEC)                                        *
*/*%INCLUDE SYSLIB  (A4A2DATA)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFJESCT)                                        *
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                        *
*/*%INCLUDE SYSLIB  (IEFJFCBX)                                        *
*/*%INCLUDE SYSLIB  (IEFJSSIB)                                        *
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                        *
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*/*%INCLUDE SYSLIB  (IEFZB439)                                        *
*/*%INCLUDE SYSLIB  (IEFZB441)                                        *
*/*%INCLUDE SYSLIB  (IEFZB446)                                        *
*/*%INCLUDE SYSLIB  (IEFZB449)                                        *
*/*%INCLUDE SYSLIB  (IHADSAB )                                        *
*/*%INCLUDE SYSLIB  (IHASUBIT)                                        *
*/*%INCLUDE SYSLIB  (PRCSDISP)                                        *
*/*%INCLUDE SYSLIB  (PRCDSPEC)                                        *
*/*%INCLUDE SYSLIB  (BDSPINT )                                        *
*/*%INCLUDE SYSLIB  (BDSPSPEC)                                        *
*/*%INCLUDE SYSLIB  (BVOLLST )                                        *
*/*%INCLUDE SYSLIB  (BVLSTSPC)                                        *
*/*%INCLUDE SYSLIB  (BLDETIOT)                                        *
*/*%INCLUDE SYSLIB  (BLDESPEC)                                        *
*/*%INCLUDE SYSLIB  (KEEPPRCR)                                        *
*/*%INCLUDE SYSLIB  (KEEPSPEC)                                        *
*/*%INCLUDE SYSLIB  (NVLSTPRC)                                        *
*/*%INCLUDE SYSLIB  (NVLSTSPC)                                        *
*/*%INCLUDE SYSLIB  (PRCSSSDS)                                        *
*/*%INCLUDE SYSLIB  (PSSDSPEC)                                        *
*/*%INCLUDE SYSLIB  (DELPRCR )                                        *
*/*%INCLUDE SYSLIB  (DELSPEC )                                        *
*/*%INCLUDE SYSLIB  (DELERPRC)                                        *
*/*%INCLUDE SYSLIB  (DERRSPEC)                                        *
*/*%INCLUDE SYSLIB  (CTLGPRCR)                                        *
*/*%INCLUDE SYSLIB  (CTLGSPEC)                                        *
*/*%INCLUDE SYSLIB  (UNCPRCR )                                        *
*/*%INCLUDE SYSLIB  (UNCSPEC )                                        *
*;                                                              01S0711
@DATA    DS    0H
@CH00173 DC    H'2'
@CH00090 DC    H'3'
@CH00085 DC    H'5'
@CH00063 DC    H'6'
@CH00183 DC    H'7'
@CH00038 DC    H'12'
@CH00064 DC    H'15'
@CH01473 DC    H'20'
@CH02329 DC    H'36'
@CH02330 DC    H'64'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    6F
@SA00003 DS    15F
@SA00002 DS    15F
@SA00004 DS    15F
@AL00001 DS    6A
@TF00001 DS    F
IEFAB4A2 CSECT
         DS    0F
@CF00304 DC    F'0'
@CH00304 EQU   @CF00304+2
@CF00052 DC    F'1'
@CH00052 EQU   @CF00052+2
@CF00163 DC    F'4'
@CH00163 EQU   @CF00163+2
@CF00082 DC    F'8'
@CH00082 EQU   @CF00082+2
@CF02357 DC    F'-10'
@CF02363 DC    F'-9'
@CF02364 DC    F'-7'
@CF02358 DC    F'-6'
@CF00282 DC    XL4'E6000000'
@CF00252 DC    BL4'1'
@DATD    DSECT
         DS    0D
CURDSABP DS    A
DSABPTR  DS    A
JFCBPTR  DS    A
SIOTPTR  DS    A
CATRETCD DS    F
VLSTCNT  DS    F
VLSTSIZE DS    F
TIOTPTR  DS    A
UCBPTR   DS    A
CFMAPTR  DS    A
GTSTRTCD DS    F
INITOSW  DS    F
VMRBSPTR DS    A
VMVRBSZE DS    F
VMVREQBP DS    A
DSPPARML DS    CL20
         ORG   DSPPARML
PARMND1  DS    BL4
         ORG   PARMND1
PARMOP   DS    BL2
         ORG   PARMOP
@NM00002 DS    BL1
PARMNODA DS    BL1
@NM00003 EQU   PARMOP+1
PARMUTTR EQU   PARMOP+1
         ORG   PARMND1+2
PARMOPTS DS    BL2
         ORG   PARMOPTS
PARMNNQ  DS    BL1
PARMSCRO EQU   PARMOPTS+0
         ORG   DSPPARML+4
PARMDSNP DS    AL4
         ORG   PARMDSNP
PARMSMF  DS    BL1
         ORG   DSPPARML+8
@NM00004 DS    FL4
PARMVLP  DS    AL4
PARMTTRP DS    AL4
         ORG   DSPPARML+20
DISPRCR  DS    BL1
         ORG   DISPRCR
@NM00005 DS    BL1
@NM00006 EQU   DISPRCR+0
@NM00007 EQU   DISPRCR+0
DSPPASS  EQU   DISPRCR+0
DSPKEEP  EQU   DISPRCR+0
DSPDEL   EQU   DISPRCR+0
DSPCATLG EQU   DISPRCR+0
DSPUCTLG EQU   DISPRCR+0
         ORG   DISPRCR+1
DSPSWS   DS    CL1
         ORG   DSPSWS
ALOCDSW  DS    BL1
DSPFNDSW EQU   DSPSWS+0
NOMSGSW  EQU   DSPSWS+0
MSGOPSW  EQU   DSPSWS+0
DORWNDSW EQU   DSPSWS+0
INITIOSW EQU   DSPSWS+0
ALETIOSW EQU   DSPSWS+0
         ORG   DSPSWS+1
MSGDATA  DS    CL3
         ORG   MSGDATA
MSGID    DS    FL1
MSGFLAGS DS    BL1
         ORG   MSGFLAGS
MSGSYSDS DS    BL1
MSGMSTAT EQU   MSGFLAGS+0
MSGTOPER EQU   MSGFLAGS+0
MSG0RCDE EQU   MSGFLAGS+0
MSGERCDE EQU   MSGFLAGS+0
MSGTPEDS EQU   MSGFLAGS+0
MSGNOVOL EQU   MSGFLAGS+0
         ORG   MSGDATA+2
DISPID   DS    FL1
         ORG   MSGDATA+3
         DS    CL3
PRCSDATA DS    CL40
         ORG   PRCSDATA
MSGDSNP  DS    AL4
AIRTCODE DS    FL4
DDENTPTR DS    AL4
DLUCBPTR DS    AL4
DSNPTR   DS    AL4
ADSNPTR  DS    AL4
VLSTPTR  DS    AL4
IRETCODE DS    FL4
MRETCODE DS    FL4
TAPEDENS DS    BL1
DSCBTTR  DS    CL3
         ORG   PRCSDATA+40
PRCSFMAP DS    CL6
         ORG   PRCSFMAP
ALLPRMAP DS    BL1
         ORG   ALLPRMAP
PRCRMSGS DS    BL1
PRCMSTAT EQU   ALLPRMAP+0
PRCREMSG EQU   ALLPRMAP+0
TAPEDS   EQU   ALLPRMAP+0
DADS     EQU   ALLPRMAP+0
UDSCBTTR EQU   ALLPRMAP+0
@NM00008 EQU   ALLPRMAP+0
@NM00009 EQU   ALLPRMAP+0
         ORG   PRCSFMAP+1
KEEPMAP  DS    BL1
DELMAP   DS    BL2
         ORG   DELMAP
INVUCBAD DS    BL1
NORWND   EQU   DELMAP+0
UNCTLGDS EQU   DELMAP+0
TIOTNQED EQU   DELMAP+0
PURGEDS  EQU   DELMAP+0
SCRERROR EQU   DELMAP+0
VIRDSMSG EQU   DELMAP+0
VIRTDS   EQU   DELMAP+0
SUPRSMF  DS    BL1
         ORG   PRCSFMAP+4
CTLGMAP  DS    BL1
         ORG   CTLGMAP
RCATLG   DS    BL1
CMSGONLY EQU   CTLGMAP+0
CTLG3400 EQU   CTLGMAP+0
CTLGMERR EQU   CTLGMAP+0
@NM00010 EQU   CTLGMAP+0
         ORG   PRCSFMAP+5
UCATMAP  DS    BL1
         ORG   PRCSFMAP+6
BETIOFMP DS    BL1
         ORG   BETIOFMP
BETINIT  DS    BL1
BETALLOC EQU   BETIOFMP+0
BETFREE  EQU   BETIOFMP+0
BETUNAL  EQU   BETIOFMP+0
BETALCAT EQU   BETIOFMP+0
BETUNCAT EQU   BETIOFMP+0
@NM00011 EQU   BETIOFMP+0
         ORG   BETIOFMP+1
DEVTYPE  DS    CL4
SETIDMSK DS    BL1
LSSIB    DS    CL36
SSOB     DS    CL20
         ORG   SSOB
SSOBID   DS    CL4
SSOBLEN  DS    FL2
SSOBFUNC DS    FL2
SSOBSSIB DS    AL4
SSOBRETN DS    AL4
SSOBINDV DS    AL4
         ORG   SSOB+20
SSAL     DS    CL64
         ORG   SSAL
SSALLEN  DS    FL2
SSALFLG1 DS    BL1
         ORG   SSALFLG1
SSALDELT DS    BL1
SSALHOLD EQU   SSALFLG1+0
SSALNHLD EQU   SSALFLG1+0
SSALWAIT EQU   SSALFLG1+0
SSALTRKM EQU   SSALFLG1+0
SSALSPIN EQU   SSALFLG1+0
SSALASNM EQU   SSALFLG1+0
SSALKEEP EQU   SSALFLG1+0
         ORG   SSAL+3
@NM00040 DS    AL1
SSALDDNM DS    AL4
SSALDEST DS    AL4
SSALDISP DS    AL4
SSALDUMY DS    AL4
SSALSOUT DS    AL4
SSALUNIT DS    AL4
SSALPGMN DS    AL4
SSALFORM DS    AL4
SSALCLAS DS    AL4
SSALADSP DS    AL4
SSALCOPY DS    AL4
SSALSSNM DS    AL4
SSALJFCB DS    AL4
SSALSSCM DS    AL4
SSALCNCL DS    AL4
         ORG   SSAL+64
SSIBPTR  DS    31A
IEFAB4A2 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00307 DC    V(IEFAB4A3)
@CV00308 DC    V(IEFAB4B0)
@CV00309 DC    V(IEFAB4B2)
         DS    0D
GTSTZERO DC    F'0'
@CC00245 DC    C'    '
@CC00278 DC    C'SSIB'
@CC00280 DC    C'SSOB'
@CB00205 DC    X'20C0'
@CB00220 DC    X'3400'
@CB00222 DC    X'3200'
@CB00224 DC    X'3000'
@CB00226 DC    X'3420'
@CB00261 DC    X'1080'
@CB00266 DC    X'4180'
@CB00299 DC    X'0884'
CATLERRC DC    AL1(1)
         DC    AL1(2)
         DC    AL1(0)
         DC    AL1(3)
         DC    AL1(4)
         DC    AL1(6)
         DC    AL1(9)
         DC    10AL1(0)
         DC    XL1'0A'
IEFAB4A2 CSECT
         DS   0H
A4A2PTCH DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB4A2 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
VOLCTR   EQU   @02
SERCNTR  EQU   @04
RETCODE  EQU   @03
JVOLSEND EQU   @05
DEVCTR   EQU   @02
VLSERPTR EQU   @07
JFCBXPTR EQU   @06
CMRBPTR  EQU   @09
REG1     EQU   @01
REG0     EQU   @00
REG15    EQU   @15
GTSTR0   EQU   @00
GTSTR1   EQU   @01
GTSTR2   EQU   @02
GTSTR15  EQU   @15
GTSTR4   EQU   @04
GTSTR5   EQU   @05
GTSTR6   EQU   @06
GTSTR7   EQU   @07
GTSTR8   EQU   @08
GTSTR3   EQU   @03
CVTPTR   EQU   16
VOLLIST  EQU   0
VLSTHDR  EQU   VOLLIST
VLENTNO  EQU   VLSTHDR
VLSTENT  EQU   VOLLIST+2
VLDEV    EQU   VLSTENT
VLOPT    EQU   VLDEV+1
VL7TRK   EQU   VLOPT
VLSERNO  EQU   VLSTENT+4
VLFLSEQ  EQU   VLSTENT+10
VLRTNCDE EQU   VLFLSEQ+1
JVLSERS  EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
INDMSIOT EQU   0
SCTDDNAM EQU   INDMSIOT+4
SIOTDEST EQU   INDMSIOT+12
SCTUSADD EQU   INDMSIOT+20
SIOTBYT1 EQU   INDMSIOT+43
SIOVAMDS EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIOTBYT3 EQU   INDMSIOT+46
SIOALIAS EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOTTSTC EQU   INDMSIOT+47
SIOTSSGP EQU   SIOTTSTC
SIOTBYT0 EQU   INDMSIOT+52
SIOTSSDS EQU   SIOTBYT0
SCTSDISP EQU   INDMSIOT+55
S3400DSP EQU   SCTSDISP
SCTSBYT1 EQU   INDMSIOT+56
SCTSYSIN EQU   SCTSBYT1
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSYSOU EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT3 EQU   SIOTDEVT+2
SIO3TAPE EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIOUBYT4 EQU   SIOTDEVT+3
SIOUCBAD EQU   SCTUTYPE+5
SCTOUTNM EQU   INDMSIOT+68
SCTOUTNO EQU   INDMSIOT+76
SCTOUTPN EQU   INDMSIOT+80
SIOTBYT4 EQU   INDMSIOT+81
SIOTALTD EQU   INDMSIOT+92
SIOTOUTC EQU   INDMSIOT+96
SIOTBYT2 EQU   INDMSIOT+103
SIOTDSPD EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTSSNM EQU   INDMSIOT+104
SIOTETIO EQU   INDMSIOT+148
SJFCBPTR EQU   INDMSIOT+156
SIOTJFX  EQU   INDMSIOT+160
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESSSREQ EQU   JESCT+20
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SSREQ    EQU   0
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCCAT   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCBDSCB EQU   INFMJFCB+53
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCRCTLG EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCBIND2 EQU   INFMJFCB+87
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
JFCBX    EQU   0
JFCBXVOL EQU   JFCBX+4
JFCBXNAM EQU   JFCBX+96
JFCBXDEV EQU   JFCBX+140
JFCBXNXT EQU   JFCBX+172
SSIB     EQU   0
SSIBID   EQU   SSIB
SSIBLEN  EQU   SSIB+4
SSIBFLG1 EQU   SSIB+6
SSIBSSNM EQU   SSIB+8
TIOT1    EQU   0
TIOENTRY EQU   0
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOEWTCT EQU   TIOERLOC
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
TIOEFSRT EQU   TIOENTRY+17
POOLSTAR EQU   TIOENTRY+20
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBREW   EQU   UCBWGT
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00046 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
CMUNFMAP EQU   0
CMFMBYT1 EQU   CMUNFMAP
CMFMBYT2 EQU   CMUNFMAP+1
CMFMBYT3 EQU   CMUNFMAP+2
CMFMBYT4 EQU   CMUNFMAP+3
CMUNRB   EQU   0
CMNRBPTR EQU   CMUNRB
CMSIOPTR EQU   CMUNRB+4
CMINDIC  EQU   CMUNRB+8
CMRBBYT1 EQU   CMINDIC
CMNODISP EQU   CMRBBYT1
CMNMDISP EQU   CMRBBYT1
CMCNDISP EQU   CMRBBYT1
CMORDISP EQU   CMRBBYT1
CMOUSRID EQU   CMRBBYT1
CMINVUCB EQU   CMRBBYT1
CMRBBYT2 EQU   CMINDIC+1
CMSETPRV EQU   CMRBBYT2
CMRBBYT3 EQU   CMINDIC+2
CMDEL    EQU   CMRBBYT3
CMHOLD   EQU   CMRBBYT3
CMDYNUNA EQU   CMRBBYT3
CMOVSYOT EQU   CMRBBYT3
CMNOHOLD EQU   CMRBBYT3
CMSSKEEP EQU   CMRBBYT3
CMRBBYT4 EQU   CMINDIC+3
CMSCRERR EQU   CMRBBYT4
CMCATERR EQU   CMRBBYT4
CMSSIERR EQU   CMRBBYT4
CMINTERR EQU   CMRBBYT4
CMSSERR  EQU   CMRBBYT4
CMNODEN  EQU   CMRBBYT4
CMODISP  EQU   CMUNRB+12
CMOSYOUT EQU   CMUNRB+13
CMRETCDE EQU   CMUNRB+14
CMOPTFLD EQU   CMUNRB+16
CMESPA   EQU   0
CMESPARM EQU   CMESPA+756
CMESFLAG EQU   CMESPARM+24
DSAB     EQU   0
DSABTIOT EQU   DSAB+16
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABFLG2 EQU   DSAB+35
DSABFLG3 EQU   DSAB+36
DSABVMSC EQU   DSABFLG3
DSABFLG4 EQU   DSAB+37
DSABSSNM EQU   DSAB+48
DSABSSCM EQU   DSAB+52
DSABANMI EQU   0
DSABGIDL EQU   0
SUBITS   EQU   0
SUBYTE1  EQU   SUBITS
SUBYTE2  EQU   SUBITS+1
SUBYTE3  EQU   SUBITS+2
SUBYTE4  EQU   SUBITS+3
SU29BIT  EQU   SUBYTE4
SUBYTE5  EQU   SUBITS+4
SUBYTE6  EQU   SUBITS+5
SUBYTE7  EQU   SUBITS+6
SUBYTE8  EQU   SUBITS+7
SUBYTE9  EQU   SUBITS+8
SUBYTE10 EQU   SUBITS+9
SUBYTE11 EQU   SUBITS+10
SUBYTE12 EQU   SUBITS+11
SUBYTE13 EQU   SUBITS+12
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
SWAMGR   EQU   0
UCBBGN   EQU   0
DSPFMAP  EQU   0
DSPIMSGS EQU   DSPFMAP
DSPMSTAT EQU   DSPFMAP
DSPNEMSG EQU   DSPFMAP
DSPTIONQ EQU   DSPFMAP
DSPPURGE EQU   DSPFMAP
DSPNOSMF EQU   DSPFMAP
DSPVOL1  EQU   DSPFMAP
DSPBETIO EQU   DSPFMAP
DSPPUBPR EQU   DSPFMAP+1
DSPSCATA EQU   DSPFMAP+1
FRBPTR   EQU   0
JSCBPTR  EQU   0
CMESPAP  EQU   0
CATALDSN EQU   0
RSNCODE  EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTIHASU EQU   CVTS01+696
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCDEN   EQU   JFCSPPRT+1
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBNVOL EQU   JFCUCSEG+9
JFCBVOLS EQU   JFCUCSEG+10
JFCBS001 EQU   JFCBVOLS
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
JFCBSPNM EQU   JFCBS001+45
JFCBFLG3 EQU   JFCBSPNM
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
TIOUCBP  EQU   TIOEDEVE+1
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00045 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
CMUIDPTR EQU   CMOPTFLD
TUNALFLG EQU   TIOESTTB
TIORWND  EQU   TUNALFLG
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00067 EQU   TUNALFLG+1
TIOUNAL  EQU   TUNALFLG
TIONOPV  EQU   TUNALFLG
TIOPUBPV EQU   TUNALFLG
TIONSRCH EQU   TUNALFLG
@NM00066 EQU   TUNALFLG
@NM00065 EQU   TUNALFLG
@NM00064 EQU   TUNALFLG
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00045
UCBSKPFG EQU   @NM00045
UCBRIPND EQU   @NM00045
UCBRTIAC EQU   @NM00045
UCBRSV79 EQU   @NM00045
UCBRSV78 EQU   @NM00045
UCBRSV77 EQU   @NM00045
UCBOLTEP EQU   @NM00045
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00044 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBRV08 EQU   JFCBSPNM+1
JFCBRV07 EQU   JFCBFLG3
JFCBRV06 EQU   JFCBFLG3
JFCBRV05 EQU   JFCBFLG3
JFCBRV04 EQU   JFCBFLG3
JFCBRV03 EQU   JFCBFLG3
JFCBRV02 EQU   JFCBFLG3
JFCBEXP  EQU   JFCBFLG3
JFCDQDSP EQU   JFCBFLG3
JFCBDQTY EQU   JFCBS001+42
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBMSGP EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXAD EQU   JFCBS001+31
JFCBEXTL EQU   JFCBS001+30
JFCMSVGP EQU   JFCBS001+22
@NM00035 EQU   JFCBS001
JFCAVOLS EQU   JFCBVOLS
JFCBNTCS EQU   JFCUCSEG+8
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCBEXTP EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00034 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCORGAM EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00033 EQU   JFCLIMCT
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00001 EQU   DSPFMAP+1
SURV104  EQU   SUBITS+13
SURV103  EQU   SUBYTE13
SURV102  EQU   SUBYTE13
SURV101  EQU   SUBYTE13
SU100BT  EQU   SUBYTE13
SU99BIT  EQU   SUBYTE13
SU98BIT  EQU   SUBYTE13
SU97BIT  EQU   SUBYTE13
SU96BIT  EQU   SUBYTE13
SU95BIT  EQU   SUBYTE12
SU94BIT  EQU   SUBYTE12
SU93BIT  EQU   SUBYTE12
SU92BIT  EQU   SUBYTE12
SU91BIT  EQU   SUBYTE12
SU90BIT  EQU   SUBYTE12
SU89BIT  EQU   SUBYTE12
SU88BIT  EQU   SUBYTE12
SU87BIT  EQU   SUBYTE11
SU86BIT  EQU   SUBYTE11
SU85BIT  EQU   SUBYTE11
SU84BIT  EQU   SUBYTE11
SU83BIT  EQU   SUBYTE11
SU82BIT  EQU   SUBYTE11
SU81BIT  EQU   SUBYTE11
SU80BIT  EQU   SUBYTE11
SU79BIT  EQU   SUBYTE10
SU78BIT  EQU   SUBYTE10
SU77BIT  EQU   SUBYTE10
SU76BIT  EQU   SUBYTE10
SU75BIT  EQU   SUBYTE10
SU74BIT  EQU   SUBYTE10
SU73BIT  EQU   SUBYTE10
SU72BIT  EQU   SUBYTE10
SU71BIT  EQU   SUBYTE9
SU70BIT  EQU   SUBYTE9
SU69BIT  EQU   SUBYTE9
SU68BIT  EQU   SUBYTE9
SU67BIT  EQU   SUBYTE9
SU66BIT  EQU   SUBYTE9
SU65BIT  EQU   SUBYTE9
SU64BIT  EQU   SUBYTE9
SU63BIT  EQU   SUBYTE8
SU62BIT  EQU   SUBYTE8
SU61BIT  EQU   SUBYTE8
SU60BIT  EQU   SUBYTE8
SU59BIT  EQU   SUBYTE8
SU58BIT  EQU   SUBYTE8
SU57BIT  EQU   SUBYTE8
SU56BIT  EQU   SUBYTE8
SU55BIT  EQU   SUBYTE7
SU54BIT  EQU   SUBYTE7
SU53BIT  EQU   SUBYTE7
SU52BIT  EQU   SUBYTE7
SU51BIT  EQU   SUBYTE7
SU50BIT  EQU   SUBYTE7
SU49BIT  EQU   SUBYTE7
SU48BIT  EQU   SUBYTE7
SU47BIT  EQU   SUBYTE6
SU46BIT  EQU   SUBYTE6
SU45BIT  EQU   SUBYTE6
SU44BIT  EQU   SUBYTE6
SU43BIT  EQU   SUBYTE6
SU42BIT  EQU   SUBYTE6
SU41BIT  EQU   SUBYTE6
SU40BIT  EQU   SUBYTE6
SU39BIT  EQU   SUBYTE5
SU38BIT  EQU   SUBYTE5
SU37BIT  EQU   SUBYTE5
SU36BIT  EQU   SUBYTE5
SU35BIT  EQU   SUBYTE5
SU34BIT  EQU   SUBYTE5
SU33BIT  EQU   SUBYTE5
SU32BIT  EQU   SUBYTE5
SU31BIT  EQU   SUBYTE4
SU30BIT  EQU   SUBYTE4
SU28BIT  EQU   SUBYTE4
SU27BIT  EQU   SUBYTE4
SU26BIT  EQU   SUBYTE4
SU25BIT  EQU   SUBYTE4
SU24BIT  EQU   SUBYTE4
SU23BIT  EQU   SUBYTE3
SU22BIT  EQU   SUBYTE3
SU21BIT  EQU   SUBYTE3
SU20BIT  EQU   SUBYTE3
SU19BIT  EQU   SUBYTE3
SU18BIT  EQU   SUBYTE3
SU17BIT  EQU   SUBYTE3
SU16BIT  EQU   SUBYTE3
SU15BIT  EQU   SUBYTE2
SU14BIT  EQU   SUBYTE2
SU13BIT  EQU   SUBYTE2
SU12BIT  EQU   SUBYTE2
SU11BIT  EQU   SUBYTE2
SU10BIT  EQU   SUBYTE2
SU9BIT   EQU   SUBYTE2
SU8BIT   EQU   SUBYTE2
SU7BIT   EQU   SUBYTE1
SU6BIT   EQU   SUBYTE1
SU5BIT   EQU   SUBYTE1
SU4BIT   EQU   SUBYTE1
SU3BIT   EQU   SUBYTE1
SU2BIT   EQU   SUBYTE1
SU1BIT   EQU   SUBYTE1
SU0BIT   EQU   SUBYTE1
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABANAM EQU   DSABANMI+1
DSABANML EQU   DSABANMI
DSABRS04 EQU   DSAB+68
DSABSIOT EQU   DSAB+64
DSABRS03 EQU   DSAB+62
DSABDCBM EQU   DSAB+56
DSABPTTR EQU   DSAB+44
DSABTCBP EQU   DSAB+40
DSABRS02 EQU   DSAB+38
@NM00072 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00071 EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABCATL EQU   DSABFLG3
DSABVAM  EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00070 EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABIRM  EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABNUSE EQU   DSABFLG1
DSABCATM EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABDCAT EQU   DSABFLG1
DSABCONV EQU   DSABFLG1
DSABDCNV EQU   DSABFLG1
DSABPALC EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00069 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00068 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABOPCT EQU   DSAB+14
DSABLNTH EQU   DSAB+12
DSABBCHN EQU   DSAB+8
DSABFCHN EQU   DSAB+4
DSABID   EQU   DSAB
CMESNAMS EQU   CMESPARM+36
CMESVUTP EQU   CMESPARM+33
CMESSNUM EQU   CMESPARM+32
CMESDSEN EQU   CMESPARM+29
@NM00063 EQU   CMESFLAG+1
CMESVREL EQU   CMESFLAG
CMESLP1  EQU   CMESFLAG
CMESRCUR EQU   CMESFLAG
CMESUNAL EQU   CMESFLAG
CMESVOLB EQU   CMESFLAG
CMESDREL EQU   CMESFLAG
CMESCATL EQU   CMESFLAG
CMESDISP EQU   CMESFLAG
CMESGRMP EQU   CMESPARM+20
CMESSIOP EQU   CMESPARM+16
CMESRBNP EQU   CMESPARM+12
CMESRB1P EQU   CMESPARM+8
CMESJSCB EQU   CMESPARM+4
CMESFMAP EQU   CMESPARM
CMESAUTO EQU   CMESPA
CMOUNCAT EQU   CMODISP
CMOCATLG EQU   CMODISP
CMODEL   EQU   CMODISP
CMOKEEP  EQU   CMODISP
@NM00062 EQU   CMODISP
@NM00061 EQU   CMRBBYT4
@NM00060 EQU   CMRBBYT4
@NM00059 EQU   CMRBBYT3
CMWAIT   EQU   CMRBBYT3
@NM00058 EQU   CMRBBYT2
@NM00057 EQU   CMRBBYT2
@NM00056 EQU   CMRBBYT2
CMCKDAVL EQU   CMRBBYT2
CMCKAVOL EQU   CMRBBYT2
CMCHKUN  EQU   CMRBBYT2
CMNODSR  EQU   CMRBBYT2
@NM00055 EQU   CMRBBYT1
@NM00054 EQU   CMFMBYT4
@NM00053 EQU   CMFMBYT4
@NM00052 EQU   CMFMBYT4
@NM00051 EQU   CMFMBYT4
@NM00050 EQU   CMFMBYT4
@NM00049 EQU   CMFMBYT4
CMALSTCT EQU   CMFMBYT4
CMLSTCJS EQU   CMFMBYT4
CMJES3   EQU   CMFMBYT3
@NM00048 EQU   CMFMBYT3
@NM00047 EQU   CMFMBYT3
CMSPSCR  EQU   CMFMBYT3
CMPUBPRV EQU   CMFMBYT3
CMSCRVL1 EQU   CMFMBYT3
CMNOSMF  EQU   CMFMBYT3
CMDSRALL EQU   CMFMBYT3
CMTIOTNQ EQU   CMFMBYT2
CMPURGE  EQU   CMFMBYT2
CMNERMSG EQU   CMFMBYT2
CMRDDENT EQU   CMFMBYT2
CMGENDEQ EQU   CMFMBYT2
CMCHATTR EQU   CMFMBYT2
CMNOVUT  EQU   CMFMBYT2
CMNOPOST EQU   CMFMBYT2
CMFDSABS EQU   CMFMBYT1
CMVLRLSE EQU   CMFMBYT1
CMUNUNIT EQU   CMFMBYT1
CMDSRLSE EQU   CMFMBYT1
CMDPCATS EQU   CMFMBYT1
CMDISPRC EQU   CMFMBYT1
CMMNSTAT EQU   CMFMBYT1
CMDMSGS  EQU   CMFMBYT1
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00046
UCBHALI  EQU   @NM00046
UCBRSV09 EQU   @NM00046
UCBRSV08 EQU   @NM00046
UCBRSV07 EQU   @NM00046
UCBRSV06 EQU   @NM00046
UCBRSV05 EQU   @NM00046
UCBRSV04 EQU   @NM00046
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00043 EQU   UCB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00042 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00041 EQU   POOLSTAR
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOEDDNM EQU   TIOENTRY+4
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
SSIBSUSE EQU   SSIB+32
SSIBRSV1 EQU   SSIB+28
SSIBDEST EQU   SSIB+20
SSIBJBID EQU   SSIB+12
SSIBRESV EQU   SSIB+7
@NM00039 EQU   SSIBFLG1
SSIBPJES EQU   SSIBFLG1
@NM00038 EQU   JFCBX+144
@NM00037 EQU   JFCBX+94
@NM00036 EQU   JFCBX+3
JFCBXTTR EQU   JFCBX
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCTEMP  EQU   JFCBIND2
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCDISP  EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00032 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
JESSASTA EQU   JESCT+48
JESNUCBS EQU   JESCT+44
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESQMGR  EQU   JESCT+12
JESUNITS EQU   JESCT+4
@NM00031 EQU   JESCT
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SVOLUNNO EQU   INDMSIOT+168
SIOTVMVP EQU   INDMSIOT+164
SIOTNPTR EQU   INDMSIOT+152
SIOTATE  EQU   INDMSIOT+144
SVOLUNAD EQU   INDMSIOT+140
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
SIOTSSIC EQU   INDMSIOT+120
@NM00030 EQU   INDMSIOT+108
@NM00029 EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTSSWA EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00028 EQU   SIOTALTD
@NM00027 EQU   SIOTALTD
@NM00026 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00025 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00024 EQU   SIOTBYT4
SIOTRACT EQU   SIOTBYT4
SIOTRACD EQU   SIOTBYT4
SIOTPROT EQU   SIOTBYT4
SIOUCNVT EQU   SCTUTYPE+4
@NM00023 EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00022 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
SCTALCHK EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
SIOTRETN EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
SIOTDSNM EQU   SIOTTSTC
SIOTTRKM EQU   SIOTTSTC
SIOTSSMG EQU   SIOTTSTC
@NM00021 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
SIOTINFC EQU   SIOTTSTC
@NM00020 EQU   SIOTBYT3
SIOTDSID EQU   SIOTBYT3
S3400OFF EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00019 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00018 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
SIOTVLSP EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTTYPE EQU   INDMSIOT+3
SIOTDSKA EQU   INDMSIOT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00017 EQU   CVTFIX+248
@NM00016 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00015 EQU   VLFLSEQ
@NM00014 EQU   VLDEV+2
@NM00013 EQU   VLOPT
@NM00012 EQU   VLDEV
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00172 EQU   @RC00171
@RF00184 EQU   @RC00171
@RC00218 EQU   @RC00214
@RC00273 EQU   @RC00269
@RC00271 EQU   @RC00269
@RF00342 EQU   @RC00327
@RF00360 EQU   @RC00310
@RC00358 EQU   @RC00310
@RF00377 EQU   @RC00374
@RC00429 EQU   @RC00428
@RF00451 EQU   @RC00093
@RC00095 EQU   @RC00093
@RF00510 EQU   @RC00093
@RF00612 EQU   @EL00002
@RF00628 EQU   @RC00624
@RC00657 EQU   @RC00645
@RF00656 EQU   @RC00645
@RF00688 EQU   @EL00003
@RF00708 EQU   @EL00004
@RF00179 EQU   @RC00172
@RF00116 EQU   @RC00095
@RF00443 EQU   @RC00095
@ENDDATA EQU   *
         END   IEFAB4A2,(C'PLS1807',0701,78054)
