         TITLE 'IEFAB4F0 - GENERALIZED CONDITIONAL ENQ/DEQ ROUTINE     *
                        '
IEFAB4F0 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFAB4F0  74.165'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(20),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
*                                      /*SELECTED BY JES3    @Y30QPPA*/
*RETCODE = RETCODE && RETCODE;         /*CLEAR RETURN CODE FIELD     */
         XR    RETCODE,RETCODE                                  01S0015
*IF TCBADD = ZERO THEN                 /*INPUT TCB PTR       @YM03580*/
         L     @10,@PC00001+8                                   01S0016
         L     @10,TCBADD(,@10)                                 01S0016
         LTR   @10,@10                                          01S0016
         BNZ   @RF00016                                         01S0016
*                                      /*= ZERO?             @YM03580*/
*  TCBP = CURTCBP;                     /*GET CUR TCB.        @YM03580*/
         L     @10,CVTP                                         01S0017
         L     @10,TCBWDSP(,@10)                                01S0017
         L     @10,CURTCBP(,@10)                                01S0017
         ST    @10,TCBP                                         01S0017
*ELSE                                  /*                    @YM03580*/
*  TCBP = TCBADD;                      /*GET INPUT TCB ADDR  @YM03580*/
         B     @RC00016                                         01S0018
@RF00016 L     @10,@PC00001+8                                   01S0018
         L     @10,TCBADD(,@10)                                 01S0018
         ST    @10,TCBP                                         01S0018
*VOLSER = INVOLSER;                    /*GET VOL SER TO ENQ/DEQ      */
@RC00016 L     @10,@PC00001+4                                   01S0019
         L     @10,VOLSERP(,@10)                                01S0019
         MVC   VOLSER(6),INVOLSER(@10)                          01S0019
*IF VOLENQ = ON THEN                   /*REQUEST FOR ENQ ?           */
         L     @10,@PC00001                                     01S0020
         TM    VOLENQ(@10),B'10000000'                          01S0020
         BNO   @RF00020                                         01S0020
*  DO;                                                          01S0021
*    IF VOLEXCLU = ON THEN             /*EXCLUSIVE ENQ REQUESTED     */
         TM    VOLEXCLU(@10),B'00100000'                        01S0022
         BNO   @RF00022                                         01S0022
*      DO;                             /*EXCLUSIVE ENQ               */
*        ENQBEGIN(1:ENQLTH)= ENQLIST(1:ENQLTH);/*MOVE SKELETON TO
*                                        LIST                        */
         L     @10,ENQLTH                                       01S0024
         BCTR  @10,0                                            01S0024
         EX    @10,@SM00154                                     01S0024
*        GEN REFS(MAJRNAME,VOLSER,ENQCORE,TCBP);                01S0025
     ENQ (MAJRNAME,VOLSER,E,6,SYSTEM),RET=USE,MF=(E,ENQCORE),TCB=TCBP
*        RETCODE = REG15;              /*SAVE RETURN CODE            */
         LR    RETCODE,REG15                                    01S0026
*      END;                                                     01S0027
*    ELSE                              /*SHARED ENQ                  */
*      DO;                                                      01S0028
         B     @RC00022                                         01S0028
@RF00022 DS    0H                                               01S0029
*        ENQBEGIN(1:ENQLTH)= ENQLIST(1:ENQLTH);/*MOVE SKELETON TO
*                                        LIST                        */
         L     @10,ENQLTH                                       01S0029
         BCTR  @10,0                                            01S0029
         EX    @10,@SM00154                                     01S0029
*        GEN REFS(MAJRNAME,VOLSER,ENQCORE,TCBP);                01S0030
      ENQ (MAJRNAME,VOLSER,S,6,SYSTEM),RET=USE,MF=(E,ENQCORE),TCB=TCBP
*        RETCODE = REG15;              /*SAVE RETURN CODE            */
         LR    RETCODE,REG15                                    01S0031
*      END;                                                     01S0032
*    LISTP=ADDR(ENQCORE);              /*SET PTR TO ENQ LIST         */
@RC00022 LA    LISTP,ENQCORE                                    01S0033
*    IF RETCODE ^= ZERO &              /*JOB ALREADY OWNS?           */
*       RETURNCD = JOBOWNS THEN                                 01S0034
         LTR   RETCODE,RETCODE                                  01S0034
         BZ    @RF00034                                         01S0034
         CLI   RETURNCD(LISTP),8                                01S0034
         BNE   @RF00034                                         01S0034
*      DO;                             /*YES, SEE IF OK TO USE       */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CHANGRTN                                          */
*/*                                                                  */
*/* FUNCTION - THIS ROUTINE DETERMINES IF A NON-SPECIFIC VOLUME      */
*/*            REQUEST CAN USE THE INPUT VOLUME WHICH WAS REQUESTED  */
*/*            BY A SPECIFIC VOLUME REQUEST FOR THIS SAME JOB.       */
*/*                                                                  */
*/*   OPERATION - THIS ROUTINE DOESN'T ALLOW THE VOLUME TO BE USED   */
*/*               BY A NON-SPECIFIC VOLUME REQ IF A SPECIFIC VOLUME  */
*/*               REQ FOR IT IS STILL UNALLOCATED OR IT IS REQUESTED */
*/*               EXCLUSIVE BY THE NON-SPECIFIC REQUEST.             */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     VOLEXCU - 1 INDICATES THE VOLUME IS REQUESTED EXCLUSIVE      */
*/*     VOLSER - VOLUME REQUESTED                                    */
*/*     VOLUNPTR - PTR TO VOLUNIT TABLE                              */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITION - VOLUME CAN BE USED                                 */
*/*                                                                  */
*/*   OUTPUT - (NONE)                                                */
*/*                                                                  */
*/*   RETURN CODES - RETURNED UNCHANGED = 8                          */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITION - VOLUME CAN'T BE USED                               */
*/*                                                                  */
*/*   OUTPUT - (NONE)                                                */
*/*                                                                  */
*/*   RETURN CODES - RETURNED = 4                                    */
*/*                                                                  */
*/********************************************************************/
*IF VOLEXCLU = ON THEN                 /*VOLUME REQUESTED EXCLUSIVE  */
         L     @10,@PC00001                                     02S0036
         TM    VOLEXCLU(@10),B'00100000'                        02S0036
         BNO   @RF00036                                         02S0036
*  RETURNCD = CANTHAVE;                /*YES, JOB CANT USE VOLUME    */
         MVI   RETURNCD(LISTP),X'04'                            02S0037
*ELSE                                  /*VOLUME REQUESTED SHARED     */
*  DO;                                                          02S0038
         B     @RC00036                                         02S0038
@RF00036 DS    0H                                               02S0039
*    SPECFND = OFF;                    /*INIT LOOP CONTROL           */
         NI    SPECFND,B'01111111'                              02S0039
*    VUPTR = VOLUNPTR;                 /*INPUT - VOLUNIT TABLE PTR   */
         L     @10,@PC00001+12                                  02S0040
         L     VUPTR,VOLUNPTR(,@10)                             02S0040
*    DO VUCTR = 1 TO VOLUNSZE/LENGTH(VOLUNTAB) /*SCAN VOLUNIT TABLE  */
*        WHILE (SPECFND=OFF);                                   02S0041
         LA    VUCTR,1                                          02S0041
         B     @DE00041                                         02S0041
@DL00041 TM    SPECFND,B'10000000'                              02S0041
         BNZ   @DC00041                                         02S0041
*      IF VOLSPEC=ON & VOLID=VOLSER THEN /*SPEC REQ FOR SAME VOLUME? */
         TM    VOLSPEC(VUPTR),B'00100000'                       02S0042
         BNO   @RF00042                                         02S0042
         CLC   VOLID(6,VUPTR),VOLSER                            02S0042
         BNE   @RF00042                                         02S0042
*        DO;                           /*YES, PROCESS                */
*          SPECFND = ON;                                        02S0044
         OI    SPECFND,B'10000000'                              02S0044
*          IF VOLALOC = OFF THEN       /*IS SPECIFIC REQ ALLOCATED ? */
         TM    VOLALOC(VUPTR),B'10000000'                       02S0045
         BNZ   @RF00045                                         02S0045
*            RETURNCD = CANTHAVE;      /*NO, JOB CANT USE VOLUME     */
         MVI   RETURNCD(LISTP),X'04'                            02S0046
*          ELSE;                       /*SPEC REQ IS ALLOCATED       */
@RF00045 DS    0H                                               02S0048
*        END;                                                   02S0048
*      ELSE;                           /*NOT SPEC REQ FOR SAME VOLUME*/
@RF00042 DS    0H                                               02S0050
*      VUPTR = VUPTR + LENGTH(VOLUNTAB); /*POINT TO NEXT VU ENTRY    */
         AL    VUPTR,@CF00153                                   02S0050
*    END;                                                       02S0051
         AL    VUCTR,@CF00046                                   02S0051
@DE00041 L     @10,@PC00001+16                                  02S0051
         L     @00,VOLUNSZE(,@10)                               02S0051
         SRDA  @00,32                                           02S0051
         D     @00,@CF00153                                     02S0051
         CR    VUCTR,@01                                        02S0051
         BNH   @DL00041                                         02S0051
@DC00041 DS    0H                                               02S0052
*  END;                                                         02S0052
*      END;                            /*JOB DOESN'T ALREADY OWN     */
*    ELSE;                                                      01S0054
@RF00034 DS    0H                                               01S0055
*  END;                                                         01S0055
*ELSE                                                           01S0056
*  IF VOLDEQ = ON THEN                 /*WAS REQUEST FOR DEQ?        */
         B     @RC00020                                         01S0056
@RF00020 L     @10,@PC00001                                     01S0056
         TM    VOLDEQ(@10),B'01000000'                          01S0056
         BNO   @RF00056                                         01S0056
*    DO;                                                        01S0057
*      DEQBEGIN(1:DEQLTH)=DEQLIST(1:DEQLTH); /*MOVE LIST TO DSECT    */
         L     @10,DEQLTH                                       01S0058
         BCTR  @10,0                                            01S0058
         EX    @10,@SM00158                                     01S0058
*      GEN REFS(MAJRNAME,VOLSER,TCBP,DEQCORE);                  01S0059
      DEQ (MAJRNAME,VOLSER,6,SYSTEM),RET=HAVE,MF=(E,DEQCORE),TCB=TCBP
*      RETCODE = REG15;                /*SAVE RETURN CODE            */
         LR    RETCODE,REG15                                    01S0060
*      LISTP = ADDR(DEQCORE);          /*SET ADDRESSABILITY TO DEQ
*                                        LIST                        */
         LA    LISTP,DEQCORE                                    01S0061
*    END;                                                       01S0062
*  ELSE;                                                        01S0063
@RF00056 DS    0H                                               01S0064
*IF RETCODE ^= ZERO THEN                                        01S0064
@RC00020 LTR   RETCODE,RETCODE                                  01S0064
         BZ    @RF00064                                         01S0064
*  RETCODE = RETURNCD;                 /*IF ERROR SET RETURN CODE    */
         SLR   RETCODE,RETCODE                                  01S0065
         IC    RETCODE,RETURNCD(,LISTP)                         01S0065
*RETURN CODE(RETCODE);                 /*RETURN TO CALLER            */
@RF00064 IC    @02,@OLDKEY                                      01S0066
         L     @13,4(,@13)                                      01S0066
         L     @00,@SIZDATD                                     01S0066
         LR    @01,@11                                          01S0066
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@03                                          01S0066
         L     @14,12(,@13)                                     01S0066
         LM    @00,@12,20(@13)                                  01S0066
         BR    @14                                              01S0066
*END                                                            01S0067
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A4F0SPEC)                                        *
*/*%INCLUDE SYSLIB  (A4F0DATA)                                        *
*/*%INCLUDE SYSLIB  (IEFZB423)                                        *
*/*%INCLUDE SYSLIB  (CHANGRTN)                                        *
*/*%INCLUDE SYSLIB  (CHNGSPEC)                                        *
*;                                                              01S0067
@DATA    DS    0H
@SM00154 MVC   ENQBEGIN(0),ENQLIST
@SM00158 MVC   DEQBEGIN(0),DEQLIST
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    5F
IEFAB4F0 CSECT
         DS    0F
@CF00046 DC    F'1'
@CF00153 DC    F'28'
@DATD    DSECT
         DS    0D
TCBP     DS    A
SPECFND  DS    BL1
VOLSER   DS    CL6
@OLDKEY  DS    AL1
IEFAB4F0 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
MAJORAD  DC    AL4(MAJRNAME)
MAJRNAME DC    CL8'SYSZVOLS'
IEFAB4F0 CSECT
         DS   0H
A4F0PTCH DC (50)X'00'
@DATD    DSECT
ENQBEGIN DS 0F
ENQCORE ENQ (MAJRNAME,,S,6,SYSTEM),RET=USE,MF=L,TCB=0
DEQBEGIN DS 0F
DEQCORE DEQ (MAJRNAME,,6,SYSTEM),RET=HAVE,MF=L,TCB=0
IEFAB4F0 CSECT
ENQLIST DS 0F
 ENQ (MAJRNAME,,S,6,SYSTEM),RET=USE,MF=L,TCB=0
ENQLTH DC A(*-ENQLIST)
DEQLIST DS 0F
 DEQ (MAJRNAME,,6,SYSTEM),RET=HAVE,MF=L,TCB=0
DEQLTH DC A(*-DEQLIST)
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB4F0 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETCODE  EQU   @03
VUPTR    EQU   @02
VUCTR    EQU   @05
LISTP    EQU   @04
REG15    EQU   @15
REG1     EQU   @01
CVTP     EQU   16
@NM00002 EQU   0
CURTCBP  EQU   @NM00002+4
TCBWDSP  EQU   0
ENQLST   EQU   0
RETURNCD EQU   ENQLST+3
INVOLSER EQU   0
VOLUNTAB EQU   0
VOLID    EQU   VOLUNTAB
VOLSTAT  EQU   VOLUNTAB+6
VOLSTATA EQU   VOLSTAT
VOLSPEC  EQU   VOLSTATA
VOLSTATB EQU   VOLSTAT+1
VOLALOC  EQU   VOLSTATB
VOLSTATC EQU   VOLSTAT+2
VOLSTATD EQU   VOLSTAT+3
FNMAP    EQU   0
VOLENQ   EQU   FNMAP
VOLDEQ   EQU   FNMAP
VOLEXCLU EQU   FNMAP
VOLSERP  EQU   0
TCBADD   EQU   0
VOLUNPTR EQU   0
VOLUNSZE EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00001 EQU   FNMAP
VUGRID   EQU   VOLUNTAB+24
VUUCBP   EQU   VOLUNTAB+20
VOLSIOTP EQU   VOLUNTAB+16
VOLALGTP EQU   VOLUNTAB+12
VOLUNTID EQU   VOLUNTAB+10
VURCVYPR EQU   VOLSTATD
VUVLUNIQ EQU   VOLSTATD
VUDMUNIQ EQU   VOLSTATD
VUUNALSW EQU   VOLSTATD
VUDMNDAL EQU   VOLSTATD
VUDMNDOF EQU   VOLSTATD
VUREALOC EQU   VOLSTATD
VUMUGDON EQU   VOLSTATD
@NM00009 EQU   VOLSTATC
@NM00008 EQU   VOLSTATC
@NM00007 EQU   VOLSTATC
VOLURREQ EQU   VOLSTATC
VOLGRREQ EQU   VOLSTATC
VOLDAREQ EQU   VOLSTATC
VOLCOREQ EQU   VOLSTATC
VOLTAREQ EQU   VOLSTATC
VUAFFWRK EQU   VOLSTATB
VUVINELG EQU   VOLSTATB
VUDADSME EQU   VOLSTATB
VUDNALOC EQU   VOLSTATB
VUPROCED EQU   VOLSTATB
VDEVREQD EQU   VOLSTATB
VOLMNTD  EQU   VOLSTATB
VOLDEFER EQU   VOLSTATA
VUDADSM  EQU   VOLSTATA
VOLRESVE EQU   VOLSTATA
VOLNSHR  EQU   VOLSTATA
VOLSTG   EQU   VOLSTATA
VOLPRV   EQU   VOLSTATA
VOLPUB   EQU   VOLSTATA
MINORAD  EQU   ENQLST+8
@NM00006 EQU   ENQLST+4
FLAGS    EQU   ENQLST+2
@NM00005 EQU   ENQLST+1
@NM00004 EQU   ENQLST
@NM00003 EQU   @NM00002
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00034 EQU   @RC00020
@RC00036 EQU   @RC00034
@ENDDATA EQU   *
         END   IEFAB4F0,(C'PLS2341',0603,74165)
