         TITLE 'IEFAB4F3 - MESSAGE COMPRESSION ROUTINE                 *
                        '
IEFAB4F3 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFAB4F3  73.333'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE  R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(12),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
*NEWLNTH = TXTLNTH;                    /*INIT COMPRESSED TEXT LENGTH */
         L     @10,@PC00001+8                                   01S0007
         L     @03,@PC00001+4                                   01S0007
         L     @03,TXTLNTH(,@03)                                01S0007
         ST    @03,NEWLNTH(,@10)                                01S0007
*WRKBUFFR = TXTBUFFR(1:TXTLNTH);       /*MOVE TEXT TO WORK BUFFER    */
         MVI   WRKBUFFR+1,C' '                                  01S0008
         MVC   WRKBUFFR+2(119),WRKBUFFR+1                       01S0008
         LR    @10,@03                                          01S0008
         BCTR  @10,0                                            01S0008
         L     @15,@PC00001                                     01S0008
         L     @01,BUFFPTR(,@15)                                01S0008
         EX    @10,@SM00063                                     01S0008
*WRKBUFFR(TXTLNTH+1) = ENDCHAR;        /*INSERT END MARKER           */
         LA    @10,WRKBUFFR(@03)                                01S0009
         MVI   0(@10),X'FF'                                     01S0009
*SCANPOS = ONE;                        /*INIT BUFFER SCAN POSITION   */
         LA    SCANPOS,1                                        01S0010
*DO WHILE(WRKBUFFR(SCANPOS) ^= ENDCHAR); /*SCAN TO END MARKER IN BUFF*/
         B     @DE00011                                         01S0011
@DL00011 DS    0H                                               01S0012
*  IF WRKBUFFR(SCANPOS) = BLANK        /*CURRENT POSITION BLANK ?    */
*      & WRKBUFFR(SCANPOS+1) = BLANK THEN /*...NEXT BLANK TOO? ...   */
         LA    @10,WRKBUFFR-1(SCANPOS)                          01S0012
         CLI   0(@10),C' '                                      01S0012
         BNE   @RF00012                                         01S0012
         LA    @10,WRKBUFFR(SCANPOS)                            01S0012
         CLI   0(@10),C' '                                      01S0012
         BNE   @RF00012                                         01S0012
*    DO;                               /*YES,SHIFT TEXT OVER BLANK(S)*/
*      SCANPOS = SCANPOS + ONE;        /*ADJUST SCAN POSITION        */
         AH    SCANPOS,@CH00052                                 01S0014
*      DO NBLNKPOS = SCANPOS BY ONE    /*SCAN TO NEXT NON-BLANK CHAR */
*          WHILE(WRKBUFFR(NBLNKPOS) = BLANK                     01S0015
*          & WRKBUFFR(NBLNKPOS) ^= ENDCHAR);                    01S0015
         LR    NBLNKPOS,SCANPOS                                 01S0015
         B     @DE00015                                         01S0015
@DL00015 DS    0H                                               01S0016
*        NEWLNTH = NEWLNTH - ONE;      /*ADJUST LENGTH OF MESSAGE    */
         L     @10,@PC00001+8                                   01S0016
         L     @15,NEWLNTH(,@10)                                01S0016
         BCTR  @15,0                                            01S0016
         ST    @15,NEWLNTH(,@10)                                01S0016
*      END;                                                     01S0017
         AH    NBLNKPOS,@CH00052                                01S0017
@DE00015 LA    @10,WRKBUFFR-1(NBLNKPOS)                         01S0017
         CLI   0(@10),C' '                                      01S0017
         BNE   @DC00015                                         01S0017
         LA    @10,WRKBUFFR-1(NBLNKPOS)                         01S0017
         CLI   0(@10),X'FF'                                     01S0017
         BNE   @DL00015                                         01S0017
@DC00015 DS    0H                                               01S0018
*      MVELNTH = ZERO;                 /*INIT # CHARS TO MOVE        */
         SLR   MVELNTH,MVELNTH                                  01S0018
*      DO MVECTR = NBLNKPOS BY ONE     /*DETERMINE # CHARS TO MOVE   */
*          WHILE(WRKBUFFR(MVECTR) ^= ENDCHAR);/*SCAN TO END OF BUFFR */
         LR    MVECTR,NBLNKPOS                                  01S0019
         B     @DE00019                                         01S0019
@DL00019 DS    0H                                               01S0020
*        MVELNTH = MVELNTH + ONE;      /*UPDATE LENGTH OF MOVE       */
         AH    MVELNTH,@CH00052                                 01S0020
*      END;                                                     01S0021
         AH    MVECTR,@CH00052                                  01S0021
@DE00019 LA    @10,WRKBUFFR-1(MVECTR)                           01S0021
         CLI   0(@10),X'FF'                                     01S0021
         BNE   @DL00019                                         01S0021
*      TEMPTR = ADDR(WRKBUFFR(NBLNKPOS));                       01S0022
         LA    TEMPTR,WRKBUFFR-1(NBLNKPOS)                      01S0022
*      WRKBUFFR(SCANPOS:SCANPOS+MVELNTH) /*MOVE TEXT OVER BLNNK(S)   */
*          = TMPBUFFR(1 : MVELNTH);    /*FROM FIRST NON-BLANK,  01S0023
*                                        INCLUDING END MARKER        */
         LA    @10,WRKBUFFR-1(SCANPOS)                          01S0023
         EX    MVELNTH,@SM00065                                 01S0023
*    END;                                                       01S0024
*  ELSE                                /*NOT CONSECUTIVE BLANKS      */
*    SCANPOS = SCANPOS + ONE;          /*UPDATE TO NEXT BUFF POSITION*/
         B     @RC00012                                         01S0025
@RF00012 AH    SCANPOS,@CH00052                                 01S0025
*END;                                                           01S0026
@RC00012 DS    0H                                               01S0026
@DE00011 LA    @10,WRKBUFFR-1(SCANPOS)                          01S0026
         CLI   0(@10),X'FF'                                     01S0026
         BNE   @DL00011                                         01S0026
*DO WHILE(WRKBUFFR(NEWLNTH) = BLANK);  /*CHECK FOR TRAILING BLANKS   */
         B     @DE00027                                         01S0027
@DL00027 DS    0H                                               01S0028
*  NEWLNTH = NEWLNTH - ONE;            /*ADJUST LENGTH OF MESSAGE    */
         L     @10,@PC00001+8                                   01S0028
         L     @15,NEWLNTH(,@10)                                01S0028
         BCTR  @15,0                                            01S0028
         ST    @15,NEWLNTH(,@10)                                01S0028
*END;                                                           01S0029
@DE00027 L     @10,@PC00001+8                                   01S0029
         L     @10,NEWLNTH(,@10)                                01S0029
         LA    @01,WRKBUFFR-1(@10)                              01S0029
         CLI   0(@01),C' '                                      01S0029
         BE    @DL00027                                         01S0029
*TXTBUFFR(1:NEWLNTH) = WRKBUFFR(1:NEWLNTH); /*MOVE TEXT BACK TO INPUT
*                                        BUFFER                      */
         L     @15,@PC00001                                     01S0030
         L     @01,BUFFPTR(,@15)                                01S0030
         BCTR  @10,0                                            01S0030
         EX    @10,@SM00067                                     01S0030
*RETURN;                               /*RETURN TO CALLER            */
@EL00001 IC    @02,@OLDKEY                                      01S0031
         L     @13,4(,@13)                                      01S0031
@EF00001 L     @00,@SIZDATD                                     01S0031
         LR    @01,@11                                          01S0031
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
@ER00001 LM    @14,@12,12(@13)                                  01S0031
         BR    @14                                              01S0031
*END IEFAB4F3                                                   01S0032
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A4F3SPEC)                                        *
*/*%INCLUDE SYSLIB  (A4F3DATA)                                        *
*;                                                              01S0032
@DATA    DS    0H
@CH00052 DC    H'1'
@SM00063 MVC   WRKBUFFR(0),TXTBUFFR(@01)
@SM00065 MVC   0(0,@10),TMPBUFFR(TEMPTR)
@SM00067 MVC   TXTBUFFR(0,@01),WRKBUFFR
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
IEFAB4F3 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
WRKBUFFR DS    CL121
@OLDKEY  DS    AL1
IEFAB4F3 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
IEFAB4F3 CSECT
         DS   0H
A4F3PTCH DC (50)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB4F3 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SCANPOS  EQU   @02
NBLNKPOS EQU   @03
MVELNTH  EQU   @05
MVECTR   EQU   @04
TEMPTR   EQU   @04
TXTBUFFR EQU   0
TMPBUFFR EQU   0
BUFFPTR  EQU   0
TXTLNTH  EQU   0
NEWLNTH  EQU   0
@ENDDATA EQU   *
         END   IEFAB4F3
