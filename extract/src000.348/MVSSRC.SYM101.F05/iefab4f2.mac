         TITLE 'IEFAB4F2 - UPDATE ALGORITHM TABLES                     *
                        '
IEFAB4F2 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFAB4F2  74.165'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(20),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
*RTNCODE = SUCCESS;                    /*SET A 0 RETURN CODE         */
         SLR   RTNCODE,RTNCODE                                  01S0048
*IF NEWDVREQ = ON THEN                 /*ENTRY NOW REQUIRE A DEVICE? */
         L     @10,@PC00001                                     01S0049
         TM    NEWDVREQ(@10),B'10000000'                        01S0049
         BNO   @RF00049                                         01S0049
*  DO;                                 /*YES, MARK ALG REQ LIST ENTRY*/
*    CVRDUPLI = OFF;                   /*INDICATE NOT A DUP UNIT REQ */
         L     @10,@PC00001+4                                   01S0051
         L     @10,VUPTR(,@10)                                  01S0051
         L     @10,VOLALGTP(,@10)                               01S0051
         NI    CVRDUPLI(@10),B'01111111'                        01S0051
*    IF CVRSCRTH=OFF & CVRIGNOR=OFF THEN /*IS IT A SCRATCH OR DEMAND
*                                          REQ ?                     */
         TM    CVRSCRTH(@10),B'00001010'                        01S0052
         BNZ   @RF00052                                         01S0052
*      DO;                             /*NO                          */
*        CVRSKFLG = OFF;               /*INDICATE ALG MUST COVER     */
         NI    CVRSKFLG(@10),B'01111111'                        01S0054
*      END;                                                     01S0055
*    ELSE;                             /*ALG SHOULD NOT PROCESS      */
@RF00052 DS    0H                                               01S0057
*  END;                                                         01S0057
*ELSE;                                 /*NOT A NEW DEVICE REQ'D FUNC */
@RF00049 DS    0H                                               01S0059
*IF ARUPDATE = ON & CVRIGNOR=OFF THEN  /*WAS A NON-DEMAND VU ENTRY
*                                        JUST ALLOCATED?             */
         L     @10,@PC00001                                     01S0059
         TM    ARUPDATE(@10),B'01000000'                        01S0059
         BNO   @RF00059                                         01S0059
         L     @10,@PC00001+4                                   01S0059
         L     @10,VUPTR(,@10)                                  01S0059
         L     @10,VOLALGTP(,@10)                               01S0059
         TM    CVRIGNOR(@10),B'00000010'                        01S0059
         BNZ   @RF00059                                         01S0059
*  DO;                                 /*YES, DO FUNCTION            */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - UPALGARU                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - INDICATE THE DEVICE GROUP USED                */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*     THE ALGORITHM REQUEST LIST ENTRY, ASSOCIATED WITH THE        */
*/*     VOLUNIT TABLE ENTRY JUST ALLOCATED, AND THAT REQUEST LIST    */
*/*     ENTRY'S GROUP ENTRY THAT WAS ALLOCATED ARE UPDATED           */
*/*     TO INDICATE WHETHER OR NOT THE ALGORITHM CAN REARRANGE THIS  */
*/*     ALLOCATION IF NECESSARY. THE REQUEST CANNOT BE REARRANGED    */
*/*     IF IT IS ALLOCATED TO A PERMANENTLY-RESIDENT OR RESERVED     */
*/*     DIRECT-ACCESS VOLUME.                                        */
*/*                                                                  */
*/*     THIS ROUTINE ALSO INDICATES IN THE ALGORITHM REQUEST LIST    */
*/*     ENTRY WHETHER OR NOT THE UNIT JUST ALLOCATED WAS ALREADY     */
*/*     ALLOCATED AND, IF IT ALREADY WAS ALLOCATED, WHETHER OR       */
*/*     NOT IT WAS ALLOCATED TO THIS JOB.                            */
*/*                                                                  */
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF.)  */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   PURPOSE - (SEE FUNCTION)                                       */
*/*                                                                  */
*/*   INPUT - FUNCMAP - FUNCTION MAP                                 */
*/*             AFFPROS - INDICATOR WHETHER AFFINITY PROCESSING      */
*/*                       IS BEING DONE.                             */
*/*         - VUPTR - PTR TO VOLUNIT ENTRY JUST ALLOCATED            */
*/*         - UCBPTR - PTR TO THE UCB JUST ALLOCATED                 */
*/*         - ALCWAPTR - PTR TO THE ALLOCATION WORK AREA             */
*/*         - UCBGRPID - PTR TO THE GROUP ID OF THE UCB JUST ALLOC'D */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITION - THE FUNCTION WAS COMPLETED                         */
*/*                                                                  */
*/*   OUTPUT -                                                       */
*/*       THE FOLLOWING ALG REQ LIST ENTRY FIELDS MAY BE             */
*/*       SET: CVRALLCT, CVRSKFLG, CVRIGNOR, AND CVRWMOVE.           */
*/*                                                                  */
*/*       THE FOLLOWING ALG GROUP LIST ENTRY FIELDS MAY BE           */
*/*       SET: CVRBOUND AND CVRGRPAL                                 */
*/*                                                                  */
*/*   RETURN CODE - (NONE)                                           */
*/*                                                                  */
*/********************************************************************/
*GRPFOUND = OFF;                       /*INDICATE GROUP NOT YET FOUND*/
         NI    GRPFOUND,B'01111111'                             02S0061
*GRPLISTP = CVRGRPPT;                  /*PT TO REQS FIRST GROUP ENTRY*/
         L     GRPLISTP,CVRGRPPT(,@10)                          02S0062
*DO WHILE GRPFOUND = OFF;              /*SCAN UNTIL GROUP IS FOUND   */
         B     @DE00063                                         02S0063
@DL00063 DS    0H                                               02S0064
*  IF UCBGRPID = CVRGRPID THEN         /*IS THIS THE GROUP ALC'D FROM*/
         L     @10,@PC00001+16                                  02S0064
         L     @10,UCBGRPID(,@10)                               02S0064
         CH    @10,CVRGRPID(,GRPLISTP)                          02S0064
         BNE   @RF00064                                         02S0064
*    DO;                               /*YES, UPDATE THIS GROUP ENTRY*/
*      GRPFOUND = ON;                  /*INDICATE GROUP IS FOUND     */
         OI    GRPFOUND,B'10000000'                             02S0066
*      IF (UCB3DACC = ON × UCB3TAPE = ON)                       02S0067
*        & (UCBRESV=ON × UCBPRES=ON) THEN /*P/R OR RESERVED DEVICE   */
         L     @10,@PC00001+8                                   02S0067
         L     @10,UCBPTR(,@10)                                 02S0067
         TM    UCB3DACC(@10),B'10100000'                        02S0067
         BZ    @RF00067                                         02S0067
         TM    UCBRESV(@10),B'00100100'                         02S0067
         BZ    @RF00067                                         02S0067
*        DO;                           /*YES,INDICATE NOT MOVABLE    */
*          IF NOAFFERR = ON × AFFPROS=ON THEN /*ANY AFFINITY ERROR ? */
         L     @10,@PC00001                                     02S0069
         TM    NOAFFERR(@10),B'00110000'                        02S0069
         BZ    @RF00069                                         02S0069
*            DO;                       /*NO, MARK UNMOVABLE          */
*              CVRBOUND=CVRBOUND + ONE; /*INCREMENT THE NUMBER BOUND */
         LA    @10,1                                            02S0071
         AH    @10,CVRBOUND(,GRPLISTP)                          02S0071
         STH   @10,CVRBOUND(,GRPLISTP)                          02S0071
*              CVRSKFLG = ON;          /*ALG NOT TO CONSIDER         */
*              CVRIGNOR = ON;                                   02S0073
         L     @10,@PC00001+4                                   02S0073
         L     @10,VUPTR(,@10)                                  02S0073
         L     @10,VOLALGTP(,@10)                               02S0073
         OI    CVRSKFLG(@10),B'10000010'                        02S0073
*            END;                                               02S0074
*          ELSE                        /*AFFINITIES NOT PROCESSED YET*/
*            RTNCODE = COMEBACK;                                02S0075
         B     @RC00069                                         02S0075
@RF00069 LA    RTNCODE,4                                        02S0075
*        END;                                                   02S0076
*      ELSE                            /*NOT A P/R OR RESERVED DA DEV*/
*        DO;                           /*INDICATE ALG CAN REARRANGE  */
         B     @RC00067                                         02S0077
@RF00067 DS    0H                                               02S0078
*          CVRALLCT = CVRALLCT + ONE;  /*INCREMENT NO.-ALLOC-TO-REQ  */
         L     @10,@PC00001+4                                   02S0078
         L     @10,VUPTR(,@10)                                  02S0078
         L     @10,VOLALGTP(,@10)                               02S0078
         LA    @04,1                                            02S0078
         LH    @03,CVRALLCT(,@10)                               02S0078
         ALR   @03,@04                                          02S0078
         STH   @03,CVRALLCT(,@10)                               02S0078
*          CVRGRPAL = CVRGRPAL + ONE;  /*INCREMENT NO.-ALLOC-TO-GROUP*/
         AH    @04,CVRGRPAL(,GRPLISTP)                          02S0079
         STH   @04,CVRGRPAL(,GRPLISTP)                          02S0079
*        END;                                                   02S0080
*    END;                                                       02S0081
*  ELSE;                               /*NOT THE GROUP ALLOC'D FROM  */
@RF00064 DS    0H                                               02S0083
*  GRPLISTP=GRPLISTP+LENGTH(CVRGPLST); /*POINT TO NEXT GROUP ENTRY   */
@RC00064 AH    GRPLISTP,@CH00257                                02S0083
*END;                                                           02S0084
@DE00063 TM    GRPFOUND,B'10000000'                             02S0084
         BZ    @DL00063                                         02S0084
*IF AFFPROS = ON THEN                  /*IS AFFINITY PROCESSING BEING
*                                        DONE?                       */
         L     @10,@PC00001                                     02S0085
         TM    AFFPROS(@10),B'00100000'                         02S0085
         BNO   @RF00085                                         02S0085
*  DO;                                 /*YES,INDICATE IN ALG REQ LIST*/
*    CVRSKFLG = ON;                    /*INDICATE ALG NOT TO CONSIDER*/
*    CVRIGNOR = ON;                    /*ALG WILL NEVER CONSIDER     */
         L     @10,@PC00001+4                                   02S0088
         L     @10,VUPTR(,@10)                                  02S0088
         L     @10,VOLALGTP(,@10)                               02S0088
         OI    CVRSKFLG(@10),B'10000010'                        02S0088
*  END;                                                         02S0089
*ELSE                                  /*THIS IS NOT AFFINITY PROCESS*/
*  DO;                                                          02S0090
         B     @RC00085                                         02S0090
@RF00085 DS    0H                                               02S0091
*    CVRDUPLI = OFF;                   /*NOT A DUPLICATE UNIT REQ    */
         L     @10,@PC00001+4                                   02S0091
         L     @10,VUPTR(,@10)                                  02S0091
         L     @10,VOLALGTP(,@10)                               02S0091
         NI    CVRDUPLI(@10),B'01111111'                        02S0091
*  IF CVRIGNOR = OFF THEN              /*MOVABLE REQUEST ?           */
         TM    CVRIGNOR(@10),B'00000010'                        02S0092
         BNZ   @RF00092                                         02S0092
*    CVRSKFLG = OFF;                   /*YES, HAVE ALG CONSIDER      */
         NI    CVRSKFLG(@10),B'01111111'                        02S0093
*  ELSE;                               /*NON-MOVABLE REQUEST         */
@RF00092 DS    0H                                               02S0095
*    IF UCB3DACC=ON & UCBUSER>ONE &    /*IS THE UNIT ALREADY ALLOC'D?*/
*      UCBRESV = OFF &UCBPRES = OFF THEN /*AND POSSIBLY MOVEABLE?    */
         L     @10,@PC00001+8                                   02S0095
         L     @10,UCBPTR(,@10)                                 02S0095
         TM    UCB3DACC(@10),B'00100000'                        02S0095
         BNO   @RF00095                                         02S0095
         CLI   UCBUSER(@10),1                                   02S0095
         BNH   @RF00095                                         02S0095
         TM    UCBRESV(@10),B'00100100'                         02S0095
         BNZ   @RF00095                                         02S0095
*      DO;                             /*YES, PROCESS                */
*        CVRSKFLG = ON;                /*INDICATE ALG NOT TO CONSIDER*/
         L     @10,@PC00001+4                                   02S0097
         L     @10,VUPTR(,@10)                                  02S0097
         L     @10,VOLALGTP(,@10)                               02S0097
         OI    CVRSKFLG(@10),B'10000000'                        02S0097
*        OTHERALC = OFF;               /*ASSUME NOT ALC'D TO THIS JOB*/
         NI    OTHERALC,B'01111111'                             02S0098
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - DETWHOAL                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - DETERMINE IF UNIT IS ALREADY ALLOCATED        */
*/*                    TO THIS JOB                                   */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*     THIS ROUTINE SCANS ALL THE SIOTS TO SEE IF ANY OTHER         */
*/*     VOLUNIT ENTRIES ARE ALLOCATED TO THE SAME UNIT THE VOLUNIT   */
*/*     ENTRY BEING PROCESSED WAS ALLOCATED TO.                      */
*/*     IF SUCH A VOLUNIT ENTRY IS FOUND, THE VOLUNIT ENTRY          */
*/*     BEING PROCESSED IS UPDATED TO HAVE VOLUME AFFINITY TO THIS   */
*/*     REQUEST. VOLUNIT ENTRIES WITH AFFINITY                       */
*/*     TO THE VOLUNIT ENTRY BEING PROCESSED ARE ALSO UPDATED TO     */
*/*     MAINTAIN THEIR AFFINITIES.                                   */
*/*     NOTE: THIS FUNCTION IS DONE TO INSURE THAT THE ALLOCATION'S  */
*/*           DEVICE REQUIREMENTS DO NOT INCREASE IF THE VOLUME      */
*/*           MUST BE REARRANGED TO ANOTHER UNIT LATER ON BY THE     */
*/*           ALGORITHM.                                             */
*/*                                                                  */
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF.)  */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   PURPOSE - (SEE FUNCTION)                                       */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*       ALCWAPTR - PTR TO THE ALLOCATION WORK AREA                 */
*/*         SIOT1P - PTR TO THE FIRST SIOT IN THE CHAIN              */
*/*         VOLUNPTR - PTR TO THE VOLUNIT TABLE                      */
*/*         VOLUNSZE - SIZE OF THE VOLUNIT TABLE                     */
*/*       VUPTR - PTR TO THE VOLUNIT ENTRY BEING PROCESSED           */
*/*       UCBPTR - PTR TO THE UNIT ALLOCATED TO THE VOLUNIT ENTRY    */
*/*                BEING PROCESSED.                                  */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITION - THE FUNCTION HAS BEEN COMPLETED                    */
*/*                                                                  */
*/*   OUTPUT - OTHERALC SET TO 1 IF UNIT FOUND ALLOCATED TO ANOTHER  */
*/*            VOLUNIT ENTRY.                                        */
*/*          - THE VOLUNTID AND VOLID FIELDS OF SOME VOLUNIT         */
*/*            ENTRIES MAY BE UPDATED.                               */
*/*                                                                  */
*/*   RETURN CODE - (NONE)                                           */
*/*                                                                  */
*/********************************************************************/
*RFY DSAB BASED(SIOTETIO);             /*BASE ETIOT ON PTR IN SIOT   */
*SIOTPTR = SIOT1P;                     /*POINT TO FIRST SIOT IN CHAIN*/
         L     @10,@PC00001+12                                  03S0100
         L     @10,ALCWAPTR(,@10)                               03S0100
         MVC   SIOTPTR(4),SIOT1P(@10)                           03S0100
*DO WHILE (SIOTPTR^=ZERO & OTHERALC=OFF); /*SCAN ALL SIOTS           */
         B     @DE00101                                         03S0101
@DL00101 DS    0H                                               03S0102
*  VUSCANP = SVOLUNAD;                 /*POINT TO SIOTS FIRST VU NTRY*/
         L     @10,SIOTPTR                                      03S0102
         L     VUSCANP,SVOLUNAD(,@10)                           03S0102
*  RELDEVNO = ZERO;                    /*INITIALIZE TIOT DEVICE ENTRY*/
         SLR   RELDEVNO,RELDEVNO                                03S0103
*  DO NUMVOLUN = ONE TO SVOLUNNO       /*SCAN ALL VU ENTRIES FOR SIOT*/
*      WHILE OTHERALC=OFF;             /*..UNTIL UNIT FOUND ALLOC'D  */
         LA    NUMVOLUN,1                                       03S0104
         B     @DE00104                                         03S0104
@DL00104 TM    OTHERALC,B'10000000'                             03S0104
         BNZ   @DC00104                                         03S0104
*    IF VDEVREQD = ON THEN             /*IS A DEVICE REQUIRED ?      */
         L     @10,@PC00001+4                                   03S0105
         L     @10,VUPTR(,@10)                                  03S0105
         TM    VDEVREQD(@10),B'00100000'                        03S0105
         BNO   @RF00105                                         03S0105
*      DO;                             /*YES, PROCESS ENTRY          */
*        RELDEVNO = RELDEVNO + ONE;    /*INCREMENT TIOT DEVICE ENTRY */
         LA    @06,1                                            03S0107
         ALR   RELDEVNO,@06                                     03S0107
*        IF VUSCANP ^= VUPTR           /*IS THIS THE ENTRY JUST ALC'D*/
*            & VUSCANP->VOLUNTID^=VOLUNTID /*OR AN AFFINITY REQ TO IT*/
*            & VUSCANP->VOLALOC = ON   /*OR NOT ALREADY ALLOCATED    */
*            & TIOUCBP(RELDEVNO)=UCBPTR THEN /*OR NOT THE RIGHT UCB ?*/
         CR    VUSCANP,@10                                      03S0108
         BE    @RF00108                                         03S0108
         LH    @03,VOLUNTID(,VUSCANP)                           03S0108
         LH    @15,VOLUNTID(,@10)                               03S0108
         CR    @03,@15                                          03S0108
         BE    @RF00108                                         03S0108
         TM    VOLALOC(VUSCANP),B'10000000'                     03S0108
         BNO   @RF00108                                         03S0108
         LR    @14,RELDEVNO                                     03S0108
         SLA   @14,2                                            03S0108
         L     @01,SIOTPTR                                      03S0108
         L     @01,SIOTETIO(,@01)                               03S0108
         L     @01,DSABTIOT(,@01)                               03S0108
         L     @09,@PC00001+8                                   03S0108
         L     @08,TIOUCBP-5(@14,@01)                           03S0108
         LA    @08,0(,@08)                                      03S0108
         C     @08,UCBPTR(,@09)                                 03S0108
         BNE   @RF00108                                         03S0108
*          DO;                         /*NO, PROCESS                 */
*            OTHERALC = ON;            /*INDICATE UNIT IS ALREADY ALC*/
         OI    OTHERALC,B'10000000'                             03S0110
*            IF NOAFFERR = ON THEN                              03S0111
         L     @14,@PC00001                                     03S0111
         TM    NOAFFERR(@14),B'00010000'                        03S0111
         BNO   @RF00111                                         03S0111
*              DO;                                              03S0112
*                SAVUNIT = VOLUNTID;   /*SAVE UNIT ID OF VU JUST ALCD*/
         LR    SAVUNIT,@15                                      03S0113
*                SAVOLID = VOLID;      /*SAVE VOL ID OF VU JUST ALC'D*/
         MVC   SAVOLID(6),VOLID(@10)                            03S0114
*                VOLUNTID=VUSCANP->VOLUNTID;/*COPY UNIT + VOL ID ..  */
         LH    @09,VOLUNTID(,VUSCANP)                           03S0115
         STH   @09,VOLUNTID(,@10)                               03S0115
*                VOLID = VUSCANP -> VOLID; /*..FROM THE VU ENTRY
*                                        ALREADY ALLOC'D TO THE SAME
*                                        UNIT                        */
         MVC   VOLID(6,@10),VOLID(VUSCANP)                      03S0116
*                VUENTNO=VOLUNSZE/VOLENTLN; /*DETERMINE NUMBER OF
*                                        VU'S                        */
         L     @10,@PC00001+12                                  03S0117
         L     @10,ALCWAPTR(,@10)                               03S0117
         L     @00,VOLUNSZE(,@10)                               03S0117
         SRDA  @00,32                                           03S0117
         D     @00,VOLENTLN                                     03S0117
         LR    VUENTNO,@01                                      03S0117
*                VOLUNP = VOLUNPTR;    /*POINT TO FIRST VOLUNIT ENTRY*/
         L     VOLUNP,VOLUNPTR(,@10)                            03S0118
*                DO VUCTR=ONE TO VUENTNO;  /*SCAN ALL VOLUNIT ENTRIES*/
         LA    @10,1                                            03S0119
         LR    VUCTR,@10                                        03S0119
         B     @DE00119                                         03S0119
@DL00119 DS    0H                                               03S0120
*                  IF VOLUNP->VOLUNTID=SAVUNIT THEN /*SAME UNIT ID
*                                        CHANGE                      */
         CH    SAVUNIT,VOLUNTID(,VOLUNP)                        03S0120
         BNE   @RF00120                                         03S0120
*                    DO;               /*YES.,,                      */
*                      VOLUNP->VOLUNTID=VOLUNTID; /*COPY NEW UNIT ID */
         L     @10,@PC00001+4                                   03S0122
         L     @10,VUPTR(,@10)                                  03S0122
         MVC   VOLUNTID(2,VOLUNP),VOLUNTID(@10)                 03S0122
*                      VOLUNP->VOLID=VOLID; /*COPY NEW VOLUME ID     */
         MVC   VOLID(6,VOLUNP),VOLID(@10)                       03S0123
*                    END;                                       03S0124
*                  ELSE;               /*NOT THE SAME UNIT ID        */
@RF00120 DS    0H                                               03S0126
*                  VOLUNP=VOLUNP+VOLENTLN;/*POINT TO THE NXT VU ENTRY*/
         AL    VOLUNP,VOLENTLN                                  03S0126
*                END;                                           03S0127
         AH    VUCTR,@CH00044                                   03S0127
@DE00119 CR    VUCTR,VUENTNO                                    03S0127
         BNH   @DL00119                                         03S0127
*              END;                                             03S0128
*            ELSE                                               03S0129
*              RTNCODE = COMEBACK;                              03S0129
         B     @RC00111                                         03S0129
@RF00111 LA    RTNCODE,4                                        03S0129
*          END;                                                 03S0130
*        ELSE;                         /*VU ENTRY NOT ALC'D SAME UNIT*/
@RF00108 DS    0H                                               03S0132
*      END;                                                     03S0132
*    ELSE;                             /*VU ENTRY DOES NOT REQ A UNIT*/
@RF00105 DS    0H                                               03S0134
*    VUSCANP = VUSCANP + VOLENTLN;     /*POINT TO THE NEXT VU ENTRY  */
@RC00105 AL    VUSCANP,VOLENTLN                                 03S0134
*  END;                                                         03S0135
         AH    NUMVOLUN,@CH00044                                03S0135
@DE00104 L     @10,SIOTPTR                                      03S0135
         CH    NUMVOLUN,SVOLUNNO(,@10)                          03S0135
         BNH   @DL00104                                         03S0135
@DC00104 DS    0H                                               03S0136
*  SIOTPTR = SIOTNPTR;                 /*POINT TO THE NEXT SIOT      */
         L     @10,SIOTPTR                                      03S0136
         L     @10,SIOTNPTR(,@10)                               03S0136
         ST    @10,SIOTPTR                                      03S0136
*END;                                                           03S0137
@DE00101 ICM   @10,15,SIOTPTR                                   03S0137
         BZ    @DC00101                                         03S0137
         TM    OTHERALC,B'10000000'                             03S0137
         BZ    @DL00101                                         03S0137
@DC00101 DS    0H                                               03S0138
*RFY DSAB BASED(DSABPTR);                                       03S0138
*        IF OTHERALC = OFF THEN        /*IS UNIT ALREADY ALLOC'D TO
*                                        THIS JOB ?                  */
         TM    OTHERALC,B'10000000'                             02S0139
         BNZ   @RF00139                                         02S0139
*          DO;                         /*NO, INDICATE ALG CANNOT MOVE
*                                        VOL  UNTIL OTHER JOBS UNALOC*/
*            CVRWMOVE = ON;                                     02S0141
         L     @10,@PC00001+4                                   02S0141
         L     @10,VUPTR(,@10)                                  02S0141
         L     @10,VOLALGTP(,@10)                               02S0141
         OI    CVRWMOVE(@10),B'00000001'                        02S0141
*          END;                                                 02S0142
*        ELSE                          /*UNIT ALLOC'D TO THIS JOB    */
*          DO;                                                  02S0143
         B     @RC00139                                         02S0143
@RF00139 DS    0H                                               02S0144
*            IF NOAFFERR = ON THEN                              02S0144
         L     @10,@PC00001                                     02S0144
         TM    NOAFFERR(@10),B'00010000'                        02S0144
         BNO   @RF00144                                         02S0144
*              CVRIGNOR = ON;          /*INDICATE ALG NOT TO CONSIDER*/
         L     @10,@PC00001+4                                   02S0145
         L     @10,VUPTR(,@10)                                  02S0145
         L     @10,VOLALGTP(,@10)                               02S0145
         OI    CVRIGNOR(@10),B'00000010'                        02S0145
*          END;                                                 02S0146
*      END;                                                     02S0147
*    ELSE;                             /*UNIT WAS NOT ALREADY ALLOC'D*/
@RF00095 DS    0H                                               02S0149
*  END;                                                         02S0149
@RC00095 DS    0H                                               02S0150
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - ARUGELIM                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - ELIMINATE OTHER ELIGIBLE GENERICS             */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*     THE PURPOSE OF THIS ROUTINE IS TO DETERMINE WHETHER          */
*/*     THE VOLUNIT ENTRY BEING PROCESSED IS ASSOCIATED WITH A       */
*/*     MULTI-UNIT/MULTI-GENERIC REQUEST WHICH IS A SPECIFIC VOLUME  */
*/*     REQUEST WHICH IS ELIGIBLE TO MORE THAN ONE GENERIC DEV. TYPE.*/
*/*     IF SO, SEG. 'FINDGENC' IS INVOKED TO DETERMINE WHICH GENERIC */
*/*     WAS ALLOCATED TO AND TO CALL MODULE IEFAB481 TO ELIMINATE    */
*/*     ALL THE OTHER GENERICS FROM THE EDL AND THE ALGORITHM        */
*/*     TABLE ENTRIES ASSOCIATED WITH THE SIOT.                      */
*/*                                                                  */
*/*     IF THE REQUEST WAS ASSOCIATED WITH A MULTI-UNIT/MULTI-GENERIC*/
*/*     REQUEST, THEN MODULE IEFAB481 IS ALSO INVOKED TO UPDATE THE  */
*/*     EDL AND ALG GROUP LIST ENTRIES FOR ALL OTHER REQUESTS        */
*/*     ASSOCIATED WITH THIS REQUEST.                                */
*/*                                                                  */
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF.)  */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   PURPOSE - (SEE FUNCTION)                                       */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*       VUPTR - PTR TO THE VOLUNIT ENTRY BEING PROCESSED           */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*   CONDITION - THE FUNCTION HAS BEEN COMPLETED                    */
*/*                                                                  */
*/*   OUTPUT - (NONE EXCEPT MODULE IEFAB481 MAY  MARK SOME EDL       */
*/*             GENERIC ENTRIES AND ALGORITHM GROUP LIST ENTRIES AS  */
*/*             INELIGIBLE FOR THIS SIOT.)                           */
*/*                                                                  */
*/*   RETURN CODE - (NONE)                                           */
*/*                                                                  */
*/********************************************************************/
*RFY INDMSIOT BASED(VOLSIOTP);         /*BASE SIOT ON PTR FROM VU    */
@RC00085 DS    0H                                               02S0151
*ELIMGENS = OFF;                       /*ASSUME GENERICS DO NOT HAVE
*                                        TO BE INELIGIBLE            */
         NI    ELIMGENS,B'01111111'                             02S0151
*IF SIOTAFID ^= ZERO THEN              /*ASSOCIATED WITH A MULTI-UNIT,
*                                        MULTI-GEN REQ ?             */
         L     @10,@PC00001+4                                   02S0152
         L     @10,VUPTR(,@10)                                  02S0152
         L     @10,VOLSIOTP(,@10)                               02S0152
         ICM   @04,3,SIOTAFID(@10)                              02S0152
         BZ    @RF00152                                         02S0152
*  DO;                                 /*YES,GENS MUST BE ELIMINATED */
*    ELIMGENS = ON;                                             02S0154
         OI    ELIMGENS,B'10000000'                             02S0154
*  END;                                                         02S0155
*ELSE                                  /*NOT A MULTI-UNIT/GEN REQ    */
*  DO;                                                          02S0156
         B     @RC00152                                         02S0156
@RF00152 DS    0H                                               02S0157
*    IF VOLSPEC = ON                   /*IS THIS A SPEC VOLUME REQ ? */
*        & EDLMGENS = OFF              /*NOT WITH COMPATIBLE GENERICS*/
*        & EDLGENNO > ONE THEN         /*AND WITH > 1 GEN IN EDL ?   */
         L     @10,@PC00001+4                                   02S0157
         L     @10,VUPTR(,@10)                                  02S0157
         TM    VOLSPEC(@10),B'00100000'                         02S0157
         BNO   @RF00157                                         02S0157
         L     @10,VOLSIOTP(,@10)                               02S0157
         L     @10,SIOTEDLP(,@10)                               02S0157
         TM    EDLMGENS(@10),B'01000000'                        02S0157
         BNZ   @RF00157                                         02S0157
         LA    @04,1                                            02S0157
         C     @04,EDLGENNO(,@10)                               02S0157
         BNL   @RF00157                                         02S0157
*      DO;                             /*YES,DET. NO. ELIGIBLE GENS  */
*        ELIGENCT = ZERO;              /*INITIALIZE COUNT OF ELIG GEN*/
         SLR   ELIGENCT,ELIGENCT                                02S0159
*        EDLPTR = EDLFGENP;            /*POINT TO FIRST GEN IN EDL   */
         L     EDLPTR,EDLFGENP(,@10)                            02S0160
*        DO GENCTR = ONE TO EDLGENNO;  /*SCAN ALL GENS IN THE EDL    */
         LR    GENCTR,@04                                       02S0161
         B     @DE00161                                         02S0161
@DL00161 DS    0H                                               02S0162
*          IF EINDEVTP = OFF THEN      /*IS THE GENERIC STILL ELIG ? */
         TM    EINDEVTP(EDLPTR),B'10000000'                     02S0162
         BNZ   @RF00162                                         02S0162
*            DO;                       /*YES, INCREMENT THE COUNT    */
*              ELIGENCT = ELIGENCT + ONE;                       02S0164
         AH    ELIGENCT,@CH00044                                02S0164
*            END;                                               02S0165
*          ELSE;                       /*GENERIC IS NOT ELIGIBLE     */
@RF00162 DS    0H                                               02S0167
*          EDLPTR = EDLNXTNT;          /*POINT TO NEXT GEN IN THE EDL*/
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         02S0167
*        END;                                                   02S0168
         AH    GENCTR,@CH00044                                  02S0168
@DE00161 L     @10,@PC00001+4                                   02S0168
         L     @10,VUPTR(,@10)                                  02S0168
         L     @10,VOLSIOTP(,@10)                               02S0168
         L     @10,SIOTEDLP(,@10)                               02S0168
         C     GENCTR,EDLGENNO(,@10)                            02S0168
         BNH   @DL00161                                         02S0168
*        IF ELIGENCT > ONE THEN        /*MORE THAN 1 ELIGIBLE GEN ?  */
         CH    ELIGENCT,@CH00044                                02S0169
         BNH   @RF00169                                         02S0169
*          DO;                         /*YES,GENS MUST BE ELIMINATED */
*            ELIMGENS = ON;                                     02S0171
         OI    ELIMGENS,B'10000000'                             02S0171
*          END;                                                 02S0172
*        ELSE;                         /*ONLY 1 ELIGIBLE GENERIC     */
@RF00169 DS    0H                                               02S0174
*      END;                                                     02S0174
*    ELSE;                             /*NOT A SPEC VOL,MULTI-GEN REQ*/
@RF00157 DS    0H                                               02S0176
*  END;                                                         02S0176
*IF ELIMGENS = ON THEN                 /*MUST GENERICS BE ELIMINATED?*/
@RC00152 TM    ELIMGENS,B'10000000'                             02S0177
         BNO   @RF00177                                         02S0177
*  DO;                                 /*YES,DETERMINE ELIGIBLE GEN  */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - FINDGENC                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - DETERMINE WHICH GENERIC WAS ALLOCATED         */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*     THIS ROUTINE DETERMINES WHICH GENERIC DEVICE TYPE THE        */
*/*     REQUEST HAS BEEN ALLOCATED TO. THEN THIS ROUTINE INVOKES     */
*/*     MODULE IEFAB481 TO MARK ALL OTHER GENERIC ENTRIES INELIGIBLE */
*/*     IN THE EDL AND TO MARK THE ALGORITHM GROUP LIST ENTRIES      */
*/*     FOR OTHER GENERICS INELIGIBLE FOR THIS SIOT.                 */
*/*                                                                  */
*/*     IF THE REQUEST WAS ASSOCIATED WITH A MULTI-UNIT/MULTI-GENERIC*/
*/*     REQUEST, THEN MODULE IEFAB481 IS ALSO INVOKED TO UPDATE THE  */
*/*     EDL AND ALG GROUP LIST ENTRIES FOR ALL OTHER REQUESTS        */
*/*     ASSOCIATED WITH THIS REQUEST.                                */
*/*                                                                  */
*/*   OPERATION - THE GENERIC ENTRIES IN THE EDL ARE SCANNED UNTIL   */
*/*               THE ENTRY CONTAINING THE GROUP ID JUST ALLOCATED   */
*/*               IS LOCATED.                                        */
*/*               IF THE SIOT WAS ASSOCIATED WITH A MULTI-UNIT/      */
*/*               MULTI-GENERIC REQ, ALL SIOTS ARE SCANNED TO SEE    */
*/*               IF THEY ARE ALSO ASSOCIATED WITH THE SAME MULTI-   */
*/*               UNIT/MULTI-GENERIC REQUEST.                        */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   PURPOSE - (SEE FUNCTION)                                       */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*       VUPTR - PTR TO THE VOLUNIT ENTRY BEING PROCESSED.          */
*/*       UCBGRPID - GROUP ID OF THE UCB JUST ALLOCATED.             */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITION - THE FUNCTION HAS BEEN COMPLETED.                   */
*/*                                                                  */
*/*   OUTPUT - (NONE, EXCEPT MODULE IEFAB481 WILL MARK SOME EDL      */
*/*            GENERIC ENTRIES AND ALGORITHM GROUP LIST ENTRIES AS   */
*/*            INELIGIBLE FOR THEIR ASSOCIATED SIOTS.)               */
*/*                                                                  */
*/*   RETURN CODE - RTNCODE SET TO 0                                 */
*/*                                                                  */
*/********************************************************************/
*GENFOUND = OFF;                       /*INDICATE GENERIC NOT FOUND  */
         NI    GENFOUND,B'01111111'                             03S0179
*EDLPTR = EDLFGENP;                    /*POINT TO FIRST GEN IN EDL   */
         L     @10,@PC00001+4                                   03S0180
         L     @10,VUPTR(,@10)                                  03S0180
         L     @10,VOLSIOTP(,@10)                               03S0180
         L     @10,SIOTEDLP(,@10)                               03S0180
         L     EDLPTR,EDLFGENP(,@10)                            03S0180
*DO GENCTR = ONE TO EDLGENNO           /*SCAN ALL GENS IN THE EDL    */
*    WHILE (GENFOUND = OFF);           /*UNTIL GROUP ALLOC'D IS FOUND*/
         LA    GENCTR,1                                         03S0181
         B     @DE00181                                         03S0181
@DL00181 TM    GENFOUND,B'10000000'                             03S0181
         BNZ   @DC00181                                         03S0181
*  IF EINDEVTP = OFF THEN              /*IS THE GENERIC ELIGIBLE ?   */
         TM    EINDEVTP(EDLPTR),B'10000000'                     03S0182
         BNZ   @RF00182                                         03S0182
*    DO;                               /*YES, PROCESS                */
*      EDLGNTP = EDLGRPTR;             /*POINT TO FIRST GROUP FOR GEN*/
         L     EDLGNTP,EDLGRPTR(,EDLPTR)                        03S0184
*      DO GRPCTR = ONE TO EDLGRPNO     /*SCAN ALL GROUPS FOR GENERIC */
*          WHILE (GENFOUND = OFF);     /*UNTIL GROUP ALLOC'D IS FOUND*/
         LA    GRPCTR,1                                         03S0185
         B     @DE00185                                         03S0185
@DL00185 TM    GENFOUND,B'10000000'                             03S0185
         BNZ   @DC00185                                         03S0185
*        IF EDLGRID = UCBGRPID THEN    /*IS GROUP THE ONE JUST ALLOCD*/
         L     @10,@PC00001+16                                  03S0186
         CLC   EDLGRID(4,EDLGNTP),UCBGRPID(@10)                 03S0186
         BNE   @RF00186                                         03S0186
*          DO;                         /*YES, ELIMINATE OTHER GENS   */
*            GENFOUND = ON;            /*INDICATE GENERIC LOCATED    */
         OI    GENFOUND,B'10000000'                             03S0188
*            IF SIOTAFID ^= ZERO THEN  /*PART OF MULTI-UNIT/GEN REQ? */
         L     @10,@PC00001+4                                   03S0189
         L     @10,VUPTR(,@10)                                  03S0189
         L     @10,VOLSIOTP(,@10)                               03S0189
         LH    @10,SIOTAFID(,@10)                               03S0189
         LTR   @10,@10                                          03S0189
         BZ    @RF00189                                         03S0189
*              DO;                     /*YES, PROCESS ALL ASSOC SIOTS*/
*                SAVAFFID = SIOTAFID;  /*SAVE THE MUG GROUP ID       */
         LR    SAVAFFID,@10                                     03S0191
*                SIOTPTR = SIOT1P;     /*POINT TO THE FIRST SIOT     */
         L     @10,@PC00001+12                                  03S0192
         L     @10,ALCWAPTR(,@10)                               03S0192
         MVC   SIOTPTR(4),SIOT1P(@10)                           03S0192
*                DO WHILE(SIOTPTR^=ZERO /*SCAN ALL SIOTS             */
*                   & RTNCODE = SUCCESS);                       03S0193
         B     @DE00193                                         03S0193
@DL00193 DS    0H                                               03S0194
*                  IF SIOTPTR->SIOTAFID=SAVAFFID THEN /*SAME MUG ID? */
         L     @10,SIOTPTR                                      03S0194
         CH    SAVAFFID,SIOTAFID(,@10)                          03S0194
         BNE   @RF00194                                         03S0194
*                    DO;               /*YES,UPDATE EDL/ALG TABLES   */
*                      CALL IEFAB481(SIOTPTR,EDLDEVT);          03S0196
         LA    @10,SIOTPTR                                      03S0196
         ST    @10,@AL00001                                     03S0196
         LA    @10,EDLDEVT(,EDLPTR)                             03S0196
         ST    @10,@AL00001+4                                   03S0196
         L     @15,@CV00088                                     03S0196
         LA    @01,@AL00001                                     03S0196
         BALR  @14,@15                                          03S0196
*                      RTNCODE=REG15;  /*SAVE THE RETURN CODE        */
         LR    RTNCODE,REG15                                    03S0197
*                    END;                                       03S0198
*                  ELSE;               /*NOT THE SAME MUG GROUP ID   */
@RF00194 DS    0H                                               03S0200
*                  SIOTPTR=SIOTPTR->SIOTNPTR; /*POINT TO NEXT SIOT   */
         L     @10,SIOTPTR                                      03S0200
         L     @10,SIOTNPTR(,@10)                               03S0200
         ST    @10,SIOTPTR                                      03S0200
*                END;                                           03S0201
@DE00193 SLR   @10,@10                                          03S0201
         C     @10,SIOTPTR                                      03S0201
         BE    @DC00193                                         03S0201
         CR    RTNCODE,@10                                      03S0201
         BE    @DL00193                                         03S0201
@DC00193 DS    0H                                               03S0202
*              END;                                             03S0202
*            ELSE                      /*NOT PART OF MUG REQ         */
*              DO;                                              03S0203
         B     @RC00189                                         03S0203
@RF00189 DS    0H                                               03S0204
*                CALL IEFAB481(VOLSIOTP,EDLDEVT); /*UPDATE EDL/ALG
*                                        TABLES                      */
         L     @10,@PC00001+4                                   03S0204
         L     @10,VUPTR(,@10)                                  03S0204
         LA    @10,VOLSIOTP(,@10)                               03S0204
         ST    @10,@AL00001                                     03S0204
         LA    @10,EDLDEVT(,EDLPTR)                             03S0204
         ST    @10,@AL00001+4                                   03S0204
         L     @15,@CV00088                                     03S0204
         LA    @01,@AL00001                                     03S0204
         BALR  @14,@15                                          03S0204
*                RTNCODE = REG15;      /*SAVE THE RETURN CODE        */
         LR    RTNCODE,REG15                                    03S0205
*                END;                                           03S0206
*          END;                                                 03S0207
*        ELSE;                         /*NOT THE GROUP JUST ALLOC'D  */
@RF00186 DS    0H                                               03S0209
*        EDLGNTP = EDLNXGRP;           /*POINT TO NEXT GROUP FOR GEN */
@RC00186 L     EDLGNTP,EDLNXGRP(,EDLGNTP)                       03S0209
*      END;                                                     03S0210
         AH    GRPCTR,@CH00044                                  03S0210
@DE00185 C     GRPCTR,EDLGRPNO(,EDLPTR)                         03S0210
         BNH   @DL00185                                         03S0210
@DC00185 DS    0H                                               03S0211
*    END;                                                       03S0211
*  ELSE;                               /*GENERIC IS INELIGIBLE       */
@RF00182 DS    0H                                               03S0213
*  EDLPTR = EDLNXTNT;                  /*POINT TO NEXT GENERIC IN EDL*/
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         03S0213
*END;                                                           03S0214
         AH    GENCTR,@CH00044                                  03S0214
@DE00181 L     @10,@PC00001+4                                   03S0214
         L     @10,VUPTR(,@10)                                  03S0214
         L     @10,VOLSIOTP(,@10)                               03S0214
         L     @10,SIOTEDLP(,@10)                               03S0214
         C     GENCTR,EDLGENNO(,@10)                            03S0214
         BNH   @DL00181                                         03S0214
@DC00181 DS    0H                                               03S0215
*  END;                                                         02S0215
*ELSE;                                 /*GENS DONT HAVE TO BE ELIM'ED*/
@RF00177 DS    0H                                               02S0217
*RFY INDMSIOT BASED(SIOTPTR);          /*USE NORMAL SIOT BASE        */
*  END;                                                         01S0218
*ELSE;                                 /*ARU FUNCTION NOT NEEDED     */
@RF00059 DS    0H                                               01S0220
*RETURN CODE(RTNCODE);                 /*RETURN TO CALLER            */
         IC    @02,@OLDKEY                                      01S0220
         L     @13,4(,@13)                                      01S0220
         L     @00,@SIZDATD                                     01S0220
         LR    @01,@11                                          01S0220
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@05                                          01S0220
         L     @14,12(,@13)                                     01S0220
         LM    @00,@12,20(@13)                                  01S0220
         BR    @14                                              01S0220
*END IEFAB4F2                          /*END OF UPDATE-ALG-TABLES    */
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A4F2SPEC)                                        *
*/*%INCLUDE SYSLIB  (A4F2DATA)                                        *
*/*%INCLUDE SYSLIB  (IEFZB422)                                        *
*/*%INCLUDE SYSLIB  (IEFZB423)                                        *
*/*%INCLUDE SYSLIB  (IEFZB425)                                        *
*/*%INCLUDE SYSLIB  (IEFZB426)                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        *
*/*%INCLUDE SYSLIB  (IHADSAB )                                        *
*/*%INCLUDE SYSLIB  (UPALGARU)                                        *
*/*%INCLUDE SYSLIB  (UALGSPEC)                                        *
*/*%INCLUDE SYSLIB  (DETWHOAL)                                        *
*/*%INCLUDE SYSLIB  (DWHOSPEC)                                        *
*/*%INCLUDE SYSLIB  (ARUGELIM)                                        *
*/*%INCLUDE SYSLIB  (GELISPEC)                                        *
*/*%INCLUDE SYSLIB  (FINDGENC)                                        *
*/*%INCLUDE SYSLIB  (FINGSPEC)                                        *
*;                                                              01S0221
@DATA    DS    0H
@CH00044 DC    H'1'
@CH00257 DC    H'16'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    5F
@AL00001 DS    2A
IEFAB4F2 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
SIOTPTR  DS    A
EDLUCBLP DS    A
TIOTPTR  DS    A
DSABPTR  DS    A
CNTPTR   DS    A
ELIMGENS DS    BL1
GENFOUND DS    BL1
GRPFOUND DS    BL1
OTHERALC DS    BL1
SAVOLID  DS    CL6
@OLDKEY  DS    AL1
IEFAB4F2 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00088 DC    V(IEFAB481)
         DS    0D
VOLENTLN DC    AL4(28)
IEFAB4F2 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB4F2 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
VUENTNO  EQU   @06
VUCTR    EQU   @09
SAVUNIT  EQU   @08
SAVAFFID EQU   @08
RTNCODE  EQU   @05
RELDEVNO EQU   @04
NUMVOLUN EQU   @07
GRPCTR   EQU   @07
GENCTR   EQU   @06
ELIGENCT EQU   @02
VUSCANP  EQU   @02
VOLUNP   EQU   @03
GRPLISTP EQU   @02
EDLPTR   EQU   @03
EDLGNTP  EQU   @04
REG15    EQU   @15
IEFEDL   EQU   0
EDLHDR   EQU   IEFEDL
EDLGENNO EQU   EDLHDR+4
EDLFGENP EQU   EDLHDR+8
EDLUVFLG EQU   EDLHDR+16
EDLMGENS EQU   EDLUVFLG
EDLENTRY EQU   0
EDLNXTNT EQU   EDLENTRY
EDLDEVT  EQU   EDLENTRY+4
EDLGRPNO EQU   EDLENTRY+8
EDLGRPTR EQU   EDLENTRY+12
EDLDTFLG EQU   EDLENTRY+20
EINDEVTP EQU   EDLDTFLG
EDLGNTRY EQU   0
EDLNXGRP EQU   EDLGNTRY
EDLGRID  EQU   EDLGNTRY+12
EDLGRFLG EQU   EDLGNTRY+16
EDLUCBL  EQU   0
EDLINDIC EQU   EDLUCBL+2
VOLUNTAB EQU   0
VOLID    EQU   VOLUNTAB
VOLSTAT  EQU   VOLUNTAB+6
VOLSTATA EQU   VOLSTAT
VOLSPEC  EQU   VOLSTATA
VOLSTATB EQU   VOLSTAT+1
VOLALOC  EQU   VOLSTATB
VDEVREQD EQU   VOLSTATB
VOLSTATC EQU   VOLSTAT+2
VOLSTATD EQU   VOLSTAT+3
VOLUNTID EQU   VOLUNTAB+10
VOLALGTP EQU   VOLUNTAB+12
VOLSIOTP EQU   VOLUNTAB+16
ALCWA    EQU   0
SIOT1P   EQU   ALCWA+8
CNTABLE  EQU   ALCWA+28
VOLUNPTR EQU   ALCWA+80
VOLUNSZE EQU   ALCWA+84
ALGTABP  EQU   ALCWA+88
INDICATE EQU   ALCWA+112
@NM00007 EQU   ALCWA+113
TIOTHDRP EQU   ALCWA+120
NAMES    EQU   0
ALGPTRS  EQU   0
CVRPARM  EQU   0
CVRFLG1  EQU   CVRPARM+8
CVRRQLST EQU   0
CVRALLCT EQU   CVRRQLST+6
CVRMIN   EQU   CVRRQLST+10
CVRFLG2  EQU   CVRRQLST+16
CVRSKFLG EQU   CVRFLG2
CVRSCRTH EQU   CVRFLG2
CVRIGNOR EQU   CVRFLG2
CVRWMOVE EQU   CVRFLG2
CVRDUPLI EQU   CVRFLG2+1
CVRGRPPT EQU   CVRRQLST+20
CVRGPLST EQU   0
CVRGRPID EQU   CVRGPLST+4
CVRGRPAL EQU   CVRGPLST+6
CVRBOUND EQU   CVRGPLST+10
CVRFLG3  EQU   CVRGPLST+12
GRPCOUNT EQU   0
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBRESV  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3TAPE EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00018 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
INDMSIOT EQU   0
SCTUSADD EQU   INDMSIOT+20
SIOTAFID EQU   INDMSIOT+26
SIOTBYT1 EQU   INDMSIOT+43
SIOTBYT3 EQU   INDMSIOT+46
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
SIOTEDLP EQU   INDMSIOT+136
SVOLUNAD EQU   INDMSIOT+140
SIOTETIO EQU   INDMSIOT+148
SIOTNPTR EQU   INDMSIOT+152
SVOLUNNO EQU   INDMSIOT+168
TIOT1    EQU   0
TIOENTRY EQU   0
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
DSAB     EQU   0
DSABTIOT EQU   DSAB+16
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABFLG2 EQU   DSAB+35
DSABFLG3 EQU   DSAB+36
DSABFLG4 EQU   DSAB+37
DSABANMI EQU   0
DSABGIDL EQU   0
UCBBGN   EQU   0
FUNCMAP  EQU   0
NEWDVREQ EQU   FUNCMAP
ARUPDATE EQU   FUNCMAP
AFFPROS  EQU   FUNCMAP
NOAFFERR EQU   FUNCMAP
VUPTR    EQU   0
UCBPTR   EQU   0
ALCWAPTR EQU   0
UCBGRPID EQU   0
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBUSER  EQU   UCBOBS01+14
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00017 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBOBS09 EQU   UCBDEV
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
TIOUCBP  EQU   TIOEDEVE+1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00017
UCBSKPFG EQU   @NM00017
UCBRIPND EQU   @NM00017
UCBRTIAC EQU   @NM00017
UCBRSV79 EQU   @NM00017
UCBRSV78 EQU   @NM00017
UCBRSV77 EQU   @NM00017
UCBOLTEP EQU   @NM00017
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00016 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00001 EQU   FUNCMAP
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABANAM EQU   DSABANMI+1
DSABANML EQU   DSABANMI
DSABRS04 EQU   DSAB+68
DSABSIOT EQU   DSAB+64
DSABRS03 EQU   DSAB+62
DSABDCBM EQU   DSAB+56
DSABSSCM EQU   DSAB+52
DSABSSNM EQU   DSAB+48
DSABPTTR EQU   DSAB+44
DSABTCBP EQU   DSAB+40
DSABRS02 EQU   DSAB+38
@NM00042 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00041 EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABCATL EQU   DSABFLG3
DSABVMSC EQU   DSABFLG3
DSABVAM  EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00040 EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABIRM  EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABNUSE EQU   DSABFLG1
DSABCATM EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABDCAT EQU   DSABFLG1
DSABCONV EQU   DSABFLG1
DSABDCNV EQU   DSABFLG1
DSABPALC EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00039 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00038 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABOPCT EQU   DSAB+14
DSABLNTH EQU   DSAB+12
DSABBCHN EQU   DSAB+8
DSABFCHN EQU   DSAB+4
DSABID   EQU   DSAB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00037 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00036 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOEDDNM EQU   TIOENTRY+4
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTATE  EQU   INDMSIOT+144
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
@NM00035 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
SIODDQCR EQU   SIOTBYT2
SIOVDQCR EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
@NM00034 EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00033 EQU   SIOTALTD
@NM00032 EQU   SIOTALTD
@NM00031 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00030 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00029 EQU   INDMSIOT+81
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCBAD EQU   SCTUTYPE+5
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00028 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00027 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
@NM00026 EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
@NM00025 EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
@NM00024 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
@NM00023 EQU   SIOTTSTC
@NM00022 EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00021 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00020 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
@NM00019 EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
SCTDDNAM EQU   INDMSIOT+4
SIOTTYPE EQU   INDMSIOT+3
SIOTDSKA EQU   INDMSIOT
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRV064 EQU   UCB3540X+6
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBRV030 EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00018
UCBHALI  EQU   @NM00018
UCBRSV09 EQU   @NM00018
UCBRSV08 EQU   @NM00018
UCBRSV07 EQU   @NM00018
UCBRSV06 EQU   @NM00018
UCBRSV05 EQU   @NM00018
UCBRSV04 EQU   @NM00018
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBFLB6  EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00015 EQU   UCB
GRPWPTR  EQU   GRPCOUNT+12
GRPIDENT EQU   GRPCOUNT+10
GRPEXCS  EQU   GRPCOUNT+8
GRPTOTAL EQU   GRPCOUNT+6
GRPOFFLN EQU   GRPCOUNT+4
GRPALLCT EQU   GRPCOUNT+2
GRPAVAIL EQU   GRPCOUNT
@NM00014 EQU   CVRGPLST+13
@NM00013 EQU   CVRFLG3
CVRFORCI EQU   CVRFLG3
CVRGSKP  EQU   CVRFLG3
CVRGALL  EQU   CVRGPLST+8
CVRGCPTR EQU   CVRGPLST
@NM00012 EQU   CVRRQLST+26
CVRWUCBP EQU   CVRRQLST+24
CVRNGRP  EQU   CVRRQLST+18
@NM00011 EQU   CVRFLG2+1
CVRMULTI EQU   CVRFLG2
CVRFULL  EQU   CVRFLG2
CVRREACH EQU   CVRFLG2
CVRRUSED EQU   CVRFLG2
CVRGNEXT EQU   CVRRQLST+12
CVRPTS   EQU   CVRMIN
CVRNEED  EQU   CVRRQLST+8
CVRREQ1  EQU   CVRRQLST+4
CVRVUPTR EQU   CVRRQLST
@NM00010 EQU   CVRPARM+9
@NM00009 EQU   CVRFLG1
CVRFCALL EQU   CVRFLG1
CVROFFLG EQU   CVRFLG1
CVRALFLG EQU   CVRFLG1
CVRAVFLG EQU   CVRFLG1
CVRGRPLK EQU   CVRPARM+6
CVRNREQ  EQU   CVRPARM+4
CVRRQPTR EQU   CVRPARM
ALGGCNTP EQU   ALGPTRS+12
ALGGLSTP EQU   ALGPTRS+8
ALGRQLTP EQU   ALGPTRS+4
ALGPARMP EQU   ALGPTRS
ALCPROCN EQU   NAMES+16
ALCSTEPN EQU   NAMES+8
ALCJOBN  EQU   NAMES
EXITPRMP EQU   ALCWA+144
CANCELP  EQU   ALCWA+140
WORK3MP  EQU   ALCWA+136
WMASK2P  EQU   ALCWA+132
WMASKPTR EQU   ALCWA+128
LGENLOCK EQU   ALCWA+124
TCBP     EQU   ALCWA+116
ALCWASID EQU   ALCWA+114
@NM00008 EQU   @NM00007
NODEVERR EQU   @NM00007
NEEDRCVY EQU   @NM00007
ALCWAREC EQU   @NM00007
WAITIGEN EQU   @NM00007
UNITRECS EQU   @NM00007
ALCWADUL EQU   INDICATE
ALCWISAM EQU   INDICATE
DSSUNIT  EQU   INDICATE
DSSTAPE  EQU   INDICATE
PRIVASUM EQU   INDICATE
INDREQU  EQU   INDICATE
INDRETRY EQU   INDICATE
INDWAIT  EQU   INDICATE
QMGRRBP  EQU   ALCWA+108
RIMTABCT EQU   ALCWA+104
RIMTABLN EQU   ALCWA+100
RIMTABP  EQU   ALCWA+96
ALGTABSZ EQU   ALCWA+92
@NM00006 EQU   ALCWA+78
LTUNITID EQU   ALCWA+76
TOTVOLUN EQU   CNTABLE+44
NUMREQS  EQU   CNTABLE+40
TOTREQS  EQU   CNTABLE+36
OTHEREQS EQU   CNTABLE+32
SUBSREQS EQU   CNTABLE+28
STRGREQS EQU   CNTABLE+24
PUBLREQS EQU   CNTABLE+20
PVTNREQS EQU   CNTABLE+16
SPECREQS EQU   CNTABLE+12
TPREQS   EQU   CNTABLE+8
VAMREQS  EQU   CNTABLE+4
DMYREQS  EQU   CNTABLE
EDTABPTR EQU   ALCWA+24
FAILRSCP EQU   ALCWA+20
IOSLUTP  EQU   ALCWA+16
JSCBPTR  EQU   ALCWA+12
FMAPPTR  EQU   ALCWA+4
WASIZE   EQU   ALCWA
VUGRID   EQU   VOLUNTAB+24
VUUCBP   EQU   VOLUNTAB+20
VURCVYPR EQU   VOLSTATD
VUVLUNIQ EQU   VOLSTATD
VUDMUNIQ EQU   VOLSTATD
VUUNALSW EQU   VOLSTATD
VUDMNDAL EQU   VOLSTATD
VUDMNDOF EQU   VOLSTATD
VUREALOC EQU   VOLSTATD
VUMUGDON EQU   VOLSTATD
@NM00005 EQU   VOLSTATC
@NM00004 EQU   VOLSTATC
@NM00003 EQU   VOLSTATC
VOLURREQ EQU   VOLSTATC
VOLGRREQ EQU   VOLSTATC
VOLDAREQ EQU   VOLSTATC
VOLCOREQ EQU   VOLSTATC
VOLTAREQ EQU   VOLSTATC
VUAFFWRK EQU   VOLSTATB
VUVINELG EQU   VOLSTATB
VUDADSME EQU   VOLSTATB
VUDNALOC EQU   VOLSTATB
VUPROCED EQU   VOLSTATB
VOLMNTD  EQU   VOLSTATB
VOLDEFER EQU   VOLSTATA
VUDADSM  EQU   VOLSTATA
VOLRESVE EQU   VOLSTATA
VOLNSHR  EQU   VOLSTATA
VOLSTG   EQU   VOLSTATA
VOLPRV   EQU   VOLSTATA
VOLPUB   EQU   VOLSTATA
EDLNOJES EQU   EDLINDIC
EDLVOLAF EQU   EDLINDIC
EDLENQ   EQU   EDLINDIC
EDLDADSM EQU   EDLINDIC
EDLALCD  EQU   EDLINDIC
EDLUCBAD EQU   EDLUCBL
EDLJINEL EQU   EDLGRFLG
EDLLISTP EQU   EDLGNTRY+8
EDLUCBNO EQU   EDLGNTRY+4
@NM00002 EQU   EDLENTRY+18
EDLNSCNT EQU   EDLENTRY+16
EDLVAM   EQU   EDLUVFLG
EDLGMTP  EQU   EDLHDR+12
EDLLUV   EQU   EDLHDR
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00067 EQU   @RC00064
@RC00108 EQU   @RC00105
@RC00139 EQU   @RC00095
@RF00144 EQU   @RC00095
@RC00189 EQU   @RC00186
@RC00069 EQU   @RC00067
@RC00111 EQU   @RC00108
@ENDDATA EQU   *
         END   IEFAB4F2,(C'PLS2336',0603,74165)
