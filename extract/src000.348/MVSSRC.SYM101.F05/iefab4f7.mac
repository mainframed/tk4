         TITLE 'IEFAB4F7 - S.W.A. INTERFACE                            *
                        '
IEFAB4F7 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFAB4F7  73.340'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE  R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(28),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
*    EPADOP = EPAPTR;                  /* COPY INPUT PARAMATER       */
         L     @10,@PC00001+4                                   01S0021
         L     @10,EPAPTR(,@10)                                 01S0021
         ST    @10,EPADOP                                       01S0021
*    SBPOOL = SUBPOOOL;             /* SET SUBPOOL NUMBER            */
         MVI   SBPOOL,X'E6'                                     01S0022
*    SWEPAPTR = EPADOP;                /* INITIALIZE EPA MAP BASE    */
         LR    SWEPAPTR,@10                                     01S0023
*    IF SWNEW = YES × SWMOD = YES THEN /* CREATE/MODIFY EPA(S)       */
         L     @10,@PC00001                                     01S0024
         TM    SWNEW(@10),B'00001010'                           01S0024
         BZ    @RF00024                                         01S0024
*/******          *****     PROLOG  FOR  EPAINIT    ****       *******/
*/*                                                                  */
*/* SEGMENT NAME - EPAINIT                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - EPA CREATION AND INITIALIZATION               */
*/*                                                                  */
*/* FUNCTION - CREATE AND/OR INITIALIZE EPA(S)                       */
*/*                                                                  */
*/* OPERATION - WILL GETMAIN CORE FOR EPA(S) IF 'NEW' IS SPECIFIED   */
*/*    THE EPA FIELDS WILL BE INITIALIZED OR MODIFIED WITH THE       */
*/*    APPROPRIATE INPUT PARAMETERS:                                 */
*/*      ASSIGN: BLOCK ID AND LENGTH.                                */
*/*      READ:   SWA VIRTUAL ADDRESS OF BLOCK PREFIX.                */
*/*      WRITE:  ALL OF THE ABOVE AND THE BLOCK ADDRESS.             */
*/*    IF MORE THAN ONE EPA WAS CREATED, THE CHAIN POINTER OF ONE EPA*/
*/*    WILL POINT TO THE NEXT EPA. THE LAST CHAIN POINTER IS ZERO.   */
*/*                                                                  */
*/* ENTRY - INCLUDED SEGMENT                                         */
*/*    PURPOSE - CREATE AND/OR INITIALIZE EPA'S FOR SWA INTERFACE    */
*/*    INPUT DATA - FUNCTION CODE                                    */
*/*               - EPA POINTER                                      */
*/*               - BLOCK LENGTH                                     */
*/*               - NUMBER OF EPA'S CONCERNED.                       */
*/*                                                                  */
*/* EXITS -                                                          */
*/*    CONDITION - FUNCTION COMPLETED                                */
*/*    OUTPUT DATA - INITIALIZED EPA'S                               */
*/*    RETURN CODE - NONE USED                                       */
*/*                                                                  */
*/***********             ** END  OF  PROLOG **             **********/
*      DO;                                                      02S0025
*        IF SWNEW = YES THEN           /* MUST CREATE EPA(S)         */
         TM    SWNEW(@10),B'00001000'                           02S0026
         BNO   @RF00026                                         02S0026
*          DO;                                                  02S0027
*            LENTH= NUMBLKS * LENGTH(SWAEPA);  /* LENGTH TO GETMAIN  */
         L     @10,@PC00001+24                                  02S0028
         L     @10,NUMBLKS(,@10)                                02S0028
         SLA   @10,4                                            02S0028
         STCM  @10,7,LENTH                                      02S0028
*            REG0 = SPLEN;             /* SET SUBPOOL+LENGTH IN REG 0*/
         L     REG0,SPLEN                                       02S0029
*            GEN (GETMAIN R,LV=(0));   /* GETMAIN                    */
         GETMAIN R,LV=(0)
*            EPADOP = REG1;            /* GETMAINED ADDRESS          */
         ST    REG1,EPADOP                                      02S0031
*            IF SWFREE ^= YES &        /* INPUT EPA POINTER IS TO BE */
*                SWCHN ^= YES THEN     /* UPDATED IF THE CALLER      */
         L     @10,@PC00001                                     02S0032
         TM    SWFREE(@10),B'00000100'                          02S0032
         BO    @RF00032                                         02S0032
         TM    SWCHN(@10),B'10000000'                           02S0032
         BO    @RF00032                                         02S0032
*              EPAPTR = EPADOP;        /* INDICATED HE 'NEEDED' IT   */
         L     @10,EPADOP                                       02S0033
         L     @15,@PC00001+4                                   02S0033
         ST    @10,EPAPTR(,@15)                                 02S0033
*          END;                        /* GETMAIN GROUP              */
@RF00032 DS    0H                                               02S0035
*        SWEPAPTR = EPADOP;            /* MAP (FIRST) EPA            */
@RF00026 L     SWEPAPTR,EPADOP                                  02S0035
*        DO EPACTR = 1 TO NUMBLKS      /* INITIALIZE EPA(S) UNLESS   */
*            WHILE(SWEPAPTR ^= 0);     /* END OF EPA CHAIN REACHED   */
         LA    EPACTR,1                                         02S0036
         B     @DE00036                                         02S0036
@DL00036 LTR   SWEPAPTR,SWEPAPTR                                02S0036
         BZ    @DC00036                                         02S0036
*          IF SWASN ^= YES THEN        /* READ OR WRITE REQUEST      */
         L     @10,@PC00001                                     02S0037
         TM    SWASN(@10),B'10000000'                           02S0037
         BO    @RF00037                                         02S0037
*            DO;                                                02S0038
*              SWVA = SVALIST(EPACTR); /* PREFIX PTR TO EPA          */
         LR    @15,EPACTR                                       02S0039
         SLA   @15,2                                            02S0039
         L     @14,@PC00001+12                                  02S0039
         L     @01,SVALISTP(,@14)                               02S0039
         ALR   @01,@15                                          02S0039
         AL    @01,@CF00724                                     02S0039
         MVC   SWVA(3,SWEPAPTR),SVALIST(@01)                    02S0039
*              IF SWWRT = YES ×        /* WRITE REQUEST OR           */
*                  SWDEL = YES THEN    /* DELETE REQUEST             */
         TM    SWWRT(@10),B'01010000'                           02S0040
         BZ    @RF00040                                         02S0040
*                SWBLKPTR = SVAB(EPACTR); /* BLOCK PTR TO EPA        */
         L     @10,@PC00001+16                                  02S0041
         L     @10,SVABLSTP(,@10)                               02S0041
         AL    @10,@CF00724                                     02S0041
         L     @10,SVAB(@15,@10)                                02S0041
         ST    @10,SWBLKPTR(,SWEPAPTR)                          02S0041
*            END;                                               02S0042
@RF00040 DS    0H                                               02S0043
*          IF SWREAD ^= YES THEN       /* (READ) EPA COMPLETE        */
@RF00037 L     @10,@PC00001                                     02S0043
         TM    SWREAD(@10),B'00100000'                          02S0043
         BO    @RF00043                                         02S0043
*            DO;                                                02S0044
*              SWBLKID = SWIDLIST(EPACTR);/* BLOCK ID TO EPA         */
         LR    @10,EPACTR                                       02S0045
         SLA   @10,2                                            02S0045
         L     @15,@PC00001+12                                  02S0045
         L     @01,SVALISTP(,@15)                               02S0045
         ALR   @01,@10                                          02S0045
         AL    @01,@CF00725                                     02S0045
         MVC   SWBLKID(1,SWEPAPTR),SWIDLIST-3(@01)              02S0045
*              SWLNGTH = BLKLNTH;      /* BLOCK LENGTH TO EPA        */
         L     @10,@PC00001+20                                  02S0046
         MVC   SWLNGTH(4,SWEPAPTR),BLKLNTH(@10)                 02S0046
*            END;                                               02S0047
*          IF SWMOD ^= YES THEN        /* CHAIN PTR NOT IN EPA       */
@RF00043 L     @10,@PC00001                                     02S0048
         TM    SWMOD(@10),B'00000010'                           02S0048
         BO    @RF00048                                         02S0048
*            IF EPACTR ^= NUMBLKS THEN /* AND NOT LAST EPA, THEN     */
         L     @10,@PC00001+24                                  02S0049
         C     EPACTR,NUMBLKS(,@10)                             02S0049
         BE    @RF00049                                         02S0049
*              SWCHNPTR = SWEPAPTR + LENGTH(SWAEPA);/* COMPUTE IT.   */
         LA    @10,16                                           02S0050
         ALR   @10,SWEPAPTR                                     02S0050
         ST    @10,SWCHNPTR(,SWEPAPTR)                          02S0050
*            ELSE                      /* IT IS THE LAST EPA CREATED */
*              SWCHNPTR = 0;           /* LAST EPA CHAIN PTR = ZERO  */
         B     @RC00049                                         02S0051
@RF00049 SLR   @10,@10                                          02S0051
         ST    @10,SWCHNPTR(,SWEPAPTR)                          02S0051
*          SWEPAPTR = SWCHNPTR;        /* MAP NEXT EPA, IF ANY       */
@RC00049 DS    0H                                               02S0052
@RF00048 L     SWEPAPTR,SWCHNPTR(,SWEPAPTR)                     02S0052
*        END;                                                   02S0053
         AH    EPACTR,@CH00058                                  02S0053
@DE00036 L     @10,@PC00001+24                                  02S0053
         C     EPACTR,NUMBLKS(,@10)                             02S0053
         BNH   @DL00036                                         02S0053
@DC00036 DS    0H                                               02S0054
*      END;                                                     02S0054
*    IF SWASN = YES THEN               /* ASSIGN BLOCK(S) OR         */
@RF00024 L     @10,@PC00001                                     01S0055
         TM    SWASN(@10),B'10000000'                           01S0055
         BNO   @RF00055                                         01S0055
*       /*?SWAREQ (AL) EPA (EPADOP);*/                          01S0056
*       CALL SWAMGR (EPADOP,'AL');                              01S0056
         LA    @10,EPADOP                                       01S0056
         ST    @10,@AL00001                                     01S0056
         LA    @10,@CC00715                                     01S0056
         ST    @10,@AL00001+4                                   01S0056
         L     @10,CVTPTR                                       01S0056
         L     @10,CVTJESCT(,@10)                               01S0056
         L     @15,JESWAA(,@10)                                 01S0056
         LA    @01,@AL00001                                     01S0056
         BALR  @14,@15                                          01S0056
*    ELSE                                                       01S0057
*      IF SWREAD = YES THEN            /* READ BLOCK(S) OR           */
         B     @RC00055                                         01S0057
@RF00055 L     @10,@PC00001                                     01S0057
         TM    SWREAD(@10),B'00100000'                          01S0057
         BNO   @RF00057                                         01S0057
*         /*?SWAREQ (RL) EPA (EPADOP);*/                        01S0058
*         CALL SWAMGR (EPADOP,'RL');                            01S0058
         LA    @10,EPADOP                                       01S0058
         ST    @10,@AL00001                                     01S0058
         LA    @10,@CC00716                                     01S0058
         ST    @10,@AL00001+4                                   01S0058
         L     @10,CVTPTR                                       01S0058
         L     @10,CVTJESCT(,@10)                               01S0058
         L     @15,JESWAA(,@10)                                 01S0058
         LA    @01,@AL00001                                     01S0058
         BALR  @14,@15                                          01S0058
*      ELSE                                                     01S0059
*        IF SWWRT = YES THEN           /* WRITE BLOCK(S)             */
         B     @RC00057                                         01S0059
@RF00057 L     @10,@PC00001                                     01S0059
         TM    SWWRT(@10),B'00010000'                           01S0059
         BNO   @RF00059                                         01S0059
*           /*?SWAREQ (WL) EPA (EPADOP);*/                      01S0060
*           CALL SWAMGR (EPADOP,'WL');                          01S0060
         LA    @10,EPADOP                                       01S0060
         ST    @10,@AL00001                                     01S0060
         LA    @10,@CC00717                                     01S0060
         ST    @10,@AL00001+4                                   01S0060
         L     @10,CVTPTR                                       01S0060
         L     @10,CVTJESCT(,@10)                               01S0060
         L     @15,JESWAA(,@10)                                 01S0060
         LA    @01,@AL00001                                     01S0060
         BALR  @14,@15                                          01S0060
*        ELSE                                                   01S0061
*          IF SWDEL = YES THEN         /* DELETE BLOCK(S)            */
         B     @RC00059                                         01S0061
@RF00059 L     @10,@PC00001                                     01S0061
         TM    SWDEL(@10),B'01000000'                           01S0061
         BNO   @RF00061                                         01S0061
*             /*?SWAREQ (DB) EPA (EPADOP);*/                    01S0062
*             CALL SWAMGR (EPADOP,'DB');                        01S0062
         LA    @10,EPADOP                                       01S0062
         ST    @10,@AL00001                                     01S0062
         LA    @10,@CC00718                                     01S0062
         ST    @10,@AL00001+4                                   01S0062
         L     @10,CVTPTR                                       01S0062
         L     @10,CVTJESCT(,@10)                               01S0062
         L     @15,JESWAA(,@10)                                 01S0062
         LA    @01,@AL00001                                     01S0062
         BALR  @14,@15                                          01S0062
*    IF SWFREE =YES & SWNEW ^=YES THEN /* PARM PTR TO EXISTING EPA(S)*/
@RF00061 DS    0H                                               01S0063
@RC00059 DS    0H                                               01S0063
@RC00057 DS    0H                                               01S0063
@RC00055 L     @10,@PC00001                                     01S0063
         TM    SWFREE(@10),B'00000100'                          01S0063
         BNO   @RF00063                                         01S0063
         TM    SWNEW(@10),B'00001000'                           01S0063
         BNZ   @RF00063                                         01S0063
*      EPAPTR = 0;                     /* CLEARED PRIOR TO FREEMAIN  */
         L     @10,@PC00001+4                                   01S0064
         SLR   @15,@15                                          01S0064
         ST    @15,EPAPTR(,@10)                                 01S0064
*    SWEPAPTR = EPADOP;                /* MAP (FIRST) EPA            */
@RF00063 L     SWEPAPTR,EPADOP                                  01S0065
*    CHNTEMP = SWEPAPTR;               /* INITIALIZE FOR DO GROUP    */
         LR    CHNTEMP,SWEPAPTR                                 01S0066
*    EPACTR = 1;                       /* INIT TO FIRST LIST ENTRY   */
         LA    EPACTR,1                                         01S0067
*    DO WHILE(CHNTEMP ^= 0);           /* UPDATE INPUT PARAMETERS    */
         B     @DE00068                                         01S0068
@DL00068 DS    0H                                               01S0069
*      /*                                                            */
*      /* UPDATES TO SVA/SVAB LISTS ARE NOT MADE FROM OLD EPA(S)     */
*      /* BECAUSE THE LISTS MAY NOT EXIST FOR 'OLD' REQUESTS         */
*      /*                                                            */
*      IF SWASN = YES & SWOLD ^= YES THEN /* ASSIGN SPECIFIED        */
         L     @10,@PC00001                                     01S0069
         TM    SWASN(@10),B'10000000'                           01S0069
         BNO   @RF00069                                         01S0069
         TM    SWOLD(@10),B'00000001'                           01S0069
         BNZ   @RF00069                                         01S0069
*        SVALIST(EPACTR) = SWVA;       /* BLOCK PREFIX ADDRESS       */
         LR    @10,EPACTR                                       01S0070
         SLA   @10,2                                            01S0070
         L     @15,@PC00001+12                                  01S0070
         L     @01,SVALISTP(,@15)                               01S0070
         ALR   @01,@10                                          01S0070
         AL    @01,@CF00724                                     01S0070
         MVC   SVALIST(3,@01),SWVA(SWEPAPTR)                    01S0070
*      IF (SWREAD = YES × SWASN = YES) /* FOR READ OR ASSIGN         */
*            & SWOLD ^= YES THEN       /* REQUESTS THE BLOCK ADDRESS */
@RF00069 L     @10,@PC00001                                     01S0071
         TM    SWREAD(@10),B'10100000'                          01S0071
         BZ    @RF00071                                         01S0071
         TM    SWOLD(@10),B'00000001'                           01S0071
         BO    @RF00071                                         01S0071
*        SVAB(EPACTR) = SWBLKPTR;      /* (SVAB) LIST IS UPDATED     */
         LR    @10,EPACTR                                       01S0072
         SLA   @10,2                                            01S0072
         L     @15,@PC00001+16                                  01S0072
         L     @01,SVABLSTP(,@15)                               01S0072
         L     @00,SWBLKPTR(,SWEPAPTR)                          01S0072
         AL    @01,@CF00724                                     01S0072
         ST    @00,SVAB(@10,@01)                                01S0072
*      CHNTEMP = SWCHNPTR;             /* SAVE CHAIN POINTER         */
@RF00071 L     CHNTEMP,SWCHNPTR(,SWEPAPTR)                      01S0073
*      IF SWFREE = YES THEN            /* 'FREEMAIN' THE EPA         */
         L     @10,@PC00001                                     01S0074
         TM    SWFREE(@10),B'00000100'                          01S0074
         BNO   @RF00074                                         01S0074
*        DO;                                                    01S0075
*          LENTH= LENGTH(SWAEPA);      /* LENGTH OF EPA TO FREE      */
         MVC   LENTH(3),@CF00052+1                              01S0076
*          REG0 = SPLEN;               /* SET SUBPOOL+LENGTH IN REG 0*/
         L     REG0,SPLEN                                       01S0077
*          REG1 = SWEPAPTR;            /* ADDRESS OF EPA TO FREE     */
         LR    REG1,SWEPAPTR                                    01S0078
*          GEN (FREEMAIN R,LV=(0),A=(1));                       01S0079
         FREEMAIN R,LV=(0),A=(1)
*        END;                                                   01S0080
*      IF CHNTEMP ^= 0 THEN            /* MUST RETAIN ADDRESS OF THE */
@RF00074 LTR   CHNTEMP,CHNTEMP                                  01S0081
         BZ    @RF00081                                         01S0081
*        SWEPAPTR = CHNTEMP;           /* LAST EPA REFERENCED        */
         LR    SWEPAPTR,CHNTEMP                                 01S0082
*        EPACTR = EPACTR + 1;          /* INDEX NEXT SVAB LIST ENTRY */
@RF00081 AH    EPACTR,@CH00058                                  01S0083
*    END;                              /* DO GROUP                   */
@DE00068 SLR   @10,@10                                          01S0084
         CR    CHNTEMP,@10                                      01S0084
         BNE   @DL00068                                         01S0084
*    IF SWCHN = YES THEN               /* CHAIN EPA(S)               */
         L     @03,@PC00001                                     01S0085
         TM    SWCHN(@03),B'10000000'                           01S0085
         BNO   @RF00085                                         01S0085
*      DO;                                                      01S0086
*        IF LEPACHNP ^= 0 THEN         /* THERE WAS A 'LAST' EPA     */
         L     @03,@PC00001+8                                   01S0087
         L     @03,LEPACHNP(,@03)                               01S0087
         CR    @03,@10                                          01S0087
         BE    @RF00087                                         01S0087
*          LEPACHNP -> SWCHNPTR = EPADOP; /* CHAIN REFERENCED EPA    */
         MVC   SWCHNPTR(4,@03),EPADOP                           01S0088
*        LEPACHNP = SWEPAPTR;          /* LAST-EPA-CHAINED PTR       */
@RF00087 L     @10,@PC00001+8                                   01S0089
         ST    SWEPAPTR,LEPACHNP(,@10)                          01S0089
*      END;                                                     01S0090
*END IEFAB4F7                                                   01S0091
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSUT5  (SWFACEPR)                                        *
*/*%INCLUDE SYSUT5  (SWFACEDC)                                        *
*/*%INCLUDE SYSLIB  (IEFZB505)                                        *
*/*%INCLUDE SYSLIB  (IEFZB436)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEFJESCT)                                        *
*/*%INCLUDE SYSUT5  (EPAINTPR)                                        *
*/*%INCLUDE SYSUT5  (EPAINIT )                                        *
*;                                                              01S0091
@EL00001 IC    @02,@OLDKEY                                      01S0091
         L     @13,4(,@13)                                      01S0091
@EF00001 L     @00,@SIZDATD                                     01S0091
         LR    @01,@11                                          01S0091
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
@ER00001 LM    @14,@12,12(@13)                                  01S0091
         BR    @14                                              01S0091
@DATA    DS    0H
@CH00058 DC    H'1'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@AL00001 DS    2A
IEFAB4F7 CSECT
         DS    0F
@CF00052 DC    F'16'
@CF00724 DC    F'-4'
@CF00725 DC    F'-1'
@DATD    DSECT
         DS    0D
EPADOP   DS    A
SPLEN    DS    CL4
         ORG   SPLEN
SBPOOL   DS    FL1
LENTH    DS    FL3
         ORG   SPLEN+4
@OLDKEY  DS    AL1
IEFAB4F7 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00715 DC    C'AL'
@CC00716 DC    C'RL'
@CC00717 DC    C'WL'
@CC00718 DC    C'DB'
IEFAB4F7 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB4F7 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
EPACTR   EQU   @03
CHNTEMP  EQU   @04
SWEPAPTR EQU   @02
REG0     EQU   @00
REG1     EQU   @01
CVTPTR   EQU   16
SVAID    EQU   0
SVALIST  EQU   SVAID
SWIDLIST EQU   SVAID+3
SVAB     EQU   0
SWAEPA   EQU   0
SWBLKPTR EQU   SWAEPA
SWVAFW   EQU   SWAEPA+4
SWVA     EQU   SWVAFW
SWBLKID  EQU   SWVAFW+3
SWLNGTH  EQU   SWAEPA+8
SWCHNPTR EQU   SWAEPA+12
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTJESCT EQU   CVTMAP+296
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTRSV90 EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESSSREQ EQU   JESCT+20
SWAMGR   EQU   0
SSREQ    EQU   0
SWACTLS  EQU   0
SWASN    EQU   SWACTLS
SWDEL    EQU   SWACTLS
SWREAD   EQU   SWACTLS
SWWRT    EQU   SWACTLS
SWNEW    EQU   SWACTLS
SWFREE   EQU   SWACTLS
SWMOD    EQU   SWACTLS
SWOLD    EQU   SWACTLS
SWCHN    EQU   SWACTLS+1
EPAPTR   EQU   0
LEPACHNP EQU   0
SVALISTP EQU   0
SVABLSTP EQU   0
BLKLNTH  EQU   0
NUMBLKS  EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTWSAG  EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTSYSWT EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00001 EQU   SWACTLS+1
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESQMGR  EQU   JESCT+12
JESUNITS EQU   JESCT+4
@NM00004 EQU   JESCT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00003 EQU   CVTFIX+248
@NM00002 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTRSVA1 EQU   CVTXTNT2+48
CVTRSVA0 EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTRSV90
CVTRSV9G EQU   CVTRSV90
CVTRSV9F EQU   CVTRSV90
CVTRSV9E EQU   CVTRSV90
CVTRSV9D EQU   CVTRSV90
CVTRSV9C EQU   CVTRSV90
CVTRSV9B EQU   CVTRSV90
CVTRSV9A EQU   CVTRSV90
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTRV484 EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTINTLA EQU   CVTMAP+320
CVTERPV  EQU   CVTMAP+316
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTRV319 EQU   CVTUSR
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTIERLC EQU   CVTMAP+144
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00085 EQU   @EL00001
@ENDDATA EQU   *
         END   IEFAB4F7
