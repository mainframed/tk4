         TITLE 'IECIHIO - INTRODUCTORY COMMENTS'
IECIHIO  CSECT
         ENTRY IECVHHK1
         ENTRY IECVHHK2
         ENTRY IECHK4
         ENTRY IECHK5
         EJECT
*
*****************************************************************
*
*        MODULE NAME - IECIHIO
*
*        DESCRIPTIVE NAME - HALT I/O SUBROUTINE
*
*        COPYRIGHT - NONE
*
*        STATUS - CHANGE LEVEL - 0.0
*
*        LOAD MODULE NAME - IEANUCXX
*
*        CSECT NAME - IECIHIO
*
*        FUNCTION - THE FUNCTION OF THIS MODULE IS TO HALT I/O
*              TO A SPECIFIC DEVICE WHEN CALLED ON TO DO SO BY
*              CERTAIN SYSTEM ROUTINES.
*
*        OPERATION - THE MODULE RECEIVES CONTROL AT ENTRY POINT
*              IECIHIO FROM EITHER SVC 16 OR SVC 33.
*              THE DEVICE IS CHECKED TO SEE IF IT WAS LAST
*              STARTED ON THIS CPU. IF NOT THE SYSTEM IPC FUNCTION
*              IS USED TO INVOKE THE HIO ROUTINE ON THE CORRECT CPU.
*              WHEN THIS IS THE CORRECT CPU THE HALT DEVICE I/O
*              INSTRUCTION (HDV) IS ISSUED TO STOP I/O ON THE
*              DEVICE. IF THE DEVICE RESPONDS OTHER THAN CC=1 THE
*              I/O IS ASSUMED TO HAVE BEEN STOPPED. CC=1 WILL CAUSE
*              THE ROUTINE TO CHECK THE LOGOUT PENDING FLAG IN
*              THE CSW. IF ON THE ROUTINE WILL CAUSE SYSTEM
*              ENABLEMENT ON THE SPECIFIC CHANNEL ALLOWING THE
*              LOGOUT AND THEN INTERFACE WITH THE IOS INTERRUPT
*              HANDLER TO DEAL WITH THE INTERRUPT. (IF THIS WAS
*              AN IPC ENTRY TO HIO THE RELEASE OF THE UCB LOCK
*              NECESSARY TO CALL THE INTERRUPT HANDLER CAN NOT BE
*              DONE SINCE THE LOCK IS HELD BY THE OTHER CPU. IN
*              THIS CASE IPC IS RETURNED TO THUS ALLOWING THIS CPU
*              TO RETURN TO NORMAL PROCESSING AN TAKE THE INTERRUPT
*              WHEN POSSIBLE.) AFTER THE LOGOUT HAS BEEN CLEARED
*              THE HDV IS AGAIN ISSUED THIS TIME GIVING GOOD
*              STATUS.
*              IF LOGOUT PENDING IS NOT ON THE CSW IS CHECKED FOR
*              CHANNEL ERRORS (CCC,ICC,CDC) AND IF ANY ARE PRESENT
*              CONTROL IS PASSED TO CCH FOR APPROPRIATE ACTION.
*              CCH MAY RETURN +0 INDICATING RETRY THE HDV, OR +4
*              INDICATING DO NOT RETRY THE HDV. TWO SUCCESSIVE
*              CHANNEL ERRORS WILL CAUSE CONTROL TO BE RETURNED
*              TO THE CALLER WITH A 04 RETURN CODE.
*              IF AN IPC IS NECESSARY THE RETURN CODE FROM IPC IS
*              CHECKED TO DETERMINE THE SUCCESS OF THE OPERATION.
*              IF THE RETURN CODE IS NOT 0 OR 8 THE I/O IS ASSUMED
*              STOPPED. A RETURN CODE OF 8 WILL CAUSE THE ROUTINE
*              TO RETRY THE IPC A FINITE NUMBER OF TIMES IF
*              EQUIP CK, OPER INTV, OR RECIV CK IS PRESENT IN THE
*              STATUS. (OTHER STATUS IS TREATED AS HAVING STOPPED
*              THE DEVICE.) A 0 RETURN CODE WILL CAUSE THE ROUTINE
*              TO CHECK THE RETURN BYTE IN THE FRR SAVE AREA. IF
*              THIS BYTE IS ZERO THE DEVICE WAS STOPPED, IF 4 THE
*              ROUTINE TOOK TWO SUCCESSIVE CHANNEL ERRORS IN THE
*              OTHER CPU AND A CODE 4 RETURN TO CALLER IS DONE, IF
*              8 THE CHANNEL NEEDED TO LOGOUT ON THE OTHER CPU AND
*              THE IPC WILL BE RETRIED A FINITE NUMBER OF TIMES IN
*              HOPES THAT THE LOGOUT WILL HAVE CLEARED. FAILURE TO
*              CLEAR WILL RESULT IN A RETURN CODE OF 8 TO THE CALLER.
*
*        NOTES -
*              PATCH AREA -
*              HIOPATCH                                        @YM05573
*
*        MODULE TYPE - PROCESSING
*
*            PROCESSOR - ASSEMBLERXF
*
*            MODULE SIZE - 1024 DECIMAL
*
*            ATTRIBUTES -
*              SUPERVISOR STATE
*              KEY 0
*              RESIDENT
*              REENTRANT
*              DAT ON
*              DISABLED FOR EXTERNAL INTERRUPTS
*              DISABLED FOR I/O INTERRUPTS (WITH ONE EXCEPTION)
*
*        ENTRY POINTS - IECIHIO
*                       IECIHIO2 - USED AS AN ENTRY FOR IPC PURPOSES
*
*           PURPOSE = SEE FUNCTION
*
*           LINKAGE =
*
*           INPUTS -
*              REG2 - IOSB ADDRESS OR ZERO
*              REG7 - UCB ADDRESS
*              REG14 - RETURN ADDRESS
*              REG13 - ADDRESS OF A 16 WORD SAVE AREA
*              REG15 - ENTRY POINT (IECIHIO)
*
*              (FOR IPC ENTRY REG1 CONTAINS THE ADDRESS OF THE
*              FRR SAVE AREA, REG15 CONTAINS THE ADDRESS OF
*              IECIHIO2, AND REG14 CONTAINS THE IPC RETURN ADDRESS)
*
*           OUTPUTS -
*              RETURN CODE IN REG15
*                  0 - NORMAL - DEVICE STOPPED
*                  4 - CHANNEL ERRORS - CHANNEL ERRORS OCCURED ON
*                                       TWO SUCCESSIVE HDV COMMANDS.
*                  8 - IPC FAILED - UNABLE TO HALT THE DEVICE FROM
*                                   THE OTHER CPU
*
*           EXITS - NORMAL - TO CALLER (REG15 = 0)
*
*           EXITS - ERROR  - TO CALLER (REG15 ^= 0)
*
*        EXTERNAL REFERENCES -
*           ROUTINES - IPC
*                      SETLOCK
*                      I/O INTERRUPT HANDLER
*
*           DATA SETS = NONE
*
*           DATA AREAS = NONE
*
*        TABLES/WORKAREAS -
*              FRR WORKAREA
*
*        MAPPING MACROS USED
*              UCB
*              CVT
*              LCCA
*              PCCA
*              PSA
*              FRRS
*              SAVT
*        CHANGE ACTIVITY - NONE
*
*****************************************************************
*
         EJECT
*
*****************************************************************
*        REGISTER EQUATES
*****************************************************************
*
REG0     EQU   0                       REGISTER 0
REG1     EQU   1                       REGISTER 1
CNTREG1  EQU   2                       CHAN ERR CNTR
CNTREG   EQU   3                       IPC COUNTER REGISTER
WKREG4   EQU   4                       WORK REG
WKREG5   EQU   5                       WORK REG
WKREG6   EQU   6                       WORK REG
UCBREG   EQU   7                       UCB POINTER
BASEREG  EQU   8                       PROG BASE REG
FRREG    EQU   9                       FRR AREA POINTER
INDREG   EQU   10                      IPC OR NORMAL IND
REG11    EQU   11                      REGISTER 11
EPREG    EQU   12                      EP FOR IPC CALL
SAVEREG  EQU   13                      SAVE AREA PTR
RETREG   EQU   14                      RETURN PTR
REG15    EQU   15                      REGISTER 15
         SPACE 5
*
*****************************************************************
*        CONTROL REGISTER EQUATE
*****************************************************************
*
IOCTL    EQU   2                       CHANNEL ENABLE CTL REG
         EJECT
*
*****************************************************************
*        DATA AND DISPLACEMENT EQUATES
*****************************************************************
*
SAVDISP  EQU   0                       DISP INTO SAVE AREA TO
*                                      STORE REGISTERS
MAXCNT   EQU   512                     MAX TIMES TO RETRY IPC
ZERO     EQU   0                       ZERO
ONE      EQU   1                       ONE
TWO      EQU   2                       TWO
FOUR     EQU   4                       FOUR
EIGHT    EQU   8                       EIGHT
NOCSW    EQU   11                      CC^=1 MASK
R2DISP   EQU   8                       DISP INTO SAVE AREA OF
*                                      REGISTER 2
COD      EQU   X'C0'                   COMPARE FOR C0D ABEND
CSWLOP   EQU   X'04'                   LOGOUT PENDING IND
STATUS1  EQU   4                       DISP TO FIRST STAT BYTE
STATUS2  EQU   5                       DISP TO STAT BYTE 2
CHANERR  EQU   X'0E'                   CHANNEL ERR IND
*                                      CCC,ICC,CDC
BSYORCUE EQU   X'30'                   BUSY OR CU END
NOTZERO  EQU   7                       CC^=0 MASK
TIMES4   EQU   2                       SHIFT TO X 4
IPCRET   EQU   8                       IPC FAILED RET CODE
IPCTERM  EQU   12                      ABNORMAL TERMINATION OCCURRED
*                                      ON SHOULDER TAPPED CPU
LOPCOD   EQU   8                       LOGOUT PEND FRR CODE
CCHRET   EQU   4                       CHAN ERR RET CODE
CCHCODE  EQU   4                       CHAN ERR IPC FRR CODE
LO8      EQU   8                       SHIFT QUANT
IOENAB   EQU   X'02'                   I/O ENABLE
HIOIND   EQU   X'18'                   CCH HIO INDICATOR
DEVACTV1 EQU   X'A2'                   CPACTV,BSY,PST
DEVACTV2 EQU   X'40'                   SNSACTV
ALLON    EQU   X'FF'                   BYTE WITH ALL BITS ON
TRANMODE EQU   X'04'                   TRANSLATION MODE
         TITLE 'IECIHIO - INITIAL ENTRY SETUP'
*
*****************************************************************
*        HALT I/O SUBROUTINE
*        THIS IS THE INITIAL PROGRAM SETUP FOR IECIHIO.
*        REGISTERS ARE STORED AND THE FRR IS SET.
*****************************************************************
*
         USING PSA,0
         STM   REG0,RETREG,SAVDISP(SAVEREG)  SAVE REGISTERS 0-14
         LR    BASEREG,REG15           LOAD BASE REGISTER
         USING IECIHIO,BASEREG
         USING UCB,UCBREG
         SR    INDREG,INDREG           INDICATE NORMAL
         LA    CNTREG,MAXCNT           LOAD IPC RETRY CNT
         SR    CNTREG1,CNTREG1         CLEAR CHAN ERR CNTR
         LA    WKREG4,HIOFRR           LOAD FRR ADDRESS
         SETFRR A,FRRAD=(4),PARMAD=(9),WRKREGS=(5,6)
         USING FRRAREA,FRREG
         ST    SAVEREG,FRRSAVE         STORE SAVE REG
         ST    UCBREG,FRRUCB           STORE UCB PTR
         TITLE 'IECIHIO - ISSUE HDV WHEN ON RIGHT CPU'
*
*****************************************************************
*        CHECK THAT THIS IS RIGHT CPU AND IF SO ISSUE HDV.
*        CHECK HDV CONDITION CODE AND PERFORM PROCESSING
*        INDICATED.
*****************************************************************
*
         USING PCCA,WKREG4
HIOCPUCK L     WKREG4,PSAPCCAV         LOAD PCCA ADDRESS
         CLC   PCCACPUA+ONE(ONE),UCBCPU COMPARE CPU ADDRESSES
*                                      TO SEE IF THIS IS THE
*                                      CORRECT CPU
         BNE   HIOIPC1                 NOT CORRECT-GO IPC
         DROP  WKREG4
HIOHIO   LH    WKREG5,UCBCHAN          LOAD LAST PATH STARTED
         SPACE
         BAL   RETREG,HIOCK1           BRAN TO CINTER HOOK RT1 @Y30CQLG
         SPACE
IECVHHK2 HDV   ZERO(WKREG5)            ISSUE HALT DEVICE
         SPACE
         BAL   RETREG,HIOCK2      CALL CRH HOOK ROUTINE 2     @Y30CQLG
         SPACE
         BC    NOCSW,HIORTRN2          NO CSW STORED-RETURN
         TM    FLCCSW,CSWLOP           CSW STORED-LOP CHECK
         BO    HIOLOP                  YES- LOGOUT PENDING
HIOCCHCK TM    FLCCSW+STATUS2,CHANERR  ANY CHANNEL ERRORS
         BNZ   HIOCCH                  YES - GO IFACE TO CCH
         TM    FLCCSW+STATUS1,BSYORCUE CONTROL UNIT BSY OR
*                                      CONTROL UNIT END
         BZ    HIORTRN2            EVERYTHING OK, CONTINUE     @OZ00762
         SPACE
         OI    FRRFLA,FRRBACK      CU BZY MAY CAUSE INTERLOCK  @OZ00762
         B     HIORTRN3            BETTER BACK OUT TO ENABLE   @OZ00762
         TITLE 'IECIHIO - TERMINATION CODE'
*
*****************************************************************
*        TERMINATION ROUTINE. SET RETURN CODE, DELETE THE FRR,
*        RESTORE REGS IF NEEDED, RETURN TO CALLER OR IPC
*****************************************************************
*
HIORTRN2 SR    REG15,REG15             SET 0 RET CODE
HIORTRN  NC    UCBSFLS(TWO),ACTIVOFF   SET UCB ACTIVE FLAGS 0
HIORTRN3 L     SAVEREG,FRRSAVE         RELOAD SAVE AREA PTR
         LTR   INDREG,INDREG       IPC (SHOLDER TAP) CALL      @OZ00762
         BNZ   HIORTRN1            YES, SET RC OTHER CPU       @OZ00762
         TM    FRRFLA,FRRBACK      SHOULD I BACK OUT, NO HALT  @OZ00762
         BZ    HIORTRN1            NO, I/O HALTED OK           @OZ00762
         LA    REG15,ALLON         X'FF' INDICATE NOT HALTED   @OZ00762
*                                  CALLER SHOULD ENABLE & RTRY @OZ00762
HIORTRN1 EQU   *
         L     RETREG,FRRIPCR      RELOAD R14 INCASE IPC CALL  @ZM30185
         NI    FRRFLA,ALLON-FRRSHTP    RESET SHOULDER TAP ACTIVE
         SETFRR D,WRKREGS=(5,6)
         LTR   INDREG,INDREG           IPC CALL
         BCR   NOTZERO,RETREG          YES-RETURN
         LM    REG0,RETREG,SAVDISP(SAVEREG)  RESTORE REGS
         BR    RETREG                  RETURN TO CALLER
         TITLE 'IECIHIO - ISSUE IPC TO CORRECT CPU'
*
*****************************************************************
*        THIS SECTION DETERMINES WHICH CPU SHOULD BE SIGNALED
*        AND SETS UP TO ISSUE THE RISGNL MACRO TO INVOKE IPC.
*        THE IPC RETURNS ARE INTERROGATED (INCLUDING THE FRR
*        AREA CODE) AND APPROPRIATE ACTION TAKEN.
*****************************************************************
*
HIOIPC1  SR    WKREG5,WKREG5           CLEAR REG
         IC    WKREG5,UCBCPU           GET LAST CPU STARTED
         SLL   WKREG5,TIMES4           MULT TIMES 4 FOR INDX
         L     WKREG6,FLCCVT           CVT PTR
         USING CVT,WKREG6
         L     WKREG6,CVTPCCAT         LOAD PCCA VECTOR TABLE
         DROP  WKREG6
         L     REG1,ZERO(WKREG5,WKREG6) LOAD PCCA ADDR OF CPU
*                                      WHICH LAST STARTED I/O
         LA    EPREG,IECIHIO2          LOAD IPC ENTRY POINT
         LR    REG11,FRREG             LOAD FRR AREA AS PARM
         MVI   FRRLOP,EIGHT            PRIME RETURN CODE
         RISGNL SERIAL,CPU=(1),EP=(12),PARM=(11)
         LTR   REG15,REG15             IS RETURN CODE 0
         BNZ   HIORC8CK                NO GO CK FOR 8
         CLI   FRRLOP,EIGHT            CODE 8 RETURNED
         BL    HIORCSET                NO - GET CODE AND RETURN
         BH    HIOABEND                IF HIGH, ABEND TO FORCE
*                                      FRR ENTRY - SHOULDER TAPPED
*                                      CPU ABNORMALLY TERMINATED
HIODECTR BCT   CNTREG,HIOIPC1          RETRY MAX TIMES
HIORCSET SR    REG15,REG15             CLEAR RET CODE REG
         IC    REG15,FRRLOP            LOAD RETURN CODE
         B     HIORTRN3                RETURN TO CALLER
*
*******************
*        RETURN CODE 8 FROM IPC - CHECK STATUS
*******************
*
HIORC8CK CH    REG15,HWD8              RETURN CODE 8
         BNE   HIORTRN2                NO - RETURN,CODE 0
         N     REG0,NONRTY             CHECK STATUS FOR EQUIP CK
*                                      RECEV CK, OR OPER INTV
         BZ    HIORTRN2                NOT ON-RETURN
         B     HIODECTR                YES - RETRY IF NEEDED
         SPACE 2
HIOABEND ABEND X'C0D',DUMP,STEP,SYSTEM
         TITLE 'IECIHIO - LOGOUT PENDING CODE'
*
*****************************************************************
*        THIS SECTION HANDLES THE OCCURANCE OF LOGOUT PENDING
*        IN RESPONSE TO THE HDV INSTRUCTION. IF LOP OCCURS
*        DURING AN IPC CALL CONTROL IS RETURNED TO THE CALLING
*        CPU AND THE IPC IS RETRIED (IN THE HOPE THAT THE LOGOUT
*        WILL OCCUR WHEN THE OTHER CPU IS RELEASED). IF LOP
*        OCCURS DURING NORMAL PROCESSING THE SYSTEM IS ENABLED
*        TO ONLY ALLOW THE LOGOUT AND AFTER THE LOGOUT CONTROL
*        IS GIVEN TO THE I/O SLIH TO HANDLE THE CONDITION.
*        UPON RETURN THE HDV IS REISSUED.
*****************************************************************
*
HIOLOP   LTR   INDREG,INDREG           IPC CALL
         BZ    HIOLOP1                 NO - SET FOR I/O SLIH
         MVI   FRRLOP,LOPCOD           SET LOP CODE IN FRR
*                                      AREA FOR RETURN
         B     HIORTRN1                RETURN TO CALLER CODE=0
HIOLOP1  STCTL IOCTL,IOCTL,FRRCTL1     SAVE CURRENT I/O REG
         SRL   WKREG5,LO8              SHIFT OUT LO 8 BITS
*                                      OF ADDR USED IN HDV
*                                      LEAVING CHANNEL
         L     WKREG6,HION             LOAD -0 IN WORK REG
         SRL   WKREG6,ZERO(WKREG5)     SHIFT TO ENABLE RIGHT
*                                      CHANNEL
         ST    WKREG6,FRRCTL2          STORE TEMP I/O CNTRL
*                                      REGISTER
         LCTL  IOCTL,IOCTL,FRRCTL2     LOAD TEMP I/O CTL REG
         MVC   FRRPSW(FOUR),FLCINPSW+FOUR  SAVE CURRENT I/O NEW
IECHK4   NOPR  ZERO                    DSS HOOK FOR PSW CHANGE
         MVC   FLCINPSW+FOUR(FOUR),HIOPSW  MOVE IN TEMP PSW
IECVHHK1 STOSM FRRSYSMK,IOENAB         SET FOR I/O ENABLED
         B     IECVHHK1                LOOP WAITING FOR INT
IECHK5   NOPR  ZERO                    DSS HOOK FOR PSW CHANGE
INTENT   MVC   FLCINPSW+FOUR(FOUR),FRRPSW  RESTORE I/O NEW PSW
         LCTL  IOCTL,IOCTL,FRRCTL1     RELOAD I/O CTL REG
         IC    REG11,FLCIOPSW          GET MASK AT INT
         N     REG11,SYSDISM           INSURE DISABLED
         STNSM FRRSYSMK,TRANMODE       SET MASK TO ZERO
         EX    REG11,EXSTOSM           STOSM NEW VALUE
         BAL   WKREG4,HIOFUCB          GET UCBLOCK ADDRESS
R1       SETLOCK RELEASE,TYPE=IOSUCB,ADDR=(11),RELATED=(UCB,SVC33(GETLO*
               CK),SVC16(GETLOCK)),DISABLED
         LA    REG11,IRTHIO            SET FOR SLIH CALL
         L     WKREG5,ADIECINT         LOAD I/O SLIH ADDRESS
         LR    SAVEREG,FRREG           SAVE FRR REG ACROSS SLIH
         ST    BASEREG,FRRCTL1         SAVE BASE REG
         OI    FRRFLA,FRRIOS           SET IOS ACTIVE SW FOR FRR
         SPACE
         BAL   RETREG,HIOCK3           CHECK IF CRH IS ACTIVE  @Y30CQLG
         SPACE
         BAL   WKREG4,FOUR(WKREG5)     GO TO I/O SLIH TO
* HIOCK3  RETURNS HERE IF CRH IS ACTIVE                        @Y30CQLG
*                                      HANDLE LOGOUT. THE +4 ENTRY
*                                      WILL CAUSE ENTRY AFTER THE
*                                      INTERRUPT HANDLER HAS SET UP
*                                      THE ENVIRONMENT BYTE AND WILL
*                                      THEREFORE INDICATE HIO ENTRY
*                                      WHEN THE BYTE IS STORED FROM
*                                      REGISTER 11.
         LR    FRREG,SAVEREG           RELOAD FRR REG
         NI    FRRFLA,ALLON-FRRIOS     RESET IOS ACTIVE SW
         L     BASEREG,FRRCTL1         RELOAD BASE REG
         L     UCBREG,FRRUCB           RELOAD UCB ADDRESS
         SR    INDREG,INDREG       REZERO IPC CALL INDICATOR   @YM05572
         BAL   WKREG4,HIOFUCB          GO FIND UCBLOCK ADDRESS
O1       SETLOCK OBTAIN,TYPE=IOSUCB,MODE=UNCOND,ADDR=(11),RELATED=(UCB,*
               SVC33(FREELOCK),SVC16(FREELOCK))
         B     HIOHIO                  RETRY HDV
         TITLE 'IECIHIO - CHANNEL ERROR CODE'
*
*****************************************************************
*        THIS SECTION OF CODE IS INVOKED IF A CHANNEL ERROR
*        IS DETECTED IN THE STATUS RETURNED FROM THE HDV.
*        CCH IS CALLED AND AFTER PROCESSING THE ERROR MAY RETURN
*        +0 INDICATING RETRY THE HDV OR +4 INDICATING DON'T RETRY
*        THE COMMAND.
*****************************************************************
*
HIOCCH   L     REG15,ADCCH             LOAD CCH ADDRESS
         LA    REG1,HIOIND             LOAD HIO INDICATOR       YM00995
         LR    WKREG4,RETREG           SAVE RET ADDRESS
         LR    REG0,CNTREG1            SAVE COUNTER
         LR    WKREG6,WKREG5           LOAD DEV ADDR FOR CCH    YM00995
         L     CNTREG1,FRRSAVE         LOAD SAVE AREA ADDR
         L     CNTREG1,R2DISP(CNTREG1) LOAD ORIG CONTENTS OF
*                                      REG 2
         L     SAVEREG,PSALCCAV        LOAD LCCA ADDRESS
         USING LCCA,SAVEREG
         L     SAVEREG,LCCACPUS        LOAD WSAC ADDRESS
         DROP  SAVEREG
         USING WSAC,SAVEREG
         L     SAVEREG,WSACIOS         LOAD IOS SAVEAREA PTR
         DROP  SAVEREG
         OI    FRRFLA,FRRCCH           SET CCH ACTIVE SW FOR FRR
         BALR  RETREG,REG15            GO TO CCH
         NI    FRRFLA,ALLON-FRRCCH     RESET CCH ACTIVE SWITCH
         B     HIORTY                  +0 RETURN - RETRY HDV
*
********************
*        +4 RETURN - DON'T RETRY
********************
*
HIORC2   LR    RETREG,WKREG4           RESTORE RETURN ADDR
         LA    REG15,CCHRET            LOAD CHAN ERR RET CODE
         LTR   INDREG,INDREG           IPC CALL
         BZ    HIORTRN                 NO - RETURN TO CALLER
         MVI   FRRLOP,CCHCODE          YES - SET FRR CODE
         B     HIORTRN1                RETURN TO IPC
*
********************
*        +0 RETURN - RETRY
********************
*
HIORTY   LR    RETREG,WKREG4           RELOAD RETURN ADDRESS
         LTR   CNTREG1,REG0            FIRST TRY
         BNZ   HIORC2                  NO - GET OUT
         LA    CNTREG1,ONE             YES - SET RETRY IND
         B     HIOHIO                  RETRY THE HDV
         TITLE 'IECIHIO - IPC ENTRY'
*
*****************************************************************
*        THIS ROUTINE IS GIVEN CONTROL IN THE DESIRED CPU AFTER
*        THE IPC IS ISSUED. IT USES THE FRR WORK AREA TO GET
*        INFORMATION (UCB ADDRESS) PASSED FROM THE CALLING CPU.
*        AFTER SETTING UP AS IF THIS WERE A NORMAL ENTRY THE
*        ROUTINE BRANCHES INTO THE MAINLINE HIO ROUTINE CODE TO
*        PROCESS THE REQUEST.
*****************************************************************
*
IECIHIO2 LR    BASEREG,REG15           GET ENTRY POINT ADDR
         LA    REG15,IECIHIO2-IECIHIO  GET DISP INTO MODULE
         SR    BASEREG,REG15           RESET BASEREG TO FRONT
         SR    INDREG,INDREG           CLEAR INDICATOR
         BCTR  INDREG,0                SET TO -1
         SR    CNTREG1,CNTREG1         CLEAR CHAN ERR IND
         DROP  FRREG                                            YM02358
         L     FRREG,FLCCVT            LOAD CVT POINTER         YM02358
         USING CVT,FRREG                                        YM02358
         L     FRREG,CVTPCCAT          LOAD PCCA POINTER        YM02358
         CLI   PSACPUPA+ONE,ZERO       IS PSA FOR CPU ZERO      YM02358
         BNE   HIO20100                NO - USE ZERO            YM02358
         LA    FRREG,FOUR(FRREG)       INCR TO CPU 1 PCCA       YM02358
         DROP  FRREG                                            YM02358
HIO20100 L     FRREG,ZERO(FRREG)       LOAD PCCA POINTER        YM02358
         USING PCCA,FRREG                                       YM02358
         L     FRREG,PCCAPSAV          LOAD VIRT PSA ADDR OF    YM02358
*                                      OTHER CPU                YM02358
         DROP  FRREG                                            YM02358
         USING FRRAREA,FRREG                                    YM02358
         AR    FRREG,REG1              SET FRR AREA PTR         YM02358
         L     UCBREG,FRRUCB           SET UCB REG
         LA    WKREG4,HIOFRR           LOAD FRR ADDRESS
         SETFRR A,FRRAD=(4),WRKREGS=(5,6)
         MVI   FRRLOP,ZERO             SET FRR CODE 0
         ST    RETREG,FRRIPCR          SAVE IPC RETURN ADDR
         OI    FRRFLA,FRRSHTP          SET SHOULDER TAP CODE
*                                      IN CONTROL
         B     HIOCPUCK                PREPARE FOR HDV
         EJECT
         TITLE 'CRH HOOK ROUTINE 1'
***************************************************************@Y30CQLG
*                                                              @Y30CQLG
*           CRH HOOK ROUTINE 1: CHECKS IF CINTER ACTIVE        @Y30CQLG
*              AND IF SO, DOES A DIAGNOSE TO SET UP THE        @Y30CQLG
*              CHANNEL RECONFIGURATION HARDWARE                @Y30CQLG
*                                                              @Y30CQLG
***************************************************************@Y30CQLG
         SPACE
         USING CRCA,REG11                                      @Y30CQLG
         USING CVT,WKREG6                                      @Y30CQLG
HIOCK1   L     WKREG6,FLCCVT                                   @Y30CQLG
         L     REG11,CVTCRCA       CHECK FOR ADDR TO CRCA      @Y30CQLG
         SPACE
         LTR   REG11,REG11         IS CRH ACTIVE ?, HAVE BASE  @Y30CQLG
         BZR   RETREG              NO, RETURN                  @Y30CQLG
         SPACE
         TM    UCBFLB,UCBIORST     I/O PATH FROM INOP CPU ?    @Y30CQLG
         BZR   RETREG              NO, RETURN                  @Y30CQLG
         SPACE
         STCM  WKREG5,TWO,CRCAMCWF INDICATE CHANNEL ADDR IN MCW@Y30CQLG
         OI    CRCAMCWF,CRCAMCWI+CRCAMCWM  TURN ON BITS 26 + 27@Y30CQLG
         STH   WKREG5,CRCACHAN     STORE CHANNEL + UNIT ADDR   @Y30CQLG
         ICM   WKREG5,TWO,CHAN6    INDICATE CHANNEL 6, CRCA    @Y30CQLG
         OI    CRCAFLG1,CRCADIAG   INDICATE OUTSTANDING DIAGNOS@Y30CQLG
         SPACE
         DC    X'8300'             DIAGNOSE INSTR              @Y30CQLG
         DC    S(CRCAMCW)          HALF WRD ADDR OF MCW        @Y30CQLG
         SPACE
         BR    RETREG              RETURN TO CALLER            @Y30CQLG
         SPACE
         DROP  REG11                                           @Y30CQLG
         DROP  WKREG6                                          @Y30CQLG
         EJECT
         TITLE 'HIOCK2 -    CRH HOOK 2 ROUTINE'
***************************************************************@Y30CQLG
*                                                              @Y30CQLG
*           CRH HOOK ROUTINE 2: TURNS OFF CRH AND DEDIAGNOSES @Y30CQLG
*                               HANDLES LOG OUT PENDING        @Y30CQLG
***************************************************************@Y30CQLG
         SPACE
         USING CRCA,REG11                                      @Y30CQLG
         USING CVT,WKREG6                                      @Y30CQLG
         SPACE
HIOCK2   L     WKREG6,FLCCVT                                   @Y30CQLG
         L     REG11,CVTCRCA       CHECK FOR ADDR TO CRCA      @Y30CQLG
         LTR   REG11,REG11         IS CRH ACTIVE ?             @Y30CQLG
         BNZ   HIOCK202            YES, CONTINUE               @Y30CQLG
         SPACE
HIOCK201 SPM   RETREG              NO, RESET CONDITION CODE    @Y30CQLG
         BR    RETREG              AND RETURN                  @Y30CQLG
         SPACE
HIOCK202 TM    UCBFLB,UCBIORST     IS I/O RESTART BIT ON ?     @Y30CQLG
         BZ    HIOCK201            NO, RETURN                  @Y30CQLG
         SPACE
         SPM   RETREG              RESET CONDITION CODE        @Y30CQLG
         BC    NOCSW,HIOCK203      NO CSW STORED,DEDIAG + RET  @Y30CQLG
         SPACE
         TM    FLCCSW,CSWLOP       CHANNEL LOGOUT PENDING ?    @Y30CQLG
         BO    HIOLOP              YES- LOGOUT PENDING LOOP    @Y30CQLG
         SPACE
         XI    CRCAMCWF,CRCAMCWM   TURN OFF BIT 27 TO DEDIAG   @Y30CQLG
         SPACE
         DC    X'8300'             DEDIAGNOSE TURN OFF CRH     @Y30CQLG
         DC    S(CRCAMCW)          ADDR OF MCW                 @Y30CQLG
         SPACE
         XI    CRCAFLG1,CRCADIAG   INDICATE DIAG NOT OUTSTANDNG@Y30CQLG
         LH    WKREG5,UCBCHAN      RELOAD LAST ACTUAL PATH     @Y30CQLG
         B     HIOCCHCK            RETURN TO MAINLINE HIO      @Y30CQLG
         SPACE
HIOCK203 XI    CRCAMCWF,CRCAMCWM   TURN OFF BIT 27 TO DEDIAG   @Y30CQLG
         SPACE
         DC    X'8300'             DEDIAGNOSE, TURN OFF CRH    @Y30CQLG
         DC    S(CRCAMCW)
         SPACE
         XI    CRCAFLG1,CRCADIAG   INDICATE DIAG NOT OUTSTANDNG@Y30CQLG
         LH    WKREG5,UCBCHAN      RELOAD LAST ACTUAL PATH     @Y30CQLG
         B     HIORTRN2            NO CSW STORED-RETURN        @Y30CQLG
         SPACE
         DROP  REG11                                           @Y30CQLG
         DROP  WKREG6                                          @Y30CQLG
         EJECT
         TITLE 'HIOCK3 - CRH HOOK 3 ROUTINE'
***************************************************************@Y30CQLG
*                                                              @Y30CQLG
*        CRH HOOK 3                                            @Y30CQLG
*                                                              @Y30CQLG
***************************************************************@Y30CQLG
         SPACE
         USING CRCA,WKREG4                                     @Y30CQLG
         USING CVT,WKREG6                                      @Y30CQLG
         SPACE
HIOCK3   L     WKREG6,FLCCVT                                   @Y30CQLG
         L     WKREG4,CVTCRCA      CHECK FOR ADDR TO CRCA      @Y30CQLG
         LTR   WKREG4,WKREG4       IS CRH ACTIVE ?             @Y30CQLG
         BZR   RETREG              RETURN TO MAINLINE          @Y30CQLG
         SPACE
         TM    CRCAFLG1,CRCADIAG   IS THERE AN OUTSTANDING DIAG@Y30CQLG
         BNOR  RETREG              NO, RETURN TO MAINLINE      @Y30CQLG
         SPACE
         OI    CRCAFLG1,CRCAHIO    INDICAT TO CRH SLIH FROM HIO@Y30CQLG
         L     WKREG5,CRCACINT     ADDR CRH SLIH, IECVCINT     @Y30CQLG
         BALR  WKREG4,WKREG5       BRANCH TO IECVCINT FOR LGOUT@Y30CQLG
         B     FOUR(RETREG)        RETURN PAST THE BAL TO SLIH @Y30CQLG
         SPACE
         DROP  WKREG4                                          @Y30CQLG
         DROP  WKREG6                                          @Y30CQLG
         EJECT
         TITLE 'HIOCK4 - CRH HOOK 4 ROUTINE FOR FRR'
***************************************************************@Y30CQLG
*                                                              @Y30CQLG
*        CRH HOOK 4 FRR HOOK                                   @Y30CQLG
*                                                              @Y30CQLG
***************************************************************@Y30CQLG
         SPACE
         USING CRCA,REG11                                      @Y30CQLG
         USING CVT,WKREG6                                      @Y30CQLG
         SPACE
HIOCK4   L     WKREG6,FLCCVT                                   @Y30CQLG
         L     REG11,CVTCRCA       CHECK FOR ADDR TO CRCA      @Y30CQLG
         LTR   REG11,REG11         IS CRH ACTIVE ?             @Y30CQLG
         BZR   RETREG              NO, RETURN                  @Y30CQLG
         SPACE
         TM    CRCAFLG1,CRCADIAG   IS THERE AN OUTSTANDING DIAG@Y30CQLG
         BNOR  RETREG              NO, RETURN                  @Y30CQLG
         SPACE
         XI    CRCAMCWF,CRCAMCWM   TURN OFF BIT 27 TO DEDIAG   @Y30CQLG
         SPACE
         DC    X'8300'             DIAG INSTR                  @Y30CQLG
         DC    S(CRCAMCW)          MCW ADDR                    @Y30CQLG
         SPACE
         XI    CRCAFLG1,CRCADIAG   INDICATE NO DIAG            @Y30CQLG
         SPACE
         BR    RETREG              RETURN                      @Y30CQLG
         SPACE
         DROP  REG11                                           @Y30CQLG
         DROP  WKREG6                                          @Y30CQLG
         TITLE 'IECIHIO - FUNCTIONAL RECOVERY ROUTINE'
*
*****************************************************************
*        THE HALT I/O SUBROUTINE FUNCTIONAL RECOVERY ROUTINE.
*****************************************************************
*
         USING SDWA,CNTREG
HIOFRR   BALR  BASEREG,0               SET TEMPORARY BASE
         USING *,BASEREG
         L     BASEREG,HIOADDR         COMMON CSECT BASE
         USING IECIHIO,BASEREG
         LR    CNTREG,REG1             TRANSFER SDWA ADDRESS
         LR    CNTREG1,RETREG          SAVE RTM RETURN ADDRESS
         L     FRREG,SDWAPARM          GET FRR WORKAREA
         L     UCBREG,FRRUCB           GET UCB PTR             @OZ01912
         SPACE
         BAL   RETREG,HIOCK4           CHECK IF CRH            @Y30CQLG
         SPACE
         CLI   SDWACMPC,COD            IECIHIO ISSUE SVC D
         BE    HIOR200                 BRANCH YES, SHOULDER TAP ABEND
         BAL   WKREG4,HIOFUCB          GO GET ADDRESS OF UCBLOCK
         SPACE 1
*   GET THE UCBLOCK IN CASE HIO GAVE IT UP
         SPACE 1
         SETLOCK OBTAIN,TYPE=IOSUCB,MODE=UNCOND,                       *
               ADDR=(11),RELATED=(UCB,HIOFRR)
         L     WKREG4,FRRPSW           LOAD SAVED IONPSW
         LTR   WKREG4,WKREG4           WAS IT SAVED
         BZ    HIOR100                 BRANCH NO
         ST    WKREG4,FLCINPSW+FOUR    YES,RESTORE IT
         LCTL  IOCTL,IOCTL,FRRCTL1     RESTORE CONTROL REG 2
         SPACE 1
*   ISSUE ASYNCHRONOUS SVC DUMP IF BUFFER AVAILABLE
         SPACE 1
HIOR100  LA    REG15,LO8               INSURE AN SDUMP RETURN CODE
         L     WKREG4,CVTPTR           CVT ADDRESS
         USING CVT,WKREG4
         L     WKREG5,CVTSDBF          BUFFER ADDRESS
         LTR   REG0,WKREG5             IS IT AVAILABLE
         BNP   HIOR120                 BRANCH NO
         O     REG0,HION               'OR' IN LOCK BIT
         CS    WKREG5,REG0,CVTSDBF     COMPARE/SWAP ON BUFFER
         BNE   HIOR120                 BRANCH IF CAN'T GET IT
         DROP  WKREG4
         USING SDBUF,WKREG5
         LA    WKREG4,SDBDATA          BUFFER DATA ADDRESS
         ST    WKREG4,SDBDATAD         STORE IT FOR SDUMP
         LA    WKREG4,SDBDL            DATA LENGTH
         STH   WKREG4,SDBDLN           SDUMP NEEDS IT TOO
         MVC   SDBUCB,UCBPXST          MOVE UCB TO BUFFER
         LA    SAVEREG,SDWAVRA         GIVE SDUMP A SAVE AREA
         XC    SDBLAST,SDBLAST         ZERO END OF ENTRIES IND.
         DROP  WKREG5
         L     WKREG4,PSAAOLD          GET CURRENT ASID
         LH    WKREG4,ASCBASID-ASCB(WKREG4) * AND PASS IT TO SDUMP
*****
*   INVOKE DUMP
*****
         SDUMP HDR='IOS-IECIHIO ERROR',ASID=(WKREG4),                  *
               SDATA=(PSA,TRT),                                        *
               BUFFER=YES,                                             *
               BRANCH=YES,                                             *
               LIST=HIOADDR
         SPACE 1
HIOR120  STC   REG15,SDWAVRA           SAVE SDUMP RETURN CODE
         MVC   SDWAMODN,HIONAME        MODULE NAME TO SDWA
         MVI   SDWAURAL,SDBDL+ONE      LENGTH OF DATA
         MVC   SDWAVRA+ONE(SDBDL),UCBPXST MOVE UCB TO SDWA
         TM    FRRFLA,FRRIOS+FRRCCH+FRRSHTP WAS CONTROL IN IOS,
         BNZ   HIOR170                 * CCH,OR SHOULDER TAPPED
*                                      * CPU - BRANCH YES
*   PERCOLATE TO CALLER'S RECOVERY ROUTINE
*
HIOR130  SETRP RECORD=YES,RC=0,WKAREA=(CNTREG)
         NC    UCBSFLS(TWO),ACTIVOFF   RESET UCB STATUS FLAGS
         BR    CNTREG1                 RETURN TO RTM
         SPACE 1
*   DETERMINE IF RETRY POSSIBLE
         SPACE 1
HIOR170  TM    FRRFLA,FRRSHTP          IF IN SHOULDER TAPPED CPU,
         BO    HIOR190                 * RETRY TO EXIT WITH RC=12
         TM    FRRFLA,FRRECURS         PERCOLATE IF RETRY
         BO    HIOR130                 * RECURSION - BRANCH YES
         TM    SDWAERRC,SDWAPERC       THIS FRR PERCOLATED TO
         BZ    HIOR130                 BRANCH NO - PERCOLATE
         XC    SDWASR02(SDWASR11-SDWASR02),SDWASR02
         STM   UCBREG,FRREG,SDWASR07   SET RETRY REGISTERS
         LA    REG0,HIOHIO             RETRY ADDRESS
         SPACE 1
HIOR180  SETRP RETADDR=(0),            *                               *
               RETREGS=YES,            * RETRY THE HDV                 *
               RECORD=YES,             * SEQUENCE                      *
               RC=4,                   *                               *
               WKAREA=(CNTREG)         *
         BR    CNTREG1                 RETURN TO RTM
         SPACE 1
*   FAILURE IN SHOULDER TAPPED CPU - GO BACK TO CALLING CPU
*   WITH RETURN CODE 12 AND ABEND CODE
         SPACE 1
HIOR190  STM   UCBREG,FRREG,SDWASR07   RETRY REGISTERS
         LA    REG0,HIORTRN            RETRY ADDRESS
         MVC   SDWASR14,FRRIPCR        INSURE REG14 VALID
         MVI   FRRLOP,IPCTERM          SET RETURN CODE OF 12
         MVC   FRRIPCR,SDWAABCC        MOVE COMPLETION CODE TO
*                                      * FRR WORKAREA
         B     HIOR180                 GO SETRP
         SPACE 1
HIOR200  MVC   SDWAABCC,FRRIPCR        SET ORIGINAL INTERUPT CODE
         LA    REG15,IPCTERM           SHOW SHOULDER TAP ABEND
*                                      * IN SDWA
         B     HIOR120                 SET RECORDING AREA FOR PERC.
         TITLE 'IECIHIO - MULTIPLE EXPOSURE LOCK LOCATION'
*
*****************************************************************
*        THIS ROUTINE GETS THE ADDRESS OF THE LOCK IN THE BASE
*        EXPOSURE FOR MULTIPLE EXPOSURE DEVICES.
*****************************************************************
*
HIOFUCB  LA    REG11,UCBLOCK           ADDRESS OF UCB LOCK
         TM    UCBWGT,UCBMTPXP         MULTIPLE EXPOSURE DEVICE
         BZR   WKREG4                  BRANCH YES
         L     SAVEREG,UCBBASE         GO BACK TO BASE UCB
         LA    REG11,UCBLOCK-UCB(SAVEREG) USE LOCK OF BASE UCB
         BR    WKREG4                  RETURN
         TITLE 'IECIHIO - CONSTANTS AND MISCELANEOUS DATA'
*
*****************************************************************
*        CONSTANTS AND EXECUTES
*****************************************************************
*
EXSTOSM  STOSM FRRSYSMK,ZERO           EXECUTED TO RESTORE MASK
         DS    0F
SYSDISM  DC    X'000000FD'             DISABLE I/O INT MASK
HIOPSW   DS    0D
         DC    A(IECHK5)               SECOND HALF
ADCCH    DC    V(IGFCCHCR)             CCH EP ADDR
ADIECINT DC    V(IECINT)               IECINT EP ADDR
***************************************************************
HIOADDR  DC    A(IECIHIO)              CSECT ENTRY POINT
         DC    X'80'                   LAST ENTRY INDICATOR
         DC    AL3(IECIEND)            END OF CSECT
***************************************************************
HIONAME  DC    CL8'IECIHIO '           MODULE NAME
HION     DC    X'80000000'             -0
NONRTY   DC    X'80000021'             EQUIP CK, OPER INTV,
*                                      RECIV CK BITS IN STATUS
HWD8     DC    H'8'                    RETURN CODE COMPARE
ACTIVOFF DC    X'499F'                 BSY,PST,ACTV,SACTV OFF
*                                      PSNS,SAP,SPST OFF
CHAN6    DC    X'06'                   FOR CINTER CHANNEL 6    @Y30CQLG
HIOPATCH DC    ((*-IECIHIO)/20)X'00'   PATCH AREA              @YM05573
IECIEND  EQU   *                       END OF IECIHIO
         EJECT
         TITLE 'IECIHIO - FRRAREA DSECT'
FRRAREA  DSECT
FRRSAVE  DS    F                       REG 13 SAVE
FRRUCB   DS    F                       UCB REG SAVE
FRRBYTES DS    0F                      FOUR BYTES
FRRLOP   DS    CL1                     IPC RETURN CODE
FRRSYSMK DS    CL1                     SYS MASK STORE
FRRFLA   DS    XL1                     FLAG BYTE
FRRSHTP  EQU   X'80'                   SHOULDER TAP CODE ACTIVE
FRRIOS   EQU   X'40'                   IOS ENTERED AND ACTIVE
FRRCCH   EQU   X'20'                   CCH ENTERED AND ACTIVE
FRRECURS EQU   X'10'                   RETRY RECURSION
FRRBACK  EQU   X'08'          TO INDICATE BACKOUT EG CU BZY    @OZ00762
         DS    XL1                     RESERVED
FRRCTL1  DS    F                       SAVE FOR I/O CTL REG
FRRIPCR  EQU   *                       FRRCTL2 USED FOR IPC RTN
*                                      * ADDRESS WHEN IN SHOULDER
*                                      * MODE
FRRCTL2  DS    F                       BUILD TEMP I/O CTL REG
FRRPSW   DS    F                       I/O PSW ADDRESS
*
         TITLE 'IECIHIO - ASCB DSECT'
         IHAASCB
*
         TITLE 'IECIHIO - FRRS DSECT'
         IHAFRRS
*
         TITLE 'IECIHIO - SAVE-WORK AREA DSECT'
         IHAWSAVT CLASS=CPU,DSECT=YES
*
         TITLE 'IECIHIO - UCB DSECT'
         IEFUCBOB PREFIX=YES,LIST=YES
*
         TITLE 'IECIHIO - CVT DSECT'
         CVT   DSECT=YES,LIST=NO
*
         TITLE 'IECIHIO - LCCA DSECT'
         IHALCCA
*
         TITLE 'IECIHIO - IRT DSECT'
         IECDIRT
*
         TITLE 'IECIHIO - PCCA DSECT'
         IHAPCCA
*
         TITLE 'IECIHIO - PSA DSECT'
         IHAPSA
*
         TITLE 'IECIHIO - SDWA DSECT'
         IHASDWA
*
         TITLE 'IECIHIO - SDUMP BUFFER DSECT'
SDBUF    DSECT
SDBDATAD DS    A                       DATA ADDRESS
SDBDLN   DS    H                       DATA LENGTH
SDBDATA  EQU   *                       DATA BEGINNING
SDBUCB   DS    XL(UCBCURPX+(UCBBASE-UCBOB)) UCB
SDBDL    EQU   *-SDBDATA               LENGTH OF DATA
SDBLAST  DS    XL6                     END OF ENTRIES INDICATOR
         EJECT
         TITLE 'CRCA DSECT'
         IECDCRCA                                              @Y30CQLG
         END
