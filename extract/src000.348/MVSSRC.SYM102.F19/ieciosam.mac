         TITLE 'IECIOSCN - INPUT/OUTPUT SUPERVISOR'
*****************************************************************
*                                                               *
* MODULE NAME = IECIOSAM                                        *
*                                                               *
* DESCRIPTIVE NAME = INPUT/OUTPUT SUPERVISOR                    *
*                                                               *
* COPYRIGHT = NONE                                              *
*                                                               *
* STATUS = CHANGE LEVEL 00         OCTOBER 18, 1974             *
*                                                               *
* FUNCTION = 1. MANAGE I/O ACTIVITY BY:                         *
*                A. STARTING NEW I/O REQUESTS                   *
*                B. HANDLING INTERRUPTS                         *
*                C. RESTARTING QUEUED I/O REQUESTS              *
*            2. PROVIDE A SINGLE DISABLED EXIT (DIE) FOR USE    *
*                BY THE CALLERS OF IOS                          *
*            3. SUPPORT THE ERP'S (ERROR RECOVERY PROCEDURES)   *
*                THAT ARE PROVIDED                              *
**                                                             **
* NOTES = NONE                                                  *
*                                                               *
*    DEPENDENCIES = NONE                                        *
*                                                               *
*    RESTRICTIONS = NONE                                        *
*                                                               *
*    REGISTER CONVENTIONS = SEE EQUATES                         *
*                                                               *
*    PATCH LABEL = IOSPATCH                                     *
*                                                               *
* MODULE TYPE = I/O CONTROL                                     *
*                                                               *
*    PROCESSOR = ASSEMBLER F                                    *
*                                                               *
*    MODULE SIZE = 11384 DECIMAL BYTES                          *
*                                                               *
*    ATTRIBUTES = DISABLED, KEY 0, SUPERVISOR STATE, RESIDENT   *
*                                                               *
* ENTRY POINTS = IECVSTIO - FROM THE STARTIO MACRO              *
*                IECHNSCH - FROM THE SRB DISPATCHER             *
*                IECINT   - FROM THE I/O FLIH                   *
*                IECIPC   - FROM INTER PROCESSOR COMM.          *
*                IECFRR   - FROM RTM                            *
*                                                               *
*    PURPOSE = SEE FUNCTION                                     *
*                                                               *
*    LINKAGE = REGISTER 14 RETURN ADDRESS                       *
*              REGISTER 15 ENTRY ADDRESS                        *
*                                                               *
*    INPUT = IECVSTIO -                                         *
*         REGISTER  0 = TCB PARAMETER                           *
*                   1 = SRB PARAMETER                           *
*                  14 = RETURN ADDRESS                          *
*                  15 = ADDRESS OF IECVSTIO                     *
*                                                               *
*            IECHNSCH -                                         *
*         REGISTER  0 = SRB ADDRESS                             *
*                   1 = IOSB ADDRESS                            *
*                  14 = RETURN ADDRESS                          *
*                  15 = ADDRESS OF IECHNSCH                     *
*                                                               *
*            IECINT -                                           *
*         REGISTER  4 = RETURN ADDRESS                          *
*                   5 = ADDRESS OF IECINT                       *
*                                                               *
*            IECIPC -                                           *
*         REGISTER 14 = RETURN ADDRESS                          *
*                                                               *
*            IECFRR -                                           *
*         REGISTER 1 = SDWA ADDRESS                             *
*                  14 = RTM RETURN ADDRESS                      *
*                                                               *
*                IECDVOID                                       *
*                IECDSIAB                                       *
*                IECDIOCX                                       *
*                IECDATB                                        *
*                IECDLCH                                        *
*                                                               *
*    OUTPUT = NONE                                              *
*                                                               *
*    EXIT-NORMAL = RETURN TO CALLER                             *
*                                                               *
*    EXIT-ERROR = NONE                                          *
*                                                               *
* EXTERNAL REFERENCES =                                         *
*                                                               *
*    ROUTINES = IECVSMGR                                        *
*                                                               *
*    DATA SETS = NONE                                           *
*                                                               *
*    DATA AREAS = NONE                                          *
*                                                               *
* TABLES = IRT                                                  *
*                                                               *
* MACROS = SCHEDULE,SETLOCK,SETRP,HOOK,TRAS,SETFRR,SDUMP        *
*                                                               *
* CHANGE ACTIVITY = NONE                                        *
*D310400,310480                                                @ZA02102
*****************************************************************
         TITLE 'IECIOSCN - IOS - IPIB DSECT'
         IECDIPIB
         TITLE 'IECIOSCN - IOS - FRR DSECT'
         IHAFRRS
         TITLE 'IECIOSCN - IOS - CRCA DSECT'
         IECDCRCA
         TITLE 'IECIOSCN - IOS - COMMON SYSTEM DATA AREA DSECT'
         IHACSD
         TITLE 'IECIOSCN - IOS - SAVE AREA VECTOR TABLE'
         IHAWSAVT CLASS=CPU,DSECT=YES
         TITLE 'IECIOSCN - IOS - IOSB DSECT'
         IECDIOSB
         TITLE 'IECIOSCN - IOS - UCB DSECT'
         IEFUCBOB PREFIX=YES,LIST=YES
         TITLE 'IECIOSCN - IOS - ERP WORK AREA DSECT'
         IECDERWA
         TITLE 'IECIOSCN - IOS - IOS QUEUE ELEMENT DSECT'
         IECDIOQ
         TITLE 'IECIOSCN - IOS - CVT DSECT'
         CVT     DSECT=YES
         TITLE 'IECIOSCN - IOS - LCCA DSECT'
         IHALCCA
         TITLE 'IECIOSCN - IOS - IRT DSECT'
         IECDIRT
         TITLE 'IECIOSCN - IOS - SRB DSECT'
         IHASRB
         TITLE 'IECIOSCN - IOS - PCCA DSECT'
         IHAPCCA
         TITLE 'IECIOSCN - IOS - CAT TABLE DSECT'
         IECDCAT
         TITLE 'IECIOSCN - IOS - ASCB VECTOR TABLE'
         IHAASVT
         TITLE 'IECIOSCN - IOS - ASCB DSECT'
         IHAASCB
         TITLE 'IECIOSCN - SDWA DSECT'
         IHASDWA
         TITLE 'IECIOSCN - VARIABLE RECORDING AREA MAPPING'
****************************************************************
*                                                              *
*        THIS SECTION MAPS THE VARIABLE RECORDING AREA         *
*        OF THE SDWA AS USED BY IECIOSAM                       *
*                                                              *
*****************************************************************
         SPACE 1
         ORG   SDWAVRA
VRECORD  DS    0F
VRECIND  DS    X                   VALID DATA INDICATORS
VRECIOQV EQU   X'80'               IOQ HAS BEEN INSERTED
VRECUCBV EQU   X'40'               UCB HAS BEEN INSERTED
*        EQU   X'3F'               RESERVED
VRECDURC DS    X                   SVC DUMP RETURN CODE
VRECDRCI EQU   X'FF'               INITIALIZATION CONSTANT FOR
*                                  *VRECDURC TO INDICATE THAT AN
*                                  *SDUMP WAS NOT TAKEN
         DS    XL2                 RESERVED
VRECIOQ  DS    XL(IOQL)            IOQ AREA
VRECUCBP DS    XL(UCBCURPX)        UCB PREFIX AREA
VRECUCBB DS    XL(UCBDEV-UCBOB)    UCB BASE AREA
VRECUSE  EQU   *-VRECORD           LENGTH OF VARIABLE RECORDING
*                                  *AREA USED FOR RECORDING
         ORG   VRECUCBP            ORG BACK TO UCB PREFIX AREA
VRECSAVE DS    XL(72)              REGISTER SAVE AREA FOR
*                                  *BRANCH ENTRY TO SDUMP
*                                  *(USED BEFORE UCB IS MOVED
*                                  *INTO THE AREA)
         TITLE 'IECIOSCN - FRR PARAMETER AREA DSECT'
****************************************************************
*                                                              *
*        THIS DSECT DESCRIBES IECIOSAM'S USAGE OF THE          *
*        FRR PARAMETER AREA                                    *
*                                                              *
****************************************************************
         SPACE 1
FRRPARM  DSECT
FRR1STA  DS    A                   POINTER TO FIRST LEVEL FRR
*                                  *PARAMETER AREA OR 0
FRRFLA   DS    X                   INDICATORS                  @ZA27189
FRRIOS   EQU   X'80'               INDICATOR TO QVA EXIT RTN   @ZA27189
*                                  *THAT IT HAS BEEN CALLED    @ZA27189
*                                  *FOR LCH VERIFICATION       @ZA27189
FRRREC   EQU   X'40'               IF ON AT ENTRY TO FRR RRN   @ZA27189
*                                  *THEN A RECURSIVE ERROR HAS @ZA27189
*                                  *OCCURED                    @ZA27189
FRR2ND   EQU   X'20'               THIS A SECOND LEVEL FRR     @ZA27189
*                                  *PARAMETER AREA             @ZA27189
FRRDMPB  EQU   X'10'               SVC DUMP BUFFER HAS BEEN    @ZA27189
*                                  *RESERVED BUT CALL OF SDUMP @ZA27189
*                                  *HAS NOT YET BEEN DONE      @ZA27189
         DS    AL3                 RESERVED                    @ZA27189
FRRNO1   DS    F                   DON'T USE - THIS FRR AREA   @ZA27189
*                                  *IS PASSED TO THE STORAGE
*                                  *MANAGER FRR IN CERTAIN
*                                  *ERROR CASES AND THIS FIELD
*                                  *IS RESERVED FOR IT'S USE
*                                  *AND MUST NOT BE USED BY
*                                  *IECIOSAM
FRRDUMPA DS    F                   CONTENTS OF REGISTER SWAPPED
*                                  *INTO CVTSDBF FIELD VIA CS
*                                  *INSTRUCTION
FRRNO2   DS    X                   DON'T USE FOR SAME REASON AS
*                                  *FIELD FRRNO1 ABOVE
FRRRET   DS    AL3                 RTM RETURN ADDRESS
FRRSAVR0 DS    F                   SAVE AREA FOR FRR 200 BYTE
*                                  WORK AREA ADDRESS
FRRLEN   EQU   *-FRRPARM           LENGTH OF FRR PARAMETER AREA
         TITLE 'IECIOSCN - QVPL DSECT'
****************************************************************
*        THE FOLLOWING IS THE DSECT OF THE 200 BYTE WORK AREA
*        PASSED BY RTM. IT IS USED AS THE PARAMATER AND SAVE AREAS
*        WHICH ARE PASSED TO THE QUEUE VERIFICATION ROUTINE.
****************************************************************
         IHAQVPL
         SPACE 5
QVWORKS  DS    XL(QVPLWASZ)        WORK AREA FOR QVA
QVSAVE   DS    18F                 SAVE AREA FOR CALLED ROUTINES
QFRRSDWA DS    F                   SDWA BACK POINTER
***                                                           ***
***      REMAINDER OF WORK AREA UNUSED                        ***
***                                                           ***
         TITLE 'IECIOSCN - IOS - PSA DSECT'
         IHAPSA
         TITLE 'IECIOSCN - IOS - DSECT OF THE CSW'
****************************************************************
*                                                              *
*              THIS DESCRIBES THE FIELDS USED IN THE CSW       *
*                                                              *
****************************************************************
         ORG   FLCCSW              POSITION AT THE CSW
CSWFLAGS DS    C                   FLAG BYTE
CSWKEY   EQU   X'F0'               KEY USED IN OPERATION
CSWRES   EQU   X'08'               RESERVED
CSWLOP   EQU   X'04'               CHANNEL LOGOUT PENDING
CSWDCC   EQU   X'03'               DEFERRED CONDITION CODE
         SPACE 1
CSWCCWAD DS    AL3                 CCW ADDRESS
         SPACE 1
CSWSTATS DS    0H                  STATUS BYTES
CSWUNST  DS    C                   UNIT STATUS BYTE
CSWATTEN EQU   X'80'               ATTENTION
CSWSTMOD EQU   X'40'               STATUS MODIFIER
CSWCUE   EQU   X'20'               CONTROL UNIT END
CSWBSY   EQU   X'10'               BUSY
CSWCE    EQU   X'08'               CHANNEL END
CSWDE    EQU   X'04'               DEVICE END
CSWUCK   EQU   X'02'               UNIT CHECK
CSWUEX   EQU   X'01'               UNIT EXECPTION
         SPACE 1
CSWCHST  DS    C                   CHANNEL STATUS BYTE
CSWPCI   EQU   X'80'               PROGRAM-CONTROLLED INTERRUPT
CSWILN   EQU   X'40'               INCORRECT LENGTH
CSWPGMCK EQU   X'20'               PROGRAM CHECK
CSWPRCK  EQU   X'10'               PROTECTION CHECK
CSWCDCK  EQU   X'08'               CHANNEL DATA CHECK
CSWCCCK  EQU   X'04'               CHANNEL CONTROL CHECK
CSWICCK  EQU   X'02'               CHANNEL INTERFACE CHECK
CSWCCK   EQU   X'01'               CHAINING CHECK
         SPACE 1
CSWRCNT  DS    H                   RESIDUAL CHECK
***                                                          ***
*              COMBINED EQUATES                                *
***                                                          ***
CSWPCAT  EQU   CSWPCI+CSWCDCK+CSWCCCK+CSWICCK
*                                  PCI, CHANNEL DATA, CHANNEL
*                                  *CONTROL AND INTERFACE CONTRL
CSWATUCK EQU   CSWATTEN+CSWUCK     ATTENTION AND UNIT CHECK
CSWCAT   EQU   CSWCDCK+CSWCCCK+CSWICCK
*                                  CHANNEL DATA, CHANNEL CONTROL
*                                  *OR INTERFACE CONTROL CHECK
CSWITF   EQU   CSWUCK+CSWUEX       UNIT CHECK AND UNIT EXCEPTION
         TITLE 'IECIOSCN - IOS - VOID DSECT'
         IECDVOID
         TITLE 'IECIOSCN - IOS - ATTENTION TABLE DSECT'
         IECDATB
         TITLE 'IECIOSCN - IOS - SRB-IOSB ALLOCATION BLOCK DSECT'
         IECDSIAB
         TITLE 'IECIOSCN - IOS - LCH TABLE DSECT'
         IECDLCH
         TITLE 'IECIOSCN - DUMP BUFFER DSECT'
****************************************************************
*                                                              *
*        THIS DSECT DESCRIBES IECIOSAM'S USAGE OF THE          *
*        SVC DUMP BUFFER                                       *
*                                                              *
****************************************************************
         SPACE 1
DUMPBUF  DSECT
DUMPDAT1 DS    XL4                 ADDRESS OF DATA AREA 1 IN
*                                  *BUFFER
DUMPLEN1 DS    XL2                 LENGTH OF DATA IN DATA AREA 1
DUMPIND1 DS    X                   VALID DATA INDICATORS
DUMPIRTV EQU   X'80'               IRT HAS BEEN INSERTED
DUMPUCBV EQU   X'40'               UCB HAS BEEN INSERTED
DUMPIOQV EQU   X'20'               IOQ HAS BEEN INSERTED
DUMPIOSV EQU   X'10'               IOSB HAS BEEN INSERTED
DUMPLCHV EQU   X'08'               LCH, 12 BYTE BLOCK HEADER AND
*                                  *FIRST 2K 12 BYTE BLOCK PAGE
*                                  *HAVE BEEN INSERTED
*        EQU   X'07'               RESERVED
         DS    X                   RESERVED
DUMPIRT  DS    XL(IRTEL)           IRT AREA
DUMPUCBP DS    XL(UCBCURPX)        UCB PREFIX AREA
DUMPUCBB DS    XL(UCBDEV-UCBOB)    UCB BASE AREA
DUMPIOQ  DS    XL(IOQL)            IOQ AREA
DUMPIOSB DS    XL(IOSEND-IOSB)     IOSB AREA
DUMPLCHH DS    XL(LCHEL)           LCH HEADER AREA
DUMP12BH DS    XL(16)              STORAGE MANAGER 12 BYTE BLOCK
*                                  *HEADER AREA
DUMP12PG DS    XL(2048)            FIRST PAGE OF STORAGE MANAGER
*                                  *12 BYTE BLOCK POOL
DUMPU1   EQU   *-DUMPIND1          ACTUAL NUMBER OF BYTES USED
*                                  *IN DATA AREA 1
DUMPEND  DS    XL6                 SIX BYTES OF 0'S TO INDICATE
*                                  *LAST USED AREA OF DUMP
*                                  *BUFFER
DUMPLEN  EQU   *-DUMPBUF           TOTAL LENGTH OF DUMP BUFFER
*                                  *REFERENCED BY IECIOSAM
         TITLE 'IECIOSCN - IOS - IOCOMEX DSECT'
         IECDIOCX
         TITLE 'IECIOSCN - IOS - SAVE AREA DSECT'
****************************************************************
*                                                              *
*              THIS DSECT DESCRIBES THE USE OF THE 16 WORD     *
*              SAVE AREA IN THE LCCA.                          *
*                                                              *
****************************************************************
SAVEAREA DSECT
SVAREA00 DS    0D                  BEGINING OF SAVE AREA
***                                                          ***
*              SAVE AREA FOR ESMINTF1, ESMINTF3, ESMINTG1      *
*              AND ESMINTG3                                    *
***                                                          ***
         DS    14F                 USED TO INTERFACE WITH THE
*                                  *IOS STORAGE MANAGER
SVAREA05 DS    F                   REGISTER SAVE AREA
SVAREA06 DS    F                   REGISTER SAVE AREA
         TITLE 'IECIOSCN -  IOS - IOS CHANNEL PROGRAM AREA'
ICPA     DSECT
****************************************************************
*                                                              *
*              THIS IS A DESCRIPTION OF THE IOS CHANNEL PROGRAM*
*              AREA THAT IS PROVIDED AND THE EQUATES USED TO   *
*              FILL IN THIS AREA.                              *
*                                                              *
****************************************************************
IN1FSTHF DS    0F                  FIRST HALF OF FIRST CCW
IN1CC    DS    X                   COMMAND CODE OF FIRST CCW
IN1DA    DS    AL3                 DATA ADDRESS OF FIRST CCW
IN1SNDHF DS    0F                  SECOND HALF OF FIRST CCW
IN1FLS   DS    X                   FLAGS IN FIRST CCW
         DS    X                   RESERVED
IN1CNT   DS    H                   COUNT FIELD IN FIRST CCW
         SPACE 2
IN2FSTHF DS    0F                  FIRST HALF OF SECOND CCW
IN2CC    DS    X                   COMMAND CODE OF SECOND CCW
IN2DA    DS    AL3                 DATA ADDRESS OF SECOND CCW
IN2SNDHF DS    0F                  SECOND HALF OF SECOND CCW
IN2FLS   DS    X                   FLAGS IN SECOND CCW
         DS    X                   RESERVED
IN2CNT   DS    H                   COUNT FIELD IN SECOND CCW
         SPACE 2
IN3FSTHF DS    0F                  FIRST HALF OF THIRD CCW
IN3CC    DS    X                   COMMAND CODE OF THIRD CCW
IN3DA    DS    AL3                 DATA ADDRESS OF THIRD CCW
IN3SNDHF DS    0F                  SECOND HALF OF THIRD CCW
IN3FLS   DS    X                   FLAGS IN THIRD CCW
         DS    X                   RESERVED
IN3CNT   DS    H                   COUNT FIELD IN THIRD CCW
         SPACE 2
IN4FSTHF DS    0F                  FIRST HALF OF FOURTH CCW
IN4CC    DS    X                   COMMAND CODE OF FOURTH CCW
IN4DA    DS    AL3                 DATA ADDRESS OF FOURTH CCW
IN4SNDHF DS    0F                  SECOND HALF OF FOURTH CCW
IN4FLS   DS    X                   FLAGS IN FOURTH CCW
         DS    X                   RESERVED
IN4CNT   DS    H                   COUNT FIELD IN FOURTH CCW
***                                                          ***
*              EQUATES FOR THIS AREA                           *
***                                                          ***
SNSCC    EQU   X'04'               SENSE COMMAND CODE
SEEKCC   EQU   X'07'               SEEK COMMAND CODE
TICCC    EQU   X'08'               TIC COMMAND CODE
RHACC    EQU   X'1A'               READ HOME ADDRESS COMMAND
RRZCC    EQU   X'16'               READ RECORD 0 COMMAND CODE
TIECC    EQU   X'1B'               TRACK IN ERROR COMMAND CODE
SFMCC    EQU   X'1F'               SET FILE MASK COMMAND CODE
RLSCC    EQU   X'94'               RELEASE COMMAND CODE
RESVCC   EQU   X'B4'               RESERVE COMMAND CODE
FLCD     EQU   X'80'               CHAIN DATA FLAG
FLCC     EQU   X'40'               CHAIN COMMAND FLAG
FLSLI    EQU   X'20'               SURPRESS LENGTH INCICATOR FLAG
FLSKIP   EQU   X'10'               SKIP DATA TRANSFER FLAG
FLPCI    EQU   X'08'               PCI FLAG
LGHCCW   EQU   8                   LENGTH OF A CCW
LGHRHA   EQU   X'05'               LENGTH OF READ HOME ADDRESS
LGHRRZ   EQU   X'04'               LENGTH OF READ RECORD 0
         TITLE 'IECIOSCN - IOS - DSECT OF CHANNEL TABLE ENTRY'
****************************************************************
*                                                              *
*              THIS DSECT DESCRIBES THE ENTRIES IN THE CHANNEL *
*              TABLE.                                          *
*                                                              *
****************************************************************
CHT      DSECT
         DS    C                   RESERVED
CHTTYPE  DS    C                   TYPE OF CHANNEL SPECIFIED
         SPACE 1
*   CODE DEFINITION FOR CHTTYPE
         SPACE 1
CHTMPX   EQU   1                   BYTE MULTIPLEXOR CHANNEL
CHTHSMPX EQU   2                   HI-SPEED MULTIPLEXOR CHANNEL
CHTSEL   EQU   3                   SELECTOR CHANNEL
CHTBMPX  EQU   4                   BLOCK MULTIPLEXOR CHANNEL
         SPACE 1
CHTMASK  DS    H                   CHANNEL MASK FOR (IRTCHMSK)
CHTCSM   DS    A                   ADDRESS OF CHANNEL SEARCH MOD
         SPACE 1
CHTEL    EQU   8                   SIZE OF ENTRY IN BYTES
CHTELP2  EQU   3                   SIZE OF ENTRY IN POWERS OF 2
         TITLE 'IECIOSCN - DSECT OF CHANNEL SEARCH MODULE TABLE ENTRY'
****************************************************************
*                                                              *
*              THIS DSECT DESCRIBES THE ENTRIES IN THE CHANNEL *
*              SEARCH MODULE TABLE.                            *
*                                                              *
****************************************************************
CSME     DSECT
CSMEOF   DS    H                   ROUTINE OFFSET
CSMELCH  DS    H                   LCH ENTRY OFFSET
CSMEL    EQU   4                   LENGTH OF CSME ENTRY
         TITLE 'IECIOSCN - IOS - REGISTER DEFINITION'
*****************************************************************
*                                                               *
*        THE FOLLOWING IS THE REGISTER DEFINITION FOR BASIC IOS *
*                                                               *
*****************************************************************
WRK0     EQU   0                   WORK REGISTER 0
WRK1     EQU   1                   WORK REGISTER 1
IOSBR    EQU   2                   IOSB REGISTER
LCCAR    EQU   3                   LCCA REGISTER (CONTAINS IRT)
LNKR     EQU   4                   LINK REGISTER
BASEA    EQU   5                   BASE REGISTER A
WRK6     EQU   6                   WORK REGISTER 6
UCBR     EQU   7                   UCB REGISTER
BASEB    EQU   8                   BASE REGISTER B
BASEC    EQU   9                   BASE REGISTER C
WRKA     EQU   10                  WORK REGISTER 10
WRKB     EQU   11                  WORK REGISTER 11
IOQR     EQU   11                  IOQE REGISTER
WRKC     EQU   12                  WORK REGISTER 12
SAVR     EQU   13                  LCCA SAVE AREA REGISTER
WRKEVEN  EQU   14                  EVEN OF PAIR WORK REGISTER
WRKODD   EQU   15                  ODD OF PAIR WORK REGISTER
         TITLE 'IECIOSCN - IOS - IOS COMMON EQUATES'
****************************************************************
*                                                              *
*              THE FOLLOWING IS THE COMMON EQUATES FOR BASIC   *
*              IOS                                             *
*                                                              *
****************************************************************
F        EQU   X'F'                CONSTANT VALUE
FF       EQU   X'FF'               CONSTANT VALUE
X80      EQU   X'80'               BIT FOR USE IN BITMAP CHECK
IOINTER  EQU   X'02'               I/O INTERRUPT BIT IN PSW
EXTINT   EQU   X'01'               EXTERNAL INTERRUPT BIT IN PSW
SHRSUBCH EQU   X'80'               LOWEST SHARED SUBCHANNEL ADDR
X20      EQU   X'20'               160 BYTE BLK IND
X40      EQU   X'40'               OR MASK FOR DEF STAT INTS    YM01352
EC3211   EQU   X'10'               3211 EQUIP CK INDICATION
XFA      EQU   X'FA'              OS TRACE ACTIVE MASK         @Y30CQLF
MM3211   EQU   X'02'               3211 MECHANICAL MOTION IND
ZERO     EQU   0                   CONSTANT VALUE
CK3800   EQU   X'10'               CANCEL KEY IN SENSE         @Y40MPLG
ONE      EQU   1                   CONSTANT VALUE
TWO      EQU   2                   CONSTANT VALUE
THREE    EQU   3                   CONSTANT VALUE
FOUR     EQU   4                   CONSTANT VALUE
FIVE     EQU   5                   CONSTANT VALUE
SEVEN    EQU   7                   CONSTANT VALUE
EIGHT    EQU   8                   CONSTANT VALUE
TWELVE   EQU   12                  CONSTANT VALUE
FIFTEEN  EQU   15                  CONSTANT VALUE
TWENTY   EQU   20                  CONSTANT VALUE
TWENTY4  EQU   24                  CONSTANT VALUE
N192     EQU   192
NXTIOQ   EQU   0                   RETURN VECTOR
NXTCHN   EQU   2                   LENGTH OF ENTRY IN TCH TABLE
NXTLCH   EQU   4                   RETURN VECTOR
MSASID   EQU   1                   ASID OF MASTER SCHEDULER
BYTE123  EQU   7                   STCM INSTRUCTION MASK FOR   @YM06828
*                                  STORING BYTES 1,2,3         @YM06828
***                                                           ***
*              VECTOR RETURN EQUATES TO ETCH1                   *
***                                                           ***
NENQ     EQU   0                   NO ENQUEUE, NO SHOULDER TAP
ENQNST   EQU   4                   ENQUEUE, NO SHOULDER TAP
ENQST    EQU   8                   ENQUEUE, SHOULDER TAP
***                                                           ***
*              VECTOR RETURN EQUATES FOR DEVICE RESERVE TEST    *
***                                                           ***
RCPURPTH EQU   0                   RIGHT CPU - RIGHT PATH
RCPUWPTH EQU   4                   RIGHT CPU - WRONG PATH
WCPUXPTH EQU   8                   WRONG CPU - PATH IMMATERIAL
***                                                          ***
*              CHANNEL CHECK HANDLER EQUATES                   *
***                                                          ***
CCHSSAS  EQU   0                   CC=1 ON SIO STAND ALONE SEEK
CCHTSAS  EQU   4                   CC=1 ON TIO STAND ALONE SEEK
CCHSSEN  EQU   8                   CC=1 ON SIO SENSE
CCHSIO   EQU   16                  CC=1 ON SIO
CCHINT   EQU   20                  INTERRUPT
CCHHIO   EQU   24                  CC=1 ON HIO
CCHEOS2  EQU   28                  SECOND ENTRY (END OF SENSE)
***                                                          ***
*              IOS STORAGE MANAGER EQUATES                     *
***                                                          ***
ISMENT1  EQU   0                   GETBLOCK FOR 40 OR 160 BYTES
ISMENT2  EQU   4                   FREEBLOCK FOR 40 OR 160 BYTES
ISMENT3  EQU   8                   PURGE/FREE
ISMENT4  EQU   12                  GETBLOCK FOR 12 BYTES
ISMENT5  EQU   16                  FREEBLOCK FOR 12 BYTES
         SPACE 1
ISMSZ3   EQU   160                 LARGE SIZED BLOCKS
         SPACE 1
ISM12PAG EQU   12                  OFFSET IN STORAGE MANAGER'S
*                                  *12 BYTE BLOCK HEADER TO THE
*                                  *FIELD CONTAINING THE ADDRESS
*                                  *OF THE FIRST PAGE
ISM12HLN EQU   16                  LENGTH OF STORAGE MANAGER'S
*                                  *12 BYTE BLOCK HEADER
ISM12PGL EQU   2048                LENGTH OF A STORAGE MANAGER
*                                  *12 BYTE BLOCK PAGE
         TITLE 'IECIOSCN - IOS - IOS COMMUNICATIONS AREA'
IECIOSCN CSECT
IOS      DS    0D                  LOWEST ADDRESS IN IOS MODULE
         ENTRY IECIXAVL            MAKE IOCOM ADDRESS EXTERNAL
         ENTRY IOCCATLK            MAKE CAT LOCK EXTERNAL
         ENTRY IOCSYNCH            MAKE IOSYNC LOCK EXTERNAL
         ENTRY IECVDVT                 MAKE DEVICE TABLE EXTERN@Y30CQLF
         ENTRY IECVHK1A                MAKE                    @Y30CQLF
         ENTRY IECVHK1B                    CRH                 @Y30CQLF
         ENTRY IECVHK2A                       HOOKS            @Y30CQLF
         ENTRY IECVHK2B                            EXTERNAL    @Y30CQLF
         ENTRY IECVHK3A                                        @Y30CQLF
         ENTRY IECVHK3B                                        @Y30CQLF
         ENTRY IECVSRB                 SRB SCHEDULE FOR CRH    @Y30CQLF
         IECDIOCM CSECT=YES
         TITLE 'IECIOSCN - IOS - VOID CSECT'
         IECDVOID CSECT=YES
         TITLE 'IECIOSCN - IOS - DEVICE TABLE'
IECVDVT  DS    0F                  DEVICE TABLE
         SPACE 1
*****************************************************************
*                                                               *
*              THE DEVICE TABLE CONTAINS THE ADDRESSES OF THE   *
*              START I/O SUBROUTINE, TRAP CODE AND SENSE        *
*              SUBROUTINE BY DEVICE CLASS. IT IS ACCESSED VIA   *
*              AN INDEX IN THE UCB (UCBDTI).                    *
*                                                               *
*****************************************************************
         SPACE 1
DVT      DS    0F
DVTSIO   DS    A                   ADDRESS OF SIO MODULE
DVTTRAP  DS    A                   ADDRESS OF TRAP CODE ROUTINE
DVTSENSE DS    A                   ADDRESS OF SENSE ROUTINE
         ORG   DVT
         SPACE 1
*        UNIT RECORD ENTRY
         SPACE 1
DVTUR    DC    A(EUNITIO1)         UNIT RECORD SIO SUBROUTINE
         DC    A(EDTUR)            UNIT RECORD TRAP CODE
         DC    A(ISNSR250)         UNIT RECORD SENSE SUBROUTINE
         SPACE 1
*        TELEPROCESSING ENTRY
         SPACE 1
DVTTP    DC    A(EUNITIO1)         TELEPROCESSING SIO SUBROUTINE
         DC    A(EDTTP)            TELEPROCESSING TRAP CODE
         DC    A(ISNSR250)         TELEPROCESSING SNS SUBROUTINE
         SPACE 1
*        GRAPHICS ENTRY
         SPACE 1
DVTGR    DC    A(EUNITIO1)         GRAPHICS SIO SUBROUTINE
         DC    A(EDTGRAPH)         GRAPHICS TRAP CODE
         DC    A(ISNSR250)         GRAPHICS SENSE SUBROUTINE
         SPACE 1
*        TAPE ENTRY
         SPACE 1
DVTTAPE  DC    A(ETAPEIO1)         TAPE SIO SUBROUTINE
         DC    A(EDTTAPE)          TAPE TRAP CODE
         DC    A(ISNSR250)         TAPE SENSE SUBROUTINE
         SPACE 1
*        DIRECT ACCESS (2314) ENTRY
         SPACE 1
DVT2314  DC    A(EDAIO1)           DA (2314) SIO SUBROUTINE
         DC    A(EDTDASD)          DA (2314) TRAP CODE
         DC    A(ISNSR200)         DA (2314) SENSE SUBROUTINE
         SPACE 1
*        DIRECT ACCESS (NON 2314) ENTRY
         SPACE 1
DVT3330  DC    A(EDAIO1)           DA (NON 2314) SIO SUBROUTINE
         DC    A(EDTDASD)          DA (NON 2314) TRAP CODE
         DC    A(ISNSR250)         DA (NON 2314) SNS SUBROUTINE
         SPACE 1
*        DRUM ENTRY
         SPACE 1
DVTDRUM  DC    A(EDRUMIO1)         DRUM SIO SUBROUTINE
         DC    A(EDT2305)          DRUM TRAP CODE
         DC    A(ISNSR250)         DRUM SENSE SUBROUTINE
         SPACE
*        DSM ENTRY                                             @Y30LPLC
         SPACE
DVTDSM   DC    A(EUNITIO1)         DSM SIO SUBROUTINE          @Y30LPLC
         DC    A(EDTUR)            DSM TRAP CODE ROUTINE       @Y30LPLC
         DC    A(ISNSR150)         DSM SENSE SUBROUTINE        @Y30LPLC
         SPACE
*        VECTOR PROCESSOR (3838) ENTRY                         @G29ANLO
         SPACE 1
DVT3838  DC    A(EUNITIO1)         3838 SIO SUBROUTINE         @G29ANLO
         DC    A(EDTUR)            3838 TRAP CODE ROUTINE      @G29ANLO
         DC    A(ISNSR150)         3838 SENSE SUBROUTINE       @G29ANLO
         SPACE
*        3330V ENTRY                                           @G24LPLN
         SPACE
DVT3330V DC    A(EVDAIO1)          3330V SIO SUBROUTINE        @G24LPLN
         DC    A(EDTVDA)           3330V TRAP CODE ROUTINE     @G24LPLN
         DC    A(ISNSR250)         3330V SENSE SUBROUTINE      @G24LPLN
         TITLE 'IECIOSCN - IOS - COMMON CONSTANTS FOR BASIC IOS'
****************************************************************
*                                                              *
*              THE FOLLOWING IS THE COMMON CONSTANTS FOR       *
*              BASIC IOS                                       *
*                                                              *
****************************************************************
CONDXXXX DS    0D                  DOUBLE WORD BOUNDRY
COND0001 CCW   X'03',COND0001,X'30',1  IMM CCW SKELETON
COND0002 CCW   X'04',COND0002,X'30',1  SPECIAL SENSE CCW       @ZA06061
CONFXXXX DS    0F                  FULL WORD BOUNDRY
CONF0001 DC    X'8FFFFFFF'         MASK TO REMOVE CONTROL UNIT
*                                  *BITS FROM CSW
CONF0002 DC    X'10000020'         MASK FOR STORAGE MANAGEMENT
*                                  *INTERFACE (1-160 BYTE BLOCK)
CONF0003 DC    X'0000FF3F'         ALL BUT PCI AND INCORRECT
*                                  *LENGTH IN CSW STATUS
CONF0004 DC    A(IECFRR)           ADDRESS OF FRR ROUTINE
***                                                          ***
*              THE FOLLOWING ARE VECTORS FOR RESTART           *
***                                                          ***
CONF0005 DC    A(IRSTR060)         FOR SEEK
         DC    A(IRSTR060)         FOR SENSE
         DC    A(IRSTR060)         FOR DATA TRANSFER
         DC    A(IRSTR300)         FOR END OF TABLE
CONF0006 DC    X'0000'             FOR SEEK
         DC    AL1(UCBBSY+UCBACTV+UCBPST+UCBSAP+UCBPSNS) STATUS
         DC    X'00'               FILL
         DC    X'0000'             FOR SENSE
         DC    AL1(UCBBSY+UCBACTV) STATUS
         DC    X'00'               FILL
         DC    X'0000'             FOR DATA TRANSFER
         DC    AL1(UCBPST+UCBBSY+UCBACTV+UCBPSNS) STATUS
         DC    X'00'               FILL
CONF0007 DC    A(IRSTR120)         FOR SEEK
         DC    A(IRSTR140)         FOR SENSE
         DC    A(IRSTR130)         FOR DATA TRANSFER
CONF0008 DC    A(IRSTR190)         FOR SEEK
         DC    A(IRSTR200)         FOR SENSE
         DC    A(IRSTR160)         FOR DATA TRANSFER
CONF0009 DC    A(ETCH1)            FOR SEEK
         DC    A(ESENSE3)          FOR SENSE                   @ZA16177
         DC    A(ETCH1)            FOR DATA TRANSFER
***                                                          ***
*              END OF RESTART VECTORS                          *
***                                                          ***
CONF0010 DC    AL1(FLCC)           SECOND HALF OF READ HOME
         DC    AL3(LGHRHA)         *ADDRESS CCW
CONF0011 DC    AL1(FLSLI)          SECOND HALF OF READ RECORD
         DC    AL3(LGHRRZ)         *0 CCW
CONF0012 DC    AL1(SNSCC)          FIRST HALF OF THE SILLY SENSE
         DC    AL3(0)              *CCW COMMAND
CONF0013 DC    AL1(FLSKIP+FLSLI)   SECOND HALF OF THE SILLY
         DC    AL3(4)              *SENSE CCW COMMAND
CONF0014 DC    F'65536'            LOGICAL 1 FOR OPTIMIZER
CONF0015 DC    X'00000F00'         MASK TO 'AND' OFF CU/DEV      M01051
CONF00F0 DC    X'0000F000'         UCBCHM AND UCBPMSK ADJUSTMENT
CONF0017 DC    V(TRSIO)            ADDRESS OF TRACE (SIO)
CONF0018 DC    V(IECVSLCH)         ADDRESS OF SENSE LCH'S
CONF0020 DC    AL1(FLCC+FLSLI)     SECOND HALF OF THE
         DC    AL3(6)              *DATA TRANSFER SEEK COMMAND
CONF0021 DC    AL1(FLCC+FLSLI)     SECOND HALF OF THE
         DC    AL3(1)              *SET FILE MASK/TIE COMMANDS
CONF0022 DC    AL1(FLSLI)          SECOND HALF OF THE
         DC    AL3(6)              *STAND ALONE SEEK COMMAND
CONF0023 DC    AL1(FLSLI+FLSKIP)   SECOND HALF OF THE
         DC    AL3(1)              *STAND ALONE RESERVE/RELEASE
*                                  *COMMANDS
CONF0024 DC    AL1(FLCC+FLSLI+FLSKIP) SECOND HALF OF THE
         DC    AL3(1)              *DATA TRANSFER RESERVE/RELEASE
*                                  *COMMANDS
CONF0025 DC    X'0000F3FF'         MASK OUT CE/DE
CONF0028 DC    X'00FFFFFF'         MASK TO ISOLATE ADDRESSES
CONF0029 DC    X'30000020'         MASK FOR STORAGE MANAGEMENT
*                                  *INTERFACE (3-160 BYTE BLOCKS)
CONF0030 DC    X'00000FF0'         MASK TO AND OFF DEV           M01051
CONF0031 DC    X'0000FFFF'         MASK OFF FOR 16 BIT         @Z30ANLA
CONF0032 DC    F'4096'             SENSE LOOP COUNT            @ZA10792
CONXF0   DC    X'000000F0'         PATH MASK TESTER
CONX0F   DC    X'0000000F'         MASK TO REMOVE SEL SUB CHANNEL BITS
*                                  *FROM COPY OF LCHTCH ENTRY  @ZA31965
CONF0035 DC    V(TRIO)            ADDRESS OF OS TRACE ROUTINE  @Y30CQLF
CONF0036 DC    A(ISENS800)        ADDRESS OF SENSE2 SUBROUTINE @ZA16177
CONFHDET DC    V(IECVHDET)         ADDR OF HOT I/O DETECTION   @ZA30350
         WXTRN IECVHDET                                        @ZA30350
CONHXXXX DS    0H                  HALF WORD BOUNDRY
CONH0001 MVC   IOSSNS-IOSB(ONE,WRKEVEN),EWASNS-EWA(WRK1)
*                                  MOVE SENSE DATA FROM EWA TO
*                                  *IOSB VIA EXECUTE
CONH0002 DC    AL2(CSWCAT)         MASK TO REMOVE ALL BUT CAT
*                                  *ERRORS FROM CSW
CONH0003 STOSM PSASYMSK-PSA(WRK0),ZERO 'OR' ORIGINAL SYSTEM MASK IN
CONH0004 DC    H'8'                CONSTANT VALUE
CONH0005 DC    AL2(IOSSNSBD)       SIMULATED EQUIP. CHECKS
CONH0006 MVC   EWASNS-EWA(ONE,WRKA),EWASNS-EWA(WRKC)
*              MOVE SENSE DATA TO NEW EWA
CONBXXXX DS    0C                  BYTE BOUNDRY
CONB0002 DC    X'0006'             CHANNEL & INTERFACE CNTRL CK@ZA01911
         SPACE 1
         MODID BR=NO
         TITLE 'IECIOSCN - IOS - STARTIO INTERFACE'
*********ESTIO1**************************************************
*                                                               *
* FUNCTION                                                      *
*    INTERFACE BETWEEN STARTIO MACRO AND CHANNEL SCHEDULER.     *
*    FORMATS THE SRB/IOSB BASED ON THE INPUT PARAMETERS. SETS   *
*    UP PARAMETERS FOR ENTRY TO CHANNEL SCHEDULER.              *
*                                                               *
* ENTRY POINTS                                                  *
*         ESTIO1                                                *
* INPUT                                                         *
*    REGISTERS                                                  *
*              WRK0    =TCB ADDRESS                             *
*              WRK1    =SRB ADDRESS                             *
*              LCCAR   =CVT ADDRESS                             *
*              SAVR    =CALLER'S SAVE AREA                      *
*              WRKEVEN =RETURN ADDRESS                          *
*              WRKODD  =ADDRESS OF IECVSTIO                     *
*                                                               *
*              WRK0 POSITIVE = TCB ADDRESS                      *
*                   NEGATIVE = USE CURRENT TCB ADDRESS          *
*                   ZERO     = USE ZERO FOR THE TCB ADDRESS     *
*                                                               *
*              WRK1 POSITIVE = SRB ADDRESS                      *
*                   NEGATIVE = SRB ALL FORMATTED NO TCB         *
*                                                               *
*    FIELDS                                                     *
*              CVTTCBP  SRBPARM                                 *
*                                                               *
*    LOCKS                                                      *
*              NONE                                             *
*                                                               *
* OUTPUT                                                        *
*    REGISTERS                                                  *
*              WRK0    =SRB ADDRESS                             *
*              WRK1    =IOSB ADDRESS                            *
*              WRKA    =DESTROYED                               *
*              WRKB    =DESTROYED                               *
*              SAVR    =CALLER'S SAVE AREA                      *
*              WRKEVEN =RETURN ADDRESS                          *
*              WRKODD  =ADDRESS OF IECHNSCH                     *
*                                                               *
*    FIELDS                                                     *
*              SRBPTCB                                          *
*                                                               *
*    LOCKS                                                      *
*              NONE                                             *
*                                                               *
* EXTERNAL REFERENCES                                           *
*    NONE                                                       *
*                                                               *
* EXITS                                                         *
*    TO IECHNSCH                                                *
*                                                               *
* TABLES/WORKAREAS                                              *
*    CVT                                                        *
*    IOSB                                                       *
*    SRB                                                        *
*                                                               *
*****************************************************************
         EJECT
***                                                           ***
*              INDICATE ADDRESSABILITY                          *
***                                                           ***
         USING CVTMAP,LCCAR        INDICATE CVT ADDRESSABILITY
         USING SRBSECT,WRKA        INDICATE SRB ADDRESSABILITY
         USING *,WRKODD            INDICATE BASE ADDRESSABILITY
         ENTRY IECVSTIO            MAKE ENTRY POINT EXTERNAL
         SPACE 1
***                                                           ***
*              INITIALIZE SRB/IOSB                              *
***                                                           ***
IECVSTIO LPR   WRKA,WRK1           SET SRB POSITIVE
         LTR   WRK1,WRK1           IS SRB PARAMETER NEGATIVE?
         BM    ISTIO20             YES - NO TCB PARAMETER
         SPACE 1
         LTR   WRK0,WRK0           IS TCB PARM POSITIVE OR ZERO?
         BNM   ISTIO10             YES - USE AS IS
         SPACE 1
         L     WRKB,CVTTCBP        GET POINTER TO CURRENT TCB
         L     WRK0,FOUR(WRKB)     GET ADDRESS CURRENT TCB
ISTIO10  ST    WRK0,SRBPTCB        SET TCB ADDRESS IN SRB
         SPACE 1
***                                                           ***
*              SET UP FOR ENTRY TO CHANNEL SCHEDULER            *
***                                                           ***
ISTIO20  L     WRK1,SRBPARM        GET IOSB ADDRESS INTO REG 1
         LR    WRK0,WRKA           GET SRB ADDRESS INTO REG 0
         LA    WRKODD,IECHNSCH     ESTABLISH ADDRESSABILITY
*                                  *FOR CHANNEL SCHEDULER AND
*                                  *FALL THROUGH
         SPACE 1
***                                                           ***
*              DROP ADDRESSABILITY                              *
***                                                           ***
         SPACE 1
         DROP  LCCAR,WRKA,WRKODD   RESET ADDRESSABILITY
         TITLE 'IECIOSCN - IOS - CHANNEL SCHEDULER SUBROUTINE'
*********ECHSCHD1************************************************
*                                                               *
* FUNCTION                                                      *
*    INITIALIZATION AND DEVICE AVAILABILITY TESTS               *
*                                                               *
* ENTRY POINTS                                                  *
*         ECHSCHD1                                              *
*                                                               *
* INPUTS                                                        *
*    REGISTERS                                                  *
*              WRK0    =SRB ADDRESS                             *
*              WRK1    =IOSB ADDRESS                            *
*              SAVR    =CALLER'S SAVE AREA                      *
*              WRKEVEN =RETURN ADDRESS                          *
*              WRKODD  =ADDRESS OF IECHNSCH                     *
*                                                               *
*    FIELDS                                                     *
*              IOCORMGT LCCACPUS PSALCCAV WSACIOS               *
*                                                               *
*    LOCKS                                                      *
*              UCBLOCK MUST BE OBTAINABLE                       *
*              LCHLOCK MUST BE HELD OR OBTAINABLE               *
*                                                               *
* EXTERNAL REFERENCES                                           *
*    ESETUP1                                                    *
*    ETCH1                                                      *
*    EQUEE1                                                     *
*                                                               *
* EXITS                                                         *
*    +0 =REQUEST STARTED, COMPLETED OR ENQUEUED                 *
*                                                               *
* TABLES/WORKAREAS                                              *
*    FLC                                                        *
*    FRRS                                                       *
*    IOQ                                                        *
*    IOSB                                                       *
*    IRT                                                        *
*    LCCA                                                       *
*    PCCA                                                       *
*    SVAREA                                                     *
*    UCB                                                        *
*    WSAC                                                       *
*                                                               *
*****************************************************************
         EJECT
***                                                           ***
*              ESTABLISH IOS ENVIRONMENT AND ADDRESSABILITY     *
***                                                           ***
         USING FLC,0               SET LOW CORE ADDRESSABILITY
         USING IECHNSCH,WRKODD
         ENTRY IECHNSCH            MAKE ENTRY POINT EXTERNAL
         SPACE 1
ECHSCHD1 DS    0H
IECHNSCH STNSM PSASYMSK,FF-IOINTER-EXTINT
*                                  DISABLE AND SAVE CURRENT MASK
         L     LCCAR,PSALCCAV      POINT AT THE LCCA
         USING LCCA,LCCAR          INDICATE LCCA ADDRESSABILITY
         SPACE 1
         STM   SAVR,WRKEVEN,IRTRTNSV SAVE FOR EXIT, REGISTER
*                                  *13 NOT ALTERED ACROSS STARTIO
*                                  *INTERFACE
         IC    WRKA,PSASYMSK       SAVE THE SYSTEM MASK TO BE
         STC   WRKA,IRTSYMSK       RESTORED ON EXIT
         MVI   IRTCMRST,FF         INDICATE IOS ACTIVE ON CPU
         MVI   IRTENVR,IRTCHENT    INDICATE ENTRY FROM CHAN SCHD
         LA    WRKA,IECHNSCH-IOS   LOAD OFFSET TO START OF IOS
         SLR   WRKODD,WRKA         SET TO BEGINNING OF IOS
         LR    BASEA,WRKODD        SET FIRST BASE REGISTER
         LA    BASEB,4094          LOAD OTHER OFFSET VALUES IN
         LR    BASEC,BASEB         *OTHER TWO BASE REGISTERS
         ALR   BASEB,BASEA         SET BASE REGISTER B
         ALR   BASEC,BASEB         SET BASE REGISTER C
         SPACE 1
         USING IOS,BASEA           INDICATE REAL BASEA
         USING IOS+4094,BASEB      INDICATE REAL BASEB
         USING IOS+8188,BASEC      INDICATE REAL BASEC
         DROP  WRKODD
         SPACE 1
***                                                           ***
*              SET UP FRR FOR RECOVERY                          *
***                                                           ***
         SETFRR A,                SET UP FRR FOR RECOVERY              *
               FRRAD=CONF0004,    *ADDRESS OF THE IOS FRR              *
               PARMAD=(WRKA),     *REGISTER FOR SAVE AREA              *
               WRKREGS=(WRKB,WRKC) *WORK REGISTERS
         SPACE 1
         OI    PSASUP3,PSAIOSUP    SET SUPER BIT TO INSURE
*                                  FRR ENTRY DISABLED
         ST    WRKA,IRTFRRWA       SAVE FRR WORK AREA ADDRESS
         L     SAVR,LCCACPUS       POINT AT LCCA SAVE AREA TABLE
         USING WSAC,SAVR           INDICATE WSAC ADDRESSABILITY
         SPACE 1
         L     SAVR,WSACIOS        POINT AT IOS SAVE AREA
         USING SVAREA00,SAVR       INDICATE SVAREA ADDRESSABILITY
         SPACE 1
***                                                           ***
*              GET AN IOQE                                      *
***                                                           ***
         L     WRKODD,IOCORMGT     GET ADDRESS OF STORAGE MANAGER
         STM   WRK0,WRK1,SVAREA05  SAVE SRB/IOSB ACROSS INTERFACE
         OI    IRTFLB,IRTSMGR+IRT12GT STORAGE MANAGER ACTIVE FOR
*                                  *12 BYTE GET
         BAL   WRKEVEN,ISMENT4(WRKODD) ENTER STORAGE MANAGER
         SPACE 1
         USING IOQ,IOQR
         SPACE 1
         NI    IRTFLB,FF-IRTSMGR-IRT12GT STORAGE MANAGER NOT
*                                  *ACTIVE FOR 12 BYTE GET
         ST    IOQR,IRTIOQ         STORE IOQE ADDRESS
         LM    WRK0,WRK1,SVAREA05  RESTORE SRB/IOSB
         SLR   WRKA,WRKA           ZERO WORK REGISTER
         ST    WRKA,IOQLNK         SHOW IOQE NOT INITIALIZED
         MVI   IOQFLB,IOQALOC      SHOW IOQE ALLOCATED         @G24LPLN
         SPACE 1
***                                                           ***
*              INITIALIZE IOQ  AND REGISTERS                    *
***                                                           ***
         BAL   LNKR,ESETUP1        GO TO INITIALIZATION
         OI    IRTFLA,IRTIOQA      SHOW AN ACTIVE IOQE
         OI    IRTENVR,IRTCSINT    INDICATE CHANNEL SCHEDULER
*                                  *INITIALIZATION COMPLETE
         SPACE 1
***                                                           ***
*              DETERMINE IF REQUEST CAN BE STARTED OR ENQUEUE IT*
***                                                           ***
         USING IOSB,IOSBR          SHOW ADDRESSABILITY TO IOSB
         USING UCB,UCBR            SHOW ADDRESSABILITY TO UCB
         SPACE 1
         TM    UCBFLA,FF           UCBBSY+UCBNRY+UCBPST+UCBPSNS+
*                                  UCBCUB+UCBSAP+UCBACTV+UCBQISCE
*                                  *IS DEVICE AVAILABLE?
         BNZ   ICHSCH30            NO - TEST FURTHER
ICHSCH10 LR    WRK0,WRKC           SAVE LCH ADDRESS             YM01751
         LR    WRK1,SAVR           SAVE REG 13 ACROSS INTERFACE
         LA    WRKB,UCBLOCK        POINT AT THE UCBLOCK
         ST    WRKB,IRTUCB         SET TO THE LOCK TO BE HELD
         SETLOCK OBTAIN,           GET THE UCBLOCK                     *
               TYPE=IOSUCB,                                            *
               MODE=UNCOND,                                            *
               ADDR=(11),                                              *
               RELATED=(UCB,IECIOSAM(IFRUCB20))
         SPACE 1
         OI    IRTFLA,IRTULCK      SHOW UCB LOCK OBTAINED
         LR    WRKC,WRK0           RESTORE LCH ADDRESS
         LR    SAVR,WRK1           RESTORE REG 13
         L     IOQR,IRTIOQ         RESTORE IOQE ADDRESS
         TM    UCBFLA,FF           UCBBSY+UCBNRY+UCBPST+UCBPSNS+
*                                  UCBCUB+UCBSAP+UCBACTV+UCBQISCE
*                                  *IS DEVICE AVAILABLE?
         BNZ   ICHSCH30            NO - TEST FURTHER
         SPACE 1
***                                                           ***
*              GO START THIS REQUEST NOW                        *
***                                                           ***
ICHSCH20 BAL   LNKR,ETCH1          GO FIND A PATH TO START
         SPACE 1
*   ETCH1 RETURNS ON TWO VECTORS (+0 AND +4). THE RETURNS HAVE
*   MEANING ONLY TO CHANNEL RESTART.
         SPACE 1
         B     ICHSCH60            GO PREPARE FOR EXIT
*        B     ICHSCH60            GO PREPARE FOR EXIT
         SPACE 3
***                                                           ***
*              CHANNEL SCHEDULER COMPLETE - PREPARE FOR EXIT    *
***                                                           ***
ICHSCH60 BAL   LNKR,ERSTART2       GO TO CHANNEL RESTART
         SPACE 1
***                                                           ***
*              DELETE THE FRR ROUTINE                           *
***                                                           ***
         NI    PSASUP3,FF-PSAIOSUP RESET SUPER BIT
         SPACE 1
         SETFRR D,                 DELETE THE FRR ROUTINE              *
               WRKREGS=(WRKB,WRKC) *WORK REGISTERS
         LM    SAVR,WRKEVEN,IRTRTNSV RESTORE REGISTERS 13,14
         IC    WRKC,IRTSYMSK       GET ORIGINAL SYSTEM MASK
         EX    WRKC,CONH0003       SET THE ORIGINAL SYSTEM MASK
         BR    WRKEVEN             RETURN TO CALLER
         EJECT
***                                                           ***
*              TEST OF UCBFLA FOR STARTABILITY                  *
***                                                           ***
         USING IOQ,IOQR            INDICATE IOQE ADDRESSABILITY
         SPACE 1
ICHSCH30 TM    UCBFLA,FF-UCBNRY-UCBQISCE IS UCB BUSY WITH ANOTHER
*                                  REQUEST
         BNZ   ICHSCH40            YES - GO ENQUEUE
         SPACE 1
         TM    UCBFLA,UCBNRY+UCBQISCE NOT READY OR QUIESCED
         BZ    ICHSCH10            NO - GET LOCK TRY AGAIN
         SPACE 1
         TM    IOSPKEY,IOSPGDPX    IS THIS DUPLEXED REQUEST
         BO    ICHSCH70            YES - SPECIAL HANDLING
         TM    UCBFLA,UCBNRY       QUIESCE ONLY                 @YM0998
         BO    ICHSCH38            NO - NOT READY              @ZA08444
         TM    IOSOPT,IOSQISCE     IS THIS QUIESCE OWNER
         BZ    ICHSCH80            NO - GO ENQUEUED            @ZA06074
         SPACE 1
ICHSCH34 TM    IRTFLA,IRTULCK      IS THE UCBLOCK HELD         @ZA08444
         BZ    ICHSCH10            NO - GO GET THE LOCK AND TRY
*                                  *AGAIN
         B     ICHSCH20            GO START REQUEST
ICHSCH38 TM    IOSOPT,IOSRELSE     IS THIS A RELEASE REQUEST   @ZA08444
         BO    ICHSCH34            GO START THE RELEASE        @ZA08444
         SPACE 3
***                                                           ***
*              DEVICE IS LOGICALLY BUSY - ENQUEUE REQUEST       *
***                                                           ***
ICHSCH40 OI    IOQFLA,IOQLBSY      INDICATE LOGICALLY BUSY FOR
*                                  RESOURCE MANAGER
         TM    IRTFLA,IRTULCK      IS THE UCBLOCK HELD
         BZ    ICHSCH50            NO - DO NOT FREE UCBLOCK
         SPACE 1
         BAL   LNKR,EFRUCBL1       GO FREE THE UCBLOCK
         SPACE 1
         L     IOQR,IRTIOQ         RESTORE IOQE ADDRESS
ICHSCH50 BAL   LNKR,EQUEE1         GO ENQUEUE THE REQUEST
         SPACE 1
         TM    UCBFLA,FF-UCBNRY-UCBQISCE  DEVICE STILL ACTIVE? @ZA16812
         BNZ   ICHSCH60            YES - GO EXIT               @ZA16812
         SPACE 1
         SLR   WRK6,WRK6           ZERO REGISTER               @ZA16812
         IC    WRK6,UCBCHA         GET CHANNEL NUMBER          @ZA16812
         LA    WRKC,X80            GET BIT MASK                @ZA16812
         SLL   WRKC,24             MOVE MASK TO HIGH-ORDER BIT @ZA16812
         SRL   WRKC,0(WRK6)        SHIFT TO PROPER CHANNEL BIT @ZA16812
         L     WRK0,IRTCHMSK       GET CURRENT CHANNEL MASK    @ZA16812
ICHSCH55 LR    WRKODD,WRK0         COPY CURRENT MASK           @ZA16812
         OR    WRKODD,WRKC         SET CHANNEL BIT FOR REDRIVE @ZA16812
         CS    WRK0,WRKODD,IRTCHMSK  SWAP IF CURRENT MASK      @ZA16812
*                                    HASN'T CHANGED            @ZA16812
         BNE   ICHSCH55            SWAP FAILED - TRY AGAIN     @ZA16812
         SPACE 1
         B     ICHSCH60            GO EXIT FROM CHANNEL SCHEDULER
         EJECT
***                                                           ***
*              SPECIAL HANDLING OF ASM DUPLEXED REQUESTS        *
***                                                           ***
ICHSCH70 MVI   IOSCOD,IOSDPXC      SPECIAL COMPLETION CODE
ICHSCH75 BAL   LNKR,ESCHDIO1       GO RETURN SRB/IOSB          @ZA06074
         SPACE 1
         B     ICHSCH60            GO PREPARE FOR EXIT
         SPACE 1
ICHSCH80 CLI   UCBTBYT3,UCB3DACC   DIRECT ACCESS?              @ZA06074
         BNE   ICHSCH40            NO - GO ENQUEUE             @ZA06074
         TM    UCBTBYT2,UCBRVDEV   3330V?                      @ZA06074
         BZ    ICHSCH40            NO - GO ENQUEUE             @ZA06074
         MVI   IOSCOD,IOSMIHCA     SHOW LOST INTERRUPT         @ZA06074
         B     ICHSCH75            GO SCHEDULE SRB             @ZA06074
         SPACE 1
***                                                           ***
*              DROP ALL BUT BASE ADDRESSABILITY                 *
***                                                           ***
         DROP  IOSBR,LCCAR,UCBR,IOQR
         TITLE 'IECIOSCN - IOS - INITIALIZATION SUBROUTINE'
*********ESETUP1*************************************************
*                                                               *
* FUNCTION                                                      *
*    1. INITIALIZE REGISTERS.                                   *
*    2. SET UCB ADDRESSES TO THE BASE FOR MULTIPLE              *
*       EXPOSURE DEVICES.                                       *
*    3. INCREMENT THE TOTAL LCH COUNT FOR THE RESOURCE MGR.     *
*    4. INITIALIZE THE INPUT/OUTPUT QUEUE ELEMENT (IOQE).       *
*    5. INITIALIZE THE INPUT/OUTPUT SUPERVISOR BLOCK (IOSB).    *
*                                                               *
* ENTRY POINTS                                                  *
*         ESETUP1                                               *
*                                                               *
* INPUT                                                         *
*    REGISTERS                                                  *
*              WRK0    =SRB ADDRESS                             *
*              WRK1    =IOSB ADDRESS                            *
*              BASEA   =BASE ADDRESS A                          *
*              BASEB   =BASE ADDRESS B                          *
*              BASEC   =BASE ADDRESS C                          *
*              WRKA    =DESTROYED                               *
*              IOQR    =IOQE ADDRESS                            *
*                                                               *
*    FIELDS                                                     *
*              IOSUCB   UCBWGT   CVTASVT  ASCBDP                *
*                                                               *
*    LOCKS                                                      *
*              NONE                                             *
*                                                               *
* OUTPUT                                                        *
*    REGISTERS                                                  *
*              WRK0    =DESTROYED                               *
*              WRK1    =DESTROYED                               *
*              IOSBR   =IOSB ADDRESS                            *
*              UCBR    =UCB ADDRESS                             *
*              WRKA    =ZERO                                    *
*              WRKC    =LCH ADDRESS                             *
*              WRKEVEN =DESTROYED                               *
*              WRKODD  =DESTROYED                               *
*                                                               *
*    FIELDS                                                     *
*              IOSSRB   IOSUCB   IOSCOD   IOSCSW   IOSCC        *
*              IOSPCHN  IOQIOSB  IOQPRI   IOQFLGA               *
*                                                               *
*    LOCKS                                                      *
*              NONE                                             *
*                                                               *
* EXTERNAL REFERENCES                                           *
*    NONE                                                       *
*                                                               *
* EXITS                                                         *
*    BR  LNKR  RETURN TO CALLER                                 *
*                                                               *
* TABLES/WORKAREAS                                              *
*    ASCB                                                       *
*    CVT                                                        *
*    IOCOM                                                      *
*    IOQE                                                       *
*    IOSB                                                       *
*    LCH                                                        *
*    UCB                                                        *
*                                                               *
*****************************************************************
         EJECT
***                                                           ***
*              INDICATE ALL BUT BASE ADDRESSABILITY             *
***                                                           ***
         SPACE 1
         USING IOSB,IOSBR          INDICATE IOSB ADDRESSABILITY
         USING LCCA,LCCAR          INDICATE LCCA ADDRESSABILITY
         USING UCB,UCBR            INDICATE UCB ADDRESSABILITY
         USING IOQ,IOQR            INDICATE IOQ ADDRESSABILITY
         SPACE 1
***                                                           ***
*              INITIALIZE THE REGISTERS                         *
***                                                           ***
ESETUP1  LR    IOSBR,WRK1          SET UP IOSB REGISTER
         ST    WRK0,IOSSRB         INSURE IOSB POINTS AT SRB
         L     UCBR,IOSUCB         SET UP UCB REGISTER
         LA    WRKEVEN,UCBPRFX     GET LENGTH OF UCB PREFIX
         SLR   UCBR,WRKEVEN        POINT AT START OF PREFIX
         SPACE 1
***                                                           ***
*              IF MULTIPLE EXPOSURE DEVICE, ADJUST UCB TO BASE  *
***                                                           ***
         TM    UCBWGT,UCBMTPXP     MULTIPLE EXPOSURE DEVICE?
         BZ    ISETUP10            NO - BYPASS CHANGE TO BASE
         L     UCBR,UCBBASE        PICK UP BASE EXPOSURE ADDRESS
         LR    WRKODD,UCBR         COPY UCB ADDRESS
         ALR   WRKODD,WRKEVEN      POINT AT COMMON SECTION
         ST    WRKODD,IOSUCB       INSURE IOSB POINTS AT BASE
         SPACE 1
***                                                           ***
*              INITIALIZE THE IOSB                              *
***                                                           ***
ISETUP10 ST    WRKA,IOSCC          ZERO OUT SIO CONDITION CODE+
         NI    IOSFLA,FF-IOSEX     RESET IOSB EXCEPTION
         OI    IOSOPT2,IOSIGP      MARK ELIGIBLE FOR SIGP      @ZA18121
         ST    WRKA,IOSCSW+THREE   ZERO OUT CSW FIELD IN IOSB
         MVI   IOSCOD,IOSNRMC      INITIALIZE TO X'7F'
         ST    WRKA,IOSPCHN        ZERO OUT PCI CHAIN FIELD
         SPACE 1
***                                                           ***
*              ADD ONE TO RESOURCE MGR TOTAL I/O COUNT          *
***                                                           ***
         L     WRKC,IOCLCHTB       GET ADDRESS OF LCH'S
         IC    WRKA,UCBLCI         GET LCH INDEX
         SLL   WRKA,LCHELP2        MULTIPLY BY LENGTH OF LCH
         ALR   WRKC,WRKA           POINT AT PROPER LCH
         ST    WRKC,IRTLCHAD       STORE LCH ADDRESS
         USING LCH,WRKC            INDICATE LCH ADDRESSABILITY
         SPACE 1
         L     WRKEVEN,LCHTOTAL    GET CURRENT COUNT
ISETUP20 LR    WRKODD,WRKEVEN      COPY IT
         AL    WRKODD,CONF0014     LOGICALLY ADD ONE TO COUNT
         CS    WRKEVEN,WRKODD,LCHTOTAL  ATTEMPT STORE UPDATED CNT
         BNE   ISETUP20            NOT SUCESSFUL - TRY AGAIN
         DROP  WRKC
         EJECT
***                                                           ***
*              INITIALIZE THE IOQE                              *
***                                                           ***
         ST    IOSBR,IOQIOSB       SHOW IOQ ASSOCIATED WITH IOSB
*  THE IOQ MUST KEEP FLAG IOQALOC IN IOQFLB SO THE IECVSMGR WILL
*  ACCEPT IT WHEN IT IS FREED                                  @Y40FPLG
         NI    IOQFLA,ZERO         ZERO ALL FLAGS EXCEPT       @G24LPLN
         NI    IOQFLB,IOQALOC+IOQHOLD  *ALLOCATED AND HOLD     @G24LPLN
         BR    LNKR                RETURN TO CALLER
         SPACE 1
***                                                           ***
*              DROP ALL BUT BASE ADDRESSABILITY                 *
***                                                           ***
         DROP  IOSBR,LCCAR,UCBR,IOQR
         TITLE 'IECIOSCN - IOS - TEST CHANNEL SUBROUTINE'
*********ETCH1***************************************************
*                                                               *
* FUNCTION                                                      *
*    DETERMINES IF THERE IS A PATH FROM THIS CPU THRU WHICH AN  *
*    I/O REQUEST MAY BE STARTED. IF THERE IS NOT AN AVAILABLE   *
*    PATH, IT DETERMINES IF THERE IS A CHANCE THE REQUEST COULD *
*    BE STARTED FROM THE OTHER CPU. IF THERE IS, THE OTHER CPU  *
*    IS 'SHOULDER TAPPED' TO CAUSE CHANNEL RESTART TO BE        *
*    ENTERED.                                                   *
*    ALSO USED BY VARY PROCESSOR TO DETERMINE THE STATUS OF     *
*    A CHANNEL BY ISSUING A TCH FOLLOWED BY A DIRECT RETURN.    *
*                                                               *
* ENTRY POINT                                                   *
*         ETCH1                                                 *
*         ETCH100                                               *
*                                                               *
* INPUT                                                         *
*    REGISTERS                                                  *
*              IOSBR   =IOSB ADDRESS                            *
*              LCCAR   =LCCA ADDRESS (INCLUDING IRT)            *
*              LNKR    =RETURN ADDRESS                          *
*              BASEA   =BASE ADDRESS A                          *
*              UCBR    =UCB ADDRESS                             *
*              BASEB   =BASE ADDRESS B                          *
*              BASEC   =BASE ADDRESS C                          *
*              IOQR    =IOQE ADDRESS                            *
*              WRKC    =LCH ADDRESS                             *
*              SAVR    =LCCA SAVE AREA                          *
*              (INPUT TO IECTCHMP IS CHANNEL ADDRESS IN WRK6.   *
*               RETURN IS ON WRKEVEN.)                          *
*                                                               *
*    FIELDS                                                     *
*              UCBFLC   LCHTCH   IOSOPT   CATFLG   UCBSTAT      *
*              UCBCHM   IOSAPMSK UCBCHAN  IRTUCB   IRTFLA       *
*              IOQFLA   IRTTCHSV                                *
*                                                               *
*    LOCKS                                                      *
*              UCBLOCK MUST BE HELD                             *
*                                                               *
* OUTPUT                                                        *
*    REGISTERS                                                  *
*              WRK0    =CAT ADDRESS                             *
*              WRK1    =DESTROYED                               *
*              WRK6    =UNIT ADDRESS                            *
*              WRKA    =DESTROYED                               *
*              WRKC    =CHANNEL PROGRAM ADDRES                  *
*              WRKEVEN =DESTROYED                               *
*              WRKODD  =DESTROYED                               *
*                                                               *
*    FIELDS                                                     *
*                                                               *
*              IRTUCB   IOSEX    IOSCOD                         *
*                                                               *
*    LOCKS                                                      *
*              UCBLOCK FREED                                    *
*                                                               *
* EXTERNAL REFERENCES                                           *
*    NONE                                                       *
*                                                               *
* EXITS                                                         *
*    +0 = NOT ALL CHANNELS ARE BUSY                             *
*    +4 = ALL CHANNELS RETURNED A BUSY CONDITION                *
*    (RETURN IS BR  14 FOR ETCH100 ENTRY)                       *
*                                                               *
* TABLES/WORKAREAS                                              *
*    NONE                                                       *
*                                                               *
*****************************************************************
         EJECT
***                                                           ***
*              INDICATE ALL BUT BASE ADDRESSABILITY             *
***                                                           ***
         SPACE 1
         USING IOSB,IOSBR          INDICATE IOSB ADDRESSABILITY
         USING LCCA,LCCAR          INDICATE LCCA ADDRESSABILITY
         USING UCB,UCBR            INDICATE UCB ADDRESSABILITY
         USING IOQ,IOQR            INDICATE IOQ ADDRESSABILITY
         USING LCH,WRKC            INDICATE LCH ADDRESSABILITY
         SPACE 1
***                                                           ***
*              INITIALIZATION                                   *
***                                                           ***
         SPACE 1
ETCH1    ST    LNKR,IRTTCHSV       SAVE RETURN REGISTER
         OI    IRTFLB,IRTCHBSY     SET ALL CHANNELS BUSY
         NI    UCBFLA,FF-UCBCUB    RESET UCBCUB FLAG
         TM    UCBFLC,UCBITF       DID UNIT CHECK, WLR OR UNIT
*                                  EXCEPTION OCCUR ON PREVIOUS
*                                  INTERRUPT?
         BO    ITCH240             YES - HANDLE AS INTERCEPT
         SPACE 1
***                                                             ***
*              TEST IF I/O RESTART HAS DETERMINED THERE ARE       *
*              NO PATHS AVAILABLE                                 *
***                                                             ***
ITCH003  TM    UCBFLB,UCBIORST     IS DEV RESTART INTERCEPTED? @ZA12388
         BO    ITCH199             YES - GO TERMINATE REQUEST
         SPACE 1
***                                                           ***
*              FIND AN AVAILABLE PATH                           *
***                                                           ***
ITCH005  OI    IOSOPT2,IOSHTP      MARK ELIGIBLE               @ZA18121
*                                  FOR SHOULDER TAP            @ZA18121
         L     WRKA,LCHTCH         GET ADDRESS OF CHANNEL LIST @ZA10766
         TM    IOSPATH,IOSGDP      GUARANTEED DEVICE PATH?
         BO    ITCH160             YES - GO TEST FOR CORRECT CHAN
         SPACE 1
ITCH010  LH    WRK6,ZERO(WRKA)     GET NEXT CHANNEL FROM LIST
         LTR   WRK6,WRK6           END OF LIST?
         BM    ITCH070             YES - TEST FOR SHOULDER TAP
         SPACE 1
         TM    IOSPATH,IOSGDP      GUARANTEED DEVICE PATH
         BO    ITCH070             YES - EXIT FROM ETCH1
         SPACE 1
         L     WRK1,PSAPCCAV       GET ADDRESS OF PCCA
         USING PCCA,WRK1           INDICATE ADDRESSABILITY
         SPACE 1
         LA    WRKEVEN,PCCACAT     GET ADDRESS OF CAT
         LR    WRKODD,WRK6         COPY CHANNEL ADDRESS TO USE
         SRL   WRKODD,EIGHT        *AS AN INDEX INTO THE CAT
         SLL   WRKODD,CATELP2      MULTIPLY BY LENGTH OF CAT TABLE
         ALR   WRKEVEN,WRKODD      POINT AT CAT ENTRY
         USING CAT,WRKEVEN         INDICATE CAT ADDRESSABILITY
         SPACE 1
         TM    CATFLG,CATNOP+CATNGEN+CATNCPU
*                                  TEST AVAILABILITY BITS
         BNZ   ITCH034             NOT AVAILABLE - TRY NEXT PATH
         SPACE 1
***                                                           ***
*              IF RESERVED, TEST FOR CORRECT CPU AND PATH       *
***                                                           ***
         TM    UCBFLB,UCBRESVH     IS DEVICE RESERVED?
         BZ    ITCH020             NO - TEST IF ONLINE
         SPACE 1
         BAL   LNKR,ITCH210        TEST RESERVED PATH
         SPACE 1
         B     ITCH020             CORRECT CPU AND PATH - START
         B     ITCH034             WRONG PATH - GET NEXT ONE
         B     ITCH070             WRONG CPU - EXIT WITH SH. TAP
         SPACE 3
***                                                           ***
*              DETERMINE IF PATH IS ONLINE                      *
***                                                           ***
ITCH020  LR    WRK0,WRKEVEN        SAVE CAT ADDRESS
         SLR   WRKODD,WRKODD
         IC    WRKODD,UCBCHM       GET UCB OFFLINE MASK
         LR    WRKEVEN,WRK6        COPY CHANNEL AND MASK
         N     WRKEVEN,CONX0F      REMOVE SEL SUB CHANNEL BITS @ZA31965
         CLI   PSACPUSA+ONE,ZERO   IN CPU 0?
         BNE   ITCH025             NO - GO SHIFT FOR CPU 1
         SPACE 1
         SLL   WRKEVEN,TWO         SHIFT FOR CPU 0
         SPACE 3
ITCH025  SLL   WRKEVEN,TWO         SHIFT FOR CPU 1
ITCH030  STC   WRKEVEN,IOQPTH      SAVE PATH MASK INDICATOR
         TM    IOSOPT,IOSAPR       IS APR ACTIVE
         BO    ITCH035             YES - GO SET NEW MASK
ITCH032  NR    WRKODD,WRKEVEN      SEE IF THIS PATH IS OFFLINE
         BZ    ITCH040             NO - CONTINUE
         SPACE 1
***                                                           ***
*              PATH IS OFFLINE                                  *
***                                                           ***
         NI    IRTFLB,FF-IRTCHBSY  INSURE RESTART WILL TRY NEXT
*                                  REQUEST
ITCH034  LA    WRKA,NXTCHN(WRKA)   UP TO NEXT CHANNEL
         B     ITCH010             TRY NEXT PATH
         SPACE 5
***                                                           ***
*              CREATE NEW ANDING MASK USING UCBCHM AND IOSAPMSK *
***                                                           ***
ITCH035  TM    UCBFLB,UCBRESVH     IS DEVICE RESERVED
         BO    ITCH038             YES - ZERO APR MSK AND RETURN
         SLR   WRKEVEN,WRKEVEN     CLEAR REG
         IC    WRKEVEN,IOSAPMSK    INSERT APR MASK
         OR    WRKODD,WRKEVEN      SET NEW MASK FOR AND
         IC    WRKEVEN,IOQPTH      RESET PATH TO TEST
         C     WRKODD,CONXF0       ARE ALL PATHS NO GO
         BNE   ITCH032             NO - GO TO PATH TEST
         IC    WRKODD,UCBCHM       RESET MASK REG
ITCH038  MVI   IOSAPMSK,ZERO       RESET APR MASK
         B     ITCH032             RETURN TO PATH TEST
         EJECT
***                                                           ***
*              ISSUE THE TEST CHANNEL INSTRUCTION               *
***                                                           ***
         ENTRY IECVIHK1
IECVIHK1 EQU   *                   HOOK LABEL FOR TCH INST
ITCH040  TCH   0(WRK6)             ISSUE TEST CHANNEL
         BC    8+1,ITCH050         NOT BUSY OR INTERRUPT       @ZA15746
*                                  PENDING, DON'T SET BUSY BIT @ZA15746
         SPACE 1
         LR    WRKEVEN,WRK0        GET ADDRESS OF CAT
         OI    CATFLA,CATBSY       SET CHANNEL BUSY SO SHOULDER
*                                  TAP WON'T BE DONE TO US
         DROP  WRKEVEN
         SPACE 1
         B     ITCH034             TRY NEXT PATH
         SPACE 3
ITCH050  NI    IRTFLB,FF-IRTCHBSY  RESET ALL CHANNELS BUSY
          NI     UCBFLA,FF-UCBCUB                              @YM8079
         ST    WRKA,IRTCHNL        SAVE CHANNEL LIST POINTER
         TM    ONE(WRKA),FF-F      SEL SUBCHNL SPECIFIED
         BNZ   ITCH065             YES - SET DEV ADDR
ITCH053  IC    WRK6,UCBUA          GET CONTROL UNIT AND DEVICE
*                                  ADDRESS
***                                                           ***
*              BRANCH TO THE DEVICE DEPENDENT SIO SUBROUTINE    *
***                                                           ***
         L     WRKODD,UCBEXTPT     LOAD EXTENTION PTR
         USING UCBCMEXT,WRKODD
         LH    WRKC,UCBCCWOF       POINT AT THE CHANNEL PROGRAM
         SLL   WRKC,THREE                                      @ZA16150
         A     WRKC,IOCIOSCP       *AREA FOR THIS UCB
         SLR   WRKEVEN,WRKEVEN
         IC    WRKEVEN,UCBDTI      GET INDEX TO DEVICE TABLE
         DROP  WRKODD
         L     WRKODD,DVTSIO(WRKEVEN)
*                                  GET ADDRESS OF SIO ROUTINE
         BALR  LNKR,WRKODD         GO TO SIO ROUTINE
         SPACE 3
***                                                           ***
*              THERE ARE 3 VECTOR RETURNS TO TEST CHANNEL       *
*              +0 = REQUEST STARTED, ENQUEUE NOT NEEDED         *
*              +4 = REQUEST STARTED, ENQUEUE NEEDED             *
*              +8 = REQUEST NOT STARTED, TRY NEXT PATH          *
***                                                           ***
ITCH059  B     ITCH090             GO EXIT - NO ENQUEUE        @ZA06063
         B     ITCH070             GO EXIT - ENQUEUE FIRST
*        B     ITCH060             TRY NEXT PATH
ITCH060  L     WRKA,IRTCHNL        RESTORE CHANNEL LIST ADDRESS
         B     ITCH034             TRY NEXT PATH
         SPACE 2
ITCH065  MVZ   UCBUA,ONE(WRKA)     MOVE IN CU IF ONE IN TBL
         B     ITCH053             GET ADDRESS TO START
         SPACE 5
***                                                           ***
*              VARY PROCESSOR TCH INSTRUCTION                   *
***                                                           ***
         ENTRY IECTCHMP
IECTCHMP DS    0H                  COMPATIBILITY LABEL
ETCH100  TCH   0(WRK6)             TEST CHANNEL
         BR    WRKEVEN             RETURN TO CALLER
         EJECT
***                                                           ***
*              EXIT FROM TEST CHANNEL                           *
***                                                           ***
ITCH070  BAL   LNKR,EFRUCBL1       GO FREE UCBLOCK
         SPACE 1
         L     IOQR,IRTIOQ         RESTORE IOQE ADDRESS
         SPACE 1
***                                                           ***
*              ENQUEUE REQUEST IF NECESSARY                     *
***                                                           ***
         TM    IOQFLA,IOQENQ       IS IOQE ENQUEUED?
         BO    ITCH080             YES - DON'T ENQUEUE IT AGAIN
         OI    IOQFLA,IOQLBSY+IOQPBSY    SET PHYSICAL BUSY     @YM5507
         SPACE 1
         L     WRK1,IRTLCHAD       SET FOR ENQ CALL            @YM01627
         BAL   LNKR,EQUEE2         NO - GO ENQUEUE REQUEST
         SPACE 1
***                                                           ***
*              IF ELIGIBLE, TRY TO HAVE OTHER CPU START REQUEST *
***                                                           ***
ITCH080  L     WRKC,IRTLCHAD       LOAD LCH ADDRESS            @YM01627
         TM    IOSOPT2,IOSHTP      IS IT ELIGIBLE SHOULDER TAP?
         BO    ITCH100             YES - ATTEMPT IT
         SPACE 1
***                                                           ***
*              DETERMINE WHICH VECTOR TO RETURN ON              *
***                                                           ***
ITCH090  L     LNKR,IRTTCHSV       RESTORE RETURN REGISTER
         TM    IRTFLB,IRTCHBSY     ARE ALL CHANNELS BUSY
         BO    NXTLCH(LNKR)        YES - RETURN TO TRY NEXT LCH
         B     NXTIOQ(LNKR)        NO - TRY NEXT ON QUEUE
         EJECT
***                                                           ***
*              DETERMINE IF SHOULDER TAP WOULD BE EFFECTIVE     *
***                                                           ***
ITCH100  LH    WRKA,PSACPUSA       GET PHYSICAL CPU ADDRESS
         SLR   WRKB,WRKB           SET TO CPU A
         CR    WRKA,WRKB           ARE WE IN CPU A?
         BNE   ITCH110             NO - WRKB OK
         SPACE 1
         LA    WRKB,ONE            YES IN A. POINT AT B
ITCH110  SLL   WRKB,TWO            MULTIPLY BY LENGTH OF VECTOR
         L     WRKA,CVTPTR         GET CVT POINTER
         USING CVTMAP,WRKA         INDICATE CVT ADDRESSABILITY
         SPACE 1
         L     WRKEVEN,CVTLCCAT    GET LCCA VECTOR TABLE ADDRESS
         L     WRKODD,CVTPCCAT     GET PCCA VECTOR TABLE ADDRESS
         DROP  WRKA
         SPACE 1
         L     WRKEVEN,0(WRKEVEN,WRKB)
*                                  GET LCCA OTHER CPU
         LTR   WRKEVEN,WRKEVEN     VALID
         BZ    ITCH090             NO - EXIT
         L     WRK1,0(WRKODD,WRKB)
*                                  GET PCCA OTHER CPU
         LTR   WRK1,WRK1           VALID
         BZ    ITCH090             NO - EXIT
         LA    WRKODD,PCCACAT-PCCA(WRK1)
*                                  POINT AT CAT OTHER CPU
         L     WRKA,LCHTCH         GET CHANNEL LIST POINTER
         SPACE 1
***                                                           ***
*              DETERMINE IF CHANNEL AVAILABLE OTHER CPU         *
         TM    IOSPATH,IOSGDP      GUAR. DEVICE PATH REQ?      @ZA03601
         BNO   ITCH115             NO,CONTINUE TEST CHAN AVAIL @ZA03601
         SPACE
         LH    WRK6,ZERO(WRKA)     GET THE PATH                @ZA03601
         B     ITCH145             AND BYPASS CHANNEL TESTS    @ZA03601
ITCH115  IC    WRK0,UCBCHM         GET CHANNEL MASK            @ZA03601
         LA    WRKC,X'80'               GET PRIMARY PATH BIT   @ZA03601
         CLI   PSACPUSA+1,ZERO          CPU0?                  @ZA03601
         BNE   ITCH120                  NO-SHIFT FOR ZERO      @ZA03601
         SRL   WRKC,TWO                 YES-SHIFT FOR ONE      @ZA03601
ITCH120  NR    WRK0,WRKC                LOGICAL PRIM.PATH AVAIL@ZA03601
         BZ    ITCH143             YES - GO TEST CHANNEL       @ZA05679
ITCH125  LA    WRKC,X'40'               GET SECONDARY PATH BIT @ZA03601
         IC    WRK0,UCBCHM              GET CHAN MASK          @ZA03601
         CLI   PSACPUSA+1,ZERO          CPU0?                  @ZA03601
         BNE   ITCH130                  NO-SHIFT FOR ZERO      @ZA03601
         SRL   WRKC,TWO                 YES-SHIFT FOR ONE      @ZA03601
ITCH130  NR    WRK0,WRKC                LOGICAL SEC. PATH      @ZA03601
         BNZ   ITCH090             NO- EXIT                    @ZA03601
ITCH140  EQU   *                                               @ZA05679
         LA    WRKA,NXTCHN(WRKA)        BUMP PATH POINTER      @ZA05679
ITCH143  EQU   *                                               @ZA05679
         LH    WRK6,ZERO(WRKA)          GET PATH               @ZA05679
         LTR   WRK6,WRK6                END OF PATH TBL        @ZA03601
         BM    ITCH090                  YES-EXIT               @ZA03601
         LR    WRKC,WRK6                LET'S IOSLATE CHAN     @ZA03601
         SRL   WRKC,EIGHT               BY SHIFTING            @ZA03601
         SLL   WRKC,CATELP2             MULTIPLY BY CAT ENTRY  @ZA03601
         ALR   WRKC,WRKODD              ADDR OF OTHER CPU CAT  @ZA03601
         TM    CATFLA-CAT(WRKC),CATBSY  CHAN BSY OTHER CPU     @ZA03601
         BO    ITCH125                  YES                    @ZA03601
         TM    CATFLG-CAT(WRKC),CATNOP+CATNGEN+CATNCPU         @ZA05670
*                                       CHAN OPER.ON OTHER CPU?@ZA03601
         BNZ   ITCH125                  NO                     @ZA03601
ITCH145  SRL   WRK6,EIGHT               GET CHAN NO.           @ZA03601
*************  HOOK - CHANNEL RECONFIGURATION HARDWARE  *******@Y30CQLF
* CRH OVERLAYS THIS INSTRUCTION WITH THE BRANCH AT IECVHK1B.   @Y30CQLF
*************                                           *******@Y30CQLF
IECVHK1A L     WRKC,IOCCTBL       POINT AT THE CHANNEL TABLE   @Y30CQLF
         TM    IOSOPT2,IOSIGP     OK TO SIGP?(SIGP BEFORE?)    @ZA18121
         BZ    ITCH090              NO           (YES)         @ZA18121
         SPACE 1                                               @Y30CQLF
         USING CHT,WRKC            INDICATE CHT ADDESSSABILITY
         SPACE 1
         SLL   WRK6,CHTELP2        COMPUTE OFFSET TO THE ENTRY
         L     WRK0,IRTCHMSK-LCCA(WRKEVEN) POINT AT OTHER CHANNEL MASK
         LH    WRKC,CHTMASK(WRK6)  LOAD THIS CHANNEL'S MASK
         SLL   WRKC,16             SHIFT TO HIGH HALF FOR MASK
         DROP  WRKC
         SPACE 1
         NI    IOSOPT2,FF-IOSIGP   MARK INELIGIBLE FOR SIGP    @ZA27026
ITCH158  LR    WRKODD,WRK0              COMPARE & SWAP THI     @ZA03601
         OR    WRKODD,WRKC         *CHANNEL'S INDICATOR
         CS    WRK0,WRKODD,IRTCHMSK-LCCA(WRKEVEN)
*                                  LOOP UNTIL IT IS SUCCESSFUL
         BNE   ITCH158                  TRY AGAIN              @ZA03601
         SPACE 1
         TM    IRTCMRST-LCCA(WRKEVEN),FF   IS IOS ACTIVE OTHER CPU?
         BO    ITCH090             YES - RETURN
         OI    IRTCMRST-LCCA(WRKEVEN),FF   SET IOS ACTIVE       @YM6900
         SPACE 1
***                                                           ***
*              SHOULDER TAP OTHER CPU                           *
***                                                           ***
         LR    WRKA,WRKEVEN        SAVE LCCA ADDRESS            YM01752
         RPSGNL     SIO,CPU=(1)
*****                                                           *****
*              PROCESS RETURN CODE.                                 *
*****                                                           *****
         LTR   WRKODD,WRKODD       TEST RETURN CODE             YM01752
         BZ    ITCH090             RETURN - DONT SET OTHER ACTV YM01752
*                                  SIGP DIDN'T GO,NON-ZERO R.C.@ZA03601
         OI    IOSOPT2,IOSIGP      SET ELIGIBLE FOR SIGP       @ZA18121
         NI    IRTCMRST-LCCA(WRKA),ZERO SET IOS IN-ACTIVE      @ZA10766
         B     ITCH090             RETURN
         SPACE 1                                               @Y30CQLF
*************  HOOK - CHANNEL RECONFIGURATION HARDWARE  *******@Y30CQLF
* CRH OVERLAYS THE INSTRUCTION AT IECVHK1A WITH THIS BRANCH.   @Y30CQLF
*************                                           *******@Y30CQLF
IECVHK1B B     ITCH300                 GO TO HOOK CODE         @Y30CQLF
*************                                           *******@Y30CQLF
         EJECT
***                                                           ***
*              THIS SUBROUTINE INSURES THE CORRECT CPU          *
***                                                           ***
ITCH160  LH    WRK6,ZERO(WRKA)     GET NEXT CHANNEL FROM LIST
         LTR   WRK6,WRK6           END OF LIST?
         BM    ITCH198             YES - TERMINATE
         SPACE 1
         CLC   IOSAFF,PSACPUSA+ONE CORRECT CPU?
         BNE   ITCH200             NO -  IS CORRECT CPU ALIVE?
         SPACE 1
         NI    IOSOPT2,FF-IOSHTP   CORRECT CPU - NO SHOULDER TAP
         LR    WRKEVEN,WRK6        COPY CHANNEL TO WORK REG
         N     WRKEVEN,CONF0030    ISOLATE CHANNEL NUMBER        M01051
         LH    WRK1,IOSPATH        GET REQUESTED PATH
         TM    ONE(WRKA),FF-F      SELECTOR SUBCH                M01051
         BZ    ITCH164             NO AND OFF CU ALSO            M01051
         N     WRK1,CONF0030       AND OFF DEV ONLY              M01051
         B     ITCH166             GO COMPARE                    M01051
ITCH164  N     WRK1,CONF0015       ISOLATE CHANNEL NUMBER        M01051
ITCH166  CR    WRKEVEN,WRK1        CORRECT CHANNEL?              M01051
         BE    ITCH170             YES - NOW TEST RESERVED
         SPACE 1
         NI    IRTFLB,FF-IRTCHBSY  NO - RESET ALL CHANNELS BUSY
         LA    WRKA,NXTCHN(WRKA)   POINT AT NEXT CHANNEL IN LIST
         B     ITCH160             TRY NEXT PATH
         SPACE 3
ITCH170  TM    UCBFLB,UCBRESVH     IS DEVICE RESERVED?
         BZ    ITCH195             NO - CONTINUE                YM01677
         BAL   LNKR,ITCH210        YES - TEST FOR CORRECT PATH
         SPACE 1
         B     ITCH195             CORRECT CPU AND PATH - START YM01677
         B     ITCH180             WRONG PATH - TERMINATE
*        B     ITCH180             WRONG CPU - TERMINATE
         SPACE 3
ITCH180  MVI   IOSCOD,IOSGDPRD     GDP RESERVED WRONG PATH
ITCH190  BAL   LNKR,ESCHDIO1       SCHEDULE THE SRB
         SPACE 1
         L     LNKR,IRTTCHSV       RESTORE RETURN REGISTER
         BR    LNKR                RETURN +0
         SPACE 3
ITCH195  L     WRK1,PSAPCCAV       LOAD PCCA ADDR               YM01677
         SRL   WRKEVEN,EIGHT       ISOLATE CHANNEL NUMBER      @ZA31965
         SLL   WRKEVEN,CATELP2     CALCULATE CAT DISPLACEMENT  @ZA31965
         LA    WRK0,PCCACAT(WRKEVEN) LOAD CAT ADDRESS FOR RET   YM01677
         LR    WRKEVEN,WRK0        CAT ADDRESS TO WRKEVEN      @ZA30350
         USING CAT,WRKEVEN                                     @ZA30350
         TM    CATFLG,CATDSABL     CHANNEL DISABLED            @ZA30350
         BNO   ITCH040             NO-START PATH               @ZA30350
         DROP  WRKEVEN                                         @ZA30350
         DROP  WRK1
         SPACE 3
ITCH198  MVI   IOSCOD,IOSGDPCC     REQUESTED PATH NOT FOUND
         B     ITCH190             GO TERMINATE REQUEST
         SPACE 3
***                                                           ***
*              TERMINATE REQUEST FOR I/O RESTART                *
***                                                           ***
************* CHANNEL RECONFIGURATION HARDWARE SUPPORT ********@Y30CQLF
ITCH199  L     WRKA,CVTPTR             GET ADDRESS OF CVT      @Y30CQLF
         USING CVTMAP,WRKA             ESTABLISH ADDRESSABILITY@Y30CQLF
         L     WRKA,CVTCRCA            GET ADDRESS OF CRCA     @Y30CQLF
         LTR   WRKA,WRKA               CRH ACTIVE ?            @Y30CQLF
         BZ    ITCH199A            NO, SEE IF DRIVER IS EXCP   @ZA01911
         NI    UCBFLB,FF-UCBIORST  CRH ACTIVE, RESET RESTART   @ZM34510
*                                  FLAG
         B     ITCH005              GO TRY AND RESTART REQUEST @ZA04573
         SPACE
ITCH199A CLI   IOSDVRID,IOSXCPID   IS DRIVER EXCP?             @ZA01911
         BE    ITCH199B            YES, SET UNIQUE CODE FOR    @ZA01911
*                                  DOUBLE PASS THRU APPENDAGE
         MVI   IOSCOD,IOSMIHCA     SET CODE FOR I/O RESTART    @ZA01911
*                                  INTERCEPT CONDITION
         B     ITCH190             AND TERMINATE THE REQUEST   @ZA01911
         SPACE
ITCH199B MVI   IOSCOD,IOSMIHC      INSURE TWO PASSES THRU ABE  @ZA01911
         MVC   IOSTATUS(TWO),CONB0002 MOVE SIMULATED STATUS FOR
*                                  CHANNEL CONTROL CHK & INTER-
*                                  FACE CONTROL CHECK
         L     WRKB,IOSERP         GET EWA PTR FROM IOSB       @ZA05981
         LTR   WRKB,WRKB           IS THERE AN EWA             @ZA05981
         BNZ   ITCH199G            YES - GO INITIALIZE IT      @ZA05981
         BAL   LNKR,ESMINTG3       INTERFACER WITH SMGR TO GET @ZA01911
*                                  A 160 BYTE BLK/EWA
         ST    WRKB,IOSERP         SAVE EWA ADDRESS IN IOSB    @ZA01911
ITCH199G EQU   *                                               @ZA05981
         LH    WRKA,IOSUCB+2       GET UCBOB ADDRESS           @ZA01911
         STH   WRKA,EWAUCB-EWA+1(WRKB) SAVE UCBOB ADDR IN EWA  @ZA01911
         OI    EWARGFG1-EWA(WRKB),EWANORTY SET NO-RETRY FLAG   @ZA01911
         OI    EWARGFG2-EWA(WRKB),EWACCPU INDICATE CPU ERROR   @ZA01911
         IC    WRKA,UCBCPU         SAVE CPUID, OF THE LAST     @ZA01911
         STC   WRKA,EWACPU-EWA(WRKB) I/O THAT WAS ATTEMPTED    @ZA01911
         LH    WRKA,UCBCHAN        SAVE UNIT ADDRESS OF THE
         STH   WRKA,EWACHA-EWA(WRKB) LAST I/O THAT WAS ATTEMPTD@ZA01911
         OI    EWAXCSW1-EWA(WRKB),EWACSQV SET SEQ.CODE IS INVAL@ZA01911
         OI    EWAXCSW2-EWA(WRKB),EWACSEQ SET CHAN DEP SEQ CODE@ZA01911
         B     ITCH190             SCHEDULE ASYN PROCESSING FOR@ZA01911
*                                  POST STATUS
*              TEST IF REQUESTED CPU IS ON-LINE                 *
***                                                           ***
ITCH200  NI    IRTFLB,FF-IRTCHBSY  RESET ALL CHANNELS BUSY
         L     WRKA,CVTPTR         POINT AT CVT
         USING CVTMAP,WRKA         INDICATE CVT ADDRESSABILITY
         SPACE 1
         SLR   WRKODD,WRKODD       ZERO REGISTER FOR USING
         IC    WRKODD,IOSAFF       GET CORRECT CPU NUMBER
         SLL   WRKODD,2            MULTIPLY TO INDEX INTO TABLE
         A     WRKODD,CVTPCCAT     POINT AT THE PCCA VECTOR TABLE
         L     WRKODD,ZERO(WRKODD) POINT AT CORRECT PCCA
         LTR   WRKODD,WRKODD       IS PCCA THERE
         BZ    ITCH198             NO - TERMINATE IN ERROR
************* CHANNEL RECONFIGURATION HARDWARE SUPPORT ********@Y30CQLF
         L     WRKEVEN,CVTCRCA     GET ADDRESS OF CRCA         @Y30CQLF
         LTR   WRKEVEN,WRKEVEN     CRH ACTIVE ?                @Y30CQLF
         BNZ   ITCH070                 YES,GO TRY SHOULDER TAP @Y30CQLF
***************************************************************@Y30CQLF
         L     WRKA,CVTCSD         POINT AT SYSTEM DATA AREA
         DROP  WRKA
         USING CSD,WRKA            INDICATE CSD ADDRESSABILITY
         SPACE 1
         LH    WRKEVEN,CSDCPUAL    GET CPU ALIVE MASK
         DROP  WRKA
         SPACE 1
         LH    WRKODD,PCCACAFM-PCCA(WRKODD)
*                                  GET MASK FOR CORRECT CPU
         NR    WRKEVEN,WRKODD      TEST IF CPU ALIVE
         BNZ   ITCH070             YES - EXIT FROM ETCH1
         SPACE 1
***                                                           ***
*              REQUESTED CPU IS OFF-LINE                        *
***                                                           ***
         MVI   IOSCOD,IOSGDPCO     GDP - CPU OFFLINE
         B     ITCH190             GO TERMINATE REQUEST
         EJECT
***                                                           ***
*              INSURE THE RESERVED PATH TO A SHARED DASD        *
***                                                           ***
ITCH210  CLC   PSACPUSA+ONE(ONE),UCBCPU IS IT CORRECT CPU?
         BE    ITCH230             SAME CPU - CONTINUE
ITCH220  NI    IRTFLB,FF-IRTCHBSY  RESET ALL CHANNELS BUSY
         B     WCPUXPTH(LNKR)      RETURN - WRONG CPU
         SPACE 3
***                                                           ***
*              CORRECT CPU - TEST PATH                          *
***                                                           ***
ITCH230  TM    UCBFLB,UCBCRHRV         RESERVED ON DEAD CPU    @Y30CQLF
         BO    ITCH220                 YES,GO SHOULDER TAP     @Y30CQLF
         LR    WRKODD,WRK6         GET ATTEMPTED PATH
         N     WRKODD,CONF0015     ISOLATE CHANNEL ADDRESS
         LH    WRK0,UCBCHAN        GET LAST PATH STARTED
         N     WRK0,CONF0015       ISOLATE CHANNEL ADDRESS
         CR    WRKODD,WRK0         ARE THEY EQUAL?
         BE    RCPURPTH(LNKR)      YES - RETURN OK
         NI    IRTFLB,FF-IRTCHBSY  NO - RESET ALL CHANNELS BUSY
         B     RCPUWPTH(LNKR)      RETURN - WRONG PATH
         EJECT
***                                                           ***
*              INTERCEPT CODE                                   *
***                                                           ***
ITCH240  TM    UCBFLC,UCBWAA       IS EWA PRESENT              @ZA12388
         BZ    ITCH270             NO - BRANCH                 @ZA12388
         SPACE 1
         L     WRKC,UCBIOQ         GET ADDRESS OF EWA          @ZA12388
         MVI   IOSCOD,IOSFINTC     SET INTERCEPT CODE
         USING EWA,WRKC            SINDICATE EWA ADDRESSABILITY
         SPACE 1
         MVC   IOSCSW,EWASCSW      MOVE CSW TO IOSB
         MVC   IOSSNS,EWASNS       MOVE SENSE TO IOSB
         TM    EWAFLG1,EWABDSNS    DID SENSE FAIL?
         BZ    ITCH250             NO - CONTINUE
         SPACE 1
         MVC   IOSSNS,CONH0005     SIMULATE EQUIP. CHECK
         SPACE 1
***                                                           ***
*              TEST IF REQUEST ALREADY HAS A WORK AREA          *
***                                                           ***
ITCH250  L     WRKA,IOSERP         GET CURRENT WORK AREA
         LTR   WRKA,WRKA           TEST FOR ONE
         BZ    ITCH260             BRANCH IF NONE
         SPACE 1
         OC    EWAFLG1-EWA(ONE,WRKA),EWAFLG1 COPY FLAG1 OVER
         MVC   EWACHA-EWA(TWO,WRKA),EWACHA COPY CHANNEL ADDRESS
         MVC   EWACPU-EWA(ONE,WRKA),EWACPU COPY CPU ADDRESS OVER
         DROP  WRKC
         SPACE 1
         L     WRK1,UCBEXTPT       LOAD EXTENTION POINTER
         USING UCBCMEXT,WRK1
         IC    WRK1,UCBSNSCT       GET SENSE BYTE COUNT
         BCTR  WRK1,0              SUBTRACT ONE
         EX    WRK1,CONH0006       COPY SENSE BYTES OVER
         LR    WRK1,WRKC           PREPARE TO FREE WORK AREA
         BAL   LNKR,ESMINTF3       GO FREE IT
         SPACE 1
         LR    WRKC,WRKA           USE CURRENT WORK AREA
         B     ITCH265             GO RESET FLAGS
         SPACE 1
ITCH260  ST    WRKC,IOSERP         STORE ERP WORK AREA ADDRESS
         SH    WRKC,CONH0004       BACK UP 8 IN FRONT OF EWA
         MVC   ZERO(TWO,WRKC),IOSASID SET ASID FOR STOR. MGMT
         SPACE 1
ITCH265  NI    UCBFLC,FF-UCBITF-UCBWAA RESET FLAGS
         BAL   LNKR,ESCHDIO1       GO SCHEDULE SRB
         L     LNKR,IRTTCHSV       RESTORE RETURN REGISTER
         BR    LNKR                RETURN +0
         SPACE 1
ITCH270  NI    UCBFLC,FF-UCBITF    RESET INTERCEPT FLAG        @ZA12388
         B     ITCH003             CONTINUE WITH REQUEST       @ZA12388
         EJECT                                                 @Y30CQLF
*************  HOOK - CHANNEL RECONFIGURATION HARDWARE  *******@Y30CQLF
* IF THE CRH FUNCTION IS ACTIVE THE CRH TEST CHANNEL HOOK      @Y30CQLF
* ROUTINE IS CALLED TO ATTEMPT TO START AN I/O REQUEST.        @Y30CQLF
*************                                           *******@Y30CQLF
ITCH300  L     WRKC,IOCCTBL       EXECUTE OVERLAID INSTRUCTION @Y30CQLF
         L     WRKA,CVTPTR        GET ADDRESS OF CVT           @ZA34207
         USING CVTMAP,WRKA        ESTABLISH ADDRESSABILITY     @ZA34207
         L     WRKA,CVTCRCA       GET ADDRESS OF CRCA          @ZA34207
         LTR   WRKA,WRKA          CRH ACTIVE ?                 @ZA34207
         BZ    IECVHK1A+FOUR      CRH NOT ACTIVE - RETURN      @Y30CQLF
         LR    WRK1,WRKA           SET WRK1 FOR HOOK ROUTINE   @ZA34207
         USING CRCA,WRK1          ESTABLISH ADDRESSABILITY     @Y30CQLF
         L     WRKODD,CRCACRH1    GET ADDRESS OF HOOK ROUTINE  @Y30CQLF
         BALR  WRKEVEN,WRKODD     CALL HOOK ROUTINE            @Y30CQLF
         B     ITCH090            EXIT FROM TEST CHANNEL ROUTIN@Y30CQLF
         B     ITCH070             HANDLE +4 RETURN            @ZM30442
***                                                          ***
*              DROP ALL BUT BASE ADDRESSABILITY                *
***                                                          ***
         DROP  WRK1,IOSBR,LCCAR,UCBR,IOQR,WRKA                 @ZA34207
         TITLE 'IECIOSCN - IOS - SIO SUBROUTINE'
*********ESIO1***************************************************
*                                                               *
*                                                               *
* FUNCTION                                                      *
*    1. SETS UP THE CAW                                         *
*    2. ISSUES THE SIO INSTRUCTION                              *
*    3. TRACES THE RESULTS                                      *
*    4. STORES THE RESULTS IN THE IOSB                          *
*    5. SETS THE UCB RESERVE FLAG                               *
*    6. UPDATES THE MF/1 SIO COUNTS ON CC=0                     *
*                                                               *
* ENTRY POINTS                                                  *
*         ESIO1 - EXIT TO POST SIO (SIOF)                       *
*         ESIO2 - RETURN TO CALLER (SIOF)                       *
*         ESIO099 - EXIT TO POST SIO (SIO)                      *
*         ESIO100 - RETURN TO CALLER (SIO)                      *
*                                                               *
* INPUT                                                         *
*    REGISTERS                                                  *
*              WRK0    =CAT ADDRESS  (PASSED THRU DEV DEP RTN ) *
*              IOSBR   =IOSB ADDRESS                            *
*              LCCAR   =LCCA ADDRESS (INCLUDING IRT)            *
*              LNKR    =RETURN ADDRESS                          *
*              BASEA   =BASE ADDRESS A                          *
*              WRK6    =DEVICE ADDRESS                          *
*              UCBR    =UCB ADDRESS                             *
*              BASEB   =BASE ADDRESS B                          *
*              BASEC   =BASE ADDRESS C                          *
*              IOQR    =IOQE ADDRESS                            *
*              WRKC    =ADDRESS OF CHANNEL PROGRAM              *
*                                                               *
*    FIELDS                                                     *
*              CATSIOCT IOSCKEY  UCBFLC   IRTIOQ   UCBMFCNT     *
*                                                               *
*    LOCKS                                                      *
*              UCBLOCK                                          *
*                                                               *
* OUTPUT                                                        *
*    REGISTERS                                                  *
*              WRK1    =DESTROYED                               *
*              WRKA    =DESTROYED                               *
*              WRKC    =SIO/SIOF CONDITION CODE                @ZA10149
*              WRKEVEN =DESTROYED                               *
*                                                               *
*    FIELDS                                                     *
*              CATSIOCT IOSCC    UCBCHA   UCBCPU   UCBFLA       *
*              UCBFLC   UCBIOQ   UCBMFCNT                       *
*                                                               *
*    LOCKS                                                      *
*              UCBLOCK                                          *
*                                                               *
* EXTERNAL REFERENCES                                           *
*    CVTTRACE                                                   *
*                                                               *
* EXITS                                                         *
*    +0 =SIO ISSUED                                             *
*                                                               *
* TABLES/WORKAREAS                                              *
*    CAT                                                        *
*    CVT                                                        *
*    FLC                                                        *
*    IOQ                                                        *
*    IOSB                                                       *
*    UCB                                                        *
*                                                               *
*****************************************************************
         EJECT
***                                                           ***
*              INDICATE ALL BUT BASE ADDRESSABILITY             *
***                                                           ***
         USING IOSB,IOSBR          INDICATE IOSB ADDRESSABILITY
         USING LCCA,LCCAR          INDICATE LCCA ADDRESSABILITY
         USING UCB,UCBR            INDICATE UCB  ADDRESSABILITY
         USING IOQ,IOQR            INDICATE IOQE ADDRESSABILITY
         SPACE 1
         ENTRY IECHK1              MAKE ENTRY POINT EXTERNAL
         ENTRY IECHK8              MAKE ENTRY POINT EXTERNAL
         SPACE 1
*
         CNOP  2,4
*                                  FORCE ESIO3 TO WORD BDY
***                                                           ***
*              SET UP THE CAW                                   *
***                                                           ***
ESIO1    LA    LNKR,EPOSTIO1       SET EXIT FOR POST SIO
ESIO2    ST    WRKC,FLCCAW         SET THE CAW
         STCM  WRKC,SEVEN,IOSCSWCA SAVE CAW CONTENTS
         MVZ   FLCCAW(ONE),IOSCKEY SET THE CHAN PROG PROTECT KEY
         SPACE 1
***                                                           ***
*              ISSUE THE SIOF INSTRUCTION                        *
***                                                           ***
         SIOF  ZERO(WRK6)          START THE CHANNEL PROGRAM
         SPACE 1
***                                                           ***
*              THE INSTRUCTION FOLLOWING THE SIO MUST BE        *
*              LABELED 'IECHK1' FOR DSS.                        *
*              SAVE OFF THE SIO CONDITION CODE                  *
***                                                           ***
IECHK1   BALR  WRKC,0              SET THE CONDITION CODE
         SPACE 1
*************  HOOK - CHANNEL RECONFIGURATION HARDWARE  *******@Y30CQLF
* CRH OVERLAYS THIS INSTRUCTION WITH THE BRANCH AT IECVHK2B.   @Y30CQLF
*************                                           *******@Y30CQLF
IECVHK2A STH   WRK6,UCBCHAN       SET LAST PATH STARTED        @Y30CQLF
         SPACE 1
         SRL   WRKC,TWENTY4        SET IN HI-ORDER BYTE
         STC   WRKC,IOSCC          STORE CONDITION CODE IN IOSB
         SPACE 1
***                                                           ***
*              FILL IN UCB INFO ABOUT THIS SIO                  *
***                                                           ***
         ST    IOQR,UCBIOQ         SET LAST IOQE STARTED
         MVC   UCBCPU,PSACPUSA+ONE SET LAST CPU STARTED
         SPACE 1
***                                                           ***
*              'HOOK' THE SIO FOR GTF                           *
***                                                           ***
         HOOK  EID=IECSIO
         SPACE 1
***                                                           ***
*              SET UCB RESERVE/RELEASE INDICATOR IF NECESSARY   *
***                                                           ***
         BC    4+2+1,ESIO3         IF SIO FAILED, DO NOT CHANGE
         SPACE 1
         TM    IOQFLB,IOQRESV      WAS CCW A RESERVE?
         BZ    ISIO010             NO, CHECK FOR A RELEASE
         SPACE 1
         OI    UCBFLB,UCBRESVH     SHOW DEVICE RESERVED
         OI    UCBFL4,UCBRESVP     SHOW RESERVE IS PENDING     @ZA12415
ISIO010  TM    IOQFLB,IOQRLSE      WAS CCW A RELEASE?
         BZ    ESIO3               NO, CLEAR RESERVE/RELEASE FLAG
         SPACE 1
         NI    UCBFLB,FF-UCBRESVH  CLEAR UCB RESERVED FLAG
         NI    UCBFL4,FF-UCBRESVP  CLEAR PENDING RESERVE FLAG  @ZA12415
         SPACE 1
***                                                           ***
*              SET IOQR AND CONDITION CODE AND EXIT             *
***                                                           ***
ESIO3    EQU   *                   TRACE / MF-1 HOOK ADDRESS
         B     ISIO050             ASSEMBLED AS TRACE ACTIVE
*                                  RESET AFTER IPL
         SPACE 1
ISIO020  SLL   WRKC,TWENTY4        SHIFT BACK
*              RESET UCB UNSOLICITED DEVICE END INDICATOR
         NI    UCBFLC,FF-UCBUDE    CLEAR UCB FLAG               YM01243
         SPM   WRKC                SET COND CODE INTO PSW
         BR    LNKR                RETURN TO CALLER
         SPACE 1
***                                                           ***
*              UPDATE THE MF/1 SIO COUNTERS                     *
***                                                           ***
ESIO4    B     ISIO030             INSTR. TO ACTIVATE MF/1
ISIO41   L     IOQR,IRTIOQ         INSTR. TO DEACTIVATE MF/1   @ZA03249
ISIO42   B      ISIO050            DEACTIVATE MF/1, TRACE ON   @ZA03249
         SPACE 1
*************  HOOK - CHANNEL RECONFIGURATION HARDWARE  *******@Y30CQLF
* CRH OVERLAYS THE INSTRUCTION AT IECVHK2A WITH THIS BRANCH.   @Y30CQLF
*************                                           *******@Y30CQLF
IECVHK2B B     ISIO0200           GO TO HOOK CODE              @Y30CQLF
***************************************************************@Y30CQLF
         SPACE 1
ISIO030  TM    IOSCC,IOSCC3        TEST SIO CONDITION CODE
         BNZ   ISIO040             CC NE 0, NO COUNTS
         LR    WRKA,WRK0           GET CAT ADDRESS
         USING CAT,WRKA            INDICATE CAT ADDRESSABILITY
         SPACE 1
         LH    WRKEVEN,CATSIOCT    GET CURRENT CHANNEL COUNT
         LA    WRKEVEN,ONE(WRKEVEN) INCREMENT COUNT
         STH   WRKEVEN,CATSIOCT    STORE UPDATED COUNT
         DROP  WRKA
         L     WRKA,UCBEXTPT       LOAD EXTENTION POINTER
         USING UCBCMEXT,WRKA
         LH    WRKEVEN,UCBMFCNT    GET CURRENT UCB COUNT
         LA    WRKEVEN,ONE(WRKEVEN) INCREMENT COUNT
         STH   WRKEVEN,UCBMFCNT    STORE UPDATED COUNT
ISIO040  L      WRKB,CVTPTR        GET ADDRESS OF CVT          @ZA03249
         USING  CVTMAP,WRKB        INDICATE CVT ADDRESSABILITY
         CLI    CVTTRACE+1,XFA     CHECK IF TRACE ON           @ZA03249
         BE     ISIO049            TRACE ON -- GO PROCESS      @ZA03249
         L     IOQR,IRTIOQ         PICK UP ACTIVE IOQE
         B     ISIO020             RETURN TO MAIN FLOW
ISIO049  MVC    ISIO41(FOUR),ISIO42 ALLOW TRACE WHEN MF/1 OFF  @ZA03249
         SPACE 1
***                                                           ***
*              TRACE THE SIO                                    *
*              NOTE : LIKE MF/1, SIO TRACE CAN BE DEACTIVATED   *
*              BY USING THE INSTRUCTION FOLLOWING 'ESIO4'       *
*              SIO TRACE IS ONLY ACTIVE DURING THE IPL SEQUENCE *
*              AND THE INSTRUCTION AT 'ESIO3' IS REPLACED AS    *
*              SOON AS THE IPL SEQUENCE IS COMPLETE. MF/1 TRACE *
*              IS THE ONLY TRACE SUPPORTED DURING NORMAL SYSTEM *
*              OPERATION.                                       *
***                                                           ***
ISIO050  L     WRK1,IOSSRB         SET SRB ADDRESS TO REG 1
         L     WRKA,CONF0017       GET ADDRESS OF SIO TRACE
         L     WRKB,CVTPTR         GET ADDRESS OF CVT
         SPACE 1
         BAL   WRKB,CVTTRACE       GO OUT TO TRACE
         SPACE 1
         IC    WRKC,IOSCC          RE-INSERT SIO COND CODE
         L     IOQR,IRTIOQ         PICK UP ACTIVE IOQ
         B     ISIO020             RETURN TO MAIN FLOW
         DROP  WRKB                DROP CVT ADDRESSABILITY
         SPACE 3
**********
*        START I/O INSTRUCTION FOR DEVICES WHICH SHOULD NOT
*        USE THE SIOF INSTRUCTION. (CURRENTLY SHARED DA IS
*        THE ONLY CLASS OF DEVICES USING THE SIO INSTRUCTION.)
*        AFTER STARTING THE I/O CONTROL IS TRANSFERED TO IECHK1
*        FOR COMMON PROCESSING.
*        NOTE: THIS ROUTINE IS NOW ALSO USED FOR THE SET MODE  @ZA04849
*        COMMAND ON READ/WRITE TAU                             @ZA04849
**********
         SPACE 1
ESIO099  LA    LNKR,EPOSTIO1       GET ADDR FOR POST SIO RETURN
ESIO100  ST    WRKC,FLCCAW         SET CAW
         MVZ   FLCCAW(ONE),IOSCKEY SET CALLERS PROT KEY
***                                                           ***
*              ISSUE SIO INSTRUCTION                            *
***                                                           ***
         SIO   ZERO(WRK6)          START THE I/O OP
IECHK8   B     IECHK1              GO TO COMMON PROCESSING
         SPACE 3
*************  HOOK - CHANNEL RECONFIGURATION HARDWARE  *******@Y30CQLF
* IF THE CRH FUNCTION IS ACTIVE THE CRH SIO HOOK ROUTINE IS    @Y30CQLF
* CALLED TO UPDATE THE UCB.                                    @Y30CQLF
*************                                           *******@Y30CQLF
ISIO0200 STH   WRK6,UCBCHAN       EXECUTE OVERLAID INSTRUCTION @Y30CQLF
         L     WRK1,CVTPTR        GET ADDRESS OF CVT           @Y30ZQLF
         USING CVTMAP,WRK1        ESTABLISH ADDRESSABILITY     @Y30CQLF
         L     WRK1,CVTCRCA       GET ADDRESS OF CRCA          @Y30CQLF
         LTR   WRK1,WRK1          CRH ACTIVE ?                 @Y30CQLF
         BZ    ISIO0210           CRH NOT ACTIVE - RESTORE CC  @Y30CQLF
         USING CRCA,WRK1          ESTABLISH ADDRESSABILITY     @Y30CQLF
         L     WRKODD,CRCACRH2    GET ADDRESS OF HOOK ROUTINE  @Y30CQLF
         BALR  WRKEVEN,WRKODD     CALL HOOK ROUTINE            @Y30CQLF
ISIO0210 SPM   WRKC                    RESTORE CONDITION CODE  @Y30CQLF
         B     IECVHK2A+FOUR      RETURN TO MAINLINE           @Y30CQLF
         DROP  WRK1                                            @Y30CQLF
***                                                           ***
*              DROP ALL BUT BASE ADDRESSABILITY                 *
***                                                           ***
         DROP  IOSBR,LCCAR,UCBR,WRKA
         TITLE 'IECIOSCN - IOS - POST SIO SUBROUTINE'
*********EPOSTIO1************************************************
*                                                               *
* FUNCTION                                                      *
*    INSPECTS THE STATUS OF AN SIO OPERATION                    *
*     A. CC=0                                                   *
*        1. MARKS THE CHANNEL BUSY IN THE CAT IF A SELECTOR     *
*           CHANNEL                                             *
*        2. SETS UCB FLAGS                                      *
*        3. FREES THE UCBLOCK                                   *
*        4. DEQUEUES REQUEST FROM THE LCH                       *
*                                                               *
*     B. CC=1                                                   *
*        1. UPDATES SYSTEM RESOURCE MANAGER COUNT               *
*        2. IF CHANNEL ERRORS OR STATUS STORED, LETS SLIH       *
*           HANDLE                                              *
*        3. DETERMINES IF ATTENTION OCCURRED                    *
*        4. ATTEMPTS RETRY IF POSSIBLE                          *
*                                                               *
*     C. CC=2                                                   *
*        1. MARKS CHANNEL BUSY IN THE CAT                       *
*                                                               *
*     D. CC=3                                                   *
*        1. INVOKES WTO IF NECESSARY                            *
*        2. ATTEMPTS RETRY IF POSSIBLE                          *
*                                                               *
* ENTRY POINTS                                                  *
*         EPOSTIO1  NORMAL ENTRY POINT                          *
*         EPOSTIO2  ENTRY TO CC=0 PROCESSING                    *
*         EPOSTIO3  ENTRY TO CC=1 PROCESSING                    *
*         EPOSTIO4  ENTRY TO CC=1 PROCESSING W/O SETTING THE    *
*                   CSW                                         *
*                                                               *
* INPUT                                                         *
*    REGISTERS                                                  *
*              WRK0    =CAT ADDRESS                             *
*              IOSBR   =IOSB ADDRESS                            *
*              LCCAR   =LCCA ADDRESS                            *
*              BASEA   =BASE ADDRESS A                          *
*              WRK6    =UNIT ADDRESS                            *
*              UCBR    =UCB ADDRESS                             *
*              BASEB   =BASE ADDRESS B                          *
*              BASEC   =BASE ADDRESS C                          *
*              IOQR    =IOQE ADDRESS                            *
*              SAVR    =LCCA SAVE AREA                          *
*                                                               *
*    FIELDS                                                     *
*              CHTMASK  CHTTYPE  FLCCAW   FLCCSW   IOQPTH       *
*              IOSPATH  IOSPKEY  IRTDDSV  IRTIOQ   UCBCHM       *
*              UCBFL5   UCBPMSK                                 *
*                                                               *
*    LOCKS                                                      *
*              UCBLOCK
*              LCHLOCK MAY BE HELD                              *
*                                                               *
* OUTPUT                                                        *
*    REGISTERS                                                  *
*              WRK0    =DESTROYED                               *
*              LNKR    =DESTROYED                               *
*              WRK6    =DESTROYED                               *
*              WRK9    =DESTROYED                               *
*              WRKA    =DESTROYED                               *
*              IOQR    =ACTIVE IOQE                             *
*              WRKC    =DESTROYED                               *
*              WRKEVEN =DESTROYED                               *
*              WRKODD  =DESTROYED                               *
*                                                               *
*    FIELDS                                                     *
*              CATFLG   IOQFLA   IOSCOD   IOSFLA   IOSOPT       *
*              IOSPROC  IOSSRB   IRTCHMSK SRBPARM  SRBPTCB      *
*              UCBFLA   UCBFLC   UCBPMSK                        *
*                                                               *
*    LOCKS                                                      *
*              UCBLOCK MAY BE FREED                             *
*              LCHLOCK UNCHANGED                                *
* EXTERNAL REFERENCES                                           *
*    NONE                                                       *
*                                                               *
* EXITS                                                         *
*    +0 - NO ENQUEUE, NO SHOULDER TAP                           *
*    +4 - ENQUEUE, NO SHOULDER TAP                              *
*    +8 - ENQUEUE, SHOULDER TAP                                 *
*                                                               *
* TABLES/WORKAREAS                                              *
*    CAT                                                        *
*    CHT                                                        *
*    IOCOM                                                      *
*    IOQ                                                        *
*    IOSB                                                       *
*    IRT                                                        *
*    PSA                                                        *
*    SRB                                                        *
*    UCB                                                        *
*                                                               *
*****************************************************************
         TITLE  'IECIOSCN - IOS - POST SIO SUBROUTINE  CC=0'
***                                                           ***
