         TITLE 'IECVPURG - RESIDENT PURGE'
***************************************************************
*                                                             *
* MODULE NAME = IECVPURG                                      *
*                                                             *
* DESCRIPTIVE NAME = RESIDENT PURGE                           *
*                                                             *
* COPYRIGHT NAME = ''NONE''                                   *
*                                                             *
* STATUS = OS/VS2 RELEASE 2, CHANGE LEVEL 00                  *
*                                                             *
* FUNCTION = RESIDENT PURGE CONSISTS OF THREE FUNCTIONS       *
*    1. DECREMENT PURGE QUIESCE COUNT                         *
*    2. SIRB CLEAN-UP TO FREE ERP WORK AREA                   *
*    3. RTM PURGDQ TO CHAIN SRB ON SRB CHAIN                  *
*                                                             *
* NOTES =                                                     *
*    DEPENDENCIES = EBCDIC                                    *
*    RESTRICTIONS = NONE                                      *
*    REGISTER CONVENTIONS = STANDARD LINKAGE                  *
*    PATCH LABEL = PURGPTCH                                   *
*                                                             *
* MODULE TYPE = MODULE                                        *
*    PROCESSOR = ASSEMBLER                                    *
*    MODULE SIZE = 92 HEX BYTES                               *
*    ATTRIBUTES = RESIDENT, REENTRANT, KEY0, SUPERVISOR STATE *
*                                                             *
* ENTRY POINT = IECVQCNT                                      *
* AT LOC 0 - DECREMENT PURGE QUIESCE COUNT                    *
* AT LOC 4 - SIRB CLEAN-UP TO FREE ERP WORK AREA              *
* AT LOC A - RTM PURGDQ TO CHAIN SRB ON SRB CHAIN             *
*    PURPOSE = ABOVE THREE FUNCTIONS                          *
*    LINKAGE = BRANCH REGISTER 15,OR LPSW                     *
*                                                             *
*    INPUT =                                                  *
*    1. REG 1 MUST CONTAIN IPIB ADDRESS FOR QUIESCE DECREMENT *
*       REG 0 IF ZERO, INDICATES LOCAL LOCK HELD              *
*             IF NON-ZERO, INDICATES LOCAL LOCK NOT HELD      *
*       REG 14 MUST CONTAIN RETURN ADDRESS                    *
*    2. REG 14 MUST CONTAIN RETURN ADDRESS FOR SIRB CLEAN-UP  *
*    3. REG 1 MUST CONTAIN SRB ADDRESS FOR RTM PURGDQ         *
*                                                             *
*    OUTPUT =                                                 *
*    1. NONE FOR IPIB QUIESCE COUNT DECREMENT                 *
*       NOTE:  ONLY REGS 0, 10, 11, 12, 13, AND 15 MAY BE     *
*              DESTROYED ACROSS THIS INTERFACE                *
*    2. NONE FOR SIRB CLEAN-UP                                *
*    3. NONE FOR RTM PURGDQ                                   *
*                                                             *
*    EXITS-NORMAL = RETURN TO CALLER VIA REG 14               *
*                                                             *
*    EXITS-ERROR = NONE                                       *
*                                                             *
         EJECT
* EXTERNAL REFERENCES =                                       *
*    ROUTINES =                                               *
*       IEA0PT01 (POST)                                       *
*       IECVSMGR (I/O STORAGE MANAGER)                        *
*       SETLOCK                                               *
*    DATA AREA = NONE                                         *
*    CONTROL BLOCKS =                                         *
*       IECDIPIB                                              *
*       IHASRB                                                *
*       IHAASCB                                               *
*       IHAASXB                                               *
*       IECDIOCM                                              *
*       IHARB                                                 *
*       CVT                                                   *
*       IHAPSA                                                *
*                                                             *
* TABLES = NONE                                               *
*                                                             *
* MACROS = SETLOCK                                            *
*                                                             *
* CHANGE ACTIVITY = NONE                                      *
*                                                             *
***************************************************************
         TITLE 'IECVPURG - MAPPING MACROS'
         IECDIPIB
         EJECT
         IECDIOCM
         EJECT
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         IHARB DSECT=YES
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IHAPSA
         EJECT
         IHASRB
         TITLE 'IECVPURG - REGISTER AND MISCELLANEOUS EQUATES'
***************************************************************
*                                                             *
*        REGISTER EQUATES                                     *
*                                                             *
***************************************************************
         SPACE
R0       EQU   0                   WORK REG
RPAR     EQU   1                   INPUT PARM REGISTER
R4       EQU   4                   WORK REG 4
R9       EQU   9                   WORK REG 9                  @YM06338
RBASE    EQU   10                  BASE REG
RB       EQU   11                  POINTER TO IPIB
RC       EQU   12                  WORKREG,USED FOR XMPOST     @ZA30265
RIOCOM   EQU   12                  IOCOM BASE REG
RD       EQU   13                  SAVE AREA REG               @YM06338
RET      EQU   14                  RETURN REGISTER
RF       EQU   15                  ENTRY POINT
         SPACE
***************************************************************
*                                                             *
*        MISCELLANEOUS EQUATES                                *
*                                                             *
***************************************************************
         SPACE
FREE160  EQU   X'20'               MASK TO FREE 160 BYTE BLOCK
K04      EQU   4                   DISPLACEMENT OF 4
EXIT     EQU   3                   SVC 3  EXIT
COMPCODE EQU   X'7F'               ECB COMPLETION CODE         @YM3154P
KC0D     EQU   X'C0D'              C0D ABEND CODE              @YM08369
         TITLE 'IECVPURG - PROLOG'
***************************************************************
*                                                             *
*        ENTRY POINTS                                         *
*                                                             *
*        ESTABLISH ADDRESSABILITY                             *
*                                                             *
***************************************************************
         SPACE
IECVQCNT CSECT
         USING PSA,R0
         SPACE
         USING IECVQCNT,RF
         B     PRGINCR             PURGE QUIESCE COUNT DECR
*                                  *DECR ROUTINE ENTRY
         SPACE
IECVPRCU BALR  RF,R0               ESTABLISH ADDRESSABILITY    @YM01322
*                                  *ENTRY VIA LPSW
         USING *,RF                                            @YM01322
         B     PRGCLNUP            SIRB CLEANUP ROUTINE ENTRY  @YM01322
         SPACE
         ENTRY IECVPRDQ
         USING IECVPRDQ,RF                                     @YM01322
IECVPRDQ B     PRGRTM              PURGE PURGDQ RTM ENTRY      @YM01322
         SPACE
         DROP  RF
         TITLE 'IECVPURG - PURGE QUIESCE ROUTINE'
***************************************************************
*                                                             *
*        PURGE QUIESCE ROUTINE                                *
*                                                             *
***************************************************************
         SPACE
PRGINCR  BALR  RBASE,R0            SET BASE REG
BASE1    DS    0H                  BASE ACQUISTION REFERENCE   @YM3154P
         USING *,RBASE
         SPACE
LBL10    L     RF,IPIBCNT-IPIB(RPAR)  GET IPIB COUNT           @YM3154P
         LR    RB,RF               SAVE IN RB
         BCTR  RB,R0               DECREMENT
         LTR   RB,RB               HAS THE CNT GONE NEG ?      @YM06598
         BM    LBL50               ERROR, JUST RETURN          @YM06598
         SPACE
         CS    RF,RB,IPIBCNT-IPIB(RPAR)  ATTEMPT SWAP          @YM3154P
         BNZ   LBL10               LOOP UNTIL SUCCESSFUL       @YM3154P
         SPACE
         LTR   RB,RB               IS COUNT ZERO
         BNZ   LBL50               NO, DONT POST               @YM3154P
         SPACE
         LTR   R0,R0               DOES CALLER HAVE LOCAL LOCK
         BNZ   LBL20               NO, NEED TO GET IT          @YM3154P
         SPACE
         LA    R0,0(,RET)          SAVE RETURN ADDR            @YM3154P
         SPACE
         B     LBL30               SKIP LOCK ACQUISITION       @YM3154P
         SPACE
LBL20    LR    R0,RET              SAVE RETURN ADDR            @YM3154P
         SPACE
         O     R0,RELSLOCK         INDICATE RELEASE LOCK       @YM3154P
         SPACE
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(LOCAL,IECVQCNT(LBL30))
         EJECT
***************************************************************
*                                                             *
*        POST ECB IF IPIB COUNT IS ZERO                       *
*                                                             *
*        NOTE:  ONLY REGS 0 THRU 9 SAVED ACROSS POST          *@YM3154P
*                                                             *
***************************************************************
         SPACE
LBL30    LA    RB,IPIBECB-IPIB(RPAR)  GET ECB ADDRESS          @YM3154P
         SPACE
         USING CVTMAP,RF
         L     RF,CVTPTR           GET CVTPOINTER
         L     RD,IPIBASCB-IPIB(RPAR)  GET ASCB WHERE PURGE    @ZA30265
*                                      *WAITING                @ZA30265
         C     RD,PSAAOLD          IS IT ASCB WE'RE RUNNING IN @ZA30265
         BE    LBL34               NO, DO NORMAL POST          @ZA30265
         L     RF,CVT0PT01         GET ENTRY FOR POST          @ZA30265
         LA    RC,CVTBRET          SET ADDR OF ERRET           @ZA30265
         O     RB,HIGHON           HIORDER BIT TO INDIC XMPOST @ZA30265
         B     LBL36               GO DO POST                  @ZA30265
LBL34    L     RF,CVT0PT02         GET BRANCH ENTRY            @ZA30265
*                                  *ADDRESS OF POST
         SPACE
LBL36    LA    RBASE,COMPCODE      SET COMPLETION CODE         @ZA30265
         SLL   RBASE,24            ALIGN COMP CODE             @YM3154P
         BALR  RET,RF              GO TO POST
         SPACE
         BALR  RBASE,R0            REESTABLISH BASE REG        @YM3154P
BASE2    LA    RB,BASE2-BASE1      GET ADDR DIFFERENCE         @YM3154P
         SLR   RBASE,RB            ADJUST TO ORIGINAL USING    @YM3154P
         SPACE
         LTR   R0,R0               MUST LOCK BE FREED          @YM3154P
         BP    LBL40               NO CALLER HAS LOCK          @YM3154P
         SPACE
         SETLOCK   RELEASE,TYPE=LOCAL,                                 *
               RELATED=(LOCAL,IECVQCNT(LBL20))
         SPACE
LBL40    LR    RET,R0              RESTORE RETURN ADDR         @YM3154P
         SPACE
LBL50    BR    RET                 RETURN TO CALLER            @YM3154P
         SPACE
         DROP  RF
         TITLE 'IECVPURG - RTM PURGDQ ROUTINE'
***************************************************************
*                                                             *
*        RTM PURGDQ ROUTINE                                   *
*        IF PURGEDQ ISSUED BY IGC0001F THEN                    @ZA12676
*        1. CHAIN SRB ON SRB CHAIN                             @ZA12676
*        2. UPDATE IPIB SRB POINTER                            @ZA12676
*        OTHERWISE RESCHEDULE SRB AND ISSUE C0D ABEND          @ZA12676
*                                                             *
***************************************************************
         SPACE
         USING IPIB,RB
         USING SRB,RPAR
PRGRTM   BALR  RBASE,R0            SET BASE REG                @YM08369
         USING *,RBASE
         SPACE
         L     R4,PSAAOLD          GET CURRENT ASCB POINTER    @YM08369
         L     RB,ASCBIOSP-ASCB(,R4)  GET IPIB PTR             @YM08369
         LTR   RB,RB               NO IPIB, SHOULD NOT HAPPEN  @YM08369
         BNZ   PRGRTM00            BRANCH IF THERE IS          @ZA12676
         SPACE
* IF PURGEDQ NOT ISSUED BY IGC0001F                            @ZA16182
* ABEND THE TCB                                                @ZA16182
PRGRTMAB LR    RB,RPAR             SAVE SRB ADDRESS
         ABEND KC0D,DUMP,,SYSTEM                               @ZA16182
         SPACE
PRGRTM00 L     RB,IPIBLNK          GET SECOND IPIB PTR         @ZA12676
         LTR   RB,RB               IS THERE ONE                @ZA12676
         BZ    PRGRTM01            NO-LOOK AT FIRST IPIB       @ZA12676
         TM    IPIBFLG1,IPIBDQ     DID IGC0001F ISSUE PURGEDQ  @ZA12676
         BO    PRGRTM02            YES-QUEUE SRB TO IPIB       @ZA12676
PRGRTM01 L     RB,ASCBIOSP-ASCB(,R4) GET 1ST IPIB AGAIN        @ZA12676
         TM    IPIBFLG1,IPIBDQ     DID IGC0001F ISSUE PURGEDQ  @ZA12676
         BNO   PRGRTMAB            ABEND                       @ZA12676
PRGRTM02 L     RF,IPIBSRB          GET FIRST SRB ON CHAIN PTR  @ZA10336
         SPACE
         ST    RF,SRBFLNK          SET FORWARD SRB CHAIN PTR
         ST    RPAR,IPIBSRB        POINT IPIB TO NEW SRB
         SPACE
         BR    RET                 RETURN TO SPL PURG SVC
         SPACE
         DROP  RPAR,RB
         TITLE 'IECVPURG - SIRB CLEAN UP ROUTINE'
***************************************************************
*                                                             *
*        SIRB CLEAN UP ROUTINE                                *
*                                                             *
*        FREE ERP WORK AREAS                                  *
*                                                             *
***************************************************************
         SPACE
PRGCLNUP BALR  RBASE,R0            ESTABLISH ADDRESSABILITY
         USING *,RBASE
         SPACE
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(LOCAL,IECVQCNT(CLEANUP))
         SPACE
         SPACE
         L     RF,PSAAOLD          LOAD POINTER TO CURRENT ASCB
         L     R4,ASCBASXB-ASCB(,RF) GET THE ASXB OUT OF THE ASCB
         LA    R9,ASXBFLSA-ASXB(,R4)    GET LOCAL LOCK SA ADDR @YM06338
         L     R4,ASXBSIRB-ASXB(,R4)    GET SIRB               @OZ06494
         L     RPAR,RBIQEA-RBBASIC(,R4) LOAD POINTER TO ERP WORK AREA
         LA    RPAR,0(RPAR)        CLEAR SECOND ENTRY SWITCH
         LTR   RPAR,RPAR           ANY EWA?                    @OZ06494
         BZ    PGRLKREL            NO, RETURN                  @OZ06494
         USING CVTMAP,RF
         L     RF,CVTPTR            LOAD POINTER TO CVT
         L     RF,CVTIXAVL          LOAD POINTER TO IO
*                                   TABLE COMMUNICATION
         L     RF,IOCORMGT-IOCOM(RF) LOAD POINTER TO STORAGE MGR
         LA    RB,FREE160           SET INDICATOR FOR 160 BYTE BLK
         LR    RD,R9                RD HAS SA FOR STORAGE MGR  @YM06338
         SPACE
         BAL   RET,K04(RF)          FREE WORK AREAS
         SR    RF,RF                CLEAR REG
         ST    RF,RBIQEA-RBBASIC(R4)  ZERO EWA POINTER
         SPACE
         SPACE
PGRLKREL SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,IECVQCNT(CLEANUP))
         SPACE
         SVC   EXIT                 RETURN TO DISPATCHER
         SPACE
         DROP  RF
         TITLE 'IECVPURG - DEFINED CONSTANTS'
***************************************************************
*                                                             *
*        DEFINED CONSTANTS                                    *
*                                                             *
***************************************************************
         SPACE
         DS    0F                                              @YM3154P
RELSLOCK DC    X'80000000'         LOCK ACQUISTION INDICATOR   @YM3154P
HIGHON   DC    X'80000000'         TO SHOW XMPOST REQUEST      @ZA30265
         TITLE 'IECVPURG - MODULE IDENTIFICATION'
***************************************************************
*                                                             *
*        MODULE IDENTIFICATION                                *
*                                                             *
***************************************************************
         SPACE
         MODID BR=NO                                           @ZA30265
         TITLE 'IECVPURG - PATCH AREA'
***************************************************************
*                                                             *
*        MAINTENANCE AREA                                     *
*                                                             *
***************************************************************
         SPACE
PURGPTCH DC    CL8'PURGPTCH'       PATCH ID
         DC    13F'0'              MAINTENANCE AREA
         END
