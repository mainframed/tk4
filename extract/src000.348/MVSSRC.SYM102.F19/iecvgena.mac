         TITLE 'IECVGENA - IOSGEN SUBROUTINE (UCBFLG,SWAP,VARY)'
*****************************************************************
*                                                               *
*                                                               *
* MODULE NAME = IECVGENA                                        *
*                                                               *
* DESCRIPTIVE NAME = IOSGEN RESIDENT SUBROUTINE                 *
*                                                               *
* COPYRIGHT = NONE                                              *
*                                                               *
* STATUS = OS/VS2 RELEASE 2, CHANGE LEVEL 00                    *
*                                                               *
* FUNCTION =                                                    *
*    IOSGEN SUBROUTINE PERFORMS ALL FUNCTIONS WHICH REQUIRE     *
*    A LOCK FOR:                                                *
*         UCBFLG - (UCB LOCK)                                   *
*         SWAP  - (UCB AND LCH LOCKS)                          @ZA12145
*         VARY  - (UCB LOCK)                                    *
*    IN ADDITION IT PERFORMS AN OUT-OF-LINE FUNCTION TO        @ZA16163
*    SIMULATE INTERRUPTS (IOSINTRP)                            @ZA16163
*                                                               *
* NOTES =                                                       *
*    DEPENDENCIES = EBCDIC                                      *
*    RESTRICTIONS = NONE                                        *
*    REGISTER CONVENTIONS = SEE REGISTER DEFINITIONS            *
*    PATCH LABEL = PATCHID                                      *
*                                                               *
* MODULE TYPE = SUBROUTINE                                      *
*    PROCESSOR = ASSEMBLER                                      *
*    MODULE SIZE = B00 HEX BYTES                                *
*    ATTRIBUTES = RESIDENT, REENTRANT, KEY 0, SUPERVISOR STATE  *
*                                                               *
* ENTRY POINT = IECVGENA                                        *
*    PURPOSE = ALL FUNCTIONS                                    *
*    LINKAGE = BRANCH REGISTER 15                               *
*                                                               *
*    INPUT =                                                    *
*    INPUT VARIES BY FUNCTION AS FOLLOWS:                       *
*         ALL FUNCTIONS - REG 13 CONTAINS ADDRESS OF SAVE AREA. *
*                         REG 14 CONTAINS RETURN ADDRESS.       *
*                         REG 15 CONTAINS ENTRY POINT ADDRESS.  *
*         UCBFLG - REG 5 CONTAINS THE APPROPRIATE DISPLACEMENT  *
*                  OFF OF LABEL 'BRUCBFLG'.                     *
*                  REG 4 CONTAINS ADDRESS OF UCB PREFIX.        *
*         SWAP - REG 4 CONTAINS ADDRESS OF 'TO' UCB PREFIX.     *
*                REG 5 CONTAINS ADDRESS OF IOCOM.               *
*                REG 6 CONTAINS ADDRESS OF 'FROM' UCB PREFIX.   *
*                REG 8 CONTAINS ADDRESS OF 36 WORD WORK AREA.  @ZA12145
*                REG 12 CONTAINS ADDRESS OF CVT.                *
*         VARY - REG 4 CONTAINS ADDRESS OF UCB PREFIX.          *
*                REG 5 CONTAINS ADDR OF 8 BYTE PARAMETER:       *
*                BYTE                                           *
*                1-2   HEXIDECIMAL DEVICE ADDRESS.              *
*                3     FUNCTION CODE                            *
*                      00 - VARY OFFLINE CONDITIONALLY          *
*                      04 - VARY ONLINE                         *
*                      80 - VARY OFFLINE UNCONDITIONALLY        *
*                4     PHYSICAL CPU ID                          *
*                5     UNUSED                                   *
*                6-8   EBCDIC DEVICE ADDRESS                    *
*                REG 6 CONTAINS THE ADDRESS OF THE CVT          *
*     IOSINTRP - REG1                                          @ZA16163
*                      IF POSITIVE, UCB ADDRESS                @ZA16163
*                      IF NEGATIVE, DEVICE ADDRESS             @ZA16163
*                                                               *
*    OUTPUT =                                                   *
*    OUTPUT VARIES BY FUNCTION AS FOLLOWS:                      *
*         UCBFLG - NONE                                         *
*         SWAP - RETURN CODE IN FIRST WORD OF WORKAREA         @ZA12145
*                00 - SUCCESSFUL SWAP                          @ZA12145
*                04 - SWAP FAILED                              @ZA12145
*         VARY - RETURN CODE IN REG 15                          *
*                00 - SUCCESSFUL VARY                           *
*                04 - VARY OFFLINE UNCONDITIONAL                *
*                     LAST PATH VARIED OFFLINE                  *
*                08 - VARY OFFLINE CONDITIONAL                  *
*                     LAST PATH CANNOT BE VARIED OFFLINE        *
*                12 - INVALID PATH SPECIFIED                    *
*                20 - DEVICE PATH IS RESERVED                   *
*          IOSINTRP - NONE                                     @ZA16163
*                                                               *
*    EXITS-NORMAL =                                             *
*       RETURN TO CALLER VIA REG 14.                            *
*                                                               *
*    EXITS-ERROR =                                              *
*       FUNCTIONAL RECOVERY ROUTINE.                            *
*                                                               *
* EXTERNAL REFERENCES =                                         *
*    ROUTINES =                                                 *
*         IECVSMGR  (BRANCH ENTRY)                              *
*         SETLOCK                                               *
*         SETFRR                                                *
*    DATA AREAS =                                               *
*         VARYPARM (INTERNAL)                                   *
*         SWAPWORK (INTERNAL)                                   *
*         GENAFRRS (INTERNAL)                                   *
*    CONTROL BLOCKS =                                           *
*         IEFUCBOB PREFIX=YES                                   *
*         IHAPSA                                                *
*         CVT                                                   *
*         IECDIOCM                                              *
*         IHALCCA                                               *
*         IECDIRT                                               *
*         IHAWSAVT                                              *
*         IECDLCH                                               *
*         IECDIOQ                                               *
*         IECDIOSB                                              *
*         IHAFFRS                                               *
*         IHASDWA                                               *
*                                                               *
* TABLES =                                                      *
*    UCBFLG - NONE                                              *
*    VARY - 8 BYTE PARAMETER                                    *
*    SWAP - 144 BYTE WORK AREA                                 @ZA12145
*                                                               *
* MACROS =                                                      *
*    SETLOCK                                                    *
*    SETFRR                                                    @ZA12145
*    RISGNL                                                    @ZA12145
*                                                               *
* CHANGE ACTIVITY = NONE                                        *
*                                                               *
*****************************************************************
*/*FIX12145: CHART                                                   */
*/*IOSGEN:  E IOSGEN                                                 */
*/*         P SAVE REGISTERS AND ESTABLISH ADDRESSABILITY            */
*/*         P GET 'TO' UCB PTR                                       */
*/*         P GET 'FROM' UCB PTR                                     */
*/*         P GET WORKAREA PTR                                       */
*/*         P GET ADRESS OF IECVGENA                                 */
*/*         S IECVGENA: CALL GENA TO DO SWAP                         */
*/*         P RESTORE REGISTERS                                      */
*/*         R EXIT                                                   */
*/*GENA:    E IECVGENA                                               */
*/*         P ESTABLISH ADDRESSABILITY                               */
*/*         P TURN ON NOT READY BIT IN 'TO' UCB (USING C&S LOGIC)    */
*/*         D (NO,,YES,NOSWAP) 'TO' ADDR = 'FROM' ADDR ?             */
*/*         P TURN ON NOT READY BIT IN 'FROM' UCB (USING CS LOGIC)   */
*/*         P SAVE R13 (SAVEAREA PTR) AND R14 (RETURN PTR)           */
*/*         S ADDFRR: SET FRR                                        */
*/*         P SET SWAP ACTIVE FLAG FOR FRR                           */
*/*          P SAVE FRR AREA ADD AND SWAP WKAREA ADDR                */
*/*TSTPSNS:  D (NO,,YES,TSTPSNS)    SENSE PENDING ON 'FROM' DEV ?    */
*/*          D (NO,,YES,TSTPSNS)    SENSE PENDING ON 'TO' DEV ?      */
*/*          P GET LOCKWORD ADDRESS                                  */
*/*          L SETLOCK: OBTAIN IOSUCB 'FROM'                         */
*/*          P TURN ON UCB LOCK HELD INDICATOR & SAVE LOCKWORD       */
*/*          D (NO,,YES,%UNLOCK2)  'FROM' UCB ACTIVE BITS ON ?       */
*/*          D (NO,,YES,%UNLOCK2)  'TO' UCB ACTIVE BITS ON ?         */
*/*STOPCPU:  P GET CPU ADDR & ADDR OF PCCA                           */
*/*          P SET REGS FOR RTN-ENTRY PT, PARM PTR, SAVE AREA PTR    */
*/*          L RISGNL:  SERIAL DISABLE OTHER CPU                     */
*/*          P SAVE RET CODE, REESTABLISH BASE                       */
*/*          D (NO,,YES,%SENTRY) SIGP FAIL ?                         */
*/*%SIGPRET: S RELUCBLK: RELEASE IOSUCB 'FROM'                       */
*/*          D (NO,,YES,TSTPSNS) SWAP UCBS ACTV ?                    */
*/*          D (NO,,YES,BADRET)  DID SWAP FAIL ?                     */
*/*          P SET PARM REG FOR SWAP LCH                             */
*/*          S SWAPLCH:  GO SWAP LCHS                                */
*/*GOODRET:  P SET GOOD RETURN CODE FOR DDR                          */
*/*CLEANUP:  P SAVE RET ADDR AND SAVE AREA ADDR                      */
*/*          S DELFRR:  GO DELETE FRR                                */
*/*          P RESTORE SAVE AREA ADDR                                */
*/*          R RETURN                                                */
*/*BADRET:   P (,CLEANUP) SET BAD RETURN CODE                        */
*/*NOSWAP:   P SET GOOD RETURN CODE FOR DDR                          */
*/*          R RETURN                                                */
*/*SWAPLCH:  E SWAPLCH                                               */
*/*         D (NO,,YES,LCHSAME)  LCH INDICES THE SAME ?              */
*/*         P SAVE REGISTERS                                         */
*/*         P GET IOCOM ADDR                                         */
*/*         P COPY 'FROM ' UCB ADDR                                  */
*/*         S LOCKLCH:  GO GET 'FROM' LCH LOCK                       */
*/*         P TURN ON LCH LOCK HELD INDICATOR                        */
*/*         P TURN ON LCH SWAP STARTED FLAG                          */
*/*         P GET LCH ADDR                                           */
*/*%ADJUST: P ADJUST UCB PTR TO COMMON SECTION                       */
*/*%NXTIOQE: P GET IOQE PTR FROM LCH                                 */
*/*          D (YES,,NO,DQEXIT)   IS THERE AN IOQE ?                 */
*/*          P GET IOSB ADDR                                         */
*/*          D (YES,,NO,%NXTIOQE) IOSB RELATED TO 'FROM' DEV ?       */
*/*          P SAVE IOQ ADDR                                         */
*/*          P GET AND SAVE DEQ RETURN PTR                           */
*/*          S (,%ADJUST) CALLIOS: CALL RTN TO GO TO IOS DEQ RTN     */
*/*DQEXIT:   P RE-ADJUST UCB PTR TO PREFIX                           */
*/*          S UNLCKLCH:  GO TO RTN TO RELEASE LCH LOCK              */
*/*          P TURN OFF LOCK HELD INDICATOR                          */
*/*          D (YES,,NO,LCHEXIT)   ANY IOQ'S ON CHAIN ?              */
*/*          P COPY 'TO' UCB ADDR                                    */
*/*          S LOCKLCH:  GO GET 'TO' LCH LOCK                        */
*/*          P TURN ON LCH LOCK HELD INDICATOR                       */
*/*%NEXTNQ:  P GET IOQ PTR FROM WORKAREA                             */
*/*          D (YES,,NO,NQEXIT)    IS THERE AN IOQ ?                 */
*/*          P RESET QUEUE PTR                                       */
*/*          P GET ADDR OF ENQ RTN                                   */
*/*          S (,%NEXTNQ) CALLIOS: CALL RTN TO GO TO IOS ENQ RTN     */
*/*NQEXIT:   S UNLCKLCH: GO TO RTN TO RELEASE LCH LOCK               */
*/*          P TURN OFF LCH LOCK HELD INDICATOR                      */
*/*LCHEXIT:  P TURN ON LCH SWAP ENDED FLAG                           */
*/*          P RESTORE REGS                                          */
*/*LCHRET:   R RETURN                                                */
*/*LCHSAME:  P (,LCHRET) TURN ON SWAP STATUS FLAGS                   */
*/*%SENTRY:  D (NO,,YES,BADRET) RC = 8;   CPU BROKEN?                */
*/*          S (,%SIGPRET)  SIGPRTN: BAL TO SIGP ROUTINE             */
*/*%UNLOCK2: S (,TSTPSNS)  RELULOCK: GO RELEASE 'FROM' UCB LOCK      */
*/*SIGPRTN:  E SIGPRTN                                               */
*/*          P SAVE REGISTERS AND ESTABLISH ADDRESSABILITY           */
*/*          P GET PARM ADDR                                         */
*/*          P ADJUST UCB'S TO COMMON SECTION                        */
*/*          D (NO,,YES,%SETACT)   'TO' UCB ACTIVE ?                 */
*/*          P GET UCB LOOKUP TABLE ADDR                             */
*/*%NXTUCB:  P GET UCB ADDR                                          */
*/*          P SET SWAP STARTED BIT                                  */
*/*          D (MIXD,,ONES,%EOTBL,ZERO,%UPDATE)  ADDR VALID ?        */
*/*          D (NO,,YES,%FRMEQTO)  IS THIS 'FROM' UCB ?              */
*/*          D (NO,%UPDATE,YES,%TOEQFRM)  IS THIS 'TO' UCB ?         */
*/*%UPDATE:  P (,%NXTUCB)  INCREMENT UCB ADDR PTR                    */
*/*%FRMEQTO: P (,%UPDATE) SET 'FROM' ADDR = 'TO' ADDR IN TABLE       */
*/*%TOEQFRM: P (,%UPDATE) SET 'TO' ADDR = 'FROM' ADDR IN TABLE       */
*/*%EOTBL:   P COPY 'FROM' UCB TO WORKAREA                           */
*/*          P COPY 'TO' UCB TO 'FROM' UCB                           */
*/*          P COPY WORKAREA TO 'TO' UCB                             */
*/*          P SWAP IOQ FIELDS                                       */
*/*          P SWAP UCBJBNR,UCBFL5 EXCEPT MONT & NALOC BITS          */
*/*          P SWAP UCBTBYT2 EXCEPT VLPWR BIT                        */
*/*          D (YES,,NO,%NOTTAPE)   TAPE ?                           */
*/*          P SWAP UCBDVSHR                                         */
*/*%NOTTAPE: P SWAP UCBFL4                                           */
*/*          P COPY 'FROM' EXTENSION FIELDS TO WORKAREA              */
*/*          P COPY 'TO' EXTENSION FIELDS TO 'FROM'                  */
*/*          P COPY WORKAREA TO 'TO' EXTENSION FIELDS                */
*/*          P SWAP 'VARY PENDING' BIT                               */
*/*          P SWAP DEVICE STATISTICS TABLE                          */
*/*          P SET SWAP ENDED BIT                                    */
*/*SIGRET:   P RESTORE REGS AND SET RETURN CODE                      */
*/*          R EXIT                                                  */
*/*%SETACT:  P (,SIGRET)SET UCB ACTIVE INDICATOR                     */
*/*FRRTN:    E FRRTN                                                 */
*/*          P ESTABLISH ADDRESSABILITY                              */
*/*          P GET FRR WORKAREA                                      */
*/*          L SETRP:  RECORD = YES                                  */
*/*          D (YES,,NO,%LOCK2)    DO WE HOLD UCB LOCK ?             */
*/*          P SET BIT IN SDWA TO FREE UCB LOCK                      */
*/*          P (,%SDWAREC) SAVE LOCKWORD IN SDWA                     */
*/*%LOCK2:   D (YES,,NO,%SDWAREC)   DO WE HOLD LCH LOCK?             */
*/*          P SET BIT IN SDWA TO FREE LCH LOCK                      */
*/*          P SAVE LOCKWORD IN SDWA                                 */
*/*%SDWAREC: P PUT DATA INTO SDWA VARIABLE RECORDING AREA            */
*/*          D (YES,,NO,%WHERE)   CAN WE TAKE DUMP ?                 */
*/*          P PUT FRR PARM AREA AND SDWA INTO BUFFER                */
*/*          L SDUMP:      IECVGENA ERROR                            */
*/*%WHERE:   D (YES,,NO,%RET)      SWAP FUNCTION ACTIVE              */
*/*          D (PART,,DONE,%RET)   WHAT IS STATE OF SWAP ?           */
*/*          P SET AND SAVE RETRY REGISTERS                          */
*/*          L SETRP  RC = 4;  RETRY                                 */
*/*%RET:     R RETURN TO RTM                                         */
*/*RELUCBLK: P GET ADDRESS OF UCB                                    */
*/*          L SETLOCK:    RELEASE IOSUCB 'FROM'                     */
*/*          P TURN OFF UCB LOCK HELD INDICATOR                     */
*/*          R RETURN                                                */
*/*LOCKLCH:  E LOCKLCH                                               */
*/*          P GET CORRECT LCH                                       */
*/*          P SAVE REGISTERS AROUND SETLOCK                         */
*/*          L SETLOCK:   OBTAIN IOSLCH                              */
*/*          P SHOW LCH LOCK HELD IN IRT                             */
*/*          P SAVE LOCKWORD IN FRR WORKAREA                         */
*/*          P SAVE LCCA ADDR IN FRR WORKAREA                        */
*/*          P RESTORE REGISTERS                                     */
*/*          R RETURN                                                */
*/*UNLCKLCH: E UNLCKLCH                                              */
*/*          P SAVE REGISTERS AROUND SETLOCK                         */
*/*          P POINT AT LOCK                                         */
*/*          L SETLOCK:     RELEASE IOSLCH                           */
*/*          P TURN OFF LCH LOCK HELD INDIC'S IN IRT & FRRAREA       */
*/*          P RESTORE REGISTERS                                     */
*/*          R RETURN                                                */
*/*ADDFRR:   E ADDFRR                                                */
*/*          P GET FRR ROUTINE ADDRESS                               */
*/*          L SETFRR  ADD                                           */
*/*          P SAVE GENA ENTRY POINT, PARM REG AND SAVE AREA ADDR    */
*/*          R RETURN                                                */
*/*DELFRR:   E DELFRR                                                */
*/*          L SETFRR     DELETE                                     */
*/*          R RETURN                                                */
         TITLE 'IECVGENA - EXTERNAL MAPPING MACROS'
         IEFUCBOB PREFIX=YES,LIST=YES
         EJECT
         IHAPSA
         EJECT
         CVT   DSECT=YES
         EJECT
         IECDIOCM
         EJECT
         IHALCCA
         EJECT
         IECDIRT
         EJECT
         IHAWSAVT CLASS=CPU
         EJECT
         IECDIOSB
         EJECT
         IECDLCH
         EJECT
         IECDIOQ
         EJECT
         IHAASCB
         EJECT
         IHAFRRS
         EJECT
         IHASDWA
         TITLE 'IECVGENA - INTERNAL MAPPING MACROS'
*****************************************************************
*                                                               *
*        VARY PATH PARAMETER DSECT                              *
*                                                               *
*        FUNCTIONAL RECOVERY ROUTINE PARAMETER DUMP DSECT       *
*                                                               *
*****************************************************************
         SPACE
VARYPARM DSECT
SFRRPARM EQU   VARYPARM            (FRR) START FRR PARM DUMP
VARYCHAN DS    XL2                 BINARY CHANNEL/UNIT ADDRESS
         ORG   VARYCHAN
VARYCHA  DS    XL1                 BINARY CHANNEL ADDRESS
VARYUA   DS    XL1                 BINARY UNIT ADDRESS
VARYFUNC DS    XL1                 FUNCTION CODE
VARYOFFC EQU   X'00'               VARY OFFLINE CONDITIONALLY
VARYOFFU EQU   X'80'               VARY OFFLINE UNCONDITIONALLY
VARYON   EQU   X'04'               VARY ONLINE
VARYCPU  DS    XL1                 CPUID
VARYWORK DS    XL4                 WORK AREA
         ORG   VARYWORK
VARYWCHA DS    XL1                 WORK CHANNEL ADDRESS
VARYWUA  DS    XL1                 WORK UNIT ADDRESS
VARYWACU EQU   X'F0'               ALT CONTROL UNIT INDICATOR
VARYWRSV DS    XL2                 RESERVED
EFRRPARM EQU   *                   (FRR) END FRR PARM DUMP
VARYSIZE EQU   *-VARYPARM          LENGTH OF DSECT
LFRRPARM EQU   VARYSIZE            (FRR) PARAMETER LENGTH
         EJECT
*****************************************************************
*                                                               *
*        SWAP WORK AREA DSECT                                   *
*                                                               *
*        FUNCTIONAL RECOVERY ROUTINE SAVE AREA DUMP DSECT       *
*                                                               *
*****************************************************************
         SPACE
SWAPWORK DSECT
SFRRSAVE EQU   SWAPWORK            (FRR) START FRR SAVE AREA DUMP
SWAPRC   DS    0F                  RTN CODE FOR DDR   @ZA12145,@ZA25951
SWAPQPTR DS    1F                  IOQE CHAIN QUEUE HEADER
SWAPIOS  DS    1F                  ADDRESS OF IOS ROUTINE
SWAPR15  DS    1F                  IOSGEN REG 15 SAVE AREA
         DS    2F                  RESERVED           @ZA12145,@ZA25951
SWAPSAVE DS    15F                 REGISTER SAVE AREA
SWAPSSAV DS    0F                  REG SAVE AREA FOR SIGP RTN  @ZA12145
         DS    3F                  REGISTERS 0 - 2             @ZA12145
SWAPSR03 DS    1F                  REGISTER 3                  @ZA12145
SWAPSR04 DS    1F                  REGISTER 4                  @ZA12145
         DS    1F                  REGISTER 5                  @ZA12145
SWAPSR06 DS    1F                  REGISTER 6                  @ZA12145
         DS    6F                  REGISTERS 7 - 12            @ZA12145
SWAPSR13 DS    1F                  REGSITER 13                 @ZA12145
         DS    2F                  REGISTERS 14 - 15           @ZA12145
EFRRSAVE EQU   *                   (FRR) END FRR SAVE AREA DUMP
SWAPSIZE EQU   *-SWAPWORK          LENGTH OF DSECT
LFRRSAVE EQU   SWAPSIZE            (FRR) SAVE AREA LENGTH
         EJECT
*****************************************************************
*                                                               *
*        FRR PARAMETER AREA DSECT                               *
*                                                               *
*****************************************************************
         SPACE
GENAFRRS DSECT
GENAFBAS DS    1F                  BASE ADDRESS OF IECVGENA
GENAFLOK DS    1F                  LOCK WORD ADDRESS           @ZA12145
GENAFR05 DS    1F                  PARAMTER PTR
GENAFR13 DS    1F                  REG SAVE AREA PTR
GENAWORK DS    1F                  ADDRESS OF SWAP WORK AREA   @ZA12145
GENAFLAG DS    XL1                 STATUS INDICATOR            @ZA12145
GFRRLLOK EQU   X'80'               LCH LOCK HELD               @ZA12145
GFRRULOK EQU   X'40'               UCB LOCK HELD               @ZA12145
GFRRACTV EQU   X'20'               SIGP RTN FOUND ACTIVE UCB   @ZA12145
GFRRSWAP EQU   X'10'               SWAP FUNCTION ACTIVE        @ZA12145
GFRRLST  EQU   X'08'               LCH SWAP STARTED            @ZA12145
GFRRLEND EQU   X'04'               LCH SWAP ENDED              @ZA12145
GFRRUST  EQU   X'02'               UCB SWAP STARTED            @ZA12145
GFRRUEND EQU   X'01'               UCB SWAP ENDED              @ZA12145
GFRRSTAT EQU   X'0F'               TOTAL STATUS OF SWAP        @ZA12145
GENAFLG2 DS    XL1                 FLAGS                       @ZA12145
GFRRBRCH EQU   X'80'               SIGP RTN ENTERED VIA BALR   @ZA12145
GFRRRSV  EQU   X'7F'               RESERVED                    @ZA12145
         DS    XL2                 RESERVED                    @ZA12145
GENASIZE EQU   *-GENAFRRS          LENGTH OF DSECT
         EJECT
*****************************************************************
*                                                               *
*        FRR 4K BUFFER DSECT                                    *
*                                                               *
*****************************************************************
         SPACE
SDBF     DSECT
SDBFPTR  DS    1A                  (FRR) POINTER TO DUMP START
SDBFCNT  DS    1H                  (FRR) BUFFER BYTE COUNT
SDBFSTRT DS    0H                  (FRR) START OF SVC DUMP
         DS    1H                  (FRR) RESERVED HALFWORD
SDBFPARM DS    XL8                 (FRR) 8 BYTE PARAMETER
SDBFSAVE DS    18F                 (FRR) REGS AT ENTRY
SDBFSDWA DS    (SDWALEN/4)F        (FRR) CONTENTS OF SDWA
SDBFRRWA DS    6F                  (FRR) FRR 6-WORD PARM AREA  @ZA12145
*                                  SEE SDBFLNTH FOR BUFFER LENGTH
         TITLE 'IECVGENA - REGISTER DEFINITIONS'
*****************************************************************
*                                                               *
*        REGISTER DEFINITIONS                                   *
*                                                               *
*        SPECIAL NOTES:                                         *
*              SAVE REGISTERS 0,1,10,11,12,13,14,15             *
*              ACROSS IOS STORAGE MANAGER INTERFACE.            *
*              REGISTER 13 IS NOT DESTROYED.                    *
*                                                               *
*              REGISTERS 11,12,13, AND 14 ARE DESTROYED         *
*              ACROSS SETLOCK INTERFACE.                        *
*                                                               *
*        REGISTER USAGE BY FUNCTION:                            *
*              C - COMMEN TO ALL FUNCTIONS                      *
*              U - UCBFLG                                       *
*              V - VARY                                         *
*              S - SWAP                                         *
*              F - FRR SUBROUTINES                              *
*              I - IOSINTRP                                    @ZA16163
*                                                               *
*****************************************************************
         SPACE
LOC0     EQU   0                   (U,S) LOW CORE PTR
         SPACE
RSRC1    EQU   1                   (U) RESOURCE PTR
CPU1     EQU   1                   (S) CPU ADDRESS             @ZA12145
LCH1     EQU   RSRC1               (S) LCH PTR
WORK1    EQU   1                   (S) WORK REGISTER           @ZA12145
RUCB     EQU   1                   (I) UCB/DEVICE ADDRESS      @ZA16163
         SPACE
WORK2    EQU   2                   (C)  EVEN WORK REG
*                                  (U,V) SAVE13 WHILE UCBLOCK HELD
REG      EQU   2                   (I) TEMP WORK REGISTER      @ZA16163
         SPACE
WORK3    EQU   3                   (C) ODD WORK REG
FRRWA3   EQU   3                   (S) ADDR OF FRR WORKAREA    @ZA12145
*                                  (U,V) RTN14 WHILE UCBLOCK HELD
         SPACE
UCB4     EQU   4                   (U,V) UCB PTR
UCBTO4   EQU   UCB4                (S) 'TO' UCB PTR
         SPACE
PARM5    EQU   5                   (U) VARIATION REG
*                                  (V) PARAMETER POINTER
IOCOM5   EQU   PARM5               (S) IOCOM PTR
         SPACE
CVT6     EQU   6                   (V) CVT POINTER
UCBFROM6 EQU   CVT6                (S) 'FROM' UCB PTR
         SPACE
WORK7    EQU   7                   (U,V) WORK REG
UCBOPT7  EQU   WORK7               (S) 'OPTIONAL' UCB PTR
         EJECT
WORK8    EQU   8                   (U,V) WORK REG
*                                  (S) *WORK AREA PTR
         SPACE
LINK9    EQU   9                   (C) LINK REG
         SPACE
WORK10   EQU   10                  (V) WORK REG
*                                  (C) *LINK REG TO FRR SUBROUTINES
         SPACE
BLKLOK11 EQU   11                  (C) LOCK WORD REG
*                                  (C) WORK REG
*                                  (U) RESOURCE BLOCK SIZE REG
IOQE11   EQU   BLKLOK11            (S) IOQE PTR
         SPACE
WORK12   EQU   12                  (C) WORK REG
*                                  (S) *CVT PTR (MUST POINT TO CVT
*                                  *UPON RETURN)
         SPACE
SAVE13   EQU   13                  (C) SAVE AREA PTR
*                                  WORK REG WHEN LOCK IS HELD
         SPACE
RTN14    EQU   14                  (C) RETURN REG
*                                  WORK REG WHEN LOCK IS HELD
         SPACE
BASE15   EQU   15                  (C) BASE REG
*                                  (U) ENTRY POINT TO I/O STORAGE MGR
*                                  (S) ENTRY POINT TO IOS ROUTINES
RC15     EQU   15                  (S) RETURN CODE AFTER RISGNL@ZA12145
         TITLE 'IECVGENA - MISCELLANEOUS EQUATES'
*****************************************************************
*                                                               *
*        MISCELLANEOUS EQUATES                                  *
*                                                               *
*        EQUATE USAGE BY FUNCTION:                              *
*              U - UCBFLG                                       *
*              V - VARY                                         *
*              S - SWAP                                         *
*              F - FRR SUBROUTINES                              *
*                                                               *
*****************************************************************
         SPACE
XFF      EQU   X'FF'               (C) 'AND'ING BASE
BLKSIZE  EQU   X'20'               (U) RESOURCE BLKSIZE CONSTANT
*                                  *FOR STORAGE MGR
RTNCD04  EQU   4                   (V) RETURN CODE OF 4
RTNCD08  EQU   8                   (V) RETURN CODE OF 8
RTNCD12  EQU   12                  (V) RETURN CODE OF 12
RTNCD20  EQU   20                  (V) RETURN CODE OF 20
RETURNCD EQU   60                  (V) REG 15 DISPLACEMENT IN
*                                  *SAVEAREA
SWRESV0  EQU   X'00'               (V) SOFTWARE RESERVE TEST
K01      EQU   1                   (C) CONSTANT OF 1
K02      EQU   2                   (C) CONSTANT OF 2
K03      EQU   3                   (S) CONSTANT OF 3           @ZA12145
K04      EQU   4                   (C) CONSTANT OF 4
K08      EQU   8                   (C) CONSTANT OF 8
K10      EQU   10                  (S) CONSTANT OF 10          @ZA12145
K20      EQU   20                  (S) CONSTANT OF 20          @ZA12145
K80      EQU   80                  (S) CONSTANT OF 80          @ZA12145
K256     EQU   256                 (S) CONSTANT OF 256         @ZA12145
K512     EQU   512                 (S) CONSTANT OF 512         @ZA12145
ID3400   EQU   X'03'               (S) 3400 SERIES ID          @ZA12145
ID3DA    EQU   X'20'               (S) UCB3DACC                @ZA12145
ID3TA    EQU   X'80'               (S) UCB3TAPE                @ZA12145
MSKON    EQU   X'0104'             (S) 'ON' MASK FOR UCBMONT & UCBNALOC
*                                                              @ZA12145
MSK80    EQU   X'80'               (S) 'ON' MASK FOR UCBDVSHR  @ZA12145
MSK7F    EQU   X'7F'               (S) 'OFF' MASK FOR UCBDVSHR @ZA12145
MSK02    EQU   X'02'               (S) 'ON' MASK FOR ICBVLPWR
*                                                     @XL03167,@ZA12145
MSKFD    EQU   X'FD'               (S) 'OFF' MASK FOR CBVLPWR
*                                                     @XL03167,@ZA12145
MSK03    EQU   B'0011'             (S) MASK FOR CLM INSTR.
*                                                     @XL03167,@ZA12145
IOSORG   EQU   4094                (S) IOS BASE ADDR INCR
LOCKS0   EQU   0                   (FRR) INIT SDWA LOCK FLGS
FMIDTEST EQU   0                   (FRR) TEST VALID MEMMORY
ACTIVA   EQU   UCBBSY+UCBPSNS+UCBACTV                 @ZA29054,@ZA12145
*                                  (S) UCB ACTIVE BITS         @ZA12145
ZERO     EQU   0                   (S) DISPLACEMENT OF 0       @ZA12145
MASKOF   EQU   X'0F'               (I) BYTE 'AND'ING MASK      @ZA16163
CSWDE    EQU   X'04'               (I) DEVICE END CSW STATUS   @ZA16163
PSWMCEC  EQU   X'0C'               (I) MACHINE CH+EC MODE MASK @ZA16163
PSWDIS   EQU   X'FC'               (I) DISABLE SYSTEM MASK     @ZA16163
         TITLE 'IECVGENA - ENTRY POINTS AND ADDRESSABILITY'
*****************************************************************
*                                                               *
*        ESTABLISH ADDRESSABILITY                               *
*                                                               *
*****************************************************************
         SPACE
IECVGENA CSECT
         USING IECVGENA,BASE15
         USING UCB,UCB4
MAINTAIN EQU   *                   MAINTENANCE REFERENCE
         SPACE
*****************************************************************
*                                                               *
*        ENTRY POINT BRANCH TABLE  (REGISTER 15)                *
*              0 - SWAP                                         *
*              4 - VARY                                         *
*              8 - IOSINTRP                                    @ZA16163
*             12 - RESERVED FOR EXPANSION                       *
*             16 - UCBFLG ALL INDICATORS 'ON' OR 'OFF'          *
*                                                               *
*****************************************************************
         SPACE
         B     SWAP                SWAP
         SPACE
IECIVARY B     VARYPATH            VARY
         SPACE
         B     SIMINT              IOSINTRP                    @ZA16163
         SPACE
         B     NOLOCK              RESERVED FOR EXPANSION
         SPACE
IECIFLOK BAL   LINK9,GETLOKSV      UCBFLG
*                                  *GO OBTAIN LOCK (SAVE 13 & 14)
         TITLE 'IECVGENA -  UCBFLG BRANCH TABLE AND EXECUTION'
*****************************************************************
*                                                               *
*        UCBFLG                                                 *
*        NORMAL BRANCH TABLE VALUES FOR IECVGENA.               *
*        THESE VALUES ARE DISPLACEMENTS IN REGISTER 5 FROM      *
*        LABEL 'BRUCBFLG'.                                      *
*        USED ONLY WHEN DISPLACEMENT FROM REGISTER 15 IS        *
*        LABEL 'LOK' ENTRY POINT.                               *
*        LABELS AT BRANCHES EQUAL 3 CHARACTER SUFFIX OF         *
*        EQUATES IN IOSGEN FOR DISPLACEMENT FROM REG 5.         *
*              0 - UCBFLG UCBNRY 'ON' (CONDITIONALLY)           *
*              4 - UCBFLG UCBNRY 'ON' (UNCONDITIONALLY)         *
*              8 - UCBFLG UCBNRY + UCBITF 'OFF'                 *
*             12 - UCBFLG UCBNRY 'OFF'                          *
*             20 - UCBFLG UCBTICBT 'ON'                         *
*             28 - UCBFLG UCBTICBT 'OFF'                        *
*             36 - UCBFLG UCBDDRSW 'ON'                         *
*             44 - UCBFLG UCBDDRSW 'OFF'                        *
*             52 - UCBFLG UCBQISCE 'ON'                         *
*             60 - UCBFLG UCBQISCE 'OFF'                        *
*             68 - UCBFLG UCBIVRR 'ON'                          *
*             76 - UCBFLG UCBIVRR 'OFF'                         *
*             84 - UCBFLG UCBIVRS 'ON'                          *
*             92 - UCBFLG UCBIVRS 'OFF'                         *
*            100 - UCBFLG UCBIORST 'ON'                         *
*            108 - UCBFLG UCBIORST 'OFF'                        *
*            116 - UCBFLG UCBITF 'ON'                           *
*            124 - UCBFLG UCBITF 'OFF'                          *
*            128 - UCBFLG UCBRVRS- UCBNRY,UCBIVRS 'ON'  @OZ03863*
*                                  UNDER SAME LOCK      @OZ03863*
*            136 - UCBFLG UCBRVRS- UCBNRY,UCBIVRS 'OFF' @OZ03863*
*                                  UNDER SAME LOCK      @OZ03863*
*                                                               *
*****************************************************************
         SPACE
         USING PSA,LOC0                                         Y30CQLB
         USING CVT,WORK12                                       Y30CQLB
         SPACE
         B     BRUCBFLG(PARM5)     BRANCH TO SELECTED OPERATION
         SPACE
BRUCBFLG B     IECIFNRC            UCBNRY 'ON' CONDITIONALLY
         SPACE
         B     IECIFNRN            UCBNRY 'ON' UNCONDITIONALLY
         SPACE
         B     IECIFNIS            SPECIAL TAPE CALL
         SPACE
IECIFNRF NI    UCBFLA,XFF-UCBNRY   TURN NOT READY 'OFF'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFTIN OI    UCBFLC,UCBTICBT     TURN CE/DE INTERRUPT 'ON'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFTIF NI    UCBFLC,XFF-UCBTICBT TURN CE/DE INTERRUPT 'OFF'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFDDN OI    UCBFLC,UCBDDRSW     TURN VOLUME SWITCH PENDING
*                                  *'ON'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFDDF NI    UCBFLC,XFF-UCBDDRSW TURN VOLUME SWITCH PENDING
*                                  *'OFF'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFQIN OI    UCBFLA,UCBQISCE     TURN QUIESCE DEVICE 'ON'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFQIF NI    UCBFLA,XFF-UCBQISCE TURN QUIESCE DEVICE 'OFF'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFIVN OI    UCBFLC,UCBIVRR      TURN INTERV REQ MSG SENT 'ON'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFIVF NI    UCBFLC,XFF-UCBIVRR  TURN INTERV REQ MSG SENT 'OFF'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFRSN OI    UCBFLC,UCBIVRS      TURN INTERV REQ MSG NEEDED 'ON'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFRSF EQU   *
         NI    UCBFLC,XFF-UCBIVRS  TURN INTERV REQ MSG NEEDED 'OFF'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFION EQU   *                                               @Y30CQLB
         L     WORK12,FLCCVT       GET CVT POINTER             @Y30CQLB
         B     IECIFIO1            GO TEST IF CRH IS ACTIVE    @Y30CQLB
         SPACE
IECIFIOF EQU   *                                               @Y30CQLE
         L     WORK12,FLCCVT       GET CVT POINTER             @Y30CQLE
         B     IECIFIO2            GO TEST IF CRH IS ACTIVE    @Y30CQLB
         SPACE
IECIFITN OI    UCBFLC,UCBITF       TURN INTERCEPT 'ON'
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFITF B     INTRCEPT            TURN INTERCEPT 'OFF'
         SPACE
IECIFRVN OI    UCBFLC,UCBIVRS      TURN 'ON' MSG. ISSUED       @OZ03863
         B     IECIFNRN            GO TEST NOT READY  @OZ06201,@ZA12398
         SPACE
IECIFRVF NI    UCBFLA,XFF-UCBNRY   TURN 'OFF' NOT READY        @OZ03863
         NI    UCBFLC,XFF-UCBIVRS  TURN 'OFF' MSG. ISSUED      @OZ03863
         B     UNLOCK              GO RELEASE LOCK
         EJECT
         SPACE 5
IECIFIO1 EQU   *
         SPACE
         L     SAVE13,CVTCRCA      GET ADDRESS OF CRCA,IF ANY  @Y30CQLB
         LTR   SAVE13,SAVE13       IS CRH ACTIVE NOW?          @Y30CQLE
         BNZ   UNLOCK              YES, LET CRH SET            @Y30CPLB
         SPACE
         OI    UCBFLB,UCBIORST     TURN I/O RESTART 'ON'       @Y30CQLB
         B     UNLOCK              GO RELEASE LOCK
         SPACE
IECIFIO2 EQU   *
         L     SAVE13,CVTCRCA      GET ADDRESS OF CRCA,IF ANY  @Y30CQLB
         LTR   SAVE13,SAVE13       IS CRH ACTIVE ?             @Y30CQLB
         BNZ   UNLOCK              YES,LET CRH SET U           @Y30CQLB
         DROP  LOC0,WORK12                                     @Y30CQLB
         NI    UCBFLB,XFF-UCBIORST TURN I/O RESTART 'OFF'      @Y30CQLB
         B     UNLOCK              GO RELEASE LOCK             @Y30CQLB
         TITLE 'IECVGENA - (UCBFLG) NOT READY /ON/ COND. AND UNCOND.'
*****************************************************************
*                                                               *
*  TURN NOT READY 'ON' EITHER CONDITIONALLY OR UNCONDITIONALLY. *
*  ALL TESTS MADE IN CALLERS PROGRAM ARE  REPEATED AFTER LOCK   *
*  ACQUISITION.                                                 *
*                                                               *
*****************************************************************
         SPACE
IECIFNRC TM    UCBFLC,UCBUDE       IS THERE UNSOLICED DEV END
         BO    UNLOCK              YES, EXIT IMMEDIATELY
         SPACE
IECIFNRN OI    UCBFLA,UCBNRY       TURN NOT READY 'ON'
         SPACE
         B     UNLOCK              GO RELEASE LOCK
         TITLE 'IECVGENA - (UCBFLG) SPECIAL TAPE CALL AND UCBITF OFF'
*****************************************************************
*                                                               *
*        SPECIAL TAPE CALL                                      *
*              TURN NOT READY AND INTERCEPT CONDITION 'OFF'.    *
*              ALL TESTS MADE IN CALLERS PROGRAM ARE REPEATED   *
*              AFTER LOCK ACQUISITION.                          *
*                                                               *
*        TURN INTERCEPT CONDITION 'OFF'.                        *
*                                                               *
*        RELEASE RESOURCES IF NECESSARY.                        *
*                                                               *
*****************************************************************
         SPACE
IECIFNIS TM    UCBTBYT3,UCB3TAPE   IS IT A TAPE DEVICE
         BNO   UNLOCK              NO, EXIT IMMEDIATELY
         SPACE
         TM    UCBFLA,UCBNRY       IS IT NOT READY CONDITION
         BNO   UNLOCK              NO, EXIT IMMEDIATELY
         SPACE
         TM    UCBFLC,UCBITF       IS IT INTERCEPT CONDITION
         BNO   UNLOCK              NO, EXIT IMMEDIATELY
         SPACE
         NI    UCBFLA,XFF-UCBNRY   TURN NOT READY 'OFF'
         SPACE
INTRCEPT TM    UCBFLC,UCBWAA       IS WORK AREA APPENDED
         BNO   NOWAA               NO, SKIP RESOURCE RELEASE CODE
         SPACE
         L     RSRC1,UCBIOQ        GET ADDR OF ERP WORK AREA
         LA    BLKLOK11,BLKSIZE    GET BLOCK SIZE OF RESOURCE
         SPACE
         USING PSA,LOC0
         L     SAVE13,PSALCCAV     GET PTR TO LCCA IN PSA
         DROP  LOC0
         SPACE
         USING LCCA,SAVE13
         L     SAVE13,LCCACPUS     GET ADDR OF CPU SAVE AREA
*                                  *PTR FROM LCCA
         USING WSAC,SAVE13
         L     SAVE13,WSACIOS      GET ADDR OF IOS SAVE AREA
*                                  *IN WSAC
         DROP  SAVE13
         SPACE
         STM   WORK10,RSRC1,0(SAVE13)  SAVE REGS 10-1
         SPACE
         USING CVT,BASE15
         L     BASE15,CVTPTR       GET CVTPTR
         L     BASE15,CVTIXAVL     GET PTR TO IOCOM IN CVT
         SPACE
         USING IOCOM,BASE15
         L     BASE15,IOCORMGT     GET ADDR OF IOS STG MGR
         SPACE
         BAL   RTN14,K04(BASE15)   CALL IOS STORAGE MANAGER
         SPACE
         LM    WORK10,RSRC1,0(SAVE13)  RESTORE REGS 10-1
         SPACE
         USING IECVGENA,BASE15     RE-ESTABLISH ADDRESSABILITY
         SPACE
         NI    UCBFLC,XFF-UCBWAA   TURN WORK AREA APPENDED 'OFF'
         SPACE
NOWAA    NI    UCBFLC,XFF-UCBITF   TURN INTERCEPT CONDITION 'OFF'
         SPACE
         B     UNLOCK              GO RELEASE LOCK AND RETURN
         TITLE 'IECVGENA - (VARY) ESTABLISH ADDRESSABILITY'
*****************************************************************
*                                                               *
*        ESTABLISH ADDRESSABILITY                               *
*                                                               *
*        ACQUIRE UCB LOCK                                       *
*                                                               *
*        THE FOLLOWING USINGS APPEAR AT CSECT NAME:             *
*              USING IECVGENA,BASE15                            *
*              USING UCB,UCB4                                   *
*                                                               *
*****************************************************************
         SPACE
         USING VARYPARM,PARM5
         USING CVT,CVT6
         SPACE
VARYPATH BAL   LINK9,GETLOKSV      GO OBTAIN LOCK (SAVE 13 & 14)
         TITLE 'IECVGENA - (VARY)(CONDITIONAL) RESERVE TESTS'
*****************************************************************
*                                                               *
*        VARY OFFLINE CONDITIONALLY RESERVED DEVICE TESTS       *
*                                                               *
*****************************************************************
         SPACE
         SPACE
         CLI   VARYFUNC,VARYOFFC REQUEST FOR ONLINE OR OFFLINE @ZA10460
*                                UNCONDITIONAL                 @ZA10460
         BNE   APTSERCH            YES, SKIP RESERVED TESTS    @ZA10460
         TM    UCBTBYT3,UCB3DACC   IS THIS DA DEVICE
         BNO   APTSERCH            NO, GO FIND DEVICE ADDR
         SPACE
         TM    UCBTBYT2,UCBRR      IS THIS SHARED DEVICE
         BNO   APTSERCH            NO, GO FIND DEVICE ADDR
         SPACE
         CLC   UCBCPU(K01),VARYCPU  LAST SIO THIS CPU
         BNE   APTSERCH            NO, GO FIND DEVICE ADDR
         SPACE
         TM    UCBFLB,UCBRESVH     HARDWARE RESRVE OUTSTANDING?@YM03341
         BO    SETRC20             YES, GO SET RETURN CODE FOR @YM03341
*                                  *RESERVED DEVICE
         TM    UCBFLA,UCBSAP+UCBACTV  STAND ALONE SEEK
*                                  *OR DATA TRANSFER
         BZ    APTSERCH            NO, GO FIND DEVICE ADDR
         SPACE
SETRC20  LA    WORK8,RTNCD20       RETURN CODE = 20
*                                  *DEVICE IS RESERVED
         SPACE
         B     SETRTNCD            GO SET ERROR RETURN CODE
         TITLE 'IECVGENA - (VARY) SEARCH AND VERIFY UNIT ADDRESS'
*****************************************************************
*                                                               *
*        SEARCH AND VERIFY UNIT ADDRESS                         *
*                                                               *
*****************************************************************
         SPACE
APTSERCH SLR   WORK10,WORK10       CLEAR WORK REG
         IC    WORK10,UCBLCI       GET LCH INDEX
         SLL   WORK10,LCHELP2      MULTIPLY INDEX BY POWER OF 2
         SPACE
         L     WORK8,CVTILCH       GET LCH TABLE PTR
         USING LCH,WORK8
         L     WORK8,LCHTCH(WORK10)  GET PTR
*                                  *TO AVAILABLE PATH TABLE
         DROP  WORK8
         SPACE
APTNEXT  LH    WORK10,0(WORK8)     GET APT ENTRY
         SPACE
         LTR   WORK10,WORK10       IS THIS END OF TABLE
         BP    BUILDDEV            NO, GO CHECK DEV ADDR
         SPACE
         LA    WORK8,RTNCD12       SET RETURN CODE = 12
*                                  *INVALID DEVICE ADDR
         B     SETRTNCD            GO SET ERROR RETURN CODE
         SPACE
BUILDDEV STH   WORK10,VARYWCHA     SAVE CHANNEL AND POSSIBLE ALT CU
         SPACE
         TM    VARYWUA,VARYWACU    IS THIS A SHARED SELECTOR
*                                  *SUBCHANNEL OF THE 2870
         BNO   NOALTCU             NO, GET FULL UNIT ADDRESS
         SPACE
         MVN   VARYWUA(K01),VARYUA  SET UNIT ADDR
         SPACE
         B     CHECKDEV            GO, CHECK DEVICE ADDR
         SPACE
NOALTCU  MVC   VARYWUA(K01),VARYUA  SET FULL CONTROL UNIT ADDR
         SPACE
CHECKDEV CLC   VARYCHAN(K02),VARYWCHA  ARE DEV ADDRS EQUAL
         BE    BUILDBIT            YES, GO BUILD PATH BIT
         SPACE
         LA    WORK8,K02(WORK8)    POINT TO NEXT ENTRY
         SPACE
         B     APTNEXT             GO GET NEXT ENTRY
         TITLE 'IECVGENA - (VARY) BUILD PATH BIT'
*****************************************************************
*                                                               *
*        BUILD PATH BIT FOR ALL FUNCTIONAL REQUESTS             *
*                                                               *
*****************************************************************
         SPACE
BUILDBIT SLR   WORK8,WORK8         CLEAR WORK REG
         IC    WORK8,VARYCPU       GET CPU ID
         ALR   WORK8,WORK8         DOUBLE CPU ADDR
         SPACE
         N     WORK10,PATHBMSK     ISOLATE PATH BIT
         SLL   WORK10,12           ALIGN PATH BIT
         SRL   WORK10,0(WORK8)     ALIGN BIT TO CPU
         TITLE 'IECVGENA - (VARY) SET PATH ON/OFF LINE'
*****************************************************************
*                                                               *
*        SET PATH ON/OFF LINE                                   *
*                                                               *
*****************************************************************
         SPACE
         LH    WORK8,UCBCHM        GET CHANNEL MASK
         N     WORK8,HOHWMASK      AND OUT HI ORDER HALFWORD
         SPACE
         CLI   VARYFUNC,VARYON     VARY ONLINE
         BNE   OFFLINE             NO, GO DO OFFLINE
         SPACE
         X     WORK10,GENMASK      SET ANDING MASK             @YM08184
         NR    WORK10,WORK8        MAKE COMPOSITE ONLINE MASK  @YM08184
         SPACE
         L     LINK9,UCBEXTPT      GET UCB EXT PTR
         LA    LINK9,0(LINK9)      CLEAR HIGH ORDER BYTE
         USING UCBCMEXT,LINK9
         XC    UCBPMSK,UCBPMSK     ZERO MESSAGES ISSUED MASK
         DROP  LINK9
         SPACE
         L     WORK8,CVTCRCA       GET ADDRESS OF CRCA,IF ANY   Y30CQLB
         LTR   WORK8,WORK8         IS CRH ACTIVE NOW?           Y30CQLB
         BNZ   SETRC00             YES, BYPASS-LET CRH SET UCB  Y30CQLB
         SPACE
         NI    UCBFLB,XFF-UCBIORST MAKE DEVICE AVAILABLE FOR I/O
         SPACE
         B     SETRC00             GO SET SUCCESSFUL COMPLETION
         SPACE
OFFLINE  OR    WORK10,WORK8        MAKE COMPOSITE OFFLINE MASK
         OR    WORK8,WORK10        MAKE COPY OF MASK
         SPACE
         X     WORK8,PATHTEST      ARE ALL PATHS OFFLINE
         BZ    LASTPATH            YES, GO SET LAST PATH
         SPACE
SETRC00  SLR   WORK8,WORK8         SET SUCCESSFUL RETURN CODE
         SPACE
         B     SETMASK             GO SET OFFLINE CHANNEL MASK
         SPACE
LASTPATH CLI   VARYFUNC,VARYOFFU   OFFLINE UNCONDITIONALLY
         BE    OFFUNCON            YES, GO SET RETURN CODE
         SPACE
         LA    WORK8,RTNCD08       SET RETURN CODE = 8
*                                  *LAST PATH CANT BE SET OFFLINE
         B     SETRTNCD            GO SET ERROR RETURN CODE
         SPACE
OFFUNCON LA    WORK8,RTNCD04       SET RETURN CODE = 4
*                                  *LAST PATH HAS BEEN SET OFFLINE
         TITLE 'IECVGENA - (VARY) SET PATH MASK AND RETURN CODE'
*****************************************************************
*                                                               *
*        SET PATH PATH MASK AND RETURN CODE                     *
*                                                               *
*****************************************************************
         SPACE
SETMASK  SLL   WORK10,16           ALIGN PATH MASK
         SPACE
UPDATCHM L     WORK7,UCBCHM        GET EXISTING CHNL MASK
         L     LINK9,CSANDCHM      GET ANDING MASK
         SPACE
         NR    LINK9,WORK7         ZERO CHANNEL MASK
         OR    LINK9,WORK10        SET NEW CHANNEL MASK
         SPACE
         CS    WORK7,LINK9,UCBCHM  ATTEMPT TO UPDATE MASK
         BNE   UPDATCHM            LOOP UNTIL SWAP HAS COMPLETED
         SPACE
SETRTNCD ST    WORK8,RETURNCD(WORK2)  SET RETURN CODE
*                                  *IN REG 15 SAVE AREA
         B     UNLOCK              GO RELEASE UCBLOCK
*                                  *AND RETURN TO CALLER
         SPACE
         DROP  PARM5,CVT6
         TITLE 'IECVGENA - (UCBFLG AND VARY) OBTAIN UCB LOCK'
*****************************************************************
*                                                               *
*        OBTAIN UCB LOCK SUBROUTINE                             *
*                                                               *
*        SAVE UCB LOCK WORD ADDRESS IN FRR PARAMETER            *
*                                                               *
*****************************************************************
         SPACE
GETLOKSV LR    WORK2,SAVE13        SAVE SAVEAREA PTR
         LR    WORK3,RTN14         SAVE RETURN ADDR PTR
         SPACE
         TM    UCBWGT,UCBMTPXP     DOES DEVICE HAVE MULT EXP
         BNO   GETLOCK             NO MULTIPLE EXPOSURES
         SPACE
         L     BLKLOK11,UCBBASE    GET BASE UCB ADDR
         SPACE
         USING UCB,BLKLOK11
         LA    BLKLOK11,UCBLOCK    GET UCB LOCK WORD ADDR
*                                  *FROM BASE UCB
         B     BASELOCK            GO RELEASE LOCK
         DROP  BLKLOK11
         SPACE
GETLOCK  LA    BLKLOK11,UCBLOCK    GET UCB LOCK WORD ADDR
         SPACE
BASELOCK LR    WORK7,BLKLOK11      SAVE LOCK WORD ADDR FOR FRR
         SPACE
OBTNLOCK SETLOCK OBTAIN,TYPE=IOSUCB,MODE=UNCOND,ADDR=(11),             X
               RELATED=(UCB,IECVGENA(RELSLOCK,IOSGEN))
         SPACE
         SPACE
         BAL   RTN14,ADDFRR        GO SET FRR
         USING GENAFRRS,WORK12
         ST    WORK7,GENAFLOK      SAVE UCB LOCK WORD ADDR     @ZA12145
         OI    GENAFLAG,GFRRULOK   SET UCB LOCK HELD INDICATOR @ZA12145
         BR    LINK9               RETURN TO INTERNAL CALLER
         TITLE 'IECVGENA - (UCBFLG AND VARY) RELEASE UCB LOCK'
*****************************************************************
*                                                               *
*        RELEASE UCB LOCK                                       *
*                                                               *
*****************************************************************
         SPACE
UNLOCK   TM    UCBWGT,UCBMTPXP     DOES DEVICE HAVE MULT EXP
         BNO   NOMTPXP             NO MULTIPLE EXPOSURES
         SPACE
         L     BLKLOK11,UCBBASE    GET BASE UCB ADDR
         SPACE
         USING UCB,BLKLOK11
         LA    BLKLOK11,UCBLOCK    GET UCB LOCK WORD ADDR
*                                  *FROM BASE UCB
         B     DELETFRR            GO RELEASE LOCK
         DROP  BLKLOK11
         SPACE
NOMTPXP  LA    BLKLOK11,UCBLOCK    GET UCB LOCK WORD ADDR
DELETFRR BAL   RTN14,DELFRR        GO DELETE FRR
         SPACE
         SPACE
RELSLOCK SETLOCK RELEASE,TYPE=IOSUCB,ADDR=(11),                        X
               RELATED=(UCB,IECVGENA(OBTNLOCK,IOSGEN))
         SPACE
         LR    SAVE13,WORK2        RESTORE SAVEAREA PTR
         LR    RTN14,WORK3         RESTORE RETURN ADDR PTR
         SPACE
         B     NOLOCK              GO RETURN TO CALLER
         SPACE
         DROP  UCB4
         DROP  WORK12
         TITLE 'IECVGENA - (SWAP) ESTABLISH ADDRESSABILITY'
*****************************************************************
*                                                               *
*        ESTABLISH ADDRESSABILITY                               *
*                                                               *
*        SAVE SAVE AREA POINTER FOR FRR.                        *
*                                                               *
*        GET UCB LOCK FOR 'FROM ' UCB                          @ZA12145
*                                                              @ZA12145
*        TEST PENDING SENSE AND OTHER UCB ACTIVE BITS;         @ZA12145
*        LOOPING UNTIL BOTH UCB'S ARE FOUND TO BE              @ZA12145
*        INACTIVE, THEN PREPARE TO STOP THE OTHER CPU          @ZA12145
*                                                               *
*        THE FOLLOWING USINGS APPEAR AT CSECT NAME:             *
*              USING IECVGENA,BASE15                            *
*                                                               *
*****************************************************************
         SPACE
         USING PSA,LOC0                                        @ZA12145
         USING GENAFRRS,FRRWA3                                 @ZA12145
         USING SWAPWORK,WORK8                                  @ZA12145
SWAP     EQU   *                                               @ZA12145
         SPACE 2
*  TURN ON UCBNRY IN FROMUCB AND TOUCB USING COMPARE AND SWAP LOGIC
         L     WORK2,UCBCHAN-UCB(UCBTO4)  GET FIELD TO UPDATE  @ZA12145
SWAP001  LR    WORK3,WORK2            PUT INTO CONTROL REG     @ZA12145
         O     WORK3,NOTREADY         TURN ON UCBNRY BIT       @ZA12145
         CS    WORK2,WORK3,UCBCHAN-UCB(UCBTO4) SET FLAG IN UCB @ZA12145
         BNE   SWAP001                                         @ZA12145
         CR    UCBTO4,UCBFROM6        ARE UCB ADDRS EQUAL ?    @ZA12145
         BE    NOSWAP                 YES, EXIT IMMEDIATELY    @ZA12145
         L     WORK2,UCBCHAN-UCB(UCBFROM6) NO,SET OTHR NOT RDY @ZA12145
SWAP002  LR    WORK3,WORK2            PUT INTO CONTROL REG     @ZA12145
         O     WORK3,NOTREADY         TURN ON UCBNRY BIT       @ZA12145
         CS    WORK2,WORK3,UCBCHAN-UCB(UCBFROM6)  SET FROM UCB @ZA12145
         BNE   SWAP002                                         @ZA12145
         SPACE
         LR    WORK2,SAVE13           SAVE SAVEAREA PTR        @ZA12145
         LR    PARM5,RTN14            SAVE RET ADDR PTR        @ZA12145
         BAL   RTN14,ADDFRR           GO SETFRR                @ZA12145
         LR    FRRWA3,WORK12          GET ADDR OF FRR WORK AREA@ZA12145
         ST    WORK8,GENAWORK         SAVE WORK AREA ADDR      @ZA12145
         OI    GENAFLAG,GFRRSWAP      TO LET FRR RTN KNOW WE'RE IN
*                                     SWAP                     @ZA12145
         SPACE
TESTPSNS TM    UCBFLA-UCB(UCBFROM6),UCBPSNS  PENDING SENSE ON FROM DEV
         BO    TESTPSNS               YES, LOOP TILL CLEAR     @ZA12145
         TM    UCBFLA-UCB(UCBTO4),UCBPSNS    PENDIING SENSE ON TO DEV
         BO    TESTPSNS               YES, LOOP TILL CLEAR     @ZA12145
         SPACE
         USING UCB,UCBFROM6           SET ADDR ABILITY TO FROM UCB
         LA    BLKLOK11,UCBLOCK       LOCKWORD                 @ZA12145
SWAPGETU SETLOCK OBTAIN,TYPE=IOSUCB,ADDR=(11),MODE=UNCOND,             C
               RELATED=(UCB,IECVGENA(SWAPRELU,IOSGEN))         @ZA12145
         OI    GENAFLAG,GFRRULOK      TURN ON LOCK HELD INDIC  @ZA12145
         ST    BLKLOK11,GENAFLOK      SAVE LOCK WORD ADDR      @ZA12145
         SPACE
*****************************************************************
*        TEST ALL UCB ACTIVE BITS (UCBBSY,UCBPSNS, AND          *
*         UCBACTV (ALL IN UCBFLA).                              *
*        WHEN ALL ACTIVE BITS ARE OFF IN BOTH UCB'S, PROCEED   @ZA12145
*        WITH THE SWAP; OTHERWISE, RELEASE THE LOCK AND RETURN  *
*        TO THE PENDING SENSE TESTS.                            *
*****************************************************************
         SPACE
         TM    UCBFLA-UCB(UCBFROM6),ACTIVA                     @ZA12145
         BNZ   ACTIVE                                          @ZA12145
         TM    UCBFLA-UCB(UCBTO4),ACTIVA                       @ZA12145
         BZ    STOPCPU                                         @ZA12145
ACTIVE   BAL   LINK9,RELULOK          NO, RELEASE LOCK         @ZA12145
         B     TESTPSNS                                        @ZA12145
         EJECT
STOPCPU  EQU   *
         SPACE
         SPACE
         SR    WORK2,WORK2            CLEAR REGISTER           @ZA12145
         LH    WORK2,PSACPUSA         GET CPU ADDR             @ZA12145
         LA    CPU1,K01               GET MASK-REVERSE CPUIDS  @ZA12145
         XR    WORK2,CPU1             GET OTHER CPU-ID         @ZA12145
         SLL   WORK2,K02              MULTIPLY BY FOUR         @ZA12145
         L     WORK12,FLCCVT          GET CVT ADDR             @ZA12145
         USING CVT,WORK12                                      @ZA12145
         L     WORK12,CVTPCCAT        GET PCCAVT ADDR          @ZA12145
         DROP  WORK12                                          @ZA12145
         L     CPU1,ZERO(WORK2,WORK12)  GET PCCA ADDR FOR THIS CPU
*                                                              @ZA12145
         LTR   CPU1,CPU1              ADDR EQUAL ZERO ?        @ZA12145
         BZ    BALRSIGP               YES, BALR TO SIGP RTN    @ZA12145
         LA    WORK12,GENASIGP         GET ADDR OF SIGP RTN    @ZA12145
         LA    IOQE11,SWAPSAVE+K20     ADR OF FRRWA FOR SIGPRTN@ZA12145
         MVC   SWAPSAVE+K20(GENASIZE),0(FRRWA3)                @ZA12145
*                  MOVE TO SWAPAREA SO THAT SIGPRTN CAN USE IT @ZA12145
*                  SAVE REGISTERS NEEDED BY SIGP ROUTINE       @ZA12145
         STM   FRRWA3,BASE15,SWAPSR03 SAVE REGISTERS           @ZA12145
         SPACE
         RISGNL SERIAL,CPU=(1),EP=(12),PARM=(11)               @ZA12145
         LR    WORK2,RC15             SAVE RET CODE            @ZA12145
         LM    FRRWA3,BASE15,SWAPSR03 RESTORE REGISTERS        @ZA12145
         MVC   0(GENASIZE,FRRWA3),SWAPSAVE+K20 RESTORE IN STACK@ZA12145
         LTR   WORK2,WORK2                                     @ZA12145
         BZ    RELLOCK                RETURN CODE GOOD         @ZA12145
         CH    WORK2,EIGHT                                     @ZA12145
         BE    ERRORET                FUNCTION UNSUCCESSFUL    @ZA12145
BALRSIGP ST    FRRWA3,SWAPSR03        SAVE FRRWA ADDR          @ZA12145
         LR    WORK1,FRRWA3           ADDR OF PARM FOR SIGPRTN @ZA12145
         LA    WORK12,GENASIGP         GET ADDR OF SIGP RTN    @ZA12145
         OI    GENAFLG2,GFRRBRCH      SET BALR INDICATOR       @ZA12145
         BALR  RTN14,WORK12           BRANCH ENTER SIGP RTN    @ZA12145
         SPACE
         L     FRRWA3,SWAPSR03        RESTORE FRR WROKAREA ADDR@ZA12145
         L     BASE15,GENAFBAS        RESTORE ADDRESSABILITY   @ZA12145
         NI    GENAFLG2,XFF-GFRRBRCH  TURN OFF BALR INDICATOR  @ZA12145
         SPACE
RELLOCK  BAL   LINK9,RELULOK          GO RELEASE LOCK          @ZA12145
         SPACE
         TM    GENAFLAG,GFRRACTV      WAS SWAP ATTEMPTED?      @ZA12145
         BZ    TSTSTAT                YES, BRANCH AROUND       @ZA12145
         NI    GENAFLAG,GFRRACTV      NO, TURN OFF FLAG AND DO
         B     TESTPSNS               WHOLE PROCEDURE AGAIN    @ZA12145
         EJECT
TSTSTAT  TM    GENAFLAG,GFRRUEND      SWAP FAIL                @ZA12145
         BZ    ERRORET2             YES, SET ERROR RETURN      @ZA12145
         SPACE 2
         LR    WORK12,FRRWA3        FRR WKAREA ADR FOR SWAPLCH @ZA12145
         BAL   RTN14,SWAPLCH        GO, SWAP LCH'S             @ZA12145
         EJECT
GOODRET  SR    WORK2,WORK2            INDICATE TO DDR THAT     @ZA12145
         ST    WORK2,SWAPRC           SWAP WAS SUCCESSFUL      @ZA12145
         B     CLEANUP                GO TO RETURN             @ZA12145
         SPACE 2
ERRORET  BAL   LINK9,RELULOK          GO RELEASE LOCK          @ZA12145
ERRORET2 LA    WORK2,K04              INDICATE TO DDR THAT     @ZA12145
         ST    WORK2,SWAPRC           SWAP FAILED              @ZA12145
CLEANUP  L     WORK2,GENAFR05         SAVE RETURN ADDR         @ZA12145
         L     WORK7,GENAFR13         SAVE SAVEAREA PTR        @ZA12145
         BAL   RTN14,DELFRR           GO TO DELETE FRR         @ZA12145
         LR    SAVE13,WORK7           RESTORE SAVE AREA PTR    @ZA12145
         BR    WORK2                  RETURN TO CALLER         @ZA12145
         SPACE
         EJECT
RELULOK  EQU   *                                               @ZA12145
         LA    BLKLOK11,UCBLOCK       LOCKWORD                 @ZA12145
SWAPRELU SETLOCK RELEASE,TYPE=IOSUCB,ADDR=(11),                @ZA12145C
               RELATED=(UCB,IECVGENA(SWAPGETU,IOSGEN))         @ZA12145
         NI    GENAFLAG,XFF-GFRRULOK  TURN OFF LOCK HELD       @ZA12145
         BR    LINK9                  RET TO CALLER            @ZA12145
         SPACE 3
NOSWAP   SR    WORK2,WORK2            INDICATE TO DDR THAT     @ZA12145
         ST    WORK2,SWAPRC           SWAP WAS SUCCESSFUL      @ZA12145
         BR    RTN14                  RETURN TO CALLER         @ZA12145
         EJECT
*****************************************************************
*                                                               *
*        ESTABLISH ADDRESSABILITY TO CONTROL BLOCKS            @ZA12145
*        ACQUIRE LCH LOCK FOR TO UCB. THIS UCB NOW             @ZA29054
*        CONTAINS THE LCH INDEX FOR THE LCH THAT WILL          @ZA29054
*        CONTAIN ANY QUEUED REQUESTS RELATED TO THE            @ZA29054
*        FROM DEVICE.                                          @ZA29054
*                                                               *
*****************************************************************
         USING PSA,LOC0
         USING UCB,UCBOPT7
         USING IOCOM,IOCOM5
         USING SWAPWORK,WORK8
         USING IOSB,WORK2
         USING LCH,LCH1
         USING IOQ,IOQE11
         USING GENAFRRS,WORK12
SWAPLCH  CLC   UCBLCI-UCB(K01,UCBTO4),UCBLCI-UCB(UCBFROM6)
*                                  ARE LCH INDEXES THE SAME    @ZA12145
         BNE   DOSWAP              NO, CONTINUE TO SWAP LCH'S  @ZA12145
         OI    GENAFLAG,GFRRLST+GFRRLEND                       @ZA12145
*                  INDICATE GOOD SWAP IN SWAP STATUS BITS      @ZA12145
         B     LCHRET              EXIT IMMEDIATELY            @ZA12145
DOSWAP   STM   LOC0,BASE15,SWAPSSAV  SAVE REGISTERS            @ZA12145
         LR    UCBOPT7,UCBTO4      COPY 'TO' UCB               @ZA29054
         SPACE
         L     PARM5,FLCCVT        GET CVT ADDR                @ZA12145
         USING CVT,PARM5                                       @ZA12145
         L     PARM5,CVTIXAVL      GET IOCOM ADDR              @ZA12145
         USING IOCOM,IOCOM5
         SPACE
         BAL   LINK9,LOCKLCH       GO GET LCH LOCK
         SPACE
         OI    GENAFLAG,GFRRLST    SET SWAP STARTED FLAG       @ZA12145
         TITLE 'IECVGENA - (SWAP) LCH DEQUEUE ROUTINE'
*****************************************************************
*                                                               *
*        DEQUEUE RELATED IOQE'S FROM LCH AND BUILD A QUEUE      *
*        IN PREPARATION FOR SUBSEQUENT ENQUEUE THE OTHER LCH.   *
*                                                               *
*****************************************************************
         SPACE
         LR    WORK10,WORK8        POINT TO QUEUE HEADER
         LR    IOQE11,LCH1         COPY LCH ADDR
ADJPRFX  AL    UCBFROM6,PREFIX     ADJUST TO COMMON UCB        @Y30ANLB
         SPACE
NEXTIOQE L     IOQE11,IOQLNK       GET IOQE PTR
         XC    IOQLNK-IOQ(K04,WORK10),IOQLNK-IOQ(WORK10)  CLEAR PTR
         SPACE
         LTR   IOQE11,IOQE11       IS THERE AN IOQE
         BNP   DQEXIT              NO, EXIT NOW
         SPACE
         L     WORK2,IOQIOSB       GET IOSB ADDR
         SPACE
         C     UCBFROM6,IOSUCB     IS THIS RELATED TO 'FROM' DEV
         BNE   NEXTIOQE            NO, GO CHECK NEXT IOQE
         SPACE
         SL    UCBFROM6,PREFIX     ADJUST TO UCB PREFIX        @Y30ANLB
         SPACE
         ST    IOQE11,IOQLNK-IOQ(WORK10)  SET BACK POINTER
         LR    WORK10,IOQE11       SAVE IOQE ADDR
         SPACE
         L     LINK9,IOCIOSDQ      GET DEQUEUE ROUTINE PTR
         ST    LINK9,SWAPIOS       SAVE FOR COMMON ROUTINE
         SPACE
         BAL   LINK9,CALLIOS       GO CALL IOS
         SPACE
         B     ADJPRFX             GO GET NEXT IOQE PTR
         SPACE
DQEXIT   SL    UCBFROM6,PREFIX     ADJUST TO UCB PREFIX        @Y30ANLB
         SPACE
         BAL   LINK9,UNLOKLCH      GO RELEASE LOCK
         SPACE
         OC    SWAPQPTR(K04),SWAPQPTR  ANY ON QUEUE
         BZ    LCHEXIT             NO, EXIT IMMEDIATELY        @ZA12145
         TITLE 'IECVGENA - (SWAP) LCH ENQUEUE ROUTINE'
*****************************************************************
*                                                               *
*        SAVE SAVE AREA POINTER FOR FRR.                        *
*                                                               *
*        ACQUIRE LCH LOCK FOR 'FROM' UCB.                       *
*                                                               *
*        ENQUEUE RELATED IOQE'S TO LCH AND REMOVE               *
*        EACH IOQE FROM TEMPORARY QUEUE.                        *
*                                                               *
*****************************************************************
         SPACE
         LR    UCBOPT7,UCBFROM6    COPY 'FROM' UCB ADDR        @ZA29054
         SPACE
         BAL   LINK9,LOCKLCH       GO GET LCH LOCK
         SPACE
NEXTNQ   L     IOQE11,SWAPQPTR     GET IOQE PTR
         SPACE
         LTR   IOQE11,IOQE11       ANY ON QUEUE
         BZ    NQEXIT              NO, EXIT
         SPACE
         MVC   SWAPQPTR(K04),IOQLNK  RESET POINTER TO FIRST
         L     LINK9,IOCIOSEQ      GET ENQUEUE ROUTINE ADDR
         ST    LINK9,SWAPIOS       SAVE FOR COMMEN ROUTINE
         SPACE
         BAL   LINK9,CALLIOS       GO CALL IOS
         SPACE
         B     NEXTNQ              GO GET NEXT IOQE PTR
         SPACE
NQEXIT   BAL   LINK9,UNLOKLCH      GO RELEASE LOCK
LCHEXIT  OI    GENAFLAG,GFRRLEND   SET SWAP ENDED FLAG         @ZA12145
         LM    LOC0,BASE15,SWAPSSAV  RESTORE REGISTERS         @ZA12145
         SPACE
LCHRET   BR    RTN14               RETURN TO CALLER            @ZA12145
         TITLE 'IECVGENA - (SWAP) CALL IOS ENQUEUE AND DEQUEUE'
*****************************************************************
*                                                               *
*        THIS IS A COMMON ROUTINE TO CALL IOS                   *
*        DEQUEUE AND ENQUEUE ROUTINES.                          *
*                                                               *
*        THE FOLLOWING REGISTERS MUST BE SET FOR IOS:           *
*              LCH1    - LCH ADDR                               *
*              WORK2   - IOSB ADDR (DEQUEUE ONLY)               *
*              WORK3   - LCCA ADDR                              *
*              UCBTO4  - RETURN ADDR                            *
*              IOCOM5  - IOS BASE A                             *
*              UCBOPT7 - UCB ADDR                               *
*              WORK8   - IOS BASE B                             *
*              LINK9   - IOS BASE C                             *
*              IOQE11  - IOQE ADDR                              *
*                                                               *
*    REGISTER 13 IS GUARANTEED TO REMAIN UNCHANGED BY THE       *
*     ENQUEUE AND DEQUEUE ROUTINES                              *
*                                                               *
*****************************************************************
         SPACE
CALLIOS  STM   LINK9,UCBOPT7,SWAPSAVE  SAVE REGS
         SPACE
         LR    SAVE13,WORK8        SAVE SWAPAREA PTR
         SPACE
         LA    WORK8,IOSORG        GET IOS BASE ADDR INCR
         LR    LINK9,WORK8         COPY OFFSET VALUE
         ALR   WORK8,IOCOM5        SET IOS BASE REG B
         ALR   LINK9,WORK8         SET IOS BASE REG C
         SPACE
         L     BASE15,SWAPIOS-SWAPWORK(SAVE13)  GET ADDR
*                                  *OF IOS DEQUEUE
*                                  *OR ENQUEUE ROUTINE
         BALR  UCBTO4,BASE15        CALL IOS ROUTINE
         SPACE
         LR    WORK8,SAVE13        RESTORE SAVEAREA PTR
         SPACE
         LM    LINK9,UCBOPT7,SWAPSAVE  RESTORE REGS
         SPACE
         BR    LINK9               RETURN
         TITLE 'IECVGENA - (SWAP) OBTAIN LCH ADDRESS AND LOCK'
*****************************************************************
*                                                               *
*        OBTAIN LCH ADDRESS                                     *
*                                                               *
*        OBTAIN LCH LOCK                                        *
*                                                               *
*        SAVE LCCA ADDRESS IN FRR PARAMETER                     *
*                                                               *
*****************************************************************
         SPACE
         USING LCCA,WORK3
         USING IOQ,IOQE11
LOCKLCH  L     LCH1,IOCLCHTB       POINT AT LCH TABLE
         SLR   WORK10,WORK10       CLEAR REG
         IC    WORK10,UCBLCI       GET LCH INDEX
         SLL   WORK10,LCHELP2      MULTIPLY BY LENGTH OF LCH
         ALR   LCH1,WORK10         POINT AT CORRECT LCH
         SPACE
         STM   IOQE11,RTN14,SWAPSAVE  SAVE REGS 11 THRU 14
         OI    GENAFLAG,GFRRLLOK   TURN ON LOCK HELD INDICATOR @ZA12145
         SPACE
         LA    IOQE11,LCHLOCK      POINT AT THE LOCK
         ST    IOQE11,GENAFLOK     SAVE LOCKWORD IN FRRWA      @ZA12145
         SPACE
         SETLOCK OBTAIN,TYPE=IOSLCH,MODE=UNCOND,ADDR=(11),             *
               RELATED=(LCH,IECVGENA(UNLOKLCH,IOSGEN))
         SPACE
         L     WORK3,PSALCCAV      GET VIRT ADDR OF LCCA
         L     IOQE11,GENAFLOK     RESTORE LOCK ADDRESS        @ZA29051
         ST    IOQE11,IRTLCH       SHOW WHICH LOCK HELD        @ZA29051
         OI    IRTFLA,IRTLLCK      SHOW LCH LOCK HELD          @ZA29051
         SPACE
         LM    IOQE11,RTN14,SWAPSAVE  RESTORE REGS 11 THRU 14
         SPACE
         BR    LINK9               RETURN TO CALLER
         TITLE 'IECVGENA - (SWAP) RELEASE LCH LOCK ROUTINE'
*****************************************************************
*                                                               *
*        RELEASE LCH LOCK                                       *
*                                                               *
*****************************************************************
         SPACE
UNLOKLCH STM   IOQE11,RTN14,SWAPSAVE  SAVE REGS 11 THRU 14
         SPACE
         LA    IOQE11,LCHLOCK      POINT AT LOCK
         NI    IRTFLA,XFF-IRTLLCK  TURN OFF LOCK HELD INDICATOR IN IRT
*                                  WHILE STILL DISABLED        @ZA29051
         SPACE
         SETLOCK RELEASE,TYPE=IOSLCH,ADDR=(11),                        *
               RELATED=(LCH,IECVGENA(LOCKLCH,IOSGEN))
         SPACE
         LM    IOQE11,RTN14,SWAPSAVE  RESTORE REGS 11 THRU 14
         NI    GENAFLAG,XFF-GFRRLLOK  TURN OFF LOCK HELD INDIC @ZA12145
         SPACE
         BR    LINK9               RETURN TO CALLER
         SPACE
         DROP  LOC0,LCH1,WORK2,WORK3,IOCOM5,UCBOPT7,WORK8,IOQE11
         TITLE 'IECVGENA - SIMULATE I/O INTERRUPT'             @ZA16163
************************************************************** @ZA16163
*                                                            * @ZA16163
*  BUILD SPECIAL I/O OLD PSW FOR RETURN FROM FORCED INTERRUPT* @ZA16163
*                                                            * @ZA16163
************************************************************** @ZA16163
         SPACE
         USING PSA,0                                           @ZA16163
SIMINT   STNSM PSASYMSK,PSWDIS     DISABLE FOR INTERRUPTS      @ZA16163
         LTR   RUCB,RUCB           IS UCB ADDR VALID?          @ZA16163
         BP    SIMUCB              YES--GO MOVE DEVICE ADDR    @ZA16163
         LPR   REG,RUCB            NO--GET DEVICE ADDR         @ZA16163
         STH   REG,FLCIOAA+1       SET DEVICE ADDR             @ZA16163
         B     SIMCONT             SKIP SETTING FROM UCB       @ZA16163
SIMUCB   MVC   FLCIOAA+1(K02),UCBCHAN-UCBOB(RUCB)              @ZA16163
*                                  *PUT DEVICE ADDR IN I/O ADDR@ZA16163
SIMCONT  NI    FLCIOAA+1,MASKOF    ZERO FIRST HALF             @ZA16163
*                                  *OF BYTE                    @ZA16163
         SPACE
         IC    REG,PSASYMSK        GET SYSTEM MASK             @ZA16163
         STC   REG,FLCIOPSW        AND SET IN OLD PSW          @ZA16163
         ST    RTN14,FLCIOPSW+K04  STORE EXIT                  @ZA16163
*                                  *ADDR INTO I/O OLD PSW      @ZA16163
         SPACE
         MVN   FLCIOPSW+K02(K01),FLCIOPSW+K04
*                                  *SET PROGRAM MASK           @ZA16163
         NI    FLCIOPSW+K02,MASKOF ZERO REQUIRED BITS          @ZA16163
         XC    FLCIOPSW+K03(K02),FLCIOPSW+K03
*                                  *ZERO REQUIRED FIELDS       @ZA16163
         MVI   FLCIOPSW+K01,PSWMCEC ALLOW MACHINE              @ZA16163
*                                  *CHECK INTERRUPTS           @ZA16163
         SPACE
************************************************************** @ZA16163
*                                                            * @ZA16163
*        BUILD CSW FOR FORCED INTERRUPT                      * @ZA16163
*        SET UP DEVICE END IN CSW IF NECESSARY               * @ZA16163
*        GO TO I/O FIRST LEVEL INTERRUPT HANDLER VIA LPSW    * @ZA16163
*                                                            * @ZA16163
************************************************************** @ZA16163
         SPACE
         SLR   REG,REG             CLEAR REG                   @ZA16163
         ST    REG,FLCCSW          ZERO FIRST WORD OF CSW      @ZA16163
         ST    REG,FLCCSW+K04      ZERO SECOND                 @ZA16163
         SPACE
         LTR   RUCB,RUCB           IS UCB ADDR VALID?          @ZA16163
         BM    SIMLPSW             NO--SKIP UCB TEST           @ZA16163
         TM    UCBFLA-UCBOB(RUCB),UCBPST  IS POST FLAG ON      @ZA16163
         BO    SIMLPSW             YES, GIVE CHANNEL AVAILABLE @ZA16163
         SPACE
         TM    UCBFLA-UCBOB(RUCB),UCBBSY+UCBNRY  ARE           @ZA16163
*                                  *BUSY OR NO READY 'ON'      @ZA16163
         BZ    SIMLPSW             NO, GIVE CHANNEL AVAILABLE  @ZA16163
         SPACE
         OI    FLCCSW+K04,CSWDE MOVE DUMMY                     @ZA16163
*                                  *DEVICE END STATUS INTO CSW @ZA16163
         SPACE
SIMLPSW  EQU   *                                               @ZA16163
         LPSW  FLCINPSW            GO TO I/O INTERRUPT ROUTINE @ZA16163
         SPACE
*  THE I/O FLIH RETURNS DIRECTLY TO THE CALLER                 @ZA16163
         TITLE 'IECVGENA - ADD FRR SUBROUTINE'
*****************************************************************
*                                                               *
*        ADD FRR TO FRR STACK                                   *
*              SAVE ENTRY POINT ADDRESS (REG 15)                *
*              SAVE PARAMETER POINTER (REG 5)                   *
*              SAVE SAVE AREA POINTER (REG 2)                   *
*              LOCK WORDS ARE SAVED IN LOCK SUBROUTINE          *
*                                                               *
*****************************************************************
         SPACE
ADDFRR   LA    BLKLOK11,GENAFRR    GET FRR ROUTINE ADDR
         SPACE
         SETFRR A,FRRAD=(11),PARMAD=(12),WRKREGS=(12,13)
         SPACE
         USING GENAFRRS,WORK12
         ST    BASE15,GENAFBAS     SAVE IECVGENA ENTRY POINT
         ST    PARM5,GENAFR05      SAVE PARAMETER PTR
         ST    WORK2,GENAFR13      SAVE SAVE AREA PTR
         DROP  WORK12
         SPACE
         BR    RTN14               RETURN TO CALLING SUBROUTINE
         TITLE 'IECVGENA - DELETE FRR SUBROUTINE'
*****************************************************************
*                                                               *
*        DELETE FRR FROM FRR STACK                              *
*                                                               *
*****************************************************************
         SPACE
DELFRR   SETFRR D,WRKREGS=(12,13)
         SPACE
         BR    RTN14               RETURN TO CALLING SUBROUTINE
         TITLE 'IECVGENA - EPILOG'
*****************************************************************
*                                                               *
*        EPILOG                                                 *
*                                                               *
*****************************************************************
         SPACE
NOLOCK   BR    RTN14               RETURN TO CALLER
         TITLE 'IECVGENA - DEFINED CONSTANTS'
*****************************************************************
*                                                               *
*        IECVGENA DEFINED CONSTANTS                             *
*                                                               *
*****************************************************************
         SPACE
         DS    0F
HOHWMASK DC    X'0000FF00'         (V) HIGH ORDER HALFWORD MASK
PATHTEST DC    X'0000F000'         (V) ALL PATHS OFFLINE MASK
PATHBMSK DC    X'0000000F'         (V) PATH BIT MASK
CSANDCHM DC    X'00FFFFFF'         (V) CHANNEL ANDING MASK
GENMASK  DC    X'0000FFFF'         (V) PATH ANDING MASK        @YM08184
PREFIX   DC    F'512'              (S) UCB PREFIX/COMMON OFFSET@Y30ANLB
         SPACE
         DROP  BASE15
         TITLE 'IECVGENA - FUNCTIONAL RECOVERY ROUTINE'
*****************************************************************
*                                                               *
*        FUNCTIONAL RECOVERY ROUTINE                            *
*                                                               *
*        ESTABLISH ADDRESSABILITY                               *
*                                                               *
*        PERFORM BASIC INITIALIZATION                           *
*                                                               *
*****************************************************************
         SPACE
         USING IECVGENA,WORK12
         USING SDWA,SAVE13
         USING GENAFRRS,PARM5
         SPACE
GENAFRR  LR    SAVE13,RSRC1        GET ADDR OF SDWA
         LR    LINK9,RTN14         GET RETURN ADDR
         L     PARM5,SDWAPARM      SET PTR TO PARAMETERS
         L     WORK12,GENAFBAS     REESTABLISH ADDRESSABILITY
         SPACE
         SETRP RECORD=YES,WKAREA=(RSRC1)                       @ZA12145
         EJECT
*****************************************************************
*                                                               *
*        RELEASE UCB LOCK                                       *
*                                                               *
*****************************************************************
         SPACE
         TM    GENAFLAG,GFRRULOK   UCB LOCK HELD?              @ZA12145
         BZ    GENAFRR1            NO, TEST FOR LCH LOCK
         L     BLKLOK11,GENAFLOK   GET LOCKWORD ADDR           @ZA12145
         ST    BLKLOK11,SDWAIULW   SET UCB LOCKWORD
         OI    SDWAACF4,SDWAIUCB   INDICATE UCBLOCK HELD       @ZA12145
         SPACE
         B     GENAFRR2            GO FINISH UP
         SPACE
*****************************************************************
*                                                               *
*        RELEASE LCH LOCK                                       *
*                                                               *
*****************************************************************
         SPACE
         USING LCCA,WORK3
         SPACE
GENAFRR1 TM    GENAFLAG,GFRRLLOK   LCH LOCK HELD?              @ZA12145
         BZ    GENAFRR2            NO                          @ZA12145
         SPACE
         L     BLKLOK11,GENAFLOK   GET LOCKWORD ADDR           @ZA12145
         ST    BLKLOK11,SDWAILLW   SET LCH LOCKWORD
         OI    SDWAACF4,SDWAILCH   INDICATE LCH LOCK HELD      @ZA12145
         SPACE
         DROP  WORK3
         EJECT
*****************************************************************
*                                                               *
*        RECORD VARIABLE INFORMATION                            *
*                                                               *
*****************************************************************
         SPACE
GENAFRR2 LM    WORK7,WORK8,CSECTMOD  GET CSECT/MODULE NAME
         STM   WORK7,WORK8,SDWAVRA   STORE MODULE NAME
         SPACE
         LA    WORK2,K08           GET LENGTH OF VARIABLE AREA
         STC   WORK2,SDWAVRAL      SET LENGTH IN SDWA
         SPACE
         TM    SDWAERRC,SDWAPERC   HAS PERCOLATION OCCURED
         BO    GENAFRR3            YES, EXIT IMMEDIATELY
         SPACE
*****************************************************************
*                                                               *
*        RECORD MODULE IDENTIFICATION                           *
*                                                               *
*****************************************************************
         SPACE
         STM   WORK7,WORK8,SDWAMODN  SHOW MODULE NAME
         STM   WORK7,WORK8,SDWACSCT  SHOW CSECT NAME
         SPACE
         CLI   SDWAFMID,FMIDTEST   HAS ADDRESS SPACE FAILED
         BNE   GENAFRR3            YES, SKIP DUMP
         EJECT
*****************************************************************
*                                                               *
*        CHECK 4K BUFFER AVAILABILITY                           *
*                                                               *
*****************************************************************
         SPACE
         USING CVT,CVT6
         SPACE
         L     CVT6,CVTPTR         GET CVT PTR
         L     WORK2,CVTSDBF       GET 4K BUFFER ADDR
         LA    WORK2,0(WORK2)      CLEAR HIGH ORDER BYTE
         L     WORK3,LOCKSDBF      SET HIGH ORDER BIT ON
         OR    WORK3,WORK2         CREATE LOCKED BUFFER PTR
         SPACE
         CS    WORK2,WORK3,CVTSDBF  ATTEMPT SWAP
         BNZ   GENAFRR3            SWAP FAILED, EXIT NOW
         EJECT
*****************************************************************
*                                                               *
*        SET UP DUMP BUFFER                                     *
*                                                               *
*****************************************************************
         SPACE
         USING SDBF,WORK2
         USING SFRRPARM,WORK7
         USING SFRRSAVE,WORK8
         SPACE
         LM    WORK7,WORK8,GENAFR05  GET PARAMETER AND
*                                  *SAVE AREA POINTERS
         SPACE
         LA    WORK10,SDBFSTRT     POINT PAST HEADER
         ST    WORK10,SDBFPTR      SHOW DUMP START POINT
         SPACE
         LA    WORK10,SDBFLNTH     GET SIZE OF DUMP
*                                  *MUST NOT EXCEED 4090 BYTES
         STH   WORK10,SDBFCNT      SHOW BYTE COUNT
         SPACE
         MVC   SDBFPARM(LFRRPARM),SFRRPARM  COPY POSSIBLE
*                                  *VARY PARAMETERS
         MVC   SDBFSAVE(LFRRSAVE),SFRRSAVE  COPY 16/18
*                                  *WORD SAVE AREA
         SPACE
         LA    BLKLOK11,SDWALEN    GET SDWA LENGTH
         LR    BASE15,BLKLOK11     COPY SDWA LENGTH
         LA    WORK10,SDBFSDWA     GET BUFFER LOCATION
         LR    RTN14,SAVE13        POINT TO SDWA START
         MVCL  WORK10,RTN14        COPY SDWA TO BUFFER
         MVC   SDBFRRWA(GENASIZE),GENAFRRS                     @ZA12145
*                               SAVE 6-WORD FRR PARM AREA      @ZA12145
         SPACE
         USING PSA,LOC0
         L     WORK10,PSAAOLD      GET CURRENT ASCB ADDR
         DROP  LOC0
         SPACE
         USING ASCB,WORK10
         LH    BLKLOK11,ASCBASID   GET ASID
         DROP  WORK10
         EJECT
*****************************************************************
*                                                               *
*        ISSUE ASYNCHRONOUS SVC DUMP                            *
*                                                               *
*****************************************************************
         SPACE
         LR    WORK2,SAVE13        SAVESDWA ADDRESS            @ZA12145
         LA    SAVE13,SDWAVRA+K08  GET SAVE AREA IN VARIABLE
*                                  *RECORDING AREA OF SDWA
         SPACE
         SDUMP ASID=(11),                                              *
               SDATA=(RGN,LPA,TRT),                                    *
               BUFFER=YES,                                             *
               BRANCH=YES
         SPACE
GENAFRR3 TM    GENAFLAG,GFRRSWAP   SWAP FUNCTION ACTIVE?       @ZA12145
         BZ    GENAFRR4            NO, SKIP RETRY              @ZA12145
         TM    GENAFLAG,GFRRSTAT   WHAT IS STATUS OF SWAP      @ZA12145
         BNO   GENAFRR4            BAD,PERC TO DDR TO TERMNATE @ZA12145
         L     BASE15,GENAFBAS     RESTORE BASE REG            @ZA12145
         L     WORK8,GENAWORK      RESTORE WORK AREA ADDR      @ZA12145
         LR    RSRC1,WORK2         RESTORE SDWA PTR            @ZA12145
         L     SAVE13,GENAFR13     RESTORE SAVE AREA ADDR      @ZA12145
         L     RTN14,GENAFR05      RESTORE RETURN ADDR         @ZA12145
         ST    PARM5,SDWASR03      SAVE RETRY REGS IN SDWA     @ZA12145
         STM   SAVE13,BASE15,SDWASR13                          @ZA12145
         SPACE
         SETRP RC=4,RETADDR=GOODRET,RETREGS=YES,RECORD=YES     @ZA12145
         SPACE
GENAFRR4 BR    LINK9               RETURN TO RECOVERY MANAGER
         SPACE
         DROP  WORK2,PARM5,CVT6,WORK7,WORK8,SAVE13
         TITLE 'IECVGENA - SIGP ROUTINE'
*****************************************************************
*                                                               *
*        THIS ROUTINE GETS CONTROL VIA THE RISGNL MACRO WHEN    *
*        A MULTI-PROCESSOR; OR WHEN A UNI-PROCESSOR, IS ENTERED *
*        VIA BALR FROM THE SWAP ROUTINE.                      *@ZA12145
*        THE FUNCTION OF THIS ROUTINE IS TO SWAP THE UCB FIELDS,*
*        THE COMMON EXTENSION FIELDS AND THE DEVICE STATISTICS  *
*        TABLE.                                                 *
*        THIS CODE WAS MOVED OVER FROM IOSGEN WITH THE FOLLOWING*
*        ADDITIONS:                                             *
*        -1. SWAP STARTED AND ENDING FLAGS ARE SET AT THE       *
*            BEGINNING AND END OF THE SWAP TO BE TESTED BY THE  *
*            FRR IN CASE OF AN ERROR.                           *
*        -2. ALL ACTIVE BITS OF THE 'FROM' AND 'TO' UCB'S ARE   *
*            TESTED PRIOR TO BEGINNING THE SWAP TO MAKE SURE    *
*            THAT THE DEVICES ARE QUIESCED.                     *
*                                                               *
*****************************************************************
         SPACE
GENASIGP EQU   *                                              *@ZA12145
         USING IECVGENA,BASE15                                *@ZA12145
         USING GENAFRRS,IOQE11                                *@ZA12145
         LR    IOQE11,WORK1           GET PARAMETER ADDRESS   *@ZA12145
         TM    GENAFLG2,GFRRBRCH      WHAT KIND OF ENTRY ?    *@ZA12145
         BNZ   BEGINSWP               IF BALR,DONT RELOAD REGS*@ZA12145
         L     BASE15,GENAFBAS        ESTABLISH ADDRESSABILITY*@ZA12145
         L     WORK8,GENAWORK         IF RISGNL,GET SWAPAREA  *@ZA12145
         USING SWAPWORK,WORK8                                 *@ZA12145
         L     UCBTO4,SWAPSR04        ADDR OF 'TO' UCB        *@ZA12145
         L     UCBFROM6,SWAPSR06      ADDR OF 'FROM' UCB      *@ZA12145
BEGINSWP L     WORK12,CVTPTR(0,0)     GET CVT PTR AGAIN        @ZA12145
         LA    UCBTO4,K512(0,UCBTO4)  ADJUST TO COMMON UCB     @ZA12145
         LA    UCBFROM6,K512(0,UCBFROM6) ADJUST TO COMMON UCB  @ZA12145
         SPACE
*****************************************************************
*        TEST UCB ACTIVE BITS -UCBBSY,UCBPST,UCBPSNS,UCBSAP,    *
*                              UCBACTV,UCBASNS,UCBSPST.       *@ZA12145
*        IF ALL ARE OFF, PROCEED WITH SWAP; OTHERWISE SET FLAG  *
*        FOR CALLING ROUTINE INDICATING THAT THE SWAP WAS NOT   *
*        DONE.                                                  *
*****************************************************************
         SPACE
         TM    UCBFLA-UCBOB(UCBFROM6),ACTIVA  'FROM' UCBFLA   *@ZA12145
         BNZ   SETACTV                IF ANY ON, GO SET FLAG  *@ZA12145
         TM    UCBFLA-UCBOB(UCBTO4),ACTIVA  'TO' UCBFLA       *@ZA12145
         BZ    SWAP0010               OKAY, PROCEED WITH SWAP *@ZA12145
SETACTV  OI    GENAFLAG,GFRRACTV      SET UCB ACTIVE FLAG     *@ZA12145
*                                     FOR CALLER              *@ZA12145
         B     SWAPRET2               EXIT IMMEDIATELY        *@ZA12145
         SPACE
*****************************************************************
*                                                               *
*        SWAP UCB ADDRESSES IN UCB LOOK-UP TABLE               @ZA12145
*                                                               *
*****************************************************************
         SPACE
SWAP0010 OI    GENAFLAG,GFRRUST  SET SWAP STARTED FLAG        *@ZA12145
         L     WORK2,CVTILK2-CVTMAP(0,WORK12)                  @ZA12145
*                                  *GET UCB LOOKUP TABLE ADDR  @ZA12145
SWAP0020 LH    UCBOPT7,0(0,WORK2)  GET UCB ADDR                @ZA12145
         LTR   UCBOPT7,UCBOPT7     IS THIS VALID ADDR          @ZA12145
         BZ    SWAP0040            NO, FILLER                  @ZA12145
         BM    SWAP0028            TEST FOR END OF TBL@Z30ANLB,@ZA12145
         SPACE
SWAP0025 CR    UCBOPT7,UCBFROM6    IS THIS 'FROM' UCB @Z30ANLB,@ZA12145
         BNE   SWAP0030            NO, GO TEST 'TO'            @ZA12145
         STH   UCBTO4,0(0,WORK2)   SET EQUAL TO 'TO' ADDR      @ZA12145
         B     SWAP0040            CONTINUE                    @ZA12145
         SPACE
SWAP0028 CH    UCBOPT7,SWAP0FF     END OF TABLE       @Z30AALB,@ZA12145
         BE    SWAP0050            YES, GO COPY BYTES @Z30AALB,@ZA12145
         N     UCBOPT7,SWAP0MSK   AND OFF PROP'D BITS @Z30AALB,@ZA12145
         B     SWAP0025            CONT MAIN PATH     @Z30ANLB,@ZA12145
SWAP0030 CR    UCBOPT7,UCBTO4      IS THIS 'TO' UCB            @ZA12145
         BNE   SWAP0040            NO, CONTINUE
         STH   UCBFROM6,0(0,WORK2)  SET EQUAL TO 'FROM' ADDR   @ZA12145
SWAP0040 LA    WORK2,K02(0,WORK2)                              @ZA12145
*                                  *BUMP UCB LOOK UP TABLE PTR @ZA12145
         B     SWAP0020            GO CHECK NEXT UCB ADDR      @ZA12145
***********************************************************************
*                                                                     *
*        CONSTANT FOR SWAP FUNCTION, LOCATED HERE TO ALLEVIATE AN     *
*        EXTRA BRANCH INSTRUCTION AROUND IT.                   @ZA12145
*                                                                     *
***********************************************************************
         SPACE
SWAP0MSK DS    0F                                     @Z30AALB,@ZA12145
         DC    X'0000'             FULLWORD AND'G MASK@Z30AALB,@ZA12145
SWAP0FF  DC    X'FFFF'             HALFWD CONST TO TST@Z30AALB,@ZA12145
*                                  *END OF UCB TABLE  @Z30AALB,@ZA12145
         SPACE
*****************************************************************
*                                                               *
*        SAVE 'FROM' COMMON SEGMENT PLUS PORTION OF DEVICE      *
*        DEPENDENT SECTION IN 'WORK AREA'.                      *
*        SWAP UCB FIELDS FROM 'TO' TO 'FROM' DEVICES.          @ZA12145
*                                                               *
*****************************************************************
         SPACE
SWAP0050 MVC   0(UCBDMCT-UCBOB,WORK8),0(UCBFROM6) COPY ALL BYTES
*                                  *POSSIBLE AFFECTED BY SWAP
*                                  *'FROM' TO 'WORK AREA'      @ZA12145
         MVC   UCBCHAN-UCBOB(K02,UCBFROM6),UCBCHAN-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBFLA-UCBOB(K01,UCBFROM6),UCBFLA-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBFLB-UCBOB(K01,UCBFROM6),UCBFLB-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBCHM-UCBOB(K01,UCBFROM6),UCBCHM-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBCNT-UCBOB(K01,UCBFROM6),UCBCNT-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBLCI-UCBOB(K01,UCBFROM6),UCBLCI-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBCPU-UCBOB(K01,UCBFROM6),UCBCPU-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBNAME-UCBOB(K03,UCBFROM6),UCBNAME-UCBOB(UCBTO4)
*                                                              @ZA12145
         MVC   UCBTBYT1-UCBOB(K01,UCBFROM6),UCBTBYT1-UCBOB(UCBTO4)
*                                                     @XL03167,@ZA12145
         MVC   UCBTBYT3-UCBOB(K01,UCBFROM6),UCBTBYT3-UCBOB(UCBTO4)
*                                                     @XL03167,@ZA12145
         MVC   UCBTBYT4-UCBOB(K01,UCBFROM6),UCBTBYT4-UCBOB(UCBTO4)
*                                                     @XL03167,@ZA12145
         MVC   UCBFLC-UCBOB(K01,UCBFROM6),UCBFLC-UCBOB(UCBTO4)
*                                                              @ZA12145
         SPACE
*****************************************************************
*                                                               *
*        SWAP UCB FIELDS FROM 'WORK AREA' TO 'TO' DEVICE.      @ZA12145
*                                                               *
*****************************************************************
         SPACE
         MVC   UCBCHAN-UCBOB(K02,UCBTO4),UCBCHAN-UCBOB(WORK8)  @ZA12145
         MVC   UCBFLA-UCBOB(K01,UCBTO4),UCBFLA-UCBOB(WORK8)    @ZA12145
         MVC   UCBFLB-UCBOB(K01,UCBTO4),UCBFLB-UCBOB(WORK8)    @ZA12145
         MVC   UCBCHM-UCBOB(K01,UCBTO4),UCBCHM-UCBOB(WORK8)    @ZA12145
         MVC   UCBCNT-UCBOB(K01,UCBTO4),UCBCNT-UCBOB(WORK8)    @ZA12145
         MVC   UCBLCI-UCBOB(K01,UCBTO4),UCBLCI-UCBOB(WORK8)    @ZA12145
         MVC   UCBCPU-UCBOB(K01,UCBTO4),UCBCPU-UCBOB(WORK8)    @ZA12145
         MVC   UCBNAME-UCBOB(K03,UCBTO4),UCBNAME-UCBOB(WORK8)  @ZA12145
         MVC   UCBTBYT1-UCBOB(K01,UCBTO4),UCBTBYT1-UCBOB(WORK8)
*                                                     @XL03167,@ZA12145
         MVC   UCBTBYT3-UCBOB(K01,UCBTO4),UCBTBYT3-UCBOB(WORK8)
*                                                     @XL03167,@ZA12145
         MVC   UCBTBYT4-UCBOB(K01,UCBTO4),UCBTBYT4-UCBOB(WORK8)
*                                                     @XL03167,@ZA12145
         MVC   UCBFLC-UCBOB(K01,UCBTO4),UCBFLC-UCBOB(WORK8)    @ZA12145
         SPACE
***********************************************************************
*  SWAP 'FROM' AND 'TO' UCBIOQ FIELDS                 @YM08050,@ZA12145
***********************************************************************
         SPACE
         LA    WORK1,K512(0,0)                        @YM08050,@ZA12145
         LR    WORK2,UCBFROM6                         @YM08050,@ZA12145
         SLR   WORK2,WORK1                            @YM08050,@ZA12145
         LR    WORK10,UCBTO4                          @YM08050,@ZA12145
         SLR   WORK10,WORK1                           @YM08050,@ZA12145
*                                                     @YM08040,@ZA12145
         XC    UCBIOQ-UCB(K04,WORK10),UCBIOQ-UCB(WORK2)
*                                                     @YM08050,@ZA12145
         XC    UCBIOQ-UCB(K04,WORK2),UCBIOQ-UCB(WORK10)
*                                                     @YM08050,@ZA12145
         XC    UCBIOQ-UCB(K04,WORK10),UCBIOQ-UCB(WORK2)
         SPACE
*****************************************************************
*                                                               *
*        UCBJBNR - SWAP ALL BUT UCBMONT.                       @ZA12145
*        UCBFL5  - SWAP ALL BUT UCBNALOC.                      @ZA12145
*                                                               *
*****************************************************************
         SPACE
SWAP005A LA    WORK10,MSKON(0,0)   MASK TO LEAVE 'ON' @YM08050,@ZA12145
*                                  *UCBMONT AND UCBNALOC ONLY  @ZA12145
         LH    WORK1,SWAP0OFF      GET MASK TO TURN 'OFF'      @ZA12145
*                                  *UCBMONT AND UCBNALOC ONLY  @ZA12145
         LH    WORK2,UCBJBNR-UCBOB(0,UCBFROM6) GET 'FROM'      @ZA12145
*                                  *UCBJBNR AND UCBFL5         @ZA12145
         LH    WORK3,UCBJBNR-UCBOB(0,UCBTO4) GET 'TO'          @ZA12145
*                                  *UCBJBNR AND UCBFL5         @ZA12145
         NR    WORK10,WORK2        ONLY 'FROM' UCBMONT & UCBNALOC 'ON'
*                                  *TURN 'OFF' OTHER BITS IN 'FROM'
         NR    WORK1,WORK3         ONLY 'TO' UCBMONT & UCBNALOC 'OFF'
*                                  *LEAVE 'ON' OTHER BITS IN 'TO'
         OR    WORK10,WORK1        MERGE 'FROM' UCBMONT & UCBNALOC
*                                  *WITH 'TO' ALL OTHERS BITS
         STH   WORK10,UCBJBNR-UCBOB(0,UCBFROM6) SWAP 'TO'      @ZA12145
*                                  *UCBJBNR & UCBFL5           @ZA12145
         LA    WORK10,MSKON(0,0)   GET MASK TO LEAVE 'ON'      @ZA12145
*                                  *UCBMONT AND UCBNALOC ONLY  @ZA12145
         LH    WORK1,SWAP0OFF       GET MASK TO TURN 'OFF'     @ZA12145
*                                  *UCBMONT AND UCBNALOC ONLY  @ZA12145
         NR    WORK10,WORK3        ONLY 'TO' UCBMONT & UCBNALOC 'ON'
*                                  *TURN 'OFF' OTHER BITS IN 'TO'
         NR    WORK1,WORK2         ONLY 'FROM' UCBMONT & UCBNALOC 'OFF'
*                                  *LEAVE 'ON' OTHER BITS IN 'FROM'
         OR    WORK10,WORK1        MERGE 'TO' UCBMONT & UCBNALOC
*                                  *WITH 'FROM' ALL OTHERS BITS@ZA12145
         STH   WORK10,UCBJBNR-UCBOB(0,UCBTO4) SWAP 'FROM'      @ZA12145
*                                  *UCBJBNR & UCBFL5           @ZA12145
         SPACE
*****************************************************************
*                                                               *
*        UCBTBYT2 - SWAP ALL BUT UCBVLPWR.                     @ZA12145
*                                                               *
*****************************************************************
         SPACE
         TM    UCBTBYT3-UCBOB(WORK8),ID3TA TAPE?      @YM04197,@ZA12145
*                                  DEVICE?            @YM04197,@ZA12145
         BO    SWAP0051            YES, PERFORM SWAP  @YM04197,@ZA12145
         SPACE
         TM    UCBTBYT3-UCBOB(WORK8),ID3DA     DASD?  @YM04197,@ZA12145
         BNO   SWAP0052            NO, BYPASS SWAP    @YM40197,@ZA12145
         SPACE
SWAP0051 EQU   *                                      @YM04197,@ZA12145
         SPACE
         LA    WORK10,MSK02(0,0)    MASK TO LEAVE 'ON'@XL03167,@ZA12145
*                                  *UCBVLPWR ONLY              @ZA12145
         LA    WORK1,MSKFD(0,0)    MASK TO TURN 'OFF' @XL03167,@ZA12145
*                                  *UCBVLPWR ONLY              @ZA12145
         IC    WORK2,UCBTBYT2-UCBOB(0,UCBFROM6) 'FROM'@XL03167,@ZA12145
*                                  *UCBVLPWR                   @ZA12145
         IC    WORK3,UCBTBYT2-UCBOB(0,UCBTO4) GET 'TO'@XL03167,@ZA12145
*                                  *UCBVLPWR                   @ZA12145
         NR    WORK10,WORK2        'FRM' UCBVLPWR 'ON'@XL03167,@ZA12145
*                                  *TURN 'OFF' OTHER BITS IN 'FROM'
         NR    WORK1,WORK3         'TO' UCBVLPWR 'OFF'@XL03167,@ZA12145
*                                  *LEAVE 'ON' OTHER BITS IN 'TO'
         OR    WORK10,WORK1   MERGE 'FROM' UCBVLPWR   @YM03167,@ZA12145
*                                  *WITH 'TO' ALL OTHERS BITS  @ZA12145
         STC   WORK10,UCBTBYT2-UCBOB(0,UCBFROM6) SWAP @XL03167,@ZA12145
*                                  *'TO' UCBVLPWR              @ZA12145
         LA    WORK10,MSK02(0,0)    MASK TO LEAVE 'ON'@XL03167,@ZA12145
*                                  *UCBVLPWR ONLY              @ZA12145
         LA    WORK1,MSKFD(0,0)    GET MASK TO TURN   @XL03167,@ZA12145
*                                  *'OFF' UCBVLPWR ONLY        @ZA12145
         NR    WORK10,WORK3        'TO' UCBVLPWR 'ON' @XL03167,@ZA12145
*                                  *TURN 'OFF' OTHER BITS IN 'TO'
         NR    WORK1,WORK2        'FROM' UCBVLPWR 'OFF@XL03167,@ZA12145
*                                  *LEAVE 'ON' OTHER BITS IN 'FROM'
         OR    WORK10,WORK1        MERGE 'TO' UCBVLPWR@XL03167,@ZA12145
*                                  *WITH 'FROM' ALL OTHERS BITS@ZA12145
         STC   WORK10,UCBTBYT2-UCBOB(0,UCBTO4) SWAP   @XL03167,@ZA12145
*                                  *'FROM' UCBVLPWR            @ZA12145
******************************************************@ZA12682,@ZA12145
*                                                     @ZA12682,@ZA12145
*        SWAP DIRECT ACCESS FLAG BYTE UCBFL4          @ZA12682,@ZA12145
*                                                     @ZA12682,@ZA12145
******************************************************@ZA12681,@ZA12145
         SPACE
         XC    UCBFL4-UCBOB(K01,UCBTO4),UCBFL4-UCBOB(UCBFROM6)
*                                                     @ZA12682,@ZA12145
         XC    UCBFL4-UCBOB(K01,UCBFROM6),UCBFL4-UCBOB(UCBTO4)
*                                                     @ZA12682,@ZA12145
         XC    UCBFL4-UCBOB(K01,UCBTO4),UCBFL4-UCBOB(UCBFROM6)
*                                                     @ZA12682,@ZA12145
         SPACE
*****************************************************************
*                                                               *
*        IF TAPE, UCBDVSHR MUST BE SWAPPED                     @ZA12145
*                                                               *
*****************************************************************
         SPACE
SWAP0052 EQU   *                                      @YM04197,@ZA12145
         TM    UCBTBYT3-UCBOB(WORK8),ID3TA     IS THIS A TAPE  @ZA12145
         BNO   SWAP0055            NO, SKIP SWAP               @ZA12145
         LA    WORK10,MSK80(0,0)    GET UCBDVSHR 'ON' MASK     @ZA12145
         LA    WORK1,MSK7F(0,0)    GET UCBDVSHR 'OFF' MASK     @ZA12145
         IC    WORK2,UCBSTAB-UCBOB(0,UCBFROM6) GET 'FROM' BYTE @ZA12145
         IC    WORK3,UCBSTAB-UCBOB(0,UCBTO4) GET 'TO' BYTE     @ZA12145
         NR    WORK10,WORK3        LEAVE UCBDVSHR 'ON' IN 'TO' @ZA12145
         NR    WORK1,WORK2         TURN UCBDVSHR 'OFF' IN 'FRM'@ZA12145
         OR    WORK10,WORK1        MERGE TO GET 'FROM'         @ZA12145
         STC   WORK10,UCBSTAB-UCBOB(0,UCBFROM6) SWAP 'FROM'    @ZA12145
         LA    WORK10,MSK80(0,0)    GET UCBDVSHR 'ON' MASK     @ZA12145
         LA    WORK1,MSK7F(0,0)    GET UCBDVSHR 'OFF' MASK     @ZA12145
         NR    WORK10,WORK2        LEAVE UCBDVSHR 'ON' IN 'FRM'@ZA12145
         NR    WORK1,WORK3         TURN UCBDVSHR 'OFF' IN 'TO' @ZA12145
         OR    WORK10,WORK1        MERGE TO GET 'TO'           @ZA12145
         STC   WORK10,UCBSTAB-UCBOB(0,UCBTO4) SWAP 'TO'        @ZA12145
         SPACE
*****************************************************************
*                                                               *
*        SAVE 'FROM' EXTENSION FIELDS IN WORK AREA.            @ZA12145
*        SWAP EXTENSION FIELDS FROM 'TO' TO 'FROM' DEVICE.     @ZA12145
*                                                               *
*****************************************************************
         SPACE
SWAP0055 L     WORK2,UCBEXTPT-UCBOB(0,UCBFROM6) 'FROM' EXT PTR @ZA12145
         LA    WORK2,0(0,WORK2)    CLEAR OUT UCBFLC            @ZA12145
         L     WORK3,UCBEXTPT-UCBOB(0,UCBTO4) GET 'TO' EXT PTR @ZA12145
         LA    WORK3,0(0,WORK3)    CLEAR OUT UCBFLC            @ZA12145
         MVC   0(UCBASID-UCBCMEXT,WORK8),0(WORK2) COPY ALL OF  @ZA12145
*                                  *'FROM' EXT EXCEPT UCBASID  @ZA12145
*                                  *TO 'WORK AREA'             @ZA12145
         MVC   UCBETI-UCBCMEXT(K01,WORK2),UCBETI-UCBCMEXT(WORK3)
*                                                              @ZA12145
         MVC   UCBDTI-UCBCMEXT(K01,WORK2),UCBDTI-UCBCMEXT(WORK3)
*                                                              @ZA12145
         MVC   UCBSNSCT-UCBCMEXT(K01,WORK2),UCBSNSCT-UCBCMEXT(WORK3)
*                                                              @ZA12145
         MVC   UCBCCWOF-UCBCMEXT(K02,WORK2),UCBCCWOF-UCBCMEXT(WORK3)
*                                                              @ZA12145
         MVC   UCBPMSK-UCBCMEXT(K02,WORK2),UCBPMSK-UCBCMEXT(WORK3)
*                                                              @ZA12145
         MVC   UCBMFCNT-UCBCMEXT(K02,WORK2),UCBMFCNT-UCBCMEXT(WORK3)
*                                                              @ZA12145
         SPACE
*****************************************************************
*                                                               *
*        SWAP EXTENSION FIELDS FROM 'WORK AREA' TO 'TO' DEVICE.@ZA12145
*                                                               *
*****************************************************************
         SPACE
         MVC   UCBETI-UCBCMEXT(K01,WORK3),UCBETI-UCBCMEXT(WORK8)
*                                                              @ZA12145
         MVC   UCBDTI-UCBCMEXT(K01,WORK3),UCBDTI-UCBCMEXT(WORK8)
*                                                              @ZA12145
         MVC   UCBSNSCT-UCBCMEXT(K01,WORK3),UCBSNSCT-UCBCMEXT(WORK8)
*                                                              @ZA12145
         MVC   UCBCCWOF-UCBCMEXT(K02,WORK3),UCBCCWOF-UCBCMEXT(WORK8)
*                                                              @ZA12145
         MVC   UCBPMSK-UCBCMEXT(K02,WORK3),UCBPMSK-UCBCMEXT(WORK8)
*                                                              @ZA12145
         MVC   UCBMFCNT-UCBCMEXT(K02,WORK3),UCBMFCNT-UCBCMEXT(WORK8)
*                                                              @ZA12145
         SPACE
******************************************************@ZA06377,@ZA12145
*                                                     @ZA06377,@ZA12145
*     SWAP UCBCHGS (VARY PENDING) BIT TO 'TO' DEVICE  @ZA06377,@ZA12145
*                                                     @ZA06377,@ZA12145
******************************************************@ZA06377,@ZA12145
         SPACE
SWAP0M40 EQU   B'01000000'         'ON' MSK - UCBCHGS @ZA06377,@ZA12145
SWAP0MBF EQU   B'10111111'         'OFF' MSK - UCBCHGS@ZA06377,@ZA12145
         SPACE
         LA    WORK10,SWAP0M40(0,0) UCBCHGS 'ON' MASK @ZA06377,@ZA12145
         LA    WORK1,SWAP0MBF(0,0)  UCBCHGS 'OFF' MASK@ZA06377,@ZA12145
         IC    WORK2,UCBSTAT-UCBOB(0,UCBFROM6) 'FROM' @ZA06377,@ZA12145
         IC    WORK3,UCBSTAT-UCBOB(0,UCBTO4) 'TO' BYTE@ZA06377,@ZA12145
         NR    WORK10,WORK3        LEAVE UCBCHGS 'ON' IN 'TO'
*                                                     @ZA06377,@ZA12145
         NR    WORK1,WORK2         TURN UCBCHGS 'OFF' IN 'FROM'
*                                                     @ZA06377,@ZA12145
         OR    WORK10,WORK1         MERGE TO GET 'FROM
*                                                     @ZA06377,@ZA12145
         STC   WORK10,UCBSTAT-UCBOB(0,UCBFROM6) SWAP 'FROM'
*                                                     @ZA06377,@ZA12145
         LA    WORK10,SWAP0M40(0,0)   GET UCBCHGS 'ON' MASK
*                                                     @ZA06377,@ZA12145
         LA    WORK1,SWAP0MBF(0,0)   GET UCBCHGS 'OFF' MASK
*                                                     @ZA06377,@ZA12145
         NR    WORK10,WORK2         LEAVE UCBCHGS 'ON' IN 'FROM'
*                                                     @ZA06377,@ZA12145
         NR    WORK1,WORK3          TURN UCBCHGS 'OFF' IN 'TO'
*                                                     @ZA06377,@ZA12145
         OR    WORK10,WORK1         MERGE TO GET 'TO'
*                                                     @ZA06377,@ZA12145
         STC   WORK10,UCBSTAT-UCBOB(0,UCBTO4) SWAP 'TO'
*                                                     @ZA06377,@ZA12145
         SPACE
*****************************************************************
*                                                               *
*        SWAP DEVICE STATISTICS TABLES                         @ZA12145
*                                                               *
*****************************************************************
         SPACE
         TM    UCBTBYT3-UCBOB(UCBTO4),ID3DA                    @ZA12145
*                                  *IS THIS A DA DEVICE        @ZA12145
         BO    SWAPRET             YES, EXIT IMMEDIATELLY     *@ZA12145
         LR    UCBOPT7,UCBTO4   COPY 'TO' ADDR                 @ZA12145
         BAL   LINK9,SWAP0080   GO GET STATISTICS ADDR         @ZA12145
         LR    WORK2,WORK3   SAVE STAT ADDR                    @ZA12145
         LR    UCBOPT7,UCBFROM6   COPY 'FROM' ADDR             @ZA12145
         BAL   LINK9,SWAP0080   GO GET STATISTICS ADDR         @ZA12145
         TM    UCBTBYT3-UCBOB(UCBTO4),ID3TA                    @ZA12145
*                                  *IS THIS A TAPE             @ZA12145
         BNO   SWAP0070            NO, SKIP FURTHER TESTS      @ZA12145
         CLI   UCBTBYT4-UCBOB(UCBTO4),ID3400                   @ZA12145
*                                  *IS 'TO' A 3400 SERIES      @ZA12145
         BE    SWAP0060            YES, SWAP 20 BYTES          @ZA12145
         CLI   UCBTBYT4-UCBOB(UCBFROM6),ID3400                 @ZA12145
*                                  *IS 'FROM' A 3400 SERIES    @ZA12145
         BNE   SWAP0070            NO, SKIP LARGE SWAP         @ZA12145
SWAP0060 XC    0(K20,WORK2),0(WORK3)  *SWAP 20 BYTES           @ZA12145
         XC    0(K20,WORK3),0(WORK2)  *OF STATISTICS           @ZA12145
         XC    0(K20,WORK2),0(WORK3)  *TABLES                  @ZA12145
         B     SWAPRET             GO RETURN TO CALLER        *@ZA12145
SWAP0070 XC    0(K10,WORK2),0(WORK3)  *SWAP 10 BYTES           @ZA12145
         XC    0(K10,WORK3),0(WORK2)  *OF STATISTICS           @ZA12145
         XC    0(K10,WORK2),0(WORK3)  *TABLES                  @ZA12145
SWAPRET  OI    GENAFLAG,GFRRUEND   SET SWAP ENDED FLAG        *@ZA12145
SWAPRET2 S     UCBTO4,PREFIX    RESET UCB PTR TO PREFIX       *@ZA12145
         S     UCBFROM6,PREFIX  RESET UCB PTR TO PREFIX       *@ZA12145
         SR    RC15,RC15        SET RETURN CODE               *@ZA12145
         BR    RTN14            RETURN                        *@ZA12145
         DROP  IOQE11                                          @ZA12145
         SPACE
*****************************************************************
*                                                               *
*        STATISTICS TABLE ENTRY LOOK UP SUBROUTINE             @ZA12145
*                                                               *
*****************************************************************
         SPACE
SWAP0080 L     WORK10,CVTSTB-CVTMAP(0,WORK12)                  @ZA12145
*                                  *GET STATISTICS TABLE ADDR  @ZA12145
         L     WORK1,UCBEXTPT-UCBOB(0,UCBOPT7) GET EXT PTR     @ZA12145
         LA    WORK1,0(0,WORK1)  CLEAR HI ORDER BYTE           @ZA12145
         SLR   WORK3,WORK3        CLEAR REG                    @ZA12145
         IC    WORK3,UCBSTI-UCBCMEXT(0,WORK1)  GET INDEX       @ZA12145
SWAP0090 CLM   UCBOPT7,MSK03,0(WORK10) UCB IN THIS SEG?
*                                                     @ZA06377,@ZA12145
         BL    SWAP0100            YES, CONTINUE               @ZA12145
         LA    WORK10,K02(0,WORK10)  NO, INCR INDEX            @ZA12145
         LA    WORK3,K256(0,WORK3)   NO, INCR INDEX            @ZA12145
         B     SWAP0090            CHECK NEXT SEGMENT          @ZA12145
SWAP0100 MH    WORK3,SWAP0H10     MULTIPLY BY 10               @ZA12145
         ALR   WORK3,WORK10        ADD TO BEGINNING OF         @ZA12145
         BR    LINK9                                           @ZA12145
*                                  *STATISTICS TABLE           @ZA12145
         SPACE
*****************************************************************
*                                                               *
*        DEFINED CONSTANTS                                     @ZA12145
*                                                               *
*****************************************************************
         DS    0F
         SPACE
NOTREADY DC    X'00004000'         MASK FOR UCBNRY C&S        *@ZA12145
SWAP0H10 DC    H'10'               CONSTANT OF 10              @ZA12145
SWAP0OFF DC    X'FEFB'             'OFF' MASK UCBMONT/UCBNALOC @ZA12145
EIGHT    DC    H'8'                CONSTANT OF 8               @ZA12145
         EJECT
*****************************************************************
*                                                               *
*        FRR DEFINED CONSTANTS                                  *
*                                                               *
*****************************************************************
         SPACE
         LCLC  &ADATE
&ADATE   SETC  '&SYSDATE'          ESTABLISH ASSEMBLY DATE
         DS    0F
LOCKSDBF DC    X'80000000'         (FRR) CVTSDBF HI ORDER BIT ON
CSECTMOD DC    CL8'IECVGENA'       (FRR) CSECT AND MODULE NAME
ASSMDATE DC    CL8'&ADATE.'        (FRR) MODULE ASSEMBLY DATE
         SPACE
         TITLE 'IECVGENA - PATCH AREA FOR MAINTENANCE'
*****************************************************************
*                                                               *
*        PATCH AREA FOR MAINTENANCE                             *
*                                                               *
*        (12+((*+139-MAINTAIN)/140))A(0)                        *
*                                                               *
*****************************************************************
         SPACE
         DS    0F
PATCHID  DC    C'GENA'             CORE ID FOR PATCH AREA
         DC    (1+((*-MAINTAIN)/80))A(0)  MAINTENANCE AREA
         DC    C'GENA'             CORE ID FOR PATCH AREA
GENALNTH EQU   *-IECVGENA          (FRR) MODULE LENGTH
SDBFLNTH EQU   (SDBFRRWA-SDBFSTRT)+GENALNTH  (FRR) LENGTH OF   @ZA12145
*                                  *DUMP BUFFER
         SPACE
         DROP  WORK12
         SPACE
         END
