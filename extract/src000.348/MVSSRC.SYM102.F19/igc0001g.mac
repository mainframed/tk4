         TITLE 'IGC0001G - RESTORE I/O REQUESTS PURGED BY IGC016'
***************************************************************
*                                                             *
*                                                             *
* MODULE NAME = IGC0001G                                      *
*                                                             *
* DESCRIPTIVE NAME = I/O REQUEST RESTORE ROUTINE              *
*                                                             *
* COPYRIGHT = ''NONE''                                        *
*                                                             *
* STATUS = OS/VS2 RELEASE 2, CHANGE LEVEL 00                  *
*                                                             *
* FUNCTION = THIS ROUTINE RESTORES I/O REQUESTS               *
* THAT HAVE BEEN PURGED BY SVC 16.                            *
*                                                             *
* NOTES =                                                     *
*    DEPENDENCIES = EBCDIC                                    *
*    RESTRICTIONS = NONE                                      *
*    REGISTER CONVENTIONS = SEE REGISTER EQUATES              *
*    PATCH LABEL = RESPTCH                                    *
*                                                             *
* MODULE TYPE = MODULE                                        *
*    PROCESSOR = ASSEMBLER                                    *
*    MODULE SIZE = 9C HEX BYTES                               *
*    ATTRIBUTES = REENTRANT, KEY 0, SUPERVIXOR STATE          *
*                                                             *
* ENTRY POINT = IGC017                                        *
*    PURPOSE = RESTORE REQUESTS THAT HAVE BEEN PURGED         *
*    LINKAGE = SVC                                            *
*    INPUT = REG ONE HAS ADDRESS OF PIRL ANCHOR               *
*    OUTPUT = RETURN CODE IN REG 15 INDICATING RESTORE STATUS *
*    EXITS-NORMAL = RETURN TO CALLER                          *
*    EXITS-ERROR = NONE                                       *
*                                                             *
* EXTERNAL REFERENCES =                                       *
*    ROUTINES = DRIVER RESTORE ROUTINES                       *
*    DATA SETS = NONE                                         *
*    DATA AREAS = PIRL                                        *
*    CONTROL BLOCKS =                                         *
*       IECDIOCM                                              *
*       IOX                                                   *
*       VOID                                                  *
*       CVT                                                   *
*       IKJTCB                                                *
*       IHARB                                                 *
*                                                             *
* TABLES = NONE                                               *
*                                                             *
* MACROS = FREEMAIN, MODESET                          @ZA31353*
*                                                             *
* CHANGE ACTIVITY = NONE                                      *
*                                                             *
***************************************************************
         TITLE 'IGC0001G - MAPPING MACROS'
ANCHOR   DSECT
         DS    F                   PIRL ANCHOR
         EJECT
         IECDPIRL
PIRLEXT  DS    18F                 EXTENSION SAVE AREA
PIRLEXTL EQU   *-PIRLEXT           SAVE AREA LENGTH
         EJECT
         IECDIOCM
         EJECT
         IECDIOCX
         EJECT
         IECDVOID
         EJECT
         CVT   DSECT=YES,LIST=YES
         EJECT
         IKJTCB
         EJECT
         IHARB DSECT=YES
         IHAPSA
         IEZDEB
         TITLE 'IGC0001G - REGISTER EQUATES'
***************************************************************
*                                                             *
*         REGISTER EQUATES                                    *
*                                                             *
***************************************************************
         SPACE
R0       EQU   0                   WORK REG
RPAR     EQU   1                   INPUT PARAMETER LIST POINTER
R2       EQU   2                   WORK REG 2
RBASE    EQU   3                   BASE REG
R4       EQU   4                   POINTER SAVE REG
RSVRB    EQU   5                   POINTER TO CURRENT SVRB
RCODE    EQU   6                   RETURN CODE SAVE REG
RVOID    EQU   7                   VOID POINTER
RPIRL    EQU   8                   POINTER TO PIRL
RNINE    EQU   9                   WORK REG 9
R10      EQU   10                  WORK REG 10
RB       EQU   11                  WORK REG 11
RC       EQU   12                  WORK REG 12
RD       EQU   13                  WORK REG 13
RET      EQU   14                  RETURN REG
RF       EQU   15                  WORK REG 15 AND ENTRY REG
         SPACE
***************************************************************
*                                                             *
*        MISCELLANEOUS EQUATES                                *
*                                                             *
***************************************************************
         SPACE
K00      EQU   0                   CONSTANT OF 0               @YM01144
K01      EQU   1                   CONSTANT OF 1               @YM01144
K03      EQU   3                   CONSTANT OF 3
K04      EQU   4                   CONSTANT OF 4
K08      EQU   8                   CONSTANT OF 8               @Y30IPLG
DRVSAVL  EQU   X'48'               18 WORD SAVE AREA           @YM04935
         TITLE 'IGC0001G - ESTABLISH ADDRESSABILITY'
***************************************************************
*                                                             *
*        ESTABLISH ADDRESSABILITY                             *
*                                                             *
***************************************************************
         SPACE
IGC017   CSECT
         BALR  RBASE,R0            ESTABLISH ADDRESSABILITY
         USING *,RBASE
         SPACE
         USING CVTMAP,RF
         USING IOCOM,RC
         USING PIRL,RPIRL
         USING VOID,RVOID
         USING ANCHOR,RNINE
         USING PSA,R0
         SPACE
         LR    RNINE,RPAR          SAVE ANCHOR IN RNINE
         LR    RB,RET              SAVE RETURN ADDRESS
         SLR   RCODE,RCODE         CLEAR RETURN CODE REG
         LR    R10,R4              GET TCB ADDRESS IN REG 10   @ZA31353
         USING TCB,R10                                         @ZA31353
         MODESET EXTKEY=RBT234,WORKREG=2  CHNG TO CALLERS KEY  @ZA31353
         L     RPIRL,ANCHOR        PICK UP POINTER TO PIRL
         MODESET EXTKEY=ZERO       RETURN TO KEY 0             @ZA31353
         LA    RPIRL,K00(RPIRL)    CLEAR HI ORDER BYTE         @YM01144
         SPACE
         C     RPIRL,NOANCHOR      CHECK FOR F'S               @YM01144
         BE    XIT                 NOTHING TO RESTORE          @YM01144
         SPACE
         LTR   R4,RPIRL            SAVE POINTER IN R4
*                                  *AND CHECK FOR 0'S
         BZ    XIT                 NOTHING TO RESTORE RETURN   @YM01144
         TITLE 'IGC0001G - CALL DRIVER RESTORE ROUTINES'
***************************************************************
*                                                             *
*        SET UP FOR AND CALL DRIVER RESTORE ROUTINES          *
*                                                             *
***************************************************************
         L     RSVRB,TCBRBP        GET PTR TO CURRENT SVRB     @ZA05813
         L     R2,RBLINK-RBBASIC(,RSVRB) GET PREVIOUS RB       @ZA05813
         TM    RBOPSW+K01-RBBASIC(R2),K01 TEST SUPV STATE      @ZA05813
         BZ    NOFRCHK             YES-BYPASS PIRL VLDTY CHECK @ZA05813
         SLR   RD,RD               CLEAR WORKREG               @ZA05813
         MODESET EXTKEY=RBT234,WORKREG=1    CHANGE TO USER KEY @ZA31353
         IC    RD,PIRCNT-PIRL(R4)  GET NO. OF PIRL ENTRIES     @ZA05813
         MODESET EXTKEY=ZERO       RETURN TO KEY 0             @ZA31353
         SLL   RD,K03              MULTIPLY TIMES 8            @ZA05813
         LA    RPAR,PIRRSTR-PIRL+4(RD,R4) END OF PIRL +4 R1    @ZA05813
         LA    R0,8                LENGTH FOR FREEMAIN EQ 8    @ZA05813
         ICM   R0,K08,PIRLSUBP     IND SUBPOOL 254             @ZA05813
* FREEMAIN WILL ABEND IF PIRL WAS NOT CREATED BY IOS OR EXCP   @ZA05813
         FREEMAIN R,LV=(0),A=(1)                               @ZA05813
NOFRCHK  LA    R0,DRVSAVL          TO GET 72 BYTE SA FOR DRIVRS@ZA05813
         GETMAIN  R,LV=(0)         GET SAVE AREA               @YM04935
         LR    RD,RPAR             SA PTR                      @YM04935
         SPACE
         L     RF,CVTPTR           GET CVT PTR
         L     RC,CVTIXAVL         PICK UP IOCOM ADDRESS
         LH    R10,IOCVOICT        GET VOID COUNT
         L     RVOID,IOCVOID       GET VOID POINTER
         SLR   RF,RF               CLEAR REG                   @YM05498
         IC    RF,PIRCNT-PIRL(R4)  GET COUNT FROM PIRL         @YM05498
         SPACE
         CR    RF,R10              IS PIRL COUNT LESS THAN VOID COUNT
         BNL   USEVOID             NO, GREATER
         SPACE
         LR    R10,RF              LESS USE PIRL COUNT
         SPACE
USEVOID  L     RF,VOIRSTR          GET VOID ENTRY
         SPACE
         LA    RPAR,PIRRSTR        POINT TO  PIRL ENTRY
         CLC   NOENTRY,PIRRSTR     CHECK FOR PIRRSTR & PIRDVRU @YM06585
         BE    LOOP                NO ENTRY AT ALL, SKIP DRIVER@YM06585
         SPACE
         BALR  RET,RF              GO TO RESTORE ROUTINE
         SPACE
         LTR   RF,RF               ANY RETURN CODE
         BZ    LOOP                NO GO TO NEXT ENTRY
         SPACE
         LA    RCODE,K04           PUT RETURN CODE IN CODE REG
         SPACE
LOOP     LA    RVOID,VOIEL(RVOID)  POINT TO NXT ENTRY IN VOID
         LA    RPIRL,PIRENTL(,RPIRL)  POINT TO NEXT PIRL ENTRY
         SPACE
         BCT   R10,USEVOID         GO THROUGH LOOP AGAIN
         TITLE 'IGC0001G - FREE RESOURCES AND EXIT'
***************************************************************
*                                                             *
*        FREE RESOURCES AND RETURN TO SUPERVISOR              *
*                                                             *
***************************************************************
         SPACE
         LR    RPAR,RD             GET SA ADDR                 @YM04935
         LA    R0,DRVSAVL          GET LNTH                    @YM04935
         FREEMAIN  R,LV=(0),A=(1)  FREE SA
         SPACE
         LTR   RF,RCODE            ANY RETURN CODE             @ZA31353
         BNZ   XIT                 YES, EXIT                   @ZA31353
         SLR   RD,RD               CLEAR WORK REG
         IC    RD,PIRCNT-PIRL(R4)  GET NUMBER OF PIRL ENTRIES
         SLL   RD,K03              MULTIPLY TIMES 8
         LA    RD,PIRRSTR-PIRL+4(RD) ADD HEADER LENGTH +4      @ZA05813
         LR    RPAR,R4             PUT PIRL ADDRESS IN R1
         TM    RBOPSW+K01-RBBASIC(R2),K01 IF PROBLEN PROG STATE@ZA05813
         BO    FREEPIRL            LENGTH IS OK, OTHERWISE     @ZA05813
         LA    RD,8(RD)            ADD 8 TO LNGTH TO FREE EXTRA@ZA05813
FREEPIRL LR    R0,RD              PUT PIRL LNGTH IN R0        @ZA05813
         ICM   R0,K08,PIRLSUBP    IND SUBPOOL 254              @ZA05813
*                                  BYTES NOT FREED IF SUP STATE@ZA05813
         SPACE
         FREEMAIN  R,LV=(0),A=(1)
         SPACE
         L     RF,CVTPTR           GET CVT PTR
         TM    RBOPSW+K01-RBBASIC(R2),K01     TEST SUP STATE   @OZ02368
         BZ    NOCHECK             YES BYPASS VAL CHECK        @OZ02368
         SPACE
         LA    RPAR,ANCHOR         GET ANCHOR FOR DEB CHECK    @OZ02368
         LA    R2,DEBUSRPG-DEBBASIC    GET OFFSET DEB USER PURG@OZ02368
         SLR   RPAR,R2             POINT TO DEB BEGINNING      @OZ02368
         SLR   R0,R0               INDICATE VERIFY             @OZ02368
         LR    RSVRB,RB            SAVE RTN ADDR IN R5         @OZ02368
         L     RF,CVTEXT2-CVTMAP(,RF)  GET EXTENSION PTR       @OZ02368
         L     RF,CVTDEBVR-CVTXTNT2(,RF)    GET DEB CHECK PTR  @OZ02368
         L     R10,PSATOLD         GET TCB ADDR FOR DEBCHK     @ZA10461
***************************************************************@ZA10461
* DEB VALIDITY CHECK ROUTINE REQUIRES R10 TO HAVE TCB ADDRESS *@ZA10461
* AND R1 TO HAVE DEB ADDRESS. R11 AND R10 ARE MODIFIED BY THE *@ZA10461
* VALIDITY CHECK ROUTINE.                                     *@ZA10461
***************************************************************@ZA10461
         BALR  RET,RF              GO CHECK DEB                @OZ02368
         B     DEBOK            +0 GOOD DEB, FINISHED CHECKING @OZ02368
         LR    RB,RSVRB         +4 NOT VALID DEB,CHECK KEY     @OZ02368
         SPACE
         L     R10,PSATOLD         GET CURR TCB PTR            @OZ02368
         SPACE
         MODESET EXTKEY=RBT234,WORKREG=2  GET PREVIOUS RB KEY  @YM05497
         SPACE
         MVC   ANCHOR+K01(K03),NOANCHOR+K01 IND NO ANCHOR      @YM01144
         SPACE
         MODESET EXTKEY=ZERO
         B     XIT                 FINISHED                    @OZ02368
         SPACE
DEBOK    LR    RB,RSVRB            RELOAD RB WITH RETURN ADDR  @OZ02368
NOCHECK  MVC   ANCHOR+K01(K03),NOANCHOR+K01 IND NO ANCHOR      @OZ02368
         SPACE
XIT      LR    RET,RB              GET RETURN ADDR
         LR    RF,RCODE            RESTORE RETURN CODE
         SPACE
         BR    RET                 RETURN TO CALLER
         TITLE 'IGC0001G - CONSTANTS'
***************************************************************
*                                                             *
*        DEFINED CONSTANTS                                    *
*                                                             *
***************************************************************
         SPACE
         DS    0F
NOANCHOR DC    X'00FFFFFF'         TEST FOR ANCHOR             @YM01144
NOENTRY  DC    D'0'                TEST FOR NO PIRL ENTRY      @YM06585
PIRLSUBP DC    AL1(254)            IND SUB POOL 254            @Y30IPLG
         TITLE 'IGC0001G - MODULE IDENTIFICATION'
***************************************************************
*                                                             *
*        MODULE IDENTIFICATION                                *
*                                                             *
***************************************************************
         SPACE
         MODID BR=NO
         TITLE 'IGC0001G - MAINTENANCE AREA'
***************************************************************
*                                                             *
*        MAINTENANCE AREA                                     *
*                                                             *
***************************************************************
         SPACE
         DS    0F
RESPTCH  DC    CL8'RESPTCH'        PATCH ID
         DC    13F'0'              PATCH AREA
         SPACE
         END
