DAVV     TITLE '   IECVDAVV - PROLOGUE          '
****************************************************************
*                                                              *
* MODULE NAME = IECVDAVV                                       *
*                                                              *
* DESCRIPTIVE NAME = DIRECT ACCESS VOLUME VERIFICATION         *
*                                                              *
* COPYRIGHT = NONE                                             *
*                                                              *
*                                                              *
* STATUS                                                       *
*    CHANGE LEVEL 00                                           *
*                                                              *
* FUNCTION                                                     *
*    DAVV RECEIVES CONTROL FROM POST STATUS VIA THE EXIT EF-   *
*    FECTOR AND ERP ROUTER WHEN IOSPROC OF THE IOSB CONTAINS   *
*    X'10'.  THE DAVV FUNCTION  IS TO VERIFY THAT THE PROPER   *
*    VOLUME IS  MOUNTED ON A  DIRECT ACCESS DEVICE.  THIS IS   *
*    DONE WHEN AN  UNSOLICITED DEVICE  END INTERRUPT HAS OC-   *
*    CURRED AND THE ATTENTION INDEX IN THE UCB IS ZERO.  THE   *
*    THE  VOLUME  LABEL IS  READ AND COMPARED  TO THE VOLUME   *
*    SERIAL IN THE UCB. IF THEY DO NOT MATCH, A DISMOUNT AND   *
*    MOUNT MESSAGE ARE ISSUED FOR THE  CORRECT VOLUME.  DAVV   *
*    DOES ITS OWN ERROR  RECOVERY AND INTERFACES WITH IGE00-   *
*    25C TO PRINT AN INTERVENTION REQUIRED MESSAGE.            *
*    IF THE DEVICE IS A PAGE PACK, CONTROL IS RECEIVED DIRECTLY*
*    FROM POST STATUS IS SRB MODE AND IN PLACE OF ISSUING      *
*    WTO'S, CONTROL RETURNS TO POST STATUS TO ENTER A          *
*    RESTARTABLE WAIT STATE.                                   *
*                                                              *
* NOTES = SEE BELOW                                            *
*                                                              *
*    DEPENDENCIES = NONE                                       *
*                                                              *
*    RESTRICTIONS = NONE                                       *
*                                                              *
*    REGISTER CONVENTIONS = SEE BELOW FOR REGISTER EQUATES     *
*                                                              *
*    PATCH LABEL = NONE                                        *
*                                                              *
* MODULE TYPE = INTEGRITY OF SYSTEM                            *
*                                                              *
*    PROCESSOR = ASSEMBLER                                     *
*                                                              *
*    MODULE SIZE = HEX 6B4 BYTES                               *
*                                                              *
* ATTRIBUTES                                                   *
*    RESIDENT                                                  *
*    REENTRANT                                                 *
*    RUNS ENABLED                                              *
*    RUNS IN KEY 0                                             *
*    RUNS IN SUPERVISOR STATE                                  *
*                                                              *
* ENTRY POINT =                                                *
*    IECVDAVV - FROM THE ERP ROUTER                            *
*               OR POST STATUS IN SRB MODE                     @ZA00904
*    DAVVESTA - FROM RTM FOR RECOVERY PROCESSING               *
*                                                              *
*    LINKAGE = NORMAL
*
*    PURPOSE = SEE FUNCTION
*
*    INPUT =                                                      *
*    REGISTER  1 - ADDRESS OF IOSB                             *
*    REGISTER 13 - ADDRESS OF ESA1 SAVE AREA                   *
*    ADDRESS OF UCB IN IOSB                                    *
*    ADDRESS OF ERP WORK AREA IN IOSB                          *
*    UCBUDE ON AS FIRST TIME SWITCH                            *
*    UCBDAVV ON TO INDICATE DAVV IN CONTROL                    *
*    UCBQISCE ON TO PREVENT OTHER I/O ON DEVICE                *
*                                                              *
*    OUTPUT =                                                  *
*    UCBQISCE OFF UPON COMPLETION                              *
*    UCBDAVV  OFF UPON COMPLETION                              *
*    MESSAGES - SEE BELOW                                      *
*                                                              *
*    EXITS NORMAL = BR 14 TO DISPATCHER                        *
*                                                              *
*    EXITS ERROR = NONE                                        *
*                                                              *
* EXTERNAL REFERENCES                                          *
*    SVC F - ERREXCP                                           *
*    SVC 57 - DOM                                              *
*   RESIDENT XCTL ROUTINE (TO IGE0025C)                        *
*                                                              *
*    DATA SETS =                                               *
*                                                              *
*    DATA AREAS =                                              *
*                                                              *
* TABLES/WORKAREAS                                             *
*    ASCB                                                      *
*    ASXB                                                      *
*    CVT                                                       *
*    ERP WORKAREA                                              *
*    IOSB                                                      *
*    IRT                                                       *
*    LCCA                                                      *
*    PSA                                                       *
*    SIRB                                                      *
*    UCB                                                       *
*                                                              *
* MESSAGES                                                     *
*   IEA606I ADR,BAD VOLUME LABEL,CM,STAT,SENSBBBBBB,SER        *
*   IEA604A D ADR,SER                                          *
*   IEA605A M ADR,SER                                          *
*                                                              *
* MACROS = SDUMP,SETLOCK,SETRP,ESTAE,WTO,SETFRR,IOSINTRP       *
*                                                              *
* CHANGE ACTIVITY = NONE                                       *
*                                                              *
****************************************************************
         TITLE '   IECVDAVV - DSECTS            '
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         CVT   DSECT=YES,LIST=NO
         EJECT
         IECDERWA
         EJECT
         IECDIOCM                                              @ZA24442
         EJECT
         IECDIOSB
         EJECT
         IHALCCA
         EJECT
         IECDIRT
         EJECT
         IHASDWA
         EJECT
         IECDSIAB
         EJECT
         IHAPSA
         EJECT
         IHARB
         EJECT
FX       DSECT
         DS    XL4
         DS    XL150
         ORG   FX+4
****************************************************************
*                                                              *
*   THIS AREA IS USED TO MAP THE PERMANENT I/O ERROR MESSAGE.  *
*   IT IS MAPPED INTO THE EXTENDED ERP WORK AREA.              *
*                                                              *
****************************************************************
         SPACE 1
ERRBUF   DS    0F
BUFLNG   DS    H                   MESSAGE LENGTH
BUFMCS   DS    XL2                 MCS FLAG
BUFID    DS    CL8                 MESSAGE ID - CONSTANT
BUFCUA   DS    CL3                 DEVICE ADDRESS - VARIABLE
         DS    CL1                 ',' - CONSTANT
BUFTXT   DS    CL16                MESSAGE TEXT - CONSTANT
         DS    CL1                 ',' - CONSTANT
BUFOP    DS    CL2                 COMMAND CODE - VARIABLE
         DS    CL1                 ',' - CONSTANT
BUFCSW   DS    CL4                 CSW STATUS - VARIABLE
         DS    CL1                 ',' - CONSTANT
BUFSNS1  DS    CL10                5 SENSE BYTES - VARIABLE
         DS    CL1                 ',' - CONSTANT
BUDVOL   DS    CL6                 VOLUME SERIAL - VARIABLE
         ORG   FX+76               SKIP FIRST SAVE AREA        @ZA24442
ERRSA    DS    16F                 SAVE AREA FOR IOSINTRP      @ZA24442
         EJECT
         ORG   FX+4
****************************************************************
*                                                              *
*   THIS AREA IS USED TO MAP THE DISMOUNT AND MOUNT MESSAGES   *
*   THEY ARE MAPPED INTO THE EXTENDED SAVE AREA OF THE SIRB    *
*   WHICH IS AVAILABLE ONLY IN VS2/2.                          *
*                                                              *
****************************************************************
         SPACE 1
MNTBUF   DS    0F
DMBUFL   DS    H                   MESSAGE LENGTH
DMMCSF   DS    XL2                 MCS FLAGS
DMMSGID  DS    CL8                 MESSAGE ID - CONSTANT
DMACT    DS    CL2                 ACTION D OR M
DMCUA    DS    CL3                 DEVICE ADDR - VARIABLE
         DS    CL1                 ',' - CONSTANT
DMVOL    DS    CL6                 VOLUME SERIAL - VARIABLE
         EJECT
         IEFUCBOB LIST=YES,PREFIX=YES
         EJECT
***                                                           ***
*   DSECT DESCRIBES USAGE OF SVC DUMP 4K BUFFER                 *
***                                                           ***
         SPACE 2
SDBUF    DSECT
SDBDATAD DS    A                   DATA ADDRESS
SDBDLN   DS    H                   DATA LENGTH
SDBDATA  EQU   *
SDBSIB   DS    XL(SIABEL)          SRB/IOSB
SDBEWA   DS    XL(SIABEL)          DAVV WORKAREA
SDBUCB   DS    XL(UCBCURPX+(UCBBASE-UCBOB)) UCB
SDBDL    EQU   *-SDBDATA
SDBLAST  DS    XL6                 END OF USAGE INDICATOR
         SPACE 5
*  FRR USER PARAMETER MAP                                      @ZA00904
         SPACE
FRRPARM  DSECT                                                 @ZA00904
FRRBASE  DS    A                   MAINLINE BASE REG           @ZA00904
FRRIOSB  DS    A                   IOSB POINTER                @ZA00904
         DS    4F                  NOT USED                    @ZA00904
         EJECT
         IHAFRRS
         TITLE '   IECVDAVV - EQUATES           '
REG0     EQU   0                   USED IN CS INSTRUCTION
PARMRG   EQU   1                   IOSB INPUT ADDRESS
IOSBRG   EQU   2                   IOSB ADDRESS THRUOUT DAVV
*        EQU   3                   NOT USED
FRRREG   EQU   4                   FRR PARM RETURN             @ZA00904
BASERG   EQU   5                   BASE REGISTER
ERPWA    EQU   6                   ADDRESS OF ERP WORK AREA
UCBREG   EQU   7                   ADDRESS OF UCB
WRKRG1   EQU   8                   WORK REGISTER 1
WRKRG2   EQU   9                   WORK REGISTER 2
CCWREG   EQU   10                  CHANNEL PROGRAM ADDRESS
SIRBRG   EQU   11                  ADDR OF MSG BUFFER IN SIRB
IRTREG   EQU   12                  IRT ADDR FOR CS INSTR.
LLSAVE   EQU   13                  SAVE AREA ADDRESS
RTRNRG   EQU   14                  RETURN REGISTER
LINKRG   EQU   15                  LINKING REGISTER
         SPACE 1
*        MISCELLANEOUS EQUATES
         SPACE 1
D0       EQU   0                   DISPLACEMENT OF 0
D1       EQU   1                   DISPLACEMENT OF 1
D2       EQU   2                   DISPLACEMENT OF 2
D3       EQU   3                   DISPLACEMENT OF 3
EXIT     EQU   3                   SVC 3 SYMBOLIC
D4       EQU   4                   DISPLACEMENT OF 4
D5       EQU   5                   DISPLACEMENT OF 5
D6       EQU   6                   DISPLACEMENT OF 6
D7       EQU   7                   DISPLACEMENT OF 7
D8       EQU   8                   DISPLACEMENT OF 8
D9       EQU   9                   DISPLACEMENT OF 9
D11      EQU   11                  LENGTH OF 11                @ZA06506
D12      EQU   12                  DISPLACEMENT OF 12
D13      EQU   13                  DISPLACEMENT OF 13
D16      EQU   16                  DISPLACEMENT OF 16
D28      EQU   28                  DISPLACEMENT OF 28
D31      EQU   31                  DISPLACEMENT OF 31
D62      EQU   62                  COUNT OF 62
C512     EQU   512                 FOR ADJUSTING TO UCB PREFIX
FIVE     EQU   X'05'               COUNT FOR SEARCH
TEN      EQU   10                  COUNT FOR READ
LASTIND  EQU   X'80'               END OF LIST INDICATOR
MASKFF   EQU   X'FF'               FF FOR BUFFER AREA
MASK00   EQU   X'00'               ZERO VALUE FOR COMPARES
SILI     EQU   X'20'               SILI FLAG
CMCHNSLI EQU   X'60'               COMMAND CHAIN AND SILI FLAGS
READOP   EQU   X'06'               READ DATA COMMAND
TICOP    EQU   X'08'               TIC COMMAND
SIDOP    EQU   X'31'               SEARCH ID EQUAL COMMAND
RDR0OP   EQU   X'16'               READ RECORD ZERO COMMAND
R3       EQU   X'03'               RECORD 3 INDICATOR
WINCHST  EQU   X'0A'               WINCHESTER DEVICE
CSWUEX   EQU   X'01'               UNIT EXCEPTION
CSWUCK   EQU   X'02'               UNIT CHECK
WTOID    EQU   253                 IGE0025C ID FOR XCTL
DISP     EQU   X'F0'               DISPLACEMENT FOR TRANSLATE
DISID    EQU   C'4'                DISMOUNT MSG CODE
MNTID    EQU   C'5'                MOUNT MSG CODE
DISMOUNT EQU   C'D'                DISMOUNT ACTION
MOUNT    EQU   C'M'                MOUNT ACTION
ERREXCP  EQU   15                  SVC F - ISSUED FOR I/O
DAVRCURS EQU   X'80'               ESTAE - RETRY RECURSION
DAVRCTA  EQU   X'40'               RCTA NOT PROVIDED TO ESTAE
DISABLE  EQU   X'FC'               STNSM DISABLE MASK
*                                  * DISABLES I/O AND EXTERNAL
         TITLE '   IECVDAVV - INITIALIZATION AND CCW BUILD'
IECVDAVV CSECT
         USING FX,SIRBRG
         USING PSA,0
         BALR  BASERG,0            SET ADDRESSABILITY
         USING DAVVEP,BASERG
DAVVEP   EQU   *                   DAVV ADDRESSABILITY LABEL
         MODID
         SPACE 1
         ST    PARMRG,D0(LLSAVE)   SAVE IOSB ADDRESS
         STM   LLSAVE,RTRNRG,D4(LLSAVE)
         LR    IOSBRG,PARMRG       PUT IOSB ADDRESS IN REG 2
         SPACE 1
         ESTAE DAVVESTA,ASYNCH=NO  SET ESTAE ROUTINE
         SPACE 1
         USING IOSB,IOSBRG
         L     UCBREG,IOSUCB       PUT UCB IN REG 7 FROM IOSB
         LA    WRKRG1,C512         ADDRESS UCB PREFIX
         SR    UCBREG,WRKRG1
         USING UCB,UCBREG
         L     ERPWA,IOSERP        PUT ERP W.A. ADDR IN REG 6
         USING EWA,ERPWA
         L     SIRBRG,EWAEXT       LOAD WORK AREA               @YM7181
         B     DAVPROC             SKIP ALTERNATE ENTRY CODE   @ZA00904
         SPACE 1
***********************************************************************
*  ALTERNATE ENTRY POINT--CALLED DIRECTLY BY IECVPST IN SRB MODE WHEN *
*  UNSOLICITED DEVICE END IS FROM A PAGE PACK (UCBPGFL ON)            *
***********************************************************************
         ENTRY IECVDAV2                                        @ZA00904
IECVDAV2 STM   REG0,LINKRG,0(LLSAVE) SAVE IECVPST REGISTERS    @ZA00904
         LR    BASERG,LINKRG       SET BASE REGISTER           @ZA00904
         LA    WRKRG1,IECVDAV2-DAVVEP AND ESTABLISH            @ZA00904
         SR    BASERG,WRKRG1          ADDRESSABILITY AT DAVVEP @ZA00904
         LR    IOSBRG,PARMRG       SET IOSB POINTER            @ZA00904
         L     UCBREG,IOSUCB       SET UCB POINTER             @ZA00904
         LA    WRKRG1,C512         ADJUST                      @ZA00904
         SR    UCBREG,WRKRG1          FOR PREFIX               @ZA00904
         L     ERPWA,IOSERP        SET ERP WORK AREA POINTER   @ZA00904
         L     SIRBRG,EWAEXT       SET EXTEND WORK AREA POINTER@ZA00904
*                                     USED IN THIS ENTRY       @ZA00904
*                                     FOR A SAVE AREA          @ZA00904
         ST    LLSAVE,4(SIRBRG)    SAVE RETURN SA POINTER      @ZA00904
         SETFRR A,FRRAD=DAVFRRA,PARMAD=(FRRREG),                       *
               WRKREGS=(WRKRG1,WRKRG2),                                *
               RELATED=(DAVFRR,IECVDAVV(DAVFRRTY,DAVRRY,DAVWAIT2))
         USING FRRPARM,FRRREG                                  @ZA00904
         ST    BASERG,FRRBASE      SAVE BASE AND IOSB          @ZA00904
         ST    IOSBRG,FRRIOSB         REGS FOR FRR             @ZA00904
         SPACE 1
DAVPROC  TM    UCBFLC,UCBUDE       FIRST TIME THROUGH?
         BZ    DAVSNTRY            NO, GO TO SECON ENTRY
         CLI   UCBVOLI,MASK00      HAS THERE BEEN A MOUNT REQ.
*                                  SINCE THE DE INTERRUPT?
         BE    DAVVSAM             YES,VERIFICATION NOT NEEDED @Y30LPLC
         TM    UCBDMCT,UCBMOUNT    MOUNT BIT SET?
         BO    DAVVSAM             YES,VERIFICATION NOT NEEDED @Y30LPLC
         SPACE 1
         MVI   IOSCOD,IOSNRMC      SET COMPLETION CODE TO 7F
         SPACE 1
****************************************************************
*        BUILD CHANNEL PROGRAM TO READ VOLUME SERIAL           *
****************************************************************
         SPACE 1
         MVI   EWACNTR1,MASK00     SET ERROR COUNT TO ZERO
         XC    IOSEEK(D7),IOSEEK   ZERO MBBCCHHR IN IOSB
DAVRSET  MVI   IOSEEK+D7,R3        SET RECORD NUMBER TO 3
         LA    CCWREG,EWDCCW1      INIT REG WITH ADDR OF CHANNEL
*                                  PROGRAM AND PUT IN IOSB LATER
         LRA   WRKRG1,IOSEEK+D3    GET ADDR OF SEARCH ARGUMENT
         ST    WRKRG1,D0(CCWREG)   AND PUT IN SEARCH CCW
         MVI   D0(CCWREG),SIDOP    SET OP CODE TO SID
         LA    WRKRG1,FIVE
         ST    WRKRG1,D4(CCWREG)   SET COUNT TO 5 IN SEARCH CCW
         MVI   D4(CCWREG),CMCHNSLI SET COMMAND CHAIN AND SILI
         LRA   CCWREG,D0(CCWREG)   GET REAL ADDR OF CHAN PGM
         ST    CCWREG,EWDCCW2      AND STORE IN TIC CCW
         ST    CCWREG,IOSRST       AND NOW IN IOSB CHAN PGM ADDR
         LA    CCWREG,EWDCCW2      INCR TO TIC CCW
         MVI   D0(CCWREG),TICOP    MOVE TIC OP CODE TO TIC CCW
         LA    CCWREG,EWDCCW3      INCR TO READ CCW
         LA    WRKRG2,EWDSAVS      GET REAL ADDRESS OF BUFFER
         MVI   D0(WRKRG2),MASKFF   MOVE FF TO FIRST BYTE OF BUFFER
         MVC   D1(D9,WRKRG2),D0(WRKRG2)
*                                  MOVE FF TO REST OF BUFFER
         LRA   WRKRG2,D0(WRKRG2)   AND STORE IN READ CCW
         ST    WRKRG2,D0(CCWREG)
         MVI   D0(CCWREG),READOP   MOVE READ DATE OP CODE TO CCW
         ALR   WRKRG1,WRKRG1       DOUBLE 5 COUNT FOR 10 COUNT
         ST    WRKRG1,D4(CCWREG)   SET SILI INDICATOR
         SPACE 1
         OI    IOSFLA,IOSERR       SET RETRY INDICATOR ON
         OI    IOSOPT,IOSQISCE     SET QUIESCE FLAG FOR IOS
         SPACE 2
****************************************************************
*  INTERFACE TO SVC F TO READ VOLUME LABEL OR RETRY ERROR             *
*  FOR BRANCH ENTRY BY IECVPST, RETURN IS BY A BRANCH TABLE           *
****************************************************************
         SPACE 1
DAVSVCF  TM    UCBSTAB,UCBPGFL     SRB ENTRY?                  @ZA00904
         BZ    DAVSVCF1            NO--ISSUE SVC               @ZA00904
DAVFRRTY SETFRR D,WRKREGS=(WRKRG1,WRKRG2),                             *
               RELATED=(DAVFRR,IECVDAVV(IECDAV2))              @ZA00904
         L     ERPWA,IOSERP        GET EWP WORK AREA PTR       @ZA00904
         L     SIRBRG,EWAEXT       GET EXTENDED WA PTR         @ZA00904
         L     LLSAVE,4(SIRBRG)    RESTORE SAVE AREA POINTER   @ZA00904
         LM    REG0,LINKRG,0(LLSAVE) RESTORE REGISTERS         @ZA00904
         TM    IOSFLA-IOSB(PARMRG),IOSERR  RETRY READ?         @ZA00904
         BNO   D4(RTRNRG)          NO--RETURN TO EXIT          @ZA00904
         BR    RTRNRG              YES--RETRY READ             @ZA00904
DAVSVCF1 EQU   *
         L     PARMRG,D0(LLSAVE)   INIT REG 1 WITH IOSB
         SVC   ERREXCP             TO IOS TO READ VOL LABEL
         L     RTRNRG,D8(LLSAVE)   RESTORE REG 14
         BR    RTRNRG              RETURN TO DISPATCHER
         SPACE
************************************************************** @Y30LPLC
*    VSAM INTERFACE FOR SS1. TURN OFF UCBAMV FLAG IF A MOUNT   @Y30LPLC
*    REQUEST HAS BEEN MADE.                                    @Y30LPLC
************************************************************** @Y30LPLC
         SPACE
DAVVSAM  EQU   *                                               @Y30LPLC
         NI    UCBFL5,MASKFF-UCBAMV INDICATE COMPARISON CHECK- @Y30LPLC
*                                   ING NOT COMPLETE FLAG.     @Y30LPLC
         SPACE 2
****************************************************************
*    THIS IS CLEAN UP CODE PRIOR TO EXITING.  UCBQISCE AND     *
*    UCBDAVV ARE RESET WHILE HOLDING THE UCB LOCK. THE IRT     *
*    RESTART  CHANNEL MASK IS USED TO COMPARE AND  SWAP TO     *
*    SET AN INDICATOR FOR THIS PATH NOW BEING AVAILABLE.       *
****************************************************************
         SPACE 1
DAVENDUP EQU   *
         MVI   IOSCOD,IOSNRMC      SET COMPLETION CODE TO 7F
         NI    IOSFLA,MASKFF-IOSERR RESET RETRY INDICATOR
         SPACE 1
         LR    WRKRG1,LLSAVE       SAVE REG 13 ACROSS SETLOCK
DAVSUCB  SETLOCK  OBTAIN,TYPE=IOSUCB,ADDR=UCBLOCK,MODE=UNCOND,         *
               RELATED=(DAVUCB,IECVDAVV(DAVSUCB1))
         LR    LLSAVE,WRKRG1       RESTORE REG 13
         SPACE 1
         NI    UCBFLA,MASKFF-UCBQISCE
         NI    UCBFL4,MASKFF-UCBDAVV
*                                  RESET QUIESCE AND DAVV IND.
         SR    WRKRG1,WRKRG1       CLEAR WORK REG
         IC    WRKRG1,UCBCHA       LAST STARTED CHANNEL ADDR
         L     IRTREG,PSALCCAV
         USING LCCA,IRTREG
         LA    IRTREG,LCCAIRT      GET IRT ADDR AND
         USING IRT,IRTREG          ESTABLISH ADDRESSABILITY
         LA    WRKRG2,D1           INIT REG WITH 1
         SLL   WRKRG2,D31          SHIFT TO HIGH ORDER BIT
         SRL   WRKRG2,D0(WRKRG1)   SHIFT TO PROPER CHAN LOCATION
         L     WRKRG1,IRTCHMSK     GET IRT CHANNEL MASK
DAVCSET  LR    REG0,WRKRG2         PREPARE TO MERGE
         OR    REG0,WRKRG1         SET THIS CHANNEL IND
         CS    WRKRG1,REG0,IRTCHMSK
*                                  IF MASKS ARE NOT EQUAL, BRANCH
         BNE   DAVCSET             TO SWAP AGAIN.
*                                  IF EQUAL, REPLACE IRTMASK
*                                  WITH MASK WITH THIS CHANNEL
*                                  INDICATED IN IT.
         SPACE 1
         LR    WRKRG1,LLSAVE       SAVE REG 13 ACROSS SETLOCK
DAVSUCB1 SETLOCK  RELEASE,TYPE=IOSUCB,ADDR=UCBLOCK,                    *
               RELATED=(DAVUCB,IECVDAVV(DAVSUCB))
         SPACE 1
*   SIMULATE AN INTERRUPT TO INSURE IOS WILL REDRIVE DEVICE    *
         SPACE 1
         L     SIRBRG,EWAEXT       RESTORE SIRBREG             @ZA24442
         LA    LLSAVE,ERRSA        GET SAVE AREA               @ZA24442
         L     WRKRG2,IOSUCB       GET BASE UCB ADDRESS
         IOSINTRP UCB=(WRKRG2),VAR=1,BRANCH=YES                @ZA24442
         LR    LLSAVE,WRKRG1       RESTORE REG 13              @ZA24442
         SPACE 1
         B     DAVSVCF             BRANCH TO ISSUE SVC F FOR
*                                  TERMINATION PROCESSING
         TITLE '   IECVDAVV - SECOND ENTRY PROCESSING '
****************************************************************
*    SECOND ENTRY IS INDICATED BY THE UCBUDE INDICATOR BEING   *
*    OFF. ENTRY HERE INDICATE THAT THE VOLUME LABEL WAS JUST   *
*    READ OR DAVV ISSUED A DISMOUNT/MOUNT MESSAGE.             *
****************************************************************
         SPACE 1
DAVSNTRY EQU   *
         TM    IOSFLC,IOSDVMNT     DAVV ISSUE MOUNT MESSAGE?
         BZ    DAVERRCK            NO, GO CHECK FOR READ ERRORS
         NI    IOSFLC,MASKFF-IOSDVMNT
*                                  RESET DAVV ISSUED MOUNT IND.
         LA    PARMRG,EWDCCW8      PICK UP MESSAGE IDS
         DOM   MSGLIST=(1)         DELETE MESSAGES
         B     DAVRSET             BRANCH TO CONTINUS SETTING
*                                  UP TO READ VOLUME SERIAL
         TITLE '   IECVDAVV - ERROR HANDLING     '
****************************************************************
*    IF NO ERROR OCCURRED WHILE READING THE VOLUME LABEL,      *
*    THE LABEL READ IS COMPARED TO THE LABEL IN THE  UCB.      *
****************************************************************
         SPACE 1
DAVERRCK EQU   *
         LH    WRKRG1,IOSTATUS     GET CSW STATUS
         N     WRKRG1,CDUATN       IF OTHER THAN CHE, DVE, UNIT
         BNZ   DAVUCK              EXCPTN, ATTN, WLR BRANCH
         SPACE 1
         TM    IOSFLC,IOSDVALT     ALT TRACK PROCESSING IN PROG-
         BO    DAVALT              RESS, YES GO HANDLE
         SPACE 1
         TM    IOSTSA,CSWUEX       IF UNIT EXCEPTION, BRANCH TO
         BO    DAVINCR             CONTINUE RETRY
         SPACE 1
*        COMPARE VOLUME SERIALS
         SPACE 1
         LA    WRKRG1,EWDSAVS      GET ADDR OF INPUT BUFFER
         LA    WRKRG1,D4(WRKRG1)   INCR TO VOL SERIAL
         LA    WRKRG2,UCBVOLI      GET EXPECTED VOL SER ADDR
         CLC   D0(D6,WRKRG1),D0(WRKRG2)     VOL SERS MATCH?
*                                  YES, BRANCH TO INTERFACE WITH
         BE    DAVENDUP            SVC F TO TERMINATE PROCESSING
         TITLE '   IECVDAVV - ERROR HANDLING     '
****************************************************************
*    THIS LABEL IS NOT REFERENCED BUT FALL THROUGH TO HERE     *
*    IS DONE IF THE VOLUME SERIAL DID NOT MATCH BUT NO ERR     *
*    OCCURRED DURING THE I/O.                                  *
****************************************************************
         SPACE 1
DAVERR   EQU   *
         TM    IOSOPT,IOSBYP       TEST IF LAST I/O WAS A RECALI-
         BZ    DAVDISMT            BRATE BY TESTING IOS BYPASS
         SPACE 1                   PREFIX INDICATOR.
         NI    IOSOPT,MASKFF-IOSBYP-IOSDEP
*                                  RESET BYPASS CHAN PGM PRFX
         LA    WRKRG1,EWDCCW1      AND DEVICE END POST IND.
         LRA   WRKRG1,D0(WRKRG1)   GET REAL ADDR OF CHAN PGM
         ST    WRKRG1,IOSRST       AND RESTORE FOR SID IN IOSB
DAVINCR  SR    WRKRG1,WRKRG1       CLEAR WORK REG TO INCREMENT
         IC    WRKRG1,EWACNTR1     ERROR COUNTER BY 1
         LA    WRKRG1,D1(WRKRG1)
         STC   WRKRG1,EWACNTR1
         CLI   EWACNTR1,TEN        IF # RETRYS EQUAL TO 10 ?
         BNE   DAVSVCF             NO, BRANCH TO RETRY VIA SVC F
         SPACE 1
****************************************************************
*        THIS CODE SETS UP A PERMANENT I/O ERROR MESSAGE.      *
*        IT IS BUILT IN THE SIRB EXTENDED SAVE AREA.           *
****************************************************************
         SPACE 1
         OI    IOSFLC,IOSRWERR     INDICATE PERM ERROR         @ZA00904
         TM    UCBSTAB,UCBPGFL     ERROR ON PAGE PACK?         @ZA00904
         BO    DAVWAIT             YES--RESTARTABLE WAIT       @ZA00904
         MVC   BUFLNG(D62),ERRMSG   MOVE ERROR MSG TO BUFFER AREA
         MVC   EWDCCWA(D2),UCBCHAN MOVE DEVICE ADDR TO WORK AREA
         UNPK  EWDCCW9(D5),EWDCCWA(D3)      UNPACK
         TR    EWDCCW9+D1(D3),TRANTAB-DISP
*                                  TRANSLATE WHAT WAS UNPACKED
         MVC   BUFCUA,EWDCCW9+D1   MOVE DEVICE ADDR TO BUFFER
         L     CCWREG,IOSCC        GET CCW ADDR FROM CSW
         LA    CCWREG,D0(CCWREG)   ZERO HIGH ORDER BYTE
         LTR   CCWREG,CCWREG       IF ZERO CCW ADDRESS, ** IS IN
         BE    DAVERMS1            BUFFER. CONTINUE UNPK AT CSW
*                                  STATUS.
         LA    WRKRG1,D8           LOAD WITH 8
         SR    CCWREG,WRKRG1       DECR TO START OF CCW, UNPK
         UNPK  EWDCCW9(D3),D0(D2,CCWREG)
         TR    EWDCCW9(D1),TRANTAB-DISP
         MVC   BUFOP,EWDCCW9       TRANSLATE AND MOVE TO BUFFER
         SPACE 1
*   UNPK CSW STATUS AND 5 SENSE BYTES; THEN TRANSLATE IT ALL
         SPACE 1
DAVERMS1 UNPK  EWDCCW8(D5),IOSTATUS(D3) EXECUTED UNPACK
         UNPK  EWDCCW8+D4(D11),EWDSNS(D6)                      @ZA06506
         TR    EWDCCW8(D16),TRANTAB-DISP
         MVC   BUFCSW,EWDCCW8      MOVE CSW STATUS TO BUFFER
         MVC   BUFSNS1,EWDCCW8+D4  MOVE SENSE TO BUFFER
         MVC   BUDVOL,UCBVOLI      MOVE VOL SER TO BUFFER
         SPACE 1
         WTO   MF=(E,ERRBUF)     ISSUE I/O ERROR MSG
         ST    PARMRG,EWDCCW8      SAVE MSG ID
         SPACE 2
         NI    IOSFLA,MASKFF-IOSERR RESET RETRY INDICATOR
         B     DAVMNT              GO TO ISSUE MOUNT MSG
         EJECT
****************************************************************
*  THIS CODE SETS UP AND  ISSUES A DISMOUNT  MESSAGE WHEN THE  *
*  VOLUME SERIAL READ DOES NOT MATCH THE VOLUME SERIAL IN THE  *
*  UCB.                                                        *
****************************************************************
         SPACE 1
DAVDISMT EQU   *
         NI    IOSFLC,MASKFF-IOSRWAIT+IOSRWVID  CLEAR WAIT BITS
*                                  AND INDICATE WRONG VOL ID   @ZA00904
         TM    UCBSTAB,UCBPGFL     ERROR ON PAGE PACK?         @ZA00904
         BO    DAVWAIT             YES--RESTARTABLE WAIT       @ZA00904
         MVC   DMBUFL(D28),DISMSG  MOVE DISMOUNT MSG TO BUFR
         MVC   DMCUA(D3),UCBNAME   MOVE UNIT NAME TO MSG BUFFER
         MVC   DMVOL,EWDSAVS+D4    MOVE VOL SERIAL TO MSG BUFFER
         SPACE 1
         WTO   MF=(E,MNTBUF)       ISSUE DISMOUNT MESSAGE
         ST    PARMRG,EWDCCW8      SAVE MSG ID
         SPACE 3
****************************************************************
*  THIS CODE SETS UP AND ISSUES A MOUNT MESSAGE FOR THE VOL-   *
*  UME SERIAL IN THE UCB. SIRBRG HAS THE ADDR OF THE MSG BUF   *
****************************************************************
         SPACE 1
DAVMNT   EQU   *
         MVC   DMBUFL(D28),DISMSG
         MVC   DMCUA(D3),UCBNAME   MOVE UNIT NAME TO MSG BUFFER
         MVC   DMVOL,UCBVOLI       MOVE MSG AND VOL SER TO BUFFR
         MVI   DMACT,MOUNT         INSURE CORRECT ACTION - M
         MVI   DMMSGID+D5,MNTID    INSURE CORRECT ID
         SPACE 1
****************************************************************
*   THE NOT READY FLAG IS NOT SET BEFORE ISSUING MOUNT.  NO    *
*   I/O WILL BE ALLOWED ON THIS DEVICE WITH THE UCB QUIESCE    *
*   FLAG ON WITH THE  EXCEPTION OF DAVV I/O  (IOSQISCE ON).    *
****************************************************************
         SPACE 1
         WTO   MF=(E,MNTBUF)     ISSUE MOUNT MESSAGE
         ST    PARMRG,EWDCCW8+D4   SAVE MESSAGE ID
         OI    EWDCCW8+D4,LASTIND  SET LAST IND ON
         OI    IOSFLC,IOSDVMNT     SET DAVV ISSUED MOUNT IND.
         SPACE 1
****************************************************************
*  GET UCB LOCK TO SET DAVV WAITING INDICATOR AND SRB ADDRESS  *
*  IN UCBIOQ FOR RESTARTING DAVV                               *
****************************************************************
         SPACE 1
         LR    WRKRG2,LLSAVE       SAVE REG 13 ACCROSS SETLOCK
DAVSUCB2 SETLOCK  OBTAIN,TYPE=IOSUCB,ADDR=UCBLOCK,MODE=UNCOND,         *
               RELATED=(DAVUCB,IECVDAVV(DAVSUCB3))
         SPACE 1
         L     WRKRG1,IOSSRB       GET SRB ADDRESS AND STORE
         ST    WRKRG1,UCBIOQ       IN UCB
         OI    UCBFL4,UCBWDAV      SET DAVV WAITING FOR DE INT.
         SPACE 1
SUBSUCB3 SETLOCK  RELEASE,TYPE=IOSUCB,ADDR=UCBLOCK,                    *
               RELATED=(DAVUCB,IECVDAVV(DAVSUCB2))
         LR    LLSAVE,WRKRG2       RESTORE REG 13
         SPACE 1
         L     RTRNRG,D8(LLSAVE)   RESTORE REGISTER 14
         BR    RTRNRG              RETURN TO DISPATCHER
DAVALT   EQU   *                   ALTERNATE TRACK PROCESSING
         NI    IOSFLC,MASKFF-IOSDVALT  RESET ALT TRACK PROC. IND
DAVAMOVE LA    WRKRG1,IOSEEK       GET IOSB SEEK ADDRESS
         LA    WRKRG2,EWDRZRO      GET ALT TRK CCHH AND MOVE TO
         MVC   D3(D4,WRKRG1),D0(WRKRG2)     IOSB SEEK FIELD
         MVI   EWACNTR1,D0         RESET ERROR COUNT TO 0
         B     DAVRSET             BRANCH TO READ VOLUME SERIAL
         EJECT
****************************************************************
*      IF AN ERROR OCCURRED DURING THE READ OF THE VOLUME      *
*      LABEL IT IS ANALYZED  HERE FOR FURTHER PROCESSING.      *
****************************************************************
         SPACE 1
DAVUCK   EQU   *                   UNIT CHECK HANDLING
         TM    IOSTSA,CSWUCK       IF NO UNIT CHECK,
         BZ    DAVINCR             BRANCH TO CONTINUE RETRY
         TM    EWDSNS0,EWDSKCK     TEST FOR SEEK CHECK
         BZ    DAVINTV             NO, GO CHECK INTERVENTION REQ
         LA    WRKRG1,EWDCCW4      GET ADDR OF RECALIBRATE CCW
         MVC   D0(D16,WRKRG1),RECAL MOVE CCWS TO CHAN PGM AREA
         LRA   WRKRG1,D0(WRKRG1)   GET CHAN PGM REAL ADDRESS
         ST    WRKRG1,IOSRST       AND STORE IN CCW ADDR OF IOSB
         OI    IOSOPT,IOSDEP+IOSBYP SET DEVICE END POST AND BY-
*                                  PASS CHAN PGM PREFIX IND.
         B     DAVINCR             BRANCH TO RETRY VIA SVC F
         SPACE 2
DAVINTV  EQU   *                   INTERVENTION REQ. PROCESSING
         TM    EWDSNS0,EWDINT      IS INTERVENTION REQUIRED?
         BO    DAVXCTL             YES, GO PREPARE FOR XCTL
         TM    EWDSNS0,EWDTCC      IF NO TRACK CONDITION CHECK,
         BZ    DAVINCR             GO PREPARE FOR RETRY
         SPACE 1
         CLI   UCBTBYT4,WINCHST    IS THIS A WINCHESTER?
         BZ    DAVAMOVE            NO, GO MOVE ALT TRACK CCHH
         SPACE 1
****************************************************************
*        RECORD ZERO MUST BE READ FOR WINCHESTER DEVICES.      *
*        OTHERWISE IT IS READ BY THE INTERRUPT HANDLER.        *
****************************************************************
         SPACE 1
         LA    CCWREG,EWDCCW6      GET ADDRESS OF RECORD 0 CCW
         LA    WRKRG2,EWDRZRO      GET ADDRESS OF READ BUFFER
         LRA   WRKRG2,D0(WRKRG2)   GET ITS REAL ADDRESS
         ST    WRKRG2,D0(WRKRG1)   AND PUT IN CCW
         MVI   D0(CCWREG),RDR0OP   SET READ R0 OP CODE IN CCW
         LA    WRKRG2,D4
         ST    WRKRG2,D4(CCWREG)   SET COUNT TO 4
         MVI   D4(CCWREG),SILI     SET SILI IND. IN CCW
         LRA   CCWREG,D0(CCWREG)   GET REAL ADDR OF CHAN PGM
         ST    CCWREG,IOSRST       AND STORE  IN IOSB
         OI    IOSFLC,IOSDVALT     SET ALT TRACK PROCESSING IND.
         B     DAVSVCF             BRANCH TO ISSUE SVC F
         EJECT
****************************************************************
*  THIS CODE INTERFACES WITH IGE0025C VIA THE RESIDENT XCTL    *
*  ROUTINE TO  ISSUE AN  INTERVENTION  REQUIRED MSG.  SVC F    *
*  ISSUED BY WTO WILL CAUSE ERREXCP TO ISSUE STARTIO.          *
****************************************************************
         SPACE 1
DAVXCTL  EQU   *
         NI    IOSFLC,MASKFF-IOSRWAIT  CLEAR WAIT BITS         @ZA00904
         OI    IOSFLC,IOSRWIR      INDICATE INTV REQ           @ZA00904
         TM    UCBSTAB,UCBPGFL     ERROR ON PAGE PACK?         @ZA00904
         BO    DAVWAIT             YES--RESTARTABLE WAIT       @ZA00904
         L     SIRBRG,EWAEXT       GET EWA EXTENSION           @ZA29090
         LA    LLSAVE,ERRSA        GET SAVE AREA FOR IOSGEN    @ZA29090
         L     WRKRG2,IOSUCB       GET BASE UCB ADDRESS        @ZA29090
         IOSGEN UCBFLG,UCB=(WRKRG2),TABLE=UCBNRY,VAR=ON,               *
               REG=COND            SET UCB NOT READY           @ZA29090
         MVC   EWDCCW9(D6),UCBVOLI PUT VOLUME SER IN ERP W.A.
         LA    LLSAVE,WTOID        GET NAME OF IGE0025C
         OI    IOSFLA,IOSERR       SET RETRY INDICATOR FOR SVC F@YM6832
         NI    IOSFLB,MASKFF-IOSMSG SET INT. REQ. MSG IND.
         L     RTRNRG,D16          GET ADDRESS OF CVT
         USING CVT,RTRNRG
         L     RTRNRG,CVTXTLER     GET ADDR OF XCTL ROUTINE
         DROP  RTRNRG
         BR    RTRNRG              GO TO XCTL ROUTINE
         SPACE 1
****************************************************************
*    ESTAE RETRY ROUTINES - ENTRY DAVESVCF - SVC 15, SVC 3     *
*                                DAVESVC3 - SVC 3 ONLY         *
****************************************************************
         SPACE 1
DAVESVCF BALR  BASERG,0            SET BASE FOR RETRY CODE ONLY
         USING *,BASERG
         L     SIRBRG,PSAAOLD      CURRENT ASCB
         USING ASCB,SIRBRG
         L     SIRBRG,ASCBASXB     ASCB EXTENSION
         USING ASXB,SIRBRG
         L     SIRBRG,ASXBSIRB     THIS ASCB SIRB
         USING RBBASIC,SIRBRG
         L     PARMRG,RBSIRBWA     LOAD IOSB ADDRESS FOR SVC 15
         SVC   ERREXCP             ENTER IOS TO FREE RESOURCES
DAVESVC3 SVC   EXIT                EXIT SIRB PROCESSING
         USING DAVVEP,BASERG
         SPACE 1
***********************************************************************
*   INTERFACE TO RESTARTABLE WAIT ROUTINE IN IECVPST                  *
*       UCBLOCK OBTAINED TO SET DAVV WAITING INDICATOR AND TO SAVE    *
*       SRB ADDRESS IN UCBIOQ--USED TO RESTART DAVV AFTER INTERRUPT   *
*       AND PSW RESTART, FOR INTERVENTION REQUIRED, ONLY              *
*       UCBNRY IS SET.                                                *
***********************************************************************
         SPACE
DAVWAIT  LR    WRKRG2,LLSAVE       SAVE R13 ACROSS SETLOCK     @ZA00904
DAVRW10  SETLOCK OBTAIN,TYPE=IOSUCB,ADDR=UCBLOCK,MODE=UNCOND,          *
               RELATED=(DAVUCB,IECVDAVV(DAVRW20))              @ZA00904
         TM    IOSFLC,IOSRWIR      INTV. REQ.                  @ZA00904
         BNO   DAVRW14             NO--DO NOT SET UCBNRY       @ZA00904
         OI    UCBFLA,UCBNRY       SET DEVICE NOT READY        @ZA00904
         B     DAVRW20             RELEASE LOCK                @ZA00904
DAVRW14  MVC   UCBIOQ,IOSSRB       SET SRB ADDRESS IN UCB      @ZA00904
         OI    UCBFL4,UCBWDAV      SET DAVV WAITING FOR D.E.   @ZA00904
DAVRW20  SETLOCK RELEASE,TYPE=IOSUCB,ADDR=UCBLOCK,                     *
               RELATED=(DAVUCB,IECVDAVV(DAVRW10))              @ZA00904
         LR    LLSAVE,WRKRG2       RESTORE R13                 @ZA00904
DAVWAIT2 SETFRR D,WRKREGS=(WRKRG1,WRKRG2),                             *
               RELATED=(DAVFRR,IECVDAVV(IECVDAV2))             @ZA00904
         L     ERPWA,IOSERP        GET ERP WORKAREA PTR        @ZA00904
         L     SIRBRG,EWAEXT       GET EXTENDED WA PTR         @ZA00904
         L     LLSAVE,4(SIRBRG)    RESTORE CALLERS R13         @ZA00904
         LM    REG0,LINKRG,0(LLSAVE) RESTORE REGISTERS         @ZA00904
         B     D12(RTRNRG)         RETURN FOR RESTARTABLE WAIT @ZA00904
         EJECT
         TITLE '   IECVDAVV ESTAE ROUTINE   '
****************************************************************
*   DAVV ESTAE ROUTINE - THIS RECOVERY ROUTINE HAS TWO         *
*   FUNCTIONS -                                                *
*        1. IN  CASE OF AN  ERROR SITUATION,  TERMINATE THE    *
*           VOLUME VERIFICATION, RECORD THE ERROR AND ISSUE    *
*           SVC  DUMP IF POSSIBLE,  AND CAUSE  A RETRY SUCH    *
*           THAT AN SCV F, SVC 3 SEQUENCE WILL BE EXECUTED.    *
*           THIS INSURES THAT GLOBAL IOS  RESOURCES USED BY    *
*           DAVV WILL BE RELEASED AND UCB STATUS INDICATORS    *
*           WHICH MAY BE ON WILL GET CLEARED. THESE ACTIONS    *
*           ARE  PERFORMED BY  THE DAVV  ERROR  TERMINATION    *
*           CODE IN THE POST STATUS IOS COMPONENT(IECVPST).    *
*           THE ERROR SITUATION IS INDICATED BY IOSERR=OFF,    *
*           IOSEX=1, AND IOSCOD=X'45'.                         *
*                                                              *
*        2. IN CASE A PAGE  FAULT  ERROR  OCCURS IN  EITHER    *
*           DAVV OR A  FUNCTION  CALLED BY DAVV,   LOGIC IS    *
*           ENTERED SUCH THAT THE SYSTEM  WILL BE PLACED IN    *
*           A '022' WAIT STATE IN ORDER TO ALLOW THE  OPER-    *
*           ATOR TO VISUALLY VERIFY THE VOLUME.  THE SYSTEM    *
*           WILL RESUME NORMAL  OPERATION ONCE THE OPERATOR    *
*           PRESSES THE RESTART KEY.                           *
*                                                              *
*           TO PLACE THE ENTIRE  SYSTEM IN A DISABLED,  RE-    *
*           COVERABLE WAIT STATE,  AN INTERFACE TO THE STOP    *
*           AND RESTART  SUBROUTINE IS  EFFECTED.  THIS RE-    *
*           QUIRES HOLDING THE RESTART RESOURCE AND A PHYS-    *
*           ICAL  DISABLED  STATE.  AN FRR  IS SET TO COVER    *
*           THIS ENVIRONMENT.                                  *
*                                                              *
*   NOTE - THE RECOVERABILITY OF THE SIRB IS INSURED BY THE    *
*          ESTAE SET BY THE ERP LOADER(IECVERPL).  THUS, NO    *
*          SECONDARY RECOVERY ROUTINE IS SET.                  *
*                                                              *
*                                                              *
*   INPUT - REG 0  - 12 IF NO RTCA                             *
*           REG 1  - RTCA ADDRESS IF (REG 0) NOT 12            *
*           REG14 - RTM RETURN ADDRESS                         *
*                                                              *
*   DATA    - PSAAOLD -CURRENT ASCB, PSAYMSK,PSACUPLA          *
*   FIELDS    ASCBASXB -ASCB EXTENSION                         *
*             ASXBSIRB -SIRB                                   *
*             RBSIRBWA -SIRB EXTENDED WORK AREA                *
*             IOSB - IOSFLA,IOSUCB,IOSERP,IOSUSE               *
*             SDWA - PARM,ERRA,MODN,VRA,URAL,DPVA              *
*             UCB  - UCBFLA,UCBFL4                             *
*             CVT  - CVTSDBF,DVTRSTWD,CVTSTPRS                 *
*                                                              *
*   OUTPUT  - SVC DUMP TO SYS1.DUMP IF SDUMP BUFFER AVAILABLE. *
****************************************************************
         EJECT
         USING SDWA,UCBREG
         SPACE 2
DAVVESTA BALR BASERG,0             TEMPORARY BASE
         USING *,BASERG
         LA    WRKRG1,*-DAVVEP
         SR    BASERG,WRKRG1       BACK OFF TO COMMON BASE
         USING DAVVEP,BASERG
         SPACE 1
         LR    IRTREG,RTRNRG       SAVE RTM RETURN ADDRESS
         L     SIRBRG,PSAAOLD      CURRENT ASCB
         USING ASCB,SIRBRG
         L     SIRBRG,ASCBASXB     ASCB EXTENSION
         USING ASXB,SIRBRG
         L     SIRBRG,ASXBSIRB     THIS ASCB SIRB
         USING RBBASIC,SIRBRG
         L     IOSBRG,RBSIRBWA     IOSB ADDRESS
         LA    WRKRG1,D12          * CODE OF 12 INDICATES NO
         CR    REG0,WRKRG1         * RTCA PRESENT
         BE    DAVES250            * BRANCH IF NO RTCA
         LR    UCBREG,PARMRG       RTCA BASE
         SPACE 1
*   TEST FOR RECURSION - SET IOSB FLAGS FOR PERMANENT ERROR    *
         SPACE 1
DAVES100 TM    IOSUSE,DAVRCURS     TEST FOR RETRY RECURSION
         BO    DAVES300            BRANCH YES
         OI    IOSUSE,DAVRCURS     SET RECURSION FLAG
         NI    IOSFLA,MASKFF-IOSERR RESET IOSERR - NO I/O RETRY
         OI    IOSFLA,IOSEX        SET IOSEX - PERMANENT ERROR
         MVI   IOSCOD,IOSABNC      SET ABNORMAL COMPLETION CODE
         SPACE 1
*   TEST FOR MOUNT MESSAGES OUTSTANDING
         SPACE 1
         TM    IOSFLC,IOSDVMNT     MOUNT MSG INDICATOR ON
         BZ    DAVES150            BRANCH NO, MSG NOT ISSUED
         SPACE 1
*   DELETE DISMOUNT/MOUNT MESSAGE ISSUED BY DAVV
         SPACE 1
         L     PARMRG,IOSERP       WORKAREA ADDRESS
         LA    PARMRG,EWDCCW8-EWA(PARMRG) MESSAGE IDS
         DOM   MSGLIST=(1)
         NI    IOSFLC,MASKFF-IOSDVMNT RESET MSG INDICATOR
         SPACE 1
*   TEST FOR PERMANENT PAGE FAULT ERROR (I/0 ERROR ONLY)
         SPACE 1
DAVES150 TM    SDWAERRA,SDWAPGIO   PAGING I/O ERROR OCCUR       @YM6535
         BZ    DAVES400            BRANCH NO
         EJECT
****************************************************************
*   PERMANENT PAGING I/O ERROR - DYNAMIC DIRECT ACCESS VOLUME  *
*   VERIFICATION MUST BE SUSPENDED.  THE OPERATOR IS GIVEN AN  *
*   OPPORTUNITY FOR VISUAL  VERIFICATION VIA A '022' DISABLED  *
*   WAIT STATE.  THIS IS ACHIEVED VIA AN  INTERFACE  WITH THE  *
*   SYSTEM STOP AND RESTART SUBROUTINE.  THE RESTART RESOURCE  *
*   (CVTRSTWD)  MUST FIRST BE ACQUIRED  VIA COMPARE AND SWAP.  *
*   IF IN USE, FURTHER VERIFICATION IS BYPASSED. IF AVAILABLE  *
*   THE SYSTEM  STOP IS RECORDED  PRIOR TO  ENTERING THE  S/R  *
*   ROUTINE.  AN FRR IS  ESTABLISHED TO  RELEASE THE RESOURCE  *
*   AND  RE-ENABLE  THE SYSTEM IN CASE OF AN ERROR SITUATION.  *
****************************************************************
         SPACE 1
         L     CCWREG,CVTPTR       CVT ADDRESS
         USING CVT,CCWREG
         STNSM PSASYMSK,DISABLE    SYSTEM MUST BE DISABLED BEFORE
*                                  INTERFACING WITH STOP/RESTART
         SPACE 1
*   SET AN FRR TO COVER DISABLEMENT AND THE RESTART RESOURCE   *
         SPACE 1
         SETFRR A,FRRAD=DAVESFRA,PARMAD=(WRKRG1),                      *
               WRKREGS=(WRKRG1,WRKRG2)
         EJECT
         STM   BASERG,UCBREG,D0(WRKRG1) SAVE BASE,SDWA SWITCH,
         STM   CCWREG,IRTREG,D12(WRKRG1) * CVT,SIRB,AND RTNADDR
         SPACE 1
*   ACQUIRE RESTART RESOURCE
         SPACE 1
         LH    REG0,PSACPULA       LOGICAL CPUID
         SLL   REG0,D16            SHIFT TO HIORDER BYTES
         L     WRKRG2,DAVSRSCD     DAVV STOP/RESTART CODE
         OR    REG0,WRKRG2         PLACE IN LOW ORDER BYTES
         SR    PARMRG,PARMRG       COMPARE AND SWAP FOR ZEROS
         CS    PARMRG,REG0,CVTRSTWD *
         BNE   DAVES170            BRANCH IF RESOURCE ALREADY
*                                  * HELD - FORGET VERIFICATION
         MVI   D0(WRKRG1),MASKFF   INDICATE RESOURCE HELD FOR FRR
         L     ERPWA,IOSERP        WORKAREA ADDRESSABILITY
         STCK  DAVTIME             TIME STAMP RECORD
         SPACE 1
*   INVOKE THE ASYNCHRONOUS RECORDING FACILITY
         SPACE 1
         LA    LLSAVE,EWAFLG1      PROVIDE A SAVE AREA FOR RECORD
         RECORD TYPE=LOGREC,RCVRY=SETFRR,HEADER=YES,LENGTH=16,         *
               PARMADR=DAVLOGBF
*   IGNORE RETURN CODES FROM RECORD FACILITY
         L     REG0,DAVWAITC       WAIT STATE CODE = 022
         SR    PARMRG,PARMRG       CLEAR QUIESCE INDICATOR
         L     LINKRG,CVTSTPRS     SUBROUTINE ENTRY POINT
         BALR  RTRNRG,LINKRG       ENTER S/R SUBROUTINE
         SPACE 1
*   IGNORE RETURN CODES FROM STOP AND RESTART SUBROUTINE
         SPACE 1
DAVES165 SR    PARMRG,PARMRG       ZERO A REGISTER
         ST    PARMRG,CVTRSTWD     FREE THE RESTART RESOURCE
         DROP  CCWREG
DAVES170 SETFRR D,WRKREGS=(WRKRG1,WRKRG2)
         IC    WRKRG1,PSASYMSK     RESTORE OLD PSW MASK
         EX    WRKRG1,DAVESENA     ISSUE STOSM
         LA    REG0,DAVESVCF       ADDRESS OF RETRY ROUTINE
         LTR   UCBREG,UCBREG       DOES RTCA EXIST
         BZ    DAVES200            BRANCH NO, USE STAE RETRY INTFC
DAVES180 SETRP RETADDR=(0),RC=4,FRESDWA=YES,WKAREA=(UCBREG)
         USING SDWA,UCBREG
         SPACE 1
****************************************************************
*   RETURN TO RTM - REG 0 IS PRIMED WITH RETRY ADDRESS AND     *
*   IS SET TO 4 TO INSURE A  RETRY IN CASE AN RTCA WAS NOT     *
*   PROVIDED AND THE OLD STAE RETRY INTERFACE IS USED.         *
****************************************************************
         SPACE 1
DAVES200 LA    LINKRG,D4           RC=4 IN CASE STAE RETRY INTFC
         LR    RTRNRG,IRTREG       RESTORE RETURN ADDRESS
         BR    RTRNRG              RETURN TO RTM
         SPACE 1
*   RTCA DOES NOT EXIST
         SPACE 1
DAVES250 SR    UCBREG,UCBREG       CLEAR RTCA BASE
         OI    IOSUSE,DAVRCTA      INDICATE NO RCTA
         B     DAVES100            CONTINUE RECOVERY LOGIC
         SPACE 1
*   RETRY RECURSION DETECTED, RETRY TO SVC 3 ONLY
         SPACE 1
DAVES300 LA    REG0,DAVESVC3       RETRY ADDRESS IS TO SVC 3
         L     WRKRG1,IOSUCB       UCB ADDRESS
*   LAST GASP EFFORT TO SAVE UCB - LOCK NOT ACQUIRED           *
         NI    UCBFLA-UCBOB(WRKRG1),MASKFF-UCBQISCE
         NI    UCBFL4-UCBOB(WRKRG1),MASKFF-UCBDAVV
         LTR   UCBREG,UCBREG       DOES RTCA EXIST
         BZ    DAVES200            BRANCH NO - USE STAE RETRY
         B     DAVES180            YES, USE SETRP,NO RECORDING
         EJECT
****************************************************************
*   INITIATE SYSTEM DUMP  - THE DUMP MUST BE ASYNCHRONOUS IN   *
*   THAT THE SIRB FOR THE MEMORY (MASTER SCHEDULER) IS  TIED   *
*   UP BY DAVV.  DUMP BUFFER WILL CONTAIN THE SRB, IOSB, EWA   *
*   AND UCB.                                                   *
****************************************************************
         SPACE 2
DAVES400 L     WRKRG1,CVTPTR       CVT ADDRESS
         USING CVT,WRKRG1
         L     WRKRG2,CVTSDBF      DUMP BUFFER ADDRESS
         LA    WRKRG2,D0(WRKRG2)   CLEAR HI BYTE
         L     CCWREG,DAVESCON     LOAD CONSTANT WITH LOCK BIT
         OR    CCWREG,WRKRG2       'OR' IN ADDRESS OF BUFFER
         SPACE 1
*   COMPARE AND SWAP TO GAIN SOLE POSESSION OF BUFFER FOR DUMP
         SPACE 1
         CS    WRKRG2,CCWREG,CVTSDBF ACQUIRE OWNERSHIP OF SDUMP
         BNE   DAVES450            * 4K BUFFER - BRANCH IF IN USE
         DROP  WRKRG1
         USING SDBUF,WRKRG2
         LA    PARMRG,SDBDATA      DATA AREA BETINNING
         ST    PARMRG,SDBDATAD     STORE IN 1ST WORD OF BUFFER
         L     CCWREG,IOSSRB       SRB ADDRESS(CONTIGOUS WITH
*                                  IOSB AS PER SIAB MAP MACRO)
         MVC   SDBSIB,D0(CCWREG)   MOVE SRB/IOSB TO BUFFER
         L     CCWREG,IOSERP       DAVV WORKAREA ADDRESS
         MVC   SDBEWA,D0(CCWREG)   MOVE WORKAREA TO BUFFER
         L     CCWREG,IOSUCB       UCB ADDRESS
         LA    WRKRG1,UCBCURPX     BACK OFF TO REAL PREFIX
         SR    CCWREG,WRKRG1       *
         MVC   SDBUCB,D0(CCWREG)   MOVE UCB TO BUFFER - PREFIX,
*                                  BASE, DA SEGMENT
         LA    PARMRG,SDBDL
         STH   PARMRG,SDBDLN       STORE TOTAL DATA LENGTH
         XC    SDBLAST,SDBLAST     INDICATE END OF DATA
         SPACE 1
*   ISSUE SVC DUMP - ASID FIELD OF PARAMETER LIST SERIALIZED BY *
*   SDUMP BUFFER LOCK (ASID CURRENTLY CONSTANT ANYWAY).         *
         SPACE 1
         L     ERPWA,IOSERP        WORKAREA ADDRESSABILTY
         LA    LLSAVE,EWAFLG1      PROVIDE A SAVEAREA FOR SDUMP
         SDUMP HDR='DAVV ERROR',ASID=IOSASID,SDATA=(PSA,TRT),          *
               LIST=DAVVRNGE,BUFFER=YES,BRANCH=YES
         STC   LINKRG,IOSUSE+D1    SAVE SDUMP RETURN CODE
         SPACE 2
DAVES450 LA    REG0,DAVESVCF       RETRY TO SVCF,SVC3 LOGIC
         LTR   UCBREG,UCBREG       RTCA EXIST
         BZ    DAVES200            BRANCH NO,NO RECORDING
         MVC   SDWAMODN,DAVVNAME   SET MODULE NAME IN RTCA
         MVC   SDWAVRA(IOSEND-IOSB),IOSB MOVE IOSB TO RTCA
         MVI   SDWAURAL,IOSEND-IOSB LENGTH OF DATA
         OI    SDWADPVA,SDWAHEX    PRINT IN HEX
         SETRP RETADDR=(0),RECORD=YES,WKAREA=(UCBREG),RC=4,FRESDWA=YES
         B     DAVES200            GO EXIT
         EJECT
*****************************************************************
*   FRR ROUTINE TO PROTECT RESTART RESOURCE AND DISABLEMENT     *
*****************************************************************
         SPACE 2
         USING SDWA,PARMRG
         DROP  UCBREG
DAVESFRR L     WRKRG1,SDWAPARM     LOAD FRR WORKAREA ADDRESS
         LM    BASERG,UCBREG,D0(WRKRG1) LOAD BASE,SDWA SWITCH,
         LM    CCWREG,IRTREG,D12(WRKRG1) *CVT,SIRB,RTM RETURN
*                                        * FOR ESTAE RETRY
         STM   BASERG,UCBREG,SDWASR05 UPDATE REGS IN FRR SDWA
         STM   CCWREG,IRTREG,SDWASR10 *
         CLI   D0(WRKRG1),MASKFF   WAS THE RESTART RESOURCE
         LA    REG0,DAVES170       * HELD                      @YM06124
         BNE   DAVFR100            * BRANCH NO
         LA    REG0,DAVES165                                   @YM06124
DAVFR100 SETRP RETADDR=(REG0),RETREGS=YES,RC=4
         BR    RTRNRG              RETURN TO RTM
         EJECT
***********************************************************************
*  DAVV FRR ROUTINE FOR BRANCH ENTRY UNDER AN SRB.  THIS ROUTINE IS   *
*  SIMILAR TO 'DAVVESTA' EXCEPT THAT AN RTCA (SDWA) IS ALWAYS PRESENT *
*  ON ENTRY, NO MESSAGES WILL HAVE BEEN ISSUED AND NEED DOM, AND      *
*  AN I/O ERROR ON THE PAGE PACK IS NOT APPLICABLE.                   *
***********************************************************************
         SPACE
DAVFRR   LR    UCBREG,PARMRG       COPY SDWA PTR FROM PARM REG @ZA00904
         USING SDWA,UCBREG                                     @ZA00904
         L     FRRREG,SDWAPARM     POINT TO FRR PARMS          @ZA00904
         L     BASERG,FRRBASE      RESTORE BASE                @ZA00904
         L     IOSBRG,FRRIOSB        AND IOSB POINTER          @ZA00904
         ST    BASERG,SDWASRSV+4*BASERG  SAVE CRITICAL         @ZA00904
         ST    IOSBRG,SDWASRSV+4*IOSBRG    REGS FOR RETRY      @ZA00904
         LR    IRTREG,RTRNRG       SAVE RETURN ADDRESS         @ZA00904
         L     ERPWA,IOSERP        POINT TO ERP WORK AREA      @ZA00904
         L     SIRBRG,EWAEXT         THEN TO EXTENDED WA       @ZA00904
         LA    LLSAVE,D16(SIRBRG)    AND USE THIS AS SAVE AREA @ZA00904
         ST    SIRBRG,SDWASRSV+4*SIRBRG  SAVE FOR RETRY        @ZA00904
         TM    IOSUSE,DAVRCURS       TEST FOR RETRY RECURSION  @ZA00904
         BO    DAVFRRR               YES--DO NOT DUMP          @ZA00904
         OI    IOSUSE,DAVRCURS       SET RECURSION FLAG        @ZA00904
         OI    IOSFLA,IOSERR         SET TO RETRY I/O          @ZA00904
*  ATTEMPT TO TAKE AN SVCDUMP                                  @ZA00904
         L     WRKRG1,CVTPTR         CVT ADDRESS               @ZA00904
         USING CVT,WRKRG1                                      @ZA00904
         L     WRKRG2,CVTSDBF      DUMP BUFFER ADDRESS         @ZA00904
         LA    WRKRG2,D0(WRKRG2)   CLEAR HI BYTE               @ZA00904
         L     CCWREG,DAVESCON     LOAD CONSTANT WITH LOCK BIT @ZA00904
         OR    CCWREG,WRKRG2       'OR' IN ADDRESS OF BUFFER   @ZA00904
         SPACE 1
*   COMPARE AND SWAP TO GAIN SOLE POSESSION OF BUFFER FOR DUMP @ZA00904
         SPACE 1
         CS    WRKRG2,CCWREG,CVTSDBF ACQUIRE OWNERSHIP OF SDUMP@ZA00904
         BNE   DAVFRR10            BUFFER IN USE--SKIP DUMP    @ZA00904
         DROP  WRKRG1                                          @ZA00904
         USING SDBUF,WRKRG2                                    @ZA00904
         LA    PARMRG,SDBDATA      DATA AREA BEGINNING         @ZA00904
         ST    PARMRG,SDBDATAD     STORE IN 1ST WORD OF BUFFER @ZA00904
         L     CCWREG,IOSSRB       SRB ADDRESS(CONTIGOUS WITH  @ZA00904
*                                  IOSB AS PER SIAB MAP MACRO) @ZA00904
         MVC   SDBSIB,D0(CCWREG)   MOVE SRB/IOSB TO BUFFER     @ZA00904
         L     CCWREG,IOSERP       DAVV WORKAREA ADDRESS       @ZA00904
         MVC   SDBEWA,D0(CCWREG)   MOVE WORKAREA TO BUFFER     @ZA00904
         L     CCWREG,IOSUCB       UCB ADDRESS                 @ZA00904
         LA    WRKRG1,UCBCURPX     BACK OFF TO REAL PREFIX     @ZA00904
         SR    CCWREG,WRKRG1       *                           @ZA00904
         MVC   SDBUCB,D0(CCWREG)   MOVE UCB TO BUFFER - PREFIX,@ZA00904
*                                  BASE, DA SEGMENT            @ZA00904
         LA    PARMRG,SDBDL                                    @ZA00904
         STH   PARMRG,SDBDLN       STORE TOTAL DATA LENGTH     @ZA00904
         XC    SDBLAST,SDBLAST     INDICATE END OF DATA        @ZA00904
         SPACE 1                                               @ZA00904
*   ISSUE SVC DUMP - ASID FIELD OF PARAMETER LIST SERIALIZED * @ZA00904
*   BY SDUMP BUFFER LOCK (ASID CURRENTLY CONSTANT ANYWAY).   * @ZA00904
         SPACE 1
         L     ERPWA,IOSERP        WORKAREA ADDRESSABILTY      @ZA00904
         SDUMP HDR='DAVV ERROR',ASID=IOSASID,SDATA=(PSA,TRT),          *
               LIST=DAVVRNGE,BUFFER=YES,BRANCH=YES             @ZA00904
         STC   LINKRG,IOSUSE+D1    SAVE SDUMP RETURN CODE      @ZA00904
DAVFRR10 MVC   SDWAMODN,DAVVNAME   SET MODULE NAME IN SDWA     @ZA00904
         MVC   SDWAVRA(IOSEND-IOSB),IOSB MOVE IOSB TO SDWA     @ZA00904
         MVI   SDWAURAL,IOSEND-IOSB LENGTH OF DATA             @ZA00904
         OI    SDWADPVA,SDWAHEX    PRINT IN HEX                @ZA00904
         SETRP RETADDR=DAVFRRTY,RECORD=YES,WKAREA=(UCBREG),RC=4,       *
               FRESDWA=YES,RETREGS=YES                         @ZA00904
         LR    RTRNRG,IRTREG       RESTORE RETURN ADDRESS      @ZA00904
         BR    RTRNRG              RETURN TO RTM               @ZA00904
         SPACE 2
*  RECURSION EXIT ROUTINE
DAVFRRR  SETRP RETADDR=DAVRRY,WKAREA=(UCBREG),RC=4,FRESDWA=YES,        *
               RETREGS=YES                                     @ZA00904
         LR    RTRNRG,IRTREG       RESTORE RETURN ADDRESS      @ZA00904
         BR    RTRNRG              RETURN TO RTM               @ZA00904
         EJECT
***********************************************************************
*  RETRY ROUTINE AFTER RECURSION TO FRR FOR ENTRY IN SRB MODE.        *
*        RETURN TO IECVPST IS ON +8 VECTOR SO THAT THE IOSB WILL NOT  *
*        BE FREED AND HENCE ALLOW THE PAGE PACK TO BE USED WHEN THE   *
*        WRONG PACK MAY BE MOUNTED.                                   *
***********************************************************************
         SPACE
DAVRRY   SETFRR D,WRKREGS=(WRKRG1,WRKRG2),                             *
               RELATED=(DAVFRR,IECVDAVV(IECDAV2))              @ZA00904
         L     ERPWA,IOSERP        GET ERP WORKAREA PTR        @ZA00904
         L     SIRBRG,EWAEXT       GET EXTENDED WA PTR         @ZA00904
         L     LLSAVE,4(SIRBRG)    RESTORE SAVE AREA POINTER   @ZA00904
         LM    REG0,LINKRG,0(LLSAVE) RESTORE REGISTERS         @ZA00904
         B     D8(RTRNRG)          RETURN WITHOUT FREEING      @ZA00904
*                                  THE IOSB AND WORKAREAS      @ZA00904
         TITLE '   IECVDAVV - CONSTANTS          '
****************************************************************
*   I/O ERROR MESSAGE - WTO LIST FORM USED TO FORMAT MSG       *
****************************************************************
         SPACE 1
ERRMSG   WTO   'IEA606I DEV,BAD VOLUME LABEL,**, CSW,SENSBBBBBB,VOLSER'*
               ,ROUTCDE=(1,4),DESC=4,MF=L
         SPACE 2
****************************************************************
*   DISMOUNT/MOUNT MESSAGE - WTO LIST FORM USED TO FORMAT MSG
****************************************************************
         SPACE 1
DISMSG   WTO   'IEA604A D DEV,VOLSER',ROUTCDE=(1),DESC=2,MF=L  @ZA09511
         SPACE 2
RECAL    CCW   19,1,CMCHNSLI,1     RECALIBRATE CCW
         CCW   03,1,0,1            NOOP CCW
         SPACE 1
CDUATN   DC    X'000072BF'         CHE,DVE,UEX,ATTN,WLR MASK
TRANTAB  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         EJECT
*   CONSTANTS FOR ESTAE RECOVERABILITY ROUTINE
         SPACE 1
DAVVNAME DC    CL8'IECVDAVV'       MODULE AND CSECT NAME
DAVESFRA DC    A(DAVESFRR)         FRR ROUTINE ADDRESS
DAVFRRA  DC    A(DAVFRR)           SRB FRR ROUTINE ADDR        @ZA00904
*****
* THE FOLLOWING THREE CONSTANTS MUST BE KEPT CONTIGUOUS
*****
DAVVRNGE DC    A(IECVDAVV)         DAVV CODE RANGE
         DC    X'80'               LAST ENTRY INDICATOR
         DC    AL3(DAVVEND)        DAVV CODE END
*****
DAVESCON DC    X'80000000'         CONSTANT FOR BUFFER LOCKING
DAVSRSCD DC    X'0000C4E2'         DAVV STOP/RESTART CODE = DS
DAVLOGBF DC    X'82400000'         * LOGREC RECORD FOR ENTERING
         DC    A(DAVLOGDA)         * THE SYSTEM STOP AND RESTART
DAVLOGDA DC    F'8'                * ROUTINE. RECORD COMPLETE
DAVWAITC DC    X'00000022'         * EXCEPT FOR TIME STAMP.
DAVTIME  DC    XL8'00'             * SERIALIZED VIA STOP AND
*                                  * RESTART RESOURCE.
         SPACE 1
DAVESENA STOSM PSASYMSK,D0         EXECUTED STOSM TO RE-ENABLE
DAVVEND  EQU   *                   END OF DAVV CODE
         END
