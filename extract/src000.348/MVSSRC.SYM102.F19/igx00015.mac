TT16     TITLE 'IGX00015-IS PURGE REQUIRED AT TASK TERMINATION'
IGX00015 CSECT
         SPACE 1
*                                                                     *
*                                                                     *
*          RELEASE 030 DELETIONS/CHANGES
*          RELEASE 020 DELETIONS/CHANGES
*          RELEASE 010 DELETIONS/CHANGES
*                                                                     *
*                                                                     *
*STATUS CHANGE LEVEL 000                                              *
*                                                                     *
*TITLE 'IGX00015' - IS PURGE REQ'D AT TASK TERMINATION
*                                                                     *
*FUNCTION/OPERATION                                                   *
*   IGX00015 IS AN ESR ROUTINE(SVC 109) WHICH IS USED BY TASK         *
*TERMINATION TO INSURE THAT A TASK CANNOT LEAVE OUTSTANDING I/O.      *
*   IGX00015 LOOKS AT EACH RQE IN SYSTEM UNLESS OUTSTANDING TP I/O    *
*IS FOUND.IF RQE IS ASSIGNED,CHECK TCB.IF TCB MATCHES,DETERMINE       *
*IF UCB REPRESENTS TP DEVICE.IF TP,ISSUE E05 ABEND.                   *
*   IF THERE ARE NO ASSIGNED RQE'S FOR TERM. TASK,ISSUE SVC 3.        *
*   IF THE ASSIGNED RQE'S REPRESENT NON/TP-ASSOCIATED I/O,SET UP      *
*FOR,AND ISSUE,PURGE(SVC 16).IF IOB CHAIN FOR RESTORE RESULTS,ISSUE   *
*E06 ABEND.IF NO IOB CHAIN,ISSUE SVC 3.                               *
*                                                                     *
*ENTRY POINT                                                          *
*   IGX00015 IS ENTERED WITH ENVIRONMENTAL REGS SET                   *
*                                                                     *
*INPUT                                                                *
*   REGS-ENVIRONMENTAL REGS                                           *
*                                                                     *
*OUTPUT                                                               *
*   REGS-ENVIRONMENTAL REGS INTACT                                    *
*   IOB CHAIN BUILT,IF REQUIRED,AT TCBIOBRC                           *
*                                                                     *
*EXTERNAL ROUTINES                                                    *
*   GETMAIN,FREEMAIN                                                  *
*                                                                     *
*EXITS                                                                *
*   'NORMAL'-SVC 3                                                    *
*   'ERROR'-ABEND                                                     *
*                                                                     *
*TABLES/PARAMETER LISTS                                               *
*   EXTERNAL-RQE TABLE                                                *
*   INTERNAL-PURGE PARAMETER LIST(PPL)                                *
*                                                                     *
*ATTRIBUTES                                                           *
*   REENTRANT,REFRESHABLE                                             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                               EQUATES                               *
*                                                                     *
***********************************************************************
*                                                                     *
***********************************************************************
*          DISPLACEMENTS                                              *
***********************************************************************
CVTIOQET EQU   X'78'                    DISP--BEGIN RQE'S
PPLCDSP  EQU   8                        DISP INTO PPL FOR RST CHN
PPLODSP  EQU   0                        DISP FOR PPL OPTION BYTE
PPLTDSP  EQU   4                        DISP INTO PPL FOR TCB
RQEIDT   EQU   4                        DISPL TO 'ASSIGNED' FLAG
RQTDSP   EQU   12                       DISP INTO RQE FOR TCB
RQUDSP   EQU   2                        DISP INTO RQE FOR UCB
TCBRSCH  EQU   X'BC'                    DISPL TO RESTORE CHN
UCBETI   EQU   8                        DISPL TO ERP INDICATOR
UCBTYPD  EQU   18                       DISP TO DEVICE TYPE
*                                                                     *
***********************************************************************
*          LENGTHS AND INCREMENTS                                     *
***********************************************************************
RQELNG   EQU   20                       LENGTH OF RQE(VS)
ONE      EQU   1                        ONE
SIX      EQU   6                        INCR 6
THREE    EQU   3                        INCR 3
ZIP      EQU   0                        ZERO
*                                                                     *
***********************************************************************
*          MISCELLANEOUS                                              *
***********************************************************************
SVC3     EQU   3                        EXIT
SVC16    EQU   16                       PURGE
*                                                                     *
E05      EQU   X'E05'                   ABEND CODE
E06      EQU   X'E06'                   ABEND CODE
*                                                                     *
TP       EQU   X'40'                    TP DEVICE BYTE FOR UCBTYP
TTOPT    EQU   X'42'                    OPTION BYTE IN PPL FOR TT
*                                                                     *
NERESTX  EQU   TCBRSCH+THREE            SPOT IN TCBIOBRC 4 NULL
ENDRQE   EQU   X'01'                    END OF RQE TABLE CHECK
FF       EQU   X'FF'                    RQE ACTIVE CHECK
*                                                                     *
***********************************************************************
         EJECT
         SPACE 10
***********************************************************************
* REGISTER DEFINITIONS
*                                                                     *
R0       EQU   0                        PARAMETER REG
PARMREG  EQU   1                        PARAMETER
ACTREG   EQU   2                        ACTIVE RQE COUNT
CVTREG   EQU   3                        CVT
TCBREG   EQU   4                        TCB
RBREG    EQU   5                        RB
BASREG   EQU   6                        BASE REG
RQEREG   EQU   7                        RQE
UCBREG   EQU   8                        UCB
RQTREG   EQU   9                        TCB FROM RQE
WKREGA   EQU   10                       TCB REST. CHAIN,
WKREGB   EQU   11                       *
WKREGC   EQU   12                       *
R13      EQU   13                       *
RETREG   EQU   14                       RETURN
EPREG    EQU   15                       EP
*                                                                     *
***********************************************************************
         EJECT
*                                                                     *
         BALR  BASREG,ZIP               EST BASE
         USING *,BASREG                 ADDR'Y MODULE
*                                                                     *
         SR    ACTREG,ACTREG            INIT. ACTIVE RQE COUNT
         LA    TCBREG,ZIP(TCBREG)       ASSURE CLEAR HI-BYTE
*
* THIS SECTION SEARCHES RQE TABLE AND INTERPRETS SEARCH RESULTS       *
         L     RQEREG,CVTIOQET(CVTREG)  BEGIN OF RQE TABLE
ACTRQE   CLI   RQEIDT(RQEREG),FF        RQE ACTIVE
         BNE   CKTCB                    YES,GO CHECK IF THIS TCB
NXTRQE   LA    RQEREG,RQELNG(RQEREG)    INCR TO NEXT RQE
         CLI   ONE(RQEREG),ENDRQE       END OF RQE TABLE
         BNE   ACTRQE                   NO,CHECK FOR ACTIVE RQE
         LTR   ACTREG,ACTREG            ANY ACTIVE RQE'S
         BNZ   NEED16                   GO DO PURGE
         SVC   SVC3                     NO,RETURN TO EOT
*
         SPACE 1
CKTCB    L     RQTREG,RQTDSP(RQEREG)    GET TCB IN RQE
         LA    RQTREG,ZIP(RQTREG)       CLEAR HI-BYTE
         CR    TCBREG,RQTREG            RQE FOR TERM'G TASK
         BNE   NXTRQE                   NO,GET NEXT RQE
*
* THIS SECTION CHECKS UCB                                             *
         LH    UCBREG,RQUDSP(RQEREG)    GET UCB FROM RQE
         N     UCBREG,MASK1             CLEAR LO-BIT IF ON - AEQ
         TM    UCBETI(UCBREG),FF        IGE0025E SCHEDULED
         BNO   UCBOK                    NO,UCB ADDR OK
         LA    UCBREG,SIX(UCBREG)       RE-ADJUST TO UCB ADDR
UCBOK    EQU   *                        UCB ADDR OK
         CLI   UCBTYPD(UCBREG),TP       ACTIVE RQE FOR TP
         BNE   CTACNTP                  NO,COUNT ACTIVE,NON-TP
         ABEND E05,DUMP                 LEFTOVER TP I/O---TERM.
***********************************************************************
*
CTACNTP  LA    ACTREG,ONE(ACTREG)       COUNT ACTIVE NON-TP I/O
         B     NXTRQE                   GO GET NEXT RQE
***********************************************************************
         TITLE 'PURGE IS NEEDED'
* THIS SECTION BUILDS PPL AND ISSUES SVC 16(PURGE)                    *
NEED16   EQU   *                        SVC 16 REQUIRED
         L     R0,SPNLNGH               GET SP AND LNGH
         GETMAIN R,LV=(0)               GET CORE FOR PPL
         ST    TCBREG,PPLTDSP(PARMREG)  TCB ADDR TO PPL
         LA    WKREGA,TCBRSCH(TCBREG)   GET ADDR OF BEGIN/RST CHN
         ST    WKREGA,PPLCDSP(PARMREG)  PTR TO RST CHN BEGIN
         MVI   PPLODSP(PARMREG),TTOPT   OPTION BYTE
         LR    WKREGA,PARMREG           SAVE PPL CORE LOC
*  REG 1 HAS ADDR OF PPL
         SVC   SVC16                    PURGE
*
         LR    PARMREG,WKREGA           RESTORE PPL CORE LOC
         L     R0,SPNLNGH               GET SP AND LNGH
         FREEMAIN R,LV=(0),A=(1)        FREE PPL CORE
*
* THIS SECTION INTERPRETS RESULT OF SVC 16                            *
*
         CLI   NERESTX(TCBREG),FF       IOB'S ON CHAIN---RESTORE
         BE    RTNORES
         ABEND E06,DUMP                 LEFTOVER NON-TP I/O
*                                          RESTORE CHAIN BUILT
***********************************************************************
         SPACE 1
*
RTNORES  SVC   SVC3                     RETURN TO EOT/NO REST. CH
*
***********************************************************************
         EJECT
***********************************************************************
*CONSTANTS WHICH REQUIRE FULL-WORD BOUNDARY
*
SPNLNGH  DS    0F
         DC    AL1(233)                 SUBPOOL 233
         DC    AL3(16)                  CORE REQ'D FOR PPL
MASK1    DC    X'FFFFFFFE'              CLEAR LO-BIT K
*
***********************************************************************
         END
