         TITLE 'IEFQB580 - QMNGRIO INTERFACE TO SWA MANAGER            *
                        '
IEFQB580 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFQB580  74.107'                                 0001
         DROP  @15
@PROLOG  STM   @14,@05,12(@13)                                     0001
         BALR  @05,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@05                                         0001
*   QMIOPPTR=R1;                    /* BASE FOR PARM LIST            */
         LR    QMIOPPTR,R1                                         0031
*   QMPAPTR=QMIWRKAD;               /* QMPA IS AT START OF WORK AREA */
         L     QMPAPTR,QMIWRKAD(,QMIOPPTR)                         0032
*   IF(QMIOREAD='1'B&QMIOWRTE='1'B)×/* ARE BOTH READ AND WRITE       */
*       (QMIOREAD='0'B&QMIOWRTE='0'B) THEN/* BITS ON OR BOTH OFF     */
         TM    QMIOREAD(QMIOPPTR),B'11000000'                      0033
         BO    @RT00033                                            0033
         TM    QMIOREAD(QMIOPPTR),B'11000000'                      0033
         BNZ   @RF00033                                            0033
@RT00033 DS    0H                                                  0034
*     DO;                           /* IF SO, IT'S AN ERROR          */
*       RESPECIFY                                                  0035
*        (R4,                                                      0035
*         R15) RESTRICTED;                                         0035
*       R15=INVRDWRT;               /* PUT ERROR CODE IN REG 15      */
         LA    R15,24                                              0036
*       R4=ZEROBZER;                /* PUT ABEND CODE IN REG 4       */
         LA    R4,176                                              0037
*       GEN(ABEND (R4),,,SYSTEM);   /* ISSUE ABEND                   */
         ABEND (R4),,,SYSTEM
*       RESPECIFY                                                  0039
*        (R4,                                                      0039
*         R15) UNRESTRICTED;        /* RELEASE FOR PLS USE           */
*     END;                                                         0040
*   IF QMIOREAD='1'B THEN           /* IS THIS A READ REQUEST        */
@RF00033 TM    QMIOREAD(QMIOPPTR),B'10000000'                      0041
         BNO   @RF00041                                            0041
*     QMPOP=READ;                   /* YES, SET FUNCTION CODE TO READ*/
         MVI   QMPOP(QMPAPTR),X'04'                                0042
*   ELSE                                                           0043
*     QMPOP=WRITE;                  /* SET FUNCTION CODE TO WRITE    */
         B     @RC00041                                            0043
@RF00041 MVI   QMPOP(QMPAPTR),X'03'                                0043
*   QMSTA=ZERO;                     /* CLEAR QMSJNL           YM06103*/
@RC00041 MVI   QMSTA(QMPAPTR),X'00'                                0044
*   QMPCL=QMPAPTR+LENGTH(QMPA);     /* INSERT EPA POINTER IN QMPA    */
         LA    @04,36                                              0045
         ALR   @04,QMPAPTR                                         0045
         ST    @04,QMPCL(,QMPAPTR)                                 0045
*   QMPNC='0001'B;                  /* SET COUNT TO 1                */
         NI    QMPNC(QMPAPTR),B'11110001'                          0046
         OI    QMPNC(QMPAPTR),B'00000001'                          0046
*   SWBUFPTR=QMIRECAD;              /* INSERT BUFFER ADDRESS IN EPA  */
         L     @04,QMPACL-1(,QMPAPTR)                              0047
         LA    @04,0(,@04)                                         0047
         MVC   SWBUFPTR(4,@04),QMIRECAD(QMIOPPTR)                  0047
*   SWSVAZRO=QMIDSKAD;              /* FOR OS/VS2 THIS IS A SVA0.  0048
*                                      MOVE IT FROM PARM LIST TO EPA */
         MVC   SWSVAZRO(4,@04),QMIDSKAD(QMIOPPTR)                  0048
*/* MOVE REGISTER CONTENTS OF R14 THROUGH R5 FROM CALLERS SAVE AREA TO
*   WORK AREA                                                        */
*                                                                  0049
*   EVAL(QMPAPTR+LENGTH(QMPA)+LENGTH(SWAMMEPA))->SAVEREGS=EVAL(R13+
*       R14DISP)->SAVEREGS;                                        0049
         LA    @04,44                                              0049
         ALR   @04,QMPAPTR                                         0049
         LA    @02,12                                              0049
         ALR   @02,R13                                             0049
         MVC   SAVEREGS(32,@04),SAVEREGS(@02)                      0049
*   CALL IEFQB550;                  /* THIS WILL CALL THE SWA MANAGER*/
         L     @15,@CV00119                                        0050
         BALR  @14,@15                                             0050
*/* MOVE REGISTER CONTENTS OF R14 THROUGH R5 FROM WORK AREA BACK INTO
*   CALLERS SAVE AREA                                                */
*                                                                  0051
*   EVAL(R13+R14DISP)->SAVEREGS=EVAL(QMPAPTR+LENGTH(QMPA)+LENGTH(  0051
*       SWAMMEPA))->SAVEREGS;                                      0051
         LA    @04,12                                              0051
         ALR   @04,R13                                             0051
         LA    @02,44                                              0051
         ALR   @02,QMPAPTR                                         0051
         MVC   SAVEREGS(32,@04),SAVEREGS(@02)                      0051
*   RETURN CODE(0);                 /* RETURN WITH RC=0              */
         SLR   @15,@15                                             0052
         L     @14,12(,@13)                                        0052
         LM    @00,@05,20(@13)                                     0052
         BR    @14                                                 0052
*   END IEFQB580                    /* END OF PROCEDURE            0053
*                                                                    */
*                                                                  0053
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEFQMIOP)                                       */
*/*%INCLUDE SYSLIB  (IEFZB506)                                       */
*/*%INCLUDE SYSLIB  (IEFQMNGR)                                       */
*                                                                  0053
*       ;                                                          0053
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
IEFQB580 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
EPAPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFQB580 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00119 DC    V(IEFQB550)
         DS    0D
QB580PCH DS    CL40
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
QMIOPPTR EQU   @03
QMPAPTR  EQU   @01
R1       EQU   @01
R4       EQU   @04
R13      EQU   @13
R15      EQU   @15
QMIOP    EQU   0
QMIRECAD EQU   QMIOP+4
QMIWRKAD EQU   QMIOP+8
QMIDSKAD EQU   QMIOP+12
QMIFLAGS EQU   QMIOP+18
QMIOREAD EQU   QMIFLAGS
QMIOWRTE EQU   QMIFLAGS
SWAMMEPA EQU   0
SWBUFPTR EQU   SWAMMEPA
QMPA     EQU   0
QMNAM    EQU   QMPA
QMPOP    EQU   QMPA+8
QMSTA    EQU   QMPA+16
QMPCL    EQU   QMPA+32
QMPCMNC  EQU   QMPCL
QMPNC    EQU   QMPCMNC
QMPACL   EQU   QMPCL+1
SWAQMPA  EQU   0
SAVEREGS EQU   0
SWSVAZRO EQU   SWAMMEPA+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
REGS     EQU   SAVEREGS
QMRBN    EQU   SWAQMPA+12
@NM00010 EQU   SWAQMPA+1
QMSWSP   EQU   SWAQMPA
QMPCM    EQU   QMPCMNC
QMEIA    EQU   QMPA+28
QMWTQ    EQU   QMPA+24
QMRSD1   EQU   QMPA+22
QMTID    EQU   QMPA+20
QMLNK    EQU   QMPA+18
QMPRI    EQU   QMPA+17
@NM00009 EQU   QMSTA
QMSJNL   EQU   QMSTA
@NM00008 EQU   QMSTA
QMTPY    EQU   QMPA+15
QMNOT    EQU   QMPA+14
QMTLN    EQU   QMPA+12
QMTST    EQU   QMPA+11
QMFLT    EQU   QMPA+9
QMPEB    EQU   QMNAM+4
QMCAN    EQU   QMNAM
SWWRTID  EQU   SWAMMEPA+7
SWROWVA  EQU   SWAMMEPA+4
SWASNZO  EQU   SWBUFPTR+3
SWASNVA  EQU   SWBUFPTR
@NM00007 EQU   QMIOP+19
@NM00006 EQU   QMIFLAGS
@NM00005 EQU   QMIFLAGS
@NM00004 EQU   QMIFLAGS
@NM00003 EQU   QMIFLAGS
@NM00002 EQU   QMIFLAGS
@NM00001 EQU   QMIFLAGS
QMIRECL  EQU   QMIOP+16
QMITCBAD EQU   QMIOP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFQB580
