         TITLE 'IEAVTRV -- TRANSLATE REAL TO VIRTUAL'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVTRV
*
*02*     CSECT-NAME = IEAVTRV
*
*01*  DESCRIPTIVE-NAME = TRANSLATE REAL TO VIRTUAL
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = CHANGE LEVEL 000
*
*01*  FUNCTION = THE TRANSLATE REAL TO VIRTUAL MODULE IS GIVEN A REAL
*     ADDRESS AS INPUT.  IT RETURNS THE CORRESPONDING VIRTUAL ADDRESS
*     AND ASID PROVIDED THAT THE REAL STORAGE PAGE IS ASSIGNED TO A
*     PAGE OF VIRTUAL SPACE.
*
*02*     OPERATION = THIS MODULE DOES NOT HAVE ANY WORK AREA AND DOES
*        NOT CREATE ITS OWN RECOVERY ENVIRONMENT, RELYING ON THE
*        CALLERS RECOVERY ENVIRONMENT. THE PHILOSPHY BEING THAT THIS
*        MODULE ACTS ONLY AS A SUBROUTINE OF ITS CALLER.
*
*01*   NOTES = THE CODE IN THIS MODULE IS CLOSE KNIT DIFFICULT TO
*      FOLLOW. WHEN CHANGING THIS MODULE, EXTREME CARE MUST BE TAKEN.
*
*02*     DEPENDENCIES = THIS MODULE IS INTENDED FOR USE ONLY IN VS2
*        RELEASE 2 AND WILL RUN ON ANY VS2 RELEASE2 HARDWARE/SOFTWARE
*        CONFIGURATION.
*
*03*        CHARACTER-CODE-DEPENDENCIES = NONE
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = ONLY REGISTERS 0,1,14,15 ARE USED
*
*02*     PATCH-LABEL = NONE
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER-370R
*
*02*     MODULE-SIZE = 140 BYTES
*
*02*     ATTRIBUTES = NUCLEUS,REENTERABLE,REFRESHABLE
*
*01*  ENTRY-POINT = IEAVTRV
*
*02*     PURPOSE = IEAVTRV IS ENTERED FOR THE PURPOSE OF CONVERTING
*        HARDWARE-SUPPLIED REAL ADDRESSES BACK TO THEIR VIRTUAL
*        COUNTERPARTS SO THAT THOSE AREAS CAN BE ADDRESSED WHILE
*        DYNAMIC ADDRESS TRANSLATION IS IN EFFECT.
*
*02*     LINKAGE = BALR
*
*02*     INPUT =
*          R0: IRRELEVANT
*          R1: THE REAL ADDRESS TO BE TRANSLATED
*          R2-R13: IRRELEVANT
*          R14: RETURN ADDRESS
*          R15: IRRELEVANT
*
*02*     OUTPUT = NO STREAM OR LIST OUTPUT
*
*02*     REGISTERS-SAVED = NONE
*
*01*  EXIT-NORMAL =
*
*02*     CONDITIONS = A TRUE MAPPING OF THE REAL ADDRESS TO A VIRTUAL
*        ADDRESS EXISTED.
*
*02*     OUTPUT =
*          R0: THE HALFWORD ASID OF THE VIRTUAL ADDR, RIGHT JUSTIFIED
*          R1: THE VIRTUAL ADDRESS CORRESPONDING TO THE INPUT REAL ADDR
*          R2-R14: UNCHANGED
*          R15: RETURN CODE
*
*02*     RETURN-CODES = 0 - SUCCESSFUL TRANSLATION
*
*01*  EXIT-ERROR = ENDFOUR
*
*02*     CONDITIONS = A TRUE MAPPING FROM REAL TO VIRTUAL DOES NOT
*        EXIST
*
*02*     OUTPUT =
*          R0-R1: UNPREDICTABLE
*          R2-R14: UNCHANGED
*          R15: RETURN CODE
*
*02*     RETURN-CODES = 4 - UNSUCCESSFUL TRANSLATION
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES = NONE
*
*02*     DATA-AREAS = NONE
*
*02*     CONTROL-BLOCKS =
*           CVT      R
*           PVT      R
*           PFTE     R
*
*01*  TABLES = NONE
*
*01*  MACROS =
*       EXECUTABLE MACRO
*          MODID
*       MAPPING MACROS
*          CVT
*          IHAPVT
*          IHAPFTE
*
*02*    SERIALIZATION = NO LOCKS OR ENQ RESOURCES ARE OBTAINED OR
*       RELEASED
*
*01*  CHANGE-ACTIVITY = Y02752
*A082000                                                        VS06306
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = NONE
*
**** END OF SPECIFICATIONS ***/
         EJECT
***********************************************************************
*                                                                     *
*      THIS PAGE CONTAINS THE CSECT STATEMENT FOR THE MODULE AND THE  *
*   MODULE IDENTIFICATION INFORMATION IN ADDITION TO SETTING UP       *
*   INITIAL ADDRESSABILITY FOR THE MODULE.                            *
*                                                                     *
***********************************************************************
         SPACE 2
IEAVTRV  CSECT                         TRANSLATE REAL TO VIRTUAL
*A065500-999999                                                  Y02752
         BALR  R15,0                   SET UP ADDRESSABILITY
         USING *,R15                   TELL ASSEMBLER
         MODID
         DS    0H                      GET BACK TO HALF WORD BOUNDARY
         ENTRY IEAPTRV                 VS2 REL 1 NAME EXTERNALLY KNOWN
IEAPTRV  EQU   IEAVTRV                 FOR VS2 REL 1 COMPATIBILITY
         EJECT
***********************************************************************
*                                                                     *
*        EQUATES FOR PARAMETERZATION OF PROGRAM                       *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                       REGISTER 0 DEFINITION
R1       EQU   1                       REGISTER 1 DEFINITION
R14      EQU   14                      REGISTER 14 DEFINITION
R15      EQU   15                      REGISTER 15 DEFINITION
BADRETCD EQU   4                       ERROR RETURN CODE 4
MIDBYTES EQU   6                       MIDDLE 2 BYTES OF A REGISTER
LOW2BYTE EQU   3                       LOW 2 BYTES OF A REGISTER
         EJECT
***********************************************************************
*                                                                     *
*      THIS SECTION OF CODE CHECKS THE INPUT ADDRESS FOR RESIDENCY    *
*   IN THE NUCLEUS AND IF THAT IS THE CASE RETURNS THE INPUT ADDRESS  *
*   WITHOUT TRANSLATING IT BECAUSE THERE ARE NO PFTE'S FOR THE        *
*   NUCLEUS AS IT IS MAPPED VIRTUAL = REAL.  OTHERWISE, PROCESSING    *
*   DROPS DOWN TO THE NEXT PAGE.                                      *
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R0,0(R1)                SAVE INPUT PARAMETER IN REG 0
*                                      R0 CAN'T BE USED FOR ADDRESSING
*                                      THIS ALSO CLEARS HIGH-ORDER BYTE
*                                                              @VS06306
         L     R1,CVTPTR               ACQUIRE ADDR OF CVT
         USING CVT,R1                  TELL ASSEMBLER CVT ADDRESSABLE
         L     R1,CVTPVTP              ACQUIRE ADDR OF PVT
         USING PVT,R1                  TELL ASSEMBLER PVT ADDRESSABLE
         CLM   R0,MIDBYTES,PVTFPFN     COMPARE SEQMENT AND PAGE
         BNL   NOTINNUC                ADDR NOT IN NUCLEUS
         LR    R1,R0                   RETURN INPUT ADDR FOR NUCLEUS
         L     R0,FOXES                PUT SPECIAL ASID IN R0
         DROP  R15                     TELL ASSEM LOSING ADDRESSABILITY
         SR    R15,R15                 SET NORMAL COMPLETION CODE
         BR    R14                     RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*      THIS SECTION FIRST ASSURES THAT THE NON-NUCLEUS REAL ADDRESS   *
*   RESIDES WITHIN THE DEFINED REAL STORAGE AND THEN PROCEDES         *
*   TO CONVERT THE REAL ADDRESS TO A VIRTUAL ADDRESS PROVIDING A      *
*   VALID MAPPING EXISTS.  A VALID MAPPING EXISTS IF THE PFTE INDEXED *
*   BY THE REAL ADDRESS 1) IS NOT ON THE AVAILABLE Q, 2) IS NOT       *
*   MARKED OFFLINE, AND 3) IS NOT A VAM IRREGULAR PAGE.  IF ALL OF    *
*   THESE CRITERIA ARE MET, THE VBN AND ASID IN THE PFTE ARE USED TO  *
*   GENERATE THE CORRECT OUTPUT VALUES IN REGISTER 0 AND 1.           *
*   OTHERWISE, A RETURN CODE OF 4 IS RETURNED TO THE CALLER.          *
*                                                                     *
***********************************************************************
         SPACE 2
NOTINNUC LR    R15,R0                  MAKE COPY OF INPUT TO WORK WITH
         SRL   R15,12                  CHOP OFF DISPLACMENT-LOW 12 BITS
         SLL   R15,4                   LEFT JUSTIFY 12 BITS TO HALFWORD
         SPACE
***********************************************************************
*        THE FOLLOWING CLM WILL CHECK TO SEE IF THE REAL ADDR         *
*        IS WITHIN THE BOUNDS OF REAL MEMORY.  BECAUSE THERE IS       *
*        NO ADDRESSABILITY NOW THE CONDITION CODE WILL BE LEFT        *
*        SET UNTIL ADDRESSABILITY IS ACQUIRED AND A CONDITIONAL       *
*        BRANCH MAY BE EXECUTED.                                      *
***********************************************************************
         SPACE
         CLM   R15,LOW2BYTE,PVTLPFN    IS REAL ADDRESS BEYOND STORAGE?
         L     R1,PVTPFTP              ACQUIRE START OF PFT'S
         DROP  R1                      LOST ADDRESSABILITY TO PVT
         LA    R15,0(R1,R15)           CALCULATE ADDR OF PFTE
         USING PFTE,R15                TELL ASSEMBLER PFTE ADDRESSABLE
         BALR  R1,R0                   SET UP ADDRESSABILITY
         USING *,R1                    TELL ASSEMBLER WE'RE ADDRESSABLE
         BH    ENDFOUR                 CLM INDICATED THAT ADDRESS WAS  *
                                       OUT OF REAL STORAGE
         CLI   PFTQNDX,PFTAFQN         IS FRAME AVAILABLE?
         BE    ENDFOUR                 YES... ERROR RETURN
         TM    PFTFLAG2,PFTIRRG+PFTOFFLN  IS FRAME OFFLINE OR A VAM
*                                         IRREGULAR FRAME?
         BNZ   ENDFOUR                 YES... ERROR RETURN
         DROP  R1                      TELL ASSEM LOSING ADDRESSABILITY
         SPACE
*   THE REAL ADDRESS IS CONVERTED TO A VIRTUAL ADDRESS AT THIS POINT
         SPACE
         LR    R1,R0                   MOVE INPUT TO WORK REGISTER
         L     R0,PFTPGID              GET ASID AND VBN OF PAGE
         SRL   R0,4                    REMOVE 4 ZEROS WHICH LEFT       *
                                       JUSTIFY VBN
         SLL   R1,20                   MOVE DISPLACEMENT NEXT TO VBN
         SRDL  R0,12                   MOVE ASID TO LOW ORDER HALFWORD *
                                       AND VBN WITH DISP TO HIGH 24BITS
         SRL   R1,8                    NOW RIGHT JUSTIFY VIRT ADDR
         SR    R15,R15                 SET NORMAL RETURN CODE
         BR    R14                     RETURN TO CALLER
         SPACE
*   ERROR EXITS ARE SET UP AT THIS POINT
         SPACE
ENDFOUR  LA    R15,BADRETCD            SET ERROR RETURN CODE
         BR    R14                     RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*      DATA AREA FOR THIS MODULE                                      *
*                                                                     *
***********************************************************************
         SPACE 2
         DS    0F                      ALIGN DATA TO FULLWORD
FOXES    DC    X'0000FFFF'             ASID FOR NUCLEUS
         EJECT
***********************************************************************
*                                                                     *
*      CONTROL BLOCK MAPPING MACROS USED BY THIS MODULE               *
*                                                                     *
***********************************************************************
         SPACE 2
         CVT   DSECT=YES,LIST=NO
         EJECT
         IHAPVT
         EJECT
         IHAPFTE
         EJECT
*/*IEAVTRV:  CHART */
*/* HEADER
*/* SECTION: 3.1.15.9.17.4                                      IEAV
*/*TRV                                        MODULE DESCRIPTION
*/* CONTR:   J.W. MEHL
*/*                                                09/27/73
*/* MGR:     J.E.NICHOLS
*/*                                                 PAGE #  */
*/*IEAVTRV:  E  ENTRY TO IEAPTRV */
*/*          D  (YES,%A1,NO,) IS THE INPUT ADDR IN THE NUCLEUS? */
*/*          P  DERIVE THE PFT SLOT NUMBER FROM THE INPUT ADDRESS */
*/*          D  (YES,,NO,%A2) IS THE REAL ADDR WITHIN REAL
*/*MEMORY? */
*/*          P  LOCATE THE PFTE FOR THE INPUT FRAME */
*/*          D  (YES,%A2,NO,) IS THE FRAME AVAILABLE? */
*/*          D  (YES,%A2,NO,) IS THE FRAME AN IRREGULAR VAM FRAME? */
*/*          D  (YES,%A2,NO,) IS THE FRAME MARKED OFFLINE? */
*/*%A4:      P  DERIVE THE VIRTUAL ADDRESS FOR THE GIVEN REAL ADDRESS
*/**/
*/*          P  GET THE ASID FROM THE PFTE */
*/*          R  RETURN TO CALLER    R.C.=0 */
*/*%A1:      P  OUTPUT ADDRESS=INPUT ADDRESS   ASID=X'FFFF' */
*/*          R  RETURN TO CALLER    R.C.=0 */
*/*%A2:      R  RETURN TO CALLER    R.C.=4 */
*/*IEAVTRV:  END */
         END
