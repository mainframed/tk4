         TITLE 'IKJEFA53 - ACCOUNT / GETSPACE SUBROUTINE               *
                        '
IKJEFA53 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFA53  75.006'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
*          SPACPTR=R1;                  /* SAVE PTR TO SPACPARM      */
         LR    SPACPTR,R1                                          0010
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER REG     */
*          /* CLEAR OUTPUT PORTION OF PARAMETER BLOCK TO ZERO        */
*          SPACOFST=0;                                             0012
         SLR   @10,@10                                             0012
         ST    @10,SPACOFST(,SPACPTR)                              0012
*          /* ROUND UP REQUESTED LENGTH TO A MULTIPLE OF 4           */
*          SPACLNTH=SPACLNTH+3;         /* INSURE MULTIPLE IS NEXT 0013
*                                          HIGHER                    */
         LA    @10,3                                               0013
         AH    @10,SPACLNTH(,SPACPTR)                              0013
         STH   @10,SPACLNTH(,SPACPTR)                              0013
*          GTSPLBIT(7:8)='00'B;         /* ROUND OFF TO MULTIPLE OF 4*/
         NI    GTSPLBIT(SPACPTR),B'11111100'                       0014
*          /* ESTABLISH LOCAL ADDRESSABILITY                         */
*          HEDBPTR=SPACMPTR;            /* BASE POINTER FOR HEADER   */
         L     HEDBPTR,SPACMPTR(,SPACPTR)                          0015
*          /**********************************************************/
*          /* THE FOLLOWING ITERATIVE DO-GROUP WILL EXECUTE ONCE FOR */
*          /* EACH MEMBER BLOCK INCLUDED IN SPACMCNT.  ONE EXECUTION */
*          /* WILL RESULT IN THE SEARCH OF THE BLOCK'S FREE SPACE Q  */
*          /* AND THE UPDATING OF SAME IF AN ELEMENT LARGE ENOUGH TO */
*          /* SATISFY THE CALLER'S REQUEST IS FOUND.                 */
*          /**********************************************************/
*          DO LOOPCNT=SPACMCNT TO 1 BY -1; /* OPTIMUM LOOP CONTROLS  */
         LH    LOOPCNT,SPACMCNT(,SPACPTR)                          0016
         B     @DE00016                                            0016
@DL00016 DS    0H                                                  0017
*            /* SEE IF THE QUEUE IS WORTH SEARCHING                  */
*            IF UADSNUSP='1'B           /* FREE SPACE LIMITED TO 4 OR*/
*             × UADSFSQP=0              /* 8 BYTE ELEMENTS OR NONE   */
*              THEN                     /* SKIP THIS BLOCK - TRY NEXT*/
         TM    UADSNUSP(HEDBPTR),B'10000000'                       0017
         BO    @RT00017                                            0017
         LH    @10,UADSFSQP(,HEDBPTR)                              0017
         LTR   @10,@10                                             0017
         BZ    @RT00017                                            0017
*                GO TO BUMPPTRS;        /* STEP POINTERS FOR NEXT BLK*/
*            USELESS=1;                 /* INITIALIZE SWITCH TO ASSUME
*                                          NO USABLE SPACE IN BLOCK  */
         LA    USELESS,1                                           0019
*            SPACWPTR=HEDBPTR;          /* WORK PTR SET TO HEAD OF Q */
         LR    SPACWPTR,HEDBPTR                                    0020
*SEARCHQ:    /* FOLLOWING CODE SEARCHES THE FSQ OF ONE MEMBER BLOCK  */
*            FSQEPTR=                   /* POINT TO NEXT FSQ ELEMENT */
*             SPACWPTR->FSQENEXT        /* BY ADDING OFFSET          */
*             +HEDBPTR;                 /*  TO MEMBER ORIGIN         */
SEARCHQ  LR    FSQEPTR,HEDBPTR                                     0021
         AH    FSQEPTR,FSQENEXT(,SPACWPTR)                         0021
*            IF FSQELNTH<SPACLNTH       /* DOES THIS ELEMENT SATISFY
*                                          THE REQUEST               */
*              THEN                     /* NO,                       */
         LH    @10,FSQELNTH(,FSQEPTR)                              0022
         CH    @10,SPACLNTH(,SPACPTR)                              0022
         BNL   @RF00022                                            0022
*                IF FSQELNTH>8          /* IS SPACE USEABLE?         */
*                  THEN                 /* NO,                       */
         CH    @10,@CH00040                                        0023
         BNH   @RF00023                                            0023
*                    USELESS=0;         /* TURN OFF USELESS SWITCH   */
         SLR   USELESS,USELESS                                     0024
*                  ELSE;                /* CONTINUE WITH NEXT FSQ    */
@RF00023 DS    0H                                                  0026
*              ELSE                     /* THE SPACE HAS BEEN FOUND  */
*                DO;                                               0026
         B     @RC00022                                            0026
@RF00022 DS    0H                                                  0027
*                FSQELNTH=FSQELNTH-SPACLNTH; /* REDUCE LENGTH OF THIS
*                                                 FREE SPACE         */
         LH    @10,FSQELNTH(,FSQEPTR)                              0027
         SH    @10,SPACLNTH(,SPACPTR)                              0027
         STH   @10,FSQELNTH(,FSQEPTR)                              0027
*                USRLEN=8;              /* INITIALIZE LENGTH COUNT   */
         LA    USRLEN,8                                            0028
*                /* FIND THE INDEX BYTE IMMEDIATELY AFTER USERID     */
*                DO WHILE UADSUSER(USRLEN)=' ';/* TEST FOR BLANK     */
         B     @DE00029                                            0029
@DL00029 DS    0H                                                  0030
*                  USRLEN=USRLEN-1;     /* DECREMENT LENGTH          */
         BCTR  USRLEN,0                                            0030
*                  END;                                            0031
@DE00029 LR    @10,HEDBPTR                                         0031
         ALR   @10,USRLEN                                          0031
         CLI   UADSUSER-1(@10),C' '                                0031
         BE    @DL00029                                            0031
*                SPACOFST=              /* OUTPUT OFFSET =           */
*                  FSQELNTH             /* REMAINING LENGTH OF THIS
*                                          SPACE                     */
*                  +SPACWPTR->FSQENEXT  /* + OFFSET OF THIS FSQE     */
*                  +UADSBLNG*(UADSUSER(USRLEN)&'0F'X);/* + MEMBR   0032
*                                                        OFFSET      */
         LH    @10,FSQELNTH(,FSQEPTR)                              0032
         LH    @15,FSQENEXT(,SPACWPTR)                             0032
         ALR   @15,@10                                             0032
         LA    @14,15                                              0032
         SLR   @09,@09                                             0032
         IC    @09,UADSUSER-1(USRLEN,HEDBPTR)                      0032
         NR    @14,@09                                             0032
         MH    @14,UADSBLNG(,HEDBPTR)                              0032
         ALR   @15,@14                                             0032
         ST    @15,SPACOFST(,SPACPTR)                              0032
*                /* SHOULD THE ELEMENT BE DELETED FROM FREE SPACE Q  */
*                IF FSQELNTH=0                                     0033
*                  THEN                 /* SPACE COMPLETELY USED     */
         LTR   @10,@10                                             0033
         BNZ   @RF00033                                            0033
*                    SPACWPTR->FSQENEXT=                           0034
*                      FSQENEXT;        /* REMOVE THIS ELEMENT FROM Q*/
         LH    @10,FSQENEXT(,FSQEPTR)                              0034
         STH   @10,FSQENEXT(,SPACWPTR)                             0034
*                /* SEE IF THE QUEUE MUST BE PROCESSED ANY FURTHER   */
*                IF FSQELNTH>8          /* IF SPACE REMAINS IN THIS  */
*                 × USELESS=0           /* ELEMNT OR FOUND PREVIOUSLY*/
*                  THEN                 /* NO MORE TO BE DONE        */
@RF00033 CLC   FSQELNTH(2,FSQEPTR),@CH00040                        0035
         BH    @RT00035                                            0035
         LTR   USELESS,USELESS                                     0035
         BNZ   @RF00035                                            0035
@RT00035 DS    0H                                                  0036
*                    RETURN CODE(0);    /* RETURN WITH SUCCESS R. C. */
         L     @13,4(,@13)                                         0036
         L     @00,@SIZDATD                                        0036
         LR    @01,@11                                             0036
         FREEMAIN R,LV=(0),A=(1)
         SLR   @15,@15                                             0036
         L     @14,12(,@13)                                        0036
         LM    @00,@12,20(@13)                                     0036
         BR    @14                                                 0036
*                /* MUST LOOK THROUGH REST OF Q FOR USABLE SPACE     */
*                DO WHILE FSQENEXT^=0;  /* LOOP TO END OF FSQE CHAIN */
@RF00035 B     @DE00037                                            0037
@DL00037 DS    0H                                                  0038
*                  /* UPDATE FSQE BASE POINTER                       */
*                  FSQEPTR=FSQENEXT+HEDBPTR; /* ADD OFFSET TO BASE   */
         LR    @10,HEDBPTR                                         0038
         AH    @10,FSQENEXT(,FSQEPTR)                              0038
         LR    FSQEPTR,@10                                         0038
*                  IF FSQELNTH>8        /* IS THE LENGTH USEABLE?    */
*                    THEN               /* FOUND MORE USABLE SPACE   */
         CLC   FSQELNTH(2,FSQEPTR),@CH00040                        0039
         BNH   @RF00039                                            0039
*                      RETURN CODE(0);  /* RETURN WITH SUCCESS R. C. */
         L     @13,4(,@13)                                         0040
         L     @00,@SIZDATD                                        0040
         LR    @01,@11                                             0040
         FREEMAIN R,LV=(0),A=(1)
         SLR   @15,@15                                             0040
         L     @14,12(,@13)                                        0040
         LM    @00,@12,20(@13)                                     0040
         BR    @14                                                 0040
*                  END;                                            0041
@RF00039 DS    0H                                                  0041
@DE00037 LH    @10,FSQENEXT(,FSQEPTR)                              0041
         LTR   @10,@10                                             0041
         BNZ   @DL00037                                            0041
*                UADSNUSP='1'B;         /* SET NO USABLE SPACE SWITCH*/
         OI    UADSNUSP(HEDBPTR),B'10000000'                       0042
*                RETURN CODE(0);        /* RETURN WITH SUCCESS R. C. */
         L     @13,4(,@13)                                         0043
         L     @00,@SIZDATD                                        0043
         LR    @01,@11                                             0043
         FREEMAIN R,LV=(0),A=(1)
         SLR   @15,@15                                             0043
         L     @14,12(,@13)                                        0043
         LM    @00,@12,20(@13)                                     0043
         BR    @14                                                 0043
*                END;                   /* END OF 'FOUND' DO-GROUP   */
*            /* IF SPACE WAS NOT FOUND, CONTROL PASSED HERE TO CHECK */
*            /* FOR END OF QUEUE.                                    */
*            IF FSQENEXT=0                                         0045
*              THEN                     /* THAT WAS THE LAST ELEMENT */
@RC00022 LH    @10,FSQENEXT(,FSQEPTR)                              0045
         LTR   @10,@10                                             0045
         BZ    @RT00045                                            0045
*                GO TO BUMPPTRS;        /* TRY THE NEXT MEMBER BLOCK */
*            SPACWPTR=FSQEPTR;          /* SAVE CURRENT FSQE PTR     */
         LR    SPACWPTR,FSQEPTR                                    0047
*            GO TO SEARCHQ;             /* GO BACK TO SEARCH FURTHER */
         B     SEARCHQ                                             0048
*BUMPPTRS:   /* CTL PASSED HERE IF REQUEST NOT SATISFIED IN THIS BLK */
*            HEDBPTR=HEDBPTR+UADSBLNG;  /* STEP TO NEXT MEMBER BLOCK */
BUMPPTRS AH    HEDBPTR,UADSBLNG(,HEDBPTR)                          0049
*          END;                         /* END OF ITERATIVE DO-GROUP
*                                          WHICH SEARCHES FREESPACE Q*/
         BCTR  LOOPCNT,0                                           0050
@DE00016 LTR   LOOPCNT,LOOPCNT                                     0050
         BP    @DL00016                                            0050
*          /* CONTROL PASSED HERE ONLY IF NO ELIGIBLE SPACE FOUND IN */
*          /* ANY OF THE GIVEN MEMBER BLOCKS                         */
*          RETURN CODE(8);            /* RETURN TO CALLER          */
         L     @13,4(,@13)                                         0051
         L     @00,@SIZDATD                                        0051
         LR    @01,@11                                             0051
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,8                                               0051
         L     @14,12(,@13)                                        0051
         LM    @00,@12,20(@13)                                     0051
         BR    @14                                                 0051
*          END IKJEFA53                                            0052
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        *
*;                                                                 0052
@EL00001 L     @13,4(,@13)                                         0052
@EF00001 L     @00,@SIZDATD                                        0052
         LR    @01,@11                                             0052
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0052
         BR    @14                                                 0052
@DATA    DS    0H
@CH00040 DC    H'8'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SAV001  EQU   @SA00001
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IKJEFA53 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
IKJEFA53 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
         DS    0D
IKJEFA53 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
@DATEND  EQU   *
IKJEFA53 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
USRLEN   EQU   @05
SPACWPTR EQU   @06
USELESS  EQU   @07
LOOPCNT  EQU   @05
SPACPTR  EQU   @04
FSQEPTR  EQU   @02
HEDBPTR  EQU   @03
R1       EQU   @01
DHED     EQU   0
UADSMHDR EQU   DHED
UADSBLNG EQU   UADSMHDR
UADSFSQP EQU   UADSMHDR+2
UADSUSER EQU   UADSMHDR+4
UADSBN01 EQU   UADSMHDR+12
UADSNUSP EQU   UADSBN01+1
UADSATTR EQU   DHED+16
UADSFSQE EQU   0
FSQELNTH EQU   UADSFSQE
FSQENEXT EQU   UADSFSQE+2
SPACPARM EQU   0
SPACMPTR EQU   SPACPARM
SPACMCNT EQU   SPACPARM+4
SPACLNTH EQU   SPACPARM+6
SPACOFST EQU   SPACPARM+8
GTSPLBIT EQU   SPACLNTH+1
*                                      START UNREFERENCED COMPONENTS
@NM00004 EQU   DHED+40
UADSDEST EQU   DHED+32
UADSPERP EQU   DHED+28
UADSPWD1 EQU   DHED+24
UADSUPTP EQU   DHED+20
UADSINST EQU   DHED+18
@NM00003 EQU   UADSATTR
USATR03  EQU   UADSATTR
USATR02  EQU   UADSATTR
USATR01  EQU   UADSATTR
USATR00  EQU   UADSATTR
UADSMAXC EQU   UADSMHDR+14
@NM00002 EQU   UADSBN01+1
UADSEXPF EQU   UADSBN01+1
@NM00001 EQU   UADSBN01
*                                      END UNREFERENCED COMPONENTS
@RT00017 EQU   BUMPPTRS
@RT00045 EQU   BUMPPTRS
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IKJEFA53,(C'PL/S-II',0503,75006)
