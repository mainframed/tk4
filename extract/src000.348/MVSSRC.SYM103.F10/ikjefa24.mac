         TITLE 'IKJEFA24  --  CHANGE PARSE INTERFACE ROUTINE           *
                        '
IKJEFA24 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFA24  73.360'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
*         CTABPTR = R1;               /* PTR TO THE CHANGE CNTRL TAB
*                                        IS PASSED IN REG1           */
         LR    CTABPTR,R1                                          0021
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */
*         /* MOVE MACRO MODELS TO DYNAMIC STORAGE                    */
*         DYNLFORM(1:INLINLNG) = INLINLFM(1:INLINLNG);             0023
         L     @10,INLINLNG                                        0023
         BCTR  @10,0                                               0023
         EX    @10,@SM00217                                        0023
*         /* OBTAIN DYNAMIC STORAGE FOR PARSE PARAMETER CONTROL LIST */
*         PCLPTR = 0;                 /* INIT PTR TO PCL             */
         SLR   @10,@10                                             0024
         ST    @10,PCLPTR                                          0024
*         PLENGTH = PCLLNGTH;         /* GET LENGTH OF PARSE PCL     */
         L     @10,PCLMDLAD                                        0025
         LH    @10,PCLLNGTH(,@10)                                  0025
         ST    @10,PLENGTH                                         0025
*         RFY R0 RSTD;                /* RESTRICT GETMAIN LENGTH REG */
*         R0 = PLENGTH;               /* SET LENGTH FOR GETMAIN      */
         LR    R0,@10                                              0027
*         GEN (GETMAIN EC,LV=(R0),A=PCLPTR,MF=(E,DYNGTLST))        0028
*           SETS(PCLPTR) REFS(DYNGTLST);                           0028
         GETMAIN EC,LV=(R0),A=PCLPTR,MF=(E,DYNGTLST)
*         RFY R15 RSTD;               /* RESERVE RETURN CODE REGISTER*/
*         RETNCODE = R15;             /* ASSIGN THE RETURN CODE      */
         LR    RETNCODE,R15                                        0030
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REGISTER*/
*         /* CHECK THE RETURN CODE                                   */
*         IF RETNCODE ^= 0            /* GETMAIN SUCCESSFUL?         */
*           THEN                      /* NO, SPACE UNAVAILABLE       */
         LTR   RETNCODE,RETNCODE                                   0032
         BZ    @RF00032                                            0032
*             DO;                                                  0033
*               MSGNMBR = 3;          /* SET ERROR MSG NUMBER AND..  */
         MVI   MSGNMBR(CTABPTR),X'03'                              0034
*               RETURN;               /* RETURN TO IKJEFA20          */
@EL00001 L     @13,4(,@13)                                         0035
@EF00001 L     @00,@SIZDATD                                        0035
         LR    @01,@11                                             0035
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0035
         BR    @14                                                 0035
*             END;                                                 0036
*         /* INITIALIZE THE PARSE PCL FROM THE MODEL.                */
*         /* PCL MUST BE MOVED INTO DYNAMIC STORAGE SINCE IT WILL BE */
*         /* MODIFIED IN THE NODELIST VALIDITY CHECK EXIT ROUTINE -  */
*         /* IKJEFA25.                                               */
*          RFY (R1,R14,R15) RSTD;     /* RESTRICT WORK REGISTERS     */
@RF00032 DS    0H                                                  0038
*          R0=PCLPTR;                 /* GET TO ADDRESS              */
         L     R0,PCLPTR                                           0038
*          R1=PLENGTH;                /* LOAD R1 WITH LENGTH         */
         L     @10,PLENGTH                                         0039
         LR    R1,@10                                              0039
*          R14=PCLMDLAD;              /* GET FROM ADDRESS            */
         L     R14,PCLMDLAD                                        0040
*          R15=PLENGTH;               /* LOAD R15 WITH LENGTH        */
         LR    R15,@10                                             0041
*          GEN (MVCL  R0,R14)         /* MOVE PCL TO GOTTEN CORE     */
*            REFS(R0,R1,R14,R15);                                  0042
         MVCL  R0,R14
*          RFY (R0,R1,R14,R15) UNRSTD;/* RELEASE WORK REGISTERS      */
*         EXITADD = ADDR(IKJEFA25);   /* SET PTR TO EXIT ADDRESS     */
         LA    @10,IKJEFA25                                        0044
         ST    @10,EXITADD                                         0044
*         RFY R13 RSTD;               /* RESTRICT SAVE AREA PTR      */
*         SAVARAD = R13;              /* POINT TO SAVE AREA          */
         ST    R13,SAVARAD                                         0046
*         NODEPTR = NODELPTR;         /* POINT TO ANSWER PLACE       */
         L     @10,NODELPTR(,CTABPTR)                              0047
         ST    @10,NODEPTR                                         0047
*         PERFPTR = ADDR(PERFGRP);    /* POINT TO PERF GRP AREA      */
         L     @10,DATALPTR(,CTABPTR)                              0048
         LA    @10,PERFGRP(,@10)                                   0048
         ST    @10,PERFPTR                                         0048
*         CMDIND = 2;                 /* INDICATE CHANGE SUBCOMMAND  */
         MVI   CMDIND,X'02'                                        0049
*         /* BUILD PARSE PARAMETER LIST (PPL).                       */
*         CHNPDLAD = 0;               /* INIT PTR TO PDL             */
         SLR   @10,@10                                             0050
         ST    @10,CHNPDLAD                                        0050
*         PARSLIST(1:12) = ACCTPL;    /* 1ST 3 WORDS OF ACCOUNT    0051
*                                        PARAMETER LIST              */
         L     @10,ACCTPLP(,CTABPTR)                               0051
         MVC   PARSLIST(12),ACCTPL(@10)                            0051
*         PPLPTR = ADDR(PARSLIST);    /* PPL ADDRESSABILITY          */
         LA    @07,PARSLIST                                        0052
         ST    @07,PPLPTR                                          0052
*         PPLPCL = PCLPTR;            /* ADDR OF DYNAMIC PCL         */
         L     @15,PCLPTR                                          0053
         ST    @15,PPLPCL(,@07)                                    0053
*         PPLANS = ADDR(CHNPDLAD);    /* CHNPDLAD WILL CONTAIN ADDR
*                                        OF PDL AFTER PARSE          */
         LA    @15,CHNPDLAD                                        0054
         ST    @15,PPLANS(,@07)                                    0054
*         PPLCBUF = BUFPTR;           /* PTR TO CHANGE CMND  BUFFER  */
         L     @10,BUFPTR(,@10)                                    0055
         ST    @10,PPLCBUF(,@07)                                   0055
*         PPLUWA = ADDR(VCHKPL);      /* ADDR OF THE PARAMETER  LIST
*                                        FOR IKJEFA55                */
         LA    @10,VCHKPL                                          0056
         ST    @10,PPLUWA(,@07)                                    0056
*         /* LINK TO THE PARSE SERVICE ROUTINE.                      */
*         GEN (LINK  EP=IKJPARS,MF=(E,PARSLIST))                   0057
*           FLOWS(IKJEFA25) REFS(PARSLIST);                        0057
         LINK  EP=IKJPARS,MF=(E,PARSLIST)
*         RFY R15 RSTD;               /* RESTRICT THE RETURN CODE REG*/
*         RETNCODE = R15;             /* SAVE THE RETURN CODE        */
         LR    RETNCODE,R15                                        0059
*         RFY R15 UNRSTD;             /* RELEASE THE RETURN CODE REG */
*         /* CHECK THE PARSE RETURN CODE.                            */
*         IF RETNCODE ^= 0            /* SUCCESSFUL COMPLETION?      */
*           THEN                      /* NO,                         */
         LTR   RETNCODE,RETNCODE                                   0061
         BZ    @RF00061                                            0061
*             DO;                                                  0062
*             IF RETNCODE = 20        /* DID THE VALIDITY CHECK ROUTINE
*                                          DISCOVER THE ERROR        */
*               THEN                  /* YES,                        */
         CH    RETNCODE,@CH00195                                   0063
         BNE   @RF00063                                            0063
*                 RETCODE = EXITRTCD; /* SAVE THE VALIDITY CODE      */
         L     @10,EXITRTCD                                        0064
         ST    @10,RETCODE(,CTABPTR)                               0064
*               ELSE                  /* NO,                         */
*                 RETCODE = RETNCODE; /* SAVE THE RETURN CODE        */
         B     @RC00063                                            0065
@RF00063 ST    RETNCODE,RETCODE(,CTABPTR)                          0065
*             GOTO FREEPCL;           /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0066
*             END;                                                 0067
*           IF SIZEKEY(16) = '1'B     /* WAS SIZE SPECIFIED?         */
*             THEN                    /* YES,                        */
@RF00061 L     @10,CHNPDLAD                                        0068
         TM    SIZEKEY+1(@10),B'00000001'                          0068
         BNO   @RF00068                                            0068
*               DO;                                                0069
*               SIZE = SIZEHEX;       /* SAVE SIZE VALUE IN DATALIST
*                                        TABLE                       */
         L     @07,DATALPTR(,CTABPTR)                              0070
         SLR   @15,@15                                             0070
         ICM   @15,3,SIZEHEX(@10)                                  0070
         STH   @15,SIZE(,@07)                                      0070
*               SIZESW = '1'B;        /* SET SIZE SPECIFIED SWITCH   */
         OI    SIZESW(CTABPTR),B'01000000'                         0071
*               END;                                               0072
*           IF UNITKEY(16) = '1'B     /* WAS UNIT SPECIFIED?         */
*             THEN                    /* YES,                        */
@RF00068 L     @10,CHNPDLAD                                        0073
         TM    UNITKEY+1(@10),B'00000001'                          0073
         BNO   @RF00073                                            0073
*               DO;                                                0074
*               UNITNAM =             /* SAVE UNIT NAME IN DATALIST  */
*                 UNIT(1:UNITLNG);    /* TABLE                       */
         L     @07,DATALPTR(,CTABPTR)                              0075
         MVI   UNITNAM+1(@07),C' '                                 0075
         MVC   UNITNAM+2(6,@07),UNITNAM+1(@07)                     0075
         LH    @15,UNITLNG(,@10)                                   0075
         BCTR  @15,0                                               0075
         L     @10,UNITPTR(,@10)                                   0075
         EX    @15,@SM00220                                        0075
*               UNITSW = '1'B;        /* SET UNIT SPECIFIED SWITCH   */
         OI    UNITSW(CTABPTR),B'00100000'                         0076
*               END;                                               0077
*         /* CHECK THE COMMAND FOR POSSIBLE OMISSION OF REQUIRED     */
*         /* DATA NOT CHECKED BY PARSE, SUCH AS (1)- IF THE CHANGE   */
*         /* LEVEL IS THE USERID LEVEL, THEN EITHER A NEW USERID     */
*         /* (DATALIST), OR DATA ITEMS, OR BOTH, MUST BE SPECIFIED.  */
*         /* (2)- IF THE CHANGE LEVEL IS THE PROCNAME LEVEL, THEN    */
*         /* EITHER A NEW PROCNAME, OR DATA ITEMS, OR BOTH, MUST BE  */
*         /* SPECIFIED. IF THESE CONDITIONS ARE NOT MET, THE COMMAND */
*         /* WILL BE REJECTED.                                       */
*         IF NUMOFLV = 1              /* IS THE LEVEL THE USERID     */
*           THEN                      /* YES,                        */
@RF00073 CLI   NUMOFLV,1                                           0078
         BNE   @RF00078                                            0078
*             DO;                                                  0079
*             IF OPERKEY(15:16) = '00'B /*  IS OPER SPECIFIED        */
*             &ACCTKEY(15:16) = '00'B /*  OR ACCT                    */
*             &JCLKEY(15:16)  = '00'B /*  OR JCL                     */
*             &MONTKEY(15:16) = '00'B /*  OR MOUNT             Y02678*/
*             &USDAKEY(15:16) = '00'B /*  OR USERDATA                */
*             &DESTKEY(15:16) = '00'B /*  OR DESTINATION       Y02678*/
*             &PERFKEY(15:16) = '00'B /*  OR PERFORMANCE GROUPSY02678*/
*             &MAXSKEY(15:16) = '00'B /*  OR MAXSIZE                 */
*             &DATAKEY(15:16) = '00'B /*  OR A NEW USERID            */
*               THEN                  /* NO, NO DATA ITEMS SPECIFIED */
         L     @10,CHNPDLAD                                        0080
         TM    OPERKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
         TM    ACCTKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
         TM    JCLKEY+1(@10),B'00000011'                           0080
         BNZ   @RF00080                                            0080
         TM    MONTKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
         TM    USDAKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
         TM    DESTKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
         TM    PERFKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
         TM    MAXSKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
         TM    DATAKEY+1(@10),B'00000011'                          0080
         BNZ   @RF00080                                            0080
*                 DO;                                              0081
*                 MSGNMBR = 2;        /* SET MESSAGE NUMBER          */
         MVI   MSGNMBR(CTABPTR),X'02'                              0082
*                 GOTO FREEPCL;       /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0083
*                 END;                                             0084
*             IF DLFLG1 = '1'B       /* WAS A NEW USERID SPECIFIED? */
*               THEN                  /* YES,                        */
@RF00080 L     @10,CHNPDLAD                                        0085
         TM    DLFLG1(@10),B'10000000'                             0085
         BNO   @RF00085                                            0085
*                 DO;                                              0086
*                 DUSRLEN = DATALNG1; /* GET LENGTH OF NEW USERID    */
         L     @07,DATALPTR(,CTABPTR)                              0087
         LH    @15,DATALNG1(,@10)                                  0087
         STC   @15,DUSRLEN(,@07)                                   0087
*                 DUSRID =            /* GET NEW USERID              */
*                   DLUSID(1:DATALNG1);                            0088
         MVI   DUSRID+1(@07),C' '                                  0088
         MVC   DUSRID+2(6,@07),DUSRID+1(@07)                       0088
         BCTR  @15,0                                               0088
         L     @10,DLPTR1(,@10)                                    0088
         EX    @15,@SM00223                                        0088
*                 END;                                             0089
*             GOTO PARSOK;            /* COMPLETE CONTROL TABLE      */
         B     PARSOK                                              0090
*             END;                                                 0091
*         /* IT IS POSSIBLE THAT THE DATA SUBFIELD ITEM (NEW NAME)   */
*         /* IS IDENTICAL TO THE CORRESPONDING NODELIST ITEM (OLD    */
*         /* NAME). SINCE THIS WOULD RESULT IN A MEANINGLESS CHANGE, */
*         /* THE COMMAND WILL BE REJECTED WITH AN EXPLANATORY MSG.   */
*         IF NUMOFLV = 2              /* CHANGE LEVEL=PASSWORD LEVEL?*/
*           THEN                      /* YES,                        */
@RF00078 CLI   NUMOFLV,2                                           0092
         BNE   @RF00092                                            0092
*             DO;                                                  0093
*             IF DLFLG2  = '0'B       /* WAS PASSWORD SPECIFIED?     */
*               THEN                  /* THE COMMAND IS INVALID      */
         L     @10,CHNPDLAD                                        0094
         TM    DLFLG2(@10),B'10000000'                             0094
         BNZ   @RF00094                                            0094
*                 DO;                                              0095
*                 MSGNMBR = 2;        /* SET MESSAGE NUMBER          */
         MVI   MSGNMBR(CTABPTR),X'02'                              0096
*                 GOTO FREEPCL;       /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0097
*                 END;                                             0098
*             DPASSWD =               /* SAVE DATALIST PASSWORD      */
*               DLPASS(1:DATALNG2);                                0099
@RF00094 L     @10,DATALPTR(,CTABPTR)                              0099
         MVI   DPASSWD+1(@10),C' '                                 0099
         MVC   DPASSWD+2(6,@10),DPASSWD+1(@10)                     0099
         L     @07,CHNPDLAD                                        0099
         LH    @15,DATALNG2(,@07)                                  0099
         BCTR  @15,0                                               0099
         L     @07,DLPTR2(,@07)                                    0099
         EX    @15,@SM00225                                        0099
*             IF PASSWD = DPASSWD                                  0100
*               THEN                  /* OLD & NEW NAME ARE THE SAME */
         L     @07,NODELPTR(,CTABPTR)                              0100
         CLC   PASSWD(8,@07),DPASSWD(@10)                          0100
         BNE   @RF00100                                            0100
*                 DO;                                              0101
*                 MSGNMBR = 29;       /* SET ERROR MSG NUMBER        */
         MVI   MSGNMBR(CTABPTR),X'1D'                              0102
*                 GOTO FREEPCL;       /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0103
*                 END;                                             0104
*             GOTO PARSOK;            /* COMPLETE CONTROL TABLE      */
         B     PARSOK                                              0105
*             END;                                                 0106
*         /* CHANGE LEVEL = ACCTNMBR LEVEL?                          */
*         /* IF THE CHANGE LEVEL IS THE ACTNO LEVEL, THEN MAKE SURE  */
*         /* THAT THE NEW ACTNO IS NOT '*'. WHILE THE '*' IS A VALID */
*         /* CHARACTER IN AN ACTNO, IT IS NOT VALID BY ITSELF.       */
*         IF NUMOFLV = 3              /* CHANGE LVL = ACTNO LVL?     */
*           THEN                      /* YES,                        */
@RF00092 CLI   NUMOFLV,3                                           0107
         BNE   @RF00107                                            0107
*             DO;                                                  0108
*             IF DLFLG3  = '0'B       /* WAS ACCTNO. SPECIFIED?      */
*               THEN                  /* THE COMMAND IS INVALID      */
         L     @10,CHNPDLAD                                        0109
         TM    DLFLG3(@10),B'10000000'                             0109
         BNZ   @RF00109                                            0109
*                 DO;                                              0110
*                 MSGNMBR = 2;        /* SET MESSAGE NUMBER          */
         MVI   MSGNMBR(CTABPTR),X'02'                              0111
*                 GOTO FREEPCL;       /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0112
*                 END;                                             0113
*             DACTLEN = DATALNG3;     /* SAVE LENGTH OF ACCT NUMBER  */
@RF00109 L     @10,DATALPTR(,CTABPTR)                              0114
         L     @07,CHNPDLAD                                        0114
         LH    @15,DATALNG3(,@07)                                  0114
         STC   @15,DACTLEN(,@10)                                   0114
*             DACCTNO(1:DATALNG3) =   /* SAVE DATALIST ACCOUNT NUMBER*/
*               DLACTNO(1:DATALNG3);                               0115
         BCTR  @15,0                                               0115
         L     @07,DLPTR3(,@07)                                    0115
         EX    @15,@SM00227                                        0115
*             IF DACCTNO(1:2) = '* '  /* DOES THE NEW ACCTNMBR = '*'?*/
*             THEN                    /* YES,                        */
         CLC   DACCTNO(2,@10),@CC00202                             0116
         BNE   @RF00116                                            0116
*               DO;                                                0117
*               MSGNMBR = 28;         /* SET ERROR MESSAGE NUMBER    */
         MVI   MSGNMBR(CTABPTR),X'1C'                              0118
*               GOTO FREEPCL;         /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0119
*               END;                                               0120
*             IF DACTLEN = ACTLEN                                  0121
*               & ACCTNO(1:ACTLEN) = DACCTNO(1:ACTLEN)             0121
*               THEN                  /* OLD & NEW NAME ARE THE SAME */
@RF00116 L     @10,DATALPTR(,CTABPTR)                              0121
         L     @07,NODELPTR(,CTABPTR)                              0121
         CLC   DACTLEN(1,@10),ACTLEN(@07)                          0121
         BNE   @RF00121                                            0121
         SLR   @15,@15                                             0121
         IC    @15,ACTLEN(,@07)                                    0121
         BCTR  @15,0                                               0121
         EX    @15,@SC00229                                        0121
         BNE   @RF00121                                            0121
*                 DO;                                              0122
*                 MSGNMBR = 29;       /* SET ERROR MSG NUMBER        */
         MVI   MSGNMBR(CTABPTR),X'1D'                              0123
*                 GOTO FREEPCL;       /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0124
*                 END;                                             0125
*             GOTO PARSOK;            /* COMPLETE CONTROL TABLE      */
         B     PARSOK                                              0126
*             END;                                                 0127
*         /* IS THE CHANGE LEVEL THE PROCNAME LEVEL?                 */
*         IF NUMOFLV = 4                                           0128
*           THEN                                                   0128
@RF00107 CLI   NUMOFLV,4                                           0128
         BNE   @RF00128                                            0128
*             DO;                                                  0129
*             IF UNITKEY(16) = '0'B   /* WAS UNIT NAME SPECIFIED?    */
*              & SIZEKEY(16) = '0'B   /* OR SIZE?                    */
*              & DATAKEY(16) = '0'B   /* OR A NEW PROC NAME          */
*               THEN                  /* THE COMMAND IS INVALID      */
         L     @10,CHNPDLAD                                        0130
         TM    UNITKEY+1(@10),B'00000001'                          0130
         BNZ   @RF00130                                            0130
         TM    SIZEKEY+1(@10),B'00000001'                          0130
         BNZ   @RF00130                                            0130
         TM    DATAKEY+1(@10),B'00000001'                          0130
         BNZ   @RF00130                                            0130
*               DO;                                                0131
*               MSGNMBR = 2;          /* SET MESSAGE NUMBER          */
         MVI   MSGNMBR(CTABPTR),X'02'                              0132
*               GOTO FREEPCL;         /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0133
*               END;                                               0134
*             IF DLFLG4 = '1'B        /* WAS A NEW PROC NAME SPEC. ? */
*               THEN                  /* YES,                        */
@RF00130 L     @10,CHNPDLAD                                        0135
         TM    DLFLG4(@10),B'10000000'                             0135
         BNO   @RF00135                                            0135
*                 DO;                                              0136
*                 DPROCNM = DLPROC(1:DATALNG4);                    0137
         L     @07,DATALPTR(,CTABPTR)                              0137
         MVI   DPROCNM+1(@07),C' '                                 0137
         MVC   DPROCNM+2(6,@07),DPROCNM+1(@07)                     0137
         LH    @15,DATALNG4(,@10)                                  0137
         BCTR  @15,0                                               0137
         L     @10,DLPTR4(,@10)                                    0137
         EX    @15,@SM00231                                        0137
*                 IF PROCNM = DPROCNM /* ARE OLD & NEW NAME THE SAME?*/
*                   THEN                                           0138
         L     @10,NODELPTR(,CTABPTR)                              0138
         CLC   PROCNM(8,@10),DPROCNM(@07)                          0138
         BNE   @RF00138                                            0138
*                     DO;                                          0139
*                     MSGNMBR = 29;   /* SET ERROR MSG NUMBER        */
         MVI   MSGNMBR(CTABPTR),X'1D'                              0140
*                     GOTO FREEPCL;   /* FREE PCL AND RETURN TO EFA20*/
         B     FREEPCL                                             0141
*                     END;                                         0142
*                 END;                                             0143
@RF00138 DS    0H                                                  0144
*             END;                                                 0144
@RF00135 DS    0H                                                  0145
*PARSOK:  /* FILL IN THE APPROPRIATE FIELDS IN THE CHANGE CONTROL  0145
*            TABLE AND RETURN TO IKJEFA20.                           */
*         CHLEVL = NUMOFLV;           /* NO. OF ITEMS FOUND IN THE 0145
*                                        NODELIST = CHANGE LEVEL     */
@RF00128 DS    0H                                                  0145
PARSOK   MVC   CHLEVL(1,CTABPTR),NUMOFLV                           0145
*         MSGNMBR = 0;                /* 0- SUCCESSFUL COMPLETION    */
         MVI   MSGNMBR(CTABPTR),X'00'                              0146
*FREEPCL: /* RELEASE DYNAMIC STORAGE OBTAINED FOR PARSE PCL.         */
*         /* ISSUE FREEMAIN MACRO TO RELEASE DYNAMIC PCL             */
*         CHPDLPTR = CHNPDLAD;        /* PTR TO THE PDL              */
FREEPCL  L     @10,CHNPDLAD                                        0147
         ST    @10,CHPDLPTR(,CTABPTR)                              0147
*         IF PCLPTR ^= 0              /* IS THERE A PCL TO FREE?     */
*           THEN                      /* YES,                        */
         L     @10,PCLPTR                                          0148
         LTR   @10,@10                                             0148
         BZ    @RF00148                                            0148
*             GEN (FREEMAIN A=PCLPTR,MF=(E,DYNFRLST))              0149
*               REFS(DYNFRLST,PCLPTR,PLENGTH);                     0149
         FREEMAIN A=PCLPTR,MF=(E,DYNFRLST)
*         RETURN;                     /* RETURN TO IKJEFA20 WITH THE
*                                        PARSE RETURN CODE           */
         B     @EL00001                                            0150
*IKJEFA25:/***********************************************************/
*         /* NODELIST VALIDITY CHECK EXIT ROUTINE -                  */
*         /*   . CHECKS THE NUMBER OF ITEMS IN THE NODELIST          */
*         /*   . IF THE COUNT IS 1 (USERID ONLY) AND THE USERID IS   */
*         /*     '*', THE PARSE PCL WILL BE MODIFIED SO THAT THE     */
*         /*     KEYWORDS 'SIZE', 'UNIT' & 'DATA' ARE BYPASSED LATER */
*         /*     ON IN THE PARSING PROCESS. IF THE USERID IS NOT '*' */
*         /*     THE PARSE PCL WILL BE MODIFIED SO THAT ONLY 'SIZE'  */
*         /*     & 'UNIT' ARE BYPASSED. ALSO, THE SUBFIELD OFFSET    */
*         /*     OF THE 'DATA' NAME PCE IS MODIFIED TO LOCATE A SUB- */
*         /*     FIELD WITH A USERID DEFINITION.                     */
*         /*   . IF THE COUNT IS 2, THE PCL WILL BE MODIFIED SO THAT */
*         /*     THE 'SIZE' & 'UNIT' KEYWORDS ARE BYPASSED AND THE   */
*         /*     'DATA' SUBFIELD LOCATES A PASSWORD DEFINITION.      */
*         /*   . IF THE COUNT IS 3, THE PCL WILL BE MODIFIED SO THAT */
*         /*     THE 'SIZE' & 'UNIT' KEYWORDS ARE BYPASSED AND THE   */
*         /*     'DATA' SUBFIELD LOCATES AN ACCTNMBR DEFINITION.     */
*         /*   . IF THE COUNT IS 4, THE PCL WILL BE MODIFIED SO THAT */
*         /*     'DATA' SUBFIELD LOCATES A PROCNAME DEFINITION.      */
*         /***********************************************************/
*         PROC OPTIONS(NOSAVEAREA);                                0151
IKJEFA25 STM   @14,@12,12(@13)                                     0151
*         RFY (R1,R2) RSTD;                                        0152
*         R2 = R1;                    /* GET SAVE AREA PTR           */
         LR    R2,R1                                               0153
*         GEN (LM  R2,R12,28(R2));    /* RESTORE REGISTERS           */
         LM  R2,R12,28(R2)
*         SAVE13 = R13;               /* SAVE IKJEFA55 SAVE AREA PTR */
         LR    SAVE13,R13                                          0155
*         R13 = R1;                   /* SET SAVE AREA PTR           */
         LR    R13,R1                                              0156
*         RFY (R1,R2) UNRSTD;                                      0157
*         SUBFPTR = PCLPTR+DATSUBFO;  /* POINT TO DATA SUBFIELD OFF. */
         L     @10,PCLPTR                                          0158
         LH    SUBFPTR,DATSUBFO                                    0158
         ALR   SUBFPTR,@10                                         0158
*         DATAPTR = PCLPTR+DATAOF;    /* POINT TO DATA KEYWORD PCE   */
         LH    DATAPTR,DATAOF                                      0159
         ALR   DATAPTR,@10                                         0159
*         IF NUMOFLV = 1              /* IS THE CHANGE LEVEL USERID? */
*           THEN                      /* YES,                        */
         CLI   NUMOFLV,1                                           0160
         BNE   @RF00160                                            0160
*             DO;                                                  0161
*             IF USRID(1) = '*'       /* IS THE USERID AN ASTERISK?  */
*               THEN                  /* YES,                        */
         L     @05,NODELPTR(,CTABPTR)                              0162
         CLI   USRID(@05),C'*'                                     0162
         BNE   @RF00162                                            0162
*                 DO;                                              0163
*                 PCEPTR = PCLPTR+NOLIMLNO; /* POINT TO NOLIM PCE    */
         AH    @10,NOLIMLNO                                        0164
         LR    PCEPTR,@10                                          0164
*                 PCELNG = SZUNDASK;  /* MODIFY 'NOLIM' PCE LENGTH SO
*                                        THAT PARSE WILL BYPASS THE
*                                        SIZE, UNIT, & DATA KEYWORDS */
         LH    @10,SZUNDASK                                        0165
         STH   @10,PCELNG(,PCEPTR)                                 0165
*                 GOTO CLEANUP;       /* GO CLEAN UP AND EXIT        */
         B     CLEANUP                                             0166
*                 END;                                             0167
*             DATAFLG(5) = '0'B;      /* TURN OFF DEFAULT BIT FOR THE
*                                        'DATA' KEYWORD - THIS MAKES
*                                        THE KEYWORD OPTIONAL        */
@RF00162 NI    DATAFLG(DATAPTR),B'11110111'                        0168
*             SUBFOF = USSUBOF;       /* SET SUBFIELD OFFSET TO    0169
*                                        USERID IKJSUBF & IKJIDENT   */
         LH    @10,USSUBOF                                         0169
         STH   @10,SUBFOF(,SUBFPTR)                                0169
*             GOTO SKIPSZUN;          /* GO SET BYPASS OF SZE & UNIT */
         B     SKIPSZUN                                            0170
*             END;                                                 0171
*         IF NUMOFLV = 2              /* IS THE CHANGE LEVEL PASSWD? */
*           THEN                      /* YES,                        */
@RF00160 CLI   NUMOFLV,2                                           0172
         BNE   @RF00172                                            0172
*             DO;                                                  0173
*             SUBFOF = PASUBOF;       /* SET SUBFIELD OFFSET TO    0174
*                                        PASSWORD IKJSUBF & IKJIDENT */
         LH    @10,PASUBOF                                         0174
         STH   @10,SUBFOF(,SUBFPTR)                                0174
*             GOTO SKIPSZUN;          /* GO SET BYPASS OF SZE & UNIT */
         B     SKIPSZUN                                            0175
*             END;                                                 0176
*         IF NUMOFLV = 3              /* IS THE CHANGE LEVEL ACCTNM? */
*           THEN                      /* YES,                        */
@RF00172 CLI   NUMOFLV,3                                           0177
         BNE   @RF00177                                            0177
*             DO;                                                  0178
*             SUBFOF = ACSUBOF;       /* SET SUBFIELD OFFSET TO    0179
*                                        ACCTNMBR IKJSUBF & IKJIDENT */
         LH    @10,ACSUBOF                                         0179
         STH   @10,SUBFOF(,SUBFPTR)                                0179
*             GOTO SKIPSZUN;          /* GO SET BYPASS OF SZE & UNIT */
         B     SKIPSZUN                                            0180
*             END;                                                 0181
*         DATAFLG(5) = '0'B;          /* TURN OFF DEFAULT BIT FOR THE
*                                        'DATA' KEYWORD - THIS MAKES
*                                        THE KEYWORD OPTIONAL        */
@RF00177 NI    DATAFLG(DATAPTR),B'11110111'                        0182
*         GOTO CLEANUP;               /* GO CLEAN UP AND EXIT        */
         B     CLEANUP                                             0183
*SKIPSZUN:/* SET 'NOLIM' NAME PCE LENGTH SO THAT PARSE BYPASSES      */
*         /* THE SIZE AND UNIT KEYWORD DEFINITIONS.                  */
*         PCEPTR = PCLPTR+NOLIMLNO;   /* POINT TO NOLIM PCE          */
SKIPSZUN LH    PCEPTR,NOLIMLNO                                     0184
         AL    PCEPTR,PCLPTR                                       0184
*         PCELNG = SZUNSKIP;          /* FOR USERID, PASSWORD, AND 0185
*                                        ACCTNMBR                    */
         LH    @10,SZUNSKIP                                        0185
         STH   @10,PCELNG(,PCEPTR)                                 0185
*CLEANUP: /* THE PARSE PCL HAS BEEN MODIFIED TO MATCH THE NODELIST   */
*         PCEPTR = PCLPTR+SUBFOF;     /* POINT TO ACTIVE PCE         */
CLEANUP  LH    PCEPTR,SUBFOF(,SUBFPTR)                             0186
         AL    PCEPTR,PCLPTR                                       0186
*         PCELNG = PCLLNGTH-1;        /* POINT TO END OF PCL TO TELL
*                                        PARSE THIS IS THE ONLY PCE  */
         L     @10,PCLMDLAD                                        0187
         LH    @10,PCLLNGTH(,@10)                                  0187
         BCTR  @10,0                                               0187
         STH   @10,PCELNG(,PCEPTR)                                 0187
*         R13 = SAVE13;               /* ADDR OF CALLER'S SAVE AREA  */
         LR    R13,SAVE13                                          0188
*         RETURN CODE(0);                                          0189
         SLR   @15,@15                                             0189
         L     @14,12(,@13)                                        0189
         LM    @00,@12,20(@13)                                     0189
         BR    @14                                                 0189
*         END IKJEFA25;                                            0190
*         END IKJEFA24                                             0191
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKJPPL  )                                        *
*;                                                                 0191
@DATA    DS    0H
@CH00195 DC    H'20'
@SM00217 MVC   DYNLFORM(0),INLINLFM
@SM00220 MVC   UNITNAM(0,@07),UNIT(@10)
@SM00223 MVC   DUSRID(0,@07),DLUSID(@10)
@SM00225 MVC   DPASSWD(0,@10),DLPASS(@07)
@SM00227 MVC   DACCTNO(0,@10),DLACTNO(@07)
@SC00229 CLC   ACCTNO(0,@07),DACCTNO(@10)
@SM00231 MVC   DPROCNM(0,@07),DLPROC(@10)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
IKJEFA24 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
CHNPDLAD DS    A
VCHKPL   DS    CL26
         ORG   VCHKPL
EXITADD  DS    AL4
EXITRTCD DS    AL4
NODEPTR  DS    AL4
PERFPTR  DS    AL4
PPLPTR   DS    AL4
SAVARAD  DS    AL4
CMDIND   DS    FL1
NUMOFLV  DS    FL1
         ORG   VCHKPL+26
         DS    CL2
PARSLIST DS    CL28
@NM00009 DS    CL8
         ORG   @NM00009
PCLPTR   DS    AL4
PLENGTH  DS    AL4
         ORG   @NM00009+8
IKJEFA24 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PCLMDLAD DC    AL4(PCLMODEL)
SZUNSKIP DC    AL2(DATAPCE-NOLIMPCE)
SZUNDASK DC    AL2(SUBFPCES-NOLIMPCE)
DATAOF   DC    AL2(DATAPCE-PCLSTART)
ACSUBOF  DC    AL2(ACCTPCE-PCLSTART+1)
PASUBOF  DC    AL2(PASSPCE-PCLSTART+1)
USSUBOF  DC    AL2(USERPCE-PCLSTART+1)
NOLIMLNO DC    AL2(NOLIMPCE-PCLSTART+2)
DATSUBFO DC    AL2(SUBFPCES-PCLSTART-2)
@CC00202 DC    C'* '
@DATD    DSECT
IKJEFA24 CSECT
         EXTRN ACCTEXTR                 ADDR OF PARSE VALIDCK EXIT
         EXTRN IKJEFA55                 ADDR OF PARSE VALIDCK EXIT
         EXTRN PASSEXTR                 ADDR OF PARSE VALIDCK EXIT
         EXTRN PERFEXIT                 ADDR OF PARSE VALIDCK EXIT
         EXTRN PROCEXTR                 ADDR OF PARSE VALIDCK EXIT
         EXTRN SIZEEXIT                 ADDR OF PARSE VALIDCK EXIT
         EXTRN USDAEXIT                 ADDR OF PARSE VALIDCK EXIT
         EXTRN USIDEXTR                 ADDR OF PARSE VALIDCK EXIT
PCLMODEL CSECT
PCLSTART EQU   *
PCLMODEL IKJPARM  DSECT=CHNGPDLD
NODEPDE  IKJPOSIT PSTRING,PROMPT='(NODELIST)',VALIDCK=IKJEFA55,        *
               HELP=('NODELIST - FORMAT IS (USERID / PASSWORD / ACCOUNT*
                NUMBER / PROCEDURE NAME)')
OPERPDE  IKJKEYWD
         IKJNAME  'OPER'
         IKJNAME  'NOOPER'
ACCTPDE  IKJKEYWD
         IKJNAME  'ACCT'
         IKJNAME  'NOACCT'
JCLPDE   IKJKEYWD
         IKJNAME  'JCL'
         IKJNAME  'NOJCL'
MONTPDE  IKJKEYWD
         IKJNAME  'MOUNT'
         IKJNAME  'NOMOUNT'
USERPDE  IKJKEYWD
         IKJNAME  'USERDATA',SUBFLD=USDASUB
DESTPDE  IKJKEYWD
         IKJNAME  'DESTINATION',SUBFLD=DESTSUB
         IKJNAME  'NODEST'
PERFPDE  IKJKEYWD
         IKJNAME  'PERFORM',SUBFLD=PERFSUB
         IKJNAME  'NOPERFORM'
MAXSZPDE IKJKEYWD
         IKJNAME  'MAXSIZE',SUBFLD=MAXSUB
NOLIMPCE EQU      *             THIS STATEMENT MUST IMMEDIATELY PRECEDE*
                                THE NOLIM GROUP SINCE THE PCE LENGTH OF*
                                THE 'NOLIM' PCE MAY BE MODIFIED TO
*                               OVERLAP 'SIZEPDE', 'UNITPDE' AND       *
                                POSSIBLY 'DATAPDE' - SEE IKJEFA25
         IKJNAME  'NOLIM'
SIZEPDE  IKJKEYWD
         IKJNAME  'SIZE',SUBFLD=SIZESUB
UNITPDE  IKJKEYWD
         IKJNAME  'UNIT',SUBFLD=UNITSUB
DATAPCE  EQU      *
DATAPDE  IKJKEYWD DEFAULT='DATA'
         IKJNAME  'DATA',SUBFLD=PROCSUB
SUBFPCES EQU      *
USDASUB  IKJSUBF
USERDAT  IKJIDENT 'INSTALLATION DATA',MAXLNTH=4,FIRST=ALPHANUM,        *
               OTHER=ALPHANUM,VALIDCK=USDAEXIT,                        *
               HELP=('FOUR EBCDIC CHARACTERS REPRESENTING HEX DIGITS'),*
               PROMPT='INSTALLATION DATA'
DESTSUB  IKJSUBF
DESTNAM  IKJIDENT 'DESTINATION',MAXLNTH=7,FIRST=ALPHA,                 *
               OTHER=ALPHANUM,PROMPT='DESTINATION NAME',               *
               HELP=('A SEVEN CHARACTER USERID DESTINATION')
PERFSUB  IKJSUBF
PERFNAM  IKJIDENT 'PERFORMANCE GROUP',LIST,MAXLNTH=3,FIRST=NUMERIC,    *
               OTHER=NUMERIC,VALIDCK=PERFEXIT,                         *
               PROMPT='PERFORMANCE GROUP(S)',                          *
               HELP=('A LIST OF NUMBERS BETWEEN 1 AND 255')
MAXSUB   IKJSUBF
MAXSZ    IKJIDENT 'MAXSIZE VALUE',MAXLNTH=5,FIRST=NUMERIC,             *
               OTHER=NUMERIC,                                          *
               PROMPT='MAXIMUM REGION SIZE FOR THIS USERID',           *
               HELP=('A NUMBER LESS THAN 65535'),VALIDCK=SIZEEXIT
SIZESUB  IKJSUBF
SIZNO    IKJIDENT 'SIZE VALUE',MAXLNTH=5,FIRST=NUMERIC,OTHER=NUMERIC,  *
               PROMPT='REGION SIZE FOR PROCEDURE(S)',                  *
               HELP=('A NUMBER LESS THAN 65535'),VALIDCK=SIZEEXIT
UNITSUB  IKJSUBF
UNITNAME IKJIDENT 'UNIT NAME',MAXLNTH=8,FIRST=ALPHANUM,                *
               HELP=('AN EIGHT CHARACTER DEVICE GROUP GENERIC NAME'),  *
               OTHER=ALPHANUM,PROMPT='DEVICE GROUP GENERIC NAME'
PROCSUB  IKJSUBF
PROCD    IKJIDENT 'DATALIST-PROCEDURE NAME',MAXLNTH=8,FIRST=ANY,       *
               OTHER=ALPHANUM,VALIDCK=PROCEXTR,                        *
               PROMPT='NEW PROCEDURE NAME'
ACCTPCE  EQU      *
ACCTSUB  IKJSUBF
ACCTD    IKJIDENT 'DATALIST-ACCOUNT NUMBER',MAXLNTH=40,FIRST=ANY,      *
               OTHER=ANY,VALIDCK=ACCTEXTR,PROMPT='NEW ACCOUNT NUMBER'
PASSPCE  EQU      *
PASSSUB  IKJSUBF
PASSD    IKJIDENT 'DATALIST-PASSWORD',MAXLNTH=8,FIRST=ANY,             *
               OTHER=ALPHANUM,VALIDCK=PASSEXTR,PROMPT='NEW PASSWORD'
USERPCE  EQU      *
USERSUB  IKJSUBF
USERNAM  IKJIDENT 'DATALIST-USERID',MAXLNTH=7,FIRST=ANY,               *
               OTHER=ALPHANUM,VALIDCK=USIDEXTR,PROMPT='NEW USERID'
         IKJENDP
@DATD    DSECT
IKJEFA24 CSECT
INLINLFM DS    0F
         FREEMAIN V,SP=1,MF=L             LENGTH & ADD SET BY E
         GETMAIN  EC,SP=1,MF=L            LENGTH & ANS PTR SET BY E
INLINLNG DC    A(*-INLINLFM)              LENGTH OF L-FORM MACROS
@DATD    DSECT
DYNLFORM DS    0F
DYNFRLST FREEMAIN V,SP=1,MF=L             LENGTH & ADD SET BY E
DYNGTLST GETMAIN  EC,MF=L                 WILL BE INIT'D FROM INLINGTM
IKJEFA24 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFA24 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SUBFPTR  EQU   @03
DATAPTR  EQU   @04
PCEPTR   EQU   @02
SAVE13   EQU   @07
RETNCODE EQU   @04
CTABPTR  EQU   @06
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
R12      EQU   @12
PPL      EQU   0
PPLPCL   EQU   PPL+12
PPLANS   EQU   PPL+16
PPLCBUF  EQU   PPL+20
PPLUWA   EQU   PPL+24
ACCTPL   EQU   0
BUFPTR   EQU   ACCTPL+12
CTRLTAB  EQU   0
ACCTPLP  EQU   CTRLTAB
CHPDLPTR EQU   CTRLTAB+4
DATALPTR EQU   CTRLTAB+8
NODELPTR EQU   CTRLTAB+12
RETCODE  EQU   CTRLTAB+32
CHLEVL   EQU   CTRLTAB+36
MSGNMBR  EQU   CTRLTAB+38
SIZESW   EQU   CTRLTAB+39
UNITSW   EQU   CTRLTAB+39
PCLLNGTH EQU   0
PCELNG   EQU   0
DATAFLG  EQU   0
SUBFOF   EQU   0
@NM00010 EQU   0
OPERKEY  EQU   @NM00010+16
ACCTKEY  EQU   @NM00010+18
JCLKEY   EQU   @NM00010+20
MONTKEY  EQU   @NM00010+22
USDAKEY  EQU   @NM00010+24
DESTKEY  EQU   @NM00010+26
PERFKEY  EQU   @NM00010+28
MAXSKEY  EQU   @NM00010+30
SIZEKEY  EQU   @NM00010+32
UNITKEY  EQU   @NM00010+34
DATAKEY  EQU   @NM00010+36
SIZEHEX  EQU   @NM00010+82
UNITPTR  EQU   @NM00010+84
UNITLNG  EQU   @NM00010+88
DLPTR4   EQU   @NM00010+92
DATALNG4 EQU   @NM00010+96
DLFLG4   EQU   @NM00010+98
DLPTR3   EQU   @NM00010+100
DATALNG3 EQU   @NM00010+104
DLFLG3   EQU   @NM00010+106
DLPTR2   EQU   @NM00010+108
DATALNG2 EQU   @NM00010+112
DLFLG2   EQU   @NM00010+114
DLPTR1   EQU   @NM00010+116
DATALNG1 EQU   @NM00010+120
DLFLG1   EQU   @NM00010+122
DLUSID   EQU   0
DLPASS   EQU   0
DLACTNO  EQU   0
DLPROC   EQU   0
UNIT     EQU   0
NLSTTAB  EQU   0
USRID    EQU   NLSTTAB+1
PASSWD   EQU   NLSTTAB+9
ACTLEN   EQU   NLSTTAB+17
ACCTNO   EQU   NLSTTAB+18
PROCNM   EQU   NLSTTAB+58
DLSTTAB  EQU   0
DUSRLEN  EQU   DLSTTAB
DUSRID   EQU   DLSTTAB+1
DPASSWD  EQU   DLSTTAB+9
DACTLEN  EQU   DLSTTAB+17
DACCTNO  EQU   DLSTTAB+18
DPROCNM  EQU   DLSTTAB+58
SIZE     EQU   DLSTTAB+66
UNITNAM  EQU   DLSTTAB+68
PERFGRP  EQU   DLSTTAB+76
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00026 EQU   NLSTTAB
@NM00025 EQU   @NM00010+122
@NM00024 EQU   @NM00010+114
@NM00023 EQU   @NM00010+106
@NM00022 EQU   @NM00010+98
@NM00021 EQU   @NM00010+90
@NM00020 EQU   @NM00010+90
@NM00019 EQU   @NM00010+80
@NM00018 EQU   @NM00010+76
@NM00017 EQU   @NM00010+68
@NM00016 EQU   @NM00010+56
@NM00015 EQU   @NM00010+48
@NM00014 EQU   @NM00010+40
@NM00013 EQU   @NM00010+38
@NM00012 EQU   @NM00010+8
@NM00011 EQU   @NM00010
@NM00008 EQU   CTRLTAB+39
@NM00007 EQU   CTRLTAB+37
@NM00006 EQU   CTRLTAB+28
@NM00005 EQU   CTRLTAB+24
@NM00004 EQU   CTRLTAB+20
@NM00003 EQU   CTRLTAB+16
@NM00002 EQU   ACCTPL+16
@NM00001 EQU   ACCTPL
PPLECB   EQU   PPL+8
PPLECT   EQU   PPL+4
PPLUPT   EQU   PPL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00063 EQU   FREEPCL
@RF00085 EQU   PARSOK
@RF00100 EQU   PARSOK
@RF00121 EQU   PARSOK
@RF00148 EQU   @EL00001
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IKJEFA24
