         TITLE 'IKJEFF00 - FIB SVC 100 - IGC00100 (+0)                 *
                        '
IKJEFF00 CSECT ,                                                   0001
@MAINENT BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFF00  78.251'                                 0001
         DROP  @15
@PROLOG  ST    @01,24(,@13)                                        0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         L     @01,24(,@13)                                        0001
         LR    @13,@11                                             0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*   RTNADDR=R14;                    /* SAVE THE RETURN ADDRESS       */
         ST    R14,RTNADDR                                         0133
*   TCBPTR=R4;                      /* SAVE TCB ADDR         @ZA31978*/
         ST    R4,TCBPTR                                           0134
*   R14=R1;                         /* SAVE PARM REG         @ZA31978*/
         LR    R14,R1                                              0135
*   R0=ECBLGTH×SP1;                 /* GET ECB CORE          @ZA31978*/
         L     R0,ECBLGTH                                          0136
         O     R0,@CF00178                                         0136
*   GEN(GETMAIN R,LV=(0));          /* GO GETMAIN            @ZA31978*/
         GETMAIN R,LV=(0)
*   WAITPTR=R1;                     /* SAVE PTR TO ECB       @ZA31978*/
         ST    R1,WAITPTR                                          0138
*   DO;                             /*                       @ZA31978*/
*     R2=TCBPKF;                    /* GET USER KEY          @ZA31978*/
         L     @15,TCBPTR                                          0140
         SLR   R2,R2                                               0140
         IC    R2,TCBPKF(,@15)                                     0140
*     SPKA(R2);                     /* TO VALID PARMS        @ZA31978*/
         SPKA  0(R2)                                               0141
*   END;                                                           0142
*   RFY                                                            0143
*    (FIBPTR) RSTD;                 /* HOLD PARM LIST POINTER        */
*   FIBPTR=R14;                     /* SAVE THE POINTER TO THE     0144
*                                      PARAMETER LIST                */
         LR    FIBPTR,R14                                          0144
*   RESPECIFY                                                      0145
*    (R1) UNRESTRICTED;             /* RELEASE FOR THE COMPILER      */
*   RESPECIFY                                                      0146
*    (R14) UNRESTRICTED;            /* REL FOR COMPILER      @ZA31978*/
*   R0=FIBID;                       /* PICK UP THE CALLER ID         */
         L     @10,FIBMAINP(,FIBPTR)                               0147
         LH    R0,FIBID(,@10)                                      0147
*   GEN(MODESET EXTKEY=SUPR);       /* GET KEY ZERO          @ZA31978*/
         MODESET EXTKEY=SUPR
*   RESPECIFY                                                      0149
*    (R4) UNRESTRICTED;             /* RELEASE FOR THE COMPILER      */
*   IF JSCBPSCB=CPPLPSCB            /* VALIDITY CHECK THE PSCB       */
*       &JSCBPSCB^=0                /* POINTER PASSED TO SVC         */
*       &FIBHIGH='1'B               /* 100 AND THE LAST POINTER      */
*     THEN                          /* INDICATOR IN THE PARMLIST     */
         L     @10,TCBPTR                                          0150
         L     @01,TCBJSCB(,@10)                                   0150
         L     @10,JSCBPSCB(,@01)                                  0150
         L     @01,FIBMAINP(,FIBPTR)                               0150
         L     @01,FIBCPPL(,@01)                                   0150
         C     @10,CPPLPSCB(,@01)                                  0150
         BNE   @RF00150                                            0150
         LTR   @10,@10                                             0150
         BZ    @RF00150                                            0150
         TM    FIBHIGH(FIBPTR),B'10000000'                         0150
         BNO   @RF00150                                            0150
*     DO;                           /* IT IS VALID CONTINUE          */
*       IF R0=FIBCANCL              /* IS THE CALLER CANCEL CP?      */
*           ×R0=FIBOUTPT            /* OR OUTPUT CP?                 */
*           ×R0=FIBSUBMT            /* OR SUBMIT CP?                 */
*           ×R0=FIBST               /* OR STATUS CP?                 */
*         THEN                      /* THE CALLER IS SUBMIT,         */
         C     R0,@CF02123                                         0152
         BE    @RT00152                                            0152
         C     R0,@CF02125                                         0152
         BE    @RT00152                                            0152
         C     R0,@CF02121                                         0152
         BE    @RT00152                                            0152
         C     R0,@CF02129                                         0152
         BNE   @RF00152                                            0152
@RT00152 DS    0H                                                  0153
*         DO;                       /* CANCEL,STATUS,OR OUTPUT       */
*           IF PSCBJCL='0'B         /* DOES THE TERMINAL USER HAVE 0154
*                                      THE AUTHORITY TO ENTER A FIB
*                                      COMMAND?                      */
*             THEN                  /* THE USER HASN'T AUTHORITY     */
         L     @10,TCBPTR                                          0154
         L     @01,TCBJSCB(,@10)                                   0154
         L     @01,JSCBPSCB(,@01)                                  0154
         TM    PSCBJCL(@01),B'00100000'                            0154
         BNZ   @RF00154                                            0154
*             DO;                   /* SO DO THE FOLLOWING:          */
*               RFY                                                0156
*                (RTNCODE) RSTD;    /* RESTRICT COMPILER USAGE       */
*               RTNCODE=FIBNOFIB;   /* SET A FAILING RETURN CODE     */
         LA    RTNCODE,80                                          0157
*               GO TO FIN;          /* RETURN TO THE CALLER          */
         B     FIN                                                 0158
*               RFY                                                0159
*                (RTNCODE) UNRSTD;  /* RESTRICT COMPILER USAGE       */
*             END;                  /* THROUGH COMMON EXIT           */
*           IF R0=FIBSUBMT          /* IF THE CALLER IS SUBMIT       */
*             THEN                  /* THEN SET THE MODULE TO        */
@RF00154 C     R0,@CF02121                                         0161
         BNE   @RF00161                                            0161
*             ATTACHEE(1:8)=ATTCHSUB;/* BE ATTACHED ON THE ATTACH    */
         MVC   ATTACHEE(8),ATTCHSUB                                0162
*           ELSE                    /* CALLER IS NOT SUBMIT          */
*             IF R0=FIBST           /* IF THE CALLER IS STATUS       */
*               THEN                /* THEN SET THE MODULE TO BE     */
         B     @RC00161                                            0163
@RF00161 C     R0,@CF02129                                         0163
         BNE   @RF00163                                            0163
*               ATTACHEE(1:8)=ATTCHST;/* ATTACHED ON THE ATTACH      */
         MVC   ATTACHEE(8),ATTCHST                                 0164
*             ELSE                  /* CALLER IS NOT SUBMIT,ST       */
*               IF R0=FIBCANCL      /* IF THE CALLER IS CANCEL       */
*                 THEN              /* THEN SET THE MODULE TO BE     */
         B     @RC00163                                            0165
@RF00163 C     R0,@CF02123                                         0165
         BNE   @RF00165                                            0165
*                 ATTACHEE(1:8)=ATTCHC;/* ATTACHED ON THE ATTCH      */
         MVC   ATTACHEE(8),ATTCHC                                  0166
*               ELSE                /* MUST BE OUTPUT, SET NAME      */
*                 ATTACHEE(1:8)=ATTCHOUT;/* TO ATTCH ON THE ATTCH    */
         B     @RC00165                                            0167
@RF00165 MVC   ATTACHEE(8),ATTCHOUT                                0167
*           RFY                                                    0168
*            (RTNCODE) RSTD;        /* SAVE STAX RETURN CODE         */
@RC00165 DS    0H                                                  0168
@RC00163 DS    0H                                                  0168
@RC00161 DS    0H                                                  0169
*           GEN(STAX DEFER=NO);     /* ALLOW ATTENTION INTERRUPTS    */
         STAX DEFER=NO
*           R2=TCBPKF;              /* GET USER KEY          @ZA31978*/
         L     @14,TCBPTR                                          0170
         SLR   R2,R2                                               0170
         IC    R2,TCBPKF(,@14)                                     0170
*           SPKA(R2);               /*                       @ZA31978*/
         SPKA  0(R2)                                               0171
*           FIBCODE=RTNCODE;        /* SAVE STAX RETURN CODE         */
         L     @01,FIBMAINP(,FIBPTR)                               0172
         ST    RTNCODE,FIBCODE(,@01)                               0172
*           GEN(MODESET EXTKEY=SUPR);/* RETURN KEY ZERO      @ZA31978*/
         MODESET EXTKEY=SUPR
*           RFY                                                    0174
*            (RTNCODE) UNRSTD;      /* FREE REG FOR COMPILE USAGE    */
*           IF FIBCODE^=0           /* WAS STAX SUCCESSFUL?          */
*             THEN                  /* NO THE MACRO FAILED           */
         L     @10,FIBMAINP(,FIBPTR)                               0175
         L     @07,FIBCODE(,@10)                                   0175
         LTR   @07,@07                                             0175
         BZ    @RF00175                                            0175
*             DO;                   /* INFORM THE CALLER OF THIS     */
*               FIBMACRO=STAX;      /* PROVIDE THE MACRO NAME        */
         MVC   FIBMACRO(8,@10),STAX                                0177
*               RFY                                                0178
*                (RTNCODE) RSTD;    /* SAVE STAX RETURN CODE         */
*               RTNCODE=FIBBADMC;   /* PROVIDE THE FAILING MACRO   0179
*                                      RETURN CODE TO THE USER       */
         LA    RTNCODE,84                                          0179
*               GO TO FIN;          /* GO TO COMMON EXIT             */
         B     FIN                                                 0180
*               RFY                                                0181
*                (RTNCODE) UNRSTD;  /* FREE FOR COMPILE              */
*             END;                  /* END STAX ERROR PROCESSING     */
*           LNGTH=FIBLEN+LENGTH(FIBCPARM)/* COMMON AND               */
*               +LENGTH(FIBCMPTR)   /* USER AREA AND POINTER         */
*               +CMDLNGTH;          /* AND THE CMD BUFFER            */
@RF00175 L     @10,FIBMAINP(,FIBPTR)                               0183
         LA    LNGTH,56                                            0183
         AH    LNGTH,FIBLEN(,@10)                                  0183
         L     @01,FIBCPPL(,@10)                                   0183
         L     @01,CPPLCBUF(,@01)                                  0183
         AH    LNGTH,CMDLNGTH(,@01)                                0183
*           GETWORK=LNGTH;          /* LENGTH OF CORE TO GET         */
         STCM  LNGTH,15,GETWORK                                    0184
*           GETWORK(1)='E5'X;       /* SUBPOOL TO GET IT FROM        */
         MVI   GETWORK,X'E5'                                       0185
*           RESPECIFY                                              0186
*            (R5) RESTRICTED;       /* RESTRICT R5 FOR GETMAIN       */
*           R5=GETWORK;             /* PASSED ACROSS THE MODESET     */
         ICM   R5,15,GETWORK                                       0187
*SKEY1:                             /* CHANGE THE PSW PROTECTION KEY
*                                      TO SCHEDULER                  */
*           GEN(MODESET EXTKEY=SCHED,RELATED=(KEY1,IKJEFF00(SKEY0)));
SKEY1    MODESET EXTKEY=SCHED,RELATED=(KEY1,IKJEFF00(SKEY0))
*           RFY                                                    0189
*            (R1) RESTRICTED;       /* RESTRICT REG FOR GETMAIN      */
*           R0=R5;                  /* CORE AND SUBPOOL TO GET       */
         LR    R0,R5                                               0190
*           GEN(GETMAIN R,LV=(0));  /* GET THE CORE UNDER KEY 1      */
         GETMAIN R,LV=(0)
*           RESPECIFY                                              0192
*            (R7) RESTRICTED;       /* RESTRICT R7                   */
*           R7=R1;                  /* SAVE THE CORE ADDRESS         */
         LR    R7,R1                                               0193
*           RFY                                                    0194
*            (R1) UNRESTRICTED;     /* RELEASE REG FOR USAGE         */
*SKEY0:                             /* CHANGE THE PSW PROTECTION KEY
*                                      TO SUPERVISOR                 */
*           GEN(MODESET EXTKEY=SUPR,RELATED=(KEY0,IKJEFF00(SKEY1)));
SKEY0    MODESET EXTKEY=SUPR,RELATED=(KEY0,IKJEFF00(SKEY1))
*           RESPECIFY                                              0196
*            (R1) RESTRICTED;       /* RESTRICT R1 FOR PARMLIST      */
*           SAVECORE=R7;            /* RESTORE CORE ADDRESS          */
         LR    SAVECORE,R7                                         0197
*           RESPECIFY                                              0198
*            (R7) UNRESTRICTED;     /* RELEASE R7 FOR USAGE          */
*           FIBCMPTR=SAVECORE+LENGTH(FIBCMPTR);/* ADDRESS OF LIST    */
         LA    @10,4                                               0199
         ALR   @10,SAVECORE                                        0199
         ST    @10,FIBCMPTR(,SAVECORE)                             0199
*           FIBCPARM=FIBCPARM&&FIBCPARM;/* ZERO OUT PARM LIST        */
         XC    FIBCPARM(52,@10),FIBCPARM(@10)                      0200
*           FIBCID=FIBID;           /* CALLER ID FOR STAI RTN        */
         L     @09,FIBMAINP(,FIBPTR)                               0201
         LH    @07,FIBID(,@09)                                     0201
         STH   @07,FIBCID(,@10)                                    0201
*           FIBPSCBU(1:7)=PSCBUSER; /* COPY THE USERID OVER          */
         L     @07,TCBPTR                                          0202
         L     @07,TCBJSCB(,@07)                                   0202
         L     @07,JSCBPSCB(,@07)                                  0202
         MVC   FIBPSCBU(7,@10),PSCBUSER(@07)                       0202
*           FIBPSCBL=PSCBUSRL;      /* COPY THE USERID LENGTH        */
         IC    @04,PSCBUSRL(,@07)                                  0203
         STC   @04,FIBPSCBL(,@10)                                  0203
*           FIBCPPLC=ADDR(FIBCMDBF);/* ADDRESS OF COMMAND BUFFER     */
         LA    @07,FIBCMDBF(,@10)                                  0204
         ST    @07,FIBCPPLC(,@10)                                  0204
*           FIBCPPLU=CPPLUPT;       /* ADDRESS OF THE UPT            */
         L     @09,FIBCPPL(,@09)                                   0205
         L     @07,CPPLUPT(,@09)                                   0205
         ST    @07,FIBCPPLU(,@10)                                  0205
*           FIBCPPLP=CPPLPSCB;      /* ADDRESS OF THE PSCB           */
         L     @07,CPPLPSCB(,@09)                                  0206
         ST    @07,FIBCPPLP(,@10)                                  0206
*           FIBCPPLE=CPPLECT;       /* ADDRESS OF THE ECT            */
         L     @09,CPPLECT(,@09)                                   0207
         ST    @09,FIBCPPLE(,@10)                                  0207
*           FIBECTCN(1:8)=ECTPCMD;  /* PRIMARY COMMAND NAME (ECT)    */
         MVC   FIBECTCN(8,@10),ECTPCMD(@09)                        0208
*           IF ECTNOPD='1'B         /* IS THE BIT SET TO ONE?        */
*             THEN                  /* YES,                          */
         TM    ECTNOPD(@09),B'10000000'                            0209
         BNO   @RF00209                                            0209
*             FIBECTNO='1'B;        /* SET FIB BIT TO 1              */
         OI    FIBECTNO(@10),B'10000000'                           0210
*           FIBCLEN=LENGTH(FIBCPARM)/* LENGTH OF COMMON LIST         */
*               +CMDLNGTH;          /* AND THE CMD BUFFER            */
@RF00209 L     @10,FIBCMPTR(,SAVECORE)                             0211
         L     @07,FIBMAINP(,FIBPTR)                               0211
         L     @07,FIBCPPL(,@07)                                   0211
         L     @07,CPPLCBUF(,@07)                                  0211
         LH    @04,CMDLNGTH(,@07)                                  0211
         LA    @15,52                                              0211
         ALR   @15,@04                                             0211
         STH   @15,FIBCLEN(,@10)                                   0211
*           INPUTPTR=FIBPTR;        /* SAVE INPUT PARM PTR           */
         LR    INPUTPTR,FIBPTR                                     0212
*           RESPECIFY               /* RESTRICT REGS FOR MOVE        */
*            (R4,                   /* RESTRICT REGISTER FOUR        */
*             R7) RESTRICTED;       /* RESTRICT REGISTER SEVEN       */
*           R4=FIBCPPLC;            /* ADDRESS MOVING TO             */
         ST    @04,@TF00001                                        0214
         ST    @07,@TF00002                                        0214
         L     R4,FIBCPPLC(,@10)                                   0214
*           R5=CMDLNGTH;            /* LENGTH OF MOVE                */
         L     R5,@TF00001                                         0215
*           R6=CPPLCBUF;            /* ADDRESS MOVING FROM           */
         L     @10,@TF00002                                        0216
         LR    R6,@10                                              0216
*           R7=R5;                  /* LENGTH OF MOVE                */
         LR    R7,R5                                               0217
*           MVCL(R4,R6);            /* MOVE THE CMD BUFFER           */
         MVCL  R4,R6                                               0218
*           RESPECIFY               /* RELEASE REGS AFTER MOVE       */
*            (R4,                   /* RELEASE REGISTER FOUR         */
*             R7) UNRESTRICTED;     /* RELEASE REGISTER SEVEN        */
*           FIBPTR=INPUTPTR;        /* RESTORE INPUT PARM PTR        */
         LR    FIBPTR,INPUTPTR                                     0220
*           IF FIBLEN^=0            /* IS THERE AN USER AREA TO      */
*             THEN                  /* ATTACH TO END OF THE LIST     */
         L     @10,FIBMAINP(,FIBPTR)                               0221
         LH    @09,FIBLEN(,@10)                                    0221
         LTR   @09,@09                                             0221
         BZ    @RF00221                                            0221
*             DO;                   /* YES, ATTACH IT & SET PTR      */
*               LNGTH=LNGTH-LENGTH(FIBCMPTR);/* LENGTH OF PARM LISTS */
         SL    LNGTH,@CF00115                                      0223
*               FIBCPARM(FIBCLEN+1:LNGTH)=FIBUAREA(1:FIBLEN);      0224
         L     @09,FIBCMPTR(,SAVECORE)                             0224
         LH    @07,FIBCLEN(,@09)                                   0224
         ST    @07,@TF00001                                        0224
         ALR   @07,@09                                             0224
         LR    @04,LNGTH                                           0224
         SL    @04,@TF00001                                        0224
         BCTR  @04,0                                               0224
         L     @10,FIBUSER(,@10)                                   0224
         EX    @04,@SM02998                                        0224
*               FIBCUSER=ADDR(FIBCPARM)+FIBCLEN;                   0225
         LH    @10,FIBCLEN(,@09)                                   0225
         ALR   @10,@09                                             0225
         ST    @10,FIBCUSER(,@09)                                  0225
*             END;                  /* END OF ATTACHING USER LIST    */
*           ATTCHPRM=ATTCHPRM&&ATTCHPRM;/* CLEAR LIST                */
@RF00221 XC    ATTCHPRM(60),ATTCHPRM                               0227
*           STAILPTR=FIBCMPTR;      /* PUT POINTER TO FIBCPARM FOR 0228
*                                      STAI PARAMETER LIST           */
         L     @10,FIBCMPTR(,SAVECORE)                             0228
         ST    @10,STAILPTR                                        0228
*           WAITECB=0;              /* ZERO THE WAIT ECB             */
         L     @10,WAITPTR                                         0229
         SLR   @07,@07                                             0229
         ST    @07,WAITECB(,@10)                                   0229
*           RFY                                                    0230
*            (R1,                                                  0230
*             R4,                                                  0230
*             R5,                                                  0230
*             R7,                                                  0230
*             RTNCODE) RSTD;        /* RESTRICT FOR ATTACH           */
*           R7=ADDR(WAITECB);       /* PICK UP WAIT ECB ADDRESS      */
         LR    R7,@10                                              0231
*           R4=ADDR(IKJEFF20);      /* PICK UP STAI EXIT ADDR        */
         L     R4,@CV00123                                         0232
*           R1=SAVECORE;            /* ADDRESS OF PARM LIST          */
         LR    R1,SAVECORE                                         0233
*           R5=CVTLINK;             /* ATTACHED MODULES ARE TO RESIDE
*                                      IN LINKLIB                    */
         L     R5,CVTLINK(,CVTPTR)                                 0234
*           R3=ADDR(ATTACHEE);      /* 1ST SUBTASK'S MODULE ADDR     */
         LA    R3,ATTACHEE                                         0235
*           RTNCODE=ADDR(ATTCHPRM); /* LIST FORM FOR ATTACH          */
*                                                                  0236
         LA    RTNCODE,ATTCHPRM                                    0236
*           /*********************************************************/
*           /*                                                       */
*           /* THE ATTACH FOR IKJEFF20 HAS BEEN CHANGED FROM A STAI  */
*           /* TO A ESTAI WITH TERM = YES TO ALLOW THE INTERNAL RDR  */
*           /* TO BE CLOSED ON ATTENTION OUT OF SUBMIT       @ZA20346*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0237
*           GENERATE REFS(R5,R3,R7,R4,RTNCODE,STAILPTR);           0237
              ATTACH EPLOC=(R3),DCB=(R5),DISP=NO,SHSPV=78,SZERO=NO,    *
               ECB=(R7),ESTAI=((R4),STAILPTR),MF=(E,(1)),SF=(E,(15)),  *
               SM=SUPV,TERM=YES                           /* @ZA20346*/
*           TCBPTR=R1;              /* SUBTASK'S TCB ADDRESS         */
         ST    R1,TCBPTR                                           0238
*           RFY                                                    0239
*            (R1,                                                  0239
*             R4,                                                  0239
*             R5,                                                  0239
*             R7) UNRSTD;           /* RELEASE FOR THE COMPILER      */
*           FIBCODE=RTNCODE;        /* SAVE ATTACH RETURN CODE       */
         L     @14,FIBMAINP(,FIBPTR)                               0240
         ST    RTNCODE,FIBCODE(,@14)                               0240
*           RFY                                                    0241
*            (RTNCODE) UNRSTD;      /* RELEASE FOR THE COMPILER      */
*           IF FIBCODE^=0           /* WAS ATTACH SUCCESSFUL?        */
*             THEN                  /* THE ATTACH MACRO FAILED       */
         L     @01,FIBMAINP(,FIBPTR)                               0242
         L     @10,FIBCODE(,@01)                                   0242
         LTR   @10,@10                                             0242
         BZ    @RF00242                                            0242
*             DO;                   /* PROVIDE CALLER FAILURE INFO   */
*               FIBMACRO=ATTACH;    /* THE FAILING MACRO NAME        */
         MVC   FIBMACRO(8,@14),ATTACH                              0244
*               CALL FREEKEY1;      /* FREE KEY 1 CORE               */
         BAL   @14,FREEKEY1                                        0245
*               RFY                                                0246
*                (RTNCODE) RSTD;    /* SETTING RETURN CODE           */
*               RTNCODE=FIBBADMC;   /* FAILING MACRO RETURN CODE     */
         LA    RTNCODE,84                                          0247
*               GO TO FIN;          /* GO TO COMMON EXIT             */
         B     FIN                                                 0248
*               RFY                                                0249
*                (RTNCODE) UNRSTD;  /* RELEASE FOR COMPILER          */
*             END;                  /* END ATTACH ERROR PROCESSING   */
*           TCBFLAG='0001'B;        /* CHANGE THE PROTECT KEY IN THE
*                                      SUBTASK                       */
@RF00242 L     @10,TCBPTR                                          0251
         NI    TCBFLAG(@10),B'00011111'                            0251
         OI    TCBFLAG(@10),B'00010000'                            0251
*           RFY                                                    0252
*            (R1,                                                  0252
*             RTNCODE) RSTD;        /* RESTRICT REG ACROSS MACRO     */
*           R1=TCBPTR;              /* SET UP FOR STATUS MACRO       */
         LR    R1,@10                                              0253
*           GEN(STATUS RESET,ND,(1),(12),E)                        0254
*           REFS(R1);               /* START SUBTASK                 */
         STATUS RESET,ND,(1),(12),E
*           FIBCODE=RTNCODE;        /* SAVE THE MACRO RETURN CODE    */
         L     @14,FIBMAINP(,FIBPTR)                               0255
         ST    RTNCODE,FIBCODE(,@14)                               0255
*           RFY                                                    0256
*            (R1,                                                  0256
*             RTNCODE) UNRSTD;      /* FREE REGS FOR COMPILER        */
*           IF FIBCODE^=0           /* WAS STATUS SUCCESSFUL?        */
*             THEN                  /* THE STATUS MACRO FAILED       */
         L     @01,FIBMAINP(,FIBPTR)                               0257
         L     @10,FIBCODE(,@01)                                   0257
         LTR   @10,@10                                             0257
         BZ    @RF00257                                            0257
*             DO;                   /* PROVIDE CALLER FAILURE INFO   */
*               FIBMACRO=STATUS;    /* THE FAILING MACRO NAME        */
         MVC   FIBMACRO(8,@14),STATUS                              0259
*               RFY                                                0260
*                (R1) RSTD;         /* RESTRICT USAGE ACROSS MACRO   */
*               R1=ADDR(TCBPTR);    /* LOAD SUBTASK TCB ADDRESS      */
         LA    R1,TCBPTR                                           0261
*               GEN(DETACH (R1))                                   0262
*               REFS(R1);           /* DETACH THE SUBTASK            */
         DETACH (R1)
*               RFY                                                0263
*                (R1) UNRSTD;       /* FREE REGISTER FOR COMPILER    */
*               CALL FREEKEY1;      /* FREE KEY 1 CORE               */
         BAL   @14,FREEKEY1                                        0264
*               RFY                                                0265
*                (RTNCODE) RSTD;    /* RESTRICT RTNCODE USAGE        */
*               RTNCODE=FIBBADMC;   /* FAILING MACRO RETURN CODE     */
         LA    RTNCODE,84                                          0266
*               GO TO FIN;          /* GO TO COMMON EXIT             */
         B     FIN                                                 0267
*               RFY                                                0268
*                (RTNCODE) UNRSTD;  /* FREE FOR THE COMPILER         */
*             END;                  /* END STATUS ERROR PROCESSING   */
*           RESPECIFY                                              0270
*            (R1) RSTD;             /* RESTRICT USAGE ACROSS MACRO   */
@RF00257 DS    0H                                                  0271
*           R1=ADDR(WAITECB);       /* OBTAIN WAIT ECB ADDRESS       */
         L     R1,WAITPTR                                          0271
*           GEN(WAIT ECB=(1));      /* WAIT ON SUBTASK COMPLETION    */
         WAIT ECB=(1)
*           R1=ADDR(TCBPTR);        /* LOAD SUBTASK TCB ADDRESS      */
         LA    R1,TCBPTR                                           0273
*           GEN(DETACH (R1))                                       0274
*           REFS(R1);               /* DETACH THE SUBTASK            */
         DETACH (R1)
*           RESPECIFY                                              0275
*            (R1) UNRSTD;           /* FREE REGISTER FOR COMPILER    */
*           CALL FREEKEY1;          /* FREE KEY 1 CORE               */
         BAL   @14,FREEKEY1                                        0276
*           RESPECIFY                                              0277
*            (RTNCODE) RSTD;        /* RESTRICT RTNCODE USAGE        */
*           RTNCODE=ECBCODE;        /* PLACE SUBTASK RETURN CODE     */
         L     @10,WAITPTR                                         0278
         L     RTNCODE,ECBCODE-1(,@10)                             0278
         LA    RTNCODE,0(,RTNCODE)                                 0278
*           GO TO FIN;              /* REG 15 AND GO TO EXIT         */
         B     FIN                                                 0279
*           RESPECIFY                                              0280
*            (RTNCODE) UNRSTD;      /* FREE FOR THE COMPILER         */
*         END;                      /* END FIB CMDS PROCESSING       */
*                                                                  0282
*       /*************************************************************/
*       /*                                                           */
*       /* THE FOLLOWING IS ENTERED WHEN THE CALLER IS OPERATOR . ON */
*       /* EACH CALL OF THE SVC, THE CALLER'S OPERATOR ABILITY IS    */
*       /* CHECKED . IF THE REASON FOR ENTRY WAS TO CHECK THE        */
*       /* AUTHORITY, THEN SVC RETURNS TO THE CALLER . IF THE ENTRY  */
*       /* WAS TO DO "END PROCESSING", SVC TURNS OFF THE EXTRA BUFFER*/
*       /* BIT IN THE TSB, STOPS ALL MONITORS IF A LEGITIMATE COMMAND*/
*       /* HAD BEEN ENTERED AND THEN RETURNS TO THE CALLER . IF THE  */
*       /* ENTRY WAS TO CHECK A SUBCOMMAND, SVC CHECKS THE SUBCOMMAND*/
*       /* AGAINST A TABLE OF VALID SUBCOMMANDS, . IF VALID AND IT IS*/
*       /* THE FIRST TIME WITH A VALID CMD, EXTRA BUFFERS ARE        */
*       /* OBTAINED, THE OPERANDS ARE CHECKED ON ALL SUBCOMMANDS     */
*       /* EXCEPT SEND AND SLIP.                             @ZA34430*/
*       /* . IF THE OPERANDS ARE INVALID A RETURN CODE IS SET AND SVC*/
*       /* RETURN TO THE CALLER . IF THE OPERANDS ARE VALID THEN SVC */
*       /* 34 IS CALLED TO EXECUTE THE COMMAND BEFORE RETURNING TO   */
*       /* THE CALLER WITH A SUCCESSFUL RETURN CODE . IF VALID AND IT*/
*       /* IS NOT THE FIRST TIME WITH A VALID SUBCOMMAND THEN THE    */
*       /* OPERANDS ARE CHECKED AS ABOVE AND SVC 34 IS ISSUED . IF   */
*       /* INVALID THEN A RETURN CODE IS SET BEFORE RETURNING TO THE */
*       /* CALLER . IF THE OPERAND IS SLIP, STORAGE IS       @ZA34430*/
*       /* OBTAINED FOR AN STE. THE STE IS INITIALIZED       @ZA34430*/
*       /* AND ADDED ONTO THE RTCTSTE CHAIN PRIOR TO         @ZA34430*/
*       /* THE SVC 34. AFTER THE SVC 34, IEECB914 IS         @ZA34430*/
*       /* ATTACHED AND A WAIT IS ISSUED ON THE ATTACH       @ZA34430*/
*       /* ECB. WHEN POSTED, THE STE IS REMOVED FROM         @ZA34430*/
*       /* THE RTCTSTE CHAIN AND THE STORAGE IS FREED.       @ZA34430*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0282
*       ELSE                        /* THE CALLER WASN'T A FIB       */
*         IF R0=FIBOPER             /* COMMAND, WAS IT OPERATOR      */
*           THEN                    /* THE CALLER WAS OPERATOR       */
@RF00152 C     R0,@CF02127                                         0282
         BNE   @RF00282                                            0282
*           DO;                     /* SO DO THE FOLLOWING:          */
*             IF PSCBCTRL='0'B      /* USER HAVE OPER AUTHORITY?     */
*               THEN                /* THE TERMINAL USER DOES NOT    */
         L     @10,TCBPTR                                          0284
         L     @01,TCBJSCB(,@10)                                   0284
         L     @01,JSCBPSCB(,@01)                                  0284
         TM    PSCBCTRL(@01),B'10000000'                           0284
         BNZ   @RF00284                                            0284
*               DO;                 /* THE AUTHORITY TO ENTER      0285
*                                      OPERATOR COMMANDS             */
*                 RFY                                              0286
*                  (RTNCODE) RSTD;  /* RESTRICT USAGE                */
*                 RTNCODE=FIBNOFIB; /* SET FAILING RETURN CODE       */
         LA    RTNCODE,80                                          0287
*                 GO TO FIN;        /* GO TO COMMON EXIT             */
         B     FIN                                                 0288
*                 RFY                                              0289
*                  (RTNCODE) UNRSTD;/* FREE FOR COMPILER             */
*               END;                /* END NO AUTHORITY PROCESS      */
*             TERMID=ASCBASID;      /* PUT TERMINAL ID IN CALLER'S 0291
*                                      PARAMETER LIST                */
@RF00284 L     @01,FIBMAINP(,FIBPTR)                               0291
         L     @10,FIBUSER(,@01)                                   0291
         L     @07,PSAAOLD                                         0291
         LH    @07,ASCBASID(,@07)                                  0291
         N     @07,@CF03002                                        0291
         STH   @07,TERMID(,@10)                                    0291
*             IF AUTHCHK='1'B       /* WAS THE REASON FOR ENTRY TO 0292
*                                      CHECK USER AUTHORITY?         */
*               THEN                /* THE ENTRY WAS FOR THAT        */
         TM    AUTHCHK(@10),B'10000000'                            0292
         BNO   @RF00292                                            0292
*               DO;                 /* DO THE FOLLOWING:             */
*                 RFY                                              0294
*                  (RTNCODE) RSTD;  /* RESTRICT USAGE                */
*                 RTNCODE=FIBOKRC;  /* INDICATE SUCCESSFUL           */
         SLR   RTNCODE,RTNCODE                                     0295
*                 GO TO FIN;        /* GO TO COMMON EXIT             */
         B     FIN                                                 0296
*                 RFY                                              0297
*                  (RTNCODE) UNRSTD;/* FREE FOR COMPILER             */
*               END;                /* END OF ENTRY FOR AUTHORITY  0298
*                                      PROCESSING                    */
*             IF OFFGETBF='1'B      /* WAS THE ENTRY TO TURN OFF THE
*                                      EXTRA BUFFER BIT              */
*               THEN                /* YES, ENTRY TO TURN BIT OFF    */
@RF00292 L     @01,FIBMAINP(,FIBPTR)                               0299
         L     @01,FIBUSER(,@01)                                   0299
         TM    OFFGETBF(@01),B'00010000'                           0299
         BNO   @RF00299                                            0299
*               DO;                 /* DO THE FOLLOWING:             */
*                 CALL BITONOFF;    /* GO TO BITONFF SUBROUTINE      */
         BAL   @14,BITONOFF                                        0301
*                 RFY                                              0302
*                  (RTNCODE) RSTD;  /* RESTRICT USAGE                */
*                 RTNCODE=FIBOKRC;  /* INDICATE SUCCESSFUL RC        */
         SLR   RTNCODE,RTNCODE                                     0303
*                 GO TO FIN;        /* GO TO COMMON EXIT             */
         B     FIN                                                 0304
*                 RFY                                              0305
*                  (RTNCODE) UNRSTD;/* FREE FOR COMPILER             */
*               END;                /* END OF PROCESSING TO TURN THE
*                                      EXTRA BUFFER BIT OFF          */
*             STEPTR=0;             /* INIT FOR SLIP         @ZA34430*/
@RF00299 SLR   @10,@10                                             0307
         ST    @10,STEPTR                                          0307
*             CMDPTR=ACMDNAME;      /* OBTAIN POINTER TO CMD NAME    */
         L     @01,FIBMAINP(,FIBPTR)                               0308
         L     @01,FIBUSER(,@01)                                   0308
         L     @10,ACMDNAME(,@01)                                  0308
         ST    @10,CMDPTR                                          0308
*             OFFSET=1;             /* INITIALIZE 'OFFSET'--USED AS
*                                      THE OFFSET INTO THE COMMAND 0309
*                                      TABLE                         */
         LA    @10,1                                               0309
         LR    OFFSET,@10                                          0309
*             DO SUBSCRPT=1 TO 10;  /* INDEX THROUGH LENGTH ARRAY    */
         LR    SUBSCRPT,@10                                        0310
@DL00310 DS    0H                                                  0311
*               LENGTHH=CMDLNG(SUBSCRPT);/* PICK UP LENGTH           */
         LR    @10,SUBSCRPT                                        0311
         ALR   @10,@10                                             0311
         LH    LENGTHH,CMDLNG-2(@10)                               0311
*               IF CMDNAME(1:LENGTHH)=CMDTABLE(OFFSET:OFFSET+LENGTHH-1)
*                 THEN              /* CMD VALID--YES                */
         LR    @10,LENGTHH                                         0312
         BCTR  @10,0                                               0312
         L     @07,CMDPTR                                          0312
         LA    @01,CMDTABLE-1(OFFSET)                              0312
         EX    @10,@SC03003                                        0312
         BE    @RT00312                                            0312
*                 GO TO CMDVALID;   /* VALID COMMAND IS FOUND        */
*               OFFSET=OFFSET+LENGTHH;/* BUMP OFFSET TO NEXT         */
         ALR   OFFSET,LENGTHH                                      0314
*             END;                  /* END VALID CMD CHECK           */
         AL    SUBSCRPT,@CF00032                                   0315
         C     SUBSCRPT,@CF00134                                   0315
         BNH   @DL00310                                            0315
*             RESPECIFY                                            0316
*              (RTNCODE) RSTD;      /* RESTRICT USAGE                */
*             RTNCODE=FIBOPCMD;     /* INVALID OPER COMMAND RC       */
         LA    RTNCODE,4                                           0317
*             GO TO FIN;            /* GO TO COMMON EXIT             */
         B     FIN                                                 0318
*             RESPECIFY                                            0319
*              (RTNCODE) UNRSTD;    /* FREE FOR COMPILER             */
*CMDVALID:                          /* VALID COMMAND WAS FOUND IN THE
*                                      ABOVE DO LOOP                 */
*             IF FSTFLG='0'B        /* FIRST TIME WITH GOOD CMD?     */
*               THEN                /* YES, IT IS THE FIRST TIME     */
CMDVALID L     @01,FIBMAINP(,FIBPTR)                               0320
         L     @01,FIBUSER(,@01)                                   0320
         TM    FSTFLG(@01),B'00001000'                             0320
         BNZ   @RF00320                                            0320
*               DO;                 /* DO THE FOLLOWING:             */
*                 CALL BITONOFF;    /* TURN ON EXTRA BUFFER BIT      */
         BAL   @14,BITONOFF                                        0322
*                 FSTFLG='1'B;      /* FIRST TIME WITH LEGAL CMD     */
         L     @01,FIBMAINP(,FIBPTR)                               0323
         L     @01,FIBUSER(,@01)                                   0323
         OI    FSTFLG(@01),B'00001000'                             0323
*               END;                /* END FIRST TIME PROCESSING     */
*             IF CMDNAME(1:7)=STOPMN/* WAS THE COMMAND STOP          */
*                 ×CMDNAME(1:3)=PM  /* MONITOR (OR ABBREV)?          */
*               THEN                /* COMMAND WAS STOPMN            */
@RF00320 L     @10,CMDPTR                                          0325
         CLC   CMDNAME(7,@10),STOPMN                               0325
         BE    @RT00325                                            0325
         CLC   CMDNAME(3,@10),PM                                   0325
         BNE   @RF00325                                            0325
@RT00325 DS    0H                                                  0326
*               DO;                 /* CHECK THE OPERAND ON CMD      */
*                 OFFSET=1;         /* INITIALIZE 'OFFSET'           */
         LA    @10,1                                               0327
         LR    OFFSET,@10                                          0327
*                 DO SUBSCRPT=1 TO 3;/* INDEX THROUGH THE LENGTH   0328
*                                      ARRAY                         */
         LR    SUBSCRPT,@10                                        0328
@DL00328 DS    0H                                                  0329
*                   LENGTHH=MNLNG(SUBSCRPT);/* OBTAIN LENGTH         */
         LR    @10,SUBSCRPT                                        0329
         ALR   @10,@10                                             0329
         LH    LENGTHH,MNLNG-2(@10)                                0329
*                   IF STOPERND(1:LENGTHH)=MNTBL(OFFSET:OFFSET+LENGTHH-
*                       1) THEN     /* OPERAND VALID--YES            */
         L     @01,FIBMAINP(,FIBPTR)                               0330
         L     @01,FIBUSER(,@01)                                   0330
         L     @01,AOPRND(,@01)                                    0330
         LR    @10,LENGTHH                                         0330
         BCTR  @10,0                                               0330
         LA    @07,MNTBL-1(OFFSET)                                 0330
         EX    @10,@SC03006                                        0330
         BE    @RT00330                                            0330
*                     GO TO SVC34;  /* MATCH--VALID OPERAND FOUND    */
*                   OFFSET=OFFSET+LENGTHH;/* BUMP OFFSET             */
         ALR   OFFSET,LENGTHH                                      0332
*                 END;              /* END STOPMN OPERAND CHECK      */
         AL    SUBSCRPT,@CF00032                                   0333
         C     SUBSCRPT,@CF00088                                   0333
         BNH   @DL00328                                            0333
*                 RFY                                              0334
*                  (RTNCODE) RSTD;  /* RESTRICT USAGE                */
*                 RTNCODE=FIBOPOPD; /* INVALID OPERAND RTRN C        */
         LA    RTNCODE,8                                           0335
*                 GO TO FIN;        /* GO TO COMMON EXIT             */
         B     FIN                                                 0336
*                 RFY                                              0337
*                  (RTNCODE) UNRSTD;/* FREE FOR COMPILER             */
*               END;                /* END END STOPMN PROCESSING     */
*             IF CMDNAME(1:8)=DISPLAY/* WAS THE OPERATOR CMD         */
*                 ×CMDNAME(1:2)=D   /* DISPLAY (OR ABBREV)?          */
*               THEN                /* COMMAND WAS DISPLAY           */
@RF00325 L     @10,CMDPTR                                          0339
         CLC   CMDNAME(8,@10),DISPLAY                              0339
         BE    @RT00339                                            0339
         CLC   CMDNAME(2,@10),D                                    0339
         BNE   @RF00339                                            0339
@RT00339 DS    0H                                                  0340
*               DO;                 /* CHECK THE OPERAND ON CMD      */
*                 OFFSET=1;         /* INITIALIZE 'OFFSET'           */
         LA    @10,1                                               0341
         LR    OFFSET,@10                                          0341
*                 DO SUBSCRPT=1 TO 15;/* INDEX THROUGH THE LENGTH  0342
*                                      ARRAY                         */
         LR    SUBSCRPT,@10                                        0342
@DL00342 DS    0H                                                  0343
*                   LENGTHH=DSPLYLNG(SUBSCRPT);/* OBTAIN LENGTH OF 0343
*                                      PRESENT OPERAND               */
         LR    @10,SUBSCRPT                                        0343
         ALR   @10,@10                                             0343
         LH    LENGTHH,DSPLYLNG-2(@10)                             0343
*                   IF OPERAND(1:LENGTHH)=DSPLYTBL(OFFSET:OFFSET+  0344
*                       LENGTHH-1) THEN/* OPERAND VALID?--YES        */
         L     @01,FIBMAINP(,FIBPTR)                               0344
         L     @01,FIBUSER(,@01)                                   0344
         L     @01,AOPRND(,@01)                                    0344
         LR    @10,LENGTHH                                         0344
         BCTR  @10,0                                               0344
         LA    @07,DSPLYTBL-1(OFFSET)                              0344
         EX    @10,@SC03008                                        0344
         BE    @RT00344                                            0344
*                     GO TO SVC34;  /* MATCH-VALID OPERAND FOUND     */
*                   OFFSET=OFFSET+LENGTHH;/* BUMP OFFSET             */
         ALR   OFFSET,LENGTHH                                      0346
*                 END;              /* END DISPLAY OPERAND CHECK     */
         AL    SUBSCRPT,@CF00032                                   0347
         C     SUBSCRPT,@CF00135                                   0347
         BNH   @DL00342                                            0347
*                 RFY                                              0348
*                  (RTNCODE) RSTD;  /* RESTRICT USAGE                */
*                 RTNCODE=FIBOPOPD; /* INVALID OPERAND RTRN C        */
         LA    RTNCODE,8                                           0349
*                 GO TO FIN;        /* GO TO COMMON EXIT             */
         B     FIN                                                 0350
*                 RFY                                              0351
*                  (RTNCODE) UNRSTD;/* FREE FOR COMPILER             */
*               END;                /* END DISPLAY CK PROCESSING     */
*             IF CMDNAME(1:8)=MONITOR/* WAS THE OPERATOR CMD         */
*                 ×CMDNAME(1:3)=MN  /* MONITOR (OR ABBREV)?          */
*               THEN                /* COMMAND WAS MONITOR           */
@RF00339 L     @10,CMDPTR                                          0353
         CLC   CMDNAME(8,@10),MONITOR                              0353
         BE    @RT00353                                            0353
         CLC   CMDNAME(3,@10),MN                                   0353
         BNE   @RF00353                                            0353
@RT00353 DS    0H                                                  0354
*               DO;                 /* CHECK THE OPERAND ON CMD      */
*                 OFFSET=1;         /* INITIALIZE 'OFFSET'           */
         LA    @10,1                                               0355
         LR    OFFSET,@10                                          0355
*                 DO SUBSCRPT=1 TO 5;/* INDEX THROUGH THE LENGTH   0356
*                                      ARRAY                         */
         LR    SUBSCRPT,@10                                        0356
@DL00356 DS    0H                                                  0357
*                   LENGTHH=MNLNG(SUBSCRPT);/* OBTAIN LENGTH         */
         LR    @10,SUBSCRPT                                        0357
         ALR   @10,@10                                             0357
         LH    LENGTHH,MNLNG-2(@10)                                0357
*                   IF OPERAND(1:LENGTHH)=MNTBL(OFFSET:OFFSET+LENGTHH-1
*                       ) THEN      /* OPERAND VALID?--YES           */
         L     @01,FIBMAINP(,FIBPTR)                               0358
         L     @01,FIBUSER(,@01)                                   0358
         L     @01,AOPRND(,@01)                                    0358
         LR    @10,LENGTHH                                         0358
         BCTR  @10,0                                               0358
         LA    @07,MNTBL-1(OFFSET)                                 0358
         EX    @10,@SC03008                                        0358
         BE    @RT00358                                            0358
*                     GO TO SVC34;  /* MATCH-VALID OPERAND FOUND     */
*                   OFFSET=OFFSET+LENGTHH;/* BUMP OFFSET             */
         ALR   OFFSET,LENGTHH                                      0360
*                 END;              /* END STOPMN OPERAND CHECK      */
         AL    SUBSCRPT,@CF00032                                   0361
         C     SUBSCRPT,@CF00101                                   0361
         BNH   @DL00356                                            0361
*                 RFY                                              0362
*                  (RTNCODE) RSTD;  /* RESTRICT USAGE                */
*                 RTNCODE=FIBOPOPD; /* IND OPERAND INVALID           */
         LA    RTNCODE,8                                           0363
*                 GO TO FIN;        /* GO TO COMMON EXIT             */
         B     FIN                                                 0364
*                 RFY                                              0365
*                  (RTNCODE) UNRSTD;/* FREE FOR COMPILER             */
*               END;                /* END MN OPERAND PROCESSING     */
*             IF CMDNAME(1:7)=CANCEL/* WAS THE OPERATOR CMD          */
*                 ×CMDNAME(1:2)=C   /* CANCEL (OR ABBREV)?           */
*               THEN                /* COMMAND WAS CANCEL            */
@RF00353 L     @10,CMDPTR                                          0367
         CLC   CMDNAME(7,@10),CANCEL                               0367
         BE    @RT00367                                            0367
         CLC   CMDNAME(2,@10),C                                    0367
         BNE   @RF00367                                            0367
@RT00367 DS    0H                                                  0368
*               IF OPERAND(1:2)=COPERAND/* CHECK THE OPERAND         */
*                 THEN              /* OPERAND VALID?--YES           */
         L     @01,FIBMAINP(,FIBPTR)                               0368
         L     @01,FIBUSER(,@01)                                   0368
         L     @01,AOPRND(,@01)                                    0368
         CLC   OPERAND(2,@01),COPERAND                             0368
         BE    @RT00368                                            0368
*                 GO TO SVC34;      /* VALID CANCEL OPERAND          */
*               ELSE                /* OPERAND WAS NOT U=, THUS      */
*                 DO;               /* OPERAND IS IN ERROR           */
*                   RFY                                            0371
*                    (RTNCODE) RSTD;/* RESTRICT USAGE                */
*                   RTNCODE=FIBOPOPD;/* IND OPERAND INVALID          */
         LA    RTNCODE,8                                           0372
*                   GO TO FIN;      /* GO TO COMMON EXIT             */
         B     FIN                                                 0373
*                   RFY                                            0374
*                    (RTNCODE) UNRSTD;/* FREE FOR COMPILER           */
*                 END;              /* END C OPERAND PROCESSING      */
*             IF CMDNAME(1:5)=SLIP  /* WAS THE OPERATOR      @ZA34430*/
*                 ×CMDNAME(1:3)=SL THEN/* CMD SLIP?          @ZA34430*/
@RF00367 L     @10,CMDPTR                                          0376
         CLC   CMDNAME(5,@10),SLIP                                 0376
         BE    @RT00376                                            0376
         CLC   CMDNAME(3,@10),SL                                   0376
         BNE   @RF00376                                            0376
@RT00376 DS    0H                                                  0377
*               DO;                 /*                       @ZA34430*/
*                 RFY                                              0378
*                  (R1) RSTD;       /*                       @ZA34430*/
*                 R0=SIZESTE×SP245; /* GET SIZE & SUBPOOL    @ZA34430*/
         L     R0,SIZESTE                                          0379
         O     R0,@CF00166                                         0379
*                 GEN(GETMAIN R,LV=(0));/* OBTAIN AN STE     @ZA34430*/
         GETMAIN R,LV=(0)
*                 STEPTR=R1;        /* SAVE ADDRESS          @ZA34430*/
         ST    R1,STEPTR                                           0381
*                 RFY                                              0382
*                  (R1) UNRSTD;     /*                       @ZA34430*/
*                 STE=STE&&STE;     /* CLEAR STE             @ZA34430*/
         L     @10,STEPTR                                          0383
         XC    STE(28,@10),STE(@10)                                0383
*                 STEID=CHARSTE;    /* INIT ID               @ZA34430*/
         MVC   STEID(4,@10),@CC00156                               0384
*                 STEASID=ASCBASID; /* INIT ASID             @ZA34430*/
         L     @07,PSAAOLD                                         0385
         MVC   STEASID(2,@10),ASCBASID(@07)                        0385
*                 STEUSRID=PSCBUSER;/* INIT TSO USERID       @ZA34430*/
         MVI   STEUSRID+7(@10),C' '                                0386
         L     @07,TCBPTR                                          0386
         L     @01,TCBJSCB(,@07)                                   0386
         L     @01,JSCBPSCB(,@01)                                  0386
         MVC   STEUSRID(7,@10),PSCBUSER(@01)                       0386
*                 RFY                                              0387
*                  (R1,                                            0387
*                   R7) RSTD;       /*                       @ZA34430*/
*                 R1=RTCTSTE;       /* GET STE CHAIN HDR     @ZA34430*/
         L     @10,CVTRTMCT(,CVTPTR)                               0388
         L     R1,RTCTSTE(,@10)                                    0388
*AGAIN:                                                            0389
*                 STENXT=R1&HIBITOFF;/* PUT INTO NEW STE     @ZA34430*/
AGAIN    L     @10,STEPTR                                          0389
         LR    @02,R1                                              0389
         N     @02,@CF00161                                        0389
         ST    @02,STENXT(,@10)                                    0389
*                 R7=STEPTR×(R1&HIBITON);/* PUT NEW STE ADDR IN R7 0390
*                                      AND PROPAGATE HI-ORDER BIT  0390
*                                      FROM RTCTSTE          @ZA34430*/
         LR    R7,R1                                               0390
         N     R7,@CF00159                                         0390
         OR    @10,R7                                              0390
         LR    R7,@10                                              0390
*                 CS(R1,R7,RTCTSTE);/* ADD NEW STE           @ZA34430*/
         L     @10,CVTRTMCT(,CVTPTR)                               0391
         CS    R1,@07,RTCTSTE(@10)                                 0391
*                 BC(7,AGAIN);      /* TRY AGAIN IF UNSUCC   @ZA34430*/
         BC    7,AGAIN                                             0392
*                 RFY                                              0393
*                  (R1,                                            0393
*                   R7) UNRSTD;     /*                       @ZA34430*/
*               END;                /*                       @ZA34430*/
*SVC34:                             /* VALID CMD,VALID D,C,MN,OR PM
*                                      OPERAND-EXECUTE CMD           */
*             RESPECIFY                                            0395
*              (R1) RSTD;           /* RESTRICT USAGE                */
@RF00376 DS    0H                                                  0395
SVC34    DS    0H                                                  0396
*             R1=ABUFFER;           /* OBTAIN POINTER TO COMMAND     */
         L     @10,FIBMAINP(,FIBPTR)                               0396
         L     @10,FIBUSER(,@10)                                   0396
         L     R1,ABUFFER(,@10)                                    0396
*             R0=TERMID;            /* AND OBTAIN TERMINAL ID        */
         LH    R0,TERMID(,@10)                                     0397
*             R0=R0×CONSTNT;        /* TURN ON HIGH ORDER BIT IN   0398
*                                      LOWER-HALF WORD INDICATING  0398
*                                      TERMINAL REQUEST              */
         O     R0,CONSTNT                                          0398
*             GEN(MGCR (1));        /* EXECUTE COMMAND               */
         MGCR (1)
*             RESPECIFY                                            0400
*              (R1) UNRSTD;         /* FREE FOR COMPILER             */
*             IF STEPTR^=0 THEN     /* IF OPERATOR CMD WAS   @ZA34430*/
         L     @10,STEPTR                                          0401
         LTR   @10,@10                                             0401
         BZ    @RF00401                                            0401
*               DO;                 /* SLIP                  @ZA34430*/
*                                                                  0402
*                 /***************************************************/
*                 /*                                                 */
*                 /* ATTACH SLIP MODULE IEECB914             @ZA34430*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0403
*                 GEN(STAX DEFER=NO);/* ALLOW ATTENTION INTERRUPTS 0403
*                                                            @ZA34430*/
         STAX DEFER=NO
*                 WAITECB=0;        /* ZERO THE WAIT ECB     @ZA34430*/
         L     @10,WAITPTR                                         0404
         SLR   @07,@07                                             0404
         ST    @07,WAITECB(,@10)                                   0404
*                 RFY                                              0405
*                  (R1,                                            0405
*                   R2) RSTD;       /*                       @ZA34430*/
*                 R2=ADDR(WAITECB); /* ADDR OF ECB           @ZA34430*/
         LR    R2,@10                                              0406
*                 R1=STEPTR;        /* PASS ADDR OF STE      @ZA34430*/
         L     R1,STEPTR                                           0407
*                 GEN REFS(R2);                                    0408
*                              /*
         ATTACH EP=IEECB914,ECB=(2),SZERO=YES,JSTCB=NO,KEY=ZERO,       *
               SM=SUPV,SVAREA=NO       ATTACH IEECB914       @ZA34430
*                 RFY                                              0409
*                   R15 RSTD;       /*                       @ZA34430*/
*                 IF R15=0 THEN     /* IF IEECB914 ATTACHED  @ZA34430*/
         LTR   R15,R15                                             0410
         BNZ   @RF00410                                            0410
*                   DO;             /*                       @ZA34430*/
*                     TCBPTR=R1;    /* SUBTASK'S TCB ADDR    @ZA34430*/
         ST    R1,TCBPTR                                           0412
*                     R1=ADDR(WAITECB);/* ADDR OF ATTACH ECB @ZA34430*/
         L     R1,WAITPTR                                          0413
*                     GEN(WAIT ECB=(1));/* WAIT UNTIL IEECB914     0414
*                                      FINISHES              @ZA34430*/
         WAIT ECB=(1)
*                     R1=ADDR(TCBPTR);/* LOAD SUBTASK TCB ADDR     0415
*                                                            @ZA34430*/
         LA    R1,TCBPTR                                           0415
*                     GEN(DETACH (R1))                             0416
*                     REFS(R1);     /* DETACH THE SUBTASK    @ZA34430*/
         DETACH (R1)
*                   END;            /*                       @ZA34430*/
*                 RFY                                              0418
*                  (R1,                                            0418
*                   R2,                                            0418
*                   R15) UNRSTD;    /*                       @ZA34430*/
*                                                                  0418
@RF00410 DS    0H                                                  0419
*                 /***************************************************/
*                 /*                                                 */
*                 /* REMOVE THE STE FROM THE RTCT            @ZA34430*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0419
*                 RFY                                              0419
*                  (R6,                                            0419
*                   R7) RSTD;       /*                       @ZA34430*/
*AGAIN2:                                                           0420
*                 R6=RTCTSTE&HIBITOFF;/* INIT USE-FLAG OFF   @ZA34430*/
AGAIN2   L     @10,CVTRTMCT(,CVTPTR)                               0420
         L     R6,RTCTSTE(,@10)                                    0420
         N     R6,@CF00161                                         0420
*                 R7=R6×HIBITON;    /* SET USE-FLAG ON'      @ZA34430*/
         LR    R7,R6                                               0421
         O     R7,@CF00159                                         0421
*                 CS(R6,R7,RTCTSTE);/* CHK IF Q AVAILABLE    @ZA34430*/
         CS    R6,@07,RTCTSTE(@10)                                 0422
*                 BC(7,AGAIN2);     /* TRY AGAIN IF IN USE   @ZA34430*/
         BC    7,AGAIN2                                            0423
*                 RFY                                              0424
*                   R7 UNRSTD;      /*                       @ZA34430*/
*                 IF R6^=0 THEN     /* IF QUEUE NOT EMPTY,   @ZA34430*/
         LTR   R6,R6                                               0425
         BZ    @RF00425                                            0425
*                   DO;             /* REMOVE STE ADDED      @ZA34430*/
*                     IF R6=STEPTR THEN/* IF 1ST ONE MATCHES @ZA34430*/
         L     @10,STEPTR                                          0427
         CR    R6,@10                                              0427
         BNE   @RF00427                                            0427
*                       RTCTSTE=STENXT;/* REMOVE STE FROM QUEUE AND
*                                      SET OFF USE-FLAG      @ZA34430*/
         L     @01,CVTRTMCT(,CVTPTR)                               0428
         L     @10,STENXT(,@10)                                    0428
         ST    @10,RTCTSTE(,@01)                                   0428
*                     ELSE          /* 1ST DOES NOT MATCH,   @ZA34430*/
*                       DO;         /* SEARCH THE QUEUE      @ZA34430*/
         B     @RC00427                                            0429
@RF00427 DS    0H                                                  0430
*                         SAVSTEAD=STEPTR;/* SAVE STE ADDRESS      0430
*                                                            @ZA34430*/
         L     SAVSTEAD,STEPTR                                     0430
*                         STEPTR=R6;/* INIT TO 1ST ELEMENT   @ZA34430*/
         ST    R6,STEPTR                                           0431
*                         DO WHILE STENXT^=SAVSTEAD&/* SEARCH Q    0432
*                                                            @ZA34430*/
*                               STENXT^=0;/* UNTIL ELEMENT POINTING
*                                      TO STE IS FOUND OR THE END OF
*                                      THE QUEUE             @ZA34430*/
         B     @DE00432                                            0432
@DL00432 DS    0H                                                  0433
*                           IF STENXT->STEID=CHARSTE THEN/* IF STENXT
*                                      PTR VALID             @ZA34430*/
         L     @10,STEPTR                                          0433
         L     @10,STENXT(,@10)                                    0433
         CLC   STEID(4,@10),@CC00156                               0433
         BNE   @RF00433                                            0433
*                             STEPTR=STENXT;/* ADDR OF NEXT ONE    0434
*                                                            @ZA34430*/
         ST    @10,STEPTR                                          0434
*                           ELSE    /* IF BAD PTR            @ZA34430*/
*                             STENXT=0;/* CLEAR IT           @ZA34430*/
         B     @RC00433                                            0435
@RF00433 L     @10,STEPTR                                          0435
         SLR   @07,@07                                             0435
         ST    @07,STENXT(,@10)                                    0435
*                         END;      /*                       @ZA34430*/
@RC00433 DS    0H                                                  0436
@DE00432 L     @10,STEPTR                                          0436
         L     @10,STENXT(,@10)                                    0436
         CR    @10,SAVSTEAD                                        0436
         BE    @DC00432                                            0436
         LTR   @10,@10                                             0436
         BNZ   @DL00432                                            0436
@DC00432 DS    0H                                                  0437
*                         IF STENXT=SAVSTEAD THEN/* IF ELEMENT     0437
*                                      POINTING TO STE IS FOUND    0437
*                                                            @ZA34430*/
         L     @10,STEPTR                                          0437
         C     SAVSTEAD,STENXT(,@10)                               0437
         BNE   @RF00437                                            0437
*                           DO;     /*                       @ZA34430*/
*                             STENXT=SAVSTEAD->STENXT;/* REMOVE STE
*                                      FROM THE QUEUE        @ZA34430*/
         L     @07,STENXT(,SAVSTEAD)                               0439
         ST    @07,STENXT(,@10)                                    0439
*                             RTCTSTE=R6;/* SET OFF USE-FLAG @ZA34430*/
         L     @01,CVTRTMCT(,CVTPTR)                               0440
         ST    R6,RTCTSTE(,@01)                                    0440
*                             STEPTR=SAVSTEAD;/* REINIT PTR  @ZA34430*/
         ST    SAVSTEAD,STEPTR                                     0441
*                           END;    /*                       @ZA34430*/
*                         ELSE      /* END OF QUEUE          @ZA34430*/
*                           DO;     /*                       @ZA34430*/
         B     @RC00437                                            0443
@RF00437 DS    0H                                                  0444
*                             RTCTSTE=R6;/* SET OFF USE-FLAG @ZA34430*/
         L     @01,CVTRTMCT(,CVTPTR)                               0444
         ST    R6,RTCTSTE(,@01)                                    0444
*                             STEPTR=0;/* IND STE NOT ON Q   @ZA34430*/
         SLR   @10,@10                                             0445
         ST    @10,STEPTR                                          0445
*                           END;    /*                       @ZA34430*/
*                       END;        /*                       @ZA34430*/
@RC00437 DS    0H                                                  0448
*                     IF STEPTR^=0 THEN/* IF STE REMOVED     @ZA34430*/
@RC00427 L     @10,STEPTR                                          0448
         SLR   @07,@07                                             0448
         CR    @10,@07                                             0448
         BE    @RF00448                                            0448
*                       DO;         /*                       @ZA34430*/
*                         RFY                                      0450
*                           ECB BASED(ADDR(STEECB));/*       @ZA34430*/
*                         IF ECBPOSTB='1'B&/* IF ECB POSTED AND    0451
*                                                            @ZA34430*/
*                             ECBCCCNT=ZERO3B&/* COMP CODE = 0     0451
*                                                            @ZA34430*/
*                             STEBUFAD^=0&/* & BUF ADR PASSED      0451
*                                                            @ZA34430*/
*                             RECBPTR^=0 THEN/* WITH ECB ADDR      0451
*                                                            @ZA34430*/
         LA    @02,20                                              0451
         ALR   @02,@10                                             0451
         TM    ECBPOSTB(@02),B'01000000'                           0451
         BNO   @RF00451                                            0451
         L     @02,ECBCCCNT-1(,@02)                                0451
         LA    @02,0(,@02)                                         0451
         CR    @07,@02                                             0451
         BNE   @RF00451                                            0451
         L     @10,STEBUFAD(,@10)                                  0451
         CR    @10,@07                                             0451
         BE    @RF00451                                            0451
         L     @10,RECBPTR(,@10)                                   0451
         CR    @10,@07                                             0451
         BE    @RF00451                                            0451
*                           DO;     /*                       @ZA34430*/
*                             RFY                                  0453
*                              (R2,                                0453
*                               R7) RSTD;/*                  @ZA34430*/
*                             R2=RECBPTR;/* ECB ADDRESS      @ZA34430*/
         LR    R2,@10                                              0454
*                             R6=BAASCB;/* MASTER SCHED ASCB @ZA34430*/
         L     @01,CVTMSER(,CVTPTR)                                0455
         L     R6,BAASCB(,@01)                                     0455
*                             R7=ADDR(CVTBRET);/* NO ERROR RTN     0456
*                                                            @ZA34430*/
         LA    R7,CVTBRET(,CVTPTR)                                 0456
*                             GEN REFS(R2,R6,R7,POSTLST);          0457
       POST (2),X'008',ASCB=(6),ERRET=(7),MF=(E,POSTLST)   XMEM POST
*                             RFY                                  0458
*                              (R2,                                0458
*                               R7) UNRSTD;/*                @ZA34430*/
*                           END;    /*                       @ZA34430*/
*                         RFY                                      0460
*                          (R1) RSTD;/*                      @ZA34430*/
@RF00451 DS    0H                                                  0461
*                         R0=SIZESTE×SP245;/* SIZE AND SUBPOOL     0461
*                                                            @ZA34430*/
         L     R0,SIZESTE                                          0461
         O     R0,@CF00166                                         0461
*                         R1=STEPTR;/* STE ADDRESS           @ZA34430*/
         L     R1,STEPTR                                           0462
*                         GEN(FREEMAIN R,LV=(0),A=(1));/* FREE IT  0463
*                                                            @ZA34430*/
         FREEMAIN R,LV=(0),A=(1)
*                         RFY                                      0464
*                          (R1) UNRSTD;/*                    @ZA34430*/
*                       END;        /*                       @ZA34430*/
*                   END;            /*                       @ZA34430*/
*                 ELSE              /* QUEUE IS EMPTY        @ZA34430*/
*                   RTCTSTE=R6;     /* SET OFF USE-FLAG      @ZA34430*/
         B     @RC00425                                            0467
@RF00425 L     @01,CVTRTMCT(,CVTPTR)                               0467
         ST    R6,RTCTSTE(,@01)                                    0467
*                 RFY                                              0468
*                   R6 UNRSTD;      /*                       @ZA34430*/
@RC00425 DS    0H                                                  0469
*               END;                /* END OF SLIP CMD       @ZA34430*/
*             RESPECIFY                                            0470
*              (RTNCODE) RSTD;      /* RESTRICT USAGE                */
@RF00401 DS    0H                                                  0471
*             RTNCODE=FIBOKRC;      /* INDICATE SVC SUCCESSFUL       */
         SLR   RTNCODE,RTNCODE                                     0471
*             GO TO FIN;            /* GO TO COMMON EXIT             */
         B     FIN                                                 0472
*             RESPECIFY                                            0473
*              (RTNCODE) UNRSTD;    /* FREE FOR COMPILER             */
*           END;                    /* END OF OPER PROCESSING        */
*                                                                  0475
*       /*************************************************************/
*       /*                                                           */
*       /* THE FOLLOWING IS ENTERED WHEN THE CALLER IS PROFILE . IF A*/
*       /* NEW CHAR DELETE CHARACTER HAS BEEN PROVIDED, THEN THE SVC */
*       /* MOVES THE NEW CHARACTER INTO THE PSCB, A CONTROL BLOCK IN */
*       /* PROTECTED CORE . IF A NEW LINE DELETE CHARACTER HAS BEEN  */
*       /* PROVIDED, THEN THE SVC MOVES . THE NEW CHARACTER INTO THE */
*       /* PSCB . THE ATTENTION BIT INTO THE PSCB                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0475
*         ELSE                      /* CALLER NOT A FIB CMD OR       */
*           IF R0=FIBPROFL          /* OPER, WAS IT PROFILE?         */
*             THEN                  /* THE CALLER WAS PROFILE        */
@RF00282 C     R0,@CF02131                                         0475
         BNE   @RF00475                                            0475
*             DO;                   /* SO DO THE FOLLOWING:          */
*               IF FIBPCHAR='1'B    /* MOVE CHAR DELETE CHAR IN?     */
*                 THEN              /* YES,                          */
         L     @01,FIBMAINP(,FIBPTR)                               0477
         L     @10,FIBUSER(,@01)                                   0477
         TM    FIBPCHAR(@10),B'00100000'                           0477
         BNO   @RF00477                                            0477
*                 PSCBCHAR=FIBCHAR; /* MOVE CHAR IN                  */
         L     @07,TCBPTR                                          0478
         L     @01,TCBJSCB(,@07)                                   0478
         L     @01,JSCBPSCB(,@01)                                  0478
         MVC   PSCBCHAR(1,@01),FIBCHAR(@10)                        0478
*               IF FIBPLINE='1'B    /* MOVE LINE DELETE CHAR IN?     */
*                 THEN              /* YES, THE USER WANTS THE       */
@RF00477 L     @01,FIBMAINP(,FIBPTR)                               0479
         L     @10,FIBUSER(,@01)                                   0479
         TM    FIBPLINE(@10),B'01000000'                           0479
         BNO   @RF00479                                            0479
*                 DO;               /* LINE DELETE CHAR CHANGED      */
*                   PSCBLINE=FIBLINE;/* MOVE LINE CHAR IN            */
         L     @07,TCBPTR                                          0481
         L     @01,TCBJSCB(,@07)                                   0481
         L     @07,JSCBPSCB(,@01)                                  0481
         MVC   PSCBLINE(1,@07),FIBLINE(@10)                        0481
*                   IF FIBPATTN='1'B/* SET BIT INDICATING            */
*                     THEN          /* ATTENTION WAS THE LINE        */
         TM    FIBPATTN(@10),B'10000000'                           0482
         BNO   @RF00482                                            0482
*                     PSCBATTN='1'B;/* DELETE CHARACTER              */
         OI    PSCBATTN(@07),B'00001000'                           0483
*                   ELSE            /* ATTENTION WAS NOT THE         */
*                     PSCBATTN='0'B;/* LINE DELETE CHARACTER         */
         B     @RC00482                                            0484
@RF00482 L     @10,TCBPTR                                          0484
         L     @01,TCBJSCB(,@10)                                   0484
         L     @01,JSCBPSCB(,@01)                                  0484
         NI    PSCBATTN(@01),B'11110111'                           0484
*                 END;              /* END OF LINE DELETE PROCESS    */
@RC00482 DS    0H                                                  0486
*               RESPECIFY                                          0486
*                (RTNCODE) RSTD;    /* RESTRICT USAGE                */
@RF00479 DS    0H                                                  0487
*               RTNCODE=FIBOKRC;    /* SET SUCCESSFUL RETURN CODE    */
         SLR   RTNCODE,RTNCODE                                     0487
*               GO TO FIN;          /* GO TO COMMON EXIT             */
         B     FIN                                                 0488
*             END;                  /* END OF PROFILE PROCESSING     */
*     END;                          /* END VALID PSCB PROCESSING     */
@RF00475 DS    0H                                                  0491
*                                                                  0491
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING IS ENTERED WHEN THE CALLER IS INVALID . A RETURN*/
*   /* CODE IS SET INDICATING A INVALID CALLER . THE SVC RETURN TO   */
*   /* THE CALLER THE LABEL FIN IS ENTERED WHENEVER RETURNING TO THE */
*   /* CALLER FROM ALL OF THE PREVIOUS ROUTINES AFTER ALL RETURN     */
*   /* CODES HAVE BEEN SET UP                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0491
*   RTNCODE=FIBINVCP;               /* SET INVALID CALLER R C        */
@RF00150 LA    RTNCODE,88                                          0491
*FIN:                               /* COMMON EXIT FOR ALL PATHS   0492
*                                      AFTER SETTING RETURN CODE     */
*   RFY                                                            0492
*    (R14) RESTRICTED;              /* RESTRICT COMPILER USAGE       */
FIN      DS    0H                                                  0493
*   R14=RTNADDR;                    /* RESTORE RETURN ADDRESS        */
         L     R14,RTNADDR                                         0493
*   R3=RTNCODE;                     /* SAVE RET CODE         @ZA31978*/
         LR    R3,RTNCODE                                          0494
*   RFY                                                            0495
*    (R1) RESTRICTED;               /*                               */
*   R0=ECBLGTH×SP1;                 /* FREE ECB CORE         @ZA31978*/
         L     R0,ECBLGTH                                          0496
         O     R0,@CF00178                                         0496
*   R1=WAITPTR;                     /* GET PTR TO CORE       @ZA31978*/
         L     R1,WAITPTR                                          0497
*   GEN(FREEMAIN R,LV=(0),A=(1));   /*                       @ZA31978*/
         FREEMAIN R,LV=(0),A=(1)
*   RTNCODE=R3;                     /* RESTORE RETCD         @ZA31978*/
         LR    RTNCODE,R3                                          0499
*   RFY                                                            0500
*    (R0,                                                          0500
*     R1,                                                          0500
*     R3,                                                          0500
*     FIBPTR) UNRSTD;               /* RLSE REGS FOR COMPILER        */
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLER              */
         LR    @10,@15                                             0501
         L     @13,4(,@13)                                         0501
         L     @00,@SIZDATD                                        0501
         LR    @01,@11                                             0501
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0501
         L     @01,24(,@13)                                        0501
         BR    @14                                                 0501
*   RESPECIFY                                                      0502
*    (R14,                                                         0502
*     RTNCODE) UNRSTD;              /* FREE FOR COMPILER             */
*   GEN(EJECT);                                                    0503
*                                                                  0503
         EJECT
*/********************************************************************/
*/*  THIS SUBROUTINE FREES THE PARAMETER LIST PASSED ON THE ATTACH   */
*/*  MACRO.  THIS PARAMETER LIST HAS A PROTECTION KEY OF ONE.        */
*/********************************************************************/
*                                                                  0504
*FREEKEY1:                                                         0504
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);/* FREE KEY ONE CORE           */
         B     @PB00002                                            0504
FREEKEY1 DS    0H                                                  0505
*   RESPECIFY                                                      0505
*    (R5,                                                          0505
*     R7,                                                          0505
*     R14) RSTD;                    /* RESTRICT REGISTERS            */
*   RTNADDRS=R14;                   /* SAVE RETURN ADDRESS           */
         LR    RTNADDRS,R14                                        0506
*   R7=SAVECORE;                    /* PICK UP ADDRESS OF KEY 1 CORE */
         LR    R7,SAVECORE                                         0507
*   R5=GETWORK;                     /* PASSED ACROSS THE MODESET     */
         ICM   R5,15,GETWORK                                       0508
*RKEY1:                             /* CHANGE THE PSW PROTECTION KEY
*                                      TO SCHEDULER                  */
*   GEN(MODESET EXTKEY=SCHED,RELATED=(KEY1,IKJEFF00(RKEY0)));      0509
RKEY1    MODESET EXTKEY=SCHED,RELATED=(KEY1,IKJEFF00(RKEY0))
*   RESPECIFY                                                      0510
*    (R0) RESTRICTED;               /* RESTRICT R0 FOR FREEMAIN      */
*   R0=R5;                          /* CORE AND SUBPOOL TO GET       */
         LR    R0,R5                                               0511
*   GEN(FREEMAIN R,LV=(0),A=(7));   /* FREE CORE UNDER KEY 1         */
         FREEMAIN R,LV=(0),A=(7)
*   RESPECIFY                                                      0513
*    (R0) UNRESTRICTED;             /* RELEASE R0 FOR USAGE          */
*RKEY0:                             /* CHANGE THE PSW PROTECTION KEY
*                                      TO SUPERVISOR                 */
*   GEN(MODESET EXTKEY=SUPR,RELATED=(KEY0,IKJEFF00(RKEY1)));       0514
RKEY0    MODESET EXTKEY=SUPR,RELATED=(KEY0,IKJEFF00(RKEY1))
*   R14=RTNADDRS;                   /* RESTORE RETURN POINT          */
         LR    R14,RTNADDRS                                        0515
*   RETURN;                         /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0516
@EF00002 DS    0H                                                  0516
@ER00002 BR    @14                                                 0516
*   RFY                                                            0517
*    (R5,                                                          0517
*     R7,                                                          0517
*     R14) UNRSTD;                  /* RELEASE REGISTERS FOR COMPILER*/
*   END FREEKEY1;                   /* END OF FREE KEY 1 CORE PROC   */
@PB00002 DS    0H                                                  0519
*   GEN(EJECT);                                                    0519
*                                                                  0519
         EJECT
*/********************************************************************/
*/*  THE TASK OF BITONOFF IS ESSENTIALLY TO CHANGE THE STATUS        */
*/*  OF THE TSBGETBF BIT IN THE TSB AND WHEN LEAVING OPERATOR        */
*/*  MODE TO STOP ALL MONITORS.  THE TSBGETBF BIT INDICATES          */
*/*  TO TPUT  THAT A COMMAND IS BEING ISSUED WHICH REQUIRES          */
*/*  MORE BUFFERS THAN IS NORMALLY ALLOTTED A TERMINAL AND TO        */
*/*  GET, OR TO TRY TO GET SOME ADDITIONAL BUFFERS SO THAT           */
*/*  THE COMMAND CAN WRITE ALL ITS MESSAGES TO THE TERMINAL          */
*/*  WITHOUT GOING INTO A WAIT CONDITION OR RETURNING TO THE         */
*/*  CALLER WITHOUT HAVING WRITTEN ALL ITS MESSAGES.                 */
*/*                                                                  */
*/*  IN THE CASE OF THE INITIAL ENTRY TO OPERATOR WITH A             */
*/*  LEGITIMATE COMMAND, THE TSBGETBF BIT SHOULD BE TURNED ON        */
*/*  SO THAT TPUT WILL USE ITS 'DYNAMIC BUFFER GETTING               */
*/*  ALGORITHM' WHEN THE OPERATOR SUBCOMMANDS ARE ISSUED.            */
*/*                                                                  */
*/*  WHEN AN END COMMAND IS ISSUED OR A DOUBLE ATTENTION FOL-        */
*/*  LOWED BY ANOTHER COMMAND IS ENTERED (BOTH INDICATING A          */
*/*  REQUEST TO TERMINATE OPERATOR MODE) THE TSBGETBF BIT IN         */
*/*  THE TSB SHOULD BE TURNED OFF.  ALSO WHEN A REQUEST TO           */
*/*  LEAVE OPERATOR MODE IS RECIEVED, ALL MONITORS ARE               */
*/*  STOPPED BY CALLING IEAVMNTR.                                    */
*/*                                                                  */
*/*  FSTFLG BIT IS SET TO ONE ONLY AFTER A LEGITIMATE                */
*/*  COMMAND HAS BEEN ENTERED BY THE USER AND THE EXTRA              */
*/*  BUFFER BIT HAS BEEN TURNED ON.                                  */
*/********************************************************************/
*                                                                  0520
*BITONOFF:                                                         0520
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);/* CHANGE BIT SETTING          */
         B     @PB00003                                            0520
BITONOFF DS    0H                                                  0521
*   RFY                                                            0521
*    (R3,                                                          0521
*     FIBPTR,                                                      0521
*     R14) RSTD;                    /* RESTRICT R3- CVT ADDR,ETC.    */
*   RTNADDRS=R14;                   /* SAVE RETURN ADDRESS           */
         LR    RTNADDRS,R14                                        0522
*   RFY                                                            0523
*    (R14) UNRESTRICTED;            /* FREE FOR THE COMPILER         */
*   IF FSTFLG='1'B                  /* SHOULD BITONOFF STOP ALL    0524
*                                      MONITORS?                     */
*     THEN                          /* YES, IT SHOULD                */
         L     @10,FIBMAINP(,FIBPTR)                               0524
         L     @10,FIBUSER(,@10)                                   0524
         TM    FSTFLG(@10),B'00001000'                             0524
         BNO   @RF00524                                            0524
*     DO;                           /* PREPARE VMNTR PARM LIST       */
*       MPLPTR=ADDR(MPLLIST);       /* ADDRESSIBILITY TO MPL         */
         LA    MPLPTR,MPLLIST                                      0526
*       MPLLIST=MPLLIST&&MPLLIST;   /* ZERO OUT THE PARM LIST        */
         XC    MPLLIST(8),MPLLIST                                  0527
*       MPLTYPE1='11000100'B;       /* STOP ALL THREE MONITORS       */
         MVI   MPLTYPE1(MPLPTR),B'11000100'                        0528
*       MPLID=TERMID;               /* TERMINAL ID INTO PARM LIST    */
         LH    @10,TERMID(,@10)                                    0529
         STH   @10,MPLID(,MPLPTR)                                  0529
*       MPLSTOP='1'B;               /* STOP THE MONITORS             */
*       MPLTERM='1'B;               /* TERMINAL USER                 */
         OI    MPLSTOP(MPLPTR),B'01010000'                         0531
*       CALL IEAVMNTR(MPLLIST);     /* CALL COM TASK ROUTINE         */
         LA    @10,MPLLIST                                         0532
         ST    @10,@AL00001                                        0532
         L     @10,UCMBASPT(,CVTPTR)                               0532
         L     @15,UCMMNTR(,@10)                                   0532
         LA    @01,@AL00001                                        0532
         BALR  @14,@15                                             0532
*     END;                          /* END OF PROCESS TO STOP      0533
*                                      MONITORS                      */
*   RFY                                                            0534
*    (DATAPTR,                                                     0534
*     CODEPTR,                                                     0534
*     LOCKRTNC,                                                    0534
*     SAVED11,                                                     0534
*     SAVED12,                                                     0534
*     SAVED13) RSTD;                                               0534
@RF00524 DS    0H                                                  0535
*   SAVED11=DATAPTR;                /* SAVE DATA PTR REGISTER        */
         LR    SAVED11,DATAPTR                                     0535
*   SAVED12=CODEPTR;                /* SAVE BASE REGISTER VALUE      */
         LR    SAVED12,CODEPTR                                     0536
*   SAVED13=LOCKRTNC;               /* SAVE REGISTER THIRTEEN        */
         LR    SAVED13,LOCKRTNC                                    0537
*   GEN(SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(TSB,IKJEFF00))
*   REFS(PSALITA,FLC);              /* OBTAIN THE LOCAL LOCK         */
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(TSB,IKJEFF00)
*   CODEPTR=SAVED12;                /* RESTORE BASE REG VALUE        */
         LR    CODEPTR,SAVED12                                     0539
*   GEN(SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=(TSB,IKJEFF00))
*   REFS(PSALITA,FLC);              /* OBTAIN THE CMS LOCK           */
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=(TSB,IKJEFF00)
*   CODEPTR=SAVED12;                /* RESTORE BASE REG VALUE        */
         LR    CODEPTR,SAVED12                                     0541
*   TSBPTR=ASCBTSB;                 /* PICK UP ADDRESS OF THE TSB    */
         L     @10,PSAAOLD                                         0542
         L     @05,ASCBTSB(,@10)                                   0542
         ST    @05,TSBPTR(,@10)                                    0542
*   IF TSBGETBF='1'B THEN           /* IF THE SWITCH IS ACTIVE,      */
         TM    TSBGETBF(@05),B'00000010'                           0543
         BNO   @RF00543                                            0543
*     TSBGETBF='0'B;                /* INACTIVATE IT                 */
         NI    TSBGETBF(@05),B'11111101'                           0544
*   ELSE                            /* ELSE THE SWITCH IS NOT,       */
*     TSBGETBF='1'B;                /* SO ACTIVATE IT                */
         B     @RC00543                                            0545
@RF00543 L     @10,PSAAOLD                                         0545
         L     @10,TSBPTR(,@10)                                    0545
         OI    TSBGETBF(@10),B'00000010'                           0545
*   GEN(SETLOCK RELEASE,TYPE=CMS,RELATED=(TSB,IKJEFF00))           0546
*   REFS(PSALITA,FLC);              /* RELEASE THE CMS LOCK          */
@RC00543 DS    0H                                                  0546
         SETLOCK RELEASE,TYPE=CMS,RELATED=(TSB,IKJEFF00)
*   CODEPTR=SAVED12;                /* RESTORE BASE REG VALUE        */
         LR    CODEPTR,SAVED12                                     0547
*   GEN(SETLOCK RELEASE,TYPE=LOCAL,RELATED=(TSB,IKJEFF00))         0548
*   REFS(PSALITA,FLC);              /* RELEASE THE LOCAL LOCK        */
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(TSB,IKJEFF00)
*   DATAPTR=SAVED11;                /* RESTORE DATA PTR REGISTER     */
         LR    DATAPTR,SAVED11                                     0549
*   CODEPTR=SAVED12;                /* RESTORE BASE REG VALUE        */
         LR    CODEPTR,SAVED12                                     0550
*   LOCKRTNC=SAVED13;               /* RESTORE REGISTER THIRTEEN     */
         LR    LOCKRTNC,SAVED13                                    0551
*   RFY                                                            0552
*    (DATAPTR,                                                     0552
*     CODEPTR,                                                     0552
*     LOCKRTNC,                                                    0552
*     SAVED11,                                                     0552
*     SAVED12,                                                     0552
*     SAVED13) UNRSTD;                                             0552
*   RFY                                                            0553
*    (R14) RSTD;                    /* RESTRICT FOR RETURN           */
*   R14=RTNADDRS;                   /* RESTORE RETURN ADDRESS        */
         LR    R14,RTNADDRS                                        0554
*   RETURN;                         /* RETURN TO CALLER              */
@EL00003 DS    0H                                                  0555
@EF00003 DS    0H                                                  0555
@ER00003 BR    @14                                                 0555
*   RFY                                                            0556
*    (FIBPTR,                                                      0556
*     R14) UNRSTD;                  /* RELEASE FOR COMPILER USE      */
*   GENERATE;                                                      0557
PTCHAREA  DC  CL50'*****************SVC100*PATCHAREA*****************'
*   END BITONOFF;                                                  0558
         B     @EL00003                                            0558
@PB00003 DS    0H                                                  0559
*   GEN(EJECT);                                                    0559
*                                                                  0559
         EJECT
*/*IKJEFF00:     CHART                                               */
*/*HEADER                                                          0560
*/*                                                                0560
*/*                                            PAGE #              0560
*/*FIB SVC 100                                                     0560
*/*                                            IKJEFF00              */
*/*E ENTER INTO IKJEFF00                                             */
*/*P SAVE VALUE - REG 14 & 01                                        */
*/* D (YES,,NO,%NOINP) IS THE PSCB POINTER VALID?                    */
*/*D (NO,%O2,YES,) SUBMIT, CANCEL, OUTPUT, OR STATUS?                */
*/* D (YES,,NO,%BADGUY) IS THE AUTHORIZED BIT NOT 0                  */
*/*D (NO,,YES,%D2) IS IT A SUBMIT ENTRY?                             */
*/*D (NO,,YES,%D3) IS IT A CANCEL ENTRY?                             */
*/*D (NO,,YES,%D4) IS IT A OUTPUT ENTRY?                             */
*/*D (NO,,YES,%D5) IS IT A STATUS ENTRY?                             */
*/*%O2: D (YES,%OPER,NO,) IS IT AN OPERATOR ENTRY?                   */
*/* D (YES,%PROF,NO,%NOINP) IS IT AN PROFILE ENTRY?                  */
*/*%OPER: D (YES,,NO,%BADGUY) IS THE PSCBCTRL BIT ON?                */
*/*P STORE THE ASID FOR THE CALLER                                   */
*/*D (YES,,NO,%L1) CALL TO ONLY CHECK USER AUTHORITY ?               */
*/*P (,%RETOK) INIT FIRST CALL BY OPER FLAG TO ZERO                  */
*/*%L1: D (NO,,YES,%A3) IS REQUEST TO END OPERATOR MODE?             */
*/*D (YES,,NO,%G4) IS COMMAND VALID?                                 */
*/*D (YES,,NO,%K4) FIRST SVC 100 CALL WITH LEGIT CMD?                */
*/*S BITONOFF: CALL INT RTN FOR EXTRA BUFFERS                        */
*/*P SET FIRST TIME FLAG BIT TO ONE                                  */
*/*%K4: D (NO,,YES,%DISPLAY) IS COMMAND DISPLAY?                     */
*/* D (NO,,YES,%MONITOR) IS COMMAND MONITOR?                         */
*/* D (NO,,YES,%STOPMN) IS COMMAND STOPMN?                           */
*/* D (NO,,YES,%CANCEL) IS COMMAND CANCEL?                           */
*/*SVC34: L ISSUE SVC 34 TO EXECUTE COMMAND                          */
*/*%RETOK: P (,%FIN) SET RETURN CODE TO 0                            */
*/*%DISPLAY: D (YES,SVC34,NO,%INVOPER) IS DISPLAY OPERAND VALID?     */
*/*%MONITOR: D (YES,SVC34,NO,%INVOPER) IS MONITOR OPERAND VALID?     */
*/*%STOPMN: D (YES,SVC34,NO,%INVOPER) IS STOPMN OPERAND VALID?       */
*/*%CANCEL: D (YES,SVC34,NO,%INVOPER) IS CANCEL OPERAND VALID?       */
*/*%INVOPER: P (,%FIN) SET RETURN CODE TO 8                          */
*/*%G4: P (,%FIN) SET RETURN CODE TO 4                               */
*/*%A3: S (,%RETOK) BITONOFF: CALL INTERNAL GET MORE BUFFERS RTN     */
*/*%D4: P (,%L5) PREPARE TO GO TO IKJCT469                           */
*/*%D3: P (,%L5) PREPARE TO GO TO IKJEFF57                           */
*/*%D5: P (,%L5) PREPARE TO GO TO IKJEFF50                           */
*/*%D2: P PREPARE TO GO TO IKJEFF04                                  */
*/*%L5: L STAX--ALLOW ATTENTIONS DURING SVC 100                      */
*/*  D (YES,%M1,NO,) STAX FAILED?                                    */
*/* L GET INTO KEY 1                                                 */
*/* L GET PARM LIST CORE                                             */
*/* L GO BACK TO KEY 0                                               */
*/* P BUILD PARM LIST                                                */
*/*P ATTACH SPECIFIED ROUTINE                                        */
*/* D (YES,,NO,%T1) ATTACH FAILED?                                   */
*/* P SET 84 RETURN CODE                                             */
*/* S (,%FIN) FREEKEY 1: FREE PARM LIST CORE                         */
*/*%T1: P SET PROTECT KEY                                            */
*/*     L ISSUE STATUS MACRO                                         */
*/*     D (YES,%M2,NO,) STATUS MACRO FAILED?                         */
*/* L ISSUE WAIT                                                     */
*/* L ISSUE DETACH                                                   */
*/* P PROPAGATE SUBTASK RETURN CODE                                  */
*/* S (,%FIN) FREE KEY 1: FREE PARM LIST CORE                        */
*/*%BADGUY: P PLACE 80 IN REG. 15                                    */
*/*%FIN: R RETURN TO CALLER                                          */
*/*%NOINP: P (,%FIN) SET A 88 RETURN CODE IN REGISTER 15             */
*/*%PROF: P MOVE VALUE OR VALUES INTO THE PSCB                       */
*/*       P (,%FIN) SET THE RETURN CODE                              */
*/*%M1: P (,%FIN) SET 84 RETURN CODE                                 */
*/*%M2: P SET 84 RETURN CODE                                         */
*/*BITONOFF: E ENTRY                                                 */
*/* D (YES,,NO,%L2) IS FIRST TIME BIT ON?                            */
*/* P INITIALIZE FOR IEAVMNTR                                        */
*/* L STOP ALL MONITORS                                              */
*/*%L2: L ISSUE SETLOCK FOR LOCAL LOCK                               */
*/*     L ISSUE SETLOCK FOR CMS LOCK                                 */
*/*     P EXCLUSIVE OR THE TSBGETBF BIT                              */
*/*     L ISSUE SETLOCK TO RELEASE THE LOCAL LOCK                    */
*/*     L ISSUE SETLOCK TO RELEASE THE CMS LOCK                      */
*/*%L3: R RETURN TO CALLER                                           */
*/*FREEKEY1:  E ENTRY                                                */
*/* L GET INTO KEY 1                                                 */
*/* L FREE PARM LIST CORE                                            */
*/* L GO BACK TO KEY 0                                               */
*/* R RETURN TO CALLER                                               */
*/*IKJEFF00:        END                                              */
*                                                                  0560
*   END IKJEFF00                                                   0560
*                                                                  0560
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEECUCM )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZMPL  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IKJTSB  )                                       */
*/*%INCLUDE SYSLIB  (IKJEFFIB)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFB2)                                       */
*/*%INCLUDE SYSLIB  (IEZATTCH)                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEEBASEA)                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*/*%INCLUDE SYSLIB  (IHASTE  )                                       */
*                                                                  0560
*       ;                                                          0560
@EL00001 L     @13,4(,@13)                                         0560
@EF00001 L     @00,@SIZDATD                                        0560
         LR    @01,@11                                             0560
         FREEMAIN R,LV=(0),A=(1)
@ER00001 L     @01,24(,@13)                                        0560
         BR    @14                                                 0560
@DATA    DS    0H
@SM02998 MVC   FIBCPARM(0,@07),FIBUAREA(@10)
@SC03003 CLC   CMDNAME(0,@07),0(@01)
@SC03006 CLC   STOPERND(0,@01),0(@07)
@SC03008 CLC   OPERAND(0,@01),0(@07)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    1A
@TF00001 DS    F
@TF00002 DS    F
IKJEFF00 CSECT
         DS    0F
@CF00032 DC    F'1'
@CF00088 DC    F'3'
@CF00115 DC    F'4'
@CF00101 DC    F'5'
@CF00134 DC    F'10'
@CF00135 DC    F'15'
@CF00159 DC    XL4'80000000'
@CF00161 DC    XL4'7FFFFFFF'
@CF00166 DC    XL4'F5000000'
@CF00178 DC    XL4'01000000'
@CF03002 DC    XL4'0000FFFF'
@CF02121 DC    XL4'0001'
@CF02123 DC    XL4'0002'
@CF02125 DC    XL4'0003'
@CF02127 DC    XL4'0004'
@CF02129 DC    XL4'0005'
@CF02131 DC    XL4'0007'
@DATD    DSECT
         DS    0D
TCBPTR   DS    A
STAILPTR DS    A
STEPTR   DS    A
WAITPTR  DS    A
CMDPTR   DS    A
RTNADDR  DS    A
UCMDVEPT DS    A
UCMEILPT DS    A
UCMEXTPT DS    A
UCMMCSPT DS    A
UCMUEWPT DS    A
UCMFXPTR DS    A
UCMPXPTR DS    A
ATTCHPTR DS    A
ECBPTR   DS    A
RTRNCODE DS    A
ATTACHEE DS    CL8
GETWORK  DS    CL4
MPLLIST  DS    CL8
ATTCHPRM DS    CL60
IKJEFF00 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00123 DC    V(IKJEFF20)
         DS    0D
CONSTNT  DC    XL4'00008000'
SIZESTE  DC    AL4(28)
ECBLGTH  DC    AL4(4)
@CC00156 DC    C'STE '
STATUS   DC    CL8'STATUS  '
ATTACH   DC    CL8'ATTACH  '
STAX     DC    CL8'STAX    '
DISPLAY  DC    CL8'DISPLAY '
D        DC    CL2'D '
STOPMN   DC    CL7'STOPMN '
PM       DC    CL3'PM '
MONITOR  DC    CL8'MONITOR '
MN       DC    CL3'MN '
C        DC    CL2'C '
CANCEL   DC    CL7'CANCEL '
COPERAND DC    CL2'U='
SLIP     DC    CL5'SLIP '
SL       DC    CL3'SL '
ATTCHSUB DC    CL8'IKJEFF04'
ATTCHST  DC    CL8'IKJEFF50'
ATTCHOUT DC    CL8'IKJCT469'
ATTCHC   DC    CL8'IKJEFF57'
CMDTABLE DC    CL64'CANCEL DISPLAY MONITOR STOPMN SEND SLIP C D MN PM SC
               E SL '
DSPLYTBL DC    CL76'T TS TS,LIST TS,L R R,LIST R,L JOBS JOBS,LIST JOBS,C
               L J J,LIST J,L SLIP SLIP='
MNTBL    DC    CL39'SESS STATUS JOBNAMES JOBNAMES,T SESS,T '
         DS    CL1
CMDLNG   DC    H'7'
         DC    H'8'
         DC    H'8'
         DC    H'7'
         DC    H'5'
         DC    H'5'
         DC    H'2'
         DC    H'2'
         DC    H'3'
         DC    H'3'
DSPLYLNG DC    H'2'
         DC    H'3'
         DC    H'8'
         DC    H'5'
         DC    H'2'
         DC    H'7'
         DC    H'4'
         DC    H'5'
         DC    H'10'
         DC    H'7'
         DC    H'2'
         DC    H'7'
         DC    H'4'
         DC    H'5'
         DC    H'5'
MNLNG    DC    H'5'
         DC    H'7'
         DC    H'9'
         DC    H'11'
         DC    H'7'
@DATD    DSECT
POSTLST  POST  MF=L                     XMEM POST            @ZA34430
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFF00 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SAVECORE EQU   @02
LNGTH    EQU   @08
LENGTHH  EQU   @04
SUBSCRPT EQU   @05
OFFSET   EQU   @02
SAVSTEAD EQU   @02
INPUTPTR EQU   @09
RTNADDRS EQU   @04
MPLPTR   EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
CVTPTR   EQU   @03
R4       EQU   @04
R5       EQU   @05
R14      EQU   @14
R15      EQU   @15
FIBPTR   EQU   @06
R6       EQU   @06
R7       EQU   @07
SAVED12  EQU   @07
SAVED13  EQU   @08
SAVED11  EQU   @09
DATAPTR  EQU   @11
CODEPTR  EQU   @12
LOCKRTNC EQU   @13
RTNCODE  EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IEAVMNTR EQU   0
STOPERND EQU   0
OPERAND  EQU   0
CMDNAME  EQU   0
STE      EQU   0
STEID    EQU   STE
STENXT   EQU   STE+4
STEFLGS  EQU   STE+8
STEASID  EQU   STE+10
STEUSRID EQU   STE+12
STEECB   EQU   STE+20
STEBUFAD EQU   STE+24
REPLYBUF EQU   0
RECBPTR  EQU   REPLYBUF
WAITECB  EQU   0
ECBCODE  EQU   WAITECB+1
CVTMAP   EQU   0
CVTLINK  EQU   CVTMAP+8
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTCUCB  EQU   CVTMAP+100
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTMSER  EQU   CVTMAP+148
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
UCM2EXT  EQU   0
UCM2STA  EQU   UCM2EXT+8
UCM2SFLG EQU   UCM2STA
UCMPRFX  EQU   0
UCMSAVE0 EQU   UCMPRFX+4
UCMSFLGS EQU   UCMPRFX+84
UCMSFLG1 EQU   UCMSFLGS
UCMSFLG2 EQU   UCMSFLGS+1
UCMXSA   EQU   UCMPRFX+104
UCMSDS1  EQU   UCMPRFX+156
UCM      EQU   0
UCMDECB  EQU   UCM+12
UCMRPYI  EQU   UCM+32
UCMPXB   EQU   UCM+68
UCMMODE  EQU   UCMPXB
UCMVDATA EQU   UCM+72
UCMMNTR  EQU   UCM+208
UCMRSV42 EQU   UCM+300
UCMRSV51 EQU   UCM+301
UCMEIL   EQU   0
UCMRECBA EQU   UCMEIL+24
UCMEXIT  EQU   0
UCMLIST  EQU   0
UCMSTS   EQU   UCMLIST+24
UCMATR   EQU   UCMLIST+25
UCMXA    EQU   UCMLIST+26
UCMAUTH  EQU   UCMLIST+40
UCMAUTHA EQU   UCMAUTH
UCMDISP  EQU   UCMLIST+42
UCMDISP1 EQU   UCMDISP
UCMDISP2 EQU   UCMDISP+1
UCMMSG   EQU   UCMLIST+60
UCMMSG1  EQU   UCMMSG
UCMDEVC  EQU   UCMLIST+63
UCMRCT   EQU   UCMLIST+68
UCMSDS5  EQU   UCMRCT
UCMFEXTA EQU   0
UCMFMGFS EQU   UCMFEXTA+8
UCMFFLG1 EQU   UCMFMGFS
UCMPEXTA EQU   0
UCMPDM1  EQU   UCMPEXTA+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLAG  EQU   TCBPKF
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
MPL      EQU   0
MPLPROC  EQU   MPL
MPLPROC1 EQU   MPLPROC
MPLTERM  EQU   MPLPROC1
MPLSTOP  EQU   MPLPROC1
MPLID    EQU   MPL+2
MPLTYPE  EQU   MPL+4
MPLTYPE1 EQU   MPLTYPE
ASCB     EQU   0
ASCBASID EQU   ASCB+36
ASCBTSB  EQU   ASCB+60
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
TSB      EQU   0
TSBASCBA EQU   TSB
TSBSTAT  EQU   TSBASCBA
TSBFLG1  EQU   TSB+4
TSBFLG2  EQU   TSB+16
TSBFLG3  EQU   TSB+24
TSBFLG5  EQU   TSB+25
TSBTERMC EQU   TSB+26
TSBTERM1 EQU   TSBTERMC
TSBTERM2 EQU   TSBTERMC+1
TSBSTCC  EQU   TSB+34
TSBFLG4  EQU   TSB+41
TSBGETBF EQU   TSBFLG4
TSBRCB   EQU   TSB+64
TSBLINKA EQU   TSBRCB+4
TSBTPOST EQU   TSB+72
TSBTPFLG EQU   TSBTPOST
TSBMINL  EQU   TSB+84
FIBMAINP EQU   0
FIBHIGH  EQU   FIBMAINP
FIBPARMS EQU   0
FIBCPPL  EQU   FIBPARMS
FIBUSER  EQU   FIBPARMS+4
FIBCODE  EQU   FIBPARMS+8
FIBMACRO EQU   FIBPARMS+12
FIBID    EQU   FIBPARMS+20
FIBLEN   EQU   FIBPARMS+22
CALLPARM EQU   0
AOPRND   EQU   CALLPARM
ACMDNAME EQU   CALLPARM+8
ABUFFER  EQU   CALLPARM+12
CNTRLFLG EQU   CALLPARM+16
AUTHCHK  EQU   CNTRLFLG
OFFGETBF EQU   CNTRLFLG
FSTFLG   EQU   CNTRLFLG
TERMID   EQU   CALLPARM+18
FIBPRFIL EQU   0
FIBCHAR  EQU   FIBPRFIL
FIBLINE  EQU   FIBPRFIL+1
FIBPFLAG EQU   FIBPRFIL+2
FIBPATTN EQU   FIBPFLAG
FIBPLINE EQU   FIBPFLAG
FIBPCHAR EQU   FIBPFLAG
FIBUAREA EQU   0
FIBCMPTR EQU   0
FIBCPARM EQU   0
FIBCLEN  EQU   FIBCPARM
FIBCID   EQU   FIBCPARM+2
FIBPSCBU EQU   FIBCPARM+4
FIBPSCBL EQU   FIBCPARM+11
FIBCPPLC EQU   FIBCPARM+12
FIBCPPLU EQU   FIBCPARM+16
FIBCPPLP EQU   FIBCPARM+20
FIBCPPLE EQU   FIBCPARM+24
FIBECTCN EQU   FIBCPARM+28
FIBFLAGS EQU   FIBCPARM+36
FIBECTNO EQU   FIBFLAGS
FIBCUSER EQU   FIBCPARM+40
FIBCMDBF EQU   FIBCPARM+52
ATTCHLST EQU   0
ATPGNADA EQU   ATTCHLST
ATDEFLAG EQU   ATPGNADA
ATDCBADA EQU   ATTCHLST+4
ATECBADR EQU   ATTCHLST+8
ATECBFLG EQU   ATECBADR
ATGSFLDA EQU   ATTCHLST+12
ATGSFLAG EQU   ATGSFLDA
ATSHFLDA EQU   ATTCHLST+16
ATSHFLAG EQU   ATSHFLDA
ATETXRA  EQU   ATTCHLST+20
ATROLL   EQU   ATETXRA
ATINDS2  EQU   ATROLL
ATINDS   EQU   ATTCHLST+27
ATJSCBAD EQU   ATTCHLST+36
ATSTAIAD EQU   ATTCHLST+40
ATSTAIEX EQU   ATTCHLST+44
ATSTAIF  EQU   ATSTAIEX
ATFLAGS1 EQU   ATTCHLST+52
CPPL     EQU   0
CPPLCBUF EQU   CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
CMDLNGTH EQU   0
ECT      EQU   0
ECTPCMD  EQU   ECT+12
ECTSWS   EQU   ECT+28
ECTNOPD  EQU   ECTSWS
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
PSCB     EQU   0
PSCBUSER EQU   PSCB
PSCBUSRL EQU   PSCB+7
PSCBATR1 EQU   PSCB+16
PSCBCTRL EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBCHAR EQU   PSCB+58
PSCBLINE EQU   PSCB+59
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBCSCB EQU   JSCBSEC1+68
JSCBEND1 EQU   IEZJSCB+260
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHPKE    EQU   CHAIN+28
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
BASE     EQU   0
@NM00076 EQU   BASE+13
BALGSTAT EQU   BASE+24
BALOG    EQU   BALGSTAT+4
BASFL    EQU   BASE+36
BARSW    EQU   BASFL
MSLOGST  EQU   BASE+46
BASPBYTE EQU   BASE+47
BAMONITR EQU   BASE+56
BAASCB   EQU   BASE+100
@NM00098 EQU   BASE+104
MSLGCLOZ EQU   BASE+108
MSCLOSSW EQU   MSLGCLOZ
MSLGWLOG EQU   BASE+112
MSWLOGSW EQU   MSLGWLOG
MSLGWTR  EQU   BASE+116
MSWTRSW  EQU   MSLGWTR
MSLGSTRT EQU   BASE+120
MSSTRTSW EQU   MSLGSTRT
MS1BASEX EQU   BASE+136
BASES01  EQU   0
MSNTAL   EQU   BASES01
MSSSB    EQU   BASES01+1
MSBTN    EQU   MSSSB
MSPFG    EQU   BASES01+2
MSECBFL  EQU   BASES01+3
MSTUS    EQU   BASES01+4
MSSSA    EQU   MSTUS
MSINLSW  EQU   MSSSA
MSREOF   EQU   MSSSA
MSNWP    EQU   MSSSA
MSFHF    EQU   BASES01+5
ECB      EQU   0
ECBRB    EQU   ECB
ECBEVTB  EQU   ECBRB
ECBEXTB  EQU   ECBEVTB
ECBCC    EQU   ECBEXTB
ECBPOSTB EQU   ECBCC
ECBCCCNT EQU   ECBEXTB+1
ECBRBA   EQU   ECBCCCNT
ECBEVTBA EQU   ECBRBA
ECBEXTBA EQU   ECBEVTBA
ECBBYTE3 EQU   ECBEXTBA+2
ECBEXTND EQU   ECBBYTE3
RTCT     EQU   0
RTCTSAP  EQU   RTCT+4
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSUP  EQU   RTCT+6
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSAO  EQU   RTCT+8
RTCTSAO1 EQU   RTCTSAO
RTCTSAO2 EQU   RTCTSAO+1
RTCTSUO  EQU   RTCT+10
RTCTSUO1 EQU   RTCTSUO
RTCTSUO2 EQU   RTCTSUO+1
RTCTSDO  EQU   RTCT+12
RTCTSDO1 EQU   RTCTSDO
RTCTSDO2 EQU   RTCTSDO+1
RTCTABD  EQU   RTCT+14
RTCTIDMP EQU   RTCTABD
RTCTSDF  EQU   RTCT+16
RTCTSDF1 EQU   RTCTSDF
RTCTSDF2 EQU   RTCTSDF+1
RTCTSDDS EQU   RTCT+36
RTCTFLG  EQU   RTCTSDDS+3
RTCTRFLG EQU   RTCT+176
RTCTSTE  EQU   RTCT+336
UCMPRFXP EQU   0
UCM2PTR  EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRTMCT EQU   CVTS01+224
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
UCMBASPT EQU   CVTCUCB
UCMIECBA EQU   UCMRECBA+4
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
TSBPTR   EQU   ASCBTSB
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBPSCB EQU   JSCBSEC3+4
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00075 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00071 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00070 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
UCMIECBP EQU   UCMIECBA+1
UCMIECBF EQU   UCMIECBA
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00126 EQU   RTCT+224
RTCTSDWK EQU   RTCT+220
RTCTTDCB EQU   RTCT+184
RTCTXYX2 EQU   RTCT+180
RTCTXXX1 EQU   RTCT+177
@NM00125 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDPL EQU   RTCT+156
RTCTDEV  EQU   RTCTSDDS+8
RTCTDCB  EQU   RTCTSDDS+4
@NM00124 EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTDSUS EQU   RTCTFLG
RTCTDSST EQU   RTCTFLG
RTCTDSNM EQU   RTCTSDDS
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTSDID EQU   RTCT+18
RTCTSDEP EQU   RTCTSDF2
RTCTSDDO EQU   RTCTSDF2
RTCTSDEN EQU   RTCTSDF2
RTCTSDTR EQU   RTCTSDF2
RTCTSDPT EQU   RTCTSDF2
RTCTSDSR EQU   RTCTSDF2
RTCTSDSS EQU   RTCTSDF2
RTCTSDSH EQU   RTCTSDF2
@NM00123 EQU   RTCTSDF1
RTCTSDND EQU   RTCTSDF1
RTCTSDNO EQU   RTCTSDF1
@NM00122 EQU   RTCTABD+1
@NM00121 EQU   RTCTIDMP
RTCTISVC EQU   RTCTIDMP
RTCTISYU EQU   RTCTIDMP
RTCTISAB EQU   RTCTIDMP
@NM00120 EQU   RTCTIDMP
@NM00119 EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTSYDF EQU   RTCTSUO2
RTCTSYDE EQU   RTCTSUO2
RTCTSYDD EQU   RTCTSUO2
RTCTSYDC EQU   RTCTSUO2
RTCTSYDB EQU   RTCTSUO2
RTCTSYDA EQU   RTCTSUO2
RTCTSYD9 EQU   RTCTSUO2
RTCTSYD8 EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTSADF EQU   RTCTSAO2
RTCTSADE EQU   RTCTSAO2
RTCTSADD EQU   RTCTSAO2
RTCTSADC EQU   RTCTSAO2
RTCTSADB EQU   RTCTSAO2
RTCTSADA EQU   RTCTSAO2
RTCTSAD9 EQU   RTCTSAO2
RTCTSAD8 EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTSUDF EQU   RTCTSUP2
RTCTSUDE EQU   RTCTSUP2
RTCTSUDD EQU   RTCTSUP2
RTCTSUDC EQU   RTCTSUP2
RTCTSUDB EQU   RTCTSUP2
RTCTSUDA EQU   RTCTSUP2
RTCTSUD9 EQU   RTCTSUP2
RTCTSUD8 EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSABF EQU   RTCTSAP2
RTCTSABE EQU   RTCTSAP2
RTCTSABD EQU   RTCTSAP2
RTCTSABC EQU   RTCTSAP2
RTCTSABB EQU   RTCTSAP2
RTCTSABA EQU   RTCTSAP2
RTCTSAB9 EQU   RTCTSAP2
RTCTSAB8 EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
ECBEVNT  EQU   ECBEXTND
@NM00118 EQU   ECBEXTND
@NM00117 EQU   ECBBYTE3
@NM00116 EQU   ECBEXTBA
@NM00115 EQU   ECBCC
ECBWAITB EQU   ECBCC
MSSPARE  EQU   BASES01+48
MSUCBAL  EQU   BASES01+44
MSUCBPR  EQU   BASES01+40
MSBOBECB EQU   BASES01+36
MSSJQ    EQU   BASES01+32
MSECB    EQU   BASES01+28
MSPBP    EQU   BASES01+24
MSERM    EQU   BASES01+22
MSPASS   EQU   BASES01+14
MSVRB    EQU   BASES01+6
MSQHR    EQU   MSFHF
@NM00114 EQU   MSFHF
MSPSDT   EQU   MSFHF
MSREPLYB EQU   MSFHF
MSFAX    EQU   MSFHF
MSTTT    EQU   MSFHF
MSCSD    EQU   MSFHF
MSNMF    EQU   MSFHF
MSJNF    EQU   MSSSA
MSYOUT   EQU   MSNWP
MSNRP    EQU   MSSSA
MSSRDR   EQU   MSREOF
MSWRLOG  EQU   MSSSA
MSNUPSW  EQU   MSSSA
MSWRPEN  EQU   MSSSA
MSSSSIPL EQU   MSINLSW
MSSUM    EQU   MSECBFL
MSMCR    EQU   MSECBFL
MSYSOUT  EQU   MSECBFL
MSYSIN   EQU   MSECBFL
MSATTN   EQU   MSECBFL
MSWTL    EQU   MSECBFL
MSWTO    EQU   MSECBFL
MSEXT    EQU   MSECBFL
MSCCS    EQU   MSPFG
MSBSP    EQU   MSPFG
MSSYT    EQU   MSPFG
MSSYN    EQU   MSPFG
MSICR    EQU   MSPFG
MSCMC    EQU   MSPFG
MSPNB    EQU   MSPFG
MSDATE   EQU   MSPFG
@NM00113 EQU   MSBTN
MSTN     EQU   MSBTN
@NM00112 EQU   MSBTN
@NM00111 EQU   MSBTN
MSSO     EQU   MSBTN
MSROLFLG EQU   MSBTN
MSCANFLG EQU   MSBTN
MSCONFLG EQU   MSBTN
MSPNIP   EQU   MSNTAL
MSQNIP   EQU   MSNTAL
MSCURE34 EQU   MSNTAL
@NM00110 EQU   MSNTAL
@NM00109 EQU   MSNTAL
@NM00108 EQU   MSNTAL
@NM00107 EQU   MSNTAL
MSNIP    EQU   MSNTAL
@NM00106 EQU   MS1BASEX+40
@NM00105 EQU   MS1BASEX+20
@NM00104 EQU   MS1BASEX
@NM00103 EQU   BASE+128
MSLGJSCB EQU   BASE+124
@NM00102 EQU   MSSTRTSW
MSSTRTP  EQU   MSSTRTSW
MSSTRTW  EQU   MSSTRTSW
@NM00101 EQU   MSWTRSW
MSWTRP   EQU   MSWTRSW
MSWTRW   EQU   MSWTRSW
@NM00100 EQU   MSWLOGSW
MSWLOGP  EQU   MSWLOGSW
MSWLOGW  EQU   MSWLOGSW
@NM00099 EQU   MSCLOSSW
MSCLOSP  EQU   MSCLOSSW
MSCLOSW  EQU   MSCLOSSW
MSLOGLMT EQU   @NM00098+1
MSLOGCLS EQU   @NM00098
MSSMFPRM EQU   BASE+96
MSCOMMND EQU   BASE+92
BASP12   EQU   BASE+90
BASTCNT  EQU   BASE+88
BASESCT  EQU   BASE+86
BAJNCNT  EQU   BASE+84
BASUBECB EQU   BASE+80
BALOGCOM EQU   BASE+76
BADACNT  EQU   BASE+74
BATACNT  EQU   BASE+72
BAJBNR   EQU   BASE+64
BASP11   EQU   BASE+62
BALCCNT  EQU   BASE+61
BADUMPID EQU   BASE+60
BABCMAX  EQU   BASE+58
BAMONTR2 EQU   BASE+57
@NM00097 EQU   BAMONITR
BAMACTVE EQU   BAMONITR
@NM00096 EQU   BAMONITR
@NM00095 EQU   BAMONITR
@NM00094 EQU   BAMONITR
@NM00093 EQU   BAMONITR
BASPACE  EQU   BAMONITR
BADSN    EQU   BAMONITR
BADSO    EQU   BASE+52
BALOGECB EQU   BASE+48
@NM00092 EQU   BASPBYTE
@NM00091 EQU   BASPBYTE
@NM00090 EQU   BASPBYTE
@NM00089 EQU   BASPBYTE
@NM00088 EQU   BASPBYTE
BAMASCH  EQU   BASPBYTE
BATRACE  EQU   BASPBYTE
BAMSSTAR EQU   BASPBYTE
@NM00087 EQU   MSLOGST
@NM00086 EQU   MSLOGST
MSLOGSTA EQU   MSLOGST
MSLOGIPL EQU   MSLOGST
MSLOGDAR EQU   MSLOGST
MSLOGCOM EQU   MSLOGST
MSLOGTHD EQU   MSLOGST
MSLOGENQ EQU   MSLOGST
BAMIPAR2 EQU   BASE+44
BAMINPAR EQU   BASE+42
BAPKES   EQU   BASE+40
BAICTR   EQU   BASE+38
@NM00085 EQU   BASE+37
BADSET   EQU   BARSW
BANOSET  EQU   BARSW
BAMIDNT  EQU   BARSW
BAHR     EQU   BARSW
BAVU     EQU   BARSW
BAINTSET EQU   BARSW
MSTODWTO EQU   BARSW
BAIN     EQU   BARSW
BACV     EQU   BASE+32
@NM00084 EQU   BALOG
@NM00083 EQU   BALOG
@NM00082 EQU   BALOG
@NM00081 EQU   BALOG
@NM00080 EQU   BALOG
@NM00079 EQU   BALOG
@NM00078 EQU   BALOG
BALOGINT EQU   BALOG
MSLOGSVC EQU   BALGSTAT
BAPRC    EQU   BASE+20
BAQ      EQU   BASE+16
BAIPLCC  EQU   @NM00076+2
@NM00077 EQU   @NM00076
BAIPL    EQU   BASE+12
BALAD    EQU   BASE+8
BATRM    EQU   BASE+4
BACHN    EQU   BASE
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00074 EQU   CHSHORT+84
@NM00073 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00072 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPCOI   EQU   CHPARM
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00069 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00068 EQU   IEZJSCB
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00067 EQU   PSCB+36
@NM00066 EQU   PSCB+32
PSCBSOUT EQU   PSCB+31
PSCBSUBM EQU   PSCB+30
PSCBSUBC EQU   PSCB+29
PSCBSUBH EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00065 EQU   PSCBATR1
@NM00064 EQU   PSCBATR1
PSCBRCVR EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
@NM00063 EQU   ECT+52
@NM00062 EQU   ECT+48
@NM00061 EQU   ECT+44
@NM00060 EQU   ECTSWS2+1
@NM00059 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00058 EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
CMDBUF   EQU   CMDLNGTH
ATTNSHLV EQU   ATTCHLST+56
ATTPLNG  EQU   ATTCHLST+54
ATRSV038 EQU   ATTCHLST+53
ATRSV037 EQU   ATFLAGS1
ATRSV036 EQU   ATFLAGS1
ATRSV035 EQU   ATFLAGS1
ATRSV034 EQU   ATFLAGS1
ATRSV033 EQU   ATFLAGS1
ATRSV032 EQU   ATFLAGS1
ATRSAPF  EQU   ATFLAGS1
ATNSHRSP EQU   ATFLAGS1
ATTASKLB EQU   ATTCHLST+48
ATSTAIXT EQU   ATSTAIEX+1
ATPURGE  EQU   ATSTAIF
ATSYNCH  EQU   ATSTAIF
ATESTAI  EQU   ATSTAIF
ATTERM   EQU   ATSTAIF
ATRSV031 EQU   ATSTAIF
ATRSV030 EQU   ATSTAIF
ATRSV029 EQU   ATSTAIF
ATSTAIA  EQU   ATSTAIAD+1
ATTID    EQU   ATSTAIAD
ATJSCBA  EQU   ATJSCBAD+1
ATLSQA   EQU   ATJSCBAD
ATPRGNM  EQU   ATTCHLST+28
ATMODE   EQU   ATINDS
ATJSTCB  EQU   ATINDS
ATSVAREA EQU   ATINDS
ATSZERO  EQU   ATINDS
ATKEY    EQU   ATINDS
ATJPQ    EQU   ATINDS
ATJSCB   EQU   ATINDS
ATDISP   EQU   ATINDS
ATLPMOD  EQU   ATTCHLST+26
ATDPMOD  EQU   ATTCHLST+24
ATETXRB  EQU   ATETXRA+1
ATRLLOUT EQU   ATINDS2
ATRLABLE EQU   ATINDS2
ATRSV028 EQU   ATINDS2
ATRSV027 EQU   ATINDS2
ATRSV026 EQU   ATINDS2
ATEXTN   EQU   ATINDS2
ATNFPRSA EQU   ATINDS2
ATNTQE   EQU   ATINDS2
ATSHFLDB EQU   ATSHFLDA+1
ATSHARSP EQU   ATSHFLAG
ATRSV025 EQU   ATSHFLAG
ATRSV024 EQU   ATSHFLAG
ATRSV023 EQU   ATSHFLAG
ATRSV022 EQU   ATSHFLAG
ATRSV021 EQU   ATSHFLAG
ATRSV020 EQU   ATSHFLAG
ATRSV019 EQU   ATSHFLAG
ATGSFLDB EQU   ATGSFLDA+1
ATGIVESP EQU   ATGSFLAG
ATRSV018 EQU   ATGSFLAG
ATRSV017 EQU   ATGSFLAG
ATRSV016 EQU   ATGSFLAG
ATRSV015 EQU   ATGSFLAG
ATRSV014 EQU   ATGSFLAG
ATRSV013 EQU   ATGSFLAG
ATRSV012 EQU   ATGSFLAG
ATECBADB EQU   ATECBADR+1
ATTSTAI  EQU   ATECBFLG
ATTSKLB  EQU   ATECBFLG
ATLOGON  EQU   ATECBFLG
ATEXTN2  EQU   ATECBFLG
ATRSV011 EQU   ATECBFLG
ATRSV010 EQU   ATECBFLG
ATRSV009 EQU   ATECBFLG
ATRSV008 EQU   ATECBFLG
ATDCBADB EQU   ATDCBADA+1
ATHARCHY EQU   ATDCBADA
ATPGNADB EQU   ATPGNADA+1
ATRSV007 EQU   ATDEFLAG
ATRSV006 EQU   ATDEFLAG
ATRSV005 EQU   ATDEFLAG
ATRSV004 EQU   ATDEFLAG
ATRSV003 EQU   ATDEFLAG
ATRSV002 EQU   ATDEFLAG
ATRSV001 EQU   ATDEFLAG
ATDENTRY EQU   ATDEFLAG
@NM00057 EQU   FIBCPARM+48
@NM00056 EQU   FIBCPARM+44
@NM00055 EQU   FIBCPARM+38
@NM00054 EQU   FIBPRFIL+3
@NM00053 EQU   CALLPARM+20
@NM00052 EQU   CNTRLFLG
CMDCHK   EQU   CNTRLFLG
LNGOPRND EQU   CALLPARM+4
@NM00051 EQU   FIBPARMS+28
@NM00050 EQU   FIBPARMS+24
TSBEND   EQU   TSB+120
TSBSF1   EQU   TSB+112
TSBTRMID EQU   TSB+104
TSBALTC  EQU   TSB+103
TSBALTR  EQU   TSB+102
TSBPRMC  EQU   TSB+101
TSBPRMR  EQU   TSB+100
TSBEXTNT EQU   TSB+96
TSBPSWD  EQU   TSB+88
TSBLECB  EQU   TSBMINL
TSBLINE  EQU   TSB+82
TSBSTAX  EQU   TSB+81
TSBATTNC EQU   TSB+80
TSBF1V   EQU   TSBTPOST+7
TSBF1M   EQU   TSBTPOST+6
TSBF2V   EQU   TSBTPOST+5
TSBF2M   EQU   TSBTPOST+4
TSBFLAGV EQU   TSBTPOST+3
TSBFLAGM EQU   TSBTPOST+2
@NM00049 EQU   TSBTPOST+1
@NM00048 EQU   TSBTPFLG
@NM00047 EQU   TSBTPFLG
@NM00046 EQU   TSBTPFLG
@NM00045 EQU   TSBTPFLG
TSBNEWID EQU   TSBTPFLG
TSBTPAYI EQU   TSBTPFLG
TSBTPQCB EQU   TSBTPFLG
TSBPOSTO EQU   TSBTPFLG
TSBLINKB EQU   TSBLINKA+1
TSBPRI   EQU   TSBLINKA
TSBRQCB  EQU   TSBRCB
TSBCTCB  EQU   TSB+60
TSBERSDS EQU   TSB+56
TSBAUTOI EQU   TSB+52
TSBAUTOS EQU   TSB+48
TSBATNCC EQU   TSB+44
TSBASRCE EQU   TSB+42
TSBHLDL  EQU   TSBFLG4
TSBCANC  EQU   TSBFLG4
TSBHOLD  EQU   TSBFLG4
TSBHUNG  EQU   TSBFLG4
TSBOWAIT EQU   TSBFLG4
TSBIWAIT EQU   TSBFLG4
TSBOCAB  EQU   TSBFLG4
TSBLNNO  EQU   TSB+40
TSBATNTC EQU   TSB+38
TSBATNLC EQU   TSB+36
TSBCHDCC EQU   TSBSTCC+1
TSBLNDCC EQU   TSBSTCC
TSBWTJID EQU   TSB+32
TSBECB   EQU   TSB+28
TSBC1050 EQU   TSBTERM2
@NM00044 EQU   TSBTERM2
@NM00043 EQU   TSBTERM2
@NM00042 EQU   TSBTERM2
@NM00041 EQU   TSBTERM2
TSBCTWX  EQU   TSBTERM2
@NM00040 EQU   TSBTERM2
@NM00039 EQU   TSBTERM2
@NM00038 EQU   TSBTERM1
@NM00037 EQU   TSBTERM1
@NM00036 EQU   TSBTERM1
TSBC2741 EQU   TSBTERM1
TSBC5041 EQU   TSBTERM1
TSBCATTN EQU   TSBTERM1
TSBCBRK  EQU   TSBTERM1
TSBCIHBN EQU   TSBTERM1
TSBVTAM  EQU   TSBFLG5
TSBKEYS  EQU   TSBFLG5
@NM00035 EQU   TSBFLG5
TSBSPF   EQU   TSBFLG5
TSBATMP  EQU   TSBFLG5
TSBNFLOP EQU   TSBFLG3
TSBNOBRK EQU   TSBFLG3
TSBTPUT  EQU   TSBFLG3
TSBAWOIP EQU   TSBFLG3
TSBNBKSP EQU   TSBFLG3
TSBSPIT  EQU   TSBFLG3
TSBTJMSG EQU   TSBFLG3
TSBATTN  EQU   TSBFLG3
TSBIBFP  EQU   TSB+21
TSBNIBF  EQU   TSB+20
TSBITBFP EQU   TSB+17
TSBSATN2 EQU   TSBFLG2
TSBSATN1 EQU   TSBFLG2
TSBSTAUT EQU   TSBFLG2
TSBAUTOC EQU   TSBFLG2
TSBAULST EQU   TSBFLG2
TSBBRKIN EQU   TSBFLG2
TSBAUTON EQU   TSBFLG2
TSBBIPI  EQU   TSBFLG2
TSBOBFP  EQU   TSB+13
TSBNOBF  EQU   TSB+12
TSBOTBFP EQU   TSB+9
TSBLNSZ  EQU   TSB+8
TSBWTCB  EQU   TSB+5
TSBTJBF  EQU   TSBFLG1
TSBTJIP  EQU   TSBFLG1
TSBTJOW  EQU   TSBFLG1
TSBIFLSH EQU   TSBFLG1
TSBWOWIP EQU   TSBFLG1
TSBOWIP  EQU   TSBFLG1
TSBOFLSH EQU   TSBFLG1
TSBANSR  EQU   TSBFLG1
TSBASCB  EQU   TSBASCBA+1
TSBATNLD EQU   TSBSTAT
TSB3270  EQU   TSBSTAT
TSBDISC  EQU   TSBSTAT
TSBITOFF EQU   TSBSTAT
TSBNOBUF EQU   TSBSTAT
TSBDSPLY EQU   TSBSTAT
TSBLWAIT EQU   TSBSTAT
TSBINUSE EQU   TSBSTAT
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
MPLRSV10 EQU   MPL+6
MPLTYPE2 EQU   MPLTYPE+1
MPLRSV09 EQU   MPLTYPE1
MPLRSV08 EQU   MPLTYPE1
MPLSESS  EQU   MPLTYPE1
MPLRSV07 EQU   MPLTYPE1
MPLRSV06 EQU   MPLTYPE1
MPLRSV05 EQU   MPLTYPE1
MPLSTAT  EQU   MPLTYPE1
MPLJBNM  EQU   MPLTYPE1
MPLPROC2 EQU   MPLPROC+1
MPLRSV04 EQU   MPLPROC1
MPLRSV03 EQU   MPLPROC1
MPLRSV02 EQU   MPLPROC1
MPLRSV01 EQU   MPLPROC1
MPLSTRT  EQU   MPLPROC1
MPLCONS  EQU   MPLPROC1
@NM00010 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00009 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00008 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00007 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
UCMPRSV2 EQU   UCMPEXTA+20
UCMPRSV1 EQU   UCMPDM1+8
UCMPNMCC EQU   UCMPDM1+4
UCMPWQE  EQU   UCMPDM1
UCMPUCMP EQU   UCMPEXTA
UCMFRSV3 EQU   UCMFEXTA+20
UCMF80WQ EQU   UCMFEXTA+18
UCMF60WQ EQU   UCMFEXTA+16
UCMFRSV2 EQU   UCMFMGFS+4
UCMFRSV1 EQU   UCMFMGFS+2
UCMFFLG2 EQU   UCMFMGFS+1
UCMFBR07 EQU   UCMFFLG1
UCMFBR06 EQU   UCMFFLG1
UCMFBR05 EQU   UCMFFLG1
UCMFBR04 EQU   UCMFFLG1
UCMFBR03 EQU   UCMFFLG1
UCMFMSGN EQU   UCMFFLG1
UCMFMSGA EQU   UCMFFLG1
UCMFMSGE EQU   UCMFFLG1
UCMFPPTR EQU   UCMFEXTA+4
UCMFUCMF EQU   UCMFEXTA
UCMRCTA  EQU   UCMRCT+1
UCMRSV31 EQU   UCMSDS5
UCMSDS5G EQU   UCMSDS5
UCMSDS5F EQU   UCMSDS5
UCMRSV30 EQU   UCMSDS5
UCMRSV29 EQU   UCMSDS5
UCMSDS5C EQU   UCMSDS5
UCMSDS5B EQU   UCMSDS5
UCMSDS5A EQU   UCMSDS5
UCMMLAST EQU   UCMLIST+64
UCMVHRSN EQU   UCMDEVC
UCMDEVG  EQU   UCMDEVC
UCMDEVF  EQU   UCMDEVC
UCMDEVE  EQU   UCMDEVC
UCMDEVD  EQU   UCMDEVC
UCMDEVCC EQU   UCMDEVC
UCMDEVB  EQU   UCMDEVC
UCMDEVA  EQU   UCMDEVC
UCMXOR   EQU   UCMLIST+62
UCMMSG2  EQU   UCMMSG+1
UCMRSV27 EQU   UCMMSG1
UCMRSV26 EQU   UCMMSG1
UCMMSGF  EQU   UCMMSG1
UCMMSGE  EQU   UCMMSG1
UCMMSGD  EQU   UCMMSG1
UCMMSGC  EQU   UCMMSG1
UCMMSGB  EQU   UCMMSG1
UCMMSGA  EQU   UCMMSG1
UCMCOMPC EQU   UCMLIST+56
UCMWLAST EQU   UCMLIST+52
UCMOAOEN EQU   UCMLIST+48
UCMALTEN EQU   UCMLIST+44
UCMRV007 EQU   UCMDISP2
UCMRV006 EQU   UCMDISP2
UCMRV005 EQU   UCMDISP2
UCMRV004 EQU   UCMDISP2
UCMRV003 EQU   UCMDISP2
UCMDISPK EQU   UCMDISP2
UCMDISPJ EQU   UCMDISP2
UCMDISPI EQU   UCMDISP2
UCMDISPH EQU   UCMDISP1
UCMDISPG EQU   UCMDISP1
UCMDISPF EQU   UCMDISP1
UCMDISPE EQU   UCMDISP1
UCMDISPD EQU   UCMDISP1
UCMDISPC EQU   UCMDISP1
UCMDISPB EQU   UCMDISP1
UCMDISPA EQU   UCMDISP1
UCMAUTHB EQU   UCMAUTH+1
UCMRSV23 EQU   UCMAUTHA
UCMRSV22 EQU   UCMAUTHA
UCMRSV21 EQU   UCMAUTHA
UCMRSV20 EQU   UCMAUTHA
UCMRSV19 EQU   UCMAUTHA
UCMAUTH3 EQU   UCMAUTHA
UCMAUTH2 EQU   UCMAUTHA
UCMAUTH1 EQU   UCMAUTHA
UCMOUTQ  EQU   UCMLIST+36
UCMRSV18 EQU   UCMLIST+34
UCMRTCD  EQU   UCMLIST+32
UCMXB    EQU   UCMLIST+28
@NM00006 EQU   UCMXA+1
UCMID    EQU   UCMXA
UCMRSV17 EQU   UCMATR
UCMRSV16 EQU   UCMATR
UCMAT04  EQU   UCMATR
UCMLF    EQU   UCMATR
UCMUF    EQU   UCMATR
UCMXF    EQU   UCMATR
UCMIF    EQU   UCMATR
UCMOF    EQU   UCMATR
UCMTC    EQU   UCMSTS
UCMTD    EQU   UCMSTS
UCMTB    EQU   UCMSTS
UCMTA    EQU   UCMSTS
UCMCF    EQU   UCMSTS
UCMBF    EQU   UCMSTS
UCMPF    EQU   UCMSTS
UCMAF    EQU   UCMSTS
UCMNAME  EQU   UCMLIST+16
UCMUCB   EQU   UCMLIST+12
UCMDCB   EQU   UCMLIST+8
UCMSBR   EQU   UCMLIST+4
UCMECB   EQU   UCMLIST
UCMTPSAV EQU   UCMEXIT+208
UCMXTSAV EQU   UCMEXIT+136
UCMDESCD EQU   UCMEXIT+132
UCMROUTC EQU   UCMEXIT+128
UCMMSTXT EQU   UCMEXIT
UCMDECBA EQU   UCMEIL+20
UCMOECBA EQU   UCMEIL+16
UCMAECBA EQU   UCMEIL+12
UCMXECBA EQU   UCMEIL+8
UCMNIPTR EQU   UCMEIL+4
UCMRSV15 EQU   UCMEIL+3
UCMRTCT  EQU   UCMEIL+2
UCMRPYL  EQU   UCMEIL+1
@NM00005 EQU   UCMEIL
UCMRSV60 EQU   UCM+302
UCMRSV59 EQU   UCMRSV51
UCMRSV58 EQU   UCMRSV51
UCMRSV57 EQU   UCMRSV51
UCMRSV56 EQU   UCMRSV51
UCMRSV55 EQU   UCMRSV51
UCMRSV54 EQU   UCMRSV51
UCMRSV53 EQU   UCMRSV51
UCMRSV52 EQU   UCMRSV51
UCMRSV50 EQU   UCMRSV42
UCMRSV49 EQU   UCMRSV42
UCMRSV48 EQU   UCMRSV42
UCMRSV47 EQU   UCMRSV42
UCMRSV46 EQU   UCMRSV42
UCMRSV45 EQU   UCMRSV42
UCMRSV44 EQU   UCMRSV42
UCMRSV43 EQU   UCMRSV42
UCMJES3T EQU   UCM+296
UCMWAKUP EQU   UCM+292
UCMFRRAD EQU   UCM+288
UCMSWCH  EQU   UCM+284
UCMASCB  EQU   UCM+280
UCMWQECP EQU   UCM+276
UCMORECP EQU   UCM+272
UCMOECBT EQU   UCM+268
UCMOECBH EQU   UCM+264
UCMWECBT EQU   UCM+260
UCMWECBH EQU   UCM+256
UCMMBEND EQU   UCM+252
UCMCTID  EQU   UCM+250
UCMRSV61 EQU   UCM+248
UCMRP2AD EQU   UCM+244
UCMCRAAD EQU   UCM+240
UCMWQLM1 EQU   UCM+238
UCMRV001 EQU   UCM+237
UCMRQLM1 EQU   UCM+236
UCMMBPTR EQU   UCM+232
UCMMQNXT EQU   UCM+228
UCMMQEND EQU   UCM+224
UCMMQPTR EQU   UCM+220
UCMTRECB EQU   UCM+216
UCMMNECB EQU   UCM+212
UCMR9SV  EQU   UCM+204
UCMSAVE4 EQU   UCM+140
UCMSAVE3 EQU   UCM+84
UCMVEL   EQU   UCMVDATA+8
UCMVEZ   EQU   UCMVDATA+4
UCMVEA   EQU   UCMVDATA
UCMINCR  EQU   UCM+71
UCMMODEL EQU   UCM+70
UCMCORE  EQU   UCM+69
UCMFIX   EQU   UCMMODE
UCMMCS   EQU   UCMMODE
UCMOGCE  EQU   UCMMODE
UCMAMFA  EQU   UCMMODE
UCMRSV14 EQU   UCMMODE
UCMTPUTA EQU   UCMMODE
UCMNOCON EQU   UCMMODE
UCMRSV11 EQU   UCMMODE
UCMPXA   EQU   UCM+64
UCMWQEND EQU   UCM+60
UCMWQNR  EQU   UCM+58
UCMRQNR  EQU   UCM+56
UCMWQECB EQU   UCM+52
UCMRQECB EQU   UCM+48
UCMWQLM  EQU   UCM+46
UCMRQLM  EQU   UCM+45
@NM00004 EQU   UCMRPYI
UCMRPYQ  EQU   UCM+28
UCMWTOQ  EQU   UCM+24
UCMLSTP  EQU   UCM+20
UCMARECB EQU   UCM+16
UCMLECB  EQU   UCMDECB
UCMOECB  EQU   UCM+8
UCMAECB  EQU   UCM+4
UCMXECB  EQU   UCM
UCMGMCNT EQU   UCMPRFX+158
UCMSDS2  EQU   UCMPRFX+157
UCMRSV09 EQU   UCMSDS1
UCMRSV08 EQU   UCMSDS1
UCMRSV07 EQU   UCMSDS1
UCMRSV06 EQU   UCMSDS1
UCMRSV05 EQU   UCMSDS1
UCMRSV04 EQU   UCMSDS1
UCMSDS1B EQU   UCMSDS1
UCMSDS1A EQU   UCMSDS1
UCMDTINT EQU   UCMPRFX+152
UCMLOGAD EQU   UCMPRFX+148
UCMNPECB EQU   UCMPRFX+144
UCMTPPTR EQU   UCMPRFX+140
UCMDOMRT EQU   UCMPRFX+136
UCMRUTCK EQU   UCMPRFX+132
UCMQRTN  EQU   UCMPRFX+128
UCM6WD   EQU   UCMXSA+20
UCM5WD   EQU   UCMXSA+16
UCM4WD   EQU   UCMXSA+12
UCM3WD   EQU   UCMXSA+8
UCM2WD   EQU   UCMXSA+4
UCM1WD   EQU   UCMXSA
UCMRSV03 EQU   UCMPRFX+102
UCMHRDRT EQU   UCMPRFX+100
UCMUEXIT EQU   UCMPRFX+97
UCMXCT   EQU   UCMPRFX+96
UCMHCUCM EQU   UCMPRFX+92
UCMCMID  EQU   UCMPRFX+88
UCMOWTOR EQU   UCMPRFX+86
UCMRSV02 EQU   UCMSFLG2
UCMSYSO  EQU   UCMSFLG2
UCMSYSN  EQU   UCMSFLG2
UCMSYSM  EQU   UCMSFLG2
UCMSYSL  EQU   UCMSFLG2
UCMSYSK  EQU   UCMSFLG2
UCMSYSJ  EQU   UCMSFLG2
UCMSYSI  EQU   UCMSFLG2
UCMRSV35 EQU   UCMSFLG1
UCMSYSG  EQU   UCMSFLG1
UCMSYSF  EQU   UCMSFLG1
UCMSYSE  EQU   UCMSFLG1
UCMSYSD  EQU   UCMSFLG1
UCMSYSC  EQU   UCMSFLG1
UCMSYSB  EQU   UCMSFLG1
UCMRSV01 EQU   UCMSFLG1
UCMWTOX  EQU   UCMPRFX+80
UCMDOME  EQU   UCMPRFX+76
UCMSVR0  EQU   UCMSAVE0+68
UCMSVQ0  EQU   UCMSAVE0+64
UCMSVP0  EQU   UCMSAVE0+60
UCMSVO0  EQU   UCMSAVE0+56
UCMSVN0  EQU   UCMSAVE0+52
UCMSVM0  EQU   UCMSAVE0+48
UCMSVL0  EQU   UCMSAVE0+44
UCMSVK0  EQU   UCMSAVE0+40
UCMSVJ0  EQU   UCMSAVE0+36
UCMSVI0  EQU   UCMSAVE0+32
UCMSVH0  EQU   UCMSAVE0+28
UCMSVG0  EQU   UCMSAVE0+24
UCMSVF0  EQU   UCMSAVE0+20
UCMSVE0  EQU   UCMSAVE0+16
UCMSVD0  EQU   UCMSAVE0+12
UCMSVC0  EQU   UCMSAVE0+8
UCMSVB0  EQU   UCMSAVE0+4
UCMSVA0  EQU   UCMSAVE0
UCMMCENT EQU   UCMPRFX
UCM2FEXT EQU   UCM2EXT+12
UCM2STAA EQU   UCM2STA+1
UCMRV008 EQU   UCM2SFLG
UCMRSV34 EQU   UCM2SFLG
UCMRSV33 EQU   UCM2SFLG
UCM2WTOI EQU   UCM2SFLG
UCM2DSTR EQU   UCM2SFLG
UCM2DTAK EQU   UCM2SFLG
UCM2SENT EQU   UCM2SFLG
UCM2SDWA EQU   UCM2SFLG
UCM2PST  EQU   UCM2EXT+4
UCM2RID  EQU   UCM2EXT+2
UCM2WID  EQU   UCM2EXT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00003 EQU   CVTFIX+248
@NM00002 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00001 EQU   WAITECB
@NM00128 EQU   STE+9
@NM00127 EQU   STEFLGS
STEATNX  EQU   STEFLGS
@NM00034 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00033 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00032 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00031 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00030 EQU   FLCFSA
@NM00029 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00028 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00027 EQU   FLCIOA
@NM00026 EQU   FLCMCLA+15
@NM00025 EQU   FLCMCLA+14
@NM00024 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00023 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00022 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00021 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00020 EQU   FLCPER
@NM00019 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00018 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00017 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00016 EQU   FLCPIILC
@NM00015 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00014 EQU   FLCSVILC
@NM00013 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00012 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00011 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00312 EQU   CMDVALID
@RT00330 EQU   SVC34
@RT00344 EQU   SVC34
@RT00358 EQU   SVC34
@RT00368 EQU   SVC34
@RF00448 EQU   @RC00425
@ENDDATA EQU   *
         END   IKJEFF00,(C'PLS1316',0701,78251)
