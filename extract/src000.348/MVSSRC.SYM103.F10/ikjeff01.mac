         TITLE 'IKJEFF01 - SUBMIT LEAD MODULE                          *
                        '
IKJEFF01 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFF01  74.121'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   CPPLPTR=R1;                     /* PICK UP POINTER TO CPPL       */
         LR    CPPLPTR,R1                                          0047
*   FIBPARMS=FIBPARMS&&FIBPARMS;    /* ZERO OUT FIB PARAMETER AREA   */
         XC    FIBPARMS(32),FIBPARMS                               0048
*   FIBMACRO=' ';                   /* BLANK ERROR MACRO NAME        */
         MVI   FIBMACRO+1,C' '                                     0049
         MVC   FIBMACRO+2(6),FIBMACRO+1                            0049
         MVI   FIBMACRO,C' '                                       0049
*   FIBCPPL=CPPLPTR;                /* PUT A POINTER TO CPPL IN    0050
*                                      FIBCPPL FIELD                 */
         ST    CPPLPTR,FIBCPPL                                     0050
*   FIBID=FIBSUBMT;                 /* TELL SVC 100 TO ATTACH SUBMIT
*                                      MODULE                        */
         MVC   FIBID(2),@CH00070                                   0051
*   FIBMAINP=ADDR(FIBPARMS);        /* POINTER TO FIB PARAMETER LIST */
         LA    @10,FIBPARMS                                        0052
         ST    @10,FIBMAINP                                        0052
*   FIBHIGH=ON;                     /* STANDARD LINKAGE CONVENTION   */
         OI    FIBHIGH,B'10000000'                                 0053
*   R1=ADDR(FIBMAINP);              /* R1 -> PTR -> FIBPARMS         */
         LA    R1,FIBMAINP                                         0054
*   RFY                                                            0055
*    (R1) UNRSTD;                                                  0055
*   SVC(100);                       /* SVC FOR FIB, PROF AND OPER TSO
*                                      COMMANDS....IKJEFFS0 PL/S   0056
*                                      MACRO                       0056
*                                                                    */
         SVC   100                                                 0056
*   RFY                                                            0057
*     R15 RSTD;                                                    0057
*   RETCODE=R15;                                                   0058
         ST    R15,RETCODE                                         0058
*   RFY                                                            0059
*     R15 UNRSTD;                                                  0059
*                                                                  0059
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK RETURN CODE FROM SVC 100 AND SUBMIT MODULES             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0060
*   IF RETCODE^=RCOK THEN                                          0060
         L     @10,RETCODE                                         0060
         LTR   @10,@10                                             0060
         BZ    @RF00060                                            0060
*BADRC:                             /* LABEL FOR DO/END GROUP        */
*     DO;                                                          0061
BADRC    DS    0H                                                  0062
*       CPECB=0;                    /* ZERO COMMUNICATIONS ECB (USE
*                                      IN MESSAGE AND STACK        0062
*                                      INTERFACE)                    */
         SLR   @10,@10                                             0062
         ST    @10,CPECB                                           0062
*       IF^((RETCODE=RCCALLEE)×(RCABEND^='000000000000'B&RCHIGH=0& 0063
*           RCRETCOD='000000000000'B)) THEN/* CODE TO ISSUE ERROR MSG
*                                      = R.C. 12 MEANS ANOTHER SUBMIT
*                                      MODULE FOUND AN ERROR AND   0063
*                                      ISSUED MESSAGE, RCABEND FIELD
*                                      NONZERO MEANS ABEND OCCURRED
*                                      UNDER SVC 100 TASK STRUCTURE
*                                      AND SVC 100'S ECB WAS POSTED -
*                                      THOUGH CALLER OF IKJEFF01   0063
*                                      SHOULD GET CONTROL IN THIS  0063
*                                      CASE, NOT IKJEFF01 (CHECK FOR
*                                      OTHER FIELDS ZERO ON ABEND TO
*                                      RULE OUT CASE OF VERY HIGH  0063
*                                      RETURN CODE)                  */
         CLC   RETCODE(4),@CF00038                                 0063
         BE    @RF00063                                            0063
         MVC   @TS00001(2),RCABEND                                 0063
         NC    @TS00001(2),@CB00209                                0063
         BZ    @RT00063                                            0063
         CLI   RCHIGH,0                                            0063
         BNE   @RT00063                                            0063
         MVC   @TS00001(2),RCRETCOD                                0063
         NC    @TS00001(2),@CB00211                                0063
         BZ    @RF00063                                            0063
@RT00063 DS    0H                                                  0064
*ERRMSG:                            /* LABEL FOR DO/END GROUP        */
*         DO;                                                      0064
ERRMSG   DS    0H                                                  0065
*           MSGTABLE=MSGTABLE&&MSGTABLE;/* CLEAR MSGPARM AREA        */
         XC    MSGTABLE(64),MSGTABLE                               0065
*           IF RETCODE=FIBNOFIB THEN/* WAS USER UNAUTHORIZED TO USE
*                                      THE FIB COMMANDS              */
         CLC   RETCODE(4),@CF00083                                 0066
         BNE   @RF00066                                            0066
*             MSGID=IDMSGA;         /* ID OF MSG FOR UNAUTHORIZED    */
         MVI   MSGID+3,C' '                                        0067
         MVC   MSGID(3),@CC00042                                   0067
*           ELSE                    /* MACRO ERROR IN SVC100 (OR   0068
*                                      UNEXPECTED RETURN CODE)       */
*             DO;                                                  0068
         B     @RC00066                                            0068
@RF00066 DS    0H                                                  0069
*               IF RETCODE^=FIBBADMC THEN/* PUT THE UNEXPECTED R.C.
*                                      IN MESSAGE 259I - FIBMACRO IS
*                                      BLANK                         */
         L     @10,RETCODE                                         0069
         CH    @10,@CH00085                                        0069
         BE    @RF00069                                            0069
*                 FIBCODE=RETCODE;                                 0070
         ST    @10,FIBCODE                                         0070
*               MSGID=IDMSGB;       /* ID OF MESSAGE TO BE PUT OUT   */
@RF00069 MVI   MSGID+3,C' '                                        0071
         MVC   MSGID(3),@CC00044                                   0071
*               L2=LENGTH(FIBMACRO);                               0072
         MVI   L2,X'08'                                            0072
*               VAR2=ADDR(FIBMACRO);/* PUT ADDRESS OF MACRO NAME IN
*                                      MSGLIST                       */
         LA    @10,FIBMACRO                                        0073
         STCM  @10,7,VAR2                                          0073
*               L3=RCHEX;           /* INDICATE LENGTH OF VARIABLE IS
*                                      FOUR AND NEEDS CONVERSION     */
         MVI   L3,X'84'                                            0074
*               VAR3=ADDR(FIBCODE); /* PICK UP ADDRESS OF THE BAD  0075
*                                      RETURN CODE                   */
         LA    @10,FIBCODE                                         0075
         STCM  @10,7,VAR3                                          0075
*             END;                                                 0076
*                                                                  0076
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE ERROR MESSAGE - 251I OR 259I                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0077
*           L1=CMDNAMEL;                                           0077
@RC00066 L     @10,CPPLCBUF(,CPPLPTR)                              0077
         MVC   L1(1),CMDNAMEL+1(@10)                               0077
*           VAR1=ADDR(CMDNAME);     /* GET COMMAND NAME FROM THE   0078
*                                      COMMAND INPUT BUFFER          */
         LA    @10,CMDNAME(,@10)                                   0078
         STCM  @10,7,VAR1                                          0078
*           MTCPPL=FIBCPPL;         /* PUT CPPL POINTER IN MSGLIST   */
         L     @10,FIBCPPL                                         0079
         ST    @10,MTCPPL                                          0079
*           MTPUTLSW=ON;            /* INDICATES PUTLINE, NOT PUTGET */
         OI    MTPUTLSW,B'01000000'                                0080
*           ECBPTR=ADDR(CPECB);     /* PICK UP ADDR OF COMMUNICATIONS
*                                      ECB                           */
         LA    @10,CPECB                                           0081
         ST    @10,ECBPTR                                          0081
*           LISTPTR=ADDR(MSGCSECT); /* PICK UP POINTER TO MESSAGE  0082
*                                      SECTION OF MSGTABLE           */
         LA    @10,MSGCSECT                                        0082
         ST    @10,LISTPTR                                         0082
*           RFY                                                    0083
*            (R0,                                                  0083
*             R1) RSTD;                                            0083
*           GEN(LOAD EP=IKJEFF03);  /* ONLY LOAD IF NEED ERROR MSG   */
         LOAD EP=IKJEFF03
*           MSGCSECT=R0;            /* SAVE ADDRESS OF MSG CSECT     */
         ST    R0,MSGCSECT                                         0085
*           MTHIGH=ON;              /* FOR STANDARD LINKAGE          */
         OI    MTHIGH,B'10000000'                                  0086
*           R1=ADDR(MSGTABLE);      /* PICK UP ADDR OF MSG PARMS     */
         LA    R1,MSGTABLE                                         0087
*           GEN(LINK EP=IKJEFF02);                                 0088
         LINK EP=IKJEFF02
*           GEN(DELETE EP=IKJEFF03);                               0089
         DELETE EP=IKJEFF03
*           RFY                                                    0090
*            (R0,                                                  0090
*             R1) UNRSTD;                                          0090
*           RETCODE=RCTMPBAD;       /* SET RETURN CODE FOR ERRORS  0091
*                                      DETECTED WITHIN THE MODULE    */
         MVC   RETCODE(4),@CF00038                                 0091
*         END ERRMSG;                                              0092
*                                                                  0092
*       /*************************************************************/
*       /*                                                           */
*       /* FLUSH CLIST STACK IF ANY ERROR FOUND                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0093
*       RFY                                                        0093
*        (STPLPTR) RSTD;            /* RESTRICT R1                   */
@RF00063 DS    0H                                                  0094
*       STPLPTR=ADDR(STPLCORE);     /* PICK UP ADDRESS OF STACK PARAM
*                                      LIST=I/O PARAMETER LIST (IOPL)*/
         LA    STPLPTR,STPLCORE                                    0094
*       STPLUPT=CPPLUPT;            /* PICK UP UPT ADDR OUT OF CPPL  */
         L     @10,CPPLUPT(,CPPLPTR)                               0095
         ST    @10,STPLUPT(,STPLPTR)                               0095
*       STPLECT=CPPLECT;            /* PICK UP ECT ADDR OUT OF CPPL  */
         L     @10,CPPLECT(,CPPLPTR)                               0096
         ST    @10,STPLECT(,STPLPTR)                               0096
*       STPLECB=ADDR(CPECB);        /* PICK UP ADDRESS OF COMM ECB   */
         LA    @10,CPECB                                           0097
         ST    @10,STPLECB(,STPLPTR)                               0097
*       STPLSTPB=ADDR(STPBCORE);    /* POINT TO AREA FOR STACK PARAM
*                                      BLOCK                         */
         LA    @10,STPBCORE                                        0098
         ST    @10,STPLSTPB(,STPLPTR)                              0098
*       STPBCORE=STPBLIST;          /* COPY LIST FORM OF STACK (STPB)
*                                      INTO REENTRANT CORE           */
         MVC   STPBCORE(16),STPBLIST                               0099
*       GENERATE;                                                  0100
            STACK MF=(E,(1))        FLUSH STACK         (DELETE=ALL)
            TCLEARQ INPUT           CLEAR INPUT
*       RFY                                                        0101
*        (STPLPTR) UNRSTD;          /* UNRESTRICT R1                 */
*     END BADRC;                                                   0102
*   RETURN CODE(RETCODE);           /* PASS RETURN CODE BACK TO    0103
*                                      CALLER                        */
@RF00060 L     @10,RETCODE                                         0103
         L     @13,4(,@13)                                         0103
         L     @00,@SIZDATD                                        0103
         LR    @01,@11                                             0103
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0103
         L     @14,12(,@13)                                        0103
         LM    @00,@12,20(@13)                                     0103
         BR    @14                                                 0103
*   END IKJEFF01                                                   0104
*                                                                  0104
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJEFFIB)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJSTPL )                                       */
*/*%INCLUDE SYSLIB  (IKJSTPB )                                       */
*/*%INCLUDE SYSLIB  (IKJEFFS0)                                       */
*                                                                  0104
*       ;                                                          0104
@DATA    DS    0H
@CH00085 DC    H'84'
@CH00070 DC    XL2'0001'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
IKJEFF01 CSECT
         DS    0F
@CF00038 DC    F'12'
@CF00083 DC    F'80'
@DATD    DSECT
         DS    0D
FIBMAINP DS    AL4
         ORG   FIBMAINP
FIBHIGH  DS    BL1
         ORG   FIBMAINP+4
RETCODE  DS    AL4
         ORG   RETCODE
RCHIGH   DS    AL1
RCABEND  DS    BL2
RCRETCOD EQU   RETCODE+2
         ORG   RETCODE+4
CPECB    DS    F
@TS00001 DS    CL2
         DS    CL2
FIBPARMS DS    CL32
         ORG   FIBPARMS
FIBCPPL  DS    AL4
FIBUSER  DS    AL4
FIBCODE  DS    AL4
FIBMACRO DS    CL8
FIBID    DS    FL2
FIBLEN   DS    FL2
@NM00001 DS    AL4
@NM00002 DS    AL4
         ORG   FIBPARMS+32
MSGTABLE DS    CL64
         ORG   MSGTABLE
LISTPTR  DS    AL4
TMCTPTR  DS    AL4
         ORG   TMCTPTR
MTCPPL   DS    AL4
         ORG   MSGTABLE+8
ECBPTR   DS    AL4
@NM00003 DS    AL4
         ORG   @NM00003
MTHIGH   DS    BL1
         ORG   MSGTABLE+16
MSGCSECT DS    AL4
SW       DS    AL1
         ORG   SW
MTNOIDSW DS    BL1
MTPUTLSW EQU   SW+0
MTWTOSW  EQU   SW+0
MTHEXSW  EQU   SW+0
MTKEY1SW EQU   SW+0
MTJOBISW EQU   SW+0
MTWTPSW  EQU   SW+0
MTNHEXSW EQU   SW+0
         ORG   MSGTABLE+21
RETMSG   DS    AL3
SW2      DS    AL1
         ORG   SW2
MT2OLDSW DS    BL1
MTDOMSW  EQU   SW2+0
MTNOXQSW EQU   SW2+0
MTNPLMSW EQU   SW2+0
MTPGMSW  EQU   SW2+0
@NM00004 EQU   SW2+0
         ORG   MSGTABLE+25
@NM00005 DS    AL3
MTOLDPTR DS    AL4
@NM00006 DS    AL4
@NM00007 DS    AL4
MSGID    DS    CL4
MTINSRTS DS    CL16
         ORG   MTINSRTS
L1       DS    AL1
         ORG   L1
HIGHL1   DS    BL1
         ORG   MTINSRTS+1
VAR1     DS    AL3
L2       DS    AL1
         ORG   L2
HIGHL2   DS    BL1
         ORG   MTINSRTS+5
VAR2     DS    AL3
L3       DS    AL1
         ORG   L3
HIGHL3   DS    BL1
         ORG   MTINSRTS+9
VAR3     DS    AL3
L4       DS    AL1
         ORG   L4
HIGHL4   DS    BL1
         ORG   MTINSRTS+13
VAR4     DS    AL3
         ORG   MSGTABLE+60
MSGRTN   DS    AL4
         ORG   MSGTABLE+64
STPLCORE DS    CL16
STPBCORE DS    CL16
IKJEFF01 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00042 DC    C'01A'
@CC00044 DC    C'01B'
@CB00209 DC    B'1111111111110000'
@CB00211 DC    B'0000111111111111'
PATCH    DS    CL36
         ORG   PATCH
PTCHINIT DC    12CL3'ZAP'
         ORG   PATCH+36
IKJEFF01 CSECT
*                                   /* CREATE STPBLIST               */
STPBLIST STACK DELETE=ALL,MF=L         GET NON-REENTRANT CODE
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFF01 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CPPLPTR  EQU   @04
R0       EQU   @00
R1       EQU   @01
R15      EQU   @15
STPLPTR  EQU   @01
RET      EQU   0
CPPL     EQU   0
CPPLCBUF EQU   CPPL
CPPLUPT  EQU   CPPL+4
CPPLECT  EQU   CPPL+12
ECT      EQU   0
ECTSWS   EQU   ECT+28
CMDBUF   EQU   0
CMDNAMEL EQU   CMDBUF+2
CMDNAME  EQU   CMDBUF+4
STPL     EQU   0
STPLUPT  EQU   STPL
STPLECT  EQU   STPL+4
STPLECB  EQU   STPL+8
STPLSTPB EQU   STPL+12
STPB     EQU   0
MSGECB   EQU   0
MSGTMCT  EQU   0
DUMMY    EQU   0
ECTPTR   EQU   CPPLECT
STPBPTR  EQU   STPLSTPB
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
STPBOTDD EQU   STPB+12
STPBINDD EQU   STPB+8
STPBALSD EQU   STPB+4
@NM00011 EQU   STPB
@NM00010 EQU   CMDBUF
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
@NM00009 EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00008 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
CPPLPSCB EQU   CPPL+8
RETCHAR  EQU   RET+2
RETSIZE  EQU   RET
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IKJEFF01,(C'PL/S-II',0503,74121)
