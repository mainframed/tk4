         TITLE 'IKJEFA52 - ACCOUNT / WRITE ROUTINE                     *
                        '
IKJEFA52 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFA52  75.006'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
*          ACIOPTR=REG1;                /* INITIALIZE PTR TO WRITE 0016
*                                          PARAMETER BLOCK           */
         LR    ACIOPTR,REG1                                        0016
*          /* MOVE L-FORMS OF O/S MACROS INTO DYNAMIC STORAGE        */
*          DYNLFORM(1:INLINLNG)=INLINLFM(1:INLINLNG);              0017
         L     @10,INLINLNG                                        0017
         BCTR  @10,0                                               0017
         EX    @10,@SM00168                                        0017
*          RFY DCBREG RSTD;             /* RESTRICT DCB POINTER      */
*          DCBREG=ACIODCBA;             /* POINT TO UADS DCB         */
         SLR   DCBREG,DCBREG                                       0019
         ICM   DCBREG,7,ACIODCBA(ACIOPTR)                          0019
*          /* ESTABLISH A BASE REGISTER FOR DCB MAPPING              */
*          GEN (USING IHADCB,DCBREG)                               0020
*           REFS(DCBREG);                                          0020
         USING IHADCB,DCBREG
*          RETNCODE=0;                  /* PRESUME NO ERRORS TO BEGIN*/
         SLR   @10,@10                                             0021
         LR    RETNCODE,@10                                        0021
*          IF ACIOFL05='0'B             /* INSPECT REQUEST FOR WRITE */
*            THEN                       /* NO WRITE OPERATION REQUIRD*/
         TM    ACIOFL05(ACIOPTR),B'00001000'                       0022
         BZ    @RT00022                                            0022
*              GO TO IKJAFREE;          /* SKIP TO FREEMAIN          */
*          RFY BUFREG RSTD;                                        0024
*          BUFREG=ACIOBUFR;             /* ADDRESS OF OUTPUT BUFFER  */
         SLR   BUFREG,BUFREG                                       0025
         ICM   BUFREG,7,ACIOBUFR(ACIOPTR)                          0025
*          SYNADSAV=DCBSYNAD;           /* SAVE CALLER'S SYNAD ADDR  */
         MVC   SYNADSAV(4),DCBSYNAD                                0026
*          ERRSWTCH='00'X;              /* INIT ERROR SW = 'NO ERROR'*/
         MVI   ERRSWTCH,X'00'                                      0027
*          DCBSYNAD(2:4)=ADDR(IKJASYND);/* SET SYNAD EXIT ADDR       */
         LA    @07,IKJASYND                                        0028
         STCM  @07,7,DCBSYNAD+1                                    0028
*          /* HAS A TTR BEEN OBTAINED (WITH BLDL) FOR THIS MEMBER    */
*          IF ACIOLINK=0                                           0029
*            THEN                       /* THIS IS A NEW MEMBER WRITE*/
         C     @10,ACIOLINK(,ACIOPTR)                              0029
         BNE   @RF00029                                            0029
*              DO;                                                 0030
*                /* FOR A NEW MEMBER WRITE, THE UADS HAS BEEN OPEN'D */
*                /* FOR 'OUTPUT' AND THUS POSITIONING IS NOT REQUIRED*/
*                REG1 = ADDR(WRDECB);   /* POINT TO WRITE DECB       */
         LA    REG1,WRDECB                                         0031
*                I=1;                   /* SET LOOP CONTROL FOR    0032
*                                          WRITE-CHECK LOOP          */
         LA    I,1                                                 0032
*                GO TO IKJAWRIT;        /* ENTER LOOP AFTER 'POINT'  */
         B     IKJAWRIT                                            0033
*              END;                                                0034
*          Z='01'X;                     /* INIT LAST FIELD OF TTR    */
@RF00029 MVI   Z,X'01'                                             0035
*          /* THE FOLLOWING ITERATIVE DO-GROUP EXECUTES A WRITE-CHECK*/
*          /*  SEQUENCE FOR EACH MEMBER BLOCK CONTAINED IN THE       */
*          /* BUFFER.  'ACIONMBR' CONTAINS THE NUMBER OF BLOCKS.     */
*          DO I=1 TO ACIONMBR;                                     0036
         LA    I,1                                                 0036
         B     @DE00036                                            0036
@DL00036 DS    0H                                                  0037
*            TTR=BLDLTTR(I);            /* GET BLDL TTR FOR POINT    */
         LR    @10,I                                               0037
         MH    @10,@CH00079                                        0037
         L     @04,ACIOLINK(,ACIOPTR)                              0037
         ALR   @10,@04                                             0037
         AL    @10,@CF00170                                        0037
         MVC   TTR(3),BLDLTTR-12(@10)                              0037
*            DCBIOBA(2:4)=IOBAD(I)-8;   /* POINT DCB TO IOB IN DECB  */
         LR    @10,I                                               0038
         MH    @10,@CH00087                                        0038
         L     @10,IOBAD-21(@10,@04)                               0038
         LA    @10,0(,@10)                                         0038
         SH    @10,@CH00055                                        0038
         STCM  @10,7,DCBIOBA+1                                     0038
*            GEN (POINT (DCBREG),TTRWORD); /* POINT TO TTR           */
         POINT (DCBREG),TTRWORD
*            REG1 = ADDR(RDDECB(I));    /* POINT TO DECB             */
         LR    @10,I                                               0040
         MH    @10,@CH00087                                        0040
         L     REG1,ACIOLINK(,ACIOPTR)                             0040
         LA    REG1,RDDECB-20(@10,REG1)                            0040
*            /* CTL. ENTERS THE LOOP AT THIS POINT FOR A NEW MEMBER  */
*            /* WRITE.  LOOP CONTROLS HAVE BEEN SET SO THAT CTL. WILL*/
*            /* DROP THROUGH AFTER ONE ITERATION.                    */
*            /* ISSUE BSAM WRITE MACRO TO OUTPUT ONE MEMBER BLOCK    */
*IKJAWRIT:   GEN (WRITE (1),SF,(DCBREG),(BUFREG),,MF=E)            0041
*             REFS(REG1,DCBREG,BUFREG);                            0041
IKJAWRIT WRITE (1),SF,(DCBREG),(BUFREG),,MF=E
*            /* CHECK FOR COMPLETION                                 */
*            GEN (CHECK (1))            /* SYNAD ENTERED IF ERROR    */
*             REFS(REG1) FLOWS(IKJASYND);                          0042
         CHECK (1)
*            /* DID AN I/O ERROR OCCUR                               */
*            IF ERRSWTCH^='00'X         /* SWITCH SET BY SYNAD RTNE  */
*              THEN                     /* AN I/O ERROR OCCURRED     */
         CLI   ERRSWTCH,X'00'                                      0043
         BE    @RF00043                                            0043
*                DO;                    /* DECIDE ON RETURN CODE     */
*                  IF ERRSWTCH='01'X                               0045
*                    THEN               /* SYNAD WORKED OK           */
         CLI   ERRSWTCH,X'01'                                      0045
         BNE   @RF00045                                            0045
*                      RETNCODE=20;     /* CODE = I/O ERROR WITH MSG */
         LA    RETNCODE,20                                         0046
*                    ELSE               /* PUTLINE OR SYNADRLS FAILED*/
*                      RETNCODE=28;     /* CODE = I/O ERROR, NO MSG  */
         B     @RC00045                                            0047
@RF00045 LA    RETNCODE,28                                         0047
*                  GO TO IKJAFREE;      /* GO RELEASE BUFFER STORAGE */
         B     IKJAFREE                                            0048
*                END;                   /* END OF I/O ERROR DO-GROUP */
*            BUFREG=BUFREG+DCBBLKSI;    /* BUMP BUFFER POINTER       */
@RF00043 AH    BUFREG,DCBBLKSI                                     0050
*          END;                         /* LOOP UNTIL COUNTREG HITS 0*/
         AH    I,@CH00032                                          0051
@DE00036 SLR   @10,@10                                             0051
         IC    @10,ACIONMBR(,ACIOPTR)                              0051
         CR    I,@10                                               0051
         BNH   @DL00036                                            0051
*          RFY BUFREG UNRSTD;                                      0052
*IKJAFREE: /* THIS SECTION RELEASES THE MAIN STORAGE USED AS A BUFFER*/
*          /* AND A BLDL CHAIN                                       */
*          DCBSYNAD(2:4)=SYNADSAV(2:4); /* RESTORE SYNAD PTR         */
IKJAFREE MVC   DCBSYNAD+1(3),SYNADSAV+1                            0053
*          /* FIRST,CHECK FOR A NEW MEMBER WRITE                     */
*          IF ACIOLINK=0                                           0054
*            THEN                       /* MUST BE A NEW MEMBER WRITE*/
         L     @10,ACIOLINK(,ACIOPTR)                              0054
         LTR   @10,@10                                             0054
         BNZ   @RF00054                                            0054
*              RETURN CODE(RETNCODE);   /* FREEMAIN UNNECESSARY-LEAVE*/
         L     @13,4(,@13)                                         0055
         L     @00,@SIZDATD                                        0055
         LR    @01,@11                                             0055
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@06                                             0055
         L     @14,12(,@13)                                        0055
         LM    @00,@12,20(@13)                                     0055
         BR    @14                                                 0055
*          FREELVAL=LENGTH(BLDLLIST);   /* GET LENGTH OF BLDLLIST    */
@RF00054 MVC   FREELVAL(4),@CF00164                                0056
*          ANSRPTR=ACIOLINK;            /* ADDRESS OF BUFFER         */
         L     @10,ACIOLINK(,ACIOPTR)                              0057
         ST    @10,ANSRPTR                                         0057
*          /* ISSUE O/S FREEMAIN MACRO TO RELEASE BUFFER             */
*          GEN (FREEMAIN V,A=ANSRPTR,MF=(E,DYNFRLST))              0058
*            REFS(ANSRPTR,DYNFRLST,FREELVAL);                      0058
         FREEMAIN V,A=ANSRPTR,MF=(E,DYNFRLST)
*          ACIOLINK=0;                  /* RESET POINTER TO BLDLLIST */
         SLR   @10,@10                                             0059
         ST    @10,ACIOLINK(,ACIOPTR)                              0059
*          FREELVAL=DCBBLKSI*ACIONMBR;  /* BLKSIZE * NUMBER OF BLKS  */
         LH    @10,DCBBLKSI                                        0060
         SLR   @09,@09                                             0060
         IC    @09,ACIONMBR(,ACIOPTR)                              0060
         MR    @08,@10                                             0060
         ST    @09,FREELVAL                                        0060
*          /* WAS AN EXTRA BLOCK ACQUIRED BY THE READ SUBR ?         */
*          IF ACIOFL04='1'B                                        0061
*            THEN                       /* EXTRA BLOCK PRESENT       */
         TM    ACIOFL04(ACIOPTR),B'00010000'                       0061
         BNO   @RF00061                                            0061
*              FREELVAL=FREELVAL+DCBBLKSI; /* ADD ONE MORE BLK LENGTH*/
         ALR   @09,@10                                             0062
         ST    @09,FREELVAL                                        0062
*          ANSRPTR=ACIOBUFR;            /* ADDRESS OF BUFFER         */
@RF00061 SLR   @10,@10                                             0063
         ICM   @10,7,ACIOBUFR(ACIOPTR)                             0063
         ST    @10,ANSRPTR                                         0063
*          /* ISSUE O/S FREEMAIN MACRO TO RELEASE BUFFER             */
*          GEN (FREEMAIN V,A=ANSRPTR,MF=(E,DYNFRLST))              0064
*            REFS(ANSRPTR,DYNFRLST,FREELVAL);                      0064
         FREEMAIN V,A=ANSRPTR,MF=(E,DYNFRLST)
*          RETURN CODE(RETNCODE);       /* RETURN TO CALLER          */
         L     @13,4(,@13)                                         0065
         L     @00,@SIZDATD                                        0065
         LR    @01,@11                                             0065
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@06                                             0065
         L     @14,12(,@13)                                        0065
         LM    @00,@12,20(@13)                                     0065
         BR    @14                                                 0065
*IKJASYND: /* CTL. RECEIVED HERE FROM SYSTEM IF AN I/O ERROR OCCURRED*/
*          PROC;                                                   0066
@EL00001 L     @13,4(,@13)                                         0066
@EF00001 L     @00,@SIZDATD                                        0066
         LR    @01,@11                                             0066
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0066
         BR    @14                                                 0066
@PB00001 DS    0H                                                  0066
IKJASYND STM   @14,@12,@SA00002                                    0066
*          ERRSWTCH='01'X;              /* SET I/O ERROR SWITCH      */
         MVI   ERRSWTCH,X'01'                                      0067
*          /* OBTAIN SYNAD MESSAGE AND SAVE AREA                     */
*          GEN (SYNADAF ACSMETH=BPAM);                             0068
         SYNADAF ACSMETH=BPAM
*          OUTLNDS=OUTLNDS&&OUTLNDS;    /* CLEAR PARAM AREA FOR PUTLN*/
         XC    OUTLNDS(24),OUTLNDS                                 0069
*          OUT1LINK=ADDR(OUT2LINK);     /* INDICATE TWO LEVEL MESSAGE*/
         LA    @10,OUT2LINK                                        0070
         ST    @10,OUT1LINK                                        0070
*          OUT1SCNT=1;                  /* 1ST LEVEL MSG SEG COUNT =1*/
         LA    @10,1                                               0071
         ST    @10,OUT1SCNT                                        0071
*          IOM1LN=LENGTH(IOM1);         /* LENGTH OF 1ST LEVEL MSG   */
         MVC   IOM1LN(2),@CH00165                                  0072
*          IOM1OF=0;                    /* OFFSET FOR INSERTION N/A  */
         SLR   @07,@07                                             0073
         STH   @07,IOM1OF                                          0073
*          IOM1ID=IOMSGID;              /* SUPPLY MESSAGE ID         */
         MVC   IOM1ID(9),IOMSGID                                   0074
*          IOM1MSGN=ACIOMSGN;           /* PLUG IN CALLER'S MSG NO   */
         MVC   IOM1MSGN(1),ACIOMSGN(ACIOPTR)                       0075
*          IOM1TXT=IOMSG1;              /* TEXT OF 1ST LEVEL MESSAGE */
         MVC   IOM1TXT(36),IOMSG1                                  0076
*          OUT1SEG1=ADDR(IOM1);         /* POINT TO MSG IN LINE DESCR*/
         LA    @04,IOM1                                            0077
         ST    @04,OUT1SEG1                                        0077
*          OUT2SCNT=1;                  /* 2ND LEVEL MSG SEG COUNT =1*/
         ST    @10,OUT2SCNT                                        0078
*          REG1=REG1+20;                /* SET BASE FOR SYNAD INFO   */
         AH    REG1,@CH00087                                       0079
*          IOM2LN=LENGTH(IOM2)          /* 2ND LEVEL LENGTH = CONSTANT
*                                          INFO LENGTH + SYNAD       */
*               +76;                    /* MSG LENGTH (BYTES 50-125) */
         MVC   IOM2LN(2,REG1),@CH00167                             0080
*          IOM2OF=0;                    /* OFFSET FOR INSERTION = N/A*/
         STH   @07,IOM2OF(,REG1)                                   0081
*          IOM2ID=IOM1ID;               /* GET MSG ID FROM 1ST LEVEL */
         MVC   IOM2ID(9,REG1),IOM1ID                               0082
*          IOM2TXT=IOMSG2;              /* FIXED TEXT FOR 2ND LEVEL  */
         MVC   IOM2TXT(17,REG1),IOMSG2                             0083
*          OUT2SEG1=REG1;               /* POINT TO MSG IN LINE DESCR*/
         ST    REG1,OUT2SEG1                                       0084
*          /* PREPARE PARM LIST FOR PUTLINE MACRO                    */
*          IOPLPTR=ADDR(PUTLLIST);      /* SET BASE FOR PARM LIST    */
         LA    IOPLPTR,PUTLLIST                                    0085
*          IOPL=ACIOPUTL->IOPL;         /* 1ST THREE WORDS FROM    0086
*                                          ACCOUNT PARM LIST         */
         SLR   @10,@10                                             0086
         ICM   @10,7,ACIOPUTL(ACIOPTR)                             0086
         MVC   IOPL(16,IOPLPTR),IOPL(@10)                          0086
*          IOPLIOPB=ADDR(DYNPTLST);     /* POINT TO PUTLINE PARN BLK */
         LA    @10,DYNPTLST                                        0087
         ST    @10,IOPLIOPB(,IOPLPTR)                              0087
*          PTPBOPUT=ADDR(OUTLNDS);      /* POINT TO ERROR MSG        */
         L     @10,PTPBPTR(,IOPLPTR)                               0088
         LA    @07,OUTLNDS                                         0088
         ST    @07,PTPBOPUT(,@10)                                  0088
*          /* ISSUE OS/360 PUTLINE MACRO TO WRITE THE MESSAGE        */
*          GEN (PUTLINE ,MF=(E,PUTLLIST))                          0089
*            REFS(OUTLNDS,DYNPTLST);                               0089
         PUTLINE ,MF=(E,PUTLLIST)
*          RFY REG15 RSTD;              /* RESTRICT RETURN CODE REG  */
*          RETNCODE=REG15;              /* SAVE RETURN CODE          */
         LR    RETNCODE,REG15                                      0091
*          IF RETNCODE^=0               /* CHECK RETURN CODE         */
*            THEN                       /* PUTLINE EXCEPTION         */
         LTR   RETNCODE,RETNCODE                                   0092
         BZ    @RF00092                                            0092
*              ERRSWTCH='03'X;          /* UPDATE I/O ERROR SWITCH   */
         MVI   ERRSWTCH,X'03'                                      0093
*          RFY REG15 UNRSTD;                                       0094
@RF00092 DS    0H                                                  0095
*          GEN (SYNADRLS);              /* RETURN SYNAD SAVE AREA    */
         SYNADRLS
*          END IKJASYND;                                           0096
@EL00002 DS    0H                                                  0096
@EF00002 DS    0H                                                  0096
@ER00002 LM    @14,@12,@SA00002                                    0096
         BR    @14                                                 0096
*          END IKJEFA52                                            0097
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        *
*/*%INCLUDE SYSLIB  (IKJPTPB )                                        *
*;                                                                 0097
@DATA    DS    0H
@CH00032 DC    H'1'
@CH00055 DC    H'8'
@CH00079 DC    H'14'
@CH00087 DC    H'20'
@CH00165 DC    H'49'
@CH00167 DC    H'106'
@SM00168 MVC   DYNLFORM(0),INLINLFM
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SAV001  EQU   @SA00001
@SA00002 DS    15F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IKJEFA52 CSECT
         DS    0F
@CF00164 DC    F'344'
@CF00170 DC    F'-2'
@DATD    DSECT
         DS    0D
@NM00018 DS    CL8
         ORG   @NM00018
ANSRPTR  DS    AL4
FREELVAL DS    FL4
         ORG   @NM00018+8
SYNADSAV DS    CL4
         ORG   SYNADSAV
ERRSWTCH DS    CL1
         ORG   SYNADSAV+4
TTRWORD  DS    CL4
         ORG   TTRWORD
TTR      DS    CL3
Z        DS    CL1
         ORG   TTRWORD+4
PUTLLIST DS    CL16
OUTLNDS  DS    CL24
         ORG   OUTLNDS
OUT1LINK DS    AL4
OUT1SCNT DS    FL4
OUT1SEG1 DS    AL4
OUT2LINK DS    AL4
OUT2SCNT DS    FL4
OUT2SEG1 DS    AL4
         ORG   OUTLNDS+24
IOM1     DS    CL49
         ORG   IOM1
IOM1LN   DS    FL2
IOM1OF   DS    FL2
IOM1ID   DS    CL9
         ORG   IOM1ID
@NM00019 DS    CL6
IOM1MSGN DS    CL1
         ORG   IOM1+13
IOM1TXT  DS    CL36
         ORG   IOM1+49
IKJEFA52 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
         DS    0D
IOMSGID  DC    CL9'IKJ565X3I'
IOMSG1   DC    CL36' USER ATTRIBUTE DATA SET NOT USABLE+'
IOMSG2   DC    CL17' I/O SYNAD ERROR '
@DATD    DSECT
IKJEFA52 CSECT
INLINLFM DS    0F
         FREEMAIN V,SP=1,MF=L              LENGTH & ANS PTR SET BY E
         PUTLINE OUTPUT=(0,TERM,MULTLVL,INFOR),MF=L
         WRITE  DECB,SF,,,'S',MF=L
INLINLNG DC    A(*-INLINLFM)
         DCBD  DSORG=PO,DEVD=DA            MAPPING OF BPAM DCB
@DATD    DSECT
DYNLFORM DS    0F
DYNFRLST FREEMAIN V,MF=L                   LENGTH & ANS PTR SET BY E
DYNPTLST PUTLINE ,MF=L                     WILL BE INIT'D FROM INLINPTL
DYNWRLST WRITE  WRDECB,SF,,,'S',MF=L       WILL BE INIT'D FROM INLINPTL
IKJEFA52 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
@DATEND  EQU   *
IKJEFA52 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
I        EQU   @07
RETNCODE EQU   @06
ACIOPTR  EQU   @05
IOPLPTR  EQU   @02
REG1     EQU   @01
DCBREG   EQU   @02
BUFREG   EQU   @03
REG15    EQU   @15
REG0     EQU   @00
IOPL     EQU   0
IOPLIOPB EQU   IOPL+12
PTPB     EQU   0
PTPBOPUT EQU   PTPB+4
ACIOPARM EQU   0
@NM00002 EQU   ACIOPARM
ACIOFL04 EQU   @NM00002
ACIOFL05 EQU   @NM00002
ACIODCBA EQU   ACIOPARM+1
ACIOLINK EQU   ACIOPARM+12
ACIONMBR EQU   ACIOPARM+16
ACIOBUFR EQU   ACIOPARM+17
ACIOMSGN EQU   ACIOPARM+20
ACIOPUTL EQU   ACIOPARM+21
BLDLLIST EQU   0
@NM00012 EQU   BLDLLIST+4
BLDLTTR  EQU   @NM00012+8
RDDECB   EQU   BLDLLIST+144
IOBAD    EQU   RDDECB+17
IOM2     EQU   0
IOM2LN   EQU   IOM2
IOM2OF   EQU   IOM2+2
IOM2ID   EQU   IOM2+4
IOM2TXT  EQU   IOM2+13
PTPBPTR  EQU   IOPLIOPB
*                                      START UNREFERENCED COMPONENTS
@NM00017 EQU   RDDECB
@NM00016 EQU   @NM00012+13
@NM00015 EQU   @NM00012+12
@NM00014 EQU   @NM00012+11
@NM00013 EQU   @NM00012
@NM00011 EQU   BLDLLIST+2
@NM00010 EQU   BLDLLIST
@NM00009 EQU   ACIOPARM+8
@NM00008 EQU   ACIOPARM+4
@NM00007 EQU   @NM00002
@NM00006 EQU   @NM00002
@NM00005 EQU   @NM00002
@NM00004 EQU   @NM00002
@NM00003 EQU   @NM00002
PTPBFLN  EQU   PTPB+8
@NM00001 EQU   PTPB
IOPLECB  EQU   IOPL+8
IOPLECT  EQU   IOPL+4
IOPLUPT  EQU   IOPL
*                                      END UNREFERENCED COMPONENTS
@RT00022 EQU   IKJAFREE
@RC00045 EQU   IKJAFREE
@PB00002 EQU   @EL00001
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IKJEFA52,(C'PL/S-II',0503,75006)
