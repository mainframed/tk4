*        %GOTO IELBSL;    /*
         MACRO
         IEZIEL &EXITS=
         LCLA  &N,&IELDUM
.*  COMPUTE LENGTH OF NEL EXIT LIST
&IELDUM  SETA  N'&EXITS
&IELDUM  SETA  8*&IELDUM
         AIF   (&IELDUM EQ 0).IELSTRT
&IELDUM  SETA  &IELDUM+8
.IELSTRT ANOP
***********************************************************************
*                                                                     *
*              INITIATOR CONTROL INTERFACE                            *
*                                                                     *
*    AOS/2 RELEASE 4, 09/13/74, LEVEL=1                       @Z40RPPJ*
***********************************************************************
         SPACE
***********************************************************************
*                                                                     *
*                 INITIATOR ENTRANCE LIST (IEL)                       *
*                                                                     *
***********************************************************************
IELLIST  DS    0D
         SPACE
IELSSOBA DS    A         ADDRESS OF SSOB HEADER
IELCSCB  DS    A ------- ADDRESS OF CSCB
IELOPLST DS    A ------- ADDRESS OF INITIATOR OPTION LIST
IELRTNA  DS    A         RETURN ADDRESS FOR INITIATOR
IELSTEPL DS    A         ADDR OF INITS STAE EXIT PARM LIST
IELLAST  DS    0A ------ SYMBOL USED TO SET HIGH-ORDER BIT INDICATING
*                        END OF LIST
IELEXIT  DS    A ------- ADDRESS OF INITIATOR EXIT LIST
         SPACE
IELEND   EQU   X'80' -   SYMBOL TO SET HIGH-ORDER BIT OF IELLAST
IELLEND  EQU   *
IELLEN   EQU   IELLEND-IELLIST LENGTH OF IEL
         SPACE
***********************************************************************
*                                                                     *
*                     INITIATOR OPTION LIST                           *
*                                                                     *
***********************************************************************
IELOPTS  DS    0D
         SPACE
IELOPLEN DS    H ------- LENGTH OF OPTION LIST
IELOPSW1 DS    B ------- OPTION SWITCH ONE
IELDPSWA EQU   X'80'     DON'T SHARE SWA OPTION ON ATTACH
IELDWFF  EQU   X'40' --- BYPASS USE OF DEDICATED WORK FILES
IELCANF  EQU   X'08' --- SUPPRESS CANCEL EXCEPT DURING ALLOCATION
IELONEJF EQU   X'04' --- PROCESS ONLY ONE JOB
IELICMDF EQU   X'02' --- INITIATOR TASK INDICATOR
         SPACE
IELOPSW2 DS    B ------- OPTION SWITCH TWO
IELTIMEF EQU   X'80' --- DO NOT TIME STEPS
IELCRF   EQU   X'40' --- DO NOT PROCESS CHECKPOINT/RESTART
IELBPRAC EQU   X'04' --- BYPASS RACINIT                        @Z40RPPJ
IELONORC EQU   X'02' --- BYPASS ALLOCATION RECOVERY
IELOENQU EQU   X'01' --- DO NOT WAIT FOR DATA SETS
         SPACE
IELTSIZ  DS    XL1       SIZE OF MASTER'S TIOT
         SPACE
IELOPSW3 DS    B ------- OPTION SWITCH THREE
IELNSYS  EQU   32        DO NOT ASSIGN SPECIAL PROPERTIES
         SPACE
IELSWAS  DS    XL1       SWA SUBPOOL NO. FOR SUBTASKS
         DS    CL1 ----- RESERVED
IELOPEND EQU   *         END OF OPTIONS LIST
IELOPTLN EQU   IELOPEND-IELOPTS LENGTH OF OPTIONS LIST
         SPACE
***********************************************************************
*                                                                     *
*                        INITIATOR EXIT LIST                          *
*                                                                     *
***********************************************************************
IELEXITS DS    0D
IELEXTLN EQU   &IELDUM - SYMBOLIC LENGTH OF EXIT LIST
***********************************************************************
*   LINKAGE IDENTIFIERS                                               *
***********************************************************************
IELEXNOP EQU   X'00' --- EXIT IS NO-OPED
IELEXADD EQU   X'40' --- BRANCH TO ADDRESS
IELEXLNK EQU   X'80' --- LINK TO NAME
IELEXXTL EQU   X'C0' --- XCTL TO NAME
***********************************************************************
*   EXIT IDENTIFIERS                                                  *
***********************************************************************
IELRTNEX EQU   X'80' --- RETURN EXIT AFTER TERMINATION
IELPREIN EQU   X'40' --- PREINVOCATION EXIT
IELPSTIN EQU   X'20' --- POSTINVOCATION EXIT
IELPRFRE EQU   X'10' --- PRE FREEPART EXIT                      YM00047
***********************************************************************
         SPACE
&N       SETA  1
         AIF   (N'&EXITS EQ 0).GENCON
         SPACE
***********************************************************************
*   EXIT LIST HEADER                                                  *
***********************************************************************
IELXTLEN DS    H ------- LENGTH OF EXIT LIST
IELRTNCD DS    CL1 ----- RETURN CODE
IELRTGD  EQU   X'00' --- GOOD RETURN CODE
IELRTALC EQU   X'04' --- ALLOCATION UNSUCCESSFUL
IELRTJCL EQU   X'04'   JCL ERROR FROM CONVERTER/INTERPRETER
IELRTJBQ EQU   X'08' --- I/O ERROR ON PROCLIB
IELRTDSI EQU   X'0C' --- DATA SET INTEGRITY CANCELLED JOB
IELRTPRI EQU   X'10' --- PRE-INVOCATION EXIT ROUTINE REQUESTED
*                        JOB FLUSH
IELRTPTI EQU   X'14' --- POST-INVOCATION EXIT ROUTINE REQUESTED
*                        JOB FLUSH
IELRTJLB EQU   X'18' --- JOBLIB CANNOT BE OPENED
IELRTSLB EQU   X'1C' --- STEPLIB CANNOT BE OPENED
IELRTFLB EQU   X'20' --- FETCHLIB CANNOT BE OPENED
IELPERR  EQU   X'24'   PROGRAM ERROR
IELRCXT  DS    XL1       CONTAINS RETURN CODE ORIGIN VALUE
* NOTE: THE FOLLOWING RETURN CODE ORIGINS HAVE THE SAME VALUE IN THE
* JSXL
IELCI    EQU   2       CONVERTER,SWA CREATE
IELINIT  EQU   3       INITIATOR
IELSSJS  EQU   4       SUBSYSTEM JOB SELECT
IELSSI   EQU   5       SUBSYSTEM INTERFACE
IELSUBS  EQU   6       SUBSYSTEM
*
IELCOM   DS    A ------- ADDRESS OF COMMUNICATION LIST
***********************************************************************
         SPACE
.NEXT    ANOP
.*  EXIT ENTRY NUMBER &N
         AIF   ('&EXITS(&N)' EQ 'RTN').GENENTY
         AIF   ('&EXITS(&N)' EQ 'PRE').GENENTY
         AIF   ('&EXITS(&N)' EQ 'PST').GENENTY
         AIF   ('&EXITS(&N)' EQ 'PRF').GENENTY                  YM00047
         MNOTE ,'INVALID IEL EXIT SPECIFIED'
         MEXIT
.GENENTY ANOP
***********************************************************************
&EXITS(&N).EXIT  DS    0CL8
&EXITS(&N).EXLK  DS    XL1 ----- LINKAGE DEFINITION
&EXITS(&N).EXID  DS    XL1 ----- EXIT DEFINITION
&EXITS(&N).EXNM  DS    CL6 ----- EXIT NAME
         ORG   *-4
&EXITS(&N).EXAD  DS    A ------- EXIT ADDRESS
***********************************************************************
         SPACE
         AIF   (N'&EXITS EQ &N).GENCON
&N       SETA  &N+1
         AGO   .NEXT
.GENCON  ANOP
         MEND  , */
***********************************************************************
***********************************************************************
*%IELBSL:;
*/*
*  USE OF THIS MAPPING MACRO IN BSL CAN BE FACILITATED BY USING
*     MACRO IEZIELDF WHICH DECLARES THE DEFAULT VALUES FOR THE IEL
*     EXITS.  THE CALLING SEQUENCE FOR IEZIELDF AND IEZIEL IS:
*            % INCLUDE SYSLIB(IEZIELDF),
*       (SPECIFY EXIT LISTS TO BE GENERATED LEAVING OUT REFERENCES TO
*        EXITS WHICH ARE NOT TO BE GENERATED)
*            % RTNEXIT = 'Y',   -  RETURN EXIT
*            % PREEXIT = 'Y',   -  PRE INITIATION EXIT
*            % PSTEXIT = 'Y',   -  POST INITIATION EXIT
*            % PRFEXIT = 'Y',   -  PRE FREEPART EXIT            YM00047
*            % INCLUDE SYSLIB(IEZIEL),
*                                                                    */
*/* **************************************************************** */
*/*                                                                  */
*/*                 INITIATOR CONTROL INTERFACE                      */
*/*                                                                  */
*/*  AOS/2 RELEASE 4, 09/13/74, LEVEL=1                      @Z40RPPJ*/
*/* **************************************************************** */
*   % DCL IELLEN CHAR;    /*LENGTH OF ENTRANCE LIST*/
*   % IELLEN = 'LENGTH(IELLIST)';
* DECLARE
* 1 IEL BASED (IELPTR) BDY(DWORD),
*  2 IELLIST CHAR(24) BDY(DWORD),
*/* **************************************************************** */
*/*                                                                  */
*/*                     INITIATOR ENTRANCE LIST                      */
*/*                                                                  */
*/* **************************************************************** */
*   3 IELSSOBA PTR (31),     /* ADDRESS OF SSOB HEADER*/
*   3 IELCSCB PTR (31),      /* ADDRESS OF START COMMAND CSCB */
*   3 IELOPLST PTR (31),     /*ADDRESS OF INITIATOR OPTION LIST*/
*   3 IELRTNA PTR (31),      /* RETURN ADDRESS FOR INITIATOR*/
*   3 IELSTEPL PTR (31),     /* ADDR OF INITS STAE EXIT PARM LIST*/
*   3 IELEXIT PTR (31),      /*ADDRESS OF INITIATOR EXIT LIST*/
*    4 IELLAST CHAR (1),     /*SYMBOL USED TO SET HIGH ORDER BIT
*                              INDICATING END OF LIST*/
*     5 IELEND BIT (1),      /*HIGH ORDER BIT*/
*     5 * BIT (7);
*/* **************************************************************** */
*/*                                                                  */
*/*                  INITIATOR OPTION LIST                           */
*/*                                                                  */
*/* **************************************************************** */
*   % DCL IELOPTLN CHAR;
*   % IELOPTLN = '8';        /*SYMBOLIC LENGTH OF OPTION LIST*/
* DECLARE
* 1 IELOPTS CHAR (8) BASED (IELOPBAS) BDY (DWORD),
*   3 IELOPLEN FIXED (15),   /*LENGTH OF OPTION LIST*/
*   3 IELOPSW1 CHAR (1),     /*OPTION SWITCH ONE*/
*    4 IELDPSWA BIT (1),     /* DON'T SHARE SWA OPTION ON ATTACH*/
*    4 IELDWFF BIT (1),      /*DO NOT USE DEDICATED WORK FILES*/
*    4 * BIT (1),            /* RESERVED*/
*    4 * BIT (1),            /* RESERVED*/
*    4 IELCANF BIT (1),      /*SUPPRESS CANCEL EXCEPT DURING ALLOCATE*/
*    4 IELONEJF BIT (1),     /*PROCESS ONLY ONE JOB*/
*    4 IELICMDF BIT (1),     /* INITIATOR TASK INDICATOR */
*    4 * BIT (1),            /* RESERVED*/
*
*   3 IELOPSW2 CHAR (1),     /*OPTION SWITCH TWO*/
*    4 IELTIMEF BIT (1),     /*DO NOT TIME STEPS*/
*    4 IELCRF BIT (1),       /*DO NOT PROCESS CHECKPOINT/RESTART*/
*    4 * BIT (1),            /* RESERVED*/
*    4 * BIT (1),            /* RESERVED*/
*    4 * BIT (1),            /* RESERVED*/
*    4 IELBPRAC BIT (1),     /* BYPASS RACINIT               @Z40RPPJ*/
*    4 IELONORC BIT (1),     /*BYPASS ALLOCATION RECOVERY*/
*    4 IELOENQU BIT (1),     /*DO NOT WAIT FOR DATA SETS*/
*
*   3 IELTSIZ PTR (8),       /* SIZE OF MASTER'S TIOT*/
*
*   3 IELOPSW3 CHAR (1),     /*OPTION SWITCH THREE*/
*        4 * BIT (1),        /*RESERVED*/
*        4 * BIT (1),        /*RESERVED*/
*        4 IELNSYS BIT (1),  /*DO NOT ASSIGN SPECIAL PROPERTIES*/
*
*   3 IELSWAS PTR (8),       /*SWA SUBPOOL NO. FOR SUBTASK*/
*   3 * CHAR (1);            /*RESERVED*/
*/* **************************************************************** */
*/*                                                                  */
*/*                  INITIATOR EXIT LIST                             */
*/*                                                                  */
*/* **************************************************************** */
*/* **************************************************************** */
*/*    LINKAGE IDENTIFIERS                                           */
*/* **************************************************************** */
*  % DCL IELEXNOP CHAR;
*  % IELEXNOP = '''00''X';   /*EXIT IS N0-0PED*/
*  % DCL IELEXADD CHAR;
*  % IELEXADD = '''40''X';   /*BRANCH TO ADDRESS*/
*  % DCL IELEXLNK CHAR;
*  % IELEXLNK = '''80''X';   /*LINK TO NAME*/
*  % DCL IELEXXTL CHAR;
*  % IELEXXTL = '''C0''X';   /*XCTL TO NAME*/
*/* **************************************************************** */
*/*    EXIT IDENTIFIERS                                              */
*/* **************************************************************** */
*  % DCL IELRTNEX CHAR;
*  % IELRTNEX = '''80''X';   /*RETURN EXIT AFTER TERMINATION*/
*  % DCL IELPREIN CHAR;
*  % IELPREIN = '''40''X';   /*PREINVOCATION EXIT*/
*  % DCL IELPSTIN CHAR;
*  % IELPSTIN = '''20''X';   /*POST INVOCATION EXIT*/
*  % DCL IELPRFIN CHAR;      /*                              @YM00047*/
*  % IELPRFIN = '''10''X';   /* PRE FREEPART EXIT  @YM00047 */
*/* **************************************************************** */
*  % DCL IELDUM FIXED;
*  % IELDUM=0;
*  % IF RTNEXIT ^= ' ' %THEN % IELDUM = IELDUM + 1;
*  % IF PREEXIT ^= ' ' %THEN % IELDUM = IELDUM + 1;
*  % IF PSTEXIT ^= ' ' %THEN % IELDUM = IELDUM + 1;
*  % IF PRFEXIT ^= ' ' %THEN % IELDUM = IELDUM + 1;  /* @YM00047*/
*  % IELDUM = 8*IELDUM;   /*8 BYTES PER EXIT ENTRY*/
*  % IF IELDUM = 0 % THEN % GO TO ENDIEL; /* IF NO EXITS SPECIFIED,
*                                            DONT ADD HEADER LENGTH*/
*  % IELDUM = IELDUM + 8;    /* ADD HEADER LENGTH */
*/* **************************************************************** */
* DECLARE
* 1 IELEXITS BDY(DWORD) BASED(IELEXBAS),
*  2 IELEXHDR  BDY (WORD),   /*EXIT LIST HEADER*/
*   3 IELXTLEN FIXED (15),   /*EXIT LIST LENGTH*/
*   3 IELRTNCD PTR (8),      /*RETURN CODE*/
*  %DCL IELRTGD CHAR;
*  %IELRTGD='''00''X';       /* GOOD RETURN CODE                     */
*  %DCL IELRTALC CHAR;
*  %IELRTALC='''04''X';      /* ALLOCATION UNSUCCESSFUL              */
* %DCL IELRTJCL CHAR;
* %IELRTJCL='''04''X';        /* JCL ERROR FROM CONVERTER/INTERPRETER*/
*  %DCL IELRTJBQ CHAR;
*  %IELRTJBQ='''08''X';      /* I/O ERROR ON PROCLIB                 */
*  %DCL IELRTDSI CHAR;
*  %IELRTDSI='''0C''X';      /* DATA SET INTEGRITY CANCELLED JOB     */
*  %DCL IELRTPRI CHAR;       /* PRE-INVOCATION EXIT ROUTINE          */
*  %IELRTPRI='''10''X';      /* REQUESTED JOB FLUSH                  */
*  %DCL IELRTPTI CHAR;       /* POST-INVOCATION EXIT ROUTINE         */
*  %IELRTPTI='''14''X';      /* REQUESTED JOB FLUSH                  */
*  %DCL IELRTJLB CHAR;
*  %IELRTJLB='''18''X';      /* JOBLIB CANNOT BE OPENED              */
*  %DCL IELRTSLB CHAR;
*  %IELRTSLB='''1C''X';      /* STEPLIB CANNOT BE OPENED             */
*  %DCL IELRTFLB CHAR;
*  %IELRTFLB='''20''X';      /* FETCHLIB CANNOT BE OPENED            */
*  %DCL IELPERR CHAR;
*  %IELPERR='''24''X';        /* PROGRAM ERROR                       */
* 3 IELRCXT PTR(8),            /* CONTAINS RETURN CODE ORIGIN VALUE */
*/* NOTE: THE FOLLOWING CODE ORIGINS HAVE THE SAME VALUE IN THE JSXL */
* %DCL IELCI CHAR;
* %IELCI='''02''X';            /* CONVERTER SWA CREATE              */
* %DCL IELINIT CHAR;
* %IELINIT='''03''X';          /* INITIATOR                         */
* %DCL IELSSJS CHAR;
* %IELSSJS='''04''X';          /* SUBSYSTEM JOB SELECT              */
* %DCL IELSSI CHAR;
* %IELSSI='''05''X';           /* SUBSYSTEM INTERFACE               */
* %DCL IELSUBS CHAR;
* %IELSUBS='''06''X';          /* SUBSYSTEM                         */
*   3 IELCOM PTR (31),       /*ADDRESS OF COMM LIST                */
*/* **************************************************************** */
*  % IF RTNEXIT = ' ' % THEN % GO TO IELEX1;
*/* **************************************************************** */
*  2 RTNEXT CHAR (8) BDY (WORD)  ,
*   3 RTNEXLK CHAR (1),            /*LINKAGE DEFINITION*/
*   3 RTNEXID CHAR (1),            /*EXIT DEFINITION*/
*   3 RTNEXNM CHAR (6)BDY(WORD,3), /*EXIT NAME*/
*    4 * CHAR (2),
*    4 RTNEXAD PTR (31),           /*EXIT ADDRESS*/
*/* **************************************************************** */
*  % IELEX1:;
*  % IF PREEXIT = ' ' % THEN % GO TO IELEX2;
*/* **************************************************************** */
*  2 PREEXT CHAR (8) BDY (WORD),
*   3 PREEXLK CHAR (1),            /*LINKAGE DEFINITION*/
*   3 PREEXID CHAR (1),            /*EXIT DEFINITION*/
*   3 PREEXNM CHAR (6)BDY(WORD,3), /*EXIT NAME*/
*    4 * CHAR (2),
*    4 PREEXAD PTR (31),           /*EXIT ADDRESS*/
*/* **************************************************************** */
*  % IELEX2:;
*  % IF PSTEXIT = ' ' % THEN % GO TO IELEX3;
*/* **************************************************************** */
*  2 PSTEXT CHAR (8) BDY (WORD),
*   3 PSTEXLK CHAR (1),            /*LINKAGE DEFINITION*/
*   3 PSTEXID CHAR (1),            /*EXIT DEFINITION*/
*   3 PSTEXNM CHAR (6)BDY(WORD,3), /*EXIT NAME*/
*    4 * CHAR (2),
*    4 PSTEXAD PTR (31),           /*EXIT ADDRESS*/
*/* **************************************************************** */
*  % IELEX3:;
*  % IF PRFEXIT = ' ' % THEN % GO TO IELEX4;  /* @YM00047 */
*/* ***************************************************************  */
*  2  PRFEXT CHAR(8) BDY (WORD),    /* @YM00047*/
*        3 PRFEXLK CHAR(1),  /* LINKAGE DEFINITION @YM00047*/
*        3 PRFEXID CHAR(1),  /* EXIT DEFINITION @YM00047*/
*        3 PRFEXNM CHAR(6),  /* EXIT NAME @YM00047*/
*          4 * CHAR(2),      /* @YM00047*/
*          4 PRFEXAD PTR(31), /* EXIT ADDRESS @YM00047*/
*/* **************************************************************** */
* % IELEX4:;    /* @YM00047*/
*         10 * CHAR(1);
*  % ENDIEL:;
