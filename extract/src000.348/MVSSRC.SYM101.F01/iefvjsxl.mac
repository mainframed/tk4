*%       GOTO JSXLPLS;
* /*******************************************************************/
* /*                                                                 */
* /* MACRO NAME = IEFVJSXL                                           */
* /*                                                                 */
* /* STATUS --                                                       */
* /*    OS/VS2 RELEASE 2, MODIFICATION LEVEL 00                      */
* /*                                                                 */
* /* FUNCTION --                                                     */
* /*    DEFINE THE JOB SCHEDULING EXIT LIST (JSXL) WHICH SPECIFIES   */
* /*    OPTIONAL EXITS TO BE GIVEN CONTROL DURING JOB SCHEDULING     */
* /*    SUBROUTINE PROCESSING                                        */
* /*                                                                 */
* /* ENTRY POINTS --                                                 */
* /*         NONE                                                    */
* /*                                                                 */
* /* INPUT --                                                        */
* /*    NONE                                                         */
* /*                                                                 */
* /* OUTPUT --                                                       */
* /*    DATA CONSTANTS (ASSEMBLER) OR DECLARATIONS (PLS) DEFINING    */
* /*    THE JSXL                                                     */
* /*                                                                 */
* /* EXTERNAL REFERENCES --                                          */
* /*         NONE                                                    */
* /*                                                                 */
* /* EXITS, NORMAL --                                                */
* /*         NONE                                                    */
* /*                                                                 */
* /* EXITS, ERROR --                                                 */
* /*         NONE                                                    */
* /*                                                                 */
* /* TABLE/WORK AREAS --                                             */
* /*         NONE                                                    */
* /*                                                                 */
* /* ATTRIBUTES --                                                   */
* /*         NOT APPLICABLE                                          */
* /*                                                                 */
* /* NOTES --                                                        */
* /*    NONE                                                         */
* /*                                                                 */
* /*******************************************************************/
         MACRO
&NAME    IEFVJSXL &PREFIX,&COMM /*
         LCLA  &A,&B,&C,&D,&LENJSXL
         LCLB  &POST,&PRINI,&PTINI,&PRFRE                       YM00047
         LCLC  &P,&PL,&LINKAGE,&ROUTINE,&F1,&F2,&F3,&F4,&F5,&F6,&F7,&F8
         LCLC  &G1,&G2,&G3,&G4,&G5,&G6,&G7,&G8,&COMMUN
&NAME    DS    0D                 ALIGN JSXL
&LENJSXL SETA  8*N'&SYSLIST-8     COMPUTE LENGTH OF THIS JSXL
&P       SETC  'JSX'              ASSUME STANDARD PREFIX FOR LABELS
         AIF   (T'&PREFIX EQ 'O').JSX0010  TEST FOR SUPPLIED PREFIX
&P       SETC  '&PREFIX'          USE SUPPLIED PREFIX IF PRESENT
.JSX0010 ANOP
&PL      SETC  '&P.L'             SET EXTENDED PREFIX
&PL.BEGN EQU   *                                                 Y02939
&PL      DS    CL&LENJSXL         JOB SCHEDULING EXIT LIST (JSXL)
         ORG   &PL
&PL.LGTH DC    AL2(&PL.SIZE)      LENGTH
&PL.RCOD DC    AL1(0)             RETURN CODE
&PL.RNRM    EQU  X'00'               NORMAL COMPLETION
&PL.RAUT    EQU  X'04'               UNAUTHORIZED COMBINATION OF       *
                                     PROGRAMS REFERENCED
&PL.PERR EQU   36                 PROGRAM ERROR                  Y02668
&PL.RCXT DC    AL1(0)             ORIGIN OF RETURN CODE          Y02668
*                                 IN JSXLRCOD                    Y02668
*  RETURN CODE ORIGIN VALUES (JSXLRCXT)                          Y02668
*    SAME ORIGIN VALUES ARE DEFINED IN THE IEL MAPPING           Y02668
&PL.JSS  EQU   0                  JOB SCHEDULING SUBROUTINE      Y02668
&PL.RI   EQU   2                  CONVERTER/SWA CREATE           Y02668
&PL.INIT EQU   3                  INITIATOR
&PL.SSJS EQU   4                  SUBSYSTEM JOB SELECT           Y02668
&PL.SSI  EQU   5                  SUBSYSTEM INTERFACE            Y02668
&PL.SUBS EQU   6                  SUBSYSTEM                      Y02668
*        EQU   7-255              RESERVED                       Y02668
&COMMUN  SETC  '0'                ASSUME STANDARD VALUE FOR            *
                                  COMMUNICATIONS POINTER
         AIF  (T'&COMM EQ 'O').JSX0020 TEST FOR SUPPLIED COMMUNICATIONS*
                             POINTER
&COMMUN  SETC '&COMM'   USE SUPPLIED COMMUNICATIONS POINTER IF PRESENT
.JSX0020 ANOP
&PL.COMM DC   A(&COMMUN)     COMMUNICATIONS POINTER BETWEEN EXIT       *
                             ROUTINES
&PL.LDEF DS   1D             FIRST ELEMENT IN ARRAY OF EXIT DEFINITIONS
         ORG  &PL.LDEF
&PL.LINK DS   XL1            LINKAGE INFORMATION
&P.LNK   EQU  X'80'          CODE FOR LINKAGE TO NAME
&P.XCTL  EQU  X'C0'          CODE FOR XCTL TO NAME
&P.BR    EQU  X'40'          CODE FOR BRANCH TO ADDRESS
&P.NULL  EQU  X'00'          CODE FOR NO EXIT SPECIFICATION
&PL.ID   DS   XL1            EXIT IDENTIFICATION
&P.POST  EQU  X'80'          CODE FOR JOB SCHEDULING ROUTINE           *
                             POST-PROCESSING EXIT ROUTINE
&P.PRINI EQU  X'40'          CODE FOR INITIATOR PRE-INVOCATION EXIT    *
                             ROUTINE
&P.PTINI EQU  X'20'          CODE FOR INITIATOR POST-INVOCATION EXIT   *
                             ROUTINE
&P.PRFRE EQU  X'10'          INITIATOR PRE-FREEPART EXIT        YM00047
*        EQU  X'08'          RESERVED                            Y02939
*        EQU  X'04'          RESERVED. MUST BE ZERO TO ASSURE
*                            COMPATIBILITY WITH FUTURE EXTENSIONS
*                            TO THE EXIT LIST FACILITY.
*        EQU  X'02'          RESERVED. MUST BE ZERO TO ASSURE
*                            COMPATIBILITY WITH FUTURE EXTENSIONS
*                            TO THE EXIT LIST FACILITY.
*        EQU  X'01'          RESERVED. MUST BE ZERO TO ASSURE
*                            COMPATIBILITY WITH FUTURE EXTENSIONS
*                            TO THE EXIT LIST FACILITY.
&PL.DATA DS   CL6
.**********************************************************************
.*       GENERATE AN INITIALIZED EXIT LIST IMAGE IF REQUESTED         *
.**********************************************************************
         ORG  &PL.LDEF
         AIF  (N'&SYSLIST LT 3).J30 BY-PASS INITIALIZATION IF NOT      *
                        REQUESTED
&A       SETA 3         START SCAN AT THE THIRD POSITIONAL OPERAND
&C       SETA 1         START WITH THE FIRST POSITIONAL SUBOPERAND
.J1      ANOP
&LINKAGE SETC '&P.NULL' ASSUME NO LINKAGE HAS BEEN SPECIFIED
&B       SETA 3
&D       SETA 1
.*  MACRO VARIABLES USED TO GENERATE BYTE FOR EXIT TYPE
&F1      SETC ''
&F2      SETC ''
&F3      SETC ''
&F4      SETC ''
&F5      SETC ''
&F6      SETC ''
&F7      SETC ''
&F8      SETC ''
&G1      SETC ''
&G2      SETC ''
&G3      SETC ''
&G4      SETC ''
&G5      SETC ''
&G6      SETC ''
&G7      SETC ''
&G8      SETC ''
.*
.*  -IF A JSXL EXIT HAS BEEN SPECIFIED, DETERMINE
.*   THE TYPE OF EXIT LINKAGE.
.*  -GENERATE THE EXIT LINKAGE BYTE
.*
         AIF  (N'&SYSLIST(&A) LT 1).J6
         AIF  ('&SYSLIST(&A,1)' NE '').J2
         AGO  .J6
.J2      AIF  ('&SYSLIST(&A,1)' NE 'CALL').J3
&LINKAGE SETC '&P.BR'
         AGO  .J6
.J3      AIF  ('&SYSLIST(&A,1)' NE 'LINK').J4
&LINKAGE SETC '&P.LNK'
         AGO  .J6
.J4      AIF  ('&SYSLIST(&A,1)' NE 'XCTL').J5
&LINKAGE SETC '&P.XCTL'
         AGO  .J6
.J5      MNOTE *,'INVALID LINKAGE FOR EXIT(&C) IN LIST'
.J6      ANOP
&P.X&C   DC   AL1(&LINKAGE)       SPECIFY EXIT LINKAGE
.*
.*  -DETERMINE WHICH EXIT TYPE HAS BEEN SPECIFIED.
.*  -GENERATE EXIT TYPE BYTE.
.*
.J7      AIF  (N'&SYSLIST(&A) LT &B).J25
         AIF  ('&SYSLIST(&A,&B)' EQ '').J25
         AIF  ('&SYSLIST(&A,&B)' NE 'POST').J9
         AIF  (&POST EQ 0).J8
         MNOTE *,'POST-PROCESSING EXIT SPECIFIED BEFORE -- PROBABLE ERR*
               OR'
.J8      ANOP
&POST    SETB 1
&F1      SETC '+'
&G1      SETC '&P.POST'
         AGO  .J24
.J9      AIF  ('&SYSLIST(&A,&B)' NE 'PRINI').J11
         AIF  (&PRINI EQ 0).J10
         MNOTE *,'PRE-INVOCATION EXIT SPECIFIED BEFORE -- PROBABLE ERRO*
               R'
.J10     ANOP
&PRINI   SETB 1
&F2      SETC '+'
&G2      SETC '&P.PRINI'
         AGO  .J24
.J11     AIF  ('&SYSLIST(&A,&B)' NE 'PTINI').J13
         AIF  (&PTINI EQ 0).J12
         MNOTE *,'POST-INVOCATION EXIT SPECIFIED BEFORE -- PROBABLE ERR*
               OR'
.J12     ANOP
&PTINI   SETB 1
&F3      SETC '+'
&G3      SETC '&P.PTINI'
         AGO  .J24
.J13     ANOP                                                   YM00047
         AIF   ('&SYSLIST(&A,&B)' NE 'PRFRE').J17               YM00047
         AIF   (&PRFRE EQ 0).J14                                YM00047
         MNOTE *,'PRE-FREEPART EXIT SPECIFIED BEFORE -- PROBABLE ERROR'
.J14     ANOP                                                   YM00047
&PRFRE   SETB  1                                                YM00047
&F4      SETC  '+'                                              YM00047
&G4      SETC  '&P.PRFRE'                                       YM00047
         AGO   .J24                                             YM00047
.J17     ANOP                                                     M0759
.J23     MNOTE *,'EXIT CODE(&D) INVALID FOR EXIT(&C) IN LIST'
.J24     ANOP
&B       SETA &B+1
&D       SETA &D+1
         AGO  .J7
.J25     DC   AL1(0&F1&G1&F2&G2&F3&G3&F4&G4&F5&G5&F6&G6&F7&G7&F8&G8)   *
                             SPECIFY EXIT CODE
         AIF  ('&LINKAGE' NE '&P.NULL' AND                             *
               '&LINKAGE' NE '&P.BR').J27
&ROUTINE SETC '0'
         AIF  (N'&SYSLIST(&A) LT 2).J26
         AIF  ('&SYSLIST(&A,2)' EQ '').J26
&ROUTINE SETC '&SYSLIST(&A,2)'
.J26     DC   XL2'0000'
         DC   A(&ROUTINE)    ADDRESS OF EXIT ROUTINE
         AGO  .J29
.J27     ANOP
&ROUTINE SETC ''
         AIF  (N'&SYSLIST(&A) LT 2).J28
&ROUTINE SETC '&SYSLIST(&A,2)'
.J28     DC   CL6'&ROUTINE ' NAME OF EXIT ROUTINE
.J29     ANOP
&A       SETA &A+1
&C       SETA &C+1
         AIF  (&A LE N'&SYSLIST).J1
.J30     ANOP
&PL.SIZE EQU   *-&PL.BEGN         JSXL SIZE                      Y02939
         MEND
**/ %    JSXLPLS: ;
* /********************************************************************
*         DEFINE THE JOB SCHEDULING EXIT LIST
* ********************************************************************/
* DECLARE
* 1       JSXL BASED(JSXLPTR) BOUNDARY(WORD),
*      2     JSXLHDR,
*         3     JSXLLGTH FIXED(15),  /* LENGTH OF JSXL               */
*         3     JSXLRCOD POINTER(8), /* RETURN CODE                  */
*%     DECLARE
*      JSXLRNRM FIXED,
*      JSXLRAUT FIXED,
*      JSXLPERR FIXED;            /*                           Y02668*/
*%     JSXLRNRM = 0;              /* NORMAL COMPLETION               */
*%     JSXLRAUT = 4;              /* UNAUTHORIZED COMBINATION OF
*                                    PROGRAMS REFERENCED             */
*%     JSXLPERR = 36;             /* PROGRAM ERROR             Y02668*/
*         3     JSXLRCXT PTR(8),  /*ORIGIN OF RETURN CODE IN JSXLRCOD*/
*         3     JSXLCOMM PTR(32), /*EXIT ROUTINES COMMUNICATION AREA */
*         /***********************************************************/
*       2     JSXLLDEF(256),         /* ARRAY OF EXIT DEFINITIONS    */
*               /******************************************************
*                 DEFINITION OF LINKAGE TO BE USED - THE FOLLOWING
*                 VALUES MAY BE USED IN JSXLLINK:
*                   JSXNULL - NO EXIT SPECIFICATION
*                   JSXBR   - BRANCH TO ADDRESS
*                   JSXLNK  - LINK TO NAME
*                   JSXXCTL - XCTL TO NAME
*               ******************************************************/
*               3  JSXLLINK PTR(8),   /* METHOD OF EXIT              */
*               3  JSXLID BIT(8),     /* EXIT IDENTIFIER             */
*                  4  JSXPOST BIT(1), /* POST-PROCESSING EXIT  Y02939*/
*                  4  JSXPRINI BIT(1),/* PRE-INVOCATION EXIT   Y02939*/
*                  4  JSXPTINI BIT(1),/* POST-INVOCATION EXIT  Y02939*/
*                  4  JSXPRFRE BIT(1),/* PRE-FREEPART EXIT   @YM00047*/
*                  4  * BIT(4),       /* RESERVED              Y02939*/
*               /******************************************************
*                  LINKAGE DATA -- THE FOLLOWING VALUES MAY BE USED IN
*                  JSXLDATA:
*                  1. IF THE SPECIFIED LINKAGE IS 'LINK' OR 'XCTL',
*                     THEN THE 6-BYTE EBCDIC NAME OF THE ROUTINE TO BE
*                     GIVEN CONTROL SHOULD BE PLACED IN THIS FIELD,
*                     LEFT-JUSTIFIED AND PADDED WITH BLANKS IF
*                     NECESSARY.
*                  2. IF THE SPECIFIED LINKAGE IS A 'BRANCH', THEN THE
*                     ADDRESS OF THE ROUTINE TO RECEIVE CONTROL SHOULD
*                     BE PLACED IN THIS FIELD, AND THE HIGH-ORDER
*                     BYTES OF THIS FIELD SHOULD BE SET TO HEXIDECIMAL
*                     ZEROS.
*               ******************************************************/
*               3  JSXLDATA CHARACTER(6);
*%        DECLARE   /* JSXLLINK CODE INDICATING XCTL LINKAGE */
*         JSXXCTL FIXED;
*%        JSXXCTL = 192;
*%        DECLARE  /* JSXLLINK CODE INDICATING LINK LINKAGE */
*         JSXLNK FIXED;
*%        JSXLNK = 128;
*%        DECLARE  /* JSXLLINK CODE INDICATING CALL LINKAGE */
*         JSXBR FIXED;
*%        JSXBR = 64;
*%        DECLARE  /* JSXLLINK CODE INDICATING NO LINKAGE */
*         JSXNULL FIXED;
*%        JSXNULL = 0;
*%; /*  RETURN CODE ORIGIN VALUES (JSXLRCXT)                   Y02668*/
*%; /*    SAME ORIGIN VALUES ARE DEFINED IN THE IEL MAPPING    Y02668*/
*%  DCL  JSXLJSS  FIXED;          /* JOB SCHEDULING SUBROUTINE Y02668*/
*%       JSXLJSS  = 0;
*%  DCL  JSXLRI   FIXED;          /* CONVERTER/SWA CREATE      Y02668*/
*%       JSXLRI   = 2;
*%  DCL  JSXLINIT FIXED;          /* INITIATOR                 Y02668*/
*%       JSXLINIT = 3;
*%  DCL  JSXLSSJS FIXED;          /* SUBSYSTEM JOB SELECT      Y02668*/
*%       JSXLSSJS = 4;            /*                           Y02668*/
*%  DCL  JSXLSSI  FIXED;          /* SUBSYSTEM INTERFACE       Y02668*/
*%       JSXLSSI  = 5;            /*                           Y02668*/
*%  DCL  JSXLSUBS FIXED;          /* SUBSYSTEM                 Y02668*/
*%       JSXLSUBS = 6;            /*                           Y02668*/
