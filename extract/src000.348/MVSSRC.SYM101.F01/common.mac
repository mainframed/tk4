*
*        %GOTO COM1;               /*
         MACRO
         COMMON  &MF=E
         GBLB  &BALMOD             DEFINE GLOBAL SWITCH          Y02006
&BALMOD  SETB  1               INDICATE BAL MODULE ISSUED COMMON Y02006
         AIF   ('&MF' EQ 'E').GEND
         AIF   ('&MF' EQ 'L').GENC
         MNOTE 12,'INVALID MACRO FORMAT'
         MEXIT
.GEND    ANOP
COMMON   DSECT
         AGO   .GEN
.GENC    ANOP
AMDPRCOM CSECT                                                   Y01980
COMMON   EQU   AMDPRCOM .                                        Y01980
.GEN     ANOP
         SPACE 1                                                     */
*%COM1 : ;
*
*/********************************************************************/
*/*                                                                  */
*/*      AMDPRDMP COMMON AREA MACRO                                  */
*/*      OS/VS2 RELEASE 2  -- LEVEL 001                              */
*/*                                                                  */
*/*      THIS MACRO DEFINES CONSTANTS AND POINTERS COMMON TO ALL     */
*/*      PRDMP ROUTINES                                              */
*/*                                                                  */
*/*      TO USE THIS MACRO TO OBTAIN A DSECT OF THE AMDPRDMP COMMON  */
*/*      AREA IN A BAL MODULE, CODE:                                 */
*/*            COMMON                                                */
*/*      ISSUE A USING ON COMMON IN ORDER TO REFERENCE THE AREAS     */
*/*      DEFINED IN THE DSECT.                                       */
*/*                                                                  */
*/*      TO USE THIS MACRO TO DEFINE THE COMMON AREA,CODE:           */
*/*            COMMON  MF=L                                          */
*/*      ONLY MODULE AMDPRCOM SHOULD USE THE MACRO IN THIS MANNER.   */
*/*                                                                  */
*/*      TO USE THIS MACRO IN A PLS2 MODULE,CODE:                    */
*/*            % INCLUDE SYSLIB(COMMON)                              */
*/*      SINCE THIS IS A BASED STRUCTURE, A RESPECIFY STATEMENT IS   */
*/*      ALSO REQUIRED PRIOR TO REFERENCING FIELDS DEFINED HEREIN    */
*/*      IN ORDER TO PROVIDE A POINTER VALUE FOR LOCATING THE DATA.  */
*/*                                                                  */
*/*C024000,053500,116000,144000                                Y02006*/
*/*A001100-001200,086000-086480,146000-340443                  Y02006*/
*/*D013500,014500-015500,017000-017500,020000,021000-023000    Y02006*/
*/*D024000-024500,026000-031500,034000-039000,045000-046000    Y02006*/
*/*D052000-053000,056000,057500,097500,101000-102500,115500    Y02006*/
*/*D120000,124500-127000,136500,137500-140500,141500-143000    Y02006*/
*/*D144500-149600,150000                                       Y02006*/
*/*                                                                  */
*/********************************************************************/
*
*%GOTO COM2;                       /*
         SPACE
* * * * * * * *  COMMON MACRO DEL IS D82   * * * * * * * * * *
ERRADDR  DC    F'0'                ERROR ROUTINE ADDRESS
VERBGN   DC    F'0'
VERBEND  DC    F'0'
KYWDBGN  DC    F'0'
KYWDEND  DC    F'0'
DELIMCD  DC    F'0'
WORK1    DC    D'0'
NUCTOP   DC    F'250000'
SIX      DC    F'6'
LINECNT  DC    F'1'
PAGENUMB DC    F'0'
CURBUF   DC    F'0'
TCBLIST  DC    F'0'
CVTADDR  DC    F'0'
PCBPTR   DC    F'0'
STORSIZE DC    F'0'                      AVAILABLE STORAGE SIZE  Y02006
INDD     DC    CL8'TAPE'
FILESEQ  DC    H'0' .                                            X01980
RDENTRY  DC    F'0'
READNO   DC    F'0'
RDERCNT  DC    F'0'
READTM   DC    F'0'
ONEA     DC    H'1'
TWO      DC    H'2'
THREE    DC    H'3'
FOUR     DC    H'4'
FIVE     DC    H'5'
SEVEN    DC    H'7'
EIGHT    DC    H'8'
HTEN     DC    H'10'
ELEVEN   DC    H'11'
TWELVE   DC    H'12'
SIXTEEN  DC    H'16'
LNCNT    EQU   58
LINENUMB DC    AL2(LNCNT)
LINENUM  DC    AL2(LNCNT-2)
SWA      DC    X'00'
SWB      DC    X'00'
SWC      DC    X'00'
SWD      DC    X'00'
SWE      DC    X'00'
SWF      DC    X'00'         ALWAYS RESET ON NEWDUMP OR NEWTAPE  Y01980
BUFSW    DC    X'00'
PRSW     DC    X'00'
         DC    CL3' '                                            Y02006
WTORMSG  DC    CL81' '
BLANKS   DC    CL8' '
TITLE    DC    C'TITLE'
STOP     DC    C'STOP'
MSG1     DC    C'AMD161I FORMAT ERROR      '                     Y01980
MSG2     DC    C'AMD158I I/O ERROR ON DUMP '                     Y01980
TITLEMSG DC    CL64' '
TITLEMOD DC    CL15'MODULE' .      MODULE ISSUING DUMP
         DC    CL2' '
TITLEDTE DC    CL13'DATE'
         DC    CL2' '
TITLETME DC    CL13'TIME'
         DC    CL2' '
TITLEPGE DC    CL9'PAGE'
CAPTABL  DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
TABLE    DC    64C'.'
         DC    C' '
         DC    128C'.'
         DC    C'ABCDEFGHI'
         DC    7C'.'
         DC    C'JKLMNOPQR'
         DC    8C'.'
         DC    C'STUVWXYZ'
         DC    6C'.'
         DC    C'0123456789'
         DC    6C'.'
         ORG   *-193
HEXTABL  EQU   *
         ORG   *+193
         DC    X'FAFBFCFDFEFF'
         ORG   *+41
         DC    C'0123456789'
         ORG   *-240
EBCTABL  EQU   *
         ORG   *+240
         DC    C'0123456789ABCDEF'
BLNK     DC    64X'00'
         DC    X'0C'               BLANK
         DC    12X'00'
         DC    X'10'               LEFT PAREN
         DC    15X'00'
         DC    X'14'               RIGHT PAREN
         DC    13X'00'
         DC    X'04'               COMMA
         DC    18X'00'
         DC    X'08'               EQUAL SIGN
         DC    129X'00'
NONBLNK  DC    193X'00'                                          Y02006
         DC    9C'*'                                             Y02006
         DC    7X'00'                                            Y02006
         DC    9C'*'                                             Y02006
         DC    8X'00'                                            Y02006
         DC    8C'*'                                             Y02006
         DC    6X'00'                                            Y02006
         DC    10C'*'                                            Y02006
         DC    6X'00'                                            Y02006
***********************************************************************
*                                                                     *
*   COMMON A TYPE ADDRESS CONSTANTS                                   *
*                                                                     *
***********************************************************************
         SPACE
         AIF   ('&MF' EQ 'E').GENDS
AWRITE   DC    A(AMDPRWTR)         ADDRESS OF ROUTINE FOR OUTPUT
APRTMSG  DC    A(AMDPRMSG)         ADDR OF MESSAGE ON SYSPRINT RTN
ASYNTAX  DC    A(AMDPRSYN)         ADDR OF SYNTAX ERROR ROUTINE
AFMTLINE DC    A(AMDPRGFR)         ADDR OF LINE FORMAT ROUTINE
AADRCNVT DC    A(ADRCNVT)          ADDR OF 3 BYTE CONVERT ROUTINE
AWRDCNVT DC    A(WRDCNVT)          ADDR OF 4 BYTE CONVERT ROUTINE
         AGO   .NOGENDS
.GENDS   ANOP
AWRITE   DS    A                   ADRESS OF ROUTINE FOR OUTPUT
APRTMSG  DS    A                   ADDR OF MESSAGE ON SYSPRINT RTN
ASYNTAX  DS    A                   ADDR OF SYNTAX ERROR ROUTINE
AFMTLINE DS    A                   ADDR OF LINE FORMAT ROUTINE
AADRCNVT DS    A                   ADDR OF 3 BYTE CONVERT ROUTINE
AWRDCNVT DS    A                   ADDR OF 4 BYTE CONVERT ROUTINE
.NOGENDS ANOP
ARGNBND  DS    A                   ADDRESS OF REGION BOUNDARY ROUTINE
STOPEXIT DS    A .                 ADDR STOP EXIT ROUTINE
SYNMSGA  DS    A                   ADDR OF SYNTAX ERROR MSG ARRAY
AEREXIT  DC    V(AMDPRXIT) .       ADDR OF ERROR EXIT ROUTINE
ALOADER  DC    V(AMDPRSEG)         ADDR SEGMENT LOAD ROUTINE
QATMERTN DC    V(TODCNVRT) .       ADDR OF TOD CLOCK CONVERT RTN Y01980
         AIF   ('&MF' EQ 'E').GENDS1
ATCBSAVE DC    A(AMDPRTSV) .       ADDR OF TCB SAVE ROUTINE
ATCBREMV DC    A(TCBREMV) .        ADDRESS OF ROUTINE FOR REMOVING TCBS
ATCBRTRV DC    A(TCBRTRV) .        ADDR OF TCB RETRIEVE ROUTINE
         AGO   .NGENDS1
.GENDS1  ANOP
ATCBSAVE DS    A .                 ADDR OF TCB SAVE ROUTINE
ATCBREMV DS    A .                 ADDRESS OF ROUTINE FOR REMOVING TCBS
ATCBRTRV DS    A .                 ADDR OF TCB RETRIEVE ROUTINE
.NGENDS1 ANOP
APCBENQ  DS    A                   PCB Q MGMT.
         AIF   ('&MF' EQ 'E').GENDS2
ASTPROUT DC    A(AMDPRSTP) .       ADDR OF THE STOP ROUTINE
         AGO   .NGENDS2
.GENDS2  ANOP
ASTPROUT DS    A .                 ADDR OF THE STOP ROUTINE
.NGENDS2 ANOP
AFORMAT  DS    A                   ADDR OF ROUTINE THAT CONTROLS THE
*                                  FORMATTING OF THE CONTROL BLOCKS
APRTSTG  DS    A                   ADDR OF PRINT STORAGE SERVICE
*                                  ROUTINE
BUFSUM   DC    F'0' .              TOTAL NUMBER OF BUFFERS FOR THIS
*                                  EXECUTION
BUFREINT DC    F'0' .              NUMBER OF TIMES BUFFERS WERE
*                                  INITIALIZED
AERRMSGA DC    A(MSG1)             ERROR MESSAGE ARRAY - MESSAGE
         DC    A(MSG2)             TEXT IS DEFINE IN COMMON CONSTANTS
*                                  ABOVE
AEND     DC    V(AMDPREND)
ONGOPTR  DS    A .                 POINTER TO ONGO OPERAND
ATCBSMFR DS    A                   SUMMARY TABLE FREE ROUTINE
ATCBSMRY DS    A                   SUMMARY TABLE PRINT ROUTINE
DCBADDRS DS    0F
AOUTDCB  DC    A(0) .              ADDR OF OUTPUT DCB (PRINTER)   M0732
APTRDCB  DC    A(0) .              ADDR OF MESSAGE DCB            M0732
*                                  (SYSPRINT)                     M0732
ARDRDCB  DC    A(0) .              ADDR OF CNTRL CARD INPUT DCB   M0732
*                                  (SYSIN)                        M0732
AINDCB   DC    A(0) .              ADDR OF DUMP TAPE INPUT DCB    M0732
*                                  (TAPE)                         M0732
         DC    AL1(X'80') .        END OF LIST INDICATOR          M1634
ASYSUDCB DC    AL3(0) .            ADDR OF UTILITY DA DCB         M1634
*                                  (SYSUT1 OR 2)                  M1634
*****************************************************************S21014
*                                                                S21014
*  AMDPRCOM CHANGES FOR GTF                                      S21014
*                                                                S21014
*****************************************************************S21014
         SPACE
TRCCOUNT DC    F'0' .              COUNT OF ENTRIES TO AMDPRGET  S21014
AEDITCB  DC    A(0) .              ADDRESS OF EDIT COMMUNICATION S21014
*                                  AREA - AMDPRTAB               S21014
AROOT    DC    A(0) .              ADDRESS OF AMDPRTAB INIT RTN. S21014
EDITER   DC    X'02' .             VALUE OF ER PARAMETER OF      S21014
*                                  EXECUTE CARD                  S21014
***********************************************************************
***        ADDITIONS FOR  X01980/Y01980  SUPPORT                    ***
***********************************************************************
         SPACE
REALMAP  DC    F'0' .              POINTER TO REAL DUMP MAP      X01980
SEGTABOR DC    F'0' .              SEGMENT TABLE ORIGIN          X01980
REALMAX  DC    X'00FFFFFF'         TOP OF REAL STORAGE         @OZ00404
         DC    F'0' .              SPARE WORD                    Y02006
QAPFT    DC    A(0) .              ADDRESS OF PFT IN DUMP        Y01980
***********************************************************************
***        ADDITIONS FOR Y02006 SUPPORT                             ***
***********************************************************************
         SPACE
QASID    DC    H'0' .              ASID OF IPLED'ED CPU          Y02006
IPLCPU   DC    H'0' .              ADDRESS OF IPL'ED CPU         Y02006
*                                  CONTAINS 256 IF THE IPL'ED    Y02006
*                                  CPU STATUS WAS UNAVAILABLE -  Y02006
*                                  I.E. AN I/O ERROR OCCURRED    Y02006
*                                  WHEN THE CPU STATUS RECORD    Y02006
*                                  WAS BEING READ                Y02006
CURASCB  DC    F'0' .              ADDRESS OF CURRENT ASCB IN    Y02006
*                                  DUMPED SYSTEM                 Y02006
PREFXRGR DC    F'0' .              REAL ADDRESS IN PSA PREFIX    Y02006
*                                  REGISTER (SADMP INPUT ONLY)   Y02006
PREFXRGV DC    F'0' .              VIRTUAL ADDRESS IN PSA PREFIX Y02006
*                                  REGISTER (SADMP INPUT ONLY)   Y02006
ASVTADDR DC    F'0' .              ADDRESS OF ASVT IN DUMPED     Y02006
*                                  SYSTEM                        Y02006
SACSWCAW DC    3F'0' .             CSW (FIRST 8 BYTES) AND CAW   Y02006
*                                  (LAST 4 BYTES) FROM AMDSADMP  Y02006
*                                  HEADER RECORD                 Y02006
HDRREGS  DC    42F'0' .            REGISTERS AND CURRENT PSW     Y02006
*                                  FROM SVCDUMP OR DSS HEADER    Y02006
HDRTITLE DC    100C' ' .           TITLE FROM HEADER RECORD      Y02006
         DC    A(0) .              SPARE WORD                    Y02006
ASIDNDX  DC    A(0) .              POINTER TO ASID INDEX         Y02006
CPUMAP   DC    A(0) .              POINTER TO CPU STATUS RECORD  Y02006
*                                  MAPS                          Y02006
ASCBMAP  DC    A(0) .              POINTER TO ASCB MAP THAT IS   Y02006
*                                  CREATED BY AMDPRRDC           Y02006
BUFERMAP DC    A(0) .              ADDRESS OF FIRST PHYSICAL     Y02006
*                                  BUFFER MAP ENTRY IN RDC       Y02006
BRRDDATA DC    V(AMDPRRDD) .       ADDRESS OF AMDPRRDC READ DATA Y02006
*                                  ROUTINE                       Y02006
BRRDINIT DC    V(AMDPRRDC) .       ADDRESS OF BRREAD INIT        Y02006
*                                  ROUTINE                       Y02006
BRRDADJ  DC    V(AMDPRRDA) .       ADDRESS OF BRREAD ADJUST      Y02006
*                                  ROUTINE                       Y02006
AASCBFMT DC    A(0) .              ADDRESS OF AMDPRFAR           Y02006
ASRBFMT  DC    A(0) .              ADDRESS OF AMDPRSRB           Y02006
AUSRINIT DC    V(AMDPRUIM) .       ADDRESS OF USER INTERFACE MODULE
*                                  INITIALIZATION ROUTINE        Y02006
AUSREXIT DC    V(AMDUSRXT) .       MAIN ENTRY POINT TO AMDPRUIM  Y02006
AUSRDEL  DC    V(AMDUSRDL) .       ENTRY POINT FOR AMDPRUIM      Y02006
*                                  CLEAN-UP                      Y02006
AUSRTCBA DC    F'0' .              ADDR OF TCB CURRENTLY BEING   Y02006
*                                  PROCESSED BY FSR              Y02006
AUSRASID DC    H'0' .              ASID OF MEMORY CURRENTLY      Y02006
*                                  BEING PROCESSED BY FSR OR FAR Y02006
EXITFLAG DC    X'00' .             FLAGS INDICATING ACTION       Y02006
*                                  AMDPRUIM IS TO PERFORM        Y02006
RBMAX    DC    H'50' .             LOOP CONTROL VALUE            Y02006
PQEMAX   DC    H'50' .                                           Y02006
LLEMAX   DC    H'255' .                                          Y02006
JPQMAX   DC    H'256' .                                          Y02006
DEBMAX   DC    H'200' .                                          Y02006
DDMAX    DC    H'1635' .                                         Y02006
SRBMAX   DC    H'50' .                                           Y02006
TCBMAX   DC    H'256' .                                        @ZA00413
ASCBMAX  DC    H'200' .                                          Y02006
DQEMAX   DC    H'50' .                                           Y02006
XLMAX    DC    F'25' .                                           Y02006
DNUCTOP  DC    AL4(X'00200000') .  DEFAULT NUCTOP VALUE          Y02006
LPAMAX   DC    F'500' .            LOOP CONTROL VALUE            Y02006
DFLTCSA  DC    AL4(X'00B00000') .  DEFAULT CSA ADDRESS           Y02006
TOPICHDR DC    CL10' ' .           OPTIONAL PAGE HEADER          Y02006
CSADDR   DC    F'0'                CSA ADDRESS                   Y02006
I3800SW  DC    X'00'     SWITCHES FOR 3800 SUPPORT CODE        @Z40MI3F
TITLEKEY DC    CL16'STORAGE KEY     ' MSG IN PGE TITLE DURING  @Z40MI3F
*                                     CONDENSED DUMPING ONLY   @Z40MI3F
Z9SVCBUF DS    F'0'          ADDR OF SVC BUFFER MAP          OZ09006
Z9SUBITS DC    XL15'00'      SU BIT STRING                   OZ09006
Z9SUFLG  DC    XL1'00'       SU FLAG BYTE                    OZ09006
Z9ERRID  DS    CL12                 STORED FROM SVC DUMP        UZ81700
         EJECT
         MEND                                                        */
*%COM2 : ;
*
*DECLARE
*  1 COMMON BASED,
*   2 ERRADDR PTR(31) BDY(WORD),       /* ERROR ROUTINE ADDRESS      */
*   2 VERBGN PTR(31),                  /* BEGINNING ADDRESS OF VERB  */
*   2 VERBEND PTR(31),                 /* ENDING ADDRESS OF VERB     */
*   2 KYWDBGN PTR(31),                 /* BEGINNING ADDR OF KEYWORD  */
*   2 KYWDEND PTR(31),                 /* ENDING ADDRESS OF KEYWORD  */
*   2 DELIMCD FIXED(31),               /* CODE INDICATING TYPE OF
*                                         DELIMITER ENCOUNTERED DURING
*                                         CONTROL STATEMENT SCAN     */
*   2 WORK1 CHAR(8) BDY(DWORD),        /* DOUBLEWORD WORK AREA       */
*   2 NUCTOP FIXED(31),                /* TOP OF NUCLEUS             */
*   2 SIX FIXED(31),                   /* CONSTANT 6                 */
*   2 LINECNT FIXED(31),               /* CURRENT LINE NUMBER,USED TO
*                                         DETERMINE WHEN A NEW PAGE IS
*                                         NEEDED                     */
*   2 PAGENUMB FIXED(31),              /* CURRENT PAGE NUMBER        */
*   2 CURBUF PTR(31),                  /* ADDRESS OF CURRENT OUTPUT
*                                         BUFFER - SUPPLIED BY
*                                         AMDPRWTR                   */
*   2 TCBLIST PTR(31),                 /* ORIGIN OF TCB LIST         */
*   2 CVTADDR FIXED(31),               /* ADDRESS OF CVT IN DUMPED
*                                         SYSTEM                     */
*   2 PCBPTR PTR(31),                  /* ORIGIN OF PCB QUEUE        */
*   2 STORSIZE FIXED(31),              /* AVAILABLE STORAGE SIZE     */
*   2 INDD CHAR(8),                    /* DDNAME ON INPUT DATA SET
*                                         DD STATEMENT - DEFAULT VALUE
*                                         IS 'TAPE'                  */
*   2 FILESEQ FIXED(15),               /* VALUE OF FILESEQ PARAMETER
*                                         ON NEWDUMP CONTROL STMT    */
*   2 * CHAR(2),                       /* UNUSED FIELD               */
*   2 RDENTRY FIXED(31),               /* COUNT OF DATA ENTRIES TO
*                                         AMDPRRDC                   */
*   2 READNO FIXED(31),                /* NUMBER OF BLOCKS READ      */
*   2 RDERCNT FIXED(31),               /* NUMBER OF I/O ERRORS WHILE
*                                         ATTEMPTING TO READ SYSUT1 OR
*                                         DUMP DATA SET              */
*   2 READTM FIXED(31),                /* NUMBER OF TIMES REQUESTED
*                                         DATA WAS NOT IN A BUFFER   */
*   2 ONEA FIXED(15),                  /* CONSTANT: 1                */
*   2 TWO FIXED(15),                   /* CONSTANT: 2                */
*   2 THREE FIXED(15),                 /* CONSTANT: 3                */
*   2 FOUR FIXED(15),                  /* CONSTANT: 4                */
*   2 FIVE FIXED(15),                  /* CONSTANT: 5                */
*   2 SEVEN FIXED(15),                 /* CONSTANT: 7                */
*   2 EIGHT FIXED(15),                 /* CONSTANT: 8                */
*   2 HTEN FIXED(15),                  /* CONSTANT: 10               */
*   2 ELEVEN FIXED(15),                /* CONSTANT: 11               */
*   2 TWELVE FIXED(15),                /* CONSTANT: 12               */
*   2 SIXTEEN FIXED(15),               /* CONSTANT: 16               */
*   2 LINENUMB FIXED(15),              /* VALUE OF LINECNT PARAMETER
*                                         IN PARM FIELD OF EXEC
*                                         STATEMENT OR DEFAULT OF 58 */
*   2 LINENUM FIXED(15),               /* VALUE OF LINECNT PARAMETER
*                                         MINUS 2                    */
*   2 SWA CHAR(1),                     /* SWITCHES                   */
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*    3 GOSW BIT(1),                    /* GO CONTROL STATEMENT
*                                         PROCESSING IN PROGRESS     */
*    3 * BIT(1),
*    3 SETCVTSW BIT(1),                /* CVTADDR FIELD HAS BEEN FILLED
*                                         BY CVT= CONTROL STATEMENT  */
*    3 RDRSW BIT(1),                   /* CONTROL STATEMENTS COMING
*                                         FROM SYSIN DATA SET IF =1  */
*   2 SWB CHAR(1),
*    3 IOERR BIT(1),                   /* I/O ERROR WHILE READING FROM
*                                         SYSUT1 OR DUMP DATA SET    */
*    3 FMTERR BIT(1),                  /* REQUESTED INFORMATION NOT IN
*                                         DUMP DATA SET              */
*    3 * BIT(1),
*    3 * BIT(1),
*    3 ENDSW BIT(1),                   /* END CONTROL STATEMENT BEING
*                                         PROCESSED                  */
*    3 QSYSUT2 BIT(1),                 /* IF =1, SYSUT2 EXISTS       */
*    3 * BIT(1),
*    3 * BIT(1),
*   2 SWC CHAR(1),
*    3 MSTRSW BIT(1),                  /* AMDPRMST HAS ATTEMPTED DUMP
*                                         DATA SET INITIALIZATION    */
*    3 SETFLSH BIT(1),                 /* SET FLUSHMODE INDICATOR    */
*    3 POSITSW BIT(1),                 /* POSITIONING OF DUMP DATA SET
*                                         MUST BE PERFORMED          */
*    3 TREADIN BIT(1),                 /* AMDPREAD HAS BEEN LOADED   */
*    3 EDITSW BIT(1),                  /* EDIT FUNCTION IS BEING
*                                         PERFORMED                  */
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*   2 SWD CHAR(1),
*    3 FLSHMODE BIT(1),                /* CONTROL STATEMENTS ARE BEING
*                                         SCANNED FOR SYNTAX ERRORS
*                                         ONLY                       */
*    3 * BIT(1),
*    3 * BIT(1),
*    3 NOSTDMG BIT(1),                 /* DO NOT ISSUE MESSAGE AMD165I
*                                         BEFORE SERVICING CALLER'S
*                                         MESSAGE REQUEST            */
*    3 NOLOADSW BIT(1),                /* IF =1, A VERB CAME BEFORE
*                                         END VERB                   */
*    3 CONTSW BIT(1),                  /* CONTINUATION OF EDIT CONTROL
*                                         STATEMENT MUST BE OBTAINED */
*    3 GPRSFND BIT(1),                 /* PRINT GENERAL REGISTERS
*                                         CONTENTS (SADMP INPUT)     */
*    3 * BIT(1),
*   2 SWE CHAR(1),
*    3 STOPSW BIT(1),                  /* STOP OPTION SPECIFIED      */
*    3 * BIT(1),
*    3 RESPC BIT(1),                   /* USER MUST RESPECIFY EDIT
*                                         OPTIONS                    */
*    3 TITLESW BIT(1),                 /* TITLE OPTION SPECIFIED     */
*    3 BUILDMAP BIT(1),                /* AMDPREAD MUST SCAN DUMP TO
*                                         BUILD MAP(S)               */
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*   2 SWF CHAR(1),
*    3 QPRDINIT BIT(1),                /* AMDPREAD INIT. REQUIRED IF
*                                         =0                         */
*    3 NUCTFRMC BIT(1),                /* IF 1 NUCTOP IS FROM CVT    */
*    3 QSADMP BIT(1),                  /* INPUT IS FROM AMDSADMP     */
*    3 DMPIC BIT(1),                   /* ENTIRE DUMP IN BUFFERS     */
*    3 PAGEOK BIT(1),                  /* SWITCH FOR FCB             */
*    3 * BIT(1),
*    3 QUT1LOD BIT(1),                 /* SYSUT1 LOADED BY LOD       */
*    3 * BIT(1),
*   2 BUFSW CHAR(1),
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*    3 * BIT(1),
*    3 PREFM BIT(1),                   /* PREFORMATTED DUMP IS BEING
*                                         PROCESSED                  */
*    3 * BIT(1),
*   2 PRSW CHAR(1),
*    3 * BIT(1),
*    3 QSEGTBSW BIT(1),                /* SEGMENT TABLE ORIGIN GIVEN
*                                         BY USER                    */
*    3 * BIT(1),
*    3 TTLSW BIT(1),                   /* PRINT TITLE FROM HEADER
*                                         RECORD ON PRINTER DATA SET */
*    3 PRNTRL BIT(1),                  /* PRINT REAL VERB IS CURRENT
*                                         VERB                       */
*    3 PRNTREAL BIT(1),                /* REAL STORAGE DATA REQUESTED*/
*    3 * BIT(1),
*    3 * BIT(1),
*   2 * CHAR(3),                       /* SPARE BYTES                */
*   2 WTORMSG CHAR(81),                /* CONTROL STATEMENT INPUT
*                                         AREA                       */
*   2 BLANKS CHAR(8),                  /* 8 BYTES OF BLANKS          */
*   2 TITLE CHAR(5),                   /* CHARACTER STRING - TITLE   */
*   2 STOP CHAR(4),                    /* CHARACTER STRING - STOP    */
*   2 MSG1 CHAR(26),                   /* ID AND SKELETON OF MESSAGE
*                                         AMD161I                    */
*   2 MSG2 CHAR(26),                   /* ID AND SKELETON OF MESSAGE
*                                         AMD158I                    */
*   2 TITLEMSG CHAR(64),               /* TITLE AREA FOR USER-SUPPLIED
*                                         TITLE                      */
*   2 TITLEMOD CHAR(15),               /* LABEL AND FIELD FOR MODULE
*                                         NAME FROM DUMP DATA SET
*                                         HEADER                     */
*   2 * CHAR(2),                       /* 2 BLANKS                   */
*   2 TITLEDTE CHAR(13),               /* LABEL AND FIELD FOR DATE ON
*                                         WHICH DUMP WAS TAKEN       */
*   2 * CHAR(2),                       /* 2 BLANKS                   */
*   2 TITLETME CHAR(13),               /* LABEL AND FIELD FOR TIME AT
*                                         WHICH DUMP WAS TAKEN       */
*   2 * CHAR(2),                       /* 2 BLANKS                   */
*   2 TITLEPGE CHAR(9),                /* LABEL AND FIELD FOR PAGE
*                                         NUMBER                     */
*   2 CAPTABL CHAR(256),               /* TRANSLATE TABLE FOR TRANSLA-
*                                         TING EBCDIC LOWER CASE TO
*                                         UPPER CASE                 */
*   2 TABLE CHAR(256),                 /* TRANSLATE TABLE TO FORM
*                                         EBCDIC PRINTOUT AT RIGHT
*                                         MARGIN OF GENERAL FORMAT   */
*    3 * CHAR(63),
*    3 HEXTABL CHAR(256),              /* TRANSLATE TABLE FOR 1ST STAGE
*                                         OF CONVERSION OF BINARY
*                                         NUMBER TO CHARACTER
*                                         HEXADECIMAL                */
*     4 * CHAR(10),
*     4 EBCTABL CHAR(256),             /* TRANSLATE TABLE FOR 2ND STAGE
*                                         OF CONVERSION OF BINARY
*                                         NUMBER TO CHARACTER
*                                         HEXADECIMAL                */
*   2 * CHAR(57),
*   2 * CHAR(16),
*   2 BLNK CHAR(256),                  /* MAIN SCAN TABLE            */
*   2 NONBLNK CHAR(256),               /* TABLE FOR NON-BLANK CHAR
*                                         SCAN                       */
*
*/********************************************************************/
*/*                                                                  */
*/*      COMMON ADDRESS CONSTANTS                                    */
*/*                                                                  */
*/********************************************************************/
*
*   2 AWRITE PTR(31) BDY(WORD),        /* ADDRESS OF PRINTER DATA SET
*                                         WRITE ROUTINE AMDPRWTR     */
*   2 APRTMSG PTR(31),                 /* ADDRESS OF SYSPRINT DATA SET
*                                         WRITE ROUTINE AMDPRMSG     */
*   2 ASYNTAX PTR(31),                 /* ADDRESS OF MESSAGE WRITER
*                                         ROUTINE, AMDPRSYN          */
*   2 AFMTLINE PTR(31),                /* ADDRESS OF GENERAL FORMAT
*                                         ROUTINE, AMDPRGFR          */
*   2 AADRCNVT PTR(31),                /* ADDRESS OF 3 BYTE BINARY TO
*                                         CHARACTER HEXADECIMAL CON-
*                                         VERSION ROUTINE IN CSECT
*                                         AMDPRSYN                   */
*   2 AWRDCNVT PTR(31),                /* ADDRESS OF 4 BYTE CONVERSION
*                                         ROUTINE                    */
*   2 ARGNBND PTR(31),                 /* ADDRESS OF REGION BOUNDARY
*                                         ROUTINE                    */
*   2 STOPEXIT PTR(31),                /* ADDRESS OF CURRENT STOP EXIT
*                                         ROUTINE                    */
*   2 SYNMSGA PTR(31),                 /* ADDRESS OF SYNTAX ERROR
*                                         MESSAGE ARRAY              */
*   2 AEREXIT PTR(31),                 /* ADDRESS OF ERROR EXIT
*                                         (TERMINATION) ROUTINE      */
*   2 ALOADER PTR(31),                 /* ADDRESS OF SEGMENT LOAD
*                                         ROUTINE,AMDPRSEG           */
*   2 QATMERTN PTR(31),                /* ADDRESS OF TOD CLOCK CONVERT
*                                         ROUTINE                    */
*   2 ATCBSAVE PTR(31),                /* ADDR OF TCB SAVE ROUTINE   */
*   2 ATCBREMV PTR(31),                /* ADDR OF ROUTINE FOR REMOVING
*                                         TCBS FROM THE TCBLIST      */
*   2 ATCBRTRV PTR(31),                /* ADDR OF TCB RETREIVE RTN   */
*   2 APCBENQ PTR(31),                 /* PCB QUEUE MANAGEMENT RTN   */
*   2 ASTPROUT PTR(31),                /* ADDR OF MAIN STOP ROUTINE  */
*   2 AFORMAT PTR(31),                 /* ADDR OF ROUTINE THAT CONTROLS
*                                         THE FORMATTING OF CONTROL
*                                         BLOCKS                     */
*   2 APRTSTG PTR(31),                 /* ADDR OF PRINT STORAGE SERVICE
*                                         ROUTINE                    */
*   2 BUFSUM FIXED(31),                /* TOTAL NUMBER OF BUFFERS FOR
*                                         THIS EXECUTION             */
*   2 BUFREINT FIXED(31),              /* NUMBER OF TIMES BUFFERS WERE
*                                         INITIALIZED                */
*   2 AERRMSGA(2) PTR(31),             /* ERROR MESSAGE ARRAY        */
*   2 AEND PTR(31),                    /* ADDR OF AMDPREND           */
*   2 ONGOPTR PTR(31),                 /* POINTER TO ONGO OPERAND    */
*   2 ATCBSMFR PTR(31),                /* ADDR OF TCB SUMMARY TABLE
*                                         FREE ROUTINE               */
*   2 ATCBSMRY PTR(31),                /* ADDR OF TCB SUMMARY TABLE
*                                         PRINT ROUTINE              */
*   2 DCBADDRS CHAR(20) BDY(WORD),     /* DCB ADDRESS ARRAY          */
*    3 AOUTDCB PTR(31),                /* ADDR OF OUTPUT(PRINTER) DCB*/
*    3 APTRDCB PTR(31),                /* ADDR OF MSG(SYSPRINT) DCB  */
*    3 ARDRDCB PTR(31),                /* ADDR OF CONTROL CARD INPUT
*                                         DCB (SYSIN)                */
*    3 AINDCB PTR(31),                 /* ADDR OF INPUT DUMP DATA SET
*                                         DCB (TAPE)                 */
*    3 * PTR(31),
*     4 * CHAR(1),
*      5 ENDLIST BIT(1),               /* END OF LIST INDICATOR      */
*     4 ASYSUDCB PTR(24),              /* ADDR OF SYSUT1 OR SYSUT2
*                                         DCB                        */
*/********************************************************************/
*/*                                                                  */
*/*      AREAS NEEDED FOR GTF EDIT INTERFACE                         */
*/*                                                                  */
*/********************************************************************/
*   2 TRCCOUNT FIXED(31),              /* COUNT OF ENTRIES TO
*                                         AMDPRGET                   */
*   2 AEDITCB PTR(31),                 /* ADDR OF EDIT COMMUNICATION
*                                         AREA - AMDPRTAB            */
*   2 AROOT PTR(31),                   /* ADDR OF AMDPRTAB INIT. RTN */
*   2 EDITER CHAR(1),                  /* VALUE OF ER PARAMETER OF
*                                         EXECUTE STATEMENT          */
*   2 * CHAR(3),
*/********************************************************************/
*/*                                                                  */
*/*      ADDITIONS FOR X01980/Y01980 SUPPORT                         */
*/*                                                                  */
*/********************************************************************/
*   2 REALMAP PTR(31) BDY(WORD),       /* POINTER TO REAL DUMP MAPS  */
*   2 SEGTABOR PTR(31),                /* SEGMENT TABLE ORIGIN       */
*   2 REALMAX FIXED(31),               /* TOP OF REAL STORAGE-CVTEORM*/
*   2 * FIXED(31),                     /* SPARE WORD                 */
*   2 QAPFT PTR(31),                   /* ADDRESS OF PFT IN DUMP     */
*/********************************************************************/
*/*                                                                  */
*/*      ADDITIONS FOR Y02006 SUPPORT                                */
*/*                                                                  */
*/********************************************************************/
*   2 QASID BIT(16),                   /* ASID OF IPL'ED CPU         */
*   2 IPLCPU BIT(16),                  /* ADDRESS OF IPL'ED CPU -
*                                         CONTAINS 256 IF THE IPL'ED
*                                         CPU STATUS WAS UNAVAIBLE -
*                                         I.E. AN I/O ERROR OCCURRED
*                                         WHEN THE CPU STATUS RECORD
*                                         WAS BEING READ             */
*   2 CURASCB PTR(31),                 /* ADDR OF CURRENT ASCB IN
*                                         DUMPED SYSTEM              */
*   2 PREFXRGR PTR(31),                /* REAL ADDRESS IN PSA PREFIX
*                                         REGISTER (SADMP INPUT ONLY)*/
*   2 PREFXRGV PTR(31),                /* VIRTUAL ADDRESS IN PSA PREFIX
*                                         REGISTER (SADMP INPUT ONLY)*/
*   2 ASVTADDR PTR(31),                /* ADDR OF ASVT IN DUMPED SYS */
*   2 SACSWCAW CHAR(12),               /* CSW (FIRST 8 BYTES) AND CAW
*                                         (LAST 4 BYTES) FROM AMDSADMP
*                                         HEADER RECORD              */
*   2 HDRREGS CHAR(168),               /* REGISTERS AND CURRENT PSW
*                                         FROM SVCDUMP OR DSS HEADER */
*   2 HDRTITLE CHAR(100),              /* TITLE FROM HEADER RECORD   */
*   2 * PTR(31),                       /* SPARE WORD                 */
*   2 ASIDNDX PTR(31),                 /* POINTER TO ASID INDEX      */
*   2 CPUMAP PTR(31),                  /* POINTER TO CPU STATUS RECORD
*                                         MAPS                       */
*   2 ASCBMAP PTR(31),                 /* POINTER TO THE ASCB MAP THAT
*                                         IS CREATED BY AMDPRRDC     */
*   2 BUFERMAP PTR(31),                /* ADDRESS OF THE FIRST PHYSICAL
*                                         BUFFER MAP ENTRY IN RDC    */
*   2 BRRDDATA PTR(31),                /* ADDRESS OF AMDPRRDC READ DATA
*                                         ROUTINE                    */
*   2 BRRDINIT PTR(31),                /* ADDRESS OF BRREAD INIT
*                                         ROUTINE                    */
*   2 BRRDADJ PTR(31),                 /* ADDRESS OF BRREAD ADJUST
*                                         ROUTINE                    */
*   2 AASCBFMT PTR(31),                /* ADDRESS OF AMDPRFAR        */
*   2 ASRBFMT PTR(31),                 /* ADDRESS OF AMDPRSRB        */
*   2 AUSRINIT PTR(31),                /* ADDRESS OF AMDPRUIM INIT.
*                                         ROUTINE                    */
*   2 AUSREXIT PTR(31),                /* MAIN ENTRY POINT TO AMDPRUIM
*                                                                    */
*   2 AUSRDEL PTR(31),                 /* ENTRY POINT FOR AMDPRUIM
*                                         CLEAN-UP ROUTINE           */
*   2 AUSRTCBA PTR(31),                /* ADDR OF TCB CURRENTLY BEING
*                                         PROCESSED BY FSR           */
*   2 AUSRASID BIT(16),                /* ASID OF MEMORY CURRENTLY
*                                         BEING PROCESSED BY FSR OR
*                                         FAR                        */
*   2 EXITFLAG CHAR(1),                /* FLAGS INDICATING ACTION
*                                         AMDPRUIM IS TO PERFORM     */
*   2 * CHAR(1),
*   2 RBMAX FIXED(15),                 /* LOOP CONTROL VALUE =50     */
*   2 PQEMAX FIXED(15),                /* LOOP CONTROL VALUE =50     */
*   2 LLEMAX FIXED(15),                /* LOOP CONTROL VALUE =255    */
*   2 JPQMAX FIXED(15),                /* LOOP CONTROL VALUE =256    */
*   2 DEBMAX FIXED(15),                /* LOOP CONTROL VALUE =200    */
*   2 DDMAX FIXED(15),                 /* LOOP CONTROL VALUE =1635   */
*   2 SRBMAX FIXED(15),                /* LOOP CONTROL VALUE =50     */
    2 TCBMAX FIXED(15),            /* LOOP CONTROL VALUE=256 @ZA00413*/
*   2 ASCBMAX FIXED(15),               /* LOOP CONTROL VALUE =200    */
*   2 DQEMAX FIXED(15),                /* LOOP CONTROL VALUE =50     */
*   2 XLMAX FIXED(31) BDY(WORD),       /* LOOP CONTROL VALUE =25     */
*   2 DNUCTOP FIXED(31) BDY(WORD),     /* DEFAULT TOP OF NUCLEUS     */
*   2 LPAMAX FIXED(31) BDY(WORD),      /* LOOP CONTROL VALUE = 500   */
*   2 DFLTCSA PTR(31),                 /* DEFAULT CSA ADDRESS        */
*   2 TOPICHDR CHAR(10),               /* OPTIONAL PAGE HEADER       */
*   2 * CHAR(2),                       /* UNUSED FIELD               */
*   2 CSADDR FIXED(31),                /* CSA ADDRESS                */
*   2 I3800SW CHAR(1),                 /* SWITCHES FOR 3800 SUPPORT  */
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/
*    3 * BIT(1),                       /* UNUSED             @Z40MI3F*/
*    3 I3800KEY BIT(1),            /* KEY MSG NEEDED        @Z40MI3F */
*    3 I3800ULN BIT(1),                 /* USER-SPEC-PAGE-LEN        */
*    3 I380080  BIT(1),                 /* LONG PAGE FORMAT          */
*    3 I3800204 BIT(1),            /* CONDENSED DUMP FORMAT @Z40MI3F */
*   2 TITLEKEY CHAR(16),           /* KEY MSG IN PGE TITLE  @Z40MI3F */
*    3 * CHAR(12),                 /* DURING CONDENSED ONLY @Z40MI3F */
*    3 TITLESTK CHAR(2),    /* STORAGE KEY VALUE             @Z4OM13F*/
*    2 Z9SVCBUF PTR(31),    /* ADDR OF SVC BUFFER            OZ09006 */
*    2 Z9SUBITS CHAR(15),   /* SU BIT STRING                 OZ09006 */
*   2 Z9SUFLG BIT(8),               /* SU FLAG               OZ09006 */
*   2 Z9ERRID CHAR(12);             /* SET FROM SVC DUMP     UZ81700 */
*
*/********************************************************************/
*/*                                                                  */
*/*       EXITFLAG VALUES                                            */
*/*                                                                  */
*/********************************************************************/
*
*DECLARE
*  ATCB BIT(8) CONSTANT('80'X),        /* ENTER FOR EACH TCB         */
*  BASID BIT(8) CONSTANT('40'X),       /* ENTER FOR EACH ASID        */
*  CFORMAT BIT(8) CONSTANT('20'X),     /* ENTER ON EACH FORMAT STMT  */
*  DCURJOB BIT(8) CONSTANT('10'X),     /* ENTER FOR PRINT CURRENT AND
*                                         PRINT JOBNAME STMT'S       */
*  ENUCLEUS BIT(8) CONSTANT('08'X),    /* ENTER FOR PRINT NUCLEUS
*                                         STMT                       */
*  ZVERB BIT(8) CONSTANT('00'X);       /* ENTER TO DECODE VERB       */
*
*/********************************************************************/
*/*                                                                  */
*/*       FMTPTRN FLAG BYTE VALUES                                   */
*/*                                                                  */
*/********************************************************************/
*
*GEN DATA;
DTAE     EQU   32                  DATA EBCDIC BIT
DTAC     EQU   16                  DATA IN CORE BIT
DTAP     EQU   8                   DATA PTR BIT
DTA      EQU   4                   DATA INCLUDED BIT
LBLP     EQU   2                   LABEL PTR BIT
LBL      EQU   1                   LABEL INCLUDED BIT
*@ENDGEN;
*
*/********************************************************************/
*/*                                                                  */
*/*       REGISTER DEFINITIONS                                       */
*/*                                                                  */
*/********************************************************************/
*
*DECLARE
*  R0 REG(0) PTR(31),                  /* GENERAL REGISTER 0         */
*  R1 REG(1) PTR(31),                  /* GENERAL REGISTER 1         */
*  R2 REG(2) PTR(31),                  /* GENERAL REGISTER 2         */
*  R3 REG(3) PTR(31),                  /* GENERAL REGISTER 3         */
*  R4 REG(4) PTR(31),                  /* GENERAL REGISTER 4         */
*  R5 REG(5) PTR(31),                  /* GENERAL REGISTER 5         */
*  R6 REG(6) PTR(31),                  /* GENERAL REGISTER 6         */
*  R7 REG(7) PTR(31),                  /* GENERAL REGISTER 7         */
*  R8 REG(8) PTR(31),                  /* GENERAL REGISTER 8         */
*  R9 REG(9) PTR(31),                  /* GENERAL REGISTER 9         */
*  R10 REG(10) PTR(31),                /* GENERAL REGISTER 10        */
*  R11 REG(11) PTR(31),                /* GENERAL REGISTER 11        */
*  R12 REG(12) PTR(31),                /* GENERAL REGISTER 12        */
*  R13 REG(13) PTR(31),                /* GENERAL REGISTER 13        */
*  R14 REG(14) PTR(31),                /* GENERAL REGISTER 14        */
*  R15 REG(15) PTR(31),                /* GENERAL REGISTER 15        */
*  COMBASE REG(12) PTR(31),            /* COMMON AREA BASE REGISTER  */
*  BASE1 REG(11) PTR(31),              /* BASE REGISTER              */
*  BASE2 REG(10) PTR(31),              /* SECOND BASE REGISTER       */
*  BASE3 REG(9) PTR(31),               /* THIRD BASE REGISTER        */
*  STOPBASE REG(5) PTR(31),            /* STOP EXIT BASE REGISTER    */
*  LINEREG REG(8) PTR(31),             /*                            */
*  BUFREG REG(6) PTR(31),              /* POINTER TO OUTPUT BUFFER   */
*  CNTREG REG(3) PTR(31),              /*                            */
*  PREG REG(1) PTR(31);                /* PARAMETER REGISTER         */
*
