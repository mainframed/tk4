         TITLE 'IEAVNPM2 - NIPWTO/R SERVICE ROUTINES                   *
                        '
         MACRO
         NPM2ENTR   &SAVE,&ADDR
         BALR  RENTRY,0
         DROP  @11,@12
         USING *,RENTRY
         STM   2,1,&SAVE
         L     RBASE,&ADDR
         LA    RBASE2,4095(0,RBASE)
         B    &ADDR+4
&ADDR    DC    A(@PSTART)
         DROP  RENTRY
         USING @PSTART,@11
         USING @PSTART+4095,@12
         MEND
         MACRO
         NPM2APPE   &SAVE,&ADDR
         BALR  RENTRY,0
         DROP  @11,@12
         USING *,RENTRY
         STM   2,1,&SAVE
         L    RBASE,&ADDR
         LA   RBASE2,4095(0,RBASE)
         B    &ADDR+4
&ADDR    DC    A(@PSTART)
         DROP  RENTRY
         USING @PSTART,@11
         USING @PSTART+4095,@12
         MEND
IEAVNPM2 CSECT ,                                                   0029
@MAINENT DS    0H                                                  0029
         USING *,@15                                               0029
         B     @PROLOG                                             0029
         DC    AL1(16)                                             0029
         DC    C'IEAVNPM2  74.112'                                 0029
         DROP  @15
@PROLOG  BALR  @11,0                                               0029
@PSTART  LA    @12,4095(,@11)                                      0029
         USING @PSTART,@11                                         0029
         USING @PSTART+4095,@12                                    0029
         ENTRY  NIPWTO,NIPWTOR,NIPWTOR2     SERVICE ROUTINE ENTRIES
         ENTRY  NIPDCBIC,NIPDCBOC           I/O CONSOLES DCBS
*
** REFS ARE GENERATED FOR NVT FIELDS THAT CONTAIN ADDRESSES OF
** NIP SERVICE ROUTINES, SO IEAPMNIP MACRO CALLS TO THESE ROUTINES
** WILL ASSEMBLE PROPERLY.
@EL00001 DS    0H                                                  0307
@EF00001 DS    0H                                                  0307
@ER00001 BR    @14                                                 0307
@PB00001 DS    0H                                                  0307
NIPWTO   DS    0H                                                  0308
         DS  0H
*                                                                  0312
         NPM2ENTR WTOLVL2,WTOBASE
*   /*****************************************************************/
*   /*                                                               */
*   /* ON ENTRY, TEST NVT ACTIVE CONSOLE FLAG. IF OFF, RETURN        */
*   /* IMMEDIATELY                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0313
*   IF NVTFLAC='0'B                 /* ACTIVE MASTER CONSOLE ?       */
*     THEN                          /* IF NOT -                      */
         TM    NVTFLAC(RNVT),B'10000000'                           0313
         BNZ   @RF00313                                            0313
*     DO;                           /* PREPARE TO RETURN             */
*       GEN(LM  2,1,WTOLVL2);       /* RESTORE CALLERS REGS          */
         LM  2,1,WTOLVL2
*       GEN(BR  14);                /* RETURN TO CALLER              */
         BR  14
*     END;                                                         0317
*                                                                  0317
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR LEVEL 1 (NONRECURSIVE) ENTRY                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0318
*   IF NPWTOSV1='0'B                /* IF THIS IS AN INITIAL         */
*     THEN                          /* ENTRY INDICATE BY:            */
@RF00313 TM    NPWTOSV1,B'10000000'                                0318
         BNZ   @RF00318                                            0318
*     DO;                           /* SET SWITCH & MOVE REGS        */
*       NPWTOSV1='1'B;              /* SET SAVE-LEVEL 1 SWITCH       */
         OI    NPWTOSV1,B'10000000'                                0320
*       WTOLVL1=WTOLVL2;            /* MOVE REGS TO SAVE LEVEL 1     */
         MVC   WTOLVL1(64),WTOLVL2                                 0321
*     END;                                                         0322
*   ELSE                            /* ELSE, THIS IS LEVEL 2 ENTRY   */
*     DO;                           /* INDICATE AND SAVE WRITAREA    */
         B     @RC00318                                            0323
@RF00318 DS    0H                                                  0324
*       NPWTOSV2='1'B;              /* INDICATE LEVEL 2 IN USE       */
         OI    NPWTOSV2,B'01000000'                                0324
*       NPMWASAV=WRITAREA;          /* SAVE WRITAREA                 */
         MVC   NPMWASAV(132),WRITAREA                              0325
*     END;                                                         0326
*   NPMWHDR=RPARM->NWTOHDR;         /* PUT HEADER IN WRITE AREA      */
*                                                                  0327
@RC00318 MVC   NPMWHDR(4),NWTOHDR(RPARM)                           0327
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE LENGTH OF MESSAGE TEXT                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0328
*   N=RPARM->NWTOLNG-LENGTH(NWTOHDR);                              0328
         LA    @10,4                                               0328
         LH    @05,NWTOLNG(,RPARM)                                 0328
         SLR   @05,@10                                             0328
         ST    @05,N                                               0328
*   RBUFC=ADDR(NPMWAREA);           /* LOAD BUFFER ADDRESS           */
*                                                                  0329
         LA    RBUFC,NPMWAREA                                      0329
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD MESSAGE BEGINNING ADDRESS                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0330
*   RSCANC=RPARM+LENGTH(NWTOHDR);                                  0330
         ALR   @10,RPARM                                           0330
         LR    RSCANC,@10                                          0330
*   NPMSCANE=RSCANC+N-1;            /* POINT TO LAST MSG CHAR        */
*                                                                  0331
         ALR   @05,RSCANC                                          0331
         BCTR  @05,0                                               0331
         ST    @05,NPMSCANE                                        0331
*   /*****************************************************************/
*   /*                                                               */
*   /* PACK FROM THE PARAMETER MESSAGE TO THE WRITE AREA OMITTING ALL*/
*   /* DOUBLE BLANKS                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*NPMPKLP:                                                          0332
*                                                                  0332
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE NEXT TWO CHARACTERS ARE NOT 2 BLANKS, OR THE 'NO       */
*   /* COMPRESS' FLAG IS ON IN MESSAGE HEADER, MOVE ONE CHARACTER. IF*/
*   /* NOT, SCAN PAST FISRT BLANK AND CONTINUE                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*   IF SCAN(1:2)^='  '×             /* 2 BLANKS OR -                 */
*       RPARM->NWTOFLNC='1'B        /* DONT COMPRESS ?               */
*     THEN                          /* IF EITHER THEN -              */
NPMPKLP  CLC   SCAN(2,RSCANC),@CC02777                             0332
         BNE   @RT00332                                            0332
         TM    NWTOFLNC(RPARM),B'01000000'                         0332
         BNO   @RF00332                                            0332
@RT00332 DS    0H                                                  0333
*     DO;                           /* MOVE A CHARACTER              */
*                                                                  0333
*       /*************************************************************/
*       /*                                                           */
*       /* MOVE CHARACTER TO WRITE AREA                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0334
*       BUFPACK(1)=SCAN(1);                                        0334
*                                                                  0334
         MVC   BUFPACK(1,RBUFC),SCAN(RSCANC)                       0334
*       /*************************************************************/
*       /*                                                           */
*       /* UPDATE WRITE AREA BASE                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0335
*       RBUFC=RBUFC+1;                                             0335
         AH    RBUFC,@CH00109                                      0335
*     END;                                                         0336
*   RSCANC=RSCANC+1;                /* UPDATE BUFPACK BASE           */
*                                                                  0337
@RF00332 AH    RSCANC,@CH00109                                     0337
*   /*****************************************************************/
*   /*                                                               */
*   /* IS THIS THE END OF THE PARAMETER MESSAGE                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0338
*   IF RSCANC^>NPMSCANE THEN        /* NOT THE END                   */
         C     RSCANC,NPMSCANE                                     0338
         BNH   @RT00338                                            0338
*     GO TO NPMPKLP;                /* CONTINUE LOOP                 */
*                                                                  0339
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBSTITUTE PACKED WRITE AREA FOR INPUT PARMETER               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0340
*   RPARM=ADDR(WRITAREA);                                          0340
*                                                                  0340
         LA    RPARM,WRITAREA                                      0340
*   /*****************************************************************/
*   /*                                                               */
*   /* LENGTH OF HEADER AND PACKED WRITE AREA                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0341
*   RPARM->NWTOLNG=RBUFC-RPARM;                                    0341
         LR    @10,RBUFC                                           0341
         SLR   @10,RPARM                                           0341
         STH   @10,NWTOLNG(,RPARM)                                 0341
*   CALL NPMHDCPY;                  /* BRANCH TO HARDCOPY ROUTINE    */
         BAL   @14,NPMHDCPY                                        0342
*   N=RPARM->NWTOLNG;               /* OBTAIN MESSAGE LENGTH         */
         LH    @10,NWTOLNG(,RPARM)                                 0343
         ST    @10,N                                               0343
*   N=N-LENGTH(NWTOHDR);            /* CALCULATE MESSAGE LENGTH      */
*                                                                  0344
         SH    @10,@CH00101                                        0344
         ST    @10,N                                               0344
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST NVT COMPOSITE CONSOLE FLAG TO DETERMINE SOURCE OF UCB    */
*   /* ADDRESS                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0345
*   IF NVTFLIOC='1'B                /* IF COMPOSITE FLAG IS ON -     */
*     THEN                          /* OBTAIN UCB ADDRESS            */
         TM    NVTFLIOC(RNVT),B'01000000'                          0345
         BNO   @RF00345                                            0345
*     RUCB=NPBOUCBA;                /* FROM OUTPUT DEB               */
         SLR   RUCB,RUCB                                           0346
         ICM   RUCB,7,NPBOUCBA                                     0346
*   ELSE                            /* ELSE, OBTAIN UCB ADDRESS      */
*     RUCB=NPBIUCBA;                /* FROM INPUT DEB                */
*                                                                  0347
         B     @RC00345                                            0347
@RF00345 SLR   RUCB,RUCB                                           0347
         ICM   RUCB,7,NPBIUCBA                                     0347
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE DEVICE TYPE. CHECK FOR UNIT RECORD                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0348
*   IF UCB3UREC='1'B                /* IF DEVICE IS UNIT RECORD      */
*     THEN                          /* EXECUTE HERE -                */
@RC00345 TM    UCB3UREC(UCBPTR),B'00001000'                        0348
         BNO   @RF00348                                            0348
*     DO;                           /* SET UP FOR EXCP               */
*       NPMWCCWL=N;                 /* SET MSG LENGTH IN CCW         */
         MVC   NPMWCCWL(2),N+2                                     0350
*       RPARM=ADDR(NPMWUCCW);       /* SET CCW ADDR PARAMETER        */
         LA    RPARM,NPMWUCCW                                      0351
*       CALL NPMEXCPC;              /* CALL EXECUTE-CHANNEL-PROG     */
         BAL   @14,NPMEXCPC                                        0352
*       GO TO NPMWTORG;             /* BRANCH TO RESTORE REGISTER    */
         B     NPMWTORG                                            0353
*     END;                                                         0354
*                                                                  0354
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE DEVICE TYPE. CHECK FOR COMMUNICATION CLASS          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0355
*   IF UCB3COMM='1'B                /* IF DEVICE IS COMMUNICATION    */
*     THEN                          /* EXECUTE HERE -                */
@RF00348 TM    UCB3COMM(UCBPTR),B'01000000'                        0355
         BNO   @RF00355                                            0355
*     DO;                           /* PREPARE FOR EXCP              */
*       RPARM=N;                    /* SET LENGTH FOR TRANSLATE      */
*                                                                  0357
         L     RPARM,N                                             0357
*       /*************************************************************/
*       /*                                                           */
*       /* TRANSLATE EBCDIC TO TP CODE                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0358
*       GEN( EX  RPARM,NPMTRETT);                                  0358
          EX  RPARM,NPMTRETT
*       N=N+2;                      /* UPDATE MESSAGE LENGTH         */
*                                                                  0359
         LA    @10,2                                               0359
         AL    @10,N                                               0359
         ST    @10,N                                               0359
*       /*************************************************************/
*       /*                                                           */
*       /* APPEND CARRAIGE RETURN AND EOB TO MESSAGE                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0360
*       NPMWAREA(N-1:N)='5B3D'X;                                   0360
         LA    @05,NPMWAREA-2(@10)                                 0360
         MVC   0(2,@05),@CB02780                                   0360
*       NPMWTBUF='00'X;             /* CLEAR RESPONSE BUFFER         */
         MVI   NPMWTBUF,X'00'                                      0361
*       NPMWTCWL=N;                 /* SET MSG LEN IN CCW CHAIN      */
         STH   @10,NPMWTCWL                                        0362
*       RPARM=ADDR(NPMWTCCW);       /* SET CCW ADDR PARAMETER        */
         LA    RPARM,NPMWTCCW                                      0363
*       CALL NPMEXCPC;              /* CALL EXCP ROUTINE             */
*                                                                  0364
         BAL   @14,NPMEXCPC                                        0364
*       /*************************************************************/
*       /*                                                           */
*       /* CALL NIPTIME FOR CURRENT TIME                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0365
*       GEN(IEAPMNIP TYPE=TIME,PARAM=BIN)                          0365
*       REFS(NVTTIME);                                             0365
         IEAPMNIP TYPE=TIME,PARAM=BIN
*       WTOTIME=RPARM+2600;         /* SET ELAPSED TIME LIMIT        */
         LA    @10,2600                                            0366
         ALR   @10,RPARM                                           0366
         ST    @10,WTOTIME                                         0366
*       GO TO WTOLOOP;              /* BRANCH TO TIMING LOOP         */
         B     WTOLOOP                                             0367
*     END;                                                         0368
*                                                                  0368
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSOLE MUST BE GRAPHICS DEVICE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0369
*   NPMWRTSW='1'B;                  /* INDICATE WRITE                */
@RF00355 OI    NPMWRTSW,B'00000010'                                0369
*   UCMBASPT=CVTCUCB;               /* SET UP UCM BASE POINTER       */
         MVC   UCMBASPT(4),CVTCUCB(CVTPTR)                         0370
*   CALL NPMUPSCR;                  /* UPDATE GRAPHICS SCREEN        */
         BAL   @14,NPMUPSCR                                        0371
*   GO TO NPMWTORG;                 /* PREPARE TO EXIT               */
         B     NPMWTORG                                            0372
*WTOLOOP:                           /* TP TIMING LOOP                */
*                                                                  0373
*   /*****************************************************************/
*   /*                                                               */
*   /* TP TIMING LOOP - CONTINUE LOOP UNTIL RESPONSE IS RECIEVED OR A*/
*   /* TIMEOUT OCCURS. TEST FOR CIRCLE Y.                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0373
*   IF NPMWTBUF='F6'X               /* RESPONSE OF 'F6'X OR          */
*       ×NPMWTBUF='76'X             /* '76'X = CIRCLE Y -            */
*     THEN                          /* SUCCESSFUL WRITE              */
WTOLOOP  CLI   NPMWTBUF,X'F6'                                      0373
         BE    @RT00373                                            0373
         CLI   NPMWTBUF,X'76'                                      0373
         BE    @RT00373                                            0373
*     GO TO NPMWTORG;               /* BRANCH TO RESTORE REGS        */
*                                                                  0374
*   /*****************************************************************/
*   /*                                                               */
*   /* NOT CIRCLE Y. TEST FOR CIRCLE N RESPONSE.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0375
*   IF NPMWTBUF='C0'X               /* RESPONSE OF 'C0'X OR          */
*       ×NPMWTBUF='40'X             /* '40'X = CIRCLE N -            */
*     THEN                          /* UNSUCCESSFUL WRITE            */
         CLI   NPMWTBUF,X'C0'                                      0375
         BE    @RT00375                                            0375
         CLI   NPMWTBUF,X'40'                                      0375
         BE    @RT00375                                            0375
*     GO TO NPMWEXIT;               /* BRANCH TO WAIT-STATE-EXIT     */
*                                                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL NIPTIME ROUTINE FOR CURRENT TIME                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0377
*   GEN(IEAPMNIP TYPE=TIME,PARAM=BIN)                              0377
*   REFS(NVTTIME);                                                 0377
*                                                                  0377
         IEAPMNIP TYPE=TIME,PARAM=BIN
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPARE CURRENT TIME WITH LOOP TIME LIMIT                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*   IF RPARM<WTOTIME                /* CURRENT LESS THAN LIMIT ?     */
*     THEN                          /* IF SO, CONTINUE LOOP -        */
         C     RPARM,WTOTIME                                       0378
         BL    @RT00378                                            0378
*     GO TO WTOLOOP;                /* BRANCH TO CHECK RESPONSE      */
*NPMWEXIT:                          /* ENTERED ON CIRCLE N RESPONSE
*                                      OR LOOP TIME OUT              */
*   CALL NPMCWAIT;                  /* BRANCH FOR CONSOLE ERROR      */
NPMWEXIT BAL   @14,NPMCWAIT                                        0380
*NPMWTORG:                          /* RESTORE REGS AND RETURN       */
*                                                                  0381
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR LEVEL 2 SAVEAREA IN USE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0381
*   IF NPWTOSV2='0'B                /* SAVE LEVEL 2 NOT IN USE ?     */
*     THEN                          /* IF NOT -                      */
NPMWTORG TM    NPWTOSV2,B'01000000'                                0381
         BZ    @RT00381                                            0381
*     GO TO LVL1LM;                 /* RESTORE FROM LEVEL 1          */
*   NPWTOSV2='0'B;                  /* SAVE LEVEL 2 NOT IN USE       */
         NI    NPWTOSV2,B'10111111'                                0383
*   WRITAREA=NPMWASAV;              /* RESTORE WRITAREA              */
         MVI   WRITAREA+132,C' '                                   0384
         MVC   WRITAREA+133(3),WRITAREA+132                        0384
         MVC   WRITAREA(132),NPMWASAV                              0384
*   GEN(LM  2,1,WTOLVL2);           /* RESTORE REGS FROM LVL 2       */
         LM  2,1,WTOLVL2
*   GEN(BR   REXIT);                /* RETURN TO CALLER              */
         BR   REXIT
*LVL1LM:                            /* RESTORE FROM LEVEL 1          */
*   NPWTOSV1='0'B;                  /* TURN OFF LEVEL 1 FLAG         */
LVL1LM   NI    NPWTOSV1,B'01111111'                                0387
*   GEN(LM  2,1,WTOLVL1);           /* RESTORE REGS FROM LVL1        */
         LM  2,1,WTOLVL1
*   GEN(BR   REXIT);                /* RETURN TO CALLING PROGRAM     */
         BR   REXIT
*   GENERATE;                                                      0390
*                                                                  0390
*                                      /* GENERATE NIPWTO SAVEAREAS  */
WTOLVL1    DS   16F                       NIPWTO SAVEAREA1
WTOLVL2    DS   16F                       NIPWTO SAVEAREA2
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE REGISTERS USED - NIPWTO ROUTINE                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0391
*   RESPECIFY                                                      0391
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RUCB,                         /* UCB BASE REGISTER             */
*     CVTPTR,                       /* CVT BASE REGISTER             */
*     RBUFC,                        /* WRITEAREA POINTER             */
*     RSCANC) UNRESTRICTED;         /* MESSAGE SCAN POINTER          */
*   GEN(EJECT);                     /* GENERATE ASSEMBLER EJECT      */
         EJECT
*   END NIPWTO;                     /* END - NIPWTO ROUTINE        0393
*                                                                    */
@EL00002 DS    0H                                                  0393
@EF00002 DS    0H                                                  0393
@ER00002 BR    @14                                                 0393
*NIPWTOR:                           /* WTOR SERVICE ROUTINE          */
*                                                                  0394
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED TO WRITE NIP MESSAGES TO THE MASTER   */
*   /* CONSOLE, TO INITIATE THE READ I/O FOR THE RELATED OPERATOR'S  */
*   /* REPLY, AND, OPTIONALLY, ENTER THE NIPWTOR2 ROUTINE TO AWAIT   */
*   /* COMPLETION OF THE OPERATOR'S REPLY. NIPWTOR REQUIRES, AS      */
*   /* INPUT, A POINTER IN REGISTER RPARM TO THE NIPWTOR PARAMETER   */
*   /* LIST.                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0394
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* PROCEDURE STATEMENT         */
*                                                                  0394
NIPWTOR  DS    0H                                                  0395
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTRICT REGISTERS USED BY NIPWTOR ROUTINE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0395
*   RESPECIFY                                                      0395
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RUCB,                         /* UCB BASE REGISTER             */
*     CVTPTR) RESTRICTED;           /* CVT BASE REGISTER             */
*   DCL                                                            0396
*     WTORLVL1 CHAR(60) GENERATED;  /* NIPWTOR SAVEAREA 1            */
*   DCL                                                            0397
*     LVL1REG1 PTR(31) GENERATED;   /* NIPWTOR SAVE REG 1            */
*   DCL                                                            0398
*     WTORLVL2 CHAR(60) GENERATED;  /* NIPWTOR SAVEAREA 2            */
*   DCL                                                            0399
*     LVL2REG1 PTR(31) GENERATED;   /* NIPWTOR SAVE REG 1            */
*   GEN(DS  0H);                    /* STATEMENT FOR LABEL           */
         DS  0H
*   GEN(NPM2ENTR WTORLVL2,WTORBASE);/* GENERATE ENTRY CODE           */
*                                                                  0401
         NPM2ENTR WTORLVL2,WTORBASE
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF LEVEL 1 SAVEAREA IS IN USE                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0402
*   IF NPWORSV1='0'B                /* LEVEL 1 IN USE ?              */
*     THEN                          /* IF NOT -                      */
         TM    NPWORSV1,B'00100000'                                0402
         BNZ   @RF00402                                            0402
*     DO;                           /* USE LEVEL 1                   */
*       WTORLVL1=WTORLVL2;          /* MOVE REGISTERS TO LEVEL 1     */
         MVC   WTORLVL1(60),WTORLVL2                               0404
*       LVL1REG1=LVL2REG1;          /* MOVE REG 1 TO LEVEL 1         */
         MVC   LVL1REG1(4),LVL2REG1                                0405
*       NPWORSV1='1'B;              /* INDICATE LEVEL 1 IN USE       */
         OI    NPWORSV1,B'00100000'                                0406
*     END;                                                         0407
*   ELSE                            /* LEVEL 1 ALREADY IN USE        */
*     NPWORSV2='1'B;                /* INDICATE LEVEL 2 IN USE       */
*                                                                  0408
         B     @RC00402                                            0408
@RF00402 OI    NPWORSV2,B'00010000'                                0408
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK EXISTENCE OF MASTER CONSOLE. IF NONE, LOAD WAIT         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0409
*   IF NVTFLAC='0'B                 /* ACTIVE MASTER CONSOLE ?       */
*     THEN                          /* IF NO, SET WAIT PSW AND       */
@RC00402 TM    NVTFLAC(RNVT),B'10000000'                           0409
         BNZ   @RF00409                                            0409
*     DO;                           /* CALL LOAD WAIT ROUTINE        */
*CALLSWT:                           /* CALL NIPSWAIT ROUTINE         */
*       NVTFLWSC=NVTFLWSE;          /* SET WAIT STATE CODE IN NVT    */
CALLSWT  MVI   NVTFLWSC(RNVT),X'3F'                                0411
*       NVTIDPSW=NVTIDPSW&'F000'X;  /* CLEAR NVT PSW CODE            */
*                                                                  0412
         NC    NVTIDPSW(2,RNVT),@CB02802                           0412
*       /*************************************************************/
*       /*                                                           */
*       /* REPLACE PSW ID CODE WITH NIP PROG ERROR CODE              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0413
*       NVTIDPSW=NVTIDPSW×'0001'X;                                 0413
         OC    NVTIDPSW(2,RNVT),@CB02491                           0413
*       GEN(IEAPMNIP TYPE=SWAIT)    /* EXIT TO NIPSWAIT RTN          */
*       REFS(NVTSWAIT);                                            0414
         IEAPMNIP TYPE=SWAIT
*     END;                                                         0415
*                                                                  0415
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THERE IS CURRENTLY A READ OUTSTANDING, THIS IS ALSO A      */
*   /* PROGRAM ERROR. BRANCH TO LOAD DISABLED WAIT STATE.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0416
*   IF NVTFLRAC='1'B                /* READ OUTSTANDING ?            */
*     THEN                          /* IF SO -                       */
@RF00409 TM    NVTFLRAC(RNVT),B'00000010'                          0416
         BO    @RT00416                                            0416
*     GO TO CALLSWT;                /* BRANCH TO LOAD WAIT           */
*   RPARM=RPARM->NWTORMSG;          /* LOAD MESSAGE ADDRESS FROM WTOR
*                                      PARAMETER LIST                */
*                                                                  0418
         L     RPARM,NWTORMSG(,RPARM)                              0418
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RPARM INDICATES AN ASSOCIATED MESSAGE, CALL NIPWTO ROUTINE */
*   /* TO WRITE THE MESSAGE TO THE MASTER CONSOLE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0419
*   IF RPARM^=0                     /* RPARM NOT ZERO ?              */
*     THEN                          /* IF NOT, WRITE MESSAGE         */
         LTR   RPARM,RPARM                                         0419
         BZ    @RF00419                                            0419
*     CALL NIPWTO;                  /* CALL NIPWTO ROUTINE           */
*                                                                  0420
         BAL   @14,NIPWTO                                          0420
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND AND RESTORE CALLERS REG 1 (PARMLIST POINTER)             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0421
*   IF NPWORSV2='0'B                /* IF LEVEL 2 NOT IN USE         */
*     THEN                          /* FIND REG 1 IN LEVEL 1         */
@RF00419 TM    NPWORSV2,B'00010000'                                0421
         BNZ   @RF00421                                            0421
*     RPARM=LVL1REG1;               /* RESTORE PARMLIST ADDRESS      */
         L     RPARM,LVL1REG1                                      0422
*   ELSE                            /* ELSE, FIND REG1 IN LEVEL2     */
*     RPARM=LVL2REG1;               /* RESTORE PARMLIST ADDRESS      */
         B     @RC00421                                            0423
@RF00421 L     RPARM,LVL2REG1                                      0423
*/*        INITIALIZE REPLY AREA TO BLANKS.                   YM2488 */
*                                                                  0424
*   NPMRAREA=BLANKS;                                               0424
@RC00421 MVC   NPMRAREA(83),BLANKS                                 0424
*   RUCB=NPBIUCBA;                  /* LOAD UCB ADDR FROM DEB        */
*                                                                  0425
         SLR   RUCB,RUCB                                           0425
         ICM   RUCB,7,NPBIUCBA                                     0425
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE DEVICE TYPE. CHECK FOR UNIT RECORD.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0426
*   IF UCB3UREC='1'B                /* UNIT RECORD DEVICE TYPE ?     */
*     THEN                          /* IF SO -                       */
         TM    UCB3UREC(UCBPTR),B'00001000'                        0426
         BNO   @RF00426                                            0426
*     DO;                           /* CHECK FOR INQUIRY TYPE        */
*                                                                  0427
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR INQUIRY TYPE DEVICE                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0428
*       IF UCBTBYT4>'1F'X           /* INPUT CONSOLE IS INQUIRY ? IF
*                                      SO -                  @YM06937*/
*         THEN                                                     0428
         CLI   UCBTBYT4(UCBPTR),X'1F'                              0428
         BNH   @RF00428                                            0428
*         RPARM=ADDR(NPMRQCCW);     /* PICK READ-INQUIRY CCW         */
         LA    RPARM,NPMRQCCW                                      0429
*       ELSE                        /* IF NOT INQUIRY - SELECT       */
*         RPARM=ADDR(NPMRFCCW);     /* READ, FEED, SS CCW            */
         B     @RC00428                                            0430
@RF00428 LA    RPARM,NPMRFCCW                                      0430
*       RNIPM=ADDR(READAREA);       /* LOAD MSG HEADER ADDRESS       */
@RC00428 LA    RNIPM,READAREA                                      0431
*       NPMRLNG=80;                 /* SET U-R REPLY LENGTH          */
         MVC   NPMRLNG(2,RNIPM),@CH02765                           0432
*       GO TO NPMCOMP;              /* BRANCH TO ISSUE EXCP          */
         B     NPMCOMP                                             0433
*     END;                                                         0434
*   ELSE                                                           0435
*     ;                                                            0435
*                                                                  0435
@RF00426 DS    0H                                                  0436
*   /*****************************************************************/
*   /*                                                               */
*   /* IS DEVICE OF THE COMMUNICATIONS CLASS ?                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0436
*   IF UCB3COMM='1'B                /* COMM. CLASS DEVICE ?          */
*     THEN                          /* IF SO -                       */
         TM    UCB3COMM(UCBPTR),B'01000000'                        0436
         BNO   @RF00436                                            0436
*     DO;                           /* SET UP COMM CLASS I/O         */
*       RPARM=ADDR(NPMRTCCW);       /* SELECT TP READ CCW CHAIN      */
         LA    RPARM,NPMRTCCW                                      0438
*       RNIPM=ADDR(READAREA);       /* LOAD HEADER ADDRESS           */
         LA    RNIPM,READAREA                                      0439
*       NPMRLNG=83;                 /* PUT TP REPLY LENGTH IN HDR    */
         MVC   NPMRLNG(2,RNIPM),@CH02685                           0440
*       GO TO NPMCOMP;              /* BRANCH TO COMPLEMENT RPARM    */
         B     NPMCOMP                                             0441
*     END;                                                         0442
*                                                                  0442
*   /*****************************************************************/
*   /*                                                               */
*   /* DEVICE TYPE IS GRAPHICS BY DEFAULT                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0443
*   UCMBASPT=CVTCUCB;               /* SET UP UCM BASE               */
@RF00436 L     @10,CVTCUCB(,CVTPTR)                                0443
         ST    @10,UCMBASPT                                        0443
*   UCMAECB=UCMAECB&&UCMAECB;       /* ZERO UCM ECB                  */
         L     @05,UCMAECB(,@10)                                   0444
         LR    @00,@05                                             0444
         XR    @00,@05                                             0444
         ST    @00,UCMAECB(,@10)                                   0444
*   RNIPM=ADDR(READAREA);           /* LOAD MESSAGE HEADER ADDR      */
         LA    RNIPM,READAREA                                      0445
*   NPMRLNG=80;                     /* SET GRAPHICS REPLY LENGTH IN
*                                      REPLY AREA MSG HEADER         */
         MVC   NPMRLNG(2,RNIPM),@CH02765                           0446
*   GO TO SETNVT;                   /* PREPARE TO EXIT               */
         B     SETNVT                                              0447
*NPMCOMP:                           /* COMPLEMENT PARAMETER AND    0448
*                                      INITIATE I/O                  */
*   GEN(LCR  RPARM,RPARM);          /* COMPLEMENT REG TO INDICATE I/O
*                                      READ REQUEST                  */
NPMCOMP  LCR  RPARM,RPARM
*   CALL NPMEXCPC;                  /* CALL RTN TO INITIATE I/O TO 0449
*                                      READ REPLY                    */
         BAL   @14,NPMEXCPC                                        0449
*SETNVT:                                                           0450
*   NVTFLRAC='1'B;                  /* SET WTOR-OUTSTANDING FLAG     */
*                                                                  0450
SETNVT   OI    NVTFLRAC(RNVT),B'00000010'                          0450
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE SAVE LEVEL WITH THIS ENTRY'S REGISTERS              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0451
*   IF NPWORSV2='0'B                /* SAVE LEVEL 2 UNUSED ?         */
*     THEN                          /* IF SO, RESTORE RPARM          */
         TM    NPWORSV2,B'00010000'                                0451
         BNZ   @RF00451                                            0451
*     RPARM=LVL1REG1;               /* FROM SAVE LEVEL 1             */
         L     RPARM,LVL1REG1                                      0452
*   ELSE                            /* ELSE, RESTORE RPARM           */
*     RPARM=LVL2REG1;               /* FROM SAVE LEVEL 2             */
*                                                                  0453
         B     @RC00451                                            0453
@RF00451 L     RPARM,LVL2REG1                                      0453
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR ASYNCHRONOUS REQUEST                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0454
*   IF RPARM->NWTORFLA='1'B         /* REQUEST ASYNCHRONOUS ?        */
*     THEN                          /* IF SO -                       */
@RC00451 TM    NWTORFLA(RPARM),B'10000000'                         0454
         BNO   @RF00454                                            0454
*     DO;                           /* PUT ECB ADDRESS IN LIST       */
*                                                                  0455
*       /*************************************************************/
*       /*                                                           */
*       /* IS THIS A GRAPHICS CONSOLE                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0456
*       IF NPMGRAPH='1'B            /* GRAPHICS CONSOLE ?            */
*         THEN                      /* YES -                         */
         TM    NPMGRAPH,B'00000100'                                0456
         BNO   @RF00456                                            0456
*         RPARM->NWTORECB=ADDR(UCMAECB);/* PUT UCM ECB ADDR IN LIST  */
         L     @10,UCMBASPT                                        0457
         LA    @10,UCMAECB(,@10)                                   0457
         ST    @10,NWTORECB(,RPARM)                                0457
*       ELSE                        /* NOT GRAPHICS CONSOLE -        */
*         RPARM->NWTORECB=ADDR(NIPECBIC);/* PUT INPUT ECB ADDR IN  0458
*                                      LIST                          */
         B     @RC00456                                            0458
@RF00456 LA    @10,NIPECBIC                                        0458
         ST    @10,NWTORECB(,RPARM)                                0458
*     END;                                                         0459
*   ELSE                            /* NOT ASYNCHRONOUS REQUEST      */
*     CALL NIPWTOR2;                /* CALL WAIT-FOR-REPLY RTN       */
*                                                                  0460
         B     @RC00454                                            0460
@RF00454 BAL   @14,NIPWTOR2                                        0460
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHICH SAVE LEVEL CONTAINS CALLER'S REGISTERS        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0461
*   IF NPWORSV2='0'B                /* LEVEL 2 NOT IN USE ?          */
*     THEN                          /* IF NOT -                      */
@RC00454 TM    NPWORSV2,B'00010000'                                0461
         BZ    @RT00461                                            0461
*     GO TO LVL1RSTR;               /* RESTORE FROM LEVEL 1          */
*   NPWORSV2='0'B;                  /* TURN SAVELEVEL 2 FLAG OFF     */
         NI    NPWORSV2,B'11101111'                                0463
*   GEN(LM  2,0,WTORLVL2);          /* RESTORE FROM LEVEL 2          */
         LM  2,0,WTORLVL2
*   GEN(BR  REXIT);                 /* RETURN TO CALLER              */
         BR  REXIT
*LVL1RSTR:                          /* ONLY LEVEL 1 IS IN USE        */
*   NPWORSV1='0'B;                  /* RESET LVL1 NOT IN USE         */
LVL1RSTR NI    NPWORSV1,B'11011111'                                0466
*   GEN(LM  2,0,WTORLVL1);          /* RESTORE REGS FROM LEVEL 1     */
         LM  2,0,WTORLVL1
*   GEN(BR REXIT);                  /* RETURN TO CALLING PROGRAM     */
         BR REXIT
*   GENERATE;                                                      0469
*                                                                  0469
*                                      /* GENERATE SAVEAREAS         */
WTORLVL1 DS  15F                          NIPWTOR SAVEAREA
LVL1REG1 DS  1F                           REG 1 SAVEAREA
WTORLVL2 DS  15F                          NIPWTOR SAVEAREA
LVL2REG1 DS  1F                           REG 1 SAVEAREA
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE REGISTERS USED BY NIPWTOR ROUTINE                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0470
*   RESPECIFY                                                      0470
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RUCB,                         /* UCB BASE REGISTER             */
*     CVTPTR) UNRESTRICTED;         /* CVT BASE REGISTER             */
*   GEN(EJECT);                     /* GEN ASSEMBLER EJECT           */
         EJECT
*   END NIPWTOR;                    /* END - NIPWTOR PROCEDURE     0472
*                                                                    */
@EL00003 DS    0H                                                  0472
@EF00003 DS    0H                                                  0472
@ER00003 BR    @14                                                 0472
*NIPWTOR2:                          /* WTOR WAIT ROUTINE             */
*                                                                  0473
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED TO WAIT FOR THE COMPLETION OF AN      */
*   /* OPERATOR'S REPLY ASSOCIATED WITH AN EARLIER NIPWTOR REQUEST OR*/
*   /* TO FREE AN SQA BUFFER AND IS CALLED EITHER BY NIPWTOR         */
*   /* (SYNCHRONOUS REQUEST) OF BY A NIP PROCESSOR WHICH PREVIOUSLY  */
*   /* INVOKED NIPWTOR. THE NIPWTOR2 ROUTINE REQUIRES, AS INPUT, A   */
*   /* POINTER IN REGISTER RPARM TO THE ASSOCIATED NIPWTOR PARAMETER */
*   /* LIST, OR THE ADDRESS IN TWO'S COMPLEMENT FORM OF THE SQA REPLY*/
*   /* BUFFER.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0473
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* PROCEDURE STATEMENT         */
*                                                                  0473
NIPWTOR2 DS    0H                                                  0474
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTRICT REGISTERS USED - NIPWTOR2 ROUTINE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0474
*   RESPECIFY                                                      0474
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RIOB,                         /* IOB BASE REGISTER             */
*     RNIPM,                        /* ROUTINE WORK REGISTER         */
*     CVTPTR) RESTRICTED;           /* CVT BASE REGISTER             */
*   DCL                                                            0475
*     WTR2REG1 PTR(31) GENERATED;   /* PARAM LIST ADDRESS            */
*   GEN(DS  0H);                    /* STATEMENT FOR LABEL           */
         DS  0H
*   GEN(NPM2ENTR WTOR2SAV,WTOR2BAS);/* GENERATE ENTRY CODE           */
*                                                                  0477
         NPM2ENTR WTOR2SAV,WTOR2BAS
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK PARAMETER REGISTER. IF LESS THAN ZERO, THIS IS A FREE   */
*   /* SQA REPLY BUFFER REQUEST.                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0478
*   IF RPRM1<0                      /* PARM REG LESS THAN 0 ?        */
*     THEN                          /* IF SO -                       */
         LTR   RPRM1,RPRM1                                         0478
         BNM   @RF00478                                            0478
*     DO;                           /* FREE SQA BUFFER               */
*       GEN(LCR RPARM,RPARM);       /* COMPLEMDNT TO FORM ADDR       */
         LCR RPARM,RPARM
*       RPARM=RPARM-4;              /* POINT TO BUFFER HEADER        */
*                                                                  0481
         SH    RPARM,@CH00101                                      0481
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK AQUIRED FLAG IN REPLY BUFFER                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0482
*       IF RPARM->NPMRFLNH='FFFF'X  /* FLAG VALID ?                  */
*         THEN                      /* IF SO -                       */
         CLC   NPMRFLNH(2,RPARM),@CB02814                          0482
         BNE   @RF00482                                            0482
*         DO;                       /* THEN RELEASE BUFFER           */
*           RZERO=RPARM->NPMRLNG;   /* LOAD BUFFER SIZE              */
*                                                                  0484
         LH    RZERO,NPMRLNG(,RPARM)                               0484
*           /*********************************************************/
*           /*                                                       */
*           /* OR SUBPOOL NO. (255) INTO REGISTER 0                  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0485
*           RZERO=RZERO×'FF000000'X;                               0485
*                                                                  0485
         O     RZERO,@CF02815                                      0485
*           /*********************************************************/
*           /*                                                       */
*           /* GENERATE FREEMAIN TO RELEASE REPLY BUFFER             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0486
*           GEN(FREEMAIN  R,LV=(0),A=(1));                         0486
         FREEMAIN  R,LV=(0),A=(1)
*         END;                                                     0487
*       RPARM=WTR2REG1;             /* RESTORE CALLERS REG 1         */
@RF00482 L     RPARM,WTR2REG1                                      0488
*       GO TO NPMTOR2R;             /* BRANCH TO RESTORE REGS        */
         B     NPMTOR2R                                            0489
*     END;                                                         0490
*                                                                  0490
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK VALIDITY OF WAIT REQUEST                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0491
*   IF NVTFLRAC='0'B                /* CONSOLE READ OUTSTANDING ?    */
*     THEN                          /* IF NOT -                      */
@RF00478 TM    NVTFLRAC(RNVT),B'00000010'                          0491
         BNZ   @RF00491                                            0491
*     DO;                           /* REQUEST IS INVALID            */
*       NVTFLWSC=NVTFLWSE;          /* SET NVT WAIT STATE CODE       */
         MVI   NVTFLWSC(RNVT),X'3F'                                0493
*       NVTIDPSW=NVTIDPSW&'F000'X;  /* CLEAR NVT ID PSW              */
         NC    NVTIDPSW(2,RNVT),@CB02802                           0494
*       NVTIDPSW=NVTIDPSW×'0001'X;  /* SET NVT PSW ID                */
         OC    NVTIDPSW(2,RNVT),@CB02491                           0495
*       GEN(IEAPMNIP TYPE=SWAIT)    /* LOAD DISABLED WAIT            */
*       REFS(NVTSWAIT);                                            0496
         IEAPMNIP TYPE=SWAIT
*     END;                                                         0497
*NPMGRCK:                           /* IS THIS A GRAPHICS CONSOLE ?  */
*   IF NPMGRAPH='1'B                /* GRAPHICS ?                    */
*     THEN                          /* YES -                         */
@RF00491 DS    0H                                                  0498
NPMGRCK  TM    NPMGRAPH,B'00000100'                                0498
         BNO   @RF00498                                            0498
*     DO;                           /* WAIT ON RELPY COMPLETION      */
*NPMUCMWT:                          /* WAIT ON UCM ECB               */
*       UECB=ADDR(UCMAECB);         /* GET ADDR OF UCM ECB           */
NPMUCMWT L     UECB,UCMBASPT                                       0500
         LA    UECB,UCMAECB(,UECB)                                 0500
*       GEN(WAIT ECB=(1));          /* WAIT ON UCM ECB               */
         WAIT ECB=(1)
*       UCMAECB=UCMAECB&&UCMAECB;   /* ZERO UCM ECB                  */
         L     @10,UCMBASPT                                        0502
         L     @15,UCMAECB(,@10)                                   0502
         LR    @00,@15                                             0502
         XR    @00,@15                                             0502
         ST    @00,UCMAECB(,@10)                                   0502
*       RIOB=ADDR(NIPIOBIC);        /* GET IOB ADDRESS               */
         LA    RIOB,NIPIOBIC                                       0503
*       GO TO NPMIOBFG;             /* CONTINUE PROCESSING           */
         B     NPMIOBFG                                            0504
*     END;                                                         0505
*NPMW2WAI:                          /* WAIT FOR REPLY FROM OPERATOR  */
*   GEN(WAIT  1,ECB=NIPECBIC);      /* WAIT FOR REQUEST COMPLETION   */
@RF00498 DS    0H                                                  0506
NPMW2WAI WAIT  1,ECB=NIPECBIC
*   RIOB=ADDR(NIPIOBIC);            /* GET IOB ADDRESS               */
*                                                                  0507
         LA    RIOB,NIPIOBIC                                       0507
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST ECB COMPLETION CODE ON RETURN FROM WAIT                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0508
*   IF NPBICPCD^='7F'X              /* I/O NOT SUCCESSFUL ?          */
*     THEN                          /* IF NOT -                      */
         CLI   NPBICPCD,X'7F'                                      0508
         BE    @RF00508                                            0508
*     CALL NPMCWAIT;                /* CALL CONSOLE ERROR RTN        */
         BAL   @14,NPMCWAIT                                        0509
*NPMIOBFG:                          /* I/O COMPLETE - CONTINUE       */
*   IOBFLAG='00'X;                  /* FLAG IOB FREE                 */
@RF00508 DS    0H                                                  0510
NPMIOBFG LR    @10,RIOB                                            0510
         AL    @10,@CF02854                                        0510
         MVI   IOBFLAG(@10),X'00'                                  0510
*   RUCB=NPBIUCBA;                  /* GET INPUT UCB ADDR            */
*                                                                  0511
         SLR   RUCB,RUCB                                           0511
         ICM   RUCB,7,NPBIUCBA                                     0511
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK DEVICE TYPE AND EOB RESPONSE. FIRST CHECK FOR UNIT      */
*   /* RECORD DEVICE.                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0512
*   IF UCB3UREC='1'B                /* UNIT RECORD DEVICE ?          */
*     THEN                          /* IF SO - -                     */
*                                                                  0512
         TM    UCB3UREC(UCBPTR),B'00001000'                        0512
         BNO   @RF00512                                            0512
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK RESIDUAL COUNT. IF READ LENGTH, EOB. IF NOT, REPLY WAS*/
*     /* NOT EOB.                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0513
*     IF CSWRCT^=80                 /* COUNT = READ LENGTH ?         */
*       THEN                        /* IF NOT, NOT EOB               */
         CLC   CSWRCT(2,IOBSTPTR),@CH02765                         0513
         BNE   @RT00513                                            0513
*       GO TO NPMW2UNE;             /* BRANCH TO CHECK REPLY         */
*     ELSE                          /* IF SO, REPLY OF EOB           */
*       GO TO SETEOB;               /* BRANCH TO EOB PROCESSING      */
*                                                                  0515
         B     SETEOB                                              0515
*   /*****************************************************************/
*   /*                                                               */
*   /* DEVICE NOT UNIT RECORD. CHECK FOR COMMUNICATIONS CLASS        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0516
*   IF UCB3COMM='1'B                /* COMM. CLASS DEVICE ?          */
*     THEN                          /* IF SO, CHECK FOR EOB          */
*                                                                  0516
@RF00512 TM    UCB3COMM(UCBPTR),B'01000000'                        0516
         BNO   @RF00516                                            0516
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK FIRST REPLY CHARACTER FOR EOB.                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0517
*     IF NPMRAREA(1)^='5B'X         /* FIRST CHARACTER EOB ?         */
*       THEN                        /* IF NOT - -                    */
         CLI   NPMRAREA,X'5B'                                      0517
         BNE   @RT00517                                            0517
*       GO TO NPMW2CNE;             /* BRANCH TO PROCESS REPLY       */
*     ELSE                          /* IF SO - -                     */
*       GO TO SETEOB;               /* PUT EOB IN REPLY AREA         */
*                                                                  0519
         B     SETEOB                                              0519
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR GRAPHICS DEVICE TYPE                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0520
*   IF UCB3DISP='1'B                /* GRAPHICS DEVICE TYPE ?        */
*     THEN                          /* IF SO -                       */
@RF00516 TM    UCB3DISP(UCBPTR),B'00010000'                        0520
         BO    @RT00520                                            0520
*     GO TO NPMW2GPH;               /* BRANCH TO GRAPHICS ROUTINE    */
*SETEOB:                            /* EOB REPLY - SET REPLY AREA    */
*   NPMRAREA(1:2)=' ''';            /* PLACE EOB ID IN REPLY AREA    */
SETEOB   MVC   NPMRAREA(2),@CC02830                                0522
*   RNIPM=ADDR(READAREA);           /* SET POINTER FOR HEADER        */
         LA    RNIPM,READAREA                                      0523
*   NPMRLNG=2;                      /* SET REPLY LENGTH TO EOB LEN   */
         MVC   NPMRLNG(2,RNIPM),@CH00120                           0524
*   N=1;                            /* OFFSET TO REPLY BEGINNING     */
         MVC   N(4),@CF00109                                       0525
*   GO TO NPMW2BM;                  /* BRANCH TO BUFFER MESSAGE      */
         B     NPMW2BM                                             0526
*NPMW2GPH:                          /* PROCESS REPLY FROM GRAPHICS 0527
*                                      DEVICE ----                   */
*                                                                  0527
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR MASTER CONSOLE ATTENTION PENDING                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0527
*   IF UCMAF^='1'B                  /* ATTENTION ON MASTER ?         */
*     THEN                          /* NO -                          */
NPMW2GPH L     @10,UCMDVEPT                                        0527
         TM    UCMAF(@10),B'10000000'                              0527
         BNO   @RT00527                                            0527
*     GO TO NPMGRCK;                /* CHECK FOR GRAPHICS CONSOLE    */
*   UCMAF='0'B;                     /* CLEAR ATTENTION PENDING       */
*                                                                  0529
         NI    UCMAF(@10),B'01111111'                              0529
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE CONSOLE DEVICE TYPE AND SELECT APPROPRIATE READ CCW */
*   /* CHAIN. IS CONSOLE A 2250                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0530
*   IF UCBTBYT4='02'X THEN          /* YES -                         */
         CLI   UCBTBYT4(UCBPTR),X'02'                              0530
         BNE   @RF00530                                            0530
*     DO;                           /* SELECT CHAIN AND BRANCH       */
*       RPARM=ADDR(RCCW2250);       /* SELECT 2250 READ CCW          */
         LA    RPARM,RCCW2250                                      0532
*       GO TO NPMREAD;              /* BRANCH FOR READ               */
         B     NPMREAD                                             0533
*     END;                                                         0534
*                                                                  0534
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2260                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0535
*   IF UCBTBYT4='03'X THEN          /* YES -                         */
@RF00530 CLI   UCBTBYT4(UCBPTR),X'03'                              0535
         BNE   @RF00535                                            0535
*     DO;                           /* SELECT CHAIN AND BRANCH       */
*       RPARM=ADDR(RCCW2260);       /* SELECT 2260 READ CCW          */
         LA    RPARM,RCCW2260                                      0537
*       GO TO NPMREAD;              /* BRANCH FOR READ               */
         B     NPMREAD                                             0538
*     END;                                                         0539
*                                                                  0539
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3066                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0540
*   IF UCBTBYT4='08'X THEN          /* YES -                         */
@RF00535 CLI   UCBTBYT4(UCBPTR),X'08'                              0540
         BNE   @RF00540                                            0540
*     DO;                           /* SELECT CHAIN AND BRANCH       */
*       RPARM=ADDR(RCCW3066);       /* SELECT 3066 READ CCW          */
         LA    RPARM,RCCW3066                                      0542
*       GO TO NPMREAD;              /* BRANCH FOR READ               */
         B     NPMREAD                                             0543
*     END;                                                         0544
*                                                                  0544
*   /*****************************************************************/
*   /*                                                               */
*   /* MUST BE 3277 OR 3155 CONSOLE                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0545
*   RPARM=ADDR(RCCW3277);           /* SELECT 3277 READ CCW          */
@RF00540 LA    RPARM,RCCW3277                                      0545
*NPMREAD:                           /* ISSUE CONSOLE READ AND WAIT   */
*   GEN(LCR RPARM,RPARM);           /* COMPLEMENT - INDICATE READ    */
NPMREAD  LCR RPARM,RPARM
*   NPMRAREA=BLANKS;                /* BLANK REPLY AREA      @YM06937*/
         MVC   NPMRAREA(83),BLANKS                                 0547
*   CALL NPMEXCPC;                  /* READ REPLY                    */
         BAL   @14,NPMEXCPC                                        0548
*   GEN(WAIT 1,ECB=NIPECBIC);       /* ISSUE WAIT FOR INPUT ECB      */
         WAIT 1,ECB=NIPECBIC
*   RIOB=ADDR(NIPIOBIC);            /* LOAD IOB ADDRESS              */
*                                                                  0550
         LA    RIOB,NIPIOBIC                                       0550
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST ECB COMPLETION CODE ON RETURN FROM WAIT                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0551
*   IF ECBCC^='7F'X                 /* SUCCESSFUL COMPLETION ?       */
*     THEN                          /* IF NOT -                      */
         L     @10,ECBPTR                                          0551
         CLI   ECBCC(@10),X'7F'                                    0551
         BE    @RF00551                                            0551
*     DO;                           /* CONSOLE ERROR                 */
*       CALL NPMCWAIT;              /* CALL CONSOLE ERROR RTN        */
         BAL   @14,NPMCWAIT                                        0553
*     END;                                                         0554
*   IOBFLAG='00'X;                  /* FLAG IOB AS FREE              */
*                                                                  0555
@RF00551 LR    @10,RIOB                                            0555
         AL    @10,@CF02854                                        0555
         MVI   IOBFLAG(@10),X'00'                                  0555
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESSING FOR 2250 CONSOLE. TEST FOR 2250.                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0556
*   IF UCBTBYT4='02'X               /* 2250 ?                        */
*     THEN                          /* IF SO -                       */
         CLI   UCBTBYT4(UCBPTR),X'02'                              0556
         BNE   @RF00556                                            0556
*     DO;                           /* TEST FOR 2250 ENTER           */
*                                                                  0557
*       /*************************************************************/
*       /*                                                           */
*       /* 2250 ENTER?                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0558
*       IF RMIAREA2='101'B×RMIAREA2='111'B THEN/* IF SO -            */
         TM    RMIAREA2,B'10100000'                                0558
         BNO   @GL00004                                            0558
         TM    RMIAREA2,B'01000000'                                0558
         BZ    @RT00558                                            0558
@GL00004 TM    RMIAREA2,B'11100000'                                0558
         BO    @RT00558                                            0558
*         GO TO NPMRESET;           /* UPDATE SCREEN                 */
*       ELSE                        /* IF NOT -                      */
*         GO TO NPMUCMWT;           /* WAIT ON UCM ECB               */
         B     NPMUCMWT                                            0560
*     END;                                                         0561
*                                                                  0561
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2260                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0562
*   IF UCBTBYT4='03'X THEN          /* YES - ENTER ASSUMED ON ANY  0562
*                                      ATTENTION INTERRUPT           */
@RF00556 CLI   UCBTBYT4(UCBPTR),X'03'                              0562
         BE    @RT00562                                            0562
*     GO TO NPMRESET;               /* UPDATE SCREEN                 */
*                                                                  0563
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3066                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0564
*   IF UCBTBYT4='08'X THEN          /* IF SO -                       */
         CLI   UCBTBYT4(UCBPTR),X'08'                              0564
         BNE   @RF00564                                            0564
*     DO;                           /* TEST FOR 3066 ENTER           */
*                                                                  0565
*       /*************************************************************/
*       /*                                                           */
*       /* 3066 ENTER?                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0566
*       IF RMIAREA3='101'B×RMIAREA3='111'B THEN/* IF SO -            */
         TM    RMIAREA3,B'10100000'                                0566
         BNO   @GL00005                                            0566
         TM    RMIAREA3,B'01000000'                                0566
         BZ    @RT00566                                            0566
@GL00005 TM    RMIAREA3,B'11100000'                                0566
         BO    @RT00566                                            0566
*         GO TO NPMRESET;           /* UPDATE SCREEN                 */
*       ELSE                        /* IF NOT -                      */
*         GO TO NPMUCMWT;           /* WAIT ON UCM ECB               */
         B     NPMUCMWT                                            0568
*     END;                                                         0569
*                                                                  0569
*   /*****************************************************************/
*   /*                                                               */
*   /* MUST BE 3277 CONSOLE. TEST FOR 3277 ENTER.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0570
*   IF RMIAREA1='7D'X               /* 3277 ENTER ?                  */
*     THEN                          /* IF SO -                       */
@RF00564 CLI   RMIAREA1,X'7D'                                      0570
         BE    @RT00570                                            0570
*     GO TO NPMRESET;               /* UPDATE SCREEN                 */
*   ELSE                            /* IF NOT -                      */
*     GO TO NPMUCMWT;               /* WAIT ON UCM ECB               */
         B     NPMUCMWT                                            0572
*NPMRESET:                                                         0573
*   NPMWRTSW='0'B;                  /* RESET WRITE SWITCH            */
NPMRESET NI    NPMWRTSW,B'11111101'                                0573
*   CALL NPMUPSCR;                  /* UPDATE GRAPHICS SCREEN        */
*                                                                  0574
         BAL   @14,NPMUPSCR                                        0574
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER NPMUPSCR DETECTED EXCESSIVE LENGTH  @YM06937*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0575
*   IF NPMILEN='1'B THEN                                           0575
         TM    NPMILEN,B'00100000'                                 0575
         BO    @RT00575                                            0575
*     GOTO NPMW2IRF;                /* INVALID REPLY - RESPECIFY   0576
*                                                            @YM06937*/
*                                                                  0576
*   /*****************************************************************/
*   /*                                                               */
*   /* ON RETURN TEST FOR EOB                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0577
*   IF NPMEOBSW='1'B                /* END OF BLOCK ?                */
*     THEN                          /* IF SO -                       */
         TM    NPMEOBSW,B'00000001'                                0577
         BO    @RT00577                                            0577
*     GO TO SETEOB;                 /* SET EOB ID                    */
*   ELSE                            /* IF NOT -                      */
*     GO TO NPMW2UNE;               /* CONTINUE REPLY PROCESSING     */
         B     NPMW2UNE                                            0579
*   RESPECIFY                                                      0580
*     REVEN RESTRICTED;             /* RESTRICT TRANSLATE REG        */
*NPMW2CNE:                          /* NON-EOB FOR COMM. CLASS       */
*                                                                  0581
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS REPLY FROM COMMUNICATIONS DEVICE - TRANSLATE TP CODE  */
*   /* TO EBCDIC                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0581
*   RNIPM=ADDR(READAREA);           /* SET POINTER FOR HEADER        */
NPMW2CNE LA    RNIPM,READAREA                                      0581
*   REVEN=NPMRLNG;                  /* LOAD REPLY LENGTH             */
         LH    REVEN,NPMRLNG(,RNIPM)                               0582
*   GEN(EX  REVEN,NPMTRTTE);        /* TRANSLATE TP CODE OF MESSAGE
*                                      TO EBCDIC                     */
         EX  REVEN,NPMTRTTE
*   RESPECIFY                                                      0584
*     REVEN UNRESTRICTED;           /* RELEASE TRANSLATE REG         */
*NPMW2UNE:                          /* DEVICE INDEPENDENT REPLY    0585
*                                      PROCESSING                    */
*                                                                  0585
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS BACKSPACE CHARACTERS                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0585
*   RNIPM=ADDR(READAREA);           /* SET POINTER FOR HEADER        */
NPMW2UNE LA    RNIPM,READAREA                                      0585
*   N=NPMRLNG;                      /* SET REPLY LENGTH VARIABLE     */
*                                                                  0586
         LH    @10,NPMRLNG(,RNIPM)                                 0586
         ST    @10,N                                               0586
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK EACH CHARACTER FOR BACK-SPACE CORRECTIONS               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0587
*   DO I=1 TO N;                                                   0587
*                                                                  0587
         LA    @10,1                                               0587
         B     @DE00587                                            0587
@DL00587 DS    0H                                                  0588
*     /***************************************************************/
*     /*                                                             */
*     /* IS THIS REPLY CHARACTER A BACK-SPACE                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0588
*     IF NPMRAREA(I)='16'X          /* BACK-SPACE CHARACTER ?        */
*       THEN                        /* YES -                         */
         LA    @15,NPMRAREA-1(@10)                                 0588
         CLI   0(@15),X'16'                                        0588
         BNE   @RF00588                                            0588
*       DO;                         /* PROCESS BACKSPACE             */
*         J=I-1;                    /* POINT TO PREVIOUS CHARACTER   */
*                                                                  0590
         LR    @00,@10                                             0590
         BCTR  @00,0                                               0590
         ST    @00,J                                               0590
*         /***********************************************************/
*         /*                                                         */
*         /* IF THIS BACKSPACES PTR PAST REPLY BEGINNING, BRANCH TO  */
*         /* INVALID REPLY FORMAT ROUTINE.                           */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0591
*         IF J^>0                   /* POINTS PAST BEGINNING ?       */
*           THEN                    /* IF SO -                       */
         LTR   @00,@00                                             0591
         BNP   @RT00591                                            0591
*           GO TO NPMW2IRF;         /* GO TO 'INVALID' ROUTINE       */
*                                                                  0592
*         /***********************************************************/
*         /*                                                         */
*         /* SHIFT REST OF REPLY BACK 2 SPACES TO OVERLAY CORRECTION */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0593
*         NPMRAREA(J:N-2)=NPMRAREA(I+1:N);                         0593
         LR    @15,@00                                             0593
         LA    @14,NPMRAREA-1(@15)                                 0593
         LA    @15,2                                               0593
         L     @09,N                                               0593
         LCR   @00,@00                                             0593
         ALR   @00,@09                                             0593
         SLR   @00,@15                                             0593
         LA    @08,NPMRAREA(@10)                                   0593
         MVC   @TS00001(83),0(@08)                                 0593
         LR    @08,@00                                             0593
         EX    @08,@SM02980                                        0593
*         I=I-2;                    /* DECREMENT COUNT               */
         SLR   @10,@15                                             0594
         ST    @10,I                                               0594
*         N=N-2;                    /* DECREMENT REPLY LENGTH        */
         SLR   @09,@15                                             0595
         ST    @09,N                                               0595
*         NPMRLNG=NPMRLNG-2;        /* REDUCE HEADER LENGTH          */
         LCR   @15,@15                                             0596
         AH    @15,NPMRLNG(,RNIPM)                                 0596
         STH   @15,NPMRLNG(,RNIPM)                                 0596
*       END;                                                       0597
*   END;                            /* END OF DO LOOP                */
@RF00588 LA    @10,1                                               0598
         AL    @10,I                                               0598
@DE00587 ST    @10,I                                               0598
         C     @10,N                                               0598
         BNH   @DL00587                                            0598
*   RNIPM=ADDR(READAREA);           /* SET POINTER FOR HEADER        */
         LA    RNIPM,READAREA                                      0599
*   NPMRLNG=NPMRLNG-CSWRCT;         /* SUBTRACT CSW RESIDUAL COUNT 0600
*                                      FROM HEADER LENGTH            */
*                                                                  0600
         LH    @10,NPMRLNG(,RNIPM)                                 0600
         SH    @10,CSWRCT(,IOBSTPTR)                               0600
         STH   @10,NPMRLNG(,RNIPM)                                 0600
*   /*****************************************************************/
*   /*                                                               */
*   /* FOLD REPLY CHARACTERS TO UPPER CASE                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0601
*   DO I=1 TO NPMRLNG;              /* FOLD THE REPLY                */
         LA    @10,1                                               0601
         B     @DE00601                                            0601
@DL00601 DS    0H                                                  0602
*     NPMRAREA(I)=NPMRAREA(I)×'40'X;/* FOLD A BYTE                   */
         LA    @15,NPMRAREA-1(@10)                                 0602
         OI    0(@15),X'40'                                        0602
*   END;                            /* END OF FOLDING LOOP           */
*                                                                  0603
         AH    @10,@CH00109                                        0603
@DE00601 ST    @10,I                                               0603
         CH    @10,NPMRLNG(,RNIPM)                                 0603
         BNH   @DL00601                                            0603
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK OPERATOR'S REPLY PREFIX. FIRST CHECK FOR THE CHARACTERS */
*   /* 'REPLY 0'.                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0604
*CHKRPLY:                                                          0604
*   IF NPMRAREA(1:7)='REPLY 0'      /* PREFIX OF 'REPLY 0' ?         */
*     THEN                          /* IF SO, VALID SO FAR -         */
CHKRPLY  CLC   NPMRAREA(7),@CC02847                                0604
         BNE   @RF00604                                            0604
*     N=8;                          /* SET N TO NEXT CHARACTER       */
         MVC   N(4),@CF00107                                       0605
*   ELSE                            /* NOT 'REPLY 0' -               */
*                                                                  0606
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK PREFIX FOR CHARACTERS 'R 0'                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0606
*     IF NPMRAREA(1:3)='R 0'        /* PREFIX OF 'R 0' ?             */
*       THEN                        /* IF SO, VALID SO FAR -         */
         B     @RC00604                                            0606
@RF00604 CLC   NPMRAREA(3),@CC02849                                0606
         BNE   @RF00606                                            0606
*       N=4;                        /* SET N TO NEXT CHARACTER       */
         MVC   N(4),@CF00101                                       0607
*     ELSE                          /* NOT R 0', PREFIX INVALID -    */
*       GO TO NPMW2IRF;             /* GO TO INVALID REPLY FORMAT    */
*                                                                  0608
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR SECOND ZERO IN REPLY PREFIX. IF THERE, SET POINTER  */
*   /* TO NEXT CHARACTER.                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*   IF NPMRAREA(N)='0'              /* NEXT CHARACTER A ZERO ?       */
*     THEN                          /* IF SO, STILL VALID PREFIX-    */
@RC00604 L     @10,N                                               0609
         LA    @15,NPMRAREA-1(@10)                                 0609
         CLI   0(@15),C'0'                                         0609
         BNE   @RF00609                                            0609
*     N=N+1;                        /* POINT TO NEXT CHARACTER       */
*                                                                  0610
         AH    @10,@CH00109                                        0610
         ST    @10,N                                               0610
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NEXT CHARACTER PAST LAST '0' IS A BLANK, TREAT AS END OF   */
*   /* BLOCK.                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0611
*   IF NPMRAREA(N)=' '              /* NEXT CHARACTER A BLANK ?      */
*     THEN                          /* IF SO -                       */
@RF00609 L     @10,N                                               0611
         LA    @15,NPMRAREA-1(@10)                                 0611
         CLI   0(@15),C' '                                         0611
         BE    @RT00611                                            0611
*     GO TO SETEOB;                 /* SET EOB IN REPLY AREA         */
*                                                                  0612
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR NEXT CHARACTERS OF ','''. IF THERE, REPLY IS        */
*   /* ENCLOSED IN QUOTES. SCAN TO END.                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0613
*   IF NPMRAREA(N:N+1)=','''        /* COMMA-QUOTE FOUND ?           */
*     THEN                                                         0613
         LA    @15,NPMRAREA-1(@10)                                 0613
         CLC   0(2,@15),@CC02851                                   0613
         BNE   @RF00613                                            0613
*     DO;                                                          0614
*       N=N+2;                      /* POINT PAST COMMA-QUOTE        */
*                                                                  0615
         AH    @10,@CH00120                                        0615
         ST    @10,N                                               0615
*       /*************************************************************/
*       /*                                                           */
*       /* SCAN REMAINDER OF REPLY FOR TRAILING QUOTE                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0616
*       DO I=N TO NPMRLNG;          /* SCAN REMAINDER                */
*                                                                  0616
         B     @DE00616                                            0616
@DL00616 DS    0H                                                  0617
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK EACH CHARACTER FOR BEING TRAILING QUOTE           */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0617
*         IF NPMRAREA(I)=''''       /* CHARACTER A QUOTE ?           */
*           THEN                    /* IF SO, VALID REPLY -          */
         LA    @15,NPMRAREA-1(@10)                                 0617
         CLI   0(@15),C''''                                        0617
         BE    @RT00617                                            0617
*           GO TO NPMW2BM;          /* GO TO PLACE MSG IN BUFFER     */
*       END;                        /* END OF QUOTE SCAN DO LOOP     */
         AH    @10,@CH00109                                        0619
@DE00616 ST    @10,I                                               0619
         CH    @10,NPMRLNG(,RNIPM)                                 0619
         BNH   @DL00616                                            0619
*       GO TO NPMW2IRF;             /* NO QUOTE FOUND - INVALID      */
         B     NPMW2IRF                                            0620
*     END;                                                         0621
*                                                                  0621
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT CHARACTER MUST BE COMMA FOR VALID REPLY. IF SO, SCAN FROM*/
*   /* END OF REPLY TO LAST NONBLANK CHARACTER AND ADD A QUOTE TO    */
*   /* DELIMIT THE REPLY.                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0622
*   IF NPMRAREA(N)=','              /* NEXT REPLY CHAR = COMMA ?     */
*     THEN                          /* IF SO -                       */
*                                                                  0622
@RF00613 L     @10,N                                               0622
         LA    @15,NPMRAREA-1(@10)                                 0622
         CLI   0(@15),C','                                         0622
         BNE   @RF00622                                            0622
*     /***************************************************************/
*     /*                                                             */
*     /* SCAN BACK FROM MESSAGE END FOR FIRST NONBLANK CHARACTER     */
*     /* (REPLY TEXT END).                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0623
*     DO I=NPMRLNG BY-1;                                           0623
*                                                                  0623
         LH    @10,NPMRLNG(,RNIPM)                                 0623
         ST    @10,I                                               0623
@DL00623 DS    0H                                                  0624
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK EACH CHARACTER FOR NONBLANK (END OF TRAILING        */
*       /* BLANKS).                                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0624
*       IF NPMRAREA(I)^=' '         /* CHARACTER NONBLANK ?          */
*         THEN                      /* IF SO, AT REPLY END           */
         LA    @15,NPMRAREA-1(@10)                                 0624
         CLI   0(@15),C' '                                         0624
         BE    @RF00624                                            0624
*         DO;                       /* DELIMIT REPLY AND PROCEED     */
*           NPMRAREA(I+1)='''';     /* PLACE QUOTE AT END            */
         LA    @15,NPMRAREA(@10)                                   0626
         MVI   0(@15),C''''                                        0626
*           NPMRLNG=I+1;            /* SET REPLY LENGTH              */
         LA    @15,1                                               0627
         ALR   @10,@15                                             0627
         STH   @10,NPMRLNG(,RNIPM)                                 0627
*           N=N+1;                  /* SET OFFSET TO REPLY BEGIN     */
         AL    @15,N                                               0628
         ST    @15,N                                               0628
*           GO TO NPMW2BM;          /* PLACE MESSAGE IN BUFFER       */
         B     NPMW2BM                                             0629
*         END;                                                     0630
*     END;                          /* END-TRAILING BLANK DO LOOP    */
@RF00624 SLR   @10,@10                                             0631
         BCTR  @10,0                                               0631
         AL    @10,I                                               0631
         ST    @10,I                                               0631
         B     @DL00623                                            0631
*NPMW2IRF:                          /* ISSUE INVALID FORMAT MESSAGE
*                                      TO OPERATOR                   */
*   NVTFLRAC='0'B;                  /* RESET READ-OUTSTANDING FLAG   */
@RF00622 DS    0H                                                  0632
NPMW2IRF NI    NVTFLRAC(RNVT),B'11111101'                          0632
*   RPARM=ADDR(IEA305A);            /* GET ADDR OF MSG FLAG BYTE     */
         LA    RPARM,IEA305A                                       0633
*   RPARM->NWTOFLNH='1'B;           /* INDICATE NO HARDCOPY          */
         OI    NWTOFLNH(RPARM),B'10000000'                         0634
*   RPARM=ADDR(PLSTXX7I);           /* GET PARM LIST ADDRESS         */
         LA    RPARM,PLSTXX7I                                      0635
*   CALL NIPWTOR;                   /* GO TO WTOR ROUTINE            */
         BAL   @14,NIPWTOR                                         0636
*   GEN(L  RPARM,WTR2REG1);         /* RESTORE PARM LIST ADDRESS     */
         L  RPARM,WTR2REG1
*   GO TO NPMW2WAI;                 /* BRANCH TO WAIT-FOR-REPLY      */
         B     NPMW2WAI                                            0638
*NPMW2BM:                           /* PLACE MESSAGE IN BUFFER       */
*   NPMW2OPR=N-1;                   /* SET REPLY PREFIX LENGTH       */
NPMW2BM  L     @10,N                                               0639
         BCTR  @10,0                                               0639
         STH   @10,NPMW2OPR                                        0639
*   RPARM=ADDR(READAREA);           /* SET PTR TO REPLY HEADER       */
         LA    RPARM,READAREA                                      0640
*   NPMRLNG=NPMRLNG+4;              /* ADD HDR LENGTH FOR HDCPY      */
*                                                                  0641
         LA    @10,4                                               0641
         AH    @10,NPMRLNG(,RNIPM)                                 0641
         STH   @10,NPMRLNG(,RNIPM)                                 0641
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK WHETHER CALLER REQUESTS WTOR2 PROVIDE BUFFER            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0642
*   IF WTR2REG1->NWTORFLB='0'B      /* IF PROVIDE-SQA-BUFFER FLAG    */
*     THEN                          /* IS NOT ON IN PARAMETER LIST   */
         L     @10,WTR2REG1                                        0642
         TM    NWTORFLB(@10),B'00001000'                           0642
         BNZ   @RF00642                                            0642
*     DO;                           /* BUFFER IN CALLER'S AREA       */
*                                                                  0643
*       /*************************************************************/
*       /*                                                           */
*       /* CALL HARDCOPY ROUTINE TO ENTER MSG IN NIP BUFFER          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0644
*       CALL NPMHDCPY;                                             0644
         BAL   @14,NPMHDCPY                                        0644
*       RPARM=WTR2REG1->NWTORRPA;   /* OBTAIN CALLER'S BUFFER ADDRESS
*                                      FROM PARMLIST                 */
         L     @10,WTR2REG1                                        0645
         L     RPARM,NWTORRPA(,@10)                                0645
*       N=NPMRLNG-NPMW2OPR-4;       /* SUBTRACT PREFIX LENGTH AND  0646
*                                      HEADER LENGTH FROM MESSAGE  0646
*                                      LENGTH                        */
*                                                                  0646
         LH    @10,NPMW2OPR                                        0646
         LH    @00,NPMRLNG(,RNIPM)                                 0646
         SLR   @00,@10                                             0646
         SH    @00,@CH00101                                        0646
         ST    @00,N                                               0646
*       /*************************************************************/
*       /*                                                           */
*       /* MOVE REPLY TO CALLER'S REPLY BUFFER                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0647
*       REPLYBUF(1:N)=NPMRAREA(NPMW2OPR+1:NPMW2OPR+N);             0647
         BCTR  @00,0                                               0647
         LA    @15,NPMRAREA(@10)                                   0647
         LR    @10,@00                                             0647
         EX    @10,@SM02982                                        0647
*       GO TO NPMW2PR;              /* GO TO PREPARE-TO-RETURN       */
         B     NPMW2PR                                             0648
*     END;                                                         0649
*   GEN(LCR  RPARM,RPARM);          /* COMPLEMENT REG TO ADDR OF   0650
*                                      HARDCOPY BUFFER BE RETURNED   */
*                                                                  0650
@RF00642 DS    0H                                                  0650
         LCR  RPARM,RPARM
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL HARDCOPY ROUTINE TO ENTER MSG IN NIP BUFFER              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0651
*   CALL NPMHDCPY;                                                 0651
*                                                                  0651
         BAL   @14,NPMHDCPY                                        0651
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR MESSAGE SUCCESSFULLY BUFFERED BY HARDCOPY           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0652
*   IF RPARM>0                      /* PARM REG POSITIVE ?           */
*     THEN                          /* IF SO -                       */
         LTR   RPARM,RPARM                                         0652
         BNP   @RF00652                                            0652
*     DO;                           /* HARDCOPY SUCCESSFUL           */
*       RPARM=RPARM+NPMW2OPR;       /* SET PARAMETER PTR TO MESSAGE
*                                      (PAST PREFIX)                 */
         AH    RPARM,NPMW2OPR                                      0654
*       GO TO NPMW2PR;              /* GO TO PREPARE-T0-RETURN RTN   */
         B     NPMW2PR                                             0655
*     END;                                                         0656
*                                                                  0656
*   /*****************************************************************/
*   /*                                                               */
*   /* MESSAGE NOT BUFFERED - ACQUIRE ADDITIONAL SQA BUFFER          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0657
*   RZERO=NPMRLNG-NPMW2OPR;         /* SUBTRACT PREFIX LENGTH FROM 0657
*                                      MESSAGE LENGTH                */
@RF00652 LH    RZERO,NPMRLNG(,RNIPM)                               0657
         SH    RZERO,NPMW2OPR                                      0657
*   N=RZERO;                        /* STORE MESSAGE LENGTH          */
         ST    RZERO,N                                             0658
*   RZERO=RZERO×'FF000000'X;        /* 'OR' SUBPOOL NUMBER (255) INTO
*                                      HIGH-ORDER BYTE               */
         O     RZERO,@CF02815                                      0659
*   GEN(GETMAIN  R,LV=(0));         /* ACQUIRE BUFFER FROM SP 255    */
         GETMAIN  R,LV=(0)
*   RPARM->NPMRLNG=N;               /* SET MSG LENGTH IN HEADER      */
         L     @10,N                                               0661
         STH   @10,NPMRLNG(,RPARM)                                 0661
*   RPARM->NPMRFLNH='FFFF'X;        /* SET ACQUIRED-BUFFER FLAG      */
         MVC   NPMRFLNH(2,RPARM),@CB02814                          0662
*   RPARM=RPARM+4;                  /* SET BUFFER PTR TO MSG START   */
*                                                                  0663
         AH    RPARM,@CH00101                                      0663
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE REPLY WITHOUT PREFIX TO BUFFER                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0664
*   REPLYBUF(1:N-4)=NPMRAREA(NPMW2OPR+1:NPMW2OPR+N-4);             0664
         SH    @10,@CH01182                                        0664
         LH    @15,NPMW2OPR                                        0664
         LA    @14,NPMRAREA(@15)                                   0664
         EX    @10,@SM02984                                        0664
*NPMW2PR:                           /* PREPARE TO RETURN TO CALLER   */
*   NVTFLRAC='0'B;                  /* RESET READ-OUTSTANDING FLAG   */
NPMW2PR  NI    NVTFLRAC(RNVT),B'11111101'                          0665
*NPMTOR2R:                          /* RESTORE CALLER'S REGISTERS  0666
*                                      LEAVING BUFFER ADDR IN REG1   */
*   GEN(LM  2,0,WTOR2SAV);          /* RESTORE CALLER'S REGISTERS    */
NPMTOR2R LM  2,0,WTOR2SAV
*   GEN(BR 14);                     /* RETURN TO CALLER              */
         BR 14
*   GENERATE;                                                      0668
*                                                                  0668
*                                      /* GEN ROUTINE SAVEAREAS      */
WTOR2SAV DS   15F                         NIPWTOR2 SAVEAREA
WTR2REG1 DS   1F                          REG 1 SAVEAREA
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE REGISTERS USED - NIPWTOR2 ROUTINE                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0669
*   RESPECIFY                                                      0669
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RIOB,                         /* IOB BASE REGISTER             */
*     RNIPM,                        /* ROUTINE WORK REGISTER         */
*     CVTPTR) UNRESTRICTED;         /* CVT BASE REGISTER             */
*   GEN(EJECT);                     /* GEN ASSEMBLER EJECT           */
         EJECT
*   END NIPWTOR2;                   /* END OF WTOR2 ROUTINE        0671
*                                                                    */
@EL00004 DS    0H                                                  0671
@EF00004 DS    0H                                                  0671
@ER00004 BR    @14                                                 0671
*NPMHDCPY:                          /* NIP HARDCOPY ROUTINE          */
*                                                                  0672
*   /*****************************************************************/
*   /*                                                               */
*   /* THE NPMHDCPY ROUTINE IS ENTERED FROM OTHER IEAVNIPM ROUTINES  */
*   /* TO ENTER NIP MESSAGES AND ANY ASSOCIATED REPLIES IN THE NIP   */
*   /* MESSAGE HARDCOPY BUFFER IN SQA. NPMHDCPY IS USED BY THE NIPWTO*/
*   /* AND WTOR ROUTINES IN IEAVNIPM. THE NPMHDCPY ROUTINE REQUIRES, */
*   /* AS INPUT, A POINTER TO THE MESSAGE HEADER IN REGISTER RPARM.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0672
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* PROC STATEMENT              */
*                                                                  0672
NPMHDCPY DS    0H                                                  0673
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTRICT REGISTERS FOR NPMHDCPY ROUTINE                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0673
*   RESPECIFY                                                      0673
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     CVTPTR) RESTRICTED;           /* CVT BASE REGISTER             */
*   DCL                                                            0674
*     HDCPREG1 PTR(31) GENERATED;   /* PARAMETER REGISTER            */
*   GENERATE;                                                      0675
*                                                                  0675
*                                      /* GEN ENTRY TEST
         LTR    RPARM,RPARM               IS BUFFER REQUESTED ?
         BM     HDCPY                     IF YES HDCPY IS REQUIRED
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST HARDCOPY NOT REQUIRED FLAG IN MESSAGE HEADER. IF ON,     */
*   /* RETURN TO CALLER.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0676
*   IF RPARM->NWTOFLNH='1'B         /* HARDCOPY REQUIRED?            */
*     THEN                          /* IF NOT -                      */
         TM    NWTOFLNH(RPARM),B'10000000'                         0676
         BNO   @RF00676                                            0676
*     DO;                           /* RETURN                        */
*       GEN(BR   REXIT);            /* RETURN TO CALLER              */
         BR   REXIT
*     END;                                                         0679
*   GENERATE;                                                      0680
*                                                                  0680
@RF00676 DS    0H                                                  0680
*                                      /* GEN ENTRY LINKAGE          */
HDCPY    EQU     *                        HARDCOPY ENTRY
         STM   2,1,HDCPYSAV               SAVE CALLERS REGS
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR NEGATIVE RPARM - INDICATING CALLER'S REQUEST FOR THE */
*   /* HARDCOPIED MESSAGE ADDRESS. COMPLEMENT RPARM.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0681
*   IF RPRM1<0                      /* RPARM NEGATIVE ?              */
*     THEN                          /* IF SO, COMPLEMENT             */
         LTR   RPRM1,RPRM1                                         0681
         BNM   @RF00681                                            0681
*     RPARM=-RPARM;                 /* FOR MSG ADDRESS               */
         LCR   RPARM,RPARM                                         0682
*   MSGAD=RPARM;                    /* SAVE MESSAGE ADDRESS          */
*                                                                  0683
@RF00681 ST    RPARM,MSGAD                                         0683
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR MESSAGE BUFFER ADDRESS INITIALIZED                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0684
*   IF NVTMBUF=0                    /* BUFFER ADDR INITIALIZED ?     */
*     THEN                          /* IF NOT, BRANCH                */
         SLR   @10,@10                                             0684
         C     @10,NVTMBUF(,RNVT)                                  0684
         BE    @RT00684                                            0684
*     GO TO NPMHCRSR;               /* TO RESTORE-AND-RETURN         */
*                                                                  0685
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR HARDCOPY DISCOUNTINUED                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0686
*   IF NVTFLNHC='1'B                /* HARDCOPY DISCONTINUED ?       */
*     THEN                          /* IF SO, BRANCH                 */
         TM    NVTFLNHC(RNVT),B'00001000'                          0686
         BO    @RT00686                                            0686
*     GO TO NPMHCRSR;               /* TO RESTORE-AND-RETURN         */
*   N=RPARM->NWTOLNG+12;            /* SET VARIABLE TO MESSAGE LENGTH
*                                      PLUS NIP MESSAGE PREFIX LENGTH
*                                      LESS LENGTH OF INPUT MESSAGE
*                                      HEADER                        */
         LA    @00,12                                              0688
         AH    @00,NWTOLNG(,RPARM)                                 0688
         ST    @00,N                                               0688
*   J=N//4;                         /* COMPUTE REMAINDER OF LENGTH 0689
*                                      DIVIDED INTO FULLWORDS        */
*                                                                  0689
         LR    @04,@00                                             0689
         SRDA  @04,32                                              0689
         D     @04,@CF00101                                        0689
         ST    @04,J                                               0689
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUND MESSAGE LENGTH UP TO FULLWORD MULTIPLE                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0690
*   IF J^=0                         /* IF REMAINDER IS NOT ZERO      */
*     THEN                          /* ADD PADDING TO MAKE LENGTH    */
         CR    @04,@10                                             0690
         BE    @RF00690                                            0690
*     DO;                           /* A FULLWORD MULTIPLE:          */
*       J=4-J;                      /* COMPUTE PADDING NECESSARY     */
         LCR   @04,@04                                             0692
         AH    @04,@CH00101                                        0692
         ST    @04,J                                               0692
*       N=N+J;                      /* ADD PAD TO MESSAGE LENGTH     */
         ALR   @00,@04                                             0693
         ST    @00,N                                               0693
*     END;                                                         0694
*                                                                  0694
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THAT MESSAGE WILL FIT IN NIP MESSAGE BUFFER             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0695
*   IF NVTMBEND-NVTMBUF^>N          /* IF MESSAGE SIZE IS GREATER    */
*     THEN                          /* THAN REMAINING BUFFER -       */
@RF00690 L     @10,NVTMBEND(,RNVT)                                 0695
         SL    @10,NVTMBUF(,RNVT)                                  0695
         C     @10,N                                               0695
         BH    @RF00695                                            0695
*     DO;                           /* DISCONTINUE HARDCOPY          */
*       RPARM=ADDR(IEA154I);        /* SET PTR TO HDCPY MESSAGE      */
         LA    RPARM,IEA154I                                       0697
*       RPARM->NWTOFLNH='1'B;       /* SET NO-HARDCOPY FLAG          */
         OI    NWTOFLNH(RPARM),B'10000000'                         0698
*       CALL NIPWTO;                /* CALL WTO TO WRITE HARDCOPY  0699
*                                      DISCONTINUED MESSAGE          */
         BAL   @14,NIPWTO                                          0699
*       NVTFLNHC='1'B;              /* SET NVT HARDCOPY DISCONTINUED
*                                      FLAG                          */
         OI    NVTFLNHC(RNVT),B'00001000'                          0700
*       GO TO NPMHCRSR;             /* RESTORE REGS AND RETURN       */
         B     NPMHCRSR                                            0701
*     END;                                                         0702
*   NIPMBLL=N;                      /* MOVE LENGTH TO MSG/HDR        */
@RF00695 L     @10,NVTMBUF(,RNVT)                                  0703
         MVC   NIPMBLL(2,@10),N+2                                  0703
*   NIPMBB0='0000'X;                /* ZERO RESERVED FIELD           */
*                                                                  0704
         SLR   @00,@00                                             0704
         STH   @00,NIPMBB0(,@10)                                   0704
*   /*****************************************************************/
*   /*                                                               */
*   /* REQUEST BINARY TIME FOR HEADER TIME STAMP                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0705
*   GEN(IEAPMNIP TYPE=TIME,PARAM=DEC)                              0705
*   REFS(NVTTIME);                                                 0705
         IEAPMNIP TYPE=TIME,PARAM=DEC
*   NIPMBTS=RPARM;                  /* MOVE TIME TO TIME STAMP       */
*                                                                  0706
         L     @10,NVTMBUF(,RNVT)                                  0706
         ST    RPARM,NIPMBTS(,@10)                                 0706
*   /*****************************************************************/
*   /*                                                               */
*   /* CONVERT TIME FROM PACKED TO UNPACKED DECIMAL                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0707
*   RPARM=NVTMBUF;                  /* PROVIDE BASE FOR UNPACK       */
         LR    RPARM,@10                                           0707
*   GEN(UNPK  NIPMBTIM(7,RPARM),NIPMBTS(4,RPARM));/* UNPACK          */
         UNPK  NIPMBTIM(7,RPARM),NIPMBTS(4,RPARM)
*   NIPMBB1=HDRMASK;                /* PUT BLANKS AND ROUTING CODE IN
*                                      MESSAGE HEADER                */
         L     @10,NVTMBUF(,RNVT)                                  0709
         MVC   NIPMBB1(6,@10),HDRMASK                              0709
*   RPARM=MSGAD;                    /* RESTORE CALLERS RPARM         */
         L     RPARM,MSGAD                                         0710
*   N=RPARM->NWTOLNG-4;             /* DETERMINE MESSAGE LENGTH      */
         LH    @00,NWTOLNG(,RPARM)                                 0711
         SH    @00,@CH00101                                        0711
         ST    @00,N                                               0711
*   NIPMBMTX(1:N)=REPLYBUF(5:N+4);  /* MOVE MESSAGE TEXT             */
*                                                                  0712
         BCTR  @00,0                                               0712
         LR    @15,@00                                             0712
         EX    @15,@SM02987                                        0712
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR BUFFER ADDRESS REQUESTED                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0713
*   IF HDCPREG1<CZERO               /* IF PARAMETER IS IN TWO'S      */
*     THEN                          /* COMPLEMENT FORM -             */
         L     @00,HDCPREG1                                        0713
         C     @00,CZERO                                           0713
         BNL   @RF00713                                            0713
*     RPARM=ADDR(NIPMBMTX);         /* SET RPARM TO BUFFER ADDR      */
*                                                                  0714
         LA    RPARM,NIPMBMTX(,@10)                                0714
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR PADDING REQUIRED TO ROUND MESSAGE TO FULLWORD       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0715
*   IF J^=0                         /* IF PADDING WAS REQUIRED       */
*     THEN                          /* PAD WITH BLANKS               */
*                                                                  0715
@RF00713 ICM   @10,15,J                                            0715
         BZ    @RF00715                                            0715
*     /***************************************************************/
*     /*                                                             */
*     /* PAD MESSAGE TO WORD BOUNDARY WITH BLANKS                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0716
*     DO I=1 TO J;                  /* LOOP FOR NUMBER REQUIRED      */
         LA    @10,1                                               0716
         B     @DE00716                                            0716
@DL00716 DS    0H                                                  0717
*       NIPMBMTX(N+I)=' ';          /* EXTENT MESSAGE WITH BLANKS    */
         L     @15,N                                               0717
         ALR   @15,@10                                             0717
         L     @14,NVTMBUF(,RNVT)                                  0717
         ALR   @14,@15                                             0717
         MVI   NIPMBMTX-1(@14),C' '                                0717
*     END;                          /* END OF DO LOOP                */
         AH    @10,@CH00109                                        0718
@DE00716 ST    @10,I                                               0718
         C     @10,J                                               0718
         BNH   @DL00716                                            0718
*   NIPMBMTX(N+J+1)='7B'X;          /* SET END-OF-BUFFER INDICATOR   */
@RF00715 L     @10,N                                               0719
         L     @15,J                                               0719
         LR    @14,@10                                             0719
         ALR   @14,@15                                             0719
         L     @09,NVTMBUF(,RNVT)                                  0719
         ALR   @14,@09                                             0719
         MVI   NIPMBMTX(@14),X'7B'                                 0719
*   NVTMBUF=NVTMBUF+16+N+J;         /* UPDATE ADDRESS OF NEXT      0720
*                                      AVAILABLE BUFFER SPACE        */
         AH    @09,@CH01185                                        0720
         ALR   @09,@10                                             0720
         ALR   @09,@15                                             0720
         ST    @09,NVTMBUF(,RNVT)                                  0720
*   GO TO NPMHCRR;                  /* RESTORE REGS AND RETURN       */
         B     NPMHCRR                                             0721
*NPMHCRSR:                          /* RESTORE ALL REGS AND RETURN   */
*   RPARM=HDCPREG1;                 /* RESTORE REGISTER RPARM        */
*                                                                  0722
NPMHCRSR L     RPARM,HDCPREG1                                      0722
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RPARM NEG BUFFER REQUESTED BUT NOT AVAILABLE IF RPARM POS  */
*   /* BUFFER NOT REQUIRED.                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0723
*NPMHCRR:                           /* RESTORE REGISTERS 2-0 AND   0723
*                                      RETURN TO CALLER              */
*   GEN(LM  2,0,HDCPYSAV);          /* RESTORE REGISTERS 2-0         */
NPMHCRR  LM  2,0,HDCPYSAV
*   GEN(BR  REXIT);                 /* RETURN TO CALLER              */
         BR  REXIT
*   GENERATE;                                                      0725
*                                                                  0725
*                                      /* GEN NPMHDCPY SAVEAREA      */
HDCPYSAV DS   15F                         NIPMHDCPY SAVEAREA
HDCPREG1 DS   1F                          REG 1 SAVE AREA
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE REGISTERS FOR NPMHDCPY ROUTINE                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0726
*   RESPECIFY                                                      0726
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     CVTPTR) UNRESTRICTED;         /* CVT BASE REGISTER             */
*   GEN(EJECT);                     /* GEN ASSEMBLER EJECT           */
         EJECT
*   END NPMHDCPY;                   /* END - NPMHDCPY PROCEDURE    0728
*                                                                    */
@EL00005 DS    0H                                                  0728
@EF00005 DS    0H                                                  0728
@ER00005 BR    @14                                                 0728
*NPMCWAIT:                          /* CONSOLE ERROR WAIT ROUTINE    */
*                                                                  0729
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROVIDES A CENTRALIZED INTERFACE FOR HANDLING A  */
*   /* PERMANENT CONSOLE ERROR. INPUT PARAMETER IS REGISTER RIOB     */
*   /* CONTAINING THE ADDRESS OF THE IOB USED IN THE FAILING I/O     */
*   /* OPERATION.                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0729
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* PROC STATEMENT              */
*                                                                  0729
NPMCWAIT DS    0H                                                  0730
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTRICT REGISTERS USED IN NPMCWAIT ROUTINE                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0730
*   RESPECIFY                                                      0730
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RIOB,                         /* IOB BASE REGISTER             */
*     RNIPM) RESTRICTED;            /* ROUTINE WORK REGISTER         */
*   NVTFLAC='0'B;                   /* SET ACTIVE-MASTER-CONSOLE FLAG
*                                      OFF TO PREVENT FURTHER CONSOLE
*                                      I/O                           */
         NI    NVTFLAC(RNVT),B'01111111'                           0731
*   NVTFLWSC=NVTFLWIE;              /* SET NVT WAIT STATE CODE       */
         MVI   NVTFLWSC(RNVT),X'21'                                0732
*   RPARM=RIOB;                     /* SET IOB ADDR AS PARAMETER     */
*                                                                  0733
         LR    RPARM,RIOB                                          0733
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN ADDRESS OF THE UCB FOR THE UNIT                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0734
*   RNIPM=RIOB->IOBDCBPT->DCBDEBAD->DEBSUCBB;                      0734
         L     @10,IOBDCBPT(,RIOB)                                 0734
         SLR   @03,@03                                             0734
         ICM   @03,7,DCBDEBAD(@10)                                 0734
         SLR   RNIPM,RNIPM                                         0734
         ICM   RNIPM,7,DEBSUCBB(@03)                               0734
*   UA=RNIPM->UCBUA;                /* STORE UCB UNIT ADDRESS        */
         MVC   UA(1),UCBUA(RNIPM)                                  0735
*   CHA=RNIPM->UCBCHA;              /* STORE UCB'S CHANNEL ADDR      */
         MVC   CHA(1),UCBCHA(RNIPM)                                0736
*   RCUA=CWAITCUA;                  /* LOAD RELATED DEVICE ADDR      */
         L     RCUA,CWAITCUA                                       0737
*   GEN(IEAPMNIP TYPE=SWAIT)        /* LOAD WAIT STATE               */
*   REFS(NVTSWAIT);                                                0738
         IEAPMNIP TYPE=SWAIT
*   GEN(EJECT);                     /* GEN ASSEMBLER EJECT           */
*                                                                  0739
         EJECT
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE REGISTERS USED IN NPMCWAIT ROUTINE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0740
*   RESPECIFY                                                      0740
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RIOB,                         /* IOB BASE REGISTER             */
*     RNIPM) UNRESTRICTED;          /* ROUTINE WORK REGISTER         */
*   END NPMCWAIT;                   /* END - NPMCWAIT PROCEDURE    0741
*                                                                    */
@EL00006 DS    0H                                                  0741
@EF00006 DS    0H                                                  0741
@ER00006 BR    @14                                                 0741
*NPMEXCPC:                          /* CONSOLE EXCP ROUTINE          */
*                                                                  0742
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE PROVIDES A CENTRALIZED IEAVNIPM SERVICE FOR      */
*   /* SCHEDULING CONSOLE I/O REQUESTS. ALL ACCESS IS TO THE MASTER  */
*   /* OPERATOR'S CONSOLE AND IS SCHEDULED AT THE EXCP LEVEL.        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0742
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* PROC STATEMENT              */
*                                                                  0742
NPMEXCPC DS    0H                                                  0743
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTRCIT REGISTERS USED IN NPMEXCPC ROUTINE                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0743
*   RESPECIFY                                                      0743
*    (RPARM,                        /* PARAMETER INTERFACE REGISTER  */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RIOB) RESTRICTED;             /* IOB BASE REGISTER             */
*   DCL                                                            0744
*     EXCPREG1 FIXED(31) GENERATED; /* PARAMETER REGISTER            */
*   GEN(DS  0H);                    /* STATEMENT FOR LABEL           */
         DS  0H
*   GEN(NPM2ENTR EXCPSAV,EXCPBASE); /* GEN ENTRY LINKAGE             */
         NPM2ENTR EXCPSAV,EXCPBASE
*   NPMXCONI='0'B;                  /* RESET INPUT-CONSOLE SWITCH (
*                                      THIS SWITCH IS NECESSARY, TO
*                                      DETERMINE THE NAME OF THE ECB
*                                      ASSOCIATED WITH THE IOB IN  0747
*                                      USE, FOR ISSUING THE WAIT   0747
*                                      MACRO SENSE NO REGISTER FORMAT
*                                      IS AVAILABLE )                */
*                                                                  0747
         NI    NPMXCONI,B'11110111'                                0747
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR COMPOSITE MASTER OUTPUT (WRITE) REQUEST             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0748
*   IF RPARM>0                      /* IF THIS IS A WRITE REQUEST  0748
*                                      (CCW                          */
*     THEN                          /* ADDR NOT IN COMPLEMENT FORM)  */
*                                                                  0748
         LTR   RPARM,RPARM                                         0748
         BNP   @RF00748                                            0748
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK NVT COMPOSITE MASTER FLAG                             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0749
*     IF NVTFLIOC='1'B              /* IF COMPOSITE MASTER FLAG IS ON*/
*       THEN                        /* THEN:                         */
         TM    NVTFLIOC(RNVT),B'01000000'                          0749
         BNO   @RF00749                                            0749
*       DO;                         /* SELECT NIP OUTPUT CONSOLE IOB */
*         RIOB=ADDR(NIPIOBOC);      /* FOR SCHEDULING I/O            */
         LA    RIOB,NIPIOBOC                                       0751
*         GO TO NPMXCPB;            /* BRANCH TO CHECK-IOB ROUTINE   */
         B     NPMXCPB                                             0752
*       END;                                                       0753
*                                                                  0753
*   /*****************************************************************/
*   /*                                                               */
*   /* NOT WRITE REQUEST: SELECT NIP INPUT CONSOLE                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0754
*   RIOB=ADDR(NIPIOBIC);            /* IOB FOR SCHEDULING I/O        */
@RF00749 DS    0H                                                  0754
@RF00748 LA    RIOB,NIPIOBIC                                       0754
*   NPMXCONI='1'B;                  /* SET INPUT CONSOLE SWITCH      */
         OI    NPMXCONI,B'00001000'                                0755
*NPMXCPB:                                                          0756
*   ECBPTR=IOBECBPT;                /* LOAD ECB ADDRESS FROM IOB     */
*                                                                  0756
NPMXCPB  MVC   ECBPTR(4),IOBECBPT(IOBSTPTR)                        0756
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THAT IOB SELECTED IS FLAGGED AS FREE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0757
*   IF IOBFLAG='00'X                /* IOB IS FLAGGED FREE ?         */
*     THEN                          /* IF SO -                       */
         LR    @10,RIOB                                            0757
         AL    @10,@CF02854                                        0757
         CLI   IOBFLAG(@10),X'00'                                  0757
         BE    @RT00757                                            0757
*     GO TO NPMXCPCE;               /* BRANCH TO CLEAR-ECB RTN       */
*/* IOB NOT FREE - CHECK FOR I/O REQUEST POSTED COMPLETE             */
*                                                                  0759
*ECBRTRY:                           /*                       @YM06937*/
*   THOLD=ECBRB;                    /* SAVE ECBRB VALUE FOR COMPARE
*                                      AND SWAP              @YM06937*/
*                                                                  0759
ECBRTRY  L     @10,ECBPTR                                          0759
         L     @04,ECBRB(,@10)                                     0759
         ST    @04,THOLD                                           0759
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER THE ECB WAS POSTED                  @YM06937*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0760
*   IF ECBPOSTB^='1'B               /* ECB POST FLAG NOT SET (TO     */
*     THEN                          /* INDICATE I/O COMPLETE) ?      */
         TM    ECBPOSTB(@10),B'01000000'                           0760
         BO    @RF00760                                            0760
*     DO;                           /* IF NOT -                      */
*       CS(THOLD,NULLS,ECBRB);      /* ZERO ECB              @YM06937*/
         L     @03,NULLS                                           0762
         CS    @04,@03,ECBRB(@10)                                  0762
         BZ    @BC00762                                            0762
         ST    @04,THOLD                                           0762
@BC00762 DS    0H                                                  0763
*       BC(7,ECBRTRY);              /* RETRY IF ECB JUST POSTED    0763
*                                                            @YM06937*/
*                                                                  0763
         BC    7,ECBRTRY                                           0763
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR INPUT CONSOLE IOB IN USE                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0764
*       IF NPMXCONI='1'B            /* INPUT CONSOLE IN USE ?        */
*         THEN                      /* IF IN USE -                   */
         TM    NPMXCONI,B'00001000'                                0764
         BNO   @RF00764                                            0764
*         GEN(WAIT 1,ECB=NIPECBIC); /* WAIT USING INPUT              */
         WAIT 1,ECB=NIPECBIC
*       ELSE                        /* IF NOT IN USE -               */
*         GEN(WAIT 1,ECB=NIPECBOC); /* WAIT USING OUTPUT             */
         B     @RC00764                                            0766
@RF00764 DS    0H                                                  0766
         WAIT 1,ECB=NIPECBOC
*       RPARM=EXCPREG1;             /* RESTORE CALLER'S REG 1        */
@RC00764 L     RPARM,EXCPREG1                                      0767
*     END;                                                         0768
*                                                                  0768
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR CONSOLE READ IN PROGRESS                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0769
*   IF NVTFLRAC='1'B                /* IF READ PENDING               */
*     THEN                          /* THEN A PROGRAM ERROR OCCURRED */
@RF00760 TM    NVTFLRAC(RNVT),B'00000010'                          0769
         BNO   @RF00769                                            0769
*     DO;                           /* LOAD PROG ERROR WAIT STATE    */
*       NVTFLWSC=NVTFLWSE;          /* SET NVT WAIT STATE CODE       */
         MVI   NVTFLWSC(RNVT),X'3F'                                0771
*       NVTIDPSW=NVTIDPSW&'F000'X;  /* CLEAR NVT ID PSW              */
         NC    NVTIDPSW(2,RNVT),@CB02802                           0772
*       NVTIDPSW=NVTIDPSW×'0001'X;  /* SET NEW PSW CODE              */
         OC    NVTIDPSW(2,RNVT),@CB02491                           0773
*       GEN(IEAPMNIP TYPE=SWAIT)    /* LOAD WAIT STATE               */
*       REFS(NVTSWAIT);                                            0774
         IEAPMNIP TYPE=SWAIT
*     END;                                                         0775
*NPMXCPCE:                          /* PREPARE TO INITIATE I/O     0776
*                                      REQUEST                       */
*   ECB='00000000'X;                /* CLEAR ECB                     */
@RF00769 DS    0H                                                  0776
NPMXCPCE L     @10,ECBPTR                                          0776
         MVC   ECB(4,@10),@CB02883                                 0776
*   IOBFLAG='FF'X;                  /* FLAG IOB AS ACTIVE            */
*                                                                  0777
         LR    @10,RIOB                                            0777
         AL    @10,@CF02854                                        0777
         MVI   IOBFLAG(@10),X'FF'                                  0777
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR TYPE OF I/O REQUEST                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0778
*   IF RPRM1<0                      /* PARAMETER IN COMPLEMENT FORM? */
*     THEN                          /* IF SO -                       */
         LTR   RPRM1,RPRM1                                         0778
         BNM   @RF00778                                            0778
*     DO;                           /* THIS IS A READ REQUEST        */
*       RPARM=-RPARM;               /* COMPLEMENT THE PARAMETER      */
*                                                                  0780
         LCR   RPARM,RPARM                                         0780
*       /*************************************************************/
*       /*                                                           */
*       /* PLACE INPUT APPENDAGE VECTOR TABLE ADDR IN DEB            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0781
*       IOBDCBPT->DCBDEBAD->DEBAPPB=ADDR(NPMAVTIC);                0781
         L     @10,IOBDCBPT(,IOBSTPTR)                             0781
         SLR   @04,@04                                             0781
         ICM   @04,7,DCBDEBAD(@10)                                 0781
         LA    @10,NPMAVTIC                                        0781
         STCM  @10,7,DEBAPPB(@04)                                  0781
*     END;                                                         0782
*   ELSE                            /* THIS IS A WRITE REQUEST       */
*                                                                  0783
*     /***************************************************************/
*     /*                                                             */
*     /* PLACE OUTPUT APPENDAGE VECTOR TABLE ADDR IN DEB             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0783
*     IOBDCBPT->DCBDEBAD->DEBAPPB=ADDR(NPMAVTOC);                  0783
         B     @RC00778                                            0783
@RF00778 L     @10,IOBDCBPT(,IOBSTPTR)                             0783
         SLR   @04,@04                                             0783
         ICM   @04,7,DCBDEBAD(@10)                                 0783
         LA    @10,NPMAVTOC                                        0783
         STCM  @10,7,DEBAPPB(@04)                                  0783
*   IOBSTART=RPARM;                 /* PUT PARAMETER (CCW ADDR) IN 0784
*                                      IOB                           */
@RC00778 ST    RPARM,IOBSTART(,IOBSTPTR)                           0784
*   GEN(EXCP (RIOB));               /* EXECUTE CHANNEL PGM   @YM05078*/
*                                                                  0785
         EXCP (RIOB)
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR READ IN EXECUTION                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0786
*   IF EXCPREG1<0                   /* IF THE REQUEST WAS FOR A      */
*     THEN                          /* CONSOLE READ THEN             */
         ICM   @10,15,EXCPREG1                                     0786
         BM    @RT00786                                            0786
*     GO TO NPMXCPRS;               /* BRANCH TO RESTORE-REGISTER RTN*/
*                                                                  0787
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHICH ECB IS IN USE AND WAIT                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0788
*   IF NPMXCONI='1'B                /* INPUT CONSOLE SWITCH ON ?     */
*     THEN                          /* SWITCH IS ON -                */
         TM    NPMXCONI,B'00001000'                                0788
         BNO   @RF00788                                            0788
*     GEN(WAIT 1,ECB=NIPECBIC);     /* ISSUE WAIT FOR INPUT ECB      */
         WAIT 1,ECB=NIPECBIC
*   ELSE                            /* SWITCH IS OFF -               */
*     GEN(WAIT 1,ECB=NIPECBOC);     /* ISSUE WAIT FOR OUTPUT ECB     */
*                                                                  0790
         B     @RC00788                                            0790
@RF00788 DS    0H                                                  0790
         WAIT 1,ECB=NIPECBOC
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR SUCCESSFUL I/O COMPLETION                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0791
*   IF ECBCC='7F'X                  /* IF ECB COMPLETION CODE      0791
*                                      INDICATE                      */
*     THEN                          /* SUCCESSFUL I/O -              */
@RC00788 L     @10,ECBPTR                                          0791
         CLI   ECBCC(@10),X'7F'                                    0791
         BNE   @RF00791                                            0791
*     DO;                           /* FINISH UP AND EXIT            */
*       IOBFLAG='00'X;              /* FLAG IOB FREE                 */
         LR    @10,RIOB                                            0793
         AL    @10,@CF02854                                        0793
         MVI   IOBFLAG(@10),X'00'                                  0793
*       GO TO NPMXCPRS;             /* BRANCH TO RESTORE-REGISTERS 0794
*                                      RTN                           */
         B     NPMXCPRS                                            0794
*     END;                                                         0795
*                                                                  0795
*   /*****************************************************************/
*   /*                                                               */
*   /* I/O NOT SUCCESSFUL - BRANCH TO CONSOLE ERROR ROUTINE          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0796
*NPCIOFL:                                                          0796
*   CALL NPMCWAIT;                  /* CALL CONSOLE-ERROR RTN      0796
*                                                            @YM05078*/
@RF00791 DS    0H                                                  0796
NPCIOFL  BAL   @14,NPMCWAIT                                        0796
*NPMXCPRS:                          /* RESTORE REGISTERS AND RETURN
*                                      TO CALLER                     */
*   GEN(LM  2,1,EXCPSAV);           /* RESTORE REGISTERS             */
NPMXCPRS LM  2,1,EXCPSAV
*   GEN(BR  REXIT);                 /* RETURN TO CALLER              */
         BR  REXIT
*   GENERATE;                                                      0799
*                                                                  0799
*                                  /* GEN ROUTINE REG SAVEAREA       */
EXCPSAV  DS   15F                     NPMEXCP SAVEAREA
EXCPREG1 DS   1F                      REG 1 SAVEAREA
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE REGISTERS USED IN NPMEXCPC ROUTINE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0800
*   RESPECIFY                                                      0800
*    (RPARM,                        /* PARAMETER INTERFACE REGISTER  */
*     RNVT,                         /* NVT BASE REGISTER             */
*     RIOB) UNRESTRICTED;           /* IOB BASE REGISTER             */
*   GEN(EJECT);                     /* GEN ASSEMBLER EJECT           */
         EJECT
*   END NPMEXCPC;                   /* END - NPMEXCPC PROCEDURE    0802
*                                                                    */
@EL00007 DS    0H                                                  0802
@EF00007 DS    0H                                                  0802
@ER00007 BR    @14                                                 0802
*NPMICEAP:                          /* INPUT CHANNEL END APPENDAGE   */
*                                                                  0803
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE INTERCEPTS CHANNEL END FOR ALL CONSOLE INPUT     */
*   /* REQUESTS. REGISTER 2 HAS THE ADDRESS OF THE IOB AND REGISTER 7*/
*   /* HAS THE ADDRESS OF THE UCB.                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0803
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* PROC STATEMENT              */
*                                                                  0803
NPMICEAP DS    0H                                                  0804
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTRICT REGISTERS FOR INPUT CHANNEL END APPENDAGE            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0804
*   RESPECIFY                                                      0804
*    (RIOBAPP,                      /* IOB ADDR PASSED TO APPENDAGE  */
*     RUCBAPP,                      /* UCB ADDR PASSED TO APPENDAGE  */
*     RUCB,                         /* ROUTINE UCB BASE REGISTER     */
*     RIOB) RESTRICTED;             /* ROUTINE IOB BASE REGISTER     */
*   DCL                                                            0805
*     ICEAPRG2 PTR(31) GENERATED;   /* ADDR OF IOB FROM IOS          */
*   GEN(DS  0H);                    /* STATEMENT FOR LABEL           */
         DS  0H
*   GEN(NPM2APPE ICEAPSAV,APPBASE1);/* GEN ENTRY LINKAGE             */
         NPM2APPE ICEAPSAV,APPBASE1
*   RUCB=RUCBAPP;                   /* LOAD UCB ADDRESS              */
         LR    RUCB,RUCBAPP                                        0808
*   RIOB=ICEAPRG2;                  /* LOAD IOB ADDRESS              */
*                                                                  0809
         L     RIOB,ICEAPRG2                                       0809
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK DEVICE TYPE FIELD OF UNIT CONTROL BLOCK                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0810
*   IF UCB3UREC='0'B                /* UNIT RECORD DEVICE ?          */
*     THEN                          /* IF NOT -                      */
         TM    UCB3UREC(UCBPTR),B'00001000'                        0810
         BZ    @RT00810                                            0810
*     GO TO NPMICCK;                /* BRANCH TO COMMUNICATIONS CHECK*/
*                                                                  0811
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR INQUIRY TYPE DEVICE                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0812
*   IF UCBTBYT4<'20'X               /* INQUIRY TYPE DEVICE ?         */
*     THEN                          /* IF NOT -                      */
         CLI   UCBTBYT4(UCBPTR),X'20'                              0812
         BL    @RT00812                                            0812
*     GO TO NPMICRR;                /* BRANCH TO NORMAL-I/O-POST     */
*                                                                  0813
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR CHANNEL END                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0814
*   IF CSWCE='0'B                   /* ENTERED ON CHANNEL END ?      */
*     THEN                          /* IF NOT -                      */
         TM    CSWCE(IOBSTPTR),B'00001000'                         0814
         BZ    @RT00814                                            0814
*     GO TO NPMICRR;                /* BRANCH TO NORMAL-I/O-POST     */
*                                                                  0815
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR UNIT EXCEPTION WITH CHANNEL END                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0816
*   IF CSWUE='0'B                   /* UNIT EXCEPTION ?              */
*     THEN                          /* IF NOT -                      */
         TM    CSWUE(IOBSTPTR),B'00000001'                         0816
         BZ    @RT00816                                            0816
*     GO TO NPMICRR;                /* BRANCH TO NORMAL-I/O-POST     */
*NPMICRS:                           /* CLEAR IOB, RESTORE REGISTERS
*                                      AND BRANCH TO I/O RESTART     */
*   IOBFLAG1='42'X;                 /* RESET IOB FLAG1 (BITS 1,6) ON */
NPMICRS  MVI   IOBFLAG1(IOBSTPTR),X'42'                            0818
*   IOBFLAG2='00'X;                 /* CLEAR IOB FLAG BYTE 2         */
         MVI   IOBFLAG2(IOBSTPTR),X'00'                            0819
*   IOBFLAG3='00'X;                 /* CLEAR IOB FLAG BYTE 3         */
         MVI   IOBFLAG3(IOBSTPTR),X'00'                            0820
*   IOBSENS0='00'X;                 /* CLEAR IOB SENSE BYTE 1        */
         MVI   IOBSENS0(IOBSTPTR),X'00'                            0821
*   IOBSENS1='00'X;                 /* CLEAR IOB SENSE BYTE 2        */
         MVI   IOBSENS1(IOBSTPTR),X'00'                            0822
*   IOBCSW='00000000000000'X;       /* CLEAR IOB CSW FIELDS          */
         MVC   IOBCSW(7,IOBSTPTR),@CB02329                         0823
*   IOBERRCT=0;                     /* CLEAR ERROR COUNTS            */
         SLR   @10,@10                                             0824
         STH   @10,IOBERRCT(,IOBSTPTR)                             0824
*   GENERATE;                                                      0825
*                                  /* GEN EXIT TO IOS                */
          LM    2,1,ICEAPSAV          RESTORE CALLERS REGISTERS
          B     8(REXIT)              BRANCH TO RE-TRY I/O (EXCP)
*NPMICCK:                           /* CHECK FOR DEVICE TYPE OTHER 0826
*                                      THAN COMMUNICATIONS           */
*   IF UCB3COMM='0'B                /* IF DEVICE IS NOT            0826
*                                      COMMUNICATIONS                */
*     THEN                          /* THEN -                        */
NPMICCK  TM    UCB3COMM(UCBPTR),B'01000000'                        0826
         BZ    @RT00826                                            0826
*     GO TO NPMICRR;                /* BRANCH TO NORMAL-I/O-POST RTN */
*                                                                  0827
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR UNIT EXCEPTION FLAG IN IOBFLAG1FIELD OF IOB         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0828
*   IF IOBIOERR='1'B                /* IF UNIT EXCEPTION FLAG IS ON  */
*     THEN                          /* THEN - ROUTE TO ABNORMAL-END  */
         TM    IOBIOERR(IOBSTPTR),B'00000100'                      0828
         BO    @RT00828                                            0828
*     GO TO NPMICRR;                /* BY BRANCH TO NORMAL-I/O-POST  */
*                                                                  0829
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN REPLY AREA FOR CANCEL CHARACTERS(BACKSPACE-RETURN)       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0830
*   DO I=2 TO 83;                   /* CHECK EACH PAIR OF CHARACTERS */
         LA    @10,2                                               0830
         ST    @10,I                                               0830
@DL00830 DS    0H                                                  0831
*     IF NPMRAREA(I-1:I)='5D5B'X    /* IF BACKSPACE-RETURN           */
*       THEN                        /* THEN LINE IS CANCELED         */
         LA    @06,NPMRAREA-2(@10)                                 0831
         CLC   0(2,@06),@CB02900                                   0831
         BE    @RT00831                                            0831
*       GO TO NPMICRS;              /* BRANCH TO CLEAR-FOR-RESTART   */
*   END;                                                           0833
         AH    @10,@CH00109                                        0833
         ST    @10,I                                               0833
         CH    @10,@CH02685                                        0833
         BNH   @DL00830                                            0833
*NPMICRR:                           /* RESTORE REGISTERS FOR NORMAL
*                                      RETURN                        */
*   GEN(LM  2,1,ICEAPSAV);          /* RESTORE CALLER'S REGISTERS    */
NPMICRR  LM  2,1,ICEAPSAV
*NPMICRN:                           /* RETURN VIA BRANCH ON REGISTER
*                                      14 FOR NORMAL I/O POST        */
*   GEN(BR  REXIT);                 /* RETURN TO CALLER              */
*                                                                  0835
NPMICRN  BR  REXIT
*   /*****************************************************************/
*   /*                                                               */
*   /* END INPUT CONSOLE CHANNEL END APPENDAGE                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0836
*NPMOAEAP:                                                         0836
*   ENTRY;                          /* OUTPUT ABNORMAL END APPENDAGE */
*                                                                  0836
         B     @EC00836                                            0836
NPMOAEAP DS    0H                                                  0836
@EC00836 DS    0H                                                  0837
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE INTERCEPTS ABNORMAL END FOR ALL CONSOLE OUTPUT   */
*   /* (WRITE) REQUESTS.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0837
*   GEN(NPM2APPE ICEAPSAV,APPBASE2);/* GEN ENTRY LINKAGE             */
*                                                                  0837
         NPM2APPE ICEAPSAV,APPBASE2
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR UNIT CHECK FLAG IN IOB CSW                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0838
*   IF RIOBAPP->CSWUC='0'B          /* END WITH UNIT CHECK ?         */
*     THEN                          /* IF NOT -                      */
         TM    CSWUC(RIOBAPP),B'00000010'                          0838
         BZ    @RT00838                                            0838
*     GO TO NPMICRR;                /* BRANCH TO NORMAL-RETURN       */
*   RUCB=RUCBAPP;                   /* TRANSFER UCB ADDRESS          */
         LR    RUCB,RUCBAPP                                        0840
*   RIOB=ICEAPRG2;                  /* TRANSFER IOB ADDRESS          */
*                                                                  0841
         L     RIOB,ICEAPRG2                                       0841
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR UNIT RECORD DEVICE TYPE                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0842
*   IF UCB3UREC='0'B                /* UNIT RECORD DEVICE ?          */
*     THEN                          /* IF NOT -                      */
         TM    UCB3UREC(UCBPTR),B'00001000'                        0842
         BZ    @RT00842                                            0842
*     GO TO NPMICRR;                /* BRANCH TO RESTORE REGISTERS   */
*                                                                  0843
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR FOLLOWING DEVICES: 1404, 1443, OR 3211              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0844
*   IF UCBTBYT4='08'X×              /* IS UNIT A 1403 PRINTER OR -   */
*       UCBTBYT4='0A'X×             /* IS UNIT A 1443 PRINTER OR -   */
*       UCBTBYT4='09'X              /* IS UNIT A 3211 ?              */
*     THEN                          /* IF ANY OF THESE -             */
         CLI   UCBTBYT4(UCBPTR),X'08'                              0844
         BE    @RT00844                                            0844
         CLI   UCBTBYT4(UCBPTR),X'0A'                              0844
         BE    @RT00844                                            0844
         CLI   UCBTBYT4(UCBPTR),X'09'                              0844
         BE    @RT00844                                            0844
*     GO TO NPMOASC;                /* BRANCH TO SET-IOB-CODES       */
*   GO TO NPMICRR;                  /* ELSE, BRANCH TO RESTORE REGS  */
         B     NPMICRR                                             0846
*NPMOASC:                           /* CHECK FOR CHANNEL 9 BIT IN IOB
*                                      SENSE BYTE 0                  */
*   IF IOBSNSC9='0'B                /* IS CHANNEL 9 BIT ON ?         */
*     THEN                          /* IF NOT -                      */
NPMOASC  TM    IOBSNSC9(IOBSTPTR),B'00000001'                      0847
         BZ    @RT00847                                            0847
*     GO TO NPMICRR;                /* BRANCH TO RESTORE REGISTERS   */
*   IOBECBCC='7F'X;                 /* SET IOB ECB COMPLETION CODE   */
         MVI   IOBECBCC(IOBSTPTR),X'7F'                            0849
*   IOBIOERR='0'B;                  /* RESET IOB EXCEPTION FLAG      */
         NI    IOBIOERR(IOBSTPTR),B'11111011'                      0850
*   GO TO NPMICRR;                  /* BRANCH TO RESTORE-REGISTERS   */
*                                                                  0851
         B     NPMICRR                                             0851
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF OUTPUT CONSOLE ABNORMAL END APPENDAGE                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0852
*   GEN(EJECT);                     /* GEN ASSEMBLER EJECT           */
         EJECT
*NPMOCEAP:                                                         0853
*   ENTRY;                          /* OUTPUT CHANNEL END APPENDAGE  */
*                                                                  0853
         B     @EC00853                                            0853
NPMOCEAP DS    0H                                                  0853
@EC00853 DS    0H                                                  0854
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE INTERCEPTS CHANNEL END FOR ALL CONSOLE OUTPUT    */
*   /* REQUESTS AND HANDLES A UNIT EXCEPTION CONDITION FOR UNIT      */
*   /* RECORDS DEVICE TYPES: 1403, 1443, AND 3211.                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0854
*   GEN(NPM2APPE ICEAPSAV,APPBASE3);/* GEN ENTRY LINKAGE             */
*                                                                  0854
         NPM2APPE ICEAPSAV,APPBASE3
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR UNIT EXCEPTION INDICATED IN IOB CSW                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0855
*   IF RIOBAPP->CSWUE='0'B          /* ENTERED ON UNIT EXCEPTION ?   */
*     THEN                          /* IF NOT -                      */
         TM    CSWUE(RIOBAPP),B'00000001'                          0855
         BZ    @RT00855                                            0855
*     GO TO NPMICRR;                /* BRANCH TO NORMAL-RETURN-EXIT  */
*   RIOB=ICEAPRG2;                  /* TRANSFER IOB ADDRESS          */
         L     RIOB,ICEAPRG2                                       0857
*   RUCB=RUCBAPP;                   /* TRANSFER UCB ADDRESS          */
*                                                                  0858
         LR    RUCB,RUCBAPP                                        0858
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR UNIT RECORD DEVICE TYPE                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0859
*   IF UCB3UREC='0'B                /* UNIT RECORD DEVICE ?          */
*     THEN                          /* IF NOT -                      */
         TM    UCB3UREC(UCBPTR),B'00001000'                        0859
         BZ    @RT00859                                            0859
*     GO TO NPMICRR;                /* BRANCH TO RESTORE REGISTERS   */
*                                                                  0860
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR FOLLOWING DEVICES: 1403, 1443, AND 3211             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0861
*   IF UCBTBYT4='08'X×              /* IS UNIT A 1403 PRINTER OR -   */
*       UCBTBYT4='0A'X×             /* IS UNIT A 1443 PRINTER OR -   */
*       UCBTBYT4='09'X              /* IS UNIT A 3211 PRINTER ?      */
*     THEN                          /* IF ANY OF THESE -             */
         CLI   UCBTBYT4(UCBPTR),X'08'                              0861
         BE    @RT00861                                            0861
         CLI   UCBTBYT4(UCBPTR),X'0A'                              0861
         BE    @RT00861                                            0861
         CLI   UCBTBYT4(UCBPTR),X'09'                              0861
         BE    @RT00861                                            0861
*     GO TO NPMOCSC;                /* BRANCH TO SKIP-CCW-CHECK      */
*   GO TO NPMICRR;                  /* ELSE, BRANCH TO RESTORE-REGS  */
         B     NPMICRR                                             0863
*NPMOCSC:                           /* CHECK FOR A SKIP TO LINE 1  0864
*                                      BEFORE UNIT EXCEPTION         */
*   RNIPM=IOBSTART-8;               /* OBTAIN PTR TO LAST CCW        */
*                                                                  0864
NPMOCSC  L     RNIPM,IOBSTART(,IOBSTPTR)                           0864
         SH    RNIPM,@CH00107                                      0864
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK LAST CCW COMMAND CODE                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0865
*   IF RNIPM->CCWCOMCD='8B'X        /* IF PREVIOUS COMMAND CODE      */
*     THEN                          /* WAS A SKIP TO LINE 1          */
         CLI   CCWCOMCD(RNIPM),X'8B'                               0865
         BE    @RT00865                                            0865
*     GO TO NPMICRR;                /* BRANCH TO RESTORE REGS        */
*   IOBSTART=ADDR(NPMSKCCW);        /* PUT ADDR OF SKIP CCW IN IOB   */
         LA    @10,NPMSKCCW                                        0867
         ST    @10,IOBSTART(,IOBSTPTR)                             0867
*   GO TO NPMICRS;                  /* BRANCH TO I/O-RESTART-EXIT    */
*                                                                  0868
         B     NPMICRS                                             0868
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF OUTPUT CONSOLE ABNORMAL END APPENDAGE                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0869
*NPMIBRAP:                                                         0869
*   ENTRY;                          /* DUMMY CONSOLE APPENDAGE       */
*                                                                  0869
NPMIBRAP DS    0H                                                  0870
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS A DUMMY ROUTINE TO INTERCEPT APPENDAGE EXITS NOT      */
*   /* HANDLED BY THE ABOVE ROUTINES.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0870
*   GEN(BR  REXIT);                 /* IMMEDIATE RETURN TO IOS       */
         BR  REXIT
*   GENERATE;                                                      0871
*                                                                  0871
*                                  /* GEN APPENDAGE SAVEAREAS        */
ICEAPSAV  EQU   *                     APPENDAGE REG SAVE AREA
ICEAPRG2  DS    F                     REG 2  (IOB ADDR)
          DS    15F
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE APPENDAGE REGISTERS                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0872
*   RESPECIFY                                                      0872
*    (RIOBAPP,                      /* IOB ADDR PASSED TO APPENDAGE  */
*     RUCBAPP,                      /* UCB ADDR PASSED TO APPENDAGE  */
*     RUCB,                         /* ROUTINE UCB BASE REGISTER     */
*     RIOB) UNRESTRICTED;           /* ROUTINE IOB BASE REG          */
*   END NPMICEAP;                   /* END - CONSOLE APPENDAGES    0873
*                                                                    */
@EL00008 DS    0H                                                  0873
@EF00008 DS    0H                                                  0873
@ER00008 BR    @14                                                 0873
*NPMUPSCR:                          /*                               */
*                                                                  0874
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO UPDATE GRAPHICS SCREEN IMAGE                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0874
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/* PROC STATEMENT              */
NPMUPSCR DS    0H                                                  0875
*   DCL                                                            0875
*     UPSCRSAV CHAR(64) GENERATED;  /* ROUTINE SAVEAREA              */
*   DCL                                                            0876
*     NPMGINIT LABEL INTERNAL;      /* CONSOLE INIT ROUTINE          */
*   DCL                                                            0877
*     NPMROLL LABEL INTERNAL;       /* SCREEN ROLL ROUTINE           */
*                                                                  0877
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTRICT REGISTERS FOR UPDATE GRAPHICS SCREEN ROUTINE         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0878
*   RESPECIFY                                                      0878
*    (RPARM,                        /* PARAMETER INTERFACE REG       */
*     RNVT,                         /* NVT BASE REGISTER             */
*     DCMTSPTR,                     /* DCM BASE REGISTER      YA00835*/
*     UCBPTR,                       /* UCB BASE REGISTER             */
*     BUFPTR,                       /* DCM AREA ADDRESS              */
*     LINAD) RESTRICTED;            /* CURRENT LINE ADDRESS          */
*   GEN(STM 2,1,UPSCRSAV);          /* SAVE CALLER'S REGS            */
         STM 2,1,UPSCRSAV
*   UCMMCSPT=UCMPRFXP;              /* GET ADDR OF UCM PREFIX        */
         L     @10,UCMBASPT                                        0880
         AL    @10,@CF02991                                        0880
         L     @10,UCMPRFXP(,@10)                                  0880
         ST    @10,UCMMCSPT                                        0880
*   UCMDVEPT=UCMMCENT;              /* GET MASTER CONSOLE UCM @      */
         L     @10,UCMMCENT(,@10)                                  0881
         ST    @10,UCMDVEPT                                        0881
*   DCMTSPTR=UCMXB;                 /* GET ADDR OF DCM        YA00835*/
*                                                                  0882
         L     DCMTSPTR,UCMXB(,@10)                                0882
*   /*****************************************************************/
*   /*                                                               */
*   /* IS THIS FIRST ENTRY TO ROUTINE                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0883
*   IF DCMNIPP^='1'B                /* FIRST ENTRY ?                 */
*     THEN                          /* YES -                         */
         TM    DCMNIPP(DCMTSPTR),B'00001000'                       0883
         BO    @RF00883                                            0883
*     CALL NPMGINIT;                /* INIT.FOR GRAPHICS CONSOLE     */
*                                                                  0884
         BAL   @14,NPMGINIT                                        0884
*   /*****************************************************************/
*   /*                                                               */
*   /* IS WRITE SWITCH SET                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0885
*   IF NPMWRTSW='1'B                /* WRITE SWITCH SET ?            */
*     THEN                          /* YES -                         */
@RF00883 TM    NPMWRTSW,B'00000010'                                0885
         BNO   @RF00885                                            0885
*     DO;                           /* PREPARE TO WRITE              */
*       TOTLN=N;                    /* GET MESSAGE LENGTH            */
         MVC   TOTLN(2),N+2                                        0887
*       LINAD=ADDR(NPMWAREA);       /* POINT TO WRITE AREA           */
         LA    LINAD,NPMWAREA                                      0888
*       GO TO NPMSCT;               /* CHECK SCREEN STATUS           */
         B     NPMSCT                                              0889
*     END;                                                         0890
*   N=80;                           /* TOTAL LENGTH = 80 BYTES       */
*                                                                  0891
@RF00885 MVC   N(4),@CF02765                                       0891
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHETHER 81ST CHAR WAS OVERLAYED             @YM06937*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0892
*   IF NPMRAREA(81)^=' ' THEN                                      0892
         CLI   NPMRAREA+80,C' '                                    0892
         BE    @RF00892                                            0892
*     NPMILEN='1'B;                 /* SET EXCESSIVE LENGTH FLAG ON
*                                                            @YM06937*/
         OI    NPMILEN,B'00100000'                                 0893
*   ELSE                                                           0894
*     NPMILEN='0'B;                 /* SET EXCESSIVE LENGTH FLAG OFF
*                                                            @YM06937*/
         B     @RC00892                                            0894
@RF00892 NI    NPMILEN,B'11011111'                                 0894
*NPMSCANC:                          /* SCAN REPLY AREA BACKWARDS FOR
*                                      TRAILING BLANKS               */
*   IF NPMRAREA(N)=' '              /* IS CHARACTER A BLANK ?        */
*     THEN                          /* YES -                         */
@RC00892 DS    0H                                                  0895
NPMSCANC L     @10,N                                               0895
         LA    @08,NPMRAREA-1(@10)                                 0895
         CLI   0(@08),C' '                                         0895
         BNE   @RF00895                                            0895
*     DO;                           /* CHECK FOR MESSAGE END         */
*                                                                  0896
*       /*************************************************************/
*       /*                                                           */
*       /* WERE ALL 80 CHARACTERS BLANK                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0897
*       IF N=1                      /* SCANNED ENTIRE MESSAGE ?      */
*         THEN                      /* YES -                         */
         CH    @10,@CH00109                                        0897
         BNE   @RF00897                                            0897
*         DO;                       /* TREAT AS EOB -                */
*           NPMEOBSW='1'B;          /* INDICATE EOB                  */
         OI    NPMEOBSW,B'00000001'                                0899
*           TOTLN=2;                /* TOTAL LENGTH = 2              */
         MVC   TOTLN(2),@CH00120                                   0900
*           GO TO NPMMSGLN;         /* MOVE MESSAGE TO BUFFER        */
         B     NPMMSGLN                                            0901
*         END;                                                     0902
*       ELSE                        /* NO - NOT MESSAGE END          */
*         DO;                       /* SCAN REST OF MESSAGE          */
@RF00897 DS    0H                                                  0904
*           N=N-1;                  /* DECREMENT COUNT               */
         L     @10,N                                               0904
         BCTR  @10,0                                               0904
         ST    @10,N                                               0904
*           GO TO NPMSCANC;         /* CONTINUE SCAN                 */
         B     NPMSCANC                                            0905
*         END;                                                     0906
*     END;                                                         0907
*   ELSE                            /* NO - NOT BLANK CHARACTER      */
*     DO;                           /* END SCAN LOOP                 */
@RF00895 DS    0H                                                  0909
*       NPMEOBSW='0'B;              /* CLEAR EOB SWITCH              */
         NI    NPMEOBSW,B'11111110'                                0909
*       TOTLN=N;                    /* GET REPLY LENGTH              */
         MVC   TOTLN(2),N+2                                        0910
*     END;                                                         0911
*NPMMSGLN:                          /* SET UP TO MOVE MESSAGE TO   0912
*                                      GRAPHICS BUFFER               */
*   RNIPM=ADDR(READAREA);           /* GET ADDR OF REPLY AREA        */
NPMMSGLN LA    RNIPM,READAREA                                      0912
*   NPMRLNG=TOTLN;                  /* HDR LENGTH = TOTAL LENGTH     */
         MVC   NPMRLNG(2,RNIPM),TOTLN                              0913
*   GEN(L  UCBPTR,UPSCRSAV+8);      /* RESTORE UCB POINTER           */
         L  UCBPTR,UPSCRSAV+8
*   LINAD=ADDR(NPMRAREA);           /* POINT TO READ AREA            */
         LA    LINAD,NPMRAREA                                      0915
*NPMSCT:                            /* CHECK STATUS OF SCREEN        */
*                                                                  0916
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR FULL SCREEN (8 LINES)                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0916
*   IF NEXTSCT>SCTENDAD             /* IS SCREEN FULL ?              */
*     THEN                          /* YES -                         */
NPMSCT   L     @10,DCMMSGSV(,DCMTSPTR)                             0916
         CLC   NEXTSCT(4),SCTENDAD(@10)                            0916
         BNH   @RF00916                                            0916
*     CALL NPMROLL;                 /* ROLL SCREEN UP ONE LINE       */
*                                                                  0917
         BAL   @14,NPMROLL                                         0917
*   /*****************************************************************/
*   /*                                                               */
*   /* DOES THIS MESSAGE FIT ON ONE LINE                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0918
*   IF TOTLN<=LINDATLN              /* MSG SHORTER THAN LINE ?       */
*     THEN                          /* YES -                         */
@RF00916 LH    @10,TOTLN                                           0918
         CH    @10,LINDATLN                                        0918
         BH    @RF00918                                            0918
*     DO;                           /* PREPARE TO WRITE              */
*       SCTINUSE='1'B;              /* FLAG SCT AS IN USE            */
*       SCTAUTOD='1'B;              /* AND AUTODELETABLE             */
*                                                                  0921
         L     @08,NEXTSCT                                         0921
         OI    SCTINUSE(@08),B'11000000'                           0921
*       /*************************************************************/
*       /*                                                           */
*       /* GET MESSAGE ADDRESS + SCT INDEX * LINE LENGTH             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0922
*       BUFPTR=MSGSTAD+((NEXTSCT-SCTBEGAD)/2)*LINLN;               0922
         L     @06,DCMMSGSV(,DCMTSPTR)                             0922
         LA    @05,2                                               0922
         LR    @14,@08                                             0922
         SL    @14,SCTBEGAD(,@06)                                  0922
         SRDA  @14,32                                              0922
         DR    @14,@05                                             0922
         SLR   BUFPTR,BUFPTR                                       0922
         ICM   BUFPTR,3,LINLN                                      0922
         MR    @14,BUFPTR                                          0922
         AL    @15,MSGSTAD(,@06)                                   0922
         LR    BUFPTR,@15                                          0922
*       TOTLN=TOTLN+4;              /* SKIP AUTODELETABLE CHARS      */
         LA    @06,4                                               0923
         ALR   @10,@06                                             0923
         STH   @10,TOTLN                                           0923
*       BUFLINE(5:TOTLN)=ANSRAREA;  /* MOVE MESSAGE TO BUF           */
         LR    @15,@10                                             0924
         SH    @15,@CH01182                                        0924
         EX    @15,@SM02994                                        0924
*       BUFLINE(1:4)=AUTDELSC;      /* FLAG LINE AS AUTODELET        */
         MVC   BUFLINE(4,BUFPTR),AUTDELSC                          0925
*       TOTLN=TOTLN-4;              /* GET ACTUAL LENGTH BACK        */
         SLR   @10,@06                                             0926
         STH   @10,TOTLN                                           0926
*       NEXTSCT=NEXTSCT+LENGTH(SCTENTRY);/* POINT TO NEXT SCT        */
         ALR   @08,@05                                             0927
         ST    @08,NEXTSCT                                         0927
*       GO TO NPMGRCCW;             /* SELECT CHANNEL PROGRAM        */
         B     NPMGRCCW                                            0928
*     END;                                                         0929
*                                                                  0929
*   /*****************************************************************/
*   /*                                                               */
*   /* MESSAGE CANNOT FIT ON ONE LINE --- IS ONLY ONE LINE FREE?     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0930
*   IF NEXTSCT=SCTENDAD             /* THIS LAST LINE ?              */
*     THEN                          /* YES -                         */
@RF00918 L     @10,DCMMSGSV(,DCMTSPTR)                             0930
         CLC   NEXTSCT(4),SCTENDAD(@10)                            0930
         BNE   @RF00930                                            0930
*     DO;                           /* ROLL THE SCREEN               */
*       CALL NPMROLL;               /* ROLL SCREEN IMAGE UP ONE LINE */
         BAL   @14,NPMROLL                                         0932
*       NEXTSCT=NEXTSCT-2;          /* DECREMENT ADDR OF SCT         */
         L     @10,NEXTSCT                                         0933
         BCTR  @10,0                                               0933
         BCTR  @10,0                                               0933
         ST    @10,NEXTSCT                                         0933
*       SCTENTRY=SCTENTRY&&SCTENTRY;/* ZERO SCT ENTRY                */
         XC    SCTENTRY(2,@10),SCTENTRY(@10)                       0934
*     END;                                                         0935
*   RESPECIFY                                                      0936
*     SCANREG RESTRICTED;           /* RESTRICT SCAN REGISTER        */
@RF00930 DS    0H                                                  0937
*   SCANREG=ADDR(ANSRAREA)+LINDATLN;/* GET ADDR OF WHERE LINE IS TO
*                                      BE SPLIT                      */
         LH    @10,LINDATLN                                        0937
         LR    SCANREG,LINAD                                       0937
         ALR   SCANREG,@10                                         0937
*   N=LINDATLN;                     /* GET LENGTH TO SEARCH          */
         ST    @10,N                                               0938
*NPMCOMBL:                          /* SEARCH BACK FROM SPLIT LOOKING
*                                      FOR COMMA OR BLANK            */
*                                                                  0939
*   /*****************************************************************/
*   /*                                                               */
*   /* IS THIS CHARACTER A COMMA OR A BLANK                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0939
*   IF ANSRAREA(N)=','×             /* CHARACTER A COMMA OR -        */
*       ANSRAREA(N)=' '             /* A BLANK ?                     */
*     THEN                          /* YES -                         */
NPMCOMBL L     @10,N                                               0939
         ALR   @10,LINAD                                           0939
         AL    @10,@CF02854                                        0939
         CLI   ANSRAREA(@10),C','                                  0939
         BE    @RT00939                                            0939
         L     @10,N                                               0939
         ALR   @10,LINAD                                           0939
         AL    @10,@CF02854                                        0939
         CLI   ANSRAREA(@10),C' '                                  0939
         BE    @RT00939                                            0939
*     GO TO NPMNXSCT;               /* WE HAVE THE TWO LINES         */
*                                                                  0940
*   /*****************************************************************/
*   /*                                                               */
*   /* NOT COMMA OR BLANK                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0941
*   SCANREG=SCANREG-1;              /* DECREMENT SPLIT ADDR          */
         BCTR  SCANREG,0                                           0941
*   N=N-1;                          /* DECREMENT COUNT               */
*                                                                  0942
         L     @10,N                                               0942
         BCTR  @10,0                                               0942
         ST    @10,N                                               0942
*   /*****************************************************************/
*   /*                                                               */
*   /* HAS WHOLE LINE BEEN SEARCHED                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0943
*   IF N=0                          /* AT LINE BEGIN ?               */
*     THEN                          /* YES -                         */
         LTR   @10,@10                                             0943
         BNZ   @RF00943                                            0943
*     SCANREG=ADDR(ANSRAREA)+LINDATLN;/* NO COMMA OR BLANK FOUND- GET
*                                      ORIGINAL SPLIT ADDRESS        */
         LR    SCANREG,LINAD                                       0944
         AH    SCANREG,LINDATLN                                    0944
*   ELSE                            /* NO - NOT AT BEGINNING         */
*     GO TO NPMCOMBL;               /* CONTINUE LINE SCAN            */
*NPMNXSCT:                          /* SET FLAGS IN NEXT TWO SCT   0946
*                                      ENTRIES                       */
*   SCTINUSE='1'B;                  /* SET SCT TO IN USE             */
NPMNXSCT DS    0H                                                  0947
*   SCTAUTOD='1'B;                  /* AND AUTODELETABLE             */
         L     @10,NEXTSCT                                         0947
         OI    SCTINUSE(@10),B'11000000'                           0947
*   NEXTSCT=NEXTSCT+LENGTH(SCTENTRY);/* POINT TO NEXT SCT            */
         LA    @06,2                                               0948
         ALR   @10,@06                                             0948
         ST    @10,NEXTSCT                                         0948
*   SCTINUSE='1'B;                  /* SET SCT TO IN USE             */
*   SCTAUTOD='1'B;                  /* AND AUTODELETABLE             */
         OI    SCTINUSE(@10),B'11000000'                           0950
*   NEXTSCT=NEXTSCT-LENGTH(SCTENTRY);/* POINT BACK TO ORIGINAL SCT   */
         SLR   @10,@06                                             0951
         ST    @10,NEXTSCT                                         0951
*   RESPECIFY                                                      0952
*     SPLENTH1 RESTRICTED;          /* RESTRICT SPLIT LINE LENGTH  0952
*                                      REGISTER                      */
*                                                                  0952
*   /*****************************************************************/
*   /*                                                               */
*   /* GET MESSAGE START ADDRESS + SCT INDEX * LINE LENGTH           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0953
*   BUFPTR=NEXTSCT-SCTBEGAD;        /* FIND SCT OFFSET               */
         L     @06,DCMMSGSV(,DCMTSPTR)                             0953
         LR    BUFPTR,@10                                          0953
         SL    BUFPTR,SCTBEGAD(,@06)                               0953
*   BUFPTR=BUFPTR/2;                /* FIND SCT INDEX                */
         SRL   BUFPTR,1                                            0954
*   BUFPTR=MSGSTAD+BUFPTR*LINLN;    /* PERFORM CALCULATION           */
*                                                                  0955
         SLR   @15,@15                                             0955
         ICM   @15,3,LINLN                                         0955
         ST    @15,@TF00001                                        0955
         LR    @15,BUFPTR                                          0955
         M     @14,@TF00001                                        0955
         AL    @15,MSGSTAD(,@06)                                   0955
         LR    BUFPTR,@15                                          0955
*   /*****************************************************************/
*   /*                                                               */
*   /* GET LENGTH OF FIRST PART SKIPPING OVER AUTODEL AREA           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0956
*   SPLENTH1=SCANREG-ADDR(ANSRAREA)+4;                             0956
         LA    @06,4                                               0956
         LR    SPLENTH1,SCANREG                                    0956
         SLR   SPLENTH1,LINAD                                      0956
         ALR   SPLENTH1,@06                                        0956
*   BUFLINE(5:SPLENTH1)=ANSRAREA;   /* MOVE FIRST PART               */
         LR    @15,SPLENTH1                                        0957
         SH    @15,@CH01182                                        0957
         EX    @15,@SM02994                                        0957
*   BUFLINE(1:4)=AUTDELSC;          /* FLAG AUTODELETABLE            */
         MVC   BUFLINE(4,BUFPTR),AUTDELSC                          0958
*   BUFPTR=BUFPTR+LINLN;            /* POINT TO NEXT BUFFER LINE     */
         AL    BUFPTR,@TF00001                                     0959
*   RESPECIFY                                                      0960
*     SCANREG UNRESTRICTED;         /* RELEASE SCAN REGISTER         */
*   RESPECIFY                                                      0961
*     SPLENTH2 RESTRICTED;          /* RESTRICT SPLIT LINE LENGTH  0961
*                                      REGISTER                      */
*   SPLENTH2=TOTLN-SPLENTH1+9;      /* GET LENGTH OF SECOND PART TO
*                                      BE MOVED                      */
         LH    SPLENTH2,TOTLN                                      0962
         SLR   SPLENTH2,SPLENTH1                                   0962
         AH    SPLENTH2,@CH01096                                   0962
*   SPLENTH1=SPLENTH1-3;            /* BACK UP TO 1ST CHARACTER IN 0963
*                                      SECOND PART                   */
         SH    SPLENTH1,@CH00327                                   0963
*   BUFLINE(6:SPLENTH2)=ANSRAREA(SPLENTH1:TOTLN);/* MOVE SECOND PART */
         LR    @08,SPLENTH2                                        0964
         SH    @08,@CH01076                                        0964
         LR    @15,LINAD                                           0964
         ALR   @15,SPLENTH1                                        0964
         AL    @15,@CF02854                                        0964
         EX    @08,@SM02996                                        0964
*   BUFLINE(1:4)=AUTDELSC;          /* FLAG AUTODELETABLE            */
         MVC   BUFLINE(4,BUFPTR),AUTDELSC                          0965
*   NEXTSCT=NEXTSCT+2*LENGTH(SCTENTRY);/* UPDATE SCT POINTER         */
         LA    @08,4                                               0966
         ALR   @10,@08                                             0966
         ST    @10,NEXTSCT                                         0966
*   RESPECIFY                                                      0967
*     SPLENTH2 UNRESTRICTED;        /* RELEASE SPLIT LINE            */
*   RESPECIFY                                                      0968
*     SPLENTH1 UNRESTRICTED;        /* LENGTH REGISTERS              */
*   RESPECIFY                                                      0969
*     LINAD UNRESTRICTED;           /* RELEASE CURRENT LINE PTR      */
*NPMGRCCW:                          /* SELECT DEVICE DEPENDENT CCW 0970
*                                      STRING                        */
*                                                                  0970
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2250                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0970
*   IF UCBTBYT4='02'X               /* 2250 ?                        */
*     THEN                          /* IF SO -                       */
NPMGRCCW CLI   UCBTBYT4(UCBPTR),X'02'                              0970
         BNE   @RF00970                                            0970
*     DO;                           /* SETUP FOR 2250 WRITE          */
*       RPARM=ADDR(WCCW2250);       /* SELECT 2250 WRITE CCWS        */
         LA    RPARM,WCCW2250                                      0972
*       GO TO NPMGRWRT;             /* WRITE TO SCREEN               */
         B     NPMGRWRT                                            0973
*     END;                                                         0974
*                                                                  0974
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2260                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0975
*   IF UCBTBYT4='03'X               /* 2260 ?                        */
*     THEN                          /* IF SO -                       */
@RF00970 CLI   UCBTBYT4(UCBPTR),X'03'                              0975
         BNE   @RF00975                                            0975
*     DO;                           /* PREPARE FOR 2260 WRITE        */
*       RPARM=ADDR(WCCW2260);       /* SELECT 2260 WRITE CCWS        */
         LA    RPARM,WCCW2260                                      0977
*       GO TO NPMGRWRT;             /* WRITE TO SCREEN               */
         B     NPMGRWRT                                            0978
*     END;                                                         0979
*                                                                  0979
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3277 OR 3155 ?                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0980
*   IF NPMANRD='1'B                 /* 3277 OR 3155 ?          Y01122*/
*     THEN                          /* IF SO -                       */
@RF00975 TM    NPMANRD,B'10000000'                                 0980
         BNO   @RF00980                                            0980
*     DO;                           /* PREPARE FOR 3277 WRITE        */
*       RPARM=ADDR(WCCW3277);       /* SELECT 3277 WRITE CCWS        */
         LA    RPARM,WCCW3277                                      0982
*       GO TO NPMGRWRT;             /* WRITE TO SCREEN               */
         B     NPMGRWRT                                            0983
*     END;                                                         0984
*                                                                  0984
*   /*****************************************************************/
*   /*                                                               */
*   /* MUST BE 3066 CONSOLE                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0985
*   RPARM=ADDR(WCCW3066);           /* SELECT 3066 WRITE CCWS        */
@RF00980 LA    RPARM,WCCW3066                                      0985
*NPMGRWRT:                          /* WRITE TO GRAPHICS SCREEN      */
*   CALL NPMEXCPC;                  /* CALL EXCP ROUTINE             */
*                                                                  0986
NPMGRWRT BAL   @14,NPMEXCPC                                        0986
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2250                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0987
*   IF UCBTBYT4='02'X               /* 2250 ?                        */
*     THEN                          /* IF SO -                       */
         CLI   UCBTBYT4(UCBPTR),X'02'                              0987
         BNE   @RF00987                                            0987
*     DO;                           /* CHANGE DATA LENGTH            */
*       W2250DAT='025A'X;           /* CHANGE DATA LENGTH IN 2250  0989
*                                      WRITE CCW TO 602              */
         MVC   W2250DAT(2),@CB02940                                0989
*       GO TO NPMUPEX;              /* BRANCH TO EXIT                */
         B     NPMUPEX                                             0990
*     END;                                                         0991
*                                                                  0991
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3277 OR 3155 ?                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0992
*   IF NPMANRD='1'B                 /* 3277 OR 3155 ?          Y01122*/
*     THEN                          /* YES -                         */
@RF00987 TM    NPMANRD,B'10000000'                                 0992
         BNO   @RF00992                                            0992
*     W3277FLG='0020'X;             /* SET FOR NO COMMAND CHAIN      */
         MVC   W3277FLG(2),@CB02942                                0993
*NPMUPEX:                           /* PREPARE TO EXIT               */
*   GENERATE;                                                      0994
@RF00992 DS    0H                                                  0994
NPMUPEX  DS    0H                                                  0994
*                                       /* GENERATE EXIT LINKAGE     */
         LM 2,1,UPSCRSAV                   RESTORE CALLERS REGS
         BR 14                             RETURN TO CALLER
UPSCRSAV DS 16F                            REGISTER SAVE AREA
*                                                                  0995
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE TO INITIALIZE FOR A GRAPHICS CONSOLE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0995
*NPMGINIT:                                                         0995
*   GEN(STM 2,1,INITSAV);           /* SAVE CALLER'S REGS            */
NPMGINIT STM 2,1,INITSAV
*   UCBATI='04'X;                   /* CHANGE ATTN TABLE INDEX TO  0996
*                                      CONSOLE ATTN ROUTINE          */
         L     @10,UCBEXTPT(,UCBPTR)                               0996
         MVI   UCBATI(@10),X'04'                                   0996
*   NPMGRAPH='1'B;                  /* INDICATE GRAPHICS CONSOLE     */
*                                                                  0997
         OI    NPMGRAPH,B'00000100'                                0997
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2250                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0998
*   IF UCBTBYT4='02'X               /* 2250 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
         CLI   UCBTBYT4(UCBPTR),X'02'                              0998
         BNE   @RF00998                                            0998
*     DO;                           /* FIND 2250 DCM LENGTH          */
*       DEVDEPLN=853;               /* GET DEVICE DEPENDENT LEN      */
         MVC   DEVDEPLN(3),@CF02946+1                              1000
*       GO TO NPMDCMSZ;             /* BRANCH TO GET DCM             */
         B     NPMDCMSZ                                            1001
*     END;                                                         1002
*                                                                  1002
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2260                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1003
*   IF UCBTBYT4='03'X               /* 2260 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
@RF00998 CLI   UCBTBYT4(UCBPTR),X'03'                              1003
         BNE   @RF01003                                            1003
*     DO;                           /* FIND 2260 DCM LENGTH          */
*       DEVDEPLN=897;               /* GET DEVICE DEPENDENT LEN      */
         MVC   DEVDEPLN(3),@CF02948+1                              1005
*       GO TO NPMDCMSZ;             /* BRANCH TO GET DCM             */
         B     NPMDCMSZ                                            1006
*     END;                                                         1007
*                                                                  1007
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3066                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1008
*   IF UCBTBYT4='08'X               /* 3066 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
@RF01003 CLI   UCBTBYT4(UCBPTR),X'08'                              1008
         BNE   @RF01008                                            1008
*     DO;                           /* FIND 3066 DCM LENGTH          */
*       DEVDEPLN=897;               /* GET DEVICE DEPENDENT LEN      */
         MVC   DEVDEPLN(3),@CF02948+1                              1010
*       GO TO NPMDCMSZ;             /* BRANCH TO GET DCM             */
         B     NPMDCMSZ                                            1011
*     END;                                                         1012
*                                                                  1012
*   /*****************************************************************/
*   /*                                                               */
*   /* MUST BE 3277 OR 3155 CONSOLE                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1013
*   NPMANRD='1'B;                   /* SET 3270-LIKE MASTER CONSOLE
*                                      FLAG                    Y01122*/
@RF01008 OI    NPMANRD,B'10000000'                                 1013
*   DEVDEPLN=919;                   /* GET DEVICE DEPENDENT LENGTH   */
         MVC   DEVDEPLN(3),@CF02949+1                              1014
*NPMDCMSZ:                          /* GET BUFFER FOR DCM            */
*   DEVDEPLN=DEVDEPLN+24;           /* FIND TOTAL DCM SIZE           */
NPMDCMSZ LA    @10,24                                              1015
         SLR   @06,@06                                             1015
         ICM   @06,7,DEVDEPLN                                      1015
         ALR   @10,@06                                             1015
         STCM  @10,7,DEVDEPLN                                      1015
*   GENERATE;                                                      1016
*                                      /* GEN GETMAIN FOR DCM        */
           L 0,DCMSIZE                    REG 0 = DCM SIZE
           GETMAIN R,LV=(0)               GET BUFFER
*   BUFPTR=RPARM;                   /* GET ADDR OF AREA              */
         LR    BUFPTR,RPARM                                        1017
*   DCMMSGSV=BUFPTR;                /* SAVE ADDRESS OF DCM AREA      */
         ST    BUFPTR,DCMMSGSV(,DCMTSPTR)                          1018
*   DCMNIPP='1'B;                   /* INDICATE DCM IN USE BY NIP    */
         OI    DCMNIPP(DCMTSPTR),B'00001000'                       1019
*   BUFPTR=BUFPTR+24;               /* GET ADDRESS OF FIRST BYTE TO
*                                      BE WRITTEN                    */
         AH    BUFPTR,@CH00042                                     1020
*   ST2250AD=BUFPTR;                /* SAVE ADDRESS OF 1ST BYTE      */
         L     @10,DCMMSGSV(,DCMTSPTR)                             1021
         ST    BUFPTR,ST2250AD(,@10)                               1021
*   RESPECIFY                                                      1022
*     REALAD RESTRICTED;            /* RESTRICT REAL ADDR REG        */
*                                                                  1022
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2250                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1023
*   IF UCBTBYT4='02'X               /* 2250 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
         CLI   UCBTBYT4(UCBPTR),X'02'                              1023
         BNE   @RF01023                                            1023
*     DO;                           /* INITIALIZE FOR 2250           */
*       GEN(LRA REALAD,0(BUFPTR));  /* GET REAL BUFFER ADDR          */
         LRA REALAD,0(BUFPTR)
*       W2250BUF=REALAD;            /* PUT BUFFER POINTER INTO 2250
*                                      WRITE CCW                     */
         STCM  REALAD,7,W2250BUF                                   1026
*       LINDATLN=70;                /* SET LINE DATA LENGTH          */
         MVC   LINDATLN(2),@CH02951                                1027
*       ST2250=ST2250OR;            /* FILL IN STARTING ORDERS       */
         L     @10,DCMMSGSV(,DCMTSPTR)                             1028
         L     @10,ST2250AD(,@10)                                  1028
         MVC   ST2250(10,@10),ST2250OR                             1028
*       BUFPTR=BUFPTR+10;           /* INCREMENT BUFFER POINTER      */
         AH    BUFPTR,@CH02648                                     1029
*       GO TO NPMSAVPT;             /* BRANCH TO INITIALIZE DCM      */
         B     NPMSAVPT                                            1030
*     END;                                                         1031
*                                                                  1031
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2260                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1032
*   IF UCBTBYT4='03'X               /* 2260 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
@RF01023 CLI   UCBTBYT4(UCBPTR),X'03'                              1032
         BNE   @RF01032                                            1032
*     DO;                           /* INITIALIZE FOR 2260           */
*       GEN(LRA REALAD,0(BUFPTR));  /* GET REAL BUFFER ADDR          */
         LRA REALAD,0(BUFPTR)
*       W2260BUF=REALAD;            /* PUT BUFFER POINTER INTO 2260
*                                      WRITE CCW                     */
         STCM  REALAD,7,W2260BUF                                   1035
*       LINDATLN=76;                /* SET LINE DATA LENGTH          */
         MVC   LINDATLN(2),@CH02953                                1036
*       GO TO NPMSAVPT;             /* BRANCH TO INITIALIZE DCM      */
         B     NPMSAVPT                                            1037
*     END;                                                         1038
*                                                                  1038
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3066                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1039
*   IF UCBTBYT4='08'X               /* 3066 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
@RF01032 CLI   UCBTBYT4(UCBPTR),X'08'                              1039
         BNE   @RF01039                                            1039
*     DO;                           /* INITIALIZE FOR 3066           */
*       GEN(LRA REALAD,0(BUFPTR));  /* GET REAL BUFFER ADDR          */
         LRA REALAD,0(BUFPTR)
*       W3066BUF=REALAD;            /* PUT BUFFER POINTER INTO 3066
*                                      WRITE CCW                     */
         STCM  REALAD,7,W3066BUF                                   1042
*       LINDATLN=76;                /* SET LINE DATA LENGTH          */
         MVC   LINDATLN(2),@CH02953                                1043
*       GO TO NPMSAVPT;             /* BRANCH TO INITIALIZE DCM      */
         B     NPMSAVPT                                            1044
*     END;                                                         1045
*                                                                  1045
*   /*****************************************************************/
*   /*                                                               */
*   /* MUST BE 3277 OR 3155 CONSOLE                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1046
*   GEN(LRA REALAD,0(BUFPTR));      /* GET REAL ADDR OF BUFFER       */
@RF01039 DS    0H                                                  1046
         LRA REALAD,0(BUFPTR)
*   W3277BUF=REALAD;                /* PUT BUFFER POINTER INTO 3277
*                                      WRITE CCW                     */
         STCM  REALAD,7,W3277BUF                                   1047
*   LINDATLN=74;                    /* SET LINE DATA LENGTH          */
         MVC   LINDATLN(2),@CH02954                                1048
*   ST3277=ST3277OR;                /* FILL IN STARTING ORDERS       */
         L     @10,DCMMSGSV(,DCMTSPTR)                             1049
         L     @10,ST2250AD(,@10)                                  1049
         MVC   ST3277(6,@10),ST3277OR                              1049
*   BUFPTR=BUFPTR+6;                /* INCREMENT BUFFER POINTER      */
         AH    BUFPTR,@CH01076                                     1050
*NPMSAVPT:                          /* INITIALIZE DCM DEPENDING ON 1051
*                                      DEVICE TYPE                   */
*   MSGSTAD=BUFPTR;                 /* SAVE MESSAGE START ADDRESS    */
NPMSAVPT L     @10,DCMMSGSV(,DCMTSPTR)                             1051
         ST    BUFPTR,MSGSTAD(,@10)                                1051
*   LINLN=LINDATLN+4;               /* GET LINE LENGTH               */
*                                                                  1052
         LA    @10,4                                               1052
         AH    @10,LINDATLN                                        1052
         STH   @10,LINLN                                           1052
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3277 OR 3155                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1053
*   IF NPMANRD='1'B                 /* 3277 OR 3155 ?          Y01122*/
*     THEN                          /* IF SO -                       */
         TM    NPMANRD,B'10000000'                                 1053
         BNO   @RF01053                                            1053
*     LINLN=LINLN+2;                /* INCREMENT LINE LENGTH BY 2    */
         AH    @10,@CH00120                                        1054
         STH   @10,LINLN                                           1054
*   BUFPTR=BUFPTR+LINLN*7;          /* SKIP OVER MESSAGE AREA        */
@RF01053 SLR   @10,@10                                             1055
         ICM   @10,3,LINLN                                         1055
         LR    @06,@10                                             1055
         MH    @06,@CH01042                                        1055
         ALR   BUFPTR,@06                                          1055
*   MSGENDAD=BUFPTR;                /* SAVE MESSAGE END ADDRESS      */
         L     @06,DCMMSGSV(,DCMTSPTR)                             1056
         ST    BUFPTR,MSGENDAD(,@06)                               1056
*   BUFPTR=BUFPTR+LINLN;            /* POINT TO END OF MSG AREA      */
*                                                                  1057
         ALR   BUFPTR,@10                                          1057
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3277 OR 3155                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1058
*   IF NPMANRD='1'B                 /* 3277 OR 3155 ?          Y01122*/
*     THEN                          /* IF SO -                       */
         TM    NPMANRD,B'10000000'                                 1058
         BNO   @RF01058                                            1058
*     DO;                           /* SET BLANKING CONTROL          */
*       BL3277=BL3277CH;            /* FILL IN 3277 BLANKING CHARS   */
         MVC   BL3277(4,BUFPTR),BL3277CH                           1060
*       BUFPTR=BUFPTR+4;            /* INCREMENT BUFFER POINTER      */
         AH    BUFPTR,@CH00101                                     1061
*     END;                                                         1062
*   BUFPTR=BUFPTR+LINLN;            /* SKIP A LINE                   */
*                                                                  1063
@RF01058 SLR   @10,@10                                             1063
         ICM   @10,3,LINLN                                         1063
         ALR   BUFPTR,@10                                          1063
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2250                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1064
*   IF UCBTBYT4='02'X               /* 2250 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
         CLI   UCBTBYT4(UCBPTR),X'02'                              1064
         BNE   @RF01064                                            1064
*     DO;                           /* SET ENDING ORDERS             */
*       EN2250=EN2250OR;            /* FILL IN 2250 ENDING ORDERS    */
         MVC   EN2250(8,BUFPTR),EN2250OR                           1066
*       BUFPTR=BUFPTR+8;            /* INCREMENT BUFFER POINTER      */
         AH    BUFPTR,@CH00107                                     1067
*     END;                                                         1068
*   ENTAREAD=BUFPTR;                /* SAVE ADDRESS OF ENTRY AREA    */
@RF01064 L     @10,DCMMSGSV(,DCMTSPTR)                             1069
         ST    BUFPTR,ENTAREAD(,@10)                               1069
*   BUFPTR=BUFPTR+LINLN*2;          /* SKIP OVER ENTRY AREA          */
*                                                                  1070
         SLR   @10,@10                                             1070
         ICM   @10,3,LINLN                                         1070
         ALR   @10,@10                                             1070
         ALR   BUFPTR,@10                                          1070
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 2250                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1071
*   IF UCBTBYT4='02'X               /* 2250 CONSOLE ?                */
*     THEN                          /* IF SO -                       */
         CLI   UCBTBYT4(UCBPTR),X'02'                              1071
         BNE   @RF01071                                            1071
*     DO;                           /* SET ENDING ORDERS             */
*       END2250=END2250R;           /* FILL IN 2250 ENDING ORDERS    */
         MVC   END2250(4,BUFPTR),END2250R                          1073
*       BUFPTR=BUFPTR+4;            /* INCREMENT BUFFER POINTER      */
         AH    BUFPTR,@CH00101                                     1074
*       GO TO NPMSTSCT;             /* BRANCH TO INITIALIZE SCT      */
         B     NPMSTSCT                                            1075
*     END;                                                         1076
*                                                                  1076
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3277 OR 3155                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1077
*   IF NPMANRD='1'B                 /* 3277 OR 3155 ?          Y01122*/
*     THEN                          /* IF SO -                       */
@RF01071 TM    NPMANRD,B'10000000'                                 1077
         BNO   @RF01077                                            1077
*     DO;                           /* SET READ CONTROL              */
*       RD3277=RD3277CH;            /* FILL IN 3277 READ CHARS       */
         MVC   RD3277(11,BUFPTR),RD3277CH                          1079
*       GEN(LRA REALAD,0(BUFPTR));  /* GET REAL BUFFER ADDR          */
         LRA REALAD,0(BUFPTR)
*       R3277BF1=REALAD;            /* PUT BUFFER POINTER INTO 3277
*                                      READ CCW'S                    */
         STCM  REALAD,7,R3277BF1                                   1081
*       R3277BF2=REALAD;            /* (WRITE CONTROL ADRESSES)      */
         STCM  REALAD,7,R3277BF2                                   1082
*       BUFPTR=BUFPTR+12;           /* INCREMENT BUFFER POINTER      */
         AH    BUFPTR,@CH00033                                     1083
*     END;                                                         1084
*   RESPECIFY                                                      1085
*     REALAD UNRESTRICTED;          /* RELEASE REAL ADDR REG         */
@RF01077 DS    0H                                                  1086
*NPMSTSCT:                          /* INIT. SCAN CONTROL TABLE      */
*   SCTBEGAD=BUFPTR;                /* SAVE SCT BEGINNING ADDRESS    */
NPMSTSCT L     @10,DCMMSGSV(,DCMTSPTR)                             1086
         ST    BUFPTR,SCTBEGAD(,@10)                               1086
*   SCTENDAD=SCTBEGAD+14;           /* GET SCAN CONTROL TABLE END    */
         L     @06,DCMMSGSV(,DCMTSPTR)                             1087
         L     @06,SCTBEGAD(,@06)                                  1087
         AH    @06,@CH01833                                        1087
         ST    @06,SCTENDAD(,@10)                                  1087
*   RESPECIFY                                                      1088
*     BLKLINE RESTRICTED;           /* RESTRICT LINE COUNTER         */
*                                                                  1088
*   /*****************************************************************/
*   /*                                                               */
*   /* IS CONSOLE A 3277 OR 3155                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1089
*   IF NPMANRD='1'B                 /* 3277 OR 3155 ?          Y01122*/
*     THEN                          /* IF SO -                       */
         TM    NPMANRD,B'10000000'                                 1089
         BNO   @RF01089                                            1089
*     BLKLINE=8;                    /* SET NUMBER OF LINES = 8       */
         LA    BLKLINE,8                                           1090
*   ELSE                            /* IF NOT 3277 OR 3155 -         */
*     BLKLINE=9;                    /* SET NUMBER OF LINES = 9       */
         B     @RC01089                                            1091
@RF01089 LA    BLKLINE,9                                           1091
*   RESPECIFY                                                      1092
*     MSGADR RESTRICTED;            /* RESTRICT MESSAGE POINTER      */
@RC01089 DS    0H                                                  1093
*   RESPECIFY                                                      1093
*     MSGST BASED(MSGADR);          /* BASE MESSAGE ON POINTER       */
*   MSGADR=MSGSTAD;                 /* POINT TO MESSAGE AREA START   */
         L     @10,DCMMSGSV(,DCMTSPTR)                             1094
         L     MSGADR,MSGSTAD(,@10)                                1094
*NPMBLKMG:                          /* BLANK OUT MESSAGE AREA        */
*   MSGST(1:LINLN1)=BLANKS;         /* MOVE BLANKS INTO LINE         */
NPMBLKMG L     @10,LINLN1                                          1095
         BCTR  @10,0                                               1095
         EX    @10,@SM02999                                        1095
*   MSGADR=MSGADR+LINLN;            /* POINT TO NEXT LINE            */
         SLR   @10,@10                                             1096
         ICM   @10,3,LINLN                                         1096
         ALR   MSGADR,@10                                          1096
*   BLKLINE=BLKLINE-1;              /* DECREMENT LINE COUNT          */
*                                                                  1097
         BCTR  BLKLINE,0                                           1097
*   /*****************************************************************/
*   /*                                                               */
*   /* HAVE ALL LINES BEEN BLANKED                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1098
*   IF BLKLINE^=0                   /* LINE COUNT OF ZERO ?          */
*     THEN                          /* IF NOT -                      */
         LTR   BLKLINE,BLKLINE                                     1098
         BNZ   @RT01098                                            1098
*     GO TO NPMBLKMG;               /* BLANK NEXT LINE               */
*                                                                  1099
*   /*****************************************************************/
*   /*                                                               */
*   /* HAS ENTRY AREA BEEN BLANKED OUT                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1100
*   IF MSGADR>ENTAREAD              /* BLANKED PAST ENTRY AREA ?     */
*     THEN                          /* IF SO -                       */
         L     @10,DCMMSGSV(,DCMTSPTR)                             1100
         L     @10,ENTAREAD(,@10)                                  1100
         CR    MSGADR,@10                                          1100
         BH    @RT01100                                            1100
*     GO TO NPMSCT0;                /* BRANCH TO ZERO SCT            */
*   RESPECIFY                                                      1102
*     MSGST BASED(MSGSTAD);         /* RESPECIFY MSG START           */
*   RESPECIFY                                                      1103
*     ENTAREA BASED(MSGAD);         /* RESPECIFY ENTRY AREA          */
*                                                                  1103
*   /*****************************************************************/
*   /*                                                               */
*   /* BLANK OUT ENTRY AREA                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1104
*   MSGADR=ENTAREAD;                /* GET ADDR OF ENTRY AREA        */
         LR    MSGADR,@10                                          1104
*   BLKLINE=2;                      /* GET NO. OF LINES TO BLANK     */
         LA    BLKLINE,2                                           1105
*   GO TO NPMBLKMG;                 /* BLANK ENTRY AREA              */
         B     NPMBLKMG                                            1106
*   RESPECIFY                                                      1107
*     ENTAREA BASED(ENTAREAD);      /* RESPECIFY ENTRY AREA          */
*NPMSCT0:                           /* PREPARE SCT FOR EXIT          */
*   SCT=SCT&&SCT;                   /* ZERO SCT                      */
NPMSCT0  L     @10,DCMMSGSV(,DCMTSPTR)                             1108
         L     @10,SCTBEGAD(,@10)                                  1108
         XC    SCT(17,@10),SCT(@10)                                1108
*   STOPPER='01'X;                  /* PUT STOPPER IN LAST BYTE      */
         MVI   STOPPER(@10),X'01'                                  1109
*   NEXTSCT=SCTBEGAD;               /* GET ADDR OF NEXT SCT ENTRY    */
         ST    @10,NEXTSCT                                         1110
*   GENERATE;                                                      1111
*                                      /* RETURN TO CALLER           */
        LM 2,1,INITSAV                    RESTORE CALLERS REGS
        BR REXIT                          RETURN TO CALLER
*                                                                  1112
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO ROLL GRAPHICS SCREEN IMAGE UP ONE LINE             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1112
*   RESPECIFY                                                      1112
*     LOOPCNT RESTRICTED;           /* RESTRICT LINE COUNTER         */
*NPMROLL:                                                          1113
*   GEN(STM 2,1,ROLLSAV);           /* SAVE CALLER'S REGS            */
NPMROLL  STM 2,1,ROLLSAV
*   LOOPCNT=7;                      /* NO. OF LINES TO MOVE = 7      */
         LA    LOOPCNT,7                                           1114
*   BUFPTR=MSGSTAD;                 /* GET ADDR OF MESSAGE START     */
         L     @10,DCMMSGSV(,DCMTSPTR)                             1115
         L     BUFPTR,MSGSTAD(,@10)                                1115
*NPMNXTLN:                          /* MOVE ALL LINES UP ONE         */
*   NEXTLINE=BUFPTR+LINLN;          /* GET ADDR OF NEXT LINE         */
NPMNXTLN LR    @10,BUFPTR                                          1116
         SLR   @06,@06                                             1116
         ICM   @06,3,LINLN                                         1116
         ALR   @10,@06                                             1116
         ST    @10,NEXTLINE                                        1116
*   BUFLINE(1:LINLN1)=NXTBUFLN;     /* MOVE LINE UP                  */
         L     @06,LINLN1                                          1117
         BCTR  @06,0                                               1117
         EX    @06,@SM03001                                        1117
*   BUFPTR=NEXTLINE;                /* POINT TO NEXT LINE            */
         LR    BUFPTR,@10                                          1118
*   LOOPCNT=LOOPCNT-1;              /* DECREMENT COUNT               */
*                                                                  1119
         BCTR  LOOPCNT,0                                           1119
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL LINES MOVED UP?                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1120
*   IF LOOPCNT^=0                   /* AT END OF MOVE LOOP ?         */
*     THEN                          /* IF NOT -                      */
         LTR   LOOPCNT,LOOPCNT                                     1120
         BNZ   @RT01120                                            1120
*     GO TO NPMNXTLN;               /* MOVE NEXT LINE                */
*   BUFLINE(1:LINLN1)=BLANKS;       /* BLANK OUT LAST LINE           */
         EX    @06,@SM03003                                        1122
*   NEXTSCT=SCTENDAD;               /* GET ADDR OF LAST SCT ENTRY    */
         L     @10,DCMMSGSV(,DCMTSPTR)                             1123
         L     @10,SCTENDAD(,@10)                                  1123
         ST    @10,NEXTSCT                                         1123
*   SCTINUSE='0'B;                  /* SET LAST SCT TO NOT IN USE    */
         NI    SCTINUSE(@10),B'01111111'                           1124
*   GENERATE;                                                      1125
*                                      /* GEN RETURN TO CALLER       */
         LM 2,1,ROLLSAV                   RESTORE CALLERS REGS
         BR REXIT                         RETURN TO CALLER
*   END NPMUPSCR;                   /* END - NPMUPSCR PROCEDURE      */
@EL00009 DS    0H                                                  1126
@EF00009 DS    0H                                                  1126
@ER00009 BR    @14                                                 1126
*   END IEAVNPM2                    /* END - IEAVNPM2              1127
*                                                                    */
*                                                                  1127
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEERDCM )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IEECUCM )                                       */
*/*%INCLUDE SYSLIB  (IHANVT  )                                       */
*/*%INCLUDE SYSLIB  (IEAPMNIP)                                       */
*/*%INCLUDE SYSLIB  (IEAPNPB )                                       */
*                                                                  1127
*       ;                                                          1127
@DATA    DS    0H
@CH00120 DC    H'2'
@CH00327 DC    H'3'
@CH01182 DC    H'5'
@CH01076 DC    H'6'
@CH01042 DC    H'7'
@CH01096 DC    H'9'
@CH02648 DC    H'10'
@CH00033 DC    H'12'
@CH01833 DC    H'14'
@CH01185 DC    H'16'
@CH00042 DC    H'24'
@CH02951 DC    H'70'
@CH02954 DC    H'74'
@CH02953 DC    H'76'
@CH02685 DC    H'83'
@SM02980 MVC   0(0,@14),@TS00001
@SM02982 MVC   REPLYBUF(0,RPARM),0(@15)
@SM02984 MVC   REPLYBUF(0,RPARM),0(@14)
@SM02987 MVC   NIPMBMTX(0,@10),REPLYBUF+4(RPARM)
@SM02994 MVC   BUFLINE+4(0,BUFPTR),ANSRAREA(LINAD)
@SM02996 MVC   BUFLINE+5(0,BUFPTR),ANSRAREA(@15)
@SM02999 MVC   MSGST(0,MSGADR),BLANKS
@SM03001 MVC   BUFLINE(0,BUFPTR),NXTBUFLN(@10)
@SM03003 MVC   BUFLINE(0,BUFPTR),BLANKS
         DS    0F
@TF00001 DS    F
         DS    0F
@CF00109 DC    F'1'
@CH00109 EQU   @CF00109+2
@CF00101 DC    F'4'
@CH00101 EQU   @CF00101+2
@CF00107 DC    F'8'
@CH00107 EQU   @CF00107+2
@CF02765 DC    F'80'
@CH02765 EQU   @CF02765+2
@CF02946 DC    F'853'
@CF02948 DC    F'897'
@CF02949 DC    F'919'
@CF02991 DC    F'-4'
@CF02854 DC    F'-1'
@CF02815 DC    XL4'FF000000'
         DS    0D
ECBPTR   DS    A
UCMBASPT DS    A
UCMMCSPT DS    A
UCMDVEPT DS    A
SACBPTR  DS    A
I        DS    F
J        DS    F
N        DS    F
WTOTIME  DS    F
CZERO    DC    F'0'
NPMSCANE DS    F
LINLN1   DS    F
NEXTSCT  DS    A
NEXTLINE DS    A
THOLD    DC    F'0'
NULLS    DC    F'0'
MSGAD    DS    A
HILOWAD  DS    A
TOTLN    DS    H
LINDATLN DS    H
NPMW2OPR DS    H
@TS00001 DS    CL83
@CC02777 DC    C'  '
@CC02830 DC    C' '''
@CC02851 DC    C','''
@CC02849 DC    C'R 0'
@CC02847 DC    C'REPLY 0'
@CB02491 DC    X'0001'
@CB02780 DC    X'5B3D'
@CB02802 DC    X'F000'
@CB02814 DC    X'FFFF'
@CB02900 DC    X'5D5B'
@CB02940 DC    X'025A'
@CB02942 DC    X'0020'
@CB02883 DC    X'00000000'
@CB02329 DC    X'00000000000000'
         DS    CL2
@NM00083 DS    CL36
         ORG   @NM00083
NPBIIOBF DS    CL4
         ORG   NPBIIOBF
NPBIRSV1 DC    X'0000'
NPBIIFB1 DC    X'00'
NPBIIFB2 DC    X'00'
         ORG   @NM00083+4
NIPIOBIC DS    CL32
         ORG   NIPIOBIC
NPBIIOB  DS    CL32
         ORG   NPBIIOB
NPBIFGSN DC    X'42000000'
NPBIECBA DC    AL4(NPBIECB)
NPBIIOB1 DC    X'0000000000000000'
NPBICPAD DC    A(0)
NPBIDCBP DC    AL4(NPBIDCB1-40)
NPBIREST DC    X'0000000000000000'
         ORG   @NM00083+36
NIPECBIC DS    CL4
         ORG   NIPECBIC
NPBIECB  DS    CL4
         ORG   NPBIECB
NPBICPCD DC    X'00'
NPBIRBAD DC    AL3(0)
         ORG   NIPECBIC+4
@NM00084 DS    CL52
         ORG   @NM00084
NPBILNTH DC    X'06'
NPBIRSVD DC    AL3(0)
NIPDEBIC DS    CL48
         ORG   NIPDEBIC
NPBIDEB  DS    CL48
         ORG   NPBIDEB
NPBIDEB1 DC    A(0)
NPBIAMLN DC    X'00'
NPBIDEB2 DC    AL3(0)
NPBIOFLG DC    X'00'
NPBIDEB3 DC    X'00000000000000'
NPBINMXT DC    X'00'
NPBIDEB4 DC    AL3(0)
NPBIPRTY DC    X'00'
NPBIDEB5 DC    AL3(0)
NPBIKYID DC    X'0F'
NPBIDCBA DC    AL3(NPBIDCB1-40)
NPBIXSCL DC    X'00'
NPBIAPAD DC    AL3(0)
NPBIDVMD DC    X'00'
NPBIUCBA DC    AL3(0)
NPBIDCB1 DS    CL12
         ORG   NPBIDCB1
NPBIMACR DC    X'00008000'
NPBIIFGS DC    X'0C'
NPBIDEBA DC    AL3(NPBIDEB)
NPBIOFGS DC    X'12000000'
         ORG   @NM00084+52
@NM00085 DS    CL36
         ORG   @NM00085
NPBOIOBF DS    CL4
         ORG   NPBOIOBF
NPBORSV1 DC    X'0000'
NPBOIFB1 DC    X'00'
NPBOIFB2 DC    X'00'
         ORG   @NM00085+4
NIPIOBOC DS    CL32
         ORG   NIPIOBOC
NPBOIOB  DS    CL32
         ORG   NPBOIOB
NPBOFGSN DC    X'42000000'
NPBOECBA DC    AL4(NPBOECB)
NPBOIOB1 DC    X'0000000000000000'
NPBOCPAD DC    A(0)
NPBODCBP DC    AL4(NPBODCB1-40)
NPBOREST DC    X'0000000000000000'
         ORG   @NM00085+36
NIPECBOC DS    CL4
         ORG   NIPECBOC
NPBOECB  DS    CL4
         ORG   NPBOECB
NPBOCPCD DC    X'00'
NPBORBAD DC    AL3(0)
         ORG   NIPECBOC+4
         DS    CL4
@NM00086 DS    CL52
         ORG   @NM00086
NPBOLNTH DC    X'06'
NPBORSVD DC    AL3(0)
NIPDEBOC DS    CL48
         ORG   NIPDEBOC
NPBODEB  DS    CL48
         ORG   NPBODEB
NPBODEB1 DC    A(0)
NPBOAMLN DC    X'00'
NPBODEB2 DC    AL3(0)
NPBOOFLG DC    X'00'
NPBODEB3 DC    X'00000000000000'
NPBONMXT DC    X'00'
NPBODEB4 DC    AL3(0)
NPBOPRTY DC    X'00'
NPBODEB5 DC    AL3(0)
NPBOKYID DC    X'0F'
NPBODCBA DC    AL3(NPBODCB1-40)
NPBOXSCL DC    X'00'
NPBOAPAD DC    AL3(0)
NPBODVMD DC    X'00'
NPBOUCBA DC    AL3(0)
NPBODCB1 DS    CL12
         ORG   NPBODCB1
NPBOMACR DC    X'00008000'
NPBOIFGS DC    X'0C'
NPBODEBA DC    AL3(NPBODEB)
NPBOOFGS DC    X'12000000'
         ORG   @NM00086+52
RCCW2250 DS    CL64
         ORG   RCCW2250
@NM00091 DC    X'0E'
@NM00092 DC    AL3(RMIAREA)
@NM00093 DC    X'6000'
@NM00094 DC    X'0003'
@NM00095 DC    X'07'
@NM00096 DC    AL3(K2250ENT)
@NM00097 DC    X'6000'
@NM00098 DC    X'0002'
@NM00099 DC    X'02'
@NM00100 DC    AL3(NPMRAREA)
@NM00101 DC    X'6000'
@NM00102 DC    X'0051'
@NM00103 DC    X'07'
@NM00104 DC    AL3(K2250ENT)
@NM00105 DC    X'6000'
@NM00106 DC    X'0002'
@NM00107 DC    X'01'
@NM00108 DC    AL3(BLANKS)
@NM00109 DC    X'6000'
@NM00110 DC    X'0051'
@NM00111 DC    X'07'
@NM00112 DC    AL3(K2250ENT)
@NM00113 DC    X'6000'
@NM00114 DC    X'0002'
@NM00115 DC    X'0F'
@NM00116 DC    XL3'000000'
@NM00117 DC    X'6000'
@NM00118 DC    X'0002'
@NM00119 DC    X'27'
@NM00120 DC    AL3(ZEROS)
@NM00121 DC    X'2000'
@NM00122 DC    X'0002'
         ORG   RCCW2250+64
RMIAREA  DS    CL3
         ORG   RMIAREA
RMIAREA1 DS    CL1
         ORG   RMIAREA1
RMIAREA2 DS    BL1
@NM00234 EQU   RMIAREA1+0
         ORG   RMIAREA+1
@NM00235 DS    CL1
RMIAREA3 DS    BL1
@NM00236 EQU   RMIAREA+2
         ORG   RMIAREA+3
K2250ENT DC    X'02AC'
BLANKS   DC    CL240' '
ZEROS    DC    X'0000'
         DS    CL1
WCCW2250 DS    CL40
         ORG   WCCW2250
@NM00123 DC    X'07'
@NM00124 DC    AL3(ZEROS)
@NM00125 DC    X'6000'
@NM00126 DC    X'0002'
@NM00127 DC    X'01'
W2250BUF DC    AL3(0)
@NM00128 DC    X'6000'
W2250DAT DC    X'0344'
@NM00129 DC    X'07'
@NM00130 DC    AL3(K2250ENT)
@NM00131 DC    X'6000'
@NM00132 DC    X'0002'
@NM00133 DC    X'0F'
@NM00134 DC    AL3(0)
@NM00135 DC    X'6000'
@NM00136 DC    X'0002'
@NM00137 DC    X'27'
@NM00138 DC    AL3(ZEROS)
@NM00139 DC    X'2000'
@NM00140 DC    X'0002'
         ORG   WCCW2250+40
RCCW2260 DS    CL32
         ORG   RCCW2260
@NM00141 DC    X'0A'
@NM00142 DC    AL3(NPMRAREA)
@NM00143 DC    X'6000'
@NM00144 DC    X'0051'
@NM00145 DC    X'05'
@NM00146 DC    AL3(K2260BUF)
@NM00147 DC    X'A000'
@NM00148 DC    X'0001'
@NM00149 DC    X'05'
@NM00150 DC    AL3(BLANKS)
@NM00151 DC    X'6000'
@NM00152 DC    X'0051'
@NM00153 DC    X'05'
@NM00154 DC    AL3(K2260ENT)
@NM00155 DC    X'2000'
@NM00156 DC    X'0002'
         ORG   RCCW2260+32
K2260ENT DC    X'094A'
         ORG   K2260ENT
K2260BUF DS    CL1
         ORG   K2260ENT+2
         DS    CL6
WCCW2260 DS    CL24
         ORG   WCCW2260
@NM00157 DC    X'05'
@NM00158 DC    AL3(ZEROS)
@NM00159 DC    X'6000'
@NM00160 DC    X'0001'
@NM00161 DC    X'01'
W2260BUF DC    AL3(0)
@NM00162 DC    X'6000'
@NM00163 DC    X'0280'
@NM00164 DC    X'05'
@NM00165 DC    AL3(K2260ENT)
@NM00166 DC    X'2000'
@NM00167 DC    X'0002'
         ORG   WCCW2260+24
WCCW3277 DS    CL8
         ORG   WCCW3277
@NM00168 DC    X'01'
W3277BUF DC    AL3(0)
W3277FLG DC    X'6000'
@NM00169 DC    X'028A'
         ORG   WCCW3277+8
RCCW3277 DS    CL40
         ORG   RCCW3277
@NM00170 DC    X'06'
@NM00171 DC    AL3(RMIAREA)
@NM00172 DC    X'6000'
@NM00173 DC    X'0001'
@NM00174 DC    X'01'
R3277BF1 DC    AL3(0)
@NM00175 DC    X'6000'
@NM00176 DC    X'0004'
@NM00177 DC    X'02'
@NM00178 DC    AL3(0)
@NM00179 DC    X'9000'
@NM00180 DC    X'0005'
@NM00181 DC    X'02'
@NM00182 DC    AL3(NPMRAREA)
@NM00183 DC    X'6000'
@NM00184 DC    X'0051'
@NM00185 DC    X'01'
R3277BF2 DC    AL3(0)
@NM00186 DC    X'0000'
@NM00187 DC    X'000B'
         ORG   RCCW3277+40
RCCW3066 DS    CL48
         ORG   RCCW3066
@NM00188 DC    X'0E'
@NM00189 DC    AL3(RMIAREA)
@NM00190 DC    X'6000'
@NM00191 DC    X'0003'
@NM00192 DC    X'0F'
@NM00193 DC    AL3(K3066BUF)
@NM00194 DC    X'6000'
@NM00195 DC    X'0002'
@NM00196 DC    X'27'
@NM00197 DC    AL3(K3066BUF)
@NM00198 DC    X'6000'
@NM00199 DC    X'0002'
@NM00200 DC    X'06'
@NM00201 DC    AL3(NPMRAREA)
@NM00202 DC    X'6000'
@NM00203 DC    X'0051'
@NM00204 DC    X'27'
@NM00205 DC    AL3(K3066BUF)
@NM00206 DC    X'6000'
@NM00207 DC    X'0002'
@NM00208 DC    X'01'
@NM00209 DC    AL3(BLANKS)
@NM00210 DC    X'2000'
@NM00211 DC    X'00F0'
         ORG   RCCW3066+48
K3066BUF DC    X'2000'
         DS    CL6
WCCW3066 DS    CL24
         ORG   WCCW3066
@NM00212 DC    X'27'
@NM00213 DC    AL3(ZEROS)
@NM00214 DC    X'6000'
@NM00215 DC    X'0002'
@NM00216 DC    X'01'
W3066BUF DC    AL3(0)
@NM00217 DC    X'6000'
@NM00218 DC    X'0280'
@NM00219 DC    X'0F'
@NM00220 DC    AL3(K3066BUF)
@NM00221 DC    X'2000'
@NM00222 DC    X'0002'
         ORG   WCCW3066+24
HDRMASK  DC    CL6' NIP  '
         DS    CL2
CWAITCUA DS    CL4
         ORG   CWAITCUA
@NM00223 DC    H'0'
CHA      DS    CL1
UA       DS    CL1
         ORG   CWAITCUA+4
NPMAVTIC DS    CL20
         ORG   NPMAVTIC
@NM00224 DC    AL4(NPMIBRAP)
@NM00225 DC    AL4(NPMIBRAP)
@NM00226 DC    AL4(NPMIBRAP)
@NM00227 DC    AL4(NPMICEAP)
@NM00228 DC    AL4(NPMIBRAP)
         ORG   NPMAVTIC+20
NPMAVTOC DS    CL20
         ORG   NPMAVTOC
@NM00229 DC    AL4(NPMIBRAP)
@NM00230 DC    AL4(NPMIBRAP)
@NM00231 DC    AL4(NPMIBRAP)
@NM00232 DC    AL4(NPMOCEAP)
@NM00233 DC    AL4(NPMOAEAP)
         ORG   NPMAVTOC+20
DCMSIZE  DS    CL4
         ORG   DCMSIZE
SP       DC    X'FF'
DEVDEPLN DS    AL3
         ORG   DCMSIZE+4
ST2250OR DC    X'2A822A0240000FFF2A44'
EN2250OR DC    X'2A02400000A02A40'
END2250R DC    X'2AFF0000'
ST3277OR DC    X'40115D7F1D60'
BL3277CH DC    X'3C5AD140'
RD3277CH DC    X'C3115AD11D40133C5D7F40'
AUTDELSC DC    CL4'  × '
NPMWTBUF DS    CL1
CIRCLED  DS    CL16
         ORG   CIRCLED
D        DC    X'16'
IDLES    DC    15X'5E'
         ORG   CIRCLED+16
RESET    DC    X'1F1F1F'
DRESET   DC    X'161F1F1F'
READAREA DS    CL87
         ORG   READAREA
@NM00237 DS    CL4
NPMRAREA DS    CL83
         ORG   READAREA+87
WRITAREA DS    CL136
         ORG   WRITAREA
NPMWHDR  DS    CL4
NPMWAREA DS    CL132
         ORG   WRITAREA+136
NPMWASAV DS    CL132
NIPMSWS  DC    X'0000'
         ORG   NIPMSWS
NPWTOSV1 DS    BL1
NPWTOSV2 EQU   NIPMSWS+0
NPWORSV1 EQU   NIPMSWS+0
NPWORSV2 EQU   NIPMSWS+0
NPMXCONI EQU   NIPMSWS+0
NPMGRAPH EQU   NIPMSWS+0
NPMWRTSW EQU   NIPMSWS+0
NPMEOBSW EQU   NIPMSWS+0
NPMANRD  DS    BL1
RD3066   EQU   NIPMSWS+1
NPMILEN  EQU   NIPMSWS+1
@NM00238 EQU   NIPMSWS+1
         ORG   NIPMSWS+2
INITSAV  DS    16F
ROLLSAV  DS    16F
IEAVNPM2 CSECT
*                                      /* GEN MSGS AND PARMLISTS     */
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*      MESSAGES ISSUED BY IEAVNPM2 AND PARAMETER LIST FOR IEA305A     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* *
IEA154I  DS    0F                         MESSAGE IEA154I
         IEAPMNIP  TYPE=HEADER,MSGST=IEA154I,MSGEND=END154I
         DC    CL20'IEA154I HARDCOPY OF ' MESSAGE TEXT
         DC    CL23'INITIALIZATION MESSAGES' MESSAGE TEXT
         DC    CL13' DISCONTINUED'        MESSAGE TEXT
END154I  EQU   *                          END OF MESSAGE
* *
* *
IEA305A  DS    0F                         MESSAGE IEA305A
         IEAPMNIP  TYPE=HEADER,MSGST=IEA305A,MSGEND=END305A
         DC    CL21'IEA305A INVALID REPLY' MESSAGE TEXT
         DC    CL19' FORMAT - RESPECIFY'  MESSAGE TEXT
END305A  EQU   *                          END OF MESSAGE
* *
* *
PLSTXX7I DS    0F
         IEAPMNIP  TYPE=PLIST,RMSGST=NPMRAREA,RMSGL=83,MSGST=IEA305A,  *
               ASYNCH=YES
         EJECT ;
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*       CHANNEL COMMAND WORDS USED BY IEAVNIPM ROUTINES               *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*      CCW TO SKIP TO LINE 1 ON PRINTER                               *
NPMSKCCW  DC    X'8B'                  SKIP CODE
          DC    AL3(0)                 NO DATA AREA
          DC    X'2000'                NO CHAINING
          DC    H'1'                   LENGTH
*    CCW CHAIN TO WRITE MESSAGE ON TP DEVICE                          *
NPMWTCCW  CCW   1,CIRCLED,X'A0',16     WRITE CIRCLE D AND 15 IDLES
          DC    X'01'                  TP DEVICE CCW WRITE CODE
          DC    AL3(NPMWAREA)           ADDRESS DATA AREA
          DC    X'6000'                 CHAINING
NPMWTCWL  DS    H                       MESSAGE LENGTH
          CCW   2,NPMWTBUF,X'60',1     READ REPLY FROM TP DEVICE
          CCW   1,RESET,X'20',3        RESET TERMINAL
*    CCW TO WRITE MESSAGE ON UNIT RECORD DEVICE                       *
NPMWUCCW  DC    X'09'                  UNIT RECORD CCW WRITE CODE
          DC    AL3(NPMWAREA)           ADDRESS OF DATA AREA
          DC    X'2000'                 NO CHAINING
NPMWCCWL  DS    H                       MESSAGE LENGTH
*     CCW TO READ REPLY FROM UNIT RECORD INQUIRY DEVICE               *
NPMRQCCW  CCW   10,NPMRAREA,X'20',80   UNIT RECORD INQUIRY DEVICE READ
*    CCW TO READ REPLY FROM UNIT RECORD NON-INQUIRY DEVICE            *
NPMRFCCW  CCW   2,NPMRAREA,X'20',80    UNIT RECORD READ, FEED, SS CCW
*    CCW CHAIN TO READ REPLY FROM TP DEVICE                           *
NPMRTCCW  CCW   6,0,X'60',1            COMMUNICATION CLASS - PREPARE
          CCW   2,NPMRAREA,X'60',83      READ
          CCW   1,DRESET,X'20',4         RESET
          EJECT ;
*        TRANSLATE INSTRUCTIONS AND TABLES                            *
*                                                                     *
NPMTRTTE  TR    NPMRAREA(0),NPMRCODE      TRANSLATE TP TO EBCDIC
NPMRCODE  EQU   *      TRANSLATE TABLE - TP TO EBCDIC
*                  0 1 2 3 4 5 6 7 8 9 A B C D E F                    *
          DC    X'3F40F13FF23F3FF3F43F3FF53FF6F73F' 0
          DC    X'F83F3FF93FF07B3F3F3F353F363F3F37' 1
          DC    X'7C3F3F613FA2A33F3FA4A53FA63F3FA7' 2
          DC    X'3FA8A93F3F3F3F6B3F3F3F253F403F3F' 3
          DC    X'603F3F913F92933F3F94953F963F3F97' 4
          DC    X'3F98993F3F3F3F5B3F3F3F403F16173F' 5
          DC    X'3F50813F823F3F83843F3F853F86873F' 6
          DC    X'883F3F893F3F4B3F3F3F053F063F3F07' 7
          DC    X'3F407E3F4C3F3F5E7A3F3F6C3F7D6E3F' 8
          DC    X'5C3F3F4D3F5D7F3F3F3F353F363F3F3F' 9
          DC    X'4A3F3F6F3FE2E33F3FE4E53FE63F3FE7' A
          DC    X'3FE8E93F3F3F3F4F3F3F3F253F263F3F' B
          DC    X'6D3F3FD13FD2D33F3FD4D53FD63F3FD7' C
          DC    X'3FD8D93F3F3F3F5A3F3F3F153F16173F' D
          DC    X'3F4EC13FC23F3FC3C43F3FC53FC6C73F' E
          DC    X'C83F3FC93F3F5F3F3F3F053F063F3F07' F
*                                                                     *
NPMTRETT  TR    NPMWAREA(0),NPMWCODE      TRANSLATE EBCDIC TO TP
NPMWCODE  EQU   *      TRANSLATE TABLE - EBCDIC TO TP CODE
*                  0 1 2 3 4 5 6 7 8 9 A B C D E F                    *
          DC    X'5E37163D887A7C7F88888888885B8888' 0
          DC    X'88888888885B5D5E8888888888888888' 1
          DC    X'88888888883B3D888888888888888888' 2
          DC    X'88885E8888881C1F8888888888888888' 3
          DC    X'01888888888888888888A0768493E1B7' 4
          DC    X'61888888888888888888D757909587F6' 5
          DC    X'4023888888888888888888378BC08EA3' 6
          DC    X'888888888888888888888816208D8296' 7
          DC    X'88626467686B6D6E7073888888888888' 8
          DC    X'88434546494A4C4F5152888888888888' 9
          DC    X'88882526292A2C2F3132888888888888' A
          DC    X'88888888888888888888888888888888' B
          DC    X'88E2E4E7E8EBEDEEF0F3888888888888' C
          DC    X'88C3C5C6C9CACCCFD1D2888888888888' D
          DC    X'8888A5A6A9AAACAFB1B2888888888888' E
          DC    X'15020407080B0D0E1013888888888888' F
NIPSTART  DC    A(@PSTART)
IEAVNPM2 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RZERO    EQU   @00
RPARM    EQU   @01
RPRM1    EQU   @01
UECB     EQU   @01
RIOBAPP  EQU   @02
BUFPTR   EQU   @03
CVTPTR   EQU   @03
RNIPM    EQU   @04
UCBPTR   EQU   @04
RUCB     EQU   @04
RIOB     EQU   @05
IOBPRPTR EQU   @05
IOBSTPTR EQU   @05
RBUFC    EQU   @06
RSCANC   EQU   @07
REALAD   EQU   @05
SPLENTH1 EQU   @05
SPLENTH2 EQU   @06
RUCBAPP  EQU   @07
DCMTSPTR EQU   @07
SCANREG  EQU   @08
BLKLINE  EQU   @08
LOOPCNT  EQU   @08
REVEN    EQU   @08
MSGADR   EQU   @09
LINAD    EQU   @09
RCUA     EQU   @10
DEBPTR   EQU   @04
DEBDAPTR EQU   @04
DEBEXPTR EQU   @04
DEBSBPTR EQU   @04
UCMEXTPT EQU   @04
UCMEILPT EQU   @04
UCMUEWPT EQU   @04
RNVT     EQU   @02
BUFPTR1  EQU   @03
DCBPTR   EQU   @07
NAMEPTR  EQU   @09
RBASE    EQU   @11
RBASE2   EQU   @12
RCVT     EQU   @03
REG15    EQU   @15
RENTRY   EQU   @15
REXIT    EQU   @14
RODD     EQU   @09
RSAVE    EQU   @13
TCBPTR   EQU   @04
UCBDCPTR EQU   @04
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTCUCB  EQU   CVTMAP+100
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTRSV90 EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
DCMTSRT  EQU   0
DCMRFLGS EQU   DCMTSRT+5
DCMNIPP  EQU   DCMRFLGS
@NM00010 EQU   DCMTSRT+14
DCMDEVTY EQU   DCMTSRT+15
DCMR2FLG EQU   DCMTSRT+44
DCMR3FLG EQU   DCMTSRT+45
DCMMSGSV EQU   DCMTSRT+56
DCMPACB  EQU   DCMTSRT+60
DCMACB   EQU   0
DCMASACB EQU   DCMACB+5
DCMACLR  EQU   DCMACB+9
DCMAFLG1 EQU   DCMACLR+17
DCMAFLG2 EQU   DCMACLR+18
DCMATFLG EQU   DCMACLR+19
DCMADFLG EQU   DCMATFLG
DCMATRCK EQU   DCMATFLG+1
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBAPPB  EQU   DEBAPPAD+1
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
ECB      EQU   0
ECBRB    EQU   ECB
ECBCC    EQU   ECBRB
ECBPOSTB EQU   ECBCC
ECBCCCNT EQU   ECBRB+1
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCYCCK EQU   IOBFLAG1
IOBIOERR EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSNSC9 EQU   IOBS0B7
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBECBCC EQU   IOBECBPT
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTART EQU   IOBSTDRD+16
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
IOBERRCT EQU   IOBSTDRD+30
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBCHA   EQU   UCBCHAN
UCBUA    EQU   UCBCHAN+1
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3COMM EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00055 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
UCM2EXT  EQU   0
UCM2STA  EQU   UCM2EXT+8
UCM2SFLG EQU   UCM2STA
UCMPRFX  EQU   0
UCMMCENT EQU   UCMPRFX
UCMSAVE0 EQU   UCMPRFX+4
UCMSFLGS EQU   UCMPRFX+84
UCMSFLG1 EQU   UCMSFLGS
UCMSFLG2 EQU   UCMSFLGS+1
UCMXSA   EQU   UCMPRFX+104
UCMSDS1  EQU   UCMPRFX+156
UCMPRFXP EQU   0
UCM      EQU   0
UCMAECB  EQU   UCM+4
UCMDECB  EQU   UCM+12
UCMRPYI  EQU   UCM+32
UCMPXB   EQU   UCM+68
UCMMODE  EQU   UCMPXB
UCMVDATA EQU   UCM+72
UCMRSV42 EQU   UCM+300
UCMRSV51 EQU   UCM+301
UCMEIL   EQU   0
UCMRECBA EQU   UCMEIL+24
UCMEXIT  EQU   0
UCMLIST  EQU   0
UCMSTS   EQU   UCMLIST+24
UCMAF    EQU   UCMSTS
UCMATR   EQU   UCMLIST+25
UCMXA    EQU   UCMLIST+26
UCMXB    EQU   UCMLIST+28
UCMAUTH  EQU   UCMLIST+40
UCMAUTHA EQU   UCMAUTH
UCMDISP  EQU   UCMLIST+42
UCMDISP1 EQU   UCMDISP
UCMDISP2 EQU   UCMDISP+1
UCMMSG   EQU   UCMLIST+60
UCMMSG1  EQU   UCMMSG
UCMDEVC  EQU   UCMLIST+63
UCMRCT   EQU   UCMLIST+68
UCMSDS5  EQU   UCMRCT
NVT      EQU   0
NVTNPATR EQU   NVT+54
NVTNPREN EQU   NVTNPATR
NVTFLLB  EQU   NVT+55
NVTABSAV EQU   NVT+140
NVTFLCN  EQU   NVT+211
NVTFLAC  EQU   NVTFLCN
NVTFLIOC EQU   NVTFLCN
NVTFLNHC EQU   NVTFLCN
NVTFLRAC EQU   NVTFLCN
NVTWTPSW EQU   NVT+224
NVTWPSW2 EQU   NVTWTPSW+4
NVTIDPSW EQU   NVTWPSW2
NVTFLWSC EQU   NVTWPSW2+3
NVTLOAD  EQU   NVT+232
NVTSENSE EQU   NVT+236
NVTSWAIT EQU   NVT+240
NVTTIME  EQU   NVT+244
NVTUCBFN EQU   NVT+248
NVTWTO   EQU   NVT+252
NVTWTOR  EQU   NVT+256
NVTWTOR2 EQU   NVT+260
NVTOPEN  EQU   NVT+264
NVTMOUNT EQU   NVT+268
NVTVIRT  EQU   NVT+276
NVTREAL  EQU   NVT+280
NVTSCHED EQU   NVT+284
NVTOPIO  EQU   NVT+288
NVTMBUF  EQU   NVT+336
NVTMBEND EQU   NVT+340
NVTXCTL  EQU   NVT+428
NVTLOCAT EQU   NVT+436
NVTFLPO  EQU   NVT+528
NWTOHDR  EQU   0
NWTOLNG  EQU   NWTOHDR
NWTOFL   EQU   NWTOHDR+2
NWTOFLNH EQU   NWTOFL
NWTOFLNC EQU   NWTOFL
NWTORLST EQU   0
NWTORRPA EQU   NWTORLST
NWTORECB EQU   NWTORLST+4
NWTORFL  EQU   NWTORLST+10
NWTORFLA EQU   NWTORFL
NWTORFLB EQU   NWTORFL
NWTORMSG EQU   NWTORLST+12
NIPSPE   EQU   0
NIPMNTPL EQU   0
NMNTDS   EQU   NIPMNTPL
NMNTVS   EQU   NIPMNTPL+12
NMNTFL   EQU   NIPMNTPL+20
NIPOPNPL EQU   0
NOPNDS   EQU   NIPOPNPL
NOPNFL   EQU   NIPOPNPL+20
NIPSCHDL EQU   0
DUMMYDCB EQU   0
DCBDEBAD EQU   DUMMYDCB+45
REPLYBUF EQU   0
IOBFLAG  EQU   0
NPMRHDR  EQU   0
NPMRLNG  EQU   NPMRHDR
NPMRFLNH EQU   NPMRHDR+2
CCWCOMCD EQU   0
NIPMBUF  EQU   0
NIPMBHDR EQU   NIPMBUF
NIPMBLL  EQU   NIPMBHDR
NIPMBB0  EQU   NIPMBHDR+2
NIPMBTIM EQU   NIPMBHDR+4
NIPMBTS  EQU   NIPMBTIM
NIPMBB1  EQU   NIPMBTIM+6
NIPMBMTX EQU   NIPMBUF+16
GRBUF    EQU   0
ST2250AD EQU   GRBUF
MSGSTAD  EQU   GRBUF+4
MSGENDAD EQU   GRBUF+8
ENTAREAD EQU   GRBUF+12
SCTBEGAD EQU   GRBUF+16
SCTENDAD EQU   GRBUF+20
ST2250   EQU   0
ST3277   EQU   0
MSGST    EQU   0
BL3277   EQU   0
EN2250   EQU   0
END2250  EQU   0
RD3277   EQU   0
SCT      EQU   0
STOPPER  EQU   SCT+16
ENTAREA  EQU   0
SCTENTRY EQU   0
SCTINUSE EQU   SCTENTRY
SCTAUTOD EQU   SCTENTRY
BUFLINE  EQU   0
NXTBUFLN EQU   0
ANSRAREA EQU   0
SCAN     EQU   0
BUFPACK  EQU   0
DCMREND  EQU   0
UCBADDR  EQU   0
UCBBGN   EQU   0
UCM2PTR  EQU   0
XCTLEP   EQU   29
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBSUCBB EQU   DEBSUCBA+1
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00054 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCMIECBA EQU   UCMRECBA+4
NIPDCBIC EQU   NPBILNTH
NIPDCBOC EQU   NPBOLNTH
CSW      EQU   IOBCSW
CSWSTAT  EQU   CSW+3
CSWCE    EQU   CSWSTAT
CSWUC    EQU   CSWSTAT
CSWUE    EQU   CSWSTAT
CSWRCT   EQU   CSW+5
LINLN    EQU   LINLN1+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00089 EQU   CSWSTAT+1
@NM00088 EQU   CSWSTAT
@NM00087 EQU   CSWSTAT
CSWCCWAD EQU   CSW
NPBODCB  EQU   NIPDCBOC
NPBIDCB  EQU   NIPDCBIC
UCMIECBP EQU   UCMIECBA+1
UCMIECBF EQU   UCMIECBA
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00054
UCBSKPFG EQU   @NM00054
UCBRIPND EQU   @NM00054
UCBRTIAC EQU   @NM00054
UCBRSV79 EQU   @NM00054
UCBRSV78 EQU   @NM00054
UCBRSV77 EQU   @NM00054
UCBOLTEP EQU   @NM00054
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00053 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBFL44  EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBR     EQU   IOBSEEK+7
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBM     EQU   IOBSEEK
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBPRTOV EQU   IOBNFLG1
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSDVM  EQU   DEBSUCBA
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00242 EQU   SCTENTRY+1
@NM00241 EQU   SCTENTRY
@NM00240 EQU   SCT
NIPMBB2  EQU   NIPMBHDR+15
NIPMBRTC EQU   NIPMBHDR+11
@NM00239 EQU   NIPMBTIM+4
@NM00090 EQU   DUMMYDCB
NSCHDCPU EQU   NIPSCHDL+8
NSCHDPRM EQU   NIPSCHDL+4
NSCHDPTR EQU   NIPSCHDL
@NM00082 EQU   NIPOPNPL+22
NOPNRC   EQU   NIPOPNPL+21
NOPNFLSX EQU   NOPNFL
NOPNFLLC EQU   NOPNFL
NOPNFLLB EQU   NOPNFL
NOPNFLNB EQU   NOPNFL
NOPNFLI  EQU   NOPNFL
NOPNFLM  EQU   NOPNFL
NOPNFAU  EQU   NOPNFL
NOPNFRS  EQU   NOPNFL
NOPNUCB  EQU   NIPOPNPL+16
NOPNDCB  EQU   NIPOPNPL+12
NOPNDSA  EQU   NOPNDS
@NM00081 EQU   NIPMNTPL+21
NMNTFLB  EQU   NMNTFL
NMNTFLC  EQU   NMNTFL
NMNTFLI  EQU   NMNTFL
NMNTFUS  EQU   NMNTFL
@NM00080 EQU   NMNTFL
NMNTDT   EQU   NIPMNTPL+18
NMNTUCB  EQU   NMNTVS
NMNTDSA  EQU   NMNTDS
NIPSPEA  EQU   NIPSPE+4
NIPSPEQ  EQU   NIPSPE
@NM00079 EQU   NWTORLST+11
@NM00078 EQU   NWTORFL
@NM00077 EQU   NWTORFL
NMTORRDL EQU   NWTORLST+8
@NM00076 EQU   NWTOFL
NVTRMSG  EQU   NVT+540
NVTRLOCK EQU   NVT+536
NVTRCODE EQU   NVT+532
@NM00075 EQU   NVT+529
@NM00074 EQU   NVTFLPO
NVTFLWS  EQU   NVTFLPO
NVTFLQS  EQU   NVTFLPO
@NM00073 EQU   NVTFLPO
NVTSYSP  EQU   NVTFLPO
NVTFLLST EQU   NVTFLPO
NVTAPQE  EQU   NVT+524
NVTFBQE2 EQU   NVT+520
NVTFBQE1 EQU   NVT+516
@NM00072 EQU   NVT+512
NVTREALR EQU   NVT+508
NVTFASVT EQU   NVT+504
NVTLPALG EQU   NVT+496
NVTVRLNG EQU   NVT+492
NVTVRREG EQU   NVT+488
NVTLVIRT EQU   NVT+484
NVTDIRA  EQU   NVT+480
NVTLPAND EQU   NVT+476
NVTRMSS  EQU   NVT+472
NVTRPQE  EQU   NVT+468
NVTRLLE  EQU   NVT+464
NVTRJPQ  EQU   NVT+460
NVTVMSS  EQU   NVT+456
NVTVPQE  EQU   NVT+452
NVTVLLE  EQU   NVT+448
NVTVJPQ  EQU   NVT+444
NVTLSEC  EQU   NVTLOCAT+4
NVTLFST  EQU   NVTLOCAT
NVTXSEC  EQU   NVTXCTL+4
NVTXFST  EQU   NVTXCTL
@NM00071 EQU   NVT+425
NVTLPACT EQU   NVT+424
NVTCSLPG EQU   NVT+420
NVTCSIOB EQU   NVT+416
NVTCSLNM EQU   NVT+412
NVTCSLIB EQU   NVT+408
NVTBLDL  EQU   NVT+404
NVTVRBLD EQU   NVT+400
@NM00070 EQU   NVT+392
NVTVRTCB EQU   NVT+388
NVTVVTCB EQU   NVT+384
NVTSPUCB EQU   NVT+382
NVTQSCNT EQU   NVT+380
NVTQSBUF EQU   NVT+376
NVTPTAB  EQU   NVT+372
NVTPAREA EQU   NVT+368
NVTRPAGE EQU   NVT+364
@NM00069 EQU   NVT+363
NVTABWS1 EQU   NVT+362
NVTABCD1 EQU   NVT+360
@NM00068 EQU   NVT+358
NVTCPUAD EQU   NVT+356
NVTTOD   EQU   NVT+352
NVTSPE   EQU   NVT+344
NVTDCBSN EQU   NVT+332
NVTDCBOC EQU   NVT+328
NVTDCBIC EQU   NVT+324
@NM00067 EQU   NVT+308
NVTNMBLD EQU   NVT+304
NVTNIPM  EQU   NVT+292
NVTPRMPT EQU   NVT+272
NVTIX    EQU   NVTFLWSC
NVTFLWS1 EQU   NVTWPSW2+2
NVTWPSW1 EQU   NVTWTPSW
NVTMCPSW EQU   NVT+216
@NM00066 EQU   NVT+212
@NM00065 EQU   NVTFLCN
NVTFLNCK EQU   NVTFLCN
NVTFLASM EQU   NVTFLCN
NVTMP    EQU   NVTFLCN
NVTFLSG  EQU   NVT+210
NVTTRACE EQU   NVT+208
NVTNXPTR EQU   NVT+204
NVTNXSIZ EQU   NVT+202
@NM00064 EQU   NVT+200
NVTSGPSA EQU   NVT+196
NVTN0MSG EQU   NVT+192
NVTVVPG1 EQU   NVT+188
NVTNBFND EQU   NVT+184
NVTNUCND EQU   NVT+180
NVTSTMAP EQU   NVT+176
NVTRTMSA EQU   NVT+172
NVTMFASA EQU   NVT+168
NVTLSPQE EQU   NVT+164
NVTALSQA EQU   NVT+160
NVTPQSAV EQU   NVT+156
NVTSVC60 EQU   NVT+148
NVTABSEC EQU   NVTABSAV+4
NVTABFST EQU   NVTABSAV
NVTNVSQA EQU   NVT+138
NVTRSVMN EQU   NVT+136
NVTNBMIN EQU   NVT+134
NVTRGNAV EQU   NVT+132
NVTLSQNO EQU   NVT+130
NVTSQANO EQU   NVT+128
NVTLSQAS EQU   NVT+124
NVTLNGFX EQU   NVT+120
@NM00063 EQU   NVT+112
NVTASMAD EQU   NVT+108
NVTNVRSZ EQU   NVT+104
NVTMFA   EQU   NVT+100
NVTDSSNG EQU   NVT+96
NVTMSLNK EQU   NVT+92
NVTVVMDI EQU   NVT+88
NVTIGCER EQU   NVT+84
NVTVBLDL EQU   NVT+80
NVTSVCTB EQU   NVT+76
NVTASTCB EQU   NVT+72
NVTAASCB EQU   NVT+68
NVTMASCB EQU   NVT+64
NVTCMTCB EQU   NVT+60
NVTMSTCB EQU   NVT+56
@NM00062 EQU   NVTFLLB
NVTFLSLB EQU   NVTFLLB
@NM00061 EQU   NVTNPATR
NVTNPREU EQU   NVTNPREN
@NM00060 EQU   NVTNPREN
NVTNPSFX EQU   NVT+53
@NM00059 EQU   NVT+50
NVTNPSUF EQU   NVT
UCMRCTA  EQU   UCMRCT+1
UCMRSV31 EQU   UCMSDS5
UCMSDS5G EQU   UCMSDS5
UCMSDS5F EQU   UCMSDS5
UCMRSV30 EQU   UCMSDS5
UCMRSV29 EQU   UCMSDS5
UCMSDS5C EQU   UCMSDS5
UCMSDS5B EQU   UCMSDS5
UCMSDS5A EQU   UCMSDS5
UCMMLAST EQU   UCMLIST+64
UCMVHRSN EQU   UCMDEVC
UCMDEVG  EQU   UCMDEVC
UCMDEVF  EQU   UCMDEVC
UCMDEVE  EQU   UCMDEVC
UCMDEVD  EQU   UCMDEVC
UCMDEVCC EQU   UCMDEVC
UCMDEVB  EQU   UCMDEVC
UCMDEVA  EQU   UCMDEVC
UCMXOR   EQU   UCMLIST+62
UCMMSG2  EQU   UCMMSG+1
UCMRSV27 EQU   UCMMSG1
UCMRSV26 EQU   UCMMSG1
UCMMSGF  EQU   UCMMSG1
UCMMSGE  EQU   UCMMSG1
UCMMSGD  EQU   UCMMSG1
UCMMSGC  EQU   UCMMSG1
UCMMSGB  EQU   UCMMSG1
UCMMSGA  EQU   UCMMSG1
UCMCOMPC EQU   UCMLIST+56
UCMWLAST EQU   UCMLIST+52
UCMOAOEN EQU   UCMLIST+48
UCMALTEN EQU   UCMLIST+44
UCMRV007 EQU   UCMDISP2
UCMRV006 EQU   UCMDISP2
UCMRV005 EQU   UCMDISP2
UCMRV004 EQU   UCMDISP2
UCMRV003 EQU   UCMDISP2
UCMRV002 EQU   UCMDISP2
UCMDISPJ EQU   UCMDISP2
UCMDISPI EQU   UCMDISP2
UCMDISPH EQU   UCMDISP1
UCMDISPG EQU   UCMDISP1
UCMDISPF EQU   UCMDISP1
UCMDISPE EQU   UCMDISP1
UCMDISPD EQU   UCMDISP1
UCMDISPC EQU   UCMDISP1
UCMDISPB EQU   UCMDISP1
UCMDISPA EQU   UCMDISP1
UCMAUTHB EQU   UCMAUTH+1
UCMRSV23 EQU   UCMAUTHA
UCMRSV22 EQU   UCMAUTHA
UCMRSV21 EQU   UCMAUTHA
UCMRSV20 EQU   UCMAUTHA
UCMRSV19 EQU   UCMAUTHA
UCMAUTH3 EQU   UCMAUTHA
UCMAUTH2 EQU   UCMAUTHA
UCMAUTH1 EQU   UCMAUTHA
UCMOUTQ  EQU   UCMLIST+36
UCMRSV18 EQU   UCMLIST+34
UCMRTCD  EQU   UCMLIST+32
@NM00058 EQU   UCMXA+1
UCMID    EQU   UCMXA
UCMRSV17 EQU   UCMATR
UCMRSV16 EQU   UCMATR
UCMAT04  EQU   UCMATR
UCMLF    EQU   UCMATR
UCMUF    EQU   UCMATR
UCMXF    EQU   UCMATR
UCMIF    EQU   UCMATR
UCMOF    EQU   UCMATR
UCMTC    EQU   UCMSTS
UCMTD    EQU   UCMSTS
UCMTB    EQU   UCMSTS
UCMTA    EQU   UCMSTS
UCMCF    EQU   UCMSTS
UCMBF    EQU   UCMSTS
UCMPF    EQU   UCMSTS
UCMNAME  EQU   UCMLIST+16
UCMUCB   EQU   UCMLIST+12
UCMDCB   EQU   UCMLIST+8
UCMSBR   EQU   UCMLIST+4
UCMECB   EQU   UCMLIST
UCMTPSAV EQU   UCMEXIT+208
UCMXTSAV EQU   UCMEXIT+136
UCMDESCD EQU   UCMEXIT+132
UCMROUTC EQU   UCMEXIT+128
UCMMSTXT EQU   UCMEXIT
UCMDECBA EQU   UCMEIL+20
UCMOECBA EQU   UCMEIL+16
UCMAECBA EQU   UCMEIL+12
UCMXECBA EQU   UCMEIL+8
UCMNIPTR EQU   UCMEIL+4
UCMRSV15 EQU   UCMEIL+3
UCMRTCT  EQU   UCMEIL+2
UCMRPYL  EQU   UCMEIL+1
@NM00057 EQU   UCMEIL
UCMRSV60 EQU   UCM+302
UCMRSV59 EQU   UCMRSV51
UCMRSV58 EQU   UCMRSV51
UCMRSV57 EQU   UCMRSV51
UCMRSV56 EQU   UCMRSV51
UCMRSV55 EQU   UCMRSV51
UCMRSV54 EQU   UCMRSV51
UCMRSV53 EQU   UCMRSV51
UCMRSV52 EQU   UCMRSV51
UCMRSV50 EQU   UCMRSV42
UCMRSV49 EQU   UCMRSV42
UCMRSV48 EQU   UCMRSV42
UCMRSV47 EQU   UCMRSV42
UCMRSV46 EQU   UCMRSV42
UCMRSV45 EQU   UCMRSV42
UCMRSV44 EQU   UCMRSV42
UCMRSV43 EQU   UCMRSV42
UCMRSV41 EQU   UCM+296
UCMWAKUP EQU   UCM+292
UCMFRRAD EQU   UCM+288
UCMSWCH  EQU   UCM+284
UCMASCB  EQU   UCM+280
UCMWQECP EQU   UCM+276
UCMORECP EQU   UCM+272
UCMOECBT EQU   UCM+268
UCMOECBH EQU   UCM+264
UCMWECBT EQU   UCM+260
UCMWECBH EQU   UCM+256
UCMMBEND EQU   UCM+252
UCMCTID  EQU   UCM+250
UCMRSV61 EQU   UCM+248
UCMRP2AD EQU   UCM+244
UCMCRAAD EQU   UCM+240
UCMWQLM1 EQU   UCM+238
UCMRV001 EQU   UCM+237
UCMRQLM1 EQU   UCM+236
UCMMBPTR EQU   UCM+232
UCMMQNXT EQU   UCM+228
UCMMQEND EQU   UCM+224
UCMMQPTR EQU   UCM+220
UCMTRECB EQU   UCM+216
UCMMNECB EQU   UCM+212
UCMMNTR  EQU   UCM+208
UCMR9SV  EQU   UCM+204
UCMSAVE4 EQU   UCM+140
UCMSAVE3 EQU   UCM+84
UCMVEL   EQU   UCMVDATA+8
UCMVEZ   EQU   UCMVDATA+4
UCMVEA   EQU   UCMVDATA
UCMINCR  EQU   UCM+71
UCMMODEL EQU   UCM+70
UCMCORE  EQU   UCM+69
UCMFIX   EQU   UCMMODE
UCMMCS   EQU   UCMMODE
UCMOGCE  EQU   UCMMODE
UCMAMFA  EQU   UCMMODE
UCMRSV14 EQU   UCMMODE
UCMTPUTA EQU   UCMMODE
UCMNOCON EQU   UCMMODE
UCMRSV11 EQU   UCMMODE
UCMPXA   EQU   UCM+64
UCMWQEND EQU   UCM+60
UCMWQNR  EQU   UCM+58
UCMRQNR  EQU   UCM+56
UCMWQECB EQU   UCM+52
UCMRQECB EQU   UCM+48
UCMWQLM  EQU   UCM+46
UCMRQLM  EQU   UCM+45
@NM00056 EQU   UCMRPYI
UCMRPYQ  EQU   UCM+28
UCMWTOQ  EQU   UCM+24
UCMLSTP  EQU   UCM+20
UCMARECB EQU   UCM+16
UCMLECB  EQU   UCMDECB
UCMOECB  EQU   UCM+8
UCMXECB  EQU   UCM
UCMGMCNT EQU   UCMPRFX+158
UCMSDS2  EQU   UCMPRFX+157
UCMRSV09 EQU   UCMSDS1
UCMRSV08 EQU   UCMSDS1
UCMRSV07 EQU   UCMSDS1
UCMRSV06 EQU   UCMSDS1
UCMRSV05 EQU   UCMSDS1
UCMRSV04 EQU   UCMSDS1
UCMSDS1B EQU   UCMSDS1
UCMSDS1A EQU   UCMSDS1
UCMDTINT EQU   UCMPRFX+152
UCMLOGAD EQU   UCMPRFX+148
UCMNPECB EQU   UCMPRFX+144
UCMTPPTR EQU   UCMPRFX+140
UCMDOMRT EQU   UCMPRFX+136
UCMRUTCK EQU   UCMPRFX+132
UCMQRTN  EQU   UCMPRFX+128
UCM6WD   EQU   UCMXSA+20
UCM5WD   EQU   UCMXSA+16
UCM4WD   EQU   UCMXSA+12
UCM3WD   EQU   UCMXSA+8
UCM2WD   EQU   UCMXSA+4
UCM1WD   EQU   UCMXSA
UCMRSV03 EQU   UCMPRFX+102
UCMHRDRT EQU   UCMPRFX+100
UCMUEXIT EQU   UCMPRFX+97
UCMXCT   EQU   UCMPRFX+96
UCMHCUCM EQU   UCMPRFX+92
UCMCMID  EQU   UCMPRFX+88
UCMOWTOR EQU   UCMPRFX+86
UCMRSV02 EQU   UCMSFLG2
UCMSYSO  EQU   UCMSFLG2
UCMSYSN  EQU   UCMSFLG2
UCMSYSM  EQU   UCMSFLG2
UCMSYSL  EQU   UCMSFLG2
UCMSYSK  EQU   UCMSFLG2
UCMSYSJ  EQU   UCMSFLG2
UCMSYSI  EQU   UCMSFLG2
UCMRSV35 EQU   UCMSFLG1
UCMSYSG  EQU   UCMSFLG1
UCMSYSF  EQU   UCMSFLG1
UCMSYSE  EQU   UCMSFLG1
UCMSYSD  EQU   UCMSFLG1
UCMSYSC  EQU   UCMSFLG1
UCMSYSB  EQU   UCMSFLG1
UCMRSV01 EQU   UCMSFLG1
UCMWTOX  EQU   UCMPRFX+80
UCMDOME  EQU   UCMPRFX+76
UCMSVR0  EQU   UCMSAVE0+68
UCMSVQ0  EQU   UCMSAVE0+64
UCMSVP0  EQU   UCMSAVE0+60
UCMSVO0  EQU   UCMSAVE0+56
UCMSVN0  EQU   UCMSAVE0+52
UCMSVM0  EQU   UCMSAVE0+48
UCMSVL0  EQU   UCMSAVE0+44
UCMSVK0  EQU   UCMSAVE0+40
UCMSVJ0  EQU   UCMSAVE0+36
UCMSVI0  EQU   UCMSAVE0+32
UCMSVH0  EQU   UCMSAVE0+28
UCMSVG0  EQU   UCMSAVE0+24
UCMSVF0  EQU   UCMSAVE0+20
UCMSVE0  EQU   UCMSAVE0+16
UCMSVD0  EQU   UCMSAVE0+12
UCMSVC0  EQU   UCMSAVE0+8
UCMSVB0  EQU   UCMSAVE0+4
UCMSVA0  EQU   UCMSAVE0
UCM2PAD  EQU   UCM2EXT+12
UCM2STAA EQU   UCM2STA+1
UCMRV008 EQU   UCM2SFLG
UCMRSV34 EQU   UCM2SFLG
UCMRSV33 EQU   UCM2SFLG
UCMRSV32 EQU   UCM2SFLG
UCM2DSTR EQU   UCM2SFLG
UCM2DTAK EQU   UCM2SFLG
UCM2SENT EQU   UCM2SFLG
UCM2SDWA EQU   UCM2SFLG
UCM2PST  EQU   UCM2EXT+4
UCM2RID  EQU   UCM2EXT+2
UCM2WID  EQU   UCM2EXT
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBRV030 EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00055
UCBHALI  EQU   @NM00055
UCBRSV09 EQU   @NM00055
UCBRSV08 EQU   @NM00055
UCBRSV07 EQU   @NM00055
UCBRSV06 EQU   @NM00055
UCBRSV05 EQU   @NM00055
UCBRSV04 EQU   @NM00055
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBFLB6  EQU   UCBFLB
UCBFLB5  EQU   UCBFLB
UCBFLB4  EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBRSV01 EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00052 EQU   UCB
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBDCBPB EQU   IOBDCBPT+1
IOBRSV44 EQU   IOBFLAG4
IOBRSV43 EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBRSV39 EQU   IOBFLAG4
IOBRSV38 EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSTRTB EQU   IOBSTART+1
IOBSIOCC EQU   IOBSTART
IOBSTBYT EQU   IOBIOCSW+3
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBMSG   EQU   IOBFL3
IOBCNC   EQU   IOBFL3
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBPB EQU   IOBECBPT+1
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBUNREL EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBCMDCH EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
ECBRBA   EQU   ECBCCCNT
@NM00051 EQU   ECBCC
ECBWAITB EQU   ECBCC
DEBXRV40 EQU   DEBXTN+28
DEBXRV39 EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXRV42 EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBRSV19 EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00050 EQU   DEBACS08+12
@NM00049 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00048 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00047 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSV01 EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
DCMACBND EQU   DCMACB+40
DCMAPAD  EQU   DCMACLR+27
DCMATECB EQU   DCMACLR+23
DCMAUTME EQU   DCMATFLG+2
@NM00046 EQU   DCMATRCK
@NM00045 EQU   DCMATRCK
DCMATTSL EQU   DCMATRCK
DCMATTS  EQU   DCMATRCK
@NM00044 EQU   DCMATRCK
@NM00043 EQU   DCMATRCK
DCMATJBL EQU   DCMATRCK
DCMATJOB EQU   DCMATRCK
@NM00042 EQU   DCMADFLG
@NM00041 EQU   DCMADFLG
@NM00040 EQU   DCMADFLG
@NM00039 EQU   DCMADFLG
@NM00038 EQU   DCMADFLG
DCMACSIB EQU   DCMADFLG
DCMAHOLD EQU   DCMADFLG
DCMADD   EQU   DCMADFLG
@NM00037 EQU   DCMAFLG2
@NM00036 EQU   DCMAFLG2
@NM00035 EQU   DCMAFLG2
@NM00034 EQU   DCMAFLG2
DCMAMJFR EQU   DCMAFLG2
DCMARCON EQU   DCMAFLG2
DCMAWCON EQU   DCMAFLG2
DCMALMIN EQU   DCMAFLG2
@NM00033 EQU   DCMAFLG1
@NM00032 EQU   DCMAFLG1
DCMABL   EQU   DCMAFLG1
DCMAFULL EQU   DCMAFLG1
DCMAFRPR EQU   DCMAFLG1
DCMADEND EQU   DCMAFLG1
DCMADISP EQU   DCMAFLG1
@NM00031 EQU   DCMAFLG1
DCMAMT   EQU   DCMACLR+15
DCMATIME EQU   DCMACLR+11
DCMAMIN  EQU   DCMACLR+7
DCMAMJWQ EQU   DCMACLR+3
DCMAFR   EQU   DCMACLR+1
DCMAROW  EQU   DCMACLR
DCMATOP  EQU   DCMACB+8
DCMALN   EQU   DCMACB+6
DCMAGM   EQU   DCMASACB
DCMAUSE  EQU   DCMASACB
DCMAID   EQU   DCMACB+4
DCMACBNX EQU   DCMACB
DCMPLNPR EQU   DCMPACB+2
DCMPLN   EQU   DCMPACB
@NM00030 EQU   DCMTSRT+52
DCMRQDEL EQU   DCMTSRT+48
@NM00029 EQU   DCMTSRT+46
@NM00028 EQU   DCMR3FLG
@NM00027 EQU   DCMR3FLG
DCMRXHMT EQU   DCMR3FLG
DCMR3PKA EQU   DCMR3FLG
DCMRXSCN EQU   DCMR3FLG
DCMCLPR  EQU   DCMR3FLG
DCMKVIP  EQU   DCMR3FLG
DCMSTSWT EQU   DCMR3FLG
@NM00026 EQU   DCMR2FLG
DCMRXTIM EQU   DCMR2FLG
@NM00025 EQU   DCMR2FLG
DCMRXDEL EQU   DCMR2FLG
DCMRXRLL EQU   DCMR2FLG
DCMRXTMR EQU   DCMR2FLG
DCMRXUNV EQU   DCMR2FLG
DCMRXSFL EQU   DCMR2FLG
DCMTMCTR EQU   DCMTSRT+42
DCMINTVL EQU   DCMTSRT+40
DCMADPFK EQU   DCMTSRT+36
DCMSUBAD EQU   DCMTSRT+32
DCMDOMKY EQU   DCMTSRT+30
DCMRMSAL EQU   DCMTSRT+28
DCMWLAST EQU   DCMTSRT+24
DCMADRMS EQU   DCMTSRT+21
DCMRMS   EQU   DCMTSRT+20
DCMADSDS EQU   DCMTSRT+16
@NM00024 EQU   DCMDEVTY
@NM00023 EQU   DCMDEVTY
@NM00022 EQU   DCMDEVTY
@NM00021 EQU   DCMDEVTY
@NM00020 EQU   DCMDEVTY
@NM00019 EQU   DCMDEVTY
DCMTY50  EQU   DCMDEVTY
DCMTY60  EQU   DCMDEVTY
@NM00018 EQU   @NM00010
@NM00017 EQU   @NM00010
@NM00016 EQU   @NM00010
@NM00015 EQU   @NM00010
@NM00014 EQU   @NM00010
@NM00013 EQU   @NM00010
@NM00012 EQU   @NM00010
@NM00011 EQU   @NM00010
DCMTOPDS EQU   DCMTSRT+13
DCMTOPAR EQU   DCMTSRT+12
DCMADKP  EQU   DCMTSRT+8
DCMLEN   EQU   DCMTSRT+6
@NM00009 EQU   DCMRFLGS
@NM00008 EQU   DCMRFLGS
@NM00007 EQU   DCMRFLGS
DCMDOM   EQU   DCMRFLGS
@NM00006 EQU   DCMRFLGS
@NM00005 EQU   DCMRFLGS
@NM00004 EQU   DCMRFLGS
@NM00003 EQU   DCMTSRT+4
DCMADTRN EQU   DCMTSRT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTRSVA1 EQU   CVTXTNT2+48
CVTRSVA0 EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTRSV90
CVTRSV9G EQU   CVTRSV90
CVTRSV9F EQU   CVTRSV90
CVTRSV9E EQU   CVTRSV90
CVTRSV9D EQU   CVTRSV90
CVTRSV9C EQU   CVTRSV90
CVTRSV9B EQU   CVTRSV90
CVTRSV9A EQU   CVTRSV90
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTRV484 EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTRV319 EQU   CVTUSR
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00338 EQU   NPMPKLP
@RT00373 EQU   NPMWTORG
@RT00375 EQU   NPMWEXIT
@RT00378 EQU   WTOLOOP
@RT00381 EQU   LVL1LM
@RT00416 EQU   CALLSWT
@RC00456 EQU   @RC00454
@RT00461 EQU   LVL1RSTR
@RT00513 EQU   NPMW2UNE
@RF00513 EQU   SETEOB
@RT00517 EQU   NPMW2CNE
@RF00517 EQU   SETEOB
@RT00520 EQU   NPMW2GPH
@RT00527 EQU   NPMGRCK
@RT00558 EQU   NPMRESET
@RF00558 EQU   NPMUCMWT
@RT00562 EQU   NPMRESET
@RT00566 EQU   NPMRESET
@RF00566 EQU   NPMUCMWT
@RT00570 EQU   NPMRESET
@RF00570 EQU   NPMUCMWT
@RT00575 EQU   NPMW2IRF
@RT00577 EQU   SETEOB
@RF00577 EQU   NPMW2UNE
@RT00591 EQU   NPMW2IRF
@RF00606 EQU   NPMW2IRF
@RT00611 EQU   SETEOB
@RT00617 EQU   NPMW2BM
@RT00684 EQU   NPMHCRSR
@RT00686 EQU   NPMHCRSR
@RT00757 EQU   NPMXCPCE
@RT00786 EQU   NPMXCPRS
@RT00810 EQU   NPMICCK
@RT00812 EQU   NPMICRR
@RT00814 EQU   NPMICRR
@RT00816 EQU   NPMICRR
@RT00826 EQU   NPMICRR
@RT00828 EQU   NPMICRR
@RT00831 EQU   NPMICRS
@RT00838 EQU   NPMICRR
@RT00842 EQU   NPMICRR
@RT00844 EQU   NPMOASC
@RT00847 EQU   NPMICRR
@RT00855 EQU   NPMICRR
@RT00859 EQU   NPMICRR
@RT00861 EQU   NPMOCSC
@RT00865 EQU   NPMICRR
@RT00939 EQU   NPMNXSCT
@RF00943 EQU   NPMCOMBL
@RT01098 EQU   NPMBLKMG
@RT01100 EQU   NPMSCT0
@RT01120 EQU   NPMNXTLN
@PB00009 EQU   @EL00001
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEAVNPM2
