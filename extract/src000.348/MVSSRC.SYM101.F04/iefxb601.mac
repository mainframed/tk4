         TITLE 'JOURNAL MERGE ROUTINE                                  *
                        '
IEFXB601 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFXB601  78.059'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  LA    @09,4095(,@11)                                      0001
         USING @PSTART,@11                                         0001
         USING @PSTART+4095,@09                                    0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @12,8(,@13)                                         0001
         LR    @13,@12                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*                                                                  0295
*/* THIS IS THE CONTROL PROCEDURE FOR THE JOURNAL MERGE ROUTINE.IT   */
*/* PERFORMS FIELD INITIALIZATION,DETERMINES THE TYPE OF RESTART     */
*/* BEING REQUESTED AND PASSES CONTROL TO THE APPROPRIATE MERGE      */
*/* ROUTINE.UPON RETURN IF AN ERROR HAS BEEN ENCOUNTERED CONTROL IS  */
*/* PASSED TO AN ERROR PROCESSING ROUTINE.IF NO ERROR CONTROL IS     */
*/* PASSED TO AN ADDRESS UPDATING ROUTINE TO UPDATE ALL CHAIN POINTER*/
*/* FIELDS.THE FINAL ROUTINE TO RECEIVE CONTROL PERFORMS REQUIRED    */
*/* CLEANUP PROCESSING.UPON RETURN FROM CLEANUP JOURNAL MERGE RETURNS*/
*/* TO ITS CALLER WITH A RETURN CODE INDICATING SUCCESS OR FAILURE.  */
*                                                                  0295
*   LASTSCT=LASTSCT&&LASTSCT;       /* ZERO SCT HOLDER               */
         L     @03,LASTSCT                                         0295
         LR    @15,@03                                             0295
         XR    @15,@03                                             0295
         ST    @15,LASTSCT                                         0295
*   SAVESTAT=SAVESTAT&&SAVESTAT;    /* ZERO STATUS HOLDER            */
         XC    SAVESTAT(1),SAVESTAT                                0296
*   CHKPTID=' ';                    /* CHECKID TO BLANKS     @YM07086*/
         MVI   CHKPTID+1,C' '                                      0297
         MVC   CHKPTID+2(14),CHKPTID+1                             0297
         MVI   CHKPTID,C' '                                        0297
*   BEGINRBA=BEGINRBA&&BEGINRBA;    /* INITIALIZE JNL.RBA    @YM07086*/
         XC    BEGINRBA(8),BEGINRBA                                0298
*   ALLOCRBA=ALLOCRBA&&ALLOCRBA;    /* INITIALIZE ALLOC. RBA @YM07086*/
         XC    ALLOCRBA(8),ALLOCRBA                                0299
*   FIRSTJHR=OFFSW;                 /* INITIALIZE JHR SWITCH @YM07086*/
         NI    FIRSTJHR,B'11111101'                                0300
*   BEGINPDS=ZERO;                  /* INITIALIZE PDSNTAB PTR        */
         SLR   @03,@03                                             0301
         ST    @03,BEGINPDS                                        0301
*   FAILSTEP=OFFSW;                 /* INITIALIZE FAILING STEP SW.   */
         NI    FAILSTEP,B'01111111'                                0302
*   RCAREA=ZERO;                    /* INITIALIZE INTERNAL AREA      */
         SLR   RCAREA,RCAREA                                       0303
*   MSGSW=ZERO;                     /* INITIALIZE INTERNAL AREA      */
         ST    @03,MSGSW                                           0304
*   JCTPTR=ZERO;                    /* INITIALIZE JCTPTR     @ZA13822*/
         ST    @03,JCTPTR                                          0305
*   SHRFOUND=OFFSW;                 /* INITIALIZ SHRFOUND    @ZA13822*/
         NI    SHRFOUND,B'01111111'                                0306
*   LCTPTR=MELLCTAD;                /* INITIALIZE LCT POINTER        */
         L     @03,@PC00001                                        0307
         L     LCTPTR,MELLCTAD(,@03)                               0307
*   QMPAPTR=ADDR(QMGR1);            /* INITIALIZE QMPA POINTER       */
         LA    @03,QMGR1(,LCTPTR)                                  0308
         ST    @03,QMPAPTR                                         0308
*   QMPACL=ADDR(MYEPA);             /* MOVE IN ADDRESS OF EPA        */
         LA    @15,MYEPA                                           0309
         STCM  @15,7,QMPACL(@03)                                   0309
*   SAVERBN=QMRBN;                  /* SAVE LAST SWA MNGR RBN USED   */
         L     @03,QMRBN(,@03)                                     0310
         ST    @03,SAVERBN                                         0310
*   JSCBPTR=LCTJSCB;                /* INITIALIZE JSCB POINTER       */
         L     JSCBPTR,LCTJSCB(,LCTPTR)                            0311
*   RESPECIFY                                                      0312
*     IEZJSCB BASED(JSCBPTR);       /* SET NEW JSCB POINTER          */
*   VATPTR=JSCBVATA;                /* INITIALIZE VAT POINTER        */
         L     VATPTR,JSCBVATA(,JSCBPTR)                           0313
*   RPLPTR=JSCBJNLR;                /* POINTER TO JOURNAL RPL        */
         L     RPLPTR,JSCBJNLR(,JSCBPTR)                           0314
*   RESPECIFY                                                      0315
*     IFGRPL BASED(RPLPTR);         /* SET RPL PTR. BASE             */
*   CALL READREC;                   /* READ A RECORD FROM JOURNAL    */
         BAL   @14,READREC                                         0316
*   IF RCAREA=ZERO THEN             /* WAS READ SUCCESSFUL?          */
         LTR   RCAREA,RCAREA                                       0317
         BNZ   @RF00317                                            0317
*     DO;                           /* YES CONTINUE PROCESSING       */
*       SHRFOUND=ON;                /* AN SHR HAS BEEN READ  @ZA13822*/
         OI    SHRFOUND,B'10000000'                                0319
*/* FOR SYSTEM RESTART OR CONTINUE PROCESSING CALL SYSMERGE          */
*                                                                  0320
*       IF(MELRSTRT=SYSRSTRT×MELRSTRT=CONTINUE) THEN               0320
         L     @03,@PC00001                                        0320
         CLI   MELRSTRT(@03),X'08'                                 0320
         BE    @RT00320                                            0320
         CLI   MELRSTRT(@03),X'20'                                 0320
         BNE   @RF00320                                            0320
@RT00320 DS    0H                                                  0321
*         CALL SYSMERGE;                                           0321
         BAL   @14,SYSMERGE                                        0321
*       ELSE                        /* RESTART IS STEP OR CKPT       */
*         DO WHILE(RCAREA=ZERO&JNLID=ISJEID);/* CHK.STEP HEADER    0322
*                                      RECORD                        */
         B     @RC00320                                            0322
@RF00320 B     @DE00322                                            0322
@DL00322 DS    0H                                                  0323
*           IF SHRSNUMB=MELSCTNO THEN/* IS THIS THE FAILING STEP?    */
         LA    @03,JNLBLK                                          0323
         L     @15,@PC00001                                        0323
         SLR   @14,@14                                             0323
         ICM   @14,3,SHRSNUMB(@03)                                 0323
         CH    @14,MELSCTNO(,@15)                                  0323
         BNE   @RF00323                                            0323
*             DO;                                                  0324
*               RBAJOURN=SHRJRBA;   /* SAVE JOURNAL RBA              */
         MVC   RBAJOURN(8),SHRJRBA(@03)                            0325
*               RBASMSG=SHRMRBA;    /* SAVE SYSTEM MESSAGE RBA       */
         MVC   RBASMSG(8),SHRMRBA(@03)                             0326
*               FAILSTEP=ON;        /* FAILING STEP HAS BEEN FOUND   */
         OI    FAILSTEP,B'10000000'                                0327
*               IF MELRSTRT=AUTOSTEP THEN                          0328
         CLI   MELRSTRT(@15),X'80'                                 0328
         BNE   @RF00328                                            0328
*                 CALL STEPMRGE;    /* MERGE FAILING STEP            */
         BAL   @14,STEPMRGE                                        0329
*               ELSE                                               0330
*                 IF MELRSTRT=AUTOCKPT THEN/* IF AUTO CKPT RESTART 0330
*                                      MERGE                         */
         B     @RC00328                                            0330
@RF00328 L     @03,@PC00001                                        0330
         CLI   MELRSTRT(@03),X'40'                                 0330
         BNE   @RF00330                                            0330
*                   CALL CKPTMRGE;  /* FAILING STEP                  */
         BAL   @14,CKPTMRGE                                        0331
*             END;                                                 0332
*           ELSE                    /* AUTO RESTART BUT NOT          */
*             CALL SYSMERGE;        /* FAILING STEP                  */
         B     @RC00323                                            0333
@RF00323 BAL   @14,SYSMERGE                                        0333
*         END;                                                     0334
@RC00323 DS    0H                                                  0334
@DE00322 LTR   RCAREA,RCAREA                                       0334
         BNZ   @DC00322                                            0334
         CLI   JNLID,X'C0'                                         0334
         BE    @DL00322                                            0334
@DC00322 DS    0H                                                  0335
*     END;                                                         0335
*                                                                  0335
@RC00320 DS    0H                                                  0336
*/* FOR AN AUTOMATIC RESTART IF THE FAILING STEP IS NOT FOUND ON THE */
*/* JOURNAL,THIS IS AN ERROR CONDITION.AN ERROR CODE IS SET AND A    */
*/* MESSAGE IS WRITTEN.                                              */
*                                                                  0336
*   IF((MELRSTRT=AUTOSTEP×MELRSTRT=AUTOCKPT)&RCAREA=ENDFILE) THEN  0336
@RF00317 L     @07,@PC00001                                        0336
         CLI   MELRSTRT(@07),X'80'                                 0336
         BE    @GL00003                                            0336
         CLI   MELRSTRT(@07),X'40'                                 0336
         BNE   @RF00336                                            0336
@GL00003 C     RCAREA,@CF02600                                     0336
         BNE   @RF00336                                            0336
*     IF FAILSTEP=OFFSW THEN                                       0337
         TM    FAILSTEP,B'10000000'                                0337
         BNZ   @RF00337                                            0337
*       RCAREA=SWAERR;                                             0338
         LA    RCAREA,8                                            0338
*   IF(RCAREA^=ZERO&RCAREA^=ENDFILE) THEN/* IF ERROR IN MERGING WRITE*/
@RF00337 DS    0H                                                  0339
@RF00336 LTR   RCAREA,RCAREA                                       0339
         BZ    @RF00339                                            0339
         C     RCAREA,@CF02600                                     0339
         BE    @RF00339                                            0339
*     CALL ERRPROC;                 /* OUT ERROR MESSAGE             */
         BAL   @14,ERRPROC                                         0340
*   ELSE                            /* IF NO ERROR IN THE MERGE      */
*     IF(RCAREA=ENDFILE&JCTPTR=ZERO) THEN/* JNL JCT READ?    @ZA13822*/
         B     @RC00339                                            0341
@RF00339 C     RCAREA,@CF02600                                     0341
         BNE   @RF00341                                            0341
         L     @07,JCTPTR                                          0341
         LTR   @07,@07                                             0341
         BNZ   @RF00341                                            0341
*       DO;                         /* NO JNL JCT PROCESSING @ZA13822*/
*         JCTPTR=LCTJCTAD;          /* INITIALIZE FOR CLEANUP      0343
*                                                            @ZA13822*/
         L     @10,LCTJCTAD(,LCTPTR)                               0343
         ST    @10,JCTPTR                                          0343
*         IF SHRFOUND=OFFSW×        /* FIRST JHR ONLY        @ZA13822*/
*             SHRSNUMB=ONE THEN     /* LAST SHR FOR STEP ONE @ZA13822*/
         TM    SHRFOUND,B'10000000'                                0344
         BZ    @RT00344                                            0344
         LA    @10,JNLBLK                                          0344
         CLC   SHRSNUMB(2,@10),@CH00085                            0344
         BNE   @RF00344                                            0344
@RT00344 DS    0H                                                  0345
*           DO;                     /* YES, PROCESS AS NEW JOB     0345
*                                                            @ZA13822*/
*             RPLRBAR=JSCBFRBA;     /* RESET JNL FOR NEW JOB @ZA13822*/
         MVC   RPLRBAR(8,RPLPTR),JSCBFRBA(JSCBPTR)                 0346
*             RPLARG=ADDR(RPLRBAR); /* ADDRESS OF JNL RBA    @ZA13822*/
         LA    @10,RPLRBAR(,RPLPTR)                                0347
         ST    @10,RPLARG(,RPLPTR)                                 0347
*             RESPECIFY                                            0348
*               R2 RSTD;            /* RESTRICT R2 FOR POINT @ZA13822*/
*             R2=JSCBJNLR;          /* INIT JNL RPL POINTER  @ZA13822*/
         L     R2,JSCBJNLR(,JSCBPTR)                               0349
*             GEN(POINT RPL=(2));   /* POINT TO JNL BEGIN    @ZA13822*/
         POINT RPL=(2)
*             RESPECIFY                                            0351
*               R2 UNRSTD;          /* RELEASE R2 FROM POINT @ZA13822*/
*             IF RETCODE^=ZERO THEN /* ERROR IN POINT?       @ZA13822*/
         LTR   RETCODE,RETCODE                                     0352
         BZ    @RF00352                                            0352
*               DO;                 /* YES HANDLE POINT ERROR      0353
*                                                            @ZA13822*/
*                 JSCBJNLE=ON;      /* TURN JNL ERROR BIT ON @ZA13822*/
         OI    JSCBJNLE(JSCBPTR),B'00100000'                       0354
*                 RCAREA=JOURNERR;  /* SET JNL ERROR RETCDE  @ZA13822*/
         LA    RCAREA,4                                            0355
*               END;                /* END POINT ERROR PROCESS     0356
*                                                            @ZA13822*/
*             ELSE                  /* NO POINT ERROR CONTINUE     0357
*                                                            @ZA13822*/
*               DO;                 /* MAKE JOB LOOK NEW     @ZA13822*/
         B     @RC00352                                            0357
@RF00352 DS    0H                                                  0358
*                 LCTRFBSM=OFFSW;   /* TURN OFF CALL IEFXB601 SWITCH
*                                      SINCE THIS IS NEW JOB @ZA13822*/
*                 LCTRFBRV=OFFSW;   /* TURN OFF SPECIAL WARMSTART  0359
*                                      PROCESSING BIT        @ZA13822*/
         NI    LCTRFBSM(LCTPTR),B'01011111'                        0359
*                 JSCBFRBA=JSCBFRBA&&JSCBFRBA;/* CLEAR FIELD FOR NEW
*                                      JOB FIRST TIME        @ZA13822*/
         XC    JSCBFRBA(8,JSCBPTR),JSCBFRBA(JSCBPTR)               0360
*                 RCAREA=ZERO;      /* INDICATE NO ERROR     @ZA13822*/
         SLR   RCAREA,RCAREA                                       0361
*               END;                /* END NEW JOB PROC      @ZA13822*/
*           END;                    /* END NEW JOB PROCESSING      0363
*                                                            @ZA13822*/
*         ELSE                      /* OTHER THAN FIRST STEP @ZA13822*/
*           DO;                     /* PROCESS AS JNL ERROR  @ZA13822*/
         B     @RC00344                                            0364
@RF00344 DS    0H                                                  0365
*             JSCBJNLE=ON;          /* SET JNL ERROR BIT ON  @ZA13822*/
         OI    JSCBJNLE(JSCBPTR),B'00100000'                       0365
*             RCAREA=JOURNERR;      /* SET JNL ERROR RETCDE  @ZA13822*/
         LA    RCAREA,4                                            0366
*           END;                    /* END JNL ERROR PROCESS @ZA13822*/
*       END;                        /* END NO JNL JCT PROCESS      0368
*                                                            @ZA13822*/
*     ELSE                          /* JNL JCT HAS BEEN READ @ZA13822*/
*       CALL ADDRUPDT;              /* UPDATE ADDRESSES IN BLOCKS  0369
*                                                            @ZA13822*/
         B     @RC00341                                            0369
@RF00341 BAL   @14,ADDRUPDT                                        0369
*   IF(RCAREA^=ZERO&MSGSW=ZERO) THEN                               0370
@RC00341 DS    0H                                                  0370
@RC00339 SLR   @10,@10                                             0370
         CR    RCAREA,@10                                          0370
         BE    @RF00370                                            0370
         C     @10,MSGSW                                           0370
         BNE   @RF00370                                            0370
*     CALL ERRPROC;                 /* WRITE OUT ERROR MESSAGE       */
         BAL   @14,ERRPROC                                         0371
*   CALL CLEANUP;                   /* PERFORM CLEANUP SERVICES      */
@RF00370 BAL   @14,CLEANUP                                         0372
*   RETURN CODE(RCAREA);            /* RETURN WITH CODE              */
         L     @13,4(,@13)                                         0373
         L     @00,@SIZDATD                                        0373
         LR    @01,@12                                             0373
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@05                                             0373
         L     @14,12(,@13)                                        0373
         LM    @00,@12,20(@13)                                     0373
         BR    @14                                                 0373
*VAMPROC:                                                          0374
*   PROC;                           /* PROCESS FOR VAM BLOCKS        */
@EL00001 L     @13,4(,@13)                                         0374
@EF00001 L     @00,@SIZDATD                                        0374
         LR    @01,@12                                             0374
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0374
         BR    @14                                                 0374
VAMPROC  STM   @14,@04,@SA00002                                    0374
         STM   @06,@12,@SA00002+28                                 0374
*/* VAMPROC IS ENTERED WHENEVER A VDSCB OR A DSPCT HEADER IS FOUND   */
*/* ON THE JOURNAL.IT CREATES A PARAMETER LIST DESCRIBING THE CONTROL*/
*/* BLOCK AND THEN PASSES CONTROL TO EITHER THE WI OR VBP MERGE      */
*/* ROUTINE.UPON RETURN IF THIS IS THE FIRST MERGE OF THE BLOCK IT   */
*/* CREATES AN ENTRY IN THE VAT.IF AN ERROR WAS ENCOUNTERED IN THE   */
*/* MERGE PROCESS A SWA ERROR INDICATION IS SET PRIOR TO RETURN.     */
*                                                                  0375
*   IF JNLRBN>SAVERBN THEN          /* SAVE RBN IF HIGHER@YM08147    */
         L     @10,JNLRBN                                          0375
         C     @10,SAVERBN                                         0375
         BNH   @RF00375                                            0375
*     SAVERBN=JNLRBN;               /* THAN CURRENT RBN      @YM08147*/
         ST    @10,SAVERBN                                         0376
*   VAMBLKAD=ADDR(JNLBLK);          /* ADDRESS OF CONTROL BLOCK      */
@RF00375 LA    @10,JNLBLK                                          0377
         ST    @10,VAMBLKAD                                        0377
*   VAMBLKID=JNLID;                 /* ID OF CONTROL BLOCK           */
         MVC   VAMBLKID(1),JNLID                                   0378
*   VAMLNGTH=JNLLNGTH;              /* LENGTH OF CONTROL BLOCK       */
         MVC   VAMLNGTH(3),JNLLNGTH                                0379
*   VAMRBN=JNLRBN;                  /* RBN OF CONTROL BLOCK          */
         L     @10,JNLRBN                                          0380
         ST    @10,VAMRBN                                          0380
*   VAMNVA=VATNVA(BLKENTRY);                                       0381
         LR    @10,BLKENTRY                                        0381
         MH    @10,@CH02079                                        0381
         ALR   @10,VATPTR                                          0381
         ICM   @08,15,VATNVA-14(@10)                               0381
         ST    @08,VAMNVA                                          0381
*   VAMGETAD=ZERO;                  /* ZERO GETMAIN ADDRESS FIELD    */
         SLR   @10,@10                                             0382
         ST    @10,VAMGETAD                                        0382
*   IF JNLID=VDSCBID THEN           /* IF VDSCB CALL WI MERGE        */
         CLI   JNLID,X'FC'                                         0383
         BNE   @RF00383                                            0383
*     CALL IDDWIMRG(MRGEPARM);                                     0384
         LA    @10,MRGEPARM                                        0384
         ST    @10,@AL00001                                        0384
         L     @15,@CV02872                                        0384
         LA    @01,@AL00001                                        0384
         BALR  @14,@15                                             0384
*   ELSE                                                           0385
*     CALL IDAVBPJ2(MRGEPARM);      /* DSPCT HEADER CALL VBP MERGE   */
         B     @RC00383                                            0385
@RF00383 LA    @10,MRGEPARM                                        0385
         ST    @10,@AL00001                                        0385
         L     @15,@CV02873                                        0385
         LA    @01,@AL00001                                        0385
         BALR  @14,@15                                             0385
*   IF RETCODE^=ZERO THEN           /* ERROR DURING MERGE PROCESS    */
@RC00383 LTR   RETCODE,RETCODE                                     0386
         BZ    @RF00386                                            0386
*     DO;                                                          0387
*       RCAREA=SWAERR;              /* SET ERROR CODE                */
         LA    RCAREA,8                                            0388
*       PUTENTRY=OFFSW;             /* TERMINATE LOOP                */
         NI    PUTENTRY,B'10111111'                                0389
*     END;                                                         0390
*   IF(VAMGETAD^=ZERO&RCAREA=ZERO) THEN/* DO ONLY IF NO ERROR        */
@RF00386 L     @10,VAMGETAD                                        0391
         SLR   @08,@08                                             0391
         CR    @10,@08                                             0391
         BE    @RF00391                                            0391
         CR    RCAREA,@08                                          0391
         BNE   @RF00391                                            0391
*     DO;                                                          0392
*       VATOVA(BLKENTRY)=JNLVA;     /* FILL IN OLD VIRTUAL ADDRESS   */
         LR    @08,BLKENTRY                                        0393
         MH    @08,@CH02079                                        0393
         L     @06,JNLVA-1                                         0393
         LA    @06,0(,@06)                                         0393
         ST    @08,@TF00001                                        0393
         ALR   @08,VATPTR                                          0393
         STCM  @06,15,VATOVA-14(@08)                               0393
*       VATNVA(BLKENTRY)=VAMGETAD;  /* ADDRESS RETURNED BY MERGE     */
         LR    @08,VATPTR                                          0394
         AL    @08,@TF00001                                        0394
         STCM  @10,15,VATNVA-14(@08)                               0394
*       VATRBN(BLKENTRY)=JNLRBN;    /* FILL IN RBN IN VAT ENTRY      */
         L     @10,JNLRBN                                          0395
         LR    @08,VATPTR                                          0395
         AL    @08,@TF00001                                        0395
         BCTR  @08,0                                               0395
         BCTR  @08,0                                               0395
         STCM  @10,15,VATRBN-12(@08)                               0395
*       VATBLKID(BLKENTRY)=JNLID;   /* FILL IN BLOCK ID IN VAT       */
         LR    @10,VATPTR                                          0396
         AL    @10,@TF00001                                        0396
         MVC   VATBLKID-14(1,@10),JNLID                            0396
*       IF JNLID=DSPCTHID THEN      /* IS THIS A DSPCT HEADER?       */
         CLI   JNLID,X'FE'                                         0397
         BNE   @RF00397                                            0397
*         VATNUPDT(BLKENTRY)=ON;    /* NO NEED TO UPDATE BLOCK       */
         LR    @10,VATPTR                                          0398
         AL    @10,@TF00001                                        0398
         OI    VATNUPDT-14(@10),B'10000000'                        0398
*       PUTENTRY=OFFSW;             /* TERMINATE LOOP                */
@RF00397 DS    0H                                                  0400
*       ENTMADE=ON;                 /* ENTRY MADE IN VAT             */
         OI    ENTMADE,B'00100000'                                 0400
         NI    PUTENTRY,B'10111111'                                0400
*     END;                                                         0401
*   END VAMPROC;                                                   0402
@EL00002 DS    0H                                                  0402
@EF00002 DS    0H                                                  0402
@ER00002 LM    @14,@04,@SA00002                                    0402
         LM    @06,@12,@SA00002+28                                 0402
         BR    @14                                                 0402
*SYSMERGE:                                                         0403
*   PROC;                           /* SYSTEM RESTART MERGE          */
SYSMERGE STM   @14,@01,@SA00003                                    0403
         STM   @03,@04,@SA00003+16                                 0403
         ST    @06,@SA00003+24                                     0403
         STM   @08,@09,@SA00003+28                                 0403
         STM   @11,@12,@SA00003+36                                 0403
*/* SYSMERGE IS ENTERED TO PERFORM CONTROL BLOCK MERGING FOR SYSTEM  */
*/* RESTARTS,CONTINUE RESTARTS,OR FOR NON-FAILING STEP MERGES FOR    */
*/* AUTO. STEP OR AUTO. CHECKPOINT RESTARTS.IT PASSES CONTROL TO     */
*/* READREC TO READ A RECORD FROM THE JOURNAL.UPON SUCCESSFUL RETURN */
*/* IT PASSES CONTROL TO VATPUT TO PLACE THE BLOCKS ENTRY IN THE VAT.*/
*/* UPON SUCCESSFUL RETURN IT PASSES CONTROL TO READLOC TO DETERMINE */
*/* THE ACTUAL LOCATION OF THE BLOCK IN SWA. UPON SUCCESSFUL RETURN  */
*/* IT SCANS A TABLE OF TEMPLATES TO DETERMINES THE FIELDS THAT MUST */
*/* BE MERGED AND THEN PASSES CONTROL TO FLDMERGE TO PERFORM ACTUAL  */
*/* FIELD MERGING.                                                   */
*/*                                                                  */
*/* ANY ERROR ENCOUNTERED BY SYSMERGE OR ANY OF ITS CALLED ROUTINES  */
*/* WILL CAUSE THE RESTART TO BE TERMINATED AND AN ERROR INDICATION  */
*/* SENT BACK TO THE MAIN PROCEDURE IDENTIFYING THE TYPE OF ERROR    */
*/* READ RECORDS UNTIL END OF FILE OR ERROR OCCURS,OR A STEP HEADER  */
*/* RECORD IS ENCOUNTERED FOR AN AUTOMATIC RESTART.                  */
*                                                                  0404
*   DO WHILE(RCAREA=ZERO&(FAILSTEP=OFFSW×JNLID^=ISJEID));          0404
         B     @DE00404                                            0404
@DL00404 DS    0H                                                  0405
*     CALL READREC;                 /* READ A RECORD FROM JOURNAL    */
         BAL   @14,READREC                                         0405
*     IF(RCAREA=ZERO&JNLID^=ISJEID) THEN/* MERGE CONTROL BLOCKS      */
         LTR   RCAREA,RCAREA                                       0406
         BNZ   @RF00406                                            0406
         CLI   JNLID,X'C0'                                         0406
         BE    @RF00406                                            0406
*       DO;                                                        0407
*         CALL VATPUT;              /* PUT ENTRY IN THE VAT          */
         BAL   @14,VATPUT                                          0408
*         IF(RCAREA=ZERO&ENTMADE=ON&JNLID^=VDSCBID&JNLID^=DSPCTHID)
*           THEN                                                   0409
         LTR   RCAREA,RCAREA                                       0409
         BNZ   @RF00409                                            0409
         TM    ENTMADE,B'00100000'                                 0409
         BNO   @RF00409                                            0409
         CLI   JNLID,X'FC'                                         0409
         BE    @RF00409                                            0409
         CLI   JNLID,X'FE'                                         0409
         BE    @RF00409                                            0409
*           DO;                                                    0410
*             CALL READLOC;         /* ISSUE READ LOCATE FOR BLK.    */
         BAL   @14,READLOC                                         0411
*/* DEPENDING UPON TYPE OF BLOCK RETURNED BY THE READ SELECT THE     */
*/* PROPER TEMPLATE TO PERFORM FIELD MERGING.                        */
*                                                                  0412
*             IF SWBLKID=ISIOTID THEN/* IS THIS A SIOT               */
         L     @06,SWEPAPTR                                        0412
         CLI   SWBLKID(@06),X'03'                                  0412
         BNE   @RF00412                                            0412
*               IF VATDYNAM(BLKENTRY)=ON THEN/* IS THIS A DYNAMIC  0413
*                                      SIOT                          */
         LR    @06,BLKENTRY                                        0413
         MH    @06,@CH02079                                        0413
         ALR   @06,VATPTR                                          0413
         TM    VATDYNAM-14(@06),B'01000000'                        0413
         BNO   @RF00413                                            0413
*                 UPDTID=IDSIOTID;  /* YES CHANGE ID FOR UPDATE      */
         MVI   UPDTID,X'FF'                                        0414
*               ELSE                                               0415
*                 UPDTID=SWBLKID;   /* USE ID RETURNED BY READ       */
         B     @RC00413                                            0415
@RF00413 L     @06,SWEPAPTR                                        0415
         MVC   UPDTID(1),SWBLKID(@06)                              0415
*             ELSE                                                 0416
*               UPDTID=SWBLKID;     /* USE ID RETURNED BY READ       */
         B     @RC00412                                            0416
@RF00412 L     @06,SWEPAPTR                                        0416
         MVC   UPDTID(1),SWBLKID(@06)                              0416
*             TEMPPTR=ZERO;         /* ZERO THE TEMPLATE POINTER     */
@RC00412 SLR   TEMPPTR,TEMPPTR                                     0417
*/*      FOR AUTO STEP OR AUTO CKPT RESTART JCT MUST BE MERGED       */
*/*      DIFFERENTLY THEN FOR SYSTEM RESTART.                        */
*                                                                  0418
*             IF(UPDTID=IJCTID&(MELRSTRT=AUTOSTEP×MELRSTRT=AUTOCKPT))
*               THEN                                               0418
         CLI   UPDTID,X'00'                                        0418
         BNE   @RF00418                                            0418
         L     @03,@PC00001                                        0418
         CLI   MELRSTRT(@03),X'80'                                 0418
         BE    @RT00418                                            0418
         CLI   MELRSTRT(@03),X'40'                                 0418
         BNE   @RF00418                                            0418
@RT00418 DS    0H                                                  0419
*               DO;                                                0419
*                 IF MELRSTRT=AUTOSTEP THEN/* IS THIS AUTO STEP    0420
*                                      RESTART                       */
         L     @06,@PC00001                                        0420
         CLI   MELRSTRT(@06),X'80'                                 0420
         BNE   @RF00420                                            0420
*                   DO;                                            0421
*                     TEMPPTR=ADDR(JCTFST);/* ADDRESS OF JCT TEMPLATE*/
         LA    TEMPPTR,JCTFST                                      0422
*                     ENTREE=DIM(JCTFST);/* NUMBER OF ENTREES TO   0423
*                                      MERGE                         */
         MVC   ENTREE(4),@CF00058                                  0423
*                   END;                                           0424
*                 ELSE                                             0425
*                   DO;             /* THIS IS AUTO CKPT.            */
         B     @RC00420                                            0425
@RF00420 DS    0H                                                  0426
*                     TEMPPTR=ADDR(JCTFCR);/* ADDRESS OF JCT TEMPLATE*/
         LA    TEMPPTR,JCTFCR                                      0426
*                     ENTREE=DIM(JCTFCR);/* NUMBER OF ENTREES TO   0427
*                                      MERGE                         */
         MVC   ENTREE(4),@CF02079                                  0427
*                   END;                                           0428
*                 JNLBLKAD=ADDR(JNLBLK);/* ADDRESS OF JOURNAL BLOCK  */
@RC00420 LA    JNLBLKAD,JNLBLK                                     0429
*                 JCTPDIP=JNLBLKAD->JCTPDIP;/* RESTORE PDI POINTER   */
         L     @15,JCTPTR                                          0430
         MVC   JCTPDIP(3,@15),JCTPDIP(JNLBLKAD)                    0430
*                 JCTGDGNT=JNLBLKAD->JCTGDGNT;/* RESTORE GDG NAME  0431
*                                      TBL.PTR                       */
         MVC   JCTGDGNT(3,@15),JCTGDGNT(JNLBLKAD)                  0431
*               END;                                               0432
*             ELSE                                                 0433
*                                                                  0433
*/* SCAN TABLE OF TEMPLATES UNTIL A MATCH IS FOUND                   */
*                                                                  0433
*               DO TEMPNO=ONE TO DIM(TEMPSRFM) WHILE(TEMPPTR=ZERO);
         B     @RC00418                                            0433
@RF00418 LA    TEMPNO,1                                            0433
@DL00433 LTR   TEMPPTR,TEMPPTR                                     0433
         BNZ   @DC00433                                            0433
*                 IF TEMPSRID(TEMPNO)=UPDTID THEN/* DO THE ID'S    0434
*                                      MATCH?                        */
         LR    @15,TEMPNO                                          0434
         MH    @15,@CH00769                                        0434
         LA    @14,TEMPSRID-5(@15)                                 0434
         CLC   0(1,@14),UPDTID                                     0434
         BNE   @RF00434                                            0434
*                   DO;                                            0435
*                     TEMPPTR=TEMPSRAD(TEMPNO);/* TEMPLATE ADDRESS   */
         L     TEMPPTR,TEMPSRAD-6(@15)                             0436
         LA    TEMPPTR,0(,TEMPPTR)                                 0436
*                     ENTREE=TEMPSRNO(TEMPNO);/* NO. OF FIELDS TO  0437
*                                      UPDATE                        */
         SLR   @14,@14                                             0437
         IC    @14,TEMPSRNO-5(@15)                                 0437
         ST    @14,ENTREE                                          0437
*                   END;                                           0438
*               END;                                               0439
@RF00434 AL    TEMPNO,@CF00085                                     0439
         C     TEMPNO,@CF00033                                     0439
         BNH   @DL00433                                            0439
@DC00433 DS    0H                                                  0440
*             IF TEMPPTR=ZERO THEN  /* TEMPLATE MATCH NOT FOUND      */
@RC00418 LTR   TEMPPTR,TEMPPTR                                     0440
         BNZ   @RF00440                                            0440
*               RCAREA=SWAERR;      /* SET ERROR CODE                */
         LA    RCAREA,8                                            0441
*             ELSE                                                 0442
*               CALL FLDMERGE;      /* MERGE REQUIRED FIELDS         */
         B     @RC00440                                            0442
@RF00440 BAL   @14,FLDMERGE                                        0442
*             IF UPDTID=ISIOTID THEN/* IS THIS A SIOT?       @YM06109*/
@RC00440 CLI   UPDTID,X'03'                                        0443
         BNE   @RF00443                                            0443
*               SIOTDSPD=ON;        /* TURN ON DISP.PROCESSED        */
         L     @06,SIOTPTR                                         0444
         OI    SIOTDSPD(@06),B'01000000'                           0444
*             IF(UPDTID=IJCTID&MELRSTRT=SYSRSTRT&INALLOC=ON) THEN  0445
@RF00443 CLI   UPDTID,X'00'                                        0445
         BNE   @RF00445                                            0445
         L     @06,@PC00001                                        0445
         CLI   MELRSTRT(@06),X'08'                                 0445
         BNE   @RF00445                                            0445
         TM    INALLOC,B'00000100'                                 0445
         BNO   @RF00445                                            0445
*               JCTVULDP=ZERO;      /* ZERO VUT POINTER              */
         L     @06,JCTPTR                                          0446
         SLR   @03,@03                                             0446
         STCM  @03,7,JCTVULDP(@06)                                 0446
*             IF(MELRSTRT=AUTOCKPT&UPDTID=IJCTID) THEN/* IS THIS A 0447
*                                      JCT?                          */
@RF00445 L     @06,@PC00001                                        0447
         CLI   MELRSTRT(@06),X'40'                                 0447
         BNE   @RF00447                                            0447
         CLI   UPDTID,X'00'                                        0447
         BNE   @RF00447                                            0447
*               CHKPTID=JCTCKIDT;   /* SAVE CHECKPOINT ID.@YM07086   */
         L     @06,JCTPTR                                          0448
         MVC   CHKPTID(16),JCTCKIDT(@06)                           0448
*           END;                                                   0449
*       END;                                                       0450
*     ELSE                          /* THIS IS A STEP HEADER RCD.    */
*       IF MELSCTNO=SHRSNUMB THEN   /* IS IT FOR FAILING STEP?       */
         B     @RC00406                                            0451
@RF00406 L     @06,@PC00001                                        0451
         LA    @03,JNLBLK                                          0451
         LH    @06,MELSCTNO(,@06)                                  0451
         SLR   @15,@15                                             0451
         ICM   @15,3,SHRSNUMB(@03)                                 0451
         CR    @06,@15                                             0451
         BNE   @RF00451                                            0451
*         FAILSTEP=ON;              /* FAILING STEP FOUND            */
         OI    FAILSTEP,B'10000000'                                0452
*   END;                                                           0453
@RF00451 DS    0H                                                  0453
@RC00406 DS    0H                                                  0453
@DE00404 LTR   RCAREA,RCAREA                                       0453
         BNZ   @DC00404                                            0453
         TM    FAILSTEP,B'10000000'                                0453
         BZ    @DL00404                                            0453
         CLI   JNLID,X'C0'                                         0453
         BNE   @DL00404                                            0453
@DC00404 DS    0H                                                  0454
*   END SYSMERGE;                                                  0454
@EL00003 DS    0H                                                  0454
@EF00003 DS    0H                                                  0454
@ER00003 LM    @14,@01,@SA00003                                    0454
         LM    @03,@04,@SA00003+16                                 0454
         L     @06,@SA00003+24                                     0454
         LM    @08,@09,@SA00003+28                                 0454
         LM    @11,@12,@SA00003+36                                 0454
         BR    @14                                                 0454
*READLOC:                                                          0455
*   PROC;                           /* PERFORMS READ LOCATE ON BLK   */
READLOC  STM   @14,@09,@SA00004                                    0455
         STM   @11,@12,@SA00004+48                                 0455
*/* READLOC IS ENTERED WHENEVER THE LOCATION OF A CONTROL BLOCK IN   */
*/* SWA IS REQUIRED. THE ROUTINE USES THE SWA MANAGER READ LOCATE    */
*/* FUNCTION TO DETERMINE THE CONTROL BLOCKS LOCATION AND RETURNS    */
*/* THE ADDRESS TO THE CALLER.                                       */
*                                                                  0456
*   SWEPAPTR=ADDR(LOCEPA);          /* INITIALIZE EPA POINTER        */
         LA    @08,LOCEPA                                          0456
         ST    @08,SWEPAPTR                                        0456
*   SWVA=VATRNVA(BLKENTRY);         /* FILL IN SWA ADDRESS IN EPA    */
         LR    @06,BLKENTRY                                        0457
         MH    @06,@CH02079                                        0457
         ALR   @06,VATPTR                                          0457
         MVC   SWVA(3,@08),VATRNVA-14(@06)                         0457
*   SWCHNPTR=ZERO;                  /* EPA CHAIN POINTER ZEROED      */
*                                                                  0458
         SLR   @06,@06                                             0458
         ST    @06,SWCHNPTR(,@08)                                  0458
*   /*****************************************************************/
*   /*                                                               */
*   /* ?SWAREQ (RL) EPA (SWEPAPTR);                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0459
*   CALL SWAMGR(SWEPAPTR,'RL');     /* ISSUE READ LOCATE             */
         LA    @08,SWEPAPTR                                        0459
         ST    @08,@AL00001                                        0459
         LA    @08,@CC02923                                        0459
         ST    @08,@AL00001+4                                      0459
         L     @08,CVTPTR                                          0459
         L     @08,CVTJESCT(,@08)                                  0459
         L     @15,JESWAA(,@08)                                    0459
         LA    @01,@AL00001                                        0459
         BALR  @14,@15                                             0459
*   SWAPTR=SWBLKPTR;                /* INITIALIZE SWA POINTER        */
         L     @08,SWEPAPTR                                        0460
         L     @06,SWBLKPTR(,@08)                                  0460
         ST    @06,SWAPTR                                          0460
*   IF SWBLKID=IJCTID THEN          /* SAVE ADDRESS OF JCT           */
         CLI   SWBLKID(@08),X'00'                                  0461
         BNE   @RF00461                                            0461
*     JCTPTR=SWBLKPTR;                                             0462
         ST    @06,JCTPTR                                          0462
*   IF SWBLKID=IJFCBID THEN         /* IS THIS A JFCB?       @YM07074*/
@RF00461 L     @08,SWEPAPTR                                        0463
         CLI   SWBLKID(@08),X'1C'                                  0463
         BNE   @RF00463                                            0463
*     JFCBPTR=SWBLKPTR;             /* INITIALIZE JFCB PTR@YM07074   */
         L     JFCBPTR,SWBLKPTR(,@08)                              0464
*   IF SWBLKID=ISCTID THEN          /* IS THIS AN SCT?               */
@RF00463 L     @08,SWEPAPTR                                        0465
         CLI   SWBLKID(@08),X'02'                                  0465
         BNE   @RF00465                                            0465
*     DO;                                                          0466
*       SCTPTR=SWBLKPTR;            /* INITIALIZE PTR.               */
         L     @08,SWBLKPTR(,@08)                                  0467
         ST    @08,SCTPTR                                          0467
*       LASTSCT=VATNVA(BLKENTRY);   /* SAVE SVA                      */
         LR    @08,BLKENTRY                                        0468
         MH    @08,@CH02079                                        0468
         ALR   @08,VATPTR                                          0468
         ICM   @06,15,VATNVA-14(@08)                               0468
         ST    @06,LASTSCT                                         0468
*     END;                                                         0469
*   IF SWBLKID=ISIOTID THEN         /* IS THIS A SIOT?       @YM06109*/
@RF00465 L     @08,SWEPAPTR                                        0470
         CLI   SWBLKID(@08),X'03'                                  0470
         BNE   @RF00470                                            0470
*     SIOTPTR=SWBLKPTR;             /* INITIALIZE SIOT POINTER       */
         L     @08,SWBLKPTR(,@08)                                  0471
         ST    @08,SIOTPTR                                         0471
*   END READLOC;                                                   0472
@EL00004 DS    0H                                                  0472
@EF00004 DS    0H                                                  0472
@ER00004 LM    @14,@09,@SA00004                                    0472
         LM    @11,@12,@SA00004+48                                 0472
         BR    @14                                                 0472
*READREC:                                                          0473
*   PROC;                           /* USED TO READ FROM JOURNAL     */
READREC  STM   @14,@04,@SA00005                                    0473
         STM   @06,@12,@SA00005+28                                 0473
*/* READREC IS ENTERED WHENEVER A CONTROL BLOCK MUST BE READ FROM THE*/
*/* JOURNAL.AFTER INITIALIZING REQUIRED FIELDS IN THE RPL READREC    */
*/* ISSUES THE GET MACRO INSTRUCTION.                                */
*/* ANY ERROR ENCOUNTERED WILL RESULT IN THE JOURNAL ERROR INDICATOR */
*/* BEING SET.                                                       */
*                                                                  0474
*   RECFOUND=OFFSW;                 /* INITIALIZE LOOP CONTROL SW.   */
         NI    RECFOUND,B'11111110'                                0474
*   DO WHILE(RECFOUND=OFFSW);       /* READ UNTIL NON-JHR FOUND      */
         B     @DE00475                                            0475
@DL00475 DS    0H                                                  0476
*     RPLAREA=ADDR(JNLBUF);         /* ADDRESS OF JOURNAL BUFFER     */
         LA    @10,JNLBUF                                          0476
         ST    @10,RPLAREA(,RPLPTR)                                0476
*     RPLBUFL=BUFLNGTH;             /* LENGTH OF JOURNAL BUFFER      */
         MVC   RPLBUFL(4,RPLPTR),@CF02638                          0477
*     RPLSEQ=ON;                    /* SEQUENTIAL ACCESS             */
         OI    RPLSEQ(RPLPTR),B'00100000'                          0478
*     RPLADR=ON;                    /* ACCESS BY ADDRESS             */
         OI    RPLADR(RPLPTR),B'01000000'                          0479
*     RESPECIFY                                                    0480
*       R2 RESTRICTED;              /* RESTRICT REGISTER 2           */
*     R2=JSCBJNLR;                  /* ADDRESS OF JOURNAL RPL        */
         L     R2,JSCBJNLR(,JSCBPTR)                               0481
*     GEN;                                                         0482
        GET   RPL=(R2)                ISSUE GET TO THE JOB JOURNAL
*     IF(RETCODE^=ZERO×(JNLID=JHRID&FIRSTJHR=ON)) THEN/*     @YM07086*/
         LTR   RETCODE,RETCODE                                     0483
         BNZ   @RT00483                                            0483
         CLI   JNLID,X'C1'                                         0483
         BNE   @RF00483                                            0483
         TM    FIRSTJHR,B'00000010'                                0483
         BNO   @RF00483                                            0483
@RT00483 DS    0H                                                  0484
*       DO;                         /* OPERATION CHECK FOR EOF       */
*         RECFOUND=ON;              /* GET OUT OF READ LOOP          */
*                                                                  0485
         OI    RECFOUND,B'00000001'                                0485
*         /***********************************************************/
*         /*                                                         */
*         /* IF RPL INDICATES PHYSICAL END OF FILE OR SECOND JOB HDR */
*         /* RECORD INDICATES LOGICAL END OF FILE THEN STOP READING. */
*         /* IF RPL INDICATES OTHER THAN PHYSICAL END OF FILE,THIS IS*/
*         /* AN ERROR CONDITION.                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0486
*         IF((RPLERRCD=RPLEODER&RETCODE=JOURNEND)×JNLID=JHRID) THEN
         CLI   RPLERRCD(RPLPTR),4                                  0486
         BNE   @GL00023                                            0486
         C     RETCODE,@CF00058                                    0486
         BE    @RT00486                                            0486
@GL00023 CLI   JNLID,X'C1'                                         0486
         BNE   @RF00486                                            0486
@RT00486 DS    0H                                                  0487
*           RCAREA=ENDFILE;         /* STOP READ PROCESS     @YM07086*/
         LA    RCAREA,28                                           0487
*         ELSE                                                     0488
*           RCAREA=JOURNERR;        /* INDICATES ERROR COND.         */
         B     @RC00486                                            0488
@RF00486 LA    RCAREA,4                                            0488
*       END;                                                       0489
*     ELSE                                                         0490
*       DO;                                                        0490
         B     @RC00483                                            0490
@RF00483 DS    0H                                                  0491
*         IF(JNLID=JHRID&FIRSTJHR=OFFSW) THEN/* FIRST JHR?   @YM07086*/
         CLI   JNLID,X'C1'                                         0491
         BNE   @RF00491                                            0491
         TM    FIRSTJHR,B'00000010'                                0491
         BNZ   @RF00491                                            0491
*           DO;                                                    0492
*             FIRSTJHR=ON;          /* FIRST JHR FOUND       @YM07086*/
         OI    FIRSTJHR,B'00000010'                                0493
*             JSCBFRBA=RPLRBAR;     /* SAVE RBA OF FIRST JHR @YM07086*/
         MVC   JSCBFRBA(8,JSCBPTR),RPLRBAR(RPLPTR)                 0494
*             IF JHRJRBA^=BEGINRBA THEN/* PUT OUT AFTER RESTART    0495
*                                                            @YM07086*/
         LA    @10,JNLBLK                                          0495
         CLC   JHRJRBA(8,@10),BEGINRBA                             0495
         BE    @RF00495                                            0495
*               DO;                                                0496
*                 RPLRBAR=JHRJRBA;  /* RBA FOR JNL. POINT    @YM07086*/
         MVC   RPLRBAR(8,RPLPTR),JHRJRBA(@10)                      0497
*                 RPLARG=ADDR(RPLRBAR);/* ADDRESS OF RBA     @YM07086*/
         LA    @10,RPLRBAR(,RPLPTR)                                0498
         ST    @10,RPLARG(,RPLPTR)                                 0498
*                 R2=JSCBJNLR;      /* INITIALIZE RPL POINTER      0499
*                                                            @YM07086*/
         L     R2,JSCBJNLR(,JSCBPTR)                               0499
*                 GEN(POINT RPL=(R2));/* ISSUE POINT         @YM07086*/
         POINT RPL=(R2)
*                 IF RETCODE^=ZERO THEN/* ERROR DURING POINT@YM07086 */
         LTR   RETCODE,RETCODE                                     0501
         BZ    @RF00501                                            0501
*                   DO;                                            0502
*                     JSCBJNLE=ON;  /* TURN ON JOURNAL ERROR BIT   0503
*                                                            @YM07086*/
         OI    JSCBJNLE(JSCBPTR),B'00100000'                       0503
*                     RCAREA=JOURNERR;/* INDICATES JOURNAL ERROR     */
         LA    RCAREA,4                                            0504
*                     RECFOUND=ON;  /* GET OUT OF READ LOOP  @YM07086*/
         OI    RECFOUND,B'00000001'                                0505
*                   END;                                           0506
*                 ALLOCRBA=JHRALRBA;/* RBA OF ALLOCATION BLOCKS    0507
*                                                            @YM07086*/
@RF00501 LA    @10,JNLBLK                                          0507
         MVC   ALLOCRBA(8),JHRALRBA(@10)                           0507
*               END;                                               0508
*           END;                                                   0509
*         ELSE                                                     0510
*           RECFOUND=ON;            /* NON-JHR FOUND         @YM07086*/
         B     @RC00491                                            0510
@RF00491 OI    RECFOUND,B'00000001'                                0510
*         IF JNLID=IJFCBID THEN     /* IS THIS A JFCB?       @YM07074*/
@RC00491 CLI   JNLID,X'1C'                                         0511
         BNE   @RF00511                                            0511
*           OJFCBPTR=ADDR(JNLBLK);  /* INITIALIZE JFCB PTR@YM07074   */
         LA    @10,JNLBLK                                          0512
         ST    @10,OJFCBPTR                                        0512
*         IF(MELRSTRT=SYSRSTRT&JNLID=IJCTID) THEN/* JCT AND SYSTEM 0513
*                                      RESTART                       */
@RF00511 L     @10,@PC00001                                        0513
         CLI   MELRSTRT(@10),X'08'                                 0513
         BNE   @RF00513                                            0513
         CLI   JNLID,X'00'                                         0513
         BNE   @RF00513                                            0513
*           DO;                                                    0514
*             JNLBLKAD=ADDR(JNLBLK);/* SAVE JNL.JCT PTR.             */
         LA    JNLBLKAD,JNLBLK                                     0515
*             SAVESTAT=JNLBLKAD->JCTJSB;/* SAVE JOB STATUS           */
         IC    @10,JCTJSB(,JNLBLKAD)                               0516
         STC   @10,SAVESTAT                                        0516
*           END;                                                   0517
*       END;                                                       0518
@RF00513 DS    0H                                                  0519
*   END;                                                           0519
@RC00483 DS    0H                                                  0519
@DE00475 TM    RECFOUND,B'00000001'                                0519
         BZ    @DL00475                                            0519
*   RESPECIFY                                                      0520
*     R2 UNRESTRICTED;              /* UNRESTRICT REGISTER 2         */
*   END READREC;                    /* END OF READ OPERATION         */
@EL00005 DS    0H                                                  0521
@EF00005 DS    0H                                                  0521
@ER00005 LM    @14,@04,@SA00005                                    0521
         LM    @06,@12,@SA00005+28                                 0521
         BR    @14                                                 0521
*FLDMERGE:                                                         0522
*   PROC;                           /* USED FOR FIELD MERGING        */
FLDMERGE STM   @14,@12,@SA00006                                    0522
*/* FLDMERGE IS A GENERALIZED ROUTINE THAT PERFORMS THE ACTUAL FIELD */
*/* MERGING FROM THE CONTROL BLOCK ON THE JOURNAL TO THE ONE IN SWA. */
*/* IT IS TEMPLATE DRIVEN AND MERGES FIELDS BASED ON THE TEMPLATE    */
*/* STRUCTURE.THE TEMPLATES MAP THE DISPLACEMENTS AND LENGTHS OF ALL */
*/* FIELDS REQUIRING MERGING FOR ALL JOURNALLED CONTROL BLOCKS.      */
*                                                                  0523
*   IF(JNLID=IJFCBID&MELRSTRT^=SYSRSTRT) THEN/* JFCB AND AUTO RESTART*/
         CLI   JNLID,X'1C'                                         0523
         BNE   @RF00523                                            0523
         L     @08,@PC00001                                        0523
         CLI   MELRSTRT(@08),X'08'                                 0523
         BE    @RF00523                                            0523
*     IF JFCTEMP=ON THEN            /* IS THIS A TEMPORARY DS?       */
         TM    JFCTEMP(JFCBPTR),B'00000001'                        0524
         BNO   @RF00524                                            0524
*       IF JFCBDSNM(ONE:FORTY4)^=OJFCBPTR->JFCBDSNM(ONE:FORTY4) THEN
         L     @08,OJFCBPTR                                        0525
         CLC   JFCBDSNM(44,JFCBPTR),JFCBDSNM(@08)                  0525
         BE    @RF00525                                            0525
*         CALL PDSPUT;              /* IF NAMES NE MAKE ENTRY      0526
*                                                            @YM07074*/
         BAL   @14,PDSPUT                                          0526
*   DO NUMBER=ONE TO ENTREE;        /* NUMBER OF FIELDS TO MERGE     */
@RF00525 DS    0H                                                  0527
@RF00524 DS    0H                                                  0527
@RF00523 LA    NUMBER,1                                            0527
         B     @DE00527                                            0527
@DL00527 DS    0H                                                  0528
*     BEGINFLD=FLDDISPL(NUMBER)+ONE;/* BEGINNING BYTE OF FIELD       */
         LR    @08,NUMBER                                          0528
         ALR   @08,@08                                             0528
         LR    @07,TEMPPTR                                         0528
         BCTR  @07,0                                               0528
         SLR   @05,@05                                             0528
         IC    @05,FLDDISPL-1(@08,@07)                             0528
         LA    BEGINFLD,1                                          0528
         ALR   BEGINFLD,@05                                        0528
*     ENDFIELD=FLDDISPL(NUMBER)+FLDLNGTH(NUMBER);/* END BYTE IN FIELD*/
         BCTR  @08,0                                               0529
         BCTR  @08,0                                               0529
         SLR   ENDFIELD,ENDFIELD                                   0529
         IC    ENDFIELD,FLDLNGTH(@08,TEMPPTR)                      0529
         ALR   @05,ENDFIELD                                        0529
         LR    ENDFIELD,@05                                        0529
*     SWAAREA(BEGINFLD:ENDFIELD)=   /* MERGE FIELD FROM JOB          */
*         JNLBLK(BEGINFLD:ENDFIELD);/* JOURNAL BLK. TO SWA           */
         L     @08,SWAPTR                                          0530
         ALR   @08,BEGINFLD                                        0530
         BCTR  @08,0                                               0530
         LR    @07,ENDFIELD                                        0530
         SLR   @07,BEGINFLD                                        0530
         LA    @05,JNLBLK-1(BEGINFLD)                              0530
         EX    @07,@SM02995                                        0530
*   END;                            /* DO ALL REQUIRED FIELDS        */
         AL    NUMBER,@CF00085                                     0531
@DE00527 C     NUMBER,ENTREE                                       0531
         BNH   @DL00527                                            0531
*   END FLDMERGE;                                                  0532
@EL00006 DS    0H                                                  0532
@EF00006 DS    0H                                                  0532
@ER00006 LM    @14,@12,@SA00006                                    0532
         BR    @14                                                 0532
*PTRUPDTE:                                                         0533
*   PROC;                           /* USED FOR PTR. UPDATING        */
PTRUPDTE STM   @14,@04,@SA00007                                    0533
         STM   @06,@09,@SA00007+28                                 0533
         STM   @11,@12,@SA00007+44                                 0533
*/* PTRUPDTE IS A GENERALIZED ROUTINE THAT PERFORMS ACTUAL CHAIN     */
*/* POINTER UPDATING.IT IS TEMPLATE DRIVEN AND BASED ON THE TEMPLATE */
*/* IT ACCESSES THE CONTROL BLOCK IN SWA AND CONSTRUCT A TABLE       */
*/* CONTAINING ALL THE POINTERS REQUIRING UPDATING FOR A PARTICULAR  */
*/* CONTROL BLOCK.IT THEN PASSES CONTROL TO UPDATE AND UPON RETURN   */
*/* HAS A TABLE OF UPDATED POINTERS WHICH ARE REPLACED IN THE CONTROL*/
*/* BLOCK.                                                           */
*                                                                  0534
*   VOLSVA=OFFSW;                   /* TURN OFF FF SVA SWITCH        */
         NI    VOLSVA,B'11101111'                                  0534
*   XCPTR=ADDR(FIELD);              /* ADDRESS OF FIELD TABLE        */
         LA    XCPTR,FIELD                                         0535
*/*      ZERO THE ENTIRE TABLE PRIOR TO INSERTING SVA                */
*                                                                  0536
*   XCAREA(ONE:ENDTAB)=XCAREA(ONE:ENDTAB)&&XCAREA(ONE:ENDTAB);     0536
         XC    XCAREA(228,XCPTR),XCAREA(XCPTR)                     0536
*   XCPTR=ADDR(FIELD1);             /* ADDRESS OF FIELD1 TABLE       */
         LA    XCPTR,FIELD1                                        0537
*/*      ZERO THE ENTIRE TABLE PRIOR TO INSERTING SVA                */
*                                                                  0538
*   XCAREA(ONE:ENDTAB)=XCAREA(ONE:ENDTAB)&&XCAREA(ONE:ENDTAB);     0538
         XC    XCAREA(228,XCPTR),XCAREA(XCPTR)                     0538
*   DO NUMBER=ONE TO ENTREE;        /* NUMBER OF PTRS.TO UPDATE      */
         LA    NUMBER,1                                            0539
         B     @DE00539                                            0539
@DL00539 DS    0H                                                  0540
*     BEGINFLD=FLDDISPL(NUMBER)+ONE;/* BEGINNING BYTE OF PTR.        */
         LR    @07,NUMBER                                          0540
         ALR   @07,@07                                             0540
         LR    @01,TEMPPTR                                         0540
         BCTR  @01,0                                               0540
         SLR   @15,@15                                             0540
         IC    @15,FLDDISPL-1(@07,@01)                             0540
         LA    BEGINFLD,1                                          0540
         ALR   BEGINFLD,@15                                        0540
*     ENDFIELD=FLDDISPL(NUMBER)+FLDLNGTH(NUMBER);/* END BYTE IN PTR. */
         BCTR  @07,0                                               0541
         BCTR  @07,0                                               0541
         SLR   ENDFIELD,ENDFIELD                                   0541
         IC    ENDFIELD,FLDLNGTH(@07,TEMPPTR)                      0541
         ALR   @15,ENDFIELD                                        0541
         LR    ENDFIELD,@15                                        0541
*     FIELD(NUMBER)=SWAAREA(BEGINFLD:ENDFIELD);/* SAVE OLD PTR.      */
         LR    @07,NUMBER                                          0542
         SLA   @07,2                                               0542
         LA    @01,FIELD-4(@07)                                    0542
         MVI   1(@01),C' '                                         0542
         MVC   2(2,@01),1(@01)                                     0542
         LR    @15,ENDFIELD                                        0542
         SLR   @15,BEGINFLD                                        0542
         L     @14,SWAPTR                                          0542
         ALR   @14,BEGINFLD                                        0542
         BCTR  @14,0                                               0542
         EX    @15,@SM02998                                        0542
*     ENDFIELD=ENDFIELD-BEGINFLD;   /* DETERMINE LENGTH OF MOVE      */
         SLR   ENDFIELD,BEGINFLD                                   0543
*     IF ENDFIELD=FTWO THEN         /* IS FIELD THREE BYTES LONG     */
         C     ENDFIELD,@CF00097                                   0544
         BNE   @RF00544                                            0544
*       FIELD(NUMBER,FOUR:FOUR)=ZERO;/* ZERO LAST BYTE IN TABLE      */
         SLR   @04,@04                                             0545
         STC   @04,FIELD-1(@07)                                    0545
*   END;                                                           0546
@RF00544 AL    NUMBER,@CF00085                                     0546
@DE00539 C     NUMBER,ENTREE                                       0546
         BNH   @DL00539                                            0546
*   NUMBER=ENTREE;                  /* RESTORE NUMBER OF PTRS.       */
         L     NUMBER,ENTREE                                       0547
*   IF UPDTID=IJFCBID THEN          /* IS BLOCK A JFCB?              */
         CLI   UPDTID,X'1C'                                        0548
         BNE   @RF00548                                            0548
*     DO;                                                          0549
*       JFCBPTR=SWAPTR;             /* INITIALIZE JFCB POINTER       */
         L     JFCBPTR,SWAPTR                                      0550
*       IF JFCBVOLS(ONE:ONE)=FOXFOX THEN/* IS THERE AN SVA PRESENT   */
         CLI   JFCBVOLS(JFCBPTR),X'FF'                             0551
         BNE   @RF00551                                            0551
*         DO;                                                      0552
*           NUMBER=NUMBER+ONE;      /* INCREMENT NO. OF POINTERS     */
         AL    NUMBER,@CF00085                                     0553
*           FIELD(NUMBER)=JFCBVOLS(TWO:FOUR);/* PLACE OLD SVA IN TBL.*/
         LR    @07,NUMBER                                          0554
         SLA   @07,2                                               0554
         LA    @04,FIELD-4(@07)                                    0554
         MVI   3(@04),C' '                                         0554
         MVC   0(3,@04),JFCBVOLS+1(JFCBPTR)                        0554
*           FIELD(NUMBER,FOUR:FOUR)=ZERO;/* ZERO LAST BYTE IN TABLE  */
         SLR   @04,@04                                             0555
         STC   @04,FIELD-1(@07)                                    0555
*           VOLSVA=ON;              /* JFCBVOLS CONTAINS AN SVA      */
         OI    VOLSVA,B'00010000'                                  0556
*         END;                                                     0557
*     END;                                                         0558
@RF00551 DS    0H                                                  0559
*   IF(UPDTID=IDSIOTID×UPDTID=ISIOTID) THEN/* IS THIS A SIOT?        */
@RF00548 CLI   UPDTID,X'FF'                                        0559
         BE    @RT00559                                            0559
         CLI   UPDTID,X'03'                                        0559
         BNE   @RF00559                                            0559
@RT00559 DS    0H                                                  0560
*     DO;                                                          0560
*       SIOTPTR=SWAPTR;             /* INITIALIZE SIOT PTR.          */
         L     @07,SWAPTR                                          0561
         ST    @07,SIOTPTR                                         0561
*       IF SIOVAMDS=ON THEN         /* IS THE SIOT FOR VAM?          */
         TM    SIOVAMDS(@07),B'00100000'                           0562
         BNO   @RF00562                                            0562
*         DO;                                                      0563
*           NUMBER=NUMBER+ONE;      /* INCREMENT NO. OF POINTERS     */
         AL    NUMBER,@CF00085                                     0564
*           FIELD(NUMBER)=SIOUCBAD; /* UPDATE UCB POINTER            */
         LR    @04,NUMBER                                          0565
         SLA   @04,2                                               0565
         L     @07,SIOUCBAD-1(,@07)                                0565
         LA    @07,0(,@07)                                         0565
         LA    @02,FIELD-4(@04)                                    0565
         STCM  @07,15,0(@02)                                       0565
*         END;                                                     0566
*     END;                                                         0567
@RF00562 DS    0H                                                  0568
*   CALL UPDATE;                    /* UPDATE PTR. FIELDS IN BLOCK   */
@RF00559 BAL   @14,UPDATE                                          0568
*   IF(RCAREA=ZERO&VOLSVA=ON) THEN  /* DID JFCBVOLS CONTAIN SVA      */
         LTR   RCAREA,RCAREA                                       0569
         BNZ   @RF00569                                            0569
         TM    VOLSVA,B'00010000'                                  0569
         BNO   @RF00569                                            0569
*     JFCBVOLS(TWO:FOUR)=FIELD1(ENTREE+ONE);/* UPDATE THE SVA        */
         L     @08,ENTREE                                          0570
         SLA   @08,2                                               0570
         LA    @07,FIELD1(@08)                                     0570
         MVC   JFCBVOLS+1(3,JFCBPTR),0(@07)                        0570
*   IF(RCAREA^=ZERO&(UPDTID=IDSIOTID×UPDTID=ISIOTID)) THEN         0571
@RF00569 LTR   RCAREA,RCAREA                                       0571
         BZ    @RF00571                                            0571
         CLI   UPDTID,X'FF'                                        0571
         BE    @RT00571                                            0571
         CLI   UPDTID,X'03'                                        0571
         BNE   @RF00571                                            0571
@RT00571 DS    0H                                                  0572
*     IF(SIOVAMDS=ON&MELRSTRT^=CONTINUE) THEN/* IS THIS A VAM SIOT   */
         L     @08,SIOTPTR                                         0572
         TM    SIOVAMDS(@08),B'00100000'                           0572
         BNO   @RF00572                                            0572
         L     @08,@PC00001                                        0572
         CLI   MELRSTRT(@08),X'20'                                 0572
         BE    @RF00572                                            0572
*       DO;                                                        0573
*         DO BLKENTRY=ONE TO NUMBER;/* CHECK THE UNMATCHED SVA       */
         LA    BLKENTRY,1                                          0574
         B     @DE00574                                            0574
@DL00574 DS    0H                                                  0575
*           IF FIELD(BLKENTRY)^=ZERO THEN/* INDICATES UNMATCHED SVA  */
         SLR   @08,@08                                             0575
         LR    @04,BLKENTRY                                        0575
         SLA   @04,2                                               0575
         LA    @02,FIELD-4(@04)                                    0575
         ICM   @04,15,0(@02)                                       0575
         CLR   @04,@08                                             0575
         BE    @RF00575                                            0575
*             IF SIOUCBAD=FIELD(BLKENTRY) THEN/* IS IT THE UCB ADDR.?*/
         L     @02,SIOTPTR                                         0576
         L     @15,SIOUCBAD-1(,@02)                                0576
         LA    @15,0(,@15)                                         0576
         CLR   @04,@15                                             0576
         BNE   @RF00576                                            0576
*               DO;                                                0577
*                 SIOUCBAD=ZERO;    /* ZERO UCB ADDRESS FIELD        */
         STCM  @08,7,SIOUCBAD(@02)                                 0578
*                 RCAREA=ZERO;      /* THIS IS RECOVERABLE           */
         SLR   RCAREA,RCAREA                                       0579
*               END;                                               0580
*             ELSE                                                 0581
*               BLKENTRY=NUMBER;    /* UNMATCHED SVA IS NOT UCB      */
         B     @RC00576                                            0581
@RF00576 LR    BLKENTRY,NUMBER                                     0581
*         END;                                                     0582
@RC00576 DS    0H                                                  0582
@RF00575 AL    BLKENTRY,@CF00085                                   0582
@DE00574 CR    BLKENTRY,NUMBER                                     0582
         BNH   @DL00574                                            0582
*       END;                                                       0583
*   IF(RCAREA=ZERO&NUMBER>ENTREE&(UPDTID=IDSIOTID×UPDTID=ISIOTID)) THEN
@RF00572 DS    0H                                                  0584
@RF00571 LTR   RCAREA,RCAREA                                       0584
         BNZ   @RF00584                                            0584
         C     NUMBER,ENTREE                                       0584
         BNH   @RF00584                                            0584
         CLI   UPDTID,X'FF'                                        0584
         BE    @RT00584                                            0584
         CLI   UPDTID,X'03'                                        0584
         BNE   @RF00584                                            0584
@RT00584 DS    0H                                                  0585
*     SIOUCBAD=FIELD1(ENTREE+ONE);  /* UPDATE UCB ADDRESS            */
         L     @08,ENTREE                                          0585
         SLA   @08,2                                               0585
         LA    @07,FIELD1(@08)                                     0585
         ICM   @08,15,0(@07)                                       0585
         L     @07,SIOTPTR                                         0585
         STCM  @08,7,SIOUCBAD(@07)                                 0585
*   DO NUMBER=ONE TO ENTREE WHILE(RCAREA=ZERO);/* RESTORE NEW PTRS   */
@RF00584 LA    NUMBER,1                                            0586
         B     @DE00586                                            0586
@DL00586 LTR   RCAREA,RCAREA                                       0586
         BNZ   @DC00586                                            0586
*     BEGINFLD=FLDDISPL(NUMBER)+ONE;/* BEGINNING BYTE OF PTR.        */
         LR    @08,NUMBER                                          0587
         ALR   @08,@08                                             0587
         LR    @07,TEMPPTR                                         0587
         BCTR  @07,0                                               0587
         SLR   @15,@15                                             0587
         IC    @15,FLDDISPL-1(@08,@07)                             0587
         LA    BEGINFLD,1                                          0587
         ALR   BEGINFLD,@15                                        0587
*     ENDFIELD=FLDDISPL(NUMBER)+FLDLNGTH(NUMBER);/* END BYTE IN PTR. */
         BCTR  @08,0                                               0588
         BCTR  @08,0                                               0588
         SLR   ENDFIELD,ENDFIELD                                   0588
         IC    ENDFIELD,FLDLNGTH(@08,TEMPPTR)                      0588
         ALR   @15,ENDFIELD                                        0588
         LR    ENDFIELD,@15                                        0588
*     SWAAREA(BEGINFLD:ENDFIELD)=FIELD1(NUMBER);/* RESTORE PTRS.     */
         L     @08,SWAPTR                                          0589
         ALR   @08,BEGINFLD                                        0589
         BCTR  @08,0                                               0589
         LR    @07,ENDFIELD                                        0589
         SLR   @07,BEGINFLD                                        0589
         LR    @15,NUMBER                                          0589
         SLA   @15,2                                               0589
         LA    @14,FIELD1-4(@15)                                   0589
         EX    @07,@SM03001                                        0589
*   END;                                                           0590
         AL    NUMBER,@CF00085                                     0590
@DE00586 C     NUMBER,ENTREE                                       0590
         BNH   @DL00586                                            0590
@DC00586 DS    0H                                                  0591
*   END PTRUPDTE;                                                  0591
@EL00007 DS    0H                                                  0591
@EF00007 DS    0H                                                  0591
@ER00007 LM    @14,@04,@SA00007                                    0591
         LM    @06,@09,@SA00007+28                                 0591
         LM    @11,@12,@SA00007+44                                 0591
         BR    @14                                                 0591
*VATPUT:                                                           0592
*   PROC;                           /* PLACES ENTRIES IN VAT         */
VATPUT   STM   @14,@01,@SA00008                                    0592
         STM   @03,@04,@SA00008+16                                 0592
         ST    @06,@SA00008+24                                     0592
         STM   @08,@12,@SA00008+28                                 0592
*/* VATPUT IS ENTERED WHENEVER A CONTROL BLOCK ENTRY MUST BE MADE IN */
*/* THE VAT.IF AN ENTRY ALREADY EXISTS THE OLD VIRTUAL ADDRESS IS    */
*/* MOVED INTO THE BLOCKS ENTRY.IF NO ENTRY EXISTS,IF REQUIRED,THE   */
*/* ENTIRE CONTROL BLOCKS ENTRY IS MADE IN THE VAT. IF THERE IS NO   */
*/* SPACE LEFT IN THE CURRENT VAT AN EXTENSION IS GOTTEN AS OFTEN AS */
*/* REQUIRED.                                                        */
*                                                                  0593
*   ENTMADE=OFFSW;                  /* TURN OFF ENTRY MADE SWITCH    */
*   PUTENTRY=ON;                    /* PUT ENTRY IN VAT              */
         OI    PUTENTRY,B'01000000'                                0594
         NI    ENTMADE,B'11011111'                                 0594
*   IF FAILSTEP=ON THEN             /* IS THIS THE FAILING STEP?     */
         TM    FAILSTEP,B'10000000'                                0595
         BNO   @RF00595                                            0595
*     DO;                                                          0596
*       IF(JNLID=IGDGNTID×JNLID=IPDIBLID) THEN                     0597
         CLI   JNLID,X'23'                                         0597
         BE    @RT00597                                            0597
         CLI   JNLID,X'21'                                         0597
         BNE   @RF00597                                            0597
@RT00597 DS    0H                                                  0598
*         PUTENTRY=OFFSW;           /* DONT PROCESS FOR FAIL STEP    */
*                                                                  0598
         NI    PUTENTRY,B'10111111'                                0598
*       /*************************************************************/
*       /*                                                           */
*       /* FOR THE FAILING STEP VAM CONTROL BLOCKS ARE NOT PROCESSED */
*       /* IF THIS IS AN AUTOMATIC STEP RESTART.                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0599
*       IF((JNLID=VDSCBID×JNLID=DSPCTHID)&MELRSTRT=AUTOSTEP) THEN  0599
@RF00597 CLI   JNLID,X'FC'                                         0599
         BE    @GL00037                                            0599
         CLI   JNLID,X'FE'                                         0599
         BNE   @RF00599                                            0599
@GL00037 L     @10,@PC00001                                        0599
         CLI   MELRSTRT(@10),X'80'                                 0599
         BNE   @RF00599                                            0599
*         PUTENTRY=OFFSW;                                          0600
         NI    PUTENTRY,B'10111111'                                0600
*     END;                                                         0601
@RF00599 DS    0H                                                  0602
*   CVATPTR=VATPTR;                 /* SAVE CURRENT VAT POINTER      */
@RF00595 LR    CVATPTR,VATPTR                                      0602
*   DO WHILE(VATX>ZERO);            /* ANY VAT EXTENSIONS@YM06019    */
         B     @DE00603                                            0603
@DL00603 DS    0H                                                  0604
*     CVATPTR=VATX;                 /* SAVE AS CURRENT PTR@YM06019   */
         L     @10,VATX(,VATPTR)                                   0604
         LR    CVATPTR,@10                                         0604
*     VATPTR=VATX;                  /* UPDATE VAT PTR        @YM06019*/
         LR    VATPTR,@10                                          0605
*   END;                                                           0606
@DE00603 L     @10,VATX(,VATPTR)                                   0606
         LTR   @10,@10                                             0606
         BP    @DL00603                                            0606
*   VATPTR=JSCBVATA;                /* RELOAD ORIGINAL VAT POINTER   */
         L     VATPTR,JSCBVATA(,JSCBPTR)                           0607
*   DO WHILE(VATPTR>ZERO&PUTENTRY=ON);/* SCAN VAT & EXTS.FOR MATCH   */
         B     @DE00608                                            0608
@DL00608 DS    0H                                                  0609
*     DO BLKENTRY=ONE TO VATNO WHILE(PUTENTRY=ON);/* SCAN ALL ENTRIES*/
         LA    BLKENTRY,1                                          0609
         B     @DE00609                                            0609
@DL00609 TM    PUTENTRY,B'01000000'                                0609
         BNO   @DC00609                                            0609
*       IF VATRBN(BLKENTRY)=JNLRBN THEN/* DO THE RBN'S MATCH?        */
         LR    @10,BLKENTRY                                        0610
         MH    @10,@CH02079                                        0610
         ST    @10,@TF00001                                        0610
         ALR   @10,VATPTR                                          0610
         BCTR  @10,0                                               0610
         BCTR  @10,0                                               0610
         ICM   @06,15,VATRBN-12(@10)                               0610
         C     @06,JNLRBN                                          0610
         BNE   @RF00610                                            0610
*         DO;                                                      0611
*           PUTENTRY=OFFSW;         /* TURN OFF LOOP CNTRL.SWITCH    */
         NI    PUTENTRY,B'10111111'                                0612
*           IF VATBLKID(BLKENTRY)=JNLID THEN/* DO THE ID'S MATCH?    */
         LR    @10,VATPTR                                          0613
         AL    @10,@TF00001                                        0613
         CLC   VATBLKID-14(1,@10),JNLID                            0613
         BNE   @RF00613                                            0613
*             IF(JNLID=VDSCBID×JNLID=DSPCTHID) THEN/* IS THIS VAM? 0614
*                                                            @YM07084*/
         CLI   JNLID,X'FC'                                         0614
         BE    @RT00614                                            0614
         CLI   JNLID,X'FE'                                         0614
         BNE   @RF00614                                            0614
@RT00614 DS    0H                                                  0615
*               DO;                                                0615
*                 ENTMADE=ON;       /* TURN ON ENTRY MADE    @YM07084*/
         OI    ENTMADE,B'00100000'                                 0616
*                 CALL VAMPROC;     /* YES,CALL VAM PROCESS  @YM07084*/
         BAL   @14,VAMPROC                                         0617
*               END;                                               0618
*             ELSE                                                 0619
*               DO;                                                0619
         B     @RC00614                                            0619
@RF00614 DS    0H                                                  0620
*                 ENTMADE=ON;       /* ENTRY MADE IN VAT             */
         OI    ENTMADE,B'00100000'                                 0620
*                 VATROVA(BLKENTRY)=JNLVA;/* ADD OLD SVA TO BLOCK  0621
*                                      ENTRY                         */
         LR    @10,BLKENTRY                                        0621
         MH    @10,@CH02079                                        0621
         ST    @10,@TF00001                                        0621
         ALR   @10,VATPTR                                          0621
         MVC   VATROVA-14(3,@10),JNLVA                             0621
*                 IF JNLID=IACTID THEN/* IS THIS AN ACT?             */
         CLI   JNLID,X'01'                                         0622
         BNE   @RF00622                                            0622
*                   VATNUPDT(BLKENTRY)=ON;/* SET NO UPDATE BIT       */
         LR    @10,VATPTR                                          0623
         AL    @10,@TF00001                                        0623
         OI    VATNUPDT-14(@10),B'10000000'                        0623
*                 IF FAILSTEP=ON THEN/* FAILING STEP FOUND           */
@RF00622 TM    FAILSTEP,B'10000000'                                0624
         BNO   @RF00624                                            0624
*                   DO;                                            0625
*                     IF(MELRSTRT=AUTOSTEP&(JNLID^=IJCTID&JNLID^=IVUTID
*                         )) THEN   /* JCT OR VUT?           @YM06019*/
         L     @10,@PC00001                                        0626
         CLI   MELRSTRT(@10),X'80'                                 0626
         BNE   @RF00626                                            0626
         CLI   JNLID,X'00'                                         0626
         BE    @RF00626                                            0626
         CLI   JNLID,X'26'                                         0626
         BE    @RF00626                                            0626
*                       VATNUPDT(BLKENTRY)=ON;/* NO,SET NO UPDATE BIT*/
         LR    @10,BLKENTRY                                        0627
         MH    @10,@CH02079                                        0627
         ALR   @10,VATPTR                                          0627
         OI    VATNUPDT-14(@10),B'10000000'                        0627
*                   END;                                           0628
*               END;                                               0629
*           ELSE                                                   0630
*             RCAREA=SWAERR;        /* ID'S OF BLOCKS DO NOT MATCH   */
         B     @RC00613                                            0630
@RF00613 LA    RCAREA,8                                            0630
*         END;                                                     0631
@RC00613 DS    0H                                                  0632
*     END;                                                         0632
@RF00610 AL    BLKENTRY,@CF00085                                   0632
@DE00609 SLR   @10,@10                                             0632
         IC    @10,VATNO(,VATPTR)                                  0632
         CR    BLKENTRY,@10                                        0632
         BNH   @DL00609                                            0632
@DC00609 DS    0H                                                  0633
*     BLKENTRY=BLKENTRY-ONE;        /* POSITION TO PROPER ENTRY      */
         BCTR  BLKENTRY,0                                          0633
*     IF PUTENTRY=ON THEN           /* LOOK AT EXTENSION IF NO       */
         TM    PUTENTRY,B'01000000'                                0634
         BNO   @RF00634                                            0634
*       VATPTR=VATX;                /* MATCH IN VAT                  */
         L     VATPTR,VATX(,VATPTR)                                0635
*   END;                                                           0636
*                                                                  0636
@RF00634 DS    0H                                                  0636
@DE00608 LTR   VATPTR,VATPTR                                       0636
         BNP   @DC00608                                            0636
         TM    PUTENTRY,B'01000000'                                0636
         BO    @DL00608                                            0636
@DC00608 DS    0H                                                  0637
*/*  *****************************************************************/
*/*   IF THE VAT AND ALL EXTENSIONS HAVE BEEN SEARCHED AND THE       */
*/*   CONTROL BLOCK IS AN UNMATCHED JCT OR SCT THIS IS AN ERROR. AN  */
*/*   ERROR CODE IS SET AND THE PROCEDURE EXITS.                     */
*/*  *****************************************************************/
*                                                                  0637
*   IF((JNLID=IJCTID×JNLID=ISCTID×JNLID=IACTID)&PUTENTRY=ON) THEN  0637
         CLI   JNLID,X'00'                                         0637
         BE    @GL00043                                            0637
         CLI   JNLID,X'02'                                         0637
         BE    @GL00043                                            0637
         CLI   JNLID,X'01'                                         0637
         BNE   @RF00637                                            0637
@GL00043 TM    PUTENTRY,B'01000000'                                0637
         BNO   @RF00637                                            0637
*     DO;                                                          0638
*       PUTENTRY=OFFSW;             /* TURN OFF LOOP CNTRL SWITCH    */
         NI    PUTENTRY,B'10111111'                                0639
*       RCAREA=SWAERR;              /* SET SWA ERROR RETURN CODE     */
         LA    RCAREA,8                                            0640
*     END;                                                         0641
*   DO WHILE(PUTENTRY=ON);          /* IF NO ENTRY MAKE ONE          */
@RF00637 B     @DE00642                                            0642
@DL00642 DS    0H                                                  0643
*     VATPTR=CVATPTR;               /* RESTORE CURRENT VAT PTR.      */
         LR    VATPTR,CVATPTR                                      0643
*     IF FAILSTEP=OFFSW THEN        /* SYSTEM RESTART,A NON-         */
         TM    FAILSTEP,B'10000000'                                0644
         BNZ   @RF00644                                            0644
*       DO;                         /* FAILING STEP OR CONTINUE      */
*         IF VATNO=MAXENTRY THEN    /* ANY SPACE IN CURRENT TABLE    */
         CLI   VATNO(VATPTR),56                                    0646
         BNE   @RF00646                                            0646
*           CALL VATBUILD;          /* NO,GET AN EXTENSION           */
         BAL   @14,VATBUILD                                        0647
*         VATNO=VATNO+ONE;          /* INCREMENT TO NEXT ENTRY       */
@RF00646 LA    @10,1                                               0648
         SLR   @04,@04                                             0648
         IC    @04,VATNO(,VATPTR)                                  0648
         ALR   @10,@04                                             0648
         STC   @10,VATNO(,VATPTR)                                  0648
*         IF(JNLID=VDSCBID×JNLID=DSPCTHID) THEN/* IS THIS VAM?       */
         CLI   JNLID,X'FC'                                         0649
         BE    @RT00649                                            0649
         CLI   JNLID,X'FE'                                         0649
         BNE   @RF00649                                            0649
@RT00649 DS    0H                                                  0650
*           DO;                                                    0650
*             BLKENTRY=VATNO;       /* NEXT ENTRY IN VAT             */
         SLR   BLKENTRY,BLKENTRY                                   0651
         IC    BLKENTRY,VATNO(,VATPTR)                             0651
*             CALL VAMPROC;         /* CALL VAM PROCESS              */
         BAL   @14,VAMPROC                                         0652
*           END;                                                   0653
*         ELSE                                                     0654
*           DO;                                                    0654
         B     @RC00649                                            0654
@RF00649 DS    0H                                                  0655
*             CALL ASGNRITE;        /* ASSIGN AND WRITE THE BLOCK    */
         BAL   @14,ASGNRITE                                        0655
*             VATRBN(VATNO)=JNLRBN; /* FILL IN RBN                   */
         SLR   @10,@10                                             0656
         IC    @10,VATNO(,VATPTR)                                  0656
         MH    @10,@CH02079                                        0656
         L     @15,JNLRBN                                          0656
         ST    @10,@TF00001                                        0656
         ALR   @10,VATPTR                                          0656
         BCTR  @10,0                                               0656
         BCTR  @10,0                                               0656
         STCM  @15,15,VATRBN-12(@10)                               0656
*             VATROVA(VATNO)=JNLVA; /* FILL IN OLD CIRTUAL ADDRESS   */
         LR    @10,VATPTR                                          0657
         AL    @10,@TF00001                                        0657
         MVC   VATROVA-14(3,@10),JNLVA                             0657
*             VATRNVA(VATNO)=SWROWVA;/* FILL IN NEW VIRTUAL ADDRESS  */
         LR    @10,VATPTR                                          0658
         AL    @10,@TF00001                                        0658
         MVC   VATRNVA-14(3,@10),SWROWVA(EPAPTR)                   0658
*             VATBLKID(VATNO)=JNLID;/* FILL IN BLOCK ID              */
         LR    @10,VATPTR                                          0659
         AL    @10,@TF00001                                        0659
         MVC   VATBLKID-14(1,@10),JNLID                            0659
*             IF JNLID=ISIOTID THEN /* IS THIS A SIOT?               */
         CLI   JNLID,X'03'                                         0660
         BNE   @RF00660                                            0660
*               VATDYNAM(VATNO)=ON; /* MARK VAT ENTRY AS DYNAMIC     */
         LR    @10,VATPTR                                          0661
         AL    @10,@TF00001                                        0661
         OI    VATDYNAM-14(@10),B'01000000'                        0661
*             PUTENTRY=OFFSW;       /* TURN OFF LOOP CNTRL SWITCH    */
@RF00660 DS    0H                                                  0663
*             ENTMADE=ON;           /* ENTRY MADE IN VAT             */
         OI    ENTMADE,B'00100000'                                 0663
         NI    PUTENTRY,B'10111111'                                0663
*             BLKENTRY=VATNO;       /* ENTRY LOCATION IN VAT         */
         SLR   BLKENTRY,BLKENTRY                                   0664
         IC    BLKENTRY,VATNO(,VATPTR)                             0664
*           END;                                                   0665
*       END;                                                       0666
@RC00649 DS    0H                                                  0667
*     IF FAILSTEP=ON THEN           /* FAILING STEP BEING PROCESSED  */
@RF00644 TM    FAILSTEP,B'10000000'                                0667
         BNO   @RF00667                                            0667
*       DO;                                                        0668
*         IF(JNLID=VDSCBID×JNLID=DSPCTHID) THEN/* IS THIS VAM?       */
         CLI   JNLID,X'FC'                                         0669
         BE    @RT00669                                            0669
         CLI   JNLID,X'FE'                                         0669
         BNE   @RF00669                                            0669
@RT00669 DS    0H                                                  0670
*           DO;                                                    0670
*             IF VATNO=MAXENTRY THEN/* ANY MORE SPACE IN VAT         */
         CLI   VATNO(VATPTR),56                                    0671
         BNE   @RF00671                                            0671
*               CALL VATBUILD;      /* GET AN ENTENSION              */
         BAL   @14,VATBUILD                                        0672
*             VATNO=VATNO+ONE;      /* INCREMENT TO NEXT ENTRY       */
@RF00671 LA    @10,1                                               0673
         SLR   @06,@06                                             0673
         IC    @06,VATNO(,VATPTR)                                  0673
         ALR   @10,@06                                             0673
         STC   @10,VATNO(,VATPTR)                                  0673
*             BLKENTRY=VATNO;       /* CURRENT ENTRY IN VAT          */
         LR    BLKENTRY,@10                                        0674
*             CALL VAMPROC;         /* CALL VAM PROCESS              */
         BAL   @14,VAMPROC                                         0675
*           END;                                                   0676
*                                                                  0676
*/* IF AUTO STEP RESTART AND THE CONTROL BLOCK IS NOT A VUT          */
*/* THEN TERMINATE THE LOOP.                                         */
*                                                                  0677
*         ELSE                      /* IF NON-VIO            @YM07027*/
*           DO;                                                    0677
         B     @RC00669                                            0677
@RF00669 DS    0H                                                  0678
*             IF(FAILSTEP=ON&MELRSTRT=AUTOSTEP&JNLID^=IVUTID) THEN 0678
         TM    FAILSTEP,B'10000000'                                0678
         BNO   @RF00678                                            0678
         L     @10,@PC00001                                        0678
         CLI   MELRSTRT(@10),X'80'                                 0678
         BNE   @RF00678                                            0678
         CLI   JNLID,X'26'                                         0678
         BE    @RF00678                                            0678
*               PUTENTRY=OFFSW;     /* TERMINATE LOOP                */
         NI    PUTENTRY,B'10111111'                                0679
*             ELSE                  /* FOR AUTO CHECKPOINT ASSIGN    */
*               DO;                 /* SPACE AND WRITE THE BLOCKS    */
         B     @RC00678                                            0680
@RF00678 DS    0H                                                  0681
*                 CALL ASGNRITE;    /* ASSIGN AND WRITE THE BLOCK    */
         BAL   @14,ASGNRITE                                        0681
*                 IF VATNO=MAXENTRY THEN/* ANY SPACE IN CURRENT TABLE*/
         CLI   VATNO(VATPTR),56                                    0682
         BNE   @RF00682                                            0682
*                   CALL VATBUILD;                                 0683
         BAL   @14,VATBUILD                                        0683
*                 VATNO=VATNO+ONE;  /* INCREMENT TO NEXT ENTRY       */
@RF00682 LA    @10,1                                               0684
         SLR   @15,@15                                             0684
         IC    @15,VATNO(,VATPTR)                                  0684
         ALR   @10,@15                                             0684
         STC   @10,VATNO(,VATPTR)                                  0684
*                 VATRBN(VATNO)=JNLRBN;/* FILL IN RBN                */
         MH    @10,@CH02079                                        0685
         L     @15,JNLRBN                                          0685
         ST    @10,@TF00001                                        0685
         ALR   @10,VATPTR                                          0685
         BCTR  @10,0                                               0685
         BCTR  @10,0                                               0685
         STCM  @15,15,VATRBN-12(@10)                               0685
*                 VATROVA(VATNO)=JNLVA;/* FILL IN OLD VIRTUAL ADDRESS*/
         LR    @10,VATPTR                                          0686
         AL    @10,@TF00001                                        0686
         MVC   VATROVA-14(3,@10),JNLVA                             0686
*                 VATRNVA(VATNO)=SWROWVA;/* FILL IN NEW VIRTUAL    0687
*                                      ADDRESS                       */
         LR    @10,VATPTR                                          0687
         AL    @10,@TF00001                                        0687
         MVC   VATRNVA-14(3,@10),SWROWVA(EPAPTR)                   0687
*                 VATBLKID(VATNO)=JNLID;/* FILL IN BLOCK ID          */
         LR    @10,VATPTR                                          0688
         AL    @10,@TF00001                                        0688
         MVC   VATBLKID-14(1,@10),JNLID                            0688
*                 IF(JNLID=ISIOTID×JNLID=IJFCBID) THEN/* SIOT OR   0689
*                                      JFCB?                         */
         CLI   JNLID,X'03'                                         0689
         BE    @RT00689                                            0689
         CLI   JNLID,X'1C'                                         0689
         BNE   @RF00689                                            0689
@RT00689 DS    0H                                                  0690
*                   VATDYNAM(VATNO)=ON;/* MARK VAT ENTRY AS DYNAMIC  */
         SLR   @10,@10                                             0690
         IC    @10,VATNO(,VATPTR)                                  0690
         MH    @10,@CH02079                                        0690
         ALR   @10,VATPTR                                          0690
         OI    VATDYNAM-14(@10),B'01000000'                        0690
*                 PUTENTRY=OFFSW;   /* TURN OFF LOOP CNTRL SWITCH    */
@RF00689 DS    0H                                                  0692
*                 ENTMADE=ON;       /* ENTRY MADE IN VAT             */
         OI    ENTMADE,B'00100000'                                 0692
         NI    PUTENTRY,B'10111111'                                0692
*                 BLKENTRY=VATNO;   /* ENTRY LOCATION IN VAT         */
         SLR   BLKENTRY,BLKENTRY                                   0693
         IC    BLKENTRY,VATNO(,VATPTR)                             0693
*               END;                                               0694
*           END;                                                   0695
@RC00678 DS    0H                                                  0696
*       END;                                                       0696
@RC00669 DS    0H                                                  0697
*   END;                                                           0697
@RF00667 DS    0H                                                  0697
@DE00642 TM    PUTENTRY,B'01000000'                                0697
         BO    @DL00642                                            0697
*   END VATPUT;                                                    0698
@EL00008 DS    0H                                                  0698
@EF00008 DS    0H                                                  0698
@ER00008 LM    @14,@01,@SA00008                                    0698
         LM    @03,@04,@SA00008+16                                 0698
         L     @06,@SA00008+24                                     0698
         LM    @08,@12,@SA00008+28                                 0698
         BR    @14                                                 0698
*ASGNRITE:                                                         0699
*   PROC;                           /* ASSIGNS AND WRITES BLOCK      */
ASGNRITE STM   @14,@03,@SA00009                                    0699
         STM   @05,@12,@SA00009+24                                 0699
*/* ASGNRITE IS CALLED WHENEVER IT IS REQUIRED TO ASSIGN AND WRITE   */
*/* A CONTROL BLOCK TO SWA.THIS ROUTINE INITIALIZES THE QMPA WITH    */
*/* THE INFORMATION REQUIRED TO USE THE SWA MANAGER ASSIGN AND WRITE */
*/* FUNCTIONS AND THEN ISSUES IEFQMREQ.FOR THE ASSIGN FUNCTION IT    */
*/* MANIPULATES QMRBN IN THE QMPA TO INSURE THAT THE CONTROL BLOCK   */
*/* HAS THE SAME RBN IT INITIALLY HAD.                               */
*                                                                  0700
*   QMPOP=ASGN;                     /* ASSIGN FUNCTION CODE          */
         L     @10,QMPAPTR                                         0700
         MVI   QMPOP(@10),X'01'                                    0700
*   IF JNLRBN>SAVERBN THEN          /* SAVE RBN IF HIGHER            */
         L     @10,JNLRBN                                          0701
         C     @10,SAVERBN                                         0701
         BNH   @RF00701                                            0701
*     SAVERBN=JNLRBN;               /* THEN CURRENTLY SAVED ONE      */
         ST    @10,SAVERBN                                         0702
*   QMRBN=JNLRBN-ONE;               /* SPECIFIC RBN TO USE           */
@RF00701 L     @10,QMPAPTR                                         0703
         L     @08,JNLRBN                                          0703
         BCTR  @08,0                                               0703
         ST    @08,QMRBN(,@10)                                     0703
*   QMPCMNC=ONEASGN;                /* NUMBER OF RECORDS TO ASSIGN   */
         MVI   QMPCMNC(@10),X'10'                                  0704
*   R1=QMPAPTR;                     /* LOAD QMPA POINTER             */
         LR    R1,@10                                              0705
*   GEN(IEFQMREQ);                  /* CALL SWA MANAGER              */
         IEFQMREQ
*   EPAPTR=QMPACL;                  /* INITIALIZE EPA POINTER        */
         L     @10,QMPAPTR                                         0707
         L     EPAPTR,QMPACL-1(,@10)                               0707
         LA    EPAPTR,0(,EPAPTR)                                   0707
*   QMPOP=RITE;                     /* WRITE FUNCTION CODE           */
         MVI   QMPOP(@10),X'03'                                    0708
*   QMPCMNC=ONERITE;                /* WRITE ONE RECORD              */
         MVI   QMPCMNC(@10),X'01'                                  0709
*   SWROWVA=SWASNVA;                /* SVA FOR WRITE OPERATION       */
         MVC   SWROWVA(3,EPAPTR),SWASNVA(EPAPTR)                   0710
*   SWWRTID=JNLID;                  /* CONTROL BLOCK ID              */
         MVC   SWWRTID(1,EPAPTR),JNLID                             0711
*   SWBUFPTR=ADDR(JNLBLK);          /* BUFFER CONTAINING JNL.BLOCK   */
         LA    @08,JNLBLK                                          0712
         ST    @08,SWBUFPTR(,EPAPTR)                               0712
*   R1=QMPAPTR;                     /* LOAD QMPA POINTER             */
         LR    R1,@10                                              0713
*   GEN(IEFQMREQ);                  /* CALL SWA MANAGER              */
         IEFQMREQ
*   MYSWA(ONE:ONE76)=MYSWA(ONE:ONE76)&&MYSWA(ONE:ONE76);/* ZERO SWA  */
         SLR   @10,@10                                             0715
         ICM   @10,7,SWROWVA(EPAPTR)                               0715
         XC    MYSWA(176,@10),MYSWA(@10)                           0715
*   END ASGNRITE;                                                  0716
@EL00009 DS    0H                                                  0716
@EF00009 DS    0H                                                  0716
@ER00009 LM    @14,@03,@SA00009                                    0716
         LM    @05,@12,@SA00009+24                                 0716
         BR    @14                                                 0716
*VATBUILD:                                                         0717
*   PROC OPTIONS(NOSAVEAREA);       /* GETS VAT OR VATX              */
VATBUILD STM   @14,@01,12(@13)                                     0717
         STM   @03,@12,32(@13)                                     0717
*/* VATBUILD IS CALLED WHENEVER A VAT EXTENSION IS REQUIRED.IT ISSUES*/
*/* A GETMAIN FOR 800 BYTES,ZEROES THE AREA AND INSURES THAT THE     */
*/* EXTENSION IS CHAINED TO THE PREVIOUS TABLE VIA FORWARD AND       */
*/* BACKWARD CHAINING.                                               */
*                                                                  0718
*   LEN=TABSIZE;                    /* LENGTH OF VAT EXTENSION       */
         LA    LEN,800                                             0718
*   GEN(GETMAIN R,LV=(LEN));        /* GET SPACE FOR VAT EXTENSION   */
         GETMAIN R,LV=(LEN)
*   VATX=R1;                        /* SAVE ADDRESS OF EXTENSION     */
         ST    R1,VATX(,VATPTR)                                    0720
*   OVATPTR=VATPTR;                 /* SAVE PREVIOUS VAT POINTER     */
         LR    OVATPTR,VATPTR                                      0721
*   VATPTR=R1;                      /* RESET VATPTR. TO EXTENSION    */
         LR    VATPTR,R1                                           0722
*   XCPTR=VATPTR;                   /* SET PTR FOR ZEROING TABLE     */
         LR    XCPTR,VATPTR                                        0723
*   DO R=ONE TO THREE;              /* INITIALIZE TABLE ENTRIES TO   */
         LA    R,1                                                 0724
@DL00724 DS    0H                                                  0725
*     XCAREA=XCAREA&&XCAREA;        /* ZERO                          */
         XC    XCAREA(256,XCPTR),XCAREA(XCPTR)                     0725
*     XCPTR=XCPTR+LENGTH(XCAREA);   /* ADJUST POINTER                */
         AL    XCPTR,@CF00708                                      0726
*   END;                                                           0727
         AL    R,@CF00085                                          0727
         C     R,@CF00316                                          0727
         BNH   @DL00724                                            0727
*   XCAREA(ONE:TABLEFT)=XCAREA(ONE:TABLEFT)&&XCAREA(ONE:TABLEFT);  0728
         XC    XCAREA(32,XCPTR),XCAREA(XCPTR)                      0728
*   VATBPTR=OVATPTR;                /* SAVE ADDR. OF PREVIOUS VAT    */
         ST    OVATPTR,VATBPTR(,VATPTR)                            0729
*   END VATBUILD;                                                  0730
@EL00010 DS    0H                                                  0730
@EF00010 DS    0H                                                  0730
@ER00010 LM    @14,@01,12(@13)                                     0730
         LM    @03,@12,32(@13)                                     0730
         BR    @14                                                 0730
*ERRPROC:                                                          0731
*   PROC;                                                          0731
*                                                                  0731
ERRPROC  STM   @14,@12,@SA00011                                    0731
*/* ERRPROC IS ENTERED WHENEVER AN ERROR IS ENCOUNTERED EITHER SWA   */
*/* OR JOURNAL.IT ACCESSES A MESSAGE MODULE AND DEPENDING UPON THE   */
*/* TYPE OF ERROR ISSUES THE APPROPRIATE MESSAGE TO THE PROGRAMMER.  */
*/* ADDITIONALLY IF THE RESTART IS AUTO STEP OR AUTO CHECKPOINT THE  */
*/* OPERATOR IS INFORMED THAT THE JOB HAS BEEN CANCELLED.            */
*                                                                  0732
*   RESPECIFY                                                      0732
*     R2 RESTRICTED;                /* RESTRICT REGISTER 2           */
*   R2=ADDR(IEFXB603);              /* GET MESSAGE MODULE ADDRESS    */
         L     R2,@CV02874                                         0733
*   R2=R2+SIXTEEN;                  /* PTR. TO MESSAGE TABLE         */
         AL    R2,@CF00038                                         0734
*   GEN DATA;                                                      0735
*   IF RCAREA=SWAERR THEN           /* WAS IT A SWA ERROR?           */
         C     RCAREA,@CF00058                                     0736
         BNE   @RF00736                                            0736
*     DO WHILE(ID^='MG02');         /* LOOK FOR PROPER MESSAGE       */
         B     @DE00737                                            0737
@DL00737 DS    0H                                                  0738
*       R2=R2+ENTRYLEN;             /* INCREMENT TO NEXT ENTRY       */
         AL    R2,@CF00058                                         0738
*     END;                                                         0739
@DE00737 CLC   ID(4,R2),@CC02950                                   0739
         BNE   @DL00737                                            0739
*   ELSE                                                           0740
*     IF RCAREA=JOURNERR THEN       /* WAS IT A JOURNAL ERROR?       */
         B     @RC00736                                            0740
@RF00736 C     RCAREA,@CF00078                                     0740
         BNE   @RF00740                                            0740
*       DO WHILE(ID^='MG03');       /* LOOK FOR PROPER MESSAGE       */
         B     @DE00741                                            0741
@DL00741 DS    0H                                                  0742
*         R2=R2+ENTRYLEN;           /* INCREMENT TO PROPER ENTRY     */
         AL    R2,@CF00058                                         0742
*       END;                                                       0743
@DE00741 CLC   ID(4,R2),@CC02951                                   0743
         BNE   @DL00741                                            0743
*   MSG(ONE:LNGTH)=MESS1(ONE:LNGTH);/* MOVE WTO LIST INTO BUFFER     */
@RF00740 DS    0H                                                  0744
@RC00736 LA    @10,WTOLIST                                         0744
         SLR   @07,@07                                             0744
         IC    @07,LNGTH(,R2)                                      0744
         BCTR  @07,0                                               0744
         L     @04,ADDRESS-1(,R2)                                  0744
         EX    @07,@SM03003                                        0744
*   R1=ADDR(MSG);                   /* ADDRESS OF WTO LIST           */
         LA    R1,WTOLIST                                          0745
*   GEN(WTO MF=(E,(R1)));           /* ISSUE WTO MACRO               */
         WTO MF=(E,(R1))
*   IF(MELRSTRT=AUTOSTEP×MELRSTRT=AUTOCKPT) THEN                   0747
         L     @10,@PC00001                                        0747
         CLI   MELRSTRT(@10),X'80'                                 0747
         BE    @RT00747                                            0747
         CLI   MELRSTRT(@10),X'40'                                 0747
         BNE   @RF00747                                            0747
@RT00747 DS    0H                                                  0748
*     DO;                           /* IF AUTOMATIC RESTART THEN     */
*       DO WHILE(ID^='MG09');       /* SEND MESSAGE TO OPERATOR      */
         B     @DE00749                                            0749
@DL00749 DS    0H                                                  0750
*         R2=R2+ENTRYLEN;                                          0750
         AL    R2,@CF00058                                         0750
*       END;                                                       0751
@DE00749 CLC   ID(4,R2),@CC02952                                   0751
         BNE   @DL00749                                            0751
*       MSG(ONE:LNGTH)=MESS1(ONE:LNGTH);/* MOVE WTO LIST INTO BUFFER */
         LA    @10,WTOLIST                                         0752
         SLR   @07,@07                                             0752
         IC    @07,LNGTH(,R2)                                      0752
         BCTR  @07,0                                               0752
         L     @04,ADDRESS-1(,R2)                                  0752
         EX    @07,@SM03003                                        0752
*       JCTPTR=LCTJCTAD;            /* INITIALIZE JCT POINTER        */
         L     @10,LCTJCTAD(,LCTPTR)                               0753
         ST    @10,JCTPTR                                          0753
*       MSG(JOBBEGIN:JOBEND)=JCTJNAME;/* PLACE JOB NANE IN MESSAGE   */
         LA    @07,WTOLIST                                         0754
         MVC   MSG+38(8,@07),JCTJNAME(@10)                         0754
*       R1=ADDR(MSG);               /* ADDRESS OF WTO LIST           */
         LA    R1,WTOLIST                                          0755
*       GEN(WTO MF=(E,(R1)));       /* ISSUE WTO MACRO               */
         WTO MF=(E,(R1))
*     END;                                                         0757
*   JSCBJNLE=ON;                    /* TURN ON JOURNAL ERROR BIT     */
@RF00747 OI    JSCBJNLE(JSCBPTR),B'00100000'                       0758
*   MSGSW=ONE;                      /* SET TO INDICATE MSG.WRITTEN   */
         MVC   MSGSW(4),@CF00085                                   0759
*   RESPECIFY                                                      0760
*     R2 UNRESTRICTED;              /* UNRESTRICT REGISTER 2         */
*   END ERRPROC;                                                   0761
@EL00011 DS    0H                                                  0761
@EF00011 DS    0H                                                  0761
@ER00011 LM    @14,@12,@SA00011                                    0761
         BR    @14                                                 0761
*UPDATE:                                                           0762
*   PROC OPTIONS(NOSAVEAREA);       /* USED TO UPDATE CHAIN PTRS.    */
UPDATE   STM   @14,@04,12(@13)                                     0762
         STM   @06,@12,44(@13)                                     0762
*/* UPDATE IS ENTERED DURING CHAIN POINTER UPDATING.IT ATTEMPTS TO   */
*/* MATCH THE OLD VIRTUAL ADDRESSES PASSED AGAINST THE OLD VIRTUAL   */
*/* ADDRESS FIELDS IN THE VAT AND ITS EXTENSIONS.WHEN A MATCH IS     */
*/* ENCOUNTERED THE CORRESPONDING NEW VIRTUAL ADDRESS IS MOVED INTO  */
*/* A SEPARATE TABLE FOR SUBSEQUENT PROCESSING.                      */
*                                                                  0763
*   VATPTR=JSCBVATA;                /* ADDRESS OF FIRST VAT          */
         L     VATPTR,JSCBVATA(,JSCBPTR)                           0763
*   DO WHILE(VATX>ZERO);            /* FIND LAST VAT EXTENSION       */
         B     @DE00764                                            0764
@DL00764 DS    0H                                                  0765
*     VATPTR=VATX;                                                 0765
         L     VATPTR,VATX(,VATPTR)                                0765
*   END;                                                           0766
@DE00764 L     @10,VATX(,VATPTR)                                   0766
         LTR   @10,@10                                             0766
         BP    @DL00764                                            0766
*   COUNTER=ZERO;                   /* INITIALIZE FIELD COUNTER      */
         SLR   COUNTER,COUNTER                                     0767
*   DO BLKENTRY=ONE TO NUMBER;      /* SCAN FOR A MATCH ON VATROVA   */
         LA    BLKENTRY,1                                          0768
         B     @DE00768                                            0768
@DL00768 DS    0H                                                  0769
*     IF FIELD(BLKENTRY)=ZERO THEN  /* OLD SVA IS ZERO               */
         LR    @10,BLKENTRY                                        0769
         SLA   @10,2                                               0769
         LA    @08,FIELD-4(@10)                                    0769
         ICM   @06,15,0(@08)                                       0769
         LTR   @06,@06                                             0769
         BNZ   @RF00769                                            0769
*       DO;                                                        0770
*         FIELD1(BLKENTRY)=FIELD(BLKENTRY);/* SET NEW SVA TO ZERO    */
         LA    @08,FIELD1-4(@10)                                   0771
         LA    @06,FIELD-4(@10)                                    0771
         MVC   0(4,@08),0(@06)                                     0771
*         COUNTER=COUNTER+ONE;      /* INCREMENT FIELD COUNTER       */
         AL    COUNTER,@CF00085                                    0772
*       END;                                                       0773
*   END;                                                           0774
*                                                                  0774
@RF00769 AL    BLKENTRY,@CF00085                                   0774
@DE00768 CR    BLKENTRY,NUMBER                                     0774
         BNH   @DL00768                                            0774
*/********************************************************************/
*/* SCAN ALL VAT EXTENSIONS UNTIL THERE ARE NO MORE,AN ERROR IS      */
*/* ENCOUNTERED,OR ALL FIELDS HAVE BEEN MATCHED.                     */
*/********************************************************************/
*                                                                  0775
*   DO WHILE(VATPTR^=ZERO&COUNTER^=NUMBER);                        0775
         B     @DE00775                                            0775
@DL00775 DS    0H                                                  0776
*     DO SVAENTRY=VATNO TO ONE BY-ONE WHILE(COUNTER^=NUMBER);      0776
         SLR   SVAENTRY,SVAENTRY                                   0776
         IC    SVAENTRY,VATNO(,VATPTR)                             0776
         B     @DE00776                                            0776
@DL00776 CR    COUNTER,NUMBER                                      0776
         BE    @DC00776                                            0776
*       DO BLKENTRY=ONE TO NUMBER;  /* SCAN FOR A MATCH ON VATROVA   */
         LA    BLKENTRY,1                                          0777
         B     @DE00777                                            0777
@DL00777 DS    0H                                                  0778
*/* IF A MATCH IS FOUND FOR THE OLD SVA IN THE VAT CHECK TO SEE THAT */
*/* IT HAS NOT BEEN MATCHED PREVIOUSLY.IF IT HAS THEN IGNORE ENTRY   */
*                                                                  0778
*         IF(FIELD(BLKENTRY)=VATOVA(SVAENTRY)&FIELD(BLKENTRY)^=ZERO)
*           THEN                                                   0778
         LR    @10,BLKENTRY                                        0778
         SLA   @10,2                                               0778
         LA    @08,FIELD-4(@10)                                    0778
         ICM   @15,15,0(@08)                                       0778
         LR    @08,SVAENTRY                                        0778
         MH    @08,@CH02079                                        0778
         ST    @08,@TF00001                                        0778
         ALR   @08,VATPTR                                          0778
         ICM   @14,15,VATOVA-14(@08)                               0778
         CLR   @15,@14                                             0778
         BNE   @RF00778                                            0778
         SLR   @08,@08                                             0778
         CLR   @15,@08                                             0778
         BE    @RF00778                                            0778
*           IF FIELD1(BLKENTRY)=ZERO THEN/* IS THERE A NEW SVA       */
         LA    @01,FIELD1-4(@10)                                   0779
         ICM   @00,15,0(@01)                                       0779
         CLR   @08,@00                                             0779
         BNE   @RF00779                                            0779
*             DO;                                                  0780
*               FIELD1(BLKENTRY)=VATNVA(SVAENTRY);/* FILL IN NEW SVA */
         LR    @01,VATPTR                                          0781
         AL    @01,@TF00001                                        0781
         ICM   @00,15,VATNVA-14(@01)                               0781
         LA    @01,FIELD1-4(@10)                                   0781
         STCM  @00,15,0(@01)                                       0781
*               FIELD(BLKENTRY)=ZERO;/* ZERO OLD SVA WHEN MATCHED    */
         LA    @01,FIELD-4(@10)                                    0782
         STCM  @08,15,0(@01)                                       0782
*               COUNTER=COUNTER+ONE;/* INCREMENT FIELD COUNTER       */
         AL    COUNTER,@CF00085                                    0783
*             END;                                                 0784
*       END;                                                       0785
@RF00779 DS    0H                                                  0785
@RF00778 AL    BLKENTRY,@CF00085                                   0785
@DE00777 CR    BLKENTRY,NUMBER                                     0785
         BNH   @DL00777                                            0785
*     END;                                                         0786
         BCTR  SVAENTRY,0                                          0786
@DE00776 LTR   SVAENTRY,SVAENTRY                                   0786
         BP    @DL00776                                            0786
@DC00776 DS    0H                                                  0787
*     IF COUNTER^=NUMBER THEN       /* ALL FIELDS NOT MATCHED,ANY    */
         CR    COUNTER,NUMBER                                      0787
         BE    @RF00787                                            0787
*       VATPTR=VATBPTR;             /* MORE EXTENSIONS               */
         L     VATPTR,VATBPTR(,VATPTR)                             0788
*   END;                                                           0789
@RF00787 DS    0H                                                  0789
@DE00775 LTR   VATPTR,VATPTR                                       0789
         BZ    @DC00775                                            0789
         CR    COUNTER,NUMBER                                      0789
         BNE   @DL00775                                            0789
@DC00775 DS    0H                                                  0790
*   IF COUNTER^=NUMBER THEN         /* ALL EXTENSIONS SCANNED AND    */
         CR    COUNTER,NUMBER                                      0790
         BE    @RF00790                                            0790
*     RCAREA=SWAERR;                /* ALL SVA'S NOT MATCHED-ERROR   */
         LA    RCAREA,8                                            0791
*   END UPDATE;                                                    0792
@EL00012 DS    0H                                                  0792
@EF00012 DS    0H                                                  0792
@ER00012 LM    @14,@04,12(@13)                                     0792
         LM    @06,@12,44(@13)                                     0792
         BR    @14                                                 0792
*CLEANUP:                                                          0793
*   PROC;                           /* FREE VAT AND ANY EXTENSIONS   */
CLEANUP  STM   @14,@04,@SA00013                                    0793
         STM   @06,@12,@SA00013+28                                 0793
*/* CLEANUP IS ENTERED PRIOR TO CONCLUDING JOURNAL MERGE PROCESSING  */
*/* THE ROUTINE FREES THE VAT AND ALL EXTENSIONS.IF PROCESSING ENDED */
*/* SUCCESSFULLY FOR AUTO STEP OR CHECKPOINT RESTART IT REPOSITIONS  */
*/* THE JOB JOURNAL AND SYSTEM MESSAGE DATA SETS.IT PROPAGATES THE   */
*/* JOB STATUS BYTE FROM THE JCT TO THE JSCB,RESTORES THE HIGHEST RBN*/
*/* USED AND SETS A SUCCESSFUL RETURN CODE.FOR CONTINUE RESTART      */
*/* IT POINTS THE JCT TO THE PROPER SCT.                             */
*/*                                                                  */
*/* IF CLEANUP WAS ENTERED BECAUSE OF AN ERROR,AFTER FREEING THE VAT */
*/* AND ALL EXTENSIONS IT EXITS WITH AN ERROR RETURN CODE.           */
*                                                                  0794
*   VATPTR=JSCBVATA;                /* GET ADDRESS OF FIRST VAT      */
         L     VATPTR,JSCBVATA(,JSCBPTR)                           0794
*   DO WHILE(VATPTR^=ZERO);         /* FREE VAT AND ANY EXTENSIONS   */
         B     @DE00795                                            0795
@DL00795 DS    0H                                                  0796
*     R1=VATPTR;                    /* AREA TO FREE                  */
         LR    R1,VATPTR                                           0796
*     VATPTR=VATX;                  /* GET EXTENSION PTR.            */
         L     VATPTR,VATX(,VATPTR)                                0797
*     LEN=TABSIZE;                  /* LENGTH OF TABLE TO FREE       */
         LA    LEN,800                                             0798
*     GEN(FREEMAIN R,LV=(LEN),A=(R1));/* FREE VAT OR EXTENSION       */
         FREEMAIN R,LV=(LEN),A=(R1)
*   END;                                                           0800
@DE00795 SLR   @10,@10                                             0800
         CR    VATPTR,@10                                          0800
         BNE   @DL00795                                            0800
*   JSCBVATA=ZERO;                  /* ZERO VAT POINTER              */
         ST    @10,JSCBVATA(,JSCBPTR)                              0801
*   PDSNPTR=BEGINPDS;               /* LOC. OF FIRST PDSNTAB         */
         L     @10,BEGINPDS                                        0802
         ST    @10,PDSNPTR                                         0802
*   DO WHILE(PDSNPTR^=ZERO);        /* FREE ALL PDSNTABS     @YM07074*/
         B     @DE00803                                            0803
@DL00803 DS    0H                                                  0804
*     R1=PDSNPTR;                   /* ADDR. OF PDSNTAB      @YM07074*/
         L     @10,PDSNPTR                                         0804
         LR    R1,@10                                              0804
*     PDSNPTR=PDSNX;                /* ADDR. OF EXT.IF ANY@YM07074   */
         L     @10,PDSNX(,@10)                                     0805
         ST    @10,PDSNPTR                                         0805
*     LEN=PDSNSIZE;                 /* LENGTH TO BE FREED    @YM07074*/
         L     LEN,@CF02887                                        0806
*     GEN(FREEMAIN R,LV=(LEN),A=(R1));/* ISSUE FREEMAIN      @YM07074*/
         FREEMAIN R,LV=(LEN),A=(R1)
*   END;                                                           0808
@DE00803 SLR   @10,@10                                             0808
         C     @10,PDSNPTR                                         0808
         BNE   @DL00803                                            0808
*   IF RCAREA=ZERO THEN             /* ENTRY WAS NORMAL,             */
         CR    RCAREA,@10                                          0809
         BNE   @RF00809                                            0809
*     DO;                                                          0810
*       JSCBJJSB=JCTJSB;            /* JOB STATUS INFO.      @YM05071*/
         L     @07,JCTPTR                                          0811
         IC    @05,JCTJSB(,@07)                                    0811
         STC   @05,JSCBJJSB(,JSCBPTR)                              0811
*       JSCBJNLN=ON;                /* RESET JNL.OVERRIDE    @YM04287
*                                                            @YM07083*/
         OI    JSCBJNLN(JSCBPTR),B'10000000'                       0812
*       IF LASTSCT^=ZERO THEN       /* HAS SCT BEEN READ?            */
         C     @10,LASTSCT                                         0813
         BE    @RF00813                                            0813
*         JCTSSTR=LASTSVA;          /* POINT TO PROPER SCT           */
         MVC   JCTSSTR(3,@07),LASTSVA                              0814
*       IF MELRSTRT=CONTINUE THEN   /* IS THIS STEP CONTINUE?        */
@RF00813 L     @10,@PC00001                                        0815
         CLI   MELRSTRT(@10),X'20'                                 0815
         BNE   @RF00815                                            0815
*         JCTSSTR=SCTANSCT;         /* POINT JCT TO THE NEXT STEP    */
         L     @10,JCTPTR                                          0816
         L     @07,SCTPTR                                          0816
         MVC   JCTSSTR(3,@10),SCTANSCT(@07)                        0816
*       IF(MELRSTRT=SYSRSTRT&INALLOC=ON&LASTSCT^=ZERO) THEN        0817
@RF00815 L     @10,@PC00001                                        0817
         CLI   MELRSTRT(@10),X'08'                                 0817
         BNE   @RF00817                                            0817
         TM    INALLOC,B'00000100'                                 0817
         BNO   @RF00817                                            0817
         L     @10,LASTSCT                                         0817
         LTR   @10,@10                                             0817
         BZ    @RF00817                                            0817
*         JCTSSTR=SCTANSCT;         /* POINT JCT TO NEXT SCT         */
         L     @10,JCTPTR                                          0818
         L     @07,SCTPTR                                          0818
         MVC   JCTSSTR(3,@10),SCTANSCT(@07)                        0818
*       IF(MELRSTRT=AUTOSTEP×MELRSTRT=AUTOCKPT) THEN               0819
@RF00817 L     @10,@PC00001                                        0819
         CLI   MELRSTRT(@10),X'80'                                 0819
         BE    @RT00819                                            0819
         CLI   MELRSTRT(@10),X'40'                                 0819
         BNE   @RF00819                                            0819
@RT00819 DS    0H                                                  0820
*         DO;                                                      0820
*           RBAJRN2=RBAJRN2+ONE;    /* ADD ONE TO THE JOURNAL RBA    */
         LA    @10,1                                               0821
         L     @07,RBAJRN2                                         0821
         ALR   @07,@10                                             0821
         ST    @07,RBAJRN2                                         0821
*           IF RBAJRN2=ZERO THEN                                   0822
         LTR   @07,@07                                             0822
         BNZ   @RF00822                                            0822
*             RBAJRN1=RBAJRN1+ONE;                                 0823
         AL    @10,RBAJRN1                                         0823
         ST    @10,RBAJRN1                                         0823
*           RBASMSG2=RBASMSG2+ONE;  /* ADD ONE TO SYS.MSG. RBA       */
@RF00822 LA    @10,1                                               0824
         L     @07,RBASMSG2                                        0824
         ALR   @07,@10                                             0824
         ST    @07,RBASMSG2                                        0824
*           IF RBASMSG2=ZERO THEN                                  0825
         LTR   @07,@07                                             0825
         BNZ   @RF00825                                            0825
*             RBASMSG1=RBASMSG1+ONE;                               0826
         AL    @10,RBASMSG1                                        0826
         ST    @10,RBASMSG1                                        0826
*           RPLRBAR=RBAJOURN;       /* PLACE JOURNAL RBA IN RPL      */
@RF00825 MVC   RPLRBAR(8,RPLPTR),RBAJOURN                          0827
*           RPLARG=ADDR(RPLRBAR);   /* POINT TO RBA                  */
         LA    @10,RPLRBAR(,RPLPTR)                                0828
         ST    @10,RPLARG(,RPLPTR)                                 0828
*           RPLPTR=JSCBSMLR;        /* GET SYS. MSG. RPL PTR.        */
         L     RPLPTR,JSCBSMLR(,JSCBPTR)                           0829
*           RPLRBAR=RBASMSG;        /* PLACE SYS.MSG.RBA IN RPL      */
         MVC   RPLRBAR(8,RPLPTR),RBASMSG                           0830
*           RPLARG=ADDR(RPLRBAR);   /* POINT TO RBA                  */
         LA    @10,RPLRBAR(,RPLPTR)                                0831
         ST    @10,RPLARG(,RPLPTR)                                 0831
*           RESPECIFY                                              0832
*             R2 RESTRICTED;        /* RESTRICT REGISTER 2           */
*           R2=JSCBJNLR;            /* ADDRESS OF JOURNAL RPL        */
         L     R2,JSCBJNLR(,JSCBPTR)                               0833
*           GEN;                                                   0834
         POINT RPL=(R2)
*           RPLPTR=JSCBJNLR;        /* RESET JNL RPL PTR     @ZM34503*/
         L     RPLPTR,JSCBJNLR(,JSCBPTR)                           0835
*           IF RETCODE^=ZERO&(RETCODE^=JOURNEND×RPLERRCD^=RPLEODER)
*             THEN                  /* ERROR IN POINT ON JOB JNL BUT
*                                      NOT EOF               @ZM34503*/
         LTR   RETCODE,RETCODE                                     0836
         BZ    @RF00836                                            0836
         C     RETCODE,@CF00058                                    0836
         BNE   @RT00836                                            0836
         CLI   RPLERRCD(RPLPTR),4                                  0836
         BE    @RF00836                                            0836
@RT00836 DS    0H                                                  0837
*             JSCBJNLE=ON;          /* SET JOURNAL ERROR BIT         */
         OI    JSCBJNLE(JSCBPTR),B'00100000'                       0837
*           R2=JSCBSMLR;            /* ADDRESS OF SYS.MSG.RPL        */
@RF00836 L     R2,JSCBSMLR(,JSCBPTR)                               0838
*           GEN;                                                   0839
         POINT RPL=(R2)
*           JCTSNUMB=MELSCTNO;      /* STEP NO. OF CURRENT STEP      */
         L     @10,@PC00001                                        0840
         LH    @10,MELSCTNO(,@10)                                  0840
         L     @08,JCTPTR                                          0840
         STC   @10,JCTSNUMB(,@08)                                  0840
*         END;                                                     0841
*       IF MELRSTRT=SYSRSTRT&       /* IS THIS A SYSTEM RESTART?     */
*           LCTRFBRV=ON THEN        /* NOT CONVERTED TO A NEW JOB  0842
*                                                            @ZA13822*/
@RF00819 L     @10,@PC00001                                        0842
         CLI   MELRSTRT(@10),X'08'                                 0842
         BNE   @RF00842                                            0842
         TM    LCTRFBRV(LCTPTR),B'00100000'                        0842
         BNO   @RF00842                                            0842
*         JCTWARMS=ON;              /* RESET WARM START BIT          */
         L     @10,JCTPTR                                          0843
         OI    JCTWARMS(@10),B'10000000'                           0843
*       RCAREA=NOERROR;             /* RETURN CODE                   */
@RF00842 SLR   RCAREA,RCAREA                                       0844
*     END;                                                         0845
*   ELSE                            /* ENTRY WAS FOR AN ERROR        */
*     DO;                                                          0846
         B     @RC00809                                            0846
@RF00809 DS    0H                                                  0847
*       RCAREA=BADCODE;             /* CONDITION SET ERROR CODE      */
         LA    RCAREA,36                                           0847
*       JSCBJNLE=ON;                /* SET JOURNAL ERROR BIT         */
         OI    JSCBJNLE(JSCBPTR),B'00100000'                       0848
*     END;                                                         0849
*   QMRBN=SAVERBN;                  /* RESTORE HIGHEST RBN USED      */
@RC00809 L     @10,SAVERBN                                         0850
         L     @08,QMPAPTR                                         0850
         ST    @10,QMRBN(,@08)                                     0850
*   RESPECIFY                                                      0851
*     R2 UNRESTRICTED;              /* UNRESTRICT REGISTER 2         */
*   END CLEANUP;                                                   0852
@EL00013 DS    0H                                                  0852
@EF00013 DS    0H                                                  0852
@ER00013 LM    @14,@04,@SA00013                                    0852
         LM    @06,@12,@SA00013+28                                 0852
         BR    @14                                                 0852
*CKPTMRGE:                                                         0853
*   PROC;                           /* CKPT.MERGE FAILING STEP       */
CKPTMRGE STM   @14,@01,@SA00014                                    0853
         STM   @03,@04,@SA00014+16                                 0853
         ST    @06,@SA00014+24                                     0853
         STM   @08,@09,@SA00014+28                                 0853
         STM   @11,@12,@SA00014+36                                 0853
*/* CKPTMERGE IS ENTERED TO PERFORM MERGE PROCESSING FOR THE FAILING */
*/* STEP IN THE EVENT OF AN AUTO. CHECKPOINT RESTART.                */
*/* CONTROL FLOW IS IDENTICAL TO THAT DESCRIBED FOR SYSMERGE.        */
*                                                                  0854
*   IF ALLOCRBA^=BEGINRBA THEN      /* CHKPT AFTER A RESTART?      0854
*                                                            @YM07086*/
         CLC   ALLOCRBA(8),BEGINRBA                                0854
         BE    @RF00854                                            0854
*     RBAJOURN=ALLOCRBA;            /* REPOS.JNL AFTER ALLOC.BLKS. 0855
*                                                            @YM07086*/
         MVC   RBAJOURN(8),ALLOCRBA                                0855
*   DO WHILE(RCAREA=ZERO);          /* PROCESS UNTIL ERROR OR EOF    */
@RF00854 B     @DE00856                                            0856
@DL00856 DS    0H                                                  0857
*     CALL READREC;                 /* READ A RECORD                 */
         BAL   @14,READREC                                         0857
*     IF(RCAREA=ZERO) THEN          /* PLACE RECORD ENTRY IN THE     */
         LTR   RCAREA,RCAREA                                       0858
         BNZ   @RF00858                                            0858
*       DO;                                                        0859
*         CALL VATPUT;              /* VAT IF REQUIRED               */
         BAL   @14,VATPUT                                          0860
*         IF(RCAREA=ZERO&ENTMADE=ON&JNLID^=VDSCBID&JNLID^=DSPCTHID)
*           THEN                                                   0861
         LTR   RCAREA,RCAREA                                       0861
         BNZ   @RF00861                                            0861
         TM    ENTMADE,B'00100000'                                 0861
         BNO   @RF00861                                            0861
         CLI   JNLID,X'FC'                                         0861
         BE    @RF00861                                            0861
         CLI   JNLID,X'FE'                                         0861
         BE    @RF00861                                            0861
*           DO;                     /* MERGE IF ENTRY IN VAT         */
*             CALL READLOC;         /* ISSUE A READ LOCATE FOR BLK   */
         BAL   @14,READLOC                                         0863
*/*                                                                  */
*/* DEPENDING UPON THE TYPE OF CONTROL BLOCK RETURNED BY THE READ    */
*/* SELECT THE PROPER TEMPLATE TO PERFORM FIELD MERGING FOR THE      */
*/* FAILING STEP                                                     */
*/*                                                                  */
*                                                                  0864
*             IF(SWBLKID=ISIOTID×SWBLKID=IJFCBID) THEN/* SIOT OR   0864
*                                      JFCB?                         */
         L     @06,SWEPAPTR                                        0864
         CLI   SWBLKID(@06),X'03'                                  0864
         BE    @RT00864                                            0864
         CLI   SWBLKID(@06),X'1C'                                  0864
         BNE   @RF00864                                            0864
@RT00864 DS    0H                                                  0865
*               IF VATDYNAM(BLKENTRY)=ON THEN/* DYNAMIC SIOT OR JFCB?*/
         LR    @06,BLKENTRY                                        0865
         MH    @06,@CH02079                                        0865
         ALR   @06,VATPTR                                          0865
         TM    VATDYNAM-14(@06),B'01000000'                        0865
         BNO   @RF00865                                            0865
*                 DO;                                              0866
*                   IF SWBLKID=ISIOTID THEN/* IS IT A SIOT?          */
         L     @06,SWEPAPTR                                        0867
         CLI   SWBLKID(@06),X'03'                                  0867
         BNE   @RF00867                                            0867
*                     UPDTID=IDSIOTID;/* USE DYNAMIC SIOT ID         */
         MVI   UPDTID,X'FF'                                        0868
*                   IF SWBLKID=IJFCBID THEN/* IS THIS A JFCB?        */
@RF00867 L     @06,SWEPAPTR                                        0869
         CLI   SWBLKID(@06),X'1C'                                  0869
         BNE   @RF00869                                            0869
*                     UPDTID=IDJFCBID;/* USE DYNAMIC JFCB ID         */
         MVI   UPDTID,X'EE'                                        0870
*                 END;                                             0871
*               ELSE                                               0872
*                 UPDTID=SWBLKID;   /* USE ID RETURNED BY READ       */
         B     @RC00865                                            0872
@RF00865 L     @06,SWEPAPTR                                        0872
         MVC   UPDTID(1),SWBLKID(@06)                              0872
*             ELSE                                                 0873
*               UPDTID=SWBLKID;     /* USE ID RETURNED BY READ       */
         B     @RC00864                                            0873
@RF00864 L     @06,SWEPAPTR                                        0873
         MVC   UPDTID(1),SWBLKID(@06)                              0873
*             TEMPPTR=ZERO;         /* ZERO TEMPLATE POINTER         */
@RC00864 SLR   TEMPPTR,TEMPPTR                                     0874
*             IF(UPDTID=IJFCBID&OJFCBPTR->JFCGDG=ON&/* IS THIS A GDG */
*                 OJFCBPTR->JFCENT=OFFSW) THEN/* MOTHER OF A GDG ALL?*/
         CLI   UPDTID,X'1C'                                        0875
         BNE   @RF00875                                            0875
         L     @03,OJFCBPTR                                        0875
         TM    JFCGDG(@03),B'00000010'                             0875
         BNO   @RF00875                                            0875
         TM    JFCENT(@03),B'00000100'                             0875
         BNZ   @RF00875                                            0875
*               OJFCBPTR->JFCBDSNM=JFCBDSNM;/* MOVE OVER NEW NAME    */
         MVC   JFCBDSNM(44,@03),JFCBDSNM(JFCBPTR)                  0876
*/*                                                                  */
*/* SCAN TABLE OF TEMPLATES UNTIL A MATCH IS FOUND                   */
*/*                                                                  */
*                                                                  0877
*             DO TEMPNO=ONE TO DIM(TEMPCRFM) WHILE(TEMPPTR=ZERO);  0877
@RF00875 LA    TEMPNO,1                                            0877
@DL00877 LTR   TEMPPTR,TEMPPTR                                     0877
         BNZ   @DC00877                                            0877
*               IF TEMPCRID(TEMPNO)=UPDTID THEN/* DO THE ID'S MATCH  */
         LR    @15,TEMPNO                                          0878
         MH    @15,@CH00769                                        0878
         LA    @14,TEMPCRID-5(@15)                                 0878
         CLC   0(1,@14),UPDTID                                     0878
         BNE   @RF00878                                            0878
*                 DO;                                              0879
*                   TEMPPTR=TEMPCRAD(TEMPNO);/* TEMPLATE ADDRESS     */
         L     TEMPPTR,TEMPCRAD-6(@15)                             0880
         LA    TEMPPTR,0(,TEMPPTR)                                 0880
*                   ENTREE=TEMPCRNO(TEMPNO);/* NO.OF FIELDS TO MERGE */
         SLR   @14,@14                                             0881
         IC    @14,TEMPCRNO-5(@15)                                 0881
         ST    @14,ENTREE                                          0881
*                 END;                                             0882
*             END;                                                 0883
@RF00878 AL    TEMPNO,@CF00085                                     0883
         C     TEMPNO,@CF02552                                     0883
         BNH   @DL00877                                            0883
@DC00877 DS    0H                                                  0884
*             IF TEMPPTR=ZERO THEN  /* TEMPLATE MATCH NOT FOUND      */
         LTR   TEMPPTR,TEMPPTR                                     0884
         BNZ   @RF00884                                            0884
*               RCAREA=SWAERR;      /* SET ERROR CODE                */
         LA    RCAREA,8                                            0885
*             ELSE                                                 0886
*               CALL FLDMERGE;      /* MERGE REQUIRED FIELDS         */
         B     @RC00884                                            0886
@RF00884 BAL   @14,FLDMERGE                                        0886
*             IF UPDTID=IJCTID THEN /* IS THE BLOCK MERGED A JCT     */
@RC00884 CLI   UPDTID,X'00'                                        0887
         BNE   @RF00887                                            0887
*               DO;                                                0888
*                 JCTPTR=SWAPTR;    /* INITIALIZE JCT POINTER        */
         L     @06,SWAPTR                                          0889
         ST    @06,JCTPTR                                          0889
*                 JNLBLKAD=ADDR(JNLBLK);/* ADDRESS OF JOURNAL JCT    */
         LA    JNLBLKAD,JNLBLK                                     0890
*                 IF JNLBLKAD->JCTABEND=ON THEN/* IF ON IN OLD BLOCK */
         TM    JCTABEND(JNLBLKAD),B'00001000'                      0891
         BNO   @RF00891                                            0891
*                   JCTABEND=ON;    /* MERGE ABEND BIT               */
         OI    JCTABEND(@06),B'00001000'                           0892
*                 IF JNLBLKAD->JCTCKFT=ON THEN/* CKPT. TAKEN?      0893
*                                                            @YM02794*/
@RF00891 TM    JCTCKFT(JNLBLKAD),B'00010000'                       0893
         BNO   @RF00893                                            0893
*                   JCTCKFT=ON;     /* SET BIT IN NEW BLOCK          */
         L     @06,JCTPTR                                          0894
         OI    JCTCKFT(@06),B'00010000'                            0894
*                 IF JCTCKIDT^=CHKPTID THEN/* ANOTHER CHECKPOINT   0895
*                                      TAKEN?                        */
@RF00893 L     @06,JCTPTR                                          0895
         CLC   JCTCKIDT(16,@06),CHKPTID                            0895
         BE    @RF00895                                            0895
*                   DO;                                            0896
*                     CHKPTID=JCTCKIDT;/* SAVE NEW CHECKID           */
         MVC   CHKPTID(16),JCTCKIDT(@06)                           0897
*                     RBAJOURN=RPLRBAR;/* RBA OF JOURNAL             */
         MVC   RBAJOURN(8),RPLRBAR(RPLPTR)                         0898
*                     RBASMSG=JCTSMRBA;/* SAVE SYS.MESSAGE D.S. RBA  */
         MVC   RBASMSG(8),JCTSMRBA(@06)                            0899
*                   END;                                           0900
*                 IF JCTSMRBA^=RBASMSG THEN/* HAS SYS.MSG.RBA      0901
*                                      CHANGED?                      */
@RF00895 L     @06,JCTPTR                                          0901
         CLC   JCTSMRBA(8,@06),RBASMSG                             0901
         BE    @RF00901                                            0901
*                   DO;                                            0902
*                     RBAJOURN=RPLRBAR;/* RBA OF JOURNAL RECORD      */
         MVC   RBAJOURN(8),RPLRBAR(RPLPTR)                         0903
*                     RBASMSG=JCTSMRBA;/* SAVE GREATER RBA           */
         MVC   RBASMSG(8),JCTSMRBA(@06)                            0904
*                   END;                                           0905
*               END;                                               0906
@RF00901 DS    0H                                                  0907
*             IF(UPDTID=ISIOTID×UPDTID=IDSIOTID) THEN/* IS THE BLOCK */
@RF00887 CLI   UPDTID,X'03'                                        0907
         BE    @RT00907                                            0907
         CLI   UPDTID,X'FF'                                        0907
         BNE   @RF00907                                            0907
@RT00907 DS    0H                                                  0908
*               DO;                 /* MERGED A SIOT                 */
*                 SIOTPTR=SWAPTR;   /* INITIALIZE SIOT POINTER       */
         L     @06,SWAPTR                                          0909
         ST    @06,SIOTPTR                                         0909
*                 JNLBLKAD=ADDR(JNLBLK);/* ADDRESS OF JOURNAL SIOT   */
         LA    JNLBLKAD,JNLBLK                                     0910
*                 IF JNLBLKAD->SIOTNPRV=ON THEN/* IF ON IN OLD BLOCK */
         TM    SIOTNPRV(JNLBLKAD),B'00010000'                      0911
         BNO   @RF00911                                            0911
*                   SIOTNPRV=ON;    /* MARK DD NON-PRIVATE           */
         OI    SIOTNPRV(@06),B'00010000'                           0912
*                 SIOTALCD=OFFSW;   /* TURN OFF ALLOCATION COMP.     */
@RF00911 L     @06,SIOTPTR                                         0913
         NI    SIOTALCD(@06),B'11111101'                           0913
*                 IF JNLBLKAD->SIODADSM=ON THEN/* DADSM COMP IN OLD
*                                      SIOT?                         */
         TM    SIODADSM(JNLBLKAD),B'00000100'                      0914
         BNO   @RF00914                                            0914
*                   SIODADSM=ON;    /* TURN DADSM COMP ON IN NEW     */
         OI    SIODADSM(@06),B'00000100'                           0915
*                 IF JNLBLKAD->SIOCLUNL=ON THEN/* UNALLOC. AT CLOSE? */
@RF00914 TM    SIOCLUNL(JNLBLKAD),B'10000000'                      0916
         BNO   @RF00916                                            0916
*                   SIOCLUNL=ON;    /* MAKE NEW SAME AS OLD          */
         L     @06,SIOTPTR                                         0917
         OI    SIOCLUNL(@06),B'10000000'                           0917
*                 IF JNLBLKAD->SIOTCATL=ON THEN/* IS THIS A CATALOG? */
@RF00916 TM    SIOTCATL(JNLBLKAD),B'01000000'                      0918
         BNO   @RF00918                                            0918
*                   SIOTCATL=ON;    /* MAKE NEW SAME AS OLD          */
         L     @06,SIOTPTR                                         0919
         OI    SIOTCATL(@06),B'01000000'                           0919
*                 IF JNLBLKAD->SCTVOLAF=ON THEN/* VOLUME AFFINITY    */
@RF00918 TM    SCTVOLAF(JNLBLKAD),B'00100000'                      0920
         BNO   @RF00920                                            0920
*                   SCTVOLAF=ON;    /* MAKE NEW SAME AS OLD          */
         L     @06,SIOTPTR                                         0921
         OI    SCTVOLAF(@06),B'00100000'                           0921
*                 IF JNLBLKAD->SCTUNLBD=ON THEN/* UNLABELLED TAPE?   */
@RF00920 TM    SCTUNLBD(JNLBLKAD),B'00001000'                      0922
         BNO   @RF00922                                            0922
*                   SCTUNLBD=ON;    /* MAKE NEW SAME AS OLD          */
         L     @06,SIOTPTR                                         0923
         OI    SCTUNLBD(@06),B'00001000'                           0923
*                 IF JNLBLKAD->SCTLABEL=ON THEN/* NON STANDARD LABEL?*/
@RF00922 TM    SCTLABEL(JNLBLKAD),B'00000100'                      0924
         BNO   @RF00924                                            0924
*                   SCTLABEL=ON;    /* MAKE NEW SAME AS OLD          */
         L     @06,SIOTPTR                                         0925
         OI    SCTLABEL(@06),B'00000100'                           0925
*                 IF JNLBLKAD->SCTDEFER=ON THEN/* DEFER MOUNT?       */
@RF00924 TM    SCTDEFER(JNLBLKAD),B'00000010'                      0926
         BNO   @RF00926                                            0926
*                   SCTDEFER=ON;    /* MAKE NEW SAME AS OLD          */
         L     @06,SIOTPTR                                         0927
         OI    SCTDEFER(@06),B'00000010'                           0927
*                 IF JNLBLKAD->SIOTIPDI=ON THEN/* WAS OLD SIOT IN  0928
*                                      PDI?                          */
@RF00926 TM    SIOTIPDI(JNLBLKAD),B'00000010'                      0928
         BNO   @RF00928                                            0928
*                   SIOTIPDI=ON;    /* MARK THE NEW SIOT THE SAME    */
         L     @06,SIOTPTR                                         0929
         OI    SIOTIPDI(@06),B'00000010'                           0929
*                 IF JNLBLKAD->SIOTOMN=ON THEN/* PRESERVE ORIG.    0930
*                                      STATUS                        */
@RF00928 TM    SIOTOMN(JNLBLKAD),B'00000001'                       0930
         BNO   @RF00930                                            0930
*                   SIOTOMN=ON;     /* MAKE NEW SAME AS OLD          */
         L     @06,SIOTPTR                                         0931
         OI    SIOTOMN(@06),B'00000001'                            0931
*                 IF JNLBLKAD->SCTRECVD=ON THEN/* IS SIOT RECEIVED?  */
@RF00930 TM    SCTRECVD(JNLBLKAD),B'00000001'                      0932
         BNO   @RF00932                                            0932
*                   SCTRECVD=ON;    /* MARK NEW SIOT RECEIVED      0933
*                                                            @YM08117*/
         L     @06,SIOTPTR                                         0933
         OI    SCTRECVD(@06),B'00000001'                           0933
*                 IF JNLBLKAD->SIOALIAS=ON THEN/* IS THERE AN ALIAS? */
@RF00932 TM    SIOALIAS(JNLBLKAD),B'10000000'                      0934
         BNO   @RF00934                                            0934
*                   SIOALIAS=ON;    /* TURN ON ALIAS BIT             */
         L     @06,SIOTPTR                                         0935
         OI    SIOALIAS(@06),B'10000000'                           0935
*                 IF JNLBLKAD->SIOCDEVT=ON THEN/* DEVICE TYPE FROM 0936
*                                      CATLG?                        */
@RF00934 TM    SIOCDEVT(JNLBLKAD),B'01000000'                      0936
         BNO   @RF00936                                            0936
*                   SIOCDEVT=ON;    /* TURN BIT ON IN NEW BLK.       */
         L     @06,SIOTPTR                                         0937
         OI    SIOCDEVT(@06),B'01000000'                           0937
*                 IF JNLBLKAD->SIOVAMDS=ON THEN/* IS THIS A VAM DATA
*                                      SET?                          */
@RF00936 TM    SIOVAMDS(JNLBLKAD),B'00100000'                      0938
         BNO   @RF00938                                            0938
*                   DO;                                            0939
*                     SIOVAMDS=ON;  /* TURN VAM BIT ON IN NEW BLK.   */
         L     @06,SIOTPTR                                         0940
         OI    SIOVAMDS(@06),B'00100000'                           0940
*                     SCTUTYPE=JNLBLKAD->SCTUTYPE;/* MOVE OVER UNIT
*                                      TYPE                          */
         MVC   SCTUTYPE(8,@06),SCTUTYPE(JNLBLKAD)                  0941
*                   END;                                           0942
*               END;                                               0943
@RF00938 DS    0H                                                  0944
*             IF UPDTID=IJFCBID THEN/* IS THIS A JFCB?               */
@RF00907 CLI   UPDTID,X'1C'                                        0944
         BNE   @RF00944                                            0944
*               DO;                                                0945
*                 JFCBPTR=SWAPTR;   /* INITIALIZE SWA POINTER        */
         L     JFCBPTR,SWAPTR                                      0946
*                 JNLBLKAD=ADDR(JNLBLK);/* ADDR. OF JNL. JFCB        */
         LA    JNLBLKAD,JNLBLK                                     0947
*                 IF JFCORGAM=OFFSW THEN/* IS DATA SET NON VSAM?     */
         TM    JFCORGAM(JFCBPTR),B'00001000'                       0948
         BNZ   @RF00948                                            0948
*                   DO;             /* YES,PERFORM VOLUME PROCESS    */
*                     JFCBNVOL=JNLBLKAD->JFCBNVOL;/* RESTORE VOLUME
*                                      COUNT                         */
         MVC   JFCBNVOL(1,JFCBPTR),JFCBNVOL(JNLBLKAD)              0950
*                     JFCBVOLS=JNLBLKAD->JFCBVOLS;/* RESTORE VOLUMES */
         MVC   JFCBVOLS(30,JFCBPTR),JFCBVOLS(JNLBLKAD)             0951
*                   END;                                           0952
*                 IF JFCORGAM=ON THEN/* VSAM DATA SET?       @YM06106*/
@RF00948 TM    JFCORGAM(JFCBPTR),B'00001000'                       0953
         BNO   @RF00953                                            0953
*                   JFCCAT=OFFSW;   /* TURN OFF CATALOG SW.@YM06106  */
         NI    JFCCAT(JFCBPTR),B'01111111'                         0954
*               END;                                               0955
@RF00953 DS    0H                                                  0956
*           END;                                                   0956
@RF00944 DS    0H                                                  0957
*       END;                                                       0957
@RF00861 DS    0H                                                  0958
*   END;                                                           0958
@RF00858 DS    0H                                                  0958
@DE00856 LTR   RCAREA,RCAREA                                       0958
         BZ    @DL00856                                            0958
*   END CKPTMRGE;                                                  0959
@EL00014 DS    0H                                                  0959
@EF00014 DS    0H                                                  0959
@ER00014 LM    @14,@01,@SA00014                                    0959
         LM    @03,@04,@SA00014+16                                 0959
         L     @06,@SA00014+24                                     0959
         LM    @08,@09,@SA00014+28                                 0959
         LM    @11,@12,@SA00014+36                                 0959
         BR    @14                                                 0959
*STEPMRGE:                                                         0960
*   PROC;                           /* STEP MERGE FAILING STEP       */
STEPMRGE STM   @14,@01,@SA00015                                    0960
         STM   @03,@04,@SA00015+16                                 0960
         ST    @06,@SA00015+24                                     0960
         STM   @08,@09,@SA00015+28                                 0960
         STM   @11,@12,@SA00015+36                                 0960
*/* STEPMRGE IS ENTERED TO PERFORM MERGE PROCESSING FOR THE FAILING  */
*/* STEP IN THE EVENT OF AN AUTO STEP RESTART.                       */
*                                                                  0961
*   DO WHILE(RCAREA=ZERO);          /* PROCESS UNTIL ERROR OR EOF    */
         B     @DE00961                                            0961
@DL00961 DS    0H                                                  0962
*     CALL READREC;                 /* READ A RECORD                 */
         BAL   @14,READREC                                         0962
*     IF(RCAREA=ZERO) THEN          /* PLACE RECORD ENTRY IN THE     */
         LTR   RCAREA,RCAREA                                       0963
         BNZ   @RF00963                                            0963
*       DO;                                                        0964
*         CALL VATPUT;              /* VAT IF REQUIRED               */
         BAL   @14,VATPUT                                          0965
*         IF(RCAREA=ZERO&ENTMADE=ON&JNLID^=VDSCBID&JNLID^=DSPCTHID)
*           THEN                                                   0966
         LTR   RCAREA,RCAREA                                       0966
         BNZ   @RF00966                                            0966
         TM    ENTMADE,B'00100000'                                 0966
         BNO   @RF00966                                            0966
         CLI   JNLID,X'FC'                                         0966
         BE    @RF00966                                            0966
         CLI   JNLID,X'FE'                                         0966
         BE    @RF00966                                            0966
*           DO;                                                    0967
*             CALL READLOC;         /* ISSUE A READ LOCATE FOR BLK   */
         BAL   @14,READLOC                                         0968
*             IF SWBLKID=IJCTID THEN/* IS THE BLOCK A JCT?           */
         L     @06,SWEPAPTR                                        0969
         CLI   SWBLKID(@06),X'00'                                  0969
         BNE   @RF00969                                            0969
*               DO;                                                0970
*                 TEMPPTR=ADDR(JCTFST);/* SET TEMPLATE POINTER       */
         LA    TEMPPTR,JCTFST                                      0971
*                 ENTREE=DIM(JCTFST);/* NUMBER OF FIELDS TO MERGE    */
         MVC   ENTREE(4),@CF00058                                  0972
*                 CALL FLDMERGE;    /* MERGE REQUIRED FIELDS         */
         BAL   @14,FLDMERGE                                        0973
*                 JCTPTR=SWAPTR;    /* INITIALIZE JCT POINTER        */
         L     @06,SWAPTR                                          0974
         ST    @06,JCTPTR                                          0974
*                 JNLBLKAD=ADDR(JNLBLK);/* ADDRESS OF JOURNAL JCT    */
         LA    JNLBLKAD,JNLBLK                                     0975
*                 IF JNLBLKAD->JCTABEND=ON THEN/* IF ON IN OLD BLOCK */
         TM    JCTABEND(JNLBLKAD),B'00001000'                      0976
         BNO   @RF00976                                            0976
*                   JCTABEND=ON;    /* MERGE ABEND BIT               */
         OI    JCTABEND(@06),B'00001000'                           0977
*               END;                                               0978
@RF00976 DS    0H                                                  0979
*             IF SWBLKID=IACTID THEN/* IS THIS AN ACT?               */
@RF00969 L     @06,SWEPAPTR                                        0979
         CLI   SWBLKID(@06),X'01'                                  0979
         BNE   @RF00979                                            0979
*               DO;                                                0980
*                 TEMPPTR=ADDR(ACTFST);/* INITIALIZE TEMPLATE PTR.   */
         LA    TEMPPTR,ACTFST                                      0981
*                 ENTREE=DIM(ACTFST);/* NUMBER OF FIELDS TO MERGE    */
         MVC   ENTREE(4),@CF00085                                  0982
*                 CALL FLDMERGE;    /* MERGE REQUIRED FIELDS         */
         BAL   @14,FLDMERGE                                        0983
*               END;                                               0984
*             IF SWBLKID=ISCTID THEN/* IS THIS AN SCT?               */
@RF00979 L     @06,SWEPAPTR                                        0985
         CLI   SWBLKID(@06),X'02'                                  0985
         BNE   @RF00985                                            0985
*               DO;                                                0986
*                 TEMPPTR=ADDR(SCTFST);/* INITIALIZE TEMPLATE ADDR.  */
         LA    TEMPPTR,SCTFST                                      0987
*                 ENTREE=DIM(SCTFST);/* NUMBER OF FIELDS TO MERGE    */
         MVC   ENTREE(4),@CF00085                                  0988
*                 CALL FLDMERGE;    /* MERGE REQUIRED FIELDS         */
         BAL   @14,FLDMERGE                                        0989
*               END;                                               0990
*             IF SWBLKID=IVUTID THEN/* IS THIS A VUT?                */
@RF00985 L     @06,SWEPAPTR                                        0991
         CLI   SWBLKID(@06),X'26'                                  0991
         BNE   @RF00991                                            0991
*               DO;                                                0992
*                 TEMPPTR=ADDR(VUTFST);/* SET TEMPLATE POINTER       */
         LA    TEMPPTR,VUTFST                                      0993
*                 ENTREE=DIM(VUTFST);/* NUMBER OF FIELDS TO MERGE    */
         MVC   ENTREE(4),@CF00085                                  0994
*                 CALL FLDMERGE;    /* MERGE REQUIRED FIELDS         */
         BAL   @14,FLDMERGE                                        0995
*               END;                                               0996
*             IF SWBLKID=IJFCBID THEN/* IS BLOCK A JFCB?             */
@RF00991 L     @06,SWEPAPTR                                        0997
         CLI   SWBLKID(@06),X'1C'                                  0997
         BNE   @RF00997                                            0997
*               DO;                                                0998
*                 JFCBPTR=SWAPTR;   /* INITIALIZE JFCB POINTER       */
         L     JFCBPTR,SWAPTR                                      0999
*                 JNLBLKAD=ADDR(JNLBLK);/* ADDRESS OF JOURNAL JFCB   */
         LA    JNLBLKAD,JNLBLK                                     1000
*                 IF(JFCDISP='10'B×JFCDISP='01'B) THEN/* OLD DATA  1001
*                                      SET?                          */
         TM    JFCDISP(JFCBPTR),B'10000000'                        1001
         BNO   @GL00070                                            1001
         TM    JFCDISP(JFCBPTR),B'01000000'                        1001
         BZ    @RT01001                                            1001
@GL00070 TM    JFCDISP(JFCBPTR),B'01000000'                        1001
         BNO   @RF01001                                            1001
         TM    JFCDISP(JFCBPTR),B'10000000'                        1001
         BNZ   @RF01001                                            1001
@RT01001 DS    0H                                                  1002
*                   DO;                                            1002
*                     JFCBOTTR=JNLBLKAD->JFCBOTTR;/* MERGE ORIGINAL
*                                      TTR                           */
         MVC   JFCBOTTR(3,JFCBPTR),JFCBOTTR(JNLBLKAD)              1003
*                     JFCLIMCT=JNLBLKAD->JFCLIMCT;/* MERGE TRACK   1004
*                                      BALANCE                       */
         MVC   JFCLIMCT(3,JFCBPTR),JFCLIMCT(JNLBLKAD)              1004
*                     IF JFCTEMP=ON THEN/* IS THIS A TEMPORARY DS    */
         TM    JFCTEMP(JFCBPTR),B'00000001'                        1005
         BNO   @RF01005                                            1005
*                       IF JFCBDSNM(ONE:FORTY4)^=OJFCBPTR->JFCBDSNM(ONE
*                           :FORTY4) THEN/* ARE NAMES DIFFERENT      */
         L     @06,OJFCBPTR                                        1006
         CLC   JFCBDSNM(44,JFCBPTR),JFCBDSNM(@06)                  1006
         BE    @RF01006                                            1006
*                         CALL PDSPUT;/* MAKE ENTRY IN PDSNTAB       */
         BAL   @14,PDSPUT                                          1007
*                     IF(JFCTEMP=ON&OJFCBPTR->JFCCAT=OFFSW) THEN   1008
@RF01006 DS    0H                                                  1008
@RF01005 TM    JFCTEMP(JFCBPTR),B'00000001'                        1008
         BNO   @RF01008                                            1008
         L     @06,OJFCBPTR                                        1008
         TM    JFCCAT(@06),B'10000000'                             1008
         BNZ   @RF01008                                            1008
*                       JFCBDSNM=JNLBLKAD->JFCBDSNM;/* RESTORE DSN IF
*                                      TEMP. AND NOT CATLG.          */
         MVC   JFCBDSNM(44,JFCBPTR),JFCBDSNM(JNLBLKAD)             1009
*                     IF JFCDISP='10'B THEN/* IS THIS A MOD DATA SET?*/
@RF01008 TM    JFCDISP(JFCBPTR),B'10000000'                        1010
         BNO   @RF01010                                            1010
         TM    JFCDISP(JFCBPTR),B'01000000'                        1010
         BNZ   @RF01010                                            1010
*                       JFCTTR=ON;  /* SET BIT IN NEW BLOCK          */
         OI    JFCTTR(JFCBPTR),B'00010000'                         1011
*                   END;                                           1012
@RF01010 DS    0H                                                  1013
*                 JNLBLKAD->JFCBLTYP=JNLBLKAD->JFCBLTYP&NOUSERLB;  1013
@RF01001 NI    JFCBLTYP(JNLBLKAD),X'77'                            1013
*                 JFCBLTYP=JNLBLKAD->JFCBLTYP×JFCBLTYP;/* NO USER  1014
*                                      LABEL                         */
         OC    JFCBLTYP(1,JFCBPTR),JFCBLTYP(JNLBLKAD)              1014
*               END;                                               1015
*           END;                                                   1016
@RF00997 DS    0H                                                  1017
*       END;                                                       1017
@RF00966 DS    0H                                                  1018
*   END;                                                           1018
@RF00963 DS    0H                                                  1018
@DE00961 LTR   RCAREA,RCAREA                                       1018
         BZ    @DL00961                                            1018
*   END STEPMRGE;                                                  1019
@EL00015 DS    0H                                                  1019
@EF00015 DS    0H                                                  1019
@ER00015 LM    @14,@01,@SA00015                                    1019
         LM    @03,@04,@SA00015+16                                 1019
         L     @06,@SA00015+24                                     1019
         LM    @08,@09,@SA00015+28                                 1019
         LM    @11,@12,@SA00015+36                                 1019
         BR    @14                                                 1019
*ADDRUPDT:                                                         1020
*   PROC;                           /* UPDATE CONTROL ROUTINE        */
ADDRUPDT STM   @14,@04,@SA00016                                    1020
         STM   @06,@12,@SA00016+28                                 1020
*/* ADDRUPDT IS ENTERED DURING CHAIN POINTER UPDATING.SCANNING DOWN  */
*/* THE VAT AND ALL EXTENSIONS IT USES SWA MANAGER TO DETERMINE THE  */
*/* LOCATION OF THE BLOCK IN SWA VIA READ LOCATE,SCANS DOWN A TABLE  */
*/* OF TEMPLATES TO DETERMINE THE PROPER ONE FOR THE CONTROL BLOCK   */
*/* BASED ON CONTROL BLOCK ID AND THEN PASSES THE INFORMATION TO     */
*/* PTRUPDTE.THIS IS DONE FOR EACH CONTROL BLOCK IN THE VAT AND ITS  */
*/* EXTENSIONS.                                                      */
*                                                                  1021
*   RCAREA=ZERO;                    /* REINITIALIZE RETURN CODE      */
         SLR   RCAREA,RCAREA                                       1021
*   VATPTR=JSCBVATA;                /* INITIALIZE VAT POINTER        */
         L     VATPTR,JSCBVATA(,JSCBPTR)                           1022
*/*                                                                  */
*/* UPDATE CHAIN POINTERS IN ALL THE BLOCKS LISTED IN THE VAT AND    */
*/* EXTENSIONS THAT HAVE BEEN OVERLAYED FROM THE JOB JOURNAL CONTINUE*/
*/* THE PROCESS UNTIL ALL EXTENSIONS ARE PROCESSED OR UNTIL AN ERROR */
*/* IS ENCOUNTERED.                                                  */
*/*                                                                  */
*                                                                  1023
*   DO WHILE(VATPTR^=ZERO&RCAREA=ZERO);                            1023
         B     @DE01023                                            1023
@DL01023 DS    0H                                                  1024
*     DO VATCOUNT=ONE TO VATNO WHILE(RCAREA=ZERO);/* PROCESS THE VAT */
         LA    VATCOUNT,1                                          1024
         B     @DE01024                                            1024
@DL01024 LTR   RCAREA,RCAREA                                       1024
         BNZ   @DC01024                                            1024
*       IF(VATNUPDT(VATCOUNT)=OFFSW&VATROVA(VATCOUNT)^=ZERO) THEN  1025
         LR    @03,VATCOUNT                                        1025
         MH    @03,@CH02079                                        1025
         ST    @03,@TF00001                                        1025
         ALR   @03,VATPTR                                          1025
         TM    VATNUPDT-14(@03),B'10000000'                        1025
         BNZ   @RF01025                                            1025
         L     @03,@TF00001                                        1025
         L     @03,VATROVA-15(@03,VATPTR)                          1025
         LA    @03,0(,@03)                                         1025
         LTR   @03,@03                                             1025
         BZ    @RF01025                                            1025
*         DO;                                                      1026
*           IF VATBLKID(VATCOUNT)=VDSCBID THEN/* IS THIS A VAM BLOCK?*/
         LR    @03,VATPTR                                          1027
         AL    @03,@TF00001                                        1027
         CLI   VATBLKID-14(@03),X'FC'                              1027
         BNE   @RF01027                                            1027
*             DO;                                                  1028
*               UPDTID=VATBLKID(VATCOUNT);/* FILL IN CONTROL BLOCK ID*/
         LR    @07,VATPTR                                          1029
         AL    @07,@TF00001                                        1029
         MVC   UPDTID(1),VATBLKID-14(@07)                          1029
*               SWAPTR=VATNVA(VATCOUNT);/* FILL IN BLOCK ADDRESS     */
         LR    @07,VATPTR                                          1030
         AL    @07,@TF00001                                        1030
         ICM   @03,15,VATNVA-14(@07)                               1030
         ST    @03,SWAPTR                                          1030
*               TEMPPTR=ZERO;       /* ZERO TEMPLATE POINTER         */
         SLR   TEMPPTR,TEMPPTR                                     1031
*             END;                                                 1032
*           ELSE                                                   1033
*             DO;                   /* BLOCK REQUIRES UPDATING       */
         B     @RC01027                                            1033
@RF01027 DS    0H                                                  1034
*               SWEPAPTR=ADDR(LOCEPA);/* INITIALIZE EPA PTR          */
         LA    @03,LOCEPA                                          1034
         ST    @03,SWEPAPTR                                        1034
*               SWVA=VATRNVA(VATCOUNT);/* FILL IN SWA ADDRESS IN EPA */
         LR    @15,VATCOUNT                                        1035
         MH    @15,@CH02079                                        1035
         ALR   @15,VATPTR                                          1035
         MVC   SWVA(3,@03),VATRNVA-14(@15)                         1035
*               SWCHNPTR=ZERO;      /* EPA CHAIN POINTER ZEROED      */
*                                                                  1036
         SLR   @15,@15                                             1036
         ST    @15,SWCHNPTR(,@03)                                  1036
*               /*****************************************************/
*               /*                                                   */
*               /* ?SWAREQ (RL) EPA (SWEPAPTR);                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  1037
*               CALL SWAMGR(SWEPAPTR,'RL');/* ISSUE READ LOCATE      */
         LA    @03,SWEPAPTR                                        1037
         ST    @03,@AL00001                                        1037
         LA    @03,@CC02923                                        1037
         ST    @03,@AL00001+4                                      1037
         L     @03,CVTPTR                                          1037
         L     @03,CVTJESCT(,@03)                                  1037
         L     @15,JESWAA(,@03)                                    1037
         LA    @01,@AL00001                                        1037
         BALR  @14,@15                                             1037
*               SWAPTR=SWBLKPTR;    /* INITIALIZE SWA POINTER        */
         L     @03,SWEPAPTR                                        1038
         L     @15,SWBLKPTR(,@03)                                  1038
         ST    @15,SWAPTR                                          1038
*/*                                                                  */
*/* DEPENDING UPON THE TYPE OF CONTROL BLOCK RETURNED BY THE READ    */
*/* LOCATE A TEMPLATE CONTAINING LENGTHS AND DISPLACEMENTS OF POINTER*/
*/* FIELDS IS ACCESSED AND PASSED AS INPUT TO ANOTHER SUBROUTINE     */
*/* WHICH PERFORMS THE ACTUAL UPDATING                               */
*/*                                                                  */
*                                                                  1039
*               IF SWBLKID=ISIOTID THEN/* IS THIS A SIOT             */
         CLI   SWBLKID(@03),X'03'                                  1039
         BNE   @RF01039                                            1039
*                 IF VATDYNAM(VATCOUNT)=ON THEN/* IS THIS A DYNAMIC
*                                      SIOT                          */
         LR    @03,VATCOUNT                                        1040
         MH    @03,@CH02079                                        1040
         ALR   @03,VATPTR                                          1040
         TM    VATDYNAM-14(@03),B'01000000'                        1040
         BNO   @RF01040                                            1040
*                   UPDTID=IDSIOTID;/* YES,CHANGE ID FOR UPDATE      */
         MVI   UPDTID,X'FF'                                        1041
*                 ELSE                                             1042
*                   UPDTID=SWBLKID; /* USE ID RETURNED BY READ       */
         B     @RC01040                                            1042
@RF01040 L     @03,SWEPAPTR                                        1042
         MVC   UPDTID(1),SWBLKID(@03)                              1042
*               ELSE                                               1043
*                 UPDTID=SWBLKID;   /* USE ID RETURNED BY READ       */
         B     @RC01039                                            1043
@RF01039 L     @03,SWEPAPTR                                        1043
         MVC   UPDTID(1),SWBLKID(@03)                              1043
*               TEMPPTR=ZERO;       /* ZERO TEMPLATE POINTER         */
@RC01039 SLR   TEMPPTR,TEMPPTR                                     1044
*             END;                                                 1045
*                                                                  1045
*/*                                                                  */
*/* SCAN TABLE OF TEMPLATES UNTIL A MATCH IS FOUND                   */
*/*                                                                  */
*                                                                  1046
*           DO TEMPNO=ONE TO DIM(TEMPUPDT) WHILE(TEMPPTR=ZERO);    1046
@RC01027 LA    TEMPNO,1                                            1046
@DL01046 LTR   TEMPPTR,TEMPPTR                                     1046
         BNZ   @DC01046                                            1046
*             IF TEMPUPID(TEMPNO)=UPDTID THEN/* DO THE ID'S MATCH?   */
         LR    @07,TEMPNO                                          1047
         MH    @07,@CH00769                                        1047
         LA    @01,TEMPUPID-5(@07)                                 1047
         CLC   0(1,@01),UPDTID                                     1047
         BNE   @RF01047                                            1047
*               DO;                                                1048
*                 TEMPPTR=TEMPUPAD(TEMPNO);/* TEMPLATE ADDRESS       */
         L     TEMPPTR,TEMPUPAD-6(@07)                             1049
         LA    TEMPPTR,0(,TEMPPTR)                                 1049
*                 ENTREE=TEMPUPNO(TEMPNO);/* NO.OF FIELDS TO UPDATE  */
         SLR   @15,@15                                             1050
         IC    @15,TEMPUPNO-5(@07)                                 1050
         ST    @15,ENTREE                                          1050
*               END;                                               1051
*           END;                                                   1052
@RF01047 AL    TEMPNO,@CF00085                                     1052
         C     TEMPNO,@CF00033                                     1052
         BNH   @DL01046                                            1052
@DC01046 DS    0H                                                  1053
*           IF TEMPPTR=ZERO THEN    /* NO TEMPLATE PRESENT           */
         LTR   TEMPPTR,TEMPPTR                                     1053
         BNZ   @RF01053                                            1053
*             RCAREA=SWAERR;        /* SET ERROR CODE                */
         LA    RCAREA,8                                            1054
*           ELSE                                                   1055
*             DO;                                                  1055
         B     @RC01053                                            1055
@RF01053 DS    0H                                                  1056
*               SAVEVAT=VATPTR;     /* SAVE CURRENT VATPTR@YM06550   */
         LR    SAVEVAT,VATPTR                                      1056
*               CALL PTRUPDTE;      /* CALL PTR. UPDATE ROUTINE    1057
*                                                            @YM06550*/
         BAL   @14,PTRUPDTE                                        1057
*               VATPTR=SAVEVAT;     /* RESTORE CURRENT VATPTR        */
         LR    VATPTR,SAVEVAT                                      1058
*             END;                                                 1059
*         END;                                                     1060
@RC01053 DS    0H                                                  1061
*       IF(VATROVA(VATCOUNT)=ZERO&VATBLKID(VATCOUNT)=IJFCBID) THEN 1061
@RF01025 LR    @03,VATCOUNT                                        1061
         MH    @03,@CH02079                                        1061
         L     @15,VATROVA-15(@03,VATPTR)                          1061
         LA    @15,0(,@15)                                         1061
         LTR   @15,@15                                             1061
         BNZ   @RF01061                                            1061
         ALR   @03,VATPTR                                          1061
         CLI   VATBLKID-14(@03),X'1C'                              1061
         BNE   @RF01061                                            1061
*         IF MELRSTRT^=SYSRSTRT THEN/* AUTO RESTARTS SCAN PDSNTAB  1062
*                                                            @YM07074*/
         L     @03,@PC00001                                        1062
         CLI   MELRSTRT(@03),X'08'                                 1062
         BE    @RF01062                                            1062
*           DO;                                                    1063
*             BLKENTRY=VATCOUNT;    /* BLOCKS LOCATION IN VAT        */
         LR    BLKENTRY,VATCOUNT                                   1064
*             CALL READLOC;         /* READ BLOCK FROM SWA           */
         BAL   @14,READLOC                                         1065
*             IF(JFCTEMP=ON&(JFCDISP='01'B×JFCDISP='10'B)) THEN    1066
         TM    JFCTEMP(JFCBPTR),B'00000001'                        1066
         BNO   @RF01066                                            1066
         TM    JFCDISP(JFCBPTR),B'01000000'                        1066
         BNO   @GL00075                                            1066
         TM    JFCDISP(JFCBPTR),B'10000000'                        1066
         BZ    @RT01066                                            1066
@GL00075 TM    JFCDISP(JFCBPTR),B'10000000'                        1066
         BNO   @RF01066                                            1066
         TM    JFCDISP(JFCBPTR),B'01000000'                        1066
         BNZ   @RF01066                                            1066
@RT01066 DS    0H                                                  1067
*               CALL PDSSCAN;       /* TRY TO MATCH NAME     @YM07074*/
         BAL   @14,PDSSCAN                                         1067
*           END;                                                   1068
@RF01066 DS    0H                                                  1069
*     END;                                                         1069
@RF01062 DS    0H                                                  1069
@RF01061 AL    VATCOUNT,@CF00085                                   1069
@DE01024 SLR   @03,@03                                             1069
         IC    @03,VATNO(,VATPTR)                                  1069
         CR    VATCOUNT,@03                                        1069
         BNH   @DL01024                                            1069
@DC01024 DS    0H                                                  1070
*     VATPTR=VATX;                  /* POINT TO EXTENSION OF ANY     */
         L     VATPTR,VATX(,VATPTR)                                1070
*   END;                                                           1071
@DE01023 SLR   @04,@04                                             1071
         CR    VATPTR,@04                                          1071
         BE    @DC01023                                            1071
         CR    RCAREA,@04                                          1071
         BE    @DL01023                                            1071
@DC01023 DS    0H                                                  1072
*   END ADDRUPDT;                                                  1072
@EL00016 DS    0H                                                  1072
@EF00016 DS    0H                                                  1072
@ER00016 LM    @14,@04,@SA00016                                    1072
         LM    @06,@12,@SA00016+28                                 1072
         BR    @14                                                 1072
*PDSBUILD:                                                         1073
*   PROC OPTIONS(NOSAVEAREA);       /* BUILDS PDSNTAB                */
PDSBUILD STM   @14,@12,12(@13)                                     1073
*/* THIS PROCEDURE BUILDS A PASSED DATA SET NAME TABLE TO CONTAIN THE*/
*/* OLD AND NEW NAMES THAT HAVE BEEN GENERATED BY THE SYSTEM FOR     */
*/* TEMPORARY PASSED DATA SETS.                                      */
*                                                                  1074
*   LEN=PDSNSIZE;                   /* SIZE OF PDSNTAB       @YM07074*/
         L     LEN,@CF02887                                        1074
*   GEN(GETMAIN R,LV=(LEN));        /* GET REQUIRED SPACE@YM07074    */
         GETMAIN R,LV=(LEN)
*   IF BEGINPDS=ZERO THEN           /* FIRST PDSNTAB?        @YM07074*/
         L     @10,BEGINPDS                                        1076
         LTR   @10,@10                                             1076
         BNZ   @RF01076                                            1076
*     BEGINPDS=R1;                  /* SAVE ADDRESS          @YM07074*/
         ST    R1,BEGINPDS                                         1077
*   ELSE                                                           1078
*     PDSNX=R1;                     /* SAVE EXTENSION ADDRESS      1078
*                                                            @YM07074*/
         B     @RC01076                                            1078
@RF01076 L     @10,PDSNPTR                                         1078
         ST    R1,PDSNX(,@10)                                      1078
*   PDSNPTR=R1;                     /* INITIALIZE PDSNTAB PTR.     1079
*                                                            @YM07074*/
@RC01076 ST    R1,PDSNPTR                                          1079
*   XCPTR=PDSNPTR;                  /* PREPARE TO ZERO TABLE @YM07074*/
         L     @10,PDSNPTR                                         1080
         LR    XCPTR,@10                                           1080
*   DO R=ONE TO SIXTEEN;            /*                       @YM07074*/
         LA    R,1                                                 1081
@DL01081 DS    0H                                                  1082
*     XCAREA=XCAREA&&XCAREA;        /*                       @YM07074*/
         XC    XCAREA(256,XCPTR),XCAREA(XCPTR)                     1082
*     XCPTR=XCPTR+LENGTH(XCAREA);   /*                       @YM07074*/
         AL    XCPTR,@CF00708                                      1083
*   END;                                                           1084
         AL    R,@CF00085                                          1084
         C     R,@CF00038                                          1084
         BNH   @DL01081                                            1084
*   END PDSBUILD;                                                  1085
@EL00017 DS    0H                                                  1085
@EF00017 DS    0H                                                  1085
@ER00017 LM    @14,@12,12(@13)                                     1085
         BR    @14                                                 1085
*PDSPUT:                                                           1086
*   PROC;                           /* PUTS ENTREES IN PDSNTAB       */
PDSPUT   STM   @14,@12,@SA00018                                    1086
*   IF(BEGINPDS=ZERO×PDSNNO=MAXPDS) THEN/* IF NO PDSNTAB OR NO SPACE
*                                                            @YM07074*/
         L     @08,BEGINPDS                                        1087
         LTR   @08,@08                                             1087
         BZ    @RT01087                                            1087
         L     @08,PDSNPTR                                         1087
         CLI   PDSNNO(@08),46                                      1087
         BNE   @RF01087                                            1087
@RT01087 DS    0H                                                  1088
*     CALL PDSBUILD;                /* BUILD A NEW PDSNTAB   @YM07074*/
         BAL   @14,PDSBUILD                                        1088
*   PDSNNO=PDSNNO+ONE;              /* INCREMENT ENTREE COUNTER    1089
*                                                            @YM07074*/
@RF01087 L     @08,PDSNPTR                                         1089
         LA    @15,1                                               1089
         SLR   @14,@14                                             1089
         IC    @14,PDSNNO(,@08)                                    1089
         ALR   @15,@14                                             1089
         STC   @15,PDSNNO(,@08)                                    1089
*   OLDDSN(PDSNNO,ONE:FORTY4)=OJFCBPTR->JFCBDSNM(ONE:FORTY4);/*    1090
*                                                            @YM07074*/
         MH    @15,@CH02355                                        1090
         ST    @15,@TF00001                                        1090
         ALR   @15,@08                                             1090
         AL    @15,@CF03007                                        1090
         L     @14,OJFCBPTR                                        1090
         MVC   OLDDSN-5(44,@15),JFCBDSNM(@14)                      1090
*   NEWDSN(PDSNNO,ONE:FORTY4)=JFCBDSNM(ONE:FORTY4);/*        @YM07074*/
         AL    @08,@TF00001                                        1091
         AL    @08,@CF03008                                        1091
         MVC   NEWDSN-49(44,@08),JFCBDSNM(JFCBPTR)                 1091
*   END PDSPUT;                                                    1092
@EL00018 DS    0H                                                  1092
@EF00018 DS    0H                                                  1092
@ER00018 LM    @14,@12,@SA00018                                    1092
         BR    @14                                                 1092
*PDSSCAN:                                                          1093
*   PROC OPTIONS(NOSAVEAREA);                                      1093
*                                                                  1093
PDSSCAN  STM   @14,@12,12(@13)                                     1093
*/* THIS PROCEDURE SCANS THE PDSNTAB AND REPLACES NEW PASSED DATA SET*/
*/* NAMES IN STEPS SUBSEQUENT TO THE FAILING STEP WITH THE NAMES THEY*/
*/* HAD DURING THE ORIGINAL EXECUTION OF THE JOB.                    */
*                                                                  1094
*   PDSNPTR=BEGINPDS;               /* GET FIRST PDSNTAB ADDRESS   1094
*                                                            @YM07074*/
         L     @08,BEGINPDS                                        1094
         ST    @08,PDSNPTR                                         1094
*   DO WHILE(PDSNPTR>ZERO);         /* SCAN PDSNTAB AND EXT. @YM07074*/
         B     @DE01095                                            1095
@DL01095 DS    0H                                                  1096
*     DO SLOT=ONE TO PDSNNO;        /* SCAN EACH ENTRY       @YM07074*/
         LA    SLOT,1                                              1096
         B     @DE01096                                            1096
@DL01096 DS    0H                                                  1097
*       IF NEWDSN(SLOT,ONE:FORTY4)=JFCBDSNM(ONE:FORTY4)/*    @YM07074*/
*         THEN                                                     1097
         L     @08,PDSNPTR                                         1097
         LR    @03,SLOT                                            1097
         MH    @03,@CH02355                                        1097
         ST    @03,@TF00001                                        1097
         ALR   @03,@08                                             1097
         AL    @03,@CF03008                                        1097
         CLC   NEWDSN-49(44,@03),JFCBDSNM(JFCBPTR)                 1097
         BNE   @RF01097                                            1097
*         JFCBDSNM(ONE:FORTY4)=OLDDSN(SLOT,ONE:FORTY4);/*    @YM07074*/
         AL    @08,@TF00001                                        1098
         AL    @08,@CF03007                                        1098
         MVC   JFCBDSNM(44,JFCBPTR),OLDDSN-5(@08)                  1098
*     END;                          /*                       @YM07074*/
@RF01097 AL    SLOT,@CF00085                                       1099
@DE01096 L     @08,PDSNPTR                                         1099
         SLR   @03,@03                                             1099
         IC    @03,PDSNNO(,@08)                                    1099
         CR    SLOT,@03                                            1099
         BNH   @DL01096                                            1099
*     PDSNPTR=PDSNX;                /*                       @YM07074*/
         L     @08,PDSNPTR                                         1100
         L     @08,PDSNX(,@08)                                     1100
         ST    @08,PDSNPTR                                         1100
*   END PDSSCAN;                    /*                       @YM07074*/
@DE01095 L     @08,PDSNPTR                                         1101
         LTR   @08,@08                                             1101
         BP    @DL01095                                            1101
@EL00019 DS    0H                                                  1102
@EF00019 DS    0H                                                  1102
@ER00019 LM    @14,@12,12(@13)                                     1102
         BR    @14                                                 1102
*   END IEFXB601                                                   1103
*                                                                  1103
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                       */
*/*%INCLUDE SYSLIB  (IEFASCTB)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBX)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBE)                                       */
*/*%INCLUDE SYSLIB  (IEFQMNGR)                                       */
*/*%INCLUDE SYSLIB  (IEFZB502)                                       */
*/*%INCLUDE SYSLIB  (IEFASIOT)                                       */
*/*%INCLUDE SYSLIB  (IEFJESCT)                                       */
*/*%INCLUDE SYSLIB  (IEFZB435)                                       */
*/*%INCLUDE SYSLIB  (IEFZB429)                                       */
*/*%INCLUDE SYSLIB  (IEFZB611)                                       */
*/*%INCLUDE SYSLIB  (IEFALLCT)                                       */
*/*%INCLUDE SYSLIB  (IEFZB505)                                       */
*/*%INCLUDE SYSLIB  (IEFZB438)                                       */
*/*%INCLUDE SYSLIB  (IEFZB506)                                       */
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDDVDSCB)                                       */
*                                                                  1103
*       ;                                                          1103
@DATA    DS    0H
@CH00769 DC    H'5'
@CH02355 DC    H'88'
@SM02995 MVC   SWAAREA(0,@08),0(@05)
@SM02998 MVC   0(0,@01),SWAAREA(@14)
@SM03001 MVC   SWAAREA(0,@08),0(@14)
@SM03003 MVC   MSG(0,@10),MESS1(@04)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00005 DS    14F
@SA00003 DS    11F
@SA00015 DS    11F
@SA00014 DS    11F
@SA00011 DS    15F
@SA00016 DS    14F
@SA00013 DS    14F
@SA00008 DS    12F
@SA00004 DS    14F
@SA00006 DS    15F
@SA00018 DS    15F
@SA00007 DS    13F
@SA00009 DS    14F
@SA00002 DS    0F
         DS    14F
@AL00001 DS    2A
@TF00001 DS    F
IEFXB601 CSECT
         DS    0F
@CF00085 DC    F'1'
@CH00085 EQU   @CF00085+2
@CF00097 DC    F'2'
@CF00316 DC    F'3'
@CF00078 DC    F'4'
@CF00058 DC    F'8'
@CF02552 DC    F'10'
@CF00033 DC    F'11'
@CF02079 DC    F'14'
@CH02079 EQU   @CF02079+2
@CF00038 DC    F'16'
@CF02638 DC    F'233'
@CF00708 DC    F'256'
@CF02887 DC    F'4096'
@CF03007 DC    F'-83'
@CF03008 DC    F'-39'
@CF02600 DC    XL4'1C'
@DATD    DSECT
         DS    0D
JCTPTR   DS    A
SCTPTR   DS    A
SIOTPTR  DS    A
JFCBEPTR DS    A
JFCBXPTR DS    A
QMPAPTR  DS    A
SPFXPTR  DS    A
GDGNTPTR DS    A
SWEPAPTR DS    A
PDIBLPTR DS    A
VUTPTR   DS    A
VDSCBPTR DS    A
MSGSW    DS    F
SWAPTR   DS    A
ENTREE   DS    F
LASTSCT  DS    AL4
         ORG   LASTSCT
LASTSVA  DS    AL3
@NM00171 DS    CL1
         ORG   LASTSCT+4
SAVERBN  DS    F
PDSNPTR  DS    A
OJFCBPTR DS    A
BEGINPDS DS    A
FDBKAREA DS    AL1
PDICNT   DS    AL1
PDIENT   DS    AL1
MYEPA    DS    CL8
LOCEPA   DS    CL16
         DS    CL1
JNLBUF   DS    CL233
         ORG   JNLBUF
JNLPREFX DS    CL16
         ORG   JNLPREFX
JNLRBN   DS    FL4
JNLSTA   DS    BL1
         ORG   JNLSTA
JNLWRT   DS    BL1
@NM00168 EQU   JNLSTA+0
         ORG   JNLPREFX+5
JNLVA    DS    CL3
JNLID    DS    CL1
JNLLNGTH DS    AL3
JNLACRO  DS    CL4
         ORG   JNLBUF+16
JNLBLK   DS    CL217
         ORG   JNLBUF+233
SWITCHES DS    BL1
         ORG   SWITCHES
FAILSTEP DS    BL1
PUTENTRY EQU   SWITCHES+0
ENTMADE  EQU   SWITCHES+0
VOLSVA   EQU   SWITCHES+0
VAMDSCB  EQU   SWITCHES+0
DSNENTRY EQU   SWITCHES+0
FIRSTJHR EQU   SWITCHES+0
RECFOUND EQU   SWITCHES+0
         ORG   SWITCHES+1
MOSWITCH DS    BL1
         ORG   MOSWITCH
SHRFOUND DS    BL1
@NM00169 EQU   MOSWITCH+0
         ORG   MOSWITCH+1
SAVESTAT DS    BL1
         ORG   SAVESTAT
@NM00170 DS    BL1
ININT    EQU   SAVESTAT+0
INALLOC  EQU   SAVESTAT+0
INEXEC   EQU   SAVESTAT+0
INTERM   EQU   SAVESTAT+0
         ORG   SAVESTAT+1
UPDTID   DS    CL1
         DS    CL3
RBASMSG  DS    CL8
         ORG   RBASMSG
RBASMSG1 DS    FL4
RBASMSG2 DS    FL4
         ORG   RBASMSG+8
RBAJOURN DS    CL8
         ORG   RBAJOURN
RBAJRN1  DS    FL4
RBAJRN2  DS    FL4
         ORG   RBAJOURN+8
MRGEPARM DS    CL20
         ORG   MRGEPARM
VAMBLKAD DS    AL4
@NM00172 DS    CL4
         ORG   @NM00172
VAMBLKID DS    CL1
VAMLNGTH DS    CL3
         ORG   MRGEPARM+8
VAMRBN   DS    CL4
VAMNVA   DS    AL4
VAMGETAD DS    AL4
         ORG   MRGEPARM+20
ALLOCRBA DS    CL8
CHKPTID  DS    CL16
BEGINRBA DS    CL8
JOBNAME  DS    CL8
FIELD    DS    57CL4
FIELD1   DS    57CL4
IEFXB601 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02872 DC    V(IDDWIMRG)
@CV02873 DC    V(IDAVBPJ2)
@CV02874 DC    V(IEFXB603)
         DS    0D
@CC02950 DC    C'MG02'
@CC02951 DC    C'MG03'
@CC02952 DC    C'MG09'
@CC02923 DC    C'RL'
JCTFSR   DS    CL2
         ORG   JCTFSR+0
JCTFSRLN DC    AL1(JCTSDKAD-JCTJSRNO)
JCTFSRDL DC    AL1(JCTJSRNO)
         ORG   JCTFSR+2
         ORG   JCTFSR+2
         DC    AL1(JCTDETDA-JCTSMRBA)
         DC    AL1(JCTSMRBA)
         ORG   JCTFSR+4
         ORG   JCTFSR+4
         DC    AL1(JCTSSTR-JCTEQREG)
         DC    AL1(JCTEQREG)
         ORG   JCTFSR+6
         ORG   JCTFSR+6
         DC    AL1(JCTJMR-JCTSTAT2)
         DC    AL1(JCTSTAT2)
         ORG   JCTFSR+8
         ORG   JCTFSR+8
         DC    AL1(1)
         DC    AL1(JCTJMRD)
         ORG   JCTFSR+10
         ORG   JCTFSR+10
         DC    AL1(JCTVULDP+3-JCTJMRCL)
         DC    AL1(JCTJMRCL)
         ORG   JCTFSR+12
SCTFSR   DS    CL2
         ORG   SCTFSR+0
SCTFSRLN DC    AL1(SCTANSCT-SCTSSTAT)
SCTFSRDL DC    AL1(SCTSSTAT)
         ORG   SCTFSR+2
         ORG   SCTFSR+2
         DC    AL1(SCTAFACT-SCTLSIOT)
         DC    AL1(SCTLSIOT)
         ORG   SCTFSR+4
         ORG   SCTFSR+4
         DC    AL1(SCTXBTTR-SCTSCLPC)
         DC    AL1(SCTSCLPC)
         ORG   SCTFSR+6
         ORG   SCTFSR+6
         DC    AL1(SCTPCAT-SCTMSADR)
         DC    AL1(SCTMSADR)
         ORG   SCTFSR+8
         ORG   SCTFSR+8
         DC    AL1(SCTGOTTR-SCTMSSZE)
         DC    AL1(SCTMSSZE)
         ORG   SCTFSR+10
         ORG   SCTFSR+10
         DC    AL1(SCTCDENT-SCTSTAT2)
         DC    AL1(SCTSTAT2)
         ORG   SCTFSR+12
         ORG   SCTFSR+12
         DC    AL1(INSMSCT+176-SCTCATCT+6)
         DC    AL1(SCTCDENT+42)
         ORG   SCTFSR+14
SIOTFSR  DS    CL2
         ORG   SIOTFSR+0
SIOTFSRL DC    AL1(SCTPJFCB-SIOTTYPE)
SIOTFSRD DC    AL1(SIOTTYPE)
         ORG   SIOTFSR+2
         ORG   SIOTFSR+2
         DC    AL1(SIOTSSWA-SIOTOTUN)
         DC    AL1(SIOTOTUN)
         ORG   SIOTFSR+4
         ORG   SIOTFSR+4
         DC    AL1(SIOTETIO-SIOTOUTC)
         DC    AL1(SIOTOUTC)
         ORG   SIOTFSR+6
         ORG   SIOTFSR+6
         DC    AL1(SIODDSNL+1-SIOTNPTR)
         DC    AL1(SIOTNPTR)
         ORG   SIOTFSR+8
SIOTDFSR DS    CL2
         ORG   SIOTDFSR+0
SIOTDSRL DC    AL1(SIOTSSWA-SIOTDSKA)
SIOTDSRD DC    AL1(SIOTDSKA)
         ORG   SIOTDFSR+2
         ORG   SIOTDFSR+2
         DC    AL1(SIOTETIO-SIOTOUTC)
         DC    AL1(SIOTOUTC)
         ORG   SIOTDFSR+4
         ORG   SIOTDFSR+4
         DC    AL1(SIODDSNL+1-SIOTNPTR)
         DC    AL1(SIOTNPTR)
         ORG   SIOTDFSR+6
JFCBFSR  DS    CL2
         ORG   JFCBFSR+0
JFCBFSRL DC    AL1(JFCBEND-INFMJFCB)
JFCBFSRD DC    AL1(JFCBDSNM)
         ORG   JFCBFSR+2
JFCBXFSR DS    CL2
         ORG   JFCBXFSR+0
JFCBXSRL DC    AL1(176)
JFCBXSRD DC    AL1(JFCBXTTR)
         ORG   JFCBXFSR+2
JFCBEFSR DS    CL2
         ORG   JFCBEFSR+0
JFCBESRL DC    AL1(176)
JFCBESRD DC    AL1(JFCBEXTR)
         ORG   JFCBEFSR+2
PDIBFSR  DS    CL2
         ORG   PDIBFSR+0
PDIBFSRL DC    AL1(176)
PDIBFSRD DC    AL1(PDIBLOCK)
         ORG   PDIBFSR+2
GDGFSR   DS    CL2
         ORG   GDGFSR+0
GDGFSRL  DC    AL1(176)
GDGFSRD  DC    AL1(GDGNT)
         ORG   GDGFSR+2
VUTFSR   DS    CL2
         ORG   VUTFSR+0
VUTFSRLN DC    AL1(VUTENTRY+168-VUNLDTAB)
VUTFSRDL DC    AL1(VUNLDTAB)
         ORG   VUTFSR+2
ACTFSR   DS    CL2
         ORG   ACTFSR+0
ACTFSRLN DC    AL1(3)
ACTFSRDL DC    AL1(ACTJTIME)
         ORG   ACTFSR+2
JCTGUPDT DS    CL2
         ORG   JCTGUPDT+0
JCTGUPDL DC    AL1(3)
JCTGUPDD DC    AL1(JCTPDIP)
         ORG   JCTGUPDT+2
         ORG   JCTGUPDT+2
         DC    AL1(3)
         DC    AL1(JCTGDGNT)
         ORG   JCTGUPDT+4
         ORG   JCTGUPDT+4
         DC    AL1(3)
         DC    AL1(JCTCKTTR)
         ORG   JCTGUPDT+6
         ORG   JCTGUPDT+6
         DC    AL1(3)
         DC    AL1(JCTVULDP)
         ORG   JCTGUPDT+8
SCTGUPDT DS    CL2
         ORG   SCTGUPDT+0
SCTGUPDL DC    AL1(3)
SCTGUPDD DC    AL1(SCTFSIOT)
         ORG   SCTGUPDT+2
         ORG   SCTGUPDT+2
         DC    AL1(3)
         DC    AL1(SCTLSIOT)
         ORG   SCTGUPDT+4
SIOTGJUP DS    CL2
         ORG   SIOTGJUP+0
SIOTGJUL DC    AL1(3)
SIOTGJUD DC    AL1(SCTPSIOT)
         ORG   SIOTGJUP+2
SIOTGDUP DS    CL2
         ORG   SIOTGDUP+0
SIOTGDUL DC    AL1(3)
SIOTGDUD DC    AL1(SIOTDSKA)
         ORG   SIOTGDUP+2
         ORG   SIOTGDUP+2
         DC    AL1(3)
         DC    AL1(SCTPSIOT)
         ORG   SIOTGDUP+4
         ORG   SIOTGDUP+4
         DC    AL1(3)
         DC    AL1(SCTPJFCB)
         ORG   SIOTGDUP+6
         ORG   SIOTGDUP+6
         DC    AL1(3)
         DC    AL1(SIOTVRSB)
         ORG   SIOTGDUP+8
JFCBGUP  DS    CL2
         ORG   JFCBGUP+0
JFCBGUPL DC    AL1(3)
JFCBGUPD DC    AL1(JFCBEXAD)
         ORG   JFCBGUP+2
JFCBXGUP DS    CL2
         ORG   JFCBXGUP+0
JFCBXGUL DC    AL1(3)
JFCBXGUD DC    AL1(JFCBXTTR)
         ORG   JFCBXGUP+2
JFCBEGUP DS    CL2
         ORG   JFCBEGUP+0
JFCBEGUL DC    AL1(3)
JFCBEGUD DC    AL1(JFCBEXTR)
         ORG   JFCBEGUP+2
GDGGUPDT DS    CL2
         ORG   GDGGUPDT+0
GDGGUPDL DC    AL1(3)
GDGGUPDD DC    AL1(GNTNEXTP)
         ORG   GDGGUPDT+2
PDIBGUPD DS    CL2
         ORG   PDIBGUPD+0
PDIBGUPL DC    AL1(3)
PDIBGUDP DC    AL1(PDINPDIP)
         ORG   PDIBGUPD+2
         ORG   PDIBGUPD+2
         DC    AL1(3)
         DC    AL1(PDISIOTA+8)
         ORG   PDIBGUPD+4
         ORG   PDIBGUPD+4
         DC    AL1(3)
         DC    AL1(PDISIOTA+64)
         ORG   PDIBGUPD+6
         ORG   PDIBGUPD+6
         DC    AL1(3)
         DC    AL1(PDISIOTA+120)
         ORG   PDIBGUPD+8
VUTGUPDT DS    CL2
         ORG   VUTGUPDT+0
VUTGUPL  DC    AL1(3)
VUTGUPD  DC    AL1(VUTNSVA)
         ORG   VUTGUPDT+2
VDSCBUPD DS    CL2
         ORG   VDSCBUPD+0
VDSCBGUL DC    AL1(4)
VDSCBGUD DC    AL1(VDSDSPCT)
         ORG   VDSCBUPD+2
JCTFCR   DS    CL2
         ORG   JCTFCR+0
JCTFCRLN DC    AL1(1)
JCTFCRDP DC    AL1(JCTSNUMB)
         ORG   JCTFCR+2
         ORG   JCTFCR+2
         DC    AL1(4)
         DC    AL1(JCTDEVT)
         ORG   JCTFCR+4
         ORG   JCTFCR+4
         DC    AL1(3)
         DC    AL1(JCTCKTTR)
         ORG   JCTFCR+6
         ORG   JCTFCR+6
         DC    AL1(2)
         DC    AL1(JCTNRCKP)
         ORG   JCTFCR+8
         ORG   JCTFCR+8
         DC    AL1(1)
         DC    AL1(JCTVOLSQ)
         ORG   JCTFCR+10
         ORG   JCTFCR+10
         DC    AL1(1)
         DC    AL1(JCTJSB)
         ORG   JCTFCR+12
         ORG   JCTFCR+12
         DC    AL1(3)
         DC    AL1(JCTSSTR)
         ORG   JCTFCR+14
         ORG   JCTFCR+14
         DC    AL1(1)
         DC    AL1(JCTCKIDL)
         ORG   JCTFCR+16
         ORG   JCTFCR+16
         DC    AL1(16)
         DC    AL1(JCTCKIDT)
         ORG   JCTFCR+18
         ORG   JCTFCR+18
         DC    AL1(8)
         DC    AL1(JCTSMRBA)
         ORG   JCTFCR+20
         ORG   JCTFCR+20
         DC    AL1(4)
         DC    AL1(JCTSRBT)
         ORG   JCTFCR+22
         ORG   JCTFCR+22
         DC    AL1(3)
         DC    AL1(JCTJMRJT)
         ORG   JCTFCR+24
         ORG   JCTFCR+24
         DC    AL1(3)
         DC    AL1(JCTJMRJD)
         ORG   JCTFCR+26
         ORG   JCTFCR+26
         DC    AL1(3)
         DC    AL1(JCTVULDP)
         ORG   JCTFCR+28
SCTCR    DS    CL2
         ORG   SCTCR+0
SCTFCRLN DC    AL1(3)
SCTFCRDP DC    AL1(SCTFSIOT)
         ORG   SCTCR+2
         ORG   SCTCR+2
         DC    AL1(3)
         DC    AL1(SCTLSIOT)
         ORG   SCTCR+4
         ORG   SCTCR+4
         DC    AL1(4)
         DC    AL1(SCTSRBT)
         ORG   SCTCR+6
SIOTCRJ  DS    CL2
         ORG   SIOTCRJ+0
SIOTCRJL DC    AL1(3)
SIOTCRJD DC    AL1(SCTPSIOT)
         ORG   SIOTCRJ+2
         ORG   SIOTCRJ+2
         DC    AL1(2)
         DC    AL1(SIOTUNAF)
         ORG   SIOTCRJ+4
SIOTCRD  DS    CL2
         ORG   SIOTCRD+0
SIOTCRDL DC    AL1(SIOTSSWA-SIOTDSKA)
SIOTCRDD DC    AL1(SIOTDSKA)
         ORG   SIOTCRD+2
         ORG   SIOTCRD+2
         DC    AL1(SIOTRSNC-SIOTOUTC)
         DC    AL1(SIOTOUTC)
         ORG   SIOTCRD+4
         ORG   SIOTCRD+4
         DC    AL1(SIODDSNL+1-SIOTNPTR)
         DC    AL1(SIOTNPTR)
         ORG   SIOTCRD+6
JFCBCR   DS    CL2
         ORG   JFCBCR+0
JFCBCRL  DC    AL1(JFCBEND-INFMJFCB)
JFCBCRD  DC    AL1(JFCBDSNM)
         ORG   JFCBCR+2
JFCBXCR  DS    CL2
         ORG   JFCBXCR+0
JFCBXCRL DC    AL1(176)
JFCBXCRD DC    AL1(JFCBXTTR)
         ORG   JFCBXCR+2
JJFCBCR  DS    CL2
         ORG   JJFCBCR+0
JJFCBCRL DC    AL1(JFCBNTCS-JFCBDSNM)
JJFCBCRD DC    AL1(JFCBDSNM)
         ORG   JJFCBCR+2
         ORG   JJFCBCR+2
         DC    AL1(JFCBEND-JFCBEXTL)
         DC    AL1(JFCBEXTL)
         ORG   JJFCBCR+4
JCTFST   DS    CL2
         ORG   JCTFST+0
JCTFSTLN DC    AL1(1)
JCTFSTDP DC    AL1(JCTSNUMB)
         ORG   JCTFST+2
         ORG   JCTFST+2
         DC    AL1(1)
         DC    AL1(JCTJSB)
         ORG   JCTFST+4
         ORG   JCTFST+4
         DC    AL1(3)
         DC    AL1(JCTSSTR)
         ORG   JCTFST+6
         ORG   JCTFST+6
         DC    AL1(8)
         DC    AL1(JCTSMRBA)
         ORG   JCTFST+8
         ORG   JCTFST+8
         DC    AL1(4)
         DC    AL1(JCTSRBT)
         ORG   JCTFST+10
         ORG   JCTFST+10
         DC    AL1(3)
         DC    AL1(JCTJMRJT)
         ORG   JCTFST+12
         ORG   JCTFST+12
         DC    AL1(3)
         DC    AL1(JCTJMRJD)
         ORG   JCTFST+14
         ORG   JCTFST+14
         DC    AL1(3)
         DC    AL1(JCTVULDP)
         ORG   JCTFST+16
SCTFST   DS    CL2
         ORG   SCTFST+0
SCTFSTLN DC    AL1(4)
SCTFSTDP DC    AL1(SCTSRBT)
         ORG   SCTFST+2
ACTFST   DS    CL2
         ORG   ACTFST+0
ACTFSTLN DC    AL1(3)
ACTFSTDL DC    AL1(ACTJTIME)
         ORG   ACTFST+2
VUTFST   DS    CL2
         ORG   VUTFST+0
VUTFSTLN DC    AL1(VUTENTRY+168-VUNLDTAB)
VUTFSTDL DC    AL1(VUNLDTAB)
         ORG   VUTFST+2
TEMPSRFM DS    CL5
         ORG   TEMPSRFM+0
TEMPSRID DC    X'00'
TEMPSRAD DC    AL3(JCTFSR)
TEMPSRNO DC    AL1(6)
         ORG   TEMPSRFM+5
         ORG   TEMPSRFM+5
         DC    X'01'
         DC    AL3(ACTFSR)
         DC    AL1(1)
         ORG   TEMPSRFM+10
         ORG   TEMPSRFM+10
         DC    X'02'
         DC    AL3(SCTFSR)
         DC    AL1(7)
         ORG   TEMPSRFM+15
         ORG   TEMPSRFM+15
         DC    X'03'
         DC    AL3(SIOTFSR)
         DC    AL1(4)
         ORG   TEMPSRFM+20
         ORG   TEMPSRFM+20
         DC    X'1C'
         DC    AL3(JFCBFSR)
         DC    AL1(1)
         ORG   TEMPSRFM+25
         ORG   TEMPSRFM+25
         DC    X'1D'
         DC    AL3(JFCBXFSR)
         DC    AL1(1)
         ORG   TEMPSRFM+30
         ORG   TEMPSRFM+30
         DC    X'23'
         DC    AL3(GDGFSR)
         DC    AL1(1)
         ORG   TEMPSRFM+35
         ORG   TEMPSRFM+35
         DC    X'21'
         DC    AL3(PDIBFSR)
         DC    AL1(1)
         ORG   TEMPSRFM+40
         ORG   TEMPSRFM+40
         DC    X'26'
         DC    AL3(VUTFSR)
         DC    AL1(1)
         ORG   TEMPSRFM+45
         ORG   TEMPSRFM+45
         DC    X'FF'
         DC    AL3(SIOTDFSR)
         DC    AL1(3)
         ORG   TEMPSRFM+50
         ORG   TEMPSRFM+50
         DC    X'29'
         DC    AL3(JFCBEFSR)
         DC    AL1(1)
         ORG   TEMPSRFM+55
TEMPUPDT DS    CL5
         ORG   TEMPUPDT+0
TEMPUPID DC    X'00'
TEMPUPAD DC    AL3(JCTGUPDT)
TEMPUPNO DC    AL1(4)
         ORG   TEMPUPDT+5
         ORG   TEMPUPDT+5
         DC    X'02'
         DC    AL3(SCTGUPDT)
         DC    AL1(2)
         ORG   TEMPUPDT+10
         ORG   TEMPUPDT+10
         DC    X'03'
         DC    AL3(SIOTGJUP)
         DC    AL1(1)
         ORG   TEMPUPDT+15
         ORG   TEMPUPDT+15
         DC    X'1C'
         DC    AL3(JFCBGUP)
         DC    AL1(1)
         ORG   TEMPUPDT+20
         ORG   TEMPUPDT+20
         DC    X'1D'
         DC    AL3(JFCBXGUP)
         DC    AL1(1)
         ORG   TEMPUPDT+25
         ORG   TEMPUPDT+25
         DC    X'23'
         DC    AL3(GDGGUPDT)
         DC    AL1(1)
         ORG   TEMPUPDT+30
         ORG   TEMPUPDT+30
         DC    X'21'
         DC    AL3(PDIBGUPD)
         DC    AL1(4)
         ORG   TEMPUPDT+35
         ORG   TEMPUPDT+35
         DC    X'26'
         DC    AL3(VUTGUPDT)
         DC    AL1(1)
         ORG   TEMPUPDT+40
         ORG   TEMPUPDT+40
         DC    X'FC'
         DC    AL3(VDSCBUPD)
         DC    AL1(1)
         ORG   TEMPUPDT+45
         ORG   TEMPUPDT+45
         DC    X'FF'
         DC    AL3(SIOTGDUP)
         DC    AL1(4)
         ORG   TEMPUPDT+50
         ORG   TEMPUPDT+50
         DC    X'29'
         DC    AL3(JFCBEGUP)
         DC    AL1(1)
         ORG   TEMPUPDT+55
TEMPCRFM DS    CL5
         ORG   TEMPCRFM+0
TEMPCRID DC    X'00'
TEMPCRAD DC    AL3(JCTFCR)
TEMPCRNO DC    AL1(14)
         ORG   TEMPCRFM+5
         ORG   TEMPCRFM+5
         DC    X'01'
         DC    AL3(ACTFSR)
         DC    AL1(1)
         ORG   TEMPCRFM+10
         ORG   TEMPCRFM+10
         DC    X'02'
         DC    AL3(SCTCR)
         DC    AL1(3)
         ORG   TEMPCRFM+15
         ORG   TEMPCRFM+15
         DC    X'03'
         DC    AL3(SIOTCRJ)
         DC    AL1(2)
         ORG   TEMPCRFM+20
         ORG   TEMPCRFM+20
         DC    X'EE'
         DC    AL3(JFCBCR)
         DC    AL1(1)
         ORG   TEMPCRFM+25
         ORG   TEMPCRFM+25
         DC    X'1D'
         DC    AL3(JFCBXCR)
         DC    AL1(1)
         ORG   TEMPCRFM+30
         ORG   TEMPCRFM+30
         DC    X'26'
         DC    AL3(VUTFSR)
         DC    AL1(1)
         ORG   TEMPCRFM+35
         ORG   TEMPCRFM+35
         DC    X'1C'
         DC    AL3(JJFCBCR)
         DC    AL1(2)
         ORG   TEMPCRFM+40
         ORG   TEMPCRFM+40
         DC    X'FF'
         DC    AL3(SIOTCRD)
         DC    AL1(3)
         ORG   TEMPCRFM+45
         ORG   TEMPCRFM+45
         DC    X'29'
         DC    AL3(JFCBEFSR)
         DC    AL1(1)
         ORG   TEMPCRFM+50
PATCH    DC    100X'00'
@DATD    DSECT
*                                     /* GET AREA FOR WTO LIST      */
WTOLIST WTO '                                                         **
                              ',MF=L,ROUTCDE=2,DESC=6
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFXB601 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SLOT     EQU   @02
SAVEVAT  EQU   @03
JNLBLKAD EQU   @03
TEMPNO   EQU   @03
VATCOUNT EQU   @04
SVAENTRY EQU   @06
COUNTER  EQU   @04
R        EQU   @03
XCPTR    EQU   @04
OVATPTR  EQU   @05
CVATPTR  EQU   @03
BLKENTRY EQU   @07
RCAREA   EQU   @05
NUMBER   EQU   @03
TEMPPTR  EQU   @06
ENDFIELD EQU   @04
BEGINFLD EQU   @02
RPLPTR   EQU   @04
VATPTR   EQU   @02
EPAPTR   EQU   @04
JSCBPTR  EQU   @08
LCTPTR   EQU   @06
JFCBPTR  EQU   @10
RETCODE  EQU   @15
R2       EQU   @02
R1       EQU   @01
LEN      EQU   @00
R0       EQU   @00
CVTPTR   EQU   16
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBPTRS  EQU   0
TCBPTR   EQU   TCBPTRS+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
INJMJCT  EQU   0
JCTJSRNO EQU   INJMJCT+4
JCTJSTAT EQU   INJMJCT+5
JCTABEND EQU   JCTJSTAT
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTJNAME EQU   INJMJCT+8
JCTPDIP  EQU   INJMJCT+24
JCTGDGNT EQU   INJMJCT+28
JCTSDKAD EQU   INJMJCT+32
JCTSMRBA EQU   INJMJCT+44
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTWARMS EQU   JCTRSW1
JCTCKFT  EQU   JCTRSW1
JCTRSW2  EQU   INJMJCT+87
JCTDETDA EQU   INJMJCT+88
JCTEQREG EQU   INJMJCT+92
JCTSNUMB EQU   INJMJCT+95
JCTDEVT  EQU   INJMJCT+100
JCTCKTTR EQU   INJMJCT+104
JCTNRCKP EQU   INJMJCT+108
JCTVOLSQ EQU   INJMJCT+110
JCTJSB   EQU   INJMJCT+111
JCTSSTR  EQU   INJMJCT+112
JCTSTAT2 EQU   INJMJCT+116
JCTCKIDL EQU   INJMJCT+117
JCTCKIDT EQU   INJMJCT+118
JCTJMR   EQU   INJMJCT+134
JCTJMRD  EQU   INJMJCT+137
JCTJMRCL EQU   INJMJCT+139
JCTJMRJT EQU   INJMJCT+146
JCTJMRJD EQU   INJMJCT+149
JCTSRBT  EQU   INJMJCT+152
JCTVULDP EQU   INJMJCT+172
IEFAACTB EQU   0
ACTJTIME EQU   IEFAACTB+28
INSMSCT  EQU   0
SCTSSTAT EQU   INSMSCT+4
SCTFSIOT EQU   INSMSCT+12
SCTANSCT EQU   INSMSCT+20
SCTLSIOT EQU   INSMSCT+24
SCTAFACT EQU   INSMSCT+32
SCTSCLPC EQU   INSMSCT+44
SCTSTYPE EQU   INSMSCT+67
SCTXBTTR EQU   INSMSCT+68
SCTMSADR EQU   INSMSCT+72
SCTSRBT  EQU   INSMSCT+76
SCTPCAT  EQU   INSMSCT+84
SCTMSSZE EQU   INSMSCT+88
SCTSDPTY EQU   INSMSCT+94
SCTGOTTR EQU   INSMSCT+100
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTCDENT EQU   INSMSCT+118
SCTCATCT EQU   INSMSCT+166
SCTSTEND EQU   INSMSCT+172
@NM00050 EQU   0
SCTABCND EQU   @NM00050
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCCAT   EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCGDG   EQU   JFCBIND1
JFCBIND2 EQU   INFMJFCB+87
JFCDISP  EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCTEMP  EQU   JFCBIND2
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
JFCBX    EQU   0
JFCBXTTR EQU   JFCBX
JFCBE    EQU   0
JFCBEXTR EQU   JFCBE
JFCBFLAG EQU   JFCBE+4
JFCGROUP EQU   JFCBE+36
QMPA     EQU   0
QMNAM    EQU   QMPA
QMPOP    EQU   QMPA+8
QMSTA    EQU   QMPA+16
QMPCL    EQU   QMPA+32
QMPCMNC  EQU   QMPCL
QMPACL   EQU   QMPCL+1
SWAQMPA  EQU   0
QMRBN    EQU   SWAQMPA+12
SWAPFX   EQU   0
SWPSTA   EQU   SWAPFX+4
INDMSIOT EQU   0
SIOTDSKA EQU   INDMSIOT
SIOTTYPE EQU   INDMSIOT+3
SCTUSADD EQU   INDMSIOT+20
SIOTUNAF EQU   SCTUSADD
SCTPSIOT EQU   INDMSIOT+28
SCTPJFCB EQU   INDMSIOT+32
SIOTVRSB EQU   INDMSIOT+36
SIOTOTUN EQU   INDMSIOT+39
SIOTBYT1 EQU   INDMSIOT+43
SIOVAMDS EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIOTBYT3 EQU   INDMSIOT+46
SIOALIAS EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTSBYT2 EQU   INDMSIOT+57
SIOCLUNL EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTRECVD EQU   SCTSBYT2
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SIOTIPDI EQU   SCTSBYT4
SIOTOMN  EQU   SCTSBYT4
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOUCBAD EQU   SCTUTYPE+5
SIOTBYT4 EQU   INDMSIOT+81
SIOTALTD EQU   INDMSIOT+92
SIOTNPRV EQU   SIOTALTD
SIOTSSWA EQU   INDMSIOT+93
SIOTOUTC EQU   INDMSIOT+96
SIOTBYT2 EQU   INDMSIOT+103
SIOTDSPD EQU   SIOTBYT2
SIOTRSNC EQU   INDMSIOT+130
SIOTETIO EQU   INDMSIOT+148
SIOTNPTR EQU   INDMSIOT+152
SIODDSNL EQU   INDMSIOT+173
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESSSREQ EQU   JESCT+20
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SWAMGR   EQU   0
PDIBLOCK EQU   0
PDINPDIP EQU   PDIBLOCK
PDIENTRY EQU   PDIBLOCK+8
PDIE     EQU   0
PDIUNWA  EQU   PDIE+44
PDISIOTA EQU   PDIE+48
GDGNT    EQU   0
GNTNEXTP EQU   GDGNT
GNTGRPEN EQU   GDGNT+8
VAT      EQU   0
VATX     EQU   VAT
VATBPTR  EQU   VAT+4
VATNO    EQU   VAT+8
VATENTRY EQU   VAT+12
VATRBN   EQU   VATENTRY
VATOVA   EQU   VATENTRY+4
VATROVA  EQU   VATOVA
VATNVA   EQU   VATENTRY+8
VATRNVA  EQU   VATNVA
VATBLKID EQU   VATENTRY+12
VATMSW   EQU   VATENTRY+13
VATNUPDT EQU   VATMSW
VATDYNAM EQU   VATMSW
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00093 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00120 EQU   LCT+76
LCTINTSW EQU   @NM00120
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
QMGR1    EQU   LCT+248
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
@NM00146 EQU   LCT+356
LCTOPSW2 EQU   @NM00146
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
LCTRFBSM EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
@NM00159 EQU   LCT+420
LCTINTS2 EQU   @NM00159+1
SWAEPA   EQU   0
SWBLKPTR EQU   SWAEPA
SWVAFW   EQU   SWAEPA+4
SWVA     EQU   SWVAFW
SWBLKID  EQU   SWVAFW+3
SWCHNPTR EQU   SWAEPA+12
VUNLDTAB EQU   0
VUTNSVA  EQU   VUNLDTAB
VUTENTRY EQU   VUNLDTAB+8
VUTENFLG EQU   VUTENTRY
SWAMMEPA EQU   0
SWBUFPTR EQU   SWAMMEPA
SWASNVA  EQU   SWBUFPTR
SWROWVA  EQU   SWAMMEPA+4
SWWRTID  EQU   SWAMMEPA+7
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLSEQ   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLBUFL  EQU   RPLCOMN+52
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
VDSCB    EQU   0
VDSDSPCT EQU   VDSCB+52
SWAAREA  EQU   0
CBTEMP   EQU   0
FLDLNGTH EQU   CBTEMP
FLDDISPL EQU   CBTEMP+1
TABLE    EQU   0
ID       EQU   TABLE
LNGTH    EQU   TABLE+4
ADDRESS  EQU   TABLE+5
MSG      EQU   0
MESS1    EQU   0
XCAREA   EQU   0
MYSWA    EQU   16
SHR      EQU   0
SHRSNUMB EQU   SHR
SHRMRBA  EQU   SHR+2
SHRJRBA  EQU   SHR+10
PDSNTAB  EQU   0
PDSNX    EQU   PDSNTAB
PDSNNO   EQU   PDSNTAB+4
PDSNENT  EQU   PDSNTAB+5
OLDDSN   EQU   PDSNENT
NEWDSN   EQU   PDSNENT+44
JHR      EQU   0
JHRJRBA  EQU   JHR+2
JHRALRBA EQU   JHR+10
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
INDMDSNT EQU   0
SSREQ    EQU   0
MEL      EQU   0
MELLCTAD EQU   MEL
MELINFO  EQU   MEL+4
MELRSTRT EQU   MELINFO+1
MELSCTNO EQU   MELINFO+2
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBJNLN EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLR EQU   JSCBSEC3+32
JSCBSMLR EQU   JSCBSEC3+36
JSCBSUB  EQU   JSCBSEC3+40
JSCBFRBA EQU   JSCBSEC3+48
JSCSCT   EQU   JSCBSEC3+68
JSCBVATA EQU   JSCBSEC3+76
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCORGAM EQU   JFCDSRG2
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBNTCS EQU   JFCUCSEG+8
JFCBNVOL EQU   JFCUCSEG+9
JFCBVOLS EQU   JFCUCSEG+10
JFCBS001 EQU   JFCBVOLS
JFCBEXTL EQU   JFCBS001+30
JFCBEXAD EQU   JFCBS001+31
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
JFCBSPNM EQU   JFCBS001+45
JFCBFLG3 EQU   JFCBSPNM
JFCBEND  EQU   JFCBS001+58
*                                      START UNREFERENCED COMPONENTS
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBRV08 EQU   JFCBSPNM+1
JFCBRV07 EQU   JFCBFLG3
JFCBRV06 EQU   JFCBFLG3
JFCBRV05 EQU   JFCBFLG3
JFCBRV04 EQU   JFCBFLG3
JFCBRV03 EQU   JFCBFLG3
JFCBRV02 EQU   JFCBFLG3
JFCBEXP  EQU   JFCBFLG3
JFCDQDSP EQU   JFCBFLG3
JFCBDQTY EQU   JFCBS001+42
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBMSGP EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCMSVGP EQU   JFCBS001+22
@NM00056 EQU   JFCBS001
JFCAVOLS EQU   JFCBVOLS
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCBEXTP EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00055 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00054 EQU   JFCLIMCT
JFCDEN   EQU   JFCSPPRT+1
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00010 EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
@NM00009 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00167 EQU   MELINFO
@NM00173 EQU   JHR
VDSDSCB  EQU   VDSCB+80
VDSRBN   EQU   VDSCB+76
VDSNMTRK EQU   VDSCB+74
VDSABSTT EQU   VDSCB+72
VDSWINSI EQU   VDSCB+70
VDSTRKSI EQU   VDSCB+68
VDSWINDW EQU   VDSCB+64
VDSVBPPL EQU   VDSCB+60
VDSWICB  EQU   VDSCB+56
VDSSEEKA EQU   VDSCB+45
VDSUCB   EQU   VDSCB
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00166 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00165 EQU   RPLRBAR+3
@NM00164 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00163 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
SWASNZO  EQU   SWBUFPTR+3
VUTENVOL EQU   VUTENTRY+1
@NM00162 EQU   VUTENFLG
VUTUNLOD EQU   VUTENFLG
VUTENVIR EQU   VUTENFLG
VUTNPTR  EQU   VUNLDTAB+4
VUTENTNO EQU   VUNLDTAB+3
SWLNGTH  EQU   SWAEPA+8
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00161 EQU   LCT+436
LCTIMSG  EQU   LCT+432
LCTLBWAP EQU   LCT+428
@NM00160 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00159
LCTRFB1  EQU   LCT+419
@NM00158 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00157 EQU   LCTJCTDA+3
LCTJCTVA EQU   LCTJCTDA
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00156 EQU   LCT+364
@NM00155 EQU   LCTJSCB+1
@NM00154 EQU   LCTOPSW3
@NM00153 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00152 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00151 EQU   LCTOPSW3
@NM00150 EQU   @NM00146+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
@NM00149 EQU   LCTOPSW2
@NM00148 EQU   LCTOPSW2
@NM00147 EQU   LCTOPSW2
LCTCKRST EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00145 EQU   LCTEXIT+1
@NM00144 EQU   LCTOPSW1
@NM00143 EQU   LCTOPSW1
LCTONEJF EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00142 EQU   LCTOPSW1
@NM00141 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00140 EQU   LCTTSRB4
@NM00139 EQU   LCT+340
@NM00138 EQU   LCTSPIL+3
@NM00137 EQU   LCTALCFG
@NM00136 EQU   LCTALCFG
@NM00135 EQU   LCTALCFG
@NM00134 EQU   LCTALCFG
@NM00133 EQU   LCTALCFG
@NM00132 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00131 EQU   ECBLIST+1
@NM00130 EQU   ECBLIST
LCTJMRAD EQU   LCT+324
LCTASCBA EQU   LCT+320
@NM00129 EQU   LCT+284
REGSAVE  EQU   LCT+104
@NM00128 EQU   LCTATLST+1
@NM00127 EQU   LCTATLST
@NM00126 EQU   LCTJOBLB+1
@NM00125 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00124 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00123 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00122 EQU   LCTTJTU4
@NM00121 EQU   @NM00120+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00119 EQU   LCTSREG+1
@NM00118 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00117 EQU   LCTSMBAD+1
@NM00116 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
LCTSNUMB EQU   LCT+58
@NM00115 EQU   LCTJFCBH
@NM00114 EQU   LCTJFCBH
@NM00113 EQU   LCTJFCBH
@NM00112 EQU   LCTJFCBH
@NM00111 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00110 EQU   LCTCMCBA+1
@NM00109 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTPARM2 EQU   LCT+40
LCTPARM1 EQU   LCT+36
LCTJCFAL EQU   LCTERR
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
LCTJFAIL EQU   LCTERR
@NM00108 EQU   LCTPSPAR+1
@NM00107 EQU   LCTPSPAR
@NM00106 EQU   LCTWORKA+3
LCTSCTVA EQU   LCTWORKA
@NM00105 EQU   LCTSCTAD+1
@NM00104 EQU   LCTSCTAD
@NM00103 EQU   LCTJCTAD+1
@NM00102 EQU   LCTJCTAD
@NM00101 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00093
@NM00100 EQU   @NM00093
@NM00099 EQU   @NM00093
@NM00098 EQU   @NM00093
@NM00097 EQU   @NM00093
@NM00096 EQU   @NM00093
@NM00095 EQU   @NM00093
@NM00094 EQU   @NM00093
@NM00092 EQU   LCTTCBAD+1
@NM00091 EQU   LCTTCBAD
@NM00090 EQU   LCTSRTAD+1
@NM00089 EQU   LCTSRTAD
@NM00088 EQU   LCTQDRTY+1
@NM00087 EQU   LCTQDRTY
@NM00086 EQU   VATMSW
@NM00085 EQU   VATNVA+3
@NM00084 EQU   VATOVA+3
@NM00083 EQU   VAT+9
@NM00082 EQU   GDGNT+165
GNTENT   EQU   GDGNT+164
GNTBASE  EQU   GNTGRPEN+35
GNTNAME  EQU   GNTGRPEN
GNTNEXTR EQU   GDGNT+4
GNTID    EQU   GDGNT+3
PDISIOTP EQU   PDIE+52
@NM00081 EQU   PDIE+51
PDISTPNO EQU   PDIE+46
@NM00080 EQU   PDIE+45
@NM00079 EQU   PDIUNWA
PDIJOBLB EQU   PDIUNWA
@NM00078 EQU   PDIUNWA
PDIPASIN EQU   PDIUNWA
PDICSTAT EQU   PDIUNWA
PDIISTAT EQU   PDIUNWA
PDIDSNAM EQU   PDIE
PDIBNXTP EQU   PDIBLOCK+4
PDICTR   EQU   PDIBLOCK+3
JESSASTA EQU   JESCT+48
JESNUCBS EQU   JESCT+44
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESQMGR  EQU   JESCT+12
JESUNITS EQU   JESCT+4
@NM00077 EQU   JESCT
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SVOLUNNO EQU   INDMSIOT+168
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTATE  EQU   INDMSIOT+144
SVOLUNAD EQU   INDMSIOT+140
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SCTANAME EQU   INDMSIOT+122
SIOTSSIC EQU   INDMSIOT+120
@NM00076 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
@NM00075 EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00074 EQU   SIOTALTD
@NM00073 EQU   SIOTALTD
@NM00072 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00071 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00070 EQU   SIOTBYT4
SIOTRACT EQU   SIOTBYT4
SIOTRACD EQU   SIOTBYT4
SIOTPROT EQU   SIOTBYT4
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00069 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00068 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
SCTALCHK EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTJOBLB EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
SIOTRETN EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
SIOTDSNM EQU   SIOTTSTC
SIOTTRKM EQU   SIOTTSTC
SIOTSSMG EQU   SIOTTSTC
SIOTSSGP EQU   SIOTTSTC
@NM00067 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
SIOTINFC EQU   SIOTTSTC
@NM00066 EQU   SIOTBYT3
SIOTDSID EQU   SIOTBYT3
S3400OFF EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
@NM00065 EQU   INDMSIOT+35
@NM00064 EQU   INDMSIOT+31
SIOTAFID EQU   INDMSIOT+26
SIOTVLSP EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTDEST EQU   INDMSIOT+12
SCTDDNAM EQU   INDMSIOT+4
SWPACRO  EQU   SWAPFX+12
SWPLNGTH EQU   SWAPFX+9
SWPID    EQU   SWAPFX+8
SWPVA    EQU   SWAPFX+5
@NM00063 EQU   SWPSTA
SWPWRT   EQU   SWPSTA
SWPRBN   EQU   SWAPFX
@NM00062 EQU   SWAQMPA+1
QMSWSP   EQU   SWAQMPA
QMPNC    EQU   QMPCMNC
QMPCM    EQU   QMPCMNC
QMEIA    EQU   QMPA+28
QMWTQ    EQU   QMPA+24
QMRSD1   EQU   QMPA+22
QMTID    EQU   QMPA+20
QMLNK    EQU   QMPA+18
QMPRI    EQU   QMPA+17
@NM00061 EQU   QMSTA
QMSJNL   EQU   QMSTA
@NM00060 EQU   QMSTA
QMTPY    EQU   QMPA+15
QMNOT    EQU   QMPA+14
QMTLN    EQU   QMPA+12
QMTST    EQU   QMPA+11
QMFLT    EQU   QMPA+9
QMPEB    EQU   QMNAM+4
QMCAN    EQU   QMNAM
JFCBE010 EQU   JFCBE+44
JFCGRP8  EQU   JFCGROUP+7
JFCGRP7  EQU   JFCGROUP+6
JFCGRP6  EQU   JFCGROUP+5
JFCGRP5  EQU   JFCGROUP+4
JFCGRP4  EQU   JFCGROUP+3
JFCGRP3  EQU   JFCGROUP+2
JFCGRP2  EQU   JFCGROUP+1
JFCGRP1  EQU   JFCGROUP
JFCBTRS4 EQU   JFCBE+32
JFCBTRS3 EQU   JFCBE+28
JFCBTRS2 EQU   JFCBE+24
JFCBTRS1 EQU   JFCBE+20
JFCBE009 EQU   JFCBE+16
JFCMODIF EQU   JFCBE+12
JFCBMAGT EQU   JFCBE+8
JFCIMTOT EQU   JFCBE+7
JFCBE008 EQU   JFCBE+6
JFCIDTRC EQU   JFCBE+5
JFCBE007 EQU   JFCBFLAG
JFCBBST  EQU   JFCBFLAG
JFCBCFS  EQU   JFCBFLAG
JFCBE006 EQU   JFCBFLAG
JFCBE005 EQU   JFCBFLAG
JFCBE004 EQU   JFCBFLAG
JFCBE003 EQU   JFCBFLAG
JFCBEOPN EQU   JFCBFLAG
JFCBE001 EQU   JFCBE+3
JFCBXNXT EQU   JFCBX+172
@NM00059 EQU   JFCBX+144
JFCBXDEV EQU   JFCBX+140
JFCBXNAM EQU   JFCBX+96
@NM00058 EQU   JFCBX+94
JFCBXVOL EQU   JFCBX+4
@NM00057 EQU   JFCBX+3
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCREQ   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00053 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
@NM00052 EQU   @NM00050+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00051 EQU   SCTABCND
@NM00049 EQU   INSMSCT+173
@NM00048 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00047 EQU   INSMSCT+168
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00046 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTPGMNM EQU   INSMSCT+108
SCTTIOT  EQU   INSMSCT+105
@NM00045 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00044 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00043 EQU   SCTBCT
SCTSMF   EQU   INSMSCT+96
@NM00042 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00041 EQU   SCTSDPTY
@NM00040 EQU   SCTSDPTY
SCTNIUSL EQU   INSMSCT+92
@NM00039 EQU   INSMSCT+90
SCTLDSTB EQU   INSMSCT+80
@NM00038 EQU   INSMSCT+71
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
SCTGOSTP EQU   SCTSTYPE
@NM00037 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
SCTSNUMB EQU   INSMSCT+64
@NM00036 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
SCTSNAME EQU   INSMSCT+52
@NM00035 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00034 EQU   INSMSCT+36
@NM00033 EQU   INSMSCT+35
SCTDDNT  EQU   INSMSCT+28
@NM00032 EQU   INSMSCT+27
@NM00031 EQU   INSMSCT+23
@NM00030 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00029 EQU   INSMSCT+15
SCTLALOC EQU   INSMSCT+10
SCTSEXEC EQU   INSMSCT+8
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
EAADDRBT EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
SCTDISKA EQU   INSMSCT
ACTACCNT EQU   IEFAACTB+32
ACTJNFLD EQU   IEFAACTB+31
ACTPRGNM EQU   IEFAACTB+8
@NM00028 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
@NM00027 EQU   INJMJCT+175
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTUSER  EQU   INJMJCT+160
JCTSSD   EQU   INJMJCT+157
@NM00026 EQU   INJMJCT+156
JCTJMRSS EQU   INJMJCT+143
JCTJMRTL EQU   INJMJCT+140
JCTJMROP EQU   INJMJCT+138
@NM00025 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00024 EQU   INJMJCT+115
JCTJSBTM EQU   JCTJSB
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00023 EQU   JCTJSB
JCTNTRK  EQU   INJMJCT+107
@NM00022 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTQIDNT EQU   INJMJCT+94
@NM00021 EQU   INJMJCT+91
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTNARST EQU   JCTRSW2
JCTSYSCK EQU   JCTRSW2
@NM00020 EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTCONTR EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
@NM00019 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00018 EQU   INJMJCT+53
JCTSCT   EQU   INJMJCT+52
@NM00017 EQU   INJMJCT+43
JCTACTAD EQU   INJMJCT+40
@NM00016 EQU   INJMJCT+39
JCTJCTX  EQU   INJMJCT+36
@NM00015 EQU   INJMJCT+35
JCTJCSMF EQU   INJMJCT+31
@NM00014 EQU   INJMJCT+27
JCTJTPTN EQU   INJMJCT+16
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00013 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
INCMSTS  EQU   JCTJSTAT
@NM00012 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00011 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTIDENT EQU   INJMJCT+3
JCTDSKAD EQU   INJMJCT
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00008 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00007 EQU   IEZJSCB
@NM00006 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00005 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00004 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00003 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
NTCBPTR  EQU   TCBPTRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
*                                      END UNREFERENCED COMPONENTS
@RF00330 EQU   @RC00323
@RC00328 EQU   @RC00323
@RC00344 EQU   @RC00341
@RF00391 EQU   @EL00002
@RC00413 EQU   @RC00412
@RF00409 EQU   @RC00406
@RF00447 EQU   @RC00406
@RF00470 EQU   @EL00004
@RC00486 EQU   @RC00483
@RF00495 EQU   @RC00491
@RC00614 EQU   @RC00613
@RF00624 EQU   @RC00613
@RF00626 EQU   @RC00613
@RF00790 EQU   @EL00012
@RC00865 EQU   @RC00864
@RC01040 EQU   @RC01039
@RC00352 EQU   @RC00344
@RF00869 EQU   @RC00865
@ENDDATA EQU   *
         END   IEFXB601,(C'PLS1844',0701,78059)
