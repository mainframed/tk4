*/********************************************************************/
*/*                                                                  */
*/* MODULE NAME=IEFRPREP                                             */
*/*                                                                  */
*/* DESCRIPTIVE NAME=RESTART PREPARATION ROUTINE                     */
*/*                                                                  */
*/* COPYRIGHT=NONE                                                   */
*/*                                                                  */
*/* STATUS=00                                                        */
*/*                                                                  */
*/* FUNCTION=                                                        */
*/*      - TO DETERMINE IF A JOBSTEP TASK WHICH HAS ABENDED CAN BE   */
*/*        RESTARTED AND TO PREPARE FOR RESTART                      */
*/*      OPERATION=                                                  */
*/*         - TEST FOR RESTART REQUEST                               */
*/*         - TEST FOR CHECKPOINT TAKEN                              */
*/*         - VERIFY ABEND CODE ELIGIBILITY                          */
*/*         - TEST FOR JOURNAL ERROR                                 */
*/*         - TEST FOR NO JOURNAL                                    */
*/*         - REQUEST OPERATOR AUTHORIZATION                         */
*/*         - IF INELIGIBLE FOR RESTART:                             */
*/*011000                                                    @YM07085*/
*/*           - SET NO RESTART BIT IN JCT                            */
*/*           - ZERO ABEND CODE FIELD IN JCT                         */
*/*           - SET JCTABEND ON IN JCT                               */
*/*           - ZERO EIGTH CONDITION CODE SLOT IN SCT                */
*/*           - SET SCTABEND ON IN SCT                               */
*/*           - JOURNAL JCT AND SCT                                  */
*/*           -SET JOURNAL OVERRIDE BIT ON                           */
*/*         - IF RESTART IS TO OCCUR:                                */
*/*           - TURN OFF JOURNAL OVERRIDE BIT IF WARM START          */
*/*           - ZERO ABEND CODE FIELD IN JCT                         */
*/*           - SAVE RESTART INDICATORS                              */
*/*           - SAVE FAILING STEP NO.                                */
*/*           - SAVE DISPOSITION INDICATORS BASED ON RESTART TYPE    */
*/*           - SET ON JOB IN EXECUTION BITS                         */
*/*           - SET OFF JOB IN TERMINATION BITS                      */
*/*           - JOURNAL UPDATED JCT                                  */
*/*           - SET JOURNAL OVERRIDE BIT ON                          */
*/*         - RETURN TO IEFBB410                                     */
*/*                                                                  */
*/* NOTES=                                                           */
*/*     CHARACTER-CODE DEPENDENCIES=TYPE C                           */
*/*     DEPENDENCIES=SWA MANAGER                                     */
*/*     RESTRICTIONS=NONE                                            */
*/*     REGISTER-CONVENTIONS=STANDARD LINKAGE CONVENTIONS            */
*/*     PATCH-LABEL=PATCH,50 BYTES                                   */
*/*                                                                  */
*/* MODULE TYPE=PROCEDURE                                            */
*/*     PROCESSOR=BAL                                                */
*/*     MODULE SIZE=470 BYTES (HEX)                                  */
*/*     ATTRIBUTES=REENTRANT,ONE PSW PROTECT KEY                     */
*/*                                                                  */
*/* ENTRY POINT=IEFRPREP                                             */
*/*     PURPOSE=MODULE IEFBB410 CALLS THIS ROUTINE WHENEVER JOB IS   */
*/*             ABENDED,TO DETERMINE WHETHER THIS JOB CAN BE         */
*/*             RESTARTED                                            */
*/*     LINKAGE=VIA BALR INSTRUCTION                                 */
*/*     INPUT DATA=REGISTER 1 POINTED TO LCT                         */
*/*     REGISTER SAVED=ALL                                           */
*/*     REGISTER CONTENTS DURING PROCESSING=                         */
*/*          REG10=JCT BASE                                          */
*/*          REG11=SCT BASE                                          */
*/*          REG12=LCT BASE                                          */
*/*          REG3=JSCB BASE                                          */
*/*     REGISTER STORED=ALL                                          */
*/*                                                                  */
*/* EXIT-NORMAL=                                                     */
*/*     CONDITIONS=RETURN TO CALLER VIA RETURN MACRO                 */
*/*     OUTPUT DATA=NONE                                             */
*/*     RETURN CODES=NONE                                            */
*/*                                                                  */
*/* EXIT-ERROR=                                                      */
*/*     CONDITIONS=RETURN TO CALLER VIA RETURN MACRO                 */
*/*     OUTPUT DATA=NO RESTART BITS IN JCT WAS SET                   */
*/*     RETURN CODES=NONE                                            */
*/*                                                                  */
*/* EXTERNAL REFERENCES=                                             */
*/*     ROUTINES=IEFXB603 CONTAINS MSG TEXT FOR IEF167I & IEF168I    */
*/*             =IEFVRCDS CONTAINS TABLE OF ELIGIBLE ABEND CODES     */
*/*     DATA AREAS=NONE                                              */
*/*     CONTROL BLOCKS=                                              */
*/*          USED=CVT,TCB,LCT,SCT.                                   */
*/*          MODIFIED=JCT,JSCB,SCT                                   */
*/*     TABLES=NONE                                                  */
*/*     MACROS=IEFQMREQ,WTOR,WTP,GETMAIN,FREEMAIN,LOAD,DELETE        */
*/*     CHANGE LEVEL=N/A                                             */
*/*                                                                  */
*/* MESSAGES=                                                        */
*/*     IEF225D RESULT FROM JOB STEP ELIGIBLE FOR RESTART.           */
*/*     IEF167I RESULT FROM NO JOB JOURNAL.                          */
*/*     IEF168I RESULT FROM JOB JOURNAL ERROR                        */
*/*                                                                  */
*/* CHANGE ACTIVITY=                                                 */
*/*     S/D CODE=Y02641                                              */
*/*     PTM=Y02788,                                          @YM02788*/
*/*         Y05553,                                          @YM05553*/
*/*         Y03406                                           @YM03406*/
*/*         Y07085,                                          @YM07085*/
*/*         Y06095                                           @YM06095*/
*/*                                                                  */
*/* ABEND-CODES=NONE                                                 */
*/*                                                                  */
*/********************************************************************/
         EJECT
IEFRPREP CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2         WORK REGS
R3       EQU   3         JSCB BASE                               Y02641
R4       EQU   4           *
R5       EQU   5           *
R6       EQU   6           *
R7       EQU   7           *
R8       EQU   8           *
R9       EQU   9         PROGRAM BASE
RA       EQU   10        JCT BASE
RB       EQU   11        SCT BASE
RC       EQU   12        LCT BASE
RD       EQU   13
RE       EQU   14
RF       EQU   15
*
*
         SAVE  (14,12)
         BALR  R9,R0              ESTABLISH
         USING *,R9                    ADDRESSABILITY
         LR    RC,R1                                             Y02641
         GETMAIN R,LV=72,SP=230        GETMAIN FOR SAVE AREA     Y02641
         XC     0(72,R1),0(R1)         CLEAR SAVE AREA           Y02641
         ST     13,4(0,1)              CHAIN SAVE AREA TOGATHER  Y02641
         ST     R1,8(0,RD)             CHAIN SAVE AREA TOGATHER  Y02641
         LR     RD,R1                  PTR TO SAVE AREA          Y02641
         MODID BRANCH=YES                                        Y01886
***********************************************************************
*
*             INITIALIZATION  AND RESTART VERIFICATION
*              VERIFICATION INCLUDES-
*               -TESTING RESTART STATUS AS REQUESTED VIA THE JOB AND/OR
*                EXEC STATEMENT
*               -DETERMINING IF ABEND CODE IS ELIGIBLE FOR RESTART-THAT
*                IS,CONTAINED IN A SYSGEN TABLE OF RESTARTABLE ABEND
*                CODES
*               -REQUESTING AUTHORIZATION FROM THE SYSTEM OPERATOR FOR
*                RESTART
*
*
***********************************************************************
         USING LCT,RC         LCT  BASE
         L     RA,LCTJCTAD    SETUP JCT BASE REGISTER
* 15100018                                                       Y02641
         USING JCT,RA
         L     RB,LCTSCTAD
         USING     SCT,RB
* 04000000 - 04050000                                            Y02641
         TM    JCTRSW2,JCTNORST    IS JOB TO BE RESTARTED
         BO   RP950                     BCH NO TO EXIT ... W/O SAVE
         TM    JCTRSW2,JCTNARST    IS JOB RESTARTABLE            Y02641
         BO    RP950                                             Y02641
         TM    JCTRSW2,JCTRESTT   IS BIT ON FOR RSTRT TO OCCUR
         USING CVT,R5
         BO    RP075              YES - BR AROUND CHECKPT CHECK  Y02641
         TM    JCTRSW1,JCTCKFT    NO - WERE CHKPTS TAKEN
         BZ    CABEND1            NO - SET BITS FOR NORST AND EXIT
*
* 04500000 - 04750000                                            Y02641
*
* * *    CHECK TO SEE IF ABEND CODE IS PERMITTED TO RESTART
*                                           *
RP075    DS    0H
         L     R4,LCTTCBAD             GET TCB ADDR FROM LCT
*
         USING TCB,R4
         L     R3,LCTJSCB                                        Y02641
         USING IEZJSCB,R3              R3 CONTAINS JSCB PTR      Y02641
         L     R3,JSCBACT         OBTAIN DAUGTHER TASK JSCB      Y02641
JNL04   MVC    JCTACODE+ONE(THREE),FZERO  ZERO ABEND CODE        Y02641
* 085000-086100                                                @YM07085
        B      JNL03              TO CHECK VALID CODE          @YM02788
*****************************************************************Y02641
*     CHECK TO SEE IF THERE IS A JOURNAL DATA SET OR IF THERE IS Y02641
*     ERROR ON JOURNAL . NO RESTART IS THERE IS NO JOURNAL OR    Y02641
*     ERROR HAS OCCURED.                                         Y02641
*****************************************************************Y02641
RP100    EQU   *
         GETMAIN R,LV=200,SP=230  GET CORE FOR MSG               Y02641
         LR    R8,R1               ADDRESS MSG AREA
         USING IEZJSCB,R3                                        Y02641
         TM    JSCBJJSB,JSCBJNLF  TEST FOR NO JOURNAL            Y02641
         BZ    JNL01              CHECK FOR NO JNL               Y02641
         MVC   ZERO(FOUR,R8),MSG2 MSG ID                         Y02641
         B     JNL02              ISSUE JNL ERR MSG TO PGMR      Y02641
JNL01    TM    JSCBJJSB,JSCBJNLE  TEST FOR JNL ERR               Y02641
         BZ    RP101              RESTART IS TO OCCUR          @YM02788
         MVC   ZERO(FOUR,R8),MSG1 MSG ID                         Y02641
JNL02    LOAD  EP=IEFXB603        LOAD MSG MODULE                Y02641
         LR    R6,R0              SAVE MSG MOD PTR               Y02641
         LA    R5,FOUR(R8)        GETMAIN ADDR FOR MSG TEXT      Y02641
         LA    R6,24(R6)          SKIP MOD IDENTIFICATION        Y02641
SEARCH   CLC   0(4,R6),0(R8)      COMPARE THE ID                 Y02641
         BE    FOUND              MSG FOUND                      Y02641
         LA    R6,8(R6)           BUMP TO NXT MSG ID             Y02641
         B     SEARCH             MSG NOT FOUND                  Y02641
FOUND    L     R6,4(R6)           OBTAIN ADDR OF MSG TEXT        Y02641
         MVC   0(80,R5),0(R6)     MOVE MSG TEXT TO GETMAIN AREA  Y02641
         WTO   MF=(E,(R5))        ISSUE THE MSG                  Y02641
         DELETE EP=IEFXB603       DELETE MSG MODULE              Y02641
         B     RP150                                             Y02641
**************************************************************** Y02641
*                                                                Y02641
*  FOLLOWING CODE CHECKS THE ABEND CODE AGAINST VALID ABEND CODE Y02641
*  TABLE...IF VALID-JOB RESTARTABLE....IF NOT VALID-JOB NOT      Y02641
*  RESTARTABLE.                                                  Y02641
*                                                                Y02641
***************************************************************  Y02641
JNL03    L     R4,TCBCMP          PICK UP ABEND CODE             Y02641
         DROP  R4
*
         LA    R4,ZERO(R4)        CLEAR HI ORDER BYTE
         SRDL  R4,TWLVE           SHIFT USER CODE TO REG5 - IF ANY
*
         L     R2,VCONDS           ESTABLISH POINTER TO BEGIN OF
         LR    R1,R2              VALID RESTART CODES - SYSTEM - AND
         AH    R1,ZERO(R2)        TO END OF VALID SYSTEM RESTART CODES
         LTR   R4,R4              IS IT A SYSTEM ABEND CODE
         BNE   CABEND0            YES - BRANCH TO PROCESS IT
         SLDL  R4,TWLVE           NO - SHIFT USER CODE BACK INTO R4
         LR    R2,R1              LOAD END SYSTEM RESTART CODE TABLE
         AH    R1,ZERO(R2)        ADD LENGTH USER CODE TABLE - TO
*                                 POINT TO THE END OF THE TABLE
CABEND0  DS    0H
         LA    R2,TWO(R2)         POINT TO NEXT VALID ABEND CODE
         CR    R2,R1              END OF TABLE
         BE    CABEND1              YES      NO RESTART        @YM05553
*                                   NO
         CH    R4,ZERO(R2)         VALID ABEND CODE FOR RESTART
         BNE   CABEND0              NO       CONTINUE SEARCH
         B     RP100              YES    RESTARTABLE           @YM02788
***************************************************************  Y02641
*                                                                Y02641
*   JOB NOT RESTARTABLE...                                       Y02641
*     TURN OFF ALL RESTART BITS IN JCT                           Y02641
*     WRITE JCT AND SCT TO SWA                                   Y02641
*                                                                Y02641
**************************************************************** Y02641
CABEND1  DS    0H
         GETMAIN R,LV=200,SP=230                                 Y02641
         LR    R8,R1                                             Y02641
CABEND2  DS    0H                                                Y02641
         OI    JCTJSTAT,JCTABEND  TURN ON ABEND BIT              Y02641
         OI    SCTABCND,SCTABEND  TURN ON ABEND BIT              Y02641
         NI    SCTABCND,MASK-SCTONLYC  TURN OFF COND=ONLY BIT    Y02641
         OI    JCTRSW2,JCTNORST   SET NO RESTART SWITCH
* NEED TO TURN OFF THESE BITS IN SWITCH 1 AS THIS IS A COMMON EXIT PATH
         NI    JCTRSW1,OFFSW1
         LR    R7,R8                                             Y02641
         LA    R4,QMGR1            QMPA ADDR                     Y02641
         USING IOPARAMS,R4                                       Y02641
         MVI   QMPOP,QMWRTE        WRITE TO SWA                  Y02641
         OI    QMSTA,QMSJNL                                      Y02641
         ST    R7,QMPCL            LOAD EPA PTR IN QMPA          Y02641
         OI    QMPNC,X'02'         WRITE TWO RECORDS             Y02641
         USING ZB506,R7                                          Y02641
         ST    RA,SWBUFPTR      LOAD JCT ADDR                    Y02641
         MVC   SWROWVA(THREE),JCTDSKAD  LOAD JCT SVA             Y02641
         MVI   SWWRTID,X'00'       LOAD BLOCK ID                 Y02641
         LA    R7,8(R7)            MOVE TO NXT EPA ENTRY         Y02641
         ST    RB,SWBUFPTR      LOAD SCT ADDR                    Y02641
         MVC   SWROWVA(THREE),SCTDISKA LOAD SCT ADDR             Y02641
         MVI   SWWRTID,X'02'       LOAD BLOCK ID                 Y02641
         LR    R1,R4                                             Y02641
         IEFQMREQ                                                Y02641
         NI    QMSTA,MASK-QMSJNL  TURN OFF QMSJNL BIT          @YM03406
         B     RP899              GO TO EXIT                     Y02641
***********************************************************************
*             REQUEST OPERATOR AUTHORIZATION OF JOB RESTART
*             ALL REGISTERS ARE FREE FOR USE
*             .CREATE INTERFACE FOR GENERATE-WTO MSG MODULE
*             .WAIT ON REPLY
***********************************************************************
*
***********************************************************************
*        RESTART IS TO OCCUR IF OPER REPLIES-YES OR HOLD         Y02641
*        NOT RESTARTED IF OPER REPLIED-NO                        Y02641
*        R1 MUST BE SAVED THROUGHOUT FORMATTING THE MESSAGE.
*        IT POINTS TO THE GOTTEN CORE.
*        R8 IS THE REG USED TO POSITION THE DATA IN THE MESSAGE.
***********************************************************************
RP101    XC    ZERO(200,R8),ZERO(R8) CLEAR GETMAIN AREA          Y02641
          LR   R1,R8                                             Y02641
         USING MSG,R8
         SR    R2,R2              SUBTRACT OUT INDEX REG
         MVC   MSGWTOR(MSGLN),MESS1 MOVE LIST DATA TO GOTTEN CORE
         MVC   MSGJOB,JCTJNAME    INSERT JOBNAME INTO MESSAGE
         MVC   MSGSTEP,SCTSNAME   INSERT STEPNAME
         CLI   SCTSCLPC,BLANK     Q. IS THERE A CALLING STEPNAME
         BE    RP110                BR NO
         MVI   MSGPT2,PERIOD      MOVE DELIMITER TO MSG
         MVC   MSGSTEP,SCTSCLPC   INSERT CALLING STEPNAME IN MSG
         MVC   MSGPROC,SCTSNAME    RE INSERT STEPNAME
         B     RP115              B TO CHECK RESTART CODE
RP110    DS    0H
         LA    R7,NINE            LOAD 9 AND SUBTRACT IT FROM
         LA    R2,NINE(R2)        ADD IN INDEX
         SR    R8,R7                 FROM MSG BASE REGISTER
RP115    DS    0H
         TM    JCTRSW1,JCTCKFT  WAS CHECKPT TAKEN FOR THIS STEP
         BZ    RP117              NO - GO TO FLAG STEP RSTRT
         OI    JCTRSW1,JCTCKPTR   INTRA-STEP RESTART FLAG
         MVC   MSGCHKID,JCTCKIDT  MOVE CHECKID TO MSG
         B     RP119              BR TO PUT IN REST OF MESSAGE
RP117    OI    JCTRSW1,JCTSTEPR   SET THE STEP RESTART BIT ON IN JCT
         LA    R7,CON17           LOAD 17 TO SUBTRACT FROM MSG BASE
         LA    R2,CON17(R2)       ADD IN INDEX TO GET TO SECOND PART
         SR    R8,R7              TO POSITION SECOND PART OF MSG
RP119    DS    0H
         LA    R7,MSGMSG1(R2)     POINT TO SECOND PART OF MSG
         MVC   MSGMSG1(TWLVE),ZERO(R7) MOVE SECOND PART OF MSG
         LA    R5,MSGMCS           THIS POINTS TO END OF MSG.     M0092
*        R1 CONTAINS ORIGINAL POINTER TO GOTTEN CORE.
         LR    R8,R1              RESET BASE REG TO ORIG ADDRESS
         LA    R1,MSGHDR
         SR    R5,R1              SUBTRACT BEG OF MSG FROM END
         STH   R5,MSGHDR          STORE MSG LENGTH
         LA    R2,MSGREPLY         LOAD REPLY ADDRESS
         ST    R2,MSGREPL          SAVE IN PARM LIST
         MVI   MSGREPL,REPLEN4    INSERT MAX REPLY LENGTH
         LA    R2,MSGECB           LOAD ECB ADDRESS
         ST    R2,MSGECBAD         SAVE IN PARM LIST
RP130    EQU   *
         LA    R1,MSGREPL          POINT TO MSG BUFFER
         MVI   MSGREPLY,BLANK     BLANK OUR REPLY AREA
         MVC   MSGREPLY+ONE(L3),MSGREPLY  REPLY AREA IN CASE OF REISSUE
         XC    MSGECB,MSGECB      CLEAR THE ECB
         WTO   MF=(E,(1))          WRITE MESSAGE TO CONSOLE
*
         WAIT  ECB=(2)
*
         LR    R7,R8              SAVE POINTER TO GOTTEN CORE
***********************************************************************
*        R7 MUST BE SAVED THROUGH ALL FURTHER PROCESSING.
*        IT CONTAINS THE ADDRESS OF THE GOTTEN CORE.
***********************************************************************
         OC    MSGREPLY(FOUR),BLANKS  FOLD REPLY TO CAPS          M0115
         CLC   MSGREPLY,NO        NO - MEANING CANCEL
         BE    CABEND2            TAKE NO RESTART PATH           Y02641
         CLC   MSGREPLY,YES       YES - MEANING IMMEDIATE RESTART/
         BE    RP160              TAKE RESTART TO OCCUR PATH
         CLC   MSGREPLY,HOLD      HOLD - MEANING PUT IN HOLD QUEUE
         BE    RP155              TAKE HOLD PATH WITH CHECK FOR PCP
         B     RP130               BAD REPLY - GO RETRY MESSAGE
*
*             NO MEANS CANCEL WHICH SETS THE NO RESTART INDICATOR FOR
*              THIS JOBSTEP
*
RP150    EQU   *
         NI    JCTRSW1,OFFSW1
         OI    JCTRSW2,JCTNORST
         B     RP899              TO FREE MSG BUFFER AND EXIT
*
*             HOLD MEANS OPERATOR DEFERRED RESTART-GO THRU THE MOTIONS
*              OF RESTART THEN ENQ JOB ON THE HOLD QUEUE
*
RP155    EQU   *
         L     R5,CVTPTR          PICK UP CVT POINTER
         CLI   CVTDCB,PCPSYS      ENVIRONMENT TEST HOLD IN PCP
         BE    RP150                   MEANS CANCEL
         MVI   JCTQIDNT,HOLDQ     INDICATE HOLD QUEUE IN JCT
         B     RP850              GO TO NORMAL PROCESSING        Y02641
*
*             YES MEANS RESTART - ENQ JOB ON THE INPUT QUEUE
*
RP160    EQU   *
         MVI   JCTQIDNT,JOBQ
RP850    MVC   JCTSCT(1),SCTSNUMB   INSERT FAILING STEP NUMBER   Y02641
         MVC   JCTSNUMB(1),SCTSNUMB                            @YM06095
*
         DROP  R8
*
*130000-133500                                                   Y02641
*
         MVC   JCTSSTR,SCTDISKA   RESTART THIS STEP              Y02641
*135000-213500                                                   Y02641
         NI    JCTJSB,MASK-JCTJSBTM    TURN OFF TERM BIT IN JCT  Y02641
         OI    JCTJSB,JCTJSBEX    TURN ON EXEC BIT IN JCT        Y02641
         LA    R4,QMGR1           LOCATE QUEUE PARAM AREA        Y02641
         USING IOPARAMS,R4                                       P17035
         MVI   QMPOP,QMWRTE       WRITE TO SWA                   Y02641
         OI    QMSTA,QMSJNL       TO JNL JCT AT ANY STATE        Y02641
         ST    R7,QMPCL           ADDR TO EPA                    Y02641
         USING ZB506,R7                                          Y02641
         ST    RA,SWBUFPTR        LOAD JCT ADDR                  Y02641
         MVC   SWROWVA(THREE),JCTDSKAD  LOAD JCT SVA             Y02641
         MVI   SWWRTID,X'00'      LOAD BLOCK ID                  Y02641
         OI    QMPCL,X'01'        WRITE ONE RECORD               Y02641
         LR    R1,R4              REG 1 POINT TO QMPA            Y02641
         IEFQMREQ                 SWA MNGR                       Y02641
         NI    QMSTA,MASK-QMSJNL  TURN OFF QMSJNL BIT          @YM03406
         TM    JSCBJJSB,JSCBJNLE  TEST FOR JNL ERR               Y02641
         LR    R8,R7              PTR TO GTMAIN AREA             Y02641
         MVC   0(FOUR,R8),MSG1    ID OF MSG TO BE ISSUED         Y02641
         BO    JNL02              TO ISSUE MSG FOR JNL ERR       Y02641
         MODESET EXTKEY=SUPR      CHANGE KEY TO ZERO             Y02641
         OI    JSCBJJSB,JSCBJNLN  TURN ON JNL OVERRIDE           Y02641
         NI    JSCBJJSB,MASK-JSCBJSBT  TURN OFF TERM BIT IN JSCB Y02641
         OI    JSCBJJSB,JSCBJSBX  TURN ON EXEC BIT IN JSCB       Y02641
         MODESET EXTKEY=SCHED      RESTORE KEY TO ONE            Y02641
         OI    QMSTA,X'10'         TURN ON REINTERPRETATION SW   P17035
* 648723                                                         Y02641
***************************************************************  Y02641
*                                                                Y02641
*   CLEAN UP BEFORE EXIT                                         Y02641
*                                                                Y02641
**************************************************************   Y02641
RP899    DS    0H                 ENTRY TO FREE MSG BUFFER
         LR    R1,R8              POINTER TO AREA TO R1          Y02641
         FREEMAIN R,LV=200,A=(1),SP=230  FREE WORK CORE          Y02641
RP950      DS    0H
         LR    R1,RD
         L     RD,4(0,RD)              RESTORE CALLER'S SAVE AREA
         FREEMAIN R,LV=72,A=(1),SP=230                           Y02641
         RETURN (14,12),T
HOLDQ    EQU   X'01'
JOBQ     EQU   X'02'
MESS1    WTOR  'IEF225D SHOULD         .                               *
                   RESTART',REPLYARE,4,ECBSELF,MF=L,ROUTCDE=(1),       $
               DESC=(2)
REPLYARE DS    CL4                 REPLY AREA FOR MCS WTOR
ECBSELF  DS    F                  ECB FOR MOVE TO GOTTEN CORE
MESS2    EQU   *
MSGLN    EQU   MESS2-MESS1
ERRMSG1  WTO   'IEF228I          RESTART CANCELED - I/O ERROR SCHEDULER*
                WORK AREA',MF=L,ROUTCDE=(2,11),DESC=(6)
ERRMSG2  EQU   *
ERRMSGLN  EQU  ERRMSG2-ERRMSG1
FZERO    DC    F'0'               WORD OF ZEROS FOR COMPARE
IEFSQCBS DC    C'SYSIEFSD'        MAJOR NAME
IEFQ5QCB DC    C'Q5'              MINOR NAME
* 202500
VCONDS   DC    V(IEFYRCDS)        VCON FOR TABLE OF ELIGIBLE CODES
* 203500                                                         Y02641
NO       DC    C'NO  '            CONSTANTS TO
YES      DC    C'YES '            COMPARE AGAINST
HOLD     DC    C'HOLD'            OPERATOR REPLIES
* 205500 - 206000                                                Y02641
MSG1     DC    C'MG05'            MSG ID FOR JNL ERROR           Y02641
MSG2     DC    C'MG04'            MSG ID FOR NO JNL              Y02641
BLANKS   DC    C'    '            FOLDER FOR REPLY                M0115
PATCH    DC    50C' '             RESERVED PATCH AREA            Y02641
FOUR     EQU   4                                                  M0115
ZERO     EQU   0
ONE      EQU   1
L1       EQU   1
TWO      EQU   2
THREE    EQU   3
L3       EQU   3
NINE     EQU   9
RSTRT    EQU   8
ZEROES   EQU   8
TWLVE    EQU   12
CON17    EQU   17
L86      EQU   86
BLANK    EQU   C' '
PERIOD   EQU   C'.'
REPLEN4  EQU   4
OFFSW1   EQU   X'F3'         MASK TO TURN OFF RESTART BITS IN SW1
MASK     EQU   X'FF'         MASK TO TURN OFF RESTART SWITCHES   Y02641
*
*
*
         EJECT
         DS    0D
MSG      DSECT
MSGWTOR  DS    CL12               WTOR HEADER AREA
         ORG   MSGWTOR            ORG BACK TO DIVIDE AREA
MSGREPL DS     1C                  REPLY LENGTH
MSGREPAD DS    3C                  REPLY AREA ADDRESS
MSGECBAD DS   F                    REPLY ECB ADDRESS
MSGHDR   DS   F                    MESSAGE HEADER
MSGBUF   DS   15C                  1ST OF MESSAGE 'IEF225A SHOULD'
MSGJOB   DS   CL8                  JOBNAME
MSGPT1   DS    C                  SEPARATOR .
MSGSTEP  DS   CL8                 STEPNAME
MSGPT2   DS    C                  SEPARATOR .
MSGPROC  DS   CL8                 PROCSTEP
         DS    C                  SEPARATOR
MSGCHKID DS    CL16               CHECKPOINT ID
         DS    C                  SEPARATOR
MSGMSG1  DS    CL7                 'RESTART'                      M0092
MSGMCS   DS    CL4                 MCS ROUTING AND DEXC CODES     M0092
MSGREPLY DS    F                   REPLY AREA                     M0092
MSGLGT   EQU   MSGREPLY-MSGBUF     MESSAGE LENGTH
MSGECB   DS    F                   REPLY ECB
         DS    0D
ERRMSG   DSECT
ERRHDR   DS    F                  MSG LEN + HALFWORD OF ZEROES
         ORG   ERRHDR             ORG BACK TO DIVIDE HEADER
         DS    C                  DISPLACEMENT TO LENGTH OF MSG
ERRLEN   DS    C                  LENGTH OF MESSAGE
         DS    H                  MCSFLAG GO HERE
ERRMSGID DS    CL8                'IEF228I '
ERRJNAME DS    CL8                'JOBNAME '
ERRMSGP2 DS    CL50               ' RESTART CANCELLED - IOERR...'
         DS    0D
RPCORE   DSECT
QMRWL    DS    F                  DSECT OF EXTERNAL
QMRWT    DS    F                  PARAMETERS FOR
TTRSAVE  DS    F                  QUEUE MANAGER
READIN   EQU   *
* 238500 - 239000                                                Y02641
         EJECT
LCT      DSECT
         IEFALLCT
         EJECT
JCT      DSECT
         IEFAJCTB
         EJECT
SCT      DSECT
         IEFASCTB
         EJECT
* 2750000 - 2755000                                              Y02641
* 245000 - 246000                                                Y02641
CVT      DSECT
         CVT
PCPSYS   EQU   X'40'
         EJECT
* 248500 - 249500                                                Y02641
IKJTCB   DSECT                                                   Y02641
         IKJTCB                                                  Y02641
         EJECT                                                   Y02641
* 76130018 - 76170018                                            Y02641
JSCB     DSECT                                                   Y02641
         IEZJSCB                                                 Y02641
         EJECT                                                   Y02641
         IEFQMNGR                                                Y02641
         EJECT                                                   Y02641
JESCT    DSECT                                                   Y02641
         IEFJESCT                                                Y02641
         EJECT                                                   Y02641
         IEFZB506                                                Y02641
         END
