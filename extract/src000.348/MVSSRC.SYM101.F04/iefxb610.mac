         TITLE ' IEFXB610: PROC  OPTIONS(REENTRANT);                   *
                        '
IEFXB610 CSECT ,                                                   0001
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*                                                                  0016
*INPTR = R1;                    /* INITIALIZE PARM LIST BASE    */ 0017
         LR    INPTR,R1                                            0017
*DCBADDR = DCBPARM;             /* PUT DCB ADDRESS TO LIST      */ 0018
         MVC   DCBADDR(4),DCBPARM(INPTR)                           0018
*LISTEND = ONBIT;               /* ONLY ONE DCB TO OPEN         */ 0019
*                                                                  0019
         OI    LISTEND,B'10000000'                                 0019
*GEN (OPEN MF=(E,OPENLIST));    /* ISSUE OPEN MACRO             */ 0020
         OPEN MF=(E,OPENLIST)
*/***************************************************************/ 0021
*/* NOW POST IEFXB609 INDICATING THAT THE OPEN HAS COMPLETED.   */ 0021
*/***************************************************************/ 0021
*  DO; /*POST (OKECB)*/                                            0021
*    RESPECIFY (GPR00F,GPR01P) RESTRICTED;                         0022
*    GPR00F = 0; /* POST CODE IN R0*/                              0023
         SLR   GPR00F,GPR00F                                       0023
*    GPR01P = ADDR(OKECB); /*ECB ADDRESS*/                         0024
         L     GPR01P,ADOKECB(,INPTR)                              0024
*    SVC (2); /*ISSUE POST SVC*/                                   0025
         SVC   2                                                   0025
*    RESPECIFY (GPR00F,GPR01P) UNRESTRICTED;                       0026
*  END; /*POST (OKECB)*/                                           0027
*/**********************************************/                  0028
*/* NOW WAIT FOR XB609 TO FINISH WITH DATASET  */                  0028
*/**********************************************/                  0028
*                                                                  0028
*BIT1 = ONBIT;                /* SET END OF LIST               */  0028
         OI    BIT1(INPTR),B'10000000'                             0028
*  DO; /* WAIT ECBLIST(AWAIT610) */                                0029
*    RESPECIFY (GPR00P,GPR01P) RESTRICTED;                         0030
*    GPR00P = 1; /* LOAD WAIT COUNT */                             0031
         LA    GPR00P,1                                            0031
*    GPR01P = -ADDR(AWAIT610); /* ADDRESS OF LIST OF ECB'S */      0032
         LA    GPR01P,AWAIT610(,INPTR)                             0032
         LCR   GPR01P,GPR01P                                       0032
*    SVC(1); /* WAIT SVC */                                        0033
         SVC   1                                                   0033
*    RESPECIFY (GPR00P,GPR01P) UNRESTRICTED;                       0034
*  END; /* WAIT ECBLIST(AWAIT610) */                               0035
*                                                                  0035
*GEN DATA DEFS(CLIST) REFS(DCBPARM);                               0036
*GEN DATA DEFS(CLIST1,LENCLIST);                                   0037
*                                                                  0037
*CLIST(1:LENCLIST)=CLIST1(1:LENCLIST); /* COPY TO AUTO STORAGE */  0038
         L     @10,LENCLIST                                        0038
         BCTR  @10,0                                               0038
         EX    @10,@SM00083                                        0038
*/*********************************************/                   0039
*/* 609 IS THROUGH WITH DATASET. ISSUE CLOSE. */                   0039
*/*********************************************/                   0039
*                                                                  0039
*ADCBPARM = DCBPARM;       /* DCB ADDR TO LIST        */           0039
         MVC   ADCBPARM(3),DCBPARM+1(INPTR)                        0039
*CEND = ONBIT;              /* INDICATE END OF LIST     */         0040
         OI    CEND,B'10000000'                                    0040
*IF CLOSPARM=CANP THEN                                             0041
         CLC   CLOSPARM(4,INPTR),@CC00036                          0041
         BNE   @RF00041                                            0041
*DO;                                     /* @YM8125*/              0042
*GEN ( CLOSE MF=(E,CLIST));              /* @YA65280*/             0043
          CLOSE MF=(E,CLIST)
*END;                                                              0044
*ELSE DO;                                                          0045
         B     @RC00041                                            0045
@RF00041 DS    0H                                                  0046
*GEN ( CLOSE (,REREAD),MF=(E,CLIST));                              0046
          CLOSE (,REREAD),MF=(E,CLIST)
*END;                                                              0047
*                                                                  0047
*/* READY FOR EXIT */                                              0048
*                                                                  0048
*                                                                  0048
*  DECLARE /*GENERAL PURPOSE REGISTERS */                          0048
*    GPR00F FIXED(31) REG(0),                                      0048
*    GPR00P PTR(31) REG(0),                                        0048
*    GPR01P PTR(31) REG(1);                                        0048
*                                                                  0048
*  DECLARE /* COMMON VARIABLES */                                  0049
*    I256C CHAR(256) BASED,                                        0049
*    I031F FIXED(31) BASED,                                        0049
*    I031P PTR(31)   BASED,                                        0049
*    I015F FIXED(15) BASED,                                        0049
*    I015P PTR(15)   BASED,                                        0049
*    I008P PTR(8)    BASED,                                        0049
*    I001C CHAR(1)   BASED;                                        0049
*END IEFXB610;                                                     0050
@EL00001 L     @13,4(,@13)                                         0050
@EF00001 L     @00,@SIZDATD                                        0050
         LR    @01,@11                                             0050
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0050
         BR    @14                                                 0050
@DATA    DS    0H
@SM00083 MVC   CLIST(0),CLIST1
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
IEFXB610 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
OPENLIST DS    CL4
         ORG   OPENLIST
LISTEND  DS    BL1
         ORG   LISTEND
DCBADDR  DS    AL4
         ORG   OPENLIST+4
IEFXB610 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00036 DC    C'XXXX'
@DATD    DSECT
CLIST CLOSE DCBPARM,MF=L
IEFXB610 CSECT
CLIST1 CLOSE LENCLIST,MF=L
LENCLIST DC A(*-CLIST1)
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFXB610 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
INPTR    EQU   @02
R1       EQU   @01
GPR00F   EQU   @00
GPR01P   EQU   @01
GPR00P   EQU   @00
INPUT    EQU   0
DCBPARM  EQU   INPUT
AWAIT610 EQU   INPUT+4
BIT1     EQU   AWAIT610
ADOKECB  EQU   INPUT+8
ADECBC1  EQU   INPUT+12
OKECB    EQU   0
CECB     EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
CLOSPARM EQU   ADOKECB
ADCBPARM EQU   CLIST+1
CEND     EQU   CLIST
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
C1HIBIT  EQU   ADECBC1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00041 EQU   @EL00001
@ENDDATA EQU   *
         END   IEFXB610
