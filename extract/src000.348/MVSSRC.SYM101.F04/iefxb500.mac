         TITLE 'JOURNAL WRITE ROUTINE                                  *
                        '
IEFXB500 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFXB500  76.097'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*                                                                  0152
*/********************************************************************/
*/*                                                                  */
*/* THE STANDARD REENTRANT MODULE ENTRY IS NOT BEING USED    @YM06001*/
*/* TO AVOID UNNECESSARY GETMAINS FROM BEING ISSUED.         @YM06001*/
*/*                                                          @YM06001*/
*/* IN THIS MAIN PROCEDURE,CHECKS FOR-NO JOB JOURNAL,JOURNAL @YM06001*/
*/* ERROR,JOURNAL OVERRIDE AND NON-CRITICAL JOB STATES WERE MADE     */
*/* BEFORE ANY FURTHER PROCESSING.  WHEN JOB IS IN INTERPRETATION    */
*/* OR IN ALLOCATION, NO BLOCKS ARE CRITICAL WITH TWO EXCEPTIONS     */
*/* -AFTER ALLOCATION(CALLED BY IEFSD162) AND DIRECT WRITE REQUESTED */
*/* (CALLED BY EITHER IEFXB604 OR IDDVDSCB). THEREFORE,ONLY WHEN THE */
*/* ABOVE IS NOT TRUE,A GETMAIN FOR DYNAMIC DATA AREA IS ISSUED.     */
*/* OTHERWISE,RETURN TO CALLER. FOR FURTHER PROCESSING,THIS ROUTINE  */
*/* WILL DETERMINE FROM WHOM CONTROL IS PASSED AND CALL THE PROPER   */
*/* INTERNAL ROUTINE.                                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0152
*   JNLPTR=PARMADDR;                /* SAVE PARM PTR                 */
         L     JNLPTR,PARMADDR(,R1)                                0152
*   CVTTEMP=CVTTCBP+FOUR;           /* OBTAIN CVT PTR                */
         LA    CVTTEMP,4                                           0153
         L     @10,CVTPTR                                          0153
         AL    CVTTEMP,CVTTCBP(,@10)                               0153
*   TCBPTR=CVTTEMP->TCBTEMP;        /* OBTAIN TCB PTR                */
         L     TCBPTR,TCBTEMP(,CVTTEMP)                            0154
*   RFY                                                            0155
*     CVTTEMP UNRSTD;               /* FREE REG 4 FOR OTHER USE      */
*   JSCBPTR=TCBJSCB;                /* SAVE JSCB PTR                 */
         L     JSCBPTR,TCBJSCB(,TCBPTR)                            0156
*   RFY                                                            0157
*     IEZJSCB BASED(JSCBPTR);       /* RESET JSCB BASE PTR           */
*   JSCBPTR=JSCBACT;                /* OBTAIN PROPER JSCB            */
         L     JSCBPTR,JSCBACT(,JSCBPTR)                           0158
*   IF JSCBJNLF=OF THEN             /* IS JNL PRESENT                */
         TM    JSCBJNLF(JSCBPTR),B'01000000'                       0159
         BNZ   @RF00159                                            0159
*     DO;                           /* YES.                          */
*       IF JSCBJNLN=OF THEN         /* IS JNL OVERRIDE BIT OFF       */
         TM    JSCBJNLN(JSCBPTR),B'10000000'                       0161
         BNZ   @RF00161                                            0161
*         DO;                       /* YES.                          */
*           IF JSCBJNLE=OF THEN     /* HAS JNL ERR OCCURRED          */
         TM    JSCBJNLE(JSCBPTR),B'00100000'                       0163
         BNZ   @RF00163                                            0163
*             DO;                   /* NO.                           */
*               IF JNLINIT=OF&JNLDRCT=OF THEN                      0165
         TM    JNLINIT(JNLPTR),B'00110000'                         0165
         BNZ   @RF00165                                            0165
*                 IF JNLSWALI=ON×JNLSWAMI=ON THEN                  0166
         TM    JNLSWALI(JNLPTR),B'11000000'                        0166
         BZ    @RF00166                                            0166
*                   IF JSCBJSBI=OF×JNLMASK(ONE)=OF THEN            0167
         TM    JSCBJSBI(JSCBPTR),B'00001000'                       0167
         BZ    @RT00167                                            0167
         TM    JNLMASK,B'10000000'                                 0167
         BNZ   @RF00167                                            0167
@RT00167 DS    0H                                                  0168
*                     IF JSCBJSBA=OF×JNLMASK(TWO)=OF THEN          0168
         TM    JSCBJSBA(JSCBPTR),B'00000100'                       0168
         BZ    @RT00168                                            0168
         TM    JNLMASK,B'01000000'                                 0168
         BNZ   @RF00168                                            0168
@RT00168 DS    0H                                                  0169
*                       IF JSCBJSBX=OF×JNLMASK(THREE)=OF THEN      0169
         TM    JSCBJSBX(JSCBPTR),B'00000010'                       0169
         BZ    @RT00169                                            0169
         TM    JNLMASK,B'00100000'                                 0169
         BNZ   @RF00169                                            0169
@RT00169 DS    0H                                                  0170
*                         IF JSCBJSBT=OF×JNLMASK(FOUR)=OF THEN     0170
         TM    JSCBJSBT(JSCBPTR),B'00000001'                       0170
         BZ    @RT00170                                            0170
         TM    JNLMASK,B'00010000'                                 0170
         BNZ   @RF00170                                            0170
@RT00170 DS    0H                                                  0171
*                           IF JNLSWALI=ON THEN                    0171
         TM    JNLSWALI(JNLPTR),B'01000000'                        0171
         BO    @RT00171                                            0171
*                             GO TO EXIT;                          0172
*                           ELSE                                   0173
*                             IF JNLPPTRX->QMSJNL=OF THEN          0173
         L     @10,JNLPPTRX(,JNLPTR)                               0173
         TM    QMSJNL(@10),B'00100000'                             0173
         BZ    @RT00173                                            0173
*                               GO TO EXIT;                        0174
*               GEN;                                               0175
@RF00170 DS    0H                                                  0175
@RF00169 DS    0H                                                  0175
@RF00168 DS    0H                                                  0175
@RF00167 DS    0H                                                  0175
@RF00166 DS    0H                                                  0175
@RF00165 DS    0H                                                  0175
        L     R0,@SIZDATD
        GETMAIN R,LV=(R0)
        LR    R11,R1
        USING @DATD,R11
        ST    R13,@SA00001+4
        LA    R15,@SA00001
        MODESET KEYADDR=(2)    RESTORE CALLER'S KEY
        ST    R15,8(,R13)      STORE MY SAVE AREA ADDR INTO CALLER'S
        MODESET EXTKEY=SCHED   RESET KEY TO SCHED
        LR    R13,R15
        STC   R2,CALLRKEY             STORE CALLER KEY
*               ERROR=ZERO;         /* INIT. ERR INDICATOR           */
         SLR   ERROR,ERROR                                         0176
*               EPALEN=LENGTH(SWAMMEPA);/* OBTAIN MOVE EPA LENGTH    */
         MVC   EPALEN(4),@CF00064                                  0177
*               PRFX=LENGTH(SWAPFX);/* OBTAIN PREFIX LENGTH          */
         MVC   PRFX(4),@CF00039                                    0178
*               IF JNLSWAMI=ON THEN /* IF CONTROL FROM SWA WRITE,    */
         TM    JNLSWAMI(JNLPTR),B'10000000'                        0179
         BNO   @RF00179                                            0179
*                 CALL SWAWRT;      /* THEN PROCESS SWAWRT           */
         BAL   @14,SWAWRT                                          0180
*               ELSE                                               0181
*                 IF JNLSWALI=ON THEN/* IF CONTROL FROM SWA WRITE    */
         B     @RC00179                                            0181
@RF00179 TM    JNLSWALI(JNLPTR),B'01000000'                        0181
         BNO   @RF00181                                            0181
*                   CALL SWAWRTL;   /* LOCATE,PROCESS SWAWRTL        */
         BAL   @14,SWAWRTL                                         0182
*                 ELSE                                             0183
*                   IF JNLINIT=ON THEN/* IF CONTROL FROM INITIATOR   */
         B     @RC00181                                            0183
@RF00181 TM    JNLINIT(JNLPTR),B'00100000'                         0183
         BNO   @RF00183                                            0183
*                     CALL RUNCHAIN;/* PROCESS RUNCHAIN              */
         BAL   @14,RUNCHAIN                                        0184
*                   ELSE                                           0185
*                     IF JNLDRCT=ON THEN                           0185
         B     @RC00183                                            0185
@RF00183 TM    JNLDRCT(JNLPTR),B'00010000'                         0185
         BNO   @RF00185                                            0185
*                       CALL DRTWRT;/* PROCESS DRTWRT                */
         BAL   @14,DRTWRT                                          0186
*                     ELSE                                         0187
*                       DO;                                        0187
         B     @RC00185                                            0187
@RF00185 DS    0H                                                  0188
*                         CALL ERRMSG;/* BAD PARMLIST INPUT-         */
         BAL   @14,ERRMSG                                          0188
*                         ERROR=NOJL;/* NO JOURNALLING               */
         LA    ERROR,3                                             0189
*                       END;                                       0190
*               IF ERROR=JL THEN                                   0191
@RC00185 DS    0H                                                  0191
@RC00183 DS    0H                                                  0191
@RC00181 DS    0H                                                  0191
@RC00179 C     ERROR,@CF00066                                      0191
         BNE   @RF00191                                            0191
*                 CALL FPUT;        /* EMPTY BUFFER BEFORE RETURN    */
         BAL   @14,FPUT                                            0192
*               IF ERROR^=ZERO&ERROR^=NOJL THEN/* ANY JOURNALLING  0193
*                                      ATTEMPTED                     */
@RF00191 C     ERROR,@CF00042                                      0193
         BE    @RF00193                                            0193
         C     ERROR,@CF00293                                      0193
         BE    @RF00193                                            0193
*                 DO;               /* IF YES,DEQ RPL                */
*                   GEN DATA DEFS(DEQE);                           0195
*                   GEN DATA DEFS(DEQL,DEQLNG);                    0196
*                   DEQE(ONE:DEQLNG)=DEQL(ONE:DEQLNG);/* MOVE LIST   */
         L     @10,DEQLNG                                          0197
         BCTR  @10,0                                               0197
         EX    @10,@SM02694                                        0197
*                   GEN REFS(DEQE);                                0198
                DEQ MF=(E,DEQE) EXECUTE FORM
*                 END;                                             0199
*               GEN;                                               0200
@RF00193 DS    0H                                                  0200
        L     R13,4(,R13)
        LR    R1,R11
        L     R0,@SIZDATD
        IC    R2,CALLRKEY                RESTORE CALLER KEY
        FREEMAIN R,LV=(R0),A=(R1)
*             END;                                                 0201
*           ELSE                                                   0202
*             DO;                                                  0202
         B     @RC00163                                            0202
@RF00163 DS    0H                                                  0203
*               GEN(MODESET KEYADDR=(2));/* SET TO CALLER'S KEY    0203
*                                                            @YM05555*/
         MODESET KEYADDR=(2)
*               JNLERR=ON;          /* JNLERR TO CALLER      @YM05555*/
         OI    JNLERR(JNLPTR),B'10000000'                          0204
*               GEN(MODESET EXTKEY=SCHED);/* RESET TO KEY ONE      0205
*                                                            @YM05555*/
         MODESET EXTKEY=SCHED
*             END;                                                 0206
*         END;                                                     0207
*     END;                                                         0208
*   ELSE                                                           0209
*     DO;                           /* NO JOB JOURNAL                */
         B     @RC00159                                            0209
@RF00159 DS    0H                                                  0210
*       GEN( MODESET KEYADDR=(2) ); /* SET TO CALLER'S KEY           */
          MODESET KEYADDR=(2)
*       JNLABSNT=ON;                /* TURN ON NO JOURNAL BIT IN   0211
*                                      PARMLIST                      */
         OI    JNLABSNT(JNLPTR),B'01000000'                        0211
*       GEN( MODESET EXTKEY=SCHED );                               0212
          MODESET EXTKEY=SCHED
*     END;                                                         0213
*EXIT:                                                             0214
*   ;                                                              0214
@RC00159 DS    0H                                                  0214
EXIT     DS    0H                                                  0215
*   GEN;                                                           0215
        MODESET KEYADDR=(2)           RESTORE CALLER PSW KEY
        LM    14,12,12(R13)
        BR    14
*                                                                  0216
*/********************************************************************/
*/*                                                                  */
*/*  THIS FUNCTION IS CALLED WHEN CONTROL IS PASSED FROM SWA MANAGER */
*/*  WRITE FUNCTION (IEFQB500) WITH A PTR TO SWA QMPA. JOURNAL ONLY  */
*/*  THE CRITICAL SWA CONTROL BLOCKS.                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0216
*SWAWRT:                                                           0216
*   PROCEDURE;                                                     0216
SWAWRT   STM   @14,@09,@SA00002                                    0216
         STM   @11,@12,@SA00002+48                                 0216
*   RECNO=JNLPPTRX->QMPCMNC&HEX0F;  /* OBTAIN NO.OF RECORDS          */
         L     @05,JNLPPTRX(,JNLPTR)                               0217
         LA    @15,15                                              0217
         SLR   @14,@14                                             0217
         IC    @14,QMPCMNC(,@05)                                   0217
         NR    @15,@14                                             0217
         STC   @15,RECNO                                           0217
*   EPAPTR=JNLPPTRX->QMPACL;        /* OBTAIN PTR TO EPA             */
         L     EPAPTR,QMPACL-1(,@05)                               0218
         LA    EPAPTR,0(,EPAPTR)                                   0218
*   QMPAPTR=JNLPPTRX;               /* SAVE QMPA PTR                 */
         LR    QMPAPTR,@05                                         0219
*   IF QMSJNL=ON THEN               /* JNL TO UPDATE JOB STATE       */
         TM    QMSJNL(QMPAPTR),B'00100000'                         0220
         BNO   @RF00220                                            0220
*     DO;                                                          0221
*       QMSJNL=OF;                  /* ZERO THE SPECIAL BIT          */
         NI    QMSJNL(QMPAPTR),B'11011111'                         0222
*       DO K=ONE TO RECNO WHILE ERROR<BAD;                         0223
         LA    @15,1                                               0223
         B     @DE00223                                            0223
@DL00223 C     ERROR,@CF00078                                      0223
         BNL   @DC00223                                            0223
*         VIRTUAL=SWROWVA;          /* PTR TO THE BLOCK              */
         SLR   VIRTUAL,VIRTUAL                                     0224
         ICM   VIRTUAL,7,SWROWVA(EPAPTR)                           0224
*         CALL JOURNAL;             /* WRITE TO JOB JOURNAL          */
         BAL   @14,JOURNAL                                         0225
*         EPAPTR=EPAPTR+EPALEN;     /* BUMP TO NXT EPA ENTRY         */
         AL    EPAPTR,EPALEN                                       0226
*       END;                                                       0227
         LA    @15,1                                               0227
         AL    @15,K                                               0227
@DE00223 ST    @15,K                                               0227
         SLR   @14,@14                                             0227
         IC    @14,RECNO                                           0227
         CR    @15,@14                                             0227
         BNH   @DL00223                                            0227
@DC00223 DS    0H                                                  0228
*     END;                                                         0228
*   ELSE                            /* JNL CRITICAL BLOCKS ONLY      */
*     DO;                                                          0229
         B     @RC00220                                            0229
@RF00220 DS    0H                                                  0230
*       IF JSCBJSBI=ON THEN                                        0230
         TM    JSCBJSBI(JSCBPTR),B'00001000'                       0230
         BNO   @RF00230                                            0230
*         I=ONE;                    /* JOB IN INTERPRETATION         */
         MVC   I(2),@CH00066                                       0231
*       ELSE                                                       0232
*         IF JSCBJSBA=ON THEN                                      0232
         B     @RC00230                                            0232
@RF00230 TM    JSCBJSBA(JSCBPTR),B'00000100'                       0232
         BNO   @RF00232                                            0232
*           I=TWO;                  /* JOB IN ALLOCATION             */
         MVC   I(2),@CH00078                                       0233
*         ELSE                                                     0234
*           IF JSCBJSBX=ON THEN                                    0234
         B     @RC00232                                            0234
@RF00232 TM    JSCBJSBX(JSCBPTR),B'00000010'                       0234
         BNO   @RF00234                                            0234
*             I=THREE;              /* JOB IN EXECUTION              */
         MVC   I(2),@CH00293                                       0235
*           ELSE                                                   0236
*             IF JSCBJSBT=ON THEN                                  0236
         B     @RC00234                                            0236
@RF00234 TM    JSCBJSBT(JSCBPTR),B'00000001'                       0236
         BNO   @RF00236                                            0236
*               I=FOUR;             /* JOB IN TERMINATION            */
         MVC   I(2),@CH00058                                       0237
*             ELSE                                                 0238
*               DO;                 /* NO JOB STATE SPECIFIED        */
         B     @RC00236                                            0238
@RF00236 DS    0H                                                  0239
*                 CALL ERRMSG;      /* NO JOURNAL                    */
         BAL   @14,ERRMSG                                          0239
*                 ERROR=NOJL;                                      0240
         LA    ERROR,3                                             0240
*               END;                                               0241
*       DO K=ONE TO RECNO WHILE ERROR<BAD;/* CHECK FOR CRITICAL BLKS */
@RC00236 DS    0H                                                  0242
@RC00234 DS    0H                                                  0242
@RC00232 DS    0H                                                  0242
@RC00230 LA    @15,1                                               0242
         B     @DE00242                                            0242
@DL00242 C     ERROR,@CF00078                                      0242
         BNL   @DC00242                                            0242
*         J=SWROWVA->SWPID+ONE;     /* OBTAIN BLK ID                 */
         SLR   @15,@15                                             0243
         ICM   @15,7,SWROWVA(EPAPTR)                               0243
         LA    J,1                                                 0243
         SLR   @14,@14                                             0243
         IC    @14,SWPID(,@15)                                     0243
         ALR   J,@14                                               0243
*         TEMP1=TEMPLATE(J)&TEST(I);/* IS THIS BLOCK CRITICAL        */
         LH    @05,I                                               0244
         SLR   @14,@14                                             0244
         IC    @14,TEST-1(@05)                                     0244
         SLR   @05,@05                                             0244
         IC    @05,TEMPLATE-1(J)                                   0244
         NR    @05,@14                                             0244
         STC   @05,TEMP1                                           0244
*         IF TEMP1=TEST(I) THEN     /* IF CRITICAL, JOURNAL IT       */
         CR    @05,@14                                             0245
         BNE   @RF00245                                            0245
*           DO;                                                    0246
*             VIRTUAL=SWROWVA;                                     0247
         LR    VIRTUAL,@15                                         0247
*             CALL JOURNAL;                                        0248
         BAL   @14,JOURNAL                                         0248
*           END;                                                   0249
*         EPAPTR=EPAPTR+EPALEN;     /* OBTAIN PTR TO NEXT BLK        */
@RF00245 AL    EPAPTR,EPALEN                                       0250
*       END;                                                       0251
         LA    @15,1                                               0251
         AL    @15,K                                               0251
@DE00242 ST    @15,K                                               0251
         SLR   @14,@14                                             0251
         IC    @14,RECNO                                           0251
         CR    @15,@14                                             0251
         BNH   @DL00242                                            0251
@DC00242 DS    0H                                                  0252
*     END;                                                         0252
*   END SWAWRT;                                                    0253
@EL00002 DS    0H                                                  0253
@EF00002 DS    0H                                                  0253
@ER00002 LM    @14,@09,@SA00002                                    0253
         LM    @11,@12,@SA00002+48                                 0253
         BR    @14                                                 0253
*                                                                  0254
*/********************************************************************/
*/*                                                                  */
*/*  THIS FUNCTION IS CALLED WHEN THE CONTROL IS PASSED FROM SWA     */
*/*  MANAGER WRITE LOCATE FUNCTION (IEFQB550) WITH A PTR TO EPA.     */
*/*  JOURNAL ONLY THE CRITICAL SWA CONTROL BLOCKS.                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0254
*SWAWRTL:                                                          0254
*   PROCEDURE;                                                     0254
SWAWRTL  STM   @14,@09,@SA00003                                    0254
         STM   @11,@12,@SA00003+48                                 0254
*   IF JSCBJSBI=ON THEN                                            0255
         TM    JSCBJSBI(JSCBPTR),B'00001000'                       0255
         BNO   @RF00255                                            0255
*     I=ONE;                        /* JOB IN INTERP STATE           */
         MVC   I(2),@CH00066                                       0256
*   ELSE                                                           0257
*     IF JSCBJSBA=ON THEN                                          0257
         B     @RC00255                                            0257
@RF00255 TM    JSCBJSBA(JSCBPTR),B'00000100'                       0257
         BNO   @RF00257                                            0257
*       I=TWO;                      /* JOB IN ALLOC STATE            */
         MVC   I(2),@CH00078                                       0258
*     ELSE                                                         0259
*       IF JSCBJSBX=ON THEN                                        0259
         B     @RC00257                                            0259
@RF00257 TM    JSCBJSBX(JSCBPTR),B'00000010'                       0259
         BNO   @RF00259                                            0259
*         I=THREE;                  /* JOB IN EXEC STATE             */
         MVC   I(2),@CH00293                                       0260
*       ELSE                                                       0261
*         IF JSCBJSBT=ON THEN                                      0261
         B     @RC00259                                            0261
@RF00259 TM    JSCBJSBT(JSCBPTR),B'00000001'                       0261
         BNO   @RF00261                                            0261
*           I=FOUR;                 /* JOB IN TERM STATE             */
         MVC   I(2),@CH00058                                       0262
*         ELSE                                                     0263
*           DO;                                                    0263
         B     @RC00261                                            0263
@RF00261 DS    0H                                                  0264
*             CALL ERRMSG;          /* NO JOB STATE SPECIFIED-       */
         BAL   @14,ERRMSG                                          0264
*             ERROR=NOJL;           /* NO JOURNALLING                */
         LA    ERROR,3                                             0265
*           END;                                                   0266
*   SWEPAPTR=JNLPPTRX;              /* OBTAIN EPA PTR FROM PARM      */
@RC00261 DS    0H                                                  0267
@RC00259 DS    0H                                                  0267
@RC00257 DS    0H                                                  0267
@RC00255 L     SWEPAPTR,JNLPPTRX(,JNLPTR)                          0267
*   DO WHILE SWEPAPTR^=NO&          /* DO UNTIL END OF EPA REACHED   */
*         ERROR<BAD;                /* OR WHEN ERROR OCCURRED        */
         B     @DE00268                                            0268
@DL00268 DS    0H                                                  0269
*     J=SWVA->SWPID+ONE;            /* OBTAIN BLK ID FROM SWAPFIX    */
         SLR   @15,@15                                             0269
         ICM   @15,7,SWVA(SWEPAPTR)                                0269
         LA    J,1                                                 0269
         SLR   @14,@14                                             0269
         IC    @14,SWPID(,@15)                                     0269
         ALR   J,@14                                               0269
*     TEMP1=TEMPLATE(J)&TEST(I);    /* DETERMINE IF THIS BLK CRI-    */
         LH    @05,I                                               0270
         SLR   @14,@14                                             0270
         IC    @14,TEST-1(@05)                                     0270
         SLR   @05,@05                                             0270
         IC    @05,TEMPLATE-1(J)                                   0270
         NR    @05,@14                                             0270
         STC   @05,TEMP1                                           0270
*     IF TEMP1=TEST(I) THEN                                        0271
         CR    @05,@14                                             0271
         BNE   @RF00271                                            0271
*       DO;                         /* TICAL                         */
*         VIRTUAL=SWVA;             /* SET PTR FOR PUT               */
         LR    VIRTUAL,@15                                         0273
*         CALL JOURNAL;                                            0274
         BAL   @14,JOURNAL                                         0274
*       END;                                                       0275
*     SWEPAPTR=SWCHNPTR;            /* OBTAIN PTR TO NEXT EPA        */
@RF00271 L     SWEPAPTR,SWCHNPTR(,SWEPAPTR)                        0276
*   END;                                                           0277
@DE00268 LTR   SWEPAPTR,SWEPAPTR                                   0277
         BZ    @DC00268                                            0277
         C     ERROR,@CF00078                                      0277
         BL    @DL00268                                            0277
@DC00268 DS    0H                                                  0278
*   END SWAWRTL;                                                   0278
@EL00003 DS    0H                                                  0278
@EF00003 DS    0H                                                  0278
@ER00003 LM    @14,@09,@SA00003                                    0278
         LM    @11,@12,@SA00003+48                                 0278
         BR    @14                                                 0278
*                                                                  0279
*/********************************************************************/
*/*                                                                  */
*/*  THIS INTERNAL PROCEDURE PERFORMS THE ACTUAL WRITE TO JOURNAL    */
*/*  DATA SET VIA JES2 SUBSYSTEM. A NON-ZERO RETURN CODE WILL BE     */
*/*  PASSED BACK BY THE SUBSYSTEM IF THE WRITE IS SUCCESSFUL.        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0279
*JOURNAL:                                                          0279
*   PROCEDURE;                                                     0279
JOURNAL  STM   @14,@09,@SA00004                                    0279
         STM   @11,@12,@SA00004+48                                 0279
*   IF ERROR=ZERO THEN              /* IS THIS THE 1ST ATTEMP -      */
         C     ERROR,@CF00042                                      0280
         BNE   @RF00280                                            0280
*     DO;                           /* TO JOURNAL, IF YES - ENQ      */
*       ERROR=JL;                   /* SET SWITCH                    */
         LA    ERROR,1                                             0282
*       GEN DATA DEFS(ENQE);                                       0283
*       GEN DATA DEFS(ENQL,ENQLNG);                                0284
*       ENQE(ONE:ENQLNG)=ENQL(ONE:ENQLNG);/* MOVE LIST TO GETMAIN  0285
*                                      AREA                          */
         L     @04,ENQLNG                                          0285
         BCTR  @04,0                                               0285
         EX    @04,@SM02699                                        0285
*       GEN REFS(ENQE);                                            0286
    ENQ MF=(E,ENQE)        ISSUE EXECUTE FORM
*     END;                                                         0287
*   RFY                                                            0288
*     IFGRPL BASED(JSCBJNLR);       /* SET UP RPL BASE PTR           */
@RF00280 DS    0H                                                  0289
*   RPLAREA=VIRTUAL;                /* PTR TO BLK TO BE JOURNALLED   */
         L     @04,JSCBJNLR(,JSCBPTR)                              0289
         ST    VIRTUAL,RPLAREA(,@04)                               0289
*   RPLRLEN=VIRTUAL->SWPLNGTH+PRFX; /* OBTAIN RECORD LENGTH          */
         L     @03,SWPLNGTH-1(,VIRTUAL)                            0290
         LA    @03,0(,@03)                                         0290
         AL    @03,PRFX                                            0290
         ST    @03,RPLRLEN(,@04)                                   0290
*   R4=JSCBJNLR;                    /* LOAD ADDR OF RPL LIST         */
         L     @03,JSCBJNLR(,JSCBPTR)                              0291
         LR    R4,@03                                              0291
*   GEN( PUT RPL=(R4));             /* JOURNAL THE BLOCK             */
          PUT RPL=(R4)
*   IF R15^=ZERO THEN                                              0293
         LTR   R15,R15                                             0293
         BZ    @RF00293                                            0293
*     CALL ERRMSG;                  /* ERROR ON JOURNAL              */
         BAL   @14,ERRMSG                                          0294
*   END;                            /* SUBSYSTEM                     */
@EL00004 DS    0H                                                  0295
@EF00004 DS    0H                                                  0295
@ER00004 LM    @14,@09,@SA00004                                    0295
         LM    @11,@12,@SA00004+48                                 0295
         BR    @14                                                 0295
*                                                                  0296
*/********************************************************************/
*/*                                                                  */
*/*  THIS INTERNAL PROCEDURE IS CALLED WHENEVER AN ERROR HAS OCCURRED*/
*/*  , DURING WRITE TO JOURNAL DATA SET.  AN ERROR MESSAGE WILL BE   */
*/*  ISSUED TO INFORM THE PROGRAMMER.                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0296
*ERRMSG:                                                           0296
*   PROCEDURE;                                                     0296
ERRMSG   STM   @14,@09,@SA00005                                    0296
         STM   @11,@12,@SA00005+48                                 0296
*   GEN( LOAD EP=IEFXB603  );                                      0297
          LOAD EP=IEFXB603
*   R3=R0+SKPID;                    /* OBTAIN BEGINNING TO MSGTB     */
         LA    R3,24                                               0298
         ALR   R3,R0                                               0298
*   DO WHILE MSGID^=MSGNO;          /* FIND THE PROPER MSG BY        */
         B     @DE00299                                            0299
@DL00299 DS    0H                                                  0300
*     R3=R3+NXT;                    /* CHECKING ID                   */
         AL    R3,@CF00064                                         0300
*   END;                            /* MSG FOUND                     */
@DE00299 CLC   MSGID(4,R3),@CC02623                                0301
         BNE   @DL00299                                            0301
*/*   MOVE MSG TXT INTO GETMAIN AREA                                 */
*                                                                  0302
*   MSG(ONE:MSGLNG)=MSGADDR->MESS1(ONE:MSGLNG);                    0302
         SLR   @15,@15                                             0302
         IC    @15,MSGLNG(,R3)                                     0302
         BCTR  @15,0                                               0302
         L     @14,MSGADDR-1(,R3)                                  0302
         EX    @15,@SM02701                                        0302
*   R1=ADDR(MSG);                                                  0303
         LA    R1,MSG                                              0303
*   GEN(WTO MF=(E,(R1)));           /* ISSUE THE MSG TO PGMR         */
         WTO MF=(E,(R1))
*   GEN( MODESET EXTKEY=SUPR);      /* CHANGE TO KEY ZERO            */
          MODESET EXTKEY=SUPR
*   JSCBJNLE=ON;                    /* SET JNL ERROR BIT IN JSCB     */
         OI    JSCBJNLE(JSCBPTR),B'00100000'                       0306
*   GEN( MODESET EXTKEY=SCHED);     /* RESET TO KEY ONE              */
          MODESET EXTKEY=SCHED
*   ERROR=BAD;                      /* SET INTERNAL ERROR            */
         LA    ERROR,2                                             0308
*   GEN(MODESET KEYADDR=(2) );      /* SET TO CALLER'S KEY           */
         MODESET KEYADDR=(2)
*   JNLERR=ON;                      /* SEND RETURN CODE              */
         OI    JNLERR(JNLPTR),B'10000000'                          0310
*   GEN( MODESET EXTKEY=SCHED );    /* RESET TO SCHED KEY            */
          MODESET EXTKEY=SCHED
*   END ERRMSG;                                                    0312
@EL00005 DS    0H                                                  0312
@EF00005 DS    0H                                                  0312
@ER00005 LM    @14,@09,@SA00005                                    0312
         LM    @11,@12,@SA00005+48                                 0312
         BR    @14                                                 0312
*                                                                  0313
*/********************************************************************/
*/*                                                                  */
*/*  THIS FUNCTION WILL BE CALLED BEFORE CONTROL IS RETURNED TO THE  */
*/*  EXTERNAL CALLER (IF A PUT HAS BEEN ISSUED)TO INSURE THAT THERE  */
*/*  IS NOTHING LEFT IN THE BUFFER.                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0313
*FPUT:                                                             0313
*   PROCEDURE;                                                     0313
FPUT     STM   @14,@09,@SA00006                                    0313
         STM   @11,@12,@SA00006+48                                 0313
*   R4=JSCBJNLR;                    /* LOAD ADDR OF RPL LIST         */
         L     R4,JSCBJNLR(,JSCBPTR)                               0314
*   GEN(ENDREQ RPL=(R4));           /* ISSUE FORCE PUT               */
         ENDREQ RPL=(R4)
*   IF R15^=ZERO THEN                                              0316
         LTR   R15,R15                                             0316
         BZ    @RF00316                                            0316
*     CALL ERRMSG;                  /* CHECK FOR ERROR ON RETURN     */
         BAL   @14,ERRMSG                                          0317
*   END FPUT;                                                      0318
@EL00006 DS    0H                                                  0318
@EF00006 DS    0H                                                  0318
@ER00006 LM    @14,@09,@SA00006                                    0318
         LM    @11,@12,@SA00006+48                                 0318
         BR    @14                                                 0318
*                                                                  0319
*/********************************************************************/
*/*                                                          @YM07086*/
*/*  THIS ROUTINE ISSUES A GET WITH UPDATE TO THE BEGINNING  @YM07086*/
*/*  OF JNL DATA SET AND UPDATES THE RBA FIELDS IN THE       @YM07086*/
*/*  JOB HEADER RECORD AND THEN ISSUES A PUT WITH UPDATE     @YM07086*/
*/*  TO WRITE THE UPDATED JOB HEADER RECORD ON TO            @YM07086*/
*/*  THE JOURNAL DATA SET.                                   @YM07086*/
*/*                                                          @YM07086*/
*/********************************************************************/
*                                                                  0319
*JHRUPDT:                                                          0319
*   PROCEDURE;                                                     0319
JHRUPDT  STM   @14,@09,@SA00007                                    0319
         STM   @11,@12,@SA00007+48                                 0319
*   RFY                                                            0320
*     IFGRPL BASED(JSCBJNLR);       /*                       @YM07086*/
*   SAVERBA=RPLRBAR;                /* SAVE CURRENT RBA      @YM07086*/
         L     @03,JSCBJNLR(,JSCBPTR)                              0321
         MVC   SAVERBA(8),RPLRBAR(@03)                             0321
*   RPLRBAR=JSCBFRBA;               /* SET RBA TO BEGINNING OF JNL 0322
*                                                            @YM07086*/
         MVC   RPLRBAR(8,@03),JSCBFRBA(JSCBPTR)                    0322
*   RPLRLEN=ZERO;                   /* RECORD LENGTH         @YM07086*/
         SLR   @15,@15                                             0323
         ST    @15,RPLRLEN(,@03)                                   0323
*   RPLBUFL=LENGTH(WORK);           /* BUFFER SIZE           @YM07086*/
         MVC   RPLBUFL(4,@03),@CF02595                             0324
*   RPLAREA=ADDR(WORK);             /* SET UP BUFER AREA     @YM07086*/
         LA    @15,WORK                                            0325
         ST    @15,RPLAREA(,@03)                                   0325
*   RPLARG=ADDR(RPLRBAR);           /* INIT PTR TO RBA       @OZ00095*/
         LA    @15,RPLRBAR(,@03)                                   0326
         ST    @15,RPLARG(,@03)                                    0326
*   RPLDIR=ON;                      /* SET DIRECT BIT ON     @YM07086*/
         OI    RPLDIR(@03),B'01000000'                             0327
*   RPLUPD=ON;                      /* TURN ON UPDATE BIT    @YM07086*/
         OI    RPLUPD(@03),B'00000010'                             0328
*   R4=JSCBJNLR;                    /* RPLPTR FOR GET & PUT  @YM07086*/
         LR    R4,@03                                              0329
*   GEN(GET RPL=(R4));              /* GET UPDATE            @YM07086*/
         GET RPL=(R4)
*   IF R15^=ZERO THEN                                              0331
         LTR   R15,R15                                             0331
         BZ    @RF00331                                            0331
*     CALL ERRMSG;                  /*                       @YM07086*/
         BAL   @14,ERRMSG                                          0332
*   ELSE                                                           0333
*     DO;                           /* NO ERROR              @YM07086*/
         B     @RC00331                                            0333
@RF00331 DS    0H                                                  0334
*       JHRPTR=ADDR(WORK)+PRFX;     /* OBTAIN JHR PTR        @YM07086*/
         LA    JHRPTR,WORK                                         0334
         AL    JHRPTR,PRFX                                         0334
*       JHRSTRBA=JSCBJRBA;          /* RBA AT RESTART        @YM07086*/
         MVC   JHRSTRBA(8,JHRPTR),JSCBJRBA(JSCBPTR)                0335
*       JHRCKRBA=SAVERBA;           /* RBA FOR POINT AFTER CHKPT   0336
*                                      RESTART               @YM07086*/
         MVC   JHRCKRBA(8,JHRPTR),SAVERBA                          0336
*       GEN(PUT RPL=(R4));          /* PUT UPDATE            @YM07086*/
         PUT RPL=(R4)
*       IF R15^=ZERO THEN                                          0338
         LTR   R15,R15                                             0338
         BZ    @RF00338                                            0338
*         CALL ERRMSG;              /*                       @YM07086*/
         BAL   @14,ERRMSG                                          0339
*       ELSE                                                       0340
*         DO;                       /* NO ERROR              @YM07086*/
         B     @RC00338                                            0340
@RF00338 DS    0H                                                  0341
*           RPLDIR=OF;              /* TURN OFF DIRECT BIT   @YM07086*/
         L     @03,JSCBJNLR(,JSCBPTR)                              0341
         NI    RPLDIR(@03),B'10111111'                             0341
*           RPLRBAR=SAVERBA;        /* RESTORE PUT RBA IN RPL      0342
*                                                            @YM07086*/
         MVC   RPLRBAR(8,@03),SAVERBA                              0342
*           RPLUPD=OF;              /* TURN OFF UPDATE BIT   @YM07086*/
         NI    RPLUPD(@03),B'11111101'                             0343
*           GEN( MODESET EXTKEY=SUPR );/* SET KEY TO ZERO    @YM07086*/
          MODESET EXTKEY=SUPR
*           JSCBJRBA=NOTHING;       /* CLEAR SAVED RBA AFTER UPDATE
*                                                            @YM07086*/
         MVC   JSCBJRBA(8,JSCBPTR),NOTHING                         0345
*           GEN( MODESET EXTKEY=SCHED );/* SET KEY TO ONE    @YM07086*/
          MODESET EXTKEY=SCHED
*         END;                      /*                       @YM07086*/
*     END;                          /*                       @YM07086*/
*   END JHRUPDT;                    /* END PROC              @YM07086*/
@EL00007 DS    0H                                                  0349
@EF00007 DS    0H                                                  0349
@ER00007 LM    @14,@09,@SA00007                                    0349
         LM    @11,@12,@SA00007+48                                 0349
         BR    @14                                                 0349
*                                                                  0350
*/********************************************************************/
*/*                                                                  */
*/*  THIS FUNCTION IS CALLED WHEN THE CONTROL IS PASSED FROM THE     */
*/*  INITIATOR MODULE IEFSD162 AFTER ALLOCATION IS DONE,     @YM07086*/
*/*  OR WHEN THE CONTROL IS PASSED FROM IEFXB604 AFTER JOB   @YM07086*/
*/*  HAS RESTARTED BUT BEFORE JOB RESUMES NORMAL PROCESSING. @YM07086*/
*/*  A CHAIN OF CONTROL BLOCKS ARE JOURNALLED-JCT,PDI,GDGNT, @YM07086*/
*/*  VUT AND SCT.  PROCEDURE RUNSIOT WILL BE CALLED TO       @YM07086*/
*/*  JOURNAL SIOT,JFCB,JFCBX AND JFCBE. NOTE THAT FOR        @Z40MPSJ*/
*/*  RESTARTED JOBS, ALL SCTS (FROM FIRST STEP TO THE        @YM07086*/
*/*  FAILING STEP BUT NOT INCLUDEING THE FAILING STEP) ARE   @YM07086*/
*/*  JOURNALLED AND FOR NORMAL JOB ONLY THE CURRENT STEP'S   @YM07086*/
*/*  SCT IS JOURNALLED.    THE JOURNALLING PROCESSING IS     @YM07086*/
*/*  TERMINATED IF ERROR SHOULD OCCUR DURING WRITE TO JOB    @YM07086*/
*/*  JOURNAL DATA SET.                                       @YM07086*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0350
*RUNCHAIN:                                                         0350
*   PROCEDURE;                                                     0350
RUNCHAIN STM   @14,@09,@SA00008                                    0350
         STM   @11,@12,@SA00008+48                                 0350
*   LCTPTR=JNLPPTRX;                /* SAVE LCT PTR                  */
         L     @15,JNLPPTRX(,JNLPTR)                               0351
         LR    LCTPTR,@15                                          0351
*   JCTPTR=JNLPPTRX->LCTJCTAD;      /* PTR TO IN CORE JCT            */
         L     JCTPTR,LCTJCTAD(,@15)                               0352
*   VIRTUAL=JCTDSKAD;               /* OBTAIN PTR TO JCT             */
         SLR   VIRTUAL,VIRTUAL                                     0353
         ICM   VIRTUAL,7,JCTDSKAD(JCTPTR)                          0353
*   CALL JOURNAL;                   /* JOURNAL JCT                   */
         BAL   @14,JOURNAL                                         0354
*   VIRTUAL=JCTGDGNT;               /* OBTAIN PTR TO GDG     @YM07086*/
         SLR   VIRTUAL,VIRTUAL                                     0355
         ICM   VIRTUAL,7,JCTGDGNT(JCTPTR)                          0355
*   DO WHILE ERROR<BAD&VIRTUAL^=NO; /* CONTINUE TO END IF NO ERROR   */
         B     @DE00356                                            0356
@DL00356 DS    0H                                                  0357
*     CALL JOURNAL;                 /* JOURNAL GDG           @YM07086*/
         BAL   @14,JOURNAL                                         0357
*     VIRTUAL=VIRTUAL+PRFX;         /* SKIP THE PREFIX       @YM07086*/
         AL    VIRTUAL,PRFX                                        0358
*     VIRTUAL=VIRTUAL->GNTNEXTP;    /* OBTAIN PTR TO NEXT GDG      0359
*                                                            @YM07086*/
         SLR   @15,@15                                             0359
         ICM   @15,7,GNTNEXTP(VIRTUAL)                             0359
         LR    VIRTUAL,@15                                         0359
*   END;                            /*                       @YM07086*/
@DE00356 C     ERROR,@CF00078                                      0360
         BNL   @DC00356                                            0360
         LTR   VIRTUAL,VIRTUAL                                     0360
         BNZ   @DL00356                                            0360
@DC00356 DS    0H                                                  0361
*   VIRTUAL=JCTPDIP;                /* OBTAIN PTR TO PDI BLOCK     0361
*                                                            @YM07086*/
         SLR   VIRTUAL,VIRTUAL                                     0361
         ICM   VIRTUAL,7,JCTPDIP(JCTPTR)                           0361
*   DO WHILE VIRTUAL^=NO&ERROR<BAD; /* CONTINUE IF NO ERROR  @YM07086*/
         B     @DE00362                                            0362
@DL00362 DS    0H                                                  0363
*     CALL JOURNAL;                 /* JOURNAL PDI BLOCK     @YM07086*/
         BAL   @14,JOURNAL                                         0363
*     PDIBLPTR=VIRTUAL+PRFX;        /* SKIP THE PREFIX               */
         LR    @15,VIRTUAL                                         0364
         AL    @15,PRFX                                            0364
         ST    @15,PDIBLPTR                                        0364
*     VIRTUAL=PDIBLPTR->PDINPDIP;   /* OBTAIN PTR TO NEXT PDI BLK    */
         SLR   VIRTUAL,VIRTUAL                                     0365
         ICM   VIRTUAL,7,PDINPDIP(@15)                             0365
*   END;                                                           0366
@DE00362 LTR   VIRTUAL,VIRTUAL                                     0366
         BZ    @DC00362                                            0366
         C     ERROR,@CF00078                                      0366
         BL    @DL00362                                            0366
@DC00362 DS    0H                                                  0367
*   VIRTUAL=JCTVULDP;               /* OBTAIN PTR TO 1ST VUT         */
         SLR   VIRTUAL,VIRTUAL                                     0367
         ICM   VIRTUAL,7,JCTVULDP(JCTPTR)                          0367
*   DO WHILE VIRTUAL^=NO&ERROR<BAD; /* CONTINUE IS NO ERROR          */
         B     @DE00368                                            0368
@DL00368 DS    0H                                                  0369
*     CALL JOURNAL;                 /* JOURNAL VUT                   */
         BAL   @14,JOURNAL                                         0369
*     VUTPTR=VIRTUAL+PRFX;          /* SKIP THE PREFIX               */
         LR    @15,VIRTUAL                                         0370
         AL    @15,PRFX                                            0370
         ST    @15,VUTPTR                                          0370
*     VIRTUAL=VUTNSVA;              /* PTR TO NEXT VUT               */
         SLR   VIRTUAL,VIRTUAL                                     0371
         ICM   VIRTUAL,7,VUTNSVA(@15)                              0371
*   END;                                                           0372
@DE00368 LTR   VIRTUAL,VIRTUAL                                     0372
         BZ    @DC00368                                            0372
         C     ERROR,@CF00078                                      0372
         BL    @DL00368                                            0372
@DC00368 DS    0H                                                  0373
*   IF LCTRFBSM=ON&LCTRFBDC=OF THEN                                0373
         TM    LCTRFBSM(LCTPTR),B'10000000'                        0373
         BNO   @RF00373                                            0373
         TM    LCTRFBDC(LCTPTR),B'00010000'                        0373
         BNZ   @RF00373                                            0373
*     DO;                           /* IF STEP RESTART       @YM07086*/
*       SCTPTR=JCTSDKAD+PRFX;       /* SCTPTR OF 1ST STEP    @YM07086*/
         SLR   @05,@05                                             0375
         ICM   @05,7,JCTSDKAD(JCTPTR)                              0375
         AL    @05,PRFX                                            0375
         ST    @05,SCTPTR                                          0375
*       DO WHILE ERROR<BAD&SCTSNUMB<JCTSNUMB;/* NOT RESTART STEP   0376
*                                                            @YM07086*/
         B     @DE00376                                            0376
@DL00376 DS    0H                                                  0377
*         VIRTUAL=SCTDISKA;         /* SVA OF THE SCT        @YM07086*/
         L     @15,SCTPTR                                          0377
         SLR   VIRTUAL,VIRTUAL                                     0377
         ICM   VIRTUAL,7,SCTDISKA(@15)                             0377
*         CALL JOURNAL;             /* JOURNAL SCT           @YM07086*/
         BAL   @14,JOURNAL                                         0378
*         CALL RUNSIOT;             /* JNL SIOT AND JFCB CHAINS ALSO
*                                      JFCBE OR JFCBX,IF ANY @Z40MPSJ*/
         BAL   @14,RUNSIOT                                         0379
*         SCTPTR=SCTANSCT+PRFX;     /* SCTPTR OF NEXT STEP   @YM07086*/
         L     @05,SCTPTR                                          0380
         SLR   @15,@15                                             0380
         ICM   @15,7,SCTANSCT(@05)                                 0380
         AL    @15,PRFX                                            0380
         ST    @15,SCTPTR                                          0380
*       END;                        /* STOP WHEN FAILING STEP REACHED
*                                                            @YM07086*/
@DE00376 C     ERROR,@CF00078                                      0381
         BNL   @DC00376                                            0381
         L     @05,SCTPTR                                          0381
         CLC   SCTSNUMB(1,@05),JCTSNUMB(JCTPTR)                    0381
         BL    @DL00376                                            0381
@DC00376 DS    0H                                                  0382
*     END;                          /*                       @YM07086*/
*   ELSE                                                           0383
*     DO;                           /* IF RESTART JOB        @YM07086*/
         B     @RC00373                                            0383
@RF00373 DS    0H                                                  0384
*       VIRTUAL=LCTSCTVA;           /* SVA OF CURRENT SCT    @YM07086*/
         SLR   VIRTUAL,VIRTUAL                                     0384
         ICM   VIRTUAL,7,LCTSCTVA(LCTPTR)                          0384
*       IF ERROR<BAD THEN           /* IF NO ERROR           @YM07086*/
         C     ERROR,@CF00078                                      0385
         BNL   @RF00385                                            0385
*         CALL JOURNAL;             /* JNL CURRENT SCT       @YM07086*/
         BAL   @14,JOURNAL                                         0386
*       SCTPTR=VIRTUAL+PRFX;        /* IN CORE SCTPTR        @YM07086*/
@RF00385 LR    @03,VIRTUAL                                         0387
         AL    @03,PRFX                                            0387
         ST    @03,SCTPTR                                          0387
*       CALL RUNSIOT;               /* JNL SIOT,JFCB,&       @YM07086*/
         BAL   @14,RUNSIOT                                         0388
*     END;                          /* JFCBX                 @YM07086*/
*   IF JSCBJRBA^=NOTHING&LCTRFBCR=OF THEN/*                  @YM07086*/
@RC00373 CLC   JSCBJRBA(8,JSCBPTR),NOTHING                         0390
         BE    @RF00390                                            0390
         TM    LCTRFBCR(LCTPTR),B'01000000'                        0390
         BNZ   @RF00390                                            0390
*     CALL JHRUPDT;                 /* TO UPDATE JHR         @YM07086*/
         BAL   @14,JHRUPDT                                         0391
*   END RUNCHAIN;                                                  0392
@EL00008 DS    0H                                                  0392
@EF00008 DS    0H                                                  0392
@ER00008 LM    @14,@09,@SA00008                                    0392
         LM    @11,@12,@SA00008+48                                 0392
         BR    @14                                                 0392
*                                                                  0393
*/****************************************************************** */
*/*                                                                  */
*/* THIS ROUTINE WIIL JOURNAL ALL SIOTS THAT CHAINED OFF OF  @YM07086*/
*/* SCT AND ALL OF THE JFCB AND JFCBXS OR JFCBES THAT ARE    @Z40MPSJ*/
*/* CHAINED OFF OF EACH SIOTS.                               @YM07086*/
*/* FOR AUTO RESTART JOBS (BOTH STEP AND CHECKPOINT),        @YM08147*/
*/* SOME VIO BLOCKS FOR THE NON-FAILING STEPS WILL BE        @YM08147*/
*/* JOURNALLED.  FOR CHECKPOINT RESTART JOBS, IN ADDITION TO @YM08147*/
*/* THE ABOVE , THE VIO BLOCKS WILL ALSO BE JOURNALLED AFTER @YM08147*/
*/* THE ALLOCATION OF THE FAILING STEP.                      @YM08147*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0393
*RUNSIOT:                                                          0393
*   PROCEDURE;                                                     0393
RUNSIOT  STM   @14,@09,@SA00009                                    0393
         STM   @11,@12,@SA00009+48                                 0393
*   VIRTUAL=SCTFSIOT;               /* OBTAIN PTR TO 1ST SIOT      0394
*                                                            @YM07086*/
         L     @03,SCTPTR                                          0394
         SLR   VIRTUAL,VIRTUAL                                     0394
         ICM   VIRTUAL,7,SCTFSIOT(@03)                             0394
*   DO WHILE VIRTUAL^=NO&ERROR<BAD; /* CONTINUE IF NO ERROR  @YM07086*/
         B     @DE00395                                            0395
@DL00395 DS    0H                                                  0396
*     CALL JOURNAL;                 /* JOURNAL SIOT          @YM07086*/
         BAL   @14,JOURNAL                                         0396
*     SIOTPTR=VIRTUAL+PRFX;         /* SKIP THE PREFIX       @YM07086*/
         LR    @04,VIRTUAL                                         0397
         AL    @04,PRFX                                            0397
         ST    @04,SIOTPTR                                         0397
*     VIRTUAL=SIOTPTR->SCTPJFCB;    /* OBTAIN PTR TO JFCB    @YM07086*/
         SLR   VIRTUAL,VIRTUAL                                     0398
         ICM   VIRTUAL,7,SCTPJFCB(@04)                             0398
*     CALL JOURNAL;                 /* JOURNAL JFCB          @YM07086*/
         BAL   @14,JOURNAL                                         0399
*     JFCBPTR=VIRTUAL+PRFX;         /* SKIP THE PREFIX       @YM07086*/
         LR    JFCBPTR,VIRTUAL                                     0400
         AL    JFCBPTR,PRFX                                        0400
*     VIRTUAL=JFCBEXAD;             /* OBTAIN PTR TO 1ST JFCBX OR  0401
*                                      JFCBE                 @Z40MPSJ*/
         L     VIRTUAL,JFCBEXAD-1(,JFCBPTR)                        0401
         LA    VIRTUAL,0(,VIRTUAL)                                 0401
*     DO WHILE VIRTUAL^=NO&ERROR<BAD;/* CONTINUE IF NO ERROR @YM07086*/
         B     @DE00402                                            0402
@DL00402 DS    0H                                                  0403
*       CALL JOURNAL;               /* JOURNAL JFCBX OR JFCBE      0403
*                                                            @Z40MPSJ*/
         BAL   @14,JOURNAL                                         0403
*       VIRTUAL=VIRTUAL+PRFX;       /* SKIP THE PREFIX       @YM07086*/
         AL    VIRTUAL,PRFX                                        0404
*       IF JFCBEXTP=ON              /* IF JFCBE BLOCK        @Z40MPSJ*/
*         THEN                      /* THEN                  @Z40MPSJ*/
         TM    JFCBEXTP(JFCBPTR),B'10000000'                       0405
         BNO   @RF00405                                            0405
*         VIRTUAL=VIRTUAL->JFCBEXTR;/* OBTAIN PTR TO NEXT JFCBE    0406
*                                                            @Z40MPSJ*/
         SLR   @04,@04                                             0406
         ICM   @04,7,JFCBEXTR(VIRTUAL)                             0406
         LR    VIRTUAL,@04                                         0406
*       ELSE                        /* ELSE                  @Z40MPSJ*/
*         VIRTUAL=VIRTUAL->JFCBXTTR;/* OBTAIN PTR TO NXT JFCBX     0407
*                                                            @YM07086*/
         B     @RC00405                                            0407
@RF00405 SLR   @04,@04                                             0407
         ICM   @04,7,JFCBXTTR(VIRTUAL)                             0407
         LR    VIRTUAL,@04                                         0407
*     END;                          /*                       @YM07086*/
@RC00405 DS    0H                                                  0408
@DE00402 LTR   VIRTUAL,VIRTUAL                                     0408
         BZ    @DC00402                                            0408
         C     ERROR,@CF00078                                      0408
         BL    @DL00402                                            0408
@DC00402 DS    0H                                                  0409
*     IF JSCBJRBA^=NOTHING&SIOVAMDS=ON/* JNL VIO BLKS FOR    @YM08147*/
*       THEN                                                       0409
         CLC   JSCBJRBA(8,JSCBPTR),NOTHING                         0409
         BE    @RF00409                                            0409
         L     @03,SIOTPTR                                         0409
         TM    SIOVAMDS(@03),B'00100000'                           0409
         BNO   @RF00409                                            0409
*       DO;                         /* NON-FAILING STEPS     @YM08147*/
*         VDSCBPTR=SIOUCBAD;        /* OBTAIN VDSCB PTR      @YM08147*/
         L     @15,SIOTPTR                                         0411
         L     @15,SIOUCBAD-1(,@15)                                0411
         LA    @15,0(,@15)                                         0411
         LR    VDSCBPTR,@15                                        0411
*         IF VDSCBPTR^=NO&ERROR<BAD /* JNL VDSCB,IF ANY      @YM08147*/
*           THEN                                                   0412
         LTR   VDSCBPTR,VDSCBPTR                                   0412
         BZ    @RF00412                                            0412
         C     ERROR,@CF00078                                      0412
         BNL   @RF00412                                            0412
*           DO;                     /*                       @YM08147*/
*             DRTBK=DRTBK&&DRTBK;   /* CLEAR WORK AREA       @YM08147*/
         XC    DRTBK(235),DRTBK                                    0414
*             DRTPTR=SIOUCBAD;      /* INSERT VDSCB PTR      @YM08147*/
         STCM  @15,7,DRTPTR                                        0415
*             DRTID=VDSID;          /* INSERT BLK ID         @YM08147*/
         MVI   DRTID,X'FC'                                         0416
*             DRTLNG=LENGTH(VDSCB); /* OBTAIN BLK LENGTH     @YM08147*/
         LA    @04,205                                             0417
         STCM  @04,7,DRTLNG                                        0417
*             DRTBLK=VDSCBPTR->TEMPBLK(ONE:DRTLNG);/* MOVE BLK     0418
*                                                            @YM08147*/
         MVI   DRTBLK+1,C' '                                       0418
         MVC   DRTBLK+2(217),DRTBLK+1                              0418
         BCTR  @04,0                                               0418
         EX    @04,@SM02706                                        0418
*             DRTRBN=VDSRBN;        /* INSERT BLK RBN        @YM08147*/
         L     @04,VDSRBN(,VDSCBPTR)                               0419
         ST    @04,DRTRBN                                          0419
*             VIRTUAL=ADDR(DRTBK);  /* SET UP ADDRESS FOR JNL      0420
*                                                            @YM08147*/
         LA    VIRTUAL,DRTBK                                       0420
*             CALL JOURNAL;         /* WRITE TO JOB JNL      @YM08147*/
         BAL   @14,JOURNAL                                         0421
*             SAVERBN=VDSRBN;       /* SAVE RBN FOR LATER USE      0422
*                                                            @YM08147*/
         L     @05,VDSRBN(,VDSCBPTR)                               0422
         ST    @05,SAVERBN                                         0422
*             VBPHPTR=VDSDSPCT;     /* OBTAIN VBP PTR        @YM08147*/
         L     @15,VDSDSPCT(,VDSCBPTR)                             0423
         LR    VBPHPTR,@15                                         0423
*             RFY                                                  0424
*               VBPDSPCT BASED(VBPHPTR);/* SET UP PTR FOR VBP      0424
*                                                            @YM08147*/
*             IF VBPHPTR^=NO&ERROR<BAD/* JNL VBP IF ANY      @YM08147*/
*               THEN                                               0425
         LTR   VBPHPTR,VBPHPTR                                     0425
         BZ    @RF00425                                            0425
         C     ERROR,@CF00078                                      0425
         BNL   @RF00425                                            0425
*               DO;                 /*                       @YM08147*/
*                 DRTBK=DRTBK&&DRTBK;/* CLEAR WORK AREA      @YM08147*/
         XC    DRTBK(235),DRTBK                                    0427
*                 DRTPTR=VDSDSPCT;  /* INSERT VBP PTR        @YM08147*/
         STCM  @15,7,DRTPTR                                        0428
*                 DRTID=VBPID;      /* INSERT VBP ID - 'FE'  @YM08147*/
         MVI   DRTID,X'FE'                                         0429
*                 DRTLNG=LENGTH(VBPHJJ);/* INSERT BLK LENGTH @YM08147*/
         LA    @14,52                                              0430
         STCM  @14,7,DRTLNG                                        0430
*                 DRTBLK=VDSDSPCT->TEMPBLK(ONE:DRTLNG);/* MOVE BLK 0431
*                                                            @YM08147*/
         MVI   DRTBLK+1,C' '                                       0431
         MVC   DRTBLK+2(217),DRTBLK+1                              0431
         BCTR  @14,0                                               0431
         EX    @14,@SM02708                                        0431
*                 DRTRBN=VBPHRBN;   /* INSERT BLK RBN        @YM08147*/
         L     @03,VBPHRBN(,VBPHPTR)                               0432
         ST    @03,DRTRBN                                          0432
*                 VIRTUAL=ADDR(DRTBK);/* SET UP ADDR FOR JNL @YM08147*/
         LA    VIRTUAL,DRTBK                                       0433
*                 CALL JOURNAL;     /* WRITE TO JOB JNL      @YM08147*/
         BAL   @14,JOURNAL                                         0434
*                 IF SAVERBN<VBPHRBN THEN/* SAVE RBN IF HIGHER     0435
*                                                            @YM08147*/
         L     @05,VBPHRBN(,VBPHPTR)                               0435
         CL    @05,SAVERBN                                         0435
         BNH   @RF00435                                            0435
*                   SAVERBN=VBPHRBN;/*                       @YM08147*/
         ST    @05,SAVERBN                                         0436
*               END;                /*                       @YM08147*/
@RF00435 DS    0H                                                  0438
*             QMPAPTR=JSCBQMPI;     /* OBTAIN PTR TO QMPA    @YM08147*/
@RF00425 L     QMPAPTR,JSCBQMPI(,JSCBPTR)                          0438
*             IF QMRBN<SAVERBN THEN /* RESET RBN IN QMPA     @YM08147*/
         L     @05,SAVERBN                                         0439
         C     @05,QMRBN(,QMPAPTR)                                 0439
         BNH   @RF00439                                            0439
*               QMRBN=SAVERBN;      /* IF HIGHER             @YM08147*/
         ST    @05,QMRBN(,QMPAPTR)                                 0440
*           END;                    /*                       @YM08147*/
@RF00439 DS    0H                                                  0442
*       END;                        /*                       @ZA03885*/
@RF00412 DS    0H                                                  0443
*     VIRTUAL=SIOTPTR->SCTPSIOT;    /* OBTAIN PTR TO NXT SIOT      0443
*                                                            @YM07086*/
@RF00409 L     @03,SIOTPTR                                         0443
         SLR   VIRTUAL,VIRTUAL                                     0443
         ICM   VIRTUAL,7,SCTPSIOT(@03)                             0443
*   END;                            /*                       @YM07086*/
@DE00395 LTR   VIRTUAL,VIRTUAL                                     0444
         BZ    @DC00395                                            0444
         C     ERROR,@CF00078                                      0444
         BL    @DL00395                                            0444
@DC00395 DS    0H                                                  0445
*   END RUNSIOT;                                                   0445
@EL00009 DS    0H                                                  0445
@EF00009 DS    0H                                                  0445
@ER00009 LM    @14,@09,@SA00009                                    0445
         LM    @11,@12,@SA00009+48                                 0445
         BR    @14                                                 0445
*                                                                  0446
*/********************************************************************/
*/*                                                                  */
*/*  THIS FUNCTION IS IMPLEMENTED TO ALLOW NON-SWA CONTROL BLOCKS TO */
*/*  BE JOURNALLED WITHOUT GOING THROUGH SWA MANAGER.  THE BLOCKS    */
*/*  BEING JOURNALLED VIA THIS FUNCTION ARE : THE STEP HEADER RECORD */
*/*  OR VAM CONTROL BLOCKS.                                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0446
*DRTWRT:                                                           0446
*   PROCEDURE;                                                     0446
DRTWRT   STM   @14,@09,@SA00010                                    0446
         STM   @11,@12,@SA00010+48                                 0446
*   PARMXPTR=JNLPPTRX;              /* INIT PTR TO FIRST JNLPARM EXT
*                                                            @Z40FPPJ*/
         L     PARMXPTR,JNLPPTRX(,JNLPTR)                          0447
*   RFY                                                            0448
*     JNLPARMX BASED(PARMXPTR);     /* SET NEW BASE FOR PARM EXT   0448
*                                                            @VS41821*/
*   DO WHILE(PARMXPTR^=NO&ERROR<BAD);/* JOURNAL A CHAIN OF BLOCKS IF
*                                      ONE EXISTS            @Z40FPPJ*/
         B     @DE00449                                            0449
@DL00449 DS    0H                                                  0450
*     DRTBK=DRTBK&&DRTBK;           /* CLEAR SPACE                   */
         XC    DRTBK(235),DRTBK                                    0450
*     I=FIVE;                       /* CHECK FOR VALID ID            */
         LA    @05,5                                               0451
         STH   @05,I                                               0451
*     J=JNLPID+ONE;                                                0452
         LA    J,1                                                 0452
         SLR   @15,@15                                             0452
         IC    @15,JNLPID(,PARMXPTR)                               0452
         ALR   J,@15                                               0452
*     TEMP1=TEMPLATE(J)&TEST(I);                                   0453
         SLR   @15,@15                                             0453
         IC    @15,TEST-1(@05)                                     0453
         SLR   @05,@05                                             0453
         IC    @05,TEMPLATE-1(J)                                   0453
         NR    @05,@15                                             0453
         STC   @05,TEMP1                                           0453
*     IF TEMP1=TEST(I) THEN                                        0454
         CR    @05,@15                                             0454
         BNE   @RF00454                                            0454
*       DO;                                                        0455
*         IF JNLPID=SHRID×JNLPID=JHRID THEN/* SHR OR JHR     @YM07086*/
         CLI   JNLPID(PARMXPTR),192                                0456
         BE    @RT00456                                            0456
         CLI   JNLPID(PARMXPTR),193                                0456
         BNE   @RF00456                                            0456
@RT00456 DS    0H                                                  0457
*           DRTRBN(ONE:FOUR)=ZERO;  /* SET RBN TO ZERO       @YM07086*/
         SLR   @15,@15                                             0457
         STCM  @15,15,DRTRBN                                       0457
*         ELSE                                                     0458
*           DO;                                                    0458
         B     @RC00456                                            0458
@RF00456 DS    0H                                                  0459
*             IF JNLRBN=ZERO THEN   /* BLOCK 1ST TIME TO BE -        */
         L     @15,JNLRBN(,PARMXPTR)                               0459
         LTR   @15,@15                                             0459
         BNZ   @RF00459                                            0459
*               DO;                 /* JOURANLLED                    */
*                 QMPAPTR=JSCBQMPI; /* OBTAIN SWA QMPA PTR           */
         L     QMPAPTR,JSCBQMPI(,JSCBPTR)                          0461
*                 TEMP=QMRBN;       /* OBTAIN LAST ASSIGNED RBN      */
         L     TEMP,QMRBN(,QMPAPTR)                                0462
*LOOP:                                                             0463
*                 TEMP2=TEMP+ONE;   /* PLUS ONE IF DOES NOT MATCH    */
LOOP     LA    @15,1                                               0463
         ALR   @15,TEMP                                            0463
         ST    @15,TEMP2                                           0463
*                 CS(TEMP,TEMP2,QMRBN);/* COMPARE AND SWAP           */
         CS    TEMP,@15,QMRBN(QMPAPTR)                             0464
*                 BC(4,LOOP);                                      0465
         BC    4,LOOP                                              0465
*                 GEN(IC R2,CALLRKEY );/* RESTORE CALLER KEY - REG 2 */
         IC R2,CALLRKEY
*                 GEN(MODESET KEYADDR=(2));/* RESTORE CALLER'S KEY   */
         MODESET KEYADDR=(2)
*                 JNLRBN=QMRBN;                                    0468
         L     @05,QMRBN(,QMPAPTR)                                 0468
         ST    @05,JNLRBN(,PARMXPTR)                               0468
*                 GEN(MODESET EXTKEY=SCHED );/* RESET KEY TO ONE     */
         MODESET EXTKEY=SCHED
*               END;                                               0470
*             DRTRBN(ONE:FOUR)=JNLRBN;/* INSERT RBN INTO PREFIX      */
@RF00459 MVC   DRTRBN(4),JNLRBN(PARMXPTR)                          0471
*           END;                                                   0472
*         DRTPTR=JNLBLKAD;          /* PTR TO THE BLOCK              */
@RC00456 L     @04,JNLBLKAD(,PARMXPTR)                             0473
         STCM  @04,7,DRTPTR                                        0473
*         DRTID=JNLPID;             /* INSERT BLOCK ID               */
         IC    @15,JNLPID(,PARMXPTR)                               0474
         STC   @15,DRTID                                           0474
*         DRTLNG=JNLPRLNG;          /* LENGTH OF BLK PLUS PREFIX     */
         L     @15,JNLPRLNG-1(,PARMXPTR)                           0475
         LA    @15,0(,@15)                                         0475
         STCM  @15,7,DRTLNG                                        0475
*         DRTBLK(ONE:JNLPRLNG)=JNLBLKAD->TEMPBLK(ONE:JNLPRLNG);/*  0476
*                                                            @Z40FPPJ*/
         BCTR  @15,0                                               0476
         EX    @15,@SM02710                                        0476
*         VIRTUAL=ADDR(DRTBK);      /* PASS THE PTR OF THE BLK       */
         LA    VIRTUAL,DRTBK                                       0477
*         CALL JOURNAL;             /* JOURNAL THE BLOCK             */
         BAL   @14,JOURNAL                                         0478
*       END;                                                       0479
*     ELSE                                                         0480
*       DO;                                                        0480
         B     @RC00454                                            0480
@RF00454 DS    0H                                                  0481
*         CALL ERRMSG;              /* ATTEMPT TO JOURNAL -          */
         BAL   @14,ERRMSG                                          0481
*         ERROR=NOJL;               /* UNAUTHORIZED BLOCK            */
         LA    ERROR,3                                             0482
*       END;                                                       0483
*     PARMXPTR=JNLNBLK;             /* POINT TO NEXT BLK     @Z40FPPJ*/
@RC00454 L     PARMXPTR,JNLNBLK(,PARMXPTR)                         0484
*   END;                            /* NO MORE BLKS OR ERR   @Z40FPPJ*/
@DE00449 LTR   PARMXPTR,PARMXPTR                                   0485
         BZ    @DC00449                                            0485
         C     ERROR,@CF00078                                      0485
         BL    @DL00449                                            0485
@DC00449 DS    0H                                                  0486
*   END DRTWRT;                                                    0486
@EL00010 DS    0H                                                  0486
@EF00010 DS    0H                                                  0486
@ER00010 LM    @14,@09,@SA00010                                    0486
         LM    @11,@12,@SA00010+48                                 0486
         BR    @14                                                 0486
@PB00010 DS    0H                                                  0486
*   END IEFXB500                                                   0487
*                                                                  0487
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IEFALLCT)                                       */
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                       */
*/*%INCLUDE SYSLIB  (IEFASCTB)                                       */
*/*%INCLUDE SYSLIB  (IEFASIOT)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBE)                                       */
*/*%INCLUDE SYSLIB  (IEFJFCBX)                                       */
*/*%INCLUDE SYSLIB  (IEFQMNGR)                                       */
*/*%INCLUDE SYSLIB  (IEFZB502)                                       */
*/*%INCLUDE SYSLIB  (IEFZB505)                                       */
*/*%INCLUDE SYSLIB  (IEFZB506)                                       */
*/*%INCLUDE SYSLIB  (IEFZB435)                                       */
*/*%INCLUDE SYSLIB  (IEFZB429)                                       */
*/*%INCLUDE SYSLIB  (IEFZB507)                                       */
*/*%INCLUDE SYSLIB  (IEFZB438)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IDDVDSCB)                                       */
*/*%INCLUDE SYSLIB  (IDAVBPH )                                       */
*                                                                  0487
*       ;                                                          0487
@DATA    DS    0H
@CH00058 DC    H'4'
@SM02694 MVC   DEQE(0),DEQL
@SM02699 MVC   ENQE(0),ENQL
@SM02701 MVC   MSG(0),MESS1(@14)
@SM02706 MVC   DRTBLK(0),TEMPBLK(VDSCBPTR)
@SM02708 MVC   DRTBLK(0),TEMPBLK(@15)
@SM02710 MVC   DRTBLK(0),TEMPBLK(@04)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    14F
@SA00003 DS    14F
@SA00008 DS    14F
@SA00010 DS    14F
@SA00005 DS    14F
@SA00006 DS    14F
@SA00004 DS    14F
@SA00007 DS    14F
@SA00009 DS    14F
IEFXB500 CSECT
         DS    0F
@CF00042 DC    F'0'
@CF00066 DC    F'1'
@CH00066 EQU   @CF00066+2
@CF00078 DC    F'2'
@CH00078 EQU   @CF00078+2
@CF00293 DC    F'3'
@CH00293 EQU   @CF00293+2
@CF00064 DC    F'8'
@CF00039 DC    F'16'
@CF02595 DC    F'34'
@DATD    DSECT
         DS    0D
SCTPTR   DS    A
SIOTPTR  DS    A
JFCBEPTR DS    A
JFCBXPTR DS    A
SPFXPTR  DS    A
PDIBLPTR DS    A
GDGNTPTR DS    A
VUTPTR   DS    A
K        DS    A
EPALEN   DS    F
PRFX     DS    F
TEMP2    DS    F
SAVERBN  DS    F
RPLPTR   DS    A
I        DS    H
CALLRKEY DS    FL1
RECNO    DS    AL1
TEMP1    DS    CL1
         DS    CL3
DRTBK    DS    CL235
         ORG   DRTBK
DRTRBN   DS    CL4
@NM00170 DS    AL1
DRTPTR   DS    AL3
DRTID    DS    AL1
DRTLNG   DS    AL3
@NM00171 DS    CL4
DRTBLK   DS    CL219
         ORG   DRTBK+235
         DS    CL1
MSG      DS    CL80
WORK     DS    CL34
SAVERBA  DS    CL8
IEFXB500 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC02623 DC    C'MG01'
JNLMASK  DC    B'00100000'
NAME1    DC    CL8'SYSIEFSD'
NAME2    DC    CL4'RPLL'
NOTHING  DC    X'0000000000000000'
PATCH    DS    CL100
TEST     DC    AL1(128)
         DC    AL1(64)
         DC    AL1(32)
         DC    AL1(16)
         DC    AL1(8)
TEMPLATE DC    AL1(32)
         DC    AL1(0)
         DC    AL1(32)
         DC    AL1(32)
         DC    24AL1(0)
         DC    2AL1(32)
         DC    3AL1(0)
         DC    AL1(32)
         DC    AL1(0)
         DC    AL1(32)
         DC    2AL1(0)
         DC    AL1(32)
         DC    2AL1(0)
         DC    AL1(32)
         DC    150AL1(0)
         DC    AL1(8)
         DC    AL1(8)
         DC    58AL1(0)
         DC    AL1(8)
         DC    AL1(0)
         DC    AL1(8)
         DC    AL1(0)
@DATD    DSECT
DEQE     DEQ   (NAME1,NAME2,4,STEP),MF=L DYNAMIC AREA FOR DEQ LIST
IEFXB500 CSECT
DEQL     DEQ   (NAME1,NAME2,4,STEP),MF=L IN CORE DEQ LIST
DEQLNG   DC    A(*-DEQL)                 LENGTH OF THE LIST
@DATD    DSECT
ENQE     ENQ   (NAME1,NAME2,E,4,STEP),MF=L DYNAMIC AREA FOR ENQ LIST
IEFXB500 CSECT
ENQL     ENQ   (NAME1,NAME2,E,4,STEP),MF=L IN CORE AREA FOR ENQ LIST
ENQLNG   DC    A(*-ENQL)                 LENGTH OF THE LIST
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFXB500 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PARMXPTR EQU   @03
JHRPTR   EQU   @03
TEMP     EQU   @05
ERROR    EQU   @10
J        EQU   @04
VIRTUAL  EQU   @05
VBPHPTR  EQU   @04
VDSCBPTR EQU   @03
EPAPTR   EQU   @03
SWEPAPTR EQU   @03
QMPAPTR  EQU   @04
JFCBPTR  EQU   @03
JCTPTR   EQU   @03
LCTPTR   EQU   @04
TCBPTR   EQU   @05
JSCBPTR  EQU   @07
JNLPTR   EQU   @06
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R11      EQU   @11
R15      EQU   @15
CVTTEMP  EQU   @04
R13      EQU   @13
CVTPTR   EQU   16
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBQMPI EQU   JSCBSEC1+56
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00017 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTSCTVA EQU   LCTWORKA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00044 EQU   LCT+76
LCTINTSW EQU   @NM00044
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
@NM00070 EQU   LCT+356
LCTOPSW2 EQU   @NM00070
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
LCTRFBSM EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
@NM00083 EQU   LCT+420
LCTINTS2 EQU   @NM00083+1
INJMJCT  EQU   0
JCTDSKAD EQU   INJMJCT
JCTJSTAT EQU   INJMJCT+5
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTPDIP  EQU   INJMJCT+24
JCTGDGNT EQU   INJMJCT+28
JCTSDKAD EQU   INJMJCT+32
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTRSW2  EQU   INJMJCT+87
JCTSNUMB EQU   INJMJCT+95
JCTJSB   EQU   INJMJCT+111
JCTSTAT2 EQU   INJMJCT+116
JCTVULDP EQU   INJMJCT+172
IEFAACTB EQU   0
INSMSCT  EQU   0
SCTDISKA EQU   INSMSCT
SCTSSTAT EQU   INSMSCT+4
SCTFSIOT EQU   INSMSCT+12
SCTANSCT EQU   INSMSCT+20
SCTSNUMB EQU   INSMSCT+64
SCTSTYPE EQU   INSMSCT+67
SCTSDPTY EQU   INSMSCT+94
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTCDENT EQU   INSMSCT+118
SCTSTEND EQU   INSMSCT+172
@NM00125 EQU   0
SCTABCND EQU   @NM00125
INDMSIOT EQU   0
SCTUSADD EQU   INDMSIOT+20
SCTPSIOT EQU   INDMSIOT+28
SCTPJFCB EQU   INDMSIOT+32
SIOTBYT1 EQU   INDMSIOT+43
SIOVAMDS EQU   SIOTBYT1
SIOTBYT3 EQU   INDMSIOT+46
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOUCBAD EQU   SCTUTYPE+5
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCBIND2 EQU   INFMJFCB+87
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
JFCBE    EQU   0
JFCBEXTR EQU   JFCBE
JFCBFLAG EQU   JFCBE+4
JFCGROUP EQU   JFCBE+36
JFCBX    EQU   0
JFCBXTTR EQU   JFCBX
QMPA     EQU   0
QMNAM    EQU   QMPA
QMSTA    EQU   QMPA+16
QMSJNL   EQU   QMSTA
QMPCL    EQU   QMPA+32
QMPCMNC  EQU   QMPCL
QMPACL   EQU   QMPCL+1
SWAQMPA  EQU   0
QMRBN    EQU   SWAQMPA+12
SWAPFX   EQU   0
SWPSTA   EQU   SWAPFX+4
SWPID    EQU   SWAPFX+8
SWPLNGTH EQU   SWAPFX+9
SWAEPA   EQU   0
SWVAFW   EQU   SWAEPA+4
SWVA     EQU   SWVAFW
SWCHNPTR EQU   SWAEPA+12
SWAMMEPA EQU   0
SWBUFPTR EQU   SWAMMEPA
SWROWVA  EQU   SWAMMEPA+4
PDIBLOCK EQU   0
PDINPDIP EQU   PDIBLOCK
PDIENTRY EQU   PDIBLOCK+8
PDIE     EQU   0
PDIUNWA  EQU   PDIE+44
GDGNT    EQU   0
GNTNEXTP EQU   GDGNT
GNTGRPEN EQU   GDGNT+8
JNLPARM  EQU   0
JNLPCALL EQU   JNLPARM
JNLSWAMI EQU   JNLPCALL
JNLSWALI EQU   JNLPCALL
JNLINIT  EQU   JNLPCALL
JNLDRCT  EQU   JNLPCALL
JNLPRTCD EQU   JNLPARM+1
JNLERR   EQU   JNLPRTCD
JNLABSNT EQU   JNLPRTCD
JNLPPTRX EQU   JNLPARM+4
JNLPARMX EQU   0
JNLBLKAD EQU   JNLPARMX
JNLPID   EQU   JNLPARMX+4
JNLPRLNG EQU   JNLPARMX+5
JNLRBN   EQU   JNLPARMX+8
JNLNBLK  EQU   JNLPARMX+12
VUNLDTAB EQU   0
VUTNSVA  EQU   VUNLDTAB
VUTENTRY EQU   VUNLDTAB+8
VUTENFLG EQU   VUTENTRY
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLDIR   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLBUFL  EQU   RPLCOMN+52
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
VDSCB    EQU   0
VDSDSPCT EQU   VDSCB+52
VDSRBN   EQU   VDSCB+76
VBPDSPCT EQU   0
VBPHFIX  EQU   VBPDSPCT
VBPHJJ   EQU   VBPHFIX
VBPHLGN  EQU   VBPHJJ+8
VBPHLGID EQU   VBPHLGN
VBPHSYM  EQU   VBPHJJ+16
VBPHOPT  EQU   VBPHJJ+32
VBPHSTA  EQU   VBPHJJ+33
VBPHRBN  EQU   VBPHJJ+48
VBPHBUFC EQU   VBPHFIX+52
VBPHVCB  EQU   VBPHFIX+60
VBPHSAVE EQU   VBPHFIX+64
SECSAVE  EQU   VBPHFIX+136
VBPVCB   EQU   0
VBPVFXD  EQU   VBPVCB
VBPVAPTR EQU   VBPVFXD+36
PARMADDR EQU   0
TCBTEMP  EQU   0
TEMPBLK  EQU   0
MESS1    EQU   0
MSGTAB   EQU   0
MSGID    EQU   MSGTAB
MSGLNG   EQU   MSGTAB+4
MSGADDR  EQU   MSGTAB+5
JHR      EQU   0
JHRSTRBA EQU   JHR+2
JHRCKRBA EQU   JHR+10
INDMDSNT EQU   0
VBPVASIN EQU   0
PARMPTR  EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJRBA EQU   JSCBSEC3+16
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBJNLN EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBT EQU   JSCBJJSB
JSCBJNLR EQU   JSCBSEC3+32
JSCBSUB  EQU   JSCBSEC3+40
JSCBFRBA EQU   JSCBSEC3+48
JSCSCT   EQU   JSCBSEC3+68
JSCBACT  EQU   JSCBSEC3+88
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCBEXTP EQU   JFCUCSOP
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBVOLS EQU   JFCUCSEG+10
JFCBS001 EQU   JFCBVOLS
JFCBEXAD EQU   JFCBS001+31
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBSPNM EQU   JFCBS001+45
JFCBDQTY EQU   JFCBS001+42
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBMSGP EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXTL EQU   JFCBS001+30
JFCMSVGP EQU   JFCBS001+22
@NM00145 EQU   JFCBS001
JFCAVOLS EQU   JFCBVOLS
JFCBNVOL EQU   JFCUCSEG+9
JFCBNTCS EQU   JFCUCSEG+8
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00144 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCORGAM EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00143 EQU   JFCLIMCT
JFCDEN   EQU   JFCSPPRT+1
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLA EQU   JSCBJNL+1
@NM00010 EQU   JSCBJJSB
@NM00009 EQU   JSCBSEC3+24
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00172 EQU   JHR
VBPVMOVE EQU   VBPVCB+40
VCBSAVAD EQU   VBPVFXD+32
VBPVMAP  EQU   VBPVFXD+8
VBPVLEN  EQU   VBPVFXD+4
VBPVNAME EQU   VBPVFXD
VBPHMAD  EQU   VBPDSPCT+216
VBPHTCB  EQU   VBPHFIX+212
VBPHJRNP EQU   VBPHFIX+209
VBPHSPUL EQU   VBPHFIX+208
OPTSAVE  EQU   SECSAVE+18
LGNSAVE  EQU   SECSAVE+10
DSGSAVE  EQU   SECSAVE+8
SECSAVO  EQU   SECSAVE+4
@NM00169 EQU   SECSAVE
VBPHSAVO EQU   VBPHSAVE+4
@NM00168 EQU   VBPHSAVE
VBPHFRAR EQU   VBPHFIX+56
VBPHVOP  EQU   VBPHBUFC
VBPHPRL  EQU   VBPHJJ+44
VBPHWAD  EQU   VBPHJJ+40
VBPHWSZ  EQU   VBPHJJ+38
VBPHMMP  EQU   VBPHJJ+36
VBPHNMP  EQU   VBPHJJ+34
@NM00167 EQU   VBPHSTA
VBPHCLO  EQU   VBPHSTA
VBPHSCR  EQU   VBPHSTA
@NM00166 EQU   VBPHSTA
VBPHRW   EQU   VBPHSTA
VBPHOPE  EQU   VBPHSTA
VBPHJOU  EQU   VBPHOPT
VBPHJRN  EQU   VBPHOPT
VBPHPADD EQU   VBPHOPT
VBPHDEL  EQU   VBPHOPT
VBPHPAS  EQU   VBPHOPT
VBPHRST  EQU   VBPHOPT
VBPHPGLD EQU   VBPHOPT
VBPHINS  EQU   VBPHOPT
VBPHDSSZ EQU   VBPHJJ+28
VBPHDSG  EQU   VBPHJJ+26
VBPHPNP  EQU   VBPHJJ+24
VBPHSYM2 EQU   VBPHSYM+4
VBPHSYM1 EQU   VBPHSYM
VBPHLPG2 EQU   VBPHLGID+2
VBPHLPG1 EQU   VBPHLGID
VBPHLEN  EQU   VBPHJJ+4
VBPHNAME EQU   VBPHJJ
VDSDSCB  EQU   VDSCB+80
VDSNMTRK EQU   VDSCB+74
VDSABSTT EQU   VDSCB+72
VDSWINSI EQU   VDSCB+70
VDSTRKSI EQU   VDSCB+68
VDSWINDW EQU   VDSCB+64
VDSVBPPL EQU   VDSCB+60
VDSWICB  EQU   VDSCB+56
VDSSEEKA EQU   VDSCB+45
VDSUCB   EQU   VDSCB
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00165 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00164 EQU   RPLRBAR+3
@NM00163 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
@NM00162 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
VUTENVOL EQU   VUTENTRY+1
@NM00161 EQU   VUTENFLG
VUTUNLOD EQU   VUTENFLG
VUTENVIR EQU   VUTENFLG
VUTNPTR  EQU   VUNLDTAB+4
VUTENTNO EQU   VUNLDTAB+3
@NM00160 EQU   JNLPARM+2
@NM00159 EQU   JNLPRTCD
@NM00158 EQU   JNLPCALL
@NM00157 EQU   GDGNT+165
GNTENT   EQU   GDGNT+164
GNTBASE  EQU   GNTGRPEN+35
GNTNAME  EQU   GNTGRPEN
GNTNEXTR EQU   GDGNT+4
GNTID    EQU   GDGNT+3
PDISIOTP EQU   PDIE+52
@NM00156 EQU   PDIE+51
PDISIOTA EQU   PDIE+48
PDISTPNO EQU   PDIE+46
@NM00155 EQU   PDIE+45
@NM00154 EQU   PDIUNWA
PDIJOBLB EQU   PDIUNWA
@NM00153 EQU   PDIUNWA
PDIPASIN EQU   PDIUNWA
PDICSTAT EQU   PDIUNWA
PDIISTAT EQU   PDIUNWA
PDIDSNAM EQU   PDIE
PDIBNXTP EQU   PDIBLOCK+4
PDICTR   EQU   PDIBLOCK+3
SWWRTID  EQU   SWAMMEPA+7
SWASNZO  EQU   SWBUFPTR+3
SWASNVA  EQU   SWBUFPTR
SWLNGTH  EQU   SWAEPA+8
SWBLKID  EQU   SWVAFW+3
SWBLKPTR EQU   SWAEPA
SWPACRO  EQU   SWAPFX+12
SWPVA    EQU   SWAPFX+5
@NM00152 EQU   SWPSTA
SWPWRT   EQU   SWPSTA
SWPRBN   EQU   SWAPFX
@NM00151 EQU   SWAQMPA+1
QMSWSP   EQU   SWAQMPA
QMPNC    EQU   QMPCMNC
QMPCM    EQU   QMPCMNC
QMEIA    EQU   QMPA+28
QMWTQ    EQU   QMPA+24
QMRSD1   EQU   QMPA+22
QMTID    EQU   QMPA+20
QMLNK    EQU   QMPA+18
QMPRI    EQU   QMPA+17
@NM00150 EQU   QMSTA
@NM00149 EQU   QMSTA
QMTPY    EQU   QMPA+15
QMNOT    EQU   QMPA+14
QMTLN    EQU   QMPA+12
QMTST    EQU   QMPA+11
QMFLT    EQU   QMPA+9
QMPOP    EQU   QMPA+8
QMPEB    EQU   QMNAM+4
QMCAN    EQU   QMNAM
JFCBXNXT EQU   JFCBX+172
@NM00148 EQU   JFCBX+144
JFCBXDEV EQU   JFCBX+140
JFCBXNAM EQU   JFCBX+96
@NM00147 EQU   JFCBX+94
JFCBXVOL EQU   JFCBX+4
@NM00146 EQU   JFCBX+3
JFCBE010 EQU   JFCBE+44
JFCGRP8  EQU   JFCGROUP+7
JFCGRP7  EQU   JFCGROUP+6
JFCGRP6  EQU   JFCGROUP+5
JFCGRP5  EQU   JFCGROUP+4
JFCGRP4  EQU   JFCGROUP+3
JFCGRP3  EQU   JFCGROUP+2
JFCGRP2  EQU   JFCGROUP+1
JFCGRP1  EQU   JFCGROUP
JFCBTRS4 EQU   JFCBE+32
JFCBTRS3 EQU   JFCBE+28
JFCBTRS2 EQU   JFCBE+24
JFCBTRS1 EQU   JFCBE+20
JFCBE009 EQU   JFCBE+16
JFCMODIF EQU   JFCBE+12
JFCBMAGT EQU   JFCBE+8
JFCIMTOT EQU   JFCBE+7
JFCBE008 EQU   JFCBE+6
JFCIDTRC EQU   JFCBE+5
JFCBE007 EQU   JFCBFLAG
JFCBBST  EQU   JFCBFLAG
JFCBCFS  EQU   JFCBFLAG
JFCBE006 EQU   JFCBFLAG
JFCBE005 EQU   JFCBFLAG
JFCBE004 EQU   JFCBFLAG
JFCBE003 EQU   JFCBFLAG
JFCBEOPN EQU   JFCBFLAG
JFCBE001 EQU   JFCBE+3
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCTEMP  EQU   JFCBIND2
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCDISP  EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00142 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCCAT   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SVOLUNNO EQU   INDMSIOT+168
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTNPTR EQU   INDMSIOT+152
SIOTETIO EQU   INDMSIOT+148
SIOTATE  EQU   INDMSIOT+144
SVOLUNAD EQU   INDMSIOT+140
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
@NM00141 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
SIODDQCR EQU   SIOTBYT2
SIOVDQCR EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
@NM00140 EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00139 EQU   SIOTALTD
@NM00138 EQU   SIOTALTD
@NM00137 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00136 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00135 EQU   INDMSIOT+81
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00134 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
SIOTAFF  EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
SCTALCHK EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
SIOTRETN EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
SIOTDSNM EQU   SIOTTSTC
SIOTTRKM EQU   SIOTTSTC
@NM00133 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
@NM00132 EQU   SIOTTSTC
@NM00131 EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00130 EQU   INDMSIOT+35
@NM00129 EQU   INDMSIOT+31
SIOTAFID EQU   INDMSIOT+26
@NM00128 EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
SCTDDNAM EQU   INDMSIOT+4
SIOTTYPE EQU   INDMSIOT+3
SIOTDSKA EQU   INDMSIOT
@NM00127 EQU   @NM00125+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00126 EQU   SCTABCND
@NM00124 EQU   INSMSCT+173
@NM00123 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00122 EQU   INSMSCT+168
SCTCATCT EQU   INSMSCT+166
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00121 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTPGMNM EQU   INSMSCT+108
SCTTIOT  EQU   INSMSCT+105
@NM00120 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00119 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00118 EQU   SCTBCT
SCTGOTTR EQU   INSMSCT+100
SCTSMF   EQU   INSMSCT+96
@NM00117 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00116 EQU   SCTSDPTY
@NM00115 EQU   SCTSDPTY
SCTNIUSL EQU   INSMSCT+92
@NM00114 EQU   INSMSCT+90
SCTMSSZE EQU   INSMSCT+88
SCTPCAT  EQU   INSMSCT+84
SCTLDSTB EQU   INSMSCT+80
SCTSRBT  EQU   INSMSCT+76
SCTMSADR EQU   INSMSCT+72
@NM00113 EQU   INSMSCT+71
SCTXBTTR EQU   INSMSCT+68
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
SCTGOSTP EQU   SCTSTYPE
@NM00112 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
@NM00111 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
SCTSNAME EQU   INSMSCT+52
SCTSCLPC EQU   INSMSCT+44
@NM00110 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00109 EQU   INSMSCT+36
@NM00108 EQU   INSMSCT+35
SCTAFACT EQU   INSMSCT+32
SCTDDNT  EQU   INSMSCT+28
@NM00107 EQU   INSMSCT+27
SCTLSIOT EQU   INSMSCT+24
@NM00106 EQU   INSMSCT+23
@NM00105 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00104 EQU   INSMSCT+15
SCTLALOC EQU   INSMSCT+10
SCTSEXEC EQU   INSMSCT+8
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
EAADDRBT EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
ACTACCNT EQU   IEFAACTB+32
ACTJNFLD EQU   IEFAACTB+31
ACTJTIME EQU   IEFAACTB+28
ACTPRGNM EQU   IEFAACTB+8
@NM00103 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
@NM00102 EQU   INJMJCT+175
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTUSER  EQU   INJMJCT+160
JCTSSD   EQU   INJMJCT+157
@NM00101 EQU   INJMJCT+156
JCTSRBT  EQU   INJMJCT+152
JCTJMRJD EQU   INJMJCT+149
JCTJMRJT EQU   INJMJCT+146
JCTJMRSS EQU   INJMJCT+143
JCTJMRTL EQU   INJMJCT+140
JCTJMRCL EQU   INJMJCT+139
JCTJMROP EQU   INJMJCT+138
JCTJMRD  EQU   INJMJCT+137
JCTJMR   EQU   INJMJCT+134
JCTCKIDT EQU   INJMJCT+118
JCTCKIDL EQU   INJMJCT+117
@NM00100 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00099 EQU   INJMJCT+115
JCTSSTR  EQU   INJMJCT+112
JCTJSBTM EQU   JCTJSB
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00098 EQU   JCTJSB
JCTVOLSQ EQU   INJMJCT+110
JCTNRCKP EQU   INJMJCT+108
JCTNTRK  EQU   INJMJCT+107
JCTCKTTR EQU   INJMJCT+104
JCTDEVT  EQU   INJMJCT+100
@NM00097 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTQIDNT EQU   INJMJCT+94
JCTEQREG EQU   INJMJCT+92
@NM00096 EQU   INJMJCT+91
JCTDETDA EQU   INJMJCT+88
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTNARST EQU   JCTRSW2
JCTSYSCK EQU   JCTRSW2
@NM00095 EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTCKFT  EQU   JCTRSW1
JCTCONTR EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
JCTWARMS EQU   JCTRSW1
@NM00094 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00093 EQU   INJMJCT+53
JCTSCT   EQU   INJMJCT+52
JCTSMRBA EQU   INJMJCT+44
@NM00092 EQU   INJMJCT+43
JCTACTAD EQU   INJMJCT+40
@NM00091 EQU   INJMJCT+39
JCTJCTX  EQU   INJMJCT+36
@NM00090 EQU   INJMJCT+35
JCTJCSMF EQU   INJMJCT+31
@NM00089 EQU   INJMJCT+27
JCTJTPTN EQU   INJMJCT+16
JCTJNAME EQU   INJMJCT+8
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00088 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
INCMSTS  EQU   JCTJSTAT
JCTABEND EQU   JCTJSTAT
@NM00087 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00086 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTJSRNO EQU   INJMJCT+4
JCTIDENT EQU   INJMJCT+3
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00085 EQU   LCT+436
LCTIMSG  EQU   LCT+432
LCTLBWAP EQU   LCT+428
@NM00084 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00083
LCTRFB1  EQU   LCT+419
@NM00082 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00081 EQU   LCTJCTDA+3
LCTJCTVA EQU   LCTJCTDA
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00080 EQU   LCT+364
@NM00079 EQU   LCTJSCB+1
@NM00078 EQU   LCTOPSW3
@NM00077 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00076 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00075 EQU   LCTOPSW3
@NM00074 EQU   @NM00070+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
LCTBPRAC EQU   LCTOPSW2
@NM00073 EQU   LCTOPSW2
@NM00072 EQU   LCTOPSW2
@NM00071 EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00069 EQU   LCTEXIT+1
@NM00068 EQU   LCTOPSW1
@NM00067 EQU   LCTOPSW1
LCTONEJF EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00066 EQU   LCTOPSW1
@NM00065 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00064 EQU   LCTTSRB4
@NM00063 EQU   LCT+340
@NM00062 EQU   LCTSPIL+3
@NM00061 EQU   LCTALCFG
@NM00060 EQU   LCTALCFG
@NM00059 EQU   LCTALCFG
@NM00058 EQU   LCTALCFG
@NM00057 EQU   LCTALCFG
@NM00056 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00055 EQU   ECBLIST+1
@NM00054 EQU   ECBLIST
LCTJMRAD EQU   LCT+324
LCTASCBA EQU   LCT+320
@NM00053 EQU   LCT+284
QMGR1    EQU   LCT+248
REGSAVE  EQU   LCT+104
@NM00052 EQU   LCTATLST+1
@NM00051 EQU   LCTATLST
@NM00050 EQU   LCTJOBLB+1
@NM00049 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00048 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00047 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00046 EQU   LCTTJTU4
@NM00045 EQU   @NM00044+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00043 EQU   LCTSREG+1
@NM00042 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00041 EQU   LCTSMBAD+1
@NM00040 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
LCTSNUMB EQU   LCT+58
@NM00039 EQU   LCTJFCBH
@NM00038 EQU   LCTJFCBH
@NM00037 EQU   LCTJFCBH
@NM00036 EQU   LCTJFCBH
@NM00035 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00034 EQU   LCTCMCBA+1
@NM00033 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTPARM2 EQU   LCT+40
LCTPARM1 EQU   LCT+36
LCTJCFAL EQU   LCTERR
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
LCTJFAIL EQU   LCTERR
@NM00032 EQU   LCTPSPAR+1
@NM00031 EQU   LCTPSPAR
@NM00030 EQU   LCTWORKA+3
@NM00029 EQU   LCTSCTAD+1
@NM00028 EQU   LCTSCTAD
@NM00027 EQU   LCTJCTAD+1
@NM00026 EQU   LCTJCTAD
@NM00025 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00017
@NM00024 EQU   @NM00017
@NM00023 EQU   @NM00017
@NM00022 EQU   @NM00017
@NM00021 EQU   @NM00017
@NM00020 EQU   @NM00017
@NM00019 EQU   @NM00017
@NM00018 EQU   @NM00017
@NM00016 EQU   LCTTCBAD+1
@NM00015 EQU   LCTTCBAD
@NM00014 EQU   LCTSRTAD+1
@NM00013 EQU   LCTSRTAD
@NM00012 EQU   LCTQDRTY+1
@NM00011 EQU   LCTQDRTY
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00008 EQU   JSCBSEC1+60
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00007 EQU   IEZJSCB
@NM00006 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00005 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00004 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00003 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00171 EQU   EXIT
@RT00173 EQU   EXIT
@RF00161 EQU   @RC00159
@RC00163 EQU   @RC00159
@RC00220 EQU   @EL00002
@RF00293 EQU   @EL00004
@RF00316 EQU   @EL00006
@RC00331 EQU   @EL00007
@RC00338 EQU   @EL00007
@RF00390 EQU   @EL00008
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEFXB500,(C'PLS2054',0701,76097)
