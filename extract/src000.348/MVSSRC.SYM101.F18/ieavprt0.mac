  TITLE 'GETPART/FREEPART ROUTINE FOR OS/VS2 REL 3.7 WITH SU7'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVPRT0
*
*02*     CSECT-NAME = IEAVPRT0
*
*01*  DESCRIPTIVE-NAME = GETPART/FREEPART ROUTINE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = OS/VS2 RELEASE 3.7 WITH SU7
*              PTF LEVEL UZ07644
*
*01*  FUNCTION = ROUTINE TO GET OR FREE A REGION
*
*02*     OPERATION = FOR A GETPART REQUEST, NECESSARY CONTROL BLOCKS
*         DEFINING THE EXISTENCE OF A USER REGION WITHIN THE PRIVATE
*         AREA ARE CREATED AND INITIALIZED AND CONTROL IS RETURNED
*         TO THE INITIATOR. FOR FREEPART REQUESTS, REGION SPACE
*         AND CONTROL BLOCKS ARE FREED, AND ANY WAITING REQUESTS
*         WHICH MAY NOW BE HONORED ARE POST'ED. RECOVERY CONSISTS
*         OF ISOLATING THE ERROR, PROVIDING AS MUCH STORAGE
*         CLEAN-UP AS POSSIBLE, AND RETRYING THE REQUEST OR
*         TERMINATING THE REQUESTOR.
*
*01*   NOTES = NONE
*
*02*     DEPENDENCIES = LOCAL LOCK MUST BE HELD UPON ENTRY; SALLOC MUST
*         BE AVAILABLE
*
*03*        CHARACTER-CODE-DEPENDENCIES = EBCDIC IS USED, BUT THERE
*            APPEAR TO BE NO PROBLEMS WHICH COULD NOT BE SOLVED WITH A
*            REASSEMBLY
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = REFER TO END OF MODULE IEAVPRT0 FOR
*         REGISTER EQUATES
*
*02*     PATCH-LABEL = USE NUCLEUS PATCH AREA
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE = 4300 BYTES
*
*02*     ATTRIBUTES = NUCLEUS,ZERO PROTECT KEY,REENTERABLE,REFRESHABLE,
*         SUPERVISOR MODE
*
*01*  ENTRY-POINT = IEAVPRT0  (SEE FOLLOWING COMMENTARY)
*
*01*  ENTRY-POINT = IEALIMIT
*
*02*     PURPOSE = TO ALLOW THE USER TO INCLUDE A USER EXIT ROUTINE TO
*         LIMIT AS REQUIRED THE SIZE OF ANY OR ALL REGION REQUESTS
*         THE IBM SUPPLIED ROUTINE ADDS 64K TO THE REGION REQUESTED
*         AND SETS THIS AS A LIMIT ON ALL GETMAINS FROM SUBPOOL
*         0-127, 251, AND 252.
*
*02*     LINKAGE = BALR FROM IEAVPRT0
*
*02*     INPUT = REGISTER 1: NUMBER OF BYTES REQUESTED
*                REGISTER 13: ADDRESS OF STANDARD SAVE AREA
*                REGISTER 14: RETURN ADDRESS
*                REGISTER 15: ENTRY POINT ADDRESS
*
*02*     OUTPUT = REGISTER 1 CONTAINS THE NUMBER OF BYTES TO WHICH THE
*         REGION REQUESTED IS TO BE LIMITED, OR ZERO IF NO LIMIT IS
*         PROVIDED.
*
*01*  EXIT-NORMAL = USER EXIT RETURNS TO IEAVPRT0
*
*02*     CONDITIONS = BR 14 BACK TO IEAVPRT0, WITH LOCAL LOCK STILL
*        HELD
*
*02*     OUTPUT = REGISTER 1 CONTAINS THE LIMIT SIZE FOR THE REQUEST,
*         OR ZERO IF NO LIMIT
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES = SEE FOLLOWING COMMENTARY
*
*02*     ROUTINES = SAME AS ABOVE
*
*02*     DATA-AREAS = SAME AS ABOVE
*
*02*     CONTROL-BLOCKS = SEE FOLLOWING COMMENTARY
*
*01*  TABLES = SEE FOLLOWING COMMENTARY
*
*01*  MACROS = GETMAIN, FREEMAIN, SETLOCK, SETFRR, CALLRTM
*
*02*    SERIALIZATION = THE LOCAL LOCK IS HELD AT ENTRY TO IEAVPRT0;
*       THE SALLOC LOCK IS OBTAINED AND RELEASED BY IEAVPRT0.
*
*01*  CHANGE-ACTIVITY =
*                        PTMS: VS00464,VS00845,VS00850,VS00856,VS00857,
*                        VS00885,VS01903,VS01960,VS03454,VS05423,
*                        VS07262, VS07625
*
*        APARS = OZ02596   463585
*                OZ05651   156300, 180100, 186950, 187220, 187240,
*                          187400, 187900-188100, 191260-191500,
*                          194100, 197700, 197800
*                OZ05954   412234, 412245-412249, 412254
*                OZ08170   312900, 313400, 371200-372500,
*                          372800-373200
*                OZ10088   187410, 187930, 187960, 197650
*                OZ15799   290600, 290700
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = 082,A0A
*
**** END OF SPECIFICATIONS ***/
         EJECT
***********************************************************************
* STATUS                                                              *
*    CHANGE LEVEL 000                                                 *
* FUNCTION                                                            *
*    THIS SUBCOMPONENT OF VIRTUAL STORAGE MANAGEMENT PERFORMS THE     *
*    FUNCTION OF ALLOCATING AND FREEING REGION SPACE AT THE REQUEST OF*
*    THE SYSTEM. THE FOLLOWING TYPES OF GETPART ARE SUPPORTED. 1) REG-*
*    ISTER FORM GETMAIN REQUEST(SVC 10,120). 2) ECB MODE GETPART REQST*
*    (SVC 4) WHICH CAN BE A SINGLE REGION LIST REQUEST OR A SPLIT RE- *
*    GION LIST REQUEST OF TWO ELEMENTS. THE ONE TYPE OF FREEPART WHICH*
*    IS SUPPORTED IS REGISTER FORM FREEMAIN (SVC 10,120).             *
* ENTRY POINTS                                                        *
*         IEAVPRT0                                                    *
*    THIS IS THE MAIN ENTRY POINT. A REQUEST TO OBTAIN SPACE FOR A RE-*
*    GION IS INITIATED BY THE SYSTEM VIA A GETMAIN(SVC 4 ) FOR SPACE  *
*    FROM SUBPOOL 242(V=R REGION) OR GETMAIN(SVC4,10,120) FOR         *
*    SUBPOOL 247(V=V REGION).                                         *
*    FREEPART IS INVOKED THROUGH THE ISSUANCE OF A SVC 10 OR 120 FOR  *
*    SUBPOOL 242 OR 247 TO REQUEST THE FREEING OF A V=R OR V=V REGION *
*    RESPECTIVELY.                                                    *
* INPUT                                                               *
*    IF THE REQUEST IS FROM GETMAIN AND IS AN SVC 4, REGISTER 1 CON-  *
*    TAINS THE ADDRESS OF THE GETMAIN PARAMETER LIST.  THE FORMAT OF  *
*    THE FIRST 2 1/2 WORDS OF THE GETPART PARAMETER LIST IS THE       *
*    SAME AS THE GETMAIN SVC 4 PARAMETER LIST.  IF THE REQUEST
*    IS FROM GETMAIN AND IS AN SVC 10, REGISTER 0 CONTAINS REGION SIZE*
*    AND REGISTER 1 IS ZERO SIGNIFYING A GETPART REQUEST. REGISTER 4  *
*    CONTAINS LDA ADDRESS AND REGISTER 5 CONTAINS SPID IN LOW BYTE.IF *
*    REQUEST IS FROM FREEMAIN, REGISTER 1 IS POSITIVE INDICATING A    *
*    FREEPART REQUEST. REGISTER 4 MUST CONTAIN THE ADDRESS OF THE LDA,*
*    REGISTER 5 CONTAINS THE SUBPOOL ID IN THE LOW-ORDER BYTE. REGS 8 *
*    AND 13 ARE THE GETMAIN BASE REGISTERS.                           *
* OUTPUT                                                              *
*    IF THE EXIT IS NORMAL, REGISTER 15 CONTAINS ONE OF THE FOLLOWING *
*    RETURN CODES. 0-THE REGION WAS SUCCESSFULLY ALLOCATED. 4-SUFFI-  *
*    CIENT VIRTUAL SPACE WAS NOT AVAILABLE TO BACK THE V=R REQUEST.  *
*     8-INVALID REQUEST. 12-A SUFFICIENT NUMBER OF CONTIGUOUS REAL    *
*    PAGES ARE NOT AVAILABLE TO IMMEDIATLEY SATISFY THE V=R REGION    *
*    REQUEST. 16-THE AVAILABLE ALLOCATABLE V=R AREA HAS BEEN          *
*    DECREASED SUCH THAT THE V=R REQUEST CANNOT BE HONORED.           *
*    20-PRIVATE AREA IS FRAGMENTED WITH SYSTEM SPACE SO THAT          *
*    THE REGION REQUEST CANNOT BE HONORED.24-V=R REGION SIZE REQUESTED*
*    IS GREATER THAN THE INSTALLATION IMPOSED LIMIT FROM IEALIMIT     *
*    ROUTINE.                                                         *
* EXTERNAL REFERENCES                                                 *
*    THE FOLLOWING INTERFACES ARE DEFINED FOR GETPART-                *
*         RSM'S ALLOCATE V=R REGION - IEAVEQR                         *
*    TO ALLOCATE AND FIX CONTIGUOUS PAGES IN REAL MEMORY WHICH DES-   *
*    CRIBE THE VIRTUAL EXTENTS OF THE REGION ON A 1:1 VIRTUAL TO REAL *
*    BASIS.                                                           *
*         GETMAING                                                    *
*    TO ALLOCATE SPACE IN LSQA FOR VSM CONTROL BLOCKS.                *
*         CBBRANCH                                                    *
*    TO ALLOCATE/FREE CELLS IN LSQA/SQA FOR VSM INTERNAL CONTROL      *
*    BLOCKS.                                                          *
*         XMPOST ROUTINE                                              *
*    TO POST EACH ECB BEING WAITED UPON BY AN INITIATOR DUE TO A 'WAIT*
*    FOR REGION' CONDITION.                                           *
*                                                                     *
*    THE FOLLOWING INTERFACES ARE DEFINED FOR FREEPART:               *
*                                                                     *
*         MRELEASF                                                    *
*    TO RETURN THE REGION SPACE TO THE QUEUE OF FREE BLOCKS FOR DYNAM-*
*    IC VIRTUAL SPACE.                                                *
*         RMBRANCH                                                    *
*    TO FREE SPACE IN LSQA ALLOCATED TO VSM CONTROL BLOCKS.           *
*         RSM'S FREE V=R REGION - IEAVEQRF                            *
*    TO FREE PAGES THAT ARE ALLOCATED TO A V=R REGION.                *
*         XMPOST ROUTINE                                              *
*    TO POST EACH ECB BEING WAITED UPON BY AN INITIATOR DUE TO A 'WAIT*
*    FOR REGION' CONDITION.                                           *
*         RTM
*    TO RTM VIA CALLRTM FOR A MEMORY TERMINATION WHEN A SITUATION IS  *
*    DETECTED WHICH MIGHT CAUSE FREEPART TO PUT DEFERRED RELEASE PAGES*
*    BACK INTO A FBQE.                                                *
*         IEALIMIT USER EXIT ROUTINE                                  *
*    TO ALLOW THE USER TO LIMIT IF DESIRED THE SIZE OF ANY OR ALL     *
*    REGION REQUESTS
*    THE FOLLOWING CONTROL BLOCKS ARE REFERENCED: CVT, GDA, LDA, DPQE,*
*    PQE, FBQE, TCT, VRWPQEL, PVT, AND TCB.                           *
* EXITS,NORMAL                                                        *
*    EITHER TO TYPE 1 SVC EXIT OR TO BRANCH ENTRY CALLER VIA A BR 14  *
* EXITS,ERROR                                                         *
*    NONE                                                             *
* TABLES AND WORK AREAS                                               *
*    THIS ROUTINE REFERENCES THE GETPART WORK TABLE. THE FORMAT OF    *
*    THIS TABLE IS AS FOLLOWS.                                        *
*        *****************************************                    *
*        *                                       *                    *
*   0    *          REGION SIZE POINTER          *                    *
*        *                                       *                    *
*        *****************************************                    *
*        *                                       *                    *
*   4    *          REGION ADDRESS POINTER       *                    *
*        *                                       *                    *
*        *****************************************                    *
*        * REQUEST * SUBPOOL *                   *                    *
*   8    *         *         * RESERVED          *                    *
*        *  CODE   *   ID    *                   *                    *
*        *****************************************                    *
*        *         *                             *                    *
*   12   * H0 CODE *REGION ADDR REQUEST (OR 0)   *                    *
*        *         *                             *                    *
*        *****************************************                    *
*        *         *                             *                    *
*   16   *    0    *            0                *                    *
*        *         *                             *                    *
*        *****************************************                    *
*        * END OF  *                             *                    *
*   20   *LIST CODE*H0 REGION SIZE REQUEST       *                    *
*        *  OR 0   *                             *                    *
*        *****************************************                    *
*        * END OF  *                             *                    *
*   24   *  LIST   *H1 REGION SIZE REQUEST       *                    *
*        *  CODE   *                             *                    *
*        *****************************************                    *
*    the cfapWKAR WORKAREA IN THE LDA IS USED TO PROVIDE REENTRANCY.  *
*    see workaREA DSECT FOR A MAPPING OF THIS AREA.                   *
* ATTRIBUTES                                                          *
*    REENTRANT, REFRESHABLE                                           *
* CHARACTER CODE DEPENDENCY                                           *
*    EBCDIC IS USED, BUT THERE APPEAR TO BE NO PROBLEMS WHICH COULD   *
*    NOT BE SOLVED WITH A REASSEMBLY.                                 *
* NOTES                                                               *
*    NONE                                                             *
***********************************************************************
         EJECT
*/*IEAVPRT0: CHART (AMODE)*/
*/* HEADER
*/*IEAVPRT0    MAY, 1972
*/*                                                      PAGE #     */
*/*START: E BRANCH ENTRY FROM GETMAIN*/
*/* P SAVE REGS,
*/*   SAVE GM BASE*/
*/* P SET FRR */
*/*P INITIALIZE FRR PARM AREA */
*/* P INIT GP INTERNAL SWITCHES
*/*   (GPSW=0)*/
*/* D (NO,,YES,%VR) V=R REQUEST?*/
*/* P GET @ AS PQE FROM LDA*/
*/*%SVCBYT: P GET @ OF SVCBYT IN IEAVGM00*/
*/* D (NO,,YES,SVC4) SVC 4?*/
*/* D (NO,REGPART,YES,FREEPART) FREEPART?
*/*                     (REG1 > 0)*/
*/*%VR: P GET @ V=R PQE FROM GDA
*/*       (VRPQEP)*/
*/* P (,%SVCBYT) SET V=R REQUEST FLAG
*/*   X'02' IN GPSW*/
*/*FREEPART: D (YES,,NO,%REG1) IS V=R REGION FREEPARTING*/
*/* P OBTAIN SALLOC LOCK*/
*/* D (NO,,YES,%DEQW) IS ITS EL ON VRWAITQ?*/
*/* D (YES,,NO,%REG2) IS ITS EL ON VRPOSTQ?*/
*/*%DEQ: P DEQUEUE EL FROM Q AND FREE IT*/
*/*%REG2: P RELEASE SALLOC LOCK*/
*/* D (NO,,YES,6F4) TCB HAS A REGION?*/
*/* P (,8A2) RC=0 IN REG 15*/
*/*%DEQW: P DEQUEUE EL FROM Q AND FREE IT*/
*/* D (NO,,YES,%REG2) ANY MORE SPEC REQUESTS ON Q? */
*/* P (,%REG2) TURN OFF WAITQUE BIT */
*/*%REG1: D (NO,,YES,6F4) TCB HAS A REGION*/
*/* P (,RETURN) RC=0 IN REG 15*/
*/*6F4: P ACCESS TCBMSS FIELD*/
*/*%G4: D (YES,,NO,A27) ANY MORE SPQE'S REMAIN?*/
*/* P GET @ OF DQE FROM SPQE (SPDQEAD)*/
*/* D (NO,,YES,%X01) SPQEAD=0 ?*/
*/* P SUBPOOL FM TO FREE REMAINING SPACE*/
*/*%X01: P FREEMAIN SPQE (CELL RETURNED TO LSQA)*/
*/* P (,%G4) GET ADDRESS OF NEXT SPQE*/
*/*A27: D (YES,,NO,%H27) V=R REGION?*/
*/* P SET UP INTERFACE TO FREE REGION SPACE*/
*/* P OBTAIN SALLOC LOCK*/
*/* S MRELEASE:RETURN REG SPACE TO FREE V=R AREA*/
*/* P SET UP PARM LIST TO FREE V=R REGION*/
*/* S IEAVEQRR:FREE REAL PAGES*/
*/* P RELEASE SALLOC LOCK */
*/* P ACCESS A.S. PQE PTR */
*/* S MRELEASE: ADD REGION SPACE TO FREE A.S. SPACE*/
*/* P RESTORE V=R PQE PTR */
*/* P FREEMAIN FBQE (CELL RETURNED TO LSQA)*/
*/* S RMBRANCH: FREE PQE,DPQE FROM LSQA*/
*/*%H27: P SET TCBPQE=0 IN TCB*/
*/* P SET TCBRV=0*/
*/* P SET VVREGSZ IN LDA = 0*/
*/* D (NO,,YES,8A2) V=R REQUEST FLAG SET?*/
*/*  D (NO,,YES,%B5) IS THIS SYSTEM REGION? */
*/*  D  (YES,,NO,MEMTERM)  CURRGNTP = PQEREGN? */
*/* P ENSURE PQEREGN = P.A. START @ + SYS. REG. SIZE*/
*/* P ENSURE PQE SIZE = P.A. SIZE - SYS. REG. SIZE*/
*/* P FIRST FBQE @ - P.A.START = DIFFERENCE*/
*/* P FIRST FBQE SIZE = SIZE + DIFFERENCE - SYS. REG. SIZE*/
*/* P FIRST FBQE ADDRESS = P.A.START + SYS. REG. SIZE*/
*/*   P READJUST CURRGNTP IN LDA*/
*/*%B5: P (,RETURN) PLACE RC=0 IN REG 15*/
*/*MEMTERM:  P (,%B5) MEMTERM CURRENT ASID - A0A */
*/*8A2: P OBTAIN SALLOC LOCK*/
*/* D (YES,,NO,%B38) IS WAITQUE BIT ON?*/
*/* P SET POSTCHK FLAG*/
*/*%D28: N (,%J210) BRANCH TO SEE IF FIRST OR NEXT REQUEST CAN BE
*/*HONORED*/
*/*%B38: D (YES,,NO,%C38) ANY ELS ON VRWAITQ?*/
*/* P RETRIEVE FIRST NON-SPEC REQUEST*/
*/* P BUILD TABLE OF LENGTHS AVAILABLE IN V=R FBQE'S*/
*/*%D48: D (YES,,NO,%J48) IS REQUESTED SIZE <=_ ANY FBQE SIZE?*/
*/* P SUBTRACT REQUESTED SIZE FROM FBQE SIZE IN TABLE*/
*/* P DEQUEUE EL FROM VRWAITQ*/
*/* S XMPOST:POST THE REQUESTOR*/
*/* P FREE THE DEQUEUED VRWPQEL*/
*/*%J48: D (YES,%D48,NO,)  ANY MORE ELS ON Q?*/
*/*   P READJUST CURRGNTP IN LDA*/
*/*%C38: P (,RETURN) RELEASE SALLOC LOCK*/
*/*%F28: D (YES,,NO,%G28) IS RETURN SUCCESSFUL?*/
*/* P DEQUEUE VRWPQEL FROM VRWAITQ*/
*/* D (NO,,YES,%J38) ANY MORE SPEC REQUESTS ON Q?*/
*/* P TURN OFF WAITQUE BIT*/
*/*%J38: S XMPOST:POST THE REQUESTOR*/
*/* P ENQUEUE VRWPQEL ON VRPOSTQ*/
*/* P (,RETURN) RELEASE SALLOC LOCK*/
*/*%G28: D (YES,,NO,%C38) IS NEXT EL ON THE Q A SPEC. REQUEST?*/
*/* D (YES,,NO,%D28) DOES ITS @ RANGE OVERLAP 1ST REQUEST'S RANGE*/
*/* P (,%G28) IF SO, DO NOT HONOR IT*/
*/*SVC4: P SET SVC 4 GP FLAG (X'01' IN GPSW)*/
*/* P GET FIRST LIST AND ADDRESS ENTRY*/
*/* D (YES,,NO,%D34) LAST ENTRY?*/
*/* D (YES,,NO,%G24) SPECIFIC REQUEST?*/
*/* P SET SPEC. REQUEST FLAG
*/*   X'08'IN GPSW*/
*/*%G24: D (NO,,YES,%G34) IS REQUEST V=V?*/
*/* D (NO,%C22,YES,) IS V=R DEFAULT INDICATED?*/
*/* P (,%C22) GET DEFAULT SIZE FROM GDA AND SET LENGTH=SIZE*/
*/*%G34: D (NO,%C22,YES,REGLIM) IS V=V DEFAULT INDICATED?*/
*/*%D34: D (YES,%D44,NO,) SPECIFIC REQUEST?*/
*/* P RETRIEVE 2ND LENGTH LIST EL*/
*/* D (YES,,NO,%H54) IS EITHER LENGTH = 0?*/
*/* D (NO,,YES,REGLIM) IS REQUEST V=V?*/
*/* P (,%C22) ADD NON-ZERO EL TO V=R DEFAULT SIZE*/
*/*%H54: P (,%C22) ADD THE 2 LENGTHS*/
*/*%D44: P INVALID GETPART REQUEST*/
*/* P (,RETURN) RC=8 IN REG 15*/
*/*REGPART: P GET REQUEST LENGTH FROM GPR0*/
*/* D (NO,,YES,REGLIM) IS V=V DEFAULT INDICATED?*/
*/*%C22: P SET ROUNDING VALUE FOR PAGE MULTIPLES*/
*/* P ROUND REQUEST UPWARDS*/
*/* D (NO,,YES,%E32) REG SIZE > PQE SIZE?*/
*/* D (NO,REGLIMIT,YES,%G32) IS REQUEST V=V?*/
*/*REGLIM: P ZERO SIZE REG IF DEFAULT*/
*/*REGLIMIT: P REG 1 = SIZE OF REQUEST*/
*/*   S  IEALIMIT:USER EXIT ROUTINE*/
*/*   P STORE REGION LIMIT IN LDA*/
*/*   D (YES,,NO,%D23) V=R REQUEST?*/
*/*   D (YES,,NO,%VRQCHK) IS A LIMIT INDICATED?*/
*/*   D (YES,,NO,%VRQCHK) IS REQUEST > LIMIT?*/
*/*   P (,RETURN) R. C. = 24*/
*/*%VRQCHK: D (YES,,NO,%H32) IS WAITQUE BIT ON?*/
*/* D (YES,,NO,ELBUILD) IS THIS A SPECIFIC REQUEST?*/
*/* P OBTAIN SALLOC LOCK */
*/* D (NO,,YES,%A33) IS ITS EL ON VRPOSTQ?*/
*/* P COMPARE THIS REQUESTED @ RANGE WITH 1ST ON VRWAITQ*/
*/* D (NO,,YES,%C33) IS THERE ANY OVERLAP?*/
*/*%D23: D (NO,,YES,GPSPEC) IS SPEC. REQUEST FLAG SET?*/
*/* D (NO,,YES,VRREQ) IS V=R FLAG SET?*/
*/*LOOP: P GET 1ST OR NEXT A.S. FBQE*/
*/* D (NO,,YES,%G13) FBQE PTR = PQE @?*/
*/* D (YES,%J23,NO,LOOP) REG SIZE <= FBQE SIZE?*/
*/*%J23: P SET TCBPQE TO POINT TO A.S.DPQE - 8*/
*/*   P PUT START @ IN CURRGNTP IN LDA*/
*/* P PUT START @ IN TCT*/
*/* P INDICATE V=V REGION (SET TCBRV AND BIT 7 OF
*/*   PQE'S VMMFLGS =0*/
*/* P (,RETURN) RC = 0 IN REG 15*/
*/*%E32: P INVALID REQUEST*/
*/* P RC = 8 IN REG 15*/
*/*RETURN: D (NO,,YES,%G52) BRANCH ENTRY TO FREEPART?*/
*/* P RESTORE REGS FROM GP/FP SAVE AREA*/
*/* R RETURN VIA BR14*/
*/*%G52: P TURN OFF BRANCH ENTRY FLAG*/
*/* P RESTORE REGS FROM OBFRSAVE IN IEAVGM00*/
*/* R RETURN TO USER VIA BR14*/
*/*%G32: P (,REGLIMIT) STORE ROUNDED V=V REQUEST SIZE IN LDA */
*/*%H32: P OBTAIN SALLOCK LOCK*/
*/* D (YES,,NO,%D29) IS THIS A SPECIFIC REQUEST?*/
*/* D (YES,%A33,NO,GPSPEC) IS ITS EL ON VRPOSTQ?*/
*/*%A33: P DEQUEUE EL FROM VRPOSTQ*/
*/* P FREE THE ELEMENT*/
*/* P (,GPSPEC) SET FLAG IN GPSW TO INDICATE "POSTED-SPEC"*/
*/*%G13: P (,RETURN) RC = 20 IN REG 15*/
*/*%C33: P RELEASE SALLOC LOCK*/
*/* P ACCESS V=R AREA START @ (PQEREGN) */
*/* D (NO,,YES,%E32) IS REG START < DYNAMIC AREA START?*/
*/* P CALCULATE V=R AREA END @*/
*/* D (NO,,YES,%E32) IS REG START >=_ DYNAMIC AREA END?*/
*/* P CALCULATE REGION END ADDRESS*/
*/* D (NO,ELBUILD,YES,%E32) REG END > DYNAMIC AREA END?*/
*/*GPSPEC: P ACCESS DYNAMIC AREA START @ (PQEREGN)*/
*/* D (NO,,YES,%E32) REG START < DYNAMIC AREA START?*/
*/* P CALCULATE DYNAMIC AREA END @*/
*/* D (NO,,YES,%E32) REG START >= DYNAMIC AREA END?*/
*/* P CALCULATE REG END @*/
*/* D (NO,,YES,%E32) IS REG END > DYNAMIC AREA END?*/
*/*%J210: P GET @ OF FIRST OR NEXT FBQE*/
*/* D (NO,,YES,%C510) ADDRESS NEXT= ADDRESS PQE?*/
*/* D (NO,,YES,%A49) FREE AREA START > REG START?*/
*/* D (NO,,YES,%J210) FREE AREA END < REG START?*/
*/* D (NO,,YES,%C510) REG END > FREE AREA END?*/
*/* D (NO,,YES,%D510) IS POSTCHK FLAG ON?*/
*/* D (YES,,NO,%H40)  IS THIS A V=R SPEC. REQUEST?*/
*/* D (YES,,NO,%B49) IS "ALLOCATE PASS" FLAG ON?*/
*/* P TURN OFF "ALLOCATE PASS" FLAG*/
*/*%H40: P CALCULATE REG START - FREE AREA START*/
*/* D (NO,,YES,%J510) IS DIFFERENCE = 0?*/
*/* D (NO,,YES,%A412) IS THIS A V=V REQUEST?*/
*/* P STORE DIFFERENCE IN SIZE FIELD OF FBQE*/
*/*%B211: P CALCULATE FREE AREA END @ - REG END @*/
*/* D (YES,,NO,%C311) FREE AREA END = REG END?*/
*/* D (NO,%H311,YES,) REG START = FREE AREA START?*/
*/* P REMOVE THE FBQE FROM THE CHAIN*/
*/* P FREEMAIN FBQE (CELL RETURNED TO LSQA)*/
*/*%H311: P RELEASE SALLOC LOCK*/
*/* D (NO,%J23,YES,) IS THIS A V=R REGION?*/
*/* S GETMAINB:GET LSQA SPACE FOR A PQE*/
*/* S GETMAINB:GET SPACE IN LSQA FOR DPQE*/
*/* P SET TCBPQE = ADDRESS DPQE - 8*/
*/* P INITIALIZE FIELDS IN PQE*/
*/* P INITIALIZE DPQE TO POINT TO PQE*/
*/* P GETMAIN CELL FROM LSQA FOR FBQE*/
*/* P INITIALIZE FIELDS IN PQE AND FBQE*/
*/*%G212: P INDICATE V=R REGION (TCBRV AND BIT 7 OF PQE VMMFLGS = 1*/
*/* P REGION START ADDRESS IN TCT*/
*/*   P REGION START @ IN CURRGNTP IN LDA*/
*/* P RETURN CODE IN REG 15*/
*/* D (YES,,NO,RETURN) IS "POSTED-SPEC" FLAG ON*/
*/* P (,8A2) TURN IT OFF*/
*/*%C510: P (,%A49) RC = 20 IN REG 15*/
*/*%D510: P TURN POSTCHK FLAG OFF*/
*/* P UNLOCK V=R QUEUE */
*/* P (,%F28) RC = 0 IN REG 0*/
*/*ELBUILD: P GETMAIN AN ELEMENT FOR VRWPQEL*/
*/* P PLACE ASID IN WPELASID*/
*/* P TCB @ FROM LDA IN WPTCBADD*/
*/* P ECB @ FROM JSCB IN WPECBADD*/
*/* D (NO,,YES,%G35) SPEC. REQUEST?*/
*/* P ROUNDED SIZE IN WPELSIZE*/
*/* P ZERO IN WPSPADDR*/
*/* P OBTAIN SALLOC LOCK*/
*/* P ENQ NON-SPEC REQUEST AT END OF Q*/
*/*%K35: P RELEASE SALLOC LOCK*/
*/* P (,RETURN) RC=4 IN REG 15*/
*/*%G35: P REGION END @ IN WPELSIZE*/
*/* P REG. START @ IN WPSPADDR*/
*/* P OBTAIN SALLOC LOCK*/
*/* D (NO,,YES,%J45) IS WAITQUE BIT ON?*/
*/* P TURN IT ON*/
*/*%J45: P (,%K35) ENQ. REQUEST EL AFTER LAST SPEC.*/
*/*%A412: P FBQE SIZE = SIZE - DIFFERENCE*/
*/* P FREE AREA START = REGION START*/
*/* P PQEREGN = REG. START*/
*/* P (,%J23) PQESIZE = SIZE - DIFFERENCE*/
*/*%J510: P REG START = FREE AREA START*/
*/* P SET REG START = FREE AREA START FLAG
*/*   X'20' IN GPSW+1*/
*/* D (YES,%J23,NO,%B211) IS THIS A V=V REQUEST?*/
*/*%C311: N REG END < FREE AREA END*/
*/* D (NO,,YES,%D411) REG START = FREE AREA START?*/
*/* P ENSURE STADDRE FLAG IS OFF*/
*/* P GETMAIN CELL FROM LSQA/SQA FOR FBQE*/
*/* P INSERT THE FBQE IN THE CHAIN*/
*/* P (,%H311) INITIALIZE SIZE AND FBQAREA FIELDS*/
*/*%D411: P (,%H311) ADJUST SIZE AND FBQAREA FIELDS IN FBQE*/
*/*VRREQ: P ACCESS SYSTEM V=R PQE*/
*/*%D29: P GET @ OF FIRST OR NEXT FBQE*/
*/* D (NO,,YES,%A49) FBQE @ = PQE @?*/
*/* D (YES,,NO,%D29) ENOUGH SPACE IN FBQE?*/
*/*%9G2: S IEAVEQR:ALLOCATE REAL REGION*/
*/* P RETURN CODE IN RCSAVE*/
*/* D (NO,,YES,%J39) RC = 16?*/
*/* D (NO,,YES,%K39) RC = 8?*/
*/* D (YES,,NO,%A29A) RC = 4?*/
*/* P PUT 12 IN RCSAVE*/
*/*%A29A: P PICK UP @ THAT V=R VIRTUAL REG SHOULD START AT*/
*/* P ACCESS ADDRESS SPACE PQE*/
*/*%C39A: P SUBTRACT SPACE FROM A.S. FREE SPACE*/
*/* P (,%J210) RESTORE V=R PQE PTR*/
*/*%K39: P  INDICATE THAT RC=8 OCCURRED*/
*/* P (,%9G2) FIND 1ST FREE AREA @ > @ RSM STOPPED SEARCH AT */
*/*%J39: D (NO,%UNLOCK,YES,) ANY RC = 8? */
*/* P RC = 20 IN REG 15 */
*/*%UNLOCK: P (,RETURN) RELEASE SALLOC LOCK*/
*/*%A49: D (NO,,YES,%A59) IS POSTCHK FLAG ON?*/
*/* D (NO,,YES,%C59) V=R REQUEST?*/
*/* D (NO,,YES,RETURN) DOES RC IN REG 15 = 20?*/
*/* P (,RETURN) RC=8 IN REG 15*/
*/*%C59: P (,ELBUILD) RELEASE SALLOC LOCK */
*/*%A59: P TURN IT OFF*/
*/* P (,%F28) RC=4 IN REG 0*/
*/*%B49: P SET UP GP SPEC. PARMS FOR RSM ALLOC*/
*/* S IEAVEQR: ALLOCATE REAL REGION*/
*/* P RETURN CODE IN RCSAVE*/
*/* D (YES,,NO,%F39B) RC=16? */
*/* P TURN OFF POSTED-SPEC FLAG */
*/* P (,RETURN) RELEASE SALLOC LOCK */
*/*%F39B: P TURN ON 'ALLOCATE BYPASS' FLAG */
*/* D (YES,,NO,%A29A) RC=4? */
*/* P (,%A29A) PUT 12 IN RCSAVE */
*/*IEAVPRT0: END*/
IEAVPRT0 CSECT
         ENTRY GPRETRY
         ENTRY  FREERSM
         ENTRY  FREEASQ
         ENTRY  ZEROPTRS
         ENTRY DEQUEUE
         ENTRY GPRETURN
         ENTRY CBGETS
         ENTRY ENDASQS
         ENTRY SUCVR
         ENTRY ELBUILD
         ENTRY UNL
         ENTRY FREEPART
         BALR  RBASE2,REG0               ESTABLISH TEMP ADDRESSABILITY
         USING *,RBASE2                                          Y02714
         MODID BR=YES
         USING PSA,0
         USING LDA,RLDA
         USING WORKAREA,REG14
         L     RBASE,BASE2              PERMANENT ADDRESSABILITY Y02714
         USING RNDSIZE,RBASE                                     Y02714
PART     MVC   DRINSAV(60),BRANCHSV     GM S CALLERS REGS 0-14   Y02714
PRT0GO   ST    GMBASE2,DRINSV15         SAVE GETMAIN BASE 2
         MVC   DGPSW(FLWD),ZEROES       ZERO OUT BIT INDICATORS YM00464
         L     RCVT,CVTADDR             CVT ADDRESSABILITY      YM00856
         USING CVT,RCVT
         LA    REG14,CFAPWKAR           BASE FOR GP/FP WORKAREA  Y02714
         ST    RIN1,SAVE1FRR            SAVE REGISTER 1 FOR FRR YM07262
         SETFRR A,FRRAD=FRRTN,PARMAD=FRRPARMS,WRKREGS=(RWORK1,RWORK2)
         L     RWORK1,FRRPARMS          @ OF FRR PARM AREA       Y02703
         USING RECOVERY,RWORK1
         ST    RBASE2,PRT0BASE          SAVE HIS BASE REGISTER  YM07262
         ST    RLDA,LDAADD              SAVE FOR FRR USE         Y02703
         USING PVT,RWORK1                                        Y02714
         ST    GMBASE,REGSAVE4          SAVE GETMAIN BASE        Y02714
GPRETRY  L     RWORK1,CVTPVTP           BASE FOR THE PVT         Y02714
         L     RWORK2,PVTPVEQR          ENTRY PT FOR IEAVEQR     Y02714
         ST    RWORK2,ALLOCVR           SAVE E.P. FOR LATER USE  Y02714
         L     RWORK2,PVTPVRLS          ENTRY PT. FOR IEAVEQRF   Y02714
         ST    RWORK2,RSMFREE           SAVE E.P. FOR LATER USE  Y02714
         DROP  RWORK1
         L     RGDA,CVTGDA              OBTAIN ADDRESS OF GDA    Y02714
         DROP  RCVT
         USING GDA,RGDA                 ADDRESSABILITY FOR GDA   Y02714
         LA    RWORK2,VVSPID            V=V SUBPOOL ID IN A REGISTER
         CR    RSPID,RWORK2             IS REQUEST FOR V=V REGION
         BL    VRREQ                    BRANCH IF V=R REQUEST
         L     PQEREG,ASDPQE            OBTAIN @ OF ADDR SP PQE  Y02714
         B     CKSVCBYT                 BRANCH TO DETERMINE SVC
VRREQ    L     PQEREG,VRPQEP            OBTAIN @ OF V=R PQE
         OI    GPSW,VERREQ              SET SWITCH FOR V=R REQUEST
         USING PQESECT,PQEREG           ADDRESSABILITY FOR PQE @ZA05651
CKSVCBYT L     RWORK15,FRRPARMS         FRR PARM AREA           YM00885
         USING RECOVERY,RWORK15                                  Y02714
         CLI   LDARQSTA+2,SVCFOUR       CHECK FOR SVC 4
         BE    SVC4                     BRANCH IF SVC 4
         LTR   RIN1,RIN1                CHECK FOR FREEPART REQUEST
         BP    FREEPART                 BRANCH IF FREEPART
         OI    FRRFLAGS,GPFPFLG         FRR FOOTPRINT            Y02703
         SR    RADDR,RADDR              ZERO REGION ADDRESS     YM01903
REGREQ   LTR    RWORK2,RLENGTH          SAVE LENGTH OF REGISTER REQUEST
         BZ    REGLIM                   BRANCH IF V=V DEFAULT
         B     RNDSIZE                  BRANCH TO ROUND REQUEST SIZE
BASE2    DC    A(RNDSIZE)               VALUE FOR BASE REG       Y02714
SVC4     OI    GPSW,SVC4SW              SET SWITCH FOR SVC 4 REQUEST
         OI    FRRFLAGS,GPFPFLG         FRR FOOTPRINT            Y02703
*   THIS CODE CALCULATES THE TOTAL LENGTH REQUESTED
GPART    L     RWORK1,FSTWORD(RIN1)     PICK UP PTR TO LENGTH LIST
         L     RADDR,SNDWORD(RIN1)      PICK UP ADDRESS POINTER
         L     RADDR,FSTWORD(RADDR)     PICK UP ADDRESS ENTRY
NLCSGP   L     RWORK2,FSTWORD(RWORK1)   PICK UP LENGTH
         CLI   FSTBYTE(RWORK1),LASTENT  CHECK FOR LAST ENTRY
         BE    SPECLST                  BRANCH IF LAST ENTRY
         LTR   RADDR,RADDR              CHECK FOR SPECIFIC REQUEST
         BNZ   RTN08                    ERROR IF SPLIT SPECIFIC REQUEST
         L     RWORK1,SNDWORD(RWORK1)   RETRIEVE 2ND LENGTH      Y02714
         TM    GPSW,VERREQ              TEST FOR V=R REQUEST     Y02714
         BO    VRDEFCHK                 BRANCH IF V=R            Y02714
         LTR   RWORK2,RWORK2            CHECK FOR V=V DEFAULT    Y02714
         BZ    REGLIM                   BRANCH IF DEFAULT        Y02714
         C     RWORK1,DEFAULT           CHK FOR 2ND EL = DEFAULT Y02714
         BE    REGLIM                   BRANCH IF YES            Y02714
ADD      ALR   RWORK2,RWORK1            ADD 2 LENGTHS            Y02714
         B     RNDSIZE                  BRANCH TO ROUND SIZE     Y02714
VRDEFCHK LTR   RWORK2,RWORK2            CHECK FOR V=R DEFAULT   Y02714
         BNZ   CHKLEN2                  CHECK 2ND LENGTH         Y02714
         L     RWORK2,VRDREG            LOAD DEFAULT SIZE        Y02714
CHKLEN2  C     RWORK1,DEFAULT           2ND LENGTH = DEFAULT     Y02714
         BNE   ADD                      ADD 2 LENGTHS            Y02714
         L     RWORK1,VRDREG            LOAD DEFAULT SIZE        Y02714
         B     ADD                      ADD THE 2 SIZES          Y02714
SPECLST  LTR   RADDR,RADDR              CHECK FOR SPECIFIC REQUEST
         BZ    DEFLTCHK                 IF NOT, ROUND LENGTH
         OI    GPSW,GPSSW               SET SPECIFIC SWITCH
         ST    RADDR,REGADD             REGION ADDRESS FOR FRR   Y02703
DEFLTCHK C     RWORK2,DEFAULT           CHK FOR DEFAULT REQUEST  Y02714
         BNE   RNDSIZE                  ROUND SIZE IF NOT        Y02714
         TM    GPSW,VERREQ              CHECK FOR V=R            Y02714
         BZ    REGLIM                   BRANCH IF NOT            Y02714
         L     RWORK2,VRDREG            LOAD DEFAULT SIZE        Y02714
         DROP  RBASE2
*   ROUND UP REGION SIZE TO NEXT 4K FOR V=V OR V=R REQUESTS
RNDSIZE  LA    RWORK2,FSTBYTE(RWORK2)   CLEAR HI BYTE OF LENGTH REG
         LA    RWORK1,PAGERND           LOAD PAGE ROUNDING INDEX
         LR    RWORK3,RWORK1            ROUND TO PAGE MULTIPLE
         AR    RWORK1,RWORK2            RWORK2 CONTAINS LENGTH
         OR    RWORK1,RWORK3
         XR    RWORK1,RWORK3            RWORK1 CONTAINS ROUNDED SIZE
         LR    SIZEREG,RWORK1           SIZE FOR IEALIMIT INTF @ZA05651
         B     REGLIMIT                 SET UP FOR USER EXIT
*   THIS CODE DETERMINES IF THE REQUEST IS VALID
REGLIM   SR    SIZEREG,SIZEREG          ZERO REG FOR DEFAULT SIZEY02714
REGLIMIT L     RBRANCH,LIMIT            @ OF USER EXIT ROUTINE   Y02714
         LA    RWORK3,SAVEAREA          SAVEAREA FOR EXIT ROUTINEY02714
         LR    LIM,SIZEREG              SIZE REQUESTED IN REG1   Y02714
         LR    REG0,LIM                 SIZE REQUESTED IN REG0 @ZA05651
         BALR  RRETURN,RBRANCH          USER EXIT ROUTINE        Y02714
*   THE IEALIMIT ROUTINE MAY CHANGE THE REGION SIZE (REG0) AND THE
*   LDALIMIT VALUE (LIM).  THSES VALUES, HOWEVER, ARE NOT MEANINGFUL
*   FOR V=R REQUESTS SINCE A SEPARATE PQE IS BUILT TO DEFINE THE
*   LIMITS OF THE REAL REGION.
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         ST    LIM,LDALIMIT             STORE REG. LIMIT         Y02714
         L     RWORK15,FRRPARMS         FRR PARM AREA ADDR     @ZA05651
         TM    GPSW,VERREQ              V=R REQUEST?             Y02714
         BZ    STVVREGN                 BRANCH IF NOT          @ZA05651
         ST    SIZEREG,REGSIZE          RGN SIZE FOR FRR USE   @ZA10088
         LTR   LIM,LIM                  CHECK FOR NO LIMIT       Y02714
         BZ    VRQCHK                   OK IF NO LIMIT           Y02714
         CR    LIM,SIZEREG              REQUEST > LIMIT?         Y02714
         BNL   VRQCHK                   OK TO ALLOCATE           Y02714
         LA    RRETREG,RC24             RETURN CODE OF 24        Y02714
         B     RETURN                   RETURN TO REQUESTOR      Y02714
STVVREGN ST    REG0,VVREGSZ             SAVE NEW RGN SIZE      @ZA05651
         ST    REG0,REGSIZE             RGN SIZE FOR FRR USE   @ZA10088
         DROP  RWORK15                                         @ZA10088
         LR    SIZEREG,REG0             RELOAD SIZEREG WITH    @ZA05651
*                                       NEW REGION SIZE        @ZA05651
NOTHRESH STM   SIZEREG,PQEREG,REGSAVE2  SAVE REGS 6-8
         TM    GPSW,GPSSW               TEST FOR SPECIFIC REQUEST
         BO    GETSPEC                  BRANCH TO SPECIFIC PROCESSING
         TM    GPSW,VERREQ              CHECK FOR V=R REQUEST
         BO    REALREG                  BRANCH FOR V=R SCAN IF SO
*   MUST BE A REGULAR V=V REQUEST
         L     LIM,LDALIMIT             GET LDALIMIT VALUE     @ZA05651
         C     LIM,VVREGSZ              LDALIMIT > REGION?     @ZA05651
         BNH   LDALIMOK                 NO. USE LDALIMIT       @ZA05651
         L     LIM,VVREGSZ              YES.  USE REGN SIZE    @ZA05651
LDALIMOK L     RWORK1,PQEFFBQE          ADDRESSABILITY FOR FBQE  Y02714
         USING FBQESECT,RWORK1                                   Y02714
ASLOOP   CR    RWORK1,PQEREG            ARE THERE ANY FBQES?  Y02714
         BE    RTN20                    NO--SYS SPACE OCCUPIES   Y02714
*                                       ALL ADDRESS SPACE        Y02714
         C     LIM,SIZE                 DOES REQUEST FIT?      @ZA05651
         BNH   VVEND                    BRANCH IF YES            Y02714
         L     RWORK1,FWDPTR            GET NEXT FBQE            Y02714
         B     ASLOOP                   TRY NEXT SIZE            Y02714
RTN20    LA    RRETREG,RC20             RETURN CODE = 20         Y02714
         MVC   VVREGSZ(FLWD),ZEROES     ZERO REGION SIZE         Y02714
         B     RETURN                   RETURN TO CALLER         Y02714
VRQCHK   EQU   *                                               @ZA10088
         TM    GVSMFLAG,WAITQUE         IS SPEC REQUEST WAITING?
         BO    WAITON                   BRANCH IF YES            Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
OBT1     SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRQS,IEAVPRT0*
               (REL2,REL3,REL4,REL8,RET8))  OBTAIN LOCK          Y02714
         LM    RBASE,REG14,CFAPWKAR     RESTORE REGS             Y02714
         TM    GPSW,GPSSW               IS THIS A SPEC REQUEST   Y02714
         BZ    REALREG                  NO-TO REAL PROCESSING    Y02714
         L     ELBASE,VRPFEL            BASE FOR VRPOSTQ ELS     Y02714
         USING VRWPQEL,ELBASE                                    Y02714
         LTR   ELBASE,ELBASE            ANY ELS ON Q?            Y02714
         BZ    GETSPEC                  NO-TO SPEC PROCESSING    Y02714
         L     RWORK3,PASCBSV           GET ASCB FOR THIS REQ    Y02714
LOOP6    C     RWORK3,WPELASCB          REQUEST HAS POSTEL?      Y02714
         BNE   COMPNXT                  NEXT EL                  Y02714
         ST    SIZEREG,SAVEAREA+8       SAVE SIZE                Y02714
         L     RWORK15,FRRPARMS                                  Y02703
         LA    RRETURN,DEQRET           RETURN FROM DEQUE RTN    Y02714
         LA    RWORK5,VRPOSTQ           DEQUEUE FROM VRPOSTQ     Y02714
         B     DEQUEUE                  BRANCH TO DEQUEUE EL     Y02714
COMPNXT  CLC   WPNEXTEL(FLWD),ZEROES    IS THERE ANOTHER SPEC?   Y02714
         BE    WAITON2                  NO MORE ELS ON POSTQ     Y02714
         L     ELBASE,WPNEXTEL          GET NEXT EL              Y02714
         B     LOOP6                    CONTINUE SEARCH          Y02714
DEQRET   LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         L     SIZEREG,SAVEAREA+8       RESTORE SIZE             Y02714
         ST    RADDR,SAVEAREA+8
         BAL   RADDR,FMAIN
         L     RADDR,SAVEAREA+8
         OI    GPSW,PSPEC               INDICATE THE REQUEST IS  Y02714
*                                       AN ATTEMPT TO HONOR A    Y02714
*                                       POSTED SPEC REQUEST      Y02714
         B     GETSPEC                  BRANCH TO SPEC PROCESSINGY02714
WAITON   TM    GPSW,GPSSW               IS THIS SPEC?            Y02714
         BZ    ELBUILD                  NO-REQUEST MUST WAIT     Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
OBT2     SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRQS,IEAVPRT0*
               (REL1,REL2,REL4,REL8)) SET SALLOC                 Y02714
         LM    RBASE,REG14,CFAPWKAR     RESTORE REGS             Y02714
         L     ELBASE,VRPFEL            BASE FOR POSTQ ELS       Y02714
         LTR   ELBASE,ELBASE            ANY ELS ON Q?            Y02714
         BZ    COMPADDS                 BRANCH IF NOT            Y02714
         L     RWORK3,PASCBSV           ASCB OF THIS REQUEST     Y02714
         B     LOOP6                    SEARCH POST Q            Y02714
WAITON2  TM    GVSMFLAG,WAITQUE
         BZ    GETSPEC                  THIS EL IS NOT ON POSTQ - GO
*                                       ALLOCATE REQUEST         Y02714
*  CHECK TO SEE IF THIS SPECIFIC REQUEST CAN BE HONORED WITHOUT  Y02714
*  INTERFERING WITH FIRST SPECIFIC REQUEST WAITING FOR REGION    Y02714
COMPADDS L     ELBASE,VRWFEL            BASE OF 1ST SPEC ON WAITQY02714
         USING VRWPQEL,ELBASE                                    Y02714
         C     RADDR,WPSPADDR           REQUEST START > EL START?Y02714
         BH    TEST3                    BRANCH IF HIGHER         Y02714
         LR    RWORK2,RADDR             REQUEST START            Y02714
         AR    RWORK2,SIZEREG           END @ OF REQUEST         Y02714
         C     RWORK2,WPSPADDR          REQUEST END >= EL START? Y02714
         BH    OVRLAP                   BRANCH IF YES           YM05423
         B     NOTHRESH                 NO OVERLAP-HONOR REQUEST Y02714
TEST3    C     RADDR,WPELSIZE           REQUEST START > EL END?  Y02714
         DROP  ELBASE                                            Y02714
         BH    NOTHRESH                 IF YES, NO OVERLAP       Y02714
*  THIS REGION REQUEST WOULD INTERFERE WITH THE FIRST SPECIFIC   Y02714
*  REQUEST ON THE VRWAITQ IF HONORED. IF THE REQUEST IS VALID,   Y02714
*  ENQUEUE IT ON THE VRWAITQ.                                    Y02714
OVRLAP   STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL1     SETLOCK  RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVPRT0(OBT2))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         C     RADDR,PQEREGN            REQUEST START < V=R AREA Y02714
*                                       START?                   Y02714
         BL    RTN08                    INVALID REQUEST          Y02714
         L     RWORK3,PQESIZE           V=R AREA END             Y02714
         A     RWORK3,PQEREGN           V=R AREA END             Y02714
         CR    RADDR,RWORK3             REQST START>V=R AREA END?Y02714
         BNL   RTN08                    INVALID REQUEST          Y02714
         LR    RWORK2,SIZEREG           REQUEST SIZE IN A REG    Y02714
         AR    RWORK2,RADDR             REQUEST END              Y02714
         CR    RWORK2,RWORK3            REQUST END>V=R AREA END? Y02714
         BH    RTN08                    INVALID REQUEST          Y02714
         B     ELBUILD                  VALID REQUEST-MUST WAIT  Y02714
VVEND    L     RTCB,LDATCB              TCB BASE                 Y02714
         USING TCB,RTCB
         L     RTCT,TCBTCT              TCT BASE                 Y02714
         LTR   RTCT,RTCT                                        YM00850
         BZ    STLDA                    BRANCH IF NO TCT        YM00850
         USING SMFTCT,RTCT
         L     RWORK3,PQESIZE           SIZE OF REG.             Y02714
         SRL   RWORK3,ELEVEN            SIZE IN 2K BLOCKS        Y02714
         STH   RWORK3,TCTRSZ            SIZE IN TCT              Y02714
STPASTRT MVC   TCTRBA(FLWD),PQEREGN     REGION START IN TCT      Y02714
         DROP  RTCT
STLDA    ST    RLDA,TCBPQE              @A.S. DPQE - 8 IN TCB    Y02714
         ST    RTCB,PQETCB              TCB @ IN PQE             Y02714
         NI    VMMFLGS,X'FF'-VVVRFLG    INDICATE VIRTUAL IN PQE  Y02714
         L     PQEREG,FSTWORD(PQEREG)   GET 1ST FBQE             Y02714
         MVC   CURRGNTP(FLWD),FBQAREA-FBQESECT(PQEREG) READJUST  Y02714
*                                       CURRGNTP VALUE           Y02714
         NI    TCBFLGS6,X'FF'-TCBRV     INDICATE VIRTUAL IN TCB  Y02714
         LA    RRETREG,RC0              SUCCESSFUL RETURN        Y02714
         B     RETURN                   RETURN TO CALLER         Y02714
CKONEDN  TM    GPSW,ASQFLAG             WAS THIS A BRANCH FROM   Y02714
*                                       A.S.QUEUE PROCESSING?    Y02714
         BO    ENDASQS                  IF YES, BRANCH BACK      Y02714
         L     RWORK4,FRRPARMS          BASE FOR FRR PARM AREA   Y02703
         USING RECOVERY,RWORK4
         OI    FRRFLGS2,VEQRDONE        V=R ALLOCATION DONE      Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL2     SETLOCK RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVPRT0(OBT1,OBT2))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         TM    GPSW,VERREQ              TEST FOR V=R REQUEST     Y02714
         BZ    VVEND                    BRANCH IF VIRTUAL        Y02714
*   OBTAIN CORE FOR DPQE AND PQE                               @Z30ENYG
CBGETS   OI    FRRFLAGS,CBGFLG          FRR FOOTPRINT            Y02703
         L     RIN1,QELNTH              PQE,DPQE SIZE IN REG 1 @Z30ENYG
         L     GMBASE2,RINSAV15         RESTORE GETMAIN BASE 2
         L     GMBASE,REGSAVE4          GM BASE                  Y02714
         L     RBRANCH,GETMNB           OBTAIN ADDRESS OF GETMAING
         BALR  RRETURN,RBRANCH          BRANCH TO GETMAING
         LA    RWORK1,24(RIN1)          @ OF DPQE-8            @Z30ENYG
         L     RTCB,LDATCB              TCB BASE                 Y02714
         ST    RWORK1,TCBPQE            STORE ADDRESS IN TCB   @Z30ENYG
*   INITIALIZE PQE AND DPQE FIELDS                             @Z30ENYG
         DROP  PQEREG                                            Y02714
         USING PQESECT,RIN1             ADDRESSABILITY FOR PQE
         ST    RTCB,PQETCB              ADDR TCB IN PQE
         ST    SIZEREG,PQESIZE          REGION SIZE IN PQE
         ST    SEGREG,PQEREGN           REGION ADDRESS IN PQE
         ST    SEGREG,CURRGNTP          ADJUST PTR FOR VGM00    YM01960
         ST    RIN1,VRPQE(RWORK1)       ADDRESS OF PQE IN DPQE
         ST    RIN1,VVPQE(RWORK1)       ADDRESS OF PQE IN DPQE
         LR    RWORK1,RIN1              SAVE ADDR PQE BUILT    @Z30ENYG
         ST    PQEREG,CFAPWKAR          SAVE ADDR V=R PQE      @Z30ENYG
*   OBTAIN CORE FOR FBQE                                       @Z30ENYG
         L     PQEREG,PASCBSV           ASCB ADDR FOR CELL GM  @Z30ENYG
         GETMAIN P,BRANCH=YES,SP=SP255  GET CELL FOR FBQE      @Z30ENYG
         L     PQEREG,CFAPWKAR          RESTORE V=R PQE ADDR   @Z30ENYG
         XR    RWORK1,RIN1              SWAP REGS: RIN1=PQE @  @Z30ENYG
         XR    RIN1,RWORK1                      RWORK1=FBQE @  @Z30ENYG
         XR    RWORK1,RIN1
         ST    RWORK1,PQEFFBQE          FIRST FBQE @ IN PQE    @Z30ENYG
         ST    RWORK1,PQEBFBQE          LAST FBQE @ IN PQE     @Z30ENYG
         USING FBQESECT,RWORK1          ADDRESSABILITY FOR FBQE
         ST    RIN1,FWDPTR              FBQE FORWARD POINTER
         ST    RIN1,BCKPTR              FBQE BACKWARD POINTER
         ST    SIZEREG,SIZE             REGION SIZE IN FBQE
         ST    SEGREG,FBQAREA           REGION ADDRESS IN FBQE
         ST    RWORK1,RW1SAVE           FRR FOOTPRINT
         DROP  RWORK4
         DROP  RWORK1
         LA    REG14,CFAPWKAR           GP/FP WORKAREA BASE      Y02714
         OI    VMMFLGS,VVVRFLG          INDICATE REAL IN PQE
         DROP  RIN1
         OI    TCBFLGS6,TCBRV           INDICATE REAL IN TCB
         L     RTCT,TCBTCT              TCT BASE                 Y02714
         LTR   RTCT,RTCT                                        YM00850
         BZ    NOTCT                    BRANCH IF NO TCT        YM00850
         USING SMFTCT,RTCT                                       Y02714
         ST    SEGREG,TCTRBA            REGION START IN TCT      Y02714
         LR    RWORK3,SIZEREG           SIZE OF REGION           Y02714
         SRL   RWORK3,ELEVEN            SIZE IN 2K BLOCKS        Y02714
         STH   RWORK3,TCTRSZ            REGION SIZE IN TCT       Y02714
         DROP  RTCT                                              Y02714
NOTCT    LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         LH    RRETREG,RCSAVE           RESTORE RETURN CODE      Y02714
         TM    GPSW,PSPEC               IS THIS REQUEST ONE THAT Y02714
*                                       WAS POSTED FROM VRWAITQ? Y02714
         BZ    RETURN                   RETURN IF NOT            Y02714
         NI    GPSW,X'FF'-PSPEC         TURN FLAG OFF            Y02714
         B     FPCHK                    CHECK TO SEE IF OTHER    Y02714
*                                       ELS ON THE VRWAITQ CAN   Y02714
*                                       NOW BE HONORED           Y02714
*   ALLOCATE THE V=R REGION
SPECREAL ST    RADDR,VRPARMS1           REGION ADDRESS IN PARM LIST
         LR    RWORK2,SIZEREG           SIZE IN PARM LIST        Y02714
         SRL   RWORK2,TWELVE            GET # OF 4K BLOCKS       Y02714
         ST    RWORK2,VRPARMS2          # 4K BLOCKS IN PARM LIST Y02714
         OI    VRPARMS2,LASTENT         FLAG HIGH BYTE           Y02714
         L     RTCB,LDATCB              TCB BASE                 Y02714
         L     RWORK1,TCBJSCB           ACCESS JSCB ADDRESS
         LA    RWORK1,0(RWORK1)         ZERO HIGH BYTE
         USING IEZJSCB,RWORK1           ADDRESSABILITY FOR JSCB
         LA    RWORK1,JSCBSECB          ACCESS ECB ADDRESS
         DROP  RWORK1                   DROP JSCB ADDRESSABILITY
         ST    RWORK1,VRPARMS3          ADDR OF GPI ECB IN PARM LIST
         LA    RIN1,VRPARMS             ADDR OF PARM LIST IN REG 1
         LA    RWORK3,SAVEAREA          SAVE AREA @              Y02714
         L     RBRANCH,ALLOCVR          OBTAIN ADDRESS OF ALLOCATE V=R
         BALR  RRETURN,RBRANCH          BRANCH TO ALLOCATE V=R
         LA    REG14,CFAPWKAR           GP/FP WORKAREA BASE      Y02714
         LA    RWORK1,RC16              PUT 16 IN A REG
         CR    RRETREG,RWORK1           IS RETURN CODE 16
         BE    RTN16                    IF SO, UNSUCCESSFUL ALLOCATION
         L     RWORK1,FRRPARMS          BASE FOR FRR PARM AREA   Y02714
         USING RECOVERY,RWORK1
         OI    FRRFLAGS,RSMDONE         FRR FOOTPRINT            Y02714
         DROP  RWORK1
         OI    GPSW,ALOCPASS            ALLOCATION DONE          Y02714
SRC      STH   RRETREG,RCSAVE           SAVE RETURN CODE
         LA    RWORK1,RC4               COMPARE VALUE            Y02714
         CR    RRETREG,RWORK1           WAS RSM RC=4?            Y02714
         BNE   SUCVR                    IF NO, SUCCESS           Y02714
         LA    RWORK1,RC12              IF YES, CHANGE TO 12     Y02714
         STH   RWORK1,RCSAVE            SAVE RC                  Y02714
         B     SUCVR                    BRANCH TO V=R PROCESSING Y02714
         EJECT
*   PERFORM THE FBQE SEARCH AND V=R SCAN FOR
*   V=R REGION ALLOCATION
REALREG  LR    RWORK2,SIZEREG           SIZE IN PARM LIST        Y02714
         SRL   RWORK2,TWELVE            GET # OF 4K BLOCKS       Y02714
         ST    RWORK2,VRPARMS2          # 4K BLOCKS IN PARM LIST Y02714
         L     RTCB,LDATCB              TCB BASE                 Y02714
         L     RWORK1,TCBJSCB           ACCESS JSCB ADDRESS
         LA    RWORK1,0(RWORK1)         CLEAR HIGH BYTE
         USING IEZJSCB,RWORK1           ADDRESSABILITY FOR JSCB
         LA    RWORK1,JSCBSECB          ACCESS ECB ADDRESS
         DROP  RWORK1                   DROP JSCB ADDRESSABILITY
         ST    RWORK1,VRPARMS3          ECB ADDRESS IN THIRD PARAMETER
         LA    RIN1,VRPARMS             ADDR PARAMETER LIST IN REG 1
         USING PQESECT,PQEREG           ADDRESSABILITY FOR PQE
         C     SIZEREG,PQESIZE          REQUEST > V=R AREA?    @ZA15799
         BH    RET8                     YES, INVALID REQUEST   @ZA15799
         L     RWORK1,PQEFFBQE          ACCESS FIRST FBQE ON PQE CHAIN
         USING FBQESECT,RWORK1          ADDRESSABILITY FOR FBQE
VRLOOP   CR    RWORK1,PQEREG            CHECK FOR END OF FBQE CHAIN
         BE    RET4                     REQUEST MUST WAIT        Y02714
         C     SIZEREG,SIZE             CHECK FOR SIZE LARGE ENOUGH
         BH    FBQLOOP                  CHECK NEXT FBQE IF TOO SMALL
         MVC   VRPARMS1(FLWD),FBQAREA   FBQE START IN PARAMETER LIST
RSMBR    LA    RWORK3,SAVEAREA          SAVE AREA ADDRESS        Y02714
         L     RBRANCH,ALLOCVR          ACCESS ADDRESS OF IEAVEQRY02714
         BALR  RRETURN,RBRANCH          BRANCH TO IEAVEQR
         LA    REG14,CFAPWKAR           GP/FP WORKAREA BASE      Y02714
         STH   RRETREG,RCSAVE           SAVE RETURN CODE FROM IEAVEQR
         LA    RWORK2,RC16              ACCESS RC 16 FOR COMPARE
         CR    RRETREG,RWORK2           CHECK FOR RC 16
         BE    FOUND16                  BRANCH IF RC=16          Y02714
         LA    RWORK2,RC8               ACCESS RC 8 FOR COMPARE  Y02714
         CR    RRETREG,RWORK2           CHECK FOR RC=8           Y02714
         BE    FOUND8                   NO-SUCCESSFUL ALLOCATION Y02714
         L     RWORK1,FRRPARMS          BASE FOR FRR PARM AREA   Y02703
         USING RECOVERY,RWORK1
         OI    FRRFLAGS,RSMDONE         FRR FOOTPRINT            Y02703
         DROP  RWORK1
         LA    RWORK2,RC4               COMPARE VALUE            Y02714
         CR    RRETREG,RWORK2           RSM RC = 4?              Y02714
         BNE   SUCVR                    SUCCESSFUL ALLOCATION IF NOT
         LA    RWORK2,RC12              CHANGE RC TO 12          Y02714
         STH   RWORK2,RCSAVE            SAVE RC                  Y02714
         B     SUCVR                    BRANCH TO PROCESS V=R    Y02714
FOUND8   OI    BIGPSW,UNCSCAN           INDICATE AN RC 8 FROM RSMY02714
         L     PQEREG,ASDPQE            PQE ADDRESS              Y02714
         L     FBQEREG,PQEFFBQE         FBQE ADDRESSABILITY      Y02714
         USING FBQESECT,FBQEREG                                  Y02714
FREEADDR CR    FBQEREG,PQEREG           ANY MORE FBQE'S?         Y02714
         BE    FOUND16                  BRANCH IF NOT            Y02714
         L     RWORK3,FBQAREA           ADDRESS OF FREE AREA     Y02714
         C     RWORK3,VRPARMS1          IS RSM STOP ADDRESS LOW? Y02714
         BNH   NEXTFREE                 NO--GET NEXT FREE AREA   Y02714
         ST    RWORK3,VRPARMS1          PASS RSM THIS ADDRESS    Y02714
         LA    RIN1,VRPARMS             ADDRESS OF PARM LIST     Y02714
         B     RSMBR                    TRY TO ALLOCATE AGAIN    Y02714
NEXTFREE L     FBQEREG,FWDPTR           NEXT FREE AREA ADDRESS   Y02714
         B     FREEADDR                 TRY NEXT FREE AREA       Y02714
FOUND16  TM    BIGPSW,UNCSCAN           ANY RC=8 FROM RSM?       Y02714
         BZ    UNLK                     RETURN IF NOT            Y02714
         LA    RRETREG,RC20             IF YES, SYS. SPACE       Y02714
*                                       FRAGMENTS V=R AREA       Y02714
UNLK     STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL3     SETLOCK  RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVPRT0(OBT1))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RWORK2,RC8               VALUE TO COMPARE         Y02714
         CR    RWORK2,RWORK3            R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         MVC   VVREGSZ(FLWD),ZEROES     ZERO REGION SIZE         Y02714
         B     RETURN                   RETURN TO CALLER         Y02714
FBQLOOP  L     RWORK1,FWDPTR            ACCESS NEXT FBQE
         B     VRLOOP                   BRANCH TO CHECK NEXT FBQE
*   SUBTRACT SAME SPACE FROM ADDRESS SPACE PQE                   Y02714
SUCVR    L     RWORK15,FRRPARMS         FRR PARM BASE
         USING RECOVERY,RWORK15
         MVC   REGADD(FLWD),VRPARMS1    REG ADDRESS FOR FRR USE  Y02714
         L     REGSTART,VRPARMS1        @ FROM RSM TO START      Y02714
*                                       VIRTUAL REGION           Y02714
         LA    REGSTART,0(REGSTART)     ZERO HIGH BYTE           Y02714
         LR    REGEND,REGSTART          REGION START ADDRESS     Y02714
         AR    REGEND,SIZEREG           REGION END ADDRESS       Y02714
         L     PQEREG,ASDPQE            A.S.PQE ADDRESS          Y02714
         USING PQESECT,PQEREG                                    Y02714
         L     FBQEREG,PQEFFBQE         GET FIRST FBQE           Y02714
         USING FBQESECT,FBQEREG                                  Y02714
NXTFBQE  L     RWORK3,FBQAREA           START OF FREE AREA       Y02714
         A     RWORK3,SIZE              END OF FREE AREA         Y02714
         CR    REGSTART,RWORK3          REG START<FREE AREA END? Y02714
         BL    ASAVAIL                  SUBTRACT FROM THIS FBQE  Y02714
         L     FBQEREG,FWDPTR           NEXT FBQE ADDRESS        Y02714
         B     NXTFBQE                  TRY NEXT FREE AREA       Y02714
ASAVAIL  ST    FBQEREG,RW1SAVE          FRR INFO                 Y02703
         LR    RSIZE,REGSTART           REGION START             Y02714
         S     RSIZE,FBQAREA            SUBTRACT FREE AREA START Y02714
         BZ    SETEQ                    IF DIFF =0, BRANCH       Y02714
         NI    BIGPSW,X'FF'-STADDRE     TURN OFF SWITCH          Y02714
         ST    RSIZE,SIZE               STORE DIFFERENCE IN FBQE Y02714
CHKENDS  OI    GPSW,ASQFLAG             INDICATE A.S.Q PROCESSINGY02714
         B     OTHREND                  BRANCH TO SET UP FBQE'S  Y02714
*                                       TO SHOW SPACE SUBTRACTED Y02714
*                                       FROM A. S. PQE           Y02714
ENDASQS  L     RWORK15,FRRPARMS         BASE FOR FRR PARM AREA   Y02714
         OI    FRRFLAGS,ASDONE          FRR FOOTPRINT            Y02714
         MVC   RW1SAVE(FLWD),ZEROES     ZERO FRR INFO            Y02714
         DROP  RWORK15
         L     PQEREG,VRPQEP            RESTORE V=R PQE          Y02714
         LR    RWORK2,SIZEREG           REGION START             Y02714
         AR    RWORK2,RADDR             REGION END               Y02714
         NI    GPSW,X'FF'-ASQFLAG       TURN OFF FLAG            Y02714
         B     COMONCHK                 BRANCH TO COMPLETE ALLOC.Y02714
SETEQ    OI    BIGPSW,STADDRE           START ADDRESSES EQUAL    Y02714
         B     CHKENDS                  CHECK END ADDRESSES      Y02714
*   UNSUCCESSFUL RETURNS                                         Y02714
RET20    LA    RRETREG,RC20             RETURN CODE = 20         Y02714
RET4     TM    GPSW,POSTCHK             WAS THIS CHECKING FOR    Y02714
*                                       POSTING ELEMENTS?        Y02714
         BZ    RTEST                    BRANCH IF NOT            Y02714
         NI    GPSW,X'FF'-POSTCHK       TURN OFF POSTCHK FLAG    Y02714
         LA    REG0,RC4                 RETURN CODE 4 IN REG 0   Y02714
         B     PSTCHK                   RETURN TO POST CHECKING  Y02714
RTEST    TM    GPSW,VERREQ              IS THIS V=R REGION?      Y02714
         BZ    SEEIF20                  IF NOT, RC=20?           Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL4     SETLOCK RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVPRT0(OBT1,OBT2))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         B     ELBUILD                  ENQUEUE EL ON VRWAITQ    Y02714
SEEIF20  MVC   VVREGSZ(FLWD),ZEROES     ZERO REGION SIZE         Y02714
         LA    RWORK1,RC20              RC = 20 FOR COMPARE      Y02714
         CR    RRETREG,RWORK1           RC = 20?                 Y02714
         BE    RETURN                   RETURN IF SO             Y02714
         B     RTN08                    OTHERWISE, RC=8          Y02714
O82ABEND ABEND X'082',,,SYSTEM                                   Y02714
         EJECT
*   BUILD AND ENQUEUE AN ELEMENT ON THE VRWAITQ                  Y02714
ELBUILD  LR    RTCB,RLDA                SAVE LDA @ ACROSS GM     Y02714
         L     PQEREG,PASCBSV           ASCB ADDRESS             Y02714
         ST    RGDA,SAVEAREA            SAVE REG 3               Y02714
         L     RLDA,LDATCB              TCB  ADDRESS             Y02714
         GETMAIN  RC,LV=28,SP=245,BRANCH=YES  GET AN ELEMENT     Y02714
         LR    RLDA,RTCB                RESTORE LDA @            Y02714
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         L     RGDA,SAVEAREA            RESTORE REG 3            Y02714
         LTR   RRETREG,RRETREG          RETURN CODE = 0?         Y02714
         BNZ   RTN16                    BRANCH NOT SUCCESSFUL    Y02714
         L     RWORK15,FRRPARMS                                  Y02703
         USING RECOVERY,RWORK15
         OI    FRRFLGS2,WENQFLG         FRR FOOTPRINT            Y02703
         DROP  RWORK15
         USING VRWPQEL,ELBASE                                    Y02714
         MVC   WPELASCB(FLWD),PASCBSV   ASCB IN WAIT EL          Y02714
         MVC   WPERRADD(FLWD),ERRADD    @ ASYNC.ERROR EXIT RTN   Y02714
         L     RTCB,LDATCB              TCB BASE                 Y02714
         USING TCB,RTCB                                          Y02714
         L     RWORK3,TCBJSCB           JSCB ADDRESS             Y02714
         LA    RWORK3,0(RWORK3)         CLEAR HIGH BYTE
         USING IEZJSCB,RWORK3                                    Y02714
         LA    RWORK2,JSCBSECB          PTR TO ECB               Y02714
         DROP  RWORK3                                            Y02714
         ST    RWORK2,WPECBADD          ECB ADDRESS IN WAIT EL   Y02714
         TM    GPSW,GPSSW               IS THIS REQUEST SPECIFIC Y02714
         BO    SPECREQ                  BRANCH IF YES            Y02714
         ST    SIZEREG,WPELSIZE         REQUEST SIZE IN WAIT EL  Y02714
         MVC   WPSPADDR(4),ZEROES       ZERO SPECIFIC ADDRESS    Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
OBT3     SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRWPQEL,IEAVP*
               RT0(REL6))               GET SALLOC               Y02714
         LM    RBASE,REG14,CFAPWKAR     RESTORE REGS             Y02714
         L     RWORK2,VRWLEL            ENQUEUE EL AT END OF Q   Y02714
         LTR   RWORK2,RWORK2            ANY ELS ON Q?            Y02714
         BZ    STNEXT                   BRANCH IF NOT            Y02714
         MVC   WPNEXTEL(FLWD),ZEROES    NEW FORWARD PTR          Y02714
         ST    RWORK2,WPPREVEL          NEW BACK PTR             Y02714
         ST    ELBASE,0(RWORK2)         OLD FORWARD PTR          Y02714
         ST    ELBASE,VRWLEL            NEW LAST EL PTR          Y02714
         B     UNL                      UNLOCK AND RETURN        Y02714
SPECREQ  LR    RWORK2,SIZEREG           REGION SIZE              Y02714
         AR    RWORK2,RADDR             ADD REGION START         Y02714
         BCTR  RWORK2,0                 HIGH ALLOCATED @ OF REG. Y02714
         ST    RWORK2,WPELSIZE          STORE END @ IN EL        Y02714
         ST    RADDR,WPSPADDR           STORE SPEC @ IN EL       Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
OBT4     SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRWPQEL,IEAVP*
               RT0(REL6))               GET SALLOC               Y02714
         LM    RBASE,REG14,CFAPWKAR     RESTORE REGS             Y02714
         TM    GDAFLAGS,WAITQUE         ANY SPEC REQUESTS WAITINGY02714
         BO    ENQ                      BRANCH IF YES            Y02714
ENQFIRST OI    GDAFLAGS,WAITQUE         TURN BIT ON              Y02714
         L     RWORK2,VRWFEL            ENQ. EL 1ST ON WAITQ     Y02714
         LTR   RWORK2,RWORK2            ANY ELS ON QUEUE?        Y02714
         BZ    STNEXT                   BRANCH IF NOT            Y02714
         ST    ELBASE,FLWD(RWORK2)      OLD EL BACK PTR          Y02714
STNEXT   ST    RWORK2,WPNEXTEL          NEW FORWARD PTR          Y02714
         MVC   WPPREVEL(FLWD),ZEROES    THIS IS 1ST QUEUE EL     Y02714
         ST    ELBASE,VRWFEL            1ST ELEMENT ADDRESS      Y02714
         CLC   VRWLEL(FLWD),ZEROES      DID LAST PTR=0?          Y02714
         BNE   UNL                      IF NOT,ITS OK            Y02714
         ST    ELBASE,VRWLEL            OTHERWISE, NEW EL=LAST ELY02714
UNL      STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL6     SETLOCK      RELEASE,TYPE=SALLOC,RELATED=(VRWPQEL,IEAVPRT0(OBT*
               3,OBT4))    RELEASE LOCK                          Y02714
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+4 RESTORE REGS              Y02714
         LA    RRETREG,RC4              RETURN CODE=4            Y02714
         B     RETURN                   RETURN                   Y02714
ENQ      L     RWORK2,VRWFEL            1ST EL ON VRWAITQ        Y02714
NOTYET   CLC   FSTWORD(FLWD,RWORK2),ZEROES    ANY MORE ELS?    @YM03454
         BE    ENQAFTER                 BRANCH IF NOT          @YM03454
         L     RWORK2,0(RWORK2)          @ NEXT EL ON QUEUE      Y02714
NSPEC    CLC   SPADDR(FLWD,RWORK2),ZEROES  EL FOR SPEC REQUEST?  Y02714
         BE    INSERT                   FIND LAST SPEC REQUEST   Y02714
         B     NOTYET                   CHECK NEXT EL ON Q       Y02714
ENQAFTER ST    RWORK2,WPPREVEL          PREVIOUS EL              Y02714
         MVC   WPNEXTEL(FLWD),ZEROES    THIS IS LAST EL          Y02714
         ST    ELBASE,FSTWORD(RWORK2)   FORWARD PTR              Y02714
         ST    ELBASE,VRWLEL            NEW LAST EL              Y02714
         B     UNL                      BRANCH TO UNLOCK         Y02714
INSERT   L     RWORK3,SNDWORD(RWORK2)   @ PREV. EL.              Y02714
         ST    RWORK2,WPNEXTEL          FORWARD PTR              Y02714
         ST    RWORK3,WPPREVEL          BACK PTR                 Y02714
         ST    ELBASE,FSTWORD(RWORK3)   CHAIN THIS TO PREV EL    Y02714
         ST    ELBASE,SNDWORD(RWORK2)   CHAIN THIS TO 1ST NONSPECY02714
         B     UNL                      UNLOCK AND RETURN        Y02714
         EJECT
*     FREEMAIN AN ELEMENT FROM THE VRWAITQ OR THE VRPOSTQ
FMAIN    ST    PQEREG,SAVEAREA          STORE PQE @              Y02714
         ST    RGDA,SAVEAREA+4          SAVE REG3                Y02714
         LR    RWORK2,RLDA              SAVE LDA @ ACROSS FM     Y02714
         L     PQEREG,PASCBSV           ASCB @                   Y02714
         L     RLDA,LDATCB              TCB @                    Y02714
         FREEMAIN  RC,LV=28,A=(1),SP=245,BRANCH=YES  FREE EL     Y02714
         LR    RLDA,RWORK2              RESTORE LDA @            Y02714
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         L     PQEREG,SAVEAREA          RESTORE PQE @            Y02714
         L     RGDA,SAVEAREA+4          RESTORE REG 3            Y02714
         BR    RADDR                    RETURN TO PROPER POINT   Y02714
         EJECT
*   UNSUCCESSFUL GETPART PROCESSING
RET8     ST    RBASE,CFAPWKAR           SAVE BASE REG            Y02714
         SETLOCK RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVPRT0(OBT1,OBT2))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LA    REG14,CFAPWKAR           RESTORE REGS             Y02714
RTN08    LA    RRETREG,RC8              RETURN CODE OF 8         Y02714
         MVC   VVREGSZ(FLWD),ZEROES     ZERO REGION SIZE         Y02714
RETURN   SETFRR  D,WRKREGS=(RWORK1,RWORK2) DELETE FRR            Y02714
         TM    GPSW,FRPRT+VERREQ        V=R FREEPART ?         @ZA08170
         BO    CKVRFAIL                 YES, CK FOR ERROR      @ZA08170
CKBRNTRY TM    LDAFLAGS,LDABRSW         CHECK FOR BRANCH ENTRY @ZA08170
         BO    FPBRNT                   PROCESS BRANCH ENTRY EXIT
         LM    RIN0,RIN1,RINSAVE        RESTORE REGS 0 AND 1
         L     RRETURN,RINSAV14         RESTORE RETURN REGISTER
         BR    RRETURN                  RETURN
FPBRNT   NI    LDAFLAGS,X'FF'-LDABRSW   TURN OFF BRANCH ENTRY SW
         LA    RRETURN,RINSAVE          ACCESS GM SAVEAREA
         LM    RIN0,RRETURN,FSTBYTE(RRETURN) RESTORE ALL REGISTERS
         BR    RRETURN                  RETURN TO CALLER
RTN16    NI    GPSW,X'FF'-PSPEC         TURN OFF POSTED SPEC FLG Y02714
ULK      STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL8     SETLOCK RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVPRT0(OBT1,OBT2))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         LA    RRETREG,RC16             RETURN CODE OF 16        Y02714
         MVC   VVREGSZ(FLWD),ZEROES     ZERO REGION SIZE         Y02714
         B     RETURN                   RETURN                   Y02714
*   THE ENTRY WAS FOR A V=R FREEPART. THE ONLY POSSIBLE        @ZA08170
*   RETURN CODES  ARE 0 AND 4. IF THE RETURN CODE IS 4,        @ZA08170
*   THE ATTEMPT TO FREE THE V=R FRAMES HAS FAILED. THUS        @ZA08170
*   THE ADDRESS SPACE MUST BE TERMINATED.                      @ZA08170
CKVRFAIL LTR   RRETREG,RRETREG          RC = 0 ?               @ZA08170
         BZ    CKBRNTRY                 YES                    @ZA08170
         LA    REG13,SAVEAREA           SAVEAREA FOR MEMTERM   @ZA08170
         CALLRTM TYPE=MEMTERM,COMPCOD=X'028' TERMINATE MEMORY  @ZA08170
         LA    REG14,CFAPWKAR           RESTORE WORKAREA       @ZA08170
         LA    REG15,4                  RESTORE ERROR CODE     @ZA08170
         B     CKBRNTRY                 RETURN                 @ZA08170
         EJECT
FREEPART STM   PQEREG,GMBASE,REGSAVE3   SAVE REGS 7-8            Y02714
         OI    GPSW,FRPRT               FLAG FOR FREEPART      @ZA08170
         L     RTCB,LDATCB              TCB POINTER              Y02714
         TM    GPSW,VERREQ              FP FOR V=R REGION?       Y02714
         BZ    SUBPOLCK                 BRANCH IF V=V            Y02714
         USING LDA,RLDA                                          Y02714
*  IF V=R REGION IS FREEPARTING, CHECK TO SEE IF IT HAS AN       Y02714
*  ELEMENT ON THE VRWAITQ OR THE VRPOSTQ. IF SO, DEQUEUE THE     Y02714
*  ELEMENT AND FREE IT                                           Y02714
         L     RWORK5,PASCBSV           LOAD ASCB TO COMPARE     Y02714
         L     RCVT,CVTADDR             CVT BASE                 Y02714
         USING CVT,RCVT                                          Y02714
         L     RGDA,CVTGDA              GDA BASE                 Y02714
         USING GDA,RGDA                                          Y02714
         USING VRWPQEL,ELBASE                                    Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
OBT5     SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRWPQEL,IEAVP*
               RT0(REL9)) GET LOCK                               Y02714
         LM    RBASE,REG14,CFAPWKAR     RESTORE REGS             Y02714
         L     ELBASE,VRWFEL            @ 1ST EL ON VRWAITQ      Y02714
         C     ELBASE,ZEROES            ANY ELS ON QUEUE         Y02714
         BE    VRPSTQ                   CHECK VRPOSTQ            Y02714
LOOP4    C     RWORK5,WPELASCB          IS FIRST EL FOR THIS REG.Y02714
         BE    DEQUEW                   DEQUEUE IT IF SO         Y02714
         CLC   WPNEXTEL(FLWD),ZEROES    ANY MORE ELS?            Y02714
         BE    VRPSTQ                   CHECK VRPOSTQ IF NOT     Y02714
         L     ELBASE,WPNEXTEL          GET NEXT ELEMENT         Y02714
         B     LOOP4                    CHECK NEXT EL ON WAITQ   Y02714
DEQUEW   LA    RWORK5,VRWAITQ           INDICATE WAITQ           Y02714
         L     RWORK15,FRRPARMS                                  Y02703
         BAL   RRETURN,DEQUEUE          DEQUEUE ELEMENT          Y02714
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         ST    RADDR,SAVEAREA+8         SAVE REG 2               Y02714
         BAL   RADDR,FMAIN              BRANCH TO FREE ELEMENT   Y02714
         L     RADDR,SAVEAREA+8         RESTORE REG 2            Y02714
         L     ELBASE,VRWFEL            GET 1ST EL ON WAITQ      Y02714
         LTR   ELBASE,ELBASE            ANY ELS ON QUEUE?        Y02714
         BZ    ZEROBIT                  NO-ZERO WAITQUE BIT      Y02714
         CLC   SPADDR(FLWD,ELBASE),ZEROES   ANY SPEC. ELS LEFT?  Y02714
         BNE   REGOWNED                 BRANCH IF SPEC LEFT      Y02714
ZEROBIT  NI    GDAFLAGS,X'FF'-WAITQUE   ZERO WAITQUE BIT         Y02714
         B     REGOWNED                 CHECK FOR OWNED REGION   Y02714
VRPSTQ   L     ELBASE,VRPFEL            GET 1ST EL ON POSTQ      Y02714
         C     ELBASE,ZEROES            ANY ELS ON POSTQ?        Y02714
         BE    REGOWNED                 BRANCH IF NOT            Y02714
LOOP5    C     RWORK5,WPELASCB          IS THIS EL FOR THIS REG. Y02714
         BE    DEQUE                    DEQUEUE IT IF SO         Y02714
         CLC   WPNEXTEL(FLWD),ZEROES    ANY MORE ELS?            Y02714
         BE    REGOWNED                 BRANCH IF NOT            Y02714
         L     ELBASE,WPNEXTEL          GET NEST EL              Y02714
         B     LOOP5                    CONTINUE SEARCH          Y02714
DEQUE    LA    RWORK5,VRPOSTQ           INDICATE POSTQ           Y02714
         L     RWORK15,FRRPARMS                                  Y02703
         BAL   RRETURN,DEQUEUE          DEQUEUE EL               Y02714
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         ST    RADDR,SAVEAREA+8         SAVE REG 2               Y02714
         BAL   RADDR,FMAIN              GO FREE THE ELEMENT      Y02714
         L     RADDR,SAVEAREA+8         RESTORE REG 2            Y02714
REGOWNED STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL9     SETLOCK  RELEASE,TYPE=SALLOC,RELATED=(VRWPQEL,IEAVRT0(OBT5))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         CLC   TCBPQE(FLWD),ZEROES      CHECK FOR TCB HAVING REG.Y02714
         BNE   SPQFREE                  BRANCH TO FREE SPACE     Y02714
         LA    RRETREG,RC0              IF NO REGION, RC=0       Y02714
         B     FPCHK                    SEE IF ANY WAITING       Y02714
*                                       REQUESTS CAN BE HONORED  Y02714
RTN0     LA    RRETREG,RC0              LOAD RETURN CODE
         B     RETURN                   RESTORE INPUT REGISTERS
*   CHECK FOR VALID FREEPART.  FREE ALL REGION SUBPOOLS CHAINED OFF
*   THE INITIATOR TCB.  BEFORE FREEING THE SUBPOOL, SET ON FLAG
*   LDAFPFM IN THE LDA SO THAT FREEMAIN WILL SEND BACK A RETURN CODE
*   RATHER THAN ISSUING AN ABEND, IF AN ABEND A0A-2 SITUATION IS
*   ENCOUNTERED.  AFTER THE SUBPOOL STORAGE HAS BEEN FREEMAINED, OR
*   IF THERE WAS AN SPQE BUT NO ALLOCATED STORAGE, FREE THE SPQE.
SUBPOLCK CLC   TCBPQE(FLWD),ZEROES      CHECK FOR TCB HAVING A REGION
         BE    RTN0                     RETURN IF NOT
SPQFREE  L     RSPQE,TCBMSS             ACCESS FIRST SPQE
         USING SPQESECT,RSPQE           ADDRESSABILITY FOR SPQE
         LA    RSPQE,0(RSPQE)           CLEAR HIGH ORDER BYTE
TESTEND  LTR   RSPQE,RSPQE              TEST COMPLETE IF END OF QY02714
         BZ    BRMREL                   BRANCH IF END
         L     RDQE,SPDQEPTR            ACCESS DQE /OWNING SPQE  Y02714
         TM    SPQEFLGS,SPSHARE         CHECK FOR SHARED SUBPOOL
         BZ    CKSPQE                   BRANCH TO FREE SPACE     Y02714
         L     RDQE,FLWD(RDQE)          ACCESS DQE OF OWNER
CKSPQE   LTR   RDQE,RDQE                ANY DQE'S?               Y02714
         BZ    FREESPQE                 FREE SPQE IF NO DQE      Y02714
         OI    LDAFLAGS,LDAFPFM         FREEMAIN FROM FREEPART @ZA05954
         LR    RWORK2,RLDA              SAVE LDA @               Y02714
         L     PQEREG,PASCBSV           ASCB PTR                 Y02714
         LR    RLDA,RTCB                TCB @                    Y02714
         LR    RTCB,RGDA                SAVE GDA ADDRESS       @ZA05954
         SR    RGDA,RGDA                CLEAR R3               @ZA05954
         IC    RGDA,SPQEID              SP FOR FREEMAIN INTF   @ZA05954
         FREEMAIN RC,SP=(3),BRANCH=YES  FREE ENTIRE SUBPOOL    @ZA05954
         LR    RGDA,RTCB                RESTORE GDA ADDRESS    @ZA05954
         LR    RTCB,RLDA                RESTORE TCB ADDRESS
         LR    RLDA,RWORK2              RESTORE LDA @            Y02714
         NI    LDAFLAGS,X'FF'-LDAFPFM   NOT FREEPART FREEMAIN  @ZA05954
FREESPQE LR    RIN1,RSPQE               SPQE ADDR FOR FM       @Z30ENYG
         L     RSPQE,SPQEAD             @ NEXT SPQE              702714
         ST    RSPQE,TCBMSS             REMOVE SPQE FROM Q      YM07625
         L     PQEREG,PASCBSV           ASCB ADDR FOR FM       @Z30ENYG
         FREEMAIN P,BRANCH=YES,A=(RIN1) FREE SPQE CELL         @Z30ENYG
         LA    REG14,CFAPWKAR           RESTORE ADDR WRKAREA   @Z30ENYG
         B     TESTEND                  TEST NEXT SPQE
         EJECT
BRMREL   MVC   TCBMSS(FLWD),ZEROES      ZERO TCBMSS FIELD        Y02714
         L     RTCB,LDATCB              TCB BASE                 Y02714
         TM    GPSW,VERREQ              V=R REQUEST?             Y02714
         BZ    ZEROPTRS                 BRANCH IF VIRTUAL        Y02714
         L     RIN1,TCBPQE              ACCESS DPQE FOR THE TASK
         L     RWORK1,VRPQE(RIN1)       ACCESS PQE FOR THE TASK
         USING PQESECT,RWORK1           ADDRESSABILITY FOR PQE
         L     SIZEREG,PQESIZE          SIZE OF REGION IN A REG
         L     SEGREG,PQEREGN           ADDRESS OF REGION IN A REG
         ST    SIZEREG,REGSAVE2         SAVE REG 6
         ST    SEGREG,REGSAVE5          SAVE REG 9
         MVI   LDACBSP,SP245            SPID FOR CONTROL BLKS    Y02714
         L     PQEREG,REGSAVE3          RESTORE PQE PTR          Y02714
         L     GMBASE,REGSAVE4          GM BASE REGISTER         Y02714
         L     GMBASE2,RINSAV15         RESTORE GETMAIN BASE 2
         L     RBRANCH,RELEASE          OBTAIN ADDRESS OF MRELEASF
         STM   RBASE,GMBASE2,CFAPWKAR   SAVE REGS ACROSS SETLK   Y02714
OBT6     SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRQS,IEAVPRT0*
               (REL10))  GET SALLOC LOCK                         Y02714
         LM    RBASE,GMBASE2,CFAPWKAR   RESTORE REGS            Y02714
         BALR  RRETURN,RBRANCH          BRANCH TO MRELEASF
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         L     RWORK4,FRRPARMS                                   Y02703
         USING RECOVERY,RWORK4
         OI    FRRFLGS2,VEQRDONE        FRR FOOTPRINT            Y02703
FREERSM  LM    SIZEREG,SEGREG,REGSAVE2  RESTORE REGS 6-9
         ST    SEGREG,VRPARMS1          PUT ADDR IN PARM LIST    Y02714
         SRL   SIZEREG,TWELVE           GET # 4K BLOCKS          Y02714
         ST    SIZEREG,VRPARMS2         # PAGES IN PARM LIST     Y02714
         LA    RIN1,VRPARMS             @ PARM LIST              Y02714
         LA    RWORK3,SAVEAREA          STANDARD SAVE AREA       Y02714
         L     RBRANCH,RSMFREE          BRANCH @ TO RSM          Y02714
         BALR  RRETURN,RBRANCH          BRANCH TO FREE REAL REG. Y02714
         OI    FRRFLAGS,RSMDONE         FRR FOOTPRINT            Y02703
FREEASQ  LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         LM    SIZEREG,SEGREG,REGSAVE2  RESTORE REGS             Y02714
         LTR   RRETREG,RRETREG          IS RSM R.C. = 0?         Y02714
         BZ    RETSAVE                  BRANCH IF SO             Y02714
         LA    RRETREG,RC4              IF NOT, FREEPART R.C.=4  Y02714
RETSAVE  STH   RRETREG,RCSAVE           SAVE RETURN CODE         Y02714
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL10    SETLOCK  RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVPRT0(OBT6))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RRETREG,RC8              VALUE TO COMPARE         Y02714
         CR    RRETREG,RWORK3           R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         MVI   LDACBSP,SP255            SPID FOR CONTROL BLKS    Y02714
         L     GMBASE2,RINSAV15         RESTORE GM BASE          Y02714
         L     PQEREG,ASDPQE            GET @ A.S. PQE           Y02714
         L     RBRANCH,RELEASE          @ MRELEASF               Y02714
         BALR  RRETURN,RBRANCH          RETURN REG SPACE TO A.S. Y02714
*                                       PQE                      Y02714
         OI    FRRFLAGS,ASDONE          FRR FOOTPRINT            Y02703
         DROP  RWORK4
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         L     RCVT,CVTADDR             CVT BASE                 Y02714
         USING CVT,RCVT                                          Y02714
         LM    SIZEREG,SEGREG,REGSAVE2  RESTORE REGS 6-9         Y02714
         L     RGDA,CVTGDA              GDA BASE                 Y02714
         USING GDA,RGDA                                          Y02714
*   FREE FBQE FROM LSQA                                        @Z30ENYG
FREECBS  L     RTCB,LDATCB              TCB BASE                 Y02714
         L     RIN1,TCBPQE              ACCESS DPQE FOR THE TASK
         L     RWORK1,VRPQE(RIN1)       ACCESS PQE FOR THE TASK
         L     RIN1,PQEFFBQE            ADDR OF FBQE IN REG 1
         DROP  RWORK1                   DROP PQE ADDRESSABILITY
         ST    PQEREG,SAVEAREA          SAVE PQE ADDRESS BY FM @Z30ENYG
         L     PQEREG,PASCBSV           ADDR ASCB FOR CELL FM  @Z30ENYG
         FREEMAIN P,BRANCH=YES,A=(RIN1) FREE FBQE CELL         @Z30ENYG
*   FREE PQE AND DPQE FROM LSQA                                @Z30ENYG
         L     RIN0,QELNTH              PQE,DPQE IN LSQA       @Z30ENYG
         LR    RIN1,RWORK1              ADDRESS TO BE FREED    @Z30ENYG
*                                       (PQE,DPQE ARE CONTIG)  @Z30ENYG
         LR    RWORK1,RLDA              SAVE LDA ADDR BY FM    @Z30ENYG
         LR    RLDA,RTCB                TCB ADDR FOR FREEMAIN  @Z30ENYG
         L     RBRANCH,REGMAIN          FM ENTRY PT (RMBRANCH) @Z30ENYG
         BALR  RRETURN,RBRANCH          FREE PQE,DPQE          @Z30ENYG
         LR    RLDA,RWORK1              RESTORE LDA ADDR       @Z30ENYG
         LA    REG14,CFAPWKAR           RESTORE ADDR SAVEAREA  @Z30ENYG
         L     PQEREG,SAVEAREA          RESTORE PQE ADDRESS    @Z30ENYG
         LH    RRETREG,RCSAVE           RESTORE R.C.             Y02714
ZEROPTRS L     RWORK1,FRRPARMS          BASE FOR FRR PARM AREA   Y02703
         USING RECOVERY,RWORK1
         OI    FRRFLAGS,ZPFLG           FRR FOOTPRINT            Y02703
         DROP  RWORK1
         L     RWORK1,TCBPQE            PQE BASE                 Y02714
         MVC   TCBPQE(FLWD),ZEROES      ZERO OUT TCBPQE
         NI    TCBFLGS6,X'FF'-TCBRV     ZERO REAL VIRTUAL FLAG
         MVC   VVREGSZ(4),ZEROES        ZERO REG. SIZE IN LDA    Y02714
         TM    GPSW,VERREQ              IS THIS A V=R REGION?    Y02714
         BO    FPCHK                    SEE IF WAITING REQUESTS  Y02714
*                                       CAN BE HONORED NOW       Y02714
         USING PQESECT,RWORK1                                    Y02714
         L     RWORK1,VRPQE(RWORK1)     ACCESS PQE @             Y02714
*  RESTORE POINTERS THAT COULD HAVE BEEN CHANGED FOR A V=V       Y02714
*  SPECIFIC REQUEST.                                             Y02714
         L     RWORK3,LDASRPQE          GET @ SYS. REG PQE       Y02714
         CR    RWORK1,RWORK3            IS THIS SYS REG PQE?     Y02714
         BE    RTN0                     IF SO, DO NOT ADJUST     Y02714
         CLC   CURRGNTP(FLWD),PQEREGN   CHECK FOR CURRGNTP = START
*                                       OF PQE BEFORE ANY ADJUSTMENT.
*                                       IF NOT, THIS MEANS THERE
*                                       ARE FIXED, DEFERRED RELEASE
*                                       PAGES IN THE ADDRESS SPACE.
         BE    OKNOFIX                  IF =, BRANCH OK
         LA    RWORK3,SAVEAREA          SAVEAREA FOR RTM
         CALLRTM  TYPE=MEMTERM,COMPCOD=FIXDPAGE   TERMINATE CURRENT
*                                       ADDRESS SPACE.
         LA    REG14,CFAPWKAR           RESTORE REGISTER 14    @ZA02596
         B     RTN0                     GO THRU MOTIONS OF RETURN
*                                       PROCESSING---BUT CURRENT
*                                       ADDRESS SPACE WILL BE
*                                       TERMINATED.
OKNOFIX  L     RWORK3,PQESIZE-PQESECT(RWORK3) SIZE OF SYSTEM REGION
         LR    RWORK15,RWORK3           SIZE IN REG 15           Y02714
         A     RWORK15,PASTRT           ADD SIZE TO P.A. START   Y02714
         ST    RWORK15,PQEREGN          V=V PQE START            Y02714
         L     RWORK15,PASIZE           SIZE OF PRIVATE AREA     Y02714
         SR    RWORK15,RWORK3           SUBTRACT SIZE OF SYS. REGION
         ST    RWORK15,PQESIZE          V=V PQE SIZE             Y02714
         L     RWORK2,PQEFFBQE          @ 1ST FBQE               Y02714
         USING FBQESECT,RWORK2                                   Y02714
         L     RWORK15,FBQAREA          1ST FREE AREA START @    Y02714
         S     RWORK15,PASTRT           SUBTRACT START OF PRIVATE AREA
         SR    RWORK15,RWORK3           SUBTRACT SIZE OF SYS. REGION
         A     RWORK15,SIZE             ADD SIZE OF FREE AREA    Y02714
         ST    RWORK15,SIZE             THIS IS SIZE OF FREE AREAY02714
         L     RWORK15,PASTRT           START OF PRIVATE AREA    Y02714
         AR    RWORK15,RWORK3           ADD SIZE OF SYSTEM REGIONY02714
         ST    RWORK15,FBQAREA          THIS IS FREE AREA START  Y02714
         ST    RWORK15,CURRGNTP         ADJUST PTR FOR VGM00    YM01960
         B     RTN0                     END OF V=V FREEPART      Y02714
FPCHK    L     RWORK1,FRRPARMS          BASE FOR FRR PARM AREA   Y02703
         USING RECOVERY,RWORK1
         OI    FRRFLAGS,FPFLG           FRR FOOTPRINT            Y02703
         DROP  RWORK1
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
OBT7     SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRQS,IEAVPRT0(*
               REL11,REL12)) GET SALLOC LOCK                     Y02714
         LM    RBASE,REG14,CFAPWKAR     RESTORE REGS             Y02714
         TM    GDAFLAGS,WAITQUE         ANY SPEC REQUESTS WAITINGY02714
         BO    CHKSPEC1                 BRANCH IF SO             Y02714
         CLC   VRWFEL(FLWD),ZEROES      ANY ELS ON WAITQ?        Y02714
         BE    UNLOCK                   BRANCH IF NOT            Y02714
*  IF ONLY NON-SPECIFIC REQUESTS ON VRWAITQ, POST AS MANY OF     Y02714
*  THEM AS WILL FIT IN FREE SPACE.                               Y02714
         L     FBQEREG,PQEFFBQE         GET 1ST V=R FREE AREA    Y02714
         CR    FBQEREG,PQEREG           ARE THERE ANY MORE?      Y02714
         BE    RETURN                   BRANCH IF NONE           Y02714
         DROP  RWORK2                                            Y02714
         USING FBQESECT,FBQEREG                                  Y02714
         SR    CTR,CTR                  ZERO COUNTER             Y02714
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         L     RWORK4,SIZE              GET FREE AREA SIZE       Y02714
         ST    RWORK4,SIZES             FREE AREA SIZE IN TABLE  Y02714
COMPPQE  LA    RSIZE,SIZES              @ OF SIZE TABLE          Y02714
         LA   RWORK4,FSTWORD(CTR,RSIZE) @ LAST EL IN TABLE       Y02714
         C     PQEREG,FWDPTR            ANY MORE V=R FREE AREAS  Y02714
         BNE   NEXTFBQE                 BRANCH IF YES            Y02714
         OI    FSTBYTE(RWORK4),LASTENT  FLAG EL IN TABLE AS LAST Y02714
         B     CHKELS                   BRANCH TO CHECK Q ELS    Y02714
NEXTFBQE LA    CTR,FLWD(CTR)            INCREMENT COUNTER        Y02714
         L     FBQEREG,FWDPTR           GET NEXT FREE AREA       Y02714
         L     RWORK4,SIZE              GET NEXT SIZE            Y02714
         ST    RWORK4,FSTWORD(CTR,RSIZE) STORE SIZE NEXT IN TABLEY02714
         B     COMPPQE                  SEE IF MORE              Y02714
CHKELS   L     ELBASE,VRWFEL            GET 1ST EL ON WAITQ      Y02714
         USING VRWPQEL,ELBASE                                    Y02714
COMP     CLC   WPELSIZE+1(BYTES3),SNDBYTE(RSIZE) COMPARE REQUESTED SIZE
*                                       WITH SIZE OF FREE AREA   Y02714
         BNH   SUBTRACT                 IF NOT GREATER, BRANCH   Y02714
         TM    FSTBYTE(RSIZE),LASTENT   LAST TABLE ENTRY?        Y02714
         BO    LASTSIZE                 BRANCH IF YES            Y02714
         LA    RSIZE,FLWD(RSIZE)        INCREMENT POINTER        Y02714
         B     COMP                     CHECK NEXT FREE AREA SIZEY02714
LASTSIZE L     ELBASE,WPNEXTEL          GET NEXT NON-SPEC ON Q   Y02714
         LTR   ELBASE,ELBASE            MORE ELS?                Y02714
         BZ    UNLOCK                   DONE IF NOT              Y02714
         LA    RSIZE,SIZES              RESET POINTER            Y02714
         B     COMP                     COMPARE SIZES            Y02714
SUBTRACT L     RWORK3,WPELSIZE          SIZE                     Y02714
         L     RWORK2,FSTWORD(RSIZE)    FREE AREA SIZE FROM TABLEY02714
         LA    RWORK2,0(RWORK2)         CLEAR HIGH ORDER BYTE    Y02714
         SR    RWORK2,RWORK3            SUBTRACT SIZES           Y02714
         STCM  RWORK2,MASK7,SNDBYTE(RSIZE) STORE REMAINING FREE AREA
*                                       IN TABLE (DON'T CLOBBER
*                                       LASTEL FLAG)             Y02714
         LA    RWORK5,VRWAITQ           INDICATE WAITQ           Y02714
         L     RWORK15,FRRPARMS                                  Y02703
         BAL   RRETURN,DEQUEUE          BRANCH TO DEQUEUE EL     Y02714
SAVENEXT L     NEXT,WPNEXTEL            SAVE @ NEXT EL ON Q      Y02714
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         STM   REG0,REG14,CFAPWKAR      SAVE REGS ACROSS POST    Y02714
         LR    SEGREG,RLDA              SAVE LDA BASE ACROSS POSTY02714
         LA    RWORK1,RC4               COMPLETION CODE          Y02714
         LM    RWORK2,RWORK3,WPERRADD   PARMS FOR XMPOST         Y02714
         L     RBASE,HIBITON            INDICATE XMPOST          Y02714
         ICM   RBASE,MASK7,WPECBADD+1   ECB ADDRESS              Y02714
         L     RCVT,CVTADDR             CVT BASE ADDRESS         Y02714
         USING CVT,RCVT                                          Y02714
         L     RBRANCH,CVT0PT01         BRANCH ENTRY POINT       Y02714
         BALR  RRETURN,RBRANCH          POST THE REQUESTOR       Y02714
         USING GDA,RGDA                                          Y02714
         LR    RLDA,SEGREG              RESTORE LDA ADDRESS      Y02714
         LM    REG0,REG14,CFAPWKAR      RESTORE REGS             Y02714
         L     RWORK2,VRWFEL            FIRST EL ON WAITQ        Y02714
         LTR   RWORK2,RWORK2            ANY ELS ON Q?            Y02714
         BZ    TURNOFF                  IF NOT TURN OFF WAITQUE  Y02714
         CLC   SPADDR(FLWD,RWORK2),ZEROES   ANY SPECS ON WAITQ?  Y02714
         BNE   SPECTST1                 BRANCH IF SPEC           Y02714
TURNOFF  NI    GDAFLAGS,X'FF'-WAITQUE   TURN OFF WAIT BIT        Y02714
SPECTST1 CLC   WPSPADDR(FLWD),ZEROES    THIS EL FOR SPEC REQUEST?Y02714
         BNE   PENQ                     IF SO, ENQ EL ON POSTQ   Y02714
         ST    RADDR,SAVEAREA+8         SAVE REG 2               Y02714
         BAL   RADDR,FMAIN              GO FREE THE ELEMENT      Y02714
         L     RADDR,SAVEAREA+8         RESTORE REG 2            Y02714
LAST     LR    ELBASE,NEXT              GET NEXT WAITING ELEMENT Y02714
         LA    RSIZE,SIZES              BEGINNING OF SIZE TABLE  Y02714
         LTR   ELBASE,ELBASE            ARE THERE MORE ELS?      Y02714
         BNZ   COMP                     SEE IF SHOULD POST IT    Y02714
UNLOCK   LH    RRETREG,RCSAVE           GET RETURN CODE          Y02714
         STM   RBASE,REG14,CFAPWKAR     SAVE REGS ACROSS SETLK   Y02714
REL11    SETLOCK  RELEASE,TYPE=SALLOC,RELATED=(VRWPQEL,IEAVPRT0(OBT7))
         L     RBASE,CFAPWKAR           RESTORE BASE REG         Y02714
         LA    RWORK2,RC8               VALUE TO COMPARE         Y02714
         CR    RWORK2,RWORK3            R.C.= 8?                 Y02714
         BE    O82ABEND                 GO TO FRR TO RECORD      Y02714
         LM    RWORK2,REG14,CFAPWKAR+FLWD RESTORE REGS           Y02714
         L     RWORK2,FRRPARMS          BASE FOR FRR PARMS       Y02714
         USING RECOVERY,RWORK2
         TM    FRRFLAGS,GPFPFLG         IS THIS A GETPART?       Y02714
         BO    RETURN                   DO NOT ADJUST CURRGNTP IF GP
         DROP  RWORK2
         L     PQEREG,ASDPQE            @ OF AS PQE
         L     PQEREG,PQEFFBQE-PQESECT(PQEREG)   @ OF 1ST FBQE
         MVC   CURRGNTP(FLWD),FBQAREA-FBQESECT(PQEREG) ADJUST FOR VGM00
*                                                               YM01960
         B     RETURN                   RETURN                   Y02714
CHKSPEC1 L     ELBASE,VRWFEL            1ST EL ON WAITQ          Y02714
         USING VRWPQEL,ELBASE                                    Y02714
CHKSPEC  L     RADDR,WPSPADDR           SPECIFIC ADDRESS         Y02714
         L     RWORK2,WPELSIZE          END ADDRESS              Y02714
         OI    GPSW,POSTCHK             INDICATE THIS IS POST    Y02714
*                                       CHECKING                 Y02714
         B     COMONCHK                 BRANCH TO SEE IF THIS    Y02714
*                                       REQUEST WILL FIT IN FREE Y02714
*                                       SPACE                    Y02714
PSTCHK   LTR   REG0,REG0                SUCCESSFUL RETURN        Y02714
         BNZ   LP1                      BRANCH IF NOT            Y02714
         LA    RWORK5,VRWAITQ           INDICATE EL ON WAITQ     Y02714
         L     RWORK15,FRRPARMS                                  Y02703
         LA    RRETURN,SAVENEXT         RETURN POINT             Y02714
         B     DEQUEUE                  DEQUEUE EL FROM WAITQ    Y02714
LP1      LR    FIRSTSAV,ELBASE          SAVE 1ST EL @            Y02714
*  SEE IF ANOTHER REQUEST CAN BE HONORED WITHOUT INTERFERING     Y02714
*  WITH FIRST REQUEST ON VRWAITQ.                                Y02714
LOOP1    L     ELBASE,WPNEXTEL          GET NEXT EL              Y02714
         LTR   ELBASE,ELBASE            ANOTHER ELEMENT?         Y02714
         BZ    UNLOCK                   BRANCH IF NOT            Y02714
         CLC   WPSPADDR(FLWD),ZEROES    IS THIS A SPEC EL        Y02714
         BE    UNLOCK                   BRANCH IF NON-SPEC       Y02714
OVERLAP  CLC   WPSPADDR(FLWD),SPADDR(FIRSTSAV) START 2>START 1?  Y02714
         BH    TEST2                    BRANCH IF YES            Y02714
         CLC   WPELSIZE,SPADDR(FIRSTSAV)    END 2>=START 1?      Y02714
         BNL   LOOP1                    OVERLAPS-TRY NEXT EL     Y02714
         B     CHKSPEC                  CAN THIS REQUEST BE HON
TEST2    CLC   WPSPADDR(FLWD),ELSIZE(FIRSTSAV) START 2>END 1?    Y02714
         BNH   LOOP1                    IF NOT, OVERLAPS         Y02714
         B     CHKSPEC                  YES-ATTEMPT TO HONOR IT  Y02714
*  ENQUEUE AN ELEMENT ON THE VRPOSTQ                             Y02714
PENQ     MVC   WPPREVEL(FLWD),ZEROES    ENQUEUE AT HEAD OF QUEUE Y02714
         MVC   WPNEXTEL(FLWD),VRPFEL    NEW FORWARD PTR          Y02714
         CLC   VRPFEL(FLWD),ZEROES      WERE THERE ELS ON Q?     Y02714
         BE    STBASE                   BRANCH IF NOT            Y02714
         L     RWORK4,VRPFEL            @ PREVIOUS FIRST EL      Y02714
         ST    ELBASE,SNDWORD(RWORK4)   OLD ELS BACK PTR         Y02714
STBASE   ST    ELBASE,VRPFEL            NEW 1ST EL @             Y02714
         CLC   VRPLEL(FLWD),ZEROES      WERE THERE ELS ON Q      Y02714
         BNE   UNLOCK                   BRANCH IF SO             Y02714
         ST    ELBASE,VRPLEL            NEW LAST EL @            Y02714
         B     UNLOCK                   GO RELEASE LOCK
*  DEQUEUE AN ELEMENT FROM VRWAITQ OR VRPOSTQ                    Y02714
         USING RECOVERY,RWORK15
DEQUEUE  OI    FRRFLGS2,DEQFLG          FRR FOOTPRINT            Y02703
         CLC   WPNEXTEL(FLWD),ZEROES    IS THIS THE LAST EL      Y02714
         BNE   NOTLAST                  BRANCH IF NOT LAST       Y02714
         CLC   WPPREVEL(FLWD),ZEROES    IS THIS THE FIRST EL     Y02714
         BNE   NOTONLY                  BRANCH IF NOT            Y02714
         SR    RWORK4,RWORK4            ZERO REG                 Y02714
         ST    RWORK4,FSTWORD(RWORK5)   ZERO 1ST EL PTR          Y02714
         ST    RWORK4,SNDWORD(RWORK5)   ZERO LAST EL PTR         Y02714
         NI    FRRFLGS2,X'FF'-DEQFLG    TURN OFF FLAG            Y02714
         BR    RRETURN                  BRANCH TO POST REQUESTER Y02714
NOTONLY  L     RWORK4,WPPREVEL          PREVIOUS EL @            Y02714
         MVC   FSTWORD(FLWD,RWORK4),WPNEXTEL     NEW NEXT PTR    Y02714
*                                       IN PREVIOUS EL
         MVC   SNDWORD(FLWD,RWORK5),WPPREVEL     NEW LAST PTR IN Y02714
*                                       ANCHOR BLOCK
         NI    FRRFLGS2,X'FF'-DEQFLG    TURN OFF FLAG            Y02703
         BR    RRETURN                  BRANCH TO POST REQUESTER Y02714
NOTLAST  CLC   WPPREVEL(FLWD),ZEROES    IS THIS THE FIRST EL     Y02714
         BNE   MIDDLE                   NO-DEQUEUE FROM MIDDLE   Y02714
         L     RWORK4,WPNEXTEL          @ OF NEXT EL             Y02714
         MVC   SNDWORD(FLWD,RWORK4),WPPREVEL     NEW PREV PTR IN Y02714
*                                       OLD NEXT
         MVC   FSTWORD(FLWD,RWORK5),WPNEXTEL     NEW 1ST PTR IN  Y02714
*                                       ANCHOR BLOCK
         NI    FRRFLGS2,X'FF'-DEQFLG    TURN OFF FLAG            Y02703
         BR    RRETURN                  BRANCH TO POST REQUESTER Y02714
MIDDLE   L     RWORK4,WPNEXTEL          NEXT EL @                Y02714
         MVC   SNDWORD(FLWD,RWORK4),WPPREVEL     NEW PREV PTR IN Y02714
*                                       NEXT EL
         L     RWORK4,WPPREVEL          PREV EL @                Y02714
         MVC   FSTWORD(FLWD,RWORK4),WPNEXTEL     NEW NEXT PTR IN Y02714
*                                       PREVIOUS EL
         NI    FRRFLGS2,X'FF'-DEQFLG    TURN OFF FLAG            Y02703
         BR    RRETURN                  RETURN                   Y02714
         EJECT
***********************************************************************
* STATUS                                                              *
*    CHANGE LEVEL 000                                                 *
* FUNCTION                                                            *
*    THIS SECTION OF GETPART, THAT IS GETPART SPECIFIC, OBTAINS CORE  *
*    AT AN ACTUAL ADDRESS. THE FOLLOWING TYPE OF GETPART SPECIFIC IS  *
*    SUPPORTED: ECB MODE SINGLE REGION LIST REQUEST(SVC 4).           *
* ENTRY POINTS                                                        *
*         GETSPEC                                                     *
*    THIS IS THE INTERNAL BRANCH ENTRY POINT. THIS FUNCTION OF GETPART*
*    IS ENTERED WHEN THE ROUTINE RECOGNIZES THAT THE REGION ADDRESS   *
*    REQUESTED FIELD IN THE GETPART WORK AREA IS NON-ZERO.            *
*    THIS ROUTINE IS ALSO ENTERED AFTER A V=R REGION HAS BEEN         *
*    ALLOCATED, AND THE V=V REGION MUST BE ALLOCATED AT THE SAME      *
*    ADDRESS.                                                         *
* INPUT                                                               *
*    AT THE TIME THIS LOGIC IS ENTERED, DETERMINATION HAS BEEN MADE AS*
*    TO WHETHER THE REQUEST IS FOR A V=V OR V=R REGION. THE ADDRESS OF*
*    THE V=R OR V=V PQE IS PASSED IN PQEREG, AND THE ROUNDED REGION   *
*    SIZE IS PASSED IN SIZEREG. THE SPECIFIC ADDRESS OF THE REGION IS *
*    PASSED IN RADDR. IF ENTRY IS FROM V=R ALLOCATION THEN RWORK2     *
*    MUST CONTAIN THE END ADDRESS OF THE SPECIFIC REGION.             *
* OUTPUT                                                              *
*    THE ADDRESS OF THE V=V OR V=R PQE IS PASSED IN PQEREG; THE       *
*    ROUNDED REGION SIZE IS IN SIZEREG, AND IF THE GETPART IS SUCCESS-*
*    FUL, THE SPECIFIC ADDRESS OF THE REGION IS IN SEGREG.            *
* EXTERNAL REFERENCES                                                 *
*         GETMAING                                                    *
*    TO ALLOCATE SPACE IN SQA FOR AN ADDITIONAL FBQE.                 *
*         RMBRANCH                                                    *
*    TO FREE SPACE IN SQA FOR AN FBQE NO LONGER NEEDED                *
* EXITS,NORMAL                                                        *
*    TO RTN04 IN THE GETPART LOGIC WHEN THE FREE SPACE AVAILABLE AT   *
*    THE CURRENT TIME CANNOT CONTAIN THE SPECIFIC REGION REQUESTED. TO*
*    CKONEDN OF THE GETPART LOGIC WHEN THE REGION HAS BEEN SUCCESS-   *
*    FULLY ALLOCATED.                                                 *
* EXITS,ERROR                                                         *
*    TO RTN08 IN THE GETPART LOGIC WHEN THE REQUEST IS OUTSIDE THE    *
*    BOUNDS OF THE DYNAMIC AREA. TO RET20 IN GETPART LOGIC WHEN THE   *
*    requested SPACE IS FRAGMENTED WITH SYSTEM SPACE LSQA/SWA/SP229,230
* TABLES AND WORK AREAS                                               *
*    THE CHAIN OF FBQES FOR THE DYNAMIC AREA WHICH IS ANCHORED BY THE *
*    PQEFFBQE FIELD OF THE PQE.                                       *
* ATTRIBUTES                                                          *
*    REENTRANT, REFRESHABLE                                           *
* CHARACTER CODE DEPENDENCY                                           *
*    SAME AS GETPART                                                  *
* NOTES                                                               *
*    NONE                                                             *
***********************************************************************
         USING PQESECT,PQEREG
GETSPEC  C     RADDR,PQEREGN            COMPARE REGION START @ TO DY-
         BL    RET8                     NAMIC START @. BRANCH IF LOW
         L     RWORK3,PQEREGN           ACCESS DYNAMIC START @
         A     RWORK3,PQESIZE           ADD DYNAMIC AREA SIZE
         CR    RADDR,RWORK3             COMPARE REGION START @ TO DY-
         BNL   RET8                     NAMIC END @. BRANCH IF NOT LOW
         LR    RWORK2,SIZEREG           ACCESS REGION SIZE
         AR    RWORK2,RADDR             ADD REGION START @
         CR    RWORK2,RWORK3            COMPARE REGION END @ TO DYNAMIC
         BH    RET8                     END @. BRANCH IF HIGH
COMONCHK L     RWORK1,PQEFFBQE          ACCESS FIRST FBQE
         USING FBQESECT,RWORK1          ADDRESSABILITY FOR FBQE
LOOP     CR    RWORK1,PQEREG            IS THERE ANOTHER FBQE?
         BE    RET20                    BRANCH IF NOT
         C     RADDR,FBQAREA            COMPARE REGION START @ TO FREE
         BL    RET4                     START @. BRANCH IF LOW.
         L     RWORK3,SIZE              ACCESS FREE AREA SIZE
         A     RWORK3,FBQAREA           ADD FREE AREA START @
         CR    RWORK3,RADDR             COMPARE FREE END @ TO REGION
         BL    FBQELOOP                 START @. BRANCH IF LOW
         CR    RWORK2,RWORK3            COMPARE REGION END @ TO FREE
         BH    RET20                    END @. BRANCH IF HIGH.
         TM    GPSW,POSTCHK             IS POSTCHK FLAG ON?      Y02714
         BZ    VRSTEST                  IF NOT, V=R SPEC?        Y02714
         NI    GPSW,X'FF'-POSTCHK       TURN OFF POSTCHK FLAG    Y02714
         LA    REG0,RC0                 RC = 0 IN REG 0          Y02714
         B     PSTCHK                   BRANCH TO POSTING ATTEMPTY02714
VRSTEST  TM    GPSW,VERREQ              V=R REQUEST?             Y02714
         BZ    NOTVRSPC                 BRANCH IF NOT            Y02714
         TM    GPSW,GPSSW               V=R SPECIFIC?            Y02714
         BZ    NOTVRSPC                 BRANCH IF NOT            Y02714
         TM    GPSW,ALOCPASS            HAS ALLOCATION BEEN DONE Y02714
         BZ    SPECREAL                 BRANCH TO ALLOCATE V=R   Y02714
         NI    GPSW,X'FF'-ALOCPASS      TURN FLAG OFF            Y02714
NOTVRSPC L     RWORK15,FRRPARMS         FRR PARM BASE            Y02703
         ST    RWORK1,RW1SAVE           FRR INFO                 Y02703
         DROP  RWORK15
         LR    RSIZE,RADDR              ACCESS REGION START @
         S     RSIZE,FBQAREA            SUBTRACT FREE START @
         BZ    SET1                     BRANCH IF ADDRESSES EQUAL
         NI    BIGPSW,X'FF'-STADDRE     TURN OFF SWITCH          Y02714
         TM    GPSW,VERREQ                                       Y02714
         BZ    VIRTSPEC                 BRANCH IF V=V            Y02714
         ST    RSIZE,SIZE               STORE DIFFERENCE IN FBQE
OTHREND  SR    RWORK3,RWORK2            DIFFERENCE IN END ADDRESSES
         LR    SEGREG,RADDR             PUT REGION START @ IN SEGREG
         LTR   RWORK3,RWORK3            CHECK FOR END ADDRESSES EQUAL
         BZ    CKSWX                    BRANCH IF EQUAL
         TM    BIGPSW,STADDRE           CHECK FOR START ADDRESSES EQUAL
         BO    USEOLD                   BRANCH IF EQUAL
*   CONDITION 2: REGION START ADDRESS>FREE AREA START ADDRESS AND
*   REGION END ADDRESS<FREE AREA END ADDRESS
         TM    GPSW,VRORAS              V=R REQUEST?             Y02714
         BM    SQAID                    BRANCH IF SO             Y02714
         LA    RIN1,SP255               GET FBQE FROM LSQA     @Z30ENYG
         B     SAVEREG                    AND NOT FROM SQA     @Z30ENYG
SQAID    LA    RIN1,SP245               GET FBQE FROM SQA      @Z30ENYG
SAVEREG  ST    PQEREG,REGSAVE6          SAVE PQE ADDR BY GM    @Z30ENYG
         L     PQEREG,PASCBSV           ADDR ASCB FOR CELL GM  @Z30ENYG
         GETMAIN P,BRANCH=YES,SP=(RIN1) GET CELL FOR FBQE      @Z30ENYG
         LA    REG14,CFAPWKAR           WORKAREA BASE            702714
         L     PQEREG,REGSAVE6          RESTORE PQE ADDR       @Z30ENYG
         DROP  RWORK1
         USING FBQESECT,RIN1            ADDRESSABILITY FOR FBQE
*   LINES 557700,557900,558400 WERE DROPPED                    @ZM03329
         ST    RWORK3,SIZE              REMAINING SIZE IN FBQE
         ST    RWORK2,FBQAREA           NEW FREE START @ IN FBQE
         MVC   FWDPTR(FLWD),FWDPTR-FBQESECT(RWORK1) NEW POINTS TO NEXT
         ST    RWORK1,BCKPTR            NEW POINTS TO PREVIOUS
         L     RWORK2,FWDPTR-FBQESECT(RWORK1) OBTAIN ADDR OF NEXT
         ST    RIN1,BCKPTR-FBQESECT(RWORK2) NEXT POINTS TO NEW
         ST    RIN1,FWDPTR-FBQESECT(RWORK1) PREVIOUS POINTS TO NEW
         B     CKONEDN                  BRANCH TO MAINLINE GETPART
         DROP  RIN1
         USING FBQESECT,RWORK1          ADDRESSABILITY FOR FREE FBQE
*   CONDITION 1: REGION START ADDRESS=FREE AREA START ADDRESS AND
*   REGION END ADDRESS<FREE AREA END ADDRESS
USEOLD   ST    RWORK3,SIZE              REMAINING SIZE IN FBQE
         ST    RWORK2,FBQAREA           NEW FREE START @ IN FBQE
         B     CKONEDN                  BRANCH TO MAINLINE GETPART
CKSWX    TM    BIGPSW,STADDRE           CHECK FOR START ADDRESSES EQUAL
*   CONDITION 3: REGION START ADDRESS>FREE AREA START ADDRESS AND
*   REGION END ADDRESS=FREE AREA END ADDRESS
         BZ    CKONEDN                  BRANCH TO MAINLINE GETPART
*   CONDITION 4: REGION START ADDRESS=FREE AREA START ADDRESS AND
*   REGION END ADDRESS=FREE AREA END ADDRESS
         L     RWORK2,BCKPTR            ADDR OF PREVIOUS FBQE
         L     RWORK3,FWDPTR            ADDR OF NEXT FBQE
         ST    RWORK3,FWDPTR-FBQESECT(RWORK2) PREVIOUS POINTS TO NEXT
         ST    RWORK2,BCKPTR-FBQESECT(RWORK3) NEXT POINTS TO PREVIOUS
         ST    PQEREG,SAVEAREA          SAVE PQE ADDR          @Z30ENYG
         L     PQEREG,PASCBSV           ASCB ADDR FOR CELL FM  @Z30ENYG
         FREEMAIN P,BRANCH=YES,A=(RWORK1) FREE FBQE CELL       @Z30ENYG
         LA    REG14,CFAPWKAR           WORKAREA BASE            Y02714
         L     PQEREG,SAVEAREA          RESTORE PQE ADDRESS    @Z30ENYG
         B     CKONEDN                  BRANCH TO MAINLINE GETPART
FBQELOOP L     RWORK1,FWDPTR            ACCESS ADDR OF NEXT FBQE
         B     LOOP                     BRANCH TO CHECK FOR ADDR OF PQE
SET1     OI    BIGPSW,STADDRE           SET BIT FOR START ADDRS EQUAL
         TM    GPSW,VERREQ              V=R SPEC?                Y02714
         BZ    VVEND                    BRANCH IF VIRTUAL        Y02714
         B     OTHREND                  BRANCH TO CHECK END ADDRS
VIRTSPEC L     RWORK3,SIZE              FREE AREA SIZE           Y02714
         SR    RWORK3,RSIZE             SUBTRACT SIZE BELOW      Y02714
*                                       REG START                Y02714
         ST    RWORK3,SIZE              REMAINING FREE AREA      Y02714
         ST    RADDR,FBQAREA            START @ OF FREE AREA IN  Y02714
*                                       PRIVATE AREA             Y02714
         ST    RADDR,PQEREGN            START @ OF VIRTUAL REGIONY02714
         L     RWORK3,PQESIZE           SIZE OF PRIVATE AREA     Y02714
         SR    RWORK3,RSIZE             SIZE-SIZE BELOW REG.STARTY02714
         ST    RWORK3,PQESIZE           EFFECTIVE VIRT. REG SIZE Y02714
         B     VVEND                    BRANCH TO FINISH ALLOC.  Y02714
         DROP  RWORK1
         DROP  PQEREG
         EJECT
***********************************************************************
*                           IEALIMIT                                  *
* THIS IS THE USER EXIT ROUTINE TO LIMIT THE SIZE OF REGION REQUESTS. *
* the routine PROVIDED HERE WILL RETURN ZERO IN REGISTER 1 IF INPUT   *
* register 1 iS ZERO (NO REGION SPECIFIED). IF A REGION SIZE WAS      *
* specified 64K WILL BE ADDER TO IT AND THIS VALUE WILL BECOME THE    *
* upper limit OF THE SPACE AVAILABLE IN SUBPOOLS 0-127, 251 AND 252.  *
*
*     INPUT:
*
*         R1   V=V JOBS
*                REGION PARM FROM JCL
*                OR
*                DEFAULT FROM READER PROC
*              V=R JOBS
*                REGION PARM FROM JCL
*                OR
*                DEFAULT FROM GLOBAL DATA AREA (IHAGDA)
*         R13  ADDRESS OF 18 WORD SAVE AREA
*         R14  RETURN ADDRESS
*         R15  ENTRY POINT ADDRESS
*
***********************************************************************
IEALIMIT CSECT
         ST    REG15,C16(REG13)         SAVE REGISTER TO USE AS BASE
         BALR  REG15,0                  GET BASE REGISTER
         USING *,REG15
         LTR   REG1,REG1                WAS A REGION SIZE SPECIFIED
         BZ    LIMITRET                 BR IF NONE SPECIFIED
         A     REG1,C64K                ADD 64K TO REGION SIZE
LIMITRET L     REG15,C16(REG13)         RESTORE DESTROYED REGISTER
         BR    RRETURN                  RETURN TO IEAVPRT0
C64K     DC    F'65536'                 64K
         EJECT
IEAVPRT0 CSECT
ZEROES   DC    F'0'                     TO ZERO OUT GPSW
BQELNTH  DC    X'FF000010'              SUBPOOL NUMBER,LENGTH FBQE/SPQE
QELNTH   DC    X'FF000028'              SUBPOOL NUMBER, LENGTH PQE,DPQE
MQELNTH  DC    X'FF000038'              SPID,LENGTH DPQE,PQE,FBQEY02714
SBQELNTH DC    X'F5000010'              SUBPOOL NUMBER AND LENGTH FBQE
         DS    0F
DEFAULT  DC    X'80000000'              DEFAULT REGION SIZE      Y02714
LIMIT    DC    V(IEALIMIT)              ADDRESS OF USER EXIT
GETMNB   DC    V(GETMAING)              GETMAING ROUTINE
RELEASE  DC    V(MRELEASF)              MRELEASF ROUTINE
REGMAIN  DC    V(RMBRANCH)              RMBRANCH
ERRADD   DC    V(PRT0ERTN)              @ ASYNC ERROR EXIT RTN   Y02714
FRRTN    DC    V(IEAVGPRR)              @ IEAVPRT0 FRR           Y02714
         EJECT
         IKJTCB                         TCB
         EJECT
         CVT   SYS=AOS2,OPTIONS=(TSLICE),TSO=YES,DSECT=YES,PREFIX=NO
         EJECT
         IHAGDA                                                  Y02714
         IHALDA                                                  Y02714
         EJECT
         IHAFBQE                        FBQE
         IHAPQE                         PQE
         IHASPQE                        SPQE                    Y02714
         IHADQE                         DQE
         IHAFQE                         FQE
         IHAWPQEL                                                Y02714
         IEFTCT                                                  Y02714
         EJECT
         IEZJSCB                        JOB STEP CONTROL BLOCK
         EJECT
         IHAPVT                         PVT                      Y02714
         EJECT
         IHAPSA                         FIXED LOW CORE AND PSA   Y02714
         EJECT
         IHAFRRS                        FUNCTIONAL RECOVERY RTNS Y02714
         EJECT
WORKAREA DSECT                          MAPPING OF CFAPWKAR      Y02714
SAVEAREA DS    18F                      STANDARD SAVE AREA       Y02714
VEQRWORK DS    4F                       WORK AREA FOR IEAVEQR    Y02714
RINSAVE  DS    16F                      INPUT SAVE AREA          Y02714
DRINSAV  EQU   CFAPWKAR+88       RINSAV DISPLACEMENT FROM LDA    Y02714
DRINSV15 EQU   CFAPWKAR+148             DISPLACEMENT FROM LDA    Y02714
REGSAVE  DS    6F                       REGISTER SAVE AREA       Y02714
RCSAVE   DS    H                        RETURN CODE SAVE AREA    Y02714
VRPARMS  DS    3F                       V=R PARAMETER LIST       Y02714
FRRPARMS DS    F                        @ OF PARM AREA FOR FRR   Y02714
GPSW     DS    F                        SWITCHES BYTE            Y02714
* SWITCHES BY BIT  BYTE 0
*        BIT0 = ADDRESS SPCE BIT BIT 4 = GETPART SPECIFIC REQUEST
*             Q PROCESSING
*        BIT 1 = POSTED-     BIT 5 = FREEPART REQUEST
*                SPECIFIC REQUEST
*        BIT 2 = BYPASS V=R  BIT 6 = V=R REQUEST
*                ALLOCATION
*        BIT 3 = CHECKING    BIT 7 = SVC 4 REQUEST
*                OF POST Q
* SWITCHES BY BIT  BYTE 1
*        BIT 0 = UNSUCCESSFUL V=R SCAN BIT 4 = UNUSED
*        BIT 1 = UNUSED                BIT 5 = UNUSED
*        BIT 2 = START @S EQUAL IN GPS BIT 6 = UNUSED
*        BIT 3 = UNUSED                BIT 7 = UNUSED
FRPRT    EQU   X'04'                    FREEPART REQUEST       @ZA08170
DGPSW    EQU   CFAPWKAR+196             DISPLACEMENT FROM LDA    Y02714
SRREG    DS    F             SYSTEM REGION SIZE                  Y02714
ALLOCVR  DS    F             RSM V=R ALLOCATION E.P.             Y02714
RSMFREE  DS    F             RSM FREE REAL ROUTINE E.P.          Y02714
SAVE1FRR DS    F                        SAVE REG FOR FRR        YM07262
****THESE 2 ELEMENTS MUST ALWAYS BE LAST IN THE WORKAREA DSECT TO  ****
****ALLOW FOR EXPANSION OF THE SIZES TABLE.                        ****
SAVEFBQE DS    F                       SAVE AREA FOR FBQE ADDRESSY02714
SIZES    EQU   SAVEFBQE+4              FBQE SIZES TO COMPARE FOR Y02714
*                                       ALLOCATION OF V=R NON-
*                                       SPECIFIC REQUESTS
         EJECT
*                                                                     *
* THIS DSECT MAPS THE SIX WORD FRR PARM AREA SUPPLIED BY THE SETFRR   *
*                                                                     *
RECOVERY DSECT                                                   Y02714
FRRFLAGS DS    BL1                 FOOTPRINTS FOR RECOVERY       Y02714
RSMDONE  EQU   X'80'               RSM ALLOCATION DONE FOR V=R   Y02714
ASDONE   EQU   X'40'               V=R REGION SUBTRACTED FROM    Y02714
*                                  ADDRESS SPACE QUEUES
CBGFLG  EQU   X'20'               V=R CONTROL BLOCKS PROCESSING  Y02714
FPFLG    EQU   X'04'               FPCHK ENTERED                 Y02714
ZPFLG    EQU   X'02'               ZEROPTRS ENTERED              Y02714
GPFPFLG  EQU   X'01'               ON-GETPART,OFF-FREEPART       Y02714
FRRFLGS2 DS    BL1
DEQFLG   EQU   X'80'               DEQUEUE IN PROCESS            Y02714
WENQFLG  EQU   X'40'               WAIT EL ENQUEUE IN PROCESS    Y02714
PENQFLG  EQU   X'20'               POST EL ENQUEUE IN PROCESS    Y02714
VEQRDONE EQU   X'10'               V=R REGION SUBTRACTED FROM    Y02714
*                                  V=R QUEUES
         DS    BL2
REGSIZE  DS    F                   REGION SIZE REQUESTED         Y02714
REGADD   DS    F                   REGION START ADDRESS          Y02714
LDAADD   DS    F                   LDA ADDRESS                   Y02714
RW1SAVE  DS    F                   SAVE AREA FOR REG 10          Y02714
PRT0BASE DS    F                   FIRST PRT0 BASE REGISTER     YM07262
         EJECT
IEAVPRT0 CSECT
*   REGISTER EQUATES
RIN0     EQU   0                        INPUT REGISTER 0
SEGNDX   EQU   0                        SEGMENT INDEX REGISTER
RLENGTH  EQU   0                        REGISTER CONTAINING LENGTH
REG0     EQU   0                        REGISTER 0
RIN1     EQU   1                        INPUT REGISTER 1
REG1     EQU   1                        WORK REGISTER 1
RDQE     EQU   1                        DQE REGISTER
ELBASE   EQU   1                        BASE FOR WAIT/POST ELS   Y02714
LIM      EQU   1                        PARM FOR USER EXIT
CTR      EQU   2                        COUNTER                  Y02714
REGSTART EQU   2                        START OF REGION          Y02714
RADDR    EQU   2                        ADDRESS REGISTER
RCVT     EQU   3                        CVT REGISTER
RGDA     EQU   3                        GDA BASE                 Y02714
RLDA     EQU   4                        LDA BASE                 Y02714
RSPID    EQU   5                        SUBPOOL ID REGISTER
RWORK4   EQU   5                        WORK REGISTER 4
SIZEREG  EQU   6                        SIZE REGISTER
RWORK5   EQU   6                        WORK REGISTER            Y02714
NEXT     EQU   6                        NEXT EL ON QUEUE         Y02714
FIRSTSAV EQU   6                        @ 1ST EL ON WAIT QUEUE   Y02714
PQEREG   EQU   7                        BASE FOR PQE
GMBASE   EQU   8                        GETMAIN BASE
RTCB     EQU   8                        TCB BASE                 Y02714
SEGREG   EQU   9                        SEGMENT ADDRESS REGISTER
RBASE2   EQU   9                        TEMPORARY BASE REG       Y02714
RWORK1   EQU   10                       WORK REGISTER 1
FBQEREG  EQU   10                       FBQE BASE                Y02714
RBASE    EQU   11                       GETPART BASE
RWORK2   EQU   12                       WORK REGISTER 2
REGEND   EQU   12                       REGION END               Y02714
REG12    EQU   12                       REGISTER 12              Y06736
REG13    EQU   13                       REGISTER 13              Y06736
RWORK3   EQU   13                       WORK REGISTER 3
RSPQE    EQU   13                       SPQE REGISTER
GMBASE2  EQU   13                       GETMAIN BASE 2
RRETURN  EQU   14                       RETURN REGISTER
REG14    EQU   14                       CFAPWKAR BASE            Y02714
REG15    EQU   15                       REGISTER 15              Y06736
RTCT     EQU   15                       TCT BASE                 Y02714
RWORK15  EQU   15                       WORK REGISTER            Y02714
RBRANCH  EQU   15                       BRANCH REGISTER
RRETREG  EQU   15                       RETURN REGISTER
RSIZE    EQU   15                       SIZE REGISTER
*   GENERAL EQUATES
CVTNRMBR EQU   CVTCRMN
GPRETURN EQU   UNLOCK                   LABEL FOR FRR USE        Y02714
REGSAVE2 EQU   REGSAVE+4                SECOND WORD OF REGISTER SAVE
REGSAVE3 EQU   REGSAVE+8                THIRD WORD OF REGISTER SAVE
REGSAVE4 EQU   REGSAVE+12               FOURTH WORD OF INPUT SAVE
REGSAVE5 EQU   REGSAVE+16               FIFTH WORD OF REGISTER SAVE
REGSAVE6 EQU   REGSAVE+20               SIXTH WORD OR REGISTER SAVE
RINSAVE3 EQU   RINSAVE+8                THIRD WORD OF INPUT SAVE
RINSAVE4 EQU   RINSAVE+12               SAVE AREA FOR REG 1
RINSAV14 EQU   RINSAVE+56
RINSAV15 EQU   RINSAVE+60
HIBITON  EQU   DEFAULT                  FLAG HIGH BIT FOR POST PARM.
RC0      EQU   0                        RETURN CODE OF 0
RC4      EQU   4                        RETURN CODE OF 4
RC8      EQU   8                        RETURN CODE OF 8
RC12     EQU   12                       RETURN CODE OF 12        Y02714
RC16     EQU   16                       RETURN CODE OF 16
RC20     EQU   20                       RETURN CODE OF 20
SPADDR   EQU   24                       SPECIFIC ADDRESS         Y02714
RC24     EQU   24                       REG REQUEST TOO BIG
ELSIZE   EQU   20                       SIZE OF REQUEST          Y02714
FLWD     EQU   4                        LENGTH OF FULLWORD
BRENTRY  EQU   6                        DISP FOR BRANCH ENTRY OF POST
VVSPID   EQU   247                      V=V SUBPOOL ID
SP255    EQU   X'FF'                    LSQA SUBPOOL             Y02714
SP245    EQU   X'F5'                    SQA SPID                 Y02714
VVPQE    EQU   12                       DISPLACEMENT FOR V=V PQE
C16      EQU   16                       DISPLACEMENT CONSTANT    Y06736
VRPQE    EQU   8                        DISPLACEMENT FOR V=R PQE
FSTBYTE  EQU   0                        FIRST BYTE OF A WORD
BYTES3   EQU  3                         THREE BYTES              Y02714
SNDBYTE  EQU  1                         SECOND BYTE OF A WORD    Y02714
HIGHBYTE EQU   24                       FOR SHIFT                Y02714
PARMS    EQU   24                       SIZE OF FRR PARMS        Y02714
ELEVEN   EQU   11                       FOR 2K SHIFT             Y02714
TWELVE   EQU   12                       FOR 4K SHIFT             Y02714
FSTWORD  EQU   0                        FIRST WORD AT AN ADDRESS
SNDWORD  EQU   4                        SECOND WORD AT AN ADDRESS
SVCFOUR  EQU   4                        SVC 4
PAGERND  EQU   4095                     PAGE ROUNDING FACTOR
VRPARMS1 EQU   VRPARMS                  FIRST V=R PARAMETER
VRPARMS2 EQU   VRPARMS+4                SECOND V=R PARAMETER
VRPARMS3 EQU   VRPARMS+8                THIRD V=R PARAMETER
BIGPSW   EQU   GPSW+1                   SECOND BYTE OF GPSW
VERREQ   EQU   X'02'                    V=R INDICATOR
SVC4SW   EQU   X'01'                    SVC 4 INDICATOR
LASTENT  EQU   X'80'                    LAST ENTRY INDICATOR
GPSSW    EQU   X'08'                    GETPART SPECIFIC SWITCH
PSPEC    EQU   X'40'                    POSTED SPECIFIC REQUEST  Y02714
POSTCHK  EQU   X'10'                    CHECK TO POST REQUESTS   Y02714
UNCSCAN  EQU   X'80'                    UNSUCCESSFUL SCAN
BRBIT    EQU   X'04'                    BRANCH ENTRY INDICATOR
STADDRE  EQU   X'20'                    START @'S EQUAL INDICATOR
ALOCPASS EQU   X'20'                    BYPASS ALLOCATION        Y02714
BRFLG    EQU   X'80'                    INDICATE BRANCH ENTRY IN LIST
ASQFLAG  EQU   X'80'                    A.S. QUEUE PROCESSING    Y02714
VRORAS EQU     X'82'                    V=R & AS PROCESSING      Y02714
FIXDPAGE  EQU  X'A0A'                   COMPLETION CODE FOR MEMTERM
CVTADDR  EQU   CVTPTR                   LOCATION OF CVT ADDRESS
POSTCD4  EQU   4                        POST CODE
MASK8    EQU   8                        MASK FOR HIGH BYTE OF A REG
MASK7    EQU   7                        MASK FOR LAST THREE BYTES
D20      EQU   20                       DISPLACEMENT INTO WKAR @Z30ENYG
         END
