         TITLE '*****  VSM INITIALIZATION ROUTINE  *****               *
                        '
IEAVNP08 CSECT ,                                                   0001
IEAVNPA8 DS    0H                                                  0001
         ENTRY IEAVNPA8
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IEAVNP08  76.086'                                 0001
IEAVNPB8 DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00317-IEAVNPB8)
         ENTRY IEAVNPB8
IEAVNPC8 DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00416-IEAVNPC8)
         ENTRY IEAVNPC8
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
*
* REFS ARE GENERATED FOR NVT FIELDS THAT CONTAIN ADDRESSES OF
* NIP SERVICE ROUTINES, SO IEAPMNIP MACRO CALLS TO THESE ROUTINES
* WILL ASSEMBLE PROPERLY.
         EJECT
*   GDAPTR=CVTGDA;                  /* SET UP GDA ADDR FROM CVT      */
         L     GDAPTR,CVTGDA(,CVTPTR)                              0152
*   RPTAB=NVTPTAB;                  /* LOAD PARM TABLE ADDRESS       */
         L     RPTAB,NVTPTAB(,RNVT)                                0153
*   RSCAN=SQA;                      /* LOAD SQA PARM ADDRESS         */
*                                                                  0154
         L     RSCAN,SQA(,RPTAB)                                   0154
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SQA PARAMETER IS SPECIFIED AND QUICKSTART IS NOT IN     */
*   /* PROCESS , THEN TAKE DEFAULT SQA SIZE AND PROCESS. IF SQA WAS  */
*   /* SPECIFIED, CALL SYNTAX CHECKER TO SCAN PARM                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0155
*   IF RSCAN=0                      /* SQA PARM ADDRESS = 0 ?        */
*     THEN                                                         0155
         LTR   RSCAN,RSCAN                                         0155
         BNZ   @RF00155                                            0155
*     DO;                                                          0156
*                                                                  0156
*       /*************************************************************/
*       /*                                                           */
*       /* IF QUICKSTART WAS SPECIFIED (NVTFLQS=1), THEN CALCULATE   */
*       /* SIZE OF PREVIOUS SQA AND CONTINUE PROCESS.                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0157
*       IF NVTFLQS='0'B             /* NVTFLQS=1 MEANS QS SPECIFIED  */
*         THEN                                                     0157
         TM    NVTFLQS(RNVT),B'00001000'                           0157
         BNZ   @RF00157                                            0157
*         VALUE=SQADFLT;            /* QS NOT SPECIFIED TAKE DEFAULT
*                                      OF 1 SEGMENT.                 */
         MVC   VALUE(4),@CF00062                                   0158
*       ELSE                        /* GET SQA SIZE OF RECLAIMED IPL */
*         DO;                       /* AND CONVERT TO NO. SEGMENTS   */
         B     @RC00157                                            0159
@RF00157 DS    0H                                                  0160
*           VALUE=((NVTLVIRT-NVTLPAND)/NP864K);/* NVTLPAND = HIGH  0160
*                                      VIRTUAL ADDR OF PLPA BEING  0160
*                                      RECLAIMED                     */
         L     @00,NVTLVIRT(,RNVT)                                 0160
         SL    @00,NVTLPAND(,RNVT)                                 0160
         SRDA  @00,32                                              0160
         D     @00,@CF00109                                        0160
         ST    @01,VALUE                                           0160
*         END;                                                     0161
*       GOTO NP8SQOK;               /* BYPASS SYNTAX CHECKING        */
         B     NP8SQOK                                             0162
*     END;                                                         0163
*                                                                  0163
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FOR SQA PARAMETER SCAN CHECK. SCAN PARAMETER FOR       */
*   /* DELIMITER (BLANK,COMMA,QUOTE). SCAN TILL FOUND OR LENGTH IS   */
*   /* GREATER THAN 3 CHARACTERS. PROCEED TO VALIDITY CHECK PARM     */
*   /* AFTER DELIMITER FOUND.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0164
*NP8SQALP:                                                         0164
*   PCT=MAXSQA;                     /* MAX NO OF DIGITS ALLOWED=3    */
@RF00155 DS    0H                                                  0164
NP8SQALP LA    PCT,3                                               0164
*   CALL NP8VNUM;                   /* SYNTAX CHECKING ROUTINE       */
         BAL   @14,NP8VNUM                                         0165
*   IF RCODE=0                      /* IF RETURN CODE=0 , SYNTAX OK  */
*     THEN                                                         0166
         LTR   RCODE,RCODE                                         0166
         BZ    @RT00166                                            0166
*     GO TO NP8SQOK;                /* GOTO GOOD CONTINUE            */
*   ELSE                                                           0168
*     GO TO NP8SQINV;               /* IF RETURN CODE=4, SYNTAX BAD  */
         B     NP8SQINV                                            0168
*   RFY                                                            0169
*     RSCAN UNRSTD;                                                0169
*                                                                  0169
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE IS ENTERED WHEN A SYNTAX ERROR FREE PARM IS FOUND.  */
*   /* THE SIZE AND LOW ADDR OF SQA IS DETERMINED AND STORED.        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0170
*NP8SQOK:                                                          0170
*   AREASZ=(VALUE*NP864K);          /* CALC. NEW SQA SIZE            */
NP8SQOK  L     @09,VALUE                                           0170
         SLA   @09,16                                              0170
         ST    @09,AREASZ                                          0170
*   LOWADDR=NVTLVIRT-AREASZ;        /* FIND LOW SQA ADDR             */
*                                                                  0171
         LCR   @09,@09                                             0171
         AL    @09,NVTLVIRT(,RNVT)                                 0171
         ST    @09,LOWADDR                                         0171
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPARE LOW SQA ADDRESS WITH HIGH NIP REGION ADDRESS. IF SQA  */
*   /* ADDRESS IS LOWER, THERE IS OVERLAP. ISSUE 'SPACE EXCEEDED'    */
*   /* MESSAGE AND ASK OPERATOR TO TO RESPECIFY SQA SIZE.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0172
*   IF LOWADDR<NVTVVPG1             /* LOW SQA < 1ST V=V PAGE ADDR   */
*     THEN                          /* IF SO, SPACE EXCEEDED         */
         C     @09,NVTVVPG1(,RNVT)                                 0172
         BL    @RT00172                                            0172
*     GOTO NP8SQAEX;                /* ISSUE MESSAGE                 */
*                                                                  0173
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A QUICKSTART HAS BEEN SPECIFIED, THEN THE OPERATOR IS      */
*   /* INFORMED IF THE SQA VALUE HE ENTERED, OR THE ONE THAT CAME    */
*   /* FROM SYS1.PARMLIB, IS NOT THE PREVIOUS IPL SQA SIZE REQUIRED  */
*   /* BY THE QUICKSTART PROCESS.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0174
*NP8SQUIK:                                                         0174
*   IF NVTFLQS='1'B THEN            /* IF SO - CHECK SQA SIZES     0174
*                                                            @ZA04106*/
NP8SQUIK TM    NVTFLQS(RNVT),B'00001000'                           0174
         BNO   @RF00174                                            0174
*     CALL NP8SQACS;                /* CHECK QS MSG                  */
*                                                                  0175
         BAL   @14,NP8SQACS                                        0175
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE IS ENTERED AFTER A VALID SQA PARAMETER HAS BEEN     */
*   /* SPECIFIED. NOW ALLOCATE AND INITIALIZE PAGE TABLES FOR THE NEW*/
*   /* SQA SEGMENTS AND RESET VSM CONTROL BLOCKS TO REFLECT THE SQA  */
*   /* EXPANSION. IF NUMBER OF ADDITIONAL SEGMENTS WAS 0, DO NOT     */
*   /* ALLOCATE AND NEW PAGE TABLES. NIP HAS ALREADY DONE IT FOR     */
*   /* THEIR 2 SEGMENTS.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0176
*NP8SQACH:                                                         0176
*   IF VALUE=0                      /* SPECIFIED AS ZERO ?           */
*     THEN                          /* IF SO, DONT ALLOCATE          */
@RF00174 DS    0H                                                  0176
NP8SQACH L     @09,VALUE                                           0176
         LTR   @09,@09                                             0176
         BZ    @RT00176                                            0176
*     GOTO NP8NSQAP;                /* EXIT FROM SUBROUTINE UPDATE 0177
*                                      TOTAL SQA SPACE IN GDA        */
*   SQASPLFT=SQASPLFT+(VALUE*NP864K);                              0178
         LR    @15,@09                                             0178
         SLA   @15,16                                              0178
         AL    @15,SQASPLFT(,GDAPTR)                               0178
         ST    @15,SQASPLFT(,GDAPTR)                               0178
*   SEGINDX=(NVTLVIRT/NP864K)-VALUE;                               0179
         L     @15,NVTLVIRT(,RNVT)                                 0179
         SRL   @15,16                                              0179
         SLR   @15,@09                                             0179
         ST    @15,SEGINDX                                         0179
*   DALUE=VALUE;                                                   0180
         ST    @09,DALUE                                           0180
*   SQABIT='1'B;                                                   0181
         OI    SQABIT,B'10000000'                                  0181
*   CALL BUILDPG;                   /* BUILD PAGE TABLES FOR SQA     */
         BAL   @14,BUILDPG                                         0182
*   SQABIT='0'B;                                                   0183
         NI    SQABIT,B'01111111'                                  0183
*   CALL NP8SQBLK;                  /* BUILD VSM CONTROL BLOCKS      */
*                                                                  0184
         BAL   @14,NP8SQBLK                                        0184
*   /*****************************************************************/
*   /*                                                               */
*   /* SQA EXIT ROUTINE ALL PATHS OF CODE FOR SQA MANIPULATION EXIT  */
*   /* THROUGH HERE EXCEPT IN THE CASE WHERE THERE IS NO MORE VIRUAL */
*   /* SPACE FOR SQA. THIS INDICATES A SEVERE SYSTEM PROBLEM SO NIP  */
*   /* ISSUES A DISABLED WAIT.                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0185
*NP8NSQAP:                                                         0185
*   NVTLVIRT=LOWADDR;               /* STORE LOW SQA ADDR IN NVT     */
NP8NSQAP L     @09,LOWADDR                                         0185
         ST    @09,NVTLVIRT(,RNVT)                                 0185
*   RETURN;                                                        0186
@EL00001 L     @13,4(,@13)                                         0186
@EF00001 DS    0H                                                  0186
@ER00001 LM    @14,@12,12(@13)                                     0186
         BR    @14                                                 0186
*   RFY                                                            0187
*    (RLIST,                                                       0187
*     RSCAN) RSTD;                                                 0187
*                                                                  0187
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUES MESSAGE : 'ONLY XXXK OF VIRTUAL SPACE AVAILABLE -      */
*   /* RESPECIFY OR CANCEL'                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0188
*NP8SQAEX:                                                         0188
*   ;                                                              0188
NP8SQAEX DS    0H                                                  0189
*   RWRK1=(NVTLVIRT-NVTVVPG1)/NP81K;                               0189
         L     @00,NVTLVIRT(,RNVT)                                 0189
         SL    @00,NVTVVPG1(,RNVT)                                 0189
         SRDA  @00,32                                              0189
         D     @00,@CF00111                                        0189
         LR    RWRK1,@01                                           0189
*   GENERATE REFS(RWRK1,DWRD,MSG6A);                               0190
         CVD   6,DWRD               CONVERT TO DECIMAL FORM BINARY
         UNPK  MSG6A(7),DWRD+4(4)   UNPK FOR EBCDIC
         OI    MSG6A+6,X'F0'        CORRECT LAST ZONE
*   MSG6B='VIRTUAL';                /* VIRTUAL TYPE OF STORAGE       */
         MVC   MSG6B(7),@CC01908                                   0191
*   MSG6C='SQA ';                                                  0192
         MVC   MSG6C(4),@CC01909                                   0192
*   RLIST=ADDR(NP8PLST1);           /* LOAD PARM LIST ADDR           */
         LA    RLIST,NP8PLST1                                      0193
*   RSCAN=ADDR(NP8RMSG1);           /* SET RSCAN TO REPLY            */
         LA    RSCAN,NP8RMSG1                                      0194
*   NWTORMSG=ADDR(MSG6);            /* SET MSG ADDR IN PLIST         */
*                                                                  0195
         LA    @07,MSG6                                            0195
         ST    @07,NWTORMSG(,RLIST)                                0195
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE VIA NIPWTOR                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*   GEN REFS(NVTWTOR,RNVT,NP8PLST1) SETS(RPARM,REXIT,RENTRY,NP8RMSG1)
*       (IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1) ;                     0196
         IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1
*   RFY                                                            0197
*     RLIST UNRSTD;                                                0197
*   GOTO NP8SQNEW;                  /* SYNTAX CHECK REPLY            */
         B     NP8SQNEW                                            0198
*   RFY                                                            0199
*     RSCAN UNRSTD;                                                0199
*BUILDPG:                                                          0200
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                             0200
*                                                                  0200
BUILDPG  DS    0H                                                  0201
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OF CODE IS ENTERED TO GETMAIN PAGE TABLE SPACE   */
*   /* FOR SQA AND CSA AREAS. THESE TABLES ARE THEN SENT TO IEAVCSEG */
*   /* TO INITIALIZE THEM.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0201
*   SAVEE=REXIT;                                                   0201
         ST    REXIT,SAVEE                                         0201
*   RESPECIFY                                                      0202
*    (REG0,                                                        0202
*     REG1) RSTD;                                                  0202
*   RFY                                                            0203
*    (REG13,                                                       0203
*     RWRK1) RSTD;                                                 0203
*   AREA13=REG13;                   /* SAVE SAVE AREA ADDRESS        */
         ST    REG13,AREA13                                        0204
*   REG13=0;                        /* INIT FOR GETMAIN              */
         SLR   REG13,REG13                                         0205
*   RWRK1=72;                       /* 72 BYTES FOR SAVE AREA FOR  0206
*                                      CSEG                          */
*                                                                  0206
         LA    RWRK1,72                                            0206
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SQA BIT ON, THEN GETMAIN FOR PAGE TABLES NOT INCLUDING     */
*   /* EXTERNAL PAGE TABLES                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0207
*   IF SQABIT='1'B THEN                                            0207
         TM    SQABIT,B'10000000'                                  0207
         BNO   @RF00207                                            0207
*     GMSIZE=DALUE*PAGELEN;                                        0208
         L     GMSIZE,DALUE                                        0208
         SLA   GMSIZE,5                                            0208
*   ELSE                                                           0209
*     DO;                                                          0209
*                                                                  0209
         B     @RC00207                                            0209
@RF00207 DS    0H                                                  0210
*       /*************************************************************/
*       /*                                                           */
*       /* SINCE PAGE TABLES CANNOT CROSS PAGE BOUNDARIES, DO        */
*       /* MULTIPLE GETMAINS TO ENSURE THIS. IF THE LENGTH IS EQUAL  */
*       /* TO OR LESS THAN 4096 BYTES, GETMAIN WILL HAVE AREA WITHIN */
*       /* A PAGE. PAGE TABLE SPACE FOR 17 SEGMENTS AND 72 BYTE SAVE */
*       /* AREA WILL FIT ON 1 PAGE.                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0210
*       IF DALUE>17                 /* GREATER THAN 17 SEGMENTS      */
*         THEN                                                     0210
         L     @09,DALUE                                           0210
         LA    @07,17                                              0210
         CR    @09,@07                                             0210
         BNH   @RF00210                                            0210
*         DO;                                                      0211
*           EXTRA=DALUE-17;                                        0212
         SLR   @09,@07                                             0212
         ST    @09,EXTRA                                           0212
*           DALUE=17;                                              0213
         ST    @07,DALUE                                           0213
*         END;                                                     0214
*                                                                  0214
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP CORRECT GETMAIN SIZE TO INCLUDE PAGE TABLES AND    */
*       /* SAVE AREA                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0215
*GETIT:                                                            0215
*       ;                                                          0215
@RF00210 DS    0H                                                  0215
GETIT    DS    0H                                                  0216
*       GMSIZE=DALUE*PAGELEN2;                                     0216
         L     GMSIZE,DALUE                                        0216
         MH    GMSIZE,@CH00120                                     0216
*     END;                                                         0217
*   RWRK1=RWRK1+GMSIZE;                                            0218
@RC00207 ALR   RWRK1,GMSIZE                                        0218
*   GENERATE REFS(RWRK1);                                          0219
*                                                                  0219
*                                   /* GENERATE UNCONDITIONL GETMAIN*/
         LA    0,245                   FROM SUBPOOL 245 SQA
         SLL   0,24                    PLACE IN HIGH ORDER BYTE
         AR    0,RWRK1                 INSERT TABLES LENGTH
         GETMAIN  R,LV=(0)             ISSUE GETMAIN
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SQA REQUEST, NO XPTE TABLES NEEDED                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0220
*   IF SQABIT='1'B                  /* IF SQA NO XPTE NEEDED         */
*     THEN                                                         0220
         TM    SQABIT,B'10000000'                                  0220
         BNO   @RF00220                                            0220
*     DO;                                                          0221
*       GENERATE;                                                  0222
         LA   0,64                 00000040  BIT ON INPLIES NO XPTES
         SLL  0,16                 00400000
*     END;                                                         0223
*   ELSE                                                           0224
*     REG0=0;                                                      0224
         B     @RC00220                                            0224
@RF00220 SLR   REG0,REG0                                           0224
*   GENERATE REFS(DALUE,SEGINDX);                                  0225
@RC00220 DS    0H                                                  0225
*                                      /* @ZA04808*/
         IC   0,DALUE+3            004000XX, WHERE XX IS NO. OF SEGS
         SLL  0,8                  4000XX00
         IC   0,SEGINDX+3          4000XXYY, WHERE YY IS SEG INDEX
*   RESPECIFY                                                      0226
*     REG9 RSTD;                                                   0226
*                                                                  0226
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REG13 = ZERO, THEN HAVE NOT GONE TO CREATE SEGMENT BEFORE  */
*   /* WITH SAVE AREA ADDRESS. IF REG13 DOES NOT = ZERO, THEN ADDR IN*/
*   /* REG13 IS VALID SAVE AREA DDRESSS.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0227
*   IF REG13=0 THEN                                                0227
         LTR   REG13,REG13                                         0227
         BNZ   @RF00227                                            0227
*     REG13=REG1+GMSIZE;                                           0228
         LR    REG13,REG1                                          0228
         ALR   REG13,GMSIZE                                        0228
*   PVTPTR=CVTPVTP;                 /* ADDR OF PVT IN CVT            */
@RF00227 L     PVTPTR,CVTPVTP(,CVTPTR)                             0229
*   CALL IEAVCSEG;                  /* CALL CREATE SEG ROUTINE INPUT
*                                      TO RSM ROUTINE IS: R0= BYTE 0,
*                                      BIT 1 = 1 MEANS NO XPTES    0230
*                                      CREATED BYTE 1 = 0 BYTE 2 = 0230
*                                      NUMBER OF SEGS BYTE 3 =     0230
*                                      BEGINNING INDEX OF SEGMENT  0230
*                                      ADDRESS R1= PAGE TABLE AREA 0230
*                                      R13= SAVE AREA ADRESS R14=  0230
*                                      RETURN ADDRESS R15= IEAVCSEG
*                                      ENTRY ADDR                    */
         L     @15,PVTPCSEG(,PVTPTR)                               0230
         BALR  @14,@15                                             0230
*   IF RCODE=0                      /* RC = 0, INIT OF TABLES OK     */
*     THEN                                                         0231
         SLR   @14,@14                                             0231
         CR    RCODE,@14                                           0231
         BNE   @RF00231                                            0231
*     DO;                                                          0232
*                                                                  0232
*       /*************************************************************/
*       /*                                                           */
*       /* IF SQA REQUEST, THEN CAN ONLY CREATE 1 PAGE OF PAGE TABLES*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0233
*       IF SQABIT='1'B THEN                                        0233
         TM    SQABIT,B'10000000'                                  0233
         BO    @RT00233                                            0233
*         GOTO FREIT;                                              0234
*                                                                  0234
*       /*************************************************************/
*       /*                                                           */
*       /* IF CSA REQUEST, CNA ONLY CREATE 17 SEGMENTS WORTH AT A    */
*       /* TIME                                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0235
*       IF EXTRA^=0 THEN                                           0235
         L     @07,EXTRA                                           0235
         CR    @07,@14                                             0235
         BE    @RF00235                                            0235
*         DO;                                                      0236
*           IF EXTRA>17 THEN                                       0237
         LA    @15,17                                              0237
         CR    @07,@15                                             0237
         BNH   @RF00237                                            0237
*             DO;                                                  0238
*               EXTRA=EXTRA-17;                                    0239
         SLR   @07,@15                                             0239
         ST    @07,EXTRA                                           0239
*               DALUE=17;                                          0240
         ST    @15,DALUE                                           0240
*             END;                                                 0241
*           ELSE                                                   0242
*             DO;                                                  0242
         B     @RC00237                                            0242
@RF00237 DS    0H                                                  0243
*               DALUE=EXTRA;                                       0243
         L     @07,EXTRA                                           0243
         ST    @07,DALUE                                           0243
*               EXTRA=0;            /* LAST TIME THROUGH             */
         SLR   @07,@07                                             0244
         ST    @07,EXTRA                                           0244
*             END;                                                 0245
*           SEGINDX=SEGINDX+17;                                    0246
@RC00237 LA    @07,17                                              0246
         AL    @07,SEGINDX                                         0246
         ST    @07,SEGINDX                                         0246
*           RWRK1=0;                                               0247
         SLR   RWRK1,RWRK1                                         0247
*           GOTO GETIT;             /* GO TO GETMAIN                 */
         B     GETIT                                               0248
*         END;                                                     0249
*                                                                  0249
*       /*************************************************************/
*       /*                                                           */
*       /* FREE SAVE AREA USED BY CREATE SEGMENT ROUTINE             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0250
*FREIT:                                                            0250
*       ;                                                          0250
@RF00235 DS    0H                                                  0250
FREIT    DS    0H                                                  0251
*       REG1=REG13;                 /* REG13 SAVE AREA ADDRESS       */
         LR    REG1,REG13                                          0251
*       GENERATE;                                                  0252
               FREEMAIN  R,LV=72,A=(1),SP=245
*       RESPECIFY                                                  0253
*         REG9 UNRSTD;                                             0253
*       RESPECIFY                                                  0254
*        (REG0,                                                    0254
*         REG1) UNRSTD;                                            0254
*     END;                                                         0255
*   ELSE                            /* INFORM OPERATOR OF SQA        */
*     DO;                           /* CREATION PROBLEM              */
*                                                                  0256
         B     @RC00231                                            0256
@RF00231 DS    0H                                                  0257
*       /*************************************************************/
*       /*                                                           */
*       /* UNABLE TO INIT. PAGE AND/OR SEGMENT TABLES FOR SQA OR CSA.*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0257
*W:                                                                0257
*       ;                                                          0257
W        DS    0H                                                  0258
*       GEN REFS(NVTWTO,RNVT,MSG4) SETS(RPARM,REXIT,RENTRY)        0258
*           (IEAPMNIP  TYPE=WTO,PARAM=MSG4) ;                      0258
         IEAPMNIP  TYPE=WTO,PARAM=MSG4
*       NVTFLWSC='3D'X;             /* 03D IS WAIT STATE CODE        */
         MVI   NVTFLWSC(RNVT),X'3D'                                0259
*       GEN REFS(NVTSWAIT)(IEAPMNIP  TYPE=SWAIT) ;/* SEVERE SYSTEM 0260
*                                      PROBLEM, SEND SYSTEM INTO   0260
*                                      DISABLED WAIT                 */
         IEAPMNIP  TYPE=SWAIT
*     END;                                                         0261
*   REG13=AREA13;                                                  0262
@RC00231 L     REG13,AREA13                                        0262
*   REXIT=SAVEE;                                                   0263
         L     REXIT,SAVEE                                         0263
*   RFY                                                            0264
*    (REG13,                                                       0264
*     RWRK1) UNRSTD;                                               0264
*   END BUILDPG;                                                   0265
@EL00002 DS    0H                                                  0265
@EF00002 DS    0H                                                  0265
@ER00002 BR    @14                                                 0265
*NP8SQACS:                                                         0266
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0266
*                                                                  0266
NP8SQACS DS    0H                                                  0267
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED TO COMPARE THE PREVIOUS SQA SIZE WITH */
*   /* THE REQUESTED ONE. IF THEY ARE THE SAME, WHICH THEY SHOULD BE */
*   /* IN A QUICKSTART SITUATION, THEN RETURN AND CONTINUE           */
*   /* PROCESSING. OTHERWISE, ISSUE A MESSAGE TO THE OPERATOR AND    */
*   /* INFORM HIM THAT THE SYSTEM IS ASSUMING THE SAME SQA SIZE AS   */
*   /* THE LAST IPL SIZE. AFTER THE WTOR, CONTROL IS RETURNED AND SQA*/
*   /* PROCESSING CONTINUES.                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0267
*   SAVEE=REXIT;                    /* SAVE RETURN ADDRESS           */
         ST    REXIT,SAVEE                                         0267
*   IF LOWADDR^=NVTLPAND            /* IF NEW SQA SIZE IS NOT EQUAL  */
*     THEN                          /* TO RECLAIMED SQA INFORM       */
         CLC   LOWADDR(4),NVTLPAND(RNVT)                           0268
         BE    @RF00268                                            0268
*     DO;                           /* OPERATOR OF DEFAULT AND GOON  */
*       RFY                                                        0270
*         RLIST RSTD;                                              0270
*                                                                  0270
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE MESSAGE : 'QUICKSTART REQUIRES PREVIOUS IPL SQA SIZE*/
*       /* - PREVIOUS SIZE USED.'                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0271
*       GEN REFS(NVTWTO)(IEAPMNIP TYPE=WTO,PARAM=MSG3) ;           0271
         IEAPMNIP TYPE=WTO,PARAM=MSG3
*       RFY                                                        0272
*         RLIST UNRSTD;                                            0272
*       LOWADDR=NVTLPAND;           /* CHANGE SQA LOW ADDR           */
         L     @09,NVTLPAND(,RNVT)                                 0273
         ST    @09,LOWADDR                                         0273
*       AREASZ=NVTLVIRT-NVTLPAND;                                  0274
*                                                                  0274
         LCR   @09,@09                                             0274
         AL    @09,NVTLVIRT(,RNVT)                                 0274
         ST    @09,AREASZ                                          0274
*       /*************************************************************/
*       /*                                                           */
*       /* CHANGE AREA SIZE FOR ADDNL SQA                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0275
*       VALUE=AREASZ/NP864K;                                       0275
*                                                                  0275
         SRL   @09,16                                              0275
         ST    @09,VALUE                                           0275
*       /*************************************************************/
*       /*                                                           */
*       /* CHANGE NO. OF ADDITIONAL SEGS                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0276
*     END;                                                         0276
*   REXIT=SAVEE;                    /* RESTORE RETURN ADDRESS        */
@RF00268 L     REXIT,SAVEE                                         0277
*   END NP8SQACS;                                                  0278
@EL00003 DS    0H                                                  0278
@EF00003 DS    0H                                                  0278
@ER00003 BR    @14                                                 0278
*NP8SQBLK:                                                         0279
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0279
*                                                                  0279
NP8SQBLK DS    0H                                                  0280
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET IN THE GDA THE DQE FOR SQA AND THE LOWEST FQE ON THE FQE*/
*   /* CHAIN AND RETURN TO THE MAINLINE. THESE CONTROL BLOCKS MUST BE*/
*   /* UPDATED TO REFLECT THE NEW AREA OBTAINED FOR SQA.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0280
*   RFY                                                            0280
*    (DQESEPTR,                                                    0280
*     FQESEPTR) RSTD;                                              0280
*   SAVEE=REXIT;                    /* SAVE RETURN ADDRESS           */
         ST    REXIT,SAVEE                                         0281
*   SPQESPTR=SQASPQEP;              /* INIT. SQA SPQE PTR            */
         L     SPQESPTR,SQASPQEP(,GDAPTR)                          0282
*   DQESEPTR=SPDQEAD;               /* LOAD SQA DQE ADDRESS          */
         L     DQESEPTR,SPDQEAD(,SPQESPTR)                         0283
*   DQEBLKAD=LOWADDR;               /* ALTER SQA BEGIN ADDRESS       */
         L     @09,LOWADDR                                         0284
         ST    @09,DQEBLKAD(,DQESEPTR)                             0284
*   DQELNTH=DQELNTH+AREASZ;         /* ALTER SQA LENGTH FIELD        */
         L     @09,DQELNTH(,DQESEPTR)                              0285
         AL    @09,AREASZ                                          0285
         ST    @09,DQELNTH(,DQESEPTR)                              0285
*   FQESEPTR=DQFQEPTR;              /* LOAD FQE ADDR - TOP OF CHAIN  */
*                                                                  0286
         L     FQESEPTR,DQFQEPTR(,DQESEPTR)                        0286
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH TO BOTTOM OF SQA FQE CHAIN. WHEN THE LOWEST FQE IS     */
*   /* FOUND, SET FQELNTH TO REFLECT SQA EXPANSION.                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0287
*NP8FQELP:                                                         0287
*   IF FQEPTR^=0                    /* THIS THE LOWEST FQE ?         */
*     THEN                          /* IF NOT, NOT AT BOTTOM         */
NP8FQELP L     @09,FQEPTR(,FQESEPTR)                               0287
         LTR   @09,@09                                             0287
         BZ    @RF00287                                            0287
*     DO;                           /* CONTINUE FQE LOOP             */
*       FQESEPTR=FQEPTR;            /* SET FQE BASE TO FORWARD PTR   */
         LR    FQESEPTR,@09                                        0289
*       GOTO NP8FQELP;              /* GO TO TOP OF LOOP             */
         B     NP8FQELP                                            0290
*     END;                                                         0291
*                                                                  0291
*   /*****************************************************************/
*   /*                                                               */
*   /* BOTTOM FQE FOUND - ALTER FOR SQA EXPANSION                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0292
*   FQELNTH=FQELNTH+AREASZ;                                        0292
@RF00287 L     @09,FQELNTH(,FQESEPTR)                              0292
         AL    @09,AREASZ                                          0292
         ST    @09,FQELNTH(,FQESEPTR)                              0292
*   REXIT=SAVEE;                    /* RESTORE RETURN ADDRESS        */
         L     REXIT,SAVEE                                         0293
*   RFY                                                            0294
*    (DQESEPTR,                                                    0294
*     FQESEPTR) UNRSTD;                                            0294
*   END NP8SQBLK;                                                  0295
@EL00004 DS    0H                                                  0295
@EF00004 DS    0H                                                  0295
@ER00004 BR    @14                                                 0295
*   RFY                                                            0296
*    (RLIST,                                                       0296
*     RSCAN) RSTD;                                                 0296
*                                                                  0296
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTERED WHENEVER AN INVALID SQA PARAMETER HAS BEEN            */
*   /* ENCOUNTERED. THE MESSAGE 'INVALID SQA PARM- RESPECIFY OR      */
*   /* CANCEL' IS ISSUED. IF REPLY IS EOB, REPLY IS ANALYZED AGAIN.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0297
*NP8SQINV:                                                         0297
*   RLIST=ADDR(NP8PLST1);           /* LOAD PARM LIST ADDRESS        */
NP8SQINV LA    RLIST,NP8PLST1                                      0297
*   RSCAN=ADDR(NP8RMSG1);           /* SET SCAN POINTER TO REPLY     */
         LA    RSCAN,NP8RMSG1                                      0298
*   MSG1A='SQA   ';                 /* SET PARM TO 'SQA'             */
         MVC   MSG1A(6),@CC01930                                   0299
*   NWTORMSG=ADDR(MSG1);            /* SET MSG ADDR IN PARM LIST     */
*                                                                  0300
         LA    @07,MSG1                                            0300
         ST    @07,NWTORMSG(,RLIST)                                0300
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE: 'INVALID SQA PARM - - RESPECIFY OR CANCEL'     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0301
*   GEN REFS(NVTWTOR,RNVT,NP8PLST1) SETS(RPARM,REXIT,RENTRY,NP8RMSG1)
*       (IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1) ;                     0301
         IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1
*   RFY                                                            0302
*     RLIST UNRSTD;                                                0302
*                                                                  0302
*   /*****************************************************************/
*   /*                                                               */
*   /* ANALYZE REPLY - IF EOB, SUPPLY DEFAULT AND CONTINUE. IF NOT   */
*   /* EOB, BRANCH TO NP4SQNEW TO PROCESS REPLY AGAIN. DEFAULT IS    */
*   /* TAKEN AND PROCESSING CONTINUES. IF NOT,                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0303
*NP8SQNEW:                                                         0303
*   IF S2CHAR=' '''                 /* REPLY = EOB ?                 */
*     THEN                                                         0303
NP8SQNEW CLC   S2CHAR(2,RSCAN),@CC01931                            0303
         BNE   @RF00303                                            0303
*     DO;                                                          0304
*       VALUE=SQADFLT;              /* SUPPLY DEFAULT                */
         MVC   VALUE(4),@CF00062                                   0305
*       GOTO NP8SQOK;               /* CONTINUE PROCESSING           */
         B     NP8SQOK                                             0306
*     END;                                                         0307
*                                                                  0307
*   /*****************************************************************/
*   /*                                                               */
*   /* ANALYZE RESPECIFIED REPLY. REPLY MUST BEGIN WITH 'SQA=' IF IT */
*   /* DOES, GO TO SYNTAX CHECKER FOR PARM VALUE. OTHERWISE, ASK     */
*   /* OPERATOR TO RESPECIFY SQA REPLY.                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0308
*   IF S4CHAR^='SQA='               /* KEYWORD = 'SQA=' ?            */
*     THEN                          /* IF NOT, THEN REPLY NOT VALID  */
@RF00303 CLC   S4CHAR(4,RSCAN),@CC01933                            0308
         BNE   @RT00308                                            0308
*     GOTO NP8SQINV;                /* ISSUE INVALID PARM MESSAGE    */
*   RSCAN=RSCAN+LENGTH('SQA=');     /* POINT PAST KEYWORD            */
         AL    RSCAN,@CF00059                                      0310
*   PCT=MAXSQA;                     /* MAXIMUM ALLOWED DIGITS = 3    */
         LA    PCT,3                                               0311
*   CALL NP8VNUM;                   /* SYNTAX ROUTINE                */
         BAL   @14,NP8VNUM                                         0312
*   IF RCODE=0                      /* IF RETURN CODE=0,THEN SYNTAX
*                                      OK                            */
*     THEN                                                         0313
         LTR   RCODE,RCODE                                         0313
         BZ    @RT00313                                            0313
*     GO TO NP8SQOK;                /* GOTO GOOD CONTINUE            */
*   ELSE                                                           0315
*     GO TO NP8SQINV;               /* IF RETRN CODE=4,THEN SYNTX BAD*/
         B     NP8SQINV                                            0315
*   RFY                                                            0316
*     RSCAN UNRSTD;                                                0316
*IEAVNPB8:                                                         0317
*   ENTRY;                                                         0317
*                                                                  0317
@EP00317 DS    0H                                                  0318
*   /*****************************************************************/
*   /*                                                               */
*   /* THE CSA PARM VALUE SPECIFIES THE SIZE OF THE COMMON STORAGE   */
*   /* AREA IN 1K BLOCKS. A MAXIMUM OF 4 DIGITS IS VALID. CSA IS     */
*   /* LOCATED RIGHT BELOW LPA. ITS HIGH ADDR IS ON A (4K -1 BDRY)   */
*   /* AND ITS LOW ADDR IS ON A SEGMENT BOUNDARY. IF A CSA VALUE IS  */
*   /* NOT SPECIFIED, THE SYSTEM SUPPLIES A DEFAULT OF 100K.         */
*   /* PAGE,PAGE EXTENSION, AND SEGMENT TABLES MUST NOT BE ALLOCATED */
*   /* AND INITIALIZED FOR THIS AREA SINCE NIP PROCESSING HAS ALREADY*/
*   /* CREATED THEM. VSM CONTROL BLOCKS LOCATED IN GDA ARE           */
*   /* INITIALIZED I.E. PQE AND FBQE.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0318
*   RFY                                                            0318
*     RSCAN RSTD;                                                  0318
*   GDAPTR=CVTGDA;                                                 0319
         L     GDAPTR,CVTGDA(,CVTPTR)                              0319
*   RPTAB=NVTPTAB;                  /* LOAD PARM TABLE ADDRESS       */
         L     RPTAB,NVTPTAB(,RNVT)                                0320
*   RSCAN=CSA;                      /* LOAD CSA PARM ADDRESS         */
*                                                                  0321
         L     RSCAN,CSA(,RPTAB)                                   0321
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE CSA PARM IS ZERO, THEN GIVE USER DEFAULT OF 100 IF PARM*/
*   /* ADDR IS NOT 0, THEN SYNTAX CHECK THE PARAMETER                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*   IF RSCAN=0                      /* IF 0, NO CSA PARM SPECIFIED   */
*     THEN                                                         0322
         LTR   RSCAN,RSCAN                                         0322
         BNZ   @RF00322                                            0322
*     VALUE=CSADFLT;                /* DEFAULT TO 100K AREA FOR CSA  */
         MVC   VALUE(4),@CF00123                                   0323
*   ELSE                                                           0324
*     DO;                           /* SYNTAX CHECK CSA PARM FOR 4   */
         B     @RC00322                                            0324
@RF00322 DS    0H                                                  0325
*       RFY                                                        0325
*         RSCAN UNRSTD;                                            0325
*       PCT=MAXCSA;                 /* SET UP INPUT PARMS TO CALL  0326
*                                      SYNTAX CHECKER                */
         LA    PCT,4                                               0326
*       CALL NP8VNUM;               /* IF SYNTAX IS CORRECT, RETURN
*                                      CODE = 0. IF INVALID, RC = 4  */
         BAL   @14,NP8VNUM                                         0327
*       IF RCODE=0                  /* SYNTAX OK, IF R.C. = 0        */
*         THEN                                                     0328
         LTR   RCODE,RCODE                                         0328
         BZ    @RT00328                                            0328
*         GO TO NP8CSAOK;           /* GOTO GGOD CSA                 */
*       ELSE                                                       0330
*         GO TO NP8CSINV;           /* GO TO INVALID CSA             */
         B     NP8CSINV                                            0330
*       RFY                                                        0331
*         RSCAN UNRSTD;                                            0331
*     END;                                                         0332
*                                                                  0332
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LOW ADDR OF LPA NOT ON PAGE BDRY(4K),THEN ROUND DOWN AND   */
*   /* SET HIGH CSA ADDR ON NEXT LOWEST 4K BOUNDARY.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0333
*NP8CSAOK:                                                         0333
*   IF(NVTLVIRT//NP84K)^=0          /* NVTLVIRT MULTIPLE OF 4K ?     */
*     THEN                                                         0333
@RC00322 DS    0H                                                  0333
NP8CSAOK L     @09,NVTLVIRT(,RNVT)                                 0333
         LR    @00,@09                                             0333
         SRDA  @00,32                                              0333
         D     @00,@CF00113                                        0333
         LTR   @00,@00                                             0333
         BZ    @RF00333                                            0333
*     HIADDR=NVTLVIRT-(NVTLVIRT//NP84K);                           0334
         LR    @00,@09                                             0334
         SRDA  @00,32                                              0334
         D     @00,@CF00113                                        0334
         SLR   @09,@00                                             0334
         LR    HIADDR,@09                                          0334
*   ELSE                            /* IF LPA ON 4K BDRY, HIGH       */
*     HIADDR=NVTLVIRT;              /* CSA ADDR IS LPA ADDR MINUS 1  */
*                                                                  0335
         B     @RC00333                                            0335
@RF00333 L     HIADDR,NVTLVIRT(,RNVT)                              0335
*   /*****************************************************************/
*   /*                                                               */
*   /* IF TOP OF CSA WOULD BE BETWEEN 0 AND 8 MEGS, DO NOT ALLOW     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0336
*   IF HIADDR<=NVTVVPG1 THEN                                       0336
@RC00333 L     @09,NVTVVPG1(,RNVT)                                 0336
         CR    HIADDR,@09                                          0336
         BNH   @RT00336                                            0336
*     GOTO W;                       /* LOW CSA ADDR IS FOUND BY      */
*   VALUE=VALUE*NP81K;              /* VALUE IN BYTES                */
*                                                                  0338
         L     @05,VALUE                                           0338
         SLA   @05,10                                              0338
         ST    @05,VALUE                                           0338
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUESTED SIZE IS GREATER THAN 8 MEGS, DONOT ALLOW         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0339
*   IF VALUE>=NVTVVPG1 THEN                                        0339
         CR    @05,@09                                             0339
         BL    @RF00339                                            0339
*     CALL NP8COLAP;                                               0340
         BAL   @14,NP8COLAP                                        0340
*   LOWADDR=HIADDR-VALUE;           /* SUBTRACTING SIZE OF CSA FROM
*                                      HIGH ADDR.                    */
*                                                                  0341
@RF00339 LR    @09,HIADDR                                          0341
         SL    @09,VALUE                                           0341
         ST    @09,LOWADDR                                         0341
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LOW ADDR NOT ON 64K BOUNDARY, THEN ROUND DOWN TO NEAREST   */
*   /* 64K MULTIPLE.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0342
*   IF(LOWADDR//NP864K)^=0          /* LOW CSA ADDR ON SEG. BDRY ?   */
*     THEN                                                         0342
         LR    @00,@09                                             0342
         SRDA  @00,32                                              0342
         D     @00,@CF00109                                        0342
         LTR   @00,@00                                             0342
         BZ    @RF00342                                            0342
*     DO;                                                          0343
*       LOWADDR=(LOWADDR/NP864K)*NP864K;                           0344
         SRL   @09,16                                              0344
         SLA   @09,16                                              0344
         ST    @09,LOWADDR                                         0344
*       VALUE=HIADDR-LOWADDR;                                      0345
         LCR   @09,@09                                             0345
         ALR   @09,HIADDR                                          0345
         ST    @09,VALUE                                           0345
*     END;                                                         0346
*                                                                  0346
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPARE LOWCSA ADDRESS TO FIRST PAGE ADDR OF V=V AREA IF CSA  */
*   /* CANNOT BE CONTAINED IN V=V REGION, INFORM OP AND ASK HIM TO   */
*   /* RESPECIFY CSA SIZE.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0347
*   IF LOWADDR<NVTVVPG1             /* LOWCSA OUT OF V=V AREA ?      */
*     THEN                                                         0347
@RF00342 CLC   LOWADDR(4),NVTVVPG1(RNVT)                           0347
         BNL   @RF00347                                            0347
*     CALL NP8COLAP;                /* ASK OPERATOR TO RESPECIFY     */
         BAL   @14,NP8COLAP                                        0348
*   SEGINDX=LOWADDR/NP864K;         /* SEGINDX =FIRST SEGMENT INDEX  */
@RF00347 L     @09,LOWADDR                                         0349
         SRL   @09,16                                              0349
         ST    @09,SEGINDX                                         0349
*   DALUE=VALUE/NP864K;             /* NEED TO BE NUMBER OF SEGS     */
*                                                                  0350
         L     @09,VALUE                                           0350
         SRL   @09,16                                              0350
         ST    @09,DALUE                                           0350
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SEGMENTS TO CREATE, CONTINUE                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0351
*   IF DALUE=0 THEN                                                0351
         LTR   @09,@09                                             0351
         BZ    @RT00351                                            0351
*     GOTO NC;                                                     0352
*   PVTPTR=CVTPVTP;                                                0353
         L     PVTPTR,CVTPVTP(,CVTPTR)                             0353
*   CSABIT='1'B;                                                   0354
         OI    CSABIT,B'10000000'                                  0354
*   CALL BUILDPG;                   /* BUILD PAGE TABLES FOR CSA     */
         BAL   @14,BUILDPG                                         0355
*   CSABIT='0'B;                                                   0356
*                                                                  0356
         NI    CSABIT,B'01111111'                                  0356
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD VSM CONTROL BLOCKS TO DESCRIBE CSA                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0357
*NC:                                                               0357
*   CALL NP8CSBLK;                                                 0357
NC       BAL   @14,NP8CSBLK                                        0357
*   NVTLVIRT=LOWADDR;               /* CURRENT LOW VIRTUAL ADDR USED */
         L     @09,LOWADDR                                         0358
         ST    @09,NVTLVIRT(,RNVT)                                 0358
*   CVTSHRVM=LOWADDR;               /* LOWEST SHARED VIRT ADDR       */
         ST    @09,CVTSHRVM(,CVTPTR)                               0359
*   RFY                                                            0360
*     PVTPTR RSTD;                                                 0360
*   PVTPTR=CVTPVTP;                 /* GET PVT ADDR FROM CVT         */
         L     PVTPTR,CVTPVTP(,CVTPTR)                             0361
*   PVTLCSA=LOWADDR/NP84K;          /* SHIFT SSP DOWN                */
         SRL   @09,12                                              0362
         STH   @09,PVTLCSA(,PVTPTR)                                0362
*   PVTLCSA=PVTLCSA*16;             /* PAD WITH 1 BYTE ZER0          */
         SLA   @09,4                                               0363
         STH   @09,PVTLCSA(,PVTPTR)                                0363
*   RFY                                                            0364
*     PVTPTR UNRSTD;                                               0364
*   RETURN;                                                        0365
         B     @EL00001                                            0365
*NP8CSBLK:                                                         0366
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0366
*                                                                  0366
NP8CSBLK DS    0H                                                  0367
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE PQE AND FBQE FOR CSA. THESE CONTROL BLKS ARE   */
*   /* FOUND IN GDA. DISABLE SYSTEM TO SET UP VSM CONTROL BLOCKS     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0367
*   RFY                                                            0367
*    (PQESEPTR,                                                    0367
*     FBQESPTR) RSTD;                                              0367
*   SAVEE=REXIT;                    /* SAVE RETURN ADDRESS           */
         ST    REXIT,SAVEE                                         0368
*   PQESEPTR=CSAPQEP;               /* PQE POINTER                   */
         L     PQESEPTR,CSAPQEP(,GDAPTR)                           0369
*   FBQESPTR=PQEFFBQE;              /* GET FBQE PTR FORM PQE         */
         L     FBQESPTR,PQEFFBQE(,PQESEPTR)                        0370
*   PQESIZE=VALUE;                  /* CSA SIZE IN BYTES             */
         L     @09,VALUE                                           0371
         ST    @09,PQESIZE(,PQESEPTR)                              0371
*   SQASPLFT=VALUE+SQASPLFT;        /* CSA MAY BE USED FOR SQA       */
         LR    @06,@09                                             0372
         AL    @06,SQASPLFT(,GDAPTR)                               0372
         ST    @06,SQASPLFT(,GDAPTR)                               0372
*   PQEREGN=LOWADDR;                /* ADDR OF FIRST BYTE OF REGION  */
         L     @06,LOWADDR                                         0373
         ST    @06,PQEREGN(,PQESEPTR)                              0373
*   FWDPTR=ADDR(PQESECT);           /* PTR TO NEXT FBQE OR PQE IN  0374
*                                      THIS CASE ADDR(PQE)           */
         ST    PQESEPTR,FWDPTR(,FBQESPTR)                          0374
*   BCKPTR=ADDR(PQESECT);           /* PTR TO PREVIOUS FBQE OR PQE IN
*                                      THIS CASE ADDR(PQE)           */
         ST    PQESEPTR,BCKPTR(,FBQESPTR)                          0375
*   SIZE=VALUE;                     /* SIZE IN BYTES OF WHOLE CSA    */
         ST    @09,SIZE(,FBQESPTR)                                 0376
*   FBQAREA=LOWADDR;                /* LOW ADDR OF FREE BLOCK AFTER
*                                      CONROL BLOCKS SET UP          */
         ST    @06,FBQAREA(,FBQESPTR)                              0377
*   REXIT=SAVEE;                    /* RESTORE RETURN ADDRESS        */
         L     @09,SAVEE                                           0378
         LR    REXIT,@09                                           0378
*   END NP8CSBLK;                                                  0379
@EL00005 DS    0H                                                  0379
@EF00005 DS    0H                                                  0379
@ER00005 BR    @14                                                 0379
*   RFY                                                            0380
*    (PQESEPTR,                                                    0380
*     FBQESPTR) UNRSTD;                                            0380
*NP8COLAP:                                                         0381
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0381
NP8COLAP DS    0H                                                  0382
*   RFY                                                            0382
*    (RLIST,                                                       0382
*     RSCAN) RSTD;                                                 0382
*                                                                  0382
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED WHEN ALLOCATION FOR CSA RUNS OUT OF   */
*   /* V=V SPACE.. A MESSAGE IS ISSUED TO OPERATOR INFORMING HIM AND */
*   /* ASKING HIM TO RESPECIFY CSA AGAIN.                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0383
*   RWRK1=(NVTLVIRT-NVTVVPG1)/NP81K;                               0383
         L     @00,NVTLVIRT(,RNVT)                                 0383
         SL    @00,NVTVVPG1(,RNVT)                                 0383
         SRDA  @00,32                                              0383
         D     @00,@CF00111                                        0383
         LR    RWRK1,@01                                           0383
*   GENERATE SETS(MSG6A) REFS(RWRK1,DWRD);                         0384
         CVD    6,DWRD              CONVERT TO DECIMAL FROM BINARY
         UNPK   MSG6A(7),DWRD+4(4) UNPACK FOR ZONE EBCDIC
         OI     MSG6A+6,X'F0'       CORRECT LAST ZONE NUMBER
*   RLIST=ADDR(NP8PLST1);           /* LOAD PARM LIST ADDR           */
         LA    RLIST,NP8PLST1                                      0385
*   MSG6B='VIRTUAL';                /* VIRTUAL TYPE OF STORAGE       */
         MVC   MSG6B(7),@CC01908                                   0386
*   MSG6C='CSA ';                                                  0387
*                                                                  0387
         MVC   MSG6C(4),@CC01951                                   0387
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE ONLY XXXK OF VIRTUAL STORAGE AVAILABLE -        */
*   /* RESPECIFY OR CANCEL                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0388
*   RSCAN=ADDR(NP8RMSG1);           /* SET RSCAN TO REPLY            */
         LA    RSCAN,NP8RMSG1                                      0388
*   NWTORMSG=ADDR(MSG6);            /* SET MSG ADDR IN PLIST         */
*                                                                  0389
         LA    @07,MSG6                                            0389
         ST    @07,NWTORMSG(,RLIST)                                0389
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE VIA NIPWTOR                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0390
*   GEN REFS(NVTWTOR,RNVT,NP8PLST1) SETS(RPARM,REXIT,RENTRY,NP8RMSG1)
*       (IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1) ;                     0390
         IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1
*   GOTO NP8CSNEW;                  /* SYNTAX CHECK NEW PARM         */
         B     NP8CSNEW                                            0391
*   RFY                                                            0392
*     RLIST UNRSTD;                                                0392
*   RFY                                                            0393
*     RSCAN UNRSTD;                                                0393
*   END NP8COLAP;                                                  0394
*   RFY                                                            0395
*    (RLIST,                                                       0395
*     RSCAN) RSTD;                                                 0395
*                                                                  0395
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTERED WHENEVER AN INVALID CSA PARAMETER HAS BEEN            */
*   /* ENCOUNTERED. THE MESSAGE 'INVALID CSA PARM - RESPECIFY OR     */
*   /* CANCEL ' IS ISSUED. IF REPLY IS EOB, DEFAULT IS SUPPLIED      */
*   /* (100K). IF NOT, REPLY IS ANALYZED AGAIN.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0396
*NP8CSINV:                                                         0396
*   RLIST=ADDR(NP8PLST1);           /* LOAD PARM LIST ADDRESS        */
NP8CSINV LA    RLIST,NP8PLST1                                      0396
*   RSCAN=ADDR(NP8RMSG1);           /* SET SCAN POINTER TO REPLY     */
         LA    RSCAN,NP8RMSG1                                      0397
*   MSG1A='CSA   ';                 /* SET PARM TO 'CSA'             */
         MVC   MSG1A(6),@CC01954                                   0398
*   NWTORMSG=ADDR(MSG1);            /* SET MSG ADDR IN PARM LIST     */
*                                                                  0399
         LA    @07,MSG1                                            0399
         ST    @07,NWTORMSG(,RLIST)                                0399
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE: 'INVALID CSA PARM - - RESPECIFY OR CANCEL'     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0400
*   GEN REFS(NVTWTOR,RNVT,NP8PLST1) SETS(RPARM,REXIT,RENTRY,NP8RMSG1)
*       (IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1) ;                     0400
         IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1
*   RFY                                                            0401
*     RLIST UNRSTD;                                                0401
*                                                                  0401
*   /*****************************************************************/
*   /*                                                               */
*   /* ANALYZE REPLY. IF EOB, SUPPLY DEFAULT SIZE OF 100K AND        */
*   /* CONTINUE. OTHERWISE SYNTAX CHECK NEW REPLY PARM.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0402
*NP8CSNEW:                                                         0402
*   IF S2CHAR=' '''                 /* REPLY = EOB ?                 */
*     THEN                                                         0402
NP8CSNEW CLC   S2CHAR(2,RSCAN),@CC01931                            0402
         BNE   @RF00402                                            0402
*     DO;                                                          0403
*       VALUE=CSADFLT;              /* SUPPLY DEFAULT PARAMETER      */
         MVC   VALUE(4),@CF00123                                   0404
*       GOTO NP8CSAOK;              /* CONTINUE PROCESSING PARM      */
         B     NP8CSAOK                                            0405
*     END;                                                         0406
*                                                                  0406
*   /*****************************************************************/
*   /*                                                               */
*   /* THE OPERATOR MUST REPLY WITH 'CSA=' AS FIRST 4 CHAR. IF HE    */
*   /* DOES, CONTINUE TO SYNTAX CHECK PARM. OTHERWISE, REISSUE       */
*   /* MESSAGE FOR HIM TO REPLY, IE.GIVE HIM ANOTHER CHANCE.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0407
*   IF S4CHAR^='CSA='               /* KEYWORD = 'CSA=' ?            */
*     THEN                                                         0407
@RF00402 CLC   S4CHAR(4,RSCAN),@CC01956                            0407
         BNE   @RT00407                                            0407
*     GOTO NP8CSINV;                /* ISSUE INVALID PARM MESSAGE    */
*   RSCAN=RSCAN+LENGTH('CSA=');     /* POINT PAST KEYWORD            */
         LA    @09,4                                               0409
         ALR   RSCAN,@09                                           0409
*   PCT=MAXCSA;                     /* MAXCSA DIGITS ALLOWED =4      */
         LR    PCT,@09                                             0410
*   CALL NP8VNUM;                   /* CALL SYNTAX ROUTINE           */
         BAL   @14,NP8VNUM                                         0411
*   IF RCODE=0                      /* R.C. = 0, THEN SYNTAX OK      */
*     THEN                                                         0412
         LTR   RCODE,RCODE                                         0412
         BZ    @RT00412                                            0412
*     GO TO NP8CSAOK;               /* GOTO GOOD CSA                 */
*   ELSE                                                           0414
*     GO TO NP8CSINV;               /* GO TO INVALID CSA             */
         B     NP8CSINV                                            0414
*   RFY                                                            0415
*     RSCAN UNRSTD;                                                0415
*IEAVNPC8:                                                         0416
*   ENTRY;                                                         0416
*                                                                  0416
@EP00416 DS    0H                                                  0417
*   /*****************************************************************/
*   /*                                                               */
*   /* THE REAL AND VRREGN PARMS WILL BE ANALYZED IN THIS ROUTINE.   */
*   /* THE REAL PARM IS A 4 OR LESS DIGIT NUMBER SPECIFYING THE SIZE */
*   /* OF THE V=R REGION IN 1K BLOCKS. THE LOW ADDR IS ON A SEGMENT  */
*   /* BOUNDARY. THE HIGH ADDRESS IS ROUNDED TO A PAGE BDRY. THE     */
*   /* VRREGN PARM IS A 4 OR LESS DIGIT NUMBER SPECIFYING THE DEFAULT*/
*   /* V=R REGION SIZE SUPPLIED TO JOBS RUNNING IN THE V=R REGION    */
*   /* WITH NO SIZE PARM SPECIFIED. IF VRREGN=0, THEN NO JOB WITHOUT */
*   /* A SIZE PARM WILL BE ALLOWED TO EXECUTE. THIS DEFAULT VALUE IS */
*   /* STORED IN THE GDA. THE PQE AND FBQE IN GDA ARE SET UP FOR THE */
*   /* V=R REGION AND THE PAGE FIX TABLE IS INITIALIZED. THE SYSTEM  */
*   /* DEFAULT FOR REAL PARM IS 76K.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0417
*   RFY                                                            0417
*     RSCAN RSTD;                                                  0417
*   GDAPTR=CVTGDA;                                                 0418
         L     GDAPTR,CVTGDA(,CVTPTR)                              0418
*   RPTAB=NVTPTAB;                  /* GET PARM TABLE ADDR           */
         L     RPTAB,NVTPTAB(,RNVT)                                0419
*   RSCAN=VRREGN;                   /* LOAD PARAMETER ADDRESS        */
*                                                                  0420
         L     RSCAN,VRREGN(,RPTAB)                                0420
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RSCAN = 0 THEN SUPPLY SYSTEM DEFAULT VALUE OF 64K.         */
*   /* OTHERWISE, SYNTAX CHECK USER SUPPLIED PARAMETER.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0421
*   IF RSCAN=0 THEN                                                0421
         LTR   RSCAN,RSCAN                                         0421
         BNZ   @RF00421                                            0421
*     DO;                                                          0422
*       VALUE=VRDFLT;               /* SUPPLY DEFAULT OF 64 K        */
         MVC   VALUE(4),@CF00125                                   0423
*       GOTO NP8VROK;               /* CONTINUE PROCESSING VRREGN    */
         B     NP8VROK                                             0424
*     END;                                                         0425
*   PCT=MAXREAL;                    /* MAXIMUM NO. OF DIGITS ALLOWED */
@RF00421 LA    PCT,4                                               0426
*   CALL NP8VNUM;                   /* SYNTAX CHECKER                */
         BAL   @14,NP8VNUM                                         0427
*   IF RCODE=0                      /* R.C.= 0, THEN SYNTAX OK       */
*     THEN                                                         0428
         LTR   RCODE,RCODE                                         0428
         BZ    @RT00428                                            0428
*     GO TO NP8VROK;                /* GO TO OK VR PROCESS           */
*   ELSE                                                           0430
*     GO TO NP8VRINV;               /* GOTO INVALID VR PROCESS       */
         B     NP8VRINV                                            0430
*NP8VROK:                                                          0431
*   VRDREG=VALUE*NP81K;             /* STORE PARM IN GDA. JOBS W/O 0431
*                                      REGION SIZE SPECIFIED AND   0431
*                                      REQUIRING REAL CORE WILL GET
*                                      THIS DEFAULT VALUE SIZE       */
*                                                                  0431
NP8VROK  L     @09,VALUE                                           0431
         SLA   @09,10                                              0431
         ST    @09,VRDREG(,GDAPTR)                                 0431
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW PROCESS THE REAL PARAMETER VALUE WHICH SPECIFIES THE SIZE */
*   /* OF CORE FOR THE V=R REGION. IT HAS A LOW ADDRESS ON PAGE      */
*   /* BOUNDARY AND A HIGH ADDRESS ON A PAGE (4K) BOUNDARY.          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0432
*   RSCAN=REAL;                     /* LOAD THE REAL PARM ADDRESS    */
*                                                                  0432
         L     RSCAN,REAL(,RPTAB)                                  0432
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO PARM WAS SUPPLIED, VALUE DEFAULTS TO 76K REAL REGION.   */
*   /* OTHERWISE, IF PARM WAS SUPPLIED, SYNTAX CHECK THE PARM FOR 4  */
*   /* OR LESS DIGITS.                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0433
*   IF RSCAN=0 THEN                                                0433
         LTR   RSCAN,RSCAN                                         0433
         BNZ   @RF00433                                            0433
*     VALUE=RLDFLT;                 /* MINIMUM REAL REGION SIZE      */
         MVC   VALUE(4),@CF00127                                   0434
*   ELSE                                                           0435
*     DO;                                                          0435
         B     @RC00433                                            0435
@RF00433 DS    0H                                                  0436
*       PCT=MAXREAL;                /* MAXIMUM NO. OF DIGITS ALLOWED */
         LA    PCT,4                                               0436
*       CALL NP8VNUM;               /* SYNTAX CHECKER                */
         BAL   @14,NP8VNUM                                         0437
*       IF RCODE=0                  /* IF R.C. = 0, THEN SYNTAX OK   */
*         THEN                                                     0438
         LTR   RCODE,RCODE                                         0438
         BZ    @RT00438                                            0438
*         GO TO NP8RLOK;            /* GOTO REAL OK PARM             */
*       ELSE                                                       0440
*         GO TO NP8RLINV;           /* GOTO INVALID REAL PARM        */
         B     NP8RLINV                                            0440
*       RFY                                                        0441
*         RSCAN UNRSTD;                                            0441
*     END;                                                         0442
*                                                                  0442
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTER THIS CODE IF THE PARM IS VALID                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0443
*NP8RLOK:                                                          0443
*   VALUE=VALUE*NP81K;              /* CONVERT TO BYTES              */
*                                                                  0443
@RC00433 DS    0H                                                  0443
NP8RLOK  L     @09,VALUE                                           0443
         SLA   @09,10                                              0443
         ST    @09,VALUE                                           0443
*   /*****************************************************************/
*   /*                                                               */
*   /* IF VALUE IS NOT A MULTIPLE OF 4K THEN ROUND UP. THIS IS NEEDED*/
*   /* SO A REAL PAGE(4K) WILL NOT BE PARTLY REAL AND PARTLY VIRTUAL.*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0444
*   IF VALUE//NP84K^=0              /* IS AREA SIZE A MULTIPLE OF 4K */
*     THEN                                                         0444
         LR    @00,@09                                             0444
         SRDA  @00,32                                              0444
         D     @00,@CF00113                                        0444
         LTR   @00,@00                                             0444
         BZ    @RF00444                                            0444
*     VALUE=((VALUE/NP84K)*NP84K)+NP84K;                           0445
*                                                                  0445
         SRL   @09,12                                              0445
         SLA   @09,12                                              0445
         AL    @09,@CF00113                                        0445
         ST    @09,VALUE                                           0445
*   /*****************************************************************/
*   /*                                                               */
*   /* ADD IN THE SIZE OF RCT REGION                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0446
*   HIADDR=NVTVRREG+(4096*4)+VALUE;                                0446
*                                                                  0446
@RF00444 L     @09,VALUE                                           0446
         L     @15,NVTVRREG(,RNVT)                                 0446
         L     HIADDR,@CF01997                                     0446
         ALR   HIADDR,@15                                          0446
         ALR   HIADDR,@09                                          0446
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REAL CORE AVAILABLE IS GREATER THEN OR EQUAL TO THE AMOUNT */
*   /* SPECIFIED, THEN INIT. CVT AND PVT AREAS FOR REAL              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0447
*   IF NVTVRLNG=>(VALUE/NP84K)+4 THEN                              0447
         SRL   @09,12                                              0447
         AL    @09,@CF00059                                        0447
         C     @09,NVTVRLNG(,RNVT)                                 0447
         BH    @RF00447                                            0447
*     DO;                           /* CHECK FOR ENOUGH SPACE        */
*                                                                  0448
*       /*************************************************************/
*       /*                                                           */
*       /* FOR RCT AND V=R REGION                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0449
*       NVTREALR=HIADDR;            /* SET HIGH REAL ADDR IN CVT AND
*                                      INITIALIZE IN PVT THE LAST  0449
*                                      PAGE INDEX OF REAL REGN       */
         ST    HIADDR,NVTREALR(,RNVT)                              0449
*       RFY                                                        0450
*         PVTPTR RSTD;                                             0450
*       RFY                                                        0451
*         PQESEPTR RSTD;                                           0451
*       PQESEPTR=CSAPQEP;           /* CSA PQE PTR FOR START OF CSA
*                                      RIGHT BELOW CSA AREA TOP LIMIT
*                                      FOR PRIVATE AREA IS           */
         L     PQESEPTR,CSAPQEP(,GDAPTR)                           0452
*       PASIZE=PQEREGN-NVTVRREG;    /* SUBT TWO LIMITS FOR SIZE      */
         L     @09,PQEREGN(,PQESEPTR)                              0453
         SLR   @09,@15                                             0453
         ST    @09,PASIZE(,GDAPTR)                                 0453
*       PASTRT=NVTVRREG;            /* START ADDR OF PRIVATE AREA    */
         ST    @15,PASTRT(,GDAPTR)                                 0454
*       RFY                                                        0455
*         PQESEPTR UNRSTD;                                         0455
*       RFY                                                        0456
*         PVTPTR RSTD;                                             0456
*       PVTPTR=CVTPVTP;                                            0457
         L     PVTPTR,CVTPVTP(,CVTPTR)                             0457
*       PVTLPRIV=PASTRT/NP84K;      /* GET SSP OF PASTRT             */
         SRL   @15,12                                              0458
         STH   @15,PVTLPRIV(,PVTPTR)                               0458
*       PVTLPRIV=PVTLPRIV*16;       /* PAD WITH ON BYTE ZERO         */
         SLA   @15,4                                               0459
         STH   @15,PVTLPRIV(,PVTPTR)                               0459
*       RFY                                                        0460
*         PVTPTR UNRSTD;            /* ADDRESS OF PRIVATE AREA       */
*     END;                                                         0461
*   ELSE                                                           0462
*     CALL NP8RSPC;                 /* RESPECIFY SIZE AND LOOK AT  0462
*                                      PARM AGAIN                    */
         B     @RC00447                                            0462
@RF00447 BAL   @14,NP8RSPC                                         0462
*   CALL NP8REAL;                   /* DEFINE V=R SYSTEM CORE        */
@RC00447 BAL   @14,NP8REAL                                         0463
*   RETURN;                                                        0464
         B     @EL00001                                            0464
*NP8RSPC:                                                          0465
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0465
*                                                                  0465
NP8RSPC  DS    0H                                                  0466
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE ENTERED WHEN REAL SPACE REQUESTED EXCEEDS        */
*   /* AVAILABLE SPACE IN SYSTEM. A MESSAGE INFORMING THE OPERATOR OF*/
*   /* THE AVAILABLE SPACE AMOUNT IS ISSUED IN ADDITION, HE IS       */
*   /* REQUESTED TO RESPECIFY THE REAL PARM.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0466
*   IF NVTVRLNG>3 THEN                                             0466
         L     @09,NVTVRLNG(,RNVT)                                 0466
         C     @09,@CF00057                                        0466
         BNH   @RF00466                                            0466
*     RWRK1=(NVTVRLNG-4)*4;         /* NUMBER OF K OF REAL STORAGE 0467
*                                      AVAILABLE                     */
         SL    @09,@CF00059                                        0467
         SLA   @09,2                                               0467
         LR    RWRK1,@09                                           0467
*   ELSE                                                           0468
*     RWRK1=0;                                                     0468
         B     @RC00466                                            0468
@RF00466 SLR   RWRK1,RWRK1                                         0468
*   GENERATE REFS(RWRK1,DWRD) SETS(MSG6A);                         0469
@RC00466 DS    0H                                                  0469
         CVD   6,DWRD                 CONVERT NUMBER TO DEC
         UNPK  MSG6A(7),DWRD+4(4)     UNPACK INTO MSG AREA
         OI    MSG6A+6,X'F0'          OR IN ZONE OF LAST NO
*   MSG6B='  REAL ';                                               0470
         MVC   MSG6B(7),@CC01972                                   0470
*   MSG6C='REAL';                                                  0471
         MVC   MSG6C(4),@CC01973                                   0471
*   RFY                                                            0472
*    (RLIST,                                                       0472
*     RSCAN) RSTD;                                                 0472
*   RLIST=ADDR(NP8PLST1);           /* ADDR OF PARM LIST FOR WTOR    */
         LA    RLIST,NP8PLST1                                      0473
*   RSCAN=ADDR(NP8RMSG1);           /* SET RSCAN TO REPLY            */
         LA    RSCAN,NP8RMSG1                                      0474
*   NWTORMSG=ADDR(MSG6);            /* SET MSG ADDR IN LIST          */
*                                                                  0475
         LA    @07,MSG6                                            0475
         ST    @07,NWTORMSG(,RLIST)                                0475
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE VIA NIPWTOR ONLY XXXK OF REAL STORAGE AVAILABLE */
*   /* FOR REAL - RESPECIFY OR CANCEL                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0476
*   GEN REFS(NVTWTOR,RNVT,NP8PLST1) SETS(RPARM,REXIT,RENTRY,NP8RMSG1)
*       (IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1) ;                     0476
         IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1
*   GOTO NP8RLNEW;                  /* SYNTAX CHECK NEW PARM         */
         B     NP8RLNEW                                            0477
*   RFY                                                            0478
*     RLIST UNRSTD;                                                0478
*   RFY                                                            0479
*     RSCAN UNRSTD;                                                0479
*   END NP8RSPC;                                                   0480
*   RFY                                                            0481
*    (RLIST,                                                       0481
*     RSCAN) RSTD;                                                 0481
*                                                                  0481
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTERED WHENEVER AN INVALID REAL PARAMETER HAS BEEN           */
*   /* ENCOUNTERED. THE MESSAGE 'INVALID REAL PARM- RESPECIFY OR     */
*   /* CANCEL' IS ISSUED. IF REPLY IS EOB, DEFAULT IS SUPPLIED (76K) */
*   /* . IF NOT, REPLY IS ANALYZED AGAIN.                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0482
*NP8RLINV:                                                         0482
*   ;                                                              0482
NP8RLINV DS    0H                                                  0483
*   RLIST=ADDR(NP8PLST1);           /* LOAD PARM LIST ADDR           */
         LA    RLIST,NP8PLST1                                      0483
*   RSCAN=ADDR(NP8RMSG1);           /* SET RSCAN TO REPLY            */
         LA    RSCAN,NP8RMSG1                                      0484
*   MSG1A='REAL  ';                 /* PARM IN QUESTION              */
         MVC   MSG1A(6),@CC01976                                   0485
*   NWTORMSG=ADDR(MSG1);            /* SET MSG ADDR IN PARM LIST     */
*                                                                  0486
         LA    @07,MSG1                                            0486
         ST    @07,NWTORMSG(,RLIST)                                0486
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE: 'INVALID REAL PARM - - RESPECIFY OR CANCEL '   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0487
*   GEN REFS(NVTWTOR,RNVT,NP8PLST1) SETS(RPARM,REXIT,RENTRY,NP8RMSG1)
*       (IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1) ;                     0487
         IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1
*   RFY                                                            0488
*     RLIST UNRSTD;                                                0488
*                                                                  0488
*   /*****************************************************************/
*   /*                                                               */
*   /* ANALYZE REPLY. IF EOB, SUPPLY DEFAULT SIZE OF 64K AND         */
*   /* CONTINUE. OTHERWISE SYNTAX CHECK NEW REPLY PARM.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0489
*NP8RLNEW:                                                         0489
*   IF S2CHAR=' '''                 /* REPLY = EOB ?                 */
*     THEN                                                         0489
NP8RLNEW CLC   S2CHAR(2,RSCAN),@CC01931                            0489
         BNE   @RF00489                                            0489
*     DO;                                                          0490
*       VALUE=RLDFLT;               /* SUPPLY DEFAULT AND GO ON      */
         MVC   VALUE(4),@CF00127                                   0491
*       GOTO NP8RLOK;               /* CONTINUE PROCESSING PARM      */
         B     NP8RLOK                                             0492
*     END;                                                         0493
*   IF S5CHAR^='REAL='              /* FIRST 5 CHARS='REAL=' ?       */
*     THEN                                                         0494
@RF00489 CLC   S5CHAR(5,RSCAN),@CC01978                            0494
         BNE   @RT00494                                            0494
*     GOTO NP8RLINV;                /* MSG AND GO WTOR               */
*   RSCAN=RSCAN+LENGTH('REAL=');    /* UPDATE RSCAN PTR TO PARM VALUE*/
         AL    RSCAN,@CF00100                                      0496
*   PCT=MAXREAL;                    /* MAX ALLOWABLE DIGITS FOR REAL */
         LA    PCT,4                                               0497
*   CALL NP8VNUM;                                                  0498
         BAL   @14,NP8VNUM                                         0498
*   IF RCODE=0                      /* IF R.C. = 0, THEN SYNTAX OK   */
*     THEN                                                         0499
         LTR   RCODE,RCODE                                         0499
         BZ    @RT00499                                            0499
*     GO TO NP8RLOK;                /* GOTO VALID PARM               */
*   ELSE                                                           0501
*     GO TO NP8RLINV;               /* GOTO INVALID PARM             */
         B     NP8RLINV                                            0501
*   RFY                                                            0502
*     RSCAN UNRSTD;                                                0502
*NP8REAL:                                                          0503
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0503
*                                                                  0503
NP8REAL  DS    0H                                                  0504
*   /*****************************************************************/
*   /*                                                               */
*   /* THE V=R PQE PTR IS FOUND IN GDA. IT POINTS TO THE PQE WHICH   */
*   /* POINTS TO FBQE. BOTH OF THESE BLOCK ARE INIT. TO REFLECT NEW  */
*   /* V=R AREA. EACH PAGE IS FIXED FOR THIS REGION BY SETTING THE   */
*   /* PFTVR BIT IN THE PAGE FIX TABLE ENTRIES FOR EVERY PAGE IN V=R */
*   /* REGION.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0504
*   RFY                                                            0504
*    (PQESEPTR,                                                    0504
*     FBQESPTR) RSTD;                                              0504
*   SAVEE=REXIT;                    /* SAVE RETURN ADDR              */
         ST    REXIT,SAVEE                                         0505
*   NVTVRREG=NVTVRREG+(4096*4);     /* INCRE FOR RCT REGION IN     0506
*                                      ADDRESS SPACE                 */
         L     @09,@CF01997                                        0506
         AL    @09,NVTVRREG(,RNVT)                                 0506
         ST    @09,NVTVRREG(,RNVT)                                 0506
*   PQESEPTR=VRPQEP;                /* V=R PQE POINTER               */
         L     PQESEPTR,VRPQEP(,GDAPTR)                            0507
*   PQEREGN=NVTVRREG;               /* STARTING V=R ADDR             */
         ST    @09,PQEREGN(,PQESEPTR)                              0508
*   PQESIZE=VALUE;                  /* SIZE OF V=R REGION            */
         L     @06,VALUE                                           0509
         ST    @06,PQESIZE(,PQESEPTR)                              0509
*   VVVRFLG='1'B;                   /* INDICATES V=R REGION          */
         OI    VVVRFLG(PQESEPTR),B'00000001'                       0510
*   FBQESPTR=PQEFFBQE;              /* ADDR OF FBQE                  */
         L     FBQESPTR,PQEFFBQE(,PQESEPTR)                        0511
*   FWDPTR=PQESEPTR;                /* ADDR OF PQE, NO MORE FBQES    */
         ST    PQESEPTR,FWDPTR(,FBQESPTR)                          0512
*   BCKPTR=PQESEPTR;                /* ADDR OF PQE, NO MORE FBQES    */
         ST    PQESEPTR,BCKPTR(,FBQESPTR)                          0513
*   FBQAREA=NVTVRREG;               /* STARTING V=R ADDR             */
         ST    @09,FBQAREA(,FBQESPTR)                              0514
*   SIZE=VALUE;                     /* SIZE OF FREE AREA IN BYTES    */
         ST    @06,SIZE(,FBQESPTR)                                 0515
*   RFY                                                            0516
*    (PQESEPTR,                                                    0516
*     FBQESPTR) UNRSTD;                                            0516
*                                                                  0516
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO V = R REGION IS REQUESTED DO NOT INIT PVT AND PFTE      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0517
*   IF VALUE^=0                     /* VALUE=0 MEANS NO V=R REGION   */
*     THEN                                                         0517
         LTR   @06,@06                                             0517
         BZ    @RF00517                                            0517
*     DO;                                                          0518
*       RFY                                                        0519
*         PVTPTR RSTD;                                             0519
*       PVTPTR=CVTPVTP;             /* PVT ADDR                      */
         L     PVTPTR,CVTPVTP(,CVTPTR)                             0520
*       PVTFVR=NVTVRREG/NP84K;      /* SHIFT RIGHT LOGICAL 3 HEX   0521
*                                      DIGITS, GET SSP VALUE FOR VBN */
         LR    @05,@09                                             0521
         SRL   @05,12                                              0521
         STH   @05,PVTFVR(,PVTPTR)                                 0521
*       PVTFVR=PVTFVR*16;           /* PAD WITH 1 HEX ZERO ON RIGHT  */
         SLA   @05,4                                               0522
         STH   @05,PVTFVR(,PVTPTR)                                 0522
*       PVTLVR=(NVTVRREG+(VALUE-NP84K))/NP84K;/* GET HIGH V=R VBN    */
         L     @05,@CF00113                                        0523
         SLR   @06,@05                                             0523
         LR    @00,@09                                             0523
         ALR   @00,@06                                             0523
         SRDA  @00,32                                              0523
         DR    @00,@05                                             0523
         STH   @01,PVTLVR(,PVTPTR)                                 0523
*       PVTLVR=PVTLVR*16;           /* PAD WITH HEX 0 ON RIGHT       */
         SLA   @01,4                                               0524
         STH   @01,PVTLVR(,PVTPTR)                                 0524
*     END;                                                         0525
*   ELSE                                                           0526
*     DO;                                                          0526
         B     @RC00517                                            0526
@RF00517 DS    0H                                                  0527
*       PVTPTR=CVTPVTP;                                            0527
         L     PVTPTR,CVTPVTP(,CVTPTR)                             0527
*       PVTFVR=0;                                                  0528
         SLR   @09,@09                                             0528
         STH   @09,PVTFVR(,PVTPTR)                                 0528
*       PVTLVR=0;                                                  0529
         STH   @09,PVTLVR(,PVTPTR)                                 0529
*     END;                                                         0530
*   REXIT=SAVEE;                    /* RESTORE RETURN ADDR           */
@RC00517 L     REXIT,SAVEE                                         0531
*   END NP8REAL;                                                   0532
@EL00008 DS    0H                                                  0532
@EF00008 DS    0H                                                  0532
@ER00008 BR    @14                                                 0532
*   RFY                                                            0533
*     PVTPTR UNRSTD;                                               0533
*   RFY                                                            0534
*    (RLIST,                                                       0534
*     RSCAN) RSTD;                                                 0534
*                                                                  0534
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTERED WHENEVER AN INVALID VRREGN PARAMETER HAS BEEN         */
*   /* ENCOUNTERED. THE MESSAGE 'INVALID VRREGN PARM - RESPECIFY' IS */
*   /* ISSUED. THEN REPLY IS ANALYZED AGAIN.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0535
*NP8VRINV:                                                         0535
*   ;                                                              0535
NP8VRINV DS    0H                                                  0536
*   MSG1A='VRREGN';                 /* PARM = VRRENG                 */
         MVC   MSG1A(6),@CC01983                                   0536
*   RLIST=ADDR(NP8PLST1);           /* LOAD PARM LIST ADDRESS        */
         LA    RLIST,NP8PLST1                                      0537
*   RSCAN=ADDR(NP8RMSG1);           /* SET SCAN POINTER TO REPLY     */
         LA    RSCAN,NP8RMSG1                                      0538
*   NWTORMSG=ADDR(MSG1);            /* SET MSG ADDR IN PARM LIST     */
         LA    @07,MSG1                                            0539
         ST    @07,NWTORMSG(,RLIST)                                0539
*   GEN REFS(NVTWTOR,RNVT,NP8PLST1) SETS(RPARM,REXIT,RENTRY,NP8RMSG1)
*       (IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1) ;                     0540
         IEAPMNIP  TYPE=WTOR,PARAM=NP8PLST1
*   RFY                                                            0541
*     RLIST UNRSTD;                                                0541
*   IF S2CHAR=' '''                 /* REPLY = EOB ?                 */
*     THEN                                                         0542
         CLC   S2CHAR(2,RSCAN),@CC01931                            0542
         BNE   @RF00542                                            0542
*     DO;                                                          0543
*       VALUE=VRDFLT;               /* SUPPLY DEFAULT OF 64          */
         MVC   VALUE(4),@CF00125                                   0544
*       GOTO NP8VROK;               /* CONTINUE PROCESSING           */
         B     NP8VROK                                             0545
*     END;                                                         0546
*                                                                  0546
*   /*****************************************************************/
*   /*                                                               */
*   /* OPERATOR MUST REPLAY WITH VRREGN=PARM                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0547
*   IF S7CHAR^='VRREGN='            /* KEYWORD = 'VRREGN' ?          */
*     THEN                                                         0547
@RF00542 CLC   S7CHAR(7,RSCAN),@CC01984                            0547
         BNE   @RT00547                                            0547
*     GOTO NP8VRINV;                /* ISSUE INVALID PARM MSG AGAIN  */
*   RSCAN=RSCAN+LENGTH('VRREGN=');  /* POINT PAST KEYWORD            */
         AL    RSCAN,@CF00104                                      0549
*   PCT=MAXREAL;                    /* MAXIMUM ALLOWED DIGITS = 4    */
         LA    PCT,4                                               0550
*   CALL NP8VNUM;                   /* SYNTAX CHECKER                */
*                                                                  0551
         BAL   @14,NP8VNUM                                         0551
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RETURN CODE = ZERO, THEN CONTINUE PROCESSING               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0552
*   IF RCODE=0 THEN                                                0552
         LTR   RCODE,RCODE                                         0552
         BZ    @RT00552                                            0552
*     GO TO NP8VROK;                /* CONTINUE PROCESSING           */
*   ELSE                                                           0554
*     GO TO NP8VRINV;               /* GO TO ERROR PROCESSING        */
         B     NP8VRINV                                            0554
*   RFY                                                            0555
*     RSCAN UNRSTD;                                                0555
*NP8VNUM:                                                          0556
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0556
*                                                                  0556
NP8VNUM  DS    0H                                                  0557
*   /*****************************************************************/
*   /*                                                               */
*   /* INPUT RSCAN ADDRESS OF FIRST BYTE OF EBCDIC PARAMETER PCT     */
*   /* MAXIMUM SIZE IN BYTES OF PARAMETER OUTPUT VALUE HEXADECIMAL   */
*   /* VALUE OF EBCDIC PARAMETER RETURN CODES 0 PARAMETER ALL NUMERIC*/
*   /* AND LENGTH DOES NOT EXCEED PCT SPECIFICATION 4 PARAMETER NOT  */
*   /* ALL NUMERIC ORLENGTH EXCEEDS PCT SPECIFICATION NOTE: THE      */
*   /* MAXIMUM VALUE FOR PCT IS 4                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0557
*   RFY                                                            0557
*    (RSCAN,                                                       0557
*     RPTAB) RSTD;                  /*                       @ZM40324*/
*   SAVEE=REXIT;                    /* SAVE RESTURN ADDR             */
         ST    REXIT,SAVEE                                         0558
*   M=PCT+1;                        /* END OF SCAN                   */
         LA    @09,1                                               0559
         LR    M,PCT                                               0559
         ALR   M,@09                                               0559
*   DO N=1 TO M;                                                   0560
*                                                                  0560
         LR    N,@09                                               0560
         B     @DE00560                                            0560
@DL00560 DS    0H                                                  0561
*     /***************************************************************/
*     /*                                                             */
*     /* IF DELIMITER IS FOUND BEFORE PCT IS EXCEEDED THE PARAMETER  */
*     /* LENGTH IS VALID                                             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0561
*     IF SCAN(N)=''''               /* QUOTE VALID DELIMITER         */
*       THEN                                                       0561
         LR    @09,RSCAN                                           0561
         ALR   @09,N                                               0561
         BCTR  @09,0                                               0561
         CLI   SCAN(@09),C''''                                     0561
         BE    @RT00561                                            0561
*       GOTO NPXVNUMB;                                             0562
*     IF SCAN(N)=' '                /* BLANK                         */
*       THEN                                                       0563
         LR    @09,RSCAN                                           0563
         ALR   @09,N                                               0563
         BCTR  @09,0                                               0563
         CLI   SCAN(@09),C' '                                      0563
         BE    @RT00563                                            0563
*       GOTO NPXVNUMB;                                             0564
*     IF SCAN(N)=','                /* COMMA                         */
*       THEN                                                       0565
         LR    @09,RSCAN                                           0565
         ALR   @09,N                                               0565
         BCTR  @09,0                                               0565
         CLI   SCAN(@09),C','                                      0565
         BE    @RT00565                                            0565
*       GOTO NPXVNUMB;                                             0566
*     IF SCAN(N)=')'                /* RIGHT PAREN                   */
*       THEN                                                       0567
         LR    @09,RSCAN                                           0567
         ALR   @09,N                                               0567
         BCTR  @09,0                                               0567
         CLI   SCAN(@09),C')'                                      0567
         BE    @RT00567                                            0567
*       GOTO NPXVNUMB;                                             0568
*     IF SCAN(N)^='(' THEN                                         0569
         LR    @09,RSCAN                                           0569
         ALR   @09,N                                               0569
         BCTR  @09,0                                               0569
         CLI   SCAN(@09),C'('                                      0569
         BE    @RF00569                                            0569
*       DO;                                                        0570
*                                                                  0570
*         /***********************************************************/
*         /*                                                         */
*         /* IF CHARACTER IS NEITHER A DELIMETER OR A NUMERIC IT IS  */
*         /* INVALID                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0571
*         IF SCANZ(N)^='1111'B THEN                                0571
         LR    @09,RSCAN                                           0571
         ALR   @09,N                                               0571
         BCTR  @09,0                                               0571
         TM    SCANZ(@09),B'11110000'                              0571
         BNO   @RT00571                                            0571
*           GOTO NPXVNINV;          /* NOT NUMERIC, SET RETURN CODE  */
*       END;                                                       0573
*     ELSE                                                         0574
*       M=M+1;                      /* MAKE ALLOWANCE FOR EXTRA    0574
*                                      DELIMITER                     */
         B     @RC00569                                            0574
@RF00569 LA    M,1(,M)                                             0574
*   END;                                                           0575
@RC00569 LA    N,1(,N)                                             0575
@DE00560 CR    N,M                                                 0575
         BNH   @DL00560                                            0575
*NPXVNINV:                          /* INVALID PARAMETER             */
*   RCODE=4;                        /* ERROR CODE OF 4               */
NPXVNINV LA    RCODE,4                                             0576
*   REXIT=SAVEE;                    /* RESTORE RETRUN ADDR           */
         L     REXIT,SAVEE                                         0577
*   RETURN;                                                        0578
@EL00009 DS    0H                                                  0578
@EF00009 DS    0H                                                  0578
@ER00009 BR    @14                                                 0578
*NPXVNUMB:                          /* VALID PARAMETER               */
*                                                                  0579
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE FIRST CHARACTER WAS A DELIMETER THEN THE PARAMETER IS  */
*   /* INVALID                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0579
*   IF N=1 THEN                                                    0579
NPXVNUMB C     N,@CF00062                                          0579
         BE    @RT00579                                            0579
*     GOTO NPXVNINV;                /* NO VALUE GIVEN = INVALID      */
*                                                                  0580
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LEFT PAREN. WAS FIRST CHARACTER DELIMITER, THEN SUBTRACT   */
*   /* ONE FROM PARAMETER LENGTH FOR THAT CHARACTER. THAT IS THE ONLY*/
*   /* ALLOWABLE FIRST CHARACTER DELIMITER.                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0581
*   CONV=CONV&&CONV;                /* ZERO BUFFER FOR WORKING       */
         XC    CONV(8),CONV                                        0581
*   IF SCAN(1)='(' THEN                                            0582
         CLI   SCAN(RSCAN),C'('                                    0582
         BNE   @RF00582                                            0582
*     DO;                                                          0583
*       N=N-2;                      /* COUNT 2 DELIMITERS            */
         BCTR  N,0                                                 0584
         BCTR  N,0                                                 0584
*       I=5-N;                      /* SET UP CONVERSION AREA        */
         LA    I,5                                                 0585
         SLR   I,N                                                 0585
*       CONV2(I:4)=SCAN4(2:N);                                     0586
         LA    @07,CONV2-1(I)                                      0586
         LA    @15,4                                               0586
         SLR   @15,I                                               0586
         EX    @15,@SM02001                                        0586
*     END;                                                         0587
*   ELSE                                                           0588
*     DO;                                                          0588
         B     @RC00582                                            0588
@RF00582 DS    0H                                                  0589
*       M=N-1;                      /* COUNT 1 DELIMITER             */
         LR    M,N                                                 0589
         BCTR  M,0                                                 0589
*       I=5-M;                      /* SET UP CONVERSION AREA        */
         LA    I,5                                                 0590
         SLR   I,M                                                 0590
*       CONV2(I:4)=SCAN4(1:M);                                     0591
         LA    @04,CONV2-1(I)                                      0591
         LA    @15,4                                               0591
         SLR   @15,I                                               0591
         EX    @15,@SM02003                                        0591
*     END;                          /* CONVERT PARM FROM EBCDIC TO 0592
*                                      BINARY                        */
*   GENERATE REFS(CONV2) SETS(CONV2,RWRK1);                        0593
@RC00582 DS    0H                                                  0593
         PACK   CONV2(4),CONV2(4)     PACK PARM
         CVB    RWRK1,CONV1           CONVERT TO BINARY
*   VALUE=RWRK1;                    /* HEX VALUE OF PARM             */
         ST    RWRK1,VALUE                                         0594
*   RCODE=0;                        /* VALID PARM, R.C. = 0          */
         SLR   RCODE,RCODE                                         0595
*   REXIT=SAVEE;                    /* RESTORE RETURN ADDR           */
         L     REXIT,SAVEE                                         0596
*   RFY                                                            0597
*    (RSCAN,                                                       0597
*     RPTAB) UNRSTD;                /*                       @ZM40324*/
*   END NP8VNUM;                                                   0598
         B     @EL00009                                            0598
*   END IEAVNP08;                                                  0599
*                                                                  0599
*/*IEAVNP08: CHART                                                   */
*/* HEADER                                                         0600
*/*                                                                0600
*/*                                                                0600
*/* VSM INITIALIZATION ROUTINE:  IEAVNP08                            */
*/* IEAVNP08: E ENTRY                                                */
*/* IEAVNPA8: E ENTRY FOR SQA PROCESSING                             */
*/* M SET MODULE ADDR'TY                                             */
*/* P SAVE INPUT REGISTERS                                           */
*/* P GET SQA PARM ADDRESS                                           */
*/* D (YES,,NO,NP8SQALP) PARM ADDR = 0?                              */
*/* D (NO,,YES,%L1) QUICKSTART SPECIFIED?                            */
*/* M (,NP8SQOK)  SET VALUE=1                                        */
*/*%L1: M (,NP8SQOK) SET VALUE = PREVIOUS SQA SIZE                   */
*/*NP8SQALP: M SET MAX NO. OF PARM DIGITS                            */
*/* L NP8VNUM SYNTAX CHECKER                                         */
*/* D (=0,,=4,NP8SQINV) RCODE=0?                                     */
*/*NP8SQOK: N VALUE NOW CONTAINS VALID SYNTAX NUMBER                 */
*/* P CALCULATE SIZE OF SQA                                          */
*/* P CALCULATE LOW SQA ADDRESS                                      */
*/* D (YES,,NO,NP8SQAEX) IS SQA WITHIN V=V REGION?                   */
*/*NP8SQUIK: N SQA REGION IS WITHIN ITS LIMITS                       */
*/* D (YES,NP8SQACS,NO,) DID OPERATOR SPECIFY QUCKSTRT ?             */
*/*NP8SQACH: D (YES,NP8NSQAP,NO,) IS VALUE=0?                        */
*/* P UPDATE TOTAL SQA SPACE IN GDA                                  */
*/* L BUILDPG                                                        */
*/*%L20: L NP8SQBLK                                                  */
*/* P UPDATE NVTLVIRT WITH SQA LOW ADDR                              */
*/*NP8NSQAP: R RETURN                                                */
*/*BUILDPG: E SUBROUTINE TO GET PAGE TABLES                          */
*/* D (YES,,NO,%BU1) SQA REQUEST ?                                   */
*/* P (,%BU2) GETMAIN LENGTH = PGTES LENGTH                          */
*/*%BU1: P GM LENGTH = PGTES + XPTES LENGTH                          */
*/*%BU2: P GMLENGTH = GMLENGTH + 72 SAVE AREA BYTES                  */
*/* S GETMAIN: GET PAGE TABLES AREA                                  */
*/* D (YES,,NO,%BU3) SQA REQUEST ?                                   */
*/* P SET BIT FOR NO XPTE                                            */
*/*%BU3: S CREATE: INIT SEGMENTS                                     */
*/* D (YES,%BU4,NO,) CREATE SUCCESSFUL ?                             */
*/* S WAIT STATE X'03D'                                              */
*/*%BU4: R RETURN                                                    */
*/*NP8SQAEX: N ISSUES MSG 'ONLY XX OF VIRTUAL SPACE AVAILABLE -    0600
*/*RESPECIFY'                                                        */
*/* P CONVERT AVAILABLE AREA SIZE INTO EBCDIC                        */
*/* M SET UP WTOR PARAMETERS                                         */
*/* L (,NP8SQNEW) WTOR THRU IEAPMNIP                                 */
*/*NP8SQACS: E SUBROUTINE                                            */
*/*  N ENTERED TO COMPARE PREVIOUS SQA SIZE WITH REQUESTED ONE       */
*/* D (YES,%L2,NO,) NEW SQA SIZE = PREVIOUS ONE?                     */
*/* L WTO THRU IEAPMNIP                                              */
*/* N 'QUICKSTART REQUIRES PREVIOUS IPL SQA SIZE-'                   */
*/* N 'PREVIOUS SIZE USED'                                           */
*/* P CALCULATE PREVIOUS SQA SIZE                                    */
*/* P CALCULATE PREVIOUS LOW SQA ADDR                                */
*/*%L2: R RETURN                                                     */
*/*NP8SQBLK: E ENTRY                                                 */
*/* P UPDATE SQA DQE                                                 */
*/* P UPDATE SQA FQE                                                 */
*/* R RETURN                                                         */
*/*NP8SQINV: N INVALID SQA PARM ROUTINE                              */
*/* P SET UP MESSAGE                                                 */
*/* L WTOR THRU IEAPMNIP                                             */
*/*NP8SQNEW: N ANALYZE OPERATOR'S REPLY                              */
*/* D (YES,%L3,NO,) REPLY=EOB?                                       */
*/* D (YES,,NO,%L4) 1ST 4 CHAR OF REPLY = 'SQA='?                    */
*/* L NP8VNUM SYSTAX CHECKER                                         */
*/* D (YES,NP8SQOK,NO,NP8SQINV) VALID SYNTAX?                        */
*/*%L3: M (,NP8SQOK) VALUE+ DEFAULT OF 1                             */
*/*%L4: M (,NP8SQINV) PUT INVALID CHARACTERS IN WTOR MSG             */
*/*IEAVNPB8: E ENTRY FOR CSA PROCESSING                              */
*/* M SET MODULE ADDITY                                              */
*/* P SAVE INPUT REGISTERS                                           */
*/* P GET SQA PARM ADDRESS                                           */
*/* D (YES,,NO,%L5) CSA PARM ADDR = 0?                               */
*/* M (,NP8CSAOK) VALUE=100 DEFAULT                                  */
*/*%L5: L NP8VNUM SYNTAX CHECKER                                     */
*/* D (YES,NP8CSAOK,NO,NP8CSINV) VALID SYNTAX?                       */
*/*NP8CSAOK: N CSA MUST BEGIN ON A SEGMENT BOUNDARY AND END ON A PAGE.
*/*                                                                  */
*/* D (YES,,NO,%L6) HIGH ADDR ON PAGE BOUNDARY?                      */
*/* P (,%L7) GET HIGH CSA ADDRESS                                    */
*/*%L6: P ROUND CSA HIGH ADDRESS TO PAGE BOUNDARY                    */
*/*%L7: P CALCULATE LOW ADDR FOR CSA                                 */
*/* D (YES,%L8,NO,) LOW ADDR ON SEGMENT BOUNDARY?                    */
*/* P ROUND LOW ADDR TO SEGMENT BOUNDARY                             */
*/*%L8: D (NO,,YES,%L21) CSA WITHIN V=V AREA BOUNDS?                 */
*/* L (,NP8CSNEW) NP8COLAP                                           */
*/*%L21: L BUILDPG                                                   */
*/* L NP8CSBLK                                                       */
*/* P PUT PRIVATE AREA ADDRESS IN NVT,CVT AND PVT                    */
*/* R RETURN                                                         */
*/*NP8CSBLK: E SUBROUTINE TO INIT CSA PQE AND FBQE                   */
*/* P UPDATE CSA PQE                                                 */
*/* P UPDATE AVAILABLE SQA AREA SIZE IN GDA WITH SIZE OF CSA         */
*/* P UPDATE CSA FBQE                                                */
*/* R RETURN                                                         */
*/*NP8COLAP: E SUBROUTINE                                            */
*/* N INFORM OPERATOR THAT SPECIFIED CSA PARM WAS TOO LARGE          */
*/* P SET UP WTOR MESSAGE                                            */
*/* N 'ONLY XK OF VIRTUAL STORAGE AVAILABLE -RESPECIFY OR CANCEL'    */
*/* L (,NP8CSNEW) WTOR THRU IEAPMNIP                                 */
*/*NP8CSINV: N INVALID CSA PARAMETER ROUTINE.                        */
*/* P SET UP WTOR MESSAGE                                            */
*/* L WTOR THRU IEAPMNIP                                             */
*/*NP8CSNEW: D (YES,,NO,%L10) REPLY=EOB?                             */
*/* M (,NP8CSAOK) VALUE = DEFAULT OF 100K                            */
*/*%L10: D (NO,NP8CSINV,YES,) 1ST 4 CHARS OF REPLY = 'CSA='          */
*/* L NP8VNUM SYNTAX CHECKER                                         */
*/* D (YES,NP8CSAOK,A0,NP8CSINV) VALID SYNTAX                        */
*/*IEAVNPC8: E ENTRY                                                 */
*/* M SET MODULE ADDR'TY                                             */
*/* P SAVE INPUT REGISTERS                                           */
*/* P GET VRREGN PARM ADDRESS                                        */
*/* D (YES,,NO,%L12) VRREGN PARM ADDRESS = 0?                        */
*/* M (,NP8VROK) VALUE = DEFAULT OF 64K                              */
*/*%L12: L NP8VNUM SYNTAX CHECKER                                    */
*/* D (YES,,NO,NP8VRINV) VALID SYNTAX?                               */
*/*NP8VROK: P STORE PARM IN GDA                                      */
*/* P GET REAL PARM ADDRESS                                          */
*/* D (YES,,NO,%L14) REAL PARM ADDRESS = 0?                          */
*/* M (,NP8RLOK) VALUE = DEFAULT OF 64K                              */
*/*%L14: L NP8VNUM SYNTAX CHECKER                                    */
*/* D (YES,NP8RLOK,NO,NP8RLINV) VALID SYNTAX?                        */
*/*NP8RLOK: P CONVERT REAL VALUE TO BYTES                            */
*/* N V=R REGION MUST BEGIN ON A PAGE BOUNDARY AND END ON A PAGE.    */
*/* D (NO,,YES,%L16) IS HIGH ADDR ON PAGE BOUNDARY?                  */
*/* P ROUND HIGH ADDRESS TO PAGE BOUNDARY                            */
*/*%L16: D (YES,,NO,NP8RSPC) IS THERE ENOUGH AVAILABLE CORE?         */
*/* P UPDATE HIGH REAL ADDR IN CVT                                   */
*/* P CALCULATE PRIVATE AREA BEGIN AND END ADDRESS TO PUT IN GDA     */
*/* P UPDATE LOW PRIVATE AREA VBN IN PVT                             */
*/* L NP8REAL                                                        */
*/* R RETURN                                                         */
*/*NP8RSPC: E SUBROUTINE                                             */
*/* N ROUTINE ENTERED WHEN REAL SPACE REQUESTED EXCEEDS AVAIL SPACE  */
*/* P SET UP WTOR MESSAGE                                            */
*/* N 'ONLY XK OF REAL STORAGE AVAIL FOR REAL- RESPECIFY OR CANCEL'  */
*/* L (,NP8RLNEW) WTOR THRU IEAPMNIP                                 */
*/*NP8RLINV: N INVALID REA PARAMETER ROUTINE                         */
*/* P SET UP WTOR MSG                                                */
*/* N 'INVALID  REA PARM -XXX- RESPECIFY OR CANCEL'                  */
*/* L WTOR THRU IEAPMNIP                                             */
*/*NP8RLNEW: D (YES,,NO,%L30) REPLY=EOB?                             */
*/* M (,NP8RLOK) SET VALUE = DEFAULT OF 64K                          */
*/*%L30: D (YES,,NO,NP8RLINV) 1ST 5 CHARS = 'REAL='?                 */
*/* L NP8VNUM SYNTAX CHECKER                                         */
*/* D (YES,NP8RLOK,NO,NP8RLINV) VALID SYNTAX?                        */
*/*NP8REAL: E SUBROUTINE                                             */
*/* N BUILD V=R REGION BY UPDATING CONTROL BLOCKS                    */
*/* P UPDATE PQE FOR REAL REGION                                     */
*/* P UPDATE FBQE                                                    */
*/* P SET LOW AND HIGH RBN'S OF V=R IN PVT                           */
*/* R RETURN                                                         */
*/*NP8VRINV: N INVALID VRREGN PARAMETER ROUTINE                      */
*/* P SET UP WTOR MESSAGE                                            */
*/* N 'INVALID VRREGN PARM - RESPECIFY OR CANCEL'                    */
*/* L WTOR THRU IEAPMNIP                                             */
*/* D (YES,,NO,%L18) REPLY = EOB?                                    */
*/* M (,NP8VROK) SET VALUE TO DEFAULT OF 64                          */
*/*%L18: D (NO,NP8VRINV,YES,) 1ST 7 CHARS OF REPLY = 'VRREGN=' ?     */
*/* L NP8VNUM SYNTAX CHECKER                                         */
*/* D (YES,NP8VROK,NO,NP8VRINV) VALID SYNTAX?                        */
*/*NP8VNUM: E SUBROUTINE SYNTAX CHECKER                              */
*/* N CHECKER CAN ISSUE 2 RETURN CODES IN REG15: 0=VALID AND 4=INVALID
*/*                                                                  */
*/*%L22: D (YES,NPXVNUMB,NO,) CHARACTER = QUOTE?                     */
*/* D (YES,NPXVNUMB,NO,) CHARACTER = BLANK?                          */
*/* D (YES,NPXVNUMB,NO,) CHARACTER = COMMA?                          */
*/* D (YES,NPXVNUMB,NO,) CHARACTER = RIGHT PAREN ?                   */
*/* D (YES,%L19,NO,NPXVNINV) ZONE OF CHARACTER  = '1111'B?           */
*/*%L19: D (YES,NPXVNUMB,NO,%L22) ALL CHARACTERS CHECKED?            */
*/*NPXVNINV: M RETURN CODE = 4 FOR INVALID SYNTAX                    */
*/* R RETURN                                                         */
*/*NPXVNUMB: D (YES,NPXVNINV,NO,) IS DELIMITER THE ONLY DIGIT?       */
*/* P CONVERT PARAMETER VALUE TO BINARY                              */
*/* M RETURN CODE = 0 FOR VALID SYNTAX                               */
*/* R RETURN                                                         */
@DATA    DS    0H
@CH00120 DC    H'224'
@SM02001 MVC   0(0,@07),SCAN4+1(RSCAN)
@SM02003 MVC   0(0,@04),SCAN4(RSCAN)
         DS    0F
@SA00001 DS    18F
         DS    0F
@CF00062 DC    F'1'
@CF00057 DC    F'3'
@CF00059 DC    F'4'
@CF00100 DC    F'5'
@CF00104 DC    F'7'
@CF00125 DC    F'64'
@CF00127 DC    F'76'
@CF00123 DC    F'100'
@CF00111 DC    F'1024'
@CF00113 DC    F'4096'
@CF01997 DC    F'16384'
@CF00109 DC    F'65536'
         DS    0D
EXTRA    DC    F'0'
AREASZ   DS    A
LOWADDR  DS    A
VALUE    DS    A
DALUE    DS    A
SAVEE    DS    A
AREA13   DC    F'0'
SEGINDX  DS    F
@CC01908 DC    C'VIRTUAL'
@CC01972 DC    C'  REAL '
@CC01984 DC    C'VRREGN='
@CC01930 DC    C'SQA   '
@CC01954 DC    C'CSA   '
@CC01976 DC    C'REAL  '
@CC01983 EQU   @CC01984
@CC01978 DC    C'REAL='
@CC01909 EQU   @CC01930
@CC01933 DC    C'SQA='
@CC01951 EQU   @CC01954
@CC01956 DC    C'CSA='
@CC01973 EQU   @CC01976
@CC01931 DC    C' '''
         DS    CL2
CONV     DS    CL8
         ORG   CONV
CONV1    DS    CL4
CONV2    DS    CL4
         ORG   CONV+8
NP8RMSG1 DC    CL80' '
SQABIT   DC    B'00000000'
CSABIT   DC    B'00000000'
         DS    CL6
NP8CVBAR DS    CL8
         ORG   NP8CVBAR
@NM00001 DC    F'0'
NP8PCKAR DC    F'0'
         ORG   NP8CVBAR+8
DWRD     DS    CL8
IEAVNP08 CSECT
MSG1    DS    0H
        IEAPMNIP  TYPE=HEADER,MSGST=MSG1,MSGEND=MSG1END
        DC    CL18'IEA906A RESPECIFY '
MSG1A   DC    CL6' '                (SQA,CSA,REAL,VRREGN)
        DC    CL18' PARM OR ENTER EOB'
MSG1END EQU   *
MSG4    DS    0H
        IEAPMNIP  TYPE=HEADER,MSGST=MSG4,MSGEND=MSG4END
        DC    CL49'IEA907I UNABLE TO INITIALIZE PAGE AND/OR SEGMENT '
        DC    CL21'TABLES FOR SQA OR CSA'
MSG4END EQU   *
MSG3    DS    0H
        IEAPMNIP  TYPE=HEADER,MSGST=MSG3,MSGEND=MSG3END
        DC    CL50'IEA908I QUICKSTART REQUIRES PREVIOUS IPL SQA SIZE '
        DC    CL20'- PREVIOUS SIZE USED'
MSG3END EQU   *
MSG6    DS    0H
        IEAPMNIP  TYPE=HEADER,MSGST=MSG6,MSGEND=MSG6END
        DC    CL8'IEA909A '
        DC    CL5'ONLY '
MSG6A   DC    CL7'       '
        DC    CL5'K OF '
MSG6B   DC    CL7'       '   (REAL,VIRTUAL)
        DC    CL23' STORAGE AVAILABLE FOR '
MSG6C   DC    CL4'    '    (SQA,CSA,REAL)
        DC    CL35' RESPECIFY OR ENTER EOB FOR DEFAULT'
MSG6END EQU   *
NP8PLST1 DS   0F
        IEAPMNIP  TYPE=PLIST,RMSGST=NP8RMSG1,RMSGL=80,MSGST=0
IEAVNP08 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
HIADDR   EQU   @04
GMSIZE   EQU   @04
PCT      EQU   @04
M        EQU   @07
N        EQU   @04
I        EQU   @09
CVTPTR   EQU   @03
RCODE    EQU   @15
RPARM    EQU   @01
SPQESPTR EQU   @05
DQESEPTR EQU   @06
FBQESPTR EQU   @07
FQESEPTR EQU   @07
PQESEPTR EQU   @05
RPTAB    EQU   @05
RSCAN    EQU   @06
RWRK1    EQU   @06
RLIST    EQU   @09
GDAPTR   EQU   @08
PVTPTR   EQU   @04
REG0     EQU   @00
REG1     EQU   @01
REG9     EQU   @09
REG13    EQU   @13
RNVT     EQU   @02
RCVT     EQU   @03
REXIT    EQU   @14
RENTRY   EQU   @15
SCANPTR  EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
SCAN     EQU   0
SCANZ    EQU   SCAN
SCAN4    EQU   0
S2CHAR   EQU   0
S4CHAR   EQU   0
S5CHAR   EQU   0
S7CHAR   EQU   0
SPQESECT EQU   0
SPQEAD   EQU   SPQESECT
SPDQEPTR EQU   SPQESECT+4
SPDQEAD  EQU   SPDQEPTR
SPQEFLGS EQU   SPQESECT+8
DQESECT  EQU   0
DQFQEPTR EQU   DQESECT
DQEBLKAD EQU   DQESECT+8
DQELNTH  EQU   DQESECT+12
FQESECT  EQU   0
FQEPTR   EQU   FQESECT
FQTYPE   EQU   FQEPTR
FQELNTH  EQU   FQESECT+4
FBQESECT EQU   0
FWDPTR   EQU   FBQESECT
BCKPTR   EQU   FBQESECT+4
SIZE     EQU   FBQESECT+8
FBQAREA  EQU   FBQESECT+12
PQESECT  EQU   0
PQEFFBQE EQU   PQESECT
PQESIZE  EQU   PQESECT+20
PQEREGN  EQU   PQESECT+24
VMMFLGS  EQU   PQESECT+30
VVVRFLG  EQU   VMMFLGS
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTFVR   EQU   PVT+20
PVTLVR   EQU   PVT+22
PVTLPRIV EQU   PVT+24
PVTLCSA  EQU   PVT+26
PVTPCSEG EQU   PVT+176
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
NVT      EQU   0
NVTNPATR EQU   NVT+54
NVTNPREN EQU   NVTNPATR
NVTFLLB  EQU   NVT+55
NVTABSAV EQU   NVT+140
NVTVVPG1 EQU   NVT+188
NVTFLCN  EQU   NVT+211
NVTWTPSW EQU   NVT+224
NVTWPSW2 EQU   NVTWTPSW+4
NVTFLWSC EQU   NVTWPSW2+3
NVTLOAD  EQU   NVT+232
NVTSENSE EQU   NVT+236
NVTSWAIT EQU   NVT+240
NVTTIME  EQU   NVT+244
NVTUCBFN EQU   NVT+248
NVTWTO   EQU   NVT+252
NVTWTOR  EQU   NVT+256
NVTWTOR2 EQU   NVT+260
NVTOPEN  EQU   NVT+264
NVTMOUNT EQU   NVT+268
NVTVIRT  EQU   NVT+276
NVTREAL  EQU   NVT+280
NVTSCHED EQU   NVT+284
NVTOPIO  EQU   NVT+288
NVTPTAB  EQU   NVT+372
NVTXCTL  EQU   NVT+428
NVTLOCAT EQU   NVT+436
NVTLPAND EQU   NVT+476
NVTLVIRT EQU   NVT+484
NVTVRREG EQU   NVT+488
NVTVRLNG EQU   NVT+492
NVTREALR EQU   NVT+508
NVTFLPO  EQU   NVT+528
NVTFLQS  EQU   NVTFLPO
NWTOHDR  EQU   0
NWTOFL   EQU   NWTOHDR+2
NWTORLST EQU   0
NWTORFL  EQU   NWTORLST+10
NWTORMSG EQU   NWTORLST+12
NIPSPE   EQU   0
NIPMNTPL EQU   0
NMNTDS   EQU   NIPMNTPL
NMNTVS   EQU   NIPMNTPL+12
NMNTFL   EQU   NIPMNTPL+20
NIPOPNPL EQU   0
NOPNDS   EQU   NIPOPNPL
NOPNFL   EQU   NIPOPNPL+20
NIPSCHDL EQU   0
NIPPAHDR EQU   0
NIPPAREA EQU   0
NIPPABDL EQU   NIPPAREA+12
NIPPABDH EQU   NIPPABDL
NIPPAIOD EQU   NIPPAREA+32
NIPPAECB EQU   NIPPAIOD+84
PARMTAB  EQU   0
CSA      EQU   PARMTAB+72
REAL     EQU   PARMTAB+200
SQA      EQU   PARMTAB+216
VRREGN   EQU   PARMTAB+240
@NM00068 EQU   PARMTAB+272
NIPPAFLG EQU   @NM00068
NIPPTE   EQU   0
NIPPTOPF EQU   NIPPTE+4
NIPPTATF EQU   NIPPTE+5
GDA      EQU   0
GVSMFLAG EQU   GDA
GDAFLAGS EQU   GVSMFLAG
VRDREG   EQU   GDA+4
CSAPQEP  EQU   GDA+8
VRPQEP   EQU   GDA+12
PASTRT   EQU   GDA+16
PASIZE   EQU   GDA+20
SQASPQEP EQU   GDA+24
SQASPLFT EQU   GDA+28
VRPOSTQ  EQU   GDA+32
VRWAITQ  EQU   GDA+40
RSMHD    EQU   0
RSMFLG1  EQU   RSMHD+12
RSMQS    EQU   RSMHD+20
RSMLFQ   EQU   RSMQS
RSMLSQA  EQU   RSMQS+4
RSMLIOQ  EQU   RSMQS+8
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
IEAVCSEG EQU   0
SCHAR    EQU   0
S3CHAR   EQU   0
S6CHAR   EQU   0
RSMHDPTR EQU   ASCBRSM
ASCBPTR  EQU   PSAAOLD
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSHRVM EQU   CVTS01+68
CVTGDA   EQU   CVTS01+212
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
RSMASMHD EQU   RSMHD+40
RSMFOEQ  EQU   RSMHD+36
RSMLIOQL EQU   RSMLIOQ+4
RSMLIOQF EQU   RSMLIOQ
RSMLSQAL EQU   RSMLSQA+2
RSMLSQAF EQU   RSMLSQA
RSMLFQL  EQU   RSMLFQ+2
RSMLFQF  EQU   RSMLFQ
RSMRSV2  EQU   RSMHD+16
RSMCNTFX EQU   RSMHD+14
RSMRSV1  EQU   RSMHD+13
@NM00078 EQU   RSMFLG1
RSMFAIL  EQU   RSMFLG1
RSMGFADD EQU   RSMFLG1
RSMCPNC  EQU   RSMFLG1
RSMCPNU  EQU   RSMFLG1
RSMGFAD  EQU   RSMFLG1
RSMIOCPC EQU   RSMFLG1
RSMIOCPU EQU   RSMFLG1
RSMASCB  EQU   RSMHD+8
RSMSPCT  EQU   RSMHD+4
RSMVSTO  EQU   RSMHD
GBLCELCT EQU   GDA+60
GLBLCELL EQU   GDA+56
CSASPQEP EQU   GDA+52
PFSTCPAB EQU   GDA+48
VRWLEL   EQU   VRWAITQ+4
VRWFEL   EQU   VRWAITQ
VRPLEL   EQU   VRPOSTQ+4
VRPFEL   EQU   VRPOSTQ
RESV     EQU   GVSMFLAG+1
@NM00077 EQU   GDAFLAGS
WAITQUE  EQU   GDAFLAGS
SQATHRS2 EQU   GDAFLAGS
SQATHRS1 EQU   GDAFLAGS
GDAFLAG2 EQU   GDAFLAGS
NIPFOURK EQU   GDAFLAGS
GDAFLAG1 EQU   GDAFLAGS
NIPPTSID EQU   NIPPTE+6
@NM00076 EQU   NIPPTATF
NIPPTMRG EQU   NIPPTATF
@NM00075 EQU   NIPPTOPF
NIPPTCAN EQU   NIPPTOPF
NIPPTLST EQU   NIPPTOPF
NIPPTOPI EQU   NIPPTOPF
NIPPTADR EQU   NIPPTE
PTABEND  EQU   PARMTAB+312
@NM00074 EQU   PARMTAB+308
DUPLEX   EQU   PARMTAB+304
@NM00073 EQU   PARMTAB+300
PAGNUM   EQU   PARMTAB+296
@NM00072 EQU   PARMTAB+292
SWAP     EQU   PARMTAB+288
@NM00071 EQU   PARMTAB+284
RSU      EQU   PARMTAB+280
@NM00070 EQU   @NM00068+1
@NM00069 EQU   NIPPAFLG
NIPPAFL1 EQU   NIPPAFLG
@NM00067 EQU   PARMTAB+268
PURGE    EQU   PARMTAB+264
@NM00066 EQU   PARMTAB+260
WTORPLY  EQU   PARMTAB+256
@NM00065 EQU   PARMTAB+252
WTOBFRS  EQU   PARMTAB+248
@NM00064 EQU   PARMTAB+244
@NM00063 EQU   PARMTAB+236
VAL      EQU   PARMTAB+232
@NM00062 EQU   PARMTAB+228
SYSP     EQU   PARMTAB+224
@NM00061 EQU   PARMTAB+220
@NM00060 EQU   PARMTAB+212
SMF      EQU   PARMTAB+208
@NM00059 EQU   PARMTAB+204
@NM00058 EQU   PARMTAB+196
PAGEO    EQU   PARMTAB+192
@NM00057 EQU   PARMTAB+188
PAGEP    EQU   PARMTAB+184
@NM00056 EQU   PARMTAB+180
OPT      EQU   PARMTAB+176
@NM00055 EQU   PARMTAB+172
OPI      EQU   PARMTAB+168
@NM00054 EQU   PARMTAB+164
NUCMAP   EQU   PARMTAB+160
@NM00053 EQU   PARMTAB+156
MLPA     EQU   PARMTAB+152
@NM00052 EQU   PARMTAB+148
MAXUSER  EQU   PARMTAB+144
@NM00051 EQU   PARMTAB+140
LOGLMT   EQU   PARMTAB+136
@NM00050 EQU   PARMTAB+132
LOGCLS   EQU   PARMTAB+128
@NM00049 EQU   PARMTAB+124
LNK      EQU   PARMTAB+120
@NM00048 EQU   PARMTAB+116
IPS      EQU   PARMTAB+112
@NM00047 EQU   PARMTAB+108
HARDCPY  EQU   PARMTAB+104
@NM00046 EQU   PARMTAB+100
FIX      EQU   PARMTAB+96
@NM00045 EQU   PARMTAB+92
DUMP     EQU   PARMTAB+88
@NM00044 EQU   PARMTAB+84
CVIO     EQU   PARMTAB+80
@NM00043 EQU   PARMTAB+76
@NM00042 EQU   PARMTAB+68
CPQE     EQU   PARMTAB+64
@NM00041 EQU   PARMTAB+60
CONT     EQU   PARMTAB+56
@NM00040 EQU   PARMTAB+52
CMD      EQU   PARMTAB+48
@NM00039 EQU   PARMTAB+44
CLPA     EQU   PARMTAB+40
@NM00038 EQU   PARMTAB+36
BLDLF    EQU   PARMTAB+32
@NM00037 EQU   PARMTAB+28
BLDL     EQU   PARMTAB+24
@NM00036 EQU   PARMTAB+20
APG      EQU   PARMTAB+16
@NM00035 EQU   PARMTAB+12
APF      EQU   PARMTAB+8
PTABSTRT EQU   PARMTAB
NIPPABUF EQU   NIPPAREA+572
NIPPAPTB EQU   NIPPAREA+252
@NM00034 EQU   NIPPAREA+248
NIPPARCD EQU   NIPPAIOD+136
NIPPADEB EQU   NIPPAIOD+88
@NM00033 EQU   NIPPAECB+1
NIPPAECC EQU   NIPPAECB
NIPPADCB EQU   NIPPAIOD+80
NIPPAIOB EQU   NIPPAIOD+40
@NM00032 EQU   NIPPAIOD+37
NIPPASID EQU   NIPPAIOD+32
NIPPATXT EQU   NIPPAIOD
@NM00031 EQU   NIPPAREA+30
@NM00030 EQU   NIPPABDL+15
NIPPATTR EQU   NIPPABDL+12
NIPPANAM EQU   NIPPABDL+4
NIPPA2BF EQU   NIPPABDH
NIPPARC  EQU   NIPPAREA+8
@NM00029 EQU   NIPPAREA
NIPPABYT EQU   NIPPAHDR+4
NIPPAQ   EQU   NIPPAHDR
NSCHDCPU EQU   NIPSCHDL+8
NSCHDPRM EQU   NIPSCHDL+4
NSCHDPTR EQU   NIPSCHDL
@NM00028 EQU   NIPOPNPL+22
NOPNRC   EQU   NIPOPNPL+21
NOPNFLSX EQU   NOPNFL
NOPNFLLC EQU   NOPNFL
NOPNFLLB EQU   NOPNFL
NOPNFLNB EQU   NOPNFL
NOPNFLI  EQU   NOPNFL
NOPNFLM  EQU   NOPNFL
NOPNFAU  EQU   NOPNFL
NOPNFRS  EQU   NOPNFL
NOPNUCB  EQU   NIPOPNPL+16
NOPNDCB  EQU   NIPOPNPL+12
NOPNDSA  EQU   NOPNDS
@NM00027 EQU   NIPMNTPL+21
NMNTFLB  EQU   NMNTFL
NMNTFLC  EQU   NMNTFL
NMNTFLI  EQU   NMNTFL
NMNTFUS  EQU   NMNTFL
@NM00026 EQU   NMNTFL
NMNTDT   EQU   NIPMNTPL+18
NMNTUCB  EQU   NMNTVS
NMNTDSA  EQU   NMNTDS
NIPSPEA  EQU   NIPSPE+4
NIPSPEQ  EQU   NIPSPE
@NM00025 EQU   NWTORLST+11
@NM00024 EQU   NWTORFL
NWTORFLB EQU   NWTORFL
@NM00023 EQU   NWTORFL
NWTORFLA EQU   NWTORFL
NMTORRDL EQU   NWTORLST+8
NWTORECB EQU   NWTORLST+4
NWTORRPA EQU   NWTORLST
@NM00022 EQU   NWTOFL
NWTOFLNC EQU   NWTOFL
NWTOFLNH EQU   NWTOFL
NWTOLNG  EQU   NWTOHDR
NVTLPAHA EQU   NVT+548
NVTLPALO EQU   NVT+544
NVTRMSG  EQU   NVT+540
NVTRLOCK EQU   NVT+536
NVTRCODE EQU   NVT+532
@NM00021 EQU   NVT+529
@NM00020 EQU   NVTFLPO
NVTFLWS  EQU   NVTFLPO
@NM00019 EQU   NVTFLPO
NVTSYSP  EQU   NVTFLPO
NVTFLLST EQU   NVTFLPO
NVTRSV48 EQU   NVT+524
NVTRSV47 EQU   NVT+520
NVTRSV46 EQU   NVT+516
@NM00018 EQU   NVT+512
NVTFASVT EQU   NVT+504
NVTRSV45 EQU   NVT+496
NVTRSV4A EQU   NVT+480
NVTRMSS  EQU   NVT+472
NVTRPQE  EQU   NVT+468
NVTRLLE  EQU   NVT+464
NVTRJPQ  EQU   NVT+460
NVTVMSS  EQU   NVT+456
NVTVPQE  EQU   NVT+452
NVTVLLE  EQU   NVT+448
NVTVJPQ  EQU   NVT+444
NVTLSEC  EQU   NVTLOCAT+4
NVTLFST  EQU   NVTLOCAT
NVTXSEC  EQU   NVTXCTL+4
NVTXFST  EQU   NVTXCTL
@NM00017 EQU   NVT+425
NVTLPACT EQU   NVT+424
NVTCSLPG EQU   NVT+420
NVTCSIOB EQU   NVT+416
NVTCSLNM EQU   NVT+412
NVTCSLIB EQU   NVT+408
NVTBLDL  EQU   NVT+404
NVTVRBLD EQU   NVT+400
@NM00016 EQU   NVT+392
NVTVRTCB EQU   NVT+388
NVTVVTCB EQU   NVT+384
NVTSPUCB EQU   NVT+382
NVTRSV44 EQU   NVT+380
NVTQSBUF EQU   NVT+376
NVTPAREA EQU   NVT+368
NVTRSV43 EQU   NVT+364
@NM00015 EQU   NVT+363
NVTABWS1 EQU   NVT+362
NVTABCD1 EQU   NVT+360
@NM00014 EQU   NVT+358
NVTCPUAD EQU   NVT+356
NVTTOD   EQU   NVT+352
NVTSPE   EQU   NVT+344
NVTMBEND EQU   NVT+340
NVTMBUF  EQU   NVT+336
NVTDCBSN EQU   NVT+332
NVTDCBOC EQU   NVT+328
NVTDCBIC EQU   NVT+324
@NM00013 EQU   NVT+308
NVTNMBLD EQU   NVT+304
NVTNIPM  EQU   NVT+292
NVTPRMPT EQU   NVT+272
NVTIX    EQU   NVTFLWSC
NVTFLWS1 EQU   NVTWPSW2+2
NVTIDPSW EQU   NVTWPSW2
NVTWPSW1 EQU   NVTWTPSW
NVTMCPSW EQU   NVT+216
@NM00012 EQU   NVT+212
@NM00011 EQU   NVTFLCN
NVTFLRAC EQU   NVTFLCN
NVTFLNCK EQU   NVTFLCN
NVTFLNHC EQU   NVTFLCN
NVTFLASM EQU   NVTFLCN
NVTMP    EQU   NVTFLCN
NVTFLIOC EQU   NVTFLCN
NVTFLAC  EQU   NVTFLCN
NVTFLSG  EQU   NVT+210
NVTTRACE EQU   NVT+208
NVTNXPTR EQU   NVT+204
NVTNXSIZ EQU   NVT+202
@NM00010 EQU   NVT+200
NVTSGPSA EQU   NVT+196
NVTN0MSG EQU   NVT+192
NVTNBFND EQU   NVT+184
NVTNUCND EQU   NVT+180
NVTSTMAP EQU   NVT+176
NVTRTMSA EQU   NVT+172
NVTMFASA EQU   NVT+168
NVTLSPQE EQU   NVT+164
NVTALSQA EQU   NVT+160
NVTPQSAV EQU   NVT+156
NVTSVC60 EQU   NVT+148
NVTABSEC EQU   NVTABSAV+4
NVTABFST EQU   NVTABSAV
NVTNVSQA EQU   NVT+138
NVTRSVMN EQU   NVT+136
NVTNBMIN EQU   NVT+134
NVTRGNAV EQU   NVT+132
NVTLSQNO EQU   NVT+130
NVTSQANO EQU   NVT+128
NVTLSQAS EQU   NVT+124
NVTLNGFX EQU   NVT+120
NVTIGXER EQU   NVT+116
@NM00009 EQU   NVT+112
NVTRSV49 EQU   NVT+108
NVTNVRSZ EQU   NVT+104
NVTMFA   EQU   NVT+100
NVTDSSNG EQU   NVT+96
NVTMSLNK EQU   NVT+92
NVTVVMDI EQU   NVT+88
NVTIGCER EQU   NVT+84
NVTVBLDL EQU   NVT+80
NVTSVCTB EQU   NVT+76
NVTRSV42 EQU   NVT+72
NVTRSV41 EQU   NVT+68
NVTMASCB EQU   NVT+64
NVTCMTCB EQU   NVT+60
NVTMSTCB EQU   NVT+56
@NM00008 EQU   NVTFLLB
NVTFLSLB EQU   NVTFLLB
@NM00007 EQU   NVTNPATR
NVTNPREU EQU   NVTNPREN
@NM00006 EQU   NVTNPREN
NVTNPSFX EQU   NVT+53
@NM00005 EQU   NVT+52
NVTNPSUF EQU   NVT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00004 EQU   CVTFIX+248
@NM00003 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
PVTEND   EQU   PVT+1840
PVTSPARE EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTCIOQL EQU   PVTQS+36
PVTCIOQF EQU   PVTQS+32
PVTGFADL EQU   PVTQS+28
PVTGFADF EQU   PVTQS+24
PVTFPCBL EQU   PVTQS+20
PVTFPCBF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTRESV4 EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
PVTFLAG2 EQU   PVT+1
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTRESV1 EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
PQERSVD  EQU   PQESECT+31
@NM00002 EQU   VMMFLGS
PQEHRID  EQU   PQESECT+29
PQERFLGS EQU   PQESECT+28
PQETCB   EQU   PQESECT+16
PQEBPQE  EQU   PQESECT+12
PQEFPQE  EQU   PQESECT+8
PQEBFBQE EQU   PQESECT+4
FQERSVD  EQU   FQESECT+12
FQAREA   EQU   FQESECT+8
FQEPTRA  EQU   FQEPTR+1
FQECPB   EQU   FQTYPE
FQERGNFL EQU   FQTYPE
DQEHRID  EQU   DQEBLKAD
DQEPTR   EQU   DQESECT+4
SPQERES2 EQU   SPQESECT+12
SPQEKEY  EQU   SPQESECT+11
SPQEID   EQU   SPQESECT+10
SPQERES1 EQU   SPQESECT+9
SPQEOWN  EQU   SPQEFLGS
LASTSPQE EQU   SPQEFLGS
SPSHARE  EQU   SPQEFLGS
SPQEPTR  EQU   SPQEAD
SCANN    EQU   SCAN
@NM00102 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00101 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00100 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00099 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00098 EQU   FLCFSA
@NM00097 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00096 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00095 EQU   FLCIOA
@NM00094 EQU   FLCMCLA+15
@NM00093 EQU   FLCMCLA+14
@NM00092 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00091 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00090 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00089 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00088 EQU   FLCPER
@NM00087 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00086 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00085 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00084 EQU   FLCPIILC
@NM00083 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00082 EQU   FLCSVILC
@NM00081 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00080 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00079 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00157 EQU   NP8SQOK
@RT00166 EQU   NP8SQOK
@RF00166 EQU   NP8SQINV
@RT00172 EQU   NP8SQAEX
@RT00176 EQU   NP8NSQAP
@RT00233 EQU   FREIT
@RT00308 EQU   NP8SQINV
@RT00313 EQU   NP8SQOK
@RF00313 EQU   NP8SQINV
@RT00328 EQU   NP8CSAOK
@RF00328 EQU   NP8CSINV
@RT00336 EQU   W
@RT00351 EQU   NC
@RT00407 EQU   NP8CSINV
@RT00412 EQU   NP8CSAOK
@RF00412 EQU   NP8CSINV
@RT00428 EQU   NP8VROK
@RF00428 EQU   NP8VRINV
@RT00438 EQU   NP8RLOK
@RF00438 EQU   NP8RLINV
@RT00494 EQU   NP8RLINV
@RT00499 EQU   NP8RLOK
@RF00499 EQU   NP8RLINV
@RT00547 EQU   NP8VRINV
@RT00552 EQU   NP8VROK
@RF00552 EQU   NP8VRINV
@RT00561 EQU   NPXVNUMB
@RT00563 EQU   NPXVNUMB
@RT00565 EQU   NPXVNUMB
@RT00567 EQU   NPXVNUMB
@RT00571 EQU   NPXVNINV
@RT00579 EQU   NPXVNINV
@ENDDATA EQU   *
         END   IEAVNP08,(C'PLS0836',0701,76086)
