         TITLE '***IEAVGPRR---IEAVPRT0 FUNCTIONAL RECOVERY RTN***      *
                        '
*                        /* @ZA01896*/
IEAVGPRR CSECT
   BALR  RBASE,@00                     SET UP ADDRESSABILITY
   USING *,RBASE
        MODID
*   GPR02F=GPR00F;                  /* SAVE FRR WORKAREA PTR IN    0083
*                                      USEABLE REG           @ZA01896*/
         LR    GPR02F,GPR00F                                       0083
*   GPR03F=GPR01F->SDWAPARM->LDAADD;/* GET LDA ADDRESS       @ZA01896*/
         L     @12,SDWAPARM(,GPR01F)                               0084
         L     GPR03F,LDAADD(,@12)                                 0084
*   IF GPR03F=0 THEN                /* IF THERE IS NO LDA ADDRESS, 0085
*                                      THEN THE ERROR OCCURRED IN THE
*                                      MAINLINE BEFORE THE FRR 6   0085
*                                      WORDS COULD BE INITIALIZED, OR
*                                      THEY WERE CLOBBERED   @ZA01896*/
         LTR   GPR03F,GPR03F                                       0085
         BNZ   @RF00085                                            0085
*     DO;                           /* PERCOLATE IF THIS IS SO     0086
*                                                            @ZA01896*/
*       RFY                                                        0087
*         SDWA BASED(GPR01F);       /*                       @ZA01896*/
*       SDWARCDE=SDWACWT;           /*                       @ZA01896*/
         MVI   SDWARCDE(GPR01F),X'00'                              0088
*       RFY                                                        0089
*         SDWA BASED(SDWAPTR);      /*                       @ZA01896*/
*       GOTO RET1;                  /* RETURN PROCESSING     @ZA01896*/
         B     RET1                                                0090
*     END;                          /*                       @ZA01896*/
*/********************************************************************/
*/*                                                                  */
*/*  SAVE LDA FIELDS USED BY GETPART/FREEPART MAINLINE SO THEY WONT  */
*/*  BE CLOBBERED BY THE GETMAIN AND FREEMAIN IN THIS MODULE.        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0092
*   RFY                                                            0092
*     FRRSAVE BASED(GPR02F);        /*                       @ZA01896*/
@RF00085 DS    0H                                                  0093
*   RFY                                                            0093
*     LDA BASED(GPR03F);            /*                       @ZA01896*/
*   SAVBRSV=BRANCHSV;               /*                       @ZA01896*/
         MVC   SAVBRSV(64,GPR02F),BRANCHSV(GPR03F)                 0094
*   SAVTCB=LDATCB;                  /*                       @ZA01896*/
         L     @12,LDATCB(,GPR03F)                                 0095
         ST    @12,SAVTCB(,GPR02F)                                 0095
*   SAVRQSTA=LDARQSTA;              /*                       @ZA01896*/
         L     @12,LDARQSTA(,GPR03F)                               0096
         ST    @12,SAVRQSTA(,GPR02F)                               0096
*   SAVFLAG=LVSMFLAG;               /*                       @ZA01896*/
         MVC   SAVFLAG(4,GPR02F),LVSMFLAG(GPR03F)                  0097
*   SAVCBSP=LDACBSP;                /*                       @ZA01896*/
         IC    @12,LDACBSP(,GPR03F)                                0098
         STC   @12,SAVCBSP(,GPR02F)                                0098
*   RFY                                                            0099
*     LDA BASED(LDAPTR);            /*                       @ZA01896*/
*   GENERATE REFS(SCVTRMBR,SCVTSECT,PSAAOLD,PSATOLD);              0100
*                                                    /* @ZA01896*/
   L     @00,@SIZDATD                  SIZE FOR DYNAMIC STG
   ICM   @00,B'1000',XFF               SUBPOOL 255
   LR    @05,@01
   L     GPR04F,PSATOLD                TCB ADDRESS
   L     GPR07F,PSAAOLD                ASCB ADDRESS
   LR    @06,@14                       SAVE RETURN REG
   GETMAIN  R,LV=(0),BRANCH=YES        GET DYNAMIC STORAGE
   LR    @08,@01                       DATA REGISTER
   USING @DATD,@08
   ST    @05,SDWAPTR                   INPUT PARAMETER
   ST    @06,R14SAVE
*   WRKPTR=GPR02F;                  /* SAVE FRR WORKAREA PTR @ZA01896*/
         ST    GPR02F,WRKPTR                                       0101
*   PARMBASE=SDWAPARM;              /* FRR PARM AREA BASE            */
         L     @12,SDWAPTR                                         0102
         L     @11,SDWAPARM(,@12)                                  0102
         ST    @11,PARMBASE                                        0102
*   SDWAMODN=MODN;                  /* MODULE NAME           @YM07262*/
         MVC   SDWAMODN(8,@12),MODN                                0103
*   SDWACSCT=MODN;                  /* CSECT NAME            @YM07262*/
         MVC   SDWACSCT(8,@12),MODN                                0104
*   SDWAREXN=REXN;                  /* FRR ROUTINE NAME      @YM07262*/
         MVC   SDWAREXN(8,@12),REXN                                0105
*   LDAPTR=LDAADD;                  /* LDA BASE                      */
         L     @11,LDAADD(,@11)                                    0106
         ST    @11,LDAPTR                                          0106
*   TCBPTR=LDATCB;                  /* TCB ADDRESS                   */
         L     TCBPTR,LDATCB(,@11)                                 0107
*   GDAPTR=CVTGDA;                  /* GDA BASE                      */
         L     @05,CVTPTR                                          0108
         L     @05,CVTGDA(,@05)                                    0108
         ST    @05,GDAPTR                                          0108
*   RASCB=PASCBSV;                  /* ASCB ADDRESS                  */
         L     RASCB,PASCBSV(,@11)                                 0109
*   SDWARCRD='1'B;                  /* INDICATE RECORDING DESIRED    */
         OI    SDWARCRD(@12),B'10000000'                           0110
*   IF SDWAFMID^=SAME THEN          /* IF THIS MEMORY NOT FAILING  0111
*                                      MEMORY, PERCOLATE             */
         LH    @11,SDWAFMID(,@12)                                  0111
         N     @11,@CF02485                                        0111
         CH    @11,SAME                                            0111
         BE    @RF00111                                            0111
*     DO;                                                          0112
*       SDWARCDE=SDWACWT;           /* NO RETRY                      */
         MVI   SDWARCDE(@12),X'00'                                 0113
*       GOTO RET;                   /* RETURN PROCESSING             */
         B     RET                                                 0114
*     END;                                                         0115
*   SDWAUPRG='1'B;                  /* REGS UPDATED FOR RETRY        */
@RF00111 L     @12,SDWAPTR                                         0116
         OI    SDWAUPRG(@12),B'00001000'                           0116
*   IF GPFPFLG='1'B THEN            /* IF GETPART REQUEST,BRANCH     */
         L     @11,PARMBASE                                        0117
         TM    GPFPFLG(@11),B'00000001'                            0117
         BO    @RT00117                                            0117
*     GOTO GPFRR;                   /* GO TO GETPART PROCESS         */
*   IF RECURSE='1'B THEN            /* IF THIS IS RECURSION ENTRY,   */
         TM    RECURSE(@11),B'00001000'                            0119
         BO    @RT00119                                            0119
*     GOTO RECRS1;                  /* DO NOT RETRY                  */
*   ELSE                            /* NON-RECURSION                 */
*     RECURSE='1'B;                 /* SET ON BIT FOR RECURSION      */
         OI    RECURSE(@11),B'00001000'                            0121
*   IF SDWAPERC='0'B THEN           /* ONLY IF NOT PERCOLATION       */
         TM    SDWAPERC(@12),B'00010000'                           0122
         BNZ   @RF00122                                            0122
*     IF SDWAMCHK='1'B×SDWAPCHK='1'B THEN/* THESE ARE RETRYABLE    0123
*                                      ERRORS                        */
         TM    SDWAMCHK(@12),B'11000000'                           0123
         BNZ   @RT00123                                            0123
*       GOTO RETRY;                 /* RETRY                         */
*   IF SDWACMPC=O82 THEN            /* IF ERROR IS BAD RETURN FROM 0125
*                                      SETLOCK, DO NOT FREE SALLOC   */
@RF00122 L     @12,SDWAPTR                                         0125
         CLC   SDWACMPC(3,@12),O82                                 0125
         BE    @RT00125                                            0125
*     GOTO RECRSION;                /* DO NOT RETRY ABENDS           */
*RECRS1:                                                           0127
*   SDWASALL='1'B;                  /* INDICATE TO FREE LOCKS        */
RECRS1   L     @12,SDWAPTR                                         0127
         OI    SDWASALL(@12),B'00000100'                           0127
*RECRSION:                                                         0128
*   IF SDWAPCHK='1'B THEN           /* IF PGM CHECK, SET UP TO ISSUE
*                                      SDUMP                         */
RECRSION L     @12,SDWAPTR                                         0128
         TM    SDWAPCHK(@12),B'01000000'                           0128
         BNO   @RF00128                                            0128
*     DO;                                                          0129
*       GPR13F=ADDR(SAVEAR);                                       0130
         L     GPR13F,LDAPTR                                       0130
         LA    GPR13F,SAVEAR(,GPR13F)                              0130
*       GPR15F=PSAAOLD;                                            0131
         L     GPR15F,PSAAOLD                                      0131
*       GPR01F=ADDR(LFSDUMP2);                                     0132
         LA    GPR01F,LFSDUMP2                                     0132
*       LFSDUMP2=LFSDUMP;                                          0133
         MVC   LFSDUMP2(24),LFSDUMP                                0133
*       GENERATE;                                                  0134
  SDUMP  ASID=ASCBASID(15),SDATA=(PSA,NUC,LSQA),BRANCH=YES,MF=(E,(1))
*     END;                                                         0135
*   TCBPQE=ZERO;                    /* CLEAN UP                      */
@RF00128 L     @12,ZERO                                            0136
         ST    @12,TCBPQE(,TCBPTR)                                 0136
*   TCBMSS=ZERO;                    /* ZERO SUBPOOLS PTR             */
         ST    @12,TCBMSS(,TCBPTR)                                 0137
*   SDWARCDE=SDWACWT;               /* DO NOT RETRY                  */
         L     @12,SDWAPTR                                         0138
         MVI   SDWARCDE(@12),X'00'                                 0138
*RET:                               /*                       @ZA01896*/
*   WORKREG=WRKPTR;                 /* RETURN PROCESSING. RESTORE FRR
*                                      WORKAREA POINTER.     @ZA01896*/
RET      L     WORKREG,WRKPTR                                      0139
*   RFY                                                            0140
*     FRRSAVE BASED(WORKREG);       /*                       @ZA01896*/
*   GENERATE REFS(SCVTRMBR,SCVTSECT,PSAAOLD,PSATOLD);              0141
   L    @00,@SIZDATD
   L    @04,PSATOLD
   L    @05,SDWAPTR                    RESTORE SDWA POINTER
   L    @07,PSAAOLD
   L    @02,R14SAVE                     RETURN ADDRESS
   FREEMAIN  RC,LV=(0),A=(REG8),SP=255,BRANCH=YES  FREE DYNAMIC STG
*   GPR01F=RDATASAV;                /* RESTORE REG 1                 */
         LR    GPR01F,RDATASAV                                     0142
*   RRETURN=GPR02F;                                                0143
*                                                                  0143
         LR    RRETURN,GPR02F                                      0143
*/********************************************************************/
*/*                                                                  */
*/*  RESTORE LDA FIELDS SAVED PREVIOUSLY.                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0144
*   GPR03F=GPR01F->SDWAPARM->LDAADD;/* GET LDA PTR           @ZA01896*/
         L     @12,SDWAPARM(,GPR01F)                               0144
         L     GPR03F,LDAADD(,@12)                                 0144
*   RFY                                                            0145
*     LDA BASED(GPR03F);            /*                       @ZA01896*/
*   BRANCHSV=SAVBRSV;               /*                       @ZA01896*/
         MVC   BRANCHSV(64,GPR03F),SAVBRSV(WORKREG)                0146
*   LDATCB=SAVTCB;                  /*                       @ZA01896*/
         L     @12,SAVTCB(,WORKREG)                                0147
         ST    @12,LDATCB(,GPR03F)                                 0147
*   LDARQSTA=SAVRQSTA;              /*                       @ZA01896*/
         L     @12,SAVRQSTA(,WORKREG)                              0148
         ST    @12,LDARQSTA(,GPR03F)                               0148
*   LVSMFLAG=SAVFLAG;               /*                       @ZA01896*/
         MVC   LVSMFLAG(4,GPR03F),SAVFLAG(WORKREG)                 0149
*   LDACBSP=SAVCBSP;                /*                       @ZA01896*/
         IC    @12,SAVCBSP(,WORKREG)                               0150
         STC   @12,LDACBSP(,GPR03F)                                0150
*   RFY                                                            0151
*     LDA BASED(LDAPTR);            /*                       @ZA01896*/
*RET1:                                                             0152
*   GENERATE;                                                      0152
*                                                                  0152
RET1     DS    0H                                                  0152
*                                /* BRANCH HERE IF NO LDA @ZA01896*/
   BR    RRETURN                        RETURN
*/********************************************************************/
*/*                  RETRYABLE V=V FREEPART'S                        */
*/*                       PROGRAM CHECKS, MACHINE CHECKS             */
*/********************************************************************/
*                                                                  0153
*RETRY:                                                            0153
*   IF VERREQ='1'B THEN             /* IF REQUEST WAS V=R,           */
RETRY    L     @12,LDAPTR                                          0153
         TM    VERREQ(@12),B'00000010'                             0153
         BO    @RT00153                                            0153
*     GOTO FREERL;                  /* PROCEED TO V=R FP PROCESSING  */
*/*                                                                  */
*/********************************************************************/
*/*     IF THIS IS A RETRYABLE V=V FREEPART, THEN IF REGION SPACE    */
*/*       HAS NOT ALREADY BEEN FREED, RETRY AT BEGINNING OF ROUTINE  */
*/********************************************************************/
*                                                                  0155
*   IF ZPFLG='0'B THEN                                             0155
         L     @12,PARMBASE                                        0155
         TM    ZPFLG(@12),B'00000010'                              0155
         BZ    @RT00155                                            0155
*     GO TO GPRETSET;               /* GO SETUP FOR RETRY AT GPRETRY */
*/********************************************************************/
*/*     IF REGION SPACE ALREADY FREED, REENTER ROUTINE TO RESTORE    */
*/*       ADDRESS SPACE CONTROL BLOCKS                               */
*/********************************************************************/
*                                                                  0157
*   ELSE                                                           0157
*     SDWARTYA=ADDR(ZEROPTRS);      /* RETRY ADDRESS                 */
         L     @12,SDWAPTR                                         0157
         L     @11,@CV02262                                        0157
         ST    @11,SDWARTYA(,@12)                                  0157
*   SDWARCDE=SDWARETY;              /* INDICATE RETRY                */
         MVI   SDWARCDE(@12),X'04'                                 0158
*   GOTO RET;                       /* RETURN PROCESSING             */
         B     RET                                                 0159
*/*                                                                  */
*/********************************************************************/
*/*                         RETRYABLE V=R FREEPART'S                 */
*/*     DETERMINE THE STEP OF THE FREEPART PROCESSING THAT CONTAINED */
*/*     THE ERROR BY CHECKING FOOTPRINTS IN THE FRR PARAMETER AREA,  */
*/*     AND RETRY AT BEGINNING OF THAT STEP. LOGICAL STEPS ARE       */
*/*     (1)ADDING REGION SPACE BACK TO V=R STORAGE Q'S (2)ADDING     */
*/*     REGION SPACE BACK TO RSM'S STORAGE Q'S (3)ADDING REGION SPACE*/
*/*     BACK TO ADDRESS SPACE Q'S (4) ZERO APPROPRIATE TCB AND       */
*/*     LDA FIELDS (5)CHECK FOR WAITING REQUESTS WHICH MIGHT         */
*/*     BE HONORED (6)DEQUEUE A WAITING REQUEST FROM VRWAITQ.        */
*/********************************************************************/
*                                                                  0160
*FREERL:                                                           0160
*   IF VEQRDONE='1'B THEN                                          0160
FREERL   L     @12,PARMBASE                                        0160
         TM    VEQRDONE(@12),B'00010000'                           0160
         BNO   @RF00160                                            0160
*     IF RSMDONE='1'B THEN                                         0161
         TM    RSMDONE(@12),B'10000000'                            0161
         BNO   @RF00161                                            0161
*       IF ASDONE='1'B THEN                                        0162
         TM    ASDONE(@12),B'01000000'                             0162
         BNO   @RF00162                                            0162
*         IF ZPFLG='1'B THEN                                       0163
         TM    ZPFLG(@12),B'00000010'                              0163
         BNO   @RF00163                                            0163
*           IF FPFLG='1'B THEN                                     0164
         TM    FPFLG(@12),B'00000100'                              0164
         BNO   @RF00164                                            0164
*             IF DEQFLG='1'B THEN                                  0165
         TM    DEQFLG(@12),B'10000000'                             0165
         BNO   @RF00165                                            0165
*               SDWARTYA=ADDR(DEQUEUE);                            0166
         L     @12,@CV02263                                        0166
         L     @11,SDWAPTR                                         0166
         ST    @12,SDWARTYA(,@11)                                  0166
*             ELSE                                                 0167
*               DO;                                                0167
         B     @RC00165                                            0167
@RF00165 DS    0H                                                  0168
*                 SDWASR04=LDAADD;                                 0168
         L     @12,SDWAPTR                                         0168
         L     @11,PARMBASE                                        0168
         L     @11,LDAADD(,@11)                                    0168
         ST    @11,SDWASR04(,@12)                                  0168
*                 SDWASR14=ADDR(WORKAREA);                         0169
         L     @11,LDAPTR                                          0169
         LA    @11,WORKAREA(,@11)                                  0169
         ST    @11,SDWASR14(,@12)                                  0169
*                 SDWARTYA=ADDR(GPRETURN);                         0170
         L     @11,@CV02264                                        0170
         ST    @11,SDWARTYA(,@12)                                  0170
*               END;                                               0171
*           ELSE                                                   0172
*             SDWARTYA=ADDR(ZEROPTRS);                             0172
         B     @RC00164                                            0172
@RF00164 L     @12,@CV02262                                        0172
         L     @11,SDWAPTR                                         0172
         ST    @12,SDWARTYA(,@11)                                  0172
*         ELSE                                                     0173
*           DO;                                                    0173
         B     @RC00163                                            0173
@RF00163 DS    0H                                                  0174
*             SDWASR04=LDAADD;                                     0174
         L     @12,SDWAPTR                                         0174
         L     @11,PARMBASE                                        0174
         L     @11,LDAADD(,@11)                                    0174
         ST    @11,SDWASR04(,@12)                                  0174
*             SDWASR08=LDATCB;                                     0175
         L     @11,LDAPTR                                          0175
         L     @05,LDATCB(,@11)                                    0175
         ST    @05,SDWASR08(,@12)                                  0175
*             SDWASR07=VRPQEP;                                     0176
         L     @05,GDAPTR                                          0176
         L     @05,VRPQEP(,@05)                                    0176
         ST    @05,SDWASR07(,@12)                                  0176
*             SDWASR14=ADDR(WORKAREA);                             0177
         LA    @11,WORKAREA(,@11)                                  0177
         ST    @11,SDWASR14(,@12)                                  0177
*             SDWARTYA=ADDR(ZEROPTRS);                             0178
         L     @11,@CV02262                                        0178
         ST    @11,SDWARTYA(,@12)                                  0178
*           END;                                                   0179
*       ELSE                                                       0180
*         SDWARTYA=ADDR(FREEASQ);                                  0180
         B     @RC00162                                            0180
@RF00162 L     @12,@CV02261                                        0180
         L     @11,SDWAPTR                                         0180
         ST    @12,SDWARTYA(,@11)                                  0180
*     ELSE                                                         0181
*       SDWARTYA=ADDR(FREERSM);                                    0181
         B     @RC00161                                            0181
@RF00161 L     @12,@CV02260                                        0181
         L     @11,SDWAPTR                                         0181
         ST    @12,SDWARTYA(,@11)                                  0181
*   ELSE                                                           0182
*     IF DEQFLG='1'B THEN           /* IF DEQUEUE IN PROCESS FOR   0182
*                                      ELEMENT ON VRWAITQ OR VRPOSTQ,
*                                      RETRY AT DEQUEUE STEP         */
         B     @RC00160                                            0182
@RF00160 L     @12,PARMBASE                                        0182
         TM    DEQFLG(@12),B'10000000'                             0182
         BNO   @RF00182                                            0182
*       SDWARTYA=ADDR(DEQUEUE);                                    0183
         L     @12,@CV02263                                        0183
         L     @11,SDWAPTR                                         0183
         ST    @12,SDWARTYA(,@11)                                  0183
*     ELSE                                                         0184
*       GO TO GPRETSET;             /* GO SETUP FOR RETRY AT GPRETRY */
*   SDWARCDE=SDWARETY;              /* INDICATE RETRY                */
@RC00160 L     @12,SDWAPTR                                         0185
         MVI   SDWARCDE(@12),X'04'                                 0185
*   GOTO RET;                       /* RETURN PROCESS                */
         B     RET                                                 0186
*/*                                                                  */
*/********************************************************************/
*/*                     GETPART ERRORS                               */
*/********************************************************************/
*                                                                  0187
*GPFRR:                                                            0187
*   IF VERREQ='1'B THEN             /* IF REQUEST WAS V=R,           */
GPFRR    L     @12,LDAPTR                                          0187
         TM    VERREQ(@12),B'00000010'                             0187
         BO    @RT00187                                            0187
*     GOTO GETRL;                   /* PROCEED TO V=R GP ACTION      */
*   IF GPSSW='1'B THEN              /* IF SPECIFIC V=V GETPART     0189
*                                      REQUEST, READJUST ADDRESS   0189
*                                      SPACE CONTROL BLOCKS TO TIME 0*/
         TM    GPSSW(@12),B'00001000'                              0189
         BNO   @RF00189                                            0189
*     DO;                                                          0190
*       TCBRV='0'B;                                                0191
         NI    TCBRV(TCBPTR),B'01111111'                           0191
*       VVREGSZ=ZERO;                                              0192
         L     @11,ZERO                                            0192
         ST    @11,VVREGSZ(,@12)                                   0192
*       PQESEPTR=LDASRPQE;                                         0193
         L     @11,LDASRPQE(,@12)                                  0193
         ST    @11,PQESEPTR                                        0193
*       SRSIZE=PQESIZE;                                            0194
         L     SRSIZE,PQESIZE(,@11)                                0194
*       PQESEPTR=ASDPQE;                                           0195
         L     @12,ASDPQE(,@12)                                    0195
         ST    @12,PQESEPTR                                        0195
*       PQESIZE=PASIZE-SRSIZE;                                     0196
         L     @11,GDAPTR                                          0196
         L     @07,PASIZE(,@11)                                    0196
         SLR   @07,SRSIZE                                          0196
         ST    @07,PQESIZE(,@12)                                   0196
*       PQEREGN=PASTRT+SRSIZE;                                     0197
         L     @11,PASTRT(,@11)                                    0197
         LR    @07,SRSIZE                                          0197
         ALR   @07,@11                                             0197
         ST    @07,PQEREGN(,@12)                                   0197
*       FBQESPTR=PQEFFBQE;                                         0198
         L     FBQESPTR,PQEFFBQE(,@12)                             0198
*       SIZE=FBQAREA-PASTRT-SRSIZE+SIZE;                           0199
         LCR   @11,@11                                             0199
         AL    @11,FBQAREA(,FBQESPTR)                              0199
         SLR   @11,SRSIZE                                          0199
         AL    @11,SIZE(,FBQESPTR)                                 0199
         ST    @11,SIZE(,FBQESPTR)                                 0199
*       FBQAREA=PASTRT+SRSIZE;                                     0200
         ST    @07,FBQAREA(,FBQESPTR)                              0200
*     END;                                                         0201
*   IF RECURSE='1'B×SDWAPERC='1'B THEN/* ENTERED FOR RECURSION?      */
@RF00189 L     @12,PARMBASE                                        0202
         TM    RECURSE(@12),B'00001000'                            0202
         BO    @RT00202                                            0202
         L     @12,SDWAPTR                                         0202
         TM    SDWAPERC(@12),B'00010000'                           0202
         BO    @RT00202                                            0202
*     GOTO RECRSION;                /* HANDLE RECURSION ENTRY        */
*   IF SDWAPCHK='0'B&SDWAMCHK='0'B THEN/* IF NOT A PGM CHK AND NOT A
*                                      MACHINE CHK                   */
         TM    SDWAPCHK(@12),B'11000000'                           0204
         BZ    @RT00204                                            0204
*     GOTO RECRSION;                /* ERROR NOT RETRYABLE           */
*   TCBPQE=ZERO;                    /* IF RETRYABLE, RESTORE ORIGINAL
*                                      ENVIRONMENT AND RETRY AT    0206
*                                      BEGINNING                     */
@RF00204 L     @12,ZERO                                            0206
         ST    @12,TCBPQE(,TCBPTR)                                 0206
*   RECURSE='1'B;                   /* SET FLAG TO STOP RECURSIONS   */
*                                                                  0207
         L     @12,PARMBASE                                        0207
         OI    RECURSE(@12),B'00001000'                            0207
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP TO RETRY AT LOCATION GPRETRY IN IEAVPRT0                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*GPRETSET:                                                         0208
*   SDWASR04=LDAADD;                /* GET ADDRESS OF LDA     YM07262*/
GPRETSET L     @12,SDWAPTR                                         0208
         L     @11,PARMBASE                                        0208
         L     @05,LDAADD(,@11)                                    0208
         ST    @05,SDWASR04(,@12)                                  0208
*   SDWASR09=PRT0BASE;              /* GET R9 FOR GPRETRY     YM07262*/
         L     @11,PRT0BASE(,@11)                                  0209
         ST    @11,SDWASR09(,@12)                                  0209
*   SDWASR14=ADDR(WORKAREA);        /* GET WORK AREA ADDRESS  YM07262*/
         L     @11,LDAPTR                                          0210
         LA    @11,WORKAREA(,@11)                                  0210
         ST    @11,SDWASR14(,@12)                                  0210
*   SDWASR13=SDWASR04->GMBASE2;     /* GET GETMAINS R13       YM07262*/
         L     @11,GMBASE2(,@05)                                   0211
         ST    @11,SDWASR13(,@12)                                  0211
*   SDWASR01=SDWASR04->SAVE1FRR;    /* GET R1 AS IT WAS ON INPUT TO
*                                      GETPART                YM07262*/
         L     @05,SAVE1FRR(,@05)                                  0212
         ST    @05,SDWASR01(,@12)                                  0212
*   SDWASR08=SDWASR13-4096;         /* ADJUST TO OTHER BASE REG    0213
*                                                             YM07262*/
         SL    @11,@CF02438                                        0213
         ST    @11,SDWASR08(,@12)                                  0213
*   SDWASR03=CVTPTR;                /* GET R3 FOR RETRY       YM07262*/
         L     @11,CVTPTR                                          0214
         ST    @11,SDWASR03(,@12)                                  0214
*   SDWARTYA=ADDR(GPRETRY);         /* ADDRESS TO RETRY AT    YM07262*/
         L     @11,@CV02271                                        0215
         ST    @11,SDWARTYA(,@12)                                  0215
*   SDWARCDE=SDWARETY;              /* INDICATE RETRY                */
         MVI   SDWARCDE(@12),X'04'                                 0216
*   GOTO RET;                       /* RETURN PROCESSING             */
         B     RET                                                 0217
*/*                                                                  */
*/********************************************************************/
*/*                        V=R GETPART RETRYABLE ERRORS              */
*/*    FOR RETRYABLE ERRORS, DETERMINE STEP THAT ALLOCATION STOPPED  */
*/*    AT, CLEAN UP PARTIAL PROCESSING OF THE ERROR STEP, AND RETRY  */
*/*    AT THAT STEP. THE LOGICAL STEPS ARE (1)ELEMENT IN PROCESS     */
*/*    OF BEING ENQUEUED ON VRWAITQ, (2)REGION ALLOCATION PERFORMED  */
*/*    FROM RSM QUEUES, (3)REGION SPACE SUBTRACTED FROM ADDRESS      */
*/*    SPACE QUEUES, (4)REGION SPACE SUBTRACTED FROM V=R QUEUES,     */
*/*    (5)FBQE, DPQE, PQE BUILT FOR V=R REGION, (6)CHECK MADE FOR    */
*/*    WAITING V=R REQUESTS WHICH MIGHT NOW BE HONORED, (7)DEQUEUE OF*/
*/*    ELEMENT FROM VRWAITQ IN PROCESS.                              */
*/********************************************************************/
*                                                                  0218
*GETRL:                                                            0218
*   IF SDWAMCHK='1'B×SDWAPCHK='1'B THEN/* ONLY RETRY PGM CHKS OR   0218
*                                      MACHINE CHKS                  */
GETRL    L     @12,SDWAPTR                                         0218
         TM    SDWAMCHK(@12),B'11000000'                           0218
         BZ    @RF00218                                            0218
*     DO;                                                          0219
*       IF RECURSE='1'B×SDWAPERC='1'B THEN/* IF RECURSION, CAN'T ETRY
*                                      AND IF PERCOLATION, DON'T   0220
*                                      RETRY                         */
         L     @11,PARMBASE                                        0220
         TM    RECURSE(@11),B'00001000'                            0220
         BO    @RT00220                                            0220
         TM    SDWAPERC(@12),B'00010000'                           0220
         BNO   @RF00220                                            0220
@RT00220 DS    0H                                                  0221
*         DO;                                                      0221
*           IF SDWAPCHK='1'B THEN   /* ISSUE SDUMP FOR PGM CHECKS  0222
*                                      THAT ARE NOT SUCCESSFULLY   0222
*                                      RETRIED                       */
         L     @12,SDWAPTR                                         0222
         TM    SDWAPCHK(@12),B'01000000'                           0222
         BNO   @RF00222                                            0222
*             DO;                                                  0223
*               GPR13F=ADDR(SAVEAR);                               0224
         L     GPR13F,LDAPTR                                       0224
         LA    GPR13F,SAVEAR(,GPR13F)                              0224
*               GPR15F=PSAAOLD;                                    0225
         L     GPR15F,PSAAOLD                                      0225
*               GPR01F=ADDR(LFSDUMP2);                             0226
         LA    GPR01F,LFSDUMP2                                     0226
*               LFSDUMP2=LFSDUMP;                                  0227
         MVC   LFSDUMP2(24),LFSDUMP                                0227
*               GENERATE;                                          0228
  SDUMP  ASID=ASCBASID(15),SDATA=(PSA,NUC,LSQA,SQA),BRANCH=YES,       **
               MF=(E,(1))
*             END;                                                 0229
*           GOTO OTHRERRS;          /* GO CLEAN UP ADDRESS SPACE     */
         B     OTHRERRS                                            0230
*         END;                                                     0231
*       RECURSE='1'B;                                              0232
@RF00220 L     @12,PARMBASE                                        0232
         OI    RECURSE(@12),B'00001000'                            0232
*       IF WENQFLG='1'B THEN        /* PROCESSING WAS INTERRUPTED  0233
*                                      WHILE ENQUEUING AN ELEMENT ON
*                                      VRWAITQ                       */
         TM    WENQFLG(@12),B'01000000'                            0233
         BNO   @RF00233                                            0233
*         DO;                                                      0234
*           SDWARCDE=SDWARETY;                                     0235
         L     @12,SDWAPTR                                         0235
         MVI   SDWARCDE(@12),X'04'                                 0235
*WENQFIX:                                                          0236
*           ELBASE=SDWASR01;        /* REG 1 CONTAINS PTR TO ELEMENT
*                                      THAT WAS BEING ENQUEUED       */
WENQFIX  L     @12,SDWAPTR                                         0236
         L     ELBASE,SDWASR01(,@12)                               0236
*FIX:                                                              0237
*           IF VRWFEL=ELBASE THEN   /* IF ELEMENT 1ST ON QUEUE,      */
FIX      L     @12,GDAPTR                                          0237
         C     ELBASE,VRWFEL(,@12)                                 0237
         BNE   @RF00237                                            0237
*             DO;                                                  0238
*               IF ELBASE->WPNEXTEL^=ZERO THEN/* AND NOT ONLY      0239
*                                      ELEMENT,                      */
         L     @12,WPNEXTEL(,ELBASE)                               0239
         C     @12,ZERO                                            0239
         BE    @RF00239                                            0239
*                 DO;               /* CHAIN IT PROPERLY             */
*                   WPQLPTR=ELBASE->WPNEXTEL;                      0241
         LR    WPQLPTR,@12                                         0241
*                   WPPREVEL=ELBASE;                               0242
         ST    ELBASE,WPPREVEL(,WPQLPTR)                           0242
*                   GOTO UNLRET;    /* DETERMINE RETRY               */
         B     UNLRET                                              0243
*                 END;                                             0244
*               ELSE                /* IF IT IS ONLY EL ON Q, CHAIN
*                                      IT AS LAST EL                 */
*                 VRWLEL=ELBASE;                                   0245
@RF00239 L     @12,GDAPTR                                          0245
         ST    ELBASE,VRWLEL(,@12)                                 0245
*UNLRET:                                                           0246
*               IF SDWARCDE^=SDWARETY THEN/* IF WENQFIX WAS ENTERED
*                                      FROM OTHRERRS FOR CLEAN-UP, DO
*                                      NOT RETRY                     */
UNLRET   L     @12,SDWAPTR                                         0246
         CLI   SDWARCDE(@12),4                                     0246
         BNE   @RT00246                                            0246
*                 GOTO RET;         /* RETURN                        */
*               SDWARTYA=ADDR(UNL); /* RETRY AT UNL                  */
         L     @11,@CV02269                                        0248
         ST    @11,SDWARTYA(,@12)                                  0248
*               GOTO RET;           /* GO RETRY                      */
         B     RET                                                 0249
*             END;                                                 0250
*           ELSE                    /* SEARCH QUEUE FOR ELEMENT AT 0251
*                                      ELBASE                        */
*             DO;                                                  0251
@RF00237 DS    0H                                                  0252
*               WPQLPTR=VRWFEL;                                    0252
         L     @12,GDAPTR                                          0252
         L     WPQLPTR,VRWFEL(,@12)                                0252
*ZEROCHK:                                                          0253
*               IF WPQLPTR=ZERO THEN/* IS THIS LAST EL?              */
ZEROCHK  L     @12,ZERO                                            0253
         CR    WPQLPTR,@12                                         0253
         BE    @RT00253                                            0253
*                 GOTO LASTEL;      /* CHECK IT                      */
*               IF WPNEXTEL=ELBASE THEN/* ELEMENT FOUND?             */
         C     ELBASE,WPNEXTEL(,WPQLPTR)                           0255
         BNE   @RF00255                                            0255
*                 DO;                                              0256
*                   IF ELBASE->WPNEXTEL=ZERO THEN/* IF LAST EL ON  0257
*                                      QUEUE,                        */
         C     @12,WPNEXTEL(,ELBASE)                               0257
         BNE   @RF00257                                            0257
*                     DO;           /* CHAIN AS LAST ELEMENT         */
*                       VRWLEL=ELBASE;                             0259
         L     @12,GDAPTR                                          0259
         ST    ELBASE,VRWLEL(,@12)                                 0259
*                       GOTO UNLRET;/* DETERMINE RETRY               */
         B     UNLRET                                              0260
*                     END;                                         0261
*                   ELSE            /* IF IN MIDDLE OF QUEUE, CHAIN
*                                      PROPERLY                      */
*                     DO;                                          0262
@RF00257 DS    0H                                                  0263
*                       WPQLPTR=ELBASE->WPNEXTEL;                  0263
         L     WPQLPTR,WPNEXTEL(,ELBASE)                           0263
*                       WPPREVEL=ELBASE;                           0264
         ST    ELBASE,WPPREVEL(,WPQLPTR)                           0264
*                       GOTO UNLRET;/* DETERMINE RETRY               */
         B     UNLRET                                              0265
*                     END;                                         0266
*                 END;                                             0267
*               ELSE                /* ELEMENT NOT FOUND             */
*                 DO;                                              0268
@RF00255 DS    0H                                                  0269
*                   WPQLPTR=WPNEXTEL;                              0269
         L     WPQLPTR,WPNEXTEL(,WPQLPTR)                          0269
*                   GOTO ZEROCHK;   /* KEEP SEARCHING                */
         B     ZEROCHK                                             0270
*                 END;                                             0271
*             END;                                                 0272
*LASTEL:                                                           0273
*           IF VRWLEL=ELBASE THEN   /* IF ELEMENT IS LAST ON QUEUE,
*                                      CHAIN PROPERLY                */
LASTEL   L     @12,GDAPTR                                          0273
         C     ELBASE,VRWLEL(,@12)                                 0273
         BNE   @RF00273                                            0273
*             DO;                                                  0274
*               IF ELBASE->WPPREVEL=ZERO THEN/* IF SO, ONLY EL ON  0275
*                                      QUEUE                         */
         CLC   WPPREVEL(4,ELBASE),ZERO                             0275
         BNE   @RF00275                                            0275
*                 DO;                                              0276
*                   VRWFEL=ELBASE;                                 0277
         ST    ELBASE,VRWFEL(,@12)                                 0277
*                   GOTO UNLRET;    /* DETERMINE RETRY               */
         B     UNLRET                                              0278
*                 END;                                             0279
*               ELSE                /* NOT ONLY EL ON Q              */
*                 DO;                                              0280
@RF00275 DS    0H                                                  0281
*                   WPQLPTR=ELBASE->WPPREVEL;                      0281
         L     WPQLPTR,WPPREVEL(,ELBASE)                           0281
*                   WPNEXTEL=ELBASE;                               0282
         ST    ELBASE,WPNEXTEL(,WPQLPTR)                           0282
*                   GOTO UNLRET;    /* DETERMINE RETRY               */
         B     UNLRET                                              0283
*                 END;                                             0284
*             END;                                                 0285
*                                                                  0285
*/********************************************************************/
*/*    IF CHAINING HAD NOT BEGUN FOR ELEMENT, RETRY                  */
*/*    AT LABEL ELBUILD                                              */
*/********************************************************************/
*                                                                  0286
*           IF SDWARCDE=SDWARETY THEN                              0286
@RF00273 L     @12,SDWAPTR                                         0286
         CLI   SDWARCDE(@12),4                                     0286
         BNE   @RF00286                                            0286
*             SDWARTYA=ADDR(ELBUILD);                              0287
         L     @11,@CV02268                                        0287
         ST    @11,SDWARTYA(,@12)                                  0287
*           GOTO RET;               /* GO RETRY                      */
         B     RET                                                 0288
*         END;                                                     0289
*                                                                  0289
*/*                                                                  */
*/********************************************************************/
*/*    DETERMINE STEP IN ERROR AND RETRY ADDRESS AS DESCRIBED ABOVE  */
*/********************************************************************/
*                                                                  0290
*       IF RSMDONE='1'B THEN                                       0290
@RF00233 L     @12,PARMBASE                                        0290
         TM    RSMDONE(@12),B'10000000'                            0290
         BNO   @RF00290                                            0290
*         IF ASDONE='1'B THEN                                      0291
         TM    ASDONE(@12),B'01000000'                             0291
         BNO   @RF00291                                            0291
*           IF VEQRDONE='1'B THEN                                  0292
         TM    VEQRDONE(@12),B'00010000'                           0292
         BNO   @RF00292                                            0292
*             IF CBGFLG='1'B THEN                                  0293
         TM    CBGFLG(@12),B'00100000'                             0293
         BNO   @RF00293                                            0293
*               IF FPFLG='1'B THEN                                 0294
         TM    FPFLG(@12),B'00000100'                              0294
         BNO   @RF00294                                            0294
*                 IF DEQFLG='1'B THEN                              0295
         TM    DEQFLG(@12),B'10000000'                             0295
         BNO   @RF00295                                            0295
*                   SDWARTYA=ADDR(DEQUEUE);                        0296
         L     @12,@CV02263                                        0296
         L     @11,SDWAPTR                                         0296
         ST    @12,SDWARTYA(,@11)                                  0296
*                 ELSE                                             0297
*                   DO;                                            0297
         B     @RC00295                                            0297
@RF00295 DS    0H                                                  0298
*                     SDWARTYA=ADDR(GPRETURN);                     0298
         L     @12,SDWAPTR                                         0298
         L     @11,@CV02264                                        0298
         ST    @11,SDWARTYA(,@12)                                  0298
*                     SDWASR04=LDAADD;                             0299
         L     @11,PARMBASE                                        0299
         L     @11,LDAADD(,@11)                                    0299
         ST    @11,SDWASR04(,@12)                                  0299
*                     SDWASR14=ADDR(WORKAREA);                     0300
         L     @11,LDAPTR                                          0300
         LA    @11,WORKAREA(,@11)                                  0300
         ST    @11,SDWASR14(,@12)                                  0300
*                   END;                                           0301
*               ELSE                                               0302
*                 SDWARTYA=ADDR(CBGETS);                           0302
         B     @RC00294                                            0302
@RF00294 L     @12,@CV02265                                        0302
         L     @11,SDWAPTR                                         0302
         ST    @12,SDWARTYA(,@11)                                  0302
*             ELSE                                                 0303
*               SDWARTYA=ADDR(CBGETS);                             0303
         B     @RC00293                                            0303
@RF00293 L     @12,@CV02265                                        0303
         L     @11,SDWAPTR                                         0303
         ST    @12,SDWARTYA(,@11)                                  0303
*           ELSE                                                   0304
*             DO;                                                  0304
         B     @RC00292                                            0304
@RF00292 DS    0H                                                  0305
*               PQESEPTR=VRPQEP;                                   0305
         L     @12,GDAPTR                                          0305
         L     @12,VRPQEP(,@12)                                    0305
         ST    @12,PQESEPTR                                        0305
*               CALL QREBUILD;      /* REBUILD QUEUES                */
         BAL   @14,QREBUILD                                        0306
*               SDWARTYA=ADDR(ENDASQS);                            0307
         L     @12,@CV02266                                        0307
         L     @11,SDWAPTR                                         0307
         ST    @12,SDWARTYA(,@11)                                  0307
*             END;                                                 0308
*         ELSE                                                     0309
*           DO;                                                    0309
         B     @RC00291                                            0309
@RF00291 DS    0H                                                  0310
*             PQESEPTR=ASDPQE;                                     0310
         L     @12,LDAPTR                                          0310
         L     @12,ASDPQE(,@12)                                    0310
         ST    @12,PQESEPTR                                        0310
*             CALL QREBUILD;        /* REBUILD QUEUES                */
         BAL   @14,QREBUILD                                        0311
*             SDWARTYA=ADDR(SUCVR);                                0312
         L     @12,@CV02267                                        0312
         L     @11,SDWAPTR                                         0312
         ST    @12,SDWARTYA(,@11)                                  0312
*           END;                                                   0313
*       ELSE                                                       0314
*         GO TO GPRETSET;           /* GO RETRY AT GPRETRY           */
*       SDWARCDE=SDWARETY;                                         0315
@RC00290 L     @12,SDWAPTR                                         0315
         MVI   SDWARCDE(@12),X'04'                                 0315
*       GOTO RET;                   /* GO RETRY                      */
         B     RET                                                 0316
*     END;                                                         0317
*                                                                  0317
*/*                                                                  */
*/********************************************************************/
*/*                       V=R GETPART UNRETRYABLE ERRORS             */
*/*     CHECK IS MADE FOR THE STEP CONTAINING THE ERROR. CLEAN-UP    */
*/*     OF THAT STEP AND ALL PREVIOUS STEPS IS PERFORMED IN ORDER    */
*/*     TO PRESERVE THE VALIDITY OF THE STORAGE QUEUES. THE LOGICAL  */
*/*     PROCESSING STEPS ARE THE SAME AS DESCRIBED AT GETRL.         */
*/********************************************************************/
*                                                                  0318
*OTHRERRS:                                                         0318
*   ;                                                              0318
@RF00218 DS    0H                                                  0318
OTHRERRS DS    0H                                                  0319
*   IF SDWACMPC=O82 THEN            /* IF ERROR IN SETLOCK,          */
         L     @12,SDWAPTR                                         0319
         CLC   SDWACMPC(3,@12),O82                                 0319
         BNE   @RF00319                                            0319
*     SDWASALL='0'B;                /* DO NOT ATTEMPT TO FREE SALLOC */
         NI    SDWASALL(@12),B'11111011'                           0320
*   ELSE                                                           0321
*     SDWASALL='1'B;                /* INDICATE TO FREE SALLOC LOCK  */
         B     @RC00319                                            0321
@RF00319 L     @12,SDWAPTR                                         0321
         OI    SDWASALL(@12),B'00000100'                           0321
*   SDWARCDE=SDWACWT;               /* CONTINUE WITH TERMINATION     */
@RC00319 L     @12,SDWAPTR                                         0322
         MVI   SDWARCDE(@12),X'00'                                 0322
*   IF SDWAPERC='1'B THEN           /* DO NOT CLEAN UP ON PERCOLATION
*                                      BECAUSE OF POSSIBLE FREEMAIN
*                                      LOOP                          */
         TM    SDWAPERC(@12),B'00010000'                           0323
         BO    @RT00323                                            0323
*     GOTO RET;                     /* RETURN TO RTM                 */
*   IF RSMDONE='1'B THEN                                           0325
         L     @12,PARMBASE                                        0325
         TM    RSMDONE(@12),B'10000000'                            0325
         BNO   @RF00325                                            0325
*     IF ASDONE='1'B THEN                                          0326
         TM    ASDONE(@12),B'01000000'                             0326
         BNO   @RF00326                                            0326
*       IF VEQRDONE='1'B THEN                                      0327
         TM    VEQRDONE(@12),B'00010000'                           0327
         BNO   @RF00327                                            0327
*         IF FPFLG='1'B THEN                                       0328
         TM    FPFLG(@12),B'00000100'                              0328
         BNO   @RF00328                                            0328
*           IF DEQFLG='1'B THEN                                    0329
         TM    DEQFLG(@12),B'10000000'                             0329
         BO    @RT00329                                            0329
*             GOTO RET;             /* RETURN TO RTM                 */
*           ELSE                                                   0331
*             DO;                                                  0331
*L4:                                                               0332
*               ;                   /* THE FOLLOWING CODE CLEANS UP
*                                      ALL THAT AN UNSUCCESSFUL    0332
*                                      GETPART WOULD HAVE DONE       */
L4       DS    0H                                                  0333
*               GENERATE;                                          0333
OBTS  SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRQS,IEAVGPRR(RE**
               LSS))
*               SIZEREG=REGSIZE;                                   0334
         L     @12,PARMBASE                                        0334
         L     SIZEREG,REGSIZE(,@12)                               0334
*               SEGREG=REGADD;                                     0335
         L     SEGREG,REGADD(,@12)                                 0335
*               LDACBSP=245;                                       0336
         L     @12,LDAPTR                                          0336
         MVI   LDACBSP(@12),X'F5'                                  0336
*               PQEREG=VRPQEP;                                     0337
         L     @11,GDAPTR                                          0337
         L     PQEREG,VRPQEP(,@11)                                 0337
*               RGMBASE2=GMBASE2;   /* SAVE TCB @ BASE REG AND DATA
*                                      REG ACROSS MRELF              */
         L     RGMBASE2,GMBASE2(,@12)                              0338
*               W1=TCBPTR;                                         0339
         ST    TCBPTR,W1(,@12)                                     0339
*               TCBPTR=LDAPTR;                                     0340
         LR    TCBPTR,@12                                          0340
*               W2=RBASE;                                          0341
         ST    RBASE,W2(,@12)                                      0341
*               RDATASAV=REG8;                                     0342
         LR    RDATASAV,REG8                                       0342
*               RGMBASE=GMBASE;                                    0343
         L     RGMBASE,GMBASE(,@12)                                0343
*               CALL MRELEASF;      /* RETURN V=R SPACE TO QUEUES VIA
*                                      FREEMAIN                      */
         L     @15,@CV02272                                        0344
         BALR  @14,@15                                             0344
*               GENERATE;                                          0345
RELSS   SETLOCK RELEASE,TYPE=SALLOC,RELATED=(VEQRS,IEAVGPRR(OBTS))
*               REG8=RDATASAV;                                     0346
         LR    REG8,RDATASAV                                       0346
*               RBASE=W2;                                          0347
         L     @12,LDAPTR                                          0347
         L     RBASE,W2(,@12)                                      0347
*               TCBPTR=W1;                                         0348
         L     TCBPTR,W1(,@12)                                     0348
*L5:                                                               0349
*               SIZEREG=REGSIZE;    /* THIS BLOCK RETURNS THE      0349
*                                      ALLOCATED SPACE TO THE ADDRESS
*                                      SPACE CONTROL BLOCKS          */
L5       L     @12,PARMBASE                                        0349
         L     SIZEREG,REGSIZE(,@12)                               0349
*               SEGREG=REGADD;                                     0350
         L     SEGREG,REGADD(,@12)                                 0350
*               LDACBSP=255;                                       0351
         L     @12,LDAPTR                                          0351
         MVI   LDACBSP(@12),X'FF'                                  0351
*               PQEREG=ASDPQE;                                     0352
         L     PQEREG,ASDPQE(,@12)                                 0352
*               RGMBASE2=GMBASE2;   /* SAVE TCB @ BASE REG AND DATA
*                                      REG ACROSS MRELEASF           */
         L     RGMBASE2,GMBASE2(,@12)                              0353
*               W1=TCBPTR;                                         0354
         ST    TCBPTR,W1(,@12)                                     0354
*               TCBPTR=LDAPTR;                                     0355
         LR    TCBPTR,@12                                          0355
*               W2=RBASE;                                          0356
         ST    RBASE,W2(,@12)                                      0356
*               RDATASAV=REG8;                                     0357
         LR    RDATASAV,REG8                                       0357
*               RGMBASE=GMBASE;                                    0358
         L     RGMBASE,GMBASE(,@12)                                0358
*               CALL MRELEASF;      /* RETURN SPACE TO ADDRESS SPACE
*                                      QUEUES VIA FREEMAIN           */
         L     @15,@CV02272                                        0359
         BALR  @14,@15                                             0359
*               REG8=RDATASAV;                                     0360
         LR    REG8,RDATASAV                                       0360
*               RBASE=W2;                                          0361
         L     @12,LDAPTR                                          0361
         L     RBASE,W2(,@12)                                      0361
*               TCBPTR=W1;                                         0362
         L     TCBPTR,W1(,@12)                                     0362
*L6:                                                               0363
*               VRPARMS1=REGADD;    /* THIS BLOCK ALLOWS RSM A CHANCE
*                                      TO CLEAN UP THE ALLOCATED   0363
*                                      SPACE                         */
L6       L     @12,PARMBASE                                        0363
         L     @11,REGADD(,@12)                                    0363
         ST    @11,VRPARMS1                                        0363
*               SIZEREG=REGSIZE;                                   0364
         L     SIZEREG,REGSIZE(,@12)                               0364
*               GENERATE;                                          0365
    SRL   SIZEREG,12
*               VRPARMS2=SIZEREG;                                  0366
         ST    SIZEREG,VRPARMS2                                    0366
*               GPR01F=ADDR(VRPARMS);                              0367
         LA    GPR01F,VRPARMS                                      0367
*               GENERATE;                                          0368
OBTS2  SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRQS,IEAVGPRR(**
               RELSS2))
*               GPR13F=ADDR(SAVEAR);                               0369
         L     GPR13F,LDAPTR                                       0369
         LA    GPR13F,SAVEAR(,GPR13F)                              0369
*               CALL IEAVEQRF;      /* GO TO RSM TO FREE UP V=R SPACE*/
         L     @12,CVTPTR                                          0370
         L     @12,PVTPTR(,@12)                                    0370
         L     @15,PVTPVRLS(,@12)                                  0370
         BALR  @14,@15                                             0370
*               GENERATE;                                          0371
RELSS2  SETLOCK  RELEASE,TYPE=SALLOC,RELATED=(VRQS,IEAVGPRR(OBTS2))
*               TCBPQE=ZERO;                                       0372
         L     @12,ZERO                                            0372
         ST    @12,TCBPQE(,TCBPTR)                                 0372
*               GOTO RET;           /* RETURN PROCESSING             */
         B     RET                                                 0373
*             END;                                                 0374
*         ELSE                                                     0375
*           GOTO L4;                /* CLEAN UP ADDRESS SPACE AND V=R
*                                      QUEUES                        */
*       ELSE                                                       0376
*         DO;                                                      0376
@RF00327 DS    0H                                                  0377
*           PQESEPTR=VRPQEP;                                       0377
         L     @12,GDAPTR                                          0377
         L     @12,VRPQEP(,@12)                                    0377
         ST    @12,PQESEPTR                                        0377
*           CALL QREBUILD;          /* REBUILD QUEUES                */
         BAL   @14,QREBUILD                                        0378
*           GOTO L5;                /* CLEAN UP ADDRESS SPACE QS     */
         B     L5                                                  0379
*         END;                                                     0380
*     ELSE                                                         0381
*       DO;                                                        0381
@RF00326 DS    0H                                                  0382
*         PQESEPTR=ASDPQE;                                         0382
         L     @12,LDAPTR                                          0382
         L     @12,ASDPQE(,@12)                                    0382
         ST    @12,PQESEPTR                                        0382
*         CALL QREBUILD;            /* REBUILD QUEUES                */
         BAL   @14,QREBUILD                                        0383
*         GOTO L6;                  /* GO TO RSM FOR CLEAN UP        */
         B     L6                                                  0384
*       END;                                                       0385
*   ELSE                                                           0386
*     ;                             /* ESSENTIALLY NOTHING WAS     0386
*                                      DONE:NO CLEANUP               */
@RF00325 DS    0H                                                  0387
*   IF WENQFLG='1'B THEN            /* IF AN ENQUEUE WAS IN PROCESS, */
         L     @12,PARMBASE                                        0387
         TM    WENQFLG(@12),B'01000000'                            0387
         BNO   @RF00387                                            0387
*     IF RECURSE^='1'B THEN         /* AND THIS NOT A RECURSION    0388
*                                      ENTRY,                        */
         TM    RECURSE(@12),B'00001000'                            0388
         BO    @RF00388                                            0388
*       DO;                                                        0389
*         TCBPQE=ZERO;                                             0390
         L     @12,ZERO                                            0390
         ST    @12,TCBPQE(,TCBPTR)                                 0390
*         GOTO WENQFIX;             /* GO TO COMMON CLEANUP CODE     */
         B     WENQFIX                                             0391
*       END;                                                       0392
*   TCBPQE=ZERO;                    /* THE NEXT LOGICAL            0393
*                                      INSTRUCTION--GOTORET--IS    0393
*                                      LOCATED AFTER THE QREBUILD  0393
*                                      PROC TO FIX A BUG IN THE PLS
*                                      COMPILER WHICH WON'T ALLOW AN
*                                      ENTRY STATEMENT TO FOLLOW AN
*                                      END OF AN INTERNAL PROC.      */
@RF00388 DS    0H                                                  0393
@RF00387 L     @12,ZERO                                            0393
         ST    @12,TCBPQE(,TCBPTR)                                 0393
*                                                                  0394
*/*                                                                  */
*/****************************************************************** */
*/*        THIS ROUTINE UNDOES THE PROCESSING PERFORMED IN THE       */
*/*        GETSPEC ROUTINE OF IEAVPRT0. IF THE ERROR OCCURED         */
*/*        IN A STEP WHICH SUBTRACTS REGION SPACE FROM V=R OR V=V    */
*/*        QUEUES, CLEAN-UP MUST BE PERFORMED BY THE FRR RATHER      */
*/*        THAN BY A FREEMAIN INTERFACE. IF THE SPACE WAS NOT        */
*/*        COMPLETELY OFF THE QUEUES WHEN THE ERROR OCCURED,         */
*/*        A BRANCH TO FREEMAIN TO RESTORE THE SPACE COULD RESULT    */
*/*        IN DUPLICATE SPACE ON THE FBQE QUEUES.                    */
*/*        SOME SPACE MAY BE LOST FROM THE FBQE AS A RESULT OF THIS  */
*/*        CLEAN-UP; HOWEVER QUEUING SHOULD REMAIN VALID AS LONG     */
*/*        AS THE FRR ROUTINE DOES NOT FAIL.                         */
*/****************************************************************** */
*                                                                  0394
*QREBUILD:                                                         0394
*   PROC;                                                          0394
         B     @PB00002                                            0394
QREBUILD STM   @14,@12,@SA00002                                    0394
*   FBQESPTR=PQEFFBQE;                                             0395
         L     @12,PQESEPTR                                        0395
         L     FBQESPTR,PQEFFBQE(,@12)                             0395
*   FBQEBASE=RW1SAVE;               /* RW1SAVE CONTAINS THE @ OF THE
*                                      FBQE BEING WORKED UPON        */
         L     @12,PARMBASE                                        0396
         L     FBQEBASE,RW1SAVE(,@12)                              0396
*   IF FBQEBASE=ZERO THEN           /* IF NO FBQE TO WORK ON,        */
         C     FBQEBASE,ZERO                                       0397
         BE    @RT00397                                            0397
*     RETURN;                       /* RETURN TO CALLER              */
*LOOP:                                                             0399
*   IF FBQESPTR=PQESEPTR THEN       /* IF THE FBQE NOT FOUND BY    0399
*                                      SEARCH,                       */
LOOP     C     FBQESPTR,PQESEPTR                                   0399
         BE    @RT00399                                            0399
*     GOTO NEWFBQE;                 /* GO BUILD A NEW FBQE           */
*   IF FBQESPTR^=FBQEBASE THEN      /* IF THIS FBQE NOT THE ONE IN 0401
*                                      QUESTION,                     */
         CR    FBQESPTR,FBQEBASE                                   0401
         BE    @RF00401                                            0401
*     DO;                                                          0402
*       FBQESPTR=FWDPTR;                                           0403
         L     FBQESPTR,FWDPTR(,FBQESPTR)                          0403
*       GOTO LOOP;                  /* KEEP SEARCHING THE FBQE CHAIN */
         B     LOOP                                                0404
*     END;                                                         0405
*   FBQEEND=FBQAREA+SIZE;                                          0406
@RF00401 L     @12,FBQAREA(,FBQESPTR)                              0406
         LR    FBQEEND,@12                                         0406
         AL    FBQEEND,SIZE(,FBQESPTR)                             0406
*   REGEND=REGADD+REGSIZE;          /* END OF REG BEING ALLOCATED    */
         L     @15,PARMBASE                                        0407
         L     @14,REGADD(,@15)                                    0407
         LR    REGEND,@14                                          0407
         AL    REGEND,REGSIZE(,@15)                                0407
*   IF FBQAREA=REGADD THEN          /* IF START @'S =                */
         CR    @12,@14                                             0408
         BNE   @RF00408                                            0408
*     IF FBQEEND=REGEND THEN        /* AND END ADDRESSES =,          */
         CR    FBQEEND,REGEND                                      0409
         BNE   @RF00409                                            0409
*       DO;                         /* CHAIN FBQE PROPERLY           */
*         FBQESPTR=FBQEBASE->FWDPTR;                               0411
         L     FBQESPTR,FWDPTR(,FBQEBASE)                          0411
*         BCKPTR=FBQEBASE;                                         0412
         ST    FBQEBASE,BCKPTR(,FBQESPTR)                          0412
*         FBQESPTR=FBQEBASE->BCKPTR;                               0413
         L     FBQESPTR,BCKPTR(,FBQEBASE)                          0413
*         FWDPTR=FBQEBASE;                                         0414
         ST    FBQEBASE,FWDPTR(,FBQESPTR)                          0414
*         RETURN;                   /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0415
@EF00002 DS    0H                                                  0415
@ER00002 LM    @14,@12,@SA00002                                    0415
         BR    @14                                                 0415
*       END;                                                       0416
*   IF REGADD<FBQAREA THEN          /* IF REG START < FREE AREA    0417
*                                      START,                        */
@RF00409 DS    0H                                                  0417
@RF00408 L     @12,PARMBASE                                        0417
         L     @11,REGADD(,@12)                                    0417
         C     @11,FBQAREA(,FBQESPTR)                              0417
         BNL   @RF00417                                            0417
*     DO;                           /* ADD REG SIZE BACK IN TO BOTTOM
*                                      OF FBQE                       */
*       FBQAREA=REGADD;                                            0419
         ST    @11,FBQAREA(,FBQESPTR)                              0419
*       SIZE=SIZE+REGSIZE;                                         0420
         L     @11,SIZE(,FBQESPTR)                                 0420
         AL    @11,REGSIZE(,@12)                                   0420
         ST    @11,SIZE(,FBQESPTR)                                 0420
*       RETURN;                     /* RETURN TO CALLER              */
         B     @EL00002                                            0421
*     END;                                                         0422
*   IF REGADD>FBQEEND THEN          /* IF REG START > FREE AREA END, */
@RF00417 L     @12,PARMBASE                                        0423
         C     FBQEEND,REGADD(,@12)                                0423
         BNL   @RF00423                                            0423
*     DO;                           /* ADD REG SIZE BACK INTO TOP OF
*                                      FBQE AND COMBINE WITH NEXT  0424
*                                      HIGHER FBQE IF CONTIGUOUS     */
*       SIZE=SIZE+REGSIZE;                                         0425
         L     @11,SIZE(,FBQESPTR)                                 0425
         AL    @11,REGSIZE(,@12)                                   0425
         ST    @11,SIZE(,FBQESPTR)                                 0425
*       FBQEEND=FBQAREA+SIZE;                                      0426
         L     FBQEEND,FBQAREA(,FBQESPTR)                          0426
         ALR   FBQEEND,@11                                         0426
*       IF FBQEEND=FWDPTR->FBQAREA THEN/* ARE THE TWO CONTIGUOUS?  0427
*                                                            @ZA02394*/
         L     @15,FWDPTR(,FBQESPTR)                               0427
         C     FBQEEND,FBQAREA(,@15)                               0427
         BNE   @RF00427                                            0427
*         DO;                       /* COMBINE AREAS AND REMOVE    0428
*                                      HIGHER CONTIGUOUS FBQE        */
*           RW1SAVE=FWDPTR;         /* SAVE PTR TO NEXT FBQE         */
         ST    @15,RW1SAVE(,@12)                                   0429
*           SIZE=SIZE+FWDPTR->SIZE; /* ADD AREA SIZES                */
         AL    @11,SIZE(,@15)                                      0430
         ST    @11,SIZE(,FBQESPTR)                                 0430
*           FWDPTR=FWDPTR->DUMMYWRD;/* REMOVE HIGHER                 */
         L     @12,DUMMYWRD(,@15)                                  0431
         ST    @12,FWDPTR(,FBQESPTR)                               0431
*           FWDPTR->BCKPTR=FBQEBASE;/* CONTIGUOUS FBQE               */
         ST    FBQEBASE,BCKPTR(,@12)                               0432
*           RETURN;                 /* RETURN TO CALLER              */
         B     @EL00002                                            0433
*         END;                                                     0434
*     END;                                                         0435
@RF00427 DS    0H                                                  0436
*   FWDPTR->BCKPTR=FBQEBASE;                                       0436
@RF00423 L     @12,FWDPTR(,FBQESPTR)                               0436
         ST    FBQEBASE,BCKPTR(,@12)                               0436
*   BCKPTR->DUMMYWRD=FBQEBASE;      /* RECHAIN FBQE CORRECTLY        */
         L     @12,BCKPTR(,FBQESPTR)                               0437
         ST    FBQEBASE,DUMMYWRD(,@12)                             0437
*   RETURN;                                                        0438
*                                                                  0438
         B     @EL00002                                            0438
*/*                                                                  */
*/********************************************************************/
*/*     IF NOT FOUND, GET A NEW FBQE, PUT REGION SPACE IN IT,        */
*/*     AND CHAIN IT PROPERLY ON FBQE CHAIN.                         */
*/********************************************************************/
*                                                                  0439
*   RESPECIFY                                                      0439
*    (GPR00F,                                                      0439
*     GPR01F,                                                      0439
*     GPR07F,                                                      0439
*     GPR14F,                                                      0439
*     GPR15F) RESTRICTED;                                          0439
*                                                                  0439
*/*                                  REGS USED BY GM         @Z30ENYG*/
*                                                                  0440
*NEWFBQE:                                                          0440
*   IF ASDONE='1'B THEN                                            0440
NEWFBQE  L     @12,PARMBASE                                        0440
         TM    ASDONE(@12),B'01000000'                             0440
         BNO   @RF00440                                            0440
*     GPR15F=245;                   /* IF V=R FBQE, SP 245   @Z30ENYG*/
         LA    GPR15F,245                                          0441
*   ELSE                                                           0442
*     GPR15F=255;                   /* IF A.S. FBQE, SP 255  @Z30ENYG*/
         B     @RC00440                                            0442
@RF00440 LA    GPR15F,255                                          0442
*   GEN REFS(PASCBSV,LDAPTR);                                      0443
@RC00440 DS    0H                                                  0443
*                          /*@Z30ENYG*/
          L      RASCB,LDAPTR           ASCB ADDR IS IN LDA   @Z30ENYG
          L      RASCB,PASCBSV(RASCB)   ADDR ASCB FOR CELL GM @Z30ENYG
          GETMAIN P,BRANCH=YES,SP=(GPR15F) GM CELL FOR FBQE   @Z30ENYG
*   RESPECIFY                                                      0444
*    (GPR00F,                                                      0444
*     GPR01F,                                                      0444
*     GPR07F,                                                      0444
*     GPR14F,                                                      0444
*     GPR15F) UNRESTRICTED;                                        0444
*                                                                  0444
*/*                                                          @Z30ENYG*/
*                                                                  0445
*   FBQESPTR=GPR01F;                                               0445
         LR    FBQESPTR,GPR01F                                     0445
*   SIZE=REGSIZE;                                                  0446
         L     @12,PARMBASE                                        0446
         L     @11,REGSIZE(,@12)                                   0446
         ST    @11,SIZE(,FBQESPTR)                                 0446
*   FBQAREA=REGADD;                                                0447
         L     @12,REGADD(,@12)                                    0447
         ST    @12,FBQAREA(,FBQESPTR)                              0447
*   FBQEBASE=FBQESPTR;                                             0448
         LR    FBQEBASE,FBQESPTR                                   0448
*   FBQESPTR=PQEFFBQE;                                             0449
         L     @12,PQESEPTR                                        0449
         L     FBQESPTR,PQEFFBQE(,@12)                             0449
*LOOP2:                                                            0450
*   IF FBQESPTR=PQESEPTR THEN       /* IS NEW FBQE ONLY ONE OR LAST
*                                      ONE ON CHAIN?                 */
LOOP2    L     @12,PQESEPTR                                        0450
         CR    FBQESPTR,@12                                        0450
         BNE   @RF00450                                            0450
*     DO;                           /* CHAIN IT PROPERLY             */
*       FBQEBASE->DUMMYWRD=PQESEPTR;                               0452
         ST    @12,DUMMYWRD(,FBQEBASE)                             0452
*       FBQEBASE->BCKPTR=PQESEPTR;                                 0453
         ST    @12,BCKPTR(,FBQEBASE)                               0453
*       PQEFFBQE=FBQEBASE;          /* CHAIN PQE TO FBQE     @Z30ENYG*/
         ST    FBQEBASE,PQEFFBQE(,@12)                             0454
*       PQEBFBQE=FBQEBASE;          /*                       @Z30ENYG*/
         ST    FBQEBASE,PQEBFBQE(,@12)                             0455
*       RETURN;                                                    0456
         B     @EL00002                                            0456
*     END;                                                         0457
*   IF FBQEBASE->FBQAREA<FBQAREA THEN/* CHAIN NEW FBQE IN ASCENDING
*                                      ORDER OF ADDRESS              */
@RF00450 CLC   FBQAREA(4,FBQEBASE),FBQAREA(FBQESPTR)               0458
         BNL   @RF00458                                            0458
*     DO;                                                          0459
*       BCKPTR->DUMMYWRD=FBQEBASE;                                 0460
         L     @12,BCKPTR(,FBQESPTR)                               0460
         ST    FBQEBASE,DUMMYWRD(,@12)                             0460
*       FBQEBASE->DUMMYWRD=FBQESPTR;                               0461
         ST    FBQESPTR,DUMMYWRD(,FBQEBASE)                        0461
*       FBQEBASE->BCKPTR=BCKPTR;                                   0462
         ST    @12,BCKPTR(,FBQEBASE)                               0462
*       BCKPTR=FBQEBASE;                                           0463
         ST    FBQEBASE,BCKPTR(,FBQESPTR)                          0463
*       RETURN;                     /* RETURN TO CALLER              */
         B     @EL00002                                            0464
*     END;                                                         0465
*   FBQESPTR=FWDPTR;                                               0466
@RF00458 L     FBQESPTR,FWDPTR(,FBQESPTR)                          0466
*   GOTO LOOP2;                     /* CHAIN FBQE IN PROPER POSITION */
         B     LOOP2                                               0467
*   END QREBUILD;                                                  0468
         B     @EL00002                                            0468
*   GOTO RET;                       /* RETURN TO CALLER              */
         B     RET                                                 0469
*/*                                                                  */
*/********************************************************************/
*/*     THIS IS THE ASYNCHRONOUS ERROR EXIT ROUTINE USED BY XMPOST   */
*/*     FOR ERRORS DISCOVERED DURING POST PROCESSING. THE ROUTINE    */
*/*     SCHEDULES A SRB TO ABEND THE INITIATOR THAT COULD NOT BE     */
*/*     WITH AN ABEND CODE OF X'304'.                                */
*/********************************************************************/
*                                                                  0470
*PRT0ERTN:                                                         0470
*   ENTRY;                                                         0470
*   GENERATE REFS(CVTCRMN,CVTMAP,PSATOLD,PSAAOLD);                 0471
PRT0ERTN DS    0H
   DROP  @08
   USING *,@09
   LR   @09,@15
   B    ENTPT                       BRANCH AROUND ENTRY INSTRUCTION
   ENTRY PRT0ERTN
*   RESPECIFY                                                      0472
*    (RDATASAV,                                                    0472
*     RETSAVE,                                                     0472
*     POSTASCB) RSTD;                                              0472
*ENTPT:                                                            0473
*   RETSAVE=RRETURN;                /* SAVE RETURN REG               */
ENTPT    LR    RETSAVE,RRETURN                                     0473
*   POSTASCB=ASCBPTR;               /* SAVE ASCB ADDRESS             */
         LR    POSTASCB,ASCBPTR                                    0474
*   R0=PVTSRBID;                    /* CELL POOL ID FOR SRB          */
         L     @12,CVTPTR                                          0475
         L     @12,PVTPTR(,@12)                                    0475
         L     R0,PVTSRBID(,@12)                                   0475
*   GENERATE(GETCELL  CPID=(R0),BRANCH=YES,SAVE=NO);               0476
         GETCELL  CPID=(R0),BRANCH=YES,SAVE=NO
*   IF RRETREG=0 THEN                                              0477
         LTR   RRETREG,RRETREG                                     0477
         BNZ   @RF00477                                            0477
*     DO;                                                          0478
*       SRBSECT='0'B;                                              0479
         XC    SRBSECT+1(43,SRBPTR),SRBSECT+1(SRBPTR)              0479
         MVI   SRBSECT(SRBPTR),B'00000000'                         0479
*       SRBID='SRB ';                                              0480
         MVC   SRBID(4,SRBPTR),@CC02475                            0480
*       SRBASCB=POSTASCB;                                          0481
         ST    POSTASCB,SRBASCB(,SRBPTR)                           0481
*       SRBEP=ADDR(IEAVGPRS);                                      0482
         L     @12,@CA02476                                        0482
         ST    @12,SRBEP(,SRBPTR)                                  0482
*       SRBPARM=POSTASCB;                                          0483
         ST    POSTASCB,SRBPARM(,SRBPTR)                           0483
*       SRBRMTR=PVTPSRBP;                                          0484
         L     @12,CVTPTR                                          0484
         L     @12,PVTPTR(,@12)                                    0484
         L     @12,PVTPSRBP(,@12)                                  0484
         ST    @12,SRBRMTR(,SRBPTR)                                0484
*       GEN(SCHEDULE  SRB=(SRBPTR),SCOPE=GLOBAL);                  0485
         SCHEDULE  SRB=(SRBPTR),SCOPE=GLOBAL
*     END;                                                         0486
*   RRETURN=RETSAVE;                                               0487
@RF00477 LR    RRETURN,RETSAVE                                     0487
*   GOTO RRETURN;                                                  0488
         BR    RRETURN                                             0488
*                                                                  0489
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE ENTRY POINT FOR IEAVGPRS, THE SRB SCHEDULED BY    */
*   /* PRT0ERTN (XMPOST ASYNCHRONOUS ERROR ROUTINE) TO CAUSE THE     */
*   /* INITIATOR WHICH COULD NOT BE POSTED TO BE ABENDED WITH ABEND  */
*   /* CODE X'304'.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0489
*IEAVGPRS:                                                         0489
*   ENTRY;                                                         0489
*   GENERATE;                                                      0490
IEAVGPRS  DS    0H
   DROP  @09
 USING *,@09
 LR     @09,@15
 B     INITWAKE
 ENTRY IEAVGPRS
*INITWAKE:                                                         0491
*   POSTASCB=PARM;                                                 0491
INITWAKE LR    POSTASCB,PARM                                       0491
*   RETSAVE=RRETURN;                                               0492
         LR    RETSAVE,RRETURN                                     0492
*   SRBPTR=R0;                                                     0493
         LR    SRBPTR,R0                                           0493
*   R0=PVTSRBID;                                                   0494
         L     @12,CVTPTR                                          0494
         L     @12,PVTPTR(,@12)                                    0494
         L     R0,PVTSRBID(,@12)                                   0494
*   GEN(FREECELL  CPID=(R0),CELL=(SRBPTR),BRANCH=YES,SAVE=NO);     0495
         FREECELL  CPID=(R0),CELL=(SRBPTR),BRANCH=YES,SAVE=NO
*   GENERATE;                                                      0496
OBTL SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LDA,IEAVGPRR(REL))
      L     @00,@SIZDATD                 SIZE FOR GETMAIN
      ICM   @00,B'1000',XFF              SPACE FROM SUBPOOL 255
*   TCBPTR=POSTASCB->ASCBLDA->LDATCB;/* GET INITS TCB @              */
         L     @12,ASCBLDA(,POSTASCB)                              0497
         L     TCBPTR,LDATCB(,@12)                                 0497
*   GENERATE REFS(CVTCRMN,CVTMAP);                                 0498
 GETMAIN  R,LV=(R0),BRANCH=YES
*   RDATASAV=PARM;                                                 0499
         LR    RDATASAV,PARM                                       0499
*   GEN(USING @DATD,@05);                                          0500
         USING @DATD,@05
*   SAVEREG=ADDR(SAV);                                             0501
         LA    SAVEREG,SAV                                         0501
*   GEN(CALLRTM TYPE=ABTERM,COMPCOD=X'304',TCB=(TCBPTR));          0502
         CALLRTM TYPE=ABTERM,COMPCOD=X'304',TCB=(TCBPTR)
*   GEN(L     @00,@SIZDATD);                                       0503
         L     @00,@SIZDATD
*   GEN(ICM   @00,B'1000',XFF);                                    0504
         ICM   @00,B'1000',XFF
*   GEN REFS(CVTCRMN,CVTMAP);                                      0505
 FREEMAIN  R,LV=(R0),A=(RDATASAV),BRANCH=YES
REL   SETLOCK  RELEASE,TYPE=LOCAL,RELATED=(LDA,IEAVGPRR(OBTL))
*   RRETURN=RETSAVE;                                               0506
         LR    RRETURN,RETSAVE                                     0506
*   GOTO RRETURN;                                                  0507
         BR    RRETURN                                             0507
*   END IEAVGPRR                                                   0508
*                                                                  0508
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPQE  )                                       */
*/*%INCLUDE SYSLIB  (IHAGDA  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHASDUMP)                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAFBQE )                                       */
*/*%INCLUDE SYSLIB  (FREEMAIN)                                       */
*/*%INCLUDE SYSLIB  (GETMAIN )                                       */
*/*%INCLUDE SYSLIB  (IHAWPQEL)                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHALDA  )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*                                                                  0508
*       ;                                                          0508
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00002 DS    15F
IEAVGPRR CSECT
         DS    0F
@CF02438 DC    F'4096'
@CF02485 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
PQESEPTR DS    A
GDAPTR   DS    A
SDWAPTR  DS    A
SDUMPPTR DS    A
FRREPTR  DS    A
SCVTSPTR DS    A
LDAPTR   DS    A
WRKPTR   DS    A
PARMBASE DS    A
DPQEPTR  DS    A
R14      DS    A
R14SAVE  DS    A
LFSDUMP2 DS    CL24
VRPARMS  DS    CL8
         ORG   VRPARMS
VRPARMS1 DS    AL4
VRPARMS2 DS    AL4
         ORG   VRPARMS+8
ASIDVAL  DS    CL4
         ORG   ASIDVAL
@NM00131 DS    CL2
ID       DS    FL2
         ORG   ASIDVAL+4
SAV      DS    CL72
IEAVGPRR CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA02476 DC    A(IEAVGPRS)
@CV02260 DC    V(FREERSM)
@CV02261 DC    V(FREEASQ)
@CV02262 DC    V(ZEROPTRS)
@CV02263 DC    V(DEQUEUE)
@CV02264 DC    V(GPRETURN)
@CV02265 DC    V(CBGETS)
@CV02266 DC    V(ENDASQS)
@CV02267 DC    V(SUCVR)
@CV02268 DC    V(ELBUILD)
@CV02269 DC    V(UNL)
@CV02271 DC    V(GPRETRY)
@CV02272 DC    V(MRELEASF)
@CV02270 DC    V(FREEPART)
         DS    0D
ZERO     DC    A(0)
CLEAR    DC    F'0'
SAME     DC    H'0'
XFF      DC    AL1(255)
@CC02475 DC    C'SRB '
         DS    CL1
ZEROES   DS    CL24
         ORG   ZEROES
@NM00122 DC    6F'0'
         ORG   ZEROES+24
O82      DC    B'000010000010000000000000'
MODN     DC    CL8'IEAVPRT0'
REXN     DC    CL8'IEAVGPRR'
IEAVGPRR CSECT
LFSDUMP  SDUMP  HDR='PGM CHECK IN IEAVPRT0',MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVGPRR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FBQEBASE EQU   @06
FBQEEND  EQU   @07
ELBASE   EQU   @05
REGEND   EQU   @11
SRSIZE   EQU   @06
WPQLPTR  EQU   @06
FBQESPTR EQU   @05
TCBPTR   EQU   @04
ASCBPTR  EQU   @01
SRBPTR   EQU   @01
GPR00F   EQU   @00
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR03F   EQU   @03
GPR07F   EQU   @07
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
REG8     EQU   @08
RBASE    EQU   @10
RDATASAV EQU   @05
RGMBASE  EQU   @08
RGMBASE2 EQU   @13
RRETURN  EQU   @14
RASCB    EQU   @07
PQEREG   EQU   @07
SIZEREG  EQU   @06
SEGREG   EQU   @09
WORKREG  EQU   @09
R0       EQU   @00
PARM     EQU   @01
RETSAVE  EQU   @06
POSTASCB EQU   @07
RRETREG  EQU   @15
SAVEREG  EQU   @13
GPR04F   EQU   @04
RCVT     EQU   @03
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBPQE   EQU   TCB+152
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBRV    EQU   TCBFLGS6
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
PQESECT  EQU   0
PQEFFBQE EQU   PQESECT
PQEBFBQE EQU   PQESECT+4
PQESIZE  EQU   PQESECT+20
PQEREGN  EQU   PQESECT+24
VMMFLGS  EQU   PQESECT+30
GDA      EQU   0
GVSMFLAG EQU   GDA
GDAFLAGS EQU   GVSMFLAG
VRPQEP   EQU   GDA+12
PASTRT   EQU   GDA+16
PASIZE   EQU   GDA+20
VRPOSTQ  EQU   GDA+32
VRWAITQ  EQU   GDA+40
VRWFEL   EQU   VRWAITQ
VRWLEL   EQU   VRWAITQ+4
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR01 EQU   SDWASRSV+4
SDWASR03 EQU   SDWASRSV+12
SDWASR04 EQU   SDWASRSV+16
SDWASR07 EQU   SDWASRSV+28
SDWASR08 EQU   SDWASRSV+32
SDWASR09 EQU   SDWASRSV+36
SDWASR13 EQU   SDWASRSV+52
SDWASR14 EQU   SDWASRSV+56
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAMCHK EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAPERC EQU   SDWAERRC
SDWAERRD EQU   SDWAFLGS+3
SDWAFMID EQU   SDWA+236
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWASALL EQU   SDWAACF3
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SDUMP    EQU   0
SDUSDAT1 EQU   SDUMP+2
SDUSDAT2 EQU   SDUMP+3
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSENTR EQU   0
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FBQESECT EQU   0
FWDPTR   EQU   FBQESECT
BCKPTR   EQU   FBQESECT+4
SIZE     EQU   FBQESECT+8
FBQAREA  EQU   FBQESECT+12
VRWPQEL  EQU   0
WPNEXTEL EQU   VRWPQEL
WPPREVEL EQU   VRWPQEL+4
SCVTSECT EQU   0
SCVTRMBR EQU   SCVTSECT+28
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBLDA  EQU   ASCB+48
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTSRBID EQU   PVT+68
PVTPVRLS EQU   PVT+136
PVTPSRBP EQU   PVT+188
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
LDA      EQU   0
LVSMFLAG EQU   LDA
PASCBSV  EQU   LDA+4
ASDPQE   EQU   LDA+8
LDATCB   EQU   LDA+12
LDARQSTA EQU   LDA+16
LDACBSP  EQU   LDA+20
BRANCHSV EQU   LDA+524
CFAPWKAR EQU   LDA+1164
VVREGSZ  EQU   LDA+1468
LDASRPQE EQU   LDA+1476
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBID    EQU   SRB
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBEP    EQU   SRB+20
SRBRMTR  EQU   SRB+24
SRBPARM  EQU   SRB+28
IEAVEQRF EQU   0
PARMS    EQU   0
FLGS1    EQU   PARMS
RSMDONE  EQU   FLGS1
ASDONE   EQU   FLGS1
CBGFLG   EQU   FLGS1
FPFLG    EQU   FLGS1
ZPFLG    EQU   FLGS1
GPFPFLG  EQU   FLGS1
FLGS2    EQU   PARMS+1
DEQFLG   EQU   FLGS2
WENQFLG  EQU   FLGS2
VEQRDONE EQU   FLGS2
RECURSE  EQU   FLGS2
REGSIZE  EQU   PARMS+4
REGADD   EQU   PARMS+8
LDAADD   EQU   PARMS+12
RW1SAVE  EQU   PARMS+16
PRT0BASE EQU   PARMS+20
DUMMYWRD EQU   0
FRRSAVE  EQU   0
SAVBRSV  EQU   FRRSAVE
SAVTCB   EQU   FRRSAVE+64
SAVRQSTA EQU   FRRSAVE+68
SAVFLAG  EQU   FRRSAVE+72
SAVCBSP  EQU   FRRSAVE+76
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTCRMN  EQU   CVTS01+156
CVTGDA   EQU   CVTS01+212
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FRRSPTR  EQU   PSACSTK
PVTPTR   EQU   CVTPVTP
WORKAREA EQU   CFAPWKAR
SAVEAR   EQU   WORKAREA
VEQRWORK EQU   WORKAREA+72
W1       EQU   VEQRWORK
@NM00125 EQU   WORKAREA+88
GMBASE2  EQU   @NM00125+60
REGSAVE  EQU   WORKAREA+152
W2       EQU   REGSAVE
GMBASE   EQU   REGSAVE+12
GPSW     EQU   WORKAREA+196
GPSSW    EQU   GPSW
VERREQ   EQU   GPSW
SAVE1FRR EQU   WORKAREA+212
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
RSMFREE  EQU   WORKAREA+208
ALLOCUR  EQU   WORKAREA+204
SRREG    EQU   WORKAREA+200
@NM00130 EQU   WORKAREA+198
BIT1     EQU   GPSW
BITS4    EQU   GPSW
FRRPARMS EQU   WORKAREA+192
VRPARMSA EQU   WORKAREA+180
@NM00129 EQU   WORKAREA+178
RCSAVE   EQU   WORKAREA+176
@NM00128 EQU   REGSAVE+16
@NM00127 EQU   REGSAVE+4
@NM00126 EQU   @NM00125
@NM00124 EQU   VEQRWORK+4
@NM00123 EQU   SAVEAR+64
RINSAV15 EQU   SAVEAR+60
RINSAV14 EQU   SAVEAR+56
RINSAV13 EQU   SAVEAR+52
RINSAV12 EQU   SAVEAR+48
RINSAV11 EQU   SAVEAR+44
RINSAV10 EQU   SAVEAR+40
RINSAV9  EQU   SAVEAR+36
RINSAV8  EQU   SAVEAR+32
RINSAV7  EQU   SAVEAR+28
RINSAV6  EQU   SAVEAR+24
RINSAV5  EQU   SAVEAR+20
RINSAV4  EQU   SAVEAR+16
RINSAV3  EQU   SAVEAR+12
RINSAV2  EQU   SAVEAR+8
RINSAV1  EQU   SAVEAR+4
RINSAV0  EQU   SAVEAR
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00121 EQU   PARMS+2
PENQFLG  EQU   FLGS2
@NM00120 EQU   FLGS1
@NM00119 EQU   SRB+40
@NM00118 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBFLNK  EQU   SRB+4
LDAEND   EQU   LDA+1496
LCLCELCT EQU   LDA+1492
LCLCELL  EQU   LDA+1488
LDALIMIT EQU   LDA+1484
LDARSVPT EQU   LDA+1480
CURRGNTP EQU   LDA+1472
LSQAPTR  EQU   LDA+1464
CSAVE    EQU   LDA+1100
OBFRSAVE EQU   LDA+1036
GFRESAVE EQU   LDA+972
GMREPSAV EQU   LDA+908
FBQSAVE  EQU   LDA+844
G4KSAVE  EQU   LDA+780
FSAVE    EQU   LDA+716
BSAVE    EQU   LDA+652
SAVEREG2 EQU   LDA+588
GMFMWKAR EQU   LDA+24
LDARES2  EQU   LDA+21
@NM00117 EQU   LVSMFLAG+1
LDABRSW  EQU   LVSMFLAG
LDAFPFM  EQU   LVSMFLAG
LDAFLAGS EQU   LVSMFLAG
LDASTART EQU   LDA
PVTEND   EQU   PVT+1840
PVTSPARE EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTCIOQL EQU   PVTQS+36
PVTCIOQF EQU   PVTQS+32
PVTGFADL EQU   PVTQS+28
PVTGFADF EQU   PVTQS+24
PVTFPCBL EQU   PVTQS+20
PVTFPCBF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTRESV4 EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
PVTFLAG2 EQU   PVT+1
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTRESV1 EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00116 EQU   SCVTSECT+180
@NM00115 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00114 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00113 EQU   SCVTSECT+160
@NM00112 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
SCVTSTAT EQU   SCVTSECT+148
@NM00111 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00110 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00109 EQU   SCVTSECT+128
@NM00108 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00107 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00106 EQU   SCVTSECT+108
@NM00105 EQU   SCVTSECT+104
@NM00104 EQU   SCVTSECT+100
@NM00103 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00102 EQU   SCVTSECT+88
@NM00101 EQU   SCVTSECT+84
@NM00100 EQU   SCVTSECT+80
@NM00099 EQU   SCVTSECT+76
@NM00098 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00097 EQU   SCVTSECT+56
@NM00096 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00095 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00094 EQU   SCVTSECT+32
@NM00093 EQU   SCVTSECT+24
@NM00092 EQU   SCVTSECT+20
@NM00091 EQU   SCVTSECT+16
@NM00090 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
WPSPADDR EQU   VRWPQEL+24
WPELSIZE EQU   VRWPQEL+20
WPELASCB EQU   VRWPQEL+16
WPERRADD EQU   VRWPQEL+12
WPECBADD EQU   VRWPQEL+8
FRRSPARM EQU   FRRSENTR+8
@NM00089 EQU   FRRSFLGS+1
@NM00088 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSFRRA EQU   FRRSENTR
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
FRRSCURR EQU   FRRSHEAD+12
FRRSELEN EQU   FRRSHEAD+8
FRRSLAST EQU   FRRSHEAD+4
FRRSEMP  EQU   FRRSHEAD
@NM00087 EQU   SDUMP+20
@NM00086 EQU   SDUMP+16
@NM00085 EQU   SDUMP+12
@NM00084 EQU   SDUMP+8
@NM00083 EQU   SDUMP+4
@NM00082 EQU   SDUSDAT2
SDUSWA   EQU   SDUSDAT2
SDUCSA   EQU   SDUSDAT2
SDUTRT   EQU   SDUSDAT1
SDULPA   EQU   SDUSDAT1
SDURGN   EQU   SDUSDAT1
SDULSQA  EQU   SDUSDAT1
SDUSQA   EQU   SDUSDAT1
SDUNUC   EQU   SDUSDAT1
SDUPSA   EQU   SDUSDAT1
SDUALPSA EQU   SDUSDAT1
@NM00081 EQU   SDUMP
@NM00080 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00079 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00078 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00077 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00076 EQU   SDWADDAT+3
@NM00075 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00074 EQU   SDWADDAT+1
@NM00073 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00072 EQU   SDWADUMP+2
@NM00071 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00070 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
@NM00069 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00068 EQU   SDWAACF3
@NM00067 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
@NM00066 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00065 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00064 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00063 EQU   SDWA+239
@NM00062 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
@NM00061 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00060 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00059 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00058 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00057 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00056 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR02 EQU   SDWASRSV+8
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00055 EQU   SDWAINC2
@NM00054 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00053 EQU   SDWAILC2
@NM00052 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00051 EQU   SDWANXT2
@NM00050 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00049 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00048 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00047 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00046 EQU   SDWAINC1
@NM00045 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00044 EQU   SDWAILC1
@NM00043 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00042 EQU   SDWANXT1
@NM00041 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00040 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00039 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00038 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00037 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00036 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00035 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00034 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00033 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
GBLCELCT EQU   GDA+60
GLBLCELL EQU   GDA+56
CSASPQEP EQU   GDA+52
PFSTCPAB EQU   GDA+48
VRPLEL   EQU   VRPOSTQ+4
VRPFEL   EQU   VRPOSTQ
SQASPLFT EQU   GDA+28
SQASPQEP EQU   GDA+24
CSAPQEP  EQU   GDA+8
VRDREG   EQU   GDA+4
RESV     EQU   GVSMFLAG+1
@NM00008 EQU   GDAFLAGS
WAITQUE  EQU   GDAFLAGS
SQATHRS2 EQU   GDAFLAGS
SQATHRS1 EQU   GDAFLAGS
GDAFLAG2 EQU   GDAFLAGS
NIPFOURK EQU   GDAFLAGS
GDAFLAG1 EQU   GDAFLAGS
PQERSVD  EQU   PQESECT+31
VVVRFLG  EQU   VMMFLGS
@NM00007 EQU   VMMFLGS
PQEHRID  EQU   PQESECT+29
PQERFLGS EQU   PQESECT+28
PQETCB   EQU   PQESECT+16
PQEBPQE  EQU   PQESECT+12
PQEFPQE  EQU   PQESECT+8
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00006 EQU   CVTFIX+248
@NM00005 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00004 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00003 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00002 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00001 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00032 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00031 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00030 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00029 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00028 EQU   FLCFSA
@NM00027 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00026 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00025 EQU   FLCIOA
@NM00024 EQU   FLCMCLA+15
@NM00023 EQU   FLCMCLA+14
@NM00022 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00021 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00020 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00019 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00018 EQU   FLCPER
@NM00017 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00016 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00015 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00014 EQU   FLCPIILC
@NM00013 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00012 EQU   FLCSVILC
@NM00011 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00010 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00009 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00117 EQU   GPFRR
@RT00119 EQU   RECRS1
@RT00123 EQU   RETRY
@RT00125 EQU   RECRSION
@RT00153 EQU   FREERL
@RT00155 EQU   GPRETSET
@RC00161 EQU   @RC00160
@RF00182 EQU   GPRETSET
@RT00187 EQU   GETRL
@RT00202 EQU   RECRSION
@RT00204 EQU   RECRSION
@RF00222 EQU   OTHRERRS
@RT00246 EQU   RET
@RT00253 EQU   LASTEL
@RF00286 EQU   RET
@RC00291 EQU   @RC00290
@RF00290 EQU   GPRETSET
@RT00323 EQU   RET
@RT00329 EQU   RET
@RF00328 EQU   L4
@RT00397 EQU   @EL00002
@RT00399 EQU   NEWFBQE
@PB00002 EQU   RET
@RC00162 EQU   @RC00161
@RC00292 EQU   @RC00291
@RC00163 EQU   @RC00162
@RC00293 EQU   @RC00292
@RC00164 EQU   @RC00163
@RC00294 EQU   @RC00293
@RC00165 EQU   @RC00164
@RC00295 EQU   @RC00294
@ENDDATA EQU   *
         END   IEAVGPRR,(C'PLS1401',0701,76087)
