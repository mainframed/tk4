         TITLE '***IEAVGCAS-AOS/2,REL 2    CREATE/FREE ADDRESS SPACE RO*
               OUTINE***'
IEAVGCAS CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(19)                                             0001
         DC    C'IEAVGCASR0300074351'                              0001
IEAQSPET DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00220-IEAQSPET)
         ENTRY IEAQSPET
IEAVGFAS DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00306-IEAVGFAS)
         ENTRY IEAVGFAS
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
        L     @00,@SIZDATD                SIZE OF @DATD DSECT
        L    @04,PSATOLD                  TCB ADDRESS
        L    @07,PSAAOLD                  ASCB ADDRESS
        GETMAIN R,LV=(0)                  SPACE FOR @DATD DSECT
        LR    @05,@01                     DATAREG
        L     @01,24(@13)                 RESTORE PARAMETER
        USING @DATD,@05                   DATAREG
        ST    @13,SAVESAVE                SAVE SAVEAREA PTR
OBTL1   SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LDA,IEAVGCAS(RE**
               LL1))
        SETFRR A,FRRAD=CASFRR,PARMAD=FRRPARM,WRKREGS=(REG3,REG2)
*   SAVESV2=SAVESAVE;               /* SAVE FOR FRR USE              */
         L     @14,FRRPARM                                         0104
         L     @12,SAVESAVE                                        0104
         ST    @12,SAVESV2(,@14)                                   0104
*   ASCBSAVE=ASCBREG;               /* SAVE FOR FRR USE              */
         ST    ASCBREG,ASCBSAVE(,@14)                              0105
*CASRETRY:                                                         0106
*   ASCBPTR=PSAAOLD;                /* CURRENT ASCB                  */
CASRETRY L     @14,PSAAOLD                                         0106
         ST    @14,ASCBPTR                                         0106
*   LDAPTR=ASCBLDA;                 /* LDA BASE                      */
         L     LDAPTR,ASCBLDA(,@14)                                0107
*   GDAPTR=CVTGDA;                  /* GDA BASE                      */
         L     @12,CVTPTR                                          0108
         L     GDAPTR,CVTGDA(,@12)                                 0108
*   IF ASCBASID^=MSASID THEN        /* ASID MUST = 1 OR              */
         CLC   ASCBASID(2,@14),@CH00068                            0109
         BNE   @RT00109                                            0109
*     GOTO NOTAUTH;                 /* NOT AUTHORIZED                */
*   ASCBPTR=ASCBREG;                /* BASE FOR NEW ASCB             */
         ST    ASCBREG,ASCBPTR                                     0111
*   GENERATE REFS(CVTCRMN);                                        0112
        GETMAIN  RC,BRANCH=YES,LV=4096,SP=0,BNDRY=PAGE    GET 4K IN
*                                           M.S. MEMORY
*   PAGEADD=REG1;                   /* SAVE ADDRESS OF PAGE          */
         L     @14,FRRPARM                                         0113
         ST    REG1,PAGEADD(,@14)                                  0113
*   IF RRETURN^=ZERO THEN           /* IF BAD RETURN FROM            */
         LTR   RRETURN,RRETURN                                     0114
         BNZ   @RT00114                                            0114
*     GOTO NOTAUTH;                 /* GO SET R.C. = 4               */
*   RESPECIFY                                                      0116
*    (REG0,                                                        0116
*     REG13) RESTRICTED;                                           0116
*   PARAM=ASCBPTR;                  /* SET UP PARMS FOR RSM          */
         L     @14,ASCBPTR                                         0117
         ST    @14,PARAM                                           0117
*   WORD1=FORMAT;                   /* # OF PAGES TO FORMAT          */
         MVI   WORD1,X'01'                                         0118
*   REG0=PARAM;                                                    0119
         L     REG0,PARAM                                          0119
*   REG1=PAGEADD;                   /* ADDRESS OF PAGE               */
         L     @14,FRRPARM                                         0120
         L     @14,PAGEADD(,@14)                                   0120
         LR    REG1,@14                                            0120
*   REG13=ADDR(CFAPWKAR);                                          0121
         LA    REG13,CFAPWKAR(,LDAPTR)                             0121
*   CALL IEAVITAS;                  /* GO TO RSM TO FORMAT THEIR   0122
*                                      GLOBAL AND LOCAL ADDRESS SPACE
*                                      CONTROL BLOCKS. (IEAVITAS USES
*                                      TWO 72-BYTE AREAS AND A THIRD
*                                      AREA EQUAL TO THE LENGTH OF AN
*                                      ACA CONTROL BLOCK IN CFAPWKAR)*/
         L     @15,@CV00155                                        0122
         BALR  @14,@15                                             0122
*   RSMBIT='1'B;                    /* FRR FOOTPRINT                 */
         L     @14,FRRPARM                                         0123
         OI    RSMBIT(@14),B'10000000'                             0123
*   RESPECIFY                                                      0124
*    (REG0,                                                        0124
*     REG13) UNRESTRICTED;                                         0124
*   IF RRETURN^=ZERO THEN           /* IF RSM ERROR FOUND,           */
         SLR   @12,@12                                             0125
         CR    RRETURN,@12                                         0125
         BNE   @RT00125                                            0125
*     GOTO RSMERR;                  /* DO NOT CONTINUE               */
*   NUMBYTES=PAGEADD+PAGE-RSMADDR;  /* # OF BYTES USED BY RSM        */
         L     @11,@CF00064                                        0127
         AL    @11,PAGEADD(,@14)                                   0127
         LR    NUMBYTES,@11                                        0127
         SLR   NUMBYTES,RSMADDR                                    0127
*   PAEND=PASTRT+PASIZE;            /* END OF PRIVATE AREA           */
         L     @14,PASTRT(,GDAPTR)                                 0128
         L     @10,PASIZE(,GDAPTR)                                 0128
         LR    @00,@14                                             0128
         ALR   @00,@10                                             0128
         ST    @00,PAEND                                           0128
*   TOPLDAMS=PAGEADD+PAGE-NUMBYTES; /* TOP @ OF LDA IN M.S. ADDRESSES*/
         SLR   @11,NUMBYTES                                        0129
         LR    TOPLDAMS,@11                                        0129
*   TOPLDANM=PAEND-NUMBYTES;        /* TOP LDA IN NEW ADDR.SPACE     */
         SLR   @00,NUMBYTES                                        0130
         LR    TOPLDANM,@00                                        0130
*   LDAPTR=TOPLDAMS-LENGTH(LDA);    /* LDA BASE FOR M.S. @'S         */
         LA    @11,1496                                            0131
         LR    LDAPTR,TOPLDAMS                                     0131
         SLR   LDAPTR,@11                                          0131
*   LDAPTRNM=TOPLDANM-LENGTH(LDA);  /* LDA PTR IN NEW A.S.           */
         LCR   @11,@11                                             0132
         ALR   @11,TOPLDANM                                        0132
         ST    @11,LDAPTRNM                                        0132
*/*                                                                  */
*/*  *****************************************************************/
*/*     CONSTRUCT  LDA IN THE MASTER SCHEDULER PAGE                  */
*/*  *****************************************************************/
*                                                                  0133
*   LVSMFLAG=ZERO;                  /* LDA FLAGS INIT TO 0           */
         SLR   @00,@00                                             0133
         ST    @00,LVSMFLAG(,LDAPTR)                               0133
*   PASCBSV=ASCBPTR;                /* ASCB = NEW ASCB               */
         L     @14,ASCBPTR                                         0134
         ST    @14,PASCBSV(,LDAPTR)                                0134
*   VVREGSZ=ZERO;                   /* INIT. REGION SIZE TO 0        */
         ST    @00,VVREGSZ(,LDAPTR)                                0135
*   LDA2=LDAPTR-LENGTH(BELOWLDA);   /* BEGINNING @ OF AREA TO BE   0136
*                                      FORMATTED IN M.S. PAGE        */
         LA    @14,352                                             0136
         LR    LDA2,LDAPTR                                         0136
         SLR   LDA2,@14                                            0136
*   LDA2NM=LDAPTRNM-LENGTH(BELOWLDA);/* @ OF AREA IN NEW MEMORY      */
         SLR   @11,@14                                             0137
         ST    @11,LDA2NM                                          0137
*   XVALUE=LDA2NM-LDA2;             /* DIFFERENCE BETWEEN @'S IN NEW
*                                      MEMORY AND M.S.             0138
*                                      PAGE--INCREMENT VALUE         */
         LR    @14,@11                                             0138
         SLR   @14,LDA2                                            0138
         ST    @14,XVALUE                                          0138
*   ASDPQE=ADDR(ASPQE)+XVALUE;      /* PTR TO A.S. PQE               */
         LA    @11,ASPQE(,LDA2)                                    0139
         LR    @10,@11                                             0139
         ALR   @10,@14                                             0139
         ST    @10,ASDPQE(,LDAPTR)                                 0139
*   LSQAPTR=ADDR(LSQASPQE)+XVALUE;  /* PTR TO 1ST LSQA SPQE          */
         LA    @00,LSQASPQE(,LDA2)                                 0140
         ALR   @00,@14                                             0140
         ST    @00,LSQAPTR(,LDAPTR)                                0140
*   LDASRPQE=ADDR(SRPQE)+XVALUE;    /* PTR TO SYSTEM REG. PQE        */
         LR    @00,LDA2                                            0141
         ALR   @00,@14                                             0141
         ST    @00,LDASRPQE(,LDAPTR)                               0141
*   LDARSVPT=ADDR(PGTABLE)+XVALUE;  /* @ SPACE RESVD FOR PG TAB      */
         ST    @00,@TF00001                                        0142
         LA    @00,PGTABLE(,LDA2)                                  0142
         ALR   @00,@14                                             0142
         ST    @00,LDARSVPT(,LDAPTR)                               0142
*/*                                                                  */
*/*  *****************************************************************/
*/*        INITIALIZE SYSTEM REGION CONTROL BLOCKS                   */
*/*  *****************************************************************/
*                                                                  0143
*   PQESEPTR=ADDR(SRPQE);           /* PQE BASE                      */
         LR    PQESEPTR,LDA2                                       0143
*   FBQESPTR=ADDR(SRFBQE);          /* FBQE BASE                     */
         LA    @00,SRFBQE(,LDA2)                                   0144
         LR    FBQESPTR,@00                                        0144
*   PQEFFBQE=ADDR(SRFBQE)+XVALUE;   /* @ 1ST S.R. FBQE IN TERMS OF 0145
*                                      NEW MEMORY                    */
         ALR   @00,@14                                             0145
         ST    @00,PQEFFBQE(,PQESEPTR)                             0145
*   PQEBFBQE=PQEFFBQE;              /* @ LAST S.R. FBQE              */
         ST    @00,PQEBFBQE(,PQESEPTR)                             0146
*   PQEFPQE=ZERO;                   /* NO OTHER PQE'S                */
         SLR   @00,@00                                             0147
         ST    @00,PQEFPQE(,PQESEPTR)                              0147
*   PQEBPQE=ZERO;                                                  0148
         ST    @00,PQEBPQE(,PQESEPTR)                              0148
*   PQESIZE=SRSIZE;                 /* SIZE OF SYSTEM REGION         */
         L     @14,SRSIZE                                          0149
         ST    @14,PQESIZE(,PQESEPTR)                              0149
*   PQEREGN=PASTRT;                 /* SYS. REG. STARTS AT BOTTOM OF
*                                      PRIVATE AREA                  */
         L     @14,PASTRT(,GDAPTR)                                 0150
         ST    @14,PQEREGN(,PQESEPTR)                              0150
*   VMMFLGS=ONEZERO;                /* REGION IS V=V                 */
         MVI   VMMFLGS(PQESEPTR),X'00'                             0151
*   FWDPTR=ADDR(SRPQE)+XVALUE;      /* ONLY FBQE ON QUEUE            */
         L     @14,@TF00001                                        0152
         ST    @14,FWDPTR(,FBQESPTR)                               0152
*   BCKPTR=FWDPTR;                  /* ONLY FBQE ON QUEUE            */
         ST    @14,BCKPTR(,FBQESPTR)                               0153
*   SIZE=SRSIZE;                    /* SIZE OF FREE AREA             */
         L     @14,SRSIZE                                          0154
         ST    @14,SIZE(,FBQESPTR)                                 0154
*   FBQAREA=PASTRT;                 /* START OF FREE AREA            */
         L     @14,PASTRT(,GDAPTR)                                 0155
         ST    @14,FBQAREA(,FBQESPTR)                              0155
*/*  *****************************************************************/
*/*      INITIALIZE ADDRESS SPACE CONTROL BLOCKS                     */
*/*  *****************************************************************/
*                                                                  0156
*   FBQESPTR=ADDR(ASFBQE);          /* FBQE BASE                     */
         LA    @14,ASFBQE(,LDA2)                                   0156
         LR    FBQESPTR,@14                                        0156
*   FWDPTR=ADDR(ASPQE)+XVALUE;      /* ONLY FBQE ON QUEUE            */
         ST    @10,FWDPTR(,FBQESPTR)                               0157
*   BCKPTR=FWDPTR;                                                 0158
         ST    @10,BCKPTR(,FBQESPTR)                               0158
*   SIZE=PASIZE-SRSIZE-LSQALLOC*PAGE;/* FREE AREA LEFT IN A.S.       */
         L     @10,@CF00099                                        0159
         L     @00,SRSIZE                                          0159
         ST    @14,@TF00001                                        0159
         L     @14,PASIZE(,GDAPTR)                                 0159
         SLR   @14,@00                                             0159
         LR    @00,@14                                             0159
         SLR   @00,@10                                             0159
         ST    @00,SIZE(,FBQESPTR)                                 0159
*   FBQAREA=PASTRT+SRSIZE;          /* START OF FREE SPACE           */
         L     @00,SRSIZE                                          0160
         L     @10,PASTRT(,GDAPTR)                                 0160
         ALR   @10,@00                                             0160
         ST    @10,FBQAREA(,FBQESPTR)                              0160
*   CURRGNTP=FBQAREA;               /* INITIALIZE VALUE FOR GETMAIN
*                                                            @YM00841*/
         ST    @10,CURRGNTP(,LDAPTR)                               0161
*   PQESEPTR=ADDR(ASPQE);           /* PQE BASE                      */
         LR    PQESEPTR,@11                                        0162
*   PQEFFBQE=ADDR(ASFBQE)+XVALUE;   /* 1ST A.S.FBQE                  */
         L     @12,XVALUE                                          0163
         L     @00,@TF00001                                        0163
         ALR   @00,@12                                             0163
         ST    @00,PQEFFBQE(,PQESEPTR)                             0163
*   PQEBFBQE=PQEFFBQE;              /* LAST A.S.FBQE                 */
         ST    @00,PQEBFBQE(,PQESEPTR)                             0164
*   PQEFPQE=ZERO;                   /* ONLY ONE PQE                  */
         SLR   @11,@11                                             0165
         ST    @11,PQEFPQE(,PQESEPTR)                              0165
*   PQEBPQE=ZERO;                                                  0166
         ST    @11,PQEBPQE(,PQESEPTR)                              0166
*   PQESIZE=PASIZE-SRSIZE;          /* SIZE OF A.S. PQE              */
         ST    @14,PQESIZE(,PQESEPTR)                              0167
*   PQEREGN=PASTRT+SRSIZE;          /* START @ OF A.S. PQE           */
         ST    @10,PQEREGN(,PQESEPTR)                              0168
*   VMMFLGS=ONEZERO;                /* REGION IS V=V                 */
         MVI   VMMFLGS(PQESEPTR),X'00'                             0169
*/*                                                                  */
*/*  *****************************************************************/
*/*        INITIALIZE LSQA CONTROL BLOCKS                            */
*/*  *****************************************************************/
*                                                                  0170
*   SPQESPTR=ADDR(LSQASPQE);        /* SPQE BASE                     */
         LA    @14,LSQASPQE(,LDA2)                                 0170
         ST    @14,SPQESPTR                                        0170
*   SPQEPTR=ZERO;                   /* ONLY SPQE                     */
         ST    @11,SPQEPTR(,@14)                                   0171
*   LASTSPQE='1'B;                                                 0172
         OI    LASTSPQE(@14),B'01000000'                           0172
*   SPDQEPTR=ADDR(LSQADQE)+XVALUE;  /* FIRST DQE                     */
         LA    @10,LSQADQE(,LDA2)                                  0173
         LR    @00,@10                                             0173
         ALR   @00,@12                                             0173
         ST    @00,SPDQEPTR(,@14)                                  0173
*   SPQEID=LSQASPID;                /* SP = 255                      */
         MVI   SPQEID(@14),X'FF'                                   0174
*   SPQEKEY=ONEZERO;                /* KEY = 0                       */
         MVI   SPQEKEY(@14),X'00'                                  0175
*   DQESEPTR=ADDR(LSQADQE);         /* DQE BASE                      */
         LR    DQESEPTR,@10                                        0176
*   DQFQEPTR=PAGEADD+LSQAFQEL+XVALUE;/* FIRST FQE            @Z30ENYG*/
         LA    @14,8                                               0177
         L     @10,FRRPARM                                         0177
         AL    @14,PAGEADD(,@10)                                   0177
         ALR   @12,@14                                             0177
         ST    @12,DQFQEPTR(,DQESEPTR)                             0177
*   DQEPTR=ZERO;                    /* ONLY DQE                      */
         ST    @11,DQEPTR(,DQESEPTR)                               0178
*   DQEBLKAD=PAEND-LSQALLOC*PAGE;   /* LOW ADDRESS OF THIS AREA      */
         L     @12,@CF00099                                        0179
         L     @00,PAEND                                           0179
         SLR   @00,@12                                             0179
         ST    @00,DQEBLKAD(,DQESEPTR)                             0179
*   DQELNTH=LSQALLOC*PAGE;          /* AMOUNT OF SPACE IN     SUBPOOL*/
         ST    @12,DQELNTH(,DQESEPTR)                              0180
*   FQESEPTR=PAGEADD+LSQAFQEL;      /* FQE BASE              @Z30ENYG*/
         LR    FQESEPTR,@14                                        0181
*   FQEPTR=ZER0;                    /* ONLY FQE              @Z30ENYG*/
         L     @14,ZER0                                            0182
         ST    @14,FQEPTR(,FQESEPTR)                               0182
*   FQELNTH=(LSQALLOC-ONE)*PAGE+LENGTH(CELL);/* LSQA FREE SPACE    0183
*                                                            @Z30ENYG*/
         LA    @14,16                                              0183
         L     @12,ONE                                             0183
         LA    @00,4                                               0183
         SLR   @00,@12                                             0183
         SLA   @00,12                                              0183
         ALR   @00,@14                                             0183
         ST    @00,FQELNTH(,FQESEPTR)                              0183
*   ASCBASXB=LDA2NM-LENGTH(ASXB);   /* PTR TO ASXB                   */
         L     @02,ASCBPTR                                         0184
         L     @11,LDA2NM                                          0184
         LA    @10,232                                             0184
         SLR   @11,@10                                             0184
         ST    @11,ASCBASXB(,@02)                                  0184
*   ASCBLDA=LDAPTRNM;               /* PTR TO NEW LDA                */
*                                                                  0185
         L     @00,LDAPTRNM                                        0185
         ST    @00,ASCBLDA(,@02)                                   0185
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT REMAINING FREE SPACE IN PAGE INTO A CELL POOL FOR VSM  */
*   /* CONTROL BLOCKS                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0186
*   CELLPTR=LDA2-LENGTH(ASXB);      /* ADDR FREE AREA IN PAGE      0186
*                                                            @Z30ENYG*/
         LCR   @10,@10                                             0186
         ALR   @10,LDA2                                            0186
         ST    @10,CELLPTR                                         0186
*   RNDCPADR=RNDCPADR&TRUNC;        /* RND TO CELLSIZE MULTIPLE    0187
*                                                            @Z30ENYG*/
         SLR   @00,@00                                             0187
         IC    @00,RNDCPADR                                        0187
         SLR   @11,@11                                             0187
         IC    @11,TRUNC                                           0187
         NR    @00,@11                                             0187
         STC   @00,RNDCPADR                                        0187
*   CELLPTR=CELLPTR-LENGTH(CELL);   /* ADDRESS OF FIRST CELL @Z30ENYG*/
         LCR   @14,@14                                             0188
         AL    @14,CELLPTR                                         0188
         ST    @14,CELLPTR                                         0188
*   LCLCELL=CELLPTR+XVALUE;         /* INIT FIELD IN LDA TO POINT TO
*                                      1ST CELL              @Z30ENYG*/
         AL    @14,XVALUE                                          0189
         ST    @14,LCLCELL(,LDAPTR)                                0189
*   LCLCELCT=ONE;                   /* NO. OF CELLS CREATED  @Z30ENYG*/
         ST    @12,LCLCELCT(,LDAPTR)                               0190
*   DO WHILE(PAGEADD+LENGTH(CELL)<CELLPTR);/* FORMAT FREE AREA INTO
*                                      CELLS                 @Z30ENYG*/
         B     @DE00191                                            0191
@DL00191 DS    0H                                                  0192
*     NEXTCELL=CELLPTR-LENGTH(CELL);/* FWD PTR TO NEXT CELL  @Z30ENYG*/
         L     @14,CELLPTR                                         0192
         LR    NEXTCELL,@14                                        0192
         SL    NEXTCELL,@CF00038                                   0192
*     NXTCELNM=NEXTCELL+XVALUE;     /* NEXT CELL IN NEW A.S. @Z30ENYG*/
         LR    @12,NEXTCELL                                        0193
         AL    @12,XVALUE                                          0193
         ST    @12,NXTCELNM(,@14)                                  0193
*     LCLCELCT=LCLCELCT+ONE;        /* CELL ADDED TO POOL    @Z30ENYG*/
         L     @14,LCLCELCT(,LDAPTR)                               0194
         AL    @14,ONE                                             0194
         ST    @14,LCLCELCT(,LDAPTR)                               0194
*     CELLPTR=NEXTCELL;             /* NEXT CELL TO BE CREATED     0195
*                                                            @Z30ENYG*/
         ST    NEXTCELL,CELLPTR                                    0195
*   END;                            /*                       @Z30ENYG*/
@DE00191 L     @14,CELLPTR                                         0196
         L     @12,FRRPARM                                         0196
         L     @12,PAGEADD(,@12)                                   0196
         LA    @00,16                                              0196
         ALR   @00,@12                                             0196
         CR    @00,@14                                             0196
         BL    @DL00191                                            0196
*   NXTCELNM=ZERO;                  /* LAST CELL IN POOL     @Z30ENYG*/
         SLR   @08,@08                                             0197
         ST    @08,NXTCELNM(,@14)                                  0197
*/*   FREE THE VIRTUAL PAGE IN MASTER SCHEDULER MEMORY               */
*                                                                  0198
*   DO;                             /* FREEMAIN(RU)                0198
*                                      LV(PAGE)A(PAGEADD->AREA)    0198
*                                      SP(ZERO) BRANCH               */
*     RESPECIFY                                                    0199
*      (GPR01F,                                                    0199
*       GPR03F,                                                    0199
*       GPR00F) RESTRICTED;                                        0199
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         LR    GPR01F,@08                                          0200
*     GPR03F=3;                     /* SET TYPE                      */
         LA    GPR03F,3                                            0201
*     GPR00F=PAGE;                  /* LENGTH REQUESTED              */
         L     GPR00F,@CF00064                                     0202
*     GPR01F=ADDR(PAGEADD->AREA);   /* SET REGISTER ONE              */
         LR    GPR01F,@12                                          0203
*     GPR03F=GPR03F+((ZERO)*256);   /* SUBPOOL VALUE                 */
*     CALL CVTCRMN;                 /* BRANCH ENTRY POINT            */
         L     @12,CVTPTR                                          0205
         L     @15,CVTCRMN(,@12)                                   0205
         BALR  @14,@15                                             0205
*     RESPECIFY                                                    0206
*      (GPR01F,                                                    0206
*       GPR03F,                                                    0206
*       GPR00F) UNRESTRICTED;                                      0206
*   END;                            /* FREEMAIN(RU)                0207
*                                      LV(PAGE)A(PAGEADD->AREA)    0207
*                                      SP(ZERO) BRANCH               */
*   RRETURN=ZERO;                   /* SUCCESSFUL RETURN             */
         SLR   RRETURN,RRETURN                                     0208
*   GOTO RET;                       /* RETURN                        */
         B     RET                                                 0209
*RSMERR:                                                           0210
*   FMADDR=PAGEADD;                 /* PARM FOR FREEMAIN             */
RSMERR   L     @14,FRRPARM                                         0210
         L     FMADDR,PAGEADD(,@14)                                0210
*   GENERATE REFS(CVTCRMN);                                        0211
        FREEMAIN RC,BRANCH=YES,LV=4096,SP=0,A=(FMADDR) FREE THE
*                                          PAGE
*NOTAUTH:                                                          0212
*   RRETURN=NOSUCCES;               /* INDICATE UNSUCCESSFUL       0212
*                                      PROCESSING                    */
NOTAUTH  LA    RRETURN,4                                           0212
*RET:                                                              0213
*   GENERATE REFS(PSALITA);                                        0213
RET      DS    0H                                                  0213
*                                         /* PREPARE TO RETURN      */
    SETFRR  D,WRKREGS=(REG2,REG3)        DELETE FRR FROM STACK
RELL1   SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LDA,IEAVGCAS(OBTL1))
*   REG13=SAVESAVE;                 /* RESTORE SAVEAREA PTR          */
         L     REG13,SAVESAVE                                      0214
*   REG2=RRETURN;                   /* SAVE R.C.ACROSS FREEMAIN      */
         LR    REG2,RRETURN                                        0215
*   GENERATE REFS(CVTCRMN,CVTMAP);                                 0216
        L    @00,@SIZDATD
        FREEMAIN  RC,LV=(0),A=(5)
*   RRETURN=REG2;                   /* RESTORE R.C.                  */
         LR    RRETURN,REG2                                        0217
*   RETURN;                         /* RETURN                        */
@EL00001 DS    0H                                                  0218
@EF00001 DS    0H                                                  0218
@ER00001 L     @14,12(,@13)                                        0218
         LM    @00,@12,20(@13)                                     0218
         BR    @14                                                 0218
*   RFY                                                            0219
*     GDAPTR UNRESTRICTED;                                         0219
*                                                                  0220
*/*                                                                  */
*/*  *****************************************************************/
*/*       ENTRY POINT FOR TASK TERMINATION INTERFACE---PERFORMS      */
*/*         STORAGE CLEAN-UP OPERATIONS AT TASK TERMINATION TIME     */
*/*  *****************************************************************/
*                                                                  0220
*IEAQSPET:                                                         0220
*   ENTRY;                                                         0220
*                                                                  0220
@EP00220 DS    0H                                                  0221
*   /*****************************************************************/
*   /*                                                               */
*   /* DECLARES FOR TASK TERMINATION SUBROUTINE                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*   DCL                                                            0221
*     RSAVE REG(13) RESTRICTED;     /* SAVE AREA PTR                 */
*   DCL                                                            0222
*     RID REG(6);                   /* SUBPOOL ID                    */
*   DCL                                                            0223
*     TCBPTR PTR(31) REG(4);        /* TCB PTR                       */
*   DCL                                                            0224
*     SPQELEN FIXED(31) CONSTANT(32);/* LENGTH OF AN SPQE            */
*   DCL                                                            0225
*     TWO29 PTR(8) CONSTANT(229);                                  0225
*   DCL                                                            0226
*     TWO30 PTR(8) CONSTANT(230);                                  0226
*   DCL                                                            0227
*     1 SAADDR,                     /* SAVE AREA ADDRESS             */
*      2 SAADDR1 PTR(8),                                           0227
*      2 SAADDR2 PTR(24);                                          0227
*   DCL                                                            0228
*     XFF FIXED(8) INIT(255);       /* SUBPOOL FOR DYN.       STORAGE*/
*   GENERATE REFS(SCVTRMBR,SCVTSECT);                              0229
        L     @00,@SIZDATD                SIZE OF @DATD DSECT
        ICM   @00,8,XFF                                        YM00831
        GETMAIN R,LV=(0),BRANCH=YES       GET SPACE FOR DATD   YM00831
*                                          DSECT OUT OF SP 255
*                                          SO TASK TERM. FREE OF
*                                          SP 0 DOES NOT FREE
*                                          DYNAMIC STORAGE
        LR    @05,@01                     DATAREG
        USING @DATD,@05                   DATAREG
        SETFRR  A,FRRAD=TTFRR,PARMAD=FRRPARM,WRKREGS=(REG3,REG2)
*TTRETRY:                                                          0230
*   RETCOD=ZERO;                    /* INITIALIZE R.C. TO 0          */
TTRETRY  SLR   @14,@14                                             0230
         ST    @14,RETCOD                                          0230
*   IF TCBFSAB=ZEROS THEN           /* SAVE AREA PRESENT?            */
         L     @12,TCBFSAB-1(,TCBPTR)                              0231
         LA    @12,0(,@12)                                         0231
         LTR   @12,@12                                             0231
         BZ    @RT00231                                            0231
*     GOTO ETSPQE;                  /* IF NOT, BRANCH                */
*   IF TCBFETXR='1'B THEN           /* BRANCH IF ETXR SPECIFIED      */
         TM    TCBFETXR(TCBPTR),B'00000010'                        0233
         BO    @RT00233                                            0233
*     GOTO ETSPQE;                  /* CHECK SPQE'S                  */
*   IF TCBECB^=ZERO THEN            /* BRANCH IF ECB POSTING         */
         C     @14,TCBECB(,TCBPTR)                                 0235
         BNE   @RT00235                                            0235
*     GOTO ETSPQE;                  /* REQUESTED                     */
*   SAADDR=TCBFSA;                  /* SAVE AREA ADDRESS             */
         L     @12,TCBFSA(,TCBPTR)                                 0237
         ST    @12,SAADDR                                          0237
*   SAADDR1=ONEZERO;                /* ZERO HIGH ORDER BYTE          */
         MVI   SAADDR1,X'00'                                       0238
*/*                                                                  */
*/*  *****************************************************************/
*/*       SAVE AREA NO LONGER NEEDED----FREE IT                      */
*/*  *****************************************************************/
*                                                                  0239
*   TCBFSAB=ZEROS;                  /* ZERO SAVE AREA PTR            */
         STCM  @14,7,TCBFSAB(TCBPTR)                               0239
*   GENERATE REFS(CVTCRMN);                                        0240
        FREEMAIN  RC,LV=72,SP=250,A=SAADDR,BRANCH=YES
*   IF RRETURN^=ZERO THEN           /* BAD RETURN FROM GETMAIN?      */
         LTR   RRETURN,RRETURN                                     0241
         BZ    @RF00241                                            0241
*     RETCOD=FOUR;                                                 0242
*                                                                  0242
         MVC   RETCOD(4),@CF00076                                  0242
*/*                                                                  */
*/*  *****************************************************************/
*/*      FREE TASK-RELATED SPACE                                     */
*/*  *****************************************************************/
*                                                                  0243
*ETSPQE:                                                           0243
*   IF TCBMSSB=ZEROS THEN           /* IF THERE ARE NO SPQE'S,       */
@RF00241 DS    0H                                                  0243
ETSPQE   L     @14,TCBMSSB-1(,TCBPTR)                              0243
         LA    @14,0(,@14)                                         0243
         LTR   @14,@14                                             0243
         BZ    @RT00243                                            0243
*     GOTO ETUKYSP;                 /* FREE AQE'S                    */
*ETFSPQE:                                                          0245
*   SPQESPTR=ZERO;                  /* ZERO OUT FIELD                */
ETFSPQE  SLR   @14,@14                                             0245
         ST    @14,SPQESPTR                                        0245
*   SPQPTR=TCBMSSB;                 /* GET PTR TO SPQE CHAIN FROM TCB*/
         MVC   SPQPTR(3),TCBMSSB(TCBPTR)                           0246
*   IF SPSHARE='1'B THEN            /* IF SUBPOOL IS SHARED,         */
         L     @12,SPQESPTR                                        0247
         TM    SPSHARE(@12),B'10000000'                            0247
         BO    @RT00247                                            0247
*     GOTO ETFSPQE1;                /* DON'T FREE IT                 */
*   IF SPQEID='00'X THEN            /* IF THIS IS SP 0,              */
         CLI   SPQEID(@12),X'00'                                   0249
         BNE   @RF00249                                            0249
*     TCBFSAB=ZEROS;                /* SET SAVE AREA PTR=0           */
         STCM  @14,7,TCBFSAB(TCBPTR)                               0250
*   RID=SPQEID;                     /* SUBPOOL ID FOR FREEMAIN       */
@RF00249 L     @14,SPQESPTR                                        0251
         SLR   RID,RID                                             0251
         IC    RID,SPQEID(,@14)                                    0251
*   GENERATE REFS(CVTCRMN);                                        0252
        FREEMAIN  RC,LV=0,SP=(RID),A=NULL,BRANCH=YES
*   IF RRETURN^=ZERO THEN           /* BAD RETURN FROM GETMAIN?      */
         LTR   RRETURN,RRETURN                                     0253
         BZ    @RF00253                                            0253
*     RETCOD=FOUR;                                                 0254
         MVC   RETCOD(4),@CF00076                                  0254
*ETFSPQE1:                                                         0255
*   TCBMSS=SPQEPTR;                 /* GET NEXT SPQE                 */
@RF00253 DS    0H                                                  0255
ETFSPQE1 L     @14,SPQESPTR                                        0255
         L     @14,SPQEPTR(,@14)                                   0255
         ST    @14,TCBMSS(,TCBPTR)                                 0255
*   TCBFLDPT=ADDR(TCBMSS);          /* QUEUE BEING WORKED UPON       */
         LA    TCBFLDPT,TCBMSS(,TCBPTR)                            0256
*   GOTO FREESPQE;                  /* GO FREE SPQE'S                */
*                                                                  0257
         B     FREESPQE                                            0257
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE SPACE IN SUBPOOLS 229 AND 230                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0258
*ETUKYSP:                                                          0258
*   IF TCBUKYSP=ZERO THEN           /* IF NO SP 229/230, BRANCH      */
ETUKYSP  L     @14,TCBUKYSP(,TCBPTR)                               0258
         LTR   @14,@14                                             0258
         BZ    @RT00258                                            0258
*     GOTO ETFAQE;                  /* BRANCH                @YM00410*/
*ETFUKYSP:                                                         0260
*   SPQESPTR=TCBUKYSP;              /* UPDATE PTR TO SPQE    @YM00410*/
ETFUKYSP L     @14,TCBUKYSP(,TCBPTR)                               0260
         ST    @14,SPQESPTR                                        0260
*   IF SPSHARE='1'B THEN            /* IF SHARED SP,                 */
         TM    SPSHARE(@14),B'10000000'                            0261
         BO    @RT00261                                            0261
*     GOTO ETFUKY1;                 /* DON'T FREE SPACE      @YM00410*/
*   RID=SPQEID;                     /* SP # IN A REG         @YM00410*/
         SLR   RID,RID                                             0263
         IC    RID,SPQEID(,@14)                                    0263
*   SPKEY=SPQEKEY;                  /* KEY IN REGISTER       @YM00410*/
         SLR   SPKEY,SPKEY                                         0264
         IC    SPKEY,SPQEKEY(,@14)                                 0264
*   GENERATE REFS(SPQEKEY,CVTCRMN);                                0265
*                                                  /* @YM00410*/
              FREEMAIN RC,LV=0,SP=(RID),KEY=(SPKEY),A=NULL,BRANCH=YES
*   IF RRETURN^=ZERO THEN           /* BAD RETURN FROM GETMAIN?      */
         LTR   RRETURN,RRETURN                                     0266
         BZ    @RF00266                                            0266
*     RETCOD=FOUR;                  /*                       @YM00410*/
         MVC   RETCOD(4),@CF00076                                  0267
*ETFUKY1:                                                          0268
*   TCBUKYSP=SPQEPTR;               /* PTR TO NEXT SPQE      @YM00410*/
@RF00266 DS    0H                                                  0268
ETFUKY1  L     @14,SPQESPTR                                        0268
         L     @14,SPQEPTR(,@14)                                   0268
         ST    @14,TCBUKYSP(,TCBPTR)                               0268
*   TCBFLDPT=ADDR(TCBUKYSP);        /* QUEUE BEING WORKED UPON     0269
*                                                             @YM0410*/
         LA    TCBFLDPT,TCBUKYSP(,TCBPTR)                          0269
*   GOTO FREESPQE;                  /* GO FREE SPQE'S /*     @YM00410*/
         B     FREESPQE                                            0270
*/*                                                                  */
*/*  *****************************************************************/
*/*       FREE SPACE DESCRIBED BY AQE'S                              */
*/*  *****************************************************************/
*                                                                  0271
*ETFAQE:                                                           0271
*   IF TCBAQE=ZERO THEN             /* IF NO AQE'S,                  */
ETFAQE   L     @14,TCBAQE(,TCBPTR)                                 0271
         LTR   @14,@14                                             0271
         BZ    @RT00271                                            0271
*     GOTO ETFSWA;                  /* FREE SWA                      */
*ETFAQE1:                                                          0273
*   GENERATE REFS(CVTCRMN);                                        0273
ETFAQE1  DS    0H                                                  0273
*                                        /* FREE SP 253/254*/
        FREEMAIN  RC,LV=0,SP=253,A=NULL,BRANCH=YES
*   IF RRETURN^=ZERO THEN           /* BAD RETURN FROM GETMAIN?      */
         LTR   RRETURN,RRETURN                                     0274
         BZ    @RF00274                                            0274
*     RETCOD=FOUR;                                                 0275
*                                                                  0275
         MVC   RETCOD(4),@CF00076                                  0275
*/*                                                                  */
*/*  *****************************************************************/
*/*       FREE SWA SPACE                                             */
*/*  *****************************************************************/
*                                                                  0276
*ETFSWA:                                                           0276
*   IF TCBSWA=ZERO THEN             /* IF NO SWA, DONE               */
@RF00274 DS    0H                                                  0276
ETFSWA   L     @14,TCBSWA(,TCBPTR)                                 0276
         LTR   @14,@14                                             0276
         BZ    @RT00276                                            0276
*     GOTO ETFRETN;                 /* PROCESSING DONE               */
*ETFSPQE2:                                                         0278
*   SPQESPTR=TCBSWA;                /* PTR TO FIRST SWA SPQE         */
ETFSPQE2 L     @14,TCBSWA(,TCBPTR)                                 0278
         ST    @14,SPQESPTR                                        0278
*   IF SPSHARE='1'B THEN            /* IF SUBPOOL IS SHARED,         */
         TM    SPSHARE(@14),B'10000000'                            0279
         BO    @RT00279                                            0279
*     GOTO ETFSPQE3;                /* DO NOT FREE IT                */
*   RID=SPQEID;                                                    0281
         SLR   RID,RID                                             0281
         IC    RID,SPQEID(,@14)                                    0281
*   GENERATE REFS(CVTCRMN);                                        0282
             FREEMAIN  RC,LV=0,SP=(RID),A=NULL,BRANCH=YES
*   IF RRETURN^=ZERO THEN           /* BAD RETURN FROM GETMAIN?      */
         LTR   RRETURN,RRETURN                                     0283
         BZ    @RF00283                                            0283
*     RETCOD=FOUR;                                                 0284
         MVC   RETCOD(4),@CF00076                                  0284
*ETFSPQE3:                                                         0285
*   TCBSWA=SPQEPTR;                 /* NEXT SWA SPQE                 */
@RF00283 DS    0H                                                  0285
ETFSPQE3 L     @14,SPQESPTR                                        0285
         L     @14,SPQEPTR(,@14)                                   0285
         ST    @14,TCBSWA(,TCBPTR)                                 0285
*   TCBFLDPT=ADDR(TCBSWA);          /* QUEUE BEING WORKED UPON       */
*                                                                  0286
         LA    TCBFLDPT,TCBSWA(,TCBPTR)                            0286
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE TO FREE UP SPQE'S                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0287
*FREESPQE:                                                         0287
*   IF LASTSPQE^='0'B THEN          /* IF THIS WAS LAST SPQE ON    0287
*                                      CHAIN, SET CHAIN PTR TO ZERO  */
FREESPQE L     @14,SPQESPTR                                        0287
         TM    LASTSPQE(@14),B'01000000'                           0287
         BZ    @RF00287                                            0287
*     TCBFLDPT->TCBFIELD=ZERO;                                     0288
         SLR   @14,@14                                             0288
         ST    @14,TCBFIELD(,TCBFLDPT)                             0288
*   GENERATE SETS(REG0,REG1,REG14,REG15) REFS(SPQESPTR);           0289
@RF00287 DS    0H                                                  0289
*                                      REGS USED BY MACROS    @Z30ENYG
          L     REG15,SPQESPTR         ADDR OF SPQE           @Z30ENYG
          FREEMAIN  P,BRANCH=YES,A=(REG15)                    @Z30ENYG
*                               FREE SPQE (CELL RET TO LSQA)  @Z30ENYG
*   IF RRETURN^=ZERO THEN           /* RECORD BAD RETURN FROM      0290
*                                      FREEMAIN                      */
         LTR   RRETURN,RRETURN                                     0290
         BZ    @RF00290                                            0290
*     RETCOD=FOUR;                                                 0291
*                                                                  0291
         MVC   RETCOD(4),@CF00076                                  0291
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL CHAINS HAVE BEEN HANDLED, RETURN TO CALLER. IF ANY     */
*   /* CHAIN REMAINS TO BE PROCESSED, BRANCH TO ISSUE SUBPOOL        */
*   /* FREEMAINS FOR THAT CHAIN.                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0292
*   IF TCBMSS=ZERO THEN             /* REGION SUBPOOLS FREE?         */
@RF00290 SLR   @14,@14                                             0292
         C     @14,TCBMSS(,TCBPTR)                                 0292
         BNE   @RF00292                                            0292
*     IF TCBUKYSP=ZERO THEN         /* 229 AND 230 FREE?             */
         C     @14,TCBUKYSP(,TCBPTR)                               0293
         BNE   @RF00293                                            0293
*       IF TCBAQE=ZERO THEN         /* SP 253 FREE?                  */
         C     @14,TCBAQE(,TCBPTR)                                 0294
         BNE   @RF00294                                            0294
*         IF TCBSWA=ZERO THEN       /* SWA FREE?                     */
         C     @14,TCBSWA(,TCBPTR)                                 0295
         BE    @RT00295                                            0295
*           GOTO ETFRETN;           /* DONE--RETURN                  */
*         ELSE                      /* SWA NOT FREED                 */
*           GOTO ETFSPQE2;          /* SWA FREE                      */
         B     ETFSPQE2                                            0297
*       ELSE                        /* AQE'S NOT FREED               */
*         GOTO ETFAQE1;             /* 253 FREE                      */
*     ELSE                          /* 229/230 NOT FREED             */
*       GOTO ETFUKYSP;              /* 229/230 FREE                  */
*   ELSE                            /* TCBMSS NOT FREED              */
*     GOTO ETFSPQE;                 /* GO FREE TCBMSS                */
*ETFRETN:                                                          0301
*   GENERATE;                                                      0301
ETFRETN  DS    0H                                                  0301
        SETFRR  D,WRKREGS=(REG3,REG2)
*   REG2=RETCOD;                    /* RETURN CODE                   */
         L     REG2,RETCOD                                         0302
*   GENERATE;                                                      0303
              L    @00,@SIZDATD
              FREEMAIN  RC,LV=(0),A=(5),SP=255,BRANCH=YES
*   RRETURN=REG2;                   /* R.C. IN REG 15                */
         LR    RRETURN,REG2                                        0304
*   RETURN;                         /* RETURN                        */
         B     @EL00001                                            0305
*                                                                  0306
*/*                                                                  */
*/*  *****************************************************************/
*/*       ENTRY POINT FOR FREE ADDRESS SPACE PROCESSING              */
*/*        ANY VSM ADDRESS SPACE RELATED GLOBAL SPACE                */
*/*        IS FREED AT THIS TIME                                     */
*/*  *****************************************************************/
*                                                                  0306
*IEAVGFAS:                                                         0306
*   ENTRY;                                                         0306
*                                                                  0306
@EP00306 DS    0H                                                  0307
*   /*****************************************************************/
*   /*                                                               */
*   /* DECLARES FOR FREE ADDRESS SPACE SUBROUTINE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0307
*   DCL                                                            0307
*     UNCHAINW LABEL LOCAL EXTERNAL;                               0307
*   DCL                                                            0308
*     UNCHAINP LABEL LOCAL EXTERNAL;                               0308
*   DCL                                                            0309
*     OUT LABEL LOCAL EXTERNAL;                                    0309
*   RFY                                                            0310
*     GDAPTR RESTRICTED;                                           0310
*   GENERATE REFS(PSALITA,CVTCRMN,CVTMAP);                         0311
        L     @00,@SIZDATD                SIZE OF @DATD DSECT
        L    @04,PSATOLD
        L    @07,PSAAOLD
        GETMAIN R,LV=(0)                  SPACE FOR @DATD DSECT
        LR    @05,@01                     DATAREG
        L     @01,24(@13)                 RESTORE PARAMETER
        USING @DATD,@05                   DATAREG
        ST    @13,SAVESAVE                SAVE SAVEAREA PTR
OBTL2   SETLOCK  OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LDA,IEAVGCAS(R**
               ELL2))
        SETFRR  A,FRRAD=FASFRR,PARMAD=FRRPARM,WRKREGS=(REG3,REG2)
*   SAVESV2=SAVESAVE;               /* SAVE FOR FRR USE              */
         L     @14,FRRPARM                                         0312
         L     @12,SAVESAVE                                        0312
         ST    @12,SAVESV2(,@14)                                   0312
*   ASCBSAVE=ASCBREG;               /* SAVE FOR FRR USE              */
         ST    ASCBREG,ASCBSAVE(,@14)                              0313
*FASRETRY:                                                         0314
*   RETCOD=ZERO;                    /* INITIALIZE RETURN CODE        */
FASRETRY SLR   @14,@14                                             0314
         ST    @14,RETCOD                                          0314
*   GDAPTR=CVTGDA;                  /* GDA BASE                      */
         L     @14,CVTPTR                                          0315
         L     GDAPTR,CVTGDA(,@14)                                 0315
*   ASCBPTR=PSAAOLD;                /* CURRENT ASCB                  */
         L     @14,PSAAOLD                                         0316
         ST    @14,ASCBPTR                                         0316
*   IF ASCBASID^=MSASID THEN        /* ASID SHOULD = 1               */
         CLC   ASCBASID(2,@14),@CH00068                            0317
         BNE   @RT00317                                            0317
*     GOTO NOTAUTH;                 /* IF NOT, UNAUTHORIZED          */
*   GENERATE REFS(PSALITA);                                        0319
OBTS2   SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(VRWPQEL,IEAVG**
               CAS(RELS2))
*   ASCBREG=PARMPTR;                /* GET ADDRESS OF PARM AREA    0320
*                                                            @YM04712*/
*                                                                  0320
         L     ASCBREG,PARMPTR(,ASCBREG)                           0320
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF THE ADDRESS SPACE THAT IS ENDING HAS AN       */
*   /* ELEMENT ON EITHER THE WAIT OR POST QUEUES IN SQA              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0321
*   IF VRWFEL=ZERO THEN             /* IF NO ELS ON WAITQ,           */
         L     @14,VRWFEL(,GDAPTR)                                 0321
         LTR   @14,@14                                             0321
         BZ    @RT00321                                            0321
*     GOTO PQ;                      /* CHECK POSTQ                   */
*   WPQLPTR=VRWFEL;                 /* EL BASE = 1ST EL @            */
         LR    WPQLPTR,@14                                         0323
*TESTW:                                                            0324
*   IF WPELASCB=ASCBADD THEN        /* IF THIS EL FOR THIS           */
TESTW    CLC   WPELASCB(4,WPQLPTR),ASCBADD(ASCBREG)                0324
         BE    @RT00324                                            0324
*     GOTO UNCHAINW;                /* DEQUEUE ELEMENT               */
*   IF WPNEXTEL=ZERO THEN           /* IF NO MORE ELS ON WAIT,       */
         L     @14,WPNEXTEL(,WPQLPTR)                              0326
         LTR   @14,@14                                             0326
         BZ    @RT00326                                            0326
*     GOTO PQ;                      /* CHECK POSTQ                   */
*   WPQLPTR=WPNEXTEL;               /* GET NEXT EL ON QUEUE          */
         LR    WPQLPTR,@14                                         0328
*   GOTO TESTW;                     /* CHECK ASCB'S                  */
*                                                                  0329
         B     TESTW                                               0329
*   /*****************************************************************/
*   /*                                                               */
*   /* ELEMENT WAS FOUND ON THE VRWAIT QUEUE---UNCHAIN IT            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0330
*UNCHAINW:                                                         0330
*   WDEQ='1'B;                      /* FRR FOOTPRINT                 */
UNCHAINW L     @14,FRRPARM                                         0330
         OI    WDEQ(@14),B'01000000'                               0330
*   IF WPNEXTEL=ZERO THEN           /* FIRST EL. ON QUEUE?           */
         SLR   @14,@14                                             0331
         C     @14,WPNEXTEL(,WPQLPTR)                              0331
         BNE   @RF00331                                            0331
*     DO;                                                          0332
*       IF WPPREVEL=ZERO THEN       /* IF THIS IS ONLY EL ON         */
         C     @14,WPPREVEL(,WPQLPTR)                              0333
         BNE   @RF00333                                            0333
*         DO;                       /* QUEUE, SET ANCHOR             */
*           VRWFEL=ZERO;            /* BLOCK PTRS TO 0               */
         ST    @14,VRWFEL(,GDAPTR)                                 0335
*           VRWLEL=ZERO;                                           0336
         ST    @14,VRWLEL(,GDAPTR)                                 0336
*           WAITQUE='0'B;           /* NO SPEC ELS WAITING           */
         NI    WAITQUE(GDAPTR),B'11111101'                         0337
*           CALL FREEQEL;           /* GO FREE THE ELEMENT           */
         BAL   @14,FREEQEL                                         0338
*           GOTO OUT;               /* RETURN                        */
         B     OUT                                                 0339
*         END;                                                     0340
*       ELSE                        /* IF EL IS LAST ON QUEUE,       */
*         DO;                       /* UPDATE POINTERS               */
@RF00333 DS    0H                                                  0342
*           WPPREVEL->WPNEXTEL=WPNEXTEL;                           0342
         L     @14,WPPREVEL(,WPQLPTR)                              0342
         L     @12,WPNEXTEL(,WPQLPTR)                              0342
         ST    @12,WPNEXTEL(,@14)                                  0342
*           VRWLEL=WPPREVEL;                                       0343
         ST    @14,VRWLEL(,GDAPTR)                                 0343
*           CALL FREEQEL;           /* GO FREE THE ELEMENT           */
         BAL   @14,FREEQEL                                         0344
*           FSTELPTR=VRWFEL+SPECADDR;                              0345
         LA    FSTELPTR,24                                         0345
         AL    FSTELPTR,VRWFEL(,GDAPTR)                            0345
*           IF FSTELPTR->WPSPADDR=ZERO THEN/* IF FIRST ELEMENT ON  0346
*                                      QUEUE IS NOT SPECIFIC,        */
         L     @14,WPSPADDR(,FSTELPTR)                             0346
         LTR   @14,@14                                             0346
         BNZ   @RF00346                                            0346
*             WAITQUE='0'B;         /* ZERO WAIT BIT                 */
         NI    WAITQUE(GDAPTR),B'11111101'                         0347
*           GOTO OUT;               /* RETURN                        */
         B     OUT                                                 0348
*         END;                                                     0349
*     END;                                                         0350
*   IF WPPREVEL=ZERO THEN           /* IF EL IS 1ST ON QUEUE,        */
@RF00331 L     @14,WPPREVEL(,WPQLPTR)                              0351
         LTR   @14,@14                                             0351
         BNZ   @RF00351                                            0351
*     DO;                           /* UPDATE POINTERS AND           */
*       WPNEXTEL->WPPREVEL=WPPREVEL;/* DEQUEUE ELEMENT               */
         L     @12,WPNEXTEL(,WPQLPTR)                              0353
         ST    @14,WPPREVEL(,@12)                                  0353
*       VRWFEL=WPNEXTEL;                                           0354
         ST    @12,VRWFEL(,GDAPTR)                                 0354
*       CALL FREEQEL;               /* GO FREE THE ELEMENT           */
         BAL   @14,FREEQEL                                         0355
*       FSTELPTR=VRWFEL+SPECADDR;                                  0356
         LA    FSTELPTR,24                                         0356
         AL    FSTELPTR,VRWFEL(,GDAPTR)                            0356
*       IF FSTELPTR->WPSPADDR=ZERO THEN/* IF FIRST ELEMENT ON QUEUE
*                                      IS NOT SPECIFIC, ZERO WAIT BIT*/
         L     @14,WPSPADDR(,FSTELPTR)                             0357
         LTR   @14,@14                                             0357
         BNZ   @RF00357                                            0357
*         WAITQUE='0'B;                                            0358
         NI    WAITQUE(GDAPTR),B'11111101'                         0358
*       GOTO OUT;                   /* RETURN                        */
         B     OUT                                                 0359
*     END;                                                         0360
*   WPNEXTEL->WPPREVEL=WPPREVEL;    /* IF EL IN MIDDLE OF            */
@RF00351 L     @14,WPNEXTEL(,WPQLPTR)                              0361
         L     @12,WPPREVEL(,WPQLPTR)                              0361
         ST    @12,WPPREVEL(,@14)                                  0361
*   WPPREVEL->WPNEXTEL=WPNEXTEL;    /* QUEUE, DEQUEUE IT             */
         ST    @14,WPNEXTEL(,@12)                                  0362
*   CALL FREEQEL;                   /* GO FREE THE ELEMENT           */
         BAL   @14,FREEQEL                                         0363
*   GOTO OUT;                       /* RETURN                        */
         B     OUT                                                 0364
*                                                                  0365
*   /*****************************************************************/
*   /*                                                               */
*   /* NO ELEMENT FOUND ON THE VRWAITQ. NOW CHECK FOR AN ELEMENT ON  */
*   /* THE VRPOSTQ                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0365
*PQ:                                                               0365
*   IF VRPFEL=ZERO THEN             /* IF NO ELS ON POSTQ,           */
PQ       L     @14,VRPFEL(,GDAPTR)                                 0365
         LTR   @14,@14                                             0365
         BZ    @RT00365                                            0365
*     GOTO OUT;                     /* PROCESSING DONE               */
*   ELSE                            /* EL BASE = 1ST EL @            */
*     WPQLPTR=VRPFEL;                                              0367
         LR    WPQLPTR,@14                                         0367
*TESTP:                                                            0368
*   IF WPELASCB=ASCBADD THEN        /* IF EL ON POSTQ,               */
TESTP    CLC   WPELASCB(4,WPQLPTR),ASCBADD(ASCBREG)                0368
         BE    @RT00368                                            0368
*     GOTO UNCHAINP;                /* DEQUEUE POST EL.              */
*   IF WPNEXTEL=ZERO THEN           /* IF NO MORE ELS ON POSTQ,      */
         L     @14,WPNEXTEL(,WPQLPTR)                              0370
         LTR   @14,@14                                             0370
         BZ    @RT00370                                            0370
*     GOTO OUT;                     /* RETURN                        */
*   WPQLPTR=WPNEXTEL;               /* GET NEXT POSTQ EL             */
         LR    WPQLPTR,@14                                         0372
*   GOTO TESTP;                     /* CHECK ASCB'S                  */
*                                                                  0373
         B     TESTP                                               0373
*   /*****************************************************************/
*   /*                                                               */
*   /* AN ELEMENT WAS FOUND ON THE VRPOSTQ---DEQUEUE IT              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0374
*UNCHAINP:                                                         0374
*   PDEQ='1'B;                      /* FRR FOOTPRINT                 */
UNCHAINP L     @14,FRRPARM                                         0374
         OI    PDEQ(@14),B'00100000'                               0374
*   IF WPNEXTEL=ZERO THEN           /* IF EL. IS 1ST ON QUEUE        */
         SLR   @14,@14                                             0375
         C     @14,WPNEXTEL(,WPQLPTR)                              0375
         BNE   @RF00375                                            0375
*     DO;                                                          0376
*       IF WPPREVEL=ZERO THEN       /* IF EL IS ONLY ONE ON          */
         C     @14,WPPREVEL(,WPQLPTR)                              0377
         BNE   @RF00377                                            0377
*         DO;                       /* QUEUE, SET ANCHOR             */
*           VRPFEL=ZERO;            /* BLOCK PTRS TO 0               */
         ST    @14,VRPFEL(,GDAPTR)                                 0379
*           VRPLEL=ZERO;                                           0380
         ST    @14,VRPLEL(,GDAPTR)                                 0380
*           CALL FREEQEL;           /* GO FREE THE ELEMENT           */
         BAL   @14,FREEQEL                                         0381
*           GOTO OUT;               /* RETURN                        */
         B     OUT                                                 0382
*         END;                                                     0383
*       ELSE                        /* IF EL IS LAST ON QUEUE,       */
*         DO;                       /* UPDATE PTRS AND DEQUEUE       */
@RF00377 DS    0H                                                  0385
*           WPPREVEL->WPNEXTEL=WPNEXTEL;                           0385
         L     @14,WPPREVEL(,WPQLPTR)                              0385
         L     @12,WPNEXTEL(,WPQLPTR)                              0385
         ST    @12,WPNEXTEL(,@14)                                  0385
*           VRPLEL=WPPREVEL;                                       0386
         ST    @14,VRPLEL(,GDAPTR)                                 0386
*           CALL FREEQEL;           /* GO FREE THE ELEMENT           */
         BAL   @14,FREEQEL                                         0387
*           GOTO OUT;               /* RETURN                        */
         B     OUT                                                 0388
*         END;                                                     0389
*     END;                                                         0390
*   IF WPPREVEL=ZERO THEN           /* IF EL IS 1ST ON QUEUE,        */
@RF00375 L     @14,WPPREVEL(,WPQLPTR)                              0391
         LTR   @14,@14                                             0391
         BNZ   @RF00391                                            0391
*     DO;                           /* UPDATE PTRS AND DEQUEUE       */
*       WPNEXTEL->WPPREVEL=WPPREVEL;                               0393
         L     @12,WPNEXTEL(,WPQLPTR)                              0393
         ST    @14,WPPREVEL(,@12)                                  0393
*       VRPFEL=WPNEXTEL;                                           0394
         ST    @12,VRPFEL(,GDAPTR)                                 0394
*       CALL FREEQEL;               /* FREE THE ELEMENT              */
         BAL   @14,FREEQEL                                         0395
*       GOTO OUT;                   /* RETURN                        */
         B     OUT                                                 0396
*     END;                                                         0397
*   WPNEXTEL->WPPREVEL=WPPREVEL;    /* IF EL IN MIDDLE OF            */
@RF00391 L     @14,WPNEXTEL(,WPQLPTR)                              0398
         L     @12,WPPREVEL(,WPQLPTR)                              0398
         ST    @12,WPPREVEL(,@14)                                  0398
*   WPPREVEL->WPNEXTEL=WPNEXTEL;    /* QUEUE, DEQUEUE IT             */
         ST    @14,WPNEXTEL(,@12)                                  0399
*   CALL FREEQEL;                   /* FREE THE ELEMENT              */
         BAL   @14,FREEQEL                                         0400
*OUT:                                                              0401
*   GENERATE REFS(PSALITA);                                        0401
OUT      DS    0H                                                  0401
*                                         /* RELEASE SALLOC         */
RELS2   SETLOCK RELEASE,TYPE=SALLOC,RELATED=(VRWPQEL,IEAVGCAS(OBTS2))
*   IF SETRETRN=LOCKVIOL THEN       /* IF LOCK VIOLATION, ABEND      */
         C     SETRETRN,@CF00050                                   0402
         BNE   @RF00402                                            0402
*     GENERATE;                                                    0403
              ABEND  X'082',,,SYSTEM
*OUTA:                                                             0404
*     GENERATE REFS(PSALITA);                                      0404
@RF00402 DS    0H                                                  0404
OUTA     DS    0H                                                  0404
*                                      /* RELEASE LOCAL LOCK & FRR  */
        SETFRR  D,WRKREGS=(REG3,REG2)   DELETE FRR FROM STACK
RELL2   SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LDA,IEAVGCAS(OBTL2))
*OUTB:                                                             0405
*     REG2=RETCOD;                  /* SET REG 2 = RETURN CODE       */
OUTB     L     REG2,RETCOD                                         0405
*   REG13=SAVESAVE;                 /* RESTORE SAVEAREA PTR          */
         L     REG13,SAVESAVE                                      0406
*   GENERATE REFS(CVTCRMN,CVTMAP);                                 0407
        L    @00,@SIZDATD
        FREEMAIN  RC,LV=(0),A=(5)
*   RRETURN=REG2;                   /* R.C. IN REG 15                */
         LR    RRETURN,REG2                                        0408
*   RETURN;                         /* RETURN                        */
         B     @EL00001                                            0409
*                                                                  0410
*/********************************************************************/
*/*        THIS IS THE INTERNAL PROCEDURE WHICH FREES                */
*/*           ELEMENTS ON THE V=R WAIT/POST QUEUES.                  */
*/********************************************************************/
*                                                                  0410
*FREEQEL:                                                          0410
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0410
FREEQEL  DS    0H                                                  0411
*   REG2=RETREG;                    /* SAVE RETURN ADDRESS           */
         LR    REG2,RETREG                                         0411
*/* FREE THE ELEMENT                                                 */
*                                                                  0412
*   DO;                             /* FREEMAIN(RC)                0412
*                                      LV(28)A(WPQLPTR->VRWPQEL)   0412
*                                      SP(SQASPID) BRANCH            */
*     RESPECIFY                                                    0413
*      (GPR01F,                                                    0413
*       GPR03F,                                                    0413
*       GPR00F) RESTRICTED;                                        0413
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0414
*     GPR03F=1;                     /* SET TYPE                      */
         LA    GPR03F,1                                            0415
*     GPR00F=28;                    /* LENGTH REQUESTED              */
         LA    GPR00F,28                                           0416
*     GPR01F=ADDR(WPQLPTR->VRWPQEL);/* SET REGISTER ONE              */
         LR    GPR01F,WPQLPTR                                      0417
*     GPR03F=GPR03F+((SQASPID)*256);/* SUBPOOL VALUE                 */
         AL    GPR03F,@CF01913                                     0418
*     CALL CVTCRMN;                 /* BRANCH ENTRY POINT            */
         L     @12,CVTPTR                                          0419
         L     @15,CVTCRMN(,@12)                                   0419
         BALR  @14,@15                                             0419
*     RESPECIFY                                                    0420
*      (GPR01F,                                                    0420
*       GPR03F,                                                    0420
*       GPR00F) UNRESTRICTED;                                      0420
*   END;                            /* FREEMAIN(RC)                0421
*                                      LV(28)A(WPQLPTR->VRWPQEL)   0421
*                                      SP(SQASPID) BRANCH            */
*   IF RRETURN^=ZERO THEN           /* BAD RETURN FROM FREEMAIN?     */
         LTR   RRETURN,RRETURN                                     0422
         BZ    @RF00422                                            0422
*     RETCOD=RRETURN;               /* SAVE R.C.                     */
         ST    RRETURN,RETCOD                                      0423
*   RETREG=REG2;                    /* RESTORE RETURN ADDRESS        */
@RF00422 LR    RETREG,REG2                                         0424
*   END FREEQEL;                                                   0425
@EL00002 DS    0H                                                  0425
@EF00002 DS    0H                                                  0425
@ER00002 BR    @14                                                 0425
*   END IEAVGCAS                                                   0426
*                                                                  0426
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAGDA  )                                       */
*/*%INCLUDE SYSLIB  (EPILOG  )                                       */
*/*%INCLUDE SYSLIB  (IHALDA  )                                       */
*/*%INCLUDE SYSLIB  (IHAPQE  )                                       */
*/*%INCLUDE SYSLIB  (IHAFBQE )                                       */
*/*%INCLUDE SYSLIB  (IHASPQE )                                       */
*/*%INCLUDE SYSLIB  (IHADQE  )                                       */
*/*%INCLUDE SYSLIB  (IHAFQE  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAWPQEL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (FREEMAIN)                                       */
*/*%INCLUDE SYSLIB  (AHAFMAIN)                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*                                                                  0426
*       ;                                                          0426
@DATA    DS    0H
@CH00068 DC    H'1'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
IEAVGCAS CSECT
         DS    0F
@CF00076 DC    F'4'
@CF00050 DC    F'8'
@CF00038 DC    F'16'
@CF00064 DC    F'4096'
@CF00099 DC    F'16384'
@CF01913 DC    F'62720'
@DATD    DSECT
         DS    0D
ASCBPTR  DS    A
ASXBPTR  DS    A
SCVTSPTR DS    A
SPQESPTR DS    AL4
         ORG   SPQESPTR
@NM00001 DS    AL1
SPQPTR   DS    AL3
         ORG   SPQESPTR+4
PAEND    DS    A
LDAPTRNM DS    A
XVALUE   DS    F
RETCOD   DS    F
LDA2NM   DS    A
CELLPTR  DS    AL4
         ORG   CELLPTR
@NM00002 DS    CL3
RNDCPADR DS    FL1
         ORG   CELLPTR+4
FRRPARM  DS    A
SAVESAVE DS    A
FRREPTR  DS    A
ZER0     DS    F
I        DS    F
PARAM    DS    CL4
         ORG   PARAM
WORD1    DS    AL1
WORD2    DS    AL3
         ORG   PARAM+4
SAADDR   DS    CL4
         ORG   SAADDR
SAADDR1  DS    AL1
SAADDR2  DS    AL3
         ORG   SAADDR+4
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVGCAS CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00155 DC    V(IEAVITAS)
@CV00156 DC    V(IEAVCARR)
@CV00157 DC    V(IEAVTTRR)
@CV00158 DC    V(IEAVFARR)
         DS    0D
NULL     DC    F'0'
SRSIZE   DC    F'16384'
ONE      DC    F'1'
CASFRR   DC    VL4(IEAVCARR)
TTFRR    DC    VL4(IEAVTTRR)
FASFRR   DC    VL4(IEAVFARR)
TRUNC    DC    XL1'F0'
XFF      DC    AL1(255)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
NEXTCELL EQU   @02
LDA2     EQU   @03
TOPLDANM EQU   @12
TOPLDAMS EQU   @03
NUMBYTES EQU   @02
FSTELPTR EQU   @02
TCBFLDPT EQU   @02
WPQLPTR  EQU   @08
FQESEPTR EQU   @02
DQESEPTR EQU   @02
FBQESPTR EQU   @12
PQESEPTR EQU   @02
LDAPTR   EQU   @08
ASCBREG  EQU   @01
SETRETRN EQU   @13
FMADDR   EQU   @06
GDAPTR   EQU   @06
RSMADDR  EQU   @01
REG1     EQU   @01
REG0     EQU   @00
REG2     EQU   @02
REG5     EQU   @05
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
RTCB     EQU   @04
RASCB    EQU   @07
RETREG   EQU   @14
SPKEY    EQU   @15
RRETURN  EQU   @15
GPR01F   EQU   @01
GPR03F   EQU   @03
GPR00F   EQU   @00
TCBPTR   EQU   @04
RSAVE    EQU   @13
RID      EQU   @06
REG11    EQU   @11
REG3     EQU   @03
         ENTRY NOTAUTH
         ENTRY CASRETRY
         ENTRY TTRETRY
         ENTRY FASRETRY
         ENTRY UNCHAINW
         ENTRY UNCHAINP
         ENTRY OUT
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
TCBFIELD EQU   0
AREA     EQU   0
EOTPARM  EQU   0
ASCBADD  EQU   EOTPARM+4
PARMPTR  EQU   0
CELL     EQU   0
NXTCELNM EQU   CELL
BELOWLDA EQU   0
SRPQE    EQU   BELOWLDA
SRFBQE   EQU   BELOWLDA+32
ASPQE    EQU   BELOWLDA+48
ASFBQE   EQU   BELOWLDA+80
LSQASPQE EQU   BELOWLDA+96
LSQADQE  EQU   BELOWLDA+112
PGTABLE  EQU   BELOWLDA+128
RRPARMS  EQU   0
FLGS     EQU   RRPARMS
RSMBIT   EQU   FLGS
WDEQ     EQU   FLGS
PDEQ     EQU   FLGS
PAGEADD  EQU   RRPARMS+4
ASCBSAVE EQU   RRPARMS+8
SAVESV2  EQU   RRPARMS+12
GDA      EQU   0
GVSMFLAG EQU   GDA
GDAFLAGS EQU   GVSMFLAG
WAITQUE  EQU   GDAFLAGS
PASTRT   EQU   GDA+16
PASIZE   EQU   GDA+20
VRPOSTQ  EQU   GDA+32
VRPFEL   EQU   VRPOSTQ
VRPLEL   EQU   VRPOSTQ+4
VRWAITQ  EQU   GDA+40
VRWFEL   EQU   VRWAITQ
VRWLEL   EQU   VRWAITQ+4
LDA      EQU   0
LVSMFLAG EQU   LDA
PASCBSV  EQU   LDA+4
ASDPQE   EQU   LDA+8
CFAPWKAR EQU   LDA+1164
LSQAPTR  EQU   LDA+1464
VVREGSZ  EQU   LDA+1468
CURRGNTP EQU   LDA+1472
LDASRPQE EQU   LDA+1476
LDARSVPT EQU   LDA+1480
LCLCELL  EQU   LDA+1488
LCLCELCT EQU   LDA+1492
PQESECT  EQU   0
PQEFFBQE EQU   PQESECT
PQEBFBQE EQU   PQESECT+4
PQEFPQE  EQU   PQESECT+8
PQEBPQE  EQU   PQESECT+12
PQESIZE  EQU   PQESECT+20
PQEREGN  EQU   PQESECT+24
VMMFLGS  EQU   PQESECT+30
FBQESECT EQU   0
FWDPTR   EQU   FBQESECT
BCKPTR   EQU   FBQESECT+4
SIZE     EQU   FBQESECT+8
FBQAREA  EQU   FBQESECT+12
SPQESECT EQU   0
SPQEAD   EQU   SPQESECT
SPQEPTR  EQU   SPQEAD
SPDQEPTR EQU   SPQESECT+4
SPQEFLGS EQU   SPQESECT+8
SPSHARE  EQU   SPQEFLGS
LASTSPQE EQU   SPQEFLGS
SPQEID   EQU   SPQESECT+10
SPQEKEY  EQU   SPQESECT+11
DQESECT  EQU   0
DQFQEPTR EQU   DQESECT
DQEPTR   EQU   DQESECT+4
DQEBLKAD EQU   DQESECT+8
DQELNTH  EQU   DQESECT+12
FQESECT  EQU   0
FQEPTR   EQU   FQESECT
FQTYPE   EQU   FQEPTR
FQELNTH  EQU   FQESECT+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBMSSB  EQU   TCBMSS+1
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFETXR EQU   TCBFLGS2
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBFSAB  EQU   TCBFSA+1
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBECB   EQU   TCB+144
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBAQE   EQU   TCB+156
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBSWA   EQU   TCB+248
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBUKYSP EQU   TCB+268
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
ASCB     EQU   0
ASCBASID EQU   ASCB+36
ASCBLDA  EQU   ASCB+48
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASXB     EQU   0
ASXBAEQ  EQU   ASXB+168
VRWPQEL  EQU   0
WPNEXTEL EQU   VRWPQEL
WPPREVEL EQU   VRWPQEL+4
WPELASCB EQU   VRWPQEL+16
WPSPADDR EQU   VRWPQEL+24
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSENTR EQU   0
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
SCVTSECT EQU   0
SCVTRMBR EQU   SCVTSECT+28
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FRRSPTR  EQU   PSACSTK
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTCRMN  EQU   CVTS01+156
CVTGDA   EQU   CVTS01+212
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
@NM00066 EQU   SCVTSECT+180
@NM00065 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00064 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00063 EQU   SCVTSECT+160
@NM00062 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
SCVTSTAT EQU   SCVTSECT+148
@NM00061 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00060 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00059 EQU   SCVTSECT+128
@NM00058 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00057 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00056 EQU   SCVTSECT+108
@NM00055 EQU   SCVTSECT+104
@NM00054 EQU   SCVTSECT+100
@NM00053 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00052 EQU   SCVTSECT+88
@NM00051 EQU   SCVTSECT+84
@NM00050 EQU   SCVTSECT+80
@NM00049 EQU   SCVTSECT+76
@NM00048 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00047 EQU   SCVTSECT+56
@NM00046 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00045 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00044 EQU   SCVTSECT+32
@NM00043 EQU   SCVTSECT+24
@NM00042 EQU   SCVTSECT+20
@NM00041 EQU   SCVTSECT+16
@NM00040 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
FRRSPARM EQU   FRRSENTR+8
@NM00039 EQU   FRRSFLGS+1
@NM00038 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSFRRA EQU   FRRSENTR
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
FRRSCURR EQU   FRRSHEAD+12
FRRSELEN EQU   FRRSHEAD+8
FRRSLAST EQU   FRRSHEAD+4
FRRSEMP  EQU   FRRSHEAD
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00037 EQU   CVTFIX+248
@NM00036 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
WPELSIZE EQU   VRWPQEL+20
WPERRADD EQU   VRWPQEL+12
WPECBADD EQU   VRWPQEL+8
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBRV23 EQU   ASXB+220
ASXBRV22 EQU   ASXB+216
ASXBRV21 EQU   ASXB+212
ASXBRV20 EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBRV18 EQU   ASXB+200
ASXBRV17 EQU   ASXB+196
ASXBRV16 EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00011 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00010 EQU   TCB+296
TCBRV185 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBRSV36 EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBRSV35 EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00009 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBRSV04 EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00008 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
FQERSVD  EQU   FQESECT+12
FQAREA   EQU   FQESECT+8
FQEPTRA  EQU   FQEPTR+1
FQECPB   EQU   FQTYPE
FQERGNFL EQU   FQTYPE
DQEHRID  EQU   DQEBLKAD
SPQERES2 EQU   SPQESECT+12
SPQERES1 EQU   SPQESECT+9
SPQEOWN  EQU   SPQEFLGS
SPDQEAD  EQU   SPDQEPTR
PQERSVD  EQU   PQESECT+31
VVVRFLG  EQU   VMMFLGS
@NM00007 EQU   VMMFLGS
PQEHRID  EQU   PQESECT+29
PQERFLGS EQU   PQESECT+28
PQETCB   EQU   PQESECT+16
LDAEND   EQU   LDA+1496
LDALIMIT EQU   LDA+1484
CSAVE    EQU   LDA+1100
OBFRSAVE EQU   LDA+1036
GFRESAVE EQU   LDA+972
GMREPSAV EQU   LDA+908
FBQSAVE  EQU   LDA+844
G4KSAVE  EQU   LDA+780
FSAVE    EQU   LDA+716
BSAVE    EQU   LDA+652
SAVEREG2 EQU   LDA+588
BRANCHSV EQU   LDA+524
GMFMWKAR EQU   LDA+24
LDARES2  EQU   LDA+21
LDACBSP  EQU   LDA+20
LDARQSTA EQU   LDA+16
LDATCB   EQU   LDA+12
@NM00006 EQU   LVSMFLAG+1
LDABRSW  EQU   LVSMFLAG
LDAFLAGS EQU   LVSMFLAG
LDASTART EQU   LDA
GBLCELCT EQU   GDA+60
GLBLCELL EQU   GDA+56
CSASPQEP EQU   GDA+52
PFSTCPAB EQU   GDA+48
SQASPLFT EQU   GDA+28
SQASPQEP EQU   GDA+24
VRPQEP   EQU   GDA+12
CSAPQEP  EQU   GDA+8
VRDREG   EQU   GDA+4
RESV     EQU   GVSMFLAG+1
@NM00005 EQU   GDAFLAGS
SQATHRS2 EQU   GDAFLAGS
SQATHRS1 EQU   GDAFLAGS
GDAFLAG2 EQU   GDAFLAGS
NIPFOURK EQU   GDAFLAGS
GDAFLAG1 EQU   GDAFLAGS
FLGS2    EQU   RRPARMS+1
@NM00004 EQU   FLGS
@NM00003 EQU   CELL+4
EOTTCB   EQU   EOTPARM+8
EOTFLAGS EQU   EOTPARM
@NM00035 EQU   PSA+3412
PSASTAK  EQU   PSA+3072
@NM00034 EQU   PSA+1040
PSAUSEND EQU   PSA+1040
PSARV062 EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00033 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00032 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00031 EQU   FLCFSA
@NM00030 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00029 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00028 EQU   FLCIOA
@NM00027 EQU   FLCMCLA+15
@NM00026 EQU   FLCMCLA+14
@NM00025 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00024 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00023 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00022 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00021 EQU   FLCPER
@NM00020 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00019 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00018 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00017 EQU   FLCPIILC
@NM00016 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00015 EQU   FLCSVILC
@NM00014 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00013 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00012 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00109 EQU   NOTAUTH
@RT00114 EQU   NOTAUTH
@RT00125 EQU   RSMERR
@RT00231 EQU   ETSPQE
@RT00233 EQU   ETSPQE
@RT00235 EQU   ETSPQE
@RT00243 EQU   ETUKYSP
@RT00247 EQU   ETFSPQE1
@RT00258 EQU   ETFAQE
@RT00261 EQU   ETFUKY1
@RT00271 EQU   ETFSWA
@RT00276 EQU   ETFRETN
@RT00279 EQU   ETFSPQE3
@RT00295 EQU   ETFRETN
@RF00295 EQU   ETFSPQE2
@RF00294 EQU   ETFAQE1
@RF00293 EQU   ETFUKYSP
@RF00292 EQU   ETFSPQE
@RT00317 EQU   NOTAUTH
@RT00321 EQU   PQ
@RT00324 EQU   UNCHAINW
@RT00326 EQU   PQ
@RF00346 EQU   OUT
@RF00357 EQU   OUT
@RT00365 EQU   OUT
@RT00368 EQU   UNCHAINP
@RT00370 EQU   OUT
@ENDDATA EQU   *
         END   IEAVGCAS,(C'PLS0208',0603,74351)
