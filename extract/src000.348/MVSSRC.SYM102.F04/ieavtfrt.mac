TFRT     TITLE 'IEAVTFRT RTM CB INTERFACE FOR IEAVTFSD                 *
                        '
IEAVTFRT CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(22)                                             0001
         DC    C'IEAVTFRT UZ14566 77287'                           0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(12),0(@01)                                 0001
*                                                                  0030
*   /*****************************************************************/
*   /*                                                               */
*   /* BEFORE GETTING THE RECORD FORMATTED SUMMARIZE ANY MISSING DATA*/
*   /* BY PRINTTING OUT THE MIATABLE                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0030
*   MIAPTR=ADDR(SMDLRDAT)+SMDLRLEN; /* LOCATE THE MIATABLE           */
         L     @10,@PC00001+4                                      0030
         L     @10,SMDLRPTR(,@10)                                  0030
         LA    MIAPTR,SMDLRDAT(,@10)                               0030
         AL    MIAPTR,SMDLRLEN(,@10)                               0030
*   IF MIALAST(1)=OFF               /* IS THE FIRST ENTRY IN THE   0031
*                                      TABLE THE LAST ONE            */
*     THEN                          /* NO SO THERE WAS MISSING DATA  */
         TM    MIALAST(MIAPTR),B'10000000'                         0031
         BNZ   @RF00031                                            0031
*     DO;                                                          0032
*       ADPLFMT2=ADDR(MIATABLE);    /* PASS THE ADDRESSES OF THE   0033
*                                      MISSING DATA TO THE FORMAT  0033
*                                      SERVICE FOR INCLUSION INTO THE
*                                      MSG                           */
         L     @10,@PC00001                                        0033
         L     @10,ABDPLPTR(,@10)                                  0033
         ST    MIAPTR,ADPLFMT2(,@10)                               0033
*       DO MIAINDEX=1 BY 1 WHILE MIALAST(MIAINDEX)=OFF;/* LOOP     0034
*                                      THROUGH THE TABLE WRITING OUT
*                                      THE RANGES OF THE MISSING DATA*/
         LA    MIAINDEX,1                                          0034
         B     @DE00034                                            0034
@DL00034 DS    0H                                                  0035
*         R1=ADDR(ABDPL);           /* POINT TO AMDPRDMP PARM LIST   */
         L     @10,@PC00001                                        0035
         L     @10,ABDPLPTR(,@10)                                  0035
         LR    R1,@10                                              0035
*         R0=ADDR(MIAFP);           /* POINT TO THE FORMAT PATTERN 0036
*                                      FOR THE MISSING DATA LINE     */
         LA    R0,MIAFP                                            0036
*         CALL FMTSERV;             /* CALL FORMAT SERVICE           */
         L     @15,ADPLFRMT(,@10)                                  0037
         BALR  @14,@15                                             0037
*         CALL LINEPRNT;            /* PRINT THE FORMATTED LINE      */
         L     @10,@PC00001                                        0038
         L     @10,ABDPLPTR(,@10)                                  0038
         L     @15,ADPLPRNT(,@10)                                  0038
         BALR  @14,@15                                             0038
*       END;                                                       0039
         AH    MIAINDEX,@CH00048                                   0039
@DE00034 LR    @10,MIAINDEX                                        0039
         SLA   @10,3                                               0039
         ST    @10,@TF00001                                        0039
         ALR   @10,MIAPTR                                          0039
         AL    @10,@CF00286                                        0039
         TM    MIALAST(@10),B'10000000'                            0039
         BZ    @DL00034                                            0039
*       ADPLFMT1=ADDR(MIAPAD(MIAINDEX));/* POINT TO THE PAD CHAR TO
*                                      BE PUT INTO THE MSG           */
         L     @10,@PC00001                                        0040
         L     @10,ABDPLPTR(,@10)                                  0040
         L     @05,@TF00001                                        0040
         AL    @05,@CF00287                                        0040
         LA    @05,MIAPAD-4(@05,MIAPTR)                            0040
         ST    @05,ADPLFMT1(,@10)                                  0040
*       ADPLFMT2=ADDR(MIAPAD(MIAINDEX));                           0041
         ST    @05,ADPLFMT2(,@10)                                  0041
*       R1=ADDR(ABDPL);             /* POINT TO AMDPRDMP PARM LIST   */
         LR    R1,@10                                              0042
*       R0=ADDR(PADFP);             /* POINT TO THE FORMAT PATTERN 0043
*                                      FOR THE MISSING DATA BOTTOM 0043
*                                      LINE                          */
         LA    R0,PADFP                                            0043
*       CALL FMTSERV;               /* CALL FORMAT SERVICE           */
         L     @15,ADPLFRMT(,@10)                                  0044
         BALR  @14,@15                                             0044
*       CALL LINEPRNT;              /* PRINT THE FORMATTED LINE      */
         L     @10,@PC00001                                        0045
         L     @10,ABDPLPTR(,@10)                                  0045
         L     @15,ADPLPRNT(,@10)                                  0045
         BALR  @14,@15                                             0045
*     END;                                                         0046
*                                                                  0047
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD THE SUBFORMATTER FOR THIS RECORD TYPE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0047
*   IF SMDLRID=SMDIHSA              /* COMPARE THE ID OF THE RECORD
*                                      TO BE FORMATTED WITH THE VALUE
*                                      FOR THE INTERRUPT HANDLER   0047
*                                      SAVEAREA                      */
*     THEN                          /* IF THIS IS AN IHSA RECORD     */
@RF00031 L     @10,@PC00001+4                                      0047
         L     @10,SMDLRPTR(,@10)                                  0047
         CLC   SMDLRID(2,@10),@CH00098                             0047
         BNE   @RF00047                                            0047
*     DO;                           /* LOAD EP(IHSAMOD) ERRET(NOLOAD)*/
*       RESPECIFY                                                  0049
*        (GPR00P,                                                  0049
*         GPR01P,                                                  0049
*         GPR15F) RESTRICTED;                                      0049
*       GPR00P=ADDR(IHSAMOD);       /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,IHSAMOD                                      0050
*       GPR01P=0;                   /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0051
*       GPR01P=GPR01P×'80000000'X;  /* ERROR RETURN LABEL SPECIFIED  */
         O     GPR01P,@CF00265                                     0052
*       SVC(8);                     /* ISSUE LOAD SVC                */
         SVC   8                                                   0053
*       IF GPR15F^=0 THEN           /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0054
         BNZ   @RT00054                                            0054
*         GOTO NOLOAD;              /* BRANCH TO ERROR LOCATION      */
*       RESPECIFY                                                  0056
*        (GPR00P,                                                  0056
*         GPR01P,                                                  0056
*         GPR15F) UNRESTRICTED;                                    0056
*     END;                          /* LOAD EP(IHSAMOD) ERRET(NOLOAD)*/
*   ELSE                            /* IF NOT THE IHSA               */
*     IF SMDLRID=SMDRTM2A           /* COMPARE WITH THE VALUE FOR THE
*                                      RTM2WA                        */
*       THEN                        /* IF THIS IS AN RTM2WA RECORD   */
         B     @RC00047                                            0058
@RF00047 L     @10,@PC00001+4                                      0058
         L     @10,SMDLRPTR(,@10)                                  0058
         CLC   SMDLRID(2,@10),@CH00191                             0058
         BNE   @RF00058                                            0058
*       DO;                         /* LOAD EP(RTM2MOD) ERRET(NOLOAD)*/
*         RESPECIFY                                                0060
*          (GPR00P,                                                0060
*           GPR01P,                                                0060
*           GPR15F) RESTRICTED;                                    0060
*         GPR00P=ADDR(RTM2MOD);     /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,RTM2MOD                                      0061
*         GPR01P=0;                 /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0062
*         GPR01P=GPR01P×'80000000'X;/* ERROR RETURN LABEL SPECIFIED  */
         O     GPR01P,@CF00265                                     0063
*         SVC(8);                   /* ISSUE LOAD SVC                */
         SVC   8                                                   0064
*         IF GPR15F^=0 THEN         /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0065
         BNZ   @RT00065                                            0065
*           GOTO NOLOAD;            /* BRANCH TO ERROR LOCATION      */
*         RESPECIFY                                                0067
*          (GPR00P,                                                0067
*           GPR01P,                                                0067
*           GPR15F) UNRESTRICTED;                                  0067
*       END;                        /* LOAD EP(RTM2MOD) ERRET(NOLOAD)*/
*     ELSE                          /* IF NONE THEN DO NOTHING       */
*NOLOAD:                            /* IF THE LOAD FAILED THEN DO  0069
*                                      NOTHING                       */
*       RETURN CODE(4);             /* RETURN TO IEAVTFSD CODE 4 TO
*                                      SHOW NO FORMATTING DONE       */
         B     @RC00058                                            0069
@RF00058 DS    0H                                                  0069
NOLOAD   L     @13,4(,@13)                                         0069
         L     @00,@SIZDATD                                        0069
         LR    @01,@11                                             0069
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,4                                               0069
         L     @14,12(,@13)                                        0069
         LM    @00,@12,20(@13)                                     0069
         BR    @14                                                 0069
*   FMTRTNP=R0;                     /* SAVE THE ADDRESS FROM LOAD    */
@RC00058 DS    0H                                                  0070
@RC00047 LR    FMTRTNP,R0                                          0070
*   FAKEPL=ABDPL;                   /* COPY THE AMDPRDMP PARMLIST    */
         LA    @10,PLAREA                                          0071
         L     @02,@PC00001                                        0071
         L     @02,ABDPLPTR(,@02)                                  0071
         MVC   FAKEPL(60,@10),ABDPL(@02)                           0071
*   RFY                                                            0072
*     ABDPL BASED(ADDR(FAKEPL));    /* SWITCH THE MAPPING TO THE COPY
*                                      OF THE PARMLIST WHICH WILL BE
*                                      USED                          */
*   ADPLMEMA=ADDR(FAKEDAS);         /* SUBSTITUTE THE FAKE DUMP    0073
*                                      ACCESS SERVICE ROUTINE ADDRESS*/
         LA    @02,FAKEDAS                                         0073
         ST    @02,ADPLMEMA(,@10)                                  0073
*   STM(DATAREG,BASEREG,REGSAVE);   /* SAVE REGS NEEDED FOR FAKEDAS
*                                      ADDRESSABILITY                */
         STM   DATAREG,BASEREG,REGSAVE(@10)                        0074
*   ADPLCOM1=ADDR(WORKAREA);        /* THE FMT RTNS BEING CALLED   0075
*                                      EXPECT A WORKAREA             */
         LA    @02,WORKAREA                                        0075
         ST    @02,ADPLCOM1(,@10)                                  0075
*   ADPLFMT1=0;                     /* THIS FIELD IS EXPECTED TO   0076
*                                      CONTAIN THE STARTING VALUE FOR
*                                      THE DISPLACEMENT GENERATED AT
*                                      THE LEFT SIDE OF THE FORMATTED
*                                      DATA AREA                     */
         SLR   @02,@02                                             0076
         ST    @02,ADPLFMT1(,@10)                                  0076
*   ADPLFMT2=SMDLRADR;              /* THIS FIELD IS EXPECTED TO   0077
*                                      CONTAIN THE DUMP ADDRESS OF 0077
*                                      THE DATA AREA TO BE FORMATTED.*/
         L     @15,@PC00001+4                                      0077
         L     @15,SMDLRPTR(,@15)                                  0077
         MVC   ADPLFMT2(4,@10),SMDLRADR(@15)                       0077
*   READCNT=0;                      /* INIT THE COUNT OF THE NUMBER
*                                      OF TIMES FAKEDAS HAS BEEN   0078
*                                      CALLED                        */
         ST    @02,READCNT(,@10)                                   0078
*   R1=ADDR(FMTRTNPL);              /* PASS THE EXTENDED PARMLIST TO
*                                      THE FMT RTN                   */
         LR    R1,@10                                              0079
*   CALL FMTRTN;                    /* CALL THE FMT SUBRTN LOADED    */
         LR    @15,FMTRTNP                                         0080
         BALR  @14,@15                                             0080
*   RETURN CODE(0);                                                0081
         L     @13,4(,@13)                                         0081
         L     @00,@SIZDATD                                        0081
         LR    @01,@11                                             0081
         FREEMAIN R,LV=(0),A=(1)
         SLR   @15,@15                                             0081
         L     @14,12(,@13)                                        0081
         LM    @00,@12,20(@13)                                     0081
         BR    @14                                                 0081
*FAKEDAS:                                                          0082
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0082
*                                                                  0082
FAKEDAS  DS    0H                                                  0083
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC REPRESENTS THE FAKE DUMP ACCESS SERVICE WHOSE       */
*   /* ADDRESS IS SUBSTITUTED IN THE COPY OF THE AMDPRDMP PARMLIST   */
*   /* PASSED TO THE FMT SUBRTNS CALLED. IT WILL BE CALLED BY THEM   */
*   /* AND BY THE FORMAT SERVICE EACH TIME DATA FROM THE DUMP IS     */
*   /* NEEDED. R0 WILL CONTAIN THE DUMP ADDRESS THAT IS TO BE READ   */
*   /* INTO STORAGE, AND THE ALTERED TO BE THE STORAGE ADDRESS OF THE*/
*   /* DATA. IN FACT THE FMT SUBRTN WAS GIVEN, AS THE ADDRESS OF THE */
*   /* DATA AREA TO BE FMT, THE STORAGE ADDRESS WHERE THE DATA HAD   */
*   /* ALREADY BEEN RECONSTRUCTED. THERFORE THE ADDRESS IN R0 DOES   */
*   /* NOT NEED TO BE CHANGED, ONLY VALIDITY CHECKED TO BE SURE IT IS*/
*   /* WITHIN THE RECONTRUCTED AREA.                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0083
*   RFY                                                            0083
*     R13 RSTD;                                                    0083
*   STM(R1,R14,SA);                 /* SAVE REGS IN SAVEAREA PASSED  */
         STM   R1,R14,SA(R13)                                      0084
*   RFY                                                            0085
*     FMTRTNPL BASED(R1);                                          0085
*   RFY                                                            0086
*     RETCODE RSTD;                                                0086
*   LM(DATAREG,BASEREG,REGSAVE);    /* RESTORE REGS NEEDED FOR     0087
*                                      FAKEDAS ADDRESSABILITY        */
         LM    DATAREG,BASEREG,REGSAVE(R1)                         0087
*   IF READCNT<3                    /* AND IS THIS ONE OF THE FIRST
*                                      THREE CALLS                   */
*     THEN                          /* IF IT IS PASS BACK PHONIE DATA*/
         L     @14,READCNT(,R1)                                    0088
         CH    @14,@CH00089                                        0088
         BNL   @RF00088                                            0088
*     DO;                                                          0089
*       READCNT=READCNT+1;          /* INCREMENT THE READ COUNT      */
         AH    @14,@CH00048                                        0090
         ST    @14,READCNT(,R1)                                    0090
*       R0=IHSPDATA(READCNT);       /* PASS THE ADDRESS OF THE     0091
*                                      CORRECT PHONIE DATA BACK AS IF
*                                      READ FROM THE DUMP            */
         SLA   @14,2                                               0091
         L     R0,IHSPDATA-4(@14)                                  0091
*       RETCODE=0;                  /* SAY IT WAS A SUCCESS          */
         SLR   RETCODE,RETCODE                                     0092
*     END;                                                         0093
*   ELSE                            /* IF THIS ISN'T ONE OF THE FIRST
*                                      THREE CALLS WHERE PHONIE DATA
*                                      MUST BE RETURNED              */
*     DO;                                                          0094
         B     @RC00088                                            0094
@RF00088 DS    0H                                                  0095
*       IF R0<SMDLRADR×R0>=SMDLRADR+SMDLRLEN/* COMPARE THE ADDRESS 0095
*                                      REQUESTED TO THE RANGE OF   0095
*                                      VALID ADDRESES                */
*         THEN                      /* IF IT IS OUTSIDE THE RANGE    */
         L     @14,@PC00001+4                                      0095
         L     @14,SMDLRPTR(,@14)                                  0095
         L     @10,SMDLRADR(,@14)                                  0095
         CR    R0,@10                                              0095
         BL    @RT00095                                            0095
         AL    @10,SMDLRLEN(,@14)                                  0095
         CR    R0,@10                                              0095
         BL    @RF00095                                            0095
@RT00095 DS    0H                                                  0096
*         RETCODE=4;                /* THEN INDICATE NOT AVAILABLE   */
         LA    RETCODE,4                                           0096
*       ELSE                                                       0097
*         DO;                       /* IF IT IS IN THE RANGE         */
         B     @RC00095                                            0097
@RF00095 DS    0H                                                  0098
*           R0=R0-SMDLRADR+ADDR(SMDLRDAT);/* CONVERT R0 FROM A DUMP
*                                      ADDRESS TO THE CORRESPONDING
*                                      STORAGE ADDRESS IN THE      0098
*                                      RECONSTRUCTED RECORD          */
         L     @14,@PC00001+4                                      0098
         L     @14,SMDLRPTR(,@14)                                  0098
         LR    @10,R0                                              0098
         SL    @10,SMDLRADR(,@14)                                  0098
         LA    @14,SMDLRDAT(,@14)                                  0098
         ALR   @10,@14                                             0098
         LR    R0,@10                                              0098
*           RETCODE=0;              /* AND INDICATE SUCCESS          */
         SLR   RETCODE,RETCODE                                     0099
*         END;                                                     0100
*     END;                                                         0101
@RC00095 DS    0H                                                  0102
*   LM(R1,R14,SA);                  /* RESTORE REGS FROM SAVEAREA    */
@RC00088 LM    R1,R14,SA(R13)                                      0102
*   RETURN;                                                        0103
@EL00002 DS    0H                                                  0103
@EF00002 DS    0H                                                  0103
@ER00002 BR    @14                                                 0103
*   END FAKEDAS;                                                   0104
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR15F FIXED(31) REG(15),                                    0105
*     GPR00P PTR(31) REG(0),                                       0105
*     GPR01P PTR(31) REG(1);                                       0105
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0106
*     I031F FIXED(31) BASED,                                       0106
*     I031P PTR(31) BASED,                                         0106
*     I015F FIXED(15) BASED,                                       0106
*     I015P PTR(15) BASED,                                         0106
*     I008P PTR(8) BASED,                                          0106
*     I001C CHAR(1) BASED;                                         0106
*   END IEAVTFRT                                                   0107
*                                                                  0107
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */
*/*%INCLUDE SYSLIB  (IHASMDLR)                                       */
*                                                                  0107
*       ;                                                          0107
@DATA    DS    0H
@CH00048 DC    H'1'
@CH00089 DC    H'3'
@CH00098 DC    H'47'
@CH00191 DC    H'57'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@TF00001 DS    F
IEAVTFRT CSECT
         DS    0F
@CF00286 DC    F'-8'
@CF00287 DC    F'-4'
@CF00265 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
PLAREA   DS    CL108
WORKAREA DS    CL200
IEAVTFRT CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PDATA2   DC    A(99999)
PDATA1   DC    CL2'03'
PDATA3   DC    X'00004000400000000000000000000000'
FRRSMOD  DC    CL8'IEAFTFRR'
RTM2MOD  DC    CL8'IEAFTRT2'
IHSAMOD  DC    CL8'IEAFTIHS'
PATCHLOC DC    CL100'IEAVTFRT PATCH AREA. 100 BYTES LONG'
SMDWSAG  DC    AL2(6)
         DC    AL2(7)
         DC    AL2(8)
         DC    AL2(9)
         DC    AL2(10)
         DC    AL2(11)
         DC    AL2(12)
         DC    AL2(13)
         DC    AL2(14)
         DC    AL2(15)
         DC    AL2(16)
SMDWSAC  DC    AL2(17)
         DC    AL2(18)
         DC    AL2(19)
         DC    AL2(20)
         DC    AL2(21)
         DC    AL2(22)
         DC    AL2(23)
         DC    AL2(24)
         DC    AL2(25)
         DC    AL2(26)
         DC    AL2(27)
         DC    AL2(28)
         DC    AL2(29)
         DC    AL2(30)
         DC    AL2(54)
         DC    AL2(55)
SMDWSAL  DC    AL2(31)
         DC    AL2(32)
         DC    AL2(33)
         DC    AL2(34)
         DC    AL2(35)
         DC    AL2(36)
         DC    AL2(37)
         DC    AL2(38)
         DC    AL2(39)
         DC    AL2(40)
         DC    AL2(41)
         DC    AL2(42)
         DC    AL2(43)
         DC    AL2(44)
         DC    AL2(45)
         DS    CL2
IHSPDATA DC    AL4(PDATA1)
         DC    AL4(PDATA2)
         DC    AL4(PDATA3)
IEAVTFRT CSECT
MIAFP    DC    BL1'00000011'             BEGINNING TEXT
         DC    XL1'F0'
         DC    AL1(9)
         DC    AL1(0)
         DC    AL4(MIAMSG)
         DC    BL1'00010101'             TEXT AND FROM VALUE
         DC    XL1'F3'
         DC    AL1(25)
         DC    AL1(42)
         DC    BL1'00010101'             TEXT AND TO VALUE
         DC    XL1'13'
         DC    AL1(51)
         DC    AL1(54)
         DC    BL1'00000001'             ENDING TEXT
         DC    XL1'70'
         DC    AL1(63)
         DC    AL1(0)
         DC    AL4(0)                    END OF LIST
         SPACE 2
MIAMSG   DC    C'BYTES FROM RELATIVE DISPLACEMENTTOMISSING.'
         SPACE 2
PADFP    DC    BL1'00010101'             CHAR & HEX PAD REPRESENTATIONS
         DC    XL1'00'
         DC    AL1(35)
         DC    AL1(40)
         DC    BL1'00000011'             BEGINNING TEXT
         DC    XL1'F0'
         DC    AL1(9)
         DC    AL1(0)
         DC    AL4(PADMSG)
         DC    BL1'00000001'             MIDDLE TEXT
         DC    XL1'90'
         DC    AL1(25)
         DC    AL1(0)
         DC    BL1'00000001'             MIDDLE END TEXT
         DC    XL1'30'
         DC    AL1(36)
         DC    AL1(0)
         DC    BL1'00000001'             END TEXT
         DC    XL1'10'
         DC    AL1(42)
         DC    AL1(0)
         DC    AL4(0)                    END OF FORMAT PATTERN
         SPACE 2
PADMSG   DC    C'MISSING DATA REPLACED BY '''' X''''.'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVTFRT CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MIAINDEX EQU   @04
MIAPTR   EQU   @03
FMTRTNP  EQU   @03
DATAREG  EQU   @11
BASEREG  EQU   @12
R0       EQU   @00
R13      EQU   @13
R14      EQU   @14
RETCODE  EQU   @15
R1       EQU   @01
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR15F   EQU   @15
R15      EQU   @15
ABDPL    EQU   0
ADPLFLAG EQU   ABDPL+7
ADPLPRNT EQU   ABDPL+12
ADPLMEMA EQU   ABDPL+20
ADPLFRMT EQU   ABDPL+24
ADPLCOM1 EQU   ABDPL+28
ADPLFMT1 EQU   ABDPL+44
ADPLFMT2 EQU   ABDPL+48
SMDLR    EQU   0
SMDLRHDR EQU   SMDLR
SMDLRID  EQU   SMDLRHDR
SMDLRLEN EQU   SMDLRHDR+4
SMDLRADR EQU   SMDLRHDR+8
SMDLRDAT EQU   SMDLR+20
FMTSERV  EQU   0
LINEPRNT EQU   0
@NM00004 EQU   0
SA       EQU   @NM00004+12
FMTRTNPL EQU   0
FAKEPL   EQU   FMTRTNPL
READCNT  EQU   FMTRTNPL+60
REGSAVE  EQU   FMTRTNPL+64
FMTRTN   EQU   0
MIATABLE EQU   0
MIABEGIN EQU   MIATABLE
MIALAST  EQU   MIABEGIN
MIAEND   EQU   MIATABLE+4
MIAPAD   EQU   MIAEND
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
ABDPLPTR EQU   0
SMDLRPTR EQU   0
BEGLABEL EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00007 EQU   REGSAVE
@NM00006 EQU   SA
@NM00005 EQU   @NM00004
@NM00003 EQU   SMDLRHDR+17
SMDLRMSG EQU   SMDLRHDR+16
SMDLRPL  EQU   SMDLRHDR+12
@NM00002 EQU   SMDLRHDR+2
ADPLABDA EQU   ABDPL+56
ADPLEXT  EQU   ABDPL+52
ADPLCOM4 EQU   ABDPL+40
ADPLCOM3 EQU   ABDPL+36
ADPLCOM2 EQU   ABDPL+32
ADPLCVT  EQU   ABDPL+16
ADPLBUF  EQU   ABDPL+8
@NM00001 EQU   ADPLFLAG
ADPLDMGT EQU   ADPLFLAG
ADPLSYTM EQU   ADPLFLAG
ADPLSNPR EQU   ADPLFLAG
ADPLSBPL EQU   ABDPL+6
ADPLASID EQU   ABDPL+4
ADPLTCB  EQU   ABDPL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00054 EQU   NOLOAD
@RT00065 EQU   NOLOAD
@ENDDATA EQU   *
         END   IEAVTFRT,(C'PLS2125',0701,77287)
