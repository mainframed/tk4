         TITLE 'IEAVTMMT MEMORY TERMINATION PURGES                     *
                        '
IEAVTMMT CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEAVTMMT  76.090'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*   RTM2PTR=REG1;                   /* SET UP RTM2PTR                */
         LR    RTM2PTR,REG1                                        0050
*   RTM2TRRA=0;                     /* NO RECURSION ADDRESS          */
*                                                                  0051
         SLR   @00,@00                                             0051
         ST    @00,RTM2TRRA(,RTM2PTR)                              0051
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP RECURSION PROTECTION                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0052
*   WORKAREA=''B;                   /* BLANK OUT AREA TO USE AS ESTAE
*                                      PARM LIST                     */
         L     @15,RMPLRMWA+712(,RTM2PTR)                          0052
         XC    WORKAREA(28,@15),WORKAREA(@15)                      0052
*   REG1=ADDR(WORKAREA);            /* SET REG 1 FOR ESTAE MACRO     */
         LR    REG1,@15                                            0053
*   GEN REFS(MMTESTAE,RTM2PTR)                                     0054
*       (ESTAE MMTESTAE,CT,PARAM=(RTM2PTR),MF=(E,(1)));            0054
         ESTAE MMTESTAE,CT,PARAM=(RTM2PTR),MF=(E,(1))
*   RFY                                                            0055
*     REG1 UNRSTD;                                                 0055
*   CVTPTR=FLCCVT;                  /* SET UP CVT PTR FROM PSA       */
*                                                                  0056
         L     CVTPTR,FLCCVT                                       0056
*   /*****************************************************************/
*   /*                                                               */
*   /* CHAIN UP SAVE AREAS                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0057
*   RTM2RMSA(2)=SAVEREG;            /* STORE PTR TO SAVEAREA         */
         ST    SAVEREG,RTM2RMSA+4(,RTM2PTR)                        0057
*   SAVEAREA(3)=ADDR(RTM2RMSA(1));  /* STORE RMSA PTR IN SAVE AREA   */
         LA    @15,RTM2RMSA(,RTM2PTR)                              0058
         ST    @15,SAVEAREA+8(,SAVEREG)                            0058
*   SAVEREG=ADDR(RTM2RMSA(1));      /* MAKE RMSA THE NEW SAVE AREA   */
         LR    SAVEREG,@15                                         0059
*   DO;                             /* SEGMENT SUBSPURG BEGIN        */
*                                                                  0060
*     /***************************************************************/
*     /*                                                             */
*     /* SEGMENT SUBSPURG INTERFACES WITH USER DEFINED RESOURCE      */
*     /* MANAGERS. THE LIST OF NAMES OF RESOURCE MANAGERS IS CSECT   */
*     /* 'IEAVTRML'. THIS SEGMENT IS INCLUDED BY CSECTS 'IEAVTMMT'   */
*     /* AND 'IEAVTSKT'.                                             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0061
*     RFY                                                          0061
*      (RMLPTR,                                                    0061
*       REG0,                                                      0061
*       REG1,                                                      0061
*       REG14,                                                     0061
*       REG15) RSTD;                                               0061
*     RMLPTR=ADDR(IEAVTRML);        /* INITIALIZE PTR TO RML ENTRY   */
         L     RMLPTR,@CV02035                                     0062
*     GEN REFS(RTM2RREG)(STM 0,15,RTM2RREG(RTM2PTR));              0063
*                                                                  0063
         STM 0,15,RTM2RREG(RTM2PTR)
*     /***************************************************************/
*     /*                                                             */
*     /* SAVE REGS FOR RECURSION                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0064
*     RTM2TRRA=ADDR(MTSSPRH);       /* ADDRESS OF RECURSION HANDLER
*                                      FOR 'SUBSPURG'                */
         LA    @07,MTSSPRH                                         0064
         ST    @07,RTM2TRRA(,RTM2PTR)                              0064
*     DO WHILE(RMLNAME^=ENDOFRML);  /* PERFORM UNTIL END OF NAME LIST
*                                      IS FOUND                      */
*                                                                  0065
         B     @DE00065                                            0065
@DL00065 DS    0H                                                  0066
*       /*************************************************************/
*       /*                                                           */
*       /* LINK TO INSTALLATION RESOURCE MANAGERS                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0066
*       REG1=ADDR(RTM2RMPS);        /* POINT TO RMPL                 */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0066
*       GEN REFS(RTM2RREG)(STM 0,15,RTM2RREG(RTM2PTR));            0067
*                                                                  0067
         STM 0,15,RTM2RREG(RTM2PTR)
*       /*************************************************************/
*       /*                                                           */
*       /* SAVE REGS FOR RECURSION                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0068
*       DO;                         /* LINK MF(E,LNKLST,COMPLETE)  0068
*                                      EP(RMLNAME) DCB(LINKDCB)      */
*         LNKLST=LNKLST&&LNKLST;    /* INIT. LIST                    */
         L     @07,RMPLRMWA+712(,RTM2PTR)                          0069
         XC    LNKLST(8,@07),LNKLST(@07)                           0069
*         LNKLST01='00'X;           /* EP/DE FLAG                    */
         MVI   LNKLST01(@07),X'00'                                 0070
*         LNKLST02=ADDR(RMLNAME);   /* ADDR OF EP/DE                 */
         STCM  RMLPTR,7,LNKLST02(@07)                              0071
*         LNKLST04=ADDR(LINKDCB);   /* DCB PTR                       */
         MVC   LNKLST04(3,@07),CVTLINK+1(CVTPTR)                   0072
*         RESPECIFY                                                0073
*          (GPR15P) RESTRICTED;                                    0073
*         GPR15P=ADDR(LNKLST);      /* ADDR OF LINK LIST             */
         LR    GPR15P,@07                                          0074
*         SVC(6);                   /* ISSUE LINK SVC                */
         SVC   6                                                   0075
*         RESPECIFY                                                0076
*          (GPR15P) UNRESTRICTED;                                  0076
*       END;                        /* LINK MF(E,LNKLST,COMPLETE)  0077
*                                      EP(RMLNAME) DCB(LINKDCB)      */
*/*  GO                                         TO RESOURCE  MGR   0078
*YM03549                                                             */
*                                                                  0078
*SSPSRCH1:                          /* 1ST RECURSION ENTRY POINT     */
*       RMLPTR=RMLPTR+LENGTH(RMLENTRY);/* BUMP TO NEXT ENTRY         */
SSPSRCH1 AL    RMLPTR,@CF00512                                     0078
*     END;                          /* END OF LINK LOOP              */
@DE00065 CLC   RMLNAME(8,RMLPTR),@CB02028                          0079
         BNE   @DL00065                                            0079
*     RTM2TRRA=0;                   /* INDICATE NO RECURSION COVERAGE*/
         SLR   @07,@07                                             0080
         ST    @07,RTM2TRRA(,RTM2PTR)                              0080
*SSPSRCH2:                          /* SECOND RECURSION IN SUBSPURG
*                                      CAUSES CONTROL TO COME TO THIS
*                                      POINT                         */
*     RFY                                                          0081
*      (RMLPTR,                                                    0081
*       REG0,                                                      0081
*       REG1,                                                      0081
*       REG14,                                                     0081
*       REG15) UNRSTD;                                             0081
SSPSRCH2 DS    0H                                                  0082
*   END;                            /* END OF SEGMENT SUBSPURG       */
*   DO;                             /* SEGMENT MPURG1 BEGIN          */
*                                                                  0083
*     /***************************************************************/
*     /*                                                             */
*     /* SEGMENT MPURG1 CALLS RESOURCE MANAGERS TO CLEAN UP SYSTEM   */
*     /* RESOURCES                                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0084
*     RFY                                                          0084
*       REG1 RSTD;                                                 0084
*                                                                  0084
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE SVC DUMP RESOURCE MGR                              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0085
*     DO;                           /* SVC DUMP                      */
*RECRS001:                                                         0086
*       RTM2TRRA=ADDR(RECRS002);    /* INDICATE NEXT SECTION TO BE 0086
*                                      PROTECTED                     */
RECRS001 LA    @00,RECRS002                                        0086
         ST    @00,RTM2TRRA(,RTM2PTR)                              0086
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0087
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0087
*       RFY                                                        0088
*         MANAGER BASED(CVTSDRM);   /* BASE ON ADDRESS OF SVC DUMP 0088
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTSDRM(,CVTPTR)                                0089
         LTR   @15,@15                                             0089
         BZ    @RF00089                                            0089
*         CALL MANAGER;             /* CALL SVC DUMP ROUTINE         */
         BALR  @14,@15                                             0090
*     END;                                                         0091
*                                                                  0091
@RF00089 DS    0H                                                  0092
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE TIMER RESOURCE MGR                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0092
*     DO;                           /* TIMER                         */
*RECRS002:                                                         0093
*       RTM2TRRA=ADDR(RECRS003);    /* INDICATE NEXT SECTION TO BE 0093
*                                      PROTECTED                     */
RECRS002 LA    @00,RECRS003                                        0093
         ST    @00,RTM2TRRA(,RTM2PTR)                              0093
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0094
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0094
*       RFY                                                        0095
*         MANAGER BASED(SCVTPGTM);  /* BASE ON ADDRESS OF TIMER    0095
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,SCVTSPTR(,CVTPTR)                               0096
         L     @15,SCVTPGTM(,@15)                                  0096
         LTR   @15,@15                                             0096
         BZ    @RF00096                                            0096
*         CALL MANAGER;             /* CALL TIMER ROUTINE            */
         BALR  @14,@15                                             0097
*     END;                                                         0098
*                                                                  0098
@RF00096 DS    0H                                                  0099
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE ENQ/DEQ RESOURCE MGR                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0099
*     DO;                           /* ENQ/DEQ                       */
*RECRS003:                                                         0100
*       RTM2TRRA=ADDR(RECRS004);    /* INDICATE NEXT SECTION TO BE 0100
*                                      PROTECTED                     */
RECRS003 LA    @00,RECRS004                                        0100
         ST    @00,RTM2TRRA(,RTM2PTR)                              0100
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0101
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0101
*       RFY                                                        0102
*         MANAGER BASED(CVTRENQ);   /* BASE ON ADDRESS OF ENQ/DEQ  0102
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTRENQ(,CVTPTR)                                0103
         LTR   @15,@15                                             0103
         BZ    @RF00103                                            0103
*         CALL MANAGER;             /* CALL ENQ/DEQ ROUTINE          */
         BALR  @14,@15                                             0104
*     END;                                                         0105
*                                                                  0105
@RF00103 DS    0H                                                  0106
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE DATA MGR RESOURCE MGR                              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0106
*     DO;                           /* DATA MGR                      */
*RECRS004:                                                         0107
*       RTM2TRRA=ADDR(RECRS005);    /* INDICATE NEXT SECTION TO BE 0107
*                                      PROTECTED                     */
RECRS004 LA    @00,RECRS005                                        0107
         ST    @00,RTM2TRRA(,RTM2PTR)                              0107
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0108
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0108
*       RFY                                                        0109
*         MANAGER BASED(CVT0TC0A);  /* BASE ON ADDRESS OF DATA MGR 0109
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVT0TC0A(,CVTPTR)                               0110
         LTR   @15,@15                                             0110
         BZ    @RF00110                                            0110
*         CALL MANAGER;             /* CALL DATA MGR ROUTINE         */
         BALR  @14,@15                                             0111
*     END;                                                         0112
*                                                                  0112
@RF00110 DS    0H                                                  0113
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE VTAM RESOURCE MGR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0113
*     DO;                           /* VTAM                          */
*RECRS005:                                                         0114
*       RTM2TRRA=ADDR(RECRS006);    /* INDICATE NEXT SECTION TO BE 0114
*                                      PROTECTED                     */
RECRS005 LA    @00,RECRS006                                        0114
         ST    @00,RTM2TRRA(,RTM2PTR)                              0114
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0115
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0115
*       RFY                                                        0116
*         MANAGER BASED(CVTRMPMT);  /* BASE ON ADDRESS OF VTAM     0116
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTRMPMT(,CVTPTR)                               0117
         LTR   @15,@15                                             0117
         BZ    @RF00117                                            0117
*         CALL MANAGER;             /* CALL VTAM ROUTINE             */
         BALR  @14,@15                                             0118
*     END;                                                         0119
*                                                                  0119
@RF00117 DS    0H                                                  0120
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE TCAM RESOURCE MGR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0120
*     DO;                           /* TCAM                          */
*RECRS006:                                                         0121
*       RTM2TRRA=ADDR(RECRS007);    /* INDICATE NEXT SECTION TO BE 0121
*                                      PROTECTED                     */
RECRS006 LA    @00,RECRS007                                        0121
         ST    @00,RTM2TRRA(,RTM2PTR)                              0121
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0122
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0122
*       RFY                                                        0123
*         MANAGER BASED(ADDR(IEDQOT01));/* BASE ON ADDRESS OF TCAM 0123
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @00,@CV02031                                        0124
         LR    @15,@00                                             0124
         LTR   @15,@15                                             0124
         BZ    @RF00124                                            0124
*         CALL MANAGER;             /* CALL TCAM ROUTINE             */
         L     @15,@CV02031                                        0125
         BALR  @14,@15                                             0125
*     END;                                                         0126
*                                                                  0126
@RF00124 DS    0H                                                  0127
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE TIOC RESOURCE MGR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0127
*     DO;                           /* TIOC                          */
*RECRS007:                                                         0128
*       RTM2TRRA=ADDR(RECRS008);    /* INDICATE NEXT SECTION TO BE 0128
*                                      PROTECTED                     */
RECRS007 LA    @00,RECRS008                                        0128
         ST    @00,RTM2TRRA(,RTM2PTR)                              0128
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0129
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0129
*       RFY                                                        0130
*         MANAGER BASED(ADDR(IEDAY8));/* BASE ON ADDRESS OF TIOC   0130
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @00,@CV02032                                        0131
         LR    @15,@00                                             0131
         LTR   @15,@15                                             0131
         BZ    @RF00131                                            0131
*         CALL MANAGER;             /* CALL TIOC ROUTINE             */
         L     @15,@CV02032                                        0132
         BALR  @14,@15                                             0132
*     END;                                                         0133
*                                                                  0133
@RF00131 DS    0H                                                  0134
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE WTOR RESOURCE MGR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0134
*     DO;                           /* WTOR                          */
*RECRS008:                                                         0135
*       RTM2TRRA=ADDR(RECRS009);    /* INDICATE NEXT SECTION TO BE 0135
*                                      PROTECTED                     */
RECRS008 LA    @00,RECRS009                                        0135
         ST    @00,RTM2TRRA(,RTM2PTR)                              0135
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0136
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0136
*       RFY                                                        0137
*         MANAGER BASED(SCVTPGWR);  /* BASE ON ADDRESS OF WTOR     0137
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,SCVTSPTR(,CVTPTR)                               0138
         L     @15,SCVTPGWR(,@15)                                  0138
         LTR   @15,@15                                             0138
         BZ    @RF00138                                            0138
*         CALL MANAGER;             /* CALL WTOR ROUTINE             */
         BALR  @14,@15                                             0139
*     END;                                                         0140
*                                                                  0140
@RF00138 DS    0H                                                  0141
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE SCHEDULER SUBSYSTEM INTERFACE RESOURCE MGR         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0141
*     DO;                           /* SCHEDULER SUBSYSTEM INTERFACE */
*RECRS009:                                                         0142
*       RTM2TRRA=ADDR(RECRS010);    /* INDICATE NEXT SECTION TO BE 0142
*                                      PROTECTED                     */
RECRS009 LA    @00,RECRS010                                        0142
         ST    @00,RTM2TRRA(,RTM2PTR)                              0142
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0143
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0143
*       RFY                                                        0144
*         MANAGER BASED(CVTJRECM);  /* BASE ON ADDRESS OF SCHEDULER
*                                      SUBSYSTEM INTERFACE ROUTINE   */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTJRECM(,CVTPTR)                               0145
         LTR   @15,@15                                             0145
         BZ    @RF00145                                            0145
*         CALL MANAGER;             /* CALL SCHEDULER SUBSYSTEM    0146
*                                      INTERFACE ROUTINE             */
         BALR  @14,@15                                             0146
*     END;                                                         0147
*                                                                  0147
@RF00145 DS    0H                                                  0148
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE INITIATOR RESOURCE MGR                             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0148
*     DO;                           /* INITIATOR                     */
*RECRS010:                                                         0149
*       RTM2TRRA=ADDR(RECRS011);    /* INDICATE NEXT SECTION TO BE 0149
*                                      PROTECTED                     */
RECRS010 LA    @00,RECRS011                                        0149
         ST    @00,RTM2TRRA(,RTM2PTR)                              0149
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0150
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0150
*       RFY                                                        0151
*         MANAGER BASED(CVTIRECM);  /* BASE ON ADDRESS OF INITIATOR
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTIRECM(,CVTPTR)                               0152
         LTR   @15,@15                                             0152
         BZ    @RF00152                                            0152
*         CALL MANAGER;             /* CALL INITIATOR ROUTINE        */
         BALR  @14,@15                                             0153
*     END;                                                         0154
*                                                                  0154
@RF00152 DS    0H                                                  0155
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE SCHEDULER ALLOCATION RESOURCE MGR                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0155
*     DO;                           /* SCHEDULER ALLOCATION          */
*RECRS011:                                                         0156
*       RTM2TRRA=ADDR(RECRS012);    /* INDICATE NEXT SECTION TO BE 0156
*                                      PROTECTED                     */
RECRS011 LA    @00,RECRS012                                        0156
         ST    @00,RTM2TRRA(,RTM2PTR)                              0156
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0157
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0157
*       RFY                                                        0158
*         MANAGER BASED(CVTDARCM);  /* BASE ON ADDRESS OF SCHEDULER
*                                      ALLOCATION ROUTINE            */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTDARCM(,CVTPTR)                               0159
         LTR   @15,@15                                             0159
         BZ    @RF00159                                            0159
*         CALL MANAGER;             /* CALL SCHEDULER ALLOCATION   0160
*                                      ROUTINE                       */
         BALR  @14,@15                                             0160
*     END;                                                         0161
*                                                                  0161
@RF00159 DS    0H                                                  0162
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE POST RESOURCE MGR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0162
*     DO;                           /* POST                          */
*RECRS012:                                                         0163
*       RTM2TRRA=ADDR(RECRS013);    /* INDICATE NEXT SECTION TO BE 0163
*                                      PROTECTED                     */
RECRS012 LA    @00,RECRS013                                        0163
         ST    @00,RTM2TRRA(,RTM2PTR)                              0163
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0164
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0164
*       RFY                                                        0165
*         MANAGER BASED(CVTRPOST);  /* BASE ON ADDRESS OF POST     0165
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTRPOST(,CVTPTR)                               0166
         LTR   @15,@15                                             0166
         BZ    @RF00166                                            0166
*         CALL MANAGER;             /* CALL POST ROUTINE             */
         BALR  @14,@15                                             0167
*     END;                                                         0168
*                                                                  0168
@RF00166 DS    0H                                                  0169
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE VSM RESOURCE MGR                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0169
*     DO;                           /* VSM                           */
*RECRS013:                                                         0170
*       RTM2TRRA=ADDR(RECRS014);    /* INDICATE NEXT SECTION TO BE 0170
*                                      PROTECTED                     */
RECRS013 LA    @00,RECRS014                                        0170
         ST    @00,RTM2TRRA(,RTM2PTR)                              0170
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0171
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0171
*       RFY                                                        0172
*         MANAGER BASED(CVTFRAS);   /* BASE ON ADDRESS OF VSM ROUTINE*/
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTFRAS(,CVTPTR)                                0173
         LTR   @15,@15                                             0173
         BZ    @RF00173                                            0173
*         CALL MANAGER;             /* CALL VSM ROUTINE              */
         BALR  @14,@15                                             0174
*     END;                                                         0175
*                                                                  0175
@RF00173 DS    0H                                                  0176
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE LOCK MGR RESOURCE MGR                              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0176
*     DO;                           /* LOCK MGR                      */
*RECRS014:                                                         0177
*       RTM2TRRA=ADDR(RECRS015);    /* INDICATE NEXT SECTION TO BE 0177
*                                      PROTECTED                     */
RECRS014 LA    @00,RECRS015                                        0177
         ST    @00,RTM2TRRA(,RTM2PTR)                              0177
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0178
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0178
*       RFY                                                        0179
*         MANAGER BASED(CVTLKRMA);  /* BASE ON ADDRESS OF LOCK MGR 0179
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTLKRMA(,CVTPTR)                               0180
         LTR   @15,@15                                             0180
         BZ    @RF00180                                            0180
*         CALL MANAGER;             /* CALL LOCK MGR ROUTINE         */
         BALR  @14,@15                                             0181
*     END;                                                         0182
*                                                                  0182
@RF00180 DS    0H                                                  0183
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE OLTEP RESOURCE MGR                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0183
*     DO;                           /* OLTEP                         */
*RECRS015:                                                         0184
*       RTM2TRRA=ADDR(RECRS016);    /* INDICATE NEXT SECTION TO BE 0184
*                                      PROTECTED                     */
RECRS015 LA    @00,RECRS016                                        0184
         ST    @00,RTM2TRRA(,RTM2PTR)                              0184
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0185
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0185
*       RFY                                                        0186
*         MANAGER BASED(CVTOLT0A);  /* BASE ON ADDRESS OF OLTEP    0186
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTOLT0A(,CVTPTR)                               0187
         LTR   @15,@15                                             0187
         BZ    @RF00187                                            0187
*         CALL MANAGER;             /* CALL OLTEP ROUTINE            */
         BALR  @14,@15                                             0188
*     END;                                                         0189
*                                                                  0189
@RF00187 DS    0H                                                  0190
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE IDMS RESOURCE MGR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0190
*     DO;                           /* IDMS                          */
*RECRS016:                                                         0191
*       RTM2TRRA=ADDR(RECRS017);    /* INDICATE NEXT SECTION TO BE 0191
*                                      PROTECTED                     */
RECRS016 LA    @00,RECRS017                                        0191
         ST    @00,RTM2TRRA(,RTM2PTR)                              0191
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0192
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0192
*       RFY                                                        0193
*         MANAGER BASED(CVTSSCR);   /* BASE ON ADDRESS OF IDMS     0193
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @15,CVTSSCR(,CVTPTR)                                0194
         LTR   @15,@15                                             0194
         BZ    @RF00194                                            0194
*         CALL MANAGER;             /* CALL IDMS ROUTINE             */
         BALR  @14,@15                                             0195
*     END;                          /*                       @Y30LPXG*/
*                                                                  0196
@RF00194 DS    0H                                                  0197
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE RTM2 RESOURCE MGR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0197
*     DO;                           /* RTM2                          */
*RECRS017:                                                         0198
*       RTM2TRRA=ADDR(RECRS018);    /* INDICATE NEXT SECTION TO BE 0198
*                                      PROTECTED                     */
RECRS017 LA    @00,RECRS018                                        0198
         ST    @00,RTM2TRRA(,RTM2PTR)                              0198
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0199
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0199
*       RFY                                                        0200
*         MANAGER BASED(ADDR(IEAVTMRM));/* BASE ON ADDRESS OF RTM2 0200
*                                      ROUTINE                       */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @00,@CV02033                                        0201
         LR    @15,@00                                             0201
         LTR   @15,@15                                             0201
         BZ    @RF00201                                            0201
*         CALL MANAGER;             /* CALL RTM2 ROUTINE             */
         L     @15,@CV02033                                        0202
         BALR  @14,@15                                             0202
*     END;                                                         0203
*                                                                  0203
@RF00201 DS    0H                                                  0204
*     /***************************************************************/
*     /*                                                             */
*     /* CALL THE TYPE 1 MSG RESOURCE MGR                            */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0204
*     DO;                           /* TYPE 1 MSG                    */
*RECRS018:                                                         0205
*       RTM2TRRA=ADDR(RECRS019);    /* INDICATE NEXT SECTION TO BE 0205
*                                      PROTECTED                     */
RECRS018 LA    @00,RECRS019                                        0205
         ST    @00,RTM2TRRA(,RTM2PTR)                              0205
*       REG1=ADDR(RTM2RMPS);        /* SET UP INPUT TO RESOURCE    0206
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0206
*       RFY                                                        0207
*         MANAGER BASED(ADDR(IEAVTPMT));/* BASE ON ADDRESS OF TYPE 1
*                                      MSG ROUTINE                   */
*       IF ADDR(MANAGER)^=0 THEN    /* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @00,@CV02036                                        0208
         LR    @15,@00                                             0208
         LTR   @15,@15                                             0208
         BZ    @RF00208                                            0208
*         CALL MANAGER;             /* CALL TYPE 1 MSG ROUTINE       */
         L     @15,@CV02036                                        0209
         BALR  @14,@15                                             0209
*     END;                                                         0210
@RF00208 DS    0H                                                  0211
*RECRS019:                                                         0211
*     RTM2TRRA=ADDR(RECRS020);      /* INDICATE NEXT SECTION TO BE 0211
*                                      PROTECTED                     */
*                                                                  0211
RECRS019 LA    @00,RECRS020                                        0211
         ST    @00,RTM2TRRA(,RTM2PTR)                              0211
*     /***************************************************************/
*     /*                                                             */
*     /*                                                     @VS01941*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0212
*     RFY                                                          0212
*      (REG2,                                                      0212
*       REG3) RSTD;                 /*                       @VS01941*/
*     WORKAREA=''B;                 /*                       @VS01941*/
         LA    @15,712                                             0213
         ALR   @15,RTM2PTR                                         0213
         L     @14,RMPLRMWA(,@15)                                  0213
         XC    WORKAREA(28,@14),WORKAREA(@14)                      0213
*     REG1=ADDR(WORKAREA);          /*                       @VS01941*/
         LR    REG1,@14                                            0214
*     REG2=ADDR(RMPLASID);          /*                       @VS01941*/
         LA    REG2,RMPLASID(,@15)                                 0215
*     REG3=ADDR(WORKWORD(6));       /*                       @VS01941*/
         LA    REG3,WORKWORD+20(,@14)                              0216
*     GEN(PURGEDQ ASID=(2),RMTR=0,MF=(E,(1)),ASIDTCB=(3));/* @VS01941*/
         PURGEDQ ASID=(2),RMTR=0,MF=(E,(1)),ASIDTCB=(3)
*     RFY                                                          0218
*      (REG2,                                                      0218
*       REG3) UNRSTD;               /*                       @VS01941*/
*RECRS020:                                                         0219
*     RTM2TRRA=0;                   /* END OF RECURSION PROTECTED  0219
*                                      SECTION                       */
*                                                                  0219
RECRS020 SLR   @00,@00                                             0219
         ST    @00,RTM2TRRA(,RTM2PTR)                              0219
*     /***************************************************************/
*     /*                                                             */
*     /* BYPASS MEMORY DELETE IF MEMTERM REQUEST IS FOR MASTER       */
*     /* SCHEDULER(ASID=1), OR THE SYSTEM WAIT TASK(ASID=0). @Z40WPXH*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0220
*     IF RMPLASID>1 THEN            /* IS THIS A PERM. MEMORY      0220
*                                                            @Z40WPXH*/
         CLC   RMPLASID+712(2,RTM2PTR),@CH00038                    0220
         BNH   @RF00220                                            0220
*       DO;                         /* NOT A PERM. MEMORY            */
*                                                                  0221
*         /***********************************************************/
*         /*                                                         */
*         /* CALL THE ASCB DELETE RESOURCE MGR                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0222
*         DO;                       /* ASCB DELETE                   */
*RECRS021:                                                         0223
*           RTM2TRRA=ADDR(RECRS022);/* INDICATE NEXT SECTION TO BE 0223
*                                      PROTECTED                     */
RECRS021 LA    @00,RECRS022                                        0223
         ST    @00,RTM2TRRA(,RTM2PTR)                              0223
*           REG1=ADDR(RTM2RMPS);    /* SET UP INPUT TO RESOURCE    0224
*                                      MANAGER                       */
         LA    REG1,RTM2RMPS(,RTM2PTR)                             0224
*           RFY                                                    0225
*             MANAGER BASED(ADDR(IEAVEMDL));/* BASE ON ADDRESS OF  0225
*                                      ASCB DELETE ROUTINE           */
*           IF ADDR(MANAGER)^=0 THEN/* CHECK FOR 0 RESOURCE MANAGER
*                                      ADDRESS                       */
         L     @00,@CV02034                                        0226
         LR    @15,@00                                             0226
         LTR   @15,@15                                             0226
         BZ    @RF00226                                            0226
*             CALL MANAGER;         /* CALL ASCB DELETE ROUTINE      */
         L     @15,@CV02034                                        0227
         BALR  @14,@15                                             0227
*         END;                                                     0228
@RF00226 DS    0H                                                  0229
*       END;                                                       0229
*RECRS022:                                                         0230
*     RTM2TRRA=0;                   /* END OF RECURSION PROTECTED  0230
*                                      SECTION                       */
@RF00220 DS    0H                                                  0230
RECRS022 SLR   @00,@00                                             0230
         ST    @00,RTM2TRRA(,RTM2PTR)                              0230
*     RFY                                                          0231
*       REG1 UNRSTD;                                               0231
*   END;                            /* SEGMENT MPURG1 END            */
*   RFY                                                            0233
*    (REG1,                                                        0233
*     REG2,                                                        0233
*     REG3) RSTD;                                                  0233
*   GEN(ESTAE 0);                   /* CANCEL ESTAE PROTECTION       */
         ESTAE 0
*   RFY                                                            0235
*    (REG1,                                                        0235
*     REG2,                                                        0235
*     REG3) UNRSTD;                                                0235
*   SAVEREG=ADDR(RTM2SFSA);         /* RESTORE CALLER'S SAVE AREA    */
         LA    SAVEREG,RTM2SFSA(,RTM2PTR)                          0236
*   RETURN;                                                        0237
@EL00001 DS    0H                                                  0237
@EF00001 DS    0H                                                  0237
@ER00001 LM    @14,@12,12(@13)                                     0237
         BR    @14                                                 0237
*MTSSPRH:                                                          0238
*   DO;                             /* SEGMENT MTSSPRH BEGIN         */
*                                                                  0238
MTSSPRH  DS    0H                                                  0239
*     /***************************************************************/
*     /*                                                             */
*     /* RECURSION HANDLER FOR ERRORS IN 'SUBSPURG'. ON ENTRY ALL    */
*     /* REGS WILL HAVE BEEN RESTORED FROM RTM2RREG (IN RTM2WA). THE */
*     /* RECURSION HANDLER WILL SET RECURSION ADDRESS TO END OF      */
*     /* 'SUBSPURG' (SO THAT ANOTHER RECURSION WILL CAUSE CONTROL TO */
*     /* BYPASS ANY FURTHER 'SUBSPURG' PROCESSING). CONTROL IS THEN  */
*     /* PASSED TO THE RESUME POINT OF 'SUBSPURG'.                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0239
*     RTM2TRRA=ADDR(SSPSRCH2);      /* SECOND RECURSION GOES TO END
*                                      OF SUBSPURG                   */
         LA    @15,SSPSRCH2                                        0239
         ST    @15,RTM2TRRA(,RTM2PTR)                              0239
*     GOTO SSPSRCH1;                /* RECURSIVE POINT OF SUBSPURG   */
         B     SSPSRCH1                                            0240
*   END;                                                           0241
*MMTESTAE:                                                         0242
*   DO;                             /* SEGMENT MMTESTAE BEGIN        */
*                                                                  0242
MMTESTAE DS    0H                                                  0243
*     /***************************************************************/
*     /*                                                             */
*     /* MMTESTAE IS THE EXTAE EXIT TO PROTECT MEMORY PURGES. THE    */
*     /* PARM PASSED VIA ESTAE MACRO IS THE RTM2WA IN USE DURING     */
*     /* MEMORY PURGES. RETRY WILL BE ATTEMPTED AT THE ADDRESS IN    */
*     /* RTM2TRRA IF AN SDWA WAS OBTAINED, OTHERWISE RETRY WILL BE   */
*     /* ATTEMPTED AT ESTAE EXTENSION 'MMTESTAX' WHO WILL GO TO      */
*     /* ADDRESS IN RTM2TRRA. THIS ALLOWS REGS IN RTM2RREG TO BE     */
*     /* RESTORED PRIOR TO GOING TO REAL RETRY ADDRESS. IF RTM2TRRA =*/
*     /* 0 THEN NO RETRY IS ATTEMPTED. REG 15 IS A TEMPORARY BASE REG*/
*     /* FOR THIS CODE                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0243
*/*********************************************************************
*     INPUTS(USED)-                                                0243
*       IF REG0 ^= 12  (I.E. SDWA AND REG SAVE AREA WERE OBTAINED) 0243
*         REG1 = ADDR OF SDWA (SDWAPARM = ADDR OF RTM2WA)          0243
*         REG13 = ADDR OF REG SAVE AREA                            0243
*         REG14 = RETURN ADDR                                      0243
*       IF REG0 = 12 (I.E. SDWA AND REG SAVE AREA NOT OBTAINED)    0243
*         REG2 = ADDR OF RTM2WA                                    0243
*         REG14 = RETURN ADDR                                      0243
**********************************************************************/
*                                                                  0243
*     RFY                                                          0243
*      (REG0,                                                      0243
*       REG1,                                                      0243
*       REG2,                                                      0243
*       REG13,                                                     0243
*       REG14,                                                     0243
*       REG15) RSTD;                                               0243
*     GEN;                                                         0244
          BALR  REG15,0
          USING *,REG15
*     IF REG0=12 THEN               /* CHECK FOR NO SDWA             */
         C     REG0,@CF00512                                       0245
         BNE   @RF00245                                            0245
*       DO;                         /* NO SDWA                       */
*         IF REG2->RTM2TRRA=0 THEN  /* CHECK FOR RETRY ADDR          */
         L     @03,RTM2TRRA(,REG2)                                 0247
         LTR   @03,@03                                             0247
         BNZ   @RF00247                                            0247
*           DO;                     /* NO RETRY ADDR                 */
*             REG15=0;              /* INDICATE NO RETRY             */
         SLR   REG15,REG15                                         0249
*             GOTO REG14;           /* RETRUN TO RTM2                */
         BR    REG14                                               0250
*           END;                                                   0251
*         ELSE                      /* RETRY ADDR EXISTS             */
*           DO;                                                    0252
@RF00247 DS    0H                                                  0253
*             REG2->RTM2RREG(14+1)=REG2->RTM2TRRA;/* SET UP REG 14 IN
*                                      REG SAVE AREA TO ADDR OF    0253
*                                      RESUME POINT OF MAINLINE.   0253
*                                      MMTESTAX WILL BRANCH ON REG 14
*                                      AFTER RELOADING REGS.         */
         L     @03,RTM2TRRA(,REG2)                                 0253
         ST    @03,RTM2RREG+56(,REG2)                              0253
*             REG2->RTM2TRRA=0;     /* INDICATE NO RECURSION ADDR    */
         SLR   @03,@03                                             0254
         ST    @03,RTM2TRRA(,REG2)                                 0254
*             REG0=ADDR(MMTESTAX);  /* RETRY AT MMTESTAE EXTENSION   */
         LA    REG0,MMTESTAX                                       0255
*             REG15=4;              /* INDICATE RETRY                */
         LA    REG15,4                                             0256
*             GOTO REG14;           /* RETURN TO RTM2                */
         BR    REG14                                               0257
*           END;                                                   0258
*       END;                                                       0259
*     ELSE                          /* SDWA AND REG SAVE AREA EXIST  */
*       DO;                                                        0260
@RF00245 DS    0H                                                  0261
*         GEN(STM 14,12,12(13));    /* SAVE RTM2 REGS                */
         STM 14,12,12(13)
*         RTM2PTR=SDWAPARM;         /* GET RTM2WA PTR FROM SDWA      */
         L     RTM2PTR,SDWAPARM(,SDWAPTR)                          0262
*         IF RTM2TRRA=0 THEN        /* CHECK FOR RESUME ADDR         */
         L     @03,RTM2TRRA(,RTM2PTR)                              0263
         LTR   @03,@03                                             0263
         BNZ   @RF00263                                            0263
*           DO;                     /* NO RESUME ADDR                */
*             DO;                   /* SETRP RC(0)REGS(14,12)        */
*               RESPECIFY                                          0266
*                (GPR00P,                                          0266
*                 GPR01P,                                          0266
*                 GPR14P,                                          0266
*                 GPR15P) RSTD;                                    0266
*               GPR01P->SDWARCDE=0; /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0267
*               GEN(RETURN (14,12));                               0268
         RETURN (14,12)
*               RESPECIFY                                          0269
*                (GPR00P,                                          0269
*                 GPR01P,                                          0269
*                 GPR14P,                                          0269
*                 GPR15P) UNRSTD;                                  0269
*             END;                  /* CONTINUE WITH TERMINATION     */
*           END;                                                   0271
*         ELSE                      /* RESUME ADDR EXISTS            */
*           DO;                                                    0272
         B     @RC00263                                            0272
@RF00263 DS    0H                                                  0273
*             SDWASRSV=RTM2RRG;     /* MOVE REGS STORED BY MAINLINE
*                                      INTO SDWA FOR LOADING BY RTM2 */
         MVC   SDWASRSV(64,SDWAPTR),RTM2RRG(RTM2PTR)               0273
*             REG2=RTM2TRRA;        /* SAVE RESUME ADDR              */
         L     REG2,RTM2TRRA(,RTM2PTR)                             0274
*             RTM2TRRA=0;           /* NO RECURSION PROTECTION       */
         SLR   @03,@03                                             0275
         ST    @03,RTM2TRRA(,RTM2PTR)                              0275
*             DO;                   /* SETRP RC(4)RETADDR(REG2->MANAG
*                                      ER)RETREGS(YES)REGS(14,12)FRES
*                                      DWA(YES)                      */
*               RESPECIFY                                          0277
*                (GPR00P,                                          0277
*                 GPR01P,                                          0277
*                 GPR14P,                                          0277
*                 GPR15P) RSTD;                                    0277
*               GPR01P->SDWARCDE=4; /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0278
*               GPR01P->SDWARTYA=ADDR(REG2->MANAGER);/* SAVE RETRY 0279
*                                      ADDRESS                       */
         ST    REG2,SDWARTYA(,GPR01P)                              0279
*               GPR01P->SDWAFREE='1'B;/* SET FLAG TO FREE SDWA       */
*               GPR01P->SDWAUPRG='1'B;/* TURN ON RETREGS INDICATOR   */
         OI    SDWAFREE(GPR01P),B'00001100'                        0281
*               GEN(RETURN (14,12));                               0282
         RETURN (14,12)
*               RESPECIFY                                          0283
*                (GPR00P,                                          0283
*                 GPR01P,                                          0283
*                 GPR14P,                                          0283
*                 GPR15P) UNRSTD;                                  0283
*             END;                                                 0284
*           END;                                                   0285
*       END;                                                       0286
@RC00263 DS    0H                                                  0287
*     GEN(DROP REG15);                                             0287
         DROP REG15
*MMTESTAX:                                                         0288
*                                                                  0288
*     /***************************************************************/
*     /*                                                             */
*     /* ESTAE EXTENSION HANDLES RETRY WHEN NO SDWA EXISTS. IN THIS  */
*     /* CASE, RTM2 WILL NOT UPDATE REGS, SO REGS MUST BE UPDATED IN */
*     /* THE RETRY ROUTINE. ON ENTRY, REG1 POINTS TO PARM(RTM2WA).   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0288
*     GEN REFS(RTM2RREG)(LM 0,15,RTM2RREG(REG1));/* RESTORE REGS FROM
*                                      SAVE AREA                     */
MMTESTAX LM 0,15,RTM2RREG(REG1)
*     GOTO REG14;                   /* REG 14 IN SAVE AREA IS FILLED
*                                      IN BY ESTAE EXIT TO POINT TO
*                                      RESUME POINT THAT WAS       0289
*                                      INDICATED IN RTM2TRRA         */
         BR    REG14                                               0289
*     RFY                                                          0290
*      (REG0,                                                      0290
*       REG1,                                                      0290
*       REG2,                                                      0290
*       REG13,                                                     0290
*       REG14,                                                     0290
*       REG15) UNRSTD;                                             0290
*   END;                            /* END SEGMENT MMTESTAE          */
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0292
*     GPR01P PTR(31) REG(1),                                       0292
*     GPR14P PTR(31) REG(14),                                      0292
*     GPR15P PTR(31) REG(15);                                      0292
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0293
*     I031F FIXED(31) BASED,                                       0293
*     I031P PTR(31) BASED,                                         0293
*     I015F FIXED(15) BASED,                                       0293
*     I015P PTR(15) BASED,                                         0293
*     I008P PTR(8) BASED,                                          0293
*     I001C CHAR(1) BASED;                                         0293
*   END                                                            0294
*                                                                  0294
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (MMTSPEC )                                       */
*/*%INCLUDE SYSLIB  (MMTMACS )                                       */
*/*%INCLUDE SYSLIB  (MMTDCL  )                                       */
*/*%INCLUDE SYSLIB  (IHARTM2A)                                       */
*/*%INCLUDE SYSLIB  (IHASNP  )                                       */
*/*%INCLUDE SYSLIB  (IHARMPL )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (MMTPATCH)                                       */
*/*%INCLUDE SYSLIB  (SUBSPURG)                                       */
*/*%INCLUDE SYSLIB  (MPURG1  )                                       */
*/*%INCLUDE SYSLIB  (MTSSPRH )                                       */
*/*%INCLUDE SYSLIB  (MMTESTAE)                                       */
*                                                                  0294
*       ;                                                          0294
@DATA    DS    0H
@CH00038 DC    H'1'
@DATD    DSECT
         DS    0F
IEAVTMMT CSECT
         DS    0F
@CF00512 DC    F'12'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVTMMT CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02031 DC    V(IEDQOT01)
@CV02032 DC    V(IEDAY8)
@CV02033 DC    V(IEAVTMRM)
@CV02034 DC    V(IEAVEMDL)
@CV02035 DC    V(IEAVTRML)
@CV02036 DC    V(IEAVTPMT)
         DS    0D
@CB02028 DC    X'0000000000000000'
MMTPATCH DS    10F
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RTM2PTR  EQU   @05
CVTPTR   EQU   @04
SDWAPTR  EQU   @01
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG3     EQU   @03
RMLPTR   EQU   @06
SAVEREG  EQU   @13
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
GPR15P   EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
SNPPARMS EQU   0
SNPFLAG  EQU   SNPPARMS+1
SNPSDATA EQU   SNPPARMS+4
SNPPDATA EQU   SNPPARMS+6
RMPL     EQU   0
RMPLFLG1 EQU   RMPL
RMPLASID EQU   RMPL+2
RMPLRMWA EQU   RMPL+16
RTM2WA   EQU   0
RTM2DESC EQU   RTM2WA
RTM2RT2D EQU   RTM2DESC+8
RTM2CODE EQU   RTM2WA+28
RTM2CCF  EQU   RTM2CODE
RTM2PGCY EQU   RTM2WA+60
RTM2TRRY EQU   RTM2PGCY
RTM2EEDR EQU   RTM2TRRY
RTM2EREG EQU   RTM2EEDR
RTM2APSW EQU   RTM2EEDR+64
RTM2EPSW EQU   RTM2APSW
RTM2EMK1 EQU   RTM2EPSW
RTM2MWP1 EQU   RTM2EPSW+1
RTM2INT1 EQU   RTM2EPSW+2
RTM2NXT1 EQU   RTM2EPSW+4
RTM2AEC1 EQU   RTM2APSW+8
RTM2ILC1 EQU   RTM2AEC1+1
RTM2INC1 EQU   RTM2AEC1+2
RTM2ICD1 EQU   RTM2INC1+1
RTM2EEDH EQU   RTM2TRRY+92
RTM2STCK EQU   RTM2EEDH
RTM2MCHI EQU   RTM2EEDH+8
RTM2MCHS EQU   RTM2MCHI
RTM2MCHD EQU   RTM2MCHI+1
RTM2RSR1 EQU   RTM2EEDH+12
RTM2RSR2 EQU   RTM2EEDH+13
RTM2FLGS EQU   RTM2TRRY+120
RTM2ERRA EQU   RTM2FLGS
RTM2ERRB EQU   RTM2FLGS+1
RTM2ERRC EQU   RTM2FLGS+2
RTM2ERRD EQU   RTM2FLGS+3
RTM2CVER EQU   RTM2WA+186
RTM2TRRC EQU   RTM2CVER
RTM2IOFS EQU   RTM2TRRC
RTM2IOBP EQU   RTM2TRRC+2
RTM2SCBS EQU   RTM2TRRC+14
RTM2RTCD EQU   RTM2TRRC+26
RTM2SPLL EQU   RTM2RTCD+4
RTM2PARQ EQU   RTM2TRRC+46
RTM2CTL1 EQU   RTM2CVER+50
RTM2CMKA EQU   RTM2CTL1
RTM2MWPA EQU   RTM2CTL1+1
RTM2PMKA EQU   RTM2CTL1+4
RTM2CTL2 EQU   RTM2CVER+58
RTM2CMKP EQU   RTM2CTL2
RTM2MWPP EQU   RTM2CTL2+1
RTM2PMKP EQU   RTM2CTL2+4
RTM2SNAP EQU   RTM2CVER+66
RTM2SPRM EQU   RTM2SNAP+4
RTM2DPSL EQU   RTM2SNAP+24
RTM2FRM1 EQU   RTM2DPSL
RTM2TO1  EQU   RTM2DPSL+4
RTM2FRM2 EQU   RTM2DPSL+8
RTM2TO2  EQU   RTM2DPSL+12
RTM2FRM3 EQU   RTM2DPSL+16
RTM2TO3  EQU   RTM2DPSL+20
RTM2FRM4 EQU   RTM2DPSL+24
RTM2TO4  EQU   RTM2DPSL+28
RTM2SECB EQU   RTM2CVER+138
RTM2ECBA EQU   RTM2SECB
RTM2SFRG EQU   RTM2CVER+186
RTM2SFSA EQU   RTM2SFRG
RTM2SCTL EQU   RTM2CVER+259
RTM2CCTL EQU   RTM2SCTL
RTM2ABDR EQU   RTM2SCTL+4
RTM2ABID EQU   RTM2ABDR
RTM2ABND EQU   RTM2ABDR+1
RTM2RCTL EQU   RTM2SCTL+6
RTM2INTF EQU   RTM2CVER+266
RTM2CTLR EQU   RTM2INTF
RTM2TSKT EQU   RTM2INTF+2
RTM2ABDP EQU   RTM2INTF+4
RTM2ASIR EQU   RTM2INTF+5
RTM2FLX  EQU   RTM2INTF+6
RTM2FLX1 EQU   RTM2FLX
RTM2FLX2 EQU   RTM2FLX+1
RTM2RECL EQU   RTM2CVER+274
RTM2DCTL EQU   RTM2RECL+12
RTM2ECTL EQU   RTM2RECL+13
RTM2TRYR EQU   RTM2RECL+16
RTM2TRF1 EQU   RTM2TRYR
RTM2TRF2 EQU   RTM2TRYR+2
RTM2RECH EQU   RTM2CVER+294
RTM2TRRA EQU   RTM2RECH
RTM2RRG  EQU   RTM2CVER+314
RTM2RREG EQU   RTM2RRG
RTM2CRG  EQU   RTM2CVER+378
RTM2RMIN EQU   RTM2WA+708
RTM2RMPS EQU   RTM2RMIN
RTM2RMPL EQU   RTM2RMIN+4
RTM2RMWA EQU   RTM2RMIN+28
RTM2RMSA EQU   RTM2RMIN+92
STORAGE  EQU   0
STORFRM  EQU   STORAGE
STORTO   EQU   STORAGE+4
CVTMAP   EQU   0
CVTLINK  EQU   CVTMAP+8
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTABEND EQU   CVTMAP+200
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SCVTSECT EQU   0
SCVTPGTM EQU   SCVTSECT
SCVTPGWR EQU   SCVTSECT+4
RTCT     EQU   0
RTCTSAP  EQU   RTCT+4
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSUP  EQU   RTCT+6
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSAO  EQU   RTCT+8
RTCTSAO1 EQU   RTCTSAO
RTCTSAO2 EQU   RTCTSAO+1
RTCTSUO  EQU   RTCT+10
RTCTSUO1 EQU   RTCTSUO
RTCTSUO2 EQU   RTCTSUO+1
RTCTSDO  EQU   RTCT+12
RTCTSDO1 EQU   RTCTSDO
RTCTSDO2 EQU   RTCTSDO+1
RTCTABD  EQU   RTCT+14
RTCTIDMP EQU   RTCTABD
RTCTSDF  EQU   RTCT+16
RTCTSDF1 EQU   RTCTSDF
RTCTSDF2 EQU   RTCTSDF+1
RTCTSDDS EQU   RTCT+36
RTCTFLG  EQU   RTCTSDDS+3
RTCTRFLG EQU   RTCT+176
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SAVEAREA EQU   0
WORKAREA EQU   0
WORKWORD EQU   WORKAREA
RMLENTRY EQU   0
RMLNAME  EQU   RMLENTRY
MANAGER  EQU   0
LINKDCB  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTOLT0A EQU   CVTS01+104
CVTFRAS  EQU   CVTS01+168
CVTSDRM  EQU   CVTS01+192
CVTRTMCT EQU   CVTS01+224
CVTRENQ  EQU   CVTS01+300
CVTLKRMA EQU   CVTS01+308
CVTRPOST EQU   CVTS01+320
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVT0TC0A EQU   CVTS01+504
CVTJRECM EQU   CVTS01+520
CVTIRECM EQU   CVTS01+524
CVTDARCM EQU   CVTS01+528
CVTRMPMT EQU   CVTS01+568
CVTGSDA  EQU   CVTS01+600
CVTSSCR  EQU   CVTS01+620
SCVTSPTR EQU   CVTABEND
PSARSVTE EQU   PSARSVT
LNKLST   EQU   WORKAREA
LNKLST01 EQU   LNKLST
LNKLST02 EQU   LNKLST+1
LNKLST04 EQU   LNKLST+5
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LNKLST03 EQU   LNKLST+4
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTRSPIE EQU   CVTS01+304
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00151 EQU   RMLENTRY+8
@NM00150 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00149 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00148 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00147 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00146 EQU   SDWADDAT+3
@NM00145 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00144 EQU   SDWADDAT+1
@NM00143 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00142 EQU   SDWADUMP+2
@NM00141 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00140 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00139 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00138 EQU   SDWAACF3
@NM00137 EQU   SDWAACF2
@NM00136 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00135 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00134 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00133 EQU   SDWA+239
@NM00132 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00131 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00130 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00129 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00128 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00127 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00126 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00125 EQU   SDWAINC2
@NM00124 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00123 EQU   SDWAILC2
@NM00122 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00121 EQU   SDWANXT2
@NM00120 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00119 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00118 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00117 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00116 EQU   SDWAINC1
@NM00115 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00114 EQU   SDWAILC1
@NM00113 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00112 EQU   SDWANXT1
@NM00111 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00110 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00109 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00108 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00107 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00106 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00105 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00104 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00103 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
RTCTSDWK EQU   RTCT+220
RTCTTDCB EQU   RTCT+184
RTCTXYX2 EQU   RTCT+180
RTCTXXX1 EQU   RTCT+177
@NM00102 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDPL EQU   RTCT+156
RTCTDEV  EQU   RTCTSDDS+8
RTCTDCB  EQU   RTCTSDDS+4
@NM00101 EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTDSUS EQU   RTCTFLG
RTCTDSST EQU   RTCTFLG
RTCTDSNM EQU   RTCTSDDS
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTSDID EQU   RTCT+18
RTCTSDEP EQU   RTCTSDF2
RTCTSDDO EQU   RTCTSDF2
RTCTSDEN EQU   RTCTSDF2
RTCTSDTR EQU   RTCTSDF2
RTCTSDPT EQU   RTCTSDF2
RTCTSDSR EQU   RTCTSDF2
RTCTSDSS EQU   RTCTSDF2
RTCTSDSH EQU   RTCTSDF2
@NM00100 EQU   RTCTSDF1
RTCTSDND EQU   RTCTSDF1
RTCTSDNO EQU   RTCTSDF1
@NM00099 EQU   RTCTABD+1
@NM00098 EQU   RTCTIDMP
RTCTISVC EQU   RTCTIDMP
RTCTISYU EQU   RTCTIDMP
RTCTISAB EQU   RTCTIDMP
@NM00097 EQU   RTCTIDMP
@NM00096 EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTSYDF EQU   RTCTSUO2
RTCTSYDE EQU   RTCTSUO2
RTCTSYDD EQU   RTCTSUO2
RTCTSYDC EQU   RTCTSUO2
RTCTSYDB EQU   RTCTSUO2
RTCTSYDA EQU   RTCTSUO2
RTCTSYD9 EQU   RTCTSUO2
RTCTSYD8 EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTSADF EQU   RTCTSAO2
RTCTSADE EQU   RTCTSAO2
RTCTSADD EQU   RTCTSAO2
RTCTSADC EQU   RTCTSAO2
RTCTSADB EQU   RTCTSAO2
RTCTSADA EQU   RTCTSAO2
RTCTSAD9 EQU   RTCTSAO2
RTCTSAD8 EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTSUDF EQU   RTCTSUP2
RTCTSUDE EQU   RTCTSUP2
RTCTSUDD EQU   RTCTSUP2
RTCTSUDC EQU   RTCTSUP2
RTCTSUDB EQU   RTCTSUP2
RTCTSUDA EQU   RTCTSUP2
RTCTSUD9 EQU   RTCTSUP2
RTCTSUD8 EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSABF EQU   RTCTSAP2
RTCTSABE EQU   RTCTSAP2
RTCTSABD EQU   RTCTSAP2
RTCTSABC EQU   RTCTSAP2
RTCTSABB EQU   RTCTSAP2
RTCTSABA EQU   RTCTSAP2
RTCTSAB9 EQU   RTCTSAP2
RTCTSAB8 EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
@NM00071 EQU   SCVTSECT+180
@NM00070 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00069 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00068 EQU   SCVTSECT+160
@NM00067 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
SCVTSTAT EQU   SCVTSECT+148
@NM00066 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00065 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00064 EQU   SCVTSECT+128
@NM00063 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00062 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00061 EQU   SCVTSECT+108
@NM00060 EQU   SCVTSECT+104
@NM00059 EQU   SCVTSECT+100
@NM00058 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00057 EQU   SCVTSECT+88
@NM00056 EQU   SCVTSECT+84
@NM00055 EQU   SCVTSECT+80
@NM00054 EQU   SCVTSECT+76
@NM00053 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00052 EQU   SCVTSECT+56
@NM00051 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00050 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00049 EQU   SCVTSECT+32
SCVTRMBR EQU   SCVTSECT+28
@NM00048 EQU   SCVTSECT+24
@NM00047 EQU   SCVTSECT+20
@NM00046 EQU   SCVTSECT+16
@NM00045 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00044 EQU   CVTFIX+248
@NM00043 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
STORBTO  EQU   STORTO
STORB    EQU   STORFRM
RTM2RMWS EQU   RTM2RMWA
RTM2TRSA EQU   RTM2CVER+450
RTM2CREG EQU   RTM2CRG
RTM2RBRG EQU   RTM2CVER+313
RTM2WARG EQU   RTM2CVER+312
@NM00042 EQU   RTM2CVER+310
RTM2CTRA EQU   RTM2RECH+12
RTM2STRA EQU   RTM2RECH+8
RTM2SKRA EQU   RTM2RECH+4
@NM00041 EQU   RTM2TRYR+3
@NM00040 EQU   RTM2TRF2
RTM2GMR  EQU   RTM2TRF2
RTM2PPR  EQU   RTM2TRF2
RTM2IOR  EQU   RTM2TRF2
RTM2AS3R EQU   RTM2TRF1+1
RTM2AS2R EQU   RTM2TRF1+1
RTM2AS1R EQU   RTM2TRF1+1
RTM2XFLG EQU   RTM2TRF1+1
RTM2XABD EQU   RTM2TRF1+1
RTM2XIP  EQU   RTM2TRF1+1
RTM2RTYS EQU   RTM2TRF1+1
RTM2RCD  EQU   RTM2TRF1+1
RTM2FMS  EQU   RTM2TRF1
RTM2VLDY EQU   RTM2TRF1
RTM2HOOK EQU   RTM2TRF1
RTM2PPS  EQU   RTM2TRF1
RTM2GMS  EQU   RTM2TRF1
RTM2IORS EQU   RTM2TRF1
RTM2IOHS EQU   RTM2TRF1
RTM2IOQS EQU   RTM2TRF1
RTM2TMER EQU   RTM2RECL+14
RTM2EQMN EQU   RTM2ECTL
RTM2EDEQ EQU   RTM2ECTL
RTM2EFRM EQU   RTM2ECTL
RTM2ECLS EQU   RTM2ECTL
RTM2ESNP EQU   RTM2ECTL
RTM2EOPN EQU   RTM2ECTL
RTM2EGET EQU   RTM2ECTL
RTM2EENQ EQU   RTM2ECTL
RTM2DFTK EQU   RTM2DCTL
RTM2DDEQ EQU   RTM2DCTL
RTM2DFRM EQU   RTM2DCTL
RTM2DCLS EQU   RTM2DCTL
RTM2DSNP EQU   RTM2DCTL
RTM2DOPN EQU   RTM2DCTL
RTM2DGET EQU   RTM2DCTL
RTM2DENQ EQU   RTM2DCTL
RTM2SCTX EQU   RTM2RECL+8
RTM2SCTR EQU   RTM2RECL+4
RTM2SCTC EQU   RTM2RECL
@NM00039 EQU   RTM2FLX2
RTM2CERX EQU   RTM2FLX2
RTM2RCRX EQU   RTM2FLX2
RTM2RTRX EQU   RTM2FLX1
RTM2LTX  EQU   RTM2FLX1
RTM2PRX  EQU   RTM2FLX1
RTM2CVX  EQU   RTM2FLX1
RTM2DWX  EQU   RTM2FLX1
RTM2ABX  EQU   RTM2FLX1
RTM2EOTX EQU   RTM2FLX1
RTM2MTX  EQU   RTM2FLX1
@NM00038 EQU   RTM2ASIR
RTM2TRME EQU   RTM2ASIR
@NM00037 EQU   RTM2ABDP
RTM2DMP1 EQU   RTM2ABDP
RTM2MEMT EQU   RTM2INTF+3
@NM00036 EQU   RTM2TSKT
RTM2PURG EQU   RTM2TSKT
@NM00035 EQU   RTM2INTF+1
@NM00034 EQU   RTM2CTLR
RTM2WRAP EQU   RTM2CTLR
RTM2TMEM EQU   RTM2CTLR
RTM2RETR EQU   RTM2CTLR
RTM2RECR EQU   RTM2CTLR
@NM00033 EQU   RTM2RCTL
RTM2JPAQ EQU   RTM2RCTL
RTM2LPAQ EQU   RTM2RCTL
RTM2BFTL EQU   RTM2RCTL
RTM2TRSW EQU   RTM2RCTL
RTM2WANA EQU   RTM2RCTL
RTM2WAIN EQU   RTM2RCTL
RTM2STA2 EQU   RTM2RCTL
RTM2STAT EQU   RTM2ABND
RTM2NDMP EQU   RTM2ABND
@NM00032 EQU   RTM2ABID
RTM2SAV2 EQU   RTM2ABID
RTM2SAVE EQU   RTM2ABID
RTM2REG  EQU   RTM2ABID
RTM2PSW  EQU   RTM2ABID
RTM2ENQ  EQU   RTM2ABID
RTM2CB   EQU   RTM2ABID
RTM2MCTL EQU   RTM2SCTL+3
RTM2TCTL EQU   RTM2SCTL+2
@NM00031 EQU   RTM2CCTL+1
RTM2RGEB EQU   RTM2CCTL+1
RTM2DEND EQU   RTM2CCTL+1
RTM2RSCN EQU   RTM2CCTL+1
RTM2CONT EQU   RTM2CCTL
RTM2SLIP EQU   RTM2CCTL
RTM2HEED EQU   RTM2CCTL
RTM2REED EQU   RTM2CCTL
RTM2ISPC EQU   RTM2CCTL
RTM2SQS  EQU   RTM2CCTL
RTM2CNCL EQU   RTM2CCTL
RTM2STPT EQU   RTM2CCTL
RTM2PKEY EQU   RTM2CVER+258
RTM2PRWA EQU   RTM2CVER+182
RTM2PREV EQU   RTM2CVER+178
RTM2SPWA EQU   RTM2CVER+174
RTM2DCBA EQU   RTM2CVER+170
RTM2ECBS EQU   RTM2SECB+16
RTM2LECB EQU   RTM2ECBA
RTM2DTCB EQU   RTM2SNAP+68
RTM2SNCC EQU   RTM2SNAP+64
RTM2DD   EQU   RTM2SNAP+56
RTM2LTO4 EQU   RTM2TO4
RTM2LFR4 EQU   RTM2FRM4
RTM2LTO3 EQU   RTM2TO3
RTM2LFR3 EQU   RTM2FRM3
RTM2LTO2 EQU   RTM2TO2
RTM2LFR2 EQU   RTM2FRM2
RTM2LTO1 EQU   RTM2TO1
RTM2LFR1 EQU   RTM2FRM1
RTM2DPLA EQU   RTM2SNAP
RTM2NXTP EQU   RTM2CTL2+5
RTM2SGP  EQU   RTM2PMKP
RTM2EUP  EQU   RTM2PMKP
RTM2DOP  EQU   RTM2PMKP
RTM2FPP  EQU   RTM2PMKP
RTM2CCP  EQU   RTM2PMKP
RTM2ILP  EQU   RTM2PMKP
RTM2INTP EQU   RTM2CTL2+2
RTM2SPVP EQU   RTM2MWPP
RTM2WATP EQU   RTM2MWPP
RTM2MCKP EQU   RTM2MWPP
@NM00030 EQU   RTM2MWPP
RTM2KEYP EQU   RTM2MWPP
RTM2EXTP EQU   RTM2CMKP
RTM2IOP  EQU   RTM2CMKP
RTM2NXTA EQU   RTM2CTL1+5
RTM2SGA  EQU   RTM2PMKA
RTM2EUA  EQU   RTM2PMKA
RTM2DOA  EQU   RTM2PMKA
RTM2FPA  EQU   RTM2PMKA
RTM2CCA  EQU   RTM2PMKA
RTM2ILA  EQU   RTM2PMKA
RTM2INTA EQU   RTM2CTL1+2
RTM2SPVA EQU   RTM2MWPA
RTM2WATA EQU   RTM2MWPA
RTM2MCKA EQU   RTM2MWPA
@NM00029 EQU   RTM2MWPA
RTM2KEYA EQU   RTM2MWPA
RTM2EXTA EQU   RTM2CMKA
RTM2IOA  EQU   RTM2CMKA
@NM00028 EQU   RTM2PARQ+1
RTM2RCDE EQU   RTM2PARQ
RTM2RYRB EQU   RTM2TRRC+42
RTM2RTYA EQU   RTM2TRRC+38
RTM2COMP EQU   RTM2TRRC+34
RTM2SIZE EQU   RTM2SPLL+1
RTM2SUBP EQU   RTM2SPLL
RTM2RTCA EQU   RTM2RTCD
RTM2SCBO EQU   RTM2SCBS+8
RTM2SCBN EQU   RTM2SCBS+4
RTM2SCBC EQU   RTM2SCBS
RTM2STAR EQU   RTM2TRRC+10
RTM2RBST EQU   RTM2TRRC+6
RTM2FIOB EQU   RTM2IOBP+1
@NM00027 EQU   RTM2IOBP
@NM00026 EQU   RTM2TRRC+1
@NM00025 EQU   RTM2IOFS
RTM2NIOP EQU   RTM2IOFS
RTM2NOIO EQU   RTM2IOFS
RTM2IOHT EQU   RTM2IOFS
RTM2IOQR EQU   RTM2IOFS
RTM2FMID EQU   RTM2TRRY+124
@NM00024 EQU   RTM2ERRD
RTM2MCIV EQU   RTM2ERRD
RTM2RPIV EQU   RTM2ERRD
RTM2MABD EQU   RTM2ERRD
RTM2CTS  EQU   RTM2ERRD
RTM2STAE EQU   RTM2ERRD
RTM2NRBE EQU   RTM2ERRD
RTM2CLUP EQU   RTM2ERRD
@NM00023 EQU   RTM2ERRC
RTM2EAS  EQU   RTM2ERRC
RTM2PERC EQU   RTM2ERRC
RTM2IRB  EQU   RTM2ERRC
RTM2STAI EQU   RTM2ERRC
RTM2STAF EQU   RTM2ERRC
RTM2SRBM EQU   RTM2ERRB
RTM2LDIS EQU   RTM2ERRB
RTM2ENRB EQU   RTM2ERRB
RTM2TYP1 EQU   RTM2ERRB
@NM00022 EQU   RTM2ERRB
RTM2PGIO EQU   RTM2ERRA
RTM2TEXC EQU   RTM2ERRA
RTM2SVCE EQU   RTM2ERRA
RTM2ABTM EQU   RTM2ERRA
RTM2SVCD EQU   RTM2ERRA
RTM2RKEY EQU   RTM2ERRA
RTM2PCHK EQU   RTM2ERRA
RTM2MCHK EQU   RTM2ERRA
RTM2TIME EQU   RTM2EEDH+20
RTM2RFSA EQU   RTM2EEDH+16
@NM00021 EQU   RTM2EEDH+14
RTM2VEQR EQU   RTM2RSR2
RTM2PGFX EQU   RTM2RSR2
RTM2FLSQ EQU   RTM2RSR2
RTM2FSQA EQU   RTM2RSR2
RTM2NUCL EQU   RTM2RSR2
RTM2SPER EQU   RTM2RSR2
RTM2INTC EQU   RTM2RSR2
RTM2OFLN EQU   RTM2RSR2
RTM2CHNG EQU   RTM2RSR1
RTM2MSER EQU   RTM2RSR1
@NM00020 EQU   RTM2RSR1
RTM2CPID EQU   RTM2EEDH+10
RTM2TERR EQU   RTM2MCHD
RTM2SOFT EQU   RTM2MCHD
RTM2INSF EQU   RTM2MCHD
RTM2ACR  EQU   RTM2MCHD
RTM2SCK  EQU   RTM2MCHD
RTM2PSWU EQU   RTM2MCHD
RTM2REGU EQU   RTM2MCHD
RTM2SKYF EQU   RTM2MCHD
@NM00019 EQU   RTM2MCHS
RTM2RSRF EQU   RTM2MCHS
RTM2RSRC EQU   RTM2MCHS
RTM2INVP EQU   RTM2MCHS
RTM2TSVL EQU   RTM2MCHS
RTM2RCDF EQU   RTM2MCHS
RTM2SRVL EQU   RTM2MCHS
RTM2SCKE EQU   RTM2STCK+4
RTM2SCKB EQU   RTM2STCK
RTM2ABEP EQU   RTM2TRRY+88
RTM2ABNM EQU   RTM2TRRY+80
RTM2TRAN EQU   RTM2AEC1+4
RTM2IPC1 EQU   RTM2ICD1
RTM2IMC1 EQU   RTM2ICD1
RTM2IPR1 EQU   RTM2ICD1
@NM00018 EQU   RTM2INC1
@NM00017 EQU   RTM2ILC1
RTM2IL1  EQU   RTM2ILC1
@NM00016 EQU   RTM2ILC1
@NM00015 EQU   RTM2AEC1
RTM2ADD1 EQU   RTM2NXT1+1
@NM00014 EQU   RTM2NXT1
@NM00013 EQU   RTM2EPSW+3
RTM2SGN1 EQU   RTM2INT1
RTM2EXP1 EQU   RTM2INT1
RTM2DEC1 EQU   RTM2INT1
RTM2FPO1 EQU   RTM2INT1
RTM2CC1  EQU   RTM2INT1
@NM00012 EQU   RTM2INT1
RTM2PGM1 EQU   RTM2MWP1
RTM2WAT1 EQU   RTM2MWP1
RTM2MCK1 EQU   RTM2MWP1
RTM2ECT1 EQU   RTM2MWP1
RTM2KEY1 EQU   RTM2MWP1
RTM2EXT1 EQU   RTM2EMK1
RTM2AIO1 EQU   RTM2EMK1
RTM2TRM1 EQU   RTM2EMK1
RTM2EAM1 EQU   RTM2EMK1
@NM00011 EQU   RTM2EMK1
RTM2PER1 EQU   RTM2EMK1
@NM00010 EQU   RTM2EMK1
RTM2ER15 EQU   RTM2EREG+60
RTM2ER14 EQU   RTM2EREG+56
RTM2ER13 EQU   RTM2EREG+52
RTM2ER12 EQU   RTM2EREG+48
RTM2ER11 EQU   RTM2EREG+44
RTM2ER10 EQU   RTM2EREG+40
RTM2ER9  EQU   RTM2EREG+36
RTM2ER8  EQU   RTM2EREG+32
RTM2ER7  EQU   RTM2EREG+28
RTM2ER6  EQU   RTM2EREG+24
RTM2ER5  EQU   RTM2EREG+20
RTM2ER4  EQU   RTM2EREG+16
RTM2ER3  EQU   RTM2EREG+12
RTM2ER2  EQU   RTM2EREG+8
RTM2ER1  EQU   RTM2EREG+4
RTM2ER0  EQU   RTM2EREG
RTM2CT   EQU   RTM2WA+56
RTM2VRBT EQU   RTM2WA+52
RTM2TCBT EQU   RTM2WA+48
RTM2SFWA EQU   RTM2WA+32
RTM2CC   EQU   RTM2CODE+1
@NM00009 EQU   RTM2CCF
RTM2EOT  EQU   RTM2CCF
RTM2EOM  EQU   RTM2CCF
RTM2R0DP EQU   RTM2CCF
RTM2STEP EQU   RTM2CCF
RTM2DREQ EQU   RTM2CCF
RTM2ASC  EQU   RTM2WA+24
RTM2VRBC EQU   RTM2WA+20
RTM2TCBC EQU   RTM2WA+16
RTM2CVT  EQU   RTM2WA+12
RTM2LGTH EQU   RTM2RT2D+1
RTM2SPID EQU   RTM2RT2D
RTM2ADDR EQU   RTM2DESC+4
RTM2ID   EQU   RTM2DESC
RMPLDCBL EQU   RMPL+20
RMPLRBPA EQU   RMPL+12
RMPLTCBA EQU   RMPL+8
RMPLASCB EQU   RMPL+4
RMPLFLG2 EQU   RMPL+1
@NM00008 EQU   RMPLFLG1
RMPLWT1M EQU   RMPLFLG1
RMPLJST  EQU   RMPLFLG1
RMPLRCOV EQU   RMPLFLG1
RMPLIPUF EQU   RMPLFLG1
RMPLRBPP EQU   RMPLFLG1
RMPLTERM EQU   RMPLFLG1
RMPLTYPE EQU   RMPLFLG1
SNPSTOR  EQU   SNPPARMS+16
SNPTCBA  EQU   SNPPARMS+12
SNPDCB   EQU   SNPPARMS+8
@NM00007 EQU   SNPPARMS+7
@NM00006 EQU   SNPPDATA
SNPSPLS  EQU   SNPPDATA
SNPPSW   EQU   SNPPDATA
SNPJPA   EQU   SNPPDATA
SNPLPA   EQU   SNPPDATA
SNPREGS  EQU   SNPPDATA
SNPSAVE2 EQU   SNPPDATA
SNPSAVE  EQU   SNPPDATA
@NM00005 EQU   SNPPARMS+5
@NM00004 EQU   SNPSDATA
SNPQCB   EQU   SNPSDATA
SNPCB    EQU   SNPSDATA
SNPTRT   EQU   SNPSDATA
SNPSWA   EQU   SNPSDATA
SNPLSQA  EQU   SNPSDATA
SNPSQA   EQU   SNPSDATA
SNPNUC   EQU   SNPSDATA
@NM00003 EQU   SNPPARMS+2
@NM00002 EQU   SNPFLAG
SNPSLIST EQU   SNPFLAG
SNPTCB   EQU   SNPFLAG
SNPID    EQU   SNPFLAG
SNPABEND EQU   SNPFLAG
@NM00001 EQU   SNPFLAG
SNPVS2   EQU   SNPFLAG
SNPSNAP  EQU   SNPFLAG
SNPIDENT EQU   SNPPARMS
@NM00095 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00094 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00093 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00092 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00091 EQU   FLCFSA
@NM00090 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00089 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00088 EQU   FLCIOA
@NM00087 EQU   FLCMCLA+15
@NM00086 EQU   FLCMCLA+14
@NM00085 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00084 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00083 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00082 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00081 EQU   FLCPER
@NM00080 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00079 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00078 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00077 EQU   FLCPIILC
@NM00076 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00075 EQU   FLCSVILC
@NM00074 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00073 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00072 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEAVTMMT,(C'PLS2120',0701,76090)
