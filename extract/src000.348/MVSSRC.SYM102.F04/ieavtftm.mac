TFTM     TITLE 'IEAVTFTM TEXT AND TABLE CSECT FOR LOAD MODULE IEAVTFSD'
IEAVTFTM CSECT
* /* START OF SPECIFICATIONS ****
*
*     MODULE NAME = IEAVTFTM
*
*     DESCRIPTIVE NAME = MESSAGE CSECT FOR IEAVTFSD
*
*****************************************************************
*     COPYRIGHT =  NONE
*
*     STATUS = NEW FOR OS/VS2 3.7  SU33                    @G33VPHE
*
*     FUNCTION = MESSAGE CSECT
*
*       OPERATION = NONE
*
*     NOTES =
*
*       HOW TO ALTER THE SPECIFIC FORMAT SUBROUTINE LOADED AND CALLED
*       BY IEAVTFSD FOR EACH SUMMARY DUMP RECORD ID.
*         FIRST: LOCATE THE BEGINNING OF THE TABLE USED BY IEAVTFSD
*           TO DETERMINE WHICH SPECIFIC FORMATTING SUBROUTINE TO USE.
*           THIS CAN BE DONE BY LOCATING THE LABEL BEGTAB IN THIS
*           CSECT, OR BY USING THE SPZAP SERVICE AID TO DUMP THE
*           VERSION OF THIS CSECT CURRENTLY BEING USED. CODE THE JCL
*           AS SPECIFIED IN THE SPL:SERVICE AIDS AND THEN SPECIFY -
*                DUMPT IEAVTFSD IEAVTFTM
*           THE 8 BYTES PRECEEDING THE TABLE CONTAIN THE PRINTABLE
*           CHARACTERS 'FMTTABLE', WHICH WILL SHOW UP ON THE RIGHT
*           SIDE OF THE DUMP.
*         SECOND: EACH ENTRY IN THE TABLE IS 28 DECIMAL OR '1C'X LONG.
*           SUBTRACT 1 FROM THE ID THAT YOU WISH TO ALTER AND THEN
*           MULTIPLY BY THE LENGTH OF A TABLE ENTRY (28 OR X'1C'). ADD
*           THE RESULT TO THE ADDRESS OF THE FIRST BYTE AFTER THE 8
*           CHARACTER ID TO OBTAIN THE ADDRESS OF THE ENTRY TO BE
*           ALTERED.
*         THIRD: EACH ENTRY CONSISTS OF THREE PARTS: 1) 8 BYTES OF
*           BLANKS OR A MODULE NAME WHICH WILL BE LOADED AND CALLED,
*           2) A 4 BYTE ADDRESS WHICH WILL BE CALLED IF THE MODULE
*           NAME IS BLANKS OR CANNOT BE LOADED, 3) A 16 CHARACTER
*           DESCRIPTION OF WHAT THE CORRESPONDING SUMMARY DUMP RECORD
*           WILL CONTAIN. LOOK AT THE 16 CHARACTER DESCRIPTION AND
*           DOUBLE CHECK THAT THIS IS THE RECORD ID ENTRY THAT YOU
*           WANT. THEN USE SPZAP TO CHANGE THE 8 CHARACTER MODULE NAME
*           TO THE ONE YOU WANT LOADED AND CALLED. THE NAME SHOULD BE
*           LEFT JUSTIFIED PRINTABLE EBCDIC PADDED WITH BLANKS.
*         FOURTH: LINK EDIT THE MODULE INTO SYS1.LINKLIB OR ITS
*           EQUIVALENT. NOTES ON HOW TO DESIGN A SPECIFIC FORMAT
*           SUBROUTINE CAN BE FOUND IN IEAVTFSD, AND IEAVTFHX CAN BE
*           USED AS AN EXAMPLE OF A WORKING ONE.
*
*       DEPENDENCIES = SYSTEM 370 COMPATIBLE HARDWARE
*                    MUST BE ASSEMBLED WITH THE CHARACTER CODE IN
*                    WHICH THE OUTPUT IS TO BE PRINTED.
*
*       RESTRICTIONS = NONE
*
*       REGISTER CONVENTIONS = NONE
*
*       ADDITIONAL NOTES =
*
*       PACKAGING = LOAD MODULE IEAVTFSD
*       SYSGEN = SGIEA400 (SYS1.LINKLIB)
*
*     PATCH LABEL = NONE
*
*     MODULE TYPE =
*       PROCESSOR = ASSEM
*       MODULE SIZE = 3.5K
*       ATTRIBUTES = REFRESHABLE, NONEXECUTABLE
*
*     ENTRY POINT = N/A
*       USERS = IEAVTFSD
*
*     MESSAGES = NO NUMBERED MESSAGES
*
*     CHANGE ACTIVITY = ZA25878                           @G33VPHE
*                       TRACE TABLE LENGTH FIX MJD         @ZA25122
*
**** END OF SPECIFICATIONS ***/
*/*A0-999999                                               @G33CPHE*/
         EJECT
*
* ARRAY OF MSG ADDRESSES USED BY IEAVTFRD TO LOCATE THE APPROPRIATE
* MSG TEXT BASED ON THE RETURN CODE VALUE
*
         ENTRY FRDMSG
FRDMSG   DC    A(PARTIAL)       RETCODE=4
         DC    A(ENDOFSD)       RETCODE=8
         DC    A(NONXTHDR)      RETCODE=12
         DC    A(NOSUMDMP)      RETCODE=16
         DC    A(NOCVT)         RETCODE=20
         DC    A(NOGDA)         RETCODE=24
         DC    A(GETFAIL)       RETCODE=28
         SPACE 2
PARTIAL  DC    AL1(E2-T2)
T2       DC    C'*****  --A PARTIAL SUMMARY DUMP RECORD HAS BEEN READ--*
                 *****'
E2       EQU   *
         SPACE 2
ENDOFSD  DC    AL1(E1-T1)
T1       DC    C'*****  --NORMAL END OF SUMMARY DUMP REACHED--  *****'
E1       EQU   *
         SPACE 2
NONXTHDR DC    AL1(E3-T3)
T3       DC    C'*****  --THE END OF THE AVAILABLE SUMMARY DUMP DATA WAS
               S REACHED BEFORE THE NORMAL END OF THE SUMMARY DUMP--  **
               ****'
E3       EQU   *
         SPACE 2
NOSUMDMP DC    AL1(E5-T5)
T5       DC    C'*****  --THIS DUMP CONTAINS NO SUMMARY DUMP DATA--  ***
               ***'
E5       EQU   *
         SPACE 2
NOCVT    DC    AL1(E20-T20)
T20      DC    C'*****  --NO SUMMARY DUMP DATA READ BECAUSE THE CVT COUL
               LD NOT BE LOCATED-- *****'
E20      EQU   *
         SPACE 2
NOGDA    DC    AL1(E21-T21)
T21      DC    C'*****  --NO SUMMARY DUMP DATA READ BECAUSE THE GDA (GLO
               OBAL DATA AREA) COULD NOT BE LOCATED-- *****'
E21      EQU   *
         SPACE 2
GETFAIL  DC    AL1(E4-T4)
T4       DC    C'*****  --IEAVTFRD IS UNABLE TO OBTAIN SUFFICIENT STORAG
               GE TO RECONSTRUCT SUMMARY DUMP RECORDS-- *****'
E4       EQU   *
         EJECT
*
* ARRAY OF MSG ADDRESSES USED BY IEAVTFRD TO LOCATE THE APPROPRIATE
* MSG TEXT FOR SUMMARY DUMP MESSAGES INDICATED BY THE SMDLRMSG VALUE.
*
         ENTRY SDMSGTAB
         DS    0F
         DS    XL3
SDMSGTAB DC    AL1((ENDSTAB-*+L'*)/4) THE NUMBER OF ENTRIES IN THIS TAB
         DC    A(SDMSG01)           ID=1
         DC    A(SDMSG02)           ID=2
         DC    A(UNKNSDM)            UNKNOWN SUMDUMP MSG ID VALUE
ENDSTAB  EQU   *
*
* MESSAGES FOR SDMSGTAB
*
SDMSG01  DC    AL1(ENDMSG01-BEGMSG01)
BEGMSG01 DC    C'***** --WHILE GATHERING DATA SUMMARY DUMP DETECTED AN E
               ERROR IN THE SUMLIST VALUES.-- *****'
ENDMSG01 EQU   *
SDMSG02  DC    AL1(ENDMSG02-BEGMSG02)
BEGMSG02 DC    C'NO RTM2 WORK AREAS EXIST FOR THIS ASID.'
ENDMSG02 EQU   *
UNKNSDM  DC    XL4'03F00000'          THIS IS A FORMAT PATTERN FOR THE
         DC    AL4(T200)              AMDPRDMP FORMAT SERVICE. IT WILL
         DC    XL4'15B0101C'          BUILD THE MESSAGE THAT IS PUT OUT
         DC    XL4'01F01E00'          IF AN UNKNOWN SMDLRMSG VALUE
         DC    XL4'01F02E00'          TURNS UP
         DC    XL4'01F03E00'
         DC    XL4'01A04E00'
         DC    AL4(0)
T200     DC    C'***** --UNKNOWN MESSAGE ID='''' RECEIVED FROM SUMMARY D
               DUMP IN THE SMDLRMSG FIELD.-- *****'
         EJECT
*
* TITLE LINES USED BY IEAVTFSD TO TITLE THE MAJOR SECTIONS OF THE
* SUMMARY DUMP FORMATTED OUTPUT. RECTITLE IS ACCOMPANIED BY RECTITFP,
* AN AMDPRDMP FORMAT PATTERN WHICH WILL FILL IN THE BLANKS WITH DATA
* FROM THE SUM DMP LOGICAL RECORD HEADER AND FROM FMTTABLE.
*
         ENTRY MAINTITL
MAINTITL DC    AL1(E10-T10)
T10      DC    CL36' '
         DC    C'* * * * SUMMARY DUMP PORTION OF SVC DUMP * * * *'
E10      EQU   *
         SPACE 2
         ENTRY RECTITLE
RECTITLE DC    AL1(E11-T11)
T11      DC    C'----- ................ ----- RECORD ID X''....'' COPIED
               D FROM DUMP ADDRESS ........ FOR A LENGTH OF X''........'
               '' BYTES.'                                      @ZA25122
E11      EQU   *
*
* AMDPRDMP FORMAT PATTERN FOR RECTITLE
*
         ENTRY RECTITFP
RECTITFP DC    BL1'00010101'           LABEL AND ID
         DC    XL1'F1'
         DC    AL1(6)
         DC    AL1(41)
         DC    BL1'00110100'           RESERVED FIELD SKIPPED  @ZA25122
         DC    XL1'01'                                         @ZA25122
         DC    AL1(0)                                          @ZA25122
         DC    AL1(99)                                         @ZA25122
         DC    BL1'00010100'           LENGTH                  @ZA25122
         DC    XL1'03'                                         @ZA25122
         DC    AL1(0)                                          @ZA25122
         DC    AL1(99)                                         @ZA25122
         DC    BL1'00010100'           ADDRESS
         DC    XL1'03'
         DC    AL1(0)
         DC    AL1(72)
         DC    AL4(0)
         SPACE 2
         ENTRY NLDMSG
NLDMSG   DC    AL1(E900-T900)
T900     DC    C'*****  --MODULE X CANNOT BE LOADED. THE DEFAULT FORMAT*
                ROUTINE WILL BE USED FOR THIS RECORD.--  *****'
E900     EQU   *
         EJECT
*
* ARRAY OF MSG ADDRESSES USED BY IEAVTFHX TO LOCATE THE APPROPRIATE
* MSG TEXT BASED ON THE RETURN CODE VALUE
*
         ENTRY FHXMSG
FHXMSG   DC    A(FMTSERV)       RETCODE=4
         SPACE 2
FMTSERV  DC    AL1(E600-T600)
T600     DC    C'*****  --IEAVTFHX HAS TERMINATED BECAUSE OF A NONZERO *
               RETURN CODE FROM THE AMDPRDMP FORMAT SERVICE.-- *****'
E600     EQU   *
         EJECT
*
* THIS IS A TABLE FOR A TR INSTRUCTION. IT IS USED BY IEAVTFHX TO
* CONVERT UNPRINTABLE EBCDIC VALUES INTO PERIODS AS PART OF THE
* RECORD FORMATTING
*
         ENTRY TRTABLE
TRTABLE  DS    0F
         DC    64C'.'                                       @ZA25878
         DC    C' '                                         @ZA25878
         DC    128C'.'                                      @ZA25878
         DC    C'ABCDEFGHI'                                 @ZA25878
         DC    7C'.'                                        @ZA25878
         DC    C'JKLMNOPQR'                                 @ZA25878
         DC    8C'.'                                        @ZA25878
         DC    C'STUVWXYZ'                                  @ZA25878
         DC    6C'.'                                        @ZA25878
         DC    C'0123456789'                                @ZA25878
         DC    6C'.'                                        @ZA25878
         SPACE 1
* FORMAT PATTERN & TEXT FOR IEAVTFHX MSG THAT INDICATES WHICH PORTION
* OF THE RECORD IS MISSING IN ACTION
         ENTRY MIAFP
MIAFP    DC    BL1'00000011'             BEGINNING TEXT
         DC    XL1'F0'
         DC    AL1(9)
         DC    AL1(0)
         DC    AL4(MIAMSG)
         DC    BL1'00010101'             TEXT AND FROM VALUE
         DC    XL1'F3'
         DC    AL1(25)
         DC    AL1(42)
         DC    BL1'00010101'             TEXT AND TO VALUE
         DC    XL1'13'
         DC    AL1(51)
         DC    AL1(54)
         DC    BL1'00000001'             ENDING TEXT
         DC    XL1'B0'
         DC    AL1(63)
         DC    AL1(0)
         DC    AL4(0)                    END OF LIST
         SPACE 2
MIAMSG   DC    C'++ SUMMARY DUMP RECORD DATA FROMTOUNAVAILABLE.'
         EJECT
*
* THIS TABLE CONTAINS AN ENTRY FOR EACH SUMMARY DUMP RECORD TYPE.
* EACH ENTRY CONTAINS (1) THE EBCDIC NAME OF THE MODULE TO BE CALLED TO
* FORMAT THAT SPECIFIEC ID, (2) THE ADDRESS OF A DEFAULT FORMATTER TO
* BE USED IF THE OTHER DOES NOT EXIST OR CANNOT BE LOADED, AND (3) AN
* EBCDIC TITLE INSERT TO DESCRIBE THIS ID.
* THE LAST ENTRY IS USED FOR ALL ID VALUES GREATER THAN OR EQUAL TO
* ITSELF.
* IF THE 8 CHAR MODULE NAME IN THE FIRST PART OF THE ENTRY IS BLANK
* OR THE LOAD FOR IT FAILS, THE DEFAULT RTN WILL BE CALLED.
* A DIFFERENT FORMAT RTN CAN BE SUBSTITUTED FOR THE ONE NORMALLY USED
* BY SUPERZAPPING THE EBCDIC NAME INTO THE FIRST 8 BYTES OF THE ENTRY
* FOR THAT ID, AND PUTTING THE LOAD MODULE IN SYS1.LINKLIB OR ITS
* EQUIVALENT.
* IF THE 16 CHAR THIRD PART OF AN ENTRY IS BLANK IEAVTFSD WILL SKIP
* PRINT OUT A TITLE LINE FOR THAT RECORD.
*
         ENTRY FMTTABLE
FMTTABLE DC    A((ENDTAB-BEGTAB)/(SECENT-BEGTAB)) NUM OF ENTRIES IN TAB
         DC    C'FMTTABLE'
*
BEGTAB   EQU   *
         DC    CL8'        '       ID=1    1
         DC    V(IEAVTFHX)
         DC    CL16'PCCA            '
*
SECENT   EQU   *
         DC    CL8'        '       ID=2    2
         DC    V(IEAVTFHX)
         DC    CL16'LCCA            '
*
         DC    CL8'        '       ID=3    3
         DC    V(IEAVTFHX)
         DC    CL16'PSA             '
*
         DC    CL8'        '       ID=4    4
         DC    V(IEAVTFHX)
         DC    CL16'TRACE TABLE     '
*
         DC    CL8'        '       ID=5    5
         DC    V(IEAVTFHX)
         DC    CL16'SUPER FRR STACKS'
*
         DC    CL8'        '       ID=6    6
         DC    V(IEAVTFHX)
         DC    CL16'GWSA PAGE IO ERR'
*
         DC    CL8'        '       ID=7    7
         DC    V(IEAVTFHX)
         DC    CL16'GWSA GET/FREMAIN'
*
         DC    CL8'        '       ID=8    8
         DC    V(IEAVTFHX)
         DC    CL16'GWSA  RSM       '
*
         DC    CL8'        '       ID=9    9
         DC    V(IEAVTFHX)
         DC    CL16'GWSA RSM SUSPEND'
*
         DC    CL8'        '       ID=10   A
         DC    V(IEAVTFHX)
         DC    CL16'GWSA MEM SWITCH '
*
         DC    CL8'        '       ID=11   B
         DC    V(IEAVTFHX)
         DC    CL16'GWSA STATUS     '
*
         DC    CL8'        '       ID=12   C
         DC    V(IEAVTFHX)
         DC    CL16'GWSA  SRM       '
*
         DC    CL8'        '       ID=13   D
         DC    V(IEAVTFHX)
         DC    CL16'GWSA MEM TERM   '
*
         DC    CL8'        '       ID=14   E
         DC    V(IEAVTFHX)
         DC    CL16'GWSA ENQ/DEQ    '
*
         DC    CL8'        '       ID=15   F
         DC    V(IEAVTFHX)
         DC    CL16'GWSA STOP/RESTRT'
*
         DC    CL8'        '       ID=16   10
         DC    V(IEAVTFHX)
         DC    CL16'GWSA IEAVESC0   '
*
         DC    CL8'        '       ID=17   11
         DC    V(IEAVTFHX)
         DC    CL16'CWSA LOW-LVL CMN'
*
         DC    CL8'        '       ID=18   12
         DC    V(IEAVTFHX)
         DC    CL16'CWSA  GTF       '
*
         DC    CL8'        '       ID=19   13
         DC    V(IEAVTFHX)
         DC    CL16'CWSA  SRM       '
*
         DC    CL8'        '       ID=20   14
         DC    V(IEAVTFHX)
         DC    CL16'CWSA  TIMER     '
*
         DC    CL8'        '       ID=21   15
         DC    V(IEAVTFHX)
         DC    CL16'CWSA  ACR       '
*
         DC    CL8'        '       ID=22   16
         DC    V(IEAVTFHX)
         DC    CL16'CWSA RTM/MACHK  '
*
         DC    CL8'        '       ID=23   17
         DC    V(IEAVTFHX)
         DC    CL16'CWSA IOS FLIH   '
*
         DC    CL8'        '       ID=24   18
         DC    V(IEAVTFHX)
         DC    CL16'CWSA DISPATCHER '
*
         DC    CL8'        '       ID=25   19
         DC    V(IEAVTFHX)
         DC    CL16'CWSA  MF1       '
*
         DC    CL8'        '       ID=26   1A
         DC    V(IEAVTFHX)
         DC    CL16'CWSA  ABTERM    '
*
         DC    CL8'        '       ID=27   1B
         DC    V(IEAVTFHX)
         DC    CL16'CWSA I/O RESTART'
*
         DC    CL8'        '       ID=28   1C
         DC    V(IEAVTFHX)
         DC    CL16'CWSA STATUS     '
*
         DC    CL8'        '       ID=29   1D
         DC    V(IEAVTFHX)
         DC    CL16'CWSA SUPR REPAIR'
*
         DC    CL8'        '       ID=30   1E
         DC    V(IEAVTFHX)
         DC    CL16'CWSA RTM-CCH    '
*
         DC    CL8'        '       ID=31   1F
         DC    V(IEAVTFHX)
         DC    CL16'LWSA LOW-LVL CMN'
*
         DC    CL8'        '       ID=32   20
         DC    V(IEAVTFHX)
         DC    CL16'LWSA VALID''Y CHK'
*
         DC    CL8'        '       ID=33   21
         DC    V(IEAVTFHX)
         DC    CL16'LWSA  RTM       '
*
         DC    CL8'        '       ID=34   22
         DC    V(IEAVTFHX)
         DC    CL16'LWSA SDUMP      '
*
         DC    CL8'        '       ID=35   23
         DC    V(IEAVTFHX)
         DC    CL16'LWSA ABTERM     '
*
         DC    CL8'        '       ID=36   24
         DC    V(IEAVTFHX)
         DC    CL16'LWSA  CIRB      '
*
         DC    CL8'        '       ID=37   25
         DC    V(IEAVTFHX)
         DC    CL16'LWSA STG2 EXT EF'
*
         DC    CL8'        '       ID=38   26
         DC    V(IEAVTFHX)
         DC    CL16'LWSA EXIT (SVC3)'
*
         DC    CL8'        '       ID=39   27
         DC    V(IEAVTFHX)
         DC    CL16'LWSA  POST      '
*
         DC    CL8'        '       ID=40   28
         DC    V(IEAVTFHX)
         DC    CL16'LWSA WAIT       '
*
         DC    CL8'        '       ID=41   29
         DC    V(IEAVTFHX)
         DC    CL16'LWSA  STATUS    '
*
         DC    CL8'        '       ID=42   2A
         DC    V(IEAVTFHX)
         DC    CL16'LWSA  STAE      '
*
         DC    CL8'        '       ID=43   2B
         DC    V(IEAVTFHX)
         DC    CL16'LWSA  EVENTS    '
*
         DC    CL8'        '       ID=44   2C
         DC    V(IEAVTFHX)
         DC    CL16'LWSA  RSM       '
*
         DC    CL8'        '       ID=45   2D
         DC    V(IEAVTFHX)
         DC    CL16'LWSA ASCB CHAP  '
*
         DC    CL8'        '       ID=46   2E
         DC    V(IEAVTFHX)
         DC    CL16'SUMLIST RANGE   '
*
         DC    CL8'IEAVTFRT'       ID=47   2F INTERFACE TO IEAFTIHS
         DC    V(IEAVTFHX)
         DC    CL16'INT HANDLER SA  '
*
         DC    CL8'        '       ID=48   30
         DC    V(IEAVTFHX)
         DC    CL16'REGISTER AREA   '
*
         DC    CL8'        '       ID=49   31
         DC    V(IEAVTFHX)
         DC    CL16'PSW AREA        '
*
         DC    CL8'        '       ID=50   32
         DC    V(IEAVTFHX)
         DC    CL16'GBL WSA VEC TABL'
*
         DC    CL8'        '       ID=51   33
         DC    V(IEAVTFHX)
         DC    CL16'CPU WSA VEC TABL'
*
         DC    CL8'        '       ID=52   34
         DC    V(IEAVTFHX)
         DC    CL16'LCL WSA VEC TABL'
*
         DC    CL8'        '       ID=53   35
         DC    V(IEAVTFHX)
         DC    CL16'                '
*
         DC    CL8'        '       ID=54   36
         DC    V(IEAVTFHX)
         DC    CL16'CWSA ASM DIE    '
*
         DC    CL8'        '       ID=55   37
         DC    V(IEAVTFHX)
         DC    CL16'CWSA ASM SRB-I/O'
*
         DC    CL8'        '       ID=56   38
         DC    V(IEAVTFHX)
         DC    CL16'SDWA            '
*
         DC    CL8'IEAVTFRT'       ID=57   39 INTERFACE TO IEAFTRT2
         DC    V(IEAVTFHX)
         DC    CL16'RTM 2 WORK AREA '
*
         DC    CL8'        '       ID=58   3A
         DC    V(IEAVTFHX)
         DC    CL16'RTM2WA TRACE TAB'
*
         DC    CL8'        '       ID=59   3B  SPECIAL RECORD ID
         DC    V(IEAVTFHX)                     RECOGNISIZED BY IEAVTFSD
         DC    CL16'MEANINGLESS DATA'          AS ONE TO BE SKIPPED
*
         DC    CL8'        '       ID=60   3C   ASID HEADER RECORD FOR
         DC    V(IEAVTT3C)                      FOR MULTI ASID DUMPS
         DC    CL16'                '
*
* INSERT NEW ENTRIES PRIOR TO THIS COMMENT
         DC    CL8'        '       ID=LAST
         DC    V(IEAVTFHX)
         DC    CL16'UNKNOWN TYPE    '
*
ENDTAB   EQU   *
         END
