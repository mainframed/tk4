         TITLE 'IEE5603D K AND MR MESSAGE MODULE LOAD ONE'
***********************************************************************
*                                                                     *
*   MODULE NAME         =    IEE5603D                           Y02669*
*                                                                     *
*   DESCRIPTIVE NAME    =    CONTROL (K), MSGRT (MR) COMMANDS   Y02669*
*                            AND L=CCA OPERAND ERROR MESSAGE    Y02669*
*                            MODULE - LOAD 1                    Y02669*
*                                                                     *
*   COPYRIGHT           =    MISSING                            Y02669*
*                                                                     *
*   STATUS              =    01 - UPDATE FOR VS/2 RELEASE 1     Y02669*
*                                                                     *
*   FUNCTION            =    THIS MODULE HANDLES CONTROL (K),   Y02669*
*                            MSGRT (MR) COMMANDS AND L=CCA      Y02669*
*                            OPERAND ERROR MESSAGES.            Y02669*
*                                                                     *
*  OPERATION            =    MOST MESSAGES ARE ISSUED BY THE    Y02669*
*                            WRITE TO OPERATOR (WTO) MACRO      Y02669*
*                            TO THE SOURCE CONSOLE. INCLUDING @Y02668P*
*                            ALL MESSAGES ISSUED FROM ANOTHER @Y02668P*
*                            MEMORY (JES3). THIS INCLUDES THE @Y02668P*
*                            CONTROL AND MSG ROUTE COMMANDS   @Y02668P*
*                            IF THE MESSAGE IS TO BE WRITTEN    Y02669*
*                            IN RESPONSE TO A CONTROL OR MSGRT  YM1914*
*                            COMMAND ISSUED FROM A CRT CONSOLE  YM1914*
*                            OR THE MESSAGE ALSO INCLUDES       Y02669*
*                            'IEE150I CHANGE OPTIONS, IF        Y02669*
*                            DESIRED', (I.E. IN RESPONSE TO A   Y02669*
*                            'REF' COMMAND; K T,REF; K A,REF;   Y02669*
*                            MR REF), THE MESSAGE IS SET UP     Y02669*
*                            IN THE INSTRUCTION LINE OF THE     Y02669*
*                            TRANSIENT DCM TO BE WRITTEN BY     Y02669*
*                            DIDOCS.                            Y02669*
*                                                                     *
*                            FOR ALL MESSAGES WHICH ARE PUT IN  Y02651*
*                            THE TDCM INSTRUCTION LINE, IF THE  Y02651*
*                            CMS AND LOCAL LOCKS ARE NOT HELD   Y02651*
*                            ON ENTRY, THEY ARE OBTAINED AND    Y02651*
*                            XASSDS5 IS TURNED ON. FOR THE WTO  Y02651*
*                            ISSUED MESSAGES THE LOCKS ARE      Y02651*
*                            RELEASED BEFORE THE GETMAIN IS     Y02651*
*                            ISSUED.                            Y02651*
*                                                                     *
*                            IF THE COMMAND WAS ISSUED          YM1557*
*                            INTERNALLY, THE CONSOLE ID FOUND   YM1557*
*                            IN XAU WILL BE X'00'. IN THESE     YM1557*
*                            CASES, THE ERROR MESSAGE WILL BE   YM1557*
*                            ISSUED VIA WTO TO THE MASTER       YM1557*
*                            CONSOLE.                           YM1557*
*                                                                     *
*                            THE MESSAGE CODE FOUND IN XAE      Y02669*
*                            WHEN DOUBLED SERVES AS AN INDEX    Y02669*
*                            INTO THE MESSAGE TEXT TABLE.       Y02669*
*                                                                     *
*                            EACH ENTRY IN THE TABLE CONTAINS   Y02669*
*                            MESSAGE FLAGS WHICH INDICATE:      Y02669*
*                             X'80' - MESSAGE REQUIRES COMMAND  Y02669*
*                                     VERB FROM XAV             Y02669*
*                             X'40' - MESSAGE REQUIRES INVALID  Y02669*
*                                     OPERAND WHOSE ADDRESS IS  Y02669*
*                                     FOUND IN XASOPTR          Y02669*
*                             X'20' - MESSAGE REQUIRES          Y02669*
*                                     ADDITIONAL TEXT FROM      Y02669*
*                                     IEE5903D                  Y02669*
*                             X'10' - INVALID OPERAND BELONGS   Y02669*
*                                     AT END OF TEXT            Y02669*
*                                                                     *
*                            IF THE MESSAGE HAS TWO PARTS,      Y02669*
*                            A BRANCH IS TAKEN TO IEE5903D TO   Y02669*
*                            COMPLETE THE MESSAGE AND ISSUE IT. Y02669*
*                            (THIS IS THE ONLY ENTRANCE TO      Y02669*
*                            IEE5903D.)                         Y02669*
*                                                                     *
*   NOTES               =    NONE                               Y02669*
*                                                                     *
*    CHARACTER-CODE                                             Y02669*
*     DEPENDENCIES      =    ANY CHARACTER CODE OTHER THAN      Y02669*
*                            EBCDIC WILL REQUIRE REASSEMBLY OF  Y02669*
*                            THIS MODULE. NOTE THAT CHARACTER   Y02669*
*                            REPRESENTATIONS ARE USED FOR       Y02669*
*                            ',' AND ')'.                       Y02669*
*                                                                     *
*    DEPENDENCIES       =    NONE                               Y02669*
*                                                                     *
*    RESTRICTIONS       =    NONE                               Y02669*
*                                                                     *
*    REGISTER                                                   Y02669*
*     CONVENTIONS       =    NONE                               Y02669*
*                                                                     *
*     PATCH LABEL       =    PATCH                              Y02669*
*                                                                     *
*   MODULE TYPE         =    CSECT (MESSAGE MODULE)             Y02669*
*                                                                     *
*    PROCESSOR          =    N/A                                Y02669*
*                                                                     *
*    MODULE SIZE        =    X'3E6' + X'48' PATCH AREA          Y02669*
*                                                                     *
*    ATTRIBUTES         =    REFRESHABLE, REENTRANT,            Y02669*
*                            SUPERVISOR MODE, KEY 0,            Y02669*
*                            PAGED LPA                          Y02669*
*                                                                     *
         EJECT
*   ENTRY POINT         =    IEE5603D FROM (SEE MESSAGES)       Y02669*
*      PURPOSE          =    TO ISSUE ERROR MESSAGES FOR MSGRT  Y02669*
*                            AND K COMMANDS AND L=CCA OPERAND   Y02669*
*      LINKAGE=              BRANCH                             Y02669*
*      INPUT DATA       =    REGISTER 2 CONTAINS ADDRESS OF XSA Y02669*
*                            WHICH CONTAINS INFORMATION ABOUT   Y02669*
*                            THE MESSAGE THAT IS TO BE WRITTEN  Y02669*
*                              XAE - ONE BYTE MESSAGE CODE      Y02669*
*                              XASTSAVE - ONE BYTE SECONDARY    Y02669*
*                            MESSAGE CODE WHEN THE MESSAGE IS   Y02669*
*                            IN TWO PARTS. THE LAST THREE BYTES Y02669*
*                            (XASOPTR) CONTAIN AN ADDRESS TO AN Y02669*
*                            INVALID OPERAND IF IT IS TO BE     Y02669*
*                            INCLUDED IN THE MESSAGE.           Y02669*
*                              XAN - COMMAND VERB CODE          Y02669*
*                              XAR - ADDR OF COMMAND BUFFER     Y02669*
*                              XASSDS3-ON IF A TASK OTHER     @Y02668P*
*                                       THAN COMTASK ISSUED   @Y02668P*
*                                       THE COMMAND (JES3)    @Y02668P*
*                              XASSDS5 ON IF LOCKS HELD         Y02651*
*                                      OFF IF NOT               Y02651*
*                              XAU - SOURCE CONSOLE ID          Y02669*
*                              XAV - COMMAND VERB               Y02669*
*                                                                     *
*      REGISTERS SAVED  =    REGISTER 14 SAVED IN XAS           Y02669*
*                            (XASAVSTD + 16) AT BADCODE.        Y02669*
*                            REGISTERS 11 - 14 SAVED BEFORE     Y02651*
*                            ISSUING SETLOCK AT LOCKSOFF        Y02651*
*                            AND LOCKSTAT                       Y02651*
*                                                                     *
*      REGISTER CONTENTS                                        Y02669*
*      DURING PROCESSING=    R0  - WORK REG                     Y02669*
*                            R1  - WORK REG                     Y02669*
*                            R2  - BASE REG FOR XSA             Y02669*
*                            R3  - OUTPUT-POSITION IN BUFFER    Y02669*
*                            R4  - WORK REG                     Y02669*
*                            R5  - WORK REG                     Y02669*
*                            R6  - OUTPUT-CURRENT TEXT LENGTH   Y02669*
*                            R7  - BASE REG UCM ENTRY           Y02669*
*                            R8  - OUTPUT-BASE REG TRANS DCM    Y02669*
*                            R9  - BASE REG FOR UCM + RDCM      Y02669*
*                            R10 - BASE REG FOR CVT + TAB2      Y02669*
*                            R11 - POINTER TO INVALID OPERAND   Y02669*
*                            R12 - MODULE BASE REG              Y02669*
*                            R13 - ADDRESS OF MSG TABLE ENTRY   Y02669*
*                            R14 - RETURN REG                   Y02669*
*                            R15 - RETURN CODE + LINK REG       Y02669*
*                                                                     *
*      REGISTER RESTORED=    REGISTER 14 RESTORE FROM XASAVSTD  Y02669*
*                            + 16 BEFORE EXITING AT RETURNOK    Y02669*
*                            AND NOCORE                         Y02669*
*                            REGISTERS 11 - 14 RESTORED AFTER   Y02651*
*                            ISSUING SETLOCK AT LOCKSOFF AND    Y02651*
*                            LOCKSTAT                           Y02651*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXIT - NORMAL       =    RETURN VIA BR R14 FROM RETURNOK    Y02669*
*      CONDITIONS       =    MESSAGE TO GO TO CRT DEVICE        Y02669*
*      OUTPUT DATA      =    MESSAGE IN DCM  INSTRUCTION LINE   Y02669*
*                               DCMIOCM1 - DCMWRINS X'04'       Y02669*
*                            WITH CURSOR POSITIONING            Y02669*
*                               DCMINLGN - ZERO OR CURSOR       Y02669*
*                                          POSITION             Y02669*
*                            INVALID K COMMAND                  Y02669*
*                               DCMSVC34 + DCMINVLD (X'40)      Y02669*
*                            IF DEVICE 2250 OR HAS LIGHT PEN    Y02669*
*                               DCMIOUNQ = DCMW2250 (X'08')     Y02669*
*                            DCMIOUNQ SET TO DCMINERR X'02'     Y02669*
*                            INDICATING AN ERROR MESSAGE IN     Y02669*
*                            THE DCM INSTRUCTION LINE AND       Y02669*
*                            'ENTER CANCEL' ADDED TO MSG        Y02669*
*                            LOCKS RELEASED                     Y02651*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXITS - NORMAL      =    RETURN VIA BR R14 FROM             Y02669*
*                            ISSUEWTO->RETURNOK                 Y02669*
*      CONDITIONS       =    MESSAGE WRITTEN TO APPROPIATE      Y02669*
*                            CONSOLE VIA WTO AND MESSAGE        Y02669*
*                            BUFFER FREED VIA FREEMAIN          Y02669*
*      OUTPUT DATA      =    MESSAGE                            Y02669*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXIT - NORMAL       =    BRANCH TO IEE5903D FROM D5903D     Y02669*
*      CONDITIONS       =    WHEN THE MESSAGE HAS TWO PARTS     Y02669*
*                            (BIT 2 IS ON IN MESSAGE TEXT + 5)  Y02669*
*      OUTPUT DATA      =    REG 2 POINTS TO XSA WHICH CONTAINS Y02669*
*                                 INFO ABOUT THE MESSAGE        Y02669*
*                               XASTSAVE - ONE BYTE SECONDARY   Y02669*
*                                 MESSAGE CODE                  Y02669*
*                               XAU - SOURCE CONSOLE ID         Y02669*
*                               XASCID - TARGET CONSOLE ID      Y02669*
*                               XASDID - TARGET AREA ID (CRT)   Y02669*
*                               XASSDS1 - ON WTO BUFFER         Y02669*
*                               XASSDS5 - ON LOCKS HELD         Y02651*
*                               XASAVSTD+12 - WTO BUFFER ADDR   Y02669*
*                               XASAVSTD+16 - RETURN ADDRESS    Y02669*
*                            REG 3 - CURRENT POSITION IN        Y02669*
*                                    MESSAGE BUFFER             Y02669*
*                            REG 6 - CURRENT LENGTH OF VARIABLE Y02669*
*                                    TEXT                       Y02669*
*                            REG 8 - ADDRESS OF TRANSIANT DCM   Y02669*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXIT - ERROR        =    RETURN VIA BR R14 BADCODE->RETURN  Y02669*
*      CONDITIONS       =    BAD MESSAGE CODE PASSED IN XAE     Y02669*
*                            LOCKS RELEASED (IF HELD ON ENTRY)  Y02651*
*      OUTPUT DATA      =    NONE                               Y02669*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXIT - ERROR        =    BRANCH TO IEE0503D FROM NOCORE     Y02669*
*      CONDITIONS       =    BECAUSE GETMAIN FAILED FOR WTO     Y02669*
*                            BUFFER TO HAVE 'IEE328I COMMAND    Y02669*
*                            ABORTED' ISSUED                    Y02669*
*      OUTPUT DATA      =    ERROR CODE FOR MESSAGE IN XSA      Y02669*
*                            POINTED TO BY REG 2                Y02669*
*                              XAE CONTAINS X'3A' FOR IEE328I   Y02669*
*                              XASSDS5 - OFF LOCKS RELEASED     Y02651*
*                              LOCKS WERE RELEASED BEFORE THE   Y02651*
*                              GETMAIN                          Y02651*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXTERNAL REFERENCES                                         Y02669*
*                                                                     *
*      ROUTINES         =    BRANCHES TO IEE5903D  IEE0503D     Y02669*
*                                                                     *
*      DATA AREAS       =    NONE                               Y02669*
*                                                                     *
*      CONTROL BLOCKS   =    CVT  R - ADDRESS UCM               Y02669*
*                            UCM  R - ADDRESS UCME AND RDCM     Y02669*
*                        IEERDCM  R - ADDRESS OF IEETDCM        Y02669*
*                        IEETDCM  R - INDICATORS CHECKED        Y02669*
*                                 W - INDICATORS SET            Y02669*
*                            XSA  R - INPUT INFORMATION         Y02669*
*                                 W - WORK AREA                 Y02669*
*                        IHAPSA   NEEDED FOR SETLOCK            Y02651*
*                                                                     *
         EJECT
*        TABLES         =    THIS MODULE CONTAINS TWO MESSAGE   Y02669*
*                            TABLES. THE FIRST IN INDEXED BY    Y02669*
*                            TWICE THE MESSAGE CODE PASSED IN   Y02669*
*                            XAE. THE INDEXED HALF WORD THEN    Y02669*
*                            POINTS TO AN ELEMENT IN TAB2 WHICH Y02669*
*                            CONTAINS THE APPROPIATE MESSAGE.   Y02669*
*                                                                     *
*                            TAB2 CONTAINS A ONE BYTE LENGTH OF Y02669*
*                            THE PREFORMATTED MESSAGE TEXT -1,  Y02669*
*                            FOUR BYTES OF FILLER, ONE BYTE     Y02669*
*                            OF MESSAGE FLAGS:                  Y02669*
*                               X'80' - COMMAND VERB IN MSG     Y02669*
*                               X'40' - INVALID OPERAND IN MSG  Y02669*
*                               X'20' - IEE5903D CONTAINS REST  Y02669*
*                                       OF MESSAGE TEXT         Y02669*
*                               X'10' - OPERAND AT END OF MSG   Y02669*
*                            AND THE PREFORMATTED MESSAGE TEXT. Y02669*
*                                                                     *
*      MACROS           =    MODID                              Y02669*
*                            WTO                                Y02669*
*                            GETMAIN SUBPOOL 229                Y02669*
*                            FREEMAIN SUBPOOL 229               Y02669*
*                            SETLOCK - CMS AND LOCAL OBTAINED   Y02651*
*                                                  & RELEASED   Y02651*
*                                                                     *
*      ENQUEUE RESOURCES=    NONE                               Y02669*
*                                                                     *
*      CHANGE LEVEL     =    Y02669                             Y02669*
*                            Y02651                             Y02651*
*                            YM1914                             YM1914*
*                            Y02668                           @Y02668P*
*                                                                     *
*      LOCKS HELD       = FOR NON-DCM INSTRUCTION LINE MESSAGES:      *
*                            CMS AND LOCAL LOCKS OBTAINED IN    Y02651*
*                            IEE7503D ARE RELEASED AND XASSDS5  Y02651*
*                            IS TURNED OFF BEFORE ISSUING       Y02651*
*                            THE GETMAIN MACRO.                 Y02651*
*                        FOR DCM INSTRUCTION LINE MESSAGES:           *
*                            IF LOCKS NOT HELD ON ENTRY,        Y02651*
*                            (I.E. XASSDS5 IS OFF) THEY ARE     Y02651*
*                            OBTAINED AND XASSDS5 IS TURNED ON. Y02651*
*                            IF MESSAGE HAS 2 PARTS, CONTROL    Y02651*
*                            GOES TO IEE5903D WITH THE LOCKS    Y02651*
*                            HELD.                              Y02651*
*                                                                     *
         EJECT
*   MESSAGES            =    THE FOLLOWING MESSAGES ARE         Y02669*
*                            CONTAINED WITHIN THIS MODULE:      Y02669*
*                             * MEANS AN INVALID COMMAND VERB   Y02669*
*                               WILL APPEAR WITHIN THE MESSAGE  Y02669*
*                               (FOUND IN XAV)                  Y02669*
*                             & MEANS AN INVALID OPERAND WILL   Y02669*
*                               APPEAR WITHIN THE MESSAGE       Y02669*
*                               (POINTED TO BY XASOPTR)         Y02669*
*                             + MEANS A SECOND PART OF THE      Y02669*
*                               MESSAGE WILL BE FOUND IN        Y02669*
*                               IEE5903D.                       Y02669*
*                         XXXXD THE MODULE NAMES FOLLOWING      Y02669*
*                               EACH MESSAGE INDICATE THE       Y02669*
*                               MODULES IN WHICH THE ERRORS     Y02669*
*                               WERE DETECTED AND MESSAGES      Y02669*
*                               ISSUED.                         Y02669*
*                                                                     *
*                            IEE150I  CHANGE OPTIONS IF   X'02' Y02669*
*                                     DESIRED                   Y02669*
*                                     6903D,6403D               Y02669*
*                        +   IEE151I  DELETE REQUEST      X'03' Y02669*
*                                     INCONSISTENT              Y02669*
*                                     6703D                     Y02669*
*                        *&  IEE156I  INVALID OPERAND     X'04' Y02669*
*                                     6703D,7503D,6903D,6803D,  Y02669*
*                                     7703D,7803D,6403D,6303D   Y02669*
*                        +   IEE158I  K REQUEST           X'05' Y02669*
*                                     INCONSISTENT              Y02669*
*                                     6703D,6903D               Y02669*
*                        *   IEE345I  AUTHORITY INVALID   X'08' Y02669*
*                                     7503D,7703D,6303D         Y02669*
*                        *+& IEE921I  REJECTED            X'09' Y02669*
*                                     7503D,7703D               Y02669*
*                        +   IEE924I  INVALID AREA        X'0A' Y02669*
*                                     DEFINITION                Y02669*
*                                     6803D,6903D               Y02669*
*                        *+& IEE925I  OPERAND             X'0B' Y02669*
*                                     6703D,7503D,6403D,6303D   Y02669*
*                        +   IEE926I  L=CCA OPERAND       X'0C' Y02669*
*                                     INVALID                   Y02669*
*                                     6703D,7503D,6803D,7703D,  Y02669*
*                                     6403D,6303D               Y02669*
*                        *+  IEE927I  REQUEST AMBIGUOUS   X'0D' Y02669*
*                                     6703D,7503D,7803D         Y02669*
*                        *&  IEE931I  INSUFFICIENT        X'0E' Y02669*
*                                     STORAGE FOR COMMAND       Y02669*
*                                     6903D,6803D,6403D,6303D   Y02669*
*                                                                     *
*   SYSGEN              =    INCLUDED WITH SVC 34 IN LOAD       Y02669*
*                            MODULE IGC0003D, DLIB AOSB3,       Y02669*
*                            MACRO SGIEF441, TARLIB LPALIB.     Y02669*
*                                                                     *
*   SYSTEM                                                      Y02669*
*    LIBRARIES          =    NONE                               Y02669*
*                                                                     *
***********************************************************************
         EJECT
IEE5603D CSECT
***********************************************************************
*                                                                     *
*                          REGISTERS                                  *
*                                                                     *
***********************************************************************
WRK0     EQU   0                   WORK REG MUST BE 0 AT MOVECDR Y02669
WRK1     EQU   1                   WORK REGISTER
XSAR2    EQU   2                   INPUT/OUTPUT-XSA BASE REG     Y02669
WRK3     EQU   3                   OUTPUT-POSITION IN MSG BUFFER Y02669
WRK4     EQU   4                   WORK REGISTER
WRK5     EQU   5                   WORK REGISTER                 Y02669
WRK6     EQU   6                   OUTPUT-CURRENT TEXT LENGTH    Y02669
UCMER7   EQU   7                   BASE REG FOR UCM ENTRY        Y02669
TDCMR8   EQU   8                   OUTPUT-BASE REG FOR TRANS DCM Y02669
WRK9     EQU   9                   BASE REG FOR UCM + RDCM       Y02669
WRK10    EQU   10                  BASE REG FOR CVT + TAB2       Y02669
BADOP11  EQU   11                  POINTER TO INVALID OPERAND    Y02669
BASE12   EQU   12                  MODULE BASE REGISTER          Y02669
WRK13    EQU   13                  ADDRESSES MESSAGE TABLE ENTRY Y02669
RETURN14 EQU   14                  RETURN REGISTER               Y02669
R15      EQU   15                  RETURN CODE + LINK REGISTER   Y02669
         EJECT
***********************************************************************
*                                                                     *
*                        NUMERIC  CONSTANTS                           *
*                                                                     *
***********************************************************************
N0       EQU   0                   NUMBER CONSTANT
N1       EQU   1                   NUMBER CONSTANT
N2       EQU   2                   NUMBER CONSTANT
N3       EQU   3                   NUMBER CONSTANT
N4       EQU   4                   NUMBER CONSTANT
N5       EQU   5                   NUMBER CONSTANT
N6       EQU   6                   NUMBER CONSTANT
N7       EQU   7                   NUMBER CONSTANT
N8       EQU   8                   NUMBER CONSTANT
N9       EQU   9                   NUMBER CONSTANT
N10      EQU   10                  NUMBER CONSTANT
N12      EQU   12                  NUMBER CONSTANT               Y02669
N15      EQU   15                  NUMBER CONSTANT
N16      EQU   16                  NUMBER CONSTANT               Y02669
N25      EQU   25                  NUMBER CONSTANT
N59      EQU   59                  NUMBER CONSTANT
N60      EQU   60                  NUMBER CONSTANT
N64      EQU   64                  NUMBER CONSTANT
***********************************************************************
*                                                                     *
*                        CHARACTER CONSTANTS                          *
*                                                                     *
***********************************************************************
BLANK    EQU   X'40'               BLANK CONSTANT                Y02669
COMMA    EQU   C','                COMMA CHARACTER
PARA2    EQU   C')'                PARENTHSIS CONSTANT
***********************************************************************
*                                                                     *
*                           FLAGS                                     *
*                                                                     *
***********************************************************************
CMDFLAG  EQU   X'80'               COMMAND FLAG IN MSG TABLE     Y02669
OPFLAG   EQU   X'40'               OPERAND FLAG IN MSG TABLE     Y02669
VTXTFLAG EQU   X'20'               VARIABLE TEXT FLAG IN TABLE
OPENDFLG EQU   X'10'               OPERAND AT MSG END FLAG       Y02669
MCSFG    EQU   X'E0'               MCS FLAGS FOR WTO
CODE2HI  EQU   14                  HIGHEST VALID MESSAGE CODE    Y02669
CODE2LO  EQU   2                   LOWEST VALID MESSAGE CODE     Y02669
TOOLOW   EQU   4                   CONDITION CODE - LOWER THAN   Y02669
TOOHIGH  EQU   2                   CONDITION CODE - HIGHER THAN  Y02669
XFF      EQU   X'FF'               MASK TO TURN OFF FLAGS        Y02669
KCMD     EQU   X'90'               CODE IN XSA FOR K COMMAND     Y02669
MRCMD    EQU   X'94'               CODE IN XSA FOR MSGRT COMMAND YM1914
SP229    EQU   229                 SUBPOOL NUMBER FOR GETMAIN    Y02669
IEE150I  EQU   X'02'               MSG CODE - CHANGE OPTION MSG  Y02669
MSG328   EQU   X'3A'               MSG CODE-IEE328I CMD ABORTED  Y02669
         EJECT
***********************************************************************
*                                                                     *
*          ESTABLISH ADDRESSABILITY TO MODULE, XSA, UCM, UCME         *
*                                                                     *
***********************************************************************
         SPACE 2
         BALR   BASE12,N0          LOAD BASE REG                 Y02669
         USING *,BASE12                                          Y02669
         MODID BRANCH=YES                                        Y01886
         USING DXSA,XSAR2           ADDRESSIBILITY OF XSA        Y02669
         L     WRK10,CVTPTR         ADDRESS OF CVT               Y02669
         USING DCVT,WRK10           ADDRESSIBILITY OF CVT        Y02669
         L     WRK9,CVTCUCB         ADDRESS OF UCM FROM CVT      Y02669
         USING UCM,WRK9             ADDRESSIBILITY OF UCM        Y02669
         DROP  WRK10                                             Y02669
         USING UCMLIST,UCMER7       ADDRESSIBILITY OF UCM ENTRY  Y02669
         SPACE
***********************************************************************
*                                                                     *
*             CHECK FOR INCORRECT MESSAGE CODE                        *
*       IF TOO HIGH OR TOO LOW FREE LOCKS, IF HELD, AND RETURN        *
*                                                                     *
***********************************************************************
         SPACE 2
BADCODE  EQU   *                                                 Y02669
         ST    RETURN14,XASAVSTD+N16   SAVE RETURN ADDRESS       Y02669
         CLI   XAE,CODE2HI         IS MSG CODE HIGHER THAN MAX?  Y02669
         BC    TOOHIGH,RETURN      YES, CHECK LOCKS AND RETURN   Y02651
         SPACE
         CLI   XAE,CODE2LO         IS MSG CODE LOWER THAN MIN?   Y02669
         BC    TOOLOW,RETURN       YES, CHECK LOCKS AND RETURN   Y02651
         EJECT
***********************************************************************
*                                                                     *
*  TAKE THE SOURCE CONSOLE ID IN REG 1 AND CALCULATE THE ADDRESS Y02669
*   OF THE UCM ENTRY FOR THAT CONSOLE AND PLACE IT IN REG UCMER7 Y02669
*                                                                     *
***********************************************************************
         SPACE 3
         SR    WRK1,WRK1           CLEAR REG
         IC    WRK1,XAU            GET SOURCE CONSOLE ID
         LTR   WRK1,WRK1           IF CONSOLE ID = 0 THEN        YM1557
         BZ    BUILDWTO            COMMAND ISSUED INTERNALLY     YM1557
         BCTR  WRK1,N0             SUBTRACT ONE FROM CONSOLE ID
         L     UCMER7,UCMVEA       FIRST UCM ENTRY FROM UCM      Y02669
         M     WRK0,UCMVEZ         MULTIPLY ENTRY SIZE BY REDUCED ID
         DROP  WRK9                                              Y02669
         AR    UCMER7,WRK1         ADDRESS OF DESIRED UCM ENTRY  Y02669
***********************************************************************
*                                                                     *
*    DETERMINE WHETHER THE MESSAGE GOES IN DCM INSTRUCTION LINE       *
*          1 FOR MESSAGES WHICH ALSO INCLUDE 'IEE150I CHANGE          *
*           OPTIONS' FOR CRT DEVICES                                  *
*          2 FOR ALL MESSAGES PERTAINING TO K AND MR COMMAND FOR CRT  *
*    OR WTO BUFFER                                                    *
*          1 FOR NON-CRT DEVICES OR                                   *
*          2 FOR ALL OTHER MESSAGES TO CRT DEVICES                    *
*                                                                     *
***********************************************************************
         TM    UCMDISP,UCMDISPC    IS THIS CONSOLE A CRT?
         BZ    BUILDWTO            NO, GO ISSUE WTO              Y02669
         TM    XASSDS,XASSDS3      IS TASK COMTASK?            @Y02668P
         BO    BUILDWTO            NO,BRANCH A TASK OTHER THAN @Y02668P
*                                  COMTASK ISSUED THE COMMAND  @Y02668P
         SPACE
         CLI   XAN,KCMD            IS THIS A CONTROL (K) COMMAND?Y20669
         BE    LOCKSTAT            YES, PUT MSG IN DCM INSTRUCTION LINE
         SPACE
         CLI   XAN,MRCMD           IS THIS A MSGRT COMMAND?      YM1914
         BE    LOCKSTAT            YES, PUT MSG IN INSTR LINE    YM1914
         SPACE
         CLI   XAE,IEE150I         IS THIS CHANGE OPTIONS MSG?   Y02669
         BNE   BUILDWTO            NO, ISSUE WTO                 Y02669
         EJECT
***********************************************************************
* CMS AND LOCAL LOCKS IF NOT ALREADY HELD MUST BE OBTAINED FOR DCM    *
***********************************************************************
LOCKSTAT EQU   *                                                 Y02651
         TM    XASSDS,XASSDS5      ARE LOCKS STILL ON?           Y02651
         BO    LOCKSON             YES,NO NEED TO TURN LOCKS ON  Y02651
         STM   BADOP11,RETURN14,XASAVLOC SAVE REGS FOR SETLOCK   Y02651
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(TR,PT,K,RETURN,IEE5903D(LOCKSOFF))
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          *
               RELATED=(TR,PT,K,RETURN,IEE5903D(LOCKSOFF))
         LM    BADOP11,RETURN14,XASAVLOC  RESTORE AFTER SETLOCK  Y02651
         OI    XASSDS,XASSDS5      INDICATE LOCKS ON             Y02651
         SPACE 2
LOCKSON  EQU   *                                                 Y02651
         L     WRK9,UCMXB          ADDRESS OF RESIDENT DCM       Y02669
         USING DCMTSRT,WRK9                                      Y02669
         L     TDCMR8,DCMADTRN     ADDRESS OF TRANSIENT DCM      Y02669
         USING DCMSTRT,TDCMR8                                    Y02669
         DROP  WRK9                                              Y02669
         EJECT
***********************************************************************
*                                                                     *
*     CONTROL (K), MR OR IEE150I CHANGE OPTIONS MESSAGE FOR CRT  YM1914
*     WRK4 POINTS TO THE XSA OPERAND BUFFER FOR THE K OR MR      Y02669
*                 COMMANDS OR THE DCM ENTRY AREA FOR IEE150I     Y02669
*                                                                     *
***********************************************************************
         SPACE 3
MOVEDCM  EQU   *
         L     WRK4,XAR            ADDRESS OF COMMAND BUFFER
         LA    WRK4,N4(WRK4)       INCREMENT TO COMMAND IN BUFFER
         CLI   XAE,IEE150I         IS THIS A IEE150I MESSAGE     Y02669
         BNE   MOVEOPT             NO, K COMMAND
         SPACE
         L     WRK4,DCMAENTR       YES, ADDRESS OF DCM ENTRY AREA
MOVEOPT  EQU   *
         SR    BADOP11,BADOP11     NECESSARY FOR ICM             Y02669
         ICM   BADOP11,N7,XASOPTR  GET CURSOR POSITION           Y02669
*                                  OR INVALID OPERAND POINTER    Y02669
*                                  OK IF ZERO                    Y02669
         SR    BADOP11,WRK4        DISTANCE TO INVALID OPERAND   Y02669
         STH   BADOP11,DCMINLGN    SET CURSOR POSITIONING        Y02669
         OI    DCMSVC34,DCMINVLD   SET INVALID K COMMAND BIT
         CLI   XAE,IEE150I         IS THIS A IEE150I MESSAGE   @YM1919P
         BE    NOSOUND             YES,NO ALARM                @YM1919P
         OI    DCMIOCM1,DCMSOUND   NO,SOUND THE ALARM          @YM1919P
NOSOUND  EQU   *                                               @YM1919P
         L     WRK3,DCMAINS        ADDRESS OF INSTRUCTION LINE OF DCM
         LH    WRK4,DCMLGNTH       GET THE LENGTH OF A LINE FROM DCM
         B     BUILDL              GO BUILD MESSAGE              Y02669
*                                  WRK3 ADDRESSES DCM INSTRUCTIONY02669
*      ON EXIT FROM HERE           LINE                          Y02669
*                                  WRK4 CONTAINS LENGTH OF LINE  Y02669
         EJECT
***********************************************************************
*                                                                     *
*            GET CORE FOR A MESSAGE THAT IS A WTO                Y02669
*        FOR A NON-CRT OR AN ORDINARY MESSAGE FOR A CRT          Y02669
*        REG 3 - WILL BE THE CURRENT POSITION IN BUFFER PAST MCS Y02669
*        REG 4 - WILL BE THE LENGTH OF THE BUFFER (60)           Y02669
*                                                                     *
***********************************************************************
         SPACE 3
BUILDWTO EQU   *
         TM    XASSDS,XASSDS5      ARE LOCKS STILL SET?          Y02651
         BZ    NOLOCKON            NO,NO NEED TO TURN LOCKS OFF  Y02651
         BAL   R15,LOCKSOFF        YES,GO RELEASE LOCKS          Y02651
NOLOCKON EQU   *                                                 Y02651
         LA    WRK1,XASAVSTD+N12   AREA FOR STORAGE ADDRESS      Y02669
         MVC   XASAVSTD(N10),GETAREA    MOVE PARM LIST TO XSA    Y02669
         ST    WRK1,XASAVSTD+N4    WHERE GETMAIN TO STORE ADDR   Y02669
         LA    WRK1,XASAVSTD       ADDR OF PARM LIST FOR GETMAIN Y02669
         GETMAIN MF=(E,(1))        GET CORE FOR WTO
         LTR   R15,R15             WAS GETMAIN SUCESSFUL?        Y02669
         BC    N7,NOCORE           NO, IEE328I CMD ABORTED(0503D)Y02669
         SPACE
         L     WRK3,XASAVSTD+N12   YES,GOTTEN CORE'S ADDRESS     Y02669
         XC    N0(N4,WRK3),N0(WRK3) ZERO FOUR BYTES
         OI    XASSDS,XASSDS1      SET WTO INDICATOR ON          Y02669
         OI    N2(WRK3),MCSFG      SET MCS FLAGS FOR WTO ON
         LA    WRK3,N4(WRK3)       INCREMENT BUFFER ADDRESS PAST MCS
         LA    WRK4,N60            LENGTH OF MSG BUFFER NOW 60
         EJECT
***********************************************************************
*                                                                     *
*           BLANK OUT THE BUFFER AREA FOR THE MESSAGE                 *
*    ON ENTRY:                                                   Y02669
*     WRK4 CONTAINS LENGTH OF DCM INSTRUCTION LINE               Y02669
*                OR REMAINING LENGTH OF WTO BUFFER, NOW 60       Y02669
*     WRK3 CONTAINS ADDRESS OF DCM INSTRUCTION LINE              Y02669
*                OR WTO BUFFER                                   Y02669
*    ON EXIT - WRK4 IS DESTROYED                                 Y02669
*                                                                     *
***********************************************************************
         SPACE 2
BUILDL   EQU   *
         BCTR  WRK4,N0             DECREMENT THE LENGTH OF THE BUFFER
         BCTR  WRK4,N0             AREA BY TWO
         MVI   N0(WRK3),BLANK      BLANK FIRST CHARACTER         Y02669
         EX    WRK4,BLANKOUT       PROPAGATE BLANKS              Y02669
***********************************************************************
*                                                                     *
*                GET MESSAGE TEXT ENTRY IN TABLE                      *
*                                                                     *
***********************************************************************
         SR    WRK4,WRK4           CLEAR REG
         IC    WRK4,XAE            ERROR CODE FROM XSA
         AR    WRK4,WRK4           DOUBLE CODE FOR INDEX
         LA    WRK13,TAB1(WRK4)    PT TO APPROPRIATE TAB1 ENTRY  Y02669
         LH    WRK13,N0(WRK13)     LOAD TABLE ELEMENT            Y02669
         LA    WRK10,TAB2(WRK13)   PT TO APPROPRIATE TAB2 ENTRY  Y02669
         EJECT
***********************************************************************
*                                                                     *
*         BUILD MESSAGE IN DCM INSTRUCTION LINE OR WTO BUFFER         *
*           WRK3 STILL POINTS TO BEGINNING OF WTO BUFFER OR DCM LINE  *
*                                                                     *
***********************************************************************
         SPACE 2
         MVC   N0(N3,WRK3),MSGID   MOVE IN IEE                   Y02669
         MVC   N3(N4,WRK3),N1(WRK10) FILL IN MSG ID              Y02669
         TM    N5(WRK10),CMDFLAG   DOES MSG REQUIRE CMND VERB?   Y02669
         BZ    OPDTEST             NO                            Y02669
         SPACE 2
***********************************************************************
*                                                                     *
*               MOVE COMMAND VERB INTO MESSAGE BUFFER            Y02669
*   AT THIS POINT REG 0 CONTAINS ZERO ( FROM M INSTRUCTION)      Y02669
*                                                                     *
***********************************************************************
         SPACE 2
MOVECDR  EQU   *
         MVC   N8(N8,WRK3),XAV     MOVE IN VERB FROM XSA
         LA    WRK3,N9(WRK3)       INCREMENT MSG PTR AROUND VERB
         LA    WRK0,N9             INCREMENT VARIABLE TEXT COUNT
OPDTEST  EQU   *
         TM    N5(WRK10),OPFLAG    DOES MSG REQUIRE OPERAND?     Y02669
         BZ    MOVETXT             NO                            Y02669
         EJECT
***********************************************************************
*                                                                     *
*        MOVE INVALID OPERAND INTO MESSAGE BUFFER                Y02669
*        WRK0 - LENGTH OF VARIABLE TEXT SO FAR (0 OR 9)          Y02669
*        WRK3 - POSITION IN MESSAGE BUFFER                       Y02669
*        WRK4 - LENGTH OF INVALID OPERAND                        Y02669
*        BADOP11 - ADDRESS OF INVALID OPERAND                    Y02669
*                                                                     *
***********************************************************************
         SPACE 2
MOVEOPD  EQU   *
         SR    WRK4,WRK4           CLEAR FOR ICM INSTRUCTION     Y02669
         ICM   WRK4,N7,XASOPTR     ADDRESS OF INVALID OPERAND    Y02669
         BZ    MOVETXT             IF ZERO NO OPERAND            Y02669
         LR    BADOP11,WRK4        ADDRESS OF INVALID OPERAND    Y02669
         LA    WRK5,N8             MAXIMUM OPERAND LENGTH        Y02669
INCROP   EQU   *
         LA    WRK4,N1(WRK4)       INCREMENT OPERAND ADDR BY ONE
         CLI   N0(WRK4),BLANK      IS THIS END OF THE OPERAND?   Y02669
         BE    GETLEN              YES
         CLI   N0(WRK4),COMMA      IS THIS A COMMA?
         BE    GETLEN              YES
         CLI   N0(WRK4),PARA2      IS THIS A PARENTHSIS?
         BE    GETLEN              YES
         BCT   WRK5,INCROP         DECREMENT AND TEST NEXT CHAR  Y02669
GETLEN   EQU   *
         SR    WRK4,BADOP11        LENGTH OF INVALID OPERAND     Y02669
         BCTR  WRK4,N0             DECREMENT FOR EXECUTE
         TM    N5(WRK10),OPENDFLG  IS OPERAND AT END OF MSG?     Y02669
         BZ    OPNOTEND            NO                            Y02669
         EX    WRK4,OPATEND        PUT BAD OPERAND AT END OF MSG Y02669
         LA    WRK4,N1(WRK4)       LENGTH OF INVALID OPERAND     Y02669
         B     CONTOP              CONTINUE TO BUILD MSG         Y02669
OPNOTEND EQU   *                                                 Y02669
         EX    WRK4,MOVEINOP       PUT BAD OPERAND IN MSG TEXT   Y02669
         LA    WRK4,N2(WRK4)       LENGTH OF OPERAND + BLANK     Y02669
         AR    WRK3,WRK4           INCREMENT DCM PTR AROUND VERB Y02669
CONTOP   EQU   *
         AR    WRK0,WRK4           INCREMENT VARIABLE TEXT COUNT
         EJECT
***********************************************************************
*                                                                     *
*         MOVE FIXED TEXT FROM TABLE TWO INTO MESSAGE BUFFER          *
*         WRK3 - POSITION IN MESSAGE BUFFER                           *
*         WRK6 - TOTAL LENGTH OF VARIABLE TEXT                        *
*                                                                     *
***********************************************************************
         SPACE 2
MOVETXT  EQU   *
         SR    WRK6,WRK6           CLEAR REG
         IC    WRK6,N0(WRK10)      GET FIXED MSG TEXT LENGTH - 1 Y02669
         EX    WRK6,FILLTEXT       MOVE IN FIXED TEXT            Y02669
         LA    WRK6,N9(WRK6)       LENGTH OF ID,+ BLANK,+ 1
         AR    WRK3,WRK6           UPDATE BUFFER POINTER TO INCLUDE TXT
         AR    WRK6,WRK0           LENGTH OF VERB AND OPERAND OR ZERO
         TM    N5(WRK10),VTXTFLAG  DOES MSG HAVE MORE TEXT?      Y02669
         BO    D5903D              YES, EXIT TO IEE5903D         Y02669
         SPACE
         TM    XASSDS,XASSDS1      IS THIS A WTO?                Y02669
         BO    ISSUEWTO            YES
         SPACE
***********************************************************************
*       THE MESSAGE WAS PUT IN DCM INSTRUCTION LINE              Y02669
***********************************************************************
         OI    DCMIOCM1,DCMWRINS   SET BIT TO WRITE INST LINE
         TM    DCMIOUNQ,DCMW2250   DOES DEVICE HAVE A LIGHT PEN?
         BZ    RETURN              NO                            Y02669
         SPACE
         L     WRK3,DCMAINS        POINT TO INSTRUCTION LINE IN DCM
         MVC   N59(N15,WRK3),ENCANCEL  MOVE ENTER-CANCEL MSG INTO LINE
         NI    DCMIOUNQ,XFF-DCMINNOR TURN OFF NORMAL LINE BIT    Y02669
         OI    DCMIOUNQ,DCMINERR   INDICATE ERROR MSG IN INST LINE
         SPACE 2
RETURN   EQU   *
         TM    XASSDS,XASSDS5      ARE LOCKS STILL SET?          Y02651
         BZ    RETURNOK            NO,NO NEED TO TURN LOCKS OFF  Y02651
         BAL   R15,LOCKSOFF        GO RELEASE LOCKS              Y02669
RETURNOK EQU   *                                                 Y02651
         L     RETURN14,XASAVSTD+N16   RESTORE RETURN ADDRESS    Y02669
         BR    RETURN14            RETURN TO CALLER              Y02669
         EJECT
***********************************************************************
*                                                                     *
*         PREPARE TO WRITE MESSAGE VIA WTO AND FREE CORE         Y02669
*                                                                     *
***********************************************************************
         SPACE 2
ISSUEWTO EQU   *
         L     WRK1,XASAVSTD+N12   ADDRESS OF WTO BUFFER         Y02669
         LA    WRK6,N4(WRK6)       4 EXTRA BYTES FOR WTO (MCS + LEN)
         STH   WRK6,N0(WRK1)       PUT LENGTH OF TEXT + 4 IN BUFFER
         AR    WRK6,WRK1           CALCULATE END OF BUFFER
         MVC   N0(N4,WRK6),DRCODES MOVE IN DESC AND ROUTE CODES
         SR    WRK0,WRK0           CLEAR REG
         IC    WRK0,XAU            SOURCE CONSOLE ID FROM XSA
         WTO   MF=(E,(1))          WRITE MESSAGE
         SPACE
         L     WRK1,XASAVSTD+N12   ADDRESS OF AREA FOR FREEMAIN  Y02669
         FREEMAIN R,LV=N64,A=(1),SP=SP229                        Y02669
         B     RETURNOK            RETURN TO CALLER              Y02669
         EJECT
***********************************************************************
*                                                                     *
*         EXIT TO IEE5903D WITH THE FOLLOWING OUTPUT:            Y02669
*         XSAR2 - BASE REGISTER FOR XSA                          Y02669
*                 XASAVSTD + 12 BEGINNING ADDRESS OF WTO BUFFER  Y02669
*         XASAVSTD + 16 - RETURN ADDRESS
*         WRK3 - CURRENT POSITION IN MESSAGE BUFFER              Y02669
*         WRK6 - TOTAL LENGTH OF VARIABLE TEXT                   Y02669
*         TDCMR8 - BASE REGISTER FOR TRANSIANT DCM               Y02669
*                                                                     *
***********************************************************************
         SPACE 2
D5903D   EQU   *                                                 Y02669
         L     R15,VCON5903        GET ADDRESS OF SECOND LOAD    Y02669
         BR    R15                 GO TO IEE5903D                Y02669
         SPACE  2
***********************************************************************
*                                                                     *
*                        EXIT TO IEE0503D                        Y02669
*           LOCKS WERE RELEASED BEFORE ATTEMPTING THE GETMAIN    Y02651
*                                                                     *
***********************************************************************
         SPACE 2
NOCORE   EQU   *                                                 Y02669
         L     RETURN14,XASAVSTD+N16 RESTORE RETURN ADDRESS      Y02669
         MVI   XAE,MSG328          MSG CODE -IEE328I CMD ABORTED Y02669
         L     R15,VCON0503        GO TO IEE0503D TO ISSUE MSG   Y02669
         BR    R15                                               Y02669
         EJECT
***********************************************************************
*             CMS AND LOCAL LOCKS MUST BE RELEASED BEFORE        Y02651
*                 ISSUING SVC'S AND RETURNING                    Y02651
***********************************************************************
         SPACE 2
LOCKSOFF EQU   *                                                 Y02651
         STM   BADOP11,RETURN14,XASAVLOC SAVE REGS FOR SETLOCK   Y02651
         SETLOCK RELEASE,TYPE=CMS,                                     *
               RELATED=(TR,PT,K,IEE7503D(LOCKSET))
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(TR,PT,K,IEE7503D(LOCKSET))
         LM    BADOP11,RETURN14,XASAVLOC    RESTORE REGS         Y02651
         NI    XASSDS,XFF-XASSDS5  INDICATE LOCKS OFF            Y02651
         BR    R15
         EJECT
***********************************************************************
*                   EXECUTE INSTRCUTIONS                         Y02669
***********************************************************************
         SPACE 2
OPATEND  MVC   N25(N0,WRK3),N0(BADOP11) PUT OPERAND AT MSG END   Y02669
BLANKOUT MVC   N1(N0,WRK3),N0(WRK3)  USED TO BLANK MESSAGE BUFFERY02669
MOVEINOP MVC   N8(N0,WRK3),N0(BADOP11)  PUT OPERAND INTO MSG     Y02669
FILLTEXT MVC   N8(N0,WRK3),N6(WRK10)  MOVE FIX TEXT INTO BUFFER  Y02669
         SPACE 2
***********************************************************************
*                   GETMAIN LIST FORM                            Y02669
***********************************************************************
GETAREA  GETMAIN EC,LV=N64,A=NOCORE,SP=SP229,MF=L                Y02669
         EJECT
***********************************************************************
*                                                                     *
*  THE FOLLOWING TABLE IS INDEXED BY TWICE THE MESSAGE CODE IN   Y02669
*  XASTSAVE. EACH HALF-WORD CONTAINS AN INDEX TO THE TAB2        Y02669
*  ELEMENT CONTAINING THE APPROPRIATE MESSAGE TEXT               Y02669
*                                                                     *
***********************************************************************
PREMSG   EQU   6                   BYTES BEFORE MESSAGE TEXT
TAB1     EQU   *
         DC    AL2(0)
         DC    X'FFFF'             OBSOLETE MESSAGE              Y02669
         DC    Y(TM02-TAB2-PREMSG)
         DC    Y(TM03-TAB2-PREMSG)
         DC    Y(TM04-TAB2-PREMSG)
         DC    Y(TM05-TAB2-PREMSG)
         DC    X'FFFF'             OBSOLETE MESSAGE              Y02669
         DC    X'FFFF'             OBSOLETE MESSAGE              Y02669
         DC    Y(TM08-TAB2-PREMSG)
         DC    Y(TM09-TAB2-PREMSG)
         DC    Y(TM10-TAB2-PREMSG)
         DC    Y(TM11-TAB2-PREMSG)
         DC    Y(TM12-TAB2-PREMSG)
         DC    Y(TM13-TAB2-PREMSG)
         DC    Y(TM14-TAB2-PREMSG)
         EJECT
***********************************************************************
*                                                                     *
*  EACH ENTRY IN THE FOLLOWING TABLE CONTAINS:                   Y02669
*      A 1-BYTE LENGTH OF THE PREFORMATTED MESSAGE TEXT - 1      Y02669
*        4-BYTE ID FILLER                                        Y02669
*        1-BYTE MESSAGE FLAGS                                    Y02669
*               X'80' - MESSAGE REQUIRES COMMAND VERB FROM XAV   Y02669
*               X'40' - MESSAGE REQUIRES INVALID OPERAND FROM XASOPTR *
*               X'20' - MESSAGE REQUIRES ADDITIONAL TEXT FROM IEE5903D*
*               X'10' - INVALID OPERAND BELONGS AT END OF MESSAGE TEXT*
*        PREFROMATTED MESSAGE TEXT                               Y02669
*                                                                     *
***********************************************************************
TAB2     EQU   *
         DC    AL1(L'TM02-1)               LENGTH OF FIXED MSG TEXT
         DC    C'150I'                     MESSAGE ID FILLER
         DC    X'00'                       MESSAGE TYPE FLAG
TM02     DC    C'CHANGE OPTIONS IF DESIRED'  FIXED MSG TEXT
*
         DC    AL1(L'TM03-1)
         DC    C'151I'
         DC    X'20'
TM03     DC    C'DELETE REQUEST INCONSISTENT-'
*
         DC    AL1(L'TM04-1)
         DC    C'156I'
         DC    X'D0'
TM04     DC    C'INVALID OPERAND -'
*
         DC    AL1(L'TM05-1)
         DC    C'158I'
         DC    X'20'
TM05     DC    C'K REQUEST INCONSISTENT-'
*
         DC    AL1(L'TM08-1)
         DC    C'345I'
         DC    X'80'
TM08     DC    C'AUTHORITY INVALID'
*
         DC    AL1(L'TM09-1)
         DC    C'921I'
         DC    X'E0'
TM09     DC    C'REJECTED '
*
         DC    AL1(L'TM10-1)
         DC    C'924I'
         DC    X'20'
TM10     DC    C'INVALID AREA DEFINITION '
*
         DC    AL1(L'TM11-1)
         DC    C'925I'
         DC    X'E0'
TM11     DC    C'OPERAND '
*
         DC    AL1(L'TM12-1)
         DC    C'926I'
         DC    X'20'
TM12     DC    C'L=CCA OPERAND INVALID-'
*
         DC    AL1(L'TM13-1)
         DC    C'927I'
         DC    X'A0'
TM13     DC    C'REQUEST AMBIGUOUS-'
*
         DC    AL1(L'TM14-1)
         DC    C'931I'
         DC    X'C0'
TM14     DC    C'INSUFFICIENT STORAGE FOR COMMAND'
*
         EJECT
***********************************************************************
*                                                                     *
*                             CONSTANTS                               *
*                                                                     *
***********************************************************************
         SPACE
VCON5903 DC    V(IEE5903D)         SECOND LOAD OF MSG MODULE     Y02669
VCON0503 DC    V(IEE0503D)         MESSAGE MODULE TO ISSUE '328I'Y02669
ENCANCEL DC    C'*ENTER**CANCEL*'  ADDED FOR CRT WITH CURSOR     Y02669
MSGID    DC    C'IEE'              MESSAGE ID                    Y02669
DRCODES  DC    X'0800'             DESCRIPTOR CODE
         DC    X'0000'             ROUTING CODE
         SPACE 5
***********************************************************************
*                                                                     *
*                             PATCH AREA                              *
*                                                                     *
***********************************************************************
         SPACE 2
PATCH    DC    C'****PATCH AREA****'
PATCH2   DC    C'IEE5603D-TEST ONLY'
PATCH3   DC    36C' '
         EJECT
         IEETDCM                                                 Y01012
         EJECT
         IEERDCM
         EJECT
         IEECUCM  FORMAT=NEW
         EJECT
DXSA     DSECT
         IEEXSA
         EJECT
DCVT     DSECT
         CVT
         EJECT
         IHAPSA
         END
