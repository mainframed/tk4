         TITLE 'IEE6903D SVC 34 K A COMMAND LOAD 5'
***********************************************************************
*                                                                     *
* MODULE NAME         =  IEE6903D                               Y02669*
*                                                                     *
* DESCRIPTIVE NAME    =  CONTROL (K) A AND T COMMAND HANDLER    Y02669*
*                                                                     *
* COPYRIGHT           =  N/A                                    Y02669*
*                                                                     *
* STATUS              =  01 - UPDATE FOR VS/2 RELEASE 3 PTF   @ZA07770*
*                                                                     *
* FUNCTION            =  HANDLES THE                            Y02669*
*                             K A            K T                Y02669*
*                             K A,REF        K A,REF            Y02669*
*                             K A,NONE       K T,UTME           Y02669*
*                        COMMANDS WHICH CAN BE HANDLED WITH-    Y02669*
*                        OUT REFERENCE TO THE TRANSIENT DCM.    Y02669*
*                        (I.E. NO DIRECT INTERFACE IS           Y02669*
*                              REQUIRED WITH DIDOCS)            Y02669*
*                                                                     *
*   OPERATION         =  THE COMMAND IS VALIDITY CHECKED.       Y02669*
*                        IF AN INVALID OPERAND IS FOUND,        Y02669*
*                        'IEE156I INVALID OPERAND' IS ISSUED.   Y02669*
*                                                                     *
*                        IF (JES3) A TASK OTHER THAN COMTASK  @Y02668P*
*                        ISSUED THE COMMAND THEN THE MESSAGE  @Y02668P*
*                        IS ISSUED VIA WTO. THE XASSDS3 BIT   @Y02668P*
*                        IN THE XSA IS CHECKED. IF IT IS ON   @Y02668P*
*                        THEN A JES3 ASSOCIATED CONSOLE       @Y02668P*
*                        ISSUED THE COMMAND                   @Y02668P*
*                                                                     *
*                        K A; K A,REF                           Y02669*
*                        ___  _______                           Y02669*
*                        IF NOT A GRAPHICS CONSOLE, MESSAGES    Y02669*
*                        'IEE929I' AND 'IEE928I' ARE ISSUED     Y02669*
*                        VIA THE WTO MACRO. THE LOCKS ARE       Y02669*
*                        RELEASED PRIOR TO THE WTO, FREEMAIN    Y02669*
*                        AND CONTROL IS RETURNED.               Y02669*
*                                                                     *
*                        IF THE CONSOLE IS CRT, THE MESSAGE     Y02669*
*                        TEXT IS MOVED INTO THE DCM INSTRUCTION Y02669*
*                        LINE, THE OPTIONS INDICATOR FOR        Y02669*
*                        MESSAGE 'IEE150I' IS SET IN THE XSA    Y02669*
*                        AND CONTROL IS GIVEN TO IEE5603D WITH  Y02669*
*                        THE LOCKS HELD.                        Y02669*
*                                                                     *
*                        K T; K T;REF                           Y02669*
*                        --- --------                           Y02669*
*                        IF NOT A GRAPHICS CONSOLE, MESSAGE     Y02669*
*                        'IEE922I' IS ISSUED VIA THE WTO MACRO. Y02669*
*                        IF NO TRACK IS ACTIVE ON THE TARGET    Y02669*
*                        CONSOLE 'IEE158I NO TRACK ACTIVE' IS   Y02669*
*                        ISSUED TO THE SOURCE CONSOLE. THE      Y02669*
*                        LOCKS ARE RELEASED PRIOR TO THE        Y02669*
*                        GETMAIN. THE WTO AND FREEMAIN ARE      Y02669*
*                        ISSUED AND CONTROL IS RETURNED.        Y02669*
*                                                                     *
*                        IF THE CONSOLE IS CRT, THE MESSAGE     Y02669*
*                        TEXT IS MOVED INTO THE DCM INSTRUCTION Y02669*
*                        LINE, THE OPTIONS INDICATOR FOR        Y02669*
*                        MESSAGE 'IEE150I' IS SET IN THE XSA    Y02669*
*                        AND CONTROL IS GIVEN TO IEE5603D WITH  Y02669*
*                        THE LOCKS HELD.                        Y02669*
*                                                                     *
*                        K A,NONE                               Y02669*
*                        --------                               Y02669*
*                        THE TARGET CONSOLE'S UCME ADDRESS      Y02669*
*                        IS FOUND BASED ON THE INDEX IN         Y02669*
*                        XASCID.  THE GETMAINED SACB'S          Y02669*
*                        ASSOCIATED WITH THAT UCME ARE THEN     Y02669*
*                        FREEMAINED.                            Y02669*
*                                                                     *
*                        IF THERE IS AN ACTIVE STATUS OR        Y02669*
*                        DYNAMIC DISPLAY IN ANY OF THE AREAS,   Y02669*
*                        'IEE924I DISPLAY IN OR ABOVE AREA' IS  Y02669*
*                        ISSUED.                                Y02669*
*                                                                     *
*                        WHEN ALL THE SACB'S ARE FREED,         Y02669*
*                        'IEE928I' IS ISSUED BY THE WTO MACRO   Y02669*
*                        AFTER THE LOCKS HAVE BEEN RELEASED.    Y02669*
*                        CONTROL IS THEN RETURNED.              Y02669*
*                                                                     *
*                        K T,UTME=                              Y02669*
*                        ---------                              Y02669*
*                        THE TARGET CONSOLE'S UCME ADDRESS IS   Y02669*
*                        FOUND BASED ON THE INDEX IN XASCID.    Y02669*
*                        THE SACB'S ARE SEARCHED FOR AN AREA    Y02669*
*                        WITH AN ACTIVE TRACK DISPLAY. IF NONE  Y02669*
*                        IS FOUND 'IEE158I' IS ISSUED. OTHER-   Y02669*
*                        WISE THE NEW TIME INTERVAL VALUE IS    Y02669*
*                        STORED IN THE SACB, THE LOCKS          Y02669*
*                        RELEASED AND CONTROL RETURNED.         Y02669*
*                                                                     *
* NOTES                                                         Y02669*
*                                                                     *
*   CHARACTER-CODE                                              Y02669*
*    DEPENDENCIES     =  ANY CHARACTER CODE OTHER THAN EBCDIC   Y02669*
*                        WILL REQUIRE REASSEMBLY OF THIS MODULE.Y02669*
*                        NOTE: THIS MODULE USES CHARACTER       Y02669*
*                        REPRESENTATIONS FOR BLANK AND COMMA.   Y02669*
*                                                                     *
*   DEPENDENCIES      =  IEE7503D WILL ENSURE THAT ALL TARGET   Y02669*
*                        CONSOLES ARE CRT DEVICES.              Y02669*
*                                                                     *
*   RESTRICTIONS      =  THE TARGET CONSOLE MUST BE A GRAPHICS  Y02669*
*                        DEVICE.                                Y02669*
*                                                                     *
*   REGISTER                                                    Y02669*
*    CONVENTIONS      =  NONE                                   Y02669*
*                                                                     *
*   PATCH-LABEL       =  PATCH                                  Y02669*
*                                                                     *
* MODULE TYPE         =  CSECT                                  Y02669*
*                                                                     *
*   PROCESSOR         =  N/A                                    Y02669*
*                                                                     *
*   MODULE SIZE       =  X'581' + X'41' PATCH AREA              Y02669*
*                                                                     *
*   ATTRIBUTES        =  REFRESHABLE, REENTRANT, SUPERVISOR     Y02669*
*                        MODE, KEY 0, PAGED LPA                 Y02669*
*                                                                     *
* ENTRY POINT         =  IEE6903D FROM IEE6703D                 Y02669*
*   PURPOSE           =  TO PROCESS THE K A AND K A,REF AND     Y02669*
*                        K A,NONE AND K T AND K T,REF AND       Y02669*
*                        K T,UTME COMMANDS                      Y02669*
*   LINKAGE           =  BRANCH                                 Y02669*
*   INPUT DATA        =  REG 2 POINTS TO THE XSA                Y02669*
*                           XAL - POINTS TO COMMAND BUFFER      Y02669*
*                           XAS - L=CCA INFORMATION             Y02669*
*                           XASSDS3-ON IF CMD ISSUED FROM     @Y02668P*
*                                   A MEMORY OTHER THAN       @Y02668P*
*                                   COMTASK (JES3)            @Y02668P*
*                           XASSDS5 ON - LOCKS HELD             Y02651*
*                           XAU - ISSUING CONSOLE ID            Y02669*
*                        REG 14 CONTAINS THE RETURN ADDRESS     Y02669*
*                                                                     *
*   REGISTERS SAVED   =  REG 2 IS UNTOUCHED                     Y02669*
*                        REG 14 IS SAVED IN XSA (XAP)           Y02669*
*                        REG 11-14 SAVED BEFORE ISSUING         Y02651*
*                                  SETLOCK AT FREELOCK          Y02651*
*                                                                     *
*   REGISTER CONTENTS                                           Y02669*
*    DURING PROCESSING=  R0 - WORK REGISTER                     Y02669*
*                        R1 - WORK REGISTER                     Y02669*
*                        R2 - BASE REG FOR XSA                  Y02669*
*                        R3 - BASE REG FOR UCM                  Y02669*
*                        R4 - POINTS TO COMMAND OPERANDS        Y02669*
*                        R5 - SUBROUTINE BRANCH REG             Y02669*
*                        R6 - WORK REGISTER                     Y02669*
*                        R7 - WORK REGISTER                     Y02669*
*                        R8 - BASE REG FOR UCME                 Y02669*
*                        R9 - BASE REG FOR TRANSIENT DCM        Y02669*
*                        R10- BASE REG FOR RESIDENT DCM         Y02669*
*                        R11- SUBROUTINE BRANCH REG             Y02669*
*                        R12- BASE REG FOR SACB                 Y02669*
*                        R13- BASE REG FOR THIS MODULE          Y02669*
*                        R14- SUBROUTINE BASE REG               Y02669*
*                        R15- WORK REGISTER                     Y02669*
*                                                                     *
*   REGISTERS RESTORED=  REG 14 RESOTRED AT EXIT AND D5603D     Y02669*
*                        REG 11-14 RESTORED AFTER SETLOCK AT    Y02651*
*                                  FREELOCK.                    Y02651*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   *
*                                                                     *
* EXIT - NORMAL       =  RETURN VIA BR 14 FROM RETURN           Y02669*
* 1 CONDITIONS        =  FOR K A & K A,REF & K T & K T,REF &    Y02669*
*                        K T,UTME                               Y02669*
*   OUTPUT            =  SACB INFORMATION IS DISPLAYED IN THE   Y02669*
*                        ENTRY AREA IF SOURCE IS A CRT DEVICE   Y02669*
*                        OTHERWISE, IT IS ISSUED VIA A WTO      Y02669*
*                        REG 2 POINTS TO XSA                    Y02669*
*                            XASSDS5 RESET TO ZERO - LOCKS      Y02651*
*                                    RELEASED                   Y02651*
*   RETURN CODES      =  NONE                                   Y02669*
* 2 CONDITIONS        =  FOR K A,NONE                           Y02669*
*   OUTPUT            =  ALL GETMAINED SACB'S ARE FREED         Y02669*
*                        REG 2 POINTS TO XSA                    Y02669*
*                            XASSDS5 RESET TO ZERO - LOCKS      Y02651*
*                                    RELEASED                   Y02651*
*   RETURN CODES      =  NONE                                   Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   *
*                                                                     *
* EXIT - NORMAL       =  BRANCH TO IEE5603D FROM D5603D         Y02669*
*   CONDITIONS        =  TO ISSUE MESSAGE 'IEE150I CHANGE       Y02669*
*                        OPTIONS' FOR A CRT DEVICE ALONG        Y02669*
*                        WITH K A,LL OR K T,UTME MESSAGE IN     Y02669*
*                        THE INSTRUCTION LINE                   Y02669*
*   OUTPUT DATA       =  MESSAGE IN INSTRUCTION LINE OF DCM     Y02669*
*                        REG 2 - POINTS TO XSA                  Y02669*
*                          XAE CONTAINS X'02'                   Y02669*
*                          XASOPTR CONTAINS CURSOR POINTER      Y02669*
*                           XASSDS5 - ON LOCKS HELD             Y02651*
*   RETURN CODES      =  NONE                                   Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   *
*                                                                     *
* EXIT - ERROR        =  BRANCH TO IEE5603D FROM D5603D         Y02669*
*   CONDITIONS        =  TO ISSUE ERROR MESSAGES                Y02669*
*   OUTPUT DATA       =  ERROR CODES FOR MESSAGES TO BE         Y02669*
*                        ISSUED BY IEE5603D AND IEE5903D        Y02669*
*   RETURN CODES      =  REG 2 POINTS TO XSA                    Y02669*
*                           XAE WILL CONTAIN AN INDEX FOR THE   Y02669*
*                           MAJOR MESSAGE FOR IEE5603D:         Y02669*
*                              X'04' - IEE156I INVALID OPERAND  Y02669*
*                              X'05' - IEE158I K REQUEST        Y02669*
*                                              INCONSISTENT     Y02669*
*                              X'0A' - IEE924I INVALID AREA     Y02669*
*                                              DEFINITION       Y02669*
*                              X'0E' - IEE931I INSUFFICIENT     Y02669*
*                                      STORAGE FOR COMMAND      Y02669*
*                           XASTSAVE WILL CONTAIN AN INDEX FOR  Y02669*
*                           THE MINOR MESSAGE FOR IEE5903D:     Y02669*
*                            IEE924I INVALID AREA DEFINITION    Y02669*
*                              X'11' - DISPLAY IN OR ABOVE AREA Y02669*
*                            IEE158I K REQUEST INCONSISTENT     Y02669*
*                              X'1E' - NO TRACK ACTIVE          Y02669*
*                           XASSDS5 ON LOCKS HELD               Y02651*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   *
*                                                                     *
* EXTERNAL REFERENCES                                           Y02669*
*                                                                     *
*   ROUTINES          =  IEE5603D/IEE5903D                      Y02669*
*                                                                     *
*   DATA AREAS        =  NONE                                   Y02669*
*                                                                     *
*   CONTROL BLOCKS    =  CVT      R - ADDRESS UCM               Y02669*
*                        IEEXSA   R - INPUT                     Y02669*
*                                 W - ERROR MESSAGE CODES       Y02669*
*                        IEECUCM  R - ADDRESS DCM               Y02669*
*                        IEETDCM  R - INSTRUCTION LINE INFO     Y02669*
*                                 W - FILL IN INSTRUCTION LINE  Y02669*
*                        IEERDCM  R - ADDRESS SACB              Y02669*
*                          (SACB) R - GET INFO FOR MESSAGE      Y02669*
*                                 W - INITIALIZE                Y02669*
*                                 F - WHEN AREAS ARE DELETED    Y02669*
*                        IHAPSA   NECESSARY FOR SETLOCKS        Y02651*
*                        IEFPTRS  R - ADDRESS ASCB & TCB FOR    Y02651*
*                                     BRANCH ENTRIES            Y02651*
*                                                                     *
*   TABLES            =  NONE                                   Y02669*
*                                                                     *
*   MACROS            =  GETMAIN  SP 229 FOR WTO BUFFERS        Y02669*
*                        FREEMAIN SP 229 FOR WTO BUFFERS        Y02669*
*                        BRANCH ENTRY GETMAIN SP229 WTO BUFFERS Y02651*
*                        BRANCH ENTRY FREEMAIN SP241 SACB'S     Y02651*
*                        WTO                                    Y02669*
*                        SETLOCK - CMS AND LOCAL LOCKS RELEASED Y02651*
*                                                                     *
*   ENQUEUE RESOURCES =  NONE                                   Y02669*
*                                                                     *
*   LOCKS HELD        =  CMS AND LOCAL LOCKS OBTAINED IN        Y02651*
*                        IEE7503D ARE RELEASED AND XASSDS5 IS   Y02651*
*                        RESET BEFORE RETURNING AT RETURN.      Y02651*
*                        OTHERWISE THEY ARE RELEASED IN         Y02651*
*                        IEE5603D OR IEE5903D.                  Y02651*
*                                                                     *
*   CHANGE LEVEL      =  Y02669                                 Y02669*
*                        Y02651                                 Y02651*
*                        Y02668 - JES3 SUPPORT                @Y02668P*
*                        YM1911  (PROLOGUE & COMMENT CHANGES)   YM1911*
*                        @ZA07770 TIME INTERVAL TO 10 SEC     @ZA07770*
*                                                                     *
* MESSAGES            =  THE FOLLOWING MESSAGES ARE CONTAINED   Y02669*
*                        IN AND ISSUED FROM THIS MODULE:        Y02669*
*                                                                     *
*                        FOR K A,NONE: (MSG STRM-CRT & NON-CRT) Y02669*
*                         IEE928I DISPLAY AREA ID'S FOR CONSOLE Y02669*
*                                 'CC' ARE NONE                 Y02669*
*                        FOR K A & K A,REF: (NON-CRT)           Y02669*
*                         IEE929I K A,LL,LL...,L=CC             Y02669*
*                         IEE928I DISPLAY AREA ID'S FOR CONSOLESY02669*
*                                 'CC' ARE A,B...               Y02669*
*                                           (CRT-ENTRY AREA)    Y02669*
*                     *   K A,LL,LL...                          Y02669*
*                        FOR K T & K T,REF: (NON-CRT)           Y02669*
*                         IEE922I K T,UTME=XXX,L=CC             Y02669*
*                                           (CRT-ENTRY AREA)    Y02669*
*                     *   K T,UTME=XXX                          Y02669*
*                        THE FOLLOWING MESSAGES ARE CONTAINED   Y02669*
*                        IN AND ISSUED FROM IEE5603D & IEE5903D:Y02669*
*                         MSGID  CODE  MOD MESSAGE TEXT         Y02669*
*                         _____  ____  ___ ____________         Y02669*
*                        IEE150I X'02' 56  CHANGE OPTIONS,      Y02669*
*                                          IF DESIRED           Y02669*
*                          (ACCOMPANIES MESSAGES MARKED *)      Y02669*
*                        IEE156I X'04' 56  INVALID OPERAND      Y02669*
*                        IEE158I X'05' 56  K REQUEST            Y02669*
*                                            INCONSISTENT       Y02669*
*                                X'1E' 59  NO TRACK ACTIVE      Y02669*
*                        IEE924I X'0A' 56  INVALID AREA         Y02669*
*                                            DEFINITION         Y02669*
*                                X'11' 59  DISPLAY IN OR ABOVE  Y02669*
*                                            AREA               Y02669*
*                        IEE931I X'0E' 56  INSUFFICIENT STORAGE Y02669*
*                                            FOR COMMAND        Y02669*
*                                                                     *
* SYSGEN              =  INCLUDED WITH SVC 34 IN LOAD MODULE    Y02669*
*                        IGC0003D, DLIB AOSB3, MACRO SGCIEF441, Y02669*
*                        TARGLIB LPALIB.                        Y02669*
*                                                                     *
* SYSTEM LIBRARIES    =  NONE                                   Y02669*
*                                                                     *
***********************************************************************
         EJECT
IEE6903D CSECT
* C- 301100                                                    @ZM30462
* PACK(C), CONSTANTS(C)                                        @ZA07770
***********************************************************************
*                                                                     *
*                             REGISTERS                               *
*                                                                     *
***********************************************************************
R0       EQU   0                   WORK REG
R1       EQU   1                   WORK REG
PARMREG  EQU   2                   INPUT BASE REG FOR XSA
UCMBASE  EQU   3                   UCM BASE REG                  Y02651
KOPS     EQU   4                   OPERAND POINTER
R4       EQU   4                   WORK REG
R5       EQU   5                   SUBROUTINE BRANCH REG
R6       EQU   6                   WORK REG
R7       EQU   7                   WORK REG                      Y02651
UCMEBASE EQU   8                   UCM ENTRY BASE REG
TDCMBASE EQU   9                   TRANSIENT DCM BASE REG
RDCMBASE EQU   10                  RESIDENT DCM BASE REG
RA       EQU   10                  PART OF EVEN ODD PAIR         Y02669
RB       EQU   11                  SUBROUTINE BRANCH REG
SACBPT   EQU   12                  SACB BASE REG                 Y02651
MYBASE   EQU   13                  THIS MODULE'S BASE REG
RE       EQU   14                  SUBROUTINE BRANCH REG         Y02669
R15      EQU   15                  CODE REG                      Y02669
         EJECT
***********************************************************************
*                                                                     *
*                    MESSAGE FLAG BIT SETTINGS                        *
*                                                                     *
***********************************************************************
IEE150I  EQU   X'02'               MAJOR - WRITE OPTIONS MSG     Y02669
IEE156I  EQU   X'04'               MAJOR - INVALID OPERAND       Y02669
IEE158I  EQU   X'05'               MAJOR- K REQUEST INCONSISTENT Y02669
IEE158   EQU   X'1E'                 NO TRACK ACTIVE             Y02669
IEE924I  EQU   X'0A'               MAJOR - INVALID AREA DEFIN.   Y02669
IEE924   EQU   X'11'                 DISPLAY IN OR ABOVE AREA    Y02669
IEE931I  EQU   X'0E'               MAJOR - INSUF. STOR. FOR CMD  Y02669
***********************************************************************
*                                                                     *
*                          EQUATES                                    *
*                                                                     *
***********************************************************************
N0       EQU   0                   FIELD INCREMENT
N1       EQU   1                   FIELD INCREMENT
N2       EQU   2                   FIELD INCREMENT
N3       EQU   3                   FIELD INCREMENT
N4       EQU   4                   FIELD INCREMENT
N5       EQU   5                   FIELD INCREMENT               Y02669
N6       EQU   6                   FIELD INCREMENT
N7       EQU   7                   FIELD INCREMENT + ICM MASK    Y02669
N8       EQU   8                   FIELD INCREMENT + ICM MASK    Y02669
N9       EQU   9                   FIELD INCREMENT               Y02669
N10      EQU   10                  FIELD INCREMENT               Y02669
N12      EQU   12                  FIELD INCREMENT               Y02669
N13      EQU   13                  FIELD INCREMENT               Y02669
N15      EQU   15                  FIELD INCREMENT               Y02669
N16      EQU   16                  FIELD INCREMENT               Y02669
N17      EQU   17                  FIELD INCREMENT               Y02669
N20      EQU   20                  FIELD INCREMENT               Y02669
N24      EQU   24                  FIELD INCREMENT               Y02669
N28      EQU   28                  FIELD INCREMENT               Y02669
N32      EQU   32                  FIELD INCREMENT               Y02669
N33      EQU   33                  FIELD INCREMENT               Y02669
N42      EQU   42                  FIELD INCREMENT
N49      EQU   49                  FIELD INCREMENT
N80      EQU   80                  FIELD SIZE
***********************************************************************
*                                                                     *
*                    CHARACTER CONSTANTS                              *
*                                                                     *
***********************************************************************
BLANK    EQU   C' '                BLANK CHAR
COMMA    EQU   C','                COMMA CONSTANT
ZERO     EQU   X'00'               CONSTANT
         EJECT
***********************************************************************
*                                                                     *
*                    MASKS AND OTHER EQUATES                          *
*                                                                     *
***********************************************************************
DIGIT    EQU   X'F0'               CONSTANT                      Y02669
SIGN     EQU   X'FC'               CONVERT EBCDIC TO SIGN        Y02669
XFF      EQU   255                 FIELD INCREMENT               Y02669
PTRCVT   EQU   16                  CVT ADDR
NOHDCPY  EQU   X'04'               BIT TO SIGNIFY NO HARD COPY   Y02669
MCSMASK  EQU   X'41'               ID PASSED + QUEUE BY ID
SP229    EQU   229                 SUBPOOL FOR WTO BUFFER        Y02669
SP241    EQU   241                 SUBPOOL FOR SACB'S            Y02669
         EJECT
***********************************************************************
*                                                                     *
*                   ESTABLISH ADDRESSABILITY                          *
*                                                                     *
*           ON ENTRY, REGISTER 2 CONTAINS ADDRESS OF XSA              *
*                                                                     *
***********************************************************************
         SPACE 2
         BALR  MYBASE,N0           ESTABLISH ROUTINE 'S
         USING *,MYBASE            BASE REGISTER
         MODID BRANCH=YES                                        Y01886
         USING FAUXSA,PARMREG      ESTABLISH XSA ADDRESSABILITY
         L     UCMBASE,PTRCVT      GET CVT POINTER               Y02669
         USING CVTSECT,UCMBASE     BASE CVT REG
         L     UCMBASE,CVTCUCB     GET UCM POINTER FROM CVT      Y02669
         DROP  UCMBASE                                           Y02669
         USING UCM,UCMBASE         ESTABLISH UCM ADDRESSABILITY  Y02669
         USING UCMLIST,UCMEBASE    BASE UCM ENTRY LIST
         USING DCMTSRT,RDCMBASE    ESTABLISH RDCM BASE REG       Y02669
         USING DCMSTRT,TDCMBASE    BASE TDCM REG                 Y01012
         USING DCMACB,SACBPT       BASE SACB REG
         SPACE 2
         ST    RE,XAP              SAVE RETURN POINTER           Y02669
         SR    R1,R1               CLEAR REG                     Y02669
         IC    R1,XAU              LOAD SOURCE ID                Y02669
         BAL   RE,FINDUCME         FIND SOURCE ENTRY UCME        Y02669
         SPACE 2
         L     KOPS,XAL            LOAD POINTER TO OPERANDS
         LA    KOPS,N0(KOPS)       CLEAR HIGH ORDER BYTE
         ST    KOPS,XASAVSTD+N32   SAVE OPERAND ADDRESS          Y02669
         EJECT
***********************************************************************
*                                                                     *
*                    K  A COMMAND                                Y02669
*                    K  A,REF COMMAND                            Y02669
*                                                                     *
***********************************************************************
         SPACE
         CLC   N0(N2,KOPS),KA      IS IT K A?
         BE    KREFRTN             YES-GO HANDLE AS K A,REF      Y02669
         CLC   N0(N6,KOPS),KAREF   IS IT K A,REF?
         BE    KREFRTN             YES-PROCESS                   Y02669
         SPACE 2
***********************************************************************
*                                                                     *
*                    K  T COMMAND                                Y02669
*                    K  T,REF COMMAND                            Y02669
*                                                                     *
***********************************************************************
         SPACE
         CLC   N0(N2,KOPS),KT      IS IT K T?                    Y02669
         BE    KREFRTN             YES-GO HANDLE AS K T,REF      Y02669
         CLC   N0(N6,KOPS),KTREF   IS IT K T,REF?                Y02669
         BE    KREFRTN             YES-PROCESS                   Y02669
         SPACE 2
***********************************************************************
*                                                                     *
*                    K  A,NONE COMMAND                           Y02669
*                                                                     *
***********************************************************************
         SPACE
         CLC   N0(N7,KOPS),KANONE+N2 IS IT K A,NONE?             Y02669
         BE    KNONERTN            YES-PROCESS
         SPACE 2
***********************************************************************
*                                                                     *
*                    K  T,UTME= COMMAND                          Y02669
*  ERR - IEE156I INVALID OPERAND - IF NOT A; A,REF; A,NONE       Y02669
*                                         T; T,REF; T,UTME=      Y02669
*                                                                     *
***********************************************************************
         SPACE
         CLC   N0(N7,KOPS),KTUTME+N2  IS IT K T,UTME=?           Y02669
         BE    KUTMERTN            YES-PROCESS                   Y02669
         LA    KOPS,N1(KOPS)       NO,POINT CURSOR TO COMMA      Y02669
         B     BADKOP              ERR - IEE156I INVALID OPERAND Y02669
         EJECT
***********************************************************************
*                                                                     *
*                       K A AND K A,REF                          Y02669
*                       K T AND K T,REF                          Y02669
*         IF SOURCE IS NOT A GRAPHIC CONSOLE,ISSUE WTO FOR       Y02669
*         MESSAGE OTHERWISE LOAD POINTER TO DCM INSTRUCTION LINE Y02669
*            CLEARIT  - TO CLEAR ENTIRE LINE WITH BLANKS         Y02669
*            TARUCME  - TO GET THE TARGET CONSOLE'S UCME         Y02669
*         FOR K A AND K A,REF:                                   Y02669
*            MOVEINKA - TO MOVE THE MESSAGE TEXT INTO THE LINE   Y02669
*             BRANCH TO IEE5603D TO ISSUE THE MESSAGE            Y02669
*              'K A,LL,LL,...L=CC'                               Y02669
*              WITH THE CURSOR POINTING TO THE CHARACTER         Y02669
*              FOLLOWING 'A,' PLUS MESSAGE                       Y02669
*              'IEE150I CHANGE OPTIONS IF DESIRED'               Y02669
*         FOR K T AND K T,REF:                                   Y02669
*            FINDSACB - TO FIND THE SACB WITH TRACK IN IT        Y02669
*             IF NO TRACK ACTIVE ON THE SPECIFIED DEVICE:        Y02669
*              'IEE158I K REQUEST INCONSISTENT-NO TRACK ACTIVE'  Y02669
*            FINDUTME - TO CONVERT THE TIME INTERVAL TO          Y02669
*              DECIMAL BUILD THE MESSAGE TEXT AND BRANCH TO      Y02669
*              IEE5603D TO ISSUE: 'K T,UTME=XXX'                 Y02669
*              WITH THE CURSOR POINTING TO THE CHARACTER         Y02669
*              FOLLOWING '=,' PLUS MESSAGE                       Y02669
*              'IEE150I CHANGE OPTIONS IF DESIRED'               Y02669
*                                                                     *
***********************************************************************
         SPACE 2
KREFRTN  EQU   *                                                 Y02669
         TM    UCMDISP,UCMDISPC    IS ISSUING CONSOLE GRAPHICS?
         BZ    BUILDWTO            NO, GO BUILD MESSAGE          Y02669
         TM    XASSDS,XASSDS3      IS TASK ISSUING CMD COMTASK @Y02668P
         BO    BUILDWTO            NO, BRANCH ISSUE WTO        @Y02668P
         SPACE
         L     RDCMBASE,UCMXB        LOAD POINTER TO RDCM        Y02669
         L     TDCMBASE,N0(RDCMBASE) LOAD POINTER TO TDCM        Y02669
         L     R6,DCMAENTR         LOAD ADDR OF ENTRY AREA
         LH    R1,DCMLGNTH         LOAD LENGTH OF A LINE
         BAL   RB,CLEARIT          CLEAR IT
         BAL   RB,TARSACB          GET TARGET UCME               Y02669
         CLC   N0(N1,KOPS),KT      IS IT K T ?                   Y02669
         BE    KTREFRTN            YES-GO HANDLE AS K T,REF      Y02669
         LR    R1,R6               SAVE ADDRESS FOR CURSOR       Y02669
         BAL   RB,MOVEINKA         FILL IN MESSAGE TEXT          Y02669
         LA    R6,N4(R1)           BUMP POINTER TO , AFTER 'A'   Y02669
         B     TODIDOCS                                          Y02669
KTREFRTN EQU   *                                                 Y02669
         MVC   N0(N9,R6),KTUTME    MOVE COMMAND TO ENTRY AREA    Y02669
         BAL   RB,FINDSACB         FIND TARGET SACB WITH TRACK   Y02669
         BAL   RB,FINDUTME         GO CONVERT TIME VALUE         Y02669
         MVC   N9(N3,R6),XAX       MOVE VALUE INTO MSG           Y02669
         LA    R6,N9(R6)           SET CURSOR POSITION PAST ,    Y02669
TODIDOCS EQU   *                                                 Y02669
         ST    R6,XASTSAVE         SAVE CURSOR POSITION          Y02669
         MVI   XAE,IEE150I         SET OPTIONS MSG BIT           Y02669
         B     D5603D              GO TO IEE5603D TO ISSUE MSG   Y02669
         EJECT
***********************************************************************
*                                                                     *
*          IF SOURCE IS NOT A CRT DEVICE A WTO IS ISSUED FOR     Y02669
*               'IEE929I K A,LL,LL,...L=CC'                      Y02669
*            TARSACB  - TO GET THE TARGET CONSOLE'S UCME         Y02669
*            GETMAIN  - TO GET CORE FOR THE MESSAGE TEXT         Y02669
*                       AND CLEAR IT WITH BLANKS                 Y02669
*                       MUST BE DONE VIA BRANCH ENTRY TO GETMAIN Y02651
*                       LOCKS HELD DURING GETMAIN                Y02651
*            MOVEINKA - TO MOVE THE MESSAGE TEXT INTO THE        Y02669
*                       GETMAINED CORE                           Y02669
*                                                                     *
*          IF REPLYING TO K A,REF ALSO INCLUDED IS:              Y02669
*     'IEE928I DISPLAY AREA ID'S FOR COMSOLE 'CC' ARE ID,ID...'  Y02669
*            MOVEINLL - TO MOVE THE MESSAGE TEXT INTO THE        Y02669
*                       GETMAINED CORE                           Y02669
*            FREELOCK - TO RELEASE LOCKS BEFORE ISSUING SVC'S    Y02651
*            WRTWTO   - TO ISSUE WTO'S                           Y02669
*            FREE     - AFTER THE WTO'S ARE ISSUED TO FREE THE   Y02669
*                       GOTTEN CORE                              Y02669
*                                                                     *
***********************************************************************
         SPACE 2
BUILDWTO EQU   *
         CLC   N0(N1,KOPS),KT      IS IT K T ?                   Y02669
         BE    KTREFWTO            YES-GO HANDLE AS K T,REF      Y02669
         SPACE 2
KAREFWTO EQU   *                                                 Y20669
         BAL   RB,TARSACB          GO GET TARGET UCME            Y02669
         BAL   RB,GETMAIN          GET CORE FOR MSG-BRANCH ENTRY Y02651
         ST    R1,XASAVSTD+N16     SAVE BEGINNING ADDR OF IEE929IY02669
         MVC   N4(N8,R6),IEE929I   MOVE MESSAGE NUMBER
         LA    R6,N13(R6)          BUMP MSG PT PAST MSG NO.      Y02669
         BAL   RB,MOVEINKA         GO PUT DATA INTO MSG          Y02669
         MVC   N0(N3,R6),LEQUALS   MOVE L=CC INTO MSG            Y02669
         MVC   N3(N2,R6),XAX+N1    STORE CC INTO L= PARAM.       Y02669
         LA    R6,N6(R6)           BUMP MSG LENGTH
         ST    R6,XASAVSTD+N20     SAVE ENDING ADDRESS OF IEE929IY02651
         BAL   RB,GETMAIN          GET CORE FOR MSG-BRANCH ENTRY Y02651
         ST    R1,XASAVSTD+N24     SAVE BEGINNING ADDR OF IEE928IY02651
         MVC   N4(L'IEE928I,R6),IEE928I   MOVE MSG INTO AREA     Y02669
         LA    R6,N49(R6)          BUMP MESSAGE POINTER
         BAL   RB,MOVEINLL         FILL IN MESSAGE INFO          Y02669
         MVC   N42(N2,R1),XAX+N1   MOVE CC INTO MESSAGE          Y02669
         ST    R6,XASAVSTD+N28     SAVE ENDING ADDRESS OF IEE928IY02651
         BAL   RB,FREELOCK         TO RELEASE LOCKS              Y02651
         L     R1,XASAVSTD+N16     GET BEGINNING ADDR OF IEE929I Y02651
         L     R6,XASAVSTD+N20     GET ENDING ADDRESS OF IEE929I Y02651
         BAL   RB,WRTWTO           GO WRITE WTO IEE929I          Y02669
         L     R1,XASAVSTD+N16     GET BEGINNING ADDR OF IEE929I Y02651
         BAL   RB,FREE             FREEMAIN WTO PARAMETER LIST   Y02669
         L     R1,XASAVSTD+N24     GET BEGINNING ADDR OF IEE928I Y02651
         L     R6,XASAVSTD+N28     GET ENDING ADDRESS OF IEE928I Y02651
         BAL   RB,WRTWTO           GO WRITE WTO IEE928I          Y02669
         L     R1,XASAVSTD+N24     GET BEGINNING ADDR OF IEE928I Y02651
         BAL   RB,FREE             FREEMAIN WTO PARAMETER LIST   Y02669
         B     RETURN              FINISHED, RETURN TO SYSTEM    Y02669
         EJECT
***********************************************************************
*                                                                     *
*          IF REPLYING TO K T,REF AND SOURCE IS NOT A CRT        Y02669
*          DEVICE A WTO IS ISSUED:                               Y02669
*               ' IEE922I K T,UTME=XXX,L=CC' IS ISSUED           Y02669
*            TARSACB  - TO GET THE TARGET CONSOLE'S UCME         Y02669
*            FINDSACB - TO FIND THE SACB WITH TRACK ACTIVE       Y02669
*              IF NO TRACK ACTIVE ON THE SPECIFIED DEVICE:       Y02669
*              'IEE158I K REQUEST INCONSISTENT-NO TRACK ACTIVE'  Y02669
*            FINDUTME - TO CONVERT THE TIME INTERVAL TO DECIMAL  Y02669
*            GETMAIN  - TO GET CORE FOR THE MESSAGE TEXT         Y02651
*                       MUST BE DONE VIA BRANCH ENTRY TO GETMAIN Y02651
*                       LOCKS HELD DURING GETMAIN                Y02651
*            CONVERT  - TO CONVERT THE 'CC' TO DECIMAL           Y02669
*            FREELOCK - TO RELEASE LOCKS BEFORE SVC'S            Y02651
*            WRTWTO   - TO ISSUE WTO                             Y02669
*            FREE     - AFTER THE WTO IS ISSUED TO FREE THE      Y02669
*                       GOTTEN CORE                              Y02669
*                                                                     *
***********************************************************************
KTREFWTO EQU   *                                                 Y02669
         BAL   RB,TARSACB          GET TARGET UCME ADDRESS       Y02669
         BAL   RB,FINDSACB         FIND SACB WITH TRACK          Y02669
         BAL   RB,FINDUTME         CONVERT TIME VALUE TO DECIMAL Y02669
         BAL   RB,GETMAIN          BRANCH ENTRY GETMAIN          Y02669
         MVC   N4(N7,R6),IEE922I   MOVE MESSAGE NUMBER TO AREA @YM30462
         LA    R6,N13(R6)          BUMP MSG PT PAST MSG NO.      Y02669
         MVC   N0(N9,R6),KTUTME    MOVE COMMAND TO AREA          Y02669
         MVC   N9(N3,R6),XAX       MOVE EBCDIC TIME VALUE      @YM2775P
         BAL   R5,CONVERT          CONVERT TARGET CONSOLE ID     Y02669
         MVC   N12(N3,R6),LEQUALS  MOVE IN ',L='                 Y02669
         MVC   N15(N2,R6),XAX+N1   MOVE IN CC VALUE              Y02669
         LA    R6,N17(R6)          BUMP MSG PT TO LAST CHAR      Y02669
         BAL   RB,FREELOCK         GO RELEASE LOCKS              Y02651
         L     R1,XASAVSTD+N12     GET BEGINNING ADDRESS         Y02669
         BAL   RB,WRTWTO           GO ISSUE IEE922I              Y02669
         L     R1,XASAVSTD+N12     GET BEGINNING ADDRESS         Y02669
         BAL   RB,FREE             GO FREE GOTTEN CORE           Y02669
         B     RETURN              RETURN TO SYSTEM              Y02669
         EJECT
***********************************************************************
*                                                                     *
*                          K A,NONE                              Y02669
*         TARUCME - TO GET THE TARGET CONSOLE'S UCME             Y02669
*                                                                     *
*   ERR -IEE924I DISPLAY IN OR ABOVE AREA - IF STATUS DISPLAY ACTIVE  *
*                                                                     *
*   IF NO AREAS WERE ORIGINALLY DEFINED AND WHEN ALL ARE FREED   Y02669
*         FREELOCK - TO RELEASE LOCKS BEFORE SVC'S               Y02651
*         GETCORE - TO GET CORE FOR MESSAGE                      Y02669
*         CONVERT - TO CONVERT THE 'CC' TO DECIMAL               Y02669
*         WRTWTO  - TO ISSUE WTO MACRO                           Y02669
*         FREE    - TO FREEMAIN GOTTEN CORE FOR MESSAGE          Y02669
*        IEE928I DISPLAY AREA IDS' FOR CONSOLE 'CC' ARE 'NONE'        *
*                                         - IF NO SACB'S DEFINED      *
*                                         - WHEN ALL SACB'S FREED     *
*                                                                     *
* NOTE: LOCKS HELD ON ENTRY TO IEE6903D, CAN BE RELEASED IF 'NONE'    *
***********************************************************************
        SPACE 2
KNONERTN EQU   *
         BAL   RB,TARSACB          GET TARGET CONSOLE'S UCME     Y02669
         LTR   SACBPT,SACBPT       ANY AREAS DEFINED?
         BNZ   FREESACB            YES, TRY TO FREE SACBS        Y02669
         SPACE 2
NOSACBS  EQU   *
         BAL   RB,FREELOCK         GO FREE LOCKS                 Y02651
         BAL   RB,GETCORE          GET CORE FOR IEE928I MESSAGE  Y02669
         MVC   N4(L'IEE928I,R6),IEE928I   MOVE IN MESSAGE ID     Y02669
         LA    R6,N49(R6)          ADJUST POINTER                Y02669
         MVC   N0(N4,R6),KANONE+N4 MOVE IN WORD 'NONE'           Y02669
         LA    R6,N4(R6)           ADJUST POINTER TO MSG END     Y02669
         BAL   R5,CONVERT          CONVERT 'CC' TO DECIMAL       Y02669
         MVC   N42(N2,R1),XAX+N1   PUT VALUE IN MESSAGE          Y02669
         L     R1,XASAVSTD+N12     GET BEGINNING ADDRESS         Y02651
         BAL   RB,WRTWTO           ISSUE WTO MACRO               Y02669
         L     R1,XASAVSTD+N12     GET BEGINNING ADDRESS         Y02651
         BAL   RB,FREE             FREE GOTTEN CORE              Y02669
         B     RETURN              FINISHED, RETURN TO SYSTEM    Y02669
         EJECT
***********************************************************************
*                                                                     *
*     THIS CODE WILL FREEMAIN ANY GETMAINED SACB'S AND REINITIALIZE   *
*     PERMANENT SACB'S AND TURN OFF DCMAUSE BIT IN SACB'S             *
*                                                                     *
***********************************************************************
         SPACE 2
FREESACB EQU   *
         CLI   DCMTOPDS,ZERO       IS THERE A DISPLAY ON SCREEN?
         BNE   ERROR               YES- ERROR CAN'T FREE IF BUSY
         SPACE
         LA    R5,DCMADSDS         PRIME CHAIN BACKWARD POINTER
RESTART  EQU   *
         TM    DCMASACB,DCMAGM     IS IT A GETMAINED SACB ?
         BO    FREEMAIN            YES- GO FREE IT
         XC    DCMAROW(DCMCLRLN),DCMAROW  ZERO OUT SACB          Y02669
         NI    DCMASACB,XFF-DCMAUSE TURN OFF IN-USE BIT          Y02669
         XC    DCMALN(N2),DCMALN   ZERO OUT LENGTH FIELD OF SACB
         LR    R5,SACBPT           SAVE PREVIOUS BLOCK ADDR
RESTART2 EQU   *
         ICM   SACBPT,N7,DCMACBNX+1   LOAD NEXT SACB POINTER     Y02669
         BNZ   RESTART             IS THERE ONE? YES-CONTINUE LOOP
         XC    DCMTOPAR(N2),DCMTOPAR ZERO OUT TOP AREA & TOP DISP. ID'S
         LA    R6,DCMADSDS         LOAD ADDR OF CHAIN START      Y02669
         CR    R5,R6               ARE THERE SYSGEN'D SACBS?     Y02669
         BNE   NOSACBS             YES-                          Y02669
         XC    DCMADSDS(N4),DCMADSDS ZERO OUT START ADDR
         B     NOSACBS             GO TELL STATUS IEE928I        Y02669
         SPACE 2
***********************************************************************
* NOTE: LOCKS HELD ON ENTRY TO IEE6903D - BRANCH ENTRY TO FREEMAIN    *
*       IS NECESSARY TO DECHAIN AND FREE SACB'S                       *
*         REGISTERS DESTROYED : 0, 1, 3, 4, 7, 14, 15                 *
*         INPUT INFORMATION: R4 POINTS TO CURRENT TCB                 *
*                            R7 POINTS TO CURRENT ASCB                *
***********************************************************************
FREEMAIN EQU   *
         L     R4,PTRCVT           GET ADDRESS OF CVT            Y02651
         USING CVTSECT,R4          ADDRESSABILITY FOR CVT        Y02651
         L     R4,CVTTCBP          ADDRESS OF TCBS & ASCBS       Y02651
         DROP  R4                                                Y02651
         USING TCBASCB,R4          ADDRESSABILITY FOR IEFPTRS    Y02651
         L     R7,ASCBPTR          ADDRESS OF ASCB FOR INTERFACE Y02651
         L     R4,TCBPTR           ADDRESS OF TCB FOR INTERFACE  Y02651
         MVC   N0(N4,R5),N0(SACBPT) MOVE PT TO NXT BLK INTO PREV BLK
         LR    R1,SACBPT           ADDR OF AREA TO FREE UP
         LR    SACBPT,R5           RESET SACB POINTER
         LA    R0,DCMACBSZ         PASS SACB LENGTH
         FREEMAIN RC,LV=(0),A=(1),SP=SP241,BRANCH=YES
         B     RESTART2            LOOP
         EJECT
***********************************************************************
*                                                                     *
*      THIS CODE VALIDITY CHECKS THE VALUE FOLLOWING 'UTME='     Y02669
*      CONVERTS THE VALUE TO BINARY AND STORES THE VALUE         Y02669
*      IN THE APPROPIATE SACB                                    Y02669
*                                                                     *
***********************************************************************
KUTMERTN EQU   *                                                 Y02669
         XC    XAX(N8),XAX         CLEAR CONVERT AREA            Y02669
         LA    KOPS,N7(KOPS)       BUMP PAST T,UTME= PARMS       Y02669
         TM    N0(KOPS),DIGIT      IS 1ST CHAR VALID DIGIT?      Y02669
         BNO   BADUTME             NO, IEE156I                   Y02669
         CLI   N1(KOPS),BLANK      IS 2ND DIGIT A BLANK?         Y02669
         BE    ONEDIGIT            YES, GO CONVERT 1 DIGIT       Y02669
         TM    N1(KOPS),DIGIT      IS 2ND CHAR VALID DIGIT?      Y02669
         BNO   BADUTME             NO, IEE156I                   Y02669
         CLI   N2(KOPS),BLANK      IS 3RD DIGIT A BLANK?         Y02669
         BE    TWODIGIT            YES, GO CONVERT 2 DIGITS      Y02669
         TM    N2(KOPS),DIGIT      IS 3RD CHAR VALID DIGIT?      Y02669
         BNO   BADUTME             NO, IEE156I                   Y02669
         CLI   N3(KOPS),BLANK      IS 4TH CHAR A BLANK?          Y02669
         BNE   BADUTME             NO, IEE156I                   Y02669
         B     TRIDIGIT            YES, GO CONVERT 3 DIGITS      Y02669
         SPACE 2
ONEDIGIT EQU   *                                                 Y02669
         MVC   XAX+N7(N1),N0(KOPS) MOVE IN ONE DIGIT TO PACK     Y02669
         B     PACK                                              Y02669
TWODIGIT EQU   *                                                 Y02669
         MVC   XAX+N6(N2),N0(KOPS) MOVE IN TWO DIGITS TO PACK    Y02669
         B     PACK                                              Y02669
TRIDIGIT EQU   *                                                 Y02669
         MVC   XAX+N5(N3),N0(KOPS) MOVE IN THREE DIGITS TO PACK  Y02669
PACK     EQU   *                                                 Y02669
         PACK  XAX+N4(N4),XAX+N4(N4)  PACK THE DIGITS            Y02669
         NI    XAX+N7,SIGN         MAKE FOX A CHARLIE            Y02669
         SR    R15,R15                                           Y02669
         CVB   R15,XAX             CONVERT NUMBER TO BINARY      Y02669
         C     R15,X10             IS VALUE LESS THAN 10?      @ZA07770
         BL    BADUTME             YES-ERROR IEE156I             Y02669
         EJECT
***********************************************************************
*                                                                     *
*    SAVE THE NEW TIME VALUE FOR K T,UTME IN TARGET CONSOLE'S SACB    *
*    IF THERE IS ONE AND IF THERE IS AN ACTIVE TRACK IN IT            *
*            TARSACB  - TO GET THE TARGET CONSOLE'S UCME         Y02669
*            FINDSACB - TO FIND THE SACB WITH TRACK ACTIVE       Y02669
*              IF NO TRACK ACTIVE ON THE SPECIFIED DEVICE:       Y02669
*              'IEE158I K REQUEST INCONSISTENT-NO TRACK ACTIVE'  Y02669
*            FREELOCK - TO RELEASE LOCKS BEFORE SVC'S            Y02669
*   NOTE: ALWAYS RETURN TO SYSTEM WHEN VALUE HAS BEEN STORED          *
*                                                                     *
* NOTE: LOCKS ARE ALWAYS HELD ON ENTRY TO IEE6903D - MUST BE RELEASED *
*       BEFORE RETURNING TO SYSTEM                                    *
***********************************************************************
         SPACE 2
         BAL   RB,TARSACB          FIND TARGET UCME              Y02669
         BAL   RB,FINDSACB         FIND MATCHING SACB            Y02669
         STH   R15,DCMAUTME        STORE TIME VALUE              Y02669
         BAL   RB,FREELOCK         GO FREE LOCKS                 Y02651
         B     RETURN              RETURN TO SYSTEM              Y02669
         EJECT
***********************************************************************
*                                                                     *
*                THE FOLLOWING ARE SUBROUTINES                        *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*                GET TARGET CONSOLE UCME                              *
*                                                                     *
***********************************************************************
         SPACE 2
TARSACB  EQU   *                                                 Y02669
         SR    R1,R1               CLEAR REG
         IC    R1,XASCID           LOAD TARGET CONSOLE ID        Y02669
         BAL   RE,FINDUCME         GET CONSOLE'S UCME            Y02669
         L     RDCMBASE,UCMXB      LOAD POINTER TO RDCM          Y02669
         L     SACBPT,DCMADSDS     LOAD SACB POINTER FROM RDCM   Y02669
         BR    RB                  RETURN
         SPACE 2
***********************************************************************
*                                                                     *
*              FIND AND BASE SOURCE OR TARGET UCME                    *
*                                                                     *
*    INPUT- REG 1 HAD CONSOLE ID RIGHT JUSTIFIED, HIGH ORDER BYTES ZERO
*    OUTPUT- POINTER TO DCMENTRY SPECIFIED BY CONSOLE ID IN UCMEBASE  *
*    REG USAGE-DESTROYS CONTENTS OF: REG 0,1,UCMEBASE                 *
*                                                                     *
***********************************************************************
         SPACE 2
FINDUCME EQU   *                                                 Y02669
         BCTR  R1,ZERO             SUBTRACT ONE FROM CONSOLE ID  Y02669
         L     UCMEBASE,UCMVEA     POINT TO FIRST ENTRY          Y02669
         M     R0,UCMVEZ           MULTIPLY SIZE BY REDUCED ID   Y02669
         AR    UCMEBASE,R1         POINT TO DESIRED UCM ENTRY    Y02669
         BR    RE                  RETURN                        Y02669
         EJECT
***********************************************************************
*                                                                     *
*                       FIND AND BASE SACB                            *
*                                                                     *
*    GIVEN A PARTICULAR CRT CONSOLE THIS SUBROUTINE FINDS AND         *
* BASES THE SCREEN AREA CONTROL BLOCK (SACB) WITH A TRACK ACTIVE.     *
* IF NONE IS FOUND, 'IEE158I K REQUEST INCONSISTENT NO TRACK ACTIVE'  *
* IS ISSUED.                                                          *
*    INPUT -  UCMEBASE - ADDRESS OF UCM ENTRY OF A CRT CONSOLE        *
*    OUTPUT - SACBBASE - ADDRESS OF SACB WITH TRACK ACTIVE            *
*                                                                     *
* ERR - IEE158I REQUEST INCONSISTENT - NO TRACK ACTIVE                *
***********************************************************************
         SPACE 2
FINDSACB EQU   *                                                 Y02669
         TM    DCMASACB,DCMAUSE    DOES SACB DEFINE AN AREA?     Y02669
         BZ    NOTRACK             NO, ERR NO TRACK ACTIVE       Y02669
         TM    DCMADFLG,DCMADD     TRACK ACTIVE IN AREA?         Y02669
         BCR   N1,RB               YES, RETURN                   Y02669
         ICM   SACBPT,N7,DCMACBNX+1  ANY MORE SACBS?             Y02669
         BZ    NOTRACK             NO, ERR NO TRACK ACTIVE       Y02669
         B     FINDSACB            CONTINUE SEARCH               Y02669
         EJECT
***********************************************************************
*                                                                     *
*              GETMAIN WITH LOCKS RELEASED                            *
*                                                                     *
*          GETCORE:  GETS CORE FOR MESSAGE                       Y02669
*          CLEARIT:  BLANKS OUT MESSAGE AREA IN EITHER           Y02669
*                    WTO BUFFER OR DCM INSTRUCTION LINE          Y02669
*  ERR - IEE931I INSUFFICIENT STORAGE FOR COMMAND - IF GETMAIN FAILS  *
*                                                                     *
***********************************************************************
         SPACE 2
GETCORE  EQU   *
         LA    R1,XASAVSTD+N12     AREA FOR STORAGE ADDRESS      Y02669
         MVC   XASAVSTD(N10),GETAREA   MOVE PARM LIST TO XSA     Y02669
         ST    R1,XASAVSTD+N4      WHERE GETMAIN TO STORE ADDR   Y02669
         LA    R1,XASAVSTD         ADDR OF PARM LIST FOR GETMAIN Y02669
         GETMAIN  MF=(E,(1))                                     Y02669
         LTR   R15,R15             TEST RETURN CODE              Y02669
         BNZ   MSG931              IF NOT ZERO;MEANS NO CORE     Y02669
         SPACE
CLEARBUF EQU   *                                                 Y02669
         L     R6,XASAVSTD+N12     LOAD GETMAINED ADDR           Y02669
         LA    R1,N80              LENGTH OF MSG IS ALWAYS 80    Y02669
***********************************************************************
*   INPUT - REGISTER 1 CONTAINS LENGTH OF AREA TO BE CLEARED     Y02669
*           REGISTER 6 POINTS TO BEGINNING OF AREA               Y02669
***********************************************************************
CLEARIT  EQU   *
         MVI   N0(R6),BLANK        CLEAR AREA
         BCTR  R1,N0               BY
         BCTR  R1,N0               DECREMENTING LENGTH  BY 2
         EX    R1,BLANKS           THEN PROPOGATING BLANK
         LR    R1,R6               SAVE THE BEGINNING ADDRESS    Y02669
         BR    RB                  RETURN
         SPACE
GETAREA  GETMAIN EC,LV=N80,A=MSG931,SP=SP229,MF=L                Y02669
         EJECT
***********************************************************************
*                                                                     *
*  THIS IS THE BRANCH ENTRY TO GETMAIN USED WHEN LOCKS NEED TO BE     *
*  HELD.                                                              *
*     REGISTERS DESTROYED: 0, 1, 3, 4, 7, 14, 15                      *
*     INPUT INFORMATION: R4 POINTS TO CURRENT TCB                     *
*                        R7 POINTS TO CURRENT ASCB                    *
*                                                                     *
***********************************************************************
         SPACE 2
GETMAIN  EQU   *
         L     R4,PTRCVT           GET ADDRESS OF CVT            Y02651
         USING CVTSECT,R4          ADDRESSABILITY FOR CVT        Y02651
         L     R4,CVTTCBP          ADDRESS OF IEFPTRS            Y02651
         DROP  R4                                                Y02651
         USING TCBASCB,R4          ADDRESSABILITY FOR IEFPTRS    Y02651
         L     R7,ASCBPTR          ADDRESS OF ASCB FOR INTERFACE Y02651
         L     R4,TCBPTR           ADDRESS OF TCB FOR INTERFACE  Y02651
         GETMAIN RC,LV=N80,SP=SP229,BRANCH=YES                   Y02651
         LTR   R15,R15             WAS IT SUCCESSFUL?            Y02669
         BNZ   MSG931              NO ERROR - NO CODE            Y02669
         ST    R1,XASAVSTD+N12     SAVE ADDR OF CORE             Y02669
         B     CLEARBUF            GO CLEAR AREA JUST GOTTEN     Y02669
         EJECT
***********************************************************************
*                                                                     *
*             THIS CODE WILL CONVERT HEX TO EBCDIC               Y02669
*                                                                     *
***********************************************************************
         SPACE 2
FINDUTME EQU   *                                                 Y02669
         LH    R5,DCMAUTME         LOAD UTME VALUE               Y02669
         CVD   R5,XAX              CONVERT TO DECIMAL            Y02669
         UNPK  XAX(N3),XAX+N6(N2)  UNPACK NUMBER                 Y02669
         OI    XAX+N2,DIGIT        FIX SIGN                      Y02669
         BR    RB                  RETURN                        Y02669
         SPACE 2
CONVERT  EQU   *
         SR    R4,R4               CLEAR REG                     Y02669
         IC    R4,XASCID           GET TARGET CONSOLE ID         Y02669
EBCDIC   EQU   *
         CVD   R4,XAX              CONVERT TO DECIMAL            Y02669
         UNPK  XAX(N3),XAX+N6(N2)  UNPACK NUMBER                 Y02669
         OI    XAX+N2,DIGIT        FIX SIGN                      Y02669
         BR    R5                  RETURN                        Y02669
         EJECT
***********************************************************************
*                                                                     *
*        FILL IS DESCRIPTOR, ROUTING CODES AND MCSFLAGS          Y02669
*                  ISSUE WTO AND RETURN                          Y02669
*   INPUT - REGISTER 1 POINTS TO BEGINNING OF WTO BUFFER         Y02669
*           REGISTER 6 POINTS TO END OF WTO BUFFER               Y02669
*                                                                     *
***********************************************************************
         SPACE 2
WRTWTO   EQU   *                                                 Y02669
         MVC   N0(N4,R6),DESCR     MOVE DESCRIPTOR CODE IN AREA  Y02669
         SR    R6,R1               GET LENGTH OF MSG             Y02669
         STH   R6,N0(R1)           STORE FOR WTO                 Y02669
         MVI   N2(R1),MCSMASK      ID PASSED AND QUEUE BY ID     Y02669
         MVI   N3(R1),N0           ZERO SECOND MSCFLGS BYTE      Y02669
         SR    R0,R0               CLEAR REG                     Y02669
         IC    R0,XAU              LOAD SOURCE DEVICE ID         Y02669
         WTO   MF=(E,(1))                                        Y02669
         BR    RB                  RETURN                        Y02669
         EJECT
***********************************************************************
*                                                                     *
*                FREEMAIN WTO PARAMETER LIST                     Y02669
*        INPUT - REGISTER 1 POINTS TO AREA TO BE FREED           Y02669
*                                                                     *
***********************************************************************
         SPACE 2
FREE     EQU   *
         FREEMAIN R,LV=N80,A=(1),SP=SP229                        Y02669
         BR    RB                  RETURN                        Y02669
         EJECT
***********************************************************************
*                                                                     *
*       TO MOVE MESSAGE TEXT INTO DCM INSTRUCTION LINE                *
*       OR GETMAINED AREA                                             *
*         EBCDIC  - TO CONVERT TO EBCDIC                              *
*         CONVERT - TO GET CONSOLE ID                                 *
*       MOVEINKA - ENTRY POINT FOR IEE929I                            *
*       MOVEINLL - ENTRY POINT FOR IEE928I                            *
*                                                                     *
***********************************************************************
         SPACE 2
MOVEINKA EQU   *                                                 Y02669
         MVC   N0(N4,R6),KANONE    MOVE  MSG NO. ID ( K A,)      Y02669
         LA    R6,N4(R6)           BUMP MSG POINTER PAST MSG NO. Y02669
         LTR   SACBPT,SACBPT       ANY AREA'S DEFINED BY K A,LL? Y02669
         BZ    NONERTN             NO--INSERT 'NONE'             Y02669
         SR    R4,R4               CLEAR REG                     Y02669
NXTSACB  EQU   *                                                 Y02669
         TM    DCMASACB,DCMAUSE    AREA DEFINED HERE?            Y02669
         BZ    ANYSACB             NO--CHK NEXT SACB             Y02669
         IC    R4,DCMALN+N1        LOAD LENGTH OF AREA           Y02669
         BAL   R5,EBCDIC           GO CONVERT TO EBCDIC          Y02669
         MVC   N0(N2,R6),XAX+N1    MOVE LL INTO MESSAGE          Y02669
         MVI   N2(R6),COMMA        MOVE IN COMMA AFTER AREA ID   Y02669
         LA    R6,N3(R6)           BUMP MESSAGE POINTER          Y02669
         ICM   SACBPT,N7,DCMACBNX+1  GET POINTER TO NEXT SACB    Y02669
         BNZ   NXTSACB             ANY MORE? YES-KEEP ON LOOPING Y02669
         B     ANYSACB             NO, SEE IF THERE WERE ANY     Y02669
         SPACE 3
MOVEINLL EQU   *                                                 Y02669
         L     SACBPT,DCMADSDS     GET ADDRESS OF FIRST SACB     Y02669
         LTR   SACBPT,SACBPT       ANY AREA'S DEFINED BY K A,LL? Y02669
         BZ    NONERTN             NO--INSERT 'NONE'             Y02669
         SR    R4,R4               CLEAR REG                     Y02669
NEXTSACB EQU   *                                                 Y02669
         TM    DCMASACB,DCMAUSE    AREA DEFINED HERE?            Y02669
         BZ    ANYSACB             NO--CHK NEXT SACB             Y02669
         LA    R4,N1(R4)           BUMP COUNTER                  Y02669
         MVC   N0(N1,R6),DCMAID    YES,MOVE AREA ID INTO MESSAGE Y02669
         MVI   N1(R6),COMMA        MOVE IN COMMA AFTER AREA ID   Y02669
         LA    R6,N2(R6)           BUMP MESSAGE POINTER          Y02669
NEXTBLK  EQU   *                                                 Y02669
         ICM   SACBPT,N7,DCMACBNX+1  GET POINTER TO NEXT SACB    Y02669
         BNZ   NEXTSACB            IF THERE IS ONE KEEP LOOPING  Y02669
         EJECT
ANYSACB  EQU   *                                                 Y02669
         LTR   R4,R4               ANY SACBS AT ALL?             Y02669
         BZ    NONERTN             NO, INDICATE 'NONE' IN MESSAGEY02669
         BCTR  R6,N0               YES, BLANK OUT LAST COMMA     Y02669
         MVI   N0(R6),BLANK                                      Y02669
         B     FINIT               FINISH MESSAGE                Y02669
NONERTN  EQU   *                                                 Y02669
         MVC   N0(N4,R6),KANONE+N4 MOVE IN WORD 'NONE'           Y02669
         LA    R6,N4(R6)           BUMP MSG LENGTH               Y02669
         SPACE 2
FINIT    EQU   *
         BAL   R5,CONVERT          GO CONVERT CC TO EBCDIC
         BR    RB                  RETURN                        Y02669
         EJECT
***********************************************************************
*                                                                     *
*   CMS AND LOCAL LOCKS ARE ALWAYS HELD ON ENTRY TO IEE6903D.    Y02651
*   THEY MUST BE RELEASED BEFORE ISSUING SVC'S ( UNLESS BRANCH   Y02651
*   ENTRY IS USED) OR RETURNING.                                 Y02651
*                                                                     *
***********************************************************************
         SPACE 3
FREELOCK EQU   *                                                 Y02651
         STM   RB,RE,XASAVLOC         SAVE REGS AROUND SETLOCK   Y02651
         SETLOCK RELEASE,TYPE=CMS,RELATED=(K,IEE7503D(LOCKSET))
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(K,IEE7503D(LOCKSET))
         LM    RB,RE,XASAVLOC         RESTORE REGS AFTER SETLOCK Y02651
         NI    XASSDS,XFF-XASSDS5     INDICATE NO LOCKS HELD     Y02651
         BR    RB                     RETURN                     Y02651
         EJECT
**********************************************************************
*                                                                    *
*                       NORMAL EXITS                                 *
*                                                                    *
**********************************************************************
         SPACE 2
RETURN   EQU   *                                                 Y02669
         L     RE,XAP              RESTORE RETURN REG            Y02669
         BR    RE                  GO BACK TO SYSTEM             Y02669
         SPACE 2
**********************************************************************
*                                                                    *
*                       ERROR EXITS                                  *
*                                                                    *
**********************************************************************
         SPACE 2
NOTRACK  EQU   *                                                 Y02669
         MVI   XAE,IEE158I         INDICATE REQUEST INCONSISTENT Y02669
         MVI   XASTSAVE,IEE158     INDICATE NO TRACK ACTIVE      Y02669
         B     STOREOP             STORE ADDRESS OF T            Y02669
         SPACE 2
MSG931   EQU   *                                                 Y02669
         MVI   XAE,IEE931I         CORE NOT AVAILABLE            Y02669
         B     STOREOP             GO TO PUT OUT MSG             Y02669
         SPACE  2
ERROR    EQU   *                                                 Y02669
         MVI   XAE,IEE924I         SET ON MAJOR FLAG BIT         Y02669
         MVI   XASTSAVE,IEE924     DISPLAY IN OR ABOVE AREA      Y02669
         B     STOREOP                                           Y02669
         SPACE 2
BADUTME  EQU   *                                                 Y02669
         SPACE 2
BADKOP   EQU   *                                                 Y02669
         MVI   XAE,IEE156I         NONE OF ABOVE,SO ITS BAD      Y02669
         STCM  KOPS,N7,XASOPTR     GET CURRENT ADDR OF OPERAND   Y02669
         B     D5603D              EXIT TO MSG MODULE            Y02669
         SPACE 2
STOREOP  EQU   *                                                 Y02669
         MVC   XASOPTR(N3),XASAVSTD+N33  SAVE OPERAND POINTER    Y02669
D5603D   EQU   *                                                 Y02669
         L     RE,XAP              RESTORE RETURN REG ADDR       Y02669
         L     R15,VCON5603                                      Y02669
         BR    R15                                               Y02669
         EJECT
***********************************************************************
*                                                                     *
*                         CONSTANTS                                   *
*                                                                     *
***********************************************************************
BLANKS   MVC   N1(N0,R6),N0(R6)    FILL WITH BLANKS
         DS    0F
FOUR     DC    H'4'                CONSTANT                      Y02669
ELEVEN   DC    H'11'               CONSTANT
X10      DC    F'10'               CONSTANT                    @ZA07770
VCON0503 DC    V(IEE0503D)                                       Y02669
VCON5603 DC    V(IEE5603D)                                       Y02669
IEE928I  DC    CL45'IEE928I DISPLAY AREA ID''S FOR CONSOLE CC ARE'
IEE929I  DC    C'IEE929I '
IEE922I  DC    C'IEE922I'                                        Y02669
LEQUALS  DC    C',L='                                            Y02669
KA       DC    C'A '
KAREF    DC    C'A,REF '
KANONE   DC    C'K A,NONE '                                      Y02669
KT       DC    C'T '                                             Y02669
KTREF    DC    C'T,REF '                                         Y02669
KTUTME   DC    C'K T,UTME='                                      Y02669
DESCR    DC    B'00001000000000000000000000000000' DESCRIPTOR CODE+RT
         SPACE 2
***********************************************************************
*                                                                     *
*                          PATCH AREA                                 *
*                                                                     *
***********************************************************************
PATCH1   DC    C'***PATCH AREA***'
PATCH2   DC    C'IEE6903D-TEST'
PATCH3   DC    36C' '
         EJECT
         IEETDCM                                                 Y01012
         EJECT
         IEECUCM FORMAT=NEW
         EJECT
         IEERDCM
         EJECT
FAUXSA   DSECT
         IEEXSA
         EJECT
CVTSECT  DSECT
         CVT
         EJECT
         IEFPTRS
         EJECT
         IHAPSA
         END
