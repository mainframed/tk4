         TITLE 'IEE0703D--STOP AND MODIFY COMMANDS'
***********************************************************************
*                                                                     *
*  MODULE NAME =  IEE0703D                                       Y02669
*                                                                     *
*  DESCRIPTIVE NAME =  MODIFY AND STOP COMMAND HANDLER           Y02669
*
*  COPYRIGHT =  NONE                                             Y02669
*
*  STATUS =  OS/VS2 - RELEASE 2                                  Y02669
*
*  FUNCTION =                                                    Y02669
*   PROCESS MODIFY AND NON-PERIODIC STOP COMMANDS, BOTH OF WHICH      *
*   INVOLVE SEARCHING THE CSCB FOR CONTROL ELEMENTS. THIS MODULE      *
*   PERFORMS POSITIVE SYNTAX CHECKING, MARKS CHAIN ELEMENTS, POSTS    *
*   APPROPRIATE ECB'S, AS WELL AS BUILDING AND CHAINING CIBS.    Y02669
*                                                                     *
*     OPERATION =                                                Y02669
*        1.  OPERAND SYNTAX IS CHECKED.                          Y02669
*            STOP  -  ONLY 'TASKNAME' OR 'PROCNAME.TASKNAME',    Y02669
*                     DELIMITED BY A BLANK OR END OF BUFFER, ARE Y02669
*                     PERMITTED.                                 Y02669
*            MODIFY - THE FIRST OPERAND MUST BE 'TASKNAME' OR    Y02669
*                     'PROCNAME.TASKNAME', DELIMITED BY A COMMA. Y02669
*            IF THESE CONDITIONS ARE NOT MET, CONTROL WILL PASS  Y02669
*            TO THE MESSAGE MODULE TO ISSUE THE MESSAGES         Y02669
*            AT THE ERROR EXITS.                                 Y02669
*
*        2.  ENQ EXCLUSIVE ON THE CSCB CHAIN AND SEARCH CHAIN    Y02669
*            FOR CSCB CORRESPONDING TO THE NAME SPECIFIED ON THE Y02669
*            COMMAND.  THE DETAILS OF THIS SCAN APPEAR IN THE    Y02669
*            BLOCK COMMENT IMMEDIATELY PRECEEDING THE SCAN.  IF  Y02669
*            NO SUCH CSCB IS FOUND, CONTROL IS PASSED TO THE     Y02669
*            MESSAGE MODULE TO ISSUE THE MESSAGE INDICATED AT    Y02669
*            THE ERROR EXIT.                                     Y02669
*
*        3. IF THE CSCB IS FOUND, A COMMAND INPUT BUFFER (CIB)   Y02669
*           IS CONSTRUCTED IN SUBPOOL 245 TO CONTAIN THE COMMAND Y02669
*           OPERANDS, THE COMMAND CODE, AND THE CONSOLE ID.  IT  Y02669
*           IS CHAINED TO THE CSCB, UNLESS DOING SO WOULD CAUSE  Y02669
*           THE CIB COUNT IN THE CSCB TO BE EXCEEDED. THIS WOULD Y02669
*           INDICATE THAT THE NUMBER OF OUTSTANDING MODIFIES AC- Y02669
*           CEPTED BY THIS JOB WOULD BE EXCEEDED.  THE CIB,      Y02669
*           THEREFORE, IS NOT CHAINED.  THE SEARCH OF THE CSCB   Y02669
*           CHAIN THEN CONTINUES UNTIL THE CHAIN IS EXHAUSTED.   Y02669
*           A STOP CIB IS CHAINED UNCONDITIONALLY.               Y02669
*
*        4.  POST THE STOP/MODIFY ECB IN THE CSCB AND SCAN FOR   Y02669
*            THE NEXT CSCB. WHEN ALL CSCBS ON THE CHAIN HAVE     Y02669
*            BEEN EXAMINED AND PROCESSED, IF NECESSARY, DEQ OFF  Y02669
*            THE CSCB CHAIN RESOURCE. CONTROL THEN RETURNS TO    Y02669
*            THE CALLER.                                         Y02669
*
*        5.  IF THE CONDITIONAL GETMAIN FOR THE CIB FAILS,       Y02669
*            CONTROL WILL PASS TO THE APPROPRIATE ERROR EXIT.    Y02669
*
*  NOTES =                                                       Y02669
*          BECAUSE OF THE IMPLEMENTATION OF THE MASTER SUBSYSTEM Y02669
*          IN OS/VS2-2, ALL REFERENCES TO THE GROUP CONTROL      Y02669
*          BLOCK (GCB) HAVE BEEN REMOVED FROM THIS MODULE.       Y02669
*
*          THIS MODULE FORMERLY PROCESSED PERIODIC STOP COMMANDS Y02669
*          IN ADDITION TO ITS PRESENT FUNCTIONS.  AS OF RELEASE  Y02669
*          18, PERIODIC STOP COMMANDS WERE PROCESSED IN MODULE   Y02669
*          IEE4503D AND NON-PERIODIC STOP COMMANDS WERE SYNTAX   Y02669
*          CHECKED IN THE SAME MODULE.  IN 0S/VS2-2, IEE4503D    Y02669
*          WAS SPLIT, AS IT NO LONGER HAD TO RUN IN A 1K         Y02669
*          TRANSIENT AREA.  IN OS/VS2-2, THEREFORE, NON-PERIODIC Y02669
*          STOP AND MODIFY COMMANDS ARE SYNTAX CHECKED AND       Y02669
*          PROCESSED IN IEE0703D, WHILE PERIODIC COMMANDS ARE    Y02669
*          PROCESSED IN IEE5503D.  IEE4503D NO LONGER EXISTS IN  Y02669
*          OS/VS2-2.                                             Y02669
*
*     CHARACTER CODE DEPENDENCIES =                              Y02669
*          THIS MODULE HAS BEEN CODED IN SUCH A WAY THAT IF THE  Y02669
*          EXTERNAL CHARACTER SET IS CHANGED FROM EBCDIC,        Y02669
*          REASSEMBLY WILL YIELD A VALID MODULE.                 Y02669
*
*     DEPENDENCIES = CROSS MEMORY POST, ENQ, DEQ, GETMAIN,       Y02669
*                    FREEMAIN, SYSEVENT                          Y02669
*                    FIB (SVC 100) - TO PREVENT MODIFY FROM      Y02669
*                    BEING ISSUED FROM A TIME-SHARING TERMINAL   Y02669
*                    IN OPERATOR MODE.                           Y02669
*
*     RESTRICTIONS =  THIS MODULE EXPECTS REGISTER TWO TO        Y02669
*                     CONTAIN THE ADDRESS OF THE EXTENDED SAVE   Y02669
*                     AREA.                                      Y02669
*
*     REGISTER CONVENTIONS =                                     Y02669
*                  REGISTER 0       POST CODE REGISTER           Y02669
*                  REGISTER 9       ADDRESS OF COMMAND OPERANDS  Y02669
*                  REGISTER 10      ADDRESS OF MASTER RESIDENT   Y02669
*                                   CORE (IEEBASEA)              Y02669
*                  REGISTER 11      ADDRESS OF CSCB              Y02669
*                  REGISTER 12      MODULE BASE                  Y02669
*                  REGISTER 14      RETURN ADDRESS               Y02669
*                  REGISTER 15      BRANCH ADDRESS OF SUCCESSOR  Y02669
*
*     PATCH-LABEL =  PATCH                                       Y02669
*
*  MODULE-TYPE =  CSECT                                          Y02669
*
*     PROCESSOR =  ASSEMBLER                                     Y02669
*
*     MODULE-SIZE =                                              Y02669
*
*     ATTRIBUTES =                                               Y02669
*                 PAGED LPA                 REENTRANT            Y02669
*                 ZERO PSW PROTECT KEY      REUSABLE             Y02669
*                 SUPERVISOR MODE           REFRESHABLE          Y02669
*
*  ENTRY POINT =  IEE0703D, FROM IEE0403D                        Y02669
*
*     PURPOSE =  TO SCHEDULE EXECUTION OF A STOP OR A MODIFY     Y02669
*                COMMAND BY BUILDING A CIB, CHAINING IT TO THE   Y02669
*                CSCB CORRESPONDING TO THE SPECIFIED TASK, AND   Y02669
*                POSTING THE STOP/MODIFY ECB IN THAT CSCB.       Y02669
*
*     LINKAGE =  REGISTER TWO CONTAINS THE ADDRESS OF AN XSA     Y02669
*                INITIALIZED AS FOLLOWS:                         Y02669
*                  XAR POINTS TO THE COMMAND BUFFER.                  *
*                  XAN CONTAINS THE VERB CODE.                        *
*                  XAL POINTS TO THE COMMAND PARAMETER LIST.          *
*                  XAV CONTAINS THE VERB IN EBCDIC.                   *
*                  XAA CONTAINS THE ASID                         Y02669
*                                                                     *
*     INPUT DATA =  AS DESCRIBED ABOVE                           Y02669
*
*     REGISTERS SAVED =  NONE                                    Y02669
*
*     REGISTER CONTENTS DURING PROCESSING =                      Y02669
*                       SEE REGISTER CONVENTIONS                 Y02669
*
*     REGISTERS RESTORED =  NONE                                 Y02669
*
*  EXIT-NORMAL =  GOBACK                                         Y02669
*     CONDITIONS =  PROCESSING COMPLETED SUCCESSFULLY            Y02669
*                   EXIT TAKEN VIA BRANCH TO THE ADDRESS IN      Y02669
*                   REGISTER 14.                                 Y02669
*
*     OUTPUT DATA =  CIB, CHAINED TO POSTED CSCB.                Y02669
*
*     RETURN CODES =  REGISTER 15 IS SET TO ZERO                 Y02669
*
*  EXIT-ERROR =  CMERR8                                          Y02669
*     CONDITIONS =  EITHER PROCNAME OR TASKNAME EXCEEDS EIGHT    Y02669
*                   CHARACTERS, OR A PARAMETER OTHER THAN THESE  Y02669
*                   APPEARS ON STOP.                             Y02669
*                   EXIT TO MESSAGE MODULE (IEE0503D) VIA BRANCH Y02669
*                   ON VCON TO ISSUE MESSAGE IEE308I.            Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*                    XAE     MESSAGE CODE X'08'                  Y02669
*                    XAV     COMMAND VERB                        Y02669
*                    XAU     CONSOLE ID FOR WTO                  Y02669
*                    XAA     ASID FOR TPUT                       Y02669
*
*     RETURN CODES =  REGISTER 15 IS SET TO FOUR.                Y02669
*
*  EXIT-ERROR =  CMERRC                                          Y02669
*     CONDITIONS =  NO OPERANDS APPEAR ON THE COMMAND, OR ON     Y02669
*                   MODIFY, ONLY TASKNAME (OR PROCNAME.TASKNAME) Y02669
*                   APPEARS.                                     Y02669
*                   EXIT TO MESSAGE MODULE (IEE0503D) VIA BRANCH Y02669
*                   ON VCON TO ISSUE MESSAGE IEE311I.            Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*                    XAE     MESSAGE CODE X'0B'                  Y02669
*                    XAV     COMMAND VERB                        Y02669
*                    XAU     CONSOLE ID FOR WTO                  Y02669
*                    XAA     ASID FOR TPUT                       Y02669
*
*     RETURN CODES =  REGISTER 15 IS SET TO FOUR.                Y02669
*
*  EXIT-ERROR =  CMERR36                                         Y02669
*     CONDITIONS =  SPECIFIED TASK HAS NO CSCB, AND IS, THUS,    Y02669
*                   NOT ACTIVE.                                  Y02669
*                   EXIT TO MESSAGE MODULE (IEE0503D) VIA BRANCH Y02669
*                   ON VCON TO ISSUE MESSAGE IEE341I.            Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*                    XAE     MESSAGE CODE X'24'                  Y02669
*                    XAV     TASK NAME                           Y02669
*                    XAU     CONSOLE ID FOR WTO                  Y02669
*                    XAA     ASID FOR TPUT                       Y02669
*
*     RETURN CODES =  REGISTER 15 IS SET TO FOUR.                Y02669
*
*  EXIT-ERROR =  CMERR37                                         Y02669
*     CONDITIONS =  COMMAND NOT EXECUTED, FOR ALL CSCB'S WITH    Y02669
*                   APPROPRIATE NAME HAVE REACHED THEIR MAXIMUM  Y02669
*                   CIB COUNT.  SINCE STOP CIB'S ARE CHAINED     Y02669
*                   UNCONDITIONALLY, THIS MESSAGE APPLIES ONLY   Y02669
*                   TO MODIFY.                                   Y02669
*                   THIS MESSAGE IS ALSO ISSUED IF AN ATTEMPT IS Y02669
*                   MADE TO STOP OR MODIFY A TASK CREATED IN     Y02669
*                   RESPONSE TO A MOUNT COMMAND.                 Y02669
*                   EXIT TO MESSAGE MODULE (IEE0503D) VIA BRANCH Y02669
*                   ON VCON TO ISSUE MESSAGE IEE342I.            Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*                    XAE     MESSAGE CODE X'25'                  Y02669
*                    XAV     COMMAND VERB                        Y02669
*                    XAU     CONSOLE ID FOR WTO                  Y02669
*                    XAA     ASID FOR TPUT                       Y02669
*
*
*     RETURN CODES =  REGISTER 15 IS SET TO FOUR.                Y02669
*
*  EXTERNAL REFERENCES =                                         Y02669
*
*     REFERENCES =  IEE0503D  MESSAGE MODULE                     Y02669
*
*     DATA AREAS =  25 BYTE ENQ/DEQ PRARMETER LIST IN SP 255     Y02669
*
*     CONTROL BLOCKS =                                           Y02669
*             XSA     USED                                       Y02669
*             CSCB    USED                                       Y02669
*             BASEA   USED                                       Y02669
*             CIB     CREATED                                    Y02669
*             ASVT    USED                                       Y02657
*
*     TABLES =                                                   Y02669
*
*     MACROS =  IEECHAIN, IEEBASEA, IEEXSA, IEZCIB, CVT,         Y02669
*               GETMAIN, FREEMAIN, ENQ, DEQ, MODID, SYSEVENT     Y02669
*               IHAASVT                                          Y02657
*
*     ENQUEUE RESOURCES =       QNAME             RNAME          Y02669
*                               SYSIEFSD          Q10            Y02669
*
*     CHANGE LEVEL =  Y02651, Y02657, Y02669                     Y02669
*
*  MESSAGES =                                                    Y02669
*        CODE                   TEXT                             Y02669
*        X'08'          IEE308I  (VERB)      TERM LENGTH ERROR   Y02669
*        X'0B'          IEE311I  (VERB)      PARAMETER MISSING   Y02669
*        X'24'          IEE341I  (TASKNAME)  NOT ACTIVE          Y02669
*        X'25'          IEE342I  (VERB)      REJECTED-TASK BUSY  Y02669
*                                                                     *
*        ALL MESSAGES CONTAINED IN AND ISSUED BY IEE0503D.       Y02669
*                                                                     *
*  SYSGEN =  THIS MODULE IS IN LOAD MODULE IGC0003D IN           Y02669
*            SYS1.LPALIB.  IT IS INCLUDED AT SYSGEN FROM DLIB    Y02669
*            AOSB3 BY SYSGEN MACRO SGIEF441.                     Y02669
*
*  SYSTEM LIBRARIES =  THIS MODULE MAKES REFERENCE TO NO SYSTEM  Y02669
*                      LIBRARIES.                                Y02669
*                                                                     *
***********************************************************************
         EJECT
**************************************************************** Y02669
*
*        REGISTER EQUATES                                        Y02669
*
**************************************************************** Y02669
         SPACE 2
IEE0703D CSECT
R0       EQU   0                             POST CODE REG
R1       EQU   1
R2       EQU   2                             XSA BASE
R3       EQU   3                             WORK
R4       EQU   4                             ECB POINTER
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                             DATA POINTER
R10      EQU   10                            MASTER RESIDENT CORE
R11      EQU   11                            CSCB POINTER
R12      EQU   12                            MODULE BASE
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
**************************************************************** Y02669
*
*        EQUATES FOR LENGTHS, OFFSETS, AND CONSTANTS             Y02669
*
**************************************************************** Y02669
         SPACE 2
D0       EQU   0                                                  20030
D1       EQU   1                                                  20030
D2       EQU   2                                                  20030
D3       EQU   3                                                    O99
D4       EQU   4                                                  20030
D5       EQU   5                                                 Y02669
D7       EQU   7                                                  20030
D8       EQU   8                                                  20030
D9       EQU   9                                                 Y02669
D24      EQU   24                                                 20030
D255     EQU   255                                                20030
ZERO     EQU   X'00'                                              20030
X28      EQU   28                                                 20030
XFF      EQU   X'FF'                                              20030
BLANK    EQU   C' '               CHARACTER BLANK                Y02669
COMMA    EQU   C','               CHARACTER COMMA                Y02669
PERIOD   EQU   C'.'               CHARACTER PERIOD               Y02669
SUBCIB   EQU   245                SUBPOOL FOR CIB                Y02669
         SPACE
* VERB CODES FOR THIS MODULE                                          *
STOPCOD  EQU   64                  STOP CODE                     Y02669
MODCOD   EQU   68                  MODIFY CODE                   Y02669
MTERR    EQU   X'0C'               MOUNT CODE                     24131
* POST CODES FOR THIS MODULE                                     Y02669
CMMDCODE EQU   X'08'               MODIFY NON GROUP POST CODE
CMSTCODE EQU   X'10'               STOP NON GROUP POST CODE
* ERROR CODES FOR MESSAGE MODULE                                      *
CMCD05   EQU   5                             INVALID COMMAND     Y02669
CMCD08   EQU   8                             TERM LENGTH ERROR
CMCD0B   EQU   11                            PARAMETER MISSING
CMCD36   EQU   36                            TASK NOT FOUND
CMCD37   EQU   37                            MODIFY NOT PROCESSED
CMCD58   EQU   58                            COMMAND ABORTED     Y02669
         EJECT
* ENTRY ROUTINE - THIS PORTION OF CODE ESTABLISHES ADDRESSABILITY FOR *
*   THE PROGRAM AND THE VARIOUS DSECTS, SETS UP THE EXTENDED SAVE AREA*
*                                                                     *
         BALR  R12,0              ESTABLISH ADDRESSABILITY
         USING *,R12              FOR PROGRAM
         MODID BRANCH=YES                                        Y01886
         USING XSA,R2             FOR XSA
         L     R3,CVTPTR                                          20030
         USING CVT,R3                                             20030
         L     R10,CVTMSER                                        20030
         DROP  R3                 DROP CVT ADDRESSABILITY        Y02657
         USING BASE,R10           FOR MASTER CORE
         L     R11,BACHN          BASE FOR CHAIN IS R11
         USING CMCHAIN,R11
* SEE IF POINTER TO COMMAND OPERANDS IS ZERO. ERROR IF SO.       Y02669
         L     R9,XAL             PNTR TO COMMAND OPERANDS       Y02669
         LA    R9,D0(R9)          CLEAR HI ORDER BYTE            Y02669
         LTR   R9,R9              ANY PARMS                      Y02669
         BZ    CMERRC             NO. PARAM MISSING ERROR        Y02669
* ACCESS LENGTH INDICATOR OF COMMAND BUFFER TO CALCULATE ADDRESS Y02669
* OF END OF COMMAND BUFFER.  STORE THIS ADDRESS IN XSA.          Y02669
         L     R7,XAR             PNTR TO LNGTH INDICATOR        Y02669
         LA    R7,D0(R7)          CLEAR HI ORDER BYTE            Y02669
         LH    R6,D0(R7)          GET LENGTH                     Y02669
         AR    R7,R6              GET ADDRS END OF CIB           Y02669
         ST    R7,XAP             SAVE IN XSA                    Y02669
         MVI   XAX,BLANK          JOBNAME HOLDING AREA           Y02669
         MVC   XAX+D1(D7),XAX     IS PADDED WITH BLANKS          Y02669
         MVC   XAS(D8),XAX        XAS AS WELL                    Y02669
CMSTTASK EQU   *                                                 Y02669
         LR    R7,R9              PARAMETER AREA PTR             Y02669
         LA    R3,D9              MAX LENGTH INDICATOR           Y02669
         EJECT
**************************************************************** Y02669
*                                                                Y02669
*   THE SYNTAX CHECK ROUTINE CHECKS FOR A STOP OR MODIFY COMMAND Y02669
*   WITH EITHER A TASKNAME OR A PROCNAME IN ONE OF THE FOLLOWING Y02669
*   FORMATS WHERE A IS PROCNAME AND B IS TASKNAME.               Y02669
*   (1) P A (2) P B (3) P A, (4) P B, (5) P A.B                  Y02669
*   (6) P A.B,                                                   Y02669
*   IN ADDITION, ON THE MODIFY COMMAND, A BLANK AFTER THE FIRST  Y02669
*   OPERAND IS INVALID AND THE PARM MISSING ERROR MSG IS         Y02669
*   ISSUED. IF THE PROCNAME IS SPECIFIED AS WELL AS THE TASK-    Y02669
*   NAME, THE PROCNAME IS MOVED TO XAS AND THE TASKNAME IS       Y02669
*   MOVED TO XAV AND XAX.  IF ONLY ONE OF THE TWO IS SPECIFIED   Y02669
*   IT IS PLACED IN XAV AND XAX.  IN THE CSCB SEARCH ROUTINE     Y02669
*   THESE FIELDS ARE USED AS COMPARANDS IN THE SCAN AGAINST      Y02669
*   CHKEY (OR CHUNIT) AND CHCLS.                                 Y02669
*                                                                Y02669
**************************************************************** Y02669
CMSTNEXT EQU   *                                                 Y02669
         C     R7,XAP             HAS END OF BUFFER BEEN REACHED Y02669
         BE    MDFYTEST           YES. TEST FOR MODIFY COMMAND   Y02669
         CLI   D0(R7),BLANK       IS CHARACTER A BLANK           Y02669
         BE    MDFYTEST           YES. TEST FOR MODIFY           Y02669
         CLI   D0(R7),COMMA       IS CHAR A COMMA                Y02669
         BE    STOPTST            YES, TEST FOR STOP COMMAND     Y02669
         CLI   D0(R7),PERIOD      IS CHAR A PERIOD               Y02669
         BE    CMPRCNME           YES. MOVE PARM TO XSA          Y02669
         LA    R7,D1(R7)          INCREMENT PTR                  Y02669
         BCT   R3,CMSTNEXT        TEST NEXT CHARACTER            Y02669
         B     CMERR8             TERM LENGTH ERROR              Y02669
STOPTST  EQU   *                                                 Y02669
         CLI   XAN,STOPCOD        STOP COMMAND                   Y02669
         BE    CMERR8             YES, TERM LENGTH ERROR -  NO   Y02669
*                                 OPERANDS ALLOWED AFTER NAME    Y02669
         B     CMTSKNME           NO, MOVE TASKNAME TO XSA       Y02669
MDFYTEST EQU   *                                                 Y02669
         CLI   XAN,MODCOD         MODIFY COMMAND                 Y02669
         BE    CMERRC             YES. PARM MISSING-ERROR        Y02669
CMTSKNME EQU   *                                                 Y02669
         LA    R4,D8              NAME LENGTH                    Y02669
         SR    R4,R3              TEST FOR LENGTH ERROR          Y02669
         EX    R4,CMMVCX          MOVE TASKNAME TO XAX           Y02669
         MVC   XAV(D8),XAX        MOVE TASKNAME TO XAV           Y02669
         LA    R7,D1(R7)          INCREMENT PTR                  Y02669
         C     R7,XAP             PAST END OF BUFFER?            Y02669
         BL    CMST1              NO, CONTINUE PROCESSING        Y02669
         BCTR  R7,0               YES, BRING OPERAND POINTER     Y02669
*                                 BACK INTO BUFFER               Y02669
         B     CMST1              CONTINUE PROCESSING            Y02669
CMPRCNME EQU   *                                                 Y02669
         CLI   XAX,BLANK          HAS PROCNAME BEEN RECEIVED     Y02669
         BNE   CMERR8             YES, TERM LENGTH ERROR         Y02669
         LA    R4,D8              PROCNAME LENGTH CHECK          Y02669
         SR    R4,R3              EXCEED MAXIMUM?                Y02669
         BM    CMERR8             TERM LENGTH ERROR              Y02669
         EX    R4,CMMVCY          MOVE PROCNAME TO XAS           Y02669
         LA    R7,D1(R7)          UPDATE TO NEXT CHAR            Y02669
         LR    R9,R7              POINT TO TASKNAME              Y02669
         B     CMSTTASK           RETURN TO SCAN                 Y02669
         EJECT
**********************************************************************
*
* CSCB SCAN ROUTINE SCANS CSCB CHAIN STARTING WITH PTR IN R11,     I272
* SEARCHING 1ST FOR EQUAL ON CHKEY AND TASKNAME IN XAX AND, IF     I272
* NO MATCH, THEN FOR EQUAL ON CHUNIT AND TASKNAME. CSCB NOT        I272
* FOUND RESULTS IN AN ERROR MESSAGE.                               I272
*
* THE CSCB CHAIN RESOURCE IS SERIALIZED VIA ENQ ON Q10. THE      Y02651
* RESOURCE IS RELEASED IN SUBROUTINE CMDEQ.                      Y02651
*
* THE HOLDER OF THE CSCB ENQ MUST BE NON-SWAPPABLE TO PREVENT    Y02651
* SWAP OUT WHILE HOLDING THE RESOURCE, WITH THE PERFORMANCE      Y02651
* DEGRADATION WHICH WOULD RESULT WHEN ANOTHER ENQ IS ISSUED TO   Y02651
* OBTAIN THE RESOURCE.                                           Y02651
**********************************************************************
CMST1    EQU   *
         SYSEVENT DONTSWAP        DON'T SWAP CURRENT MEMORY      Y02651
         MVC   XASAVSTD(LNE),ENQCSCB MOVE IN ENQ PARM LIST       Y02651
         ENQ   MF=(E,XASAVSTD)    RESERVE CSCB CHAIN             Y02651
         SPACE 2
         MVI   XAE,ZERO            CLEAR EXIT CONDITION SWITCH   Y02669
*                                  BYTE                          Y02669
CMSCAN1  LTR   R11,R11             END OF CSCB CHAIN               I272
         BZ    CMFAIL              YES. CHECK FOR POSTED CSCB      I272
         TM    CHSTS,CHAP          ASSIGNMENT PENDING              I272
         BNZ   CMCONT              YES. CONTINUE SCAN            Y02669
         CLC   CHKEY,XAX           DO TASKNAMES MATCH              I27I
         BE    CMGO                YES                              O99
         CLC   CHUNIT(D3),XAX      DO UNIT NAMES MATCH              O99
         BNE   CMCONT              NO. GET NEXT CSCB             Y02669
         CLI   XAX+D3,BLANK        INSURE PROPER UNIT NAME LENGTH   O99
         BNE   CMCONT              UNEQUAL LNS. CHECK NEXT CSCB     O99
CMGO     EQU   *                   CORRECT CSCB FOUND            Y02669
         CLI   XAS,BLANK                     WAS PROCNAME SPECIFIED
         BE    CMSTHIT                       NO. THIS CSCB
         CLC   CHCLS(8),XAS        PROCNAMES EQUAL
         BE    CMSTHIT             YES. THIS CSCB                  I272
         B     CMCONT              CSCB NOT FOUND. GO GET        Y02669
*                                  PTR TO NEXT CSCB              Y02669
CMSTHIT  EQU   *
         CLI   CHVCD,MTERR         IS CSCB FOR MOUNT              24131
         BNE   NOTMOUNT            YES.ERROR                     Y02669
         BAL   R9,CMDEQ            DEQ OFF CSCB CHAIN            Y02651
         B     CMERR37             SET TASK BUSY MSG CODE        Y02669
NOTMOUNT EQU   *                   NOT A MOUNT CSCB              Y02669
*
* THE CSCB IS A CANDIDATE TO ACCEPT A STOP OR MODIFY.  SO,       Y02669
*         GO BUILD A CIB AND ATTEMPT TO CHAIN IT TO THE CSCB.    Y02669
*
         BAL   R9,CMCIBLD          LINK TO CIB BUILD ROUTINE
         LTR   R15,R15             HAS CIB BEEN CHAINED?         Y02669
         BZ    CM003               YES. GO TO POST CSCB.         Y02669
         SPACE
* THE CIB CANNOT BE CHAINED BECAUSE THE CHCIBCTR IN THE CSCB
*        INDICATED THAT THIS COMMAND WOULD EXCEED THE MAXIMUM NBR
*        ALLOWED BY THE PROCESSING TASK.  THE CIB IS FREED AND
*        THE NEXT CSCB IS TRIED.
*
         USING CIBDSECT,R1                                        20030
         SR    R0,R0              GET THE EXACT LENGTH OF THE CIB
         IC    R0,CIBLEN              FROM THE COUNT OF DOUBLE WORDS
         SLL   R0,3                   PREVIOUSLY STORED.
         O     R0,CMSUB245         SET SUBPOOL NUMBER 245         20030
         FREEMAIN R,LV=(0),A=(1)
         CLI   XAE,XFF            TEST FOR POSTED ECB
         BE    CMCONT             POSTED.  GET NEXT CSCB.
         MVI   XAE,CMCD37         MODIFY PENDING INDICATOR
CMCONT   DS    0H
         L     R11,CHPTR          GET POINTER TO NEXT CSCB.
         B     CMSCAN1            PROCESS IT                     Y02669
         SPACE
* SET POST CODE IN REGISTER ZERO                                 Y02669
*        MODIFY                    X'00000008'                   Y02669
*        STOP                      X'00000010'                   Y02669
         SPACE
CM003    DS    0H
         MVC   CHUCMP,XAU          UPDATE UCMI IN CSCB           Y02669
         CLI   XAN,MODCOD          MODIFY COMMAND                Y02669
         BE    MPOSTCOD            YES. GET MODIFY POST CODE     Y02669
         LA    R0,CMSTCODE         LOAD STOP POST CODE           Y02669
         MVI   CHCIBCTR,ZERO       STOP ALL COMMANDS             Y02669
         B     SETECB              LOCATE ECB FOR XMPOST         Y02669
MPOSTCOD LA    R0,CMMDCODE         LOAD MODIFY POST CODE         Y02669
         EJECT
* POST ROUTINE HAS AS INPUT, R0 CONTAINING A COMPLETION CODE, R4 Y02657
*   CONTAINING A POINTER TO AN ECB, R6 CONTAINING A POINTER TO   Y02657
*   THE ASCB AND R7 CONTAINGIN A POINTER TO THE CVT.  THE        Y02657
*   THE ADDRESS OF THE ASCB ASSOCIATED WITH THE ASID IN CHASID   Y02657
*   IS CALCULATED FOR CROSS MEMORY POST USING THIS FORMULA:      Y02657
*     ASCBPTR = ((CHASID*4) + ADDR(ASVTENTY) - 4),               Y02657
*   WHERE ASVTENTY IS THE FIRST ASCB POINTER IN THE ASVT, AND    Y02657
*   ASCBPTR IS THE ASVT FIELD CONTAINING THE ADDRESS OF THE ASCB.Y02657
         SPACE
SETECB   EQU   *                                                 Y02669
         L     R4,CHECBP           COMMUNICATIONS ECB PTR          I272
         LTR   R4,R4               IS ECB PTR SET TO ZERO         20030
         BZ    CMCONT              YES, GET ANOTHER CSCB         Y02669
         MVI   XAE,XFF             SET CSCB POSTED INDICATOR
         MVC   XASAVLOC(LNP),POSTL MOVE POST PARM LIST TO XSA    Y02657
         SLL   R0,D24              POSITION POST CODE
*
*  LOCATE ASCB FOR XMPOST                                        Y02657
*
         L     R3,CVTPTR           CVT...                        Y02657
         USING CVT,R3              ...ADDRESSABILITY             Y02657
         L     R5,CVTASVT          ASVT...                       Y02657
         USING ASVT,R5             ...ADDRESSABILITY             Y02657
         LA    R5,ASVTENTY         ADDRESS FIRST ASVT ENTRY      Y02657
         DROP  R5                  DROP ASCB ADDRESSABILITY      Y02657
         S     R5,FOUR             DECREMENT TO FIRST SLOT       Y02657
         SR    R6,R6               ZERO ASID REG FOR INSERT      Y02657
         ICM   R6,3,CHASID         ASID FROM CSCB                Y02657
         SLL   R6,D2               QUADRUPLE IT FOR OFFSET       Y02657
         AR    R5,R6               ADDRESS ASVT ENTRY FOR ASID   Y02657
         L     R6,D0(R5)           LOAD IT FOR XMPOST            Y02657
*
*  XMPOST THE STOP/MODIFY ECB                                    Y02657
*
         POST  (R4),(0),ASCB=(R6),ERRET=CVTBRET,MF=(E,XASAVLOC)  Y02657
         DROP  R3                  DROP CVT ADDRESSABILITY       Y02657
         B     CMCONT              NEXT PASS THROUGH CSCB        Y02669
         EJECT
*
*   CSCB SCAN COMPLETE.  PREPARE TO EXIT.
*
CMFAIL   EQU   *
         BAL   R9,CMDEQ            DEQ OFF CSCB CHAIN RESOURCE   Y02651
         SPACE 2
*   IN THE FOLLOWING TESTS:                                      Y02669
*     XAE IS    ZERO    IF      NO CSCB WAS FOUND WITH THE       Y02669
*                               PROPER NAME(S) WHICH WOULD       Y02669
*                               ACCEPT ANOTHER CIB.              Y02669
*               CMCD37  IF      ONE OR MORE CSCBS WITH PROPER    Y02669
*                               NAMES WERE FOUND, BUT NONE WOULD Y02669
*                               ACCEPT ANOTHER CIB.              Y02669
*               XFF     IF      AT LEAST ONE CSCB WITH PROPER    Y02669
*                               NAME(S) WAS FOUND WHICH ACCEPTED Y02669
*                               THE CIB. THE ECB IN EACH OF THE  Y02669
*                               CSCB(S) WAS POSTED.              Y02669
         SPACE
         CLI   XAE,ZERO            ANY CSCBS POSTED?             Y02669
         BE    CMERR36             NO. TASK NOT FOUND ERROR
         CLI   XAE,CMCD37          TEST FOR MODIFY PENDING
         BE    CMERR37             YES. COMMAND NOT PROCESSED MSG
         SPACE
*
*   EXIT FROM MODULE VIA BR 14                                   Y02669
*
GOBACK   SR    R15,R15             SET SUCCESSFUL RETURN CODE    Y02669
         BR    R14                 EXIT
         EJECT
*  THE CSCB CHAIN RESOURCE (Q10) IS RELEASED HERE. IT WAS        Y02651
*   OBTAINED AT CMST1. SWAPPING IS THEN AGAIN MADE POSSIBLE.     Y02651
*   THIS SUBROUTINE EXPECTS TO RETURN CONTROL TO THE ADDRESS IN  Y02651
*   REGISTER 9.                                                  Y02651
         SPACE 2
CMDEQ    EQU   *                   ENTRY TO DEQ SUBROUTINE       Y02651
         MVC   XASAVSTD(LND),DEQCSCB MOVE IN PARM DEQ LIST       Y02651
         DEQ   MF=(E,XASAVSTD)     RELEASE CSCB RESOURCE         Y02651
         SPACE 1
         SYSEVENT  OKSWAP          ALLOW SWAP FOR THIS MEMORY    Y02651
         BR    R9                  RETURN TO CALLER              Y02651
         EJECT
         SPACE 4
*
*   CIB CHAINING ROUTINE
*
         SPACE 2
*   CALCULATE LENGTH OF CIB FOR GETMAIN
CMCIBLD  DS    0H
         L     R3,XAP              ONE PAST END OF BUFFER        Y02669
         BCTR  R3,0                END OF BUFFER                 Y02669
CM001    DS    0H
         CLI   D0(R3),BLANK        TEST FOR DATA
         BNE   CM0015              BRANCH ON LAST BYTE OF DATA
         BCT   R3,CM001            DECREMENT PTR AND TRY AGAIN
CM0015   DS    0H
         SR    R3,R7
         BNM   CM0016              DATA AREA LENGTH IS NOT NEG.  A34824
         SR    R3,R3               INSURE LENGTH OF DATA IS PLUS A34824
CM0016   LA    R3,D2(R3)           RECTIFY LENGTH                A34824
         SPACE
*   GETMAIN STORAGE FOR CIB FROM SUBPOOL 245                     Y02669
         LA    R0,CIBDATA-CIBNEXT(R3) LENGTH OF CIB
         O     R0,CMSUB245         SET SUBPOOL NUMBER 245
         GETMAIN R,LV=(0)          GET STORAGE FOR CIB
         USING CIBDSECT,R1                                       Y02669
*   INITIALIZE THE CIB                                           Y02669
         XC    CIBNEXT(CIBDATA-CIBNEXT),CIBNEXT  CLEAR CIB BASE  Y02669
         SPACE
*                                 COMPUTE THE NUMBER OF DOUBLE
         LA    R0,CIBDATA-CIBNEXT+D7(R3)                         A30025
         SRL   R0,3                WORDS OF CIB GOTTEN CORE AND
         STC   R0,CIBLEN           STORE INTO THE CIB
         MVC   CIBVERB(D1),XAN    SET THE VERB CODE
         MVC   CIBASID(D2),XAA     MOVE ASID TO CIB              Y02669
         MVC   CIBCONID,XAU        MOVE CONSOLE ID TO CIB          I272
CM0015B  EQU   *                                                  20030
         LTR   R3,R3              IS LENGTH OF DATA ZERO
         BZ    CM002              YES BYPASS MOVE
         BCTR  R3,0               DECREMENT BY ONE
         STH   R3,CIBDATLN        STORE THE LENGTH OF THE DATA FIELD
         BCTR  R3,0               DECREMENT BY ONE
         EX    R3,CMMVCZ          MOVE DATA TO CIB.
*    CHAIN THE CIB                                               Y02669
CM002    DS    0H
         LA    R0,CHCIBP           PTR TO CIB PTR                  I272
*                                 R1 ALREADY CONTAINS A PTR TO THE CIB
         LR    R4,R11                                             20030
         L     R11,BACHN          GET ADDR FIRST CSCB             20030
XTEST2   EQU   *                                                  20030
         LTR   R11,R11            TEST FOR END OF CHAIN           20030
         BZ    XERR                                               20030
         LA    R15,CHCIBP         GET ADDR CIB ORIGIN             20030
         CR    R0,R15                                             20030
         BE    XFRST                                              20030
         L     R11,CHPTR          GET NEXT CSCB ADDR              20030
         B     XTEST2                                             20030
XFRST    EQU   *                                                  20030
         LR    R15,R0                                             20030
         L     R11,D0(R15)        GET FIRST BLOCK PTR             20030
         LA    R11,D0(R11)                                        20030
XSCHN    EQU   *                                                  20030
         LTR   R11,R11             END OF CHAIN                   20030
         BZ    XCHER                                              20030
         LR    R15,R11            SAVE ORIGIN PTR                 20030
         L     R11,D0(R11)        GET NEXT ELEMENT                20030
         B     XSCHN                                              20030
XCHER    EQU   *                                                  20030
         CLI   CIBVERB,CIBSTOP    IS VERB STOP                    20030
         BE    XCHND                                              20030
         LR    R3,R0                                              20030
         SR    R13,R13                                            20030
XTEST3   EQU   *                                                  20030
         L     R3,D0(R3)          GET ADDR OF BLOCK               20030
         LA    R3,D0(R3)                                          20030
         LTR   R3,R3              IS PTR ZERO                     20030
         BZ    XENDCNT                                            20030
         LA    R13,D1(R13)        INCREMENT CIB COUNT             20030
         B     XTEST3                                             20030
XENDCNT  EQU   *                                                  20030
         LR    R11,R4                                             20030
         SR    R3,R3              CLEAR COUNT REGISTER            20030
         IC    R3,CHCIBCTR        GET CIB COUNT                   20030
         CR    R13,R3             IS LIMIT EXCEEDED               20030
         BL    XCHND                                              20030
*   INDICATE STATUS OF CHAINING REQUEST TO THE CALLER            Y02669
XERR     EQU   *                                                  20030
         LA    R15,D8             INDICATE CHAINING NOT DONE      20030
         BR    R9                                                 20030
XCHND    EQU   *                                                  20030
         ST    R1,D0(R15)         INSERT CIB PTR IN CHAIN         20030
         SR    R15,R15                                            20030
         ST    R15,CIBNEXT        MAKE NEXT CIB PTR ZERO         Y02669
         LR    R11,R4             RESTORE CSCB PTR                20030
         BR    R9                                                 20030
         EJECT
*
*        THE FOLLOWING CODE SETS ERROR CODES FOR MESSAGES        Y02669
*        AND BRANCHES TO IEE0503D TO ISSUE THE MESSAGES          Y02669
*                                                                     *
CMERR36  MVI   XAE,CMCD36          ERROR CODE TASK NOT FOUND
         B     CBRANCH             ERROR MSG EXIT IEE0503D       Y02669
CMERR05  MVI   XAE,CMCD05          INVALID COMMAND               Y02669
         B     SETVERB             SET VERB IN XAV               Y02669
CMERR8   MVI   XAE,CMCD08          TERM LENGTH ERROR             Y02669
         B     SETVERB             SET VERB IN XAV               Y02669
CMERRC   MVI   XAE,CMCD0B          MISSING PARAMETER             Y02669
         B     SETVERB             SET VERB IN XAV               Y02669
CMERR37  MVI   XAE,CMCD37          TASK BUSY                     Y02669
         B     SETVERB             SET VERB IN XAV               Y02669
         SPACE
*        SET PROPER COMMAND VERB IN XAV FOR IEE0503D             Y02669
         SPACE
SETVERB  CLI   XAN,MODCOD          PROCESSING MODIFY COMMAND?    Y02669
         BNE   STOPCODE            NO, MUST BE STOP              Y02669
         MVC   XAV,CMMODIFY        MOVE 'MODIFY  ' TO XAV        Y02669
         B     CBRANCH             BRANCH TO MESSAGE MODULE      Y02669
STOPCODE MVC   XAV,CMSTOP          MOVE 'STOP    ' TO XAV        Y02669
CBRANCH  L     R9,VCON05           VCON FOR MSG MODULE IEE0503D  Y02669
         LA    R15,D4              SET UNSUCCESSFUL RETURN CODE  Y02669
         BR    R9                  BRANCH TO WRITE ERROR MSGS    Y02669
         EJECT
* CONSTANTS AND EXECUTABLE INSTRUCTIONS FOR THIS MODULE               *
*                                                                     *
         DS    0F                  FULL WORD ALIGNMENT           Y02669
CMSUB245 DC    X'F5'               SUBPOOL 245                    20030
ZEROS    DC    X'000000'           INDICATION                     20030
*                                                                     *
VCON05   DC    V(IEE0503D)         FOR BRANCH TO MESSAGE MODULE  Y02669
FOUR     DC    F'4'                CONSTANT FOR ASID CONVERSION  Y02657
*
* EXECUTABLE INSTRUCTIONS                                             *
*
CMMVCZ   MVC   CIBDATA-CIBNEXT(1,R1),0(R7)   MOVE DATA TO CIB
CMMVCX   MVC   XAX(D1),D0(R9)                MOVE TASK TO XAX    Y02669
CMMVCY   MVC   XAS(D1),D0(R9)                MOVE PROC TO XAS    Y02669
         SPACE 2
* ENQ PARAMETER LIST FOR CSCB RESOURCE                           Y02651
ENQCSCB  ENQ  (IEESCSCB,IEESQ10,E,3,SYSTEM),MF=L                 Y02651
LNE      EQU   *-ENQCSCB           LENGTH OF ENQ PARM LIST       Y02651
         SPACE
* DEQ PARAMETER LIST FOR CSCB RESOURCE                           Y02651
DEQCSCB  DEQ  (IEESCSCB,IEESQ10,3,SYSTEM),MF=L                   Y02651
LND      EQU   *-DEQCSCB           LENGTH OF DEQ PARM LIST       Y02651
         SPACE
IEESCSCB DC    C'SYSIEFSD'         MAJOR NAME                    Y02651
IEESQ10  DC    C'Q10'              MINOR NAME                    Y02651
         SPACE 2
POSTL    POST  MF=L                POST PARM LIST                Y02657
LNP      EQU   *-POSTL             LENGTH OF POST PARM LIST      Y02657
         SPACE
CMMODIFY DC    CL8'MODIFY  '       COMMAND VERBS                 Y02669
CMSTOP   DC    CL8'STOP    '       FOR MESSAGES                  Y02669
         SPACE
PATCH    DC    CL50'****   IEE0703D   PATCH AREA  ****'          Y02669
         TITLE 'IEE0703D--XSA MAP'
CMXSA    DSECT
         IEEXSA
         TITLE 'IEE0703D--CVT MAP'
CVT      DSECT
         CVT
         TITLE 'IEE0703D--MASTER RESIDENT CORE MAP'
         IEEBASEA
         TITLE 'IEE0703D--CSCB MAP'
CMCHAIN  DSECT
         IEECHAIN
         TITLE 'IEE0703D--CIB MAP'
CIBDSECT DSECT
         IEZCIB
         TITLE 'IEE0703D--ASVT MAP'
         IHAASVT                                                 Y02657
         END
