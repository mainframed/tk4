      TITLE 'IEE4103D - VARY HARDCOPY MESSAGE MODULE'
IEE4103D CSECT
***********************************************************************
*
* MODULE NAME      = IEE4103D
*    CSECT NAME    = IEE4103D
*
* LOAD MODULE NAME = IGC0003D
*
* DESCRIPTIVE NAME = HARDCOPY INFORMATIONAL MESSAGE MODULE
*
* COPYRIGHT        = MISSING
*
* STATUS           = OS/VS/2 RELEASE 3                         @Z30LPTJ
*
* FUNCTION         = ISSUES A HEADER AND A HARDCPY INFORMATIONAL
*                    MESSAGE FOR A DEVICE THAT HAS JUST BEEN VARIED
*                    AS A HARDCPY DEVICE.
*
* OPERATION        = THIS MODULE, USES THE INFO IN THE UNIT CONTROL
*                    MODULE (UCM),THE UNIT CONTROL MODULE ENTRY (UCME),
*                    AND THE MODULE PREFIX (UCMPRFX) TO CONSTRUCT THE
*                    HARDCPY MESSAGE.
*                    THE MESSAGE CONTAINS THE PHYSICAL DEVICE ADDRS OF
*                    THE HARDCPY DEVICE, INFO AS TO WHETHER IT IS
*                    A STAND-ALONE O-UNIT, AN I/O UNIT, OR PART OF
*                    A COMPOSITE, IT WILL SHOW ITS ALTERNATE, ITS
*                    ROUTE CODES AND WHAT INFORMATION IS TO GO TO
*                    HARDCPY (STCMDS,INCMDS,NOCMDS,CMDS,OFF).
*
* NOTES
*    DEPENCENCIES  = NONE
*    CHARACTER/CODE DEPENDENCIES
*                  = THIS MODULE CAN BE ASSEMBLED WITH ANY NEW
*                    CHARACTER/CODE SET.
*
* RESTRICTIONS     = REG2 PTR TO THE XSA ON INPUT
*                    REG5 PTR TO THE MESSAGE BUFFER GETMAIN'ED
*                    BY IEE7203D
*    REGISTER CONVENTIONS
*                  = REGISTERS ARE DEFINED AT LABEL: DEFREG
*    PATCH LABEL   = PATCH
*
* MODULE TYPE      = CSECT
*    PROCESSOR     = ASSEMBLER
*    MODULE SIZE   = VS/2 = '38A'                              @ZM30445
*    ATTRIBUTES    = REENTRANT, REUSABLE, REFRESHABLE, PAGED LPA,
*                    ZERO PSW PROTECT KEY, SUPERVISOR MODE
*
* ENTRY POINT      = IEE4103D FROM IEE7203D
*    PURPOSE       = TO ISSUE HARDCPY MESSAGE
*    LINKAGE       = BRANCH
*    INPUT         = REG2 POINTS TO THE XSA
*                    REG1 POINTS TO THE MESSAGE AREA GETMAIN'ED
*                    BY 7203D
*                    REG12 POINTS TO THE UNIT FIELD OR IS ZERO
*                    IF THE UNIT IN THE COMMAND IS SYSLOG
*                    REG14 CONTAINS THE RETURN ADDRESS
*    REGISTERS SAVED= NONE
*    REGISTER USAGE= R0      UCMID REG FOR WTO
*                    R1      INDEX IN MSG BUFFER AND WTO PTR
*                    R2      XSA PTR
*                    R3      UCM PTR
*                    R4      UCMPRFX PTR
*                    R5      MESSAGE FBUFFER PTR
*                    R9      UCME PTR
*                    R11     UCME'S OF ALTERNATE CONSOLE PTR
*                    R12     PTR TO UNIT FIELD OF 0 IF UNIT IS SYSLOG
*                    R13     COMPOSITE'S UCME PTR IF ANY
*                    R15     UCB PTR
*    REGISTERS RESTORED
*                  = NONE
*
* EXITS - NORMAL   = BR14 TO CALLER OF SVC 34
*    CONDITIONS    = MESSAGE WAS ISSUED
*    OUTPUT        = R2 PTS TO THE XSA
*    RETURN CODES  = NONE
*
* EXITS - ERROR    = NONE
*
* EXTERNAL REFERENCES
*    ROUTINES      = NONE
*    DATA AREAS    = NONE
*
* CONTROL BLOCKS   = . EXTENDED SAVE AREA (XSA)
*                    . UNIT CONTROL BLOCK (UCB)
*                       FIELDS TESTED  - UCBNAME
*                       FIELDS UPDATED - NONE
*                    . UNIT CONTROL MODULE (UCM)
*                       FIELDS TESTED  - UCMALTEN
*                                        UCMATR - BIT= UCMOF
*                                        UCMCOMPC
*                                        UCMHRDRT
*                                        UCMID
*                                        UCMSDS1 - BIT= UCMSDS1A
*                                                       UCMSDS1B
*                                        UCMSFLGS - BIT= UCMSYSC
*                                        UCMUCB
*                                        UCMVEA
*                                        UCMXECB
*                       FIELDS UPDATED - NONE
*                    . CVT
*                       FIELDS TESTED  - CVTCUCB
*                       FIELDS UPDATED - NONE
*
* TABLES           = MESSAGE BUFFER GETMAIN'ED BY IEE7203D
*
* MACROS           = WTO, FREEMAIN, SETLOCK
*
* MAPPING MACROS   = IEEXSA
*                    IEECUCM
*                    IEFUCBOB
*                    CVT
*                    IHAPSA
*    SERIALIZATION = NO LOCKS ARE REQUIRED IN THIS MODULE FOR THE UCB.
*                    THE ONE FIELD USED IN HERE IS UCBNAME WHICH
*                    ALWAYS REMAINS UNCHANGED.
*                    THE UCM IS PROTECTED VIA THE LOCAL AND CMS LOCKS.
*                    THIS PROTECTION IS REQUIRED AGAINST ANOTHER VARY
*                    COMMAND OR COMM. TASK.
*                    THESE LOCKS ARE OBTAINED AT:
*                         HSETLK IN MODULE IEE7203D
*                    AND RELEASED AT:
*                         HUNSTLK IN THIS MODULE
*                    AS SOON AS UCM FIELDS ARE NOT REQUIRED ANY LONGER.
*                    FIELDS WHICH MUST BE PROTECTED:
*                         UCMALTEN - ALTERNATE CONSOLE PTR - UCM
*                         UCMSDS1  - BIT =UCMSDS1A,UCMSDS1B,
*                                         STCMDS,  INCMDS  - UCM
*                                    HARDCPY BITS IN THE UCM
*                         UCMSFLGS - BIT = UCMSYSC         - UCM
*                                    CMDS SET FOR HARDCPY BIT
*                         UCMHRDRT - HARDCPY ROUTCODES     - UCM
*
* CHANGE LEVEL     = Y02669, Y02651, Z30LPTJ, ZM30445          @ZM30445
*
* CHANGE ACTIVITY  = N/A
*
* MESSAGES         = 'IEE349I HARDCOPY CONSOLE'
*                    'CONSOLE/ALT  COND  AUTH  ID  ROUTCD'
*                    'MESSAGE CONTAINING THE INFO FOR THE DEVICE AS
*                    CAPTIONED ABOVE'
*
* ABEND CODES      = NONE
*
* PACKAGING        = IEE4103D WILL BE PART OF LOAD MODULE
*                       = IGC0003D
*                    THIS LOAD MODULE ALIASES ARE
*                       = NONE
*                    THIS LOAD MODULE ENTRY POINTS ARE
*                       = IGC0003D
*                    MODULE WILL RESIDE IN: LPALIB
*
* SYSGEN           = SUPPLIED BY SECTIONS:
*                    LOAD MODULE NAME
*                    PACKAGING
*                    THIS CSECT WILL BE INCLUDED AT SYSGEN FROM
*                    DLIB -AOSB3- BY MACRO -SGIEF441-
*
* SYSTEM LIBRARIES = NONE
*
***********************************************************************
         EJECT
*
DEFREG   EQU   *                                                 Y02669
R0       EQU   0
R1       EQU   1
CXSA     EQU   2                   PTR TO XSA
R3       EQU   3
R4       EQU   4                   ON ENTRY HAS CONTENTS OF XAD
R5       EQU   5
R6       EQU   6                   ADDRESSABILITY REG
R7       EQU   7
R8       EQU   8                   ON ENTRY,HAS PTR T O GOTTEN CORE
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14                                                Y02651
CRETURN  EQU   14                  RETRN REGISTER
R15      EQU   15
*
*        LENGTH DEFINITIONS
*
COMMA    EQU   C','
CSLASH   EQU   C'/'
CDASH    EQU   C'-'
CHRDCPY  EQU   C'H'                    CONSOLE IS HARDCOPY
L3       EQU   3                       LENGTH OF PHYSICAL DEV ADDR
L6       EQU   6                       DISPLACEMENT OF O-UNITPAST I-
CBACK    EQU   X'FF'
*
ZERO     EQU   0
ONE      EQU   1
TWO      EQU   2
TRE      EQU   3
FOR      EQU   4
SIX      EQU   6
TWLV     EQU   12
FIFTN    EQU   15
ONEDGT   EQU   X'F0'
LENMSG   EQU   X'7C'                   LENGTH OF MLWTO MSG        21002
ZONEBIT  EQU   X'0F'                   ZONE BIT FOR UNPACK        21002
BLNK     EQU   X'40'                   BLANK                      21002
WORD     EQU   3                       OFFSET TO DOUBLE WORD      21002
WORDZONE EQU   10                      OFFSET TO ZONE BYTE        21002
WORDID   EQU   9                       OFFSET TO CONSOLE ID       21002
RI       EQU   X'80'                                           @ZM30445
         EJECT
         BALR  R6,ZERO                  ADDRESSABILITY
         USING *,R6                ADDRESSABILITY
         MODID BR=YES                                            Y01886
         USING XSASET,CXSA              ADDRESSABILITY FOR XSA
*
         L     R3,CVTPTR
         USING CVTSET,R3
         L     R3,CVTCUCB          PTR TO UCM
         DROP  R3
         USING UCM,R3           ADDRESSABILITY FOR UCM           Y02669
         LR    R5,R1               GET MSG CORE PTR INTO REG5    Y02669
*
         USING CMESSAGE,R5                                        19084
         LA    R1,CHEADR           POINTER TO DECLARED HEADER     19084
         MVC   ZERO(LENMSG,R5),ZERO(R1)  MOVE MLWTO INTO BUFFER   21002
*
***********************************************************************
*        HARDCOPY MESSAGE ROUTINE
***********************************************************************
*
         LR    R4,R3                                             Y02669
         SH    R4,CFOUR
         L     R4,ZERO(R4)
         USING UCMPRFX,R4
         LTR   R12,R12             IS IT SYSLOG                   19084
         BZ    CSYSLG              YES
         LM    R9,R11,UCMVEA          1ST,SIZE AND LAST UCME
         USING UCMLIST,R9             UCME ADDRESSIBILITY
         USING UCBSET,R15              UCB ADDRESSIBILITY
CLOOP1   L     R15,UCMUCB              PTR TO UCME'S UCB
         CLC   ZERO(L3,R12),UCBNAME        IS UCME FOR UNIT IN CIB19084
         BE    CHRDIN                  YES,PROCESS
         BXLE  R9,R10,CLOOP1          TRY NEXT ONE
*
***********************************************************************
* PREPARE FOR MESSAGE BUILDING BY MOVING IN HEADER AND BASIC SYNTAX   *
***********************************************************************
*
CHRDIN   EQU   *
         L     R13,UCMCOMPC            GET COMPOSITE PTR,IF IT IS
         LTR   R13,R13                 NOT ZERO,UNIT IS A COMPOSITE
         BZ    CONEU                   IF ZERO ONLY ONE UNIT
         TM    UCMATR,UCMOF             IS IT O-UNIT
         BZ   CHMOVE              NO, OK
         LR    R9,R13              R9 PTR TO UCME OF I-UNIT NOW
         L     R13,UCMCOMPC        R13, NOT PTS TO UCME OF OUTPUT UNIT
         L     R15,UCMUCB
CHMOVE   EQU   *
         MVC   XUNIT1(L3),UCBNAME        INSERT I-UNIT ADDR
         MVI   XBLANK,COMMA            INSERT DELIMITER
         L    R15,TWLV(R13)
CONEU    EQU   *
         MVC   XUNIT2(L3),UCBNAME        INSERT UNIT
         MVI   XCOMMA,CSLASH           SET DELIMITER
         L     R11,UCMALTEN            OBTAIN ALTERNATE PTR (I-UNIT)
         DROP  R9                      ..
         USING UCMLIST,R11             ..
         LTR   R11,R11                 DO WE HAVE A COMPOSITE?   Y02669
         BZ    CATTRBTE                NOPE, IT IS ONE CONS SYSTEY02669
         L     R15,UCMUCB              OBTAIN ALTERNATE'S UCB PTR
         MVC   XAUNIT1(L3),UCBNAME     PLACE ALT'S ADDR IN MSG
         L     R11,UCMCOMPC            OBTAIN O-UNIT PTR
         LTR   R11,R11                 IF PTR=0,NO O-UNIT
         BZ    CATTRBTE            RETURN
         MVI   XBLK,COMMA              ALT=COMPOSITE,SET DELIMITER
         L     R15,UCMUCB              ..
         MVC   XAUNIT2(L3),UCBNAME     INSERT 2ND ALTCON ADDR
         DROP  R11,R15                 ..
         USING UCMLIST,R9              ..
CATTRBTE EQU   *
***********************************************************************
* AUTHORITY CODE DETERMINATION.                                   21002
***********************************************************************
         MVI   XMSGSTAT,CHRDCPY    ASSUME HARDCOPY
         MVC   XMSGAUTH(SIX),CNO       INSERT NOCMDS              21002
         TM    UCMSDS1,UCMSDS1A        IS THIS STCMDS             21002
         BO    CHDCPST                 YES, MOVE STCMDS INTO MSG  21002
         TM    UCMSDS1,UCMSDS1B        IS THIS INCMDS             21002
         BO    CHRDCPIN                NO, CK TO SEE IF CMDS      21002
         TM    UCMSFLGS,UCMSYSC        IS THIS CMDS               21002
         BZ    CRT7A                   NO COMMANDS ASSUMED        21002
         MVC   XMSGAUTH(SIX),CMDS      MOVE CMDS TO MSG AREA      21002
         B     CRT7A                   CONTINUE                   21002
CHRDCPIN EQU   *                                                  21002
         MVC   XMSGAUTH(TWO),CIN       MOVE IN INCMDS             21002
         B     CRT7A                   CONTINUE                   21002
CHDCPST  EQU   *                                                  21002
         MVC   XMSGAUTH(TWO),CST       MOVE IN STCMDS             21002
         B     CRT7A                   CONTINUE                   21002
***********************************************************************
*          FILL IN CONSOLE ID                                    21002*
***********************************************************************
CRT7A    EQU   *                                                  21002
         LTR   R12,R12             IS THIS SYSLOG ?               21002
         BZ    RTCDET              YES, NO CONSOLE ID.            21002
         CLI   XUNIT2,BLNK             COMPOSITE CONSOLE          21002
         BNE   NOCOMP                  NO, USE UCME IN REG 9      21002
         L     R9,UCMCOMPC             UCME OF OUTPUT CONSOLE     21002
NOCOMP   EQU   *                                                  21002
         SR    R11,R11                 CLEAR FOR CONSOLE ID       21002
         IC    R11,UCMID               GET CONSOLE ID             21002
         CVD   R11,XMSGWK+WORD         CONVERT TO DECIMAL         21002
         OI    XMSGWK+WORDZONE,ZONEBIT                            21002
         UNPK  XMSGID(TRE),XMSGWK+WORDID(TWO)                     21002
         MVI   XMSGID,BLNK             BLNAK OUT FIRST BYTE       21002
***********************************************************************
*                                                                     *
* ROUTING CODE DETERMINATION                                          *
*                                                                     *
***********************************************************************
RTCDET   EQU   *                                                  21002
         LH    R11,UCMHRDRT        PRESET TO CHECK ROUT CODE
         SPACE 10
***************************************************              Y02651
*                                                                Y02651
* AT THIS POINT NO LOCKS ARE NEEDE ANY LONGER                    Y02651
*  THESE LOCKS WERE OBTAINED AT:                                 Y02651
*              HSETLK                                            Y02651
HUNSTLK EQU   *                                                  Y02651
         STM   R11,R14,XASAVLOC                                  Y02651
         SETLOCK RELEASE,TYPE=CMS,RELATED=(IEE7203D(HSETLK))     Y02651
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(IEE7203D(HSETLK))   Y02651
         LM    R11,R14,XASAVLOC                                  Y02651
*                                                                Y02651
***************************************************              Y02651
         SPACE 10
         LTR   R11,R11             ARE NO ROUTCDES ALLOWED
         BZ    CNONE1                  NO ROUT RTN
         CH    R11,CRTALL
         BE    CRTALLL                 ALL ROUT RTN
*
* PROCESSING OF INDIVIDUAL ROUTING CODES
*
         SLL   R11,FIFTN              LEFT JUSTIFY
         LA    R10,CTABLE          GET PTR TO CONVERSION TABLE
         LA    R1,XMSGWK+ONE           GET POINTER TO WORK AREA-  21002
*                                      MUST BE ON WORD BOUNDARY   21002
NEXT     EQU   *
         SLL   R11,ONE
         LTR   R11,R11             IS BIT ON
         BZ    NOMORE              NO, NOMORE,GO TO TRANCRIBE RT CODES
         BNM   NEXT1               NO, BUT OTHERS ON
         MVC   ZERO(TWO,R1),ZERO(R10)   MOVE IN RT CDE
         LA    R1,TWO(R1)            PT TO NEXT SPACE TO WRITE
NEXT1    EQU   *
         LA    R10,TWO(R10)          PT TO NEXT CODE IN TABLE
         B     NEXT                    GO PROCESS NEXT RTCD
NOMORE   EQU   *
         SR    R7,R7               ZERO OUT COUNTER               19084
         MVI   ZERO(R1),CBACK           PLACE END DELIMITER
         LA    R10,XMSGWK+ONE          ADDRESS OF WORK AREA       21002
*                                      MUST BE ON WORD BOUNDARY   21002
         LA    R1,XMSGRTCD         GET PTR TO RT CD AREA
BEGIN    EQU   *
         MVC   ZERO(TWO,R1),ZERO(R10)
         CLI   ZERO(R10),ONEDGT         ONE OR TWO DIGITS NUMBER
         BNE   MOVED                   ALREADY FULLY MOVED
         MVC   ZERO(ONE,R1),ONE(R10)
         BCTR  R1,ZERO                  MINUS 1
MOVED    EQU   *
         LA    R1,TWO(R1)
ENDCHK   EQU   *
         CLI   TWO(R10),CBACK
         BE    CISSUE1                  GO ISSUE MSG
         MVI   ZERO(R1),COMMA
         SR    R7,R7               ZERO OUT COUNTER               19084
ENDCHK2  EQU   *
         LH    R11,ZERO(R10)
         MVC   ONE(TWO,R1),TWO(R10)
         CH    R11,TAB09           IS NEXT NUMB A  TWO DIGIT NUMB
         BNE   ENDCHK3             NO, OK, GO PROCESS NORMAL
         AH    R11,FOX7            YES, ADD SPECIAL CAHRACTER
         B     ENDCHK5             GO PROCESS NORMAL
ENDCHK3  EQU   *
         AH    R11,HONE            ADD ONE TO COMPARE REG
ENDCHK5  EQU   *
         LA    R10,TWO(R10)
         CH    R11,ZERO(R10)
         BE    SLASH                    GO MOVE IN A DASH
ENDSLASH EQU   *
         CLI   ONE(R1),ONEDGT           ONE OR TWO DIGITS NUMBER
         BE    MOVEOVER                 ONE DIGIT, GO MOVE IT 1 MORE
         LA    R1,ONE(R1)               UPDATE PTR
CONT     EQU   *
         LA    R1,TWO(R1)
         LTR   R7,R7               FIRST TIME AROUND              19084
         BNZ   ENDCHK              NO, BRANCH
         CLI   TWO(R10),CBACK          IS IT A DELIMITER
         BE    CISSUE1                  YES,GO ISSUE MSG
         MVI   ZERO(R1),COMMA           MOVE IN ','
         B     ENDCHK2             CHECK NEXT DIGIT
MOVEOVER EQU   *
         MVC   ONE(ONE,R1),TWO(R1)
         B     CONT                     MOVED OVER, CONTINUE PROCESS
SLASHRTN EQU   *
         LA    R10,TWO(R10)
         CLI   TWO(R10),CBACK      END DELIMITER
         BE    SLASH6              YES, GO FINISH UP
SLASH    EQU   *
         MVI   ZERO(R1),CDASH         MOVE IN DASH
         CH    R11,TAB09           2S IT GOING TO A TWO UNIT DIGIT
         BNE   SLASH2              (O, CONTINUE NORMAL PROCESS
         AH    R11,FOX7            YES, ADD F7  TO  THE COMPARE REG
         B     SLASH4              RETURN TO NORMAL PROCESS
SLASH2   EQU   *
         AH    R11,HONE            ADD ONE TO COMPARE REG
SLASH4   EQU   *
         CH    R11,TWO(R10)
         BE    SLASHRTN                GO TO RTN TO CHECK DASH
SLASH6   EQU   *
         MVC   ONE(TWO,R1),ZERO(R10)
         BCTR  R7,ZERO             MAKE IT SECOND TIME AROUND SWTH19084
         B     ENDSLASH                 GO,CONTINUE PROCESS
*                                                                 19084
CSYSLG   EQU   *                                                  19084
         MVC   XUNIT1(L6),CSYSLOG      INSERT 'SYSLOG'            19084
         B     CATTRBTE                GO MOVE ATTRIBUTE          19084
*
CNONE1   EQU   *
         MVC   XMSGRTCD(FOR),CNONE   INSERT NONE
         LA    R1,XMSGRTCD+FOR       PRT PAST ROUTCDE PARM
         B     CISSUE1                 GO ISSUE MSG
*
CRTALLL  MVC   XMSGRTCD(TRE),CALL
         LA    R1,XMSGRTCD+TRE
         EJECT
*
*         REG 1 MUST PT TO THE CHARACTER AFTER LAST ROUT CODE
*
*
***********************************************************************
*                                                                     *
*  MESSAGE ISSUING ROUTINE                                            *
*                                                                     *
***********************************************************************
CISSUE1  EQU   *
         LA    R9,XMSGHDR              ADDR OF BEGIN OF DATA LINE 21002
         SR    R1,R9                   LENGTH OF DATA LINE        21002
         STH   R1,XMSGHDR              LENGTH OF LABEL LINE       21002
         LR    R1,R5                   PTR TO WTO LIST            19084
         SR    R0,R0
         TM    XAU,RI              IS THIS FROM INPUT STREAM?  @ZM30445
         BO    XAUIN               YES, DON'T INSERT CONSOLE ID@ZM30445
         IC    R0,XAU              UCM ID OF ISSUER
XAUIN    EQU   *                                               @ZM30445
*
         WTO   MF=(E,(1))
         LR    R1,R5               PTR TO GOTTEN CORE             19084
         FREEMAIN R,LV=160,A=(1),SP=229                          Y02669
         BR    CRETURN             RETURN                         19084
*                                                                 19084
***********************************************************************
*
         EJECT
*
*              CONSTANT DEFINITION AREA
*
*
CHEADR   WTO   ('IEE349I HARDCOPY CONSOLE',C),('CONSOLE/ALT     COND   *
               AUTH   ID  ROUTCD',L),('                                *
                       ',DE),MF=L,DESC=(5),MCSFLAG=(QREG0,RESP)   21002
         DS    0F
CRTALL   DC    X'FFFF'                 ALL CURRENT RT CODES
CALL     DC    C'ALL'              USED FOR ROUT AND AUTH
CNONE    DC    C'NONE'             USED FOR ROUT AND AUTH
CNO      DC    C'NO'               DO NOT SEPARATE THIS
CMDS     DC    C'CMDS  '               ANY CMDS CONSTANT          21002
CIN      DC    C'IN'                   INCMDS                     21002
CST      DC    C'ST'                   STCMDS                     21002
CSYSLOG  DC    C'SYSLOG'           IF HCPY IS SYSLOG
CFOUR    DC    H'4'                USED TO GET UCMPFX PTR
         DS    0F
FOX7     DC    X'00F7'             CONSTANT FOR ROUT RTN
HONE     DC    X'0001'                 **
*
***********************************************************************
CTABLE   DC    C'01'               ROUT CONVERSION TABLE
         DC    C'02'                   **
         DC    C'03'                   **
         DC    C'04'                   **
         DC    C'05'                   **
         DC    C'06'                   **
         DC    C'07'                   **
         DC    C'08'                   **
TAB09    DC    C'09'                   **
         DC    C'10'                   **
         DC    C'11'                   **
         DC    C'12'                   **
         DC    C'13'                   **
         DC    C'14'                   **
         DC    C'15'                   **
         DC    C'16'                   **
PATCH    DC    CL50'**IEE4103D***'                             @Z30LPTJ
***********************************************************************
CMESSAGE DSECT
CONTROL  DS    CL36                    CONTROL LINE               21002
LABEL    DS    CL44                    LABEL LINE                 21002
XMSGHDR  DS    CL4                     HEADER FOR DISPLAY LINE    21002
XTEXT    EQU   *
*         MESSAGE CONFIGURATION OF  UNITS FOR 1ST WTO ISSUED
*
XUNIT1   DS    CL3                     1ST PHYSICAL UNIT ADDRESS
XBLANK   DS    CL1                     DELIMITER BETWEEN CONSOLES
XUNIT2   DS    CL3                     ADDR OF O-UNIT IF ANY
XCOMMA   DS    CL1                     DELIMITER-FOLLOWING ARE ALTCONS
XAUNIT1  DS    CL3                     1ST ADDR OF ALTCON UNIT
XBLK     DS    CL1                     DELIMITER BETWEEN ALTCONS
XAUNIT2  DS    CL3                     O-UNIT (COMPOSITE) FIELD
XMSGPAD1 DS    CL2                     BLANK AREA
XMSGSTAT DS    CL1                     CONDITION INDICATOR
XMSGPAD2 DS    CL3                     BLANK AREA
XMSGAUTH DS    CL1                     INDICATION BEGINNING AUTH FIELD
XMSGPAD3 DS    CL7                     BLANKS                     21002
XMSGID   DS    CL3                     CONSOLE ID                 21002
XMSGPAD4 DS    CL1                     BLANKS                     21002
XMSGRTCD DS    CL8                BEGGINIG OF ROUTE CODE FIELD
XMSGWK   DS    CL30                 ROUTE CODE WORRK AREA
         SPACE 3
         EJECT
UCBSET   DSECT
         IEFUCBOB
         EJECT
CVTSET   DSECT
         CVT
         EJECT
XSASET   DSECT
         IEEXSA
         EJECT
UCMSET   DSECT
         IEECUCM     FORMAT=NEW
         EJECT
         IHAPSA
         END
