IEE0803D TITLE 'COMMAND SCHEDULE MODULE'
***********************************************************************
* MODULE NAME = IEE0803D                                              *
* DESCRIPTIVE NAME = CSCB, ASCB CREATION                              *
*                                                                     *
* COPYRIGHT = N/A                                                     *
*                                                                     *
* STATUS    =    OS/VS2 - SERVICE DATA IMPROVEMENTS           @G17SPTJ*
*                                                                     *
* FUNCTION =  FOR MOUNT, START, LOGON, DUMP, UNLOAD, DISPLAY,         *
*             TRACK, SET, VARY STORAGE, VARY CHANNEL, VARY CPU,       *
*             VARY ONLINE, VARY OFFLINE, VARY CONSOLES, RESET, SEND   *
*             QUIESCE, SWITCH, HALT, PAGEADD AND SLIP         @G17SPTJ*
*             COMMANDS.                                       @G17SPTJ*
*             IEE0803D BUILDS A CSCB TO HOLD THE COMMAND,     @Z40WPSS*
*             ENCODES THE COMMAND AND STORES IT IN THE CSCB.  @Z40WPSS*
*             FOR START, MOUNT AND LOGON, AN ASCB IS CREATED  @Z40WPSS*
*             AS PART OF INITIALIZATION FOR A NEW MEMORY.     @Z40WPSS*
*             FOR HOLD AND RELEASE TP, CONTROL IS PASSED TO   @Z40WPSS*
*             IED1303D.                                       @Z40WPSS*
*                                                                     *
* OPERATION = A CONDITIONAL GETMAIN IS DONE FOR THE CORE FOR          *
*             THE CSCB.  IN THE CASE OF INSUFFICIENT CORE,            *
*             AN ERROR CODE IS PASSED TO IEE0503D (MESSAGE            *
*             MODULE). THE CSCB IS INITIALIZED WITH THE               *
*             VERB CODE,CSCB SIZE, CONSOLE ID, SCREEN AND             *
*             AREA ID, ASID AND OPERAND DATA. ALSO,FOR DISPLAY        *
*             AND TRACK PROCESSING, AN INDICATOR IS SET TO            *
*             DESIGNATE STARTED TASK OR LOGON FOR DISPLAY JOBS        *
*             OR DISPLAY TS.  (STARTED JOBS ONLY.)  FOR               *
*             START, MOUNT AND LOGON, IEAVEMRQ IS USED FOR            *
*             ASCB CREATION. A PTR TO THE CSCB WILL BE PASSED         *
*             TO IEAVEMRQ FROM THIS MODULE IN A PARMLIST              *
*             POINTED TO BY REG1. ON RETURN  FROM IEAVEMRQ            *
*             THE CSCB CONTAINS THE ASID FOR THE NEW MEMORY.          *
*             REG0 ALSO CONTAINS THE ASID.                            *
*             RETURN CODES FROM THE ROUTINE ARE PROCESSED.            *
*             IF ASCB CREATION FAILS, THE CSCB IS FREED AND           *
*             AN ERROR CODE IS NORMALLY PASSED TO IEE0503D.   @Z30BPSV*
*             IF A START COMMAND NOT ISSUED UNDER THE         @Z30BPSV*
*             COMMUNICATIONS TASK IS BEING PROCESSED, A       @Z30BPSV*
*             SUBSYSTEM EXIT IS TAKEN AND                     @Z30BPSV*
*             A RETURN CODE OF 8 IS PASSED TO THE CALLER      @Z30BPSV*
*             IF ASCB CREATION IS SUCCESSFUL, AN ENQ IS DONE ON       *
*             THE CSCB CHAIN, THE NEW CSCB IS ENCHAINED, AND A        *
*             DEQ IS DONE.  THE ASSIGNMENT PENDING BIT HAS BEEN       *
*             SET IN THE CSCB AND THE MASTER SCHEDULER WAIT           *
*             ROUTINE IS CROSS MEMORY POSTED.                         *
*                                                                     *
* CHARACTER CODE DEPENDENCIES =                                       *
*             ANY CHARACTER CODE OTHER THAN EBCDIC WILL REQUIRE       *
*             REASSEMBLY OF MODULE.                                   *
         EJECT
* DEPENDENCIES =                                                      *
*             MERGE OF IEE2103D AND IEE0503D INTO IEE0503D.           *
*             IEAVEMRQ - MEMORY CREATE                                *
*                                                                     *
* RESTRICTIONS =                                                      *
*             NONE                                                    *
*                                                                     *
* REGISTER CONVENTIONS =                                              *
*             R0  - MACRO USAGE                                       *
*             R1  - MACRO USAGE                                       *
*             R14 - RETURN ADDRESS                                    *
*             R15 - RETURN CODES                                      *
*                                                                     *
* PATCH LABEL =                                                       *
*             PTCH803D: RESERVED PATCH AREA 70 BLANKS.                *
*                                                                     *
* MODULE TYPE =                                                       *
*             CSECT                                                   *
* MODULE SIZE =                                                       *
*             FORMER DESIGN POINT CONSTRAINTS OF 1 K LOADS            *
*             FOR SVCS HAVE BEEN REMOVED. N.A.                        *
* ATTRIBUTES =                                                        *
*             REENTRANT, PAGED LPA, ZERO PSW KEY, SUPERVISOR          *
*             MODE                                                    *
* ENTRY POINT =                                                       *
*             IEE0803D FROM THE FOLLOWING MODULES:                    *
*                IEE0403D  START, MOUNT, LOGON, HOLD, RELEASE,        *
*                          UNLOAD, RESET, QUIESCE, DUMP,      @G17SPTJ*
*                          PAGEADD AND SLIP.                  @G17SPTJ*
*                          NO TEST IS MADE FOR THE PAGEADD    @Z40WPSS*
*                          COMMAND IN THIS MODULE.            @Z40WPSS*
*                IEE0603D  SET                                        *
*                IKJ5803D  SEND                                       *
*                IEE3203D  VARY CHANNEL, VARY CPU, VARY STORAGE       *
*                          VARY ONLINE, VARY OFFLINE, VARY CONSOLES   *
*                          VARY PATH, VARY CN                         *
*                IEE1403D  HALT, SWITCH                               *
*                IEE3503D  DISPLAY PFK                                *
*                IEE7503D  TRACK AND OTHER DISPLAY OPERANDS.          *
*                                                                     *
* PURPOSE =   CSCB CREATION FOR TASK CREATING COMMANDS.               *
*             ASCB & CSCB CREATION FOR MEMORY CREATING                *
*             COMMANDS.                                               *
*                                                                     *
* LINKAGE =   BRANCH VIA VCONS.                                       *
         EJECT
*                                                                     *
* INPUT DATA =                                                        *
*             R2 POINTS TO THE EXTENDED SAVE AREA (XSA).              *
*             R14 CONTAINS RETURN ADDRESS.                            *
*             XSA INITIALIZED AS FOLLOWS:                             *
*                XAU CONTAINS UCMI                                    *
*                XAL CONTAINS PTR TO COMMAND OPERANDS IN              *
*                    BUFFER.                                          *
*                XAR CONTAINS PTR TO COMMAND INPUT BUFFER             *
*                XAS CONTAINS SCREEN AREA ID IN XASDID                *
*                XAS CONTAINS ROUTED CONSOLE ID FROM                  *
*                    L=CCA IN XASCID                                  *
*                XAA CONTAINS ASID FROM TSO ISSUED                    *
*                    COMMANDS (SEND, DISPLAY). THIS                   *
*                    FIELD WAS FORMERLY THE TJID.                     *
*                XAN CONTAINS THE VERB CODE                           *
*                XAV CONTAINS COMMAND VERB AS ENTERED                 *
*                XAX CONTAINS INFORMATION ON DISPLAY                  *
*                    COMMAND OPERANDS IN A BIT MASK.                  *
*                                                                     *
* REGISTERS SAVED =  NONE                                             *
* REGISTER CONTENTS DURING PROCESSING =                               *
*             R2  - XSA BASE                                          *
*             R3  - PROGRAM BASE ADDRESSIBILITY                       *
*             R4  - BASEA ADDRESSIBILITY                              *
*                                                                     *
*             R5  - ADDRESSIBILITY TO CSCB CHAIN                      *
*                   ACCESS COMMAND BUFFER THROUGH XAL                 *
*             R6  - CSCB CHAIN POINTERS                               *
*             R7  - CVT ADDRESSIBILITY                                *
*             R8  - ADDRESSIBILITY TO NEWLY CREATED CSCB              *
*             R13 - SAVE AREA ADDRESS FOR IEAVEMRQ                    *
*                                                                     *
* REGISTERS RESTORED =                                                *
*             NONE                                                    *
         EJECT
**********************************************************************
* EXIT - NORMAL =                                                     *
*             POSTEXIT                                                *
* CONDITIONS =                                                        *
*             COMPLETION OF SVC34 PROCESSING FOR TASK AND             *
*             MEMORY CREATING COMMANDS.  EXIT IS A RETURN             *
*             TO CALLER.                                              *
* OUTPUT DATA =                                                       *
*             CSCB, ASCB, ASID                                        *
* RETURN CODE =                                                       *
*             R15 = 0                                                 *
***********************************************************************
* EXIT - NORMAL =                                                     *
*             EXIT13                                                  *
* CONDITIONS =                                                        *
*             A VALID HOLD TP OR RELEASE TP COMMAND HAS BEEN          *
*             ENTERED. EXIT IS TO IED1303D TO PROCESS THE             *
*             COMMAND.                                                *
* OUTPUT DATA =                                                       *
*             SAME AS INPUT DATA IF VALID.                            *
* RETURN CODES =                                                      *
*             NONE                                                    *
***********************************************************************
* EXIT - ERROR =                                                      *
*             EXIT3A                                                  *
* CONDITIONS =                                                        *
*             NO CSCB (OR ASID IF FOR LOGON, MOUNT OR START)  @Z30BPSV*
*             CREATED.                                        @Z30BPSV*
*             XAE FIELD CONTAINS ERROR CODE. DUE TO                   *
*             GETMAIN FAILURE FOR CSCB. TAKEN VIA BRANCH              *
*             ON VCON TO IEE0503D MESSAGE MODULE, PROVIDED    @Z30BPSV*
*             THE SUBSYSTEM INDICATED THAT THE MESSAGE IS TO  @Z30BPSV*
*             BE ISSUED FOR FAILING START COMMANDS ISSUED     @Z30BPSV*
*             UNDER A TASK OTHER THAN COMMTASK.               @Z30BPSV
*             THE SAME EXIT IS TAKEN IF ASCB CREATION FAILS           *
*             WITH A RETURN CODE OF 4, 8, OR 12.  THE EXACT           *
*             MEANING OF THESE CODES ARE LISTED IN A BLOCK            *
*             COMMENT WHERE THE MACRO IS CALLED.                      *
* OUTPUT DATA =                                                       *
*             ERROR CODE IN XAE FIELD OF XSA IS X'3A'.                *
* RETURN CODES =                                                      *
*             R15 = 8                                         @Z30BPSV*
**********************************************************************
         EJECT
***********************************************************************
* EXIT - ERROR =                                                      *
*             EXIT05                                                  *
* CONDITIONS =                                                        *
*             HOLD OR RELEASE COMMAND AND NO TP= KEYWORD              *
*             IN OPERAND. TAKEN VIA BRANCH ON VCON TO                 *
*             IEE0503D MESSAGE MODULE.                                *
* OUTPUT DATA =                                                       *
*             XAE FIELD CONTAINS ERROR CODE OF X'05'.                 *
* RETURN CODES =                                                      *
*             NONE                                                    *
***********************************************************************
* EXIT - ERROR =                                                      *
*             EXIT0B                                                  *
* CONDITIONS =                                                        *
*             A COMMAND WAS ISSUED WITH NO PARAMETERS.                *
*             TAKEN VIA BRANCH ON VCON TO IEE0503D.                   *
* OUTPUT DATA =                                                       *
*             XAE CONTAINS ERROR CODE X'0B' IN XSA.                   *
* RETURN CODES =                                                      *
*             NONE                                                    *
***********************************************************************
* EXIT - ERROR =                                                      *
*             EXIT3E                                                  *
* CONDITIONS =                                                        *
*             DUMP COMMAND WAS ISSUED WITHOUT COMM PARM.              *
*             EXIT IS TO IEE0503D MESSAGE MODULE.                     *
* OUTPUT DATA =                                                       *
*             XAE CONTAINS ERROR CODE X'3E' IN XSA.                   *
* RETURN CODES =                                                      *
*             NONE                                                    *
***********************************************************************
         EJECT
***********************************************************************
* EXTERNAL REFERENCES =                                               *
* ROUTINES =  IEE0503D ERROR MESSAGE MODULE                           *
*             IED1303D TP PROCESSING MODULE                           *
*             IEAVEMRQ MEMORY REQUEST MODULE                          *
* DATA AREAS =                                                        *
*             NONE                                                    *
* CONTROL BLOCKS =                                                    *
*             IEECHAIN CSCB CREATED IN MODULE                         *
*             ASCB     ASCB CREATED IN MODULE                         *
*             IEEXSA   EXTENDED SAVE AREA                             *
*             IEEBASEA MASTER RESIDENT CORE                           *
*             IEFPTRS  NEW/OLD TCB ASCB POINTERS              @Z30BPSV*
*             IEECUCM  UNIT CONTROL MODULE                    @Z30BPSV*
*             IEFJESCT JES CONTROL TABLE                      @Z30BPSV*
*             IEFJSSOB SUBSYSTEM OPTION BLOCK                 @Z30BPSV*
*             IEFJSSIB SUBSYSTEM IDENTIFICATION BLOCK         @Z30BPSV*
* TABLES =    NONE                                                    *
* MACROS =    GETMAIN, FREEMAIN, ENQ, DEQ, POST,                      *
*             IEFJESCT, IEFJSSOB, IEFJSSIB, IEFSSREQ          @Z30BPSV*
*             ENQ AND DEQ FOR CSCB CHAIN.   ENQ IS EXCLUSIVE.         *
*             MINOR NAME = Q10.                                       *
*             MAJOR NAME = SYSIEFSD.                                  *
*                                                                     *
* MESSAGES =                                                          *
*             MSGID    CODE   MSG                                     *
*             IEE305I  05     COMMAND INVALID                         *
*             IEE311I  0B     PARM MISSING                            *
*             IEE328I  3A     COMMAND ABORTED                         *
*             IEE535I  3E     INVALID DUMP PARAMETER                  *
*                                                                     *
*             IEE0503D ISSUES THE MESSAGES AND                        *
*             CONTAINS THE TEXT.                                      *
*                                                                     *
* SYSGEN =    MODULE INCLUDED IN IGC0003D, IN SYSGEN MACRO            *
*             SGIEF441 FROM AOSB3 DISTLIB. TARGLIB IS                 *
*             SYS1.LPALIB.                                            *
* SYSTEM LIBRARIES =                                                  *
*             NONE.                                                   *
***********************************************************************
         TITLE 'CSCB EXPANSION'
CHFIRST  DSECT
         IEECHAIN
         TITLE 'BASEA EXPANSION'
         IEEBASEA
         TITLE 'XSA EXPANSION'
IEEXSA   DSECT
         IEEXSA
         TITLE 'CVT ENTRIES'
CVT      DSECT
         CVT
         TITLE 'NEW/OLD TCB ASCB POINTERS'
         IEFPTRS
         TITLE 'UNIT CONTROL MODULE'
         IEECUCM FORMAT=NEW
         TITLE 'JOB ENTRY SUBSYSTEM CONTROL TABLE'
         IEFJESCT
         TITLE 'SUBSYSTEM OPTIONS BLOCK'
         IEFJSSOB CF
         TITLE 'SUBSYSTEM IDENTIFICATION BLOCK'
         IEFJSSIB
         TITLE 'EQUATES'
IEE0803D CSECT
***********************************************************************
*                                                                     *
*                     REGISTER USAGE                                  *
*                                                                     *
***********************************************************************
R0       EQU   0                  SIZE REGISTER FOR FREEMAIN     Y02669
R1       EQU   1                  GOTTEN CORE POINTER FROM GETMAIN.
R2       EQU   2                  PTR TO EXTENDED SAVE AREA.
R3       EQU   3                  BASE REGISTER.
R4       EQU   4                  RESIDENT CORE BASE REGISTER.
R5       EQU   5                  CSCB CHAIN ADDRESSIBILITY
R6       EQU   6                  WORK REGISTER.
R7       EQU   7                  CVT ADDRESSIBILITY
R8       EQU   8                  NEW CSCB ADDRESSIBILITY
R9       EQU   9                  WORK REGISTER.
R10      EQU   10                 WORK REGISTER.
R11      EQU   11                 BAL REGISTER                   A00042
R12      EQU   12                 WORK REGISTER                  A00042
R13      EQU   13                 SAVE AREA ADDRESS REGISTER     Y02669
R14      EQU   14                 RETURN REGISTER.
R15      EQU   15                 EXIT REGISTER                  Y02669
***********************************************************************
*                                                                     *
*                    DISPLACEMENTS                                    *
*                                                                     *
***********************************************************************
D0       EQU   0                        *                         20002
D1       EQU   1                        *
D2       EQU   2                  LENGTH OF ASID                 Y02669
D3       EQU   3                  LENGTH OF 'TP='                Y02669
D4       EQU   4                  OFFSET IN GETMAIN LIST FOR     Y02669
*                                 GOTTEN CORE PTR                Y02669
D6       EQU   6                  LENGTH OF 'COMM=(' PARM        Y02669
D8       EQU   8                  LENGTH OF XSA MSG FILL         Y02669
D124     EQU   124                LENGTH OF BUFFER AREA          Y01012
BLANK    EQU   C' '               BLANK FOR PADDING CHBUF       YM25013
         EJECT
***********************************************************************
*
*                     VERB CODES
*
***********************************************************************
START    EQU   X'04'              START COMMAND VERB CODE        Y01012
MOUNT    EQU   X'0C'              MOUNT COMMAND VERB CODE        Y02669
VARY     EQU   X'28'              VARY COMMAND VERB CODE         Y02669
VPATH    EQU   X'50'              VARY PATH COMMAND VERB CODE    Y02669
VCPU     EQU   X'54'              VARY CPU COMMAND VERB CODE     Y02669
VCH      EQU   X'58'              VARY CHANNEL COMMAND VERB CODE Y02669
VSTOR    EQU   X'5C'              VARY STORAGE COMMAND VERB CODE Y02669
QUIESCE  EQU   X'60'              QUIESCE COMMAND VERB CODE      Y02669
HOLD     EQU   X'6C'              HOLD COMMAND VERB CODE         Y02669
RELEASE  EQU   X'70'              RELEASE COMMAND VERB CODE      Y02669
LOGON    EQU   X'98'              LOGON COMMAND VERB CODE        Y02669
DUMP     EQU   X'AC'              DUMP COMMAND VERB CODE         Y02669
TRACK    EQU   X'C4'              TRACK COMMAND VERB CODE        Y02669
***********************************************************************
*
*                   ERROR CODES
*
***********************************************************************
INVCODE  EQU   X'05'              COMMAND INVALID MSG CODE       Y02669
PARMCDE  EQU   X'0B'              PARAMETER MISSING MSG CODE     Y02669
NOCORECD EQU   X'3A'              CODE FOR NO CORE MSG           A34263
DUMPCDE  EQU   X'3E'              INVALID DUMP CMD ERROR CODE    Y01012
***********************************************************************
*                                                                     *
*                         MISCELLANEOUS CONSTANTS              @Z30BPSV
*                                                                     *
***********************************************************************
CSCBSZE  EQU   CHLAST-CHFIRST     SIZE OF CSCB                   Y02669
PTR      EQU   4                  INDIRECT ADDRESS             @Z30BPSV
SSSTORE  EQU   SSIBSIZE+SSOBLN16+PTR  SIZE OF SUBSYSTEM        @Z30BPSV
*                                 INTERFACE STORAGE            @Z30BPSV
HYBITON  EQU   X'80'              MASK FOR END-OF-LIST         @Z30BPSV
LOBYTES  EQU   7                  MASK FOR ICM                 @Z30BPSV
         TITLE 'COMMAND SCHEDULE MODULE'
***********************************************************************
*     ESTABLISH ADDRESSIBILITY AND BASE FOR XSA, BASEA.          Y02669
*     CHECK IF NO OPERANDS ON COMMAND. IF NONE, SET UP           Y02669
*     ERROR CODE FOR PARM MISSING MESSAGE, IEE311I.              Y02669
*     (QUIESCE AND LOGON ARE EXCEPTIONS AND CAN HAVE NO          M00875
*     OPERANDS.) IF OPERANDS PRESENT, CONTINUE WITH              Y02669
*     PROCESSING.                                                Y02669
***********************************************************************
         BALR  R3,0               BASE                           Y02669
         USING *,R3               REGISTER.
         MODID BRANCH=YES
         USING IEEXSA,R2          EXTENDED SAVE AREA BASE
         L     R7,CVTPTR          ADDRESS OF CVT
         USING CVT,R7             ESTABLISH CVT ADDRESSABILITY   Y01012
         L     R4,CVTMSER         MASTER RESIDENT CORE ADDRESSING.
         USING BASE,R4            ESTABLISH ADDRESSIBILITY
         ST    R14,XASAVLOC       SAVE RETURN ADDRESS            Y02669
         L     R5,XAL             GET PTR TO LIST POSITION
         LA    R5,D0(R5)          CLEAR HIGH ORDER GARBAGE
         CLI   XAN,QUIESCE        IS THIS QUIESCE COMMAND?       Y02651
         BE    CSCB               YES, BYPASS OPERAND CHECK      Y02651
         CLI   XAN,LOGON          IS THIS LOGON COMMAND?         M00875
         BE    CSCB               YES,BYPASS OPERAND CHECK       M00875
         LTR   R5,R5              ARE THERE ANY OPERANDS?        Y02669
         BZ    EXIT0B             NO. ERROR                      Y02669
         EJECT
***********************************************************************
*     IF DUMP COMMAND, VALIDITY CHECK FOR 'COMM=(' IN THE        Y02669
*     FIRST PART OF OPERAND. IF NONE, SET UP ERROR CODE          Y02669
*     IN THE XSA  FOR PARM INVALID MESSAGE, IEE535I.             Y02669
*     IF OK, GO GET CSCB CORE.                                   Y02669
*     ON HOLD AND RELEASE COMMANDS, CHECK FOR TP= AS THE         Y02669
*     OPERAND. IF IT IS NOT TP=, SET UP ERROR CODE FOR           Y02669
*     INVALID PARM MESSAGE, IEE305I. IF OK, BRANCH TO            Y02669
*     IED1303D TO PROCESS COMMAND.                               Y02669
***********************************************************************
CHECDUMP EQU   *                                                 Y02651
         CLI   XAN,DUMP           THIS DUMP COMMAND?             Y02669
         BNE   CHECHOLD           NO, CHECK FOR HOLD CMD         Y02669
         CLC   D0(D6,R5),COMM     YES, THIS 'COMM=(' PARAMETER?  Y02669
         BE    CSCB               YES,THEN SET UP THE CSCB       Y02669
         B     EXIT3E             NO, INVALID PARM RTN           Y02669
CHECHOLD EQU   *
         CLI   XAN,HOLD           IS IT HOLD COMMAND              20002
         BE    CHECKTP            YES, CHECK FOR 'TP='            20002
         CLI   XAN,RELEASE        IS IT RELEASE COMMAND           20002
         BNE   CSCB               NO, CONTINUE                   Y02669
CHECKTP  EQU   *                                                  20002
         CLC   TPEQLS(D3),D0(R5)  CHECK FOR 'TP='                Y01012
         BE    EXIT13             YES, BRANCH TO IED1303D        Y02669
         B     EXIT05             NO, INVALID PARM RTN           Y02669
         EJECT
***********************************************************************
*     DO CONDITIONAL GETMAIN IN SP245 FOR CSCB. IF NO            Y02669
*     CORE, SET UP COMMAND ABORTED MESSAGE, IEE328I. IF          Y02669
*     OK, INITIALIZE CSCB WITH INFORMATION IN XSA.               Y02669
***********************************************************************
         SPACE
CSCB     EQU   *
         MVC   XASAVSTD(GETLNG),GETLIST                          Y02669
         LA    R1,XASAVSTD+D4     XAD SHOULD POINT TO            Y02669
         ST    R1,XASAVSTD+D4     GOTTEN CORE                    Y02669
         LA    R1,XASAVSTD        PREPARE R1 FOR GETMAIN         A34263
         GETMAIN MF=(E,(1))       EXECUTE FORM OF GETMAIN        A34263
         LTR   R15,R15            WAS CORE AVAILABLE             A34263
         BZ    GOTCSCB            YES,CONTINUE                 @Z30BPSV
         LA    R8,SSCFCSFL        SET CSCB FAIL CODE           @Z30BPSV
         ST    R8,XAK             FOR SUBSYSTEM                @Z30BPSV
         B     EXIT3A             SET UP FOR MESSAGE           @Z30BPSV
GOTCSCB  EQU   *                                               @Z30BPSV
         L     R8,XASAVSTD+D4     PREPARE ADDRESSABILITY         Y02669
         USING CHAIN,R8           R8 CONTAINS PTR TO GOTTEN CORE Y02669
         XC    CHAIN(CSCBSZE),CHAIN     CLEAR CSCB TO ZEROES     Y01012
         MVI   CHBUF,BLANK              CLEAR CHBUF TO BLANKS   YM25013
         MVC   CHBUF+D1(L'CHBUF-1),CHBUF                        YM25013
         MVC   CHVCD(D1),XAN      MOVE VERB CODE TO GOTTEN CORE. Y02669
         MVI   CHSZE,(CSCBSZE/D8) CSCB SIZE IN DOUBLE WORDS      Y01012
         MVC   CHUCMP(D1),XAU     PUT UCMI INTO CSCB                MCS
*                                 DISPLAY OPERANDS MASK          Y02669
         MVC   CHTRSTAT(D1),XAXMASK
         MVC   CHASID,XAA         MOVE ASID FOR TSO IN OP. MODE YM01854
         EJECT
***********************************************************************
*
*     THE FOLLOWING CODE ANSWERS A PROBLEM FOUND IN FIELD TEST   A00042
*     FOR RELEASE 1 OF VS/2.
*     A USER WAS ISSUING COMMANDS AFTER GETTING INTO KEY ZERO.   A00042
*     THE COMMAND BUFFER IN HIS PROGRAM ENDED NEAR A 4K BOUN-    A00042
*     DARY. THE PREVIOUS CODE BLINDLY MOVED 124 CHARACTERS INTO  A00042
*     CHBUF FROM THE COMMAND INPUT BUFFER. WITH THE INTRODUC-    A00042
*     TION OF VIRTUAL STORAGE, IT WAS POSSIBLE TO HIT THE BOUN-  A00042
*     DARY OF AN UNITIALIZED PAGE IN THE MOVE, RESULTING IN AN   A00042
*     0C4.  NOW THE LENGTH OF THE OEPRANDS IS CALCULATED VIA     A00042
*     THE LENGTH FIELD OF THE INPUT BUFFER AND THE ADDRESS OF    A00042
*     WHERE THE OPERANDS BEGIN.                                  A00042
*
***********************************************************************
         CLI   CHVCD,QUIESCE      IS IT QUIESCE COMMAND?         A00042
         BE    INITREST           YES, BYPASS OPERAND MOVE AS    A00042
*                                 QUIESCE HAS NO OPERANDS.       A00042
         CLI   CHVCD,LOGON        IS IT LOGON COMMAND?           M00875
         BE    INITREST           LOGON HAS NO OPERANDS          M00875
         L     R12,XAR            ADDRESS COMMAND INPUT BUFFER   A00042
         LA    R12,D0(R12)        CLEAR HIGH ORDER BYTE          A00042
         AH    R12,D0(R12)        COMPUTE END OF BUFFER          A00042
         SR    R12,R5             SUBTRACT BEGINNING OF          A00042
*                                 OPERANDS FROM END OF BUFFER    A00042
*                                 TO GET LENGTH                  A00042
         CH    R12,CHBUFLNG       DO OPERANDS EXCEED CSCB        A00042
*                                 BUFFER LENGTH?                 A00042
         BNH   CHKONES            NO, CHECK IF LESS THAN ONE     A00042
         LH    R12,CHBUFLNG       YES, MOVE CSCB BUFFER LENGTH   A00042
         B     MOVEOPS            GO EXECUTE MOVE                A00042
CHKONES  EQU   *                                                 A00042
         CH    R12,HALFONE        IS LENGTH AT LEAST ONE?        A00042
         BNL   MOVEOPS            YES, MOVE OPERANDS TO CSCB     M00837
         BAL   R11,FREECSCB       NO, FREE GOTTEN CORE           A00042
         B     EXIT0B             ISSUE ERROR MSG, IEE311I       A00042
MOVEOPS  EQU   *                                                 A00042
         BCTR  R12,D0             DECREMENT BY ONE FOR MOVE      A00042
         EX    R12,MVECHBUF       MOVE OPERANDS TO CSCB          A00042
INITREST EQU   *                                                 A00042
         OI    CHSTS,CHAP         SET ASSIGNMENT PENDING BIT     Y02669
         TM    XASSDS,XASSDS1     IS THIS A STATUS DISPLAY       Y02669
         BZ    SETCONID           NO, USE ISSUING CONSOLE ID     Y02669
         MVC   CHCNID(D1),XASCID  SAVE CONSOLE ID                Y02669
         MVC   CHARID(D1),XASDID  SAVE DISPLAY AREA ID           Y02669
         B     CHKVARY            CHECK FOR VARY COMMAND         Y02669
SETCONID EQU   *                                                 Y02669
         MVC   CHCNID(D1),CHUCMP  CONSOLE ID OF ISSUING CON      Y02669
         EJECT
*********************************************************************
*     FOR VARY COMMANDS, THE READER'S COMMAND AUTHORITY          Y02669
*     IS STORED IN THE XAS FIELD BY IEE5403D. IEE0803D           Y02669
*     TRANSFERS THIS TO THE CHINC FIELD SO THAT THE              Y02669
*     ATTACHED VARY PROCESSORS CAN ACCESS THE INFORMA-           Y02669
*     TION AFTER THE XSA IS FREED.                               Y02669
*********************************************************************
         SPACE
CHKVARY  EQU   *                                                 Y02669
         CLI   CHVCD,VARY         IS IT VARY COMMAND?            Y02669
         BE    SETAUTH            YES, MOVE RDR AUTHORIZATION    Y02669
         CLI   CHVCD,VPATH        IS IT VARY PATH COMMAND?       Y02669
         BE    SETAUTH            YES, MOVE RDR AUTHORIZATION    Y02669
         CLI   CHVCD,VCPU         IS IT VARY CPU COMMAND?        Y02669
         BE    SETAUTH            YES, MOVE RDR AUTHORIZATION    Y02669
         CLI   CHVCD,VCH          IS IT VARY CHANNEL COMMAND?    Y02669
         BE    SETAUTH            YES, MOVE RDR AUTHORIZATION    Y02669
         CLI   CHVCD,VSTOR        IS IT VARY STORAGE COMMAND?    Y02669
         BE    SETAUTH            YES, MOVE RDR AUTHORIZATION    Y02669
         B     CHKSTART           NO, CHECK NEED FOR IEAVEMRQ    Y02669
SETAUTH  EQU   *                                                 Y02669
         MVC   CHINC(D2),XAS      MOVE READER CMND AUTH          Y02669
         B     ENQCSCB            GO CHAIN CSCB FOR VARY         Y02669
         SPACE
**********************************************************************
*     FOR DISPLAY AND TRACK PROCESSORS, (IEECB800), THE CHTRKID  Y02669
*     FIELD IS SET BELOW ON ALL STARTS OR MOUNTS AND LOGONS.     Y02669
*     TO SUPPORT D JOBS, CHJOBID IS SET HERE FOR ALL STARTS      Y02669
*     AND MOUNTS. TO SUPPORT D TS, CHTSID IS SET HERE FOR ALL    Y02669
*     LOGON COMMANDS.                                            Y02669
**********************************************************************
         SPACE
CHKSTART  EQU   *                                                Y02669
         CLI   CHVCD,START        IS IT START COMMAND?           Y02669
         BE    SETJOB             YES, SET JOB IDENTIFICATION    Y02669
         CLI   CHVCD,MOUNT        IS IT MOUNT COMMAND?           Y02669
         BNE   CHKLOGON           NO, CHECK FOR LOGON            Y02669
SETJOB   EQU   *                                                 Y02669
         OI    CHTRKID,CHJOBID    YES, SET JOB IDENTIFICATION    Y02669
         B     GETASCB            GO TO MEMORY CREATE FOR        Y02669
*                                 START AND MOUNT                Y02669
CHKLOGON EQU   *                                                 Y02669
         CLI   CHVCD,LOGON        IS IT LOGON COMMAND?           Y02669
         BNE   CHKTRACK           NO, GO TO CHECK TRACK          Y02669
SETLOGON EQU   *                                                 M00875
         OI    CHTRKID,CHTSID     YES, SET TIME SHARING ID       Y02669
         B     GETASCB            GO TO MEMORY CREATE FOR LOGON  Y02669
         EJECT
*********************************************************************
*     THE TRACK COMMAND PROCESSOR NEEDS TO BE POSTED BY          Y02669
*     DIDOCS CONSOLE CLOSE WHEN A CONSOLE IS VARIED OFFLINE      Y02669
*     OR SUFFERS ASYNCHRONOUS FAILURE. THE FOLLOWING ROUTINE     Y02669
*     SETS UP THE COMMUNICATIONS FIELD FOR THE POST: THE         Y02669
*     CHCECB ADDRESS IS STORED IN THE DCMATRECB FIELD. THE       Y02669
*     ADDRESS OF THE LATTER IS PICKED UP FROM XAXSACB AS SET UP  Y02669
*     BY IEE7503D. (OTHERWISE DIDOCS COULD NOT ACCESS THE        Y02669
*     TRACK CSCB.)                                               Y02669
*********************************************************************
CHKTRACK EQU   *
         CLI   CHVCD,TRACK        IS IT TRACK COMMAND?           Y02669
         BNE   ENQCSCB            NO, GO TO ENCHAIN CSCB         Y02669
         LA    R9,CHCECB          ADDRESS OF CANCEL ECB          Y02669
         L     R10,XAXSACB        ADDRESS OF DCM FIELD IN SACB   Y02669
         ST    R9,D0(R10)         ECB ADDRESS STORED FOR DIDOCS  Y02669
         B     ENQCSCB            GO CHAIN CSCB FOR TRACK        Y02669
         SPACE
*********************************************************************
*     FOR STARTS, MOUNTS AND LOGONS A NEW MEMORY MUST BE CREATED.
*     THE FOLLOWING CODE SETS UP THE PARM LIST TO IEAVEMRQ, THE
*     MEMORY CREATE MODULE, BALR'S TO THAT MODULE, AND PROCESSES
*     RETURN CODES. AS INPUT, R1 POINTS TO THE CSCB PTR, AND R13
*     CONTAINS THE ADDRESS OF A REGISTER SAVE AREA.
*********************************************************************
         SPACE
GETASCB  EQU   *                                                 Y02669
         ST    R8,XAP             SET UP PARM CSCB PTR           Y02669
         LA    R1,XAP             GET PARAMETER ADDRESS          Y02669
         LA    R13,XASAVSTD       SAVE AREA ADDRESS              Y02669
         L     R15,VCONMRQ        IEAVEMRQ ADDRESS               Y02669
         BALR  R14,R15            BRANCH TO IEAVEMRQ             Y02669
         EJECT
*********************************************************************
*     ON RETURN FROM IEAVEMRQ, THE ASCB IS GOTTEN AND            Y02669
*     CONTAINS THE CSCB POINTER. THE CSCB CONTAINS THE           Y02669
*     ASID. REG0 CONTAINS THE ASID. R15 CONTAINS THE             Y02669
*     RETURN CODES.                                              Y02669
*          R15=0  -  SUCCESSFUL                                  Y02669
*          R15=4  -  NO GO FROM OPTIMIZER                        Y02669
*          R15=8  -  SYSTEM OVERLOAD                             Y02669
*          R15=12 -  UNEXPECTED SYSTEM FAILURE                   Y02669
*     IN THE CASE OF FAILURE, THE CORE OBTAINED FOR THE          Y02669
*     CSCB IS FREED.                                             Y02669
*********************************************************************
         SPACE
         LTR   R15,R15            WAS MEMORY CREATE SUCCESSFUL?  Y02669
         BZ    ENQCSCB            IF YES, GO TO CHAIN NEW CSCB   Y02669
         ST    R15,XAK            SAVE RET CODE FOR SUBSYSTEM  @Z30BPSV
         BAL   R11,FREECSCB       NO, FREE GOTTEN CORE           A00042
         B     EXIT3A             NO, ERROR EXIT FOR IEE328I     A00042
FREECSCB EQU   *                                                 A00042
         LA    R0,CSCBSZE         NO, GET SIZE CSCB FOR FREEMAIN Y02669
         O     R0,SP245MSK        INSERT SUPBOOL               @Z30BPSV
         LR    R1,R8              GET PTR TO CSCB FOR FREEMAIN   Y02669
         FREEMAIN R,LV=(0),A=(1)                                 Y02669
         BR    R11                RETURN TO INTERNAL CALLER      A00042
         EJECT
*********************************************************************
*     AN EXCLUSIVE ENQ ON Q10 IS DONE ON THE CSCB CHAIN          Y02651
*     RESOURCE TO ADD THE NEWLY CREATED CSCB TO THE              Y02651
*     CHAIN.  THEN THE RESOURCE IS DEQ'D.                        Y02651
*     THE SYSEVENT MACRO IS ISSUED PRIOR TO THE ENQ TO           Y02651
*     MAKE THE MEMORY NON-SWAPPABLE, AND AFTER THE DEQ           Y02651
*     TO MAKE THE MEMORY SWAPPABLE AGAIN.                        Y02651
*********************************************************************
         SPACE
ENQCSCB  EQU   *                                                 Y02651
         ST   R0,XAP              SAVE ASID FROM MEMORY CREATE   M00881
*                                 FOR TIOC ON LOGON COMMAND      M00881
         SYSEVENT DONTSWAP        MAKE MEMORY NON=SWAPPABLE      Y02651
         MVC   XASAVSTD(ENQLNG),ENQLIST                          Y02651
         LA    R1,XASAVSTD        SET UP ADDRESS FOR ENQ         Y02651
         ENQ   ,MF=(E,(1))                                       Y02651
         LA    R6,BACHN           ADDR OF CHAIN PTR TO R6.
         DROP  R8
         USING CHAIN,R5
CSCBSRCH EQU   *
         LR    R5,R6              UPDATE BASE REGISTER
         L     R6,CHPTR           UPDATE SEARCH REG WITH CHAIN PTR
         LTR   R6,R6              THIS LAST CSCB                 Y01012
         BNE   CSCBSRCH           NO KEEP SEARCHING FOR LAST ONE Y01012
         ST    R8,CHPTR           CHAIN ELEMENT BY PUTTING CORE  Y02669
*                                 ADDR IN LAST CHAIN PTR AREA.
         DROP R5
         USING CHAIN,R8           REESTAB BASE FOR CSCB            I283
         MVC   XASAVSTD(DEQLNG),DEQLIST                          Y02651
         LA    R1,XASAVSTD        SETUP DEQ LIST FORM FOR DEQ    Y02651
         DEQ   ,MF=(E,(1))        RELEASE CSCB RECOURSE          Y02651
         SYSEVENT OKSWAP          MAKE MEMORY SWAPPABLE          Y02651
         EJECT
*********************************************************************
*     POST THE MASTER SCHEDULER WAIT ROUTINE, IEEVWAIT,          Y02669
*     VIA CROSS MEMORY POST FUNCTION.                            Y02657
*********************************************************************
         MVC   XASAVSTD(POSTLNG),POSTLIST                        Y02657
         LA    R1,XASAVSTD        ADDRESS LIST FORM MACRO        Y02657
         L     R6,BAASCB          GET ASCB ADDRESS FOR POST      Y02657
         POST BALAD,ASCB=(R6),MF=(E,(1)),ERRET=CVTBRET           Y02657
         L     R14,XASAVLOC       RESTORE RETURN ADDRESS         Y02669
         L     R0,XAP             RESTORE ASID FOR TIOC          M00881
         SR    R15,R15            SUCCESSFUL RETURN CODE         M00879
         BR    R14                RETURN TO CALLER               Y02669
         EJECT
***********************************************************************
*                                                                Y02669
*     VALID EXIT FOR HOLD OR RELEASE TP COMMAND TO IED1303D.     Y02669
*                                                                Y02669
***********************************************************************
EXIT13   EQU   *                                                 Y02669
         L     R15,VCON13         ADDRESS OF IED1303D            Y01029
         BR    R15                GO TO IED1303D                 Y01029
         SPACE
***********************************************************************
*                                                                Y02669
*     GENERAL ERROR EXITS FOR COMMANDS TO IEE0503D.              Y02669
*                                                                Y02669
***********************************************************************
EXIT0B   EQU   *                                                 Y02669
         MVI   XAE,PARMCDE        (VERB) PARAMETER MISSING       Y01012
         B     EXIT               BRANCH TO IEE0503D             Y01012
EXIT05   EQU   *                                                 Y02669
         MVI   XAE,INVCODE        COMMAND INVALID ERROR CODE     Y02669
         B     EXIT               BRANCH TO IEE0503D             Y02669
EXIT3E   EQU   *                                                 Y02669
         MVI   XAE,DUMPCDE        PARAMETER INVALID ERROR CODE   Y02669
EXIT     EQU   *                                                 Y01029
         L     R14,XASAVLOC       RESTORE RETURN ADDRESS         A00042
         L     R15,VCON05         GET ADDRESS OF IEE0503D        Y01029
         BR    R15                BRANCH TO IEE0503D             Y01029
         EJECT
***********************************************************************
*
*      ERROR EXIT FOR START, MOUNT AND LOGON.                  @Z30BPSV
*                                                              @Z30BPSV
*     IF A START CMD WAS NOT ISSUED UNDER THE COMMUNICATIONS   @Z30BPSV
*     TASK (I.E., POTENTIALLY ISSUED BY A SUBSYSTEM),          @Z30BPSV
*     NOTIFICATION THAT THE COMMAND IS FAILING IS SENT TO ALL  @Z30BPSV
*     ACTIVE SUBSYSTEMS.  UNLESS AT LEAST ONE SUBSYSTEM        @Z30BPSV
*     INDICATES THAT IEE328I IS TO BE SUPPRESSED, CONTROL      @Z30BPSV
*     PASSES TO IEE0503D.  OTHERWISE, CONTROL RETURNS TO       @Z30BPSV
*     THE CALLER.                                              @Z30BPSV
*                                                              @Z30BPSV
*     IN ANY EVENT, A RETURN CODE OF EIGHT IS SET IN           @Z30BPSV
*     REGISTER FIFTEEN.  THE MESSAGE IS ALWAYS ISSUED FOR      @Z30BPSV
*     LOGON AND MOUNT.                                         @Z30BPSV
*
***********************************************************************
          SPACE
EXIT3A   EQU   *                                               @Z30BPSV
         L     R14,XASAVLOC      RESTORE RETURN ADDRESS        @Z30BPSV
         CLI   XAN,START         IF NOT A START COMMAND,       @Z30BPSV
         BNE   SETRC             SET RC AND GO TO MSG MOD      @Z30BPSV
         L     R9,CVTTCBP        GET ADDR NEW/OLD PTRS         @Z30BPSV
         USING TCBASCB,R9        ADD RESSABILITY TO NEW/OLD    @Z30BPSV
         L     R9,TCBPTR         GET ADDR OF CALLER'S TCB      @Z30BPSV
         DROP  R9                RELEASE NEW/OLD ADDR'LITY     @Z30BPSV
         L     R10,CVTCUCB       GET ADDR OF UCM               @Z30BPSV
         USING UCM,R10           ADDRESSABILITY TO UCM         @Z30BPSV
         C     R9,UCMPXA         IS CALLER COMMTASK            @Z30BPSV
         BE    SETRC             YES, SET RC AND GO TO MSG MOD @Z30BPSV
         DROP  R10               RELEASE UCM ADDRESSABILITY    @Z30BPSV
         LA    R1,XASAVSTD       GET ADDR FOR GETMAIN LIST     @Z30BPSV
         MVC   XASAVSTD(SSLNG),SSLIST MOVE IN LIST             @Z30BPSV
         LA    R9,XASAVSTD+D4    SET ADDRESS FOR               @Z30BPSV
         ST    R9,XASAVSTD+D4    GOTTEN STORAGE IN LIST        @Z30BPSV
         GETMAIN MF=(E,(1))      GET STORAGE FROM SP255        @Z30BPSV
         LTR   R15,R15           SUCCESS?                      @Z30BPSV
         MVC   XAS(D4),SP255     SAVE SUBPOOL/LENGTH           @Z30BPSV
         L     R1,XASAVSTD+D4    GET ADDRESS OF STORAGE        @Z30BPSV
         ST    R1,XAS+D4         SAVE IT                       @Z30BPSV
         BZ    GOTSSBLX          YES,SET UP FOR SUBSYSTEMS     @Z30BPSV
*                                AND BRANCH AROUND SP245       @Z30BPSV
*                                GETMAIN                       @Z30BPSV
         GETMAIN R,LV=SSSTORE,SP=245 TRY AGAIN                 @Z30BPSV
         MVC   XAS(D4),SP245     SAVE SUBPOOL/LENGTH           @Z30BPSV
         ST    R1,XAS+D4         SAVE STORAGE ADDRESS          @Z30BPSV
GOTSSBLX EQU   *                                               @Z30BPSV
         XC    D0(SSSTORE,R1),D0(R1) ZERO GOTTEN STORAGE       @Z30BPSV
         EJECT
***********************************************************************
*
*
*        INITIALIZE THE SSIB AND SSOB                          @Z30BPSV
*
*
***********************************************************************
         SPACE
         LA    R9,D4(R1)         BUILD INTERFACE TO IEFSSREQ:  @Z30BPSV
         ST    R9,D0(R1)         SET SSOB ADDR IN PARM LIST    @Z30BPSV
         OI    D0(R1),HYBITON    WITH END-OF-LIST ON           @Z30BPSV
         USING SSOB,R9           R9 ADDRESSES SSOB             @Z30BPSV
         LA    R10,SSOBLN16(R9)  GET ADDRESS OF SSIB           @Z30BPSV
         USING SSIB,R10          R10 ADDRESSES SSIB            @Z30BPSV
         SPACE
*        INITIALIZE THE SSOB                                   @Z30BPSV
         SPACE
         ST    R10,SSOBSSIB      SET SSIB PTR IN SSOB          @Z30BPSV
         MVC   SSOBID,SSOBNAME   MOVE'SSOB' TO SSOB            @Z30BPSV
         MVI   SSOBLEN+1,SSOBHSIZ MOVE IN LENGTH               @Z30BPSV
         MVI   SSOBFUNC+1,SSOBCFCD MOVE IN FUNCTION CODE       @Z30BPSV
         LA    R6,SSCFBGN        ADDR FUNCTION DEPENDENT       @Z30BPSV
*                                EXTENSION                     @Z30BPSV
         ST    R6,SSOBINDV       STORE IN SSOB BASE            @Z30BPSV
         MVI   SSCFLEN+1,SSCFSIZE STORE SIZE IN EXTENSION      @Z30BPSV
         MVC   SSCFBFAD+1(D3),XAR+1 PROVIDE ADDRESS OF COMMAND @Z30BPSV
*                                BUFFER TO SUBSYSTEM, AND      @Z30BPSV
         MVC   SSCFMRRC(D4),XAK  THE RETURN CODE FROM MEMORY   @Z30BPSV
*                                REQUEST OR CSCB FAILURE       @Z30BPSV
         SPACE
*        INITIALIZE THE SSIB                                   @Z30BPSV
         SPACE
         MVI   SSIBLEN+1,SSIBSIZE MOVE IN LENGTH OF SSIB       @Z30BPSV
         MVC   SSIBSSNM,SUBNAME  MOVE IN SUBSYSTEM NAME        @Z30BPSV
         MVC   SSIBID,SSIBNAME   MOVE'SSIB' TO SSIB            @Z30BPSV
         LA    R13,XASAVSTD      GET SAVE AREA POINTER         @Z30BPSV
         LR    R6,R14            SAVE RETURN ADDRESS           @Z30BPSV
         IEFSSREQ                ISSUE SUBSYSTEM INTERFACE     @Z30BPSV
         EJECT
***********************************************************************
*
*        FREE THE SSIB AND SSOB STORAGE                        @Z30BPSV
*
***********************************************************************
         SPACE
         LR    R14,R6            RESTORE RETURN ADDRESS        @Z30BPSV
         L     R10,SSOBRETN      SAVE SUBSYSTEM RETURN CODE    @Z30BPSV
         LR    R9,R15            SAVE INTERFACE RETURN CODE    @Z30BPSV
         DROP  R9                RELEASE SSOB AND              @Z30BPSV
         DROP  R10               SSIB ADDRESSABILITY           @Z30BPSV
         LM    R0,R1,XAS         LOAD STORAGE ADDRESS,         @Z30BPSV
*                                SUBPOOL AND LENGTH FOR        @Z30BPSV
         FREEMAIN R,LV=(0),A=(1) FREEMAIN                      @Z30BPSV
         LTR   R9,R9             SUBSYS INTERFACE SUCCESSFUL   @Z30BPSV
         BNZ   SETRC             NO, SET RC AND GOTO MSG MOD   @Z30BPSV
         LTR   R10,R10           IEE328I TO BE ISSUED          @Z30BPSV
         BNZ   NOMSG             NO, SET RC AND RETURN         @Z30BPSV
         SPACE
*        SET RETURN CODE, SET MESSAGE CODE, AND BRANCH         @Z30BPSV
         SPACE
SETRC    EQU   *
         LA    R15,D8            SET FAILING RETURN CODE       @Z30BPSV
         MVI   XAE,NOCORECD      IEE328I MESSAGE CODE          @Z30BPSV
         L     R8,VCON05         GET ADDRESS OF IEE0503D       @Z30BPSV
         BR    R8                BRANCH TO IT                  @Z30BPSV
         SPACE
*        SET RETURN CODE AND RETURN                            @Z30BPSV
         SPACE
NOMSG    EQU   *                                               @Z30BPSV
         LA    R15,D8            SET FAILING RETURN CODE       @Z30BPSV
         BR    R14               RETURN                        @Z30BPSV
         EJECT
***********************************************************************
*
*        CONSTANTS AND MACRO LISTS                             @Z30BPSV
*
***********************************************************************
         DS    0F
VCON05   DC    V(IEE0503D)       MESSAGE MODULE CSECT.           Y01029
VCON13   DC    V(IED1303D)       TCAM                            Y01029
VCONMRQ  DC    V(IEAVEMRQ)       MEMORY REQUEST MODULE           Y02669
SP245MSK DC    X'F5000000'       SUBPOOL 245 FOR FREEMAIN MAC  @Z30BPSV
COMM     DC    C'COMM=('         FORMAT OF COMM PARAMETER        Y02669
TPEQLS   DC    C'TP='            FORMAT OF TP PARAMETERS         Y02669
SSOBNAME DC    C'SSOB'           SSOB NAME                     @Z30BPSV
SSIBNAME DC    C'SSIB'           SSIB NAME                     @Z30BPSV
SUBNAME  DC    C'MSTR'           MASTER SUBSYSTEM NAME         @Z30BPSV
SP245    DC    AL1(245)          SUBPOOL 245 AND               @Z30BPSV
         DC    AL3(SSSTORE)      LENGTH FOR FREEMAIN           @Z30BPSV
SP255    DC    AL1(255)          SUBPOOL 255 AND               @Z30BPSV
         DC    AL3(SSSTORE)      LENGTH FOR FREEMAIN           @Z30BPSV
         DS    0F
MVECHBUF MVC   CHBUF(D0),D0(R5)  MOVE OPERANDS TO CSCB BUFFER    A00042
CHBUFLNG DC    AL2(L'CHBUF)      LENGTH OF CSCB BUFFER           A00042
HALFONE  DC    X'0001'           CHECK FOR MINIMUM TO MOVE       A00042
         DS    0D
ENQLIST  ENQ   (SYSNAME,RNAME,E,3,SYSTEM),RET=HAVE,MF=L          Y02651
ENQEND   EQU   *                  LABLE USED TO CALCULATE LENGTH Y02651
         DS    0D
DEQLIST  DEQ   (SYSNAME,RNAME,3,SYSTEM),RET=HAVE,MF=L            Y02651
DEQEND   EQU   *                  LABLE USED TO CALCULATE LENGTH Y02651
CANUSE   DS    0F                 FOR BOUNDARY ALIGNMENT         A34263
GETLIST  GETMAIN EC,LV=CSCBSZE,A=0,SP=245,MF=L                   Y02669
GETEND   EQU   *                  LABLE USED TO CALCULATE LENGTH Y02669
SSLIST   GETMAIN EC,LV=SSSTORE,A=0,SP=255,MF=L SSOB/SSIB LIST  @Z30BPSV
SSEND    EQU   *                  LABEL USED TO CALCULATE LEN  @Z30BPSV
POSTLIST POST  MF=L                                              Y02657
POSTEND  EQU   *                  LABLE USED TO CALCULATE LENGTH Y02657
ENQLNG   EQU   ENQEND-ENQLIST     LENGTH TO MOVE TO GOTTEN CORE  Y02651
DEQLNG   EQU   DEQEND-DEQLIST     LENGTH TO MOVE TO GOTTEN CORE  Y02651
GETLNG   EQU   GETEND-GETLIST     LENGTH TO MOVE TO GOTTEN CORE  Y02669
SSLNG    EQU   SSEND-SSLIST       LENGTH TO MOVE TO GOTEN CORE @Z30BPSV
POSTLNG  EQU   POSTEND-POSTLIST   LENGTH TO MOVE TO GOTTEN CORE  Y02657
SYSNAME  DC    C'SYSIEFSD'        MAJOR NAME IS SYSIEFSD         Y02651
RNAME    DC    C'Q10'             MINOR NAME IS Q10              Y02651
PATCH    DC    CL50'* * * * IEE0803D * * * *'
         EJECT
         END
