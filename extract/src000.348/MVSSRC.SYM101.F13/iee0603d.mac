         TITLE 'SET COMMAND SYNTAX CHECKER - MODULE IEE0603D'
IEE0603D CSECT
* C 000798,001874-001877,128292-128392                           YM4026
* D 000983-000984,001762,126792-127292,146792-148292             YM4026
***********************************************************************
*                                                                     *
*TITLE:  IEE0603D---SET COMMAND SYNTAX CHECKER - MODULE IEE0603D      *
*                                                                     *
*FUNCTION: ACCEPTS THE PARAMETERS OF THE SET COMMAND: CLOCK,    Y01040*
*   DATE, RESET, AND IPS, PLUS THE GMT AND ADDR PARAMETERS      Y02759*
*   (VALID ONLY DURING IPL, VARY CPU ONLINE, AND TOD CLOCK      Y02759*
*   RECOVERY) AND PROCEEDS AS FOLLOWS:                          Y02759*
*   IF TIME AND/OR DATE IS SPECIFIED WITHOUT GMT, OR IF RESET   Y02759*
*   IS SPECIFIED, IEE6503D IS CALLED.  IF GMT OR ADDR IS        Y02759*
*   SPECIFIED, IEE6603D IS CALLED.  ON RETURN FROM EITHER,      Y02759*
*   IF IPS WAS SPECIFIED, CONTROL IS PASSED TO IEE0803D.        Y02759*
*   OTHERWISE, CONTROL IS RETURNED TO THE CALLER.               Y02759*
*   IN ADDITION, POSITIVE SYNTAX CHECKING IS PERFORMED ON KEYWORDS    *
*   AND PARAMETERS.                                                   *
*                                                                     *
*ENTRY POINT: IEE0603D - FROM COMMAND ROUTER MODULE, IEE0403D.        *
*ATTRIBUTES: REENTRANT, READ ONLY AND SELF-RELOCATABLE.         Y01040*
*                                                                     *
*EXTERNAL REFERENCES:                                                 *
*   MASTER RESIDENT CORE, USING MACRO IEEBASEA                        *
*   EXTENDED SAVE AREA(XSA), USING MACRO IEEXSA                       *
*   COMMUNICATIONS VECTOR TABLE USING MACRO CVT                       *
*   TIMER SUPERVISOR WORKAREA(TPC), USING MACRO IEAVVTPC        Y02759*
*   TOD CLOCK WORKAREA                                          Y02759*
*                                                                     *
*MACROS: IEEXSA, IEEBASEA, AND CVT                              Y01040*
*                                                                     *
*INPUT: REGISTER 2 POINTING TO THE EXTENDED SAVE AREA WHICH MUST      *
*   CONTAIN: IN XAR, A POINTER TO THE COMMAND BUFFER                  *
*            IN XAL, A POINTER TO THE PARAMETER LIST (FIRST KEYWORD)  *
*       REGISTER 10 POINTING TO MASTER RESIDENT CORE (IEEBASEA)   M2081
*                                                                     *
*OUTPUT: FOR A NORMAL EXIT TO IEE6503D, THE SET LOCAL TIME ROUTINE:   *
*          R2 POINTS TO THE EXTENDED SAVE AREA:                 Y02759*
*          XAS CONTAINS THE TIME (IF SPECIFIED)                 Y02759*
*          XAV CONTAINS THE DATE (IF SPECIFIED)                 Y02759*
*                                                                     *
*        FOR A NORMAL EXIT TO IEE6603D, THE SET TOD CLOCK ROUTINE:    *
*          R2 POINTS TO THE EXTENDED SAVE AREA:                 Y02759*
*          XAS CONTAINS THE TIME (IF SPECIFIED)                 Y02759*
*          XAV CONTAINS THE DATE (IF SPECIFIED)                 Y02759*
*          IF ADDR WAS SPECIFIED, THE FIRST LOGICAL TCWA        Y02759*
*          ENTRY AND THE ONE FOR THE SPECIFIED ADDRESS HAVE     Y02759*
*          BEEN EXCHANGED.                                      Y02759*
*                                                                     *
*        FOR A NORMAL EXIT TO IEE0803D, THE CSCB CREATION ROUTINE:    *
*          R2 POINTS TO THE EXTENDED SAVE AREA:                 Y02759*
*          XAL CONTAINS A POINTER TO THE FIRST PARAMETER        Y02759*
*          XAU CONTAINS THE UCMI                                Y02759*
*          XAR CONTAINS A POINTER TO THE COMMAND BUFFER         Y02759*
*          XAA CONTAINS THE ASID                                Y02759*
*          XAN CONTAINS THE VERB CODE                           Y02759*
*                                                                     *
*        FOR AN ERROR EXIT TO IEE0503D, THE MESSAGE ASSEMBLER:        *
*          R2 POINTS TO THE EXTENDED SAVE AREA WHICH CONTAINS:        *
*           IN XAE, THE MESSAGE CODE (SEE ERROR MESSAGES BELOW)       *
*           IN XAV, THE VERB IN EBCDIC, LEFT ADJUSTED WITH BLANKS     *
*                                                                     *
*EXITS: NORMAL - TO IEE0803D,CALLER                             Y02759*
*       ERROR  - TO THE MESSAGE ASSEMBLY MODULE, IEE0503D             *
*                                                                     *
         EJECT
*ERROR MESSAGES: THE FOLLOWING CONDITIONS GENERATE THE INDICATED      *
*   MESSAGES:                                                         *
*      1.NON-INTERNAL SET COMMAND ISSUED IN TOD CLOCK SYSTEM      20071
*        'IEE305I SET      COMMAND INVALID'         (CODE=5)    Y01040*
*      2.NON-NUMERIC OR EXCESSIVE CHARACTERS IN TIME OR DATE, OR THE  *
*        DAY DATE IS ZERO, OR A NON-LEAP YEAR HAVING 366 DAYS   YM1821*
*        'IEE306I          INVALID NUMERICS'        (CODE=6)    Y01040*
*      3.MISPLACED PERIODS IN CLOCK OR DATE PARAMETER                 *
*        'IEE307I          DELIMITER ERROR'         (CODE=7)    Y01040*
*      4.FAILURE TO FIND BLANK, COMMA OR END OF BUFFER AFTER PARAMETER*
*        'IEE308I          TERM LENGTH ERROR'       (CODE=8)    Y01040*
*      5.KEYWORD NOT FOUND IN KEYWORD TABLE                           *
*        'IEE309I          KEYWORD MISSPELLED'      (CODE=9)    Y01040*
*      6.NO KEYWORD,                                                  *
*        DATE NOT SPECIFIED WHEN CLOCK HAS TO BE SET            Y02759*
*        'IEE310I          KEYWORD MISSING'         (CODE=10)   Y01040*
*      7.BLANK AFTER KEYWORD                                          *
*        'IEE311I          PARAMETER MISSING'       (CODE=11)   Y01040*
*      8.REPEATED KEYWORD                                             *
*        'IEE312I SET      PARAMETERS CONFLICT'     (CODE=12)   Y01040*
*      9.KEYWORD SPECIFIED IS INVALID IN THIS CONTEXT                 *
*        'IEE535I          INVALID PARAMETER'       (CODE=62)   Y02759*
*                                                                     *
* NOTE- IF AN ERROR OCCURS, A CODE OF X'FF' IS PLACED IN        Y02759*
*       BAIPL(IPL ECB) TO INDICATE THAT AN ERROR OCCURRED       Y02759*
*       ON THE SET COMMAND.                                     Y02759*
*
*OPERATION:
*   EACH INCOMING COMMAND HAS ITS LEADING KEYWORD COMPARED WITH A     *
*   TABLE (KEYTAB) CONTAINING EACH OF THE SIX POSSIBLE          Y01040*
*   KEYWORDS: CLOCK, DATE, ADDR, GMT, RESET, AND IPS.           Y02759*
*   SUCCESSFUL COMPARISON RESULTS IN TRANSFER BEING MADE, USING Y01040*
*   KEYTAB, TO THE APPROPRIATE KEYWORD SUBROUTINE.  SUCCESSFUL  Y01040*
*   RECOGNITION OF A KEYWORD CAUSES THE SETTING OF AN ID MASK   Y01040*
*   FOR THAT KEYWORD IN THE XSA.  THE SUBROUTINES FOR CLOCK,    Y01040*
*   TIME, AND ADDR CHECK FOR VALID NUMERICS THAT DO NOT         Y02759*
*   EXCEED THE PRE-DETERMINED MAXIMUMS. VALID TIME, DATE, OR    Y01040*
*   ADDR IS PACKED AND HELD IN THE XSA.                         Y02759*
*                                                                     *
*   AFTER RETURNING FROM THE SUBROUTINES, A CHECK IS MADE FOR         *
*   SUCCESSIVE KEYWORDS. IF THERE ARE MORE, THE KEYTAB SCAN IS        *
*   REPEATED.                                                         *
*                                                                     *
         EJECT
*TABLES/WORK AREAS: THE EXTENDED SAVE AREA AS USED INTERNALLY IN      *
*   IEE0603D IS MAPPED AS FOLLOWS:                                    *
*                                                                     *
*       ***************************************************           *
*       *XAP                     *XAD                     *           *
*       *SAVE AREA FOR PTR TO    *                        *           *
*       * END OF COMMAND BUFFER. *                        *           *
*       ***************************************************           *
*       *XAX                                              *           *
*       *      CPU ADDRESS IN PACKED DECIMAL              *
*       *                                                 *           *
*       ***************************************************           *
*       *XAE   *XAR+1            *XAL                     *           *
*       *ID/ER *BUFFER           *SAVE AREA FOR CURRENT   *           *
*       *CODE  *POINTER          * PARAMETER POINTER.     *           *
*       ***************************************************           *
*       *XAV                     *XAV+4                   *           *
*       *                        * DATE IN PACKED         *           *
*       *                        *     DECIMAL.           *           *
*       ***************************************************           *
*       *XAS                     *XAS+4                   *           *
*       *                        * TIME IN PACKED         *           *
*       *                        *     DECIMAL.           *           *
*       ***************************************************           *
*                                                                     *
*   A KEYWORD TABLE (KEYTAB), WHICH CONTROLS KEYWORD SCANNING AND     *
*   KEYWORD SUBROUTINE BRANCHING.                                     *
*                                                                     *
*                                                                     *
*CHARACTER SET  THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT  *
*   TO THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS, BY REASSEMBLY, WILL   *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
***********************************************************************
         EJECT
*      REGISTER ASSIGNMENTS        FUNCTION(S)
R0       EQU   0                   ENTRY CODE TO ESTAE EXIT      Y02759
R1       EQU   1                   POST
R2       EQU   2                   BASE REGISTER FOR XSA
R3       EQU   3                   CURRENT PARAMETER PTR AND LINK REG
R4       EQU   4                   KEYTAB POINTER AND WORK REGISTER
R5       EQU   5                   ERROR LINKER AND WORK REGISTER
R6       EQU   6                   WORK REGISTER                 Y02759
R7       EQU   7                   WORK REGISTER                 Y02759
R8       EQU   8                   WORK REGISTER
R9       EQU   9                   PARAMETER POINTER AND WORK REGISTER
R10      EQU   10                  BASE FOR MASTER RESIDENT CORE
R11      EQU   11                  WORK REGISTER
SBASE    EQU   12                  BASE REGISTER FOR PROGRAM
R13      EQU   13                  WORK REGISTER                  20071
R14      EQU   14                  BRANCH REGISTER                20071
R15      EQU   15                  LINKAGE REGISTER              Y02759
*                                                                     *
* DISPLACEMENTS OF INFORMATION WITHIN KEYWORD TABLE ELEMENTS          *
KEYTBL   EQU   83                  KEYWORD TABLE LENGTH MINUS ONE
KEYELN   EQU   14                  KEYWORD TABLE ELEMENT LENGTH
KEYLNG   EQU   0                   DISPLACEMENT OF KEYWORD LENGTH
KEYDIS   EQU   1                   DISPLACEMENT OF DELIMITER
KEYWRD   EQU   2                   DISPLACEMENT OF KEYWORD
KEYBRN   EQU   8                   DISPLACEMENT OF BRANCH
KEYIDM   EQU   12                  DISPLACEMENT OF ID MASK
KEYFLD   EQU   13                  DISPLACEMENT OF FOLD COUNT    Y02759
* ERROR CODES FOR MESSAGE MODULE
ERR5     EQU   5                    ERROR CODE                   Y02759
ERR6     EQU   6                    ERROR CODE                   Y02759
ERR7     EQU   7                    ERROR CODE                   Y02759
ERR8     EQU   8                    ERROR CODE                   Y02759
ERR9     EQU   9                    ERROR CODE                   Y02759
ERR10    EQU   10                   ERROR CODE                   Y02759
ERR11    EQU   11                   ERROR CODE                   Y02759
ERR12    EQU   12                   ERROR CODE                   Y02759
ERR13    EQU   62                   ERROR CODE                   Y02759
* PERIOD DISPLACEMENTS FOR DATE AND CLOCK                             *
PERD1    EQU   2                   DISPLACEMENT OF PERIOD
PERD2    EQU   5                   DISPLACEMENT OF PERIOD
D0       EQU   0                                                 Y02759
D1       EQU   1                   OFFSET TO GET TO KEYWORD      Y01040
D2       EQU   2                                                  20071
D3       EQU   3                                                  20071
D8       EQU   8                                                  20071
FOX      EQU   15
D30      EQU   30
XFF      EQU   X'FF'                                              20071
C6       EQU   C'6'                                               20071
C9       EQU   C'9'                                               20071
LOC16    EQU   16                                                Y02759
ZERO     EQU   X'00'               NO PARAMETER FOLLOWING        Y01040*
                                        KEYWORD                  Y01040
CLOCK    EQU   X'01'               SPECIFIC CODE FOR CLOCK       Y02759
DATE     EQU   X'02'               SPECIFIC CODE FOR DATE        Y02759
GMT      EQU   X'04'               SPECIFIC CODE FOR GMT         Y02759
ADDR     EQU   X'08'               SPECIFIC CODE FOR ADDR        Y02759
RESET    EQU   X'10'               SPECIFIC CODE FOR RESET       Y02759
IPS      EQU   X'20'               SPECIFIC CODE FOR IPS         Y02759
* UPPER AND LOWER COMPARANDS FOR SCHECK                               *
SNUMHI   EQU   C'9'                HIGH NUMERIC
SNAWT    EQU   C'0'                CHARACTER ZERO
SEINS    EQU   X'01'               BINARY ONE
SNUMLO   EQU   SNAWT-SEINS         LOW NUMERIC COMPARAND
         EJECT
* MAIN ROUTINE - ESTABLISHES ADDRESSABILITY FOR PROGRAM, XSA, AND     *
*    MASTER RESIDENT CORE.  USES XSA POINTERS TO COMMAND BUFFER AND   *
*    LEADING KEYWORD TO IDENTIFY THE KEYWORD. KEYWORD RECOGNITION     *
*    LEADS TO BRANCHING TO THE KEYWORD'S SUBROUTINE.                  *
*                                                                     *
*/*IEE0603D: CHART (FMODE) */
*/* HEADER
*/*MASTER SCHEDULER (COMMANDS)                             GMT AND L
*/*OCAL TIME                                                IEE0603D
*/*                                                              PAG
*/*E #                                                               */
*/*IEE0603D:1A2 E ENTRY FROM IEE0403D */
*/*1B2 M ESTABLISH ADDRESSIBILITY */
         BALR  SBASE,0             ESTABLISH PROGRAM ADDRESSABILITY
         USING MODBASE,SBASE                                     Y02759
MODBASE  EQU   *                                                 Y02759
IEE0603D MODID BRANCH=YES                                        Y01886
         USING XSA,R2              BASE FOR EXTENDED SAVE AREA
         USING BASE,R10            ESTABLISH BASEA ADDRESSABLTY
*/*1C2 P SET POINTER TO START OF KEYWORDS AND ESTABLISH RECOVERY EXIT*/
         SR    R15,R15             ZEROES TO INITIALIZE ERROR    Y02759
*                                       EXIT FLAGS               Y02759
         L     R9,XAL              USE REG 9 AS PTR TO PARMS     Y04925
         STM   R9,R15,REGSAVE      SAVE REGS 9-15                Y02759
         LA    R9,0(R9)            ZERO H.O. BYTE TO TEST PTR    Y04925
         MVC   ESTAELST(ESTAELN),ESTAEL  COPY ESTAE PARAMETER
*                                       LIST TO XSA
         LA    R1,ESTAELST         GET ADDR OF ESTAE LIST FORM
         LA    R7,EXITPARM         GET RECVY EXIT PARMLIST ADDRESS
         ESTAE ,CT,PARAM=(7),MF=(E,(1))  ESTABLISH RECOVERY EXIT
*/*1D2 D (NO,SERR10,YES,) ANY KEYWORDS */
         LTR   R9,R9               IS PARAMETER PTR 0?            20071
         BZ    SERR10              YES, KEYWORDS MISSING          20071
*/*1E2 P SET UP REGISTERS FOR KEYWORD SCAN TABLE */
         L     R7,XAR              LOAD POINTER TO BUFFER
         LA    R7,0(R7)                 CONTAINING COMMAND
         LH    R6,0(R7)            LOAD BUFFER LENGTH
         N     R6,SFFFF-2          CLEAR POSSIBLE GARBAGE
*/*1F2 P COMPUTE END OF BUFFER AND SAVE */
         AR    R7,R6               COMPUTE END OF BUFFER
         ST    R7,XAP              SAVE IN FIRST WORD OF XSA
*/*1G2 M CLEAR KEYWORD MASK BYTE */
         NI    XAE,X'00'           CLEAR ID MASK AREA
         SPACE
*/*SNEWKY:1H2 M SET UP TO CHECK KEYWORD AGAINST TABLE */
SNEWKY   EQU   *                   EXAMINE KEYWORD
         LA    R6,KEYELN           LOAD KEYTAB ELEMENT LENGTH
*                                       FOR INCREMENT IN BXLE
         LA    R4,KEYTAB           GET ADDRESS OF KEYWORD TABLE
         LA    R7,KEYTBL(R4)       GET END OF TABLE ADDRESS
*                                       FOR COMPARAND IN BXLE
         SR    R5,R5               LOAD LENGTH OF A
SNXTWRD  IC    R5,KEYLNG(R4)            PARTICULAR KEYWORD
*/*SETCLK:1J2 D (YES,BUFFERCK,NO,) KEYWORD A MATCH */
         EX    R5,SETMVC           MOVE POTENTIAL PARM TO WKAREA
         IC    R5,KEYFLD(R4)       GET LENGTH TO FOLD TO CAPS
         EX    R5,SETOC            FOLD TO UPPER CASE
         IC    R5,KEYLNG(R4)       GET LENGTH TO COMPARE
         EX    R5,SETCLC           IS THIS THE KEYWORD?
         BE    CKPARM              YES, NOW GO CHECK PARAMETER
*/*1K2 D (YES,SERR09,NO,) END OF TABLE */
         BXLE  R4,R6,SNXTWRD       RECHECK IF NOT END OF TABLE
*/*1K1 P (,SETCLK) INCREMENT TO NEXT KEYWORD */
         B     SERR09              ERROR, KEYWORD NOT FOUND
         SPACE
*/*BUFFERCK:1B4 D (NO,INCRMT,YES,) SHOULD KEYWORD HAVE PARM */
CKPARM   LA    R9,1(R9,R5)         POINT REGISTER TO PARAMETER
         CLI   D1(R4),ZERO         SHOULD THERE BE A PARMETER?   Y01040
         BE    INCRMT              NO, SKIP CHECK FOR ONE        Y01040
*/*1C4 D (NO,SERR11,YES,) IS THERE A PARAMETER */
         CLI   0(R9),C' '          IS PARAMETER BLANK?
         BE    SERR11              YES, ERROR
         SPACE
*/*INCRMT:1D4 D (YES,SERR08,NO,) BUFFER EXCEEDED */
INCRMT   EQU   *                                                 Y01040
         SR    R3,R3               POINT A REGISTER TO THE END OF
         IC    R3,KEYDIS(R4)            PARAMETER
         LA    R3,0(R3,R9)
         C     R3,XAP              IS BUFFER EXCEEDED?
         BH    SERR08              YES, ERROR
         SPACE
*/*1E4 P GET KEYWORD */
         SR    R5,R5               NO, PREPARE TO
         IC    R5,KEYIDM(R4)            LOAD KEYWORD'S ID MASK
*/*1F4 D (YES,SERR12,NO,) KEYWORD A REPEAT */
         EX    R5,SETTMP           IS THIS KEYWORD A REPEAT?
         BO    SERR12              YES, ERROR
         SPACE
*/*1G4 P SAVE KEYWORD ID */
         OC    XAE(1),KEYIDM(R4)   SAVE KEYWORD'S ID IN XSA
         ST    R3,XAL              SAVE POINTER TO END OF PARAMETER
*/*1H4 D (CLOK,SCLOCK,DATE,SDATE,ADDR,SADDR,IPS,SETNXT,RSET,SETNXT,GMT,
*/*SETNXT)
*/* GO TO APPROPRIATE PROCESSING ROUTINE */
         EX    0,KEYBRN(R4)        GO TO THE APPROPRIATE SUBROUTINE
         EJECT
* KEYWORD=CLOCK SUBROUTINE - SYNTAX CHECKS THE CLOCK PARAMETER FOR    *
*    PROPER POSITIONING OF PERIODS, NUMERIC CHARACTERS, AND THE EX-   *
*    CEEDING OF PROPER LIMITS FOR HOUR, MINUTE OR SECOND. A VALID     *
*    PARAMETER IS PACKED IN THE XSA TEMPORARILY, IN XAS.              *
*                                                                     *
*/*SCLOCK:2A3 D (NO,SERR07,YES,) ARE PERIODS CORRECT */
SCLOCK   EQU   *
         CLI   PERD1(R9),C'.'      CHECK FOR PROPER PLACEMENT
         BNE   SERR07                        INCORRECT
         CLI   PERD2(R9),C'.'           OF PERIODS
         BNE   SERR07                        INCORRECT
*/*2B3 P REMOVE PERIODS AND SAVE HHMMSS */
         MVC   XAS(2),0(R9)        CONSOLIDATE TIME WITHOUT
         MVC   XAS+2(2),3(R9)           PERIODS
         MVC   XAS+4(2),6(R9)
         LA    R11,6               SET LOOP CONTROLLER TO 6
         LA    R9,XAS              SET POINTER TO TIME
*/*2C3 S SCHECK: VALIDATE TIME DIGITS */
         BAL R13,SCHECK            VERIFY TIME DIGITS             20071
*/*2D3 D (YES,SERR06,NO,) DO HOURS EXCEED 23 */
         CLC   XAS(2),SETCHR       DO HOURS EXCEED 23?
         BH    SERR06              YES, ERROR
*/*2E3 D (YES,SERR06,NO,) DO MINUTES EXCEED 59 */
         CLC   XAS+2(2),SETCMS     DO MINUTES EXCEED 59?
         BH    SERR06              YES, ERROR
*/*2F3 D (YES,SERR06,NO,) DO SECONDS EXCEED 59 */
         CLC   XAS+4(2),SETCMS     DO SECONDS EXCEED 59?
         BH    SERR06              YES, ERROR
*/*2G3 P (,SETNXT) SAVE TIME IN PACKED DECIMAL */
         PACK  XAS+4(4),XAS(6)     PACK TIME FOR CONVERSION
         B     SETNXT              GO CHECK NEXT KEYWORD
         EJECT
* KEYWORD=DATE SUBROUTINE - SYNTAX CHECKS THE DATE PARAMETER FOR      *
*    PROPER POSITIONING OF PERIODS, NUMERIC CHARACTERS, AND THE EX-   *
*    CEEDING OF PROPER LIMITS FOR THE DAY. A VALID PARAMETER IS       *
*    PACKED IN THE XSA TEMPORARILY, IN XAV.                           *
*                                                                     *
*/*SDATE:2A1 D (NO,SERR07,YES,) IS THE PERIOD CORRECT */
SDATE    EQU   *
         CLI   PERD1(R9),C'.'      IS PERIOD POSITIONED?
         BNE   SERR07              NO, ERROR
*/*2B1 P REMOVE THE PERIOD AND SAVE YYDDD */
         MVC   XAV(2),0(R9)        CONSOLIDATE DATE WITHOUT
         MVC   XAV+2(3),3(R9)           PERIODS
         LA    R11,5               SET LOOP CONTROLLER TO 5
         LA    R9,XAV              SET POINTER TO DATE
*/*2C1 S SCHECK: VALIDATE DATE DIGITS */
         BAL   R13,SCHECK          VERIFY DATE DIGITS             20071
*/*2D1 D (YES,SERR06,NO,) IS THE DAY 000? */
         CLC   XAV+D2(D3),SETDD0   IS DDD = 000?                 YM1821
         BE    SERR06              YES, INVALID NUMERICS         YM1821
*/*2E1 M PRESET EXITING ADDRESS TO 'SETNXT' IN REGISTER 13 */
         LA    R13,SETNXT          SET BRANCH TO NEXT KEYWORD    YM1821
*/*2F1 D (GT,SERR06,LT,SYEAR,EQ,) DDD = 366? */
         CLC   XAV+2(3),SETDDY     DO DAYS EXCEED 366?
         BH    SERR06              YES, ERROR
         BL    SYEAR               BRANCH IF LESS THAN 366 DAYS  YM1821
*/*2G1 M PRESET EXITING ADDRESS TO 'LEAPYEAR' IN REGISTER 13 */
         LA    R13,LEAPYEAR        SET BRANCH TO YEAR VALIDITY   YM1821
SYEAR    EQU   *                                                 YM1821
*/*SYEAR:2H1 P SAVE YYDDD IN PACKED DECIMAL */
         PACK  XAV+4(4),XAV(5)     PACK DATE FOR CONVERSION
*/*2J1 D (YES,SETNXT,NO,LEAPYEAR) REGISTER 13 POINTING TO 'SETNXT'? */
         BR    R13                                               YM1821
***********************************************************************
*                                                                     *
* THIS ROUTINE, ENTERED ONLY AFTER A DATE WITH 366 DAYS         Y02759*
* IS ENCOUNTERED, CHECKS FOR THE VALIDITY OF THE 366 DAYS IN    YM1821*
* THE YEAR.  THE YEAR IN QUESTION IS DIVIDED BY 4, AND IF A     YM1821*
* REMAINDER IS PRESENT, THE ROUTINE LEADS TO AN ERROR MESSAGE   YM1821*
* ISSUED.  NORMAL PROCESSING IS CONTINUED FOR A VALID LEAP      YM1821*
* YEAR.                                                         YM1821*
*                                                                     *
***********************************************************************
*/*LEAPYEAR:2J2 P OBTAIN THE YEAR */
LEAPYEAR EQU   *                                                 YM1821
         SR    R4,R4               CLEAR REGISTER                YM1821
         ST    R4,XAV              CLEAR FIRST WORD FOR 'CVB'    YM1821
         CVB   R5,XAV              CONVERT TO BINARY             YM1821
         D     R4,D1000            SHIFT OFF DDD
*/*2J3 D (YES,SERR06,NO,) IS IT 1900? */
         LTR   R5,R5               TEST FOR 1900
         BZ    SERR06              ERROR IF 1900
*/*2J4 D (NO,SERR06,YES,SETNXT) IS IT PERFECTLY DIVISIBLE BY 4? */
         SLL   R5,D30              SHIFT OFF ALL BUT BITS 30-31
         LTR   R5,R5               EITHER 0NE ON?
         BNZ   SERR06              YES, ERROR.  NOT A LEAP YEAR
         B     SETNXT              GO CHECK NEXT KEYWORD         YM1821
      EJECT
* KEYWORD=ADDR SUBROUTINE - VALIDITY CHECKS THE CPU ADDRESS SPECIFIED.*
*    A VALID ADDRESS IS PACKED IN THE XSA TEMPORARILY, IN XAX.        *
*                                                                     *
*/*SADDR:2A2 P SAVE CPU ADDRESS */
SADDR    EQU   *
         MVC   XAX(2),D0(R9)       SAVE SPECIFIED CPU ADDRESS    Y02759
         LA    R11,D2              SET LOOP CONTROLLER TO 2      Y02759
*/*2B2 S SCHECK:VALIDATE ADDRESS DIGITS */
         BAL   R13,SCHECK          VERIFY ADDRESS DIGITS         Y02759
*/*2C2 D (YES,SERR06,NO,) DOES ADDR EXCEED 15? */
         CLC   XAX(2),SETCADDR     DOES ADDRESS EXCEED 15?       Y02759
         BH    SERR06              YES, ERROR                    Y02759
*/*2D2 P (,SETNXT) SAVE ADDR IN PACKED DECIMAL */
         PACK  XAX(8),XAX(2)       PACK CPU ADDRESS FOR          Y02759
*                                  FURTHER VERIFICATION          Y02759
         B     SETNXT              GO CHECK NEXT KEYWORD         Y02759
      EJECT
* THE FOLLOWING CLOSED SUBROUTINE IS USED BY SCLOCK, SDATE, AND       *
*    SADDR TO CHECK THAT ALL PARAMETER CHARACTERS ARE NUMERIC. R11    *
*    IS THE LOOP COUNTER; R3 IS THE RETURN REGISTER; R9 POINTS TO     *
*    THE PARAMETER.                                                   *
*                                                                     *
*/*SCHECK:2A5 E NUMERIC CHECK SUBRT */
SCHECK   EQU   *
*/*2B5 P CHECK FOR NUMERIC DIGITS */
         SR    R4,R4               SET INCREMENT REGISTERS TO ZERO
         SR    R6,R6
         LA    R5,SNUMLO           SET LOWER LIMIT OF DIGIT
         LA    R7,SNUMHI           SET UPPER LIMIT OF DIGIT
*/*SDGTLP:2C5 D (YES,SERR06,NO,) DIGIT LESS THAN 0? */
SDGTLP   SR    R8,R8               CLEAR FOR LOADING
         IC    R8,0(R9)            TAKE ONE CHARACTER
         BXLE  R8,R4,SERR06        TEST FOR LOW
*/*2D5 D (YES,SERR06,NO,) DIGIT GREATER THAN 9? */
         BXH   R8,R6,SERR06        TEST FOR HIGH
*/*2E5 P INCREMENT TO NEXT DIGIT */
         LA    R9,1(R9)            INCREMENT CHARACTER POINTER
*/*2F5 D (NO,SDGTLP,YES,) LAST DIGIT CHECKED? */
         BCT   R11,SDGTLP          IS LOOP DONE?
*/*2G5 R RETURN TO CALLER */
         BR    R13                 YES, RETURN                    20071
         EJECT
* RETURNED TO FROM A KEYWORD SUBROUTINE, THIS PORTION OF THE MAIN     *
*    ROUTINE CHECKS IF THE SET COMMAND IS COMPLETE OR IF THERE ARE    *
*    MORE KEYWORDS. A COMMA AS DELIMITER RESULTS IN THE RETURN TO     *
*    THE KEYWORD TABLE SCAN FOR THE NEW KEYWORD. SUCCESSFUL COMPLE-   *
*    TION LEADS TO 'SETOUT'.                                          *
*                                                                     *
*/*SETNXT:1D1 D (YES,SETOUT,NO,) END OF BUFFER? */
SETNXT   EQU   *
         C     R3,XAP              IS IT VALID END OF BUFFER?
         BE    SETOUT              YES, END OF SET COMMAND
*/*1E1 D (YES,SETOUT,NO,) END OF COMMAND? */
         CLI   0(R3),C' '          IS NEXT CHARACTER A BLANK?
         BE    SETOUT              YES, END OF SET COMMAND
*/*1F1 D (NO,SERR08,YES,) IS THERE A COMMA? */
         CLI   0(R3),C','          IS NEXT CHARACTER A COMMA?
         BNE   SERR08              NO, MUST BE ERROR
         LA    R9,1(R3)            YES, BUMP CURRENT PARAMETER
*/*1G1 D (NO,SERR07,YES,SNEWKY) ANOTHER PARAMETER FOLLOWING? */
         CLI   0(R9),C' '          IS NEXT CHARACTER BLANK?
         BE    SERR07              YES, DELIMITER ERROR
         B     SNEWKY              GO CHECK NEXT KEYWORD
         EJECT
*/*SETOUT:3A1 M PRESET REGISTER 14 TO THE ADDRESS OF 'CKIPS' */
SETOUT   LA    R14,CKIPS              PICKUP RETURN ADDRESS
*/*3B1 D (NO,SERR05,YES,) IS IT IPL AND INTERNAL? */
         TM    BASFL,BAIN+BAINTSET    IS IT IPL/VARY AND INTERNAL?
         BZ    SERR05                 IPL/VARY, BUT NOT INTERNAL
*/*3C1 D (YES,INTSET,NO,) IS IT INTERNAL ONLY? */
         TM    BASFL,BAINTSET         IS IT INTERNAL?
         BO    INTSET                 YES, BRANCH
*/*3D1 D (YES,SERR13,NO,) GMT/ADDR AFTER IPL? */
         TM    XAE,GMT+ADDR           GMT OR ADDR SPECFD AFTER IPL?
         BNZ   SERR13                 YES, ERROR
*/*3E1 D (NO,NORESET,YES,) RESET SPECIFIED? */
         TM    XAE,RESET              RESET SPECIFIED?
         BZ    NORESET                NO, BRANCH
*/*3F1 D (YES,SERR12,NO,LCL) RESET WITH DATE/CLOCK? */
         TM    XAE,DATE+CLOCK         RESET SPECFD WITH DATE/CLOCK?
         BNZ   SERR12                 YES, ERROR
         B     LCL
*/*NORESET:3E2 D (NO,CKIPS,YES,) CLOCK/DATE SPECIFIED? */
NORESET  TM    XAE,CLOCK+DATE         CLOCK AND/OR DATE SPECFD?
         BCR   D8,R14                 NO, GO CHECK FOR IPS
*/*LCL:3G1 P GET ADDRESS OF IEE6503D */
LCL      L     R15,VCON65             GET ADDR OF SET LOCAL TIME
*/*3H1 S (,CKIPS) IEE6503D:SET LOCAL TIME */
CALLMOD  BR    R15                    ROUTINE AND BALR TO IT
         DROP  SBASE
         USING *,R14
*/*CKIPS:3J1 D (NO,NOIPS:BT,YES,DESTAE1:RL) IPS SPECIFIED? */
CKIPS    LM    R9,R14,REGSAVE         RESTORE REGS 9-14
         DROP  R14
         USING MODBASE,SBASE
         TM    XAE,IPS                IPS SPECIFIED?
         BZ    NOIPS                  NO, BRANCH
         ST    R9,XAL                 RESTORE VERB CODE AND      Y04925
*                                          POINTER TO FIRST PARM Y04925
         MVC   XAV(8),SETSET          MOVE VERB NAME TO XSA      Y04925
*/*DESTAE1:3J2 P DELETE RECOVERY EXIT */
         ESTAE 0                      DELETE RECOVERY EXIT
*/*3K2 R GET ADDRESS OF IEE0803D AND BRANCH TO IT */
         L     R15,VCON08             GET ADDR OF CSCB CREATION RTN
         BR    15                     BRANCH TO CSCB CREATION RTN
*/*NOIPS:3K1 R DELETE RECOVERY EXIT AND RETURN TO IEE0403D */
NOIPS    ESTAE 0                      DELETE RECOVERY EXIT
         BR    R14                    RETURN IF NO IPS
         EJECT
*/*INTSET:3A4 M ESTABLISH ADDRESSABILITY TO TOD CLOCK WORKAREA */
INTSET   L     R6,LOC16               GET CVT POINTER
         USING CVT,R6
         L     R6,CVTTPC              GET TPC POINTER
         USING TPC,R6
         L     R6,TPCTCWA             GET TCWA POINTER
         USING TCWA,R6
*/*3B4 D (YES,SERR13,NO,) RESET SPECIFIED? */
         TM    XAE,RESET              RESET SPECIFIED
         BO    SERR13                 YES, RESET IS ERROR ON INT SET
*/*3C4 D (YES,CKZZZ,NO,) ADDR SPECIFIED? */
         TM    XAE,ADDR               ADDR SPECIFIED?
         BO    CKZZZ                  YES, BRANCH
*/*3D4 D (YES,CKDATE,NO,) MSG IEA886A OR IEA887A ISSUED? */
         TM    TCWAGFLG,MSGYYY+MSGZZZ  MSG YYY OR ZZZ OUTSTANDING
         BNZ   CKDATE                 YES, SEE IF DATE SPECFD
*/*3E4 D (NO,CKGMT,YES,) DATE/CLOCK SPECIFIED? */
         TM    XAE,DATE+CLOCK         NO, MUST BE XXX OUTSTANDING
*                                         SEE IF CLOCK/DATE SPECFD
         BZ    CKGMT                  IF NOT, CHECK FOR GMT
*/*3F4 D (NO,LCL,YES,) GMT SPECIFIED? */
         TM    XAE,GMT                IF SO, IS GMT SPECIFIED?
         BZ    LCL                    NO, GO TO LCL TIME RTN
*/*TOD:3H4 P GET ADDRESS OF IEE6603D */
TOD      L     R15,VCON66             GET ADDR OF SET TOD CLOCK RTN
*/*3J4 S (,CKIPS) IEE6603D:SET TOD CLOCK */
         BR    R15                        AND GO THERE
*/*CKDATE:3D5 D (NO,SERR10,YES,TOD) DATE SPECIFIED? */
CKDATE   TM    XAE,DATE               DATE SPECIFIED?
         BZ    SERR10                 NO, ERROR
         B     TOD                    YES, GO TO TOD CLOCK RTN
*/*CKGMT:3E5 D (YES,SERR13,NO,CKIPS) GMT SPECIFIED? */
CKGMT    TM    XAE,GMT                GMT SPECIFIED?
         BO    SERR13                 YES, GMT WITHOUT DATE/CLOCK
*                                         IS AN ERROR
         B     CKIPS                  NO, GO CHECK FOR IPS
*
* ADDR WAS SPECIFIED.  SEE IF IT IS VALID, AND ACT ACCORDINGLY
*
*/*CKZZZ:3C3 D (NO,SERR13,YES,) MSG IEA887A ISSUED? */
CKZZZ    TM    TCWAGFLG,MSGZZZ        MSG ZZZ OUTSTANDING?
         BZ    SERR13                 WITHOUT IT, ADDR IS AN ERROR
*/*3D3 P SEARCH TOD CLOCK WORKAREA ENTRIES FOR SPECIFIED ADDR */
         CVB   R5,XAX                 CONVERT THE ADDR TO BINARY
         LA    R7,LTCWA(,R6)          GET PTR TO FIRST TCWA ENTRY
         USING TCENTRY,R7
         LH    R8,TCCPUCNT            GET NUMBER OF ENTRIES
NEXT     CH    R5,TCWAIADD            COMPARE SPECIFIED CPU ADDR
*                                          WITH ADDR IN ENTRY
         BE    MATCH                  BRANCH IF THEY MATCH
         LA    R7,LENTRY(,R7)         POINT TO NEXT ENTRY
         BCT   R8,NEXT                BRANCH IF MORE ENTRIES
*/*3E3 D (NO,SERR06,YES,) CORRECT ENTRY FOUND? */
         B     SERR06                 ELSE, NO MATCH FOUND, ERROR
*/*3F3 D (NO,SERR06,YES,) IS THIS CLOCK SET? */
MATCH    TM    TCWALFLG,TCLCC         THIS CLOCK SET?
         BNZ   SERR06                 NO, ERROR
         LA    R8,LTCWA(,R6)          GET PTR TO FIRST ENTRY
*/*3G3 D (YES,NOSWAP:RR,NO,) IS THIS 1ST ENTRY? */
         CR    R7,R8                  IS MATCHING ENTRY THE FIRST?
         BE    NOSWAP                 YES, NO SWAP REQUIRED
*/*3H3 M SWAP 1ST AND MATCHING ENTRIES */
         XC    D0(LENTRY,R7),D0(R8)   EXCHANGE FIRST
         XC    D0(LENTRY,R8),D0(R7)         AND MATCHING
         XC    D0(LENTRY,R7),D0(R8)               ENTRIES
*/*NOSWAP:3J3 M (,CKIPS:B ) INDICATE TOD CLOCK O.K. */
NOSWAP   NI    TCWAGFLG,XFF-TCGNSET   INDICATE TOD CLOCK OK
         B     CKIPS                  GO CHECK FOR IPS
         EJECT
* THE FOLLOWING INSTRUCTIONS PASS A DESIGNATED ERROR CODE TO THE      *
*    SET COMMAND ERROR SUBROUTINE, 'SETERR', IN REGISTER 5.           *
*                                                                     *
*/*SERR05:4A3 M (,SETERR) SET ERROR CODE FOR COMMAND INVALID */
SERR05   BAL   R5,SETERR           ERROR CODE = 5                 20071
         DC    AL1(ERR5)                                          20071
*                                                                 20071
*/*SERR06:4B2 M (,SETERR) SET ERROR CODE FOR INVALID NUMERICS */
SERR06   BAL   R5,SETERR           ERROR CODE = 6
         DC    AL1(ERR6)
*                                                                     *
*/*SERR07:4B4 M (,SETERR) SET ERROR CODE FOR DELIMITER ERROR */
SERR07   BAL   R5,SETERR           ERROR CODE = 7
         DC    AL1(ERR7)
*                                                                     *
*/*SERR08:4C2 M (,SETERR) SET ERROR CODE FOR TERM LENGTH ERROR */
SERR08   BAL   R5,SETERR           ERROR CODE = 8
         DC    AL1(ERR8)
*                                                                     *
*/*SERR09:4C4 M (,SETERR) SET ERROR CODE FOR UNIDENTIFIBLE KEYWORD */
SERR09   BAL   R5,SETERR           ERROR CODE = 9
         DC    AL1(ERR9)
*                                                                     *
*/*SERR10:4D2 M (,SETERR) SET ERROR CODE FOR KEYWORD MISSING */
SERR10   BAL   R5,SETERR           ERROR CODE = 10
         DC    AL1(ERR10)
*                                                                     *
*/*SERR11:4D4 M (,SETERR) SET ERROR CODE FOR PARAMETER MISSING */
SERR11   BAL   R5,SETERR           ERROR CODE = 11
         DC    AL1(ERR11)
*                                                                     *
*/*SERR12:4E2 M (,SETERR) SET ERROR CODE FOR PARAMETERS CONFLICT */
SERR12   BAL   R5,SETERR           ERROR CODE = 12
         DC    AL1(ERR12)
*
*/*SERR13:4E4 M (,SETERR) SET ERROR CODE FOR INVALID PARAMETER */
SERR13   BAL   R5,SETERR           ERROR CODE = 62              Y02759
         DC    AL1(ERR13)                                       Y02759
         EJECT
* ERROR SUBROUTINE - RECEIVES IN REGISTER 5 AN ERROR MESSAGE CODE     *
*    WHICH IS PLACED IN THE XSA (IN XAE). CONTROL GOES TO THE MESSAGE *
*    ASSEMBLY MODULE, IEE0503D, BY BRANCH.                      Y01040*
*/*SETERR:4F3 M SET UP TO ISSUE MESSAGE */
SETERR   DS    0H
         TM    BASFL,BAINTSET      INTERNAL COMMAND?
         BNO   EXTCMD              NO, BRANCH
         MVC   XAV(8),SETRPLY      MOVE VARIABLE TEXT TO XSA     Y02759
         B     INSERRC             GO GET ERROR CODE
EXTCMD   MVC   XAV(8),SETSET       MOVE VARIABLE TEXT TO XSA
INSERRC  MVC   XAE(1),0(R5)        INSERT ERROR CODE
*/*4G3 M INDICATE PARAMETERS NOT ACCEPTED */
         MVI   BAIPLCC,XFF         PUT RETURN CODE IN IPL ECB    Y01040
         LM   R9,R14,REGSAVE       RESTORE REGS 9-14             Y02759
*/*4H3 P DELETE RECOVERY EXIT */
         ESTAE 0                   DELETE RECOVERY EXIT
*/*4J3 P GET ADDRESS OF IEE0503D */
         L    R15,VCON05           GET ADDRESS OF IEE0503D       Y01029
*/*4K3 R BRANCH TO IEE0503D */
         BR   R15                  BRANCH TO IEE0503D            Y01029
         EJECT
*
* ERROR RECOVERY EXIT
*
*/*SERREXIT:5A3 E ESTAE EXIT ROUTINE */
SERREXIT BALR  SBASE,0             ESTABLISH ADDRESSABILITY
         USING *,SBASE
*/*5B3 M INDICATE PERCOLATION IN REG 15 */
         SR    R15,R15             SET RC FOR PERCOLATION
*/*5C3 D (NO,CMDFAIL,YES,) SDWA SUPPLIED? */
         CH    R0,H12              SEE IF SDWA SUPPLIED
         BE    FAILCMND            BRANCH IF NOT
         L     R2,0(R1)            IF SO, GET PARMLIST ADDR INTO R2
         USING EXITPARM,R2         PARMLIST ADDRESSABILITY
*/*5D3 P ISSUE SETRP */
         SETRP RECPARM=SETID,RC=0, ESTABLISH INTERFACE BACK TO RTM     *
               DUMP=NO
*/*5E3 M DETERMINE CSECT WHERE ERROR OCCURRED AND SET NAME IN SDWA */
         TM    CSECTCDE,X'C0'      DETERMINE WHERE ERROR OCCURRED
         BZ    FAILCMND            BRANCH IF ERROR IN IEE0603D
*                                     AS CSECT NAME IS CORRECT
         BO    CSECT66             BRANCH TO CHANGE CSECT NAME IF
*                                     ERROR IN IEE6603D
         USING SDWA,R1
         MVC   SDWACSCT+3(2),C65   CHANGE CSECT NAME TO IEE6503D
         B     FAILCMND            BRANCH TO SET FAIL FLAG
CSECT66  MVC   SDWACSCT+3(2),C66   CHANGE CSECT NAME TO IEE6603D
         DROP  R1
*/*CMDFAIL:5F3 M INDICATE PARAMETERS NOT ACCEPTED */
FAILCMND L     R10,R10SAVE         GET ADDRESS OF BASEA
         MVI   BAIPLCC,XFF         INDICATE COMMAND FAILED
*/*5G3 R RETURN TO RTM */
         BR    R14                 RETURN TO RTM
*/*IEE0603D: END */
         USING MODBASE,SBASE       RE-ESTABLISH ORIGINAL ADDRESSABILITY
         USING XSA,R2
         EJECT
* THE FOLLOWING TABLE CONTROLS THE SCAN OF INCOMING KEYWORDS AND THE  *
*   BRANCHING TO SPECIFIC KEYWORD SUBROUTINES.                        *
*                                                                     *
         DS    0H
KEYTAB   EQU   *
         DC    X'5'                KEYWORD LENGTH MINUS ONE
         DC    X'8'                PARAMETER DELIMITER
         DC    C'CLOCK='           KEYWORD
         B     SCLOCK              SPECIFIC CODING
         DC    X'01'               KEYWORD ID MASK PATTERN
         DC    X'4'                CHARS TO FOLD MINUS ONE       Y02759
*                                                                     *
         DC    X'4'                KEYWORD LENGTH MINUS ONE
         DC    X'6'                PARAMETER DELIMITER
         DC    C'DATE='            KEYWORD
         DC    C' '                FILLER
         B     SDATE               SPECIFIC CODING
         DC    X'02'               KEYWORD ID MASK PATTERN
         DC    X'3'                CHARS TO FOLD MINUS ONE       Y02759
*                                                                     *
         DC    X'2'                KEYWORD LENGTH MINUS ONE      Y01040
         DC    X'0'                PARAMETER DELIMITER           Y01040
         DC    C'GMT'              KEYWORD                       Y01040
         DC    C'   '              FILLER                        Y01040
         B     SETNXT              SPECIFIC CODING               Y01040
         DC    X'04'               KEYWORD ID MASK PATTERN       Y01040
         DC    X'2'                CHARS TO FOLD MINUS ONE       Y02759
*                                                                     *
         DC    X'4'                KEYWORD LENGTH MINUS ONE      Y02759
         DC    X'2'                PARAMETER DELIMITER           Y02759
         DC    C'ADDR='            KEYWORD                       Y02759
         DC    C' '                FILLER                        Y02759
         B     SADDR               SPECIFIC CODING               Y02759
         DC    X'08'               KEYWORD ID MASK PATTERN       Y02759
         DC    X'3'                CHARS TO FOLD MINUS ONE       Y02759
*                                                                     *
         DC    X'4'                KEYWORD LENGTH MINUS ONE      Y02759
         DC    X'0'                PARAMETER DELIMITER           Y02759
         DC    C'RESET'            KEYWORD                       Y02759
         DC    C' '                FILLER                        Y02759
         B     SETNXT              SPECIFIC CODING               Y02759
         DC    X'10'               KEYWORD ID MASK PATTERN       Y02759
         DC    X'4'                CHARS TO FOLD MINUS ONE       Y02759
*                                                                     *
         DC    X'3'                KEYWORD LENGTH MINUS ONE      Y02759
         DC    X'2'                PARAMETER DELIMITER           Y02759
         DC    C'IPS='             KEYWORD                       Y02759
         DC    C'  '               FILLER                        Y02759
         B     SETNXT              SPECIFIC CODING               Y02759
         DC    X'20'               KEYWORD ID MASK PATTERN       Y02759
         DC    X'2'                CHARS TO FOLD MINUS ONE       Y02759
         EJECT
* LIST FORM OF ESTAE MACRO
*
ESTAEL   ESTAE SERREXIT,PURGE=NONE,ASYNCH=NO,RECORD=YES,MF=L
ESTAELN  EQU   *-ESTAEL            LENGTH OF ESTAE PARMLIST
         EJECT
* CONSTANTS USED BY THE IMMEDIATE COMMANDS ROUTINE                    *
*                                                                     *
         DS    0F
         DC    X'0000'
SFFFF    DC    X'FFFF'
*                                                                     *
SETCADDR DC    C'15'               MAXIMUM CPU ADDR              Y02759
SETCHR   DC    C'23'               MAXIMUM HOUR
SETCMS   DC    C'59'               MAXIMUM MINUTE OR SECOND
SETDDY   DC    C'366'              MAXIMUM DAY
SET99    DC    C'99'               HIGH DATE COMPRAND
C65      DC    C'65'               CHARS TO CHANGE CSECT NAME
C66      DC    C'66'               CHARS TO CHANGE CSECT NAME
*                                                                     *
SETSET   DC    C'SET     '         VERB FOR MESSAGE MODULE
SETRPLY  DC    C'RPLY HAS'                                       Y02759
SETDD0   DC    C'000'              DDD PORTION OF DATE, 000      Y01040
SETUC    DC    6X'40'              FOR FOLDING TO UPPER CASE     Y02759
SETID    DS    0CL24               ID FOR RECOVERY RECORD
         DC    CL8'IGC0003D'       LOAD MODULE NAME
         DC    CL8'IEE0603D'       CSECT NAME
         DC    CL8'SETCMFRR'       ERROR IDENTIFIER
*                                                                     *
SETCLC   CLC   FOLDAREA(1),KEYWRD(R4) COMPARE NEW KEYWORD WITH TABLE
SETTMP   TM    XAE,X'00'           TEST ID MASK PATTERN
SETMVC   MVC   FOLDAREA(1),0(R9)   MOVE TEXT TO WORKAREA
SETOC    OC    FOLDAREA(1),SETUC   FOLD TO CAPS
*                                                                     *
H12      DC    H'12'               TEST VALUE FOR NO SDWA
D1000    DC    F'1000'             CONSTANT FOR SHIFTING OFF DDD OF
*                                      YYDDD CONVERTED TO BINARY
*                                                                     *
         DS   0F                                                 Y01029
VCON05   DC   V(IEE0503D)          ADDRESS OF IEE0503D           Y01029
VCON08   DC   V(IEE0803D)          ADDRESS OF IEE0803D           Y02759
VCON65   DC   V(IEE6503D)          ADDRESS OF IEE6503D           Y01029
VCON66   DC   V(IEE6603D)          ADDRESS OF IEE6603D           Y02759
         EJECT
SETTCWA  DSECT
TCWA     DS    0D                      TOD CLOCK WORKAREA
         DS    52C
TCWAGFLG DS    1C                      GLOBAL TCWA FLAGS
MSGXXX   EQU   X'80'                   MSG XXX OUTSTANDING
MSGYYY   EQU   X'40'                   MSG YYY OUTSTANDING
MSGZZZ   EQU   X'20'                   MSG ZZZ OUTSTANDING
TCGNSET  EQU   X'08'                   TOD CLOCK NOT SET
         DS    1C
TCCPUCNT DS    1H                      NUMBER OF TCWA ENTRIES
         DS    56C
LTCWA    EQU   *-TCWA                  LENGTH OF TCWA
         SPACE 10
SETTCENT DSECT
TCENTRY  DS    0D                      TOD CLOCK WORKAREA ENTRY
         DS    12C
TCWAIADD DS    1H                      I-STREAM ADDRESS
         DS    1C
TCWALFLG DS    1C                      LOCAL FLAGS
TCLCC    EQU   X'30'
LENTRY   EQU   *-TCENTRY               LENGTH OF ENTRY
         EJECT
         IHASDWA
         EJECT
SETXSA   DSECT
         IEEXSA
         EJECT
*
* THIS MAPS THE XASAVSTD FIELD OF THE EXTENDED XSA. IT IS USED
* FOR A REGISTER SAVEAREA, AND A WORKAREA FOR BOTH MAINLINE AND
* RECOVERY.
*
         ORG   XASAVSTD            MAP ON EXTENDED SAVEAREA
FOLDAREA DS    8C                  WORKAREA FOR FOLDING KEYWORDS
EXITPARM DS    0CL28               PARM AREA USED BY ESTAE EXIT RTN
REGSAVE  EQU   EXITPARM            SAVEAREA FOR REGS 9 THRU 15
R9SAVE   DS    F
R10SAVE  DS    F
R11SAVE  DS    F
R12SAVE  DS    F
R13SAVE  DS    F
R14SAVE  DS    F
R15SAVE  DS    F
         ORG   R15SAVE             MAP ON FIELD R15SAVE
EXITFLGS EQU   *                   FLAGS FOR ESTAE EXIT RTN
CSECTCDE DS    C                   BITS 0 AND 1 ARE THE ONLY BITS USED
*                                    '00'B IS MODULE IEE0603D
*                                    '01'B IS MODULE IEE6503D
*                                    '11'B IS MODULE IEE6603D
         DS    3C                  RESERVED
ESTAELST ESTAE SERREXIT,PURGE=NONE,ASYNCH=NO,RECORD=YES,MF=L
         EJECT
         CVT   DSECT=YES
         EJECT
         IEAVVTPC
         EJECT
         IEEBASEA
         END
