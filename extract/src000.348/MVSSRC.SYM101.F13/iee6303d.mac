 TITLE 'IGC0003D   MSGRT COMMAND PROCESSOR, LOAD ONE'
***********************************************************************
*                                                                     *
*  MODULE-NAME =  IEE6303D                                       Y02669
*
*  DESCRIPTIVE NAME =  MSGRT COMMAND HANDLER LOAD ONE            Y02669
*
*  COPYRIGHT =  NONE                                             Y02669
*
*  STATUS =  OS/VS2 - DUMPING IMPROVEMENTS                     @G33CPMR
*
*  FUNCTION =  THIS MODULE BUILDS AND MAINTAINS THE ROUTE CONRTOLY02669
*  TABLE (RCT) FOR EACH CONSOLE IN ORDER TO PROVIDE DEFAULT      Y02669
*  ROUTING.                                                      Y02669
*
*     OPERATION =                                                Y02669
*     O.  IT IS DETERMINED IF THE COMMAND IS CURRENTLY         @Y02668P
*     EXECUTING UNDER A TASK OTHER THAN THE COMMUNICATIONS     @Y02668P
*     TASK. IF SO, AN INDICATOR IS SET IN THE XSA. THIS CON-   @Y02668P
*     DITION IS MOST LIKELY TO OCCUR FOR A COMMAND ISSUED AT   @Y02668P
*     A JES3 CONSOLE ASSOCIATED WITH AN MCS CONSOLE.           @Y02668P
*
*     1.  EXAMINE THE VERB IN THE OPERAND FIELD, POINTED TO BY   Y02669
*     THE XAL FIELD OF THE XSA.  THE VALID VERBS ARE 'TR', 'K',  Y02669
*     'D' AND 'NONE'.  IF NONE IS FOUND, CONTROL PASSES TO EXIT  Y02669
*     RCTMEXT TO BRANCH TO IEE6403D TO PROCESS A POSSIBLE REF    Y02669
*     OPERAND OR ISSUE AN ERROR MESSAGE.                         Y02669
*
*     2.  SCAN THE OPERANDS ON THE VERB. THE VALID OPERANDS, AND Y02669
*     THE ASSOCIATED VERBS, ARE AS FOLLOWS:                      Y02669
*          D                 K                 TR                Y02669
*       *******           *******           ********             Y02669
*          A                NONE               A                 Y02669
*          C                                                     Y02669
*          D                                                   @Z40BPSV
*          M                                                     Y02669
*          S                                                   @G17SPTJ
*          U                                                     Y02669
*       CONSOLES                                                 Y02669
*        3850                                                  @Z40LPTA
*        DUMP                                                  @G33CPMR
*
*
*     IF AN INVALID OPERAND IS FOUND, CONTROL PASSES TO THE      Y02669
*     ERROR EXIT TO ISSUE THE MESSSGE INDICATED THERE.           Y02669
*
*     3.  ONCE THE VERB'S OPERANDS ARE SCANNED, SEARCH FOR THE   Y02669
*     ROUTING OPERAND (L=). IF IT IS FOUND, THE CONSOLE AND AREA Y02669
*     SPECIFICATIONS ARE VALIDITY CHECKED, ALONG WITH THE        Y02669
*     AUTHORITY OF THE ISSUING CONSOLE TO USE THE ROUTING        Y02669
*     OPERAND.  FAILURES IN THIS CHECKING CAUSE CONTROL TO PASS  Y02669
*        3850                                                  @Z40LPTA
*     OTHERWISE, THE ROUTING INFORMATION IS SAVED IN THE XSA     Y02669
*     (XASCID FIELD) FOR LATER USE.                              Y02669
*
*     4.  AFTER OBTAINING THE LOCAL AND CMS LOCKS, THE UCME      Y02651
*     OF THE ISSUING CONSOLE IS CHECKED TO DETERMINE IF AN       Y02669
*     RCT ALREADY EXISTS FOR THAT CONSOLE. IF NOT, BRANCH ENTER  Y02651
*     CONDITIONAL GETMAIN FOR 48 BYTES FROM SUBPOOL 241,         Y02669
*     TO OBTAIN STORAGE FOR AN RCT.  IF THE GETMAIN FAILS,       Y02669
*     CONTROL PASSES TO THE ERROR EXIT TO ISSUE THE              Y02669
*     MESSAGE INDICATED THERE.  IF THE GETMAIN IS SUCCESSFUL,    Y02669
*     PROCESSING CONTINUES AT STEP 7.  IF AN RCT ALREADY EXISTS, Y02669
*     PROCESSING CONTINUES WITH STEP 5.                          Y02669
*
*     5.  EACH OF THE FIVE SLOTS IN THE RCT IS CHECKED.  IF THE  Y02669
*     VERB AND OPERAND IN AN ENTRY MATCH THOSE BEING PROCESSED,  Y02669
*     THE ENTRY IS MARKED ACTIVE ( BIT RCTACT IN BYTE RCTCODE IS Y02669
*     SET ON), AND THE CONSOLE AND AREA ARE MOVED INTO THE RCT   Y02669
*     FROM THE XSA.  IF ANOTHER VERB APPEARS ON THE COMMAND,     Y02669
*     PROCESSING CONTINUES WITH STEP 1.  IF NO ROUTING OPERAND   Y02669
*     APPEARED WITH THIS COMMAND, THE ACTIVE BIT IS SET OFF.     Y02669
*     IF THE VERBS MATCH AND THE OPERANDS DO NOT, OR IF THE      Y02669
*     VERBS DO NOT MATCH, THE NEXT RCT ENTRY IS LOCATED AND      Y02669
*     TESTED, AS DESCRIBED ABOVE.                                Y02669
*
*     6.  HOWEVER, IF THE ENTRY JUST TESTED WAS THE LAST IN THIS Y02669
*     RCT, A TEST IS MADE TO DETERMINE IF THERE IS ANOTHER RCT   Y02669
*     CHAINED TO THE ONE JUST EXAMINED.  IF NONE EXISTS, STORAGE Y02669
*     IS OBTAINED FOR ONE AS DESCRIBED IN STEP 4, AND PROCESSING Y02669
*     CONTINUES WITH STEP 7.  IF ANOTHER RCT EXISTS, IT IS PRO-  Y02669
*     CESSED AS DESCRIBED IN STEP 5.                             Y02669
*
*     7.  THE FIRST ENTRY IN THE NEW RCT IS INITIALIZED AS       Y02669
*     DESCRIBED IN STEP 5, IN THE CASE WHERE THE VERB AND        Y02669
*     OPERAND MATCH.  IN ADDITION, THE END FLAG (BIT RCTEND IN   Y02669
*     BYTE RCTCODE) IS SET ON TO INDICATE THAT THIS IS THE LAST  Y02669
*     DEFINED ENTRY.                                             Y02669
*
*     8.  ONCE THE RCT IS SUCCESSFULLY UPDATED OR CREATED,       Y02669
*     THE CMS AND LOCAL LOCKS ARE RELEASED, AND CONTROL PASSED @YM4788P
*     TO IEE0503D TO ISSUE MESSAGE IEE712I VIA BRANCH.         @YM4788P
*
*     9.  IF THE OPERAND IS 'NONE', THIS IS A REQUEST TO DELETE  Y02669
*     ALL ROUTING DEFAULTS FOR THE ISSUING CONSOLE.  ONCE THE    Y02669
*     LOCAL AND CMS LOCKS HAVE BEEN OBTAINED, THE ADDRESS OF     Y02651
*     EACH RCT IS FOUND AND STORED IN THE XSA.  THE RCT POINTER  Y02669
*     IN THE UCME IS CLEARED.  THE LOCKS ARE THEN RELEASED, AND  Y02651
*     AND EACH RCT FOUND IS FREED VIA FREEMAIN.                  Y02669
*
*    10.  IF THE OPERAND IS 'CONT' AN INDICATOR IS TURNED ON   @Z40LPTA
*         IN THE XSA. IF THIS IS THE LAST OPERAND, CONTROL IS  @Z40LPTA
*         PASSED TO EXIT RCTMEXT TO BRANCH TO IEE6403D TO      @Z40LPTA
*         PROCESS THE OUTPUT. IF THIS IS NOT THE LAST OPERAND, @Z40LPTA
*         THE REMAINING BUFFER IS SCANNED FOR ADDITIONAL       @Z40LPTA
*         OPERANDS.(REF 2)                                     @Z40LPTA
*
*  NOTES =                                                       Y02669
*     CHARACTER CODE DEPENDENCIES =  THIS MODULE HAS BEEN CODED  Y02669
*     IN SUCH A WAY THAT IF THE EXTERNAL CHARACTER SET IS        Y02669
*     CHANGED FROM EBCDIC, REASSEMBLY WILL YIELD A VALID MODULE, Y02669
*     WITH THE FOLLOWING EXCEPTIONS:                             Y02669
*
*     THE CODE REPRESENTATION OF DECIMAL DIGITS MUST HAVE THE    Y02669
*     FOUR HIGH ORDER BITS 'ON'.  (I.E. X'FZ', WHERE Z IS ANY    Y02669
*     HEX DIGIT.)                                                Y02669
*
*     THE ALPHABETIC CHARACTERS MUST BE IN COLLATING SEQUENCE.   Y02669
*
*     IF EITHER OR BOTH OF THE ABOVE CHANGES, THE TEST FOR THE   Y02669
*     VALIDITY OF THE VALUE OF THE ROUTING LOCATION OPERAND (L)  Y02669
*     MUST BE RECODED.                                           Y02669
*
*     RCT'S ARE FREED ONLY IN RESPONSE TO 'MSGRT NONE'.          Y02669
*
*     DEPENDENCIES =  GETMAIN, MSGRT COMMAND TO BE VALID ONLY    Y02669
*                     FROM A CONSOLE, SETLOCK                    Y02651
*
*     RESTRICTIONS =  THIS MODULE EXPECTS REGISTER TWO TO CON-   Y02669
*     TAIN THE ADDRESS OF AN XSA.                                Y02669
*
*     REGISTER CONVENTIONS =  SEE REGISTER USAGE                 Y02669
*
*     PATCH LABEL =  PATCH                                       Y02669
*
*  MODULE TYPE =  CSECT                                          Y02669
*
*     PROCESSOR =  ASSEM                                         Y02669
*
*     MODULE SIZE = X'611'                                     @G33CPMR
*
*     ATTRIBUTES =  SUPERVISOR MODE            REENTRANT         Y02669
*                   ZERO PSW PROTECT KEY       PAGED LPA         Y02669
*
*  ENTRY POINT =  IEE6303D, FROM IEE0403D                        Y02669
*
*     PURPOSE =  TO SYNTAX CHECK AND PROCESS THE MSGRT COMMAND   Y02669
*
*     LINKAGE =  BRANCH FROM IEE0403D                            Y02669
*
*     INPUT =  REGISTER TWO CONTAINS THE ADDRESS OF AN XSA       Y02669
*     INITIALIZED AS FOLLOWS:                                    Y02669
*
*     XAL     CONTAINS THE ADDRESS OF THE FIRST OPERAND          Y02669
*     XAU     CONSOLE ID                                         Y02669
*     XAV     COMMAND VERB (MR OR MSGRT)                         Y02669
*     XAE     MESSAGE INDEX  (X'00')                             Y02669
*
*     OUTPUT =  N/A                                              Y02669
*
*     REGISTERS SAVED =  NONE                                    Y02669
*
*     REGISTER USAGE =                                           Y02669
*     REGISTER 0         WORK REGISTER                           Y02669
*     REGISTER 1         WORK REGISTER                           Y02669
*     REGISTER 2         XSA BASE                                Y02669
*     REGISTER 3         END OF SYNTAX SCAN ADDRESS              Y02669
*     REGISTER 4         WORK REGISTER                           Y02669
*     REGISTER 5         WORK REGISTER                           Y02669
*     REGISTER 6         WORK REGISTER                           Y02669
*     REGISTER 7         UCME BASE                               Y02669
*     REGISTER 8         RCT BASE                                Y02669
*     REGISTER 9         UCM BASE                                Y02669
*     REGISTER 10        CVT BASE                                Y02669
*     REGISTER 11        OPERAND POINTER, FROM XSA               Y02669
*     REGISTER 12        MODULE BASE                             Y02669
*     REGISTER 13        SAVE REGISTER                           Y02669
*     REGISTER 14        RETURN REGISTER                         Y02669
*     REGISTER 15        LINK REGISTER                           Y02669
*
*     FOR THE BRANCH ENTRY TO GETMAIN, REGISTER USAGE IS:        Y02651
*
*     REGISTER 0         LENGTH OF RCT                           Y02651
*     REGISTER 1         ADDRESS OF STORAGE GOTTEN               Y02651
*     REGISTER 3         USED BY MACRO                           Y02651
*     REGISTER 4         TCB ADDRESS                             Y02651
*     REGISTER 7         ASCB ADDRESS                            Y02651
*     REGISTER 14        RETURN ADDRESS IN MODULE                Y02651
*     REGISTER 15        ENTRY POINT OF GETMAIN                  Y02651
*
*     REGISTERS RESTORED =  NONE                                 Y02669
*
*  EXIT-NORMAL =  RET                                            Y02669
*
*     CONDITIONS =  THE RCT HAS BEEN SUCCESSFULLY CREATED OR     Y02669
*     UPDATED.  THE CMS AND LOCAL LOCKS ARE FREED AND CONTROL    Y02651
*     IS RETURNED VIA A BRANCH TO THE ADDRESS IN REGISTER 14.    Y02669
*
*     OUTPUT DATA =                                            @YM4788P
*     RCT            UPDATED OR INITIALIZED                    @YM4788P
*     REGISTER 2     ADDRESS OF XSA CONTAINING                 @YM4788P
*     XAE            MESSAGE CODE X'03'                        @YM4788P
*     XAV            COMMAND VERB (MSGRT)                      @YM4788P
*     XAU            CONSOLE ID FOR WTO                        @YM4788P
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-NORMAL =  RCTMEXT                                        Y02669
*
*     CONDITIONS =  THE MR VERB IS NEITHER 'D', NOR 'K',         Y02669
*     NOR 'TR';  AFTER RELEASING THE CMS AND LOCAL LOCKS, IF     Y02651
*     HELD, CONTROL IS PASSED VIA BRANCH ON VCON TO              Y02669
*     IEE6403D TO CHECK FOR AND PROCESS THE 'REF' OPERAND.       Y02669
*     OR THE 'CONT' INDICATOR IN THE XSA.                      @Z40LPTA
*
*     OUTPUT DATA =                                              Y02669
*     REGISTER 2                ADDRESS OF XSA                   Y02669
*     LSTR(REGISTER 11)         ADDRESS OF MR VERB               Y02669
*     XASSDS(BIT XASPRF1)       'ON', IF A PARENTHESIS APPEARED  Y02669
*                               FIRST IN THE OPERAND FIELD       Y02669
*     XAL                       IDENTICAL TO LSTR                Y02669
*     XAV                       COMMAND VERB (MR OR MSGRT)       Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-ERROR =  ERROR                                           Y02669
*
*     CONDITIONS =  A DELIMITER (BLANK, PARENTHESIS, OR COMMA)   Y02669
*     IS NOT FOUND WHERE EXPECTED, PARENTHESES ARE NOT BALANCED  Y02669
*     AROUND AN MR VERB-OPERAND PAIR (E.G. 'D=A)'), OR MORE THAN Y02669
*     THREE CHARACTERS FOLLOW THE ROUTING LOCATION PARAMETER     Y02669
*     (E.G. 'L=123Z').  EXIT IS TAKEN VIA BRANCH ON VCON TO      Y02669
*     CAUSE MESSAGE IEE156I TO BE ISSUED BY IEE5603D.            Y02669
*
*     OUTPUT DATA =                                              Y02669
*     WRK6(REGISTER 6)     ADDRESS OF LAST PARAMETER EXAMINED    Y02669
*     REGISTER 2           ADDRESS OF XSA CONTAINING             Y02669
*     XAE                  MESSAGE CODE X'04'                    Y02669
*     XAV                  COMMAND VERB (MR OR MSGRT)            Y02669
*     XAU                  CONSOLE ID FOR WTO                    Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-ERROR =  ERROR1                                          Y02669
*
*     CONDITIONS =  THE AREA ID ON THE 'L' OPERAND IS NOT A      Y02669
*     A VALID CHARACTER.                                         Y02669
*     EXIT IS TAKEN VIA BRANCH ON VCON TO IEE6403D TO SET UP THE Y02669
*     INTERFACE TO CAUSE IEE5603D TO ISSUE MESSAGE IEE926I.      Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*     XAE                  MESSAGE CODE X'0C'                    Y02669
*     XAV                  COMMAND VERB (MR OR MSGRT)            Y02669
*     XAU                  CONSOLE ID FOR WTO                    Y02669
*     XASTSAVE             SUPPLEMENTARY MESSAGE CODE X'12'      Y02669
*                          FOR IEE5903D ('NOT AN AREA' SUFFIX)   Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-ERROR =  ERROR2                                          Y02669
*
*     CONDITIONS =  THE MR VERB 'K' WAS SPECIFIED FROM A CRT     Y02669
*     CONSOLE.                                                   Y02669
*     EXIT IS TAKEN VIA BRANCH ON VCON TO IEE6403D TO SET UP THE Y02669
*     INTERFACE TO CAUSE IEE5603D TO ISSUE MESSAGE IEE925I.      Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*     XAE                  MESSAGE CODE X'0B'                    Y02669
*     XAV                  COMMAND VERB (MR OR MSGRT)            Y02669
*     XAU                  CONSOLE ID FOR WTO                    Y02669
*     WRK6                 ADDRESS OF 'K ' OR 'K,' IN COMMAND    Y02669
*                          BUFFER FOR MESSAGE                    Y02669
*     (XASTSAVE WILL BE SET TO X'1B' BY IEE6403D TO CAUSE        Y02669
*     IEE5903D TO ADD 'FOR NON CRT ONLY' TO THE MESSAGE)         Y02669
*
*     RETURN CODES =  NONE.                                      Y02669
*
*  EXIT-ERROR =  ERROR3                                          Y02669
*
*     CONDITIONS =  CONDITIONAL GETMAIN FOR 48 BYTE RCT FAILED.  Y02669
*     AFTER RELEASEING THE CMS AND LOCAL LOCKS, EXIT IS TAKEN    Y02651
*     VIA BRANCH ON VCON TO IEE6403D TO SET UP THE               Y02669
*     INTERFACE TO CAUSE IEE5603D TO ISSUE MESSAGE IEE931I.      Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*     XAE                  MESSAGE CODE X'0E'                    Y02669
*     XAV                  COMMAND VERB (MR OR MSGRT)            Y02669
*     XAU                  CONSOLE ID FOR WTO                    Y02669
*
*     RETURN CODES =  NONE.                                      Y02669
*
*  EXIT-ERROR =  ERROR4                                          Y02669
*
*     CONDITIONS =  CONSOLE ID SPECIFIED ON ROUTING OPERAND      Y02669
*     IS NOT THAT OF ANY CONSOLE IN THE SYSTEM.                  Y02669
*     EXIT IS TAKEN VIA BRANCH ON VCON TO IEE6403D TO SET UP THE Y02669
*     INTERFACE TO CAUSE IEE5603D TO ISSUE MESSAGE IEE926I.      Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*     XAE                  MESSAGE CODE X'0C'                    Y02669
*     XAV                  COMMAND VERB (MR OR MSGRT)            Y02669
*     XAU                  CONSOLE ID FOR WTO                    Y02669
*     XASTSAVE             SUPPLEMENTARY MESSAGE CODE X'13'      Y02669
*                          FOR IEE5903D ('NOT A CONSOLE' SUFFIX) Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-ERROR =  ERROR6                                          Y02669
*
*     CONDITIONS =  ISSUING CONSOLE DOES NOT HAVE AUTHORITY TO   Y02669
*     SPECIFY ROUTING OPERAND.  (I.E. IT DOES NOT HAVE AUTHORITY Y02669
*     X'20'.)                                                    Y02669
*     EXIT IS TAKEN VIA BRANCH ON VCON TO IEE6403D TO SET UP THE Y02669
*     INTERFACE TO CAUSE IEE5603D TO ISSUE MESSAGE IEE345I.      Y02669
*
*     OUTPUT DATA =  REGISTER TWO POINTS TO AN XSA CONTAINING:   Y02669
*     XAE                  MESSAGE CODE X'08'                    Y02669
*     XAV                  COMMAND VERB (MR OR MSGRT)            Y02669
*     XAU                  CONSOLE ID FOR WTO                    Y02669
*
*     RETURN CODES =  NONE.                                      Y02669
*
*  EXIT-ERROR = ERROR8                                         @Y02668P
*                                                              @Y02668P
*     CONDITIONS = CONSOLE ID SPECIFIED ON THE ROUTING OPERAND @Y02668P
*                  IS THAT OF A JES3-ONLY CONSOLE. EXIT IS     @Y02668P
*                  TAKEN VIA BRANCH ON VCON TO IEE6403D TO SET @Y02668P
*                  UP THE INTERFACE TO CAUSE IEE5603D TO ISSUE @Y02668P
*                  MESSAGE IEE926I.                            @Y02668P
*
*     OUTPUT DATA = REGISTER TWO POINTS TO AN XSA CONTAINING   @Y02668P
*     XAE              MESSAGE CODE X'0C'                      @Y02668P
*     XAV              COMMAND VERB (MR OR MSGRT)              @Y02668P
*     XAU              CONSOLE ID FOR WTO                      @Y02668P
*     XASTSAVE         SUPPLEMENTARY MESSAGE CODE X'1F' FOR    @Y02668P
*                      FOR IEE5903D ('JES3-ONLY CONSOLE')      @Y02668P
*     XASTOPR          POINTER TO INVALID OPERAND              @Y02668P
*                                                              @YM2776P
* EXIT-ERROR =  RET                                            @YM2776P
*                                                              @YM2776P
*    CONDITIONS =  XAU IS ZERO. THUS, MSGRT IS UNABLE TO       @YM2776P
*                  DETERMINE WHAT CONSOLE'S RCT TO PROCESS.    @YM2776P
*                  CONDITION ORDINARILY ARISES FOR COMMANDS    @YM2776P
*                  IN SYS1.PARMLIB.                            @YM2776P
*                  EXIT IS TAKEN VIA A BRANCH TO THE ADDRESS   @YM2776P
*                  IN REGISTER 14.                             @YM2776P
*                                                              @YM2776P
*    OUTPUT DATA =  NONE                                       @YM2776P
*                                                              @YM2776P
*    RETURN CODES =  NONE                                      @YM2776P
*
*  EXTERNAL REFERENCES =                                         Y02669
*
*     ROUTINES =  IEE6403D - TO SET UP FOR ISSUING MESSAGES AND  Y02669
*                            TO PROCESS THE 'REF' OPERAND, VIA   Y02669
*                            BRANCH.                             Y02669
*                 IEE0503D - TO ISSUE MESSAGE IEE712I          @YM4788P
*
*     DATA AREAS =  NONE                                         Y02669
*
*     CONTROL BLOCKS =                                           Y02669
*     RCT    C,R,W,D                                             Y02669
*     XSA    R,W                                                 Y02669
*     UCM    R,W                                                 Y02669
*     CVT    R                                                   Y02669
*     PTRS   R                                                   Y02651
*
*     KEY:  C=CREATE,D=DELETE,R=READ,W=WRITE                     Y02669
*
*     TABLES =  OPTAB - VALID MAJOR OPERANDS OF TRACK AND        Y02669
*               DISPLAY COMMANDS                                 Y02669
*
*     MACROS =  GETMAIN, MODID, CVT, IEECUCM, IEEXSA,            Y02669
*     IEECVMAP RCT, SETLOCK, IHAPSA, IEFPTRS, FREEMAIN           Y02651
*        SERIALIZATION =                                         Y02651
*        LOCKS HELD =  CMS, LOCAL                                Y02651
*
*  CHANGE ACTIVITY =  Y02651, Y02669, @YM2776P, @YM0428P       @YM2776P
*                     @YM4296P, @YM4787P, @YM4788P, @Y02668P   @Y02668P
*                     @Z40LPTA, @Z40BPSV, @ZA07152, @ZA09261   @ZA09261
*                     @G17SPTJ, @G33CPMR                       @G33CPMR
*
          EJECT
*  MESSAGES =                                                    Y02669
*        CODES                      TEXT                         Y02669
*   XAE   XASTSAVE                                               Y02669
*  X'0C'   X'12'      IEE926I (VERB) L=CCA OPERAND INVALID-      Y02669
*                     (AREAID) NOT AN AREA                       Y02669
*  X'04'   N/A        IEE156I (VERB) INVALID OPERAND- (OPERAND)  Y02669
*  X'0B'   N/A        IEE925I (VERB) OPERAND K FOR NON CRT ONLY  Y02669
*         (X'1B' SET                                             Y02669
*          BY IEE6403D)                                          Y02669
*  X'0E'   N/A        IEE931I (VERB) (OPERAND) INSUFFICIENT      Y02669
*                     STORAGE FOR COMMAND  (IF THE COMMAND IS    Y02669
*                     'MR D=A', OPERAND IS 'A')                  Y02669
*  X'0C'   X'13'      IEE926I (VERB) L=CCA OPERAND INVALID-      Y02669
*                     (CONSID) NOT A CONSOLE                     Y02669
*  X'08'   N/A        IEE345I (VERB) AUTHORITY INVALID           Y02669
*  X'03'   N/A        IEE712I MSGRT PROCESSING COMPLETE        @YM4788P
*  X'0C'   X'1F'      IEE926I (VERB) L=CCA OPERAND INVALID-    @Y02668P
*                     (CONSID) SUBSYSTEM CONSOLE               @Y02668P
*
*  MESSAGE IEE712I IS ISSUED FROM IEE0503D. OTHERWISE,         @YM4788P
*  ALL MAJOR TEXT CONTAINED IN IEE5603D.  IF NO MINOR TEXT, THE  Y02669
*  MESSAGE IS ISSUED FROM THERE.  IF THERE IS MINOR TEXT (SUFFIX)Y02669
*  IT IS CONTAINED IN IEE5903D, AND THE MESSAGE IS ISSUED FROM   Y02669
*  THERE.                                                        Y02669
*
*  ABEND CODES =  NONE.                                          Y02669
*
***********************************************************************
        EJECT
IEE6303D CSECT
* THIS APAR WRITTEN TO SUPPORT MSS 'D 3850' S/C Z40LPTA        @ZA07152
* C (NEWENBK) APPROX 411000                                    @ZA09261
* A - CODE ADDED TO SUPPORT 'DISPLAY DUMP'                     @G33CPMR
********                                                              *
******** REGISTER EQUATES                                             *
********                                                              *
WRK0     EQU   0                   WORK REGISTER
WRK1     EQU   1                   WORK REGISTER
XSAR     EQU   2                   BASE REGISTER FOR THE XSA
CDRR     EQU   3                   END OF SYNTAX SCAN ADDRESS
WRK4     EQU   4                   WORK REGISTER
WRK5     EQU   5                   WORK REGISTER
WRK6     EQU   6                   WORK REGISTER
ENTR     EQU   7                   BASE REGISTER FOR UCM ENTRIES
RCTR     EQU   8                   BASE REGISTER FOR THE RCT
UCMR     EQU   9                   BASE REGISTER FOR THE UCM
CVTR     EQU   10                  BASE REGISTER FOR THE CVT
LSTR     EQU   11                  LIST POINTER FROM XSA
BASR     EQU   12                  ROUTINE BASE REGISTER
SAVR     EQU   13                  SAVE REGISTER
RETR     EQU   14                  RETURN REGISTER
LNKR     EQU   15                  LINK REGISTER
         EJECT
********                                                              *
******** OTHER EQUATES                                                *
********                                                              *
N0       EQU   0                   NUMBER CONSTANT
N1       EQU   1                   NUMBER CONSTANT
N2       EQU   2                   NUMBER CONSTANT
N3       EQU   3                   NUMBER CONSTANT
N4       EQU   4                   NUMBER CONSTANT
N5       EQU   5                   NUMBER CONSTANT
N6       EQU   6                   NUMBER CONSTANT
N7       EQU   7                   NUMBER CONSTANT
N8       EQU   8                   NUMBER CONSTANT
N9       EQU   9                   NUMBER CONSTANT
N10      EQU   10                  NUMBER CONSTANT
N11      EQU   11                  NUMBER CONSTANT
N12      EQU   12                  NUMBER CONSTANT
N16      EQU   16                  NUMBER CONSTANT               Y02669
CA       EQU   C'A'                A CONSTANT
CI       EQU   C'I'                I CONSTANT
CJ       EQU   C'J'                J CONSTANT
CR       EQU   C'R'                R CONSTANT
CS       EQU   C'S'                S CONSTANT
CZ       EQU   C'Z'                Z CONSTANT
COMMA    EQU   C','                COMMA CHARACTER
PARA2    EQU   C')'                PARENTHSIS CONSTANT
PARA1    EQU   C'('                PARENTHSIS CONSTANT
BLK      EQU   C' '                BLANK CONSTANT                Y02669
TF       EQU   X'FF'               FLAG TO TURN OF SWITCHES
SUBP     EQU   241                 SUBPOOL FOR RCT SECTIONS      Y02669
XF0      EQU   X'F0'               NUMBER ZONE
ASTRICK  EQU   X'5C'               AREA ID SPECIAL FILLER      @Z40LPTA
EQUAL    EQU   C'='                EQUAL CONSTANT
LOPER    EQU   C'L'                L CONSTANT
KCDR     EQU   C'K'                K CONSTANT
CHARC    EQU   C'C'                LETTER CONSTANT               Y02669
CHARO    EQU   C'O'                LETTER CONSTANT
CHARP    EQU   C'P'                LETTER CONSTANT             @G33CPMR
CHARD    EQU   C'D'                LETTER CONSTANT             @G33CPMR
ZERO     EQU   X'00'               NUMBER CONSTANT
RTCDR    EQU   X'94'               COMMAND CODE FOR ROUTE CDR
KERROR   EQU   X'0B'               ERROR CODE FOR CRT ONLY MSG
NCERROR  EQU   X'0E'               ERROR CODE FOR NO CORE MSG
LIERROR  EQU   X'0C'               ERROR CODE FOR L INVALID MSG
AIERROR  EQU   X'12'               SECOND ERROR CODE FOR AREA INVALID
CIERROR  EQU   X'13'               SECOND ERROR CODE FOR CONSOLE INVAL
JIERROR  EQU   X'1F'               SECOND ERROR CODE FOR       @Y02668P*
                                   SUBSYSTEM CONSOLE INVALID   @Y02668P
RIERROR  EQU   X'08'               ERROR CODE FOR AUTHORITY INVALID
IOERROR  EQU   X'04'               ERROR CODE FOR INVALID OPERAND
IEE712I  EQU   X'03'             MESSAGE CODE FOR PROCESS CPLT @YM4788P
*********                                                             *
         EJECT
*******************************************************************
         BALR  BASR,N0             SET PROGRAM BASE
         USING *,BASR              ESTABLISH ADDRESSIBILITY
         MODID BRANCH=YES                                        Y01886
         USING DXSA,XSAR           ADDRESSIBILITY OF XSA
         L     CVTR,CVTPTR         ADDRESS OF CVT
         USING DCVT,CVTR           ADDRESSIBILITY OF THE CVT
         L     UCMR,CVTCUCB        ADDRESS OF UCM FROM CVT
         USING UCM,UCMR            ADDRESSIBILITY OF THE UCM     Y02669
         XC    XAS(N4),XAS         CLEAR FLAG BYTES              Y02669
         CLI   XAU,ZERO            SYSTEM-ISSUED COMMAND?      @YM2776P
         BE    RET1                YES, EXIT                   @YM7698P
         L     WRK4,CVTTCBP        GET ADDR OF NEW/OLD PTRS    @Y02668P
         USING TCBASCB,WRK4        ADDRESSABILITY TO NEW/OLD   @Y02668P
         L     WRK4,TCBPTR         GET ADDR OF CALLER'S TCB    @Y02668P
         DROP  WRK4                RELEASE NEW/OLD ADDR'LITY   @Y02668P
         C     WRK4,UCMPXA         IS CALLER COMMTASK?         @Y02668P
         BE    COMMTASK            YES, AVOID SETTING JES3 BIT @Y02668P
         OI    XASSDS,XASSDS3      NO, INDICATE NON-COMMTASK   @Y02668P
*                                  CALLER                      @Y02668P
        SPACE 2
*******************************************************************
COMMTASK EQU   *                   HERE TO AVOID BIT           @Y02668P
STARTSC  EQU   *
         L     LSTR,XAL            POINTER TO COMMAND PARAMETERS
         LA    LSTR,N0(LSTR)       CLEAR HIGH ORDER BYTE         Y02669
         LTR   LSTR,LSTR           OPERAND PRESENT?              Y02669
         BZ    RCTMEXT             NO, DEFAULT TO MR REF         Y02669
         LA    WRK4,N1             ONE FOR SCAN INCREMENT AND BXLE
CONSCAN  EQU   *                                               @Z40LPTA
         CLI   N0(LSTR),PARA1      IS THERE MORE THEN ONE VERB
         BNE   TESTVB              BRANCH NO
         OI    XASPLS3,XASPRF1     SET VERB PARENTHESIS FLAG  @Y02668P
         AR    LSTR,WRK4           INCREMENT OVER PARENTHESIS
         STCM  LSTR,7,XAL+N1       UPDATE LIST POINTER PAST   @YM4296P
*                                  PARENTHSIS                 @YM4296P
***                                                                   *
***   TEST FOR THE VERB OF THE MSGRT COMMAND                          *
***                                                                   *
         SPACE 2
*******************************************************************
TESTVB   EQU   *
         CLC   N0(N2,LSTR),DIS     IS THIS A DISPLAY VERB?
         BE    SCANCHK             BRANCH YES                    Y02669
         SPACE 2
*******************************************************************
         CLC   N0(N3,LSTR),TR      IS THIS A TRACK VERB?         Y02669
         BE    TRCHK               BRANCH YES                    Y02669
         SPACE 2
*******************************************************************
         CLC   N0(N5,LSTR),NONE    IS THIS NONE?                 Y02669
         BE    NONERTN             BRANCH YES                    Y02669
         CLC   N0(N4,LSTR),CONTOP  CONTINUATION OPERAND?       @Z40LPTA
         BNE   KCHECK              NO,CHECK NEXT               @Z40LPTA
         OI    XASSDS,XASSDS6      YES,SET 'CONT' FLAG         @Z40LPTA
         CLI   N4(LSTR),BLK     END OF COMMAND?                @Z40LPTA
         BE    RCTMEXT             YES,SET UP FOR LOAD 2       @Z40LPTA
         CLI   N4(LSTR),COMMA   MORE OPERANDS?                 @Z40LPTA
         BNE   ENDCHCK             NO, CHECK IF END OF BUFFER  @Z40LPTA
         LA    LSTR,N5(LSTR)       INCREMENT PAST 'CONT,'      @Z40LPTA
         B     CONSCAN             CONTINUE COMMAND SCAN       @Z40LPTA
ENDCHCK  EQU   *                                               @Z40LPTA
         L     ENTR,XAP            END OF BUFFER ADDR + 1      @Z40LPTA
         BCTR  ENTR,0              DECREMENT BY ONE            @Z40LPTA
         LR    RCTR,LSTR           SET UP FOR END OF BUFF TEST @Z40LPTA
         LA    RCTR,N3(RCTR)       BUMP TO OPERAND END         @Z40LPTA
         CR    ENTR,RCTR           AT END OF BUFFER?           @Z40LPTA
         BE    RCTMEXT             YES, GO TO LOAD 2           @Z40LPTA
         B     ERROR               NO, INVALID OPERAND         @Z40LPTA
         EJECT
*******************************************************************
KCHECK   EQU   *                                               @Z40LPTA
         CLI   N0(LSTR),KCDR       IS THIS A CONTROL (K) VERB?
         BNE   RCTMEXT             BRANCH NO TO SECOND LOAD
         OI    XASPLS3,XASKFG      SET K COMMAND FLAG         @Y02668P
         LR    WRK6,LSTR           SAVE ADDRESS OF VERB IN K CDR
         B     KCDRCHK             BRANCH TO CHECK FOR L OPERAND
         SPACE 2
*******************************************************************
SCANCHK  EQU   *
         LA    LSTR,N2(LSTR)       INCREMENT TO FIRST VERB
         CLI   N0(LSTR),PARA1      IS THERE MORE THAN ONE VERB?
         BNE   DISTAB1             BRANCH NO
         OI    XASPLS3,XASPRF2   SET OPERAND PARENTHESIS FLAG @Y02668P
         AR    LSTR,WRK4           INCREMENT TO FIRST OPERAND
DISTAB1  EQU   *
         LR    WRK6,LSTR           SAVE ADDRESS OF FIRST OPERAND
***                                                                   *
***  TEST THE OPERANDS OF THE MSGRT (MR) VERBS                        *
***                                                                   *
DISTABS  EQU   *
         TM    XASPLS3,XASTRFG     IS THIS A TRACK VERB?       @Y02668P
         BO    TRSCAN              BRANCH YES                    Y02669
         CLC   N0(N4,LSTR),D3850   THIS D 3850 COMMAND         @Z40LPTA
         BNE   TESTCONS            NO, CHECK FOR CONSOLES      @Z40LPTA
         LA    LSTR,N3(LSTR)       INCREMENT BUFFER PTR        @Z40LPTA
         B     DISCONS             CONTINUE SCAN OF BUFFER     @Z40LPTA
TESTCONS EQU   *                                               @Z40LPTA
         CLC   N0(N8,LSTR),CONSOLES IS VERB OPERAND EQUAL TO CONSOLES?
         BNE   TESTDUMP            BRANCH NO                   @G33CPMR
         MVI   N0(LSTR),CHARO      CHANGE C OF CONSOLES TO O FOR RCT
         LA    LSTR,N7(LSTR)       INCREMENT PAST OPERAND
         B     DISCONS             CONTINUE SCAN OF BUFFER     @G33CPMR
TESTDUMP EQU   *                                               @G33CPMR
         CLC   N0(N4,LSTR),DUMP    IS THIS 'D=DUMP'?           @G33CPMR
         BNE   DISSCAN             BRANCH NO                   @G33CPMR
         MVI   N0(LSTR),CHARP      CHANGE D OF DUMP TO P FOR RCT
         LA    LSTR,N3(LSTR)       INCREMENT BUFFER PTR        @G33CPMR
         SPACE 2
*******************************************************************
DISCONS  EQU   *
         AR    LSTR,WRK4           INCREMENT PAST OPERAND
         CLI   N0(LSTR),BLK        IS THIS THE END OF THE COMAND
         BE    ENDSCAN             BRANCH YES
         CLI   N0(LSTR),COMMA      IS THERE ANOTHER OPERAND?
         BE    SINGLED             BRANCH YES
         CLI   N0(LSTR),PARA2      IS THIS END OF THE OPERANDS?
         BNE   ERROR               BRANCH NO
         TM    XASPLS3,XASPRF2     WAS THERE AN OPENING       @Y02668P
*                                             PARENTHESIS     @Y02668P
         BNO   PARCHK              BRANCH NO
         EJECT
KCDRCHK  EQU   *
         AR    LSTR,WRK4           INCREMENT PAST PARENTHSIS
***                                                                   *
***  WHAT CHARACTER FOLLOWS THE CLOSING OPERAND PARENTHSIS            *
***                                                                   *
         CLI   N0(LSTR),BLK        IS THIS THE END?
         BE    ENDSCAN             BRANCH YES
         SPACE 1
*******************************************************************
LCHECK   EQU   *
         CLC   N0(N3,LSTR),CLEQUAL IS THIS THE LOCATION OPERAND?
         BNE   TESTEND             BRANCH NO
         SPACE 1
*******************************************************************
         OI    XASSDS,XASSDS2      INDICATE THAT A L=VERB EXITS  Y02669
         LA    LSTR,N3(LSTR)       INCREMENT AROUND L=
         LR    WRK0,LSTR           SAVE ADDRESS OF L OPERAND
         LA    WRK5,N3(LSTR)       NUMBER OF PARAMETERS IN L=
LLOOP    EQU   *
         CLI   N0(LSTR),BLK        IS THERE A BLANK?
         BE    ENDSCAN             BRANCH YES
         CLI   N0(LSTR),PARA2      IS THERE AN OPERAND PARENTHESIS?
         BE    ENDSCAN1            BRANCH YES
         BXLE  LSTR,WRK4,LLOOP     INCREMENT LIST PTR AND TRY AGAIN
         LR    LSTR,WRK0           START OF L OPERAND FOR MSG    Y02669
         B     ERROR               BRANCH TO INVALID OPERAND MSG
TESTEND  EQU   *
         CLI   N0(LSTR),PARA2      IS THIS THE END OF THE VERB?
         BNE   ERROR               BRANCH NO
PARCHK   EQU   *
         TM    XASPLS3,XASPRF1   WAS THERE A VERB PARENTHESIS @Y02668P
         BNO   ERROR               BRANCH NO
ENDSCAN1 EQU   *
         AR    LSTR,WRK4           INCREMENT LIST POINTER
ENDSCAN  EQU   *
         CLI   N0(LSTR),BLK        IS THIS THE LAST MR VERB
         BNE   ENDSCAN2            BRANCH NO
         NI    XASPLS3,TF-XASPRF1 TURN OFF VERB PARENTHSIS FLAG@Y02668P
ENDSCAN2 EQU   *
         AR    LSTR,WRK4           INCREMENT LIST POINTER
         LR    CDRR,LSTR           SAVE SCAN END FOR VERB
         LR    LSTR,WRK0           BEGINNING OF L OPERAND
         SR    WRK1,WRK1           CLEAR REG FOR CONSOLE ID
         SR    WRK5,WRK5           CLEAR REG FOR CONSOLE ID
         IC    WRK5,XAU            SOURCE CONSOLE ID
         STC   WRK5,XASCID         EQUALS TARGET CONSOLE ID
         TM    XASSDS,XASSDS2      IS A L OPERAND PRESENT        Y02669
         BNO   VALIDX              BRANCH NO
         EJECT
***                                                                   *
***   FOUND THE L= OPERAND AND NOW MUST CHECK IT FOR VALIDITY         *
***                                                                   *
         SPACE 1
*******************************************************************
LFOUND   EQU   *
         STCM  LSTR,7,XASOPTR      SAVE OPERAND ADDRESS        @YM4787P
*                                  FOR CURSOR POSITIONING      @YM4787P
*                                  IN POSSIBLE ERROR MSG       @YM4787P
         TM    N0(LSTR),XF0        IS THE FIRST CHAR  A NUMBER?
         BNO   STOREA              BRANCH NO
         TM    N1(LSTR),XF0        IS THE SECOND CHAR A NUMBER?
         BO    TWODIGIT            BRANCH YES
ONEDIGIT EQU   *
         PACK  XAX(N8),N0(N1,LSTR) PACK CONSOLE ID IN XSA      @Z40LPTA
         AR    LSTR,WRK4           INCREMENT LIST POINTER
         B     CHECKCC             BRANCH TO CONVERT NUMBER
TWODIGIT EQU   *
         PACK  XAX(N8),N0(N2,LSTR) PACK CONSOLE ID IN XSA      @Z40LPTA
         LA    LSTR,N2(LSTR)       INCREMENT LIST POINTER
CHECKCC  EQU   *
         USING UCMLIST,ENTR        ADDRESSIBILITY OF UCM ENTRY
         CVB   WRK5,XAX        CONVERT CONSOLE ID TO BINARY    @Z40LPTA
         L     ENTR,UCMVEL         LAST UCM ENTRY
         IC    WRK1,UCMID          CONSOLE ID FROM LAST ENTRY
         SPACE 1
*******************************************************************
         STC   WRK5,XASCID         SAVE VALID CONSOLE ID IN XSA
         LTR   WRK5,WRK5           IS CONSOLE ID NON-POSITIVE?   Y02669
         BNP   ERROR4              YES, SET UP FOR MSG IEE926I   Y02669
         CLR   WRK5,WRK1           IS CONSOLE ID FROM CDR VALID
         BH    ERROR4              BRANCH NO
         CLI   N0(LSTR),BLK        IS THIS THE END OF THE COMMAND?
         BE    VALIDX              BRANCH YES
         CLI   N0(LSTR),PARA2      IS THIS THE END OF A VERB?
         BE    VALIDX              BRANCH NO
***                                                                   *
***  IS AREA ID A VALID ALPHABETIC CHARACTER                          *
***                                                                   *
STOREA   EQU   *
         MVC   XASDID(N1),N0(LSTR) SAVE VALID AREA ID IN XSA
         CLI   N0(LSTR),ASTRICK    THIS SPECIAL FILLER         @Z40LPTA
         BE    STOREA1             BRANCH YES                  @Z40LPTA
         CLI   N0(LSTR),CA         IS AREA ID EQUAL OR GREATER THAN A?
         BL    ERROR1              BRANCH NO
         CLI   N0(LSTR),CI         IS AREA ID EQUAL OR LESS THAN I?
         BNH   STOREA1             BRANCH YES
         CLI   N0(LSTR),CJ         IS AREA ID EQUAL OR GREATER THAN J
         BL    ERROR1              BRANCH NO
         CLI   N0(LSTR),CR         IS AREA ID EQUAL OR LESS THAN R
         BNH   STOREA1             BRANCH YES
         CLI   N0(LSTR),CS         IS AREA ID EQUAL OR GREATER THAN S
         BL    ERROR1              BRANCH NO
         CLI   N0(LSTR),CZ         IS AREA ID EQUAL OR LESS THAN Z
         BH    ERROR1              BRANCH NO
STOREA1  EQU   *
         CLI   N1(LSTR),BLK        IS NEXT CHARACTER A BLANK
         BE    VALIDX              BRANCH YES
         CLI   N1(LSTR),PARA2      IS NEXT CHARACTER A PARENTHSIS
         BNE   ERROR               BRANCH NO TO OPERAND
VALIDX   EQU   *
         LR    WRK1,WRK5           POSITION TARGET ID FOR      @Y02668P
*                                  FINDUCME                    @Y02668P
         BAL   LNKR,FINDUCME       GET TARGET UCME ADDRESS     @Y02668P
         TM    UCMDISP2,UCMDISPK   SUBSYSTEM CONSOLE?          @Y02668P
         BO    ERROR8              YES, ERROR                  @Y02668P
         SR    WRK1,WRK1           NO, SET UP FOR INSERT CHAR  @Y02668P
         IC    WRK1,XAU            GET SOURCE CONSOLE ID
         LR    LSTR,WRK1           SAVE SOURCE ID
         BAL   LNKR,FINDUCME       GET ISSUING UCME ADDRESS      Y02669
         CR    LSTR,WRK5           IS SOURCE SAME AS TARGET
         BE    KCDRCK              BRANCH YES
         TM    UCMAUTH,UCMAUTH3    DOES SOURCE CONSOLE HAVE AUTHORITY
*                                   TO ROUTINE (MUST HAVE CONS AUTH.)
         BZ    ERROR6              BRANCH NO
KCDRCK   EQU   *
         TM    XASPLS3,XASKFG      IS VERB A K COMMAND        @Y02668P
         BNO   TABLECK             BRANCH NO
         TM    UCMDISP,UCMDISPC    IS CONSOLE A CRT?
         BO    ERROR2              BRANCH YES TO ERROR MSG
         EJECT
*******************************************************************
***   THE RCT ENTRIES ARE UPDATED, AND THE CHAIN EXTENDED, UNDER Y02651
***   THE PROTECTION OF THE LOCAL AND CMS LOCKS.  THIS SERIAL-   Y02651
***   IZATION IS NECESSARY TO PREVENT THE READING OF A PARTIALLY Y02651
***   COMPLETE, OR PARTIALLY ALTERED, RCT ENTRY BY THE ROUTING   Y02651
***   OPERAND PROCESSOR (IEE7503D).                              Y02651
***   ONCE LOCKS ARE ACQUIRED, A SWITCH IS SET TO PREVENT THE    Y02651
***   OVERHEAD OF REACQUISITION  FOR EACH MSGRT VERB-OPERAND.    Y02651
***   THIS IS NECESSARY SINCE, ONCE THE RCT UPDATE SUBROUTINE    Y02651
***   COMPLETES, IT RETURNS TO THE BUFFER SCAN ROUTINE TO        Y02651
***   PROCESS ANY ADDITIONAL MSGRT VERB-OPERANDS APPEARING IN    Y02651
***   THE BUFFER.                                                Y02651
*******************************************************************
     SPACE 2
TABLECK  EQU   *
         BAL   LNKR,GETLOCK        OBTAIN LOCAL AND CMS LOCKS    Y02651
         L     RCTR,UCMRCT         RCT ADDRESS FROM UCM ENTRY
         L     LSTR,XAL            BEGINNING OF VERB ADDRESS
         LA    RCTR,N0(RCTR)       ZERO FLAG BYTE
         LTR   RCTR,RCTR           DOES A TABLE EXIST?
         BNZ   TESTRCT             BRANCH YES
         LA    RCTR,UCMRCT         ADDRESS OF RCT IN UCM
         EJECT
*******************************************************************
STARTRCT EQU   *
***                                                                   *
***   ROUTINE TO ISSUE GETMAIN FOR RCT SECTION                        *
***   BECAUSE THE LOCAL AND CMS LOCKS ARE HELD AT THIS POINT,  @YM00428
***   GETMAIN MUST BE BRANCH ENTERED.  IT IS REQUIRED TO BRANCH YM00428
***   ENTER GETMAIN THAT THE CMS AND LOCAL LOCKS BE HELD.      @YM00428
***                                                                   *
*******************************************************************
      SPACE 2
         STM   XSAR,RETR,XASAVSTD  SAVE ALL REGS ACROSS BRANCH @YM00428
*                                  ENTRY TO GETMAIN            @YM00428
         L     WRK4,CVTTCBP        GET ADDR OF NEW/OLD POINTERS YM00428
         USING TCBASCB,WRK4        ADDRESSABILITY TO NEW/OLD   @YM00428
         L     ENTR,ASCBPTR        REG7: ADDR CURRENT ASCB     @YM00428
         L     WRK4,TCBPTR         REG4: ADDR CURRENT TCB      @YM00428
         DROP  WRK4                RELEASE NEW/OLD ADDR'LITY   @Y02668P
         LA    WRK0,RCTTEND-RCTBEG REG0: RCT SIZE FOR GETMAIN  @YM00428
         GETMAIN RC,LV=(0),SP=SUBP,BRANCH=YES GETMAIN RCT      @YM00428
         LM    XSAR,RETR,XASAVSTD  RESTORE REGS                @YM00428
         LTR   LNKR,LNKR           IS RETURN CODE NON ZERO?
         BNZ   ERROR3              BRANCH YES
         USING DSTRCT,WRK5
         LR    WRK5,WRK1           ADDRESS OF NEW SECTION OF RCT Y02651
         XC    RCTBEG(RCTTEND-RCTBEG),RCTBEG CLEAR AREA GOTTEN FOR RCT
         OI    RCTENT6,RCTCON      SET CONTINUE FLAG IN SECTION
         DROP  WRK5
         USING DSTRCT,RCTR         ADDRESSIBILITY OF RCT
       EJECT
***                                                                   *
***   START BUILDING NEW ENTRIES IN THE RCT                           *
***                                                                   *
         STCM  WRK5,7,N1(RCTR)     ADDRESS OF RCT INTO UCM OR    Y02669
*                                  PREVIOUS RCT ON CHAIN         Y02669
         LR    RCTR,WRK5           ADDRESS OF CORE GOTTEN FOR RCT
         SPACE 2
*******************************************************************
BUILDX   EQU   *
         OI    RCTCODE,RCTEND       TURN ON END AND ACTIVE FLAG
VERBCOD  EQU   *
         MVC   RCTVER(N2),N0(LSTR)  MOVE ROUTE VERB INTO RCT
         MVC   RCTOPD(N1),N0(WRK6) MOVE OPERAND INTO RCT
         SPACE 2
*******************************************************************
MOVECA   EQU   *
         NI    XASPLS3,TF-XASTRFG  CLEAR TRACK VERB SWITCH     @Z40LPTA
         OI    RCTCODE,RCTACT      SET ENTRY ACTIVE IN RCT
         MVC   RCTCID(N2),XASCID   MOVE CONSOLE AND AREA ID INTO RCT
         XC    XASDID,XASDID       CLEAR AREA FIELD            @Z40LPTA
         CLI   RCTAID,N0           AREA ID DEFINED             @Z40LPTA
         BNE   CONENT              YES, CONTINUE               @Z40LPTA
         MVI   RCTAID,ASTRICK      NO, SET SPECIAL FILLER      @Z40LPTA
         EJECT
*******************************************************************
CONENT   EQU   *
         TM    XASSDS,XASSDS2      IS A L OPERAND IN THIS COMMANDY02669
         BO    CONENT1             BRANCH YES AND LEAVE ACTIVE
         SPACE 2
*******************************************************************
         NI    RCTCODE,TF-RCTACT   TURN OFF ACTIVE BIT IN RCT
CONENT1  EQU   *
         CLI   N1(WRK6),COMMA      IS NEXT CHARACTER A COMMA?
         BE    NEWENBK             BRANCH EQUAL
         CLI   N1(WRK6),PARA2      IS NEXT CHARACTER A PARENTHSIS?
         BE    OPEREND             BRANCH EQUAL
         CLI   N1(WRK6),BLK        IS NEXT CHARACTER A BLANK
         BE    OPEREND             BRANCH YES
         CLC   N0(N8,WRK6),OONSOLES CHECK FOR 'D=CONSOLES'     @G33CPMR*
                                   INTERNAL REPRESENATION      @G33CPMR
         BE    SETCONS             YES, IT IS CONSOLES         @G33CPMR
         LA    WRK6,N3(WRK6)       BUMP PAST OPERAND           @Z40LPTA
         B     CONENT              BRANCH TO CONTINUE SCAN     @Z40LPTA
**                                                                    *
**   ALL OPERANDS ARE REPRESENTED BY THEIR FIRST CHARACTER EXCEPT:    *
** A) CONSOLE OPERAND WHICH IS REPRESENTED BY THE CHARACTER 'O'@G33CPMR
** B) DUMP OPERAND WHICH IS REPRESENTED BY THE CHARACTER 'P'   @G33CPMR
**                                                                    *
SETCONS  EQU   *                                               @Z40LPTA
         LA    WRK6,N7(WRK6)       INCREMENT AROUND OPERAND
         B     CONENT              BRANCH TO CONTINUE
       SPACE 2
*******************************************************************
OPEREND  EQU   *
         TM    XASPLS3,XASPRF1     IS PARENTHSIS FLAG ON       @Y02668P
         BNO   RET                 NO, EXIT FROM MODULE          Y02669
         SPACE 2
***      SET-UP TO PROCESS NEXT MSGRT VERB                       Y02669
*******************************************************************
         STCM  CDRR,7,XAL+N1       ADDRESS OF NEXT MSGRT VERB  @YM4296P
         NI    XASPLS3,TF-XASPRF1+XASPRF2  CLEAR PAREN FLAGS   @Z40LPTA
         B     STARTSC             BRANCH TO START FOR NEXT VERB
NEWENBK  EQU   *
         TM    XASPLS3,XASPRF2    IS SECOND PARENTHSIS FLAG ON @Y02668P
         BNO   OPEREND             BRANCH NO TO END
         MVC   XASDID(N1),RCTAID   RESTORE AREAID FOR MULTIPLE
*                                  DISPLAY OPERANDS.           @ZA09261
         LA    WRK6,N2(WRK6)       INCREMENT OPERAND POINTER
         L     RCTR,UCMRCT         STARTING ADDRESS OF RCT
         EJECT
***                                                                   *
***  SEARCH RCT FOR AN EXISTING ENTRY AND OVERLAY CC AND A IF FOUND   *
***                                                                   *
         SPACE 2
*******************************************************************
TESTRCT  EQU   *
         CLC   RCTVER(N1),N0(LSTR) DOES VERB IN RCT EQUAL ROUTE VERB
         BE    CHKOPD              BRANCH YES
INCRCT   EQU   *
         TM    RCTCODE,RCTCON      IS THIS RCT ENTRY THE END OR CONT
         BO    NXTPTR              BRANCH YES IT IS CONTINUED
         BM    LDENT               BRANCH YES IT IS END
         LA    RCTR,RCTLEN(RCTR)   INCREMENT TO NEXT RCT ENTRY
         B     TESTRCT             BRANCH TO TEST NEXT ENTRY
NXTPTR   EQU   *
         L     RCTR,N0(RCTR)       LOAD ADDRESS OF NEW SECTION
         B     TESTRCT             BRANCH TO TEST NEXT ENTRY
CHKOPD   EQU   *
         CLC   RCTOPD(N1),N0(WRK6) IS OPERANDS EQUAL TO ONE CHARACTER
         BNE   INCRCT              BRANCH NO TO CHECK NEXT ENTRY
         B     MOVECA              BRANCH TO INSERT NEW CC AND A
***                                                                   *
***  SEARCH RCT FOR NON ACTIVE ENTRIES OR BUILD A NEW ENTRY           *
***                                                                   *
         SPACE 2
*******************************************************************
LDENT EQU   *
         L     RCTR,UCMRCT         ADDRESS OF RCT FROM UCM
         SPACE 2
*******************************************************************
SEARACT  EQU   *
         TM    RCTCODE,RCTCON      IS THIS ENTRY THE END OR CONTINUED
         BO    NXTPTR1             BRANCH YES IT IS CONTINUED
         SPACE 2
*******************************************************************
         TM    RCTCODE,RCTACT      IS THIS ENTRY ACTIVE
         BNO   VERBCOD             BRANCH NO TO CONSTRUCT ENTRY
        EJECT
*******************************************************************
         TM    RCTCODE,RCTEND      IS THIS ENTRY THE END
         BO    BUILD1              BRANCH YES IT IS THE END
         SPACE 2
*******************************************************************
         LA    RCTR,RCTLEN(RCTR)   INCREMENT FOR NEXT ENTRY
         B     SEARACT             BRANCH TO CONTINUE SEARCH
         SPACE 2
*******************************************************************
NXTPTR1  EQU   *
         L     RCTR,N0(RCTR)       LOAD NEXT SECTION
         B     SEARACT             BRANCH TO CONTINUE
         SPACE 2
*******************************************************************
BUILD1   EQU   *
         NI    RCTCODE,TF-RCTEND   TURN OFF END INDICATOR
         LA    RCTR,RCTLEN(RCTR)   NEXT RCT ENTRY
         SPACE 2
*******************************************************************
         TM    RCTCODE,RCTCON      IS THIS RCT ENTRY CONTINUED
         BNO   BUILDX              BRANCH NO
         B     STARTRCT            BRANCH TO BUILD RCT ENTRY
         EJECT
*******************************************************************
TRCHK    EQU   *                                                 Y02669
         OI    XASPLS3,XASTRFG     SET TRACK VERB FLAG         @Y02668P
         AR    LSTR,WRK4           INCREMENT LIST POINTER BY 1,  Y02669
*                                  SCANCHK WILL ADD 2 MORE, TO   Y02669
*                                  ADDRESS THE MSGRT VERB        Y02669
         B     SCANCHK             BRANCH TO CONTINUE SCAN
SINGLED  EQU   *
         AR    LSTR,WRK4           INCREMENT LIST POINTER
         TM    XASPLS3,XASTRFG     IS THIS A TRACK COMMAND?    @Y02668P
         BO    TRSCAN              YES, BRANCH TO TRACK OPER CHK Y02669
         B     DISTABS             NO, BRANCH TO CHECK NEXT      Y02669
*                                  DISPLAY OPERAND               Y02669
         EJECT
**************************************************************** Y02669
***      THIS ROUTINE PROCESSES THE 'NONE' OPERAND.  IF THERE IS Y02669
***      AT LEASE ONE RCT TO FREE, THE LOCAL AND CMS LOCKS ARE   Y02651
***      ACQUIRED FOR THE DURATION OF THE SCAN AND TRUNCATION OF Y02651
***      THE RCT CHAIN.  THE LOCKS ARE FOR THE PROTECTION OF THE Y02651
***      ROUTING LOCATION OPERAND PROCESSOR (IEE7503D), AND    @Y02668P
***      THE 'MSG REF' COMMAND PROCESSOR (IEE6303D).           @Y02668P
***      THE ADDRESSES OF UP TO THREE RCT'S ARE STORED IN THE    Y02669
***      XSA FOR FREEMAIN.  (THIS NUMBER MUST BE INCREASED IF    Y02669
***      MORE THAN FIFTEEN ROUTABLE COMMANDS ARE SUPPORTED BY    Y02669
***      MSGRT.)  AFTER STORING THE ADDRESSES AND TRUNCATING THE Y02669
***      CHAIN BY SETTING THE UCMRCT FIELD TO ZERO, THE LOCKS    Y02651
***      ARE RELEASED, AND EACH RCT FOUND IS FREED.              Y02669
**************************************************************** Y02669
       SPACE
NONERTN  SR    WRK1,WRK1           PREPARE TO INSERT SOURCE ID   Y02669
         IC    WRK1,XAU            INSERT SOURCE CONSOLE ID      Y02669
         BAL   LNKR,FINDUCME       GET ISSUING CONS UCME ADDR    Y02669
         L     RCTR,UCMRCT         ADDRESS FIRST RCT, IF ANY     Y02669
         LA    RCTR,N0(RCTR)       CLEAR FLAG BYTE               Y02669
         LTR   RCTR,RCTR           ANY RCT'S?                    Y02669
         BZ    RET                 NO, EXIT                      Y02669
         BAL   LNKR,GETLOCK        YES, GET LOCAL AND CMS LOCKS  Y02651
***
***      SAVE THE ADDRESSES OF THE RCT'S                         Y02669
***
         XC    XASAVSTD(N16),XASAVSTD ZERO RCT ADDR SAVE AREA    Y02669
         LA    WRK5,XASAVSTD       ADDRESS FIRST RCT ADDR SLOT   Y02669
*                                  FOR FREEMAIN                  Y02669
STORPTR  ST    RCTR,N0(WRK5)       SAVE RCT ADDR                 Y02669
         LA    WRK5,N4(WRK5)       ADDRESS NEXT RCT SAVE SLOT    Y02669
         L     RCTR,RCTPTRN        ADDRESS NEXT RCT              Y02669
         LA    RCTR,N0(RCTR)       CLEAR FLAG BYTE               Y02669
         LTR   RCTR,RCTR           IS THERE A NEXT RCT?          Y02669
         BNZ   STORPTR             YES, SAVE IT                  Y02669
         XC    UCMRCTA(N3),UCMRCTA NO, CLEAR UCME RCT POINTER    Y02669
         BAL   LNKR,CLRLOCK        RELEASE LOCKS                 Y02651
***
***      FREE THE RCT'S                                          Y02669
***
         LA    WRK5,XASAVSTD       INITIALIZE SLOT POINTER       Y02669
FREENEXT L     WRK1,N0(WRK5)       GET ADDR OF NEXT RCT TO FREE  Y02669
         LTR   WRK1,WRK1           IS THERE ONE?                 Y02669
         BZ    RET                 NO, EXIT, DONE                Y02669
         FREEMAIN R,LV=RCTTEND-RCTBEG,A=(1),SP=SUBP YES, FREE IT Y02669
         LA    WRK5,N4(WRK5)       ADDRESS NEXT SLOT             Y02669
         B     FREENEXT            GO FREE NEXT RCT              Y02669
         EJECT
**************************************************************** Y02669
***      THE FOLLOWING SUBROUTINE COMPARES THE MSGRT VERB        Y02669
***      OPERAND IN THE COMMAND BUFFER WITH THE TABLE OF VALID   Y02669
***      TRACK AND DISPLAY OPERANDS.  THERE ARE TWO ENTRY        Y02669
***      POINTS:  TRSCAN (IF THE VERB IS 'TR') AND DISSCAN (IF   Y02669
***      THE VERB IS 'D').                                       Y02669
***                                                              Y02669
***      INPUT IS THE ADDRESS OF THE OPERAND IN THE BUFFER, IN   Y02669
***      REGISTER LSTR.  OUTPUT IS LSTR CONTAINING THE ADDRESS   Y02669
***      OF THE DELIMITER PRECEDING THE VERB.  THIS IS INPUT TO  Y02669
***      EITHER DISCONS (IF A VALID OPERAND WAS FOUND) OR LCHECK Y02669
***      (IF NO VALID OPERAND WAS FOUND).
***                                                              Y02669
***      THE TABLE (OPTAB) IS ORGANIZED IN SUCH A WAY THAT THE   Y02669
***      FIRST SECTION CONSISTS OF OPERANDS VALID FOR BOTH TRACK Y02669
***      AND DISPLAY, AND THE REMAINDER, OF THOSE VALID ONLY FOR Y02669
***      DISPLAY.  IF ENTRY IS MADE FOR TRACK, THE SCAN IS       Y02669
***      LIMITED TO THE FIRST SECTION BY SETTING THE END OF SCAN Y02669
***      ADDRESS APPROPRIATELY; IF FOR DISPLAY, IT IS SET TO THE Y02669
***      END OF THE ENTIRE TABLE.                                Y02669
**************************************************************** Y02669
         SPACE
TRSCAN   EQU   *                   TRACK ENTRY POINT             Y02669
         LA    WRK5,TENTAB         ADDRESS END OF TRACK OPERANDS Y02669
         B     SCANOP              GO SCAN OPERANDS              Y02669
DISSCAN  EQU   *                   DISPLAY ENTRY POINT           Y02669
         LA    WRK5,DENTAB         ADDRESS END OF DISPLAY OPERS  Y02669
         SPACE
SCANOP   EQU   *                   SCAN VERB OPERANDS            Y02669
         LA    WRK1,OPTAB          ADDRESS START OF OPER TABLE   Y02669
NEXTOP   CLC   N0(N1,LSTR),N0(WRK1) CHECK FOR MATCH              Y02669
         BE    DISCONS             IF MATCH FOUND, GO SET-UP FOR Y02669
*                                  NEXT OPERAND                  Y02669
         LA    WRK1,N1(WRK1)       IF NOT, BUMP TO NXT TAB ENTRY Y02669
         CR    WRK1,WRK5           END OF TABLE REACHED?         Y02669
         BNE   NEXTOP              NO, TEST MATCH ON NEXT ENTRY  Y02669
         BCTR  LSTR,N0             YES, DECREMENT LIST POINTER   Y02669
*                                  TO DELIMITER                  Y02669
         B     LCHECK              GO CHECK FOR L OPERAND        Y02669
         EJECT
***                                                                   *
***  SET FLAGS IN XSA TO INDICATE ERROR HAS OCCURRED IN THE FIRST LOAD*
***                                                                   *
         SPACE 2
*******************************************************************
ERROR2   EQU   *
         MVI   XAE,KERROR          K CDR WAS ISSUED FROM A CRT
         B     RCTMEXT             EXIT FOR SECOND LOAD
ERROR3   EQU   *
         CLI   N0(WRK6),CHARO      IS OPERAND CONSOLES?          Y02669
         BNE   ERROR3A             NO, CHECK FOR 'D=DUMP'      @G33CPMR
         MVI   N0(WRK6),CHARC      YES, RESTORE C OF 'CONSOLES'  Y02669
         B     ERROR7              SKIP AROUND 'D=DUMP'        @G33CPMR
ERROR3A  EQU   *                                               @G33CPMR
         CLI   N0(WRK6),CHARP      IS OPERAND DUMP?            @G33CPMR
         BNE   ERROR7              NO, DO NOT CHANGE OPERAND   @G33CPMR
         MVI   N0(WRK6),CHARD      YES, RESTORE 'D' OF 'DUMP'  @G33CPMR
ERROR7   EQU   *                                                 Y02669
         MVI   XAE,NCERROR         NO CORE AVAILABLE FOR ROUTE TABLE
         B     RCTMEXT             EXIT FOR SECOND LOAD
ERROR1   EQU   *
         MVI   XASTSAVE,AIERROR    AREA ID NOT A VALID LETTER
         B     ERROR5              EXIT FOR SECOND LOAD
ERROR4   EQU   *
         MVI   XASTSAVE,CIERROR    CONSOLE ID NOT VALID
ERROR5   EQU   *
         MVI   XAE,LIERROR         CCA NOT A VALID L OPERAND
         B     RCTMEXT             EXIT FOR SECOND LOAD
ERROR6   EQU   *
         MVI   XAE,RIERROR         CONSOLE DID NOT HAVE VALID MR AUTHOR
         B     RCTMEXT             EXIT FOR SECOND LOAD
ERROR8   EQU   *                                               @Y02668P
         MVI   XASTSAVE,JIERROR    NO MR TO SUBSYSTEM          @Y02668P
         B     ERROR5              EXIT FOR SECOND LOAD        @Y02668P
ERROR    EQU   *
         LR    WRK6,LSTR           OPERAND POINTER FOR ERROR MSG
         MVI   XAE,IOERROR         INVALID OPERAND IN MR CDR
         SPACE 2
*******************************************************************
***                                                                   *
***  EXIT FROM FIRST LOAD TO SECOND LOAD OF MSGRT COMMAND HANDLER     *
***                                                                   *
*******************************************************************
         SPACE 2
RCTMEXT  EQU   *
         BAL   LNKR,CLRLOCK        RELEASE CMS AND LOCAL LOCKS,  Y02651
*                                  IF HELD                       Y02651
         NI    XASSDS,XASSDS3+XASSDS6 CLEAR SWITCH,EXCEPT NON- @Z40LPTA
*                                     COMMTASK,'CONT'          @Z40LPTA
*                                  NON-COMMTASK SWITCH         @Y02668P
         MVI   XASPLS3,ZERO        USED DIFFERENTLY BY IEE6403D Y02668P
         L     LNKR,RCTM2          ADDRESS OF IEE6403D INTO R15  Y02669
         BR    LNKR                BRANCH TO IT                  Y02669
         EJECT
*******************************************************************
***   EXIT CODE.  RELEASE CMS AND LOCAL LOCKS, AND             @YM4788P
***   EXIT TO IEE0503D                                         @YM4788P
*******************************************************************
         SPACE
RET      EQU   *                   EXIT CODE                     Y02669
         BAL   LNKR,CLRLOCK        RELEASE CMS AND LOCAL LOCKS   Y02651
         MVI   XAE,IEE712I         PROCESSING COMPLETE CODE    @YM4788P
         MVC   XAV(N5),MSGRT       COMMAND VERB(MSGRT)         @YM4788P
         L     LNKR,IEE0503D       ADDRESS OF MESSAGE MODULE   @YM4788P
         BR    LNKR                BRANCH TO IT                @YM4788P
         SPACE 2
*******************************************************************
***      EXIT CODE.  RETURN VIA BR 14                          @YM7698P
*******************************************************************
         SPACE
RET1     EQU   *                                               @YM7698P
         BR    RETR                RETURN TO CALLER            @YM7698P
         SPACE 2
*******************************************************************
***      CLRLOCK ROUTINE.  RELEASES CMS AND LOCAL LOCKS, IF HELD.Y02651
*******************************************************************
         SPACE
CLRLOCK  TM    XASSDS,XASSDS5      LOCKS HELD?                   Y02651
         BZ    N0(LNKR)            NO, RETURN TO CALLING ROUTINE Y02651
         STM   LSTR,RETR,XASAVLOC  SAVE REGS ACROSS SETLOCKS     Y02651
CLRLOCK2 SETLOCK RELEASE,TYPE=CMS,                               Y02651X
               RELATED=(RCT,IEE6303D(SETLOCK2))                  Y02651
CLRLOCK1 SETLOCK RELEASE,TYPE=LOCAL,                             Y02651X
               RELATED=(RCT,IEE6303D(SETLOCK1))                  Y02651
         LM    LSTR,RETR,XASAVLOC  RESTORE SAVED REGS            Y02651
         NI    XASSDS,TF-XASSDS5   TURN OFF LOCKS HELD SWITCH  @Y02668P
         BR    LNKR                RETURN TO CALLING ROUTINE     Y02651
      EJECT
*******************************************************************
***      GETLOCK ROUTINE.                                        Y02651
***      ACQUIRES LOCAL AND CMS LOCKS, IF NOT ALREADY HELD.      Y02651
*******************************************************************
    SPACE 2
GETLOCK  TM    XASSDS,XASSDS5      LOCKS ALREADY HELD?           Y02651
         BO    LOKSHELD            YES, DON'T REACQUIRE          Y02651
         STM   LSTR,RETR,XASAVLOC  SAVE REGS ACROSS SETLOCKS     Y02651
SETLOCK1 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02651X
               RELATED=(RCT,IEE6303D(CLRLOCK1))                  Y02651
SETLOCK2 SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                    Y02651X
               RELATED=(RCT,IEE6303D(CLRLOCK2))                  Y02651
         LM    LSTR,RETR,XASAVLOC  RESTORE SAVED REGS            Y02651
         OI    XASSDS,XASSDS5      SET LOCKS HELD SWITCH         Y02651
LOKSHELD BR    LNKR                RETURN TO CALLER              Y02651
       EJECT
*******************************************************************
***      FINDUCME ROUTINE.                                       Y02669
***      FIND AND SET BASE FOR UCM ENTRY                         Y02669
***               - INPUT - WRK1 CONTAINS CONSOLE ID             Y02669
***               - OUTPUT - UCM ENTRY SPECIFIED BY ID IN ENTR   Y02669
*******************************************************************
     SPACE 2
FINDUCME EQU   *
         L     ENTR,UCMVEA         FIRST ENTRY FROM UCM
         BCTR  WRK1,N0             SUBRRACT ONE FROM CONSOLE ID
         M     WRK0,UCMVEZ         MULIPLY ENTRY SIZE BY REDUCED ID
         AR    ENTR,WRK1           ADDRESS OF DESIRED UCM ENTRY
         BR    LNKR                RETURN TO CALLER              Y02669
         EJECT
********                                                              *
******** CONSTANTS USED BY ROUTINE                                    *
********                                                              *
DIS      DC    C'D='               DISPLAY VERB
CONSOLES DC    C'CONSOLES'         CONSOLE OPERAND
TR       DC    C'TR='              TRACK VERB                    Y02669
CLEQUAL  DC    C',L='              L OPERAND
D3850    DC    C'3850'             D 3850 OPERAND CONSTANT     @Z40LPTA
CONTOP   DC    C'CONT'             CMND CONTINUATION OPERAND   @Z40LPTA
OONSOLES DC    C'OONSOLES'         INTERNAL REP. OF 'CONSOLES' @G33CPMR
DUMP     DC    C'DUMP'             D DUMP OPERAND CONSTANT     @G33CPMR
NONE     DC    C'NONE '            NONE OPERAND                  Y02669
MSGRT    DC    C'MSGRT'            MSGRT VERB FOR MSG          @YM4788P
IEE0503D DC    V(IEE0503D)         MESSAGE MODULE              @YM4788P
RCTM2    DC    V(IEE6403D)         SECOND MR LOAD                Y02669
         EJECT
**************************************************************** Y02669
***      TABLE OF ROUTABLE TRACK AND DISPLAY COMMAND OPERANDS    Y02669
**************************************************************** Y02669
         SPACE 2
OPTAB    EQU   *                                                 Y02669
A        DC    CL1'A'              OPERAND TEXT                  Y02669
TENTAB   EQU   *                   END OF TRACK OPERANDS         Y02669
***      END OF OPERANDS COMMON TO TRACK AND DISPLAY COMMANDS    Y02669
         SPACE
***      START OF OPERANDS VALID ONLY ON DISPLAY COMMAND         Y02669
         SPACE
***      NOTE: 'CONSOLES' DOES NOT APPEAR HERE BECAUSE IT IS     Y02669
***      HANDLED IN-LINE AS A SPECIAL CASE, BECAUSE ITS          Y02669
***      ABBREVIATION IS 'O'                                     Y02669
         SPACE
CK       DC    CL1'C'              *                             Y02669
DMN      DC    CL1'D'              *                           @Z40BPSV
MATRIX   DC    CL1'M'              *                             Y02669
UNITS    DC    CL1'U'              *                             Y02669
REQUESTS DC    CL1'R'              *                             Y02669
SLIP     DC    CL1'S'              *                           @G17SPTJ
DENTAB   EQU   *                   END OF TABLE                  Y02669
***      END OF OPERAND TABLE                                    Y02669
         SPACE 3
PATCH    DC    CL50'***   IEE6303D  PATCH AREA  ******'          Y02669
IEE6303D  TITLE 'UNIT CONTROL MODULE MAP'
         IEECUCM   FORMAT=NEW
          TITLE 'EXTENDED SAVE AREA MAP'
DXSA     DSECT
         IEEXSA
**                                                                    *
**  THE XAP AND XAD FIELDS OF THE XSA ARE USED AS A DOUBLE WORD       *
**   WORK AREA IN THIS MODULE AND ARE RESTORED BEFORE EXIT            *
**                                                                    *
**  THE XASSDS FIELD OF THE XSA IS USED AS FOLLOWS IN THIS MODULE     *
XASKFG   EQU   X'20'               THE VERB IS A K COMMAND
XASTRFG  EQU   X'10'               THE THE VERB IS TRACK         Y02669
XASPRF1  EQU   X'02'               THERE IS MORE THAN ONE VERB
XASPRF2  EQU   X'01'               THERE IS MORE THAN ONE OPERAND
        TITLE 'CVT MAP'
DCVT     DSECT
         CVT
         TITLE 'ROUTE CONTROL TABLE MAP'
DSTRCT   DSECT                                                   Y02669
         IEECVMAP RCT                                            Y02669
         TITLE 'PREFIX STORAGE AREA MAP'
         IHAPSA
         TITLE 'NEW/OLD TCB ASCB POINTERS MAP'
         IEFPTRS
         END
