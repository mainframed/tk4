         TITLE 'IEE70110, HALT / SWITCH COMMAND PROCESSOR'
IEE70110 CSECT
*MODULE NAME= IEE70110
*
*DESCRIPTIVE NAME= HALT END-OF-DAY , SWITCH SMF PROCESSOR
*
*COPYRIGHT= N/A
*
*STATUS= OS/VS2  RELEASE 2
*
*FUNCTION= TO PROCESS HALT-E-O-D , AND SWITCH SMF COMMANDS
*  OPERATION=
*              ENTRY TO THIS MODULE IS VIA AN ATTACH FROM MODULE
*              IEEVWAIT .
*              0- ON ENTRY , CORE IS GOTTEN FOR A DUMMY EXTENDED SAVE
*                 AREA ( XSA ) OF 88 BYTES. (NOT FULL XSA SIZE).
*                 RETURN ADDRESS IS SAVED FOR EXIT PROCESSING .
*                 BRANCH TO MODULE IEECB860 TO CREATE A STAE
*                 ENVIRONMENT .
*                 . IF NOT SUCCESSFUL , (REG15 ^= ZERO) ,
*                   . SET XSA( XAE ) = X'80' - STAE FAIL
*                   . PROCESS AT REF(7)
*              1- ON ENTRY , REG 1 CONTAINS A PTR TO THE CSCB .
*                 SET MSG CODE REG TO NOT SUCCESSFUL (DEFAULT)
*                 DETERMINE WHICH VERB TO PROCESS VIA CSCB(CHVCD) -
*                 . IF SWITCH , CHECK FOR SMF DATA SET PRESENT -
*                   SMCA(SMCAMAN = ON )
*                   . IF NOT , PROCESS AT REF(6).
*                   . IF YES , CHECK FOR SWITCH ALREADY IN EFFECT , OR
*                     SMF DATA SET UNAVAILABLE - SMCA(SMCADSSW,SMCADSTR
*                     = ON ) :
*                     . IF EITHER ON , PROCESS AT REF(6) .
*                 . IF HALT , AN SVC(76) IS EXECUTED TO UPDATE THE
*                   SYS1.LOGREC DATA SET .
*              2- SAVE X OR Y PORTION OF MAN DSN IN XAN FIELD  @ZA27079
*                 OF BLOCK XSA.                                @ZA27079
*                 IF THE SMF VOLUME OPTION WAS SELECTED , A SCAN
*                 OF UCBS FOR DIRECT ACCESS DEVICES IS ENTERED ,
*                 AND AN SVC(78) LSPACE MACRO IS ISSUED FOR EACH
*                 DEVICE .
*              3- IF SMF ACTIVE SET UP SMF RECORD FOR SVC(83).
*                 SET SECOND WORD EQUAL 'HALT' ,
*                 ISSUE SVC(83) , TO MAKE SMF AWARE OF HALT / SWITCH
*                 PROCESSING .
*              4- IF THE COMMAND WAS 'SWITCH SMF' , BYPASS LOG
*                 PROCESSING , SET MSG CODE REG. = X'FF' ,
*                 PROCESS AT REF(7) .
*              5- DETERMINE IF THE SYSTEM LOG IS SUPPORTED -
*                 BASEA(BALOG) ^=ZERO .
*                 . IF ZERO , SET MSG CODE REG. = 1 FOR E-O-D
*                   SUCCESSFUL , PROCESS AT REF(6) .
*                 SET UP FOR LOG TERMINATION .
*                 . IF LOG TERMINATION IS ALREADY TAKING PLACE -
*                   LCA( POSTCLOZ = ON ) - BYPASS POST OF LOG ECB .
*                   PROCESS AT REF(6) .
*                 SET LCA( POSTCLOZ ) BIT ON
*                 POST LOG CLOSE ECB -
*              6- SET UP TO BRANCH TO MSG MODULE IEE90110 .
*                 INITIALIZE THE EXTENDED SAVE AREA ( XSA ) FIELDS
*                 AS REQUIRED BY THE COMMAND BEING PROCESSED .
*              7- FREE AND DELETE THE CSCB VIA SVC(34) .
*              8- CHECK MSG CODE IN XSA(XAE) = X'FF'
*                 . IF YES, ENTRY IS FOR SWITCH SUCCESSFUL ,
*                   BYPASS CALL OF MSG MODULE IEE90110 .
*                   PROCESS AT REF(9) .
*                 CHECK XSA(XAD) = X'80' -
*                 . IF YES , ENTRY IS FOR STAE FAILURE .
*                   PROCESS AT REF(9) .
*                 BRANCH TO IEE90110 , WHICH WILL ISSUE AN APPROP-
*                 RIATE MSG DEPENDING ON THE MSG CODE IN XSA(XAE) .
*              9- ON RETURN FROM IEE90110 , RESTORE RETURN ADDRESS IN
*                 REG 14 , FREE GOTTEN CORE , , RETURN TO CALLER .
*
*NOTES
*  DEPENDENCIES= REFER TO MACRO SECTION .
*    CHARACTER-CODE DEPENDENCIES=
*              THIS MODULE HAS BEEN CODED IN SUCH A WAY THAT ,
*              IF THE CHARACTER CODE IS CHANGED FROM EBCDIC ,
*              REASSEMBLY WILL YIELD A VALID MODULE .
*  RESTRICTIONS= NONE .
*  REGISTER-CONVENTIONS= PROGRAM EQUATES SECTION , 'REGISTERS USED'
*  PATCH-LABEL= PATCH
*
*MODULE TYPE= CSECT
*  PROCESSOR= ASSEM
*  MODULE SIZE= 648 BYTES
*  ATTRIBUTES=
*              REENTRANT
*              SUPERVISOR PROTECT KEY
*              SUPERVISOR MODE
*              MASTER SCHEDULER REGION .
*
*ENTRY POINT= IEE70110
*  PURPOSE= HALT E-O-D , SWITCH SMF
*  LINKAGE= FROM IEEVWAIT , VIA ATTACH .
*  INPUT= REG 1 - PTR TO CSCB .
*  REGISTERS SAVED= REG 14 .
*  REGISTER USAGE= REFER TO REG . CONVENTION SECTION .
*  REGISTERS RESTORED= REG 14 .
*
*EXIT - NORMAL= RETURN TO CALLER .
*  CONDITION= NORMAL PROCESSING OF THE COMMAND .
*  OUTPUT=
*              N/A
*  RETURN CODES= NONE .
*
*EXIT - ERROR= N/A
*  CONDITIONS=
*  OUTPUT=
*  RETURN CODES=
*
*EXTERNAL REFERENCES= IEEMB803 - LOG TASK - VIA POST .
*  ROUTINES= IEE90110 MESSAGE MODULE WITH A MSG CODE -
*                   01 - EOD SUCCESSFUL .
*                   02 - SWITCH UNSUCCESSFUL .
*            IEECB860  STAE ISSUING RTN .
*  DATA AREAS=
*              DUMMY EXTENDED SAVE AREA .
*  CONTROL BLOCKS=                   REFERENCES
*          SYMBOL DEFINITIONS - C = CREATE, F = FREE, R = READ,
*                               W = WRITE.
*              CVT                     R
*              CSCB                    R,F
*              BASEA                   R,W
*              UCB                     R
*              LCA                     R,W
*              SMCA                    R
*              XSA                   C,R,W,F
*
*TABLES=
*
*MACROS=
*              MODID
*              GETMAIN / FREEMAIN
*              LOAD / DELETE
*              POST
*              MGCR  (SVC 34 )
*              SVC (76 ) STATISTICAL UPDATE MACRO
*              SVC (78 ) LSPACE MACRO
*              SVC ( 83 ) SMF PROCESSING MACRO
*
*  SERIALIZATION= NONE .
*
*CHANGE ACTIVITY= OZ27079                                      @ZA27079
*
*SYSGENS=
*              LOAD MODULE NAME = IEE70110
*              LPALIB NAME = IEE70110
*SYSTEM LIBRARIES = NONE .
*
*MESSAGES= NONE .
*
*ABEND CODES= NONE .
*
***********************************************************************
         EJECT
* A-191850                                                     @YM3373P
* A-126000,126500,126600                                       @YA02504
* A-NEAR LABEL STARTSMF                                        @ZA27079
* A-NEAR LABEL ENDSRCH                                         @ZA27079
* REGISTER USAGE
PARREG0  EQU   0                        PARAMETER REGISTER.
R0       EQU   0                                                    SMF
R1       EQU   1                                                    SMF
R2       EQU   2                   CSCB BASE REG                 YM1294
R3       EQU   3
MRC3     EQU   3                  BASE MASTER RESIDENT DATA AREA
CVT3     EQU   3                       BASE CVT
R4       EQU   4                                                  M4393
R5       EQU   5                       REG POINTS TO OPERAND
R6       EQU   6                   DUMMY XSA ADDRESS
R7       EQU   7                   SMCA ADDRESS REGISTER            SMF
R8       EQU   8
R9       EQU   9
WKREG    EQU   8                       CODE REGISTER
WKREG1   EQU   9                                                    SMF
*                                      FOR EXTENDED SAVE AREA
R10      EQU   10
R11      EQU   11
R12      EQU   12
BASEREG  EQU   12                      BASE   REGISTER
R13      EQU   13
R14      EQU   14                  RETURN REGISTER
R15      EQU   15                  BRANCH REGISTER
LOG15    EQU   15                      POINTER TO LOG CONTROL AREA
* PROGRAM EQUATES
EODSUCC  EQU   1                   MSG CODE - 'EOD SUCCESSFUL'
RECSIZE  EQU   88                  SIZE OF GOTTEN CORE .
STATS    EQU   76                  SVC STATISTICAL UPDATE
WRITERCD EQU   83                  SVC NUMBER FOR SMF WRITE         SMF
D4       EQU   4
D12      EQU   12
DEC0     EQU   0
DEC2     EQU   2
DEC4     EQU   4
DEC16    EQU   16
DEC64    EQU   64                      OFFSET TO XSA SAVE AREA
HEX40    EQU   64
HEX3C    EQU   60
HEX0F    EQU   X'0F'                                              M4393
HEXFF    EQU   X'FF'                   NO MESSAGE INDICATOR
LSPACE   EQU   78
NOEOD    EQU   02                                                YM1294
         EJECT
         BALR  BASEREG,0               ESTABLISH ADDRESSIBILITY FOR
*                                      MODULE
         USING *,BASEREG
         MODID BRANCH=YES                                        Y01886
         LR    R2,R1                    SET UP CSCB WORK REG     Y02669
         L     R0,SIZE                  GETMAIN SIZE             Y02669
         GETMAIN R,LV=(0)                                        Y02669
         LR    R6,R1                    SET XSA ADDRESSIBILITY   Y02669
         XC    0(RECSIZE,R6),0(R6)      ZERO OUT WORK CORE       Y02669
         USING EXSAVSEC,R6              XSA ADDRESSIBILITY
         ST    R14,XASVRB(R6)           SAVE RETURN ADDRESS      Y02669
         USING CCHAIN,R2                BASE CSCB                YM1294
         BAL   R5,STAERTN               SET UP STAE ENVIRONMENT  Y02669
         CLC   XAD,HIORDER              STAE SUCCESSFUL ?        Y02669
         BE    PXCTL2                   NO , SET UP RETURN TO CALLER
         L     R7,CVTPTR                SET UP TO CHECK
         USING HCVT,R7                  FOR SMF OPTION
         L     R7,CVTSMCA               GET OPTION INDICATOR
         LA    WKREG,NOEOD              SET POSSIBLE NOT         YM1294
*                                            SUCCESSFUL MESSAGE  YM1294
         DROP R7
         USING SMCABASE,R7              SET ADDRESSIBILITY-SMCA
         CLI   CHVCD,HEX3C              IS THE VERB HALT?        YM1017
         BE    SWCHK                    YES, BYPASS CHECK FOR    YM1017
*                                            SWITCH DATA SETS    YM1017
         LTR   R7,R7                    SMF ACTIVE ?
         BZ    PXCTL                    NO , SKIP SWITCH PROCESSING
         TM    SMCAMISC,SMCAMAN         SYS1.MAN PRESENT?        YM1294
         BZ    PXCTL                    NO, SKIP SMF PROCESSING  YM1294
SWCHK    EQU   *                                                 YM1017
         CLI   CHVCD,HEX3C              ENTRY FOR HALT?          YM1294
         BNE   SMFSTART                 NO- GO DIRECTLY TO SMF
*    *    *    *    *    *    *     *     *     *     *     *
* ENTRY WAS MADE FOR A HALT COMMAND IN A SYSTEM WITH SMF
*     *     *     *     *     *     *     *     *     *     *
         SR    PARREG0,PARREG0          CLREA PARM REGISTER
         SVC   STATS                    UPDATE STATISTICS
         LTR   R7,R7                    SMF IN SYSTEM ?          Y02669
         BZ    CKSMF                    NO , BYPASS SMF PROCESSING
         EJECT
* THE FOLLOWING ROUTINE WILL GENERATE A HALT MESSAGE FOR SMF,       SMF
* IF SMF IS SUPPORTED, AND WILL CAUSE THE SMF BUFFER TO BE PURGED.  SMF
*                                                                   SMF
SMFSTART EQU   *                                                    SMF
*                                                              *
*  THIS IS A COMMON ENTRY POINT FOR BOTH HALT AND SWITCH SMF CMNDS .
*  THE FOLLOWING CODE ISSUES THE LSPACE SVC AGAINST ALL ONLINE *
*  DIRECT ACCESS DEVICES. THIS CAUSES SMF TYPE 19 RECORDS TO BE*
*  ISSUED THUS SUPPLYING VOLUME SPACE USAGE AT HALT TIME       *
*                                                              *
         TM    SMCAMISC,SMCAMAN          MAN=ALL?                Y02669
         BZ    CKSMF               CONTINUE WITH HALT PROCESSING YM1294
         MVC   XAN,SMCAXORY        SAVE X OR Y BYTE OF         @ZA27079
*                                  RECORDING DATA SET NAME     @ZA27079
         TM    SMCAOPT,SMCAVOL     IS VOLUME ACCTING SUPPORTED
         BZ    ENDSRCH             NO, PROCEED TO BUFFER PURGE
         L     WKREG,CVTPTR        PT TO CVT AND ESTABLISH ADDR
         USING   HCVT,WKREG
         L     WKREG,CVTILK2        OF UCB POINTER TABLE
         LR    R3,WKREG                 SAVE TABLE START ADDR     M4393
         DROP  WKREG
         L     R1,HIORDER          SETUP R1 INTERFACE TO LSPACE
SEARCH   EQU   *
         LH    WKREG1,DEC0(WKREG)  GET POSSIBLE UCB PTR
         LA    WKREG,DEC2(WKREG)   GET ADDR OF NEXT UCB PTR
         CH    WKREG1,FFFF         HAS END OF TABLE BEEN REACHED
         BE    ENDSRCH             YES, END SEARCH
         LTR   WKREG1,WKREG1       IS THE PTR ZERO
         BZ    SEARCH              IF SO, GET NEXT PTR
         SLL   WKREG1,DEC16        CLEAR PROPAGATION
         SRL   WKREG1,DEC16          BITS
         USING UCBOB,WKREG1
         TM    SRTESTAT,SRTEONLI   IS DEVIC ONLINE
         BZ    SEARCH              NO
         TM    UCBTBYT3,UCB3DACC   IS DEVICE DIRECT ACCESS
         BZ    SEARCH              NO
         TM    UCBFL1,UCBNRY       IS DEVICE NOT READY           Y02669
         BO    SEARCH              DEVICE NOT READY, GET NEXT
         TM    UCBFL5,UCBALTPH     DEVICE HAVE ALTERNATE PATHS ? Y02669
         BZ    PATHOK              NO , GO ISSUE LSPACE MACRO     M4393
*
* SET UP TO SCAN UCB TABLE FOR PREVIOUS ENTRY FOR SAME UCB .
* IF FOUND , BYPASS LSPACE MACRO FOR THIS ENTRY .
* IF NOT FOUND , PROCESS LSPACE MACRO FOR ENTRY .
*
         LR    R4,R3                    INITIALIZE SEARCH INDEX   M4393
         LR    R10,R8                  PICK UP NEXT ENTRY ADDR   Y02669
         SH    R10,TWO                 POINT BACK TO CURRENT ENTRY ADDR
CKPATH   EQU   *
         CR    R10,R4                  IS THIS CURRENT ENTRY ?   Y02669
         BE    PATHOK                  YES, NO DUPLICATE FOUND   Y02669
         CH    WKREG1,DEC0(R4)         DUPLICATE UCB ADDRESS ?   Y02669
         BE    SEARCH                   BRANCH IF YES             M4393
         LA    R4,DEC2(R4)              INCREMENT INDEX           M4393
         B     CKPATH                   CONTINUE SEARCH           M4393
PATHOK   EQU   *                                                  M4393
* VTOC POINTER CAN ONLY BE ZERO IF NO VOLUME OR NON-OSVOLUME.  @YA02504
         OC    UCBVTOC(3),UCBVTOC CHECK FOR INVALID VOLUME     @YA02504
         BZ    SEARCH             BRANCH NOT VALID FOR LSPACE  @YA02404
         LR    R0,WKREG1           POINT LSPACE TO UCB
         SVC   LSPACE              ISSUE LSPACE SVC
         B     SEARCH              GET NEXT UCB CANDIDATE
ENDSRCH  EQU   *
         CLC   XAN,SMCAXORY        WAS AN INTERNAL SWITCH DONE @ZA27079
         BE    HALT                NO CONTINUE                 @ZA27079
         CLI   CHVCD,HEX3C         IS THIS A HALT COMMAND      @ZA27079
         BNE   CKSMF               NO, BYPASS THE HALT         @ZA27079
HALT     EQU   *                                               @ZA27079
         MVC   4(4,R6),AHALT      PLACE HALT IN RECORD TO        Y01034
         LR    R1,R6              INDICATE BUFFER PURGE          Y01034
         SVC   WRITERCD                                           SMF1
         XC    4(4,R6),4(R6)            ZERO FIELD               Y02669
         LTR   R15,R15                 SVC SUCCESSFUL ?          Y02669
         BZ    CKSMF                   YES , CONTINUE PROCESSING Y02669
         LA    WKREG,NOEOD          RESET NOT SUCCESSFUL CODE  @YM3373P
         CLI   CHVCD,HEX3C             THIS HALT COMMAND ?       Y02669
         BNE   PXCTL                   NO , INDICATE SWITCH FAILED
         EJECT
CKSMF    EQU   *
         LA    WKREG,HEXFF             INDICATE NO MESSAGE
         LA    R5,CHBUF                PICK UP COMMAND OPERAND   YM1294
         CLC   0(4,R5),ASMF            CHECK SMF
         BE    PXCTL3                  BRANCH IF YES             Y02669
         L     CVT3,16                 SET POINTER TO CVT
         USING HCVT,CVT3               AND BASE CVT
         L     MRC3,CVTMSER            GET POINTER TO MASTER RESIDENT
         USING BASE,MRC3               CORE AND BASE IT.
         L     LOG15,BALOG             GET POINTER TO LOG CONTROL
         LTR   LOG15,LOG15             IS LOG SUPPORTED?
         BZ    GXCTL                   NO ISSUE EOD SUCCESS MSG.
         USING LCABASE,LOG15           YES- THEN BASE LCA AND
*                                      INTERNALLY SIMULATE A
*                                      WRITELOG CLOSE COMMAND IF
*                                      ONE IS NOT PENDING
         TM    LCAPOSTT,POSTCLOZ       IS WRITE CLOSE PENDING ?
         BO    GXCTL                   IF YES , BRANCH PAST POST
         STM   R7,R9,DEC64(R6)         SAVE REGS ACCROSS OIL MACRO
* THE FOLLOWING MACRO SERIALIZES ON THE POSTCLOZ BIT
         OIL   LCAPOSTT,POSTCLOZ,WREGS=(7,8,9),REF=LCABASE
         LM    R7,R9,DEC64(R6)         RESTORE REGS
         USING POSTFLD,R1              PARM LIST FOR POST
         LA    R1,POSTCORE(R6)         ADDRESS OF LIST CORE
         MVC   POSTFLD(D12),POSTLIST
         USING HCVT,R11                CVT PTR TO CVTBRET
         L     R11,16                  LOAD CVT PTR
         L     R10,LCAASCB             LOG ASCB ADDRESS
         POST  MSLGCLOZ,ASCB=(10),ERRET=CVTBRET,MF=(E,(1))
*
         EJECT
GXCTL    LA    WKREG,EODSUCC           SET FOR XCTL
*
PXCTL    EQU   *                                                 YM1294
         CLI   CHVCD,HEX3C             IS VERB HALT?             YM1294
         BNE   SWITCH                  NO, MUST BE SWITCH        YM1294
         MVC   XAV(8),AHALT            SET UP XSA FOR HALT       YM1294
         B     PXCTL2                                            YM1294
SWITCH   EQU   *                                                 YM1294
         MVC   XAV(8),ASWITCH          SET UP XSA FOR SWITCH     YM1294
PXCTL2   EQU   *                                                 YM1294
         MVC   XAU,CHUCMP              GET UCMI INFO             YM1294
PXCTL3   EQU   *                                                 Y02669
         STC   WKREG,XAE               STORE CODE IN EXT SAVE AREA.
         MVI   CHSTS,CHFC              SET FREE CSCB BITS        YM1294
         LR    R1,R2                   GET CSCB POINTER          YM1294
         MGCR (1),CHAIN                FREE CSCB                 YM1294
         CLC   XAD,HIORDER              STAE IN EFFECT ?         Y02669
         BE    NOMSG                    NO , BYPASS MSG MODULE   Y02669
         CLI   XAE,HEXFF                MSG CODE = SWITCH SUCCESSFUL ?
         BE    NOMSG                    YES, BYPASS MSG MODULE   Y02669
         LR    R1,R6                    XSA ADDR TO REG          Y02669
         L     R15,VMSGMOD              MESSAGE MOD ADDR         Y02669
         BALR  14,15                    ISSUE MSG                Y02669
NOMSG    EQU   *                                                 Y02669
         L     R14,XASVRB(R6)           RESTORE RETURN ADDR      Y02669
         LR    R1,R6                    SET UP FREEMAIN          Y02669
         L     R0,SIZE                  FREE THIS AMOUNT OF CORE Y02669
         FREEMAIN R,LV=(0),A=(1)        FREE THE CORE            Y02669
         BR    R14                      RETURN TO CALLER         Y02669
         EJECT
STAERTN  EQU   *                                                 Y02653
* THE FOLLOWING CODE WAS ADDED FOR OS/VS2 R2 ESTAE SUPPORT ,     Y02653
* UNDER SUPPORT CODE - Y02653                                    Y02653
* ENTRY HERE IS TO CREATE A STAE ENVIRONMENT FOR THIS RTN VIA A  Y02653
* BRANCH TO MODULE IEECB860 . IF STAE FAILS , SET XSA(XAD) FIELD Y02653
* HI-BIT ON FOR CHECK IN MAIN-LINE PATH , RETURN ON LINK REG 5 . Y02653
         LA    R7,PARMCORE(R6)          PARM LIST ADDRESS        Y02653
         USING STAEPARM,R7                                       Y02653
         ST    R2,CSCBADDR              CSCB ADDR TO LIST        Y02653
         ST    R5,REG5SAVE              LINK REG TO LIST         Y02653
         ST    R6,REG6SAVE              XSA PTR                  Y02653
         ST    R12,REG12SAV             BASE REG                 Y02653
         LOAD  EP=IEECB860              LOAD STAE CREATE RTN     Y02653
         CLI   CHVCD,HEX3C              HALT COMMAND ?           Y02653
         BNE   NOTHALT                  NO , ITS SWITCH COMMAND  Y02653
         LA    R8,HALTCMD               COMMAND PTR FOR HALT     Y02653
         B     CALLSTAE                                          Y02653
NOTHALT  EQU   *                                                 Y02653
         LA    R8,SWITCHCD              COMMAND PTR FOR SWITCH   Y02653
CALLSTAE EQU   *                                                 Y02653
         ST    R8,COMMAND               COMMAND PTR TO LIST      Y02653
         LR    R15,R0                   STAE RTN ADDRESS         Y02653
         LR    R1,R7                    PARM LIST REG            Y02653
         BALR  14,15                    GO ISSUE STAE            Y02653
         LR    R8,R15                   SAVE STAE RETURN CODE    Y02653
* RESTORE CRITICAL REGS FROM PARM LIST SAVE AREA .               Y02653
         LR    R7,R1                    RESTORE PARM LIST ADDR   Y02653
         L     R2,CSCBADDR              CSCB PTR                 Y02653
         L     R5,REG5SAVE              LINK REG                 Y02653
         L     R6,REG6SAVE              XSA PTR                  Y02653
         L     R12,REG12SAV             BASE REG                 Y02653
         DELETE EP=IEECB860                                      Y02653
         LTR   R8,R8                    TEST STAE RETURN CODE    Y02653
         BZ    LINKBK                   O.K.,RETURN VIA LINK REG Y02653
         MVC   XAD,HIORDER              SET STAE FAIL SWITCH     Y02653
LINKBK   EQU   *                                                 Y02653
         BR    R5                       RETURN                   Y02653
*
*
         EJECT
*
*
*   PROGRAM CONSTANTS
         DS    0F
VMSGMOD  DC    V(IEE90110)                                       Y02669
SIZE     DC    AL1(250),AL3(88)  SIZE OF GETMAIN                 Y01034
HALTCMD  DC    AL1(L'HC)                COMMAND LENGTH           Y02653
HC       DC    C'HALT'                  COMMAND VERB             Y02653
SWITCHCD DC    AL1(L'SC)                COMMAND LENGTH           Y02653
SC       DC    C'SWITCH'                COMMAND VERB             Y02653
PATCH    DS    CL52'IEE70110PATCH' AREA FOR TEMPORARY FIXES
HIORDER  DS    0F
         DC    X'80000000'         R1 INTERFACE TO LSPACE
AHALT    DC    CL8'HALT'           HALT VERB
ASWITCH  DC    CL8'SWITCH'         SWITCH VERB                   YM1294
FFFF     DS    0H
         DC    X'FFFF'             COMPARAND FOR END OF UCB TBL
TWO      DC    H'2'                UCB SCAN VALUE
ASMF     DC    C'SMF '
POSTLIST POST  ASCB=0,ERRET=0,MF=L                               Y02669
*
*
         EJECT
EXSAVSEC  DSECT                   DSECT FOR EXTENDED SAVE AREA
         IEEXSA
         EJECT
* THIS DSECT IS USED TO MAP THE PARAMETER LIST USED BY STAE RTN .
STAEPARM DSECT                                                   Y02669
CSCBADDR DS    F                                                 Y02669
COMMAND  DS    F                                                 Y02669
REG5SAVE DS    F                                                 Y02669
REG6SAVE DS    F                                                 Y02669
REG12SAV DS    F                                                 Y02669
PARMEND  EQU   *                                                 Y02669
PARMSIZE EQU   PARMEND-STAEPARM                                  Y02669
PARMCORE EQU  XASVRB+DEC4                 STAE PARM LIST ADDR
POSTCORE EQU  PARMCORE+PARMSIZE           OFFSET OF POST CORE
* THIS DSECT IS USED TO MAP THE PARM LIST FOR LOG TERMINATION POST .
POSTFLD  DSECT                                                   Y02669
ECBAD    DS    F                                                 Y02669
ASCBAD   DS    F                                                 Y02669
ERRAD    DS    F                                                 Y02669
         EJECT
         IEESMCA
         EJECT
CCHAIN   DSECT
         IEECHAIN
         EJECT
UCBSECT  DSECT
         IEFUCBOB
         EJECT
         TITLE ' COMMUNICATIONS VECTOR TABLE '
HCVT     DSECT
         CVT
         EJECT
         TITLE ' MASTER RESIDENT CORE '
         IEEBASEA
         EJECT
         TITLE ' LOG CONTROL AREA '
         IEELCA
         EJECT
         IEFPTRS
         END
