         TITLE 'IEE1603D - LOG AND WRITELOG PROCESSOR'
         TITLE 'COMMAND HANDLER  LOG AND WRITELOG'
**********************************************************************
*
*   MODULE NAME=
*              IEE1603D
*
*   DESCRIPTIVE NAME=
*              COMMANDS ROUTINE FOR  'LOG' AND 'WRITELOG'
*
*   COPYRIGHT=
*              MISSING
*
*   STATUS=
*              OS/VS2 RELEASE 3                                @ZA07784
*
*   FUNCTION=
*              TO PROCESS THE COMMANDS :
*                        LOG 'TEXT'
*                        WRITELOG
*                        WRITELOG CLOSE / START / CLASS
*
*      OPERATION=
*              ENTRY TO THIS MODULE IS VIA A BRANCH FROM
*              IEE0403D - COMMAND ROUTER .
*              ADDRESSIBILITY TO CONTROL BLOCKS IS AS FOLLOWS -
*              . EXTENDED SAVE AREA ( XSA ) - REG 2
*              . MASTER RESIDENT CORE ( BASEA ) - REG 10
*              . LOG CONTROL TABLE ( LCA ) - REG 11
*              1- SET UP POINTERS TO XSA FIELDS -
*                 . BUFFER LENGTH
*                 . COMMAND OPERAND
*              2- CHECK IF LOG SUPPORTED - BASEA(BALOG) ^= ZERO .
*                 . IF NOT SUPPORTED , PROCESS AT REF(11) TO
*                   DETERMINE IF OPERAND IS 'START' .
*              3- CHECK FOR 'LOG' VERB IN XSA(XAN) = X'1C' .
*                 . IF YES , PROCESS AT REF(10) .
*              4- THE VERB IS 'WRITELOG' . CHECK FOR OPERANDS .
*                 . VALID COMBINATIONS OF OPERANDS ARE :
*                   . WRITELOG CLOSE - REF(5)
*                   . WRITELOG CLASS - REF(6)
*                   . WRITELOG       - REF(6)
*                 . IF THE OPERAND IS  START  , IT WILL NOT BE
*                   PROCESSED BECAUSE THE SYSTEM LOG IS ALREADY ACTIVE.
*                   . SET MSG CODE = 52 .
*                   . PROCESS AT REF(12) .
*              5- CLOSE OPERAND PROCESSING .
*                 . CHECK FOR DELIMITER - (' ')- IF ERROR ,
*                   SET MSG CODE = 7 , PROCESS AT REF(12) .
*                 . IF LOG IS ALREADY PROCESSING TERMINATION -
*                   LCA(POSTCLOZ) = ON , ISSUE WTO IEE033I ,
*                   PROCESS AT REF(9) .
*                 . VERIFY LOG = HARDCOPY STATUS .
*                   IF LOG = HARDCOPY - UCM(UCMSYSG) = ON ,
*                   . SET UP , ISSUE WTO IEE532I ,
*                   . PROCESS AT REF(9) .
*                 . CHECK IF LCA(POSTCLOZ) = ON -
*                   . IF YES , BYPASS POST OF LOG TERMINATION ECB
*                     PROCESS AT REF(9) .
*                 . SET LCA(POSTCLOZ) = ON .
*                 . POST LOG TERMINATION ECB - BASEA(MSLGCLOZ) .
*                 . PROCESS AT REF(9) .
*              6- CLASS OR NULL OPERAND PROCESSING .
*                 IF THE OPERAND FIELD IS NULL , PROCESS AT REF(7).
*                 CHECK FOR DELIMITER - (' ') .
*                 . IF ERROR , SET MSG CODE = 7 ,
*                   PROCESS AT REF(12) .
*                 CHECK FOR VALID CLASS - (A-Z,0-9 ) .
*                 . IF INVALID , SET MSG CODE = 23 ,
*                   PROCESS AT REF(12) .
*                 STORE CLASS TYPE IN LCA(LCCLASS) FIELD .
*              7- IF A 'WRITELOG' COMMAND IS ALREADY BEING PROCESSED -
*                 OR A 'WRITELOG CLOSE' COMMAND IS BEING PROCESSED -
*                 LCA(POSTWLOG , POSTCLOZ ) = ON , ISSUE
*                 APPROPRIATE WTO :
*                 . WRITELOG - IEE032I .
*                 . WRITELOG CLOSE - IEE033I .
*                 . PROCESS AT REF(9) .
*              8- SET LCA(POSTWLOG) = ON .
*                 POST LOG DATA SET SWITCH ECB - BASEA(MSLGWLOG)
*              9- RETURN TO CALLER .
*             10- VERB='LOG' . SYNTAX CHECK THE TEXT INPUT
*                 FOR THE FOLLOWING ERRORS , SET APPROPRIATE
*                 ERROR MSG CODE IN XSA(XAE) ,
*                 . INVALID TEXT PTR - MSG CODE(11)
*                 . FIRST CHAR NOT A QUOTE - MSG CODE(19)
*                 . IF ERROR , PROCESS AT REF(12) .
*                 GET CORE FOR WTL MSG BUFFER . SET UP 4 BYTE
*                 HEADER FOR MSG LENGTH , MOVE MSG TO BUFFER VIA
*                 SCAN LOOP OF TEXT , SET LENGTH IN HEADER .
*                 . IF LENGTH = ZERO , FREE CORE ,
*                 . PROCESS AT REF(9) .
*                 ISSUE WTL MACRO
*                 FREE MSG CORE .
*                 PROCESS AT REF(9) .
*             11- WRITELOG 'START' PROCESSING .
*                 VERIFY WRITELOG VERB CODE - XSA(XAN) = X' '
*                 . IF NOT , SET ERROR CODE = 26 ,
*                   PROCESS AT REF(12) .
*                 VERIFY OPERAND IS 'START' .
*                 . IF NOT , SET ERROR CODE = 11 ,
*                   PROCESS AT REF(12) .
*                 RE-ACTIVATE THE LOG RECORDING FUNCTION VIA A POST
*                 OF THE WRITELOG START ECB - BASEA(        ) .
*                 PROCESS AT REF(9) .
*             12- SET UP TO BRANCH TO MSG MODULE IGC0503D .
*                 . XSA(XAE) = ERROR MSG CODE .
*                 BRANCH TO IGC0503D .
*
*   NOTES
*
*      CHARACTER CODE DEPENDENCIES=
*              THIS MODULE HAS BEEN WRITTEN IN SUCH A WAY THAT
*              IF THE CHARACTER CODE IS CHANGED FRON EBCDIC ,
*              REASSEMBLY WILL YIELD A VALID MODULE .
*
*      DEPENDENCIES=
*              REFER TO MACRO SECTION .
*
*      RESTRICTIONS=
*              NONE .
*
*      REGISTER CONVENTIONS=
*              REFER TO REG. CONTENTS SECTION .
*
*      PATCH-LABEL=
*              PATCH
*
*   MODULE TYPE=
*              CSECT
*
*      PROCESSOR=
*              ASSEMBLER
*
*      MODULE SIZE=
*             1000 BYTES
*
*      ATTRIBUTES=
*              REENTRANT
*              SELF-RELOCATING
*              PAGED LPA
*
*   ENTRY POINT=
*              IEE1603D FROM COMMAND ROUTER  IEE0403D .
*
*      PURPOSE=
*              TO PROCESS 'LOG' , 'WRITELOG' COMMANDS .
*
*      LINKAGE=
*              VIA BRANCH REG 15 FROM IEE0403D .
*
*      INPUT DATA=
*              REG 2 POINTS TO THE  XSA :
*                        XAR POINTS TO COMMAND BUFFER .
*                        XAN CONTAINS VERB CODE .
*                        XAL POINTS TO COMMAND PARM LIST .
*                        XAV CONTAINS THE VERB .
*
*      REGISTERS SAVED=
*              NONE .
*
*      REGISTER CONTENTS DURING PROCESSING=
*              R0            WORK REG .
*              R1            GETMAIN RETURN REG .
*              R2            XSA BASE .
*              R3            CVT BASE .
*              R4            WORK REG
*              R5            WORK REG
*              R6            WORK REG.
*              R7            UCB TABLE STOPPER .
*              R8            WORK REG .
*              R9            UNIT NAME PTR .
*              RA            MSRDA BASE .
*              RB            LCA PTR .
*              RC            PROGRAM BASE .
*              RD            NOT REFERENCED .
*              RE            RETURN REG .
*              RF            BRANCH REG .
*
*      REGISTERS RESTORED=
*              NONE .
*
*   EXIT - NORMAL=
*              RETURN TO CALLER
*
*      CONDITIONS=
*              NORMAL PROCESSING OF 'LOG' , 'WRITELOG' COMMANDS
*
*      OUTPUT DATA=
*              FOR 'LOG' ;  A WTL MESSAGE .
*              FOR 'WRITELOG':POST THE MSLGWLOG ECB .
*              FOR 'WRITELOG CLOSE' ;POST THE MSLGCLOZ ECB.
*      RETURN CODES=
*              NONE .
*
*   EXIT - ERROR=
*              IEE0503D  MSG MODULE , VIA BR 14 .
*
*      CONDITIONS=
*              INVALID COMMAND OPERANDS .
*
*      OUTPUT DATA=
*              ERROR MESSAGE CODES IN XSA FIELD  - XAE .
*                CODE        ERROR MSG .
*                 7           'IEE307I  XXXXXXXX DELIMITER
*                              ERROR.'
*                11           'IEE311I CCCC PARAMETER
*                              MISSING .'
*                19           'IEE019I        QUOTES MISSING .'
*                23           'IEE023I        CLASSNAME ERROR'
*                26           'IEE026I        NOT SUPPORTED.'
*                52           'IEE382I        CURRENTLY ACTIVE'
*
*      RETURN CODES=
*              NONE .
*
*   EXTERNAL REFERENCES=
*              IEEMB803  VIA POST
*              IEE0503D  VIA VCON - BR 14
*
*      ROUTINES=
*              NONE
*
*      DATA AREAS=                          REFERENCES
*              LCA  - LOG CONTROL TABLE       U,M
*              XSA  - EXTENDED SAVE AREA      U,M
*              WTO MSG BUFFER                 U,M
*
*      CONTROL BLOCKS=
*              CVT                            U
*              BASEA                          U,M
*              UCM                            U
*              UCB                            U
*
*      TABLE=
*
*      MACROS=
*              POST
*              GETMAIN / FREEMAIN
*              WTL
*              WTO
*
*      SERIALIZATION=
*              NONE .
*
*      CHANGE LEVEL=
*              Y02669
*              ZA07784
*
*      SYSGEN=
*              LOAD MODULE NAME - IGC0003D
*
*      SYSTEM LIBRARIES=
*              NONE .
*
*   MESSAGES=
*              'IEE032I WRITELOG IS PENDING. CLASSNAME=  ',
*              'IEE033I PREVIOUS HALT OR WRITELOG CLOSE COMMAND
*               HAS BEEN ISSUED'
*              'IEE532I SYSTEM LOG DEFINED AS HARDCOPY-WRITELOG
*               CLOSE CMND REJECTED'
*
**********************************************************************
IEE1603D CSECT
* LOGSTART (C)                                                 @ZA07784
R0       EQU   0
R1       EQU   1                       GETMAIN RETURN REGISTER
R2       EQU   2                       XSA BASE
R3       EQU   3                       CVT BASE
R4       EQU   4                             DELIMITER POINTER
R5       EQU   5                       LINK REGISTER
R6       EQU   6                       END OF PARAMETER POINTER
R7       EQU   7                       UCB TABLE STOPPER
R8       EQU   8                       UCB BASE
R9       EQU   9                       UNIT NAME POINTER
R10      EQU   10                            RESIDENT CORE BASE
R11      EQU   11                      LCA BASE REG              Y02669
VBASE    EQU   12                            BASE FOR PROGRAM
R14      EQU   14                      RETURN REGISTER
R15      EQU   15                            XCTL REGISTER
DEC10    EQU   10
DEC1     EQU   1
DEC4     EQU   4
DEC3     EQU   3
DEC2     EQU   2
DEC5     EQU   5
DEC8     EQU   8                                                 Y02669
DEC12    EQU   12                                                Y02669
DEC64    EQU   64                 OFFSET TO XSA SAVE AREA        Y02669
HEX40    EQU   X'40'
BLANK    EQU   C' '
CHARA    EQU   C'A'
DEC0     EQU   0
DISP     EQU   45
*                                                                     *
* ERROR CODES FOR MESSAGE MODULE                                      *
ERR7     EQU   7
ERR11    EQU   11
ERR19    EQU   19
ERR23    EQU   23
ERR26    EQU   26
ERR52    EQU   52                                                Y02669
*                                                                     *
LOGCOD   EQU   X'1C'                         VERB = LOG
WRITLOG  EQU   X'20'                   VERB = WRITELOG           Y02669
HIBIT    EQU   X'80'                                             Y02669
*                                                                     *
QUOTE    EQU   C''''                         LOG TEXT DELIMITER
         EJECT
*MAIN ROUTINE - ADDRESSABILITY, END OF BUFFER, AND PARAMETER POINTERS
*               ARE ESTABLISHED
*             - DETERMINES WHICH VERB IS SPECIFIED, LOG OR WRITELOG,
*               BY THE VERB CODE SET IN XAN(IN THE XSA)
*                                                                     *
         BALR  VBASE,DEC0                   ESTABLISH PROGRAM
         USING *,VBASE                       ADDRESSABILITY
         MODID BR=YES                                            Y01886
         USING XSA,R2                  BASE FOR EXTENDED SAVE AREA
         USING SETCVT,R10                    ADDRESS TO CVT
         L     R10,CVTPTR                    TO GET POINTER
         L     R10,CVTMSER                   TO MASTER RESIDENT CORE
         USING BASE,R10                      TO ESTABLISH ADDRESSABLTY
         L     R9,XAL                        USE REGISTER 9 AS POINTER
         LA    R9,DEC0(R9)                  TO PARAMETER KEYWORD
         L     R7,XAR                        LOAD PTR TO BUFFER
         LA    R7,DEC0(R7)                  CONTAINING COMMAND
         LH    R6,DEC0(R7)                  LOAD BUFFER LENGTH
         N     R6,V00FF                   CLEAR POSSIBLE GARGAGE Y02669
         AR    R7,R6                         COMPUTE END OF BUFFER
         ST    R7,XAP                        SAVE IN FIRST WORD OF XSA
         L     R11,BALOG               LCA ADDRESS               Y02669
         USING LCABASE,R11                                       Y02669
         CLC   BALOG,VZEROS            IS LOG SUPPORTED          Y02669
         BE    LOGSTRT            IF NOT, CHECK  OPERAND 'START' Y02669
         CLI   XAN,LOGCOD              IS THIS THE 'LOG' VERB    Y02669
         BE    VERBLOG                       YES. GO TO LOG ROUTINE
         EJECT
* W R I T E L O G       COMMAND PROCESSOR
         SPACE
         SPACE
         CLC   DEC0(DEC5,R9),VSTART         PARAMETER = START    Y02669
         BE    LERR52                  YES, INVALID - LOG ACITVE Y02669
         CLC   DEC0(DEC5,R9),VCLOSE         PARAMETER = CLOSE
         BNE   VCLASS                       *
         CLI   DEC5(R9),HEX40               DELIMITED BY BLANK
         BE    *+DEC10                           OR
         LA    R6,DEC5(R9)                                       Y02669
         CR    R6,R7                                             Y02669
         BNE   VERR07              DELIMITER ERROR
         TM    LCAPOSTT,POSTCLOZ            IS WRITELOG CLOSE PENDING
         BO    FINISH                       BRANCH IF YES
         B     HRDCOPY               CHECK LOG = HARDCOPY STATUS Y02669
VCLASS   EQU   *
         C     R9,VZEROS                    WRITELOG COMMAND IS NOW
         BE    PENDINGG                     VALID WITHOUT A PARAMETER
*                                           DEFAULT CLASS FOR WRITELOG
*                                           COMMAND WILL BE USED
         CLI   DEC1(R9),BLANK               DELIMITED BY BLANK
         BE    *+DEC10                           OR
         LA    R6,DEC1(R9)                  DELIMITED BY EOB     Y02669
         CR    R6,R7                                             Y02669
         BNE   VERR07              DELIMITER ERROR
         CLI   DEC0(R9),CHARA               CHAR LT A
         BL    LERR23              IF SO, NOT ALPHAMERRIC
         SR    R6,R6                                             Y02669
         IC    R6,DEC0(R9)                  GET CHAR AND USE     Y02669
         IC    R6,T(R6)           AS INDEX TO VMTAB              Y02669
         B     *+4(R6)                      *                    Y02669
         B     LERR23             NOT ALPHANUMERIC               Y02669
PENDINGG  EQU  *
         TM    LCAPOSTT,POSTWLOG  IS A WRITELOG COMMAND          Y02669
*                                      PENDING                   Y02669
         BO    WRITEUP            BRANCH IF YES                  Y02669
         TM    LCAPOSTT,POSTCLOZ  IS A WRITELOG CLOSE COMMAND    Y02669
*                                      PENDING                   Y02669
         BO    FINISH             BRANCH IF YES                  Y02669
         STM   R5,R7,DEC64(R2)    SAVE REGS ACCROSS OIL MACRO    Y02669
         OIL   LCAPOSTT,POSTWLOG,WREGS=(5,6,7),REF=LCABASE       Y02669
         LM    R5,R7,DEC64(R2)       RESTORE REGS                Y02669
         C     R9,VZEROS                    IF NO CLASSNAME PROVIDED
         BE    DEFAULT                              WITH COMMAND
*                                           THEN THE DEFAULT CLASS
*                                           WILL BE USED
         MVC   LCCLASS(DEC1),DEC0(R9)       ALPHANUMERIC, STORE IN LCA
DEFAULT  EQU   *
         B     POSTRTN                 SET UP POST OF LOG TASK   Y02669
         EJECT
LOGSTRT  EQU   *                                                 Y02669
* LOG PTR IS ZERO - TEST IF VERB IS WRITELOG START . IF IT IS ,  Y02669
* PROCESS TO RE-ACTIVATE THE LOG FUNCTION .                      Y02669
* IF NOT , SET UP ERROR MSG FOR MODULE IGC0503D .                Y02669
         TM    MSECBFL,MSWTL       BUFFER RECOVERY?            @ZA07784
         BO    LERR26              YES, SET ERROR MSG          @ZA07784
         CLI   XAN,WRITLOG             WRITELOG CMND VERB CODE ? Y02669
         BNE   LERR26                  NO , SET ERROR MSG        Y02669
*                                      PROCESSING                Y02669
         CLC   DEC0(DEC5,R9),VSTART    OPERAND = START ?         Y02669
         BNE   LERR26                  NO , INVALID FOR INACTIVE Y02669
*                                      LOG                       Y02669
         CLI   DEC5(R9),HEX40          VALID DELIMITER ?         Y02669
         BE    POSTRTN                 YES, CONTINUE PROCESSING  Y02669
         LA    R6,DEC5(R9)             END OF OPERAND ADDRESS    Y02669
         CR    R6,R7                   EQUAL END OF BUFFER ?     Y02669
         BNE   VERR07                  NO , DELIMITER ERROR      Y02669
POSTRTN  EQU   *                                                 Y02669
*                                                                Y02669
* ENTRY IS TO SET UP AND ISSUE POSTS OF  LOG ECBS                Y02669
*                                                                Y02669
         LA    R4,XASAVLOC             RTN USES XSA SAVE AREA    Y02669
         USING POSTCORE,R4           ADDRESSIBILITY TO SAVE AREA Y02669
         MVC   POSTCORE(DEC12),POSTLIST  LIST FORM OF POST       Y02669
         L     R6,CVTPTR               CVT ADDR                  Y02669
         USING SETCVT,R6                                         Y02669
         LA    R1,CVTBRET              ADDR OF POST RETURN RTN   Y02669
         ST    R1,ERRAD                STORE IN POST LIST        Y02669
         CLC   DEC0(DEC5,R9),VSTART    START COMMAND ECB POST ?  Y02669
         BNE   CLOSELOG                NO , CHECK CLOSE          Y02669
         MVC   ASCBAD(DEC4),BAASCB     SET MASTER REGION ASCB    Y02669
         LA    R6,MSLGSTRT             START ECB ADDRESS         Y02669
         B     ISSUPOST                POST LOG TASK             Y02669
CLOSELOG EQU   *                                                 Y02669
         MVC   ASCBAD(DEC4),LCAASCB    SET LOG TASK ASCB         Y02669
         CLC   DEC0(DEC5,R9),VCLOSE    CLOSE COMMAND ECB POST ?  Y02669
         BNE   LOGSWTCH                NO , SWITCH LOG DATA SET  Y02669
*                                      ECB                       Y02669
         LA    R6,MSLGCLOZ             CLOSE ECB ADDRESS         Y02669
         STM   R5,R7,DEC64(R2)        SAVE REGS ACROSS OIL MACRO Y02669
         OIL   LCAPOSTT,POSTCLOZ,WREGS=(5,6,7),REF=LCABASE       Y02669
         LM    R5,R7,DEC64(R2)         RESTORE REGS              Y02669
         B     ISSUPOST                POST LOG TASK             Y02669
LOGSWTCH EQU   *                                                 Y02669
         LA    R6,MSLGWLOG             SWITCH ECB ADDRESS        Y02669
ISSUPOST EQU   *                                                 Y02669
         ST    R6,ECBAD                ECB ADDRESS TO LIST       Y02669
         LR    R1,R4                   PARM LIST REG FOR POST    Y02669
         POST  MF=(E,(1))                                        Y02669
         BR    R14                     RETURN                    Y02669
         EJECT                                                   Y02669
HRDCOPY  EQU   *                                                 Y02669
* ENTRY HERE IS TO VERIFY IF LOG = HARDCOPY . SET UP             Y02669
*       ADDRESSIBILITY                                           Y02669
* TO UCM PREFIX , CHECK UCM(UCMFLAGS(UCMSYSG)) = ON .            Y02669
* IF YES , SET UP FOR 'COMMAND REJECTED' WTO , BRANCH TO MSG     Y02669
*       PROCESSING                                               Y02669
* IF NO , BRANCH TO POST RTN TO TERMINATE LOG FUNCTION .         Y02669
         DROP  R6                                                Y02669
         USING SETCVT,R3               PTR TO CVT                Y02669
         L     R3,CVTPTR                                         Y02669
         L     R3,CVTCUCB              PTR TO UCM                Y02669
         USING UCM,R3                                            Y02669
         LR    R5,R3                   SET UP , CALCULATE        Y02669
         SH    R5,FOUR                   UCM PREFIX ADDRESS      Y02669
         L     R5,DEC0(R5)             PTR TO UCM PREFIX         Y02669
         USING UCMPRFX,R5                                        Y02669
         TM    UCMSFLGS,UCMSYSG        LOG = HARDCOPY ?          Y02669
         BZ    POSTRTN                NO, TERMINATE LOG FUNCTION YO2669
         B     REJECTIT                YES , ISSUE WTO IEE532I   Y02669
         EJECT
VERBLOG   EQU  *                                                 Y02669
* VERB=LOG ROUTINE - SYNTAX CHECKS THE TEXT FOR THE LOG COMMAND, Y02669
*    MOVES ALL THE CHARACTERS BETWEEN THE QUOTES TO GOTTEN CORE,      *
*    AND WRITES TO LOG (WTL MACRO) FROM GOTTEN CORE. RETURN IS BR 14. *
*                                                                     *
         XC    XASAVLOC(DEC4),XASAVLOC      ZERO OUT SWITCH FIELDY02669
         C     R9,VZEROS                    IS PARAMETER POINTER ZERO
         BE    VERR11                       YES, PARAMETER IS MISSING
         CLI   DEC0(R9),QUOTE               IS FIRST CHARACTER A QROTE
         BNE   LERR19                        NO. QUOTE ERROR
         L     R0,SP                   WTL CORE SUBPOOL = 231    Y02669
         OR    R0,R6                   GETMAIN LENGTH            Y02669
         LR    R5,R0                   SAVE SP AND LENGTH OF     Y02669
*                                      GETMAIN                   Y02669
         GETMAIN R,LV=(0)              CORE FOR WTL              Y02669
         LR    R8,R1                         GOTTEN CORE STARTING PT.
         LA    R7,DEC4(R8)                  LEAVE ROOM OFR HEADER
LOGLOOP  LA    R9,DEC1(R9)                  UPDATE CHARACTER POINTER
         C     R9,XAP                        IS IT END OF BUFFER
         BC    10,TXTERR                     YES, PREMATURELY    Y02669
         CLI   0(R9),QUOTE                   IS THIS CHAR A QUOTE
         BE    LOGQUT                        YES. GO CHECK FOR FINAL QT
LOGMOV   MVC   0(1,R7),0(R9)                 NO. MOVE A VALID CHAR
         LA    R7,1(R7)                      UPDATE WTL BUFFER
         B     LOGLOOP                       GO CHECK NEXT CHARACTER
* QUOTE IS ENCOUNTERED, CHECK FOR FINAL QUOTE                         *
LOGQUT   LA    R9,1(R9)                      UPDATE CHARACTER POINTER
         C     R9,XAP                        IS IT END OF BUFFER
         BE    LOGOUT                        YES. TEXT IS COMPLETE
         CLI   0(R9),QUOTE                   IS THIS DOUBLE QUOTE
         BE    LOGMOV                        YES. MOVE ONE QUOTE
LOGOUT   SR    R7,R8                         COMPUTE LNGTH OF WTL BUFFR
         CH    R7,LOGFOR                     IS TEXT NULL
         BE    LOGFRE                        YES. DO NOT WTL
         SLL   R7,16                         STORE LENGTH IN BUFFER IN
         ST    R7,0(R8)                      PRESCRIBED MANNER
* W R I T E   T O   L O G.                                            *
         WTL   MF=(E,(R8))                   LOG MESSAGE
         EJECT
LOGFRE   LR    R1,R8                         R1 POINTS TO WTL BUFFER
         LR    R0,R5                   SP AND LENGTH TO FREE     Y02669
         FREEMAIN R,LV=(0),A=(1)       WTL BUFFER CORE           Y02669
         TM    XASAVLOC,HIBIT          DELIMITER ERROR ?         Y02669
         BO    LERR19                  YES , SET ERROR MSG CODE  Y02669
         BR    R14                 RETURN
TXTERR   EQU   *                                                 Y02669
         OI    XASAVLOC,HIBIT          SET DELIMITER ERROR FOR   Y02669
*                                      RETURN                    Y02669
         B     LOGFRE                  FREE WTL CORE             Y02669
         EJECT
* THE FOLLOWING INSTRUCTIONS PASS A DESIGNATED ERROR CODE TO THE      *
*   ERROR SUBROUTINE, VULERR, IN REGISTER 6.                     Y02669
*                                                                     *
VERR07   BAL   R6,VULERR                     ERROR CODE = 7      Y02669
         DC    AL1(ERR7)
*                                                                     *
VERR11   BAL   R6,VULERR                     ERROR CODE =11      Y02669
         DC    AL1(ERR11)
*                                                                     *
LERR19   BAL   R6,VULERR                     MESG CODE =19       Y02669
         DC    AL1(ERR19)
*
LERR23   BAL   R6,VULERR                     MESG CODE =23       Y02669
         DC    AL1(ERR23)
*
LERR26   BAL   R6,VULERR                     MESG CODE =26       Y02669
         DC    AL1(ERR26)
*
LERR52   XC    XAV(DEC8),XAV           ZERO FIELD                Y02669
         MVC   XAV(DEC4),LOGWORD       SET COMMAND='LOG' FOR MSG Y02669
         BAL   R6,VULERR               MESG CODE = 52            Y02669
         DC    AL1(ERR52)                                        Y02669
         SPACE
         SPACE
* ERROR SUBROUTINE - RECEIVES, IN REGISTER 6, A POINTER TO A     Y02669
*   MESSAGE CODE WHICH IS PLACED IN THE XSA (XAE). CONTROL GOES  Y02669
*   TO THE MESSAGE ASSEMBLY MODULE, IEE0503D, VIA BRANCH         Y02669
*                                                                     *
VULERR   MVC   XAE(1),0(R6)           INSERT ERROR CODE          Y02669
         L     R15,VMSGMOD            ADDRESS OF MSG MODULE      Y02669
*                                     IGC0503D                   Y02669
         BR    R15                    PASS CONTROL TO MSG MODULE Y02669
REJECTIT EQU   *                                                 Y02669
         LA    R7,M2                                             Y02669
         B     TELLOP                                            Y02669
WRITEUP  EQU   *
         LA    R7,M1                                             Y02669
         B     TELLOP                       *
FINISH   EQU   *
         LA    R7,M3                                             Y02669
TELLOP   EQU   *                            THIS SECTION WIRTES MSGS
         SR    R8,R8
         IC    R8,MSGLENS-DEC1(R7)                               Y02669
         LA    R1,XASAVSTD            USE XSA SAVE AREA FOR MSG  Y02669
*                                     BUFFER                     Y02669
         SR    R15,R15
         IC    R15,MSGLOC-DEC1(R7)        LOCATE MSG             Y02669
         LA    R6,MESSAGES(R15)                                  Y02669
         LA    R15,DEC3(R8)                 LENGTH FOR EXECUTE
         EX    R15,MOVEMSG                  MOVE MSG TO GOTTON CORE
         STH   R8,DEC0(R1)
         C     R7,FOX1                    IS THIS MSG1           Y02669
         BNE   NO                           BRANCH IF NOT
         C     R9,VZEROS
         BNE   PROVIDED                     *
         MVC   DISP(DEC1,R1),MSLOGCLS  SYSGEN DEFAULT CLASSNAME  Y02669
         B     NO                      BYPASS NEXT INSTRUCTION   Y02669
PROVIDED EQU   *
         MVC   DISP(DEC1,R1),LCCLASS
NO       EQU   *
         XR    R0,R0
         IC    R0,XAU
         WTO   MF=(E,(1))                                        Y02669
         BR    R14
MOVEMSG  MVC   DEC0(DEC0,R1),DEC0(R6)                            Y02669
M1       EQU   1
M2       EQU   2
M3       EQU   3
MSGLENS  EQU   *
         DC    AL1(MSG1END-MSG1-DEC4)  LENGTH OF MSG1            Y02669
         DC    AL1(MSG2END-MSG2-DEC4)  LENGTH OF MSG2            Y02669
         DC    AL1(MSG3END-MSG3-DEC4)  LENGTH OF MSG3            Y02669
MSGLOC   EQU   *
         DC    AL1(MSG1-MESSAGES)           *
         DC    AL1(MSG2-MESSAGES)           *                    Y02669
         DC    AL1(MSG3-MESSAGES)           *
MESSAGES EQU   *
MSG1     WTO   'IEE032I WRITELOG IS PENDING. CLASSNAME =  .',MF=L,     *
               DESC=(5),MCSFLAG=(RESP,REG0)
MSG1END  EQU   *
MSG2     WTO   'IEE532I SYSTEM LOG DEFINED AS HARDCOPY-WRITELOG CLOSE C*
               MND REJECTED',MF=L,DESC=(5),MCSFLAG=(RESP,REG0)
MSG2END  EQU   *                                                 Y02669
MSG3     WTO   'IEE033I HALT OR WRITELOG CLOSE COMMAND HAS BEEN ISSUED'*
               ,MF=L,DESC=(5),MCSFLAG=(RESP,REG0)
MSG3END  EQU   *
         EJECT
* CONSTANTS USED BY IEE1103D.                                         *
*                                                                     *
VZEROS   DS    0F
         DC    F'0'                         *
VMSGMOD  DC    V(IGC0503D)                                       Y02669
LOGWORD  DC    CL4'LOG '                                         Y02669
V00FF    DC    X'0000FFFF'                      *                Y02669
LOGFOR   DC    H'4'                          LOG TEXT LENGTH COMPARAND
FOUR     DC    H'4'                    UCM PREFIX OFFSET         Y02669
*                                                                     *
VMTAB    EQU   *
         DC    X'00'     'C0'
         DC    9X'04'    A - I
         DC    7X'00'    'CA' - 'D0'
         DC    9X'04'    J - R
         DC    8X'00'    'DA' - 'E1'
         DC    8X'04'    S - Z
         DC    6X'00'    'EA' - 'EF'
         DC    10X'04'   0 - 9
         DC    6X'00'    'FA' - 'FF'
T        EQU   VMTAB-192
VCLOSE   DC    CL5'CLOSE'          WRITELOG PARAMETER
VSTART   DC    CL5'START'              WRITELOG OPERAND          Y02669
         DS    0F
SP       DC    AL1(231),AL3(0)              *                    Y02669
POSTLIST POST  ASCB=0,ERRET=0,MF=L                               Y02669
FOX1     DC    F'1'                         *
PATCH    DS    CL52                    TEMP FIX AREA             Y02669
         EJECT
POSTCORE DSECT                                                   Y02669
ECBAD    DS    F                                                 Y02669
ASCBAD   DS    F                                                 Y02669
ERRAD    DS    F                                                 Y02669
         EJECT
SETXSA   DSECT
         IEEXSA
         EJECT
SETCVT   DSECT
         CVT
         EJECT
         IEEBASEA
         EJECT
         IEELCA
         EJECT
UCM      DSECT
         IEECUCM
         EJECT
         IEFPTRS
         END
