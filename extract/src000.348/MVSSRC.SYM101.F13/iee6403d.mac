         TITLE 'IGC0003D  MSGRT COMMAND HANDLER LOAD TWO'
***********************************************************************
*  MODULE NAME=  IEE6403D                                        Y02669
*
*  DESCRIPTIVE NAME =  MSGRT COMMAND HANDLER:                    Y02669
*                      REF OPERAND                               Y02669
*                      MESSAGE MODULE INTERFACE                  Y02669
*
*  COPYRIGHT =  NONE                                             Y02669
*
*  STATUS =  OS/VS2 - DUMPING IMPROVEMENTS                     @G33CPMR
*
*  FUNCTION =  THIS MODULE EXAMINES THE ROUTE CONTROL TABLE AND  Y02669
*  FORMATS ITS CONTENTS AS A MSGRT COMMAND TO DISPLAY THE        Y02669
*  DEFAULT ROUTING OPTIONS IN EFFECT FOR THE ISSUING CONSOLE. IN Y02669
*  ADDITION, IT COMPLETES THE INTERFACE TO THE FIRST SDS MESSAGE Y02669
*  MODULE.                                                       Y02669
*
*     OPERATION =                                                Y02669
*     1.  IF AN ERROR CODE IS PRESENT IN THE XAE FIELD OF THE    Y02669
*     XSA, THE INTERFACE TO IEE5603D IS COMPLETED:  UNLESS THE   Y02669
*     INTENDED ERROR MESSAGE REFERS TO THE 'L' OPERAND, THE      Y02669
*     XASTSAVE FIELD OF THE XSA IS INITIALIZED WITH THE ADDRESS  Y02669
*     OF THE INVALID OPERAND TO APPEAR IN THE MESSAGE, THE       Y02669
*     ADDRESS BEING PASSED IN REGISTER 6 FROM IEE6303D.  THEN,   Y02669
*     IF THE MESSAGE IS TO BE ABOUT THE CONTROL (K) COMMAND      Y02669
*     ( MESSAGE IEE925I), THE SECONDARY CODE IS SET IN THE HIGH  Y02669
*     ORDER BYTE OF XASTSAVE, TO CAUSE 'FOR NON CRT ONLY' TO BE  Y02669
*     APPENDED TO THE MESSAGE.                                   Y02669
*
*     2.  IF THE COMMAND WAS NOT ISSUED UNDER COMMTASK, AS     @Y02668P
*     INDICATED BY BIT XASSDS3 BEING ON, THE CMS AND LOCAL     @Y02668P
*     LOCKS ARE ACQUIPED TO PROTECT AGAINST THE CONCURRENT     @Y02668P
*     EXECUTION OF 'MR NONE'. THE LIKELY CAUSE OF THIS ENTRY   @Y02668P
*     IS TO PROCESS 'MR REF' ISSUED FROM A JES3 CONSOLE        @Y02668P
*
*     3.  IF THE COMMAND OPERAND IS OTHER THAN 'REF ', OR THE  @Z40LPTA
*         'CONT' INDICATOR IN THE XSA IS NOT ON, CONTROL       @Z40LPTA
*     IS PASSED TO THE ERROR EXIT TO ISSUE THE MESSAGE STATED    Y02669
*     THERE.  ABSENCE OF OPERANDS IS TREATED AS 'MR REF '.       Y02669
*
*     4.  THE UCME OF THE ISSUING CONSOLE IS FOUND.  FROM THIS @Y02668P
*     IT IS DETERMINED IF THE CONSOLE IS A CRT.  IF IT IS, THE   Y02669
*     DISPLAY CONTROL MODULE (DCM) IS LOCATED AND THE            Y02669
*     INSTRUCTION LINE THEREIN USED FOR THE MESSAGE.  IF THE     Y02669
*     CONSOLE IS A NON CRT, A CONDITIONAL GETMAIN FOR 150 BYTES  Y02669
*     FROM SUBPOOL 229 IS ISSUED.  IF THE GETMAIN FAILS, CONTROL Y02669
*     IS PASSED TO THE ERROR EXIT TO ISSUE THE ERROR MESSAGE     Y02669
*     INDICATED THERE.  OTHERWISE, THE FIRST 12 BYTES OF THE     Y02669
*     GOTTEN STORAGE IS INITIALIZED WITH MCSFLAGS AND MESSAGE ID Y02669
*     IEE930I.  THE REMAINDER WILL BE TREATED AS IF IT WERE THE  Y02669
*     ENTRY AREA OF THE DCM, AND WILL BE REFERRED TO AS SUCH.    Y02669
*
*     5.  THE ENTRY AREA OF THE DCM IS BLANKED AND THE MSGRT   @Y02668P
*     COMMAND ('MR') MOVED IN.  A CHECK IS THEN MADE TO          Y02669
*     DETERMINE IF THERE IS A ROUTE CONTROL TABLE (RCT) FOR THIS Y02669
*     CONSOLE.                                                   Y02669
*
*     6.  IF NOT, 'NONE' IS MOVED IN AS THE OPERAND.  IF THE   @Y02668P
*     CONSOLE IS A CRT, THE 'CHANGE OPTIONS' SWITCH IS SET       Y02669
*     AND CONTROL IS PASSED TO THE EXIT TO ISSUE THE MESSAGE     Y02669
*     INDICATED THERE.  IF THE CONSOLE IS NOT A CRT,  CONTROL    Y02669
*     PASSES TO THE WRITE2 EXIT TO WTO THE GOTTEN BUFFER,        Y02669
*     FREE IT, AND RETURN VIA BRANCH ON REGISTER 14.             Y02669
*
*     7.  IF THERE IS AN RCT, THE FIRST ENTRY IS CHECKED TO    @Y02668P
*     DETERMINE IF IT IS ACTIVE (BIT RCTACT IN BYTE RCTCODE).    Y02669
*     IF NOT, THE NEXT ENTRY IS CHECKED.  IF IT IS ACTIVE, THE   Y02669
*     VERB, OPERAND, AND ROUTING INFORMATION ARE PLACED IN THE   Y02669
*     ENTRY AREA, FORMATTED AS OPERANDS ON A VALID MSGRT         Y02669
*     COMMAND, AND THE ENTRY MARKED AS HAVING BEEN DISPLAYED     Y02669
*     (BIT RCTRES IN BYTE RCTCODE). THEN ALL OTHER ACTIVE RCT    Y02669
*     ENTRIES ARE CHECKED FOR THIS VERB, AND THOSE FOUND ARE     Y02669
*     FORMATTED AND ADDED TO THE ENTRY AREA.  ONCE ALL ENTRIES   Y02669
*     IN ALL RCT'S HAVE BEEN EXAMINED FOR ONE COMMAND, ALL ARE   Y02669
*     CHECKED FOR THE NEXT, UNTIL ALL ROUTABLE COMMANDS ARE      Y02669
*     EXHAUSTED.  THE ORDER IN WHICH THE COMMANDS ARE CHECKED IS Y02669
*     DISPLAY, TRACK, AND CONTROL.                               Y02669
*
*     8.  FOR EACH ACTIVE RCT ENTRY A BRANCH IS TAKEN TO LABEL @Z40LPTA
*         BUFCHK TO DETERMINE IF THE VERB/OPERAND WILL FIT     @Z40LPTA
*         INTO THE OUTPUT BUFFER. IF IT WILL FIT, PROCESSING   @Z40LPTA
*         CONTINUES AS ABOVE.                                  @Z40LPTA
*         IF IT WILL NOT FIT, THE OPERAND 'CONT' IS SET INTO   @Z40LPTA
*         THE OUTPUT BUFFER.                                   @Z40LPTA
*         IF THE 'CONT' OPERAND INDICATOR IS NOT ON, THE       @Z40LPTA
*         'DISPLAYED' BIT IS TURNED OFF IN EACH RCT ENTRY,     @Z40LPTA
*         AND THE MESSAGE IS WRITTEN TO THE CONSOLE.           @Z40LPTA
*         IF THE 'CONT' OPERAND INDICATOR IS ON, BUFFER AND    @Z40LPTA
*         BUFFER LENGTH PTRS ARE RESET TO BEGINNING OF BUFFER  @Z40LPTA
*         AND PROCESSING RESUMES AT (REF 4). THIS RESULTS      @Z40LPTA
*         IN THE CURRENT OUTPUT BUFFER BEING PURGED, AND       @Z40LPTA
*         RE-INITIALIZED WITH THE RCT ENTRIES THAT HAVE NOT    @Z40LPTA
*         YET BEEN DISPLAYED.                                  @Z40LPTA
*     9. ONCE ALL RCT ENTRIES HAVE BEEN EXAMINED FOR ALL VERBS,@Y02668P
*     IF NO ACTIVE ENTRIES WERE FOUND, 'NONE' IS MOVED IN.       Y02669
*     THE 'DISPLAYED' BIT IS TURNED OFF IN EACH ENTRY, AND THE   Y02669
*     MESSAGE WRITTEN AS DESCRIBED IN STEP 5.                    Y02669
*
*  NOTES =                                                       Y02669
*
*     DEPENDENCIES =  GETMAIN, FREEMAIN, DIDOCS, WTO             Y02669
*
*     CHARACTER CODE DEPENDENCIES =  THIS MODULE HAS BEEN CODED  Y02669
*     IN SUCH A WAY THAT IF THE EXTERNAL CHARACTER SET IS        Y02669
*     CHANGED FROM EBCDIC, REASSEMBLY WILL YIELD A VALID MODULE, Y02669
*     WITH THE FOLLOWING EXCEPTION:                              Y02669
*
*     THE CODE REPRESENTATION OF DECIMAL DIGITS MUST HAVE THE    Y02669
*     FOUR HIGH ORDER BITS 'ON'.  (I.E. X'FZ', WHERE Z IS ANY    Y02669
*     HEX DIGIT.)                                                Y02669
*
*     RESTRICTIONS =  THIS MODULE EXPECTS REGISTER TWO ON        Y02669
*     ENTRY TO CONTAIN THE ADDRESS OF AN XSA.                    Y02669
*
*     REGISTER CONVENTIONS =  SEE REGISTER USAGE.                Y02669
*
*     PATCH-LABEL =  PATCH                                       Y02669
*
*  MODULE TYPE =  CSECT                                          Y02669
*
*     PROCESSOR =  ASSEM                                         Y02669
*
*     MODULE SIZE =  X'54C'                                    @G33CPMR
*
*     ATTRIBUTES =  ZERO PSW PROTECT KEY     REENTRANT           Y02669
*                   SUPERVISOR STATE         PAGED LPA           Y02669
*
*  ENTRY POINT =  IEE6403D, FROM IEE6303D                        Y02669
*
*     PURPOSE =  SET UP INTERFACE TO MESSAGE MODULE IEE5603D     Y02669
*     ON BEHALF OF IEE6303D, AND PROCESS 'REF ' OPERAND OF       Y02669
*     THE MSGRT COMMAND.                                         Y02669
*
*     LINKAGE =  BRANCH FROM IEE6303D                            Y02669
*
*     INPUT =                                                    Y02669
*     REGISTER 2             ADDRESS OF XSA                      Y02669
*     LSTR(REGISTER 11)      ADDRESS OF FIRST OPERAND            Y02669
*                            ('REF ' OR ERROR)                   Y02669
*     XAL                    ADDRESS OF FIRST OPERAND            Y02669
*     XAU                    CONSOLE ID                          Y02669
*     XAV                    COMMAND VERB (MR OR MSGRT)          Y02669
*     XAE                    MESSAGE INDEX OR X'00'              Y02669
*     XASSDS                 XASSDS3 - ON, FOR NON-            @Y02668P
*                            XASSDS6 - CONTINUATION BIT        @Z40LPTA
*                            COMMTASK REQUEST                  @Y02668P
*     XASTSAVE               ADDRESS OF VARIABLE SUFFIX TEXT FOR Y02669
*                            ERROR MESSAGE, AND CODE INDICATING  Y02669
*                            FIXED SUFFIX TEXT FOR IEE5903D      Y02669
*
*     OUTPUT =  N/A                                              Y02669
*
*     REGISTERS SAVED =  NONE                                    Y02669
*
*     REGISTER USAGE =                                           Y02669
*     REGISTER 0         WORK REGISTER                           Y02669
*     REGISTER 1         WORK REGISTER                           Y02669
*     REGISTER 2         XSA BASE                                Y02669
*     REGISTER 3         END OF SYNTAX SCAN ADDRESS              Y02669
*     REGISTER 4         WORK REGISTER                           Y02669
*     REGISTER 5         BRANCH AND LINK REGISTER                Y02669
*     REGISTER 6         WORK REGISTER                           Y02669
*     REGISTER 7         UCME BASE                               Y02669
*     REGISTER 8         RCT BASE                                Y02669
*     REGISTER 9         UCM BASE                                Y02669
*     REGISTER 10        CVT BASE                                Y02669
*     REGISTER 11        OPERAND POINTER, FROM XSA               Y02669
*     REGISTER 12        MODULE BASE                             Y02669
*     REGISTER 13        SAVE REGISTER                           Y02669
*     REGISTER 14        RETURN REGISTER                         Y02669
*     REGISTER 15        LINK REGISTER                           Y02669
*
*     REGISTERS RESTORED =  NONE                                 Y02669
*
*  EXIT-NORMAL =  WRITE2
*
*     CONDITIONS =  MR REF PROCESSED FROM A NON CRT CONSOLE.     Y02669
*     OPERAND 'CONT' PROCESSING IS THE SAME.                   @Z40LPTA
*     MESSAGE IEE930I IS WRITTEN VIA WTO TO THE REQUESTING       Y02669
*     CONSOLE, THE MESSAGE AREA FREED VIA FREEMAIN, AND CONTROL  Y02669
*     RETURNED TO THE CALLER VIA BRANCH ON REGISTER 14.          Y02669
*     THIS EXIT IS ALSO TAKEN FOR NON-COMMTASK (I.E. JES3)     @Y02668P
*     REQUESTS.                                                @Y02668P
*
*     OUTPUT =  MESSAGE IEE930I                                  Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-NORMAL =  DISPLAY2                                       Y02669
*
*     CONDITIONS =  MR REF PROCESSED FROM A CRT CONSOLE.  THE MR Y02669
*     COMMAND WHICH WOULD ESTABLISH THE CURRENT ROUTING DEFAULTS Y02669
*     FOR THE REQUESTING CONSOLE IS IN THE ENTRY AREA OF ITS DCM Y02669
*     AND THE APPROPRIATE CODE IS SET IN THE XAE FIELD OF THE    Y02669
*     XSA TO CAUSE IEE5603D TO ISSUE THE 'CHANGE OPTIONS'        Y02669
*     MESSAGE.  CONTROL IS PASSED TO IEE5603D VIA BRANCH ON VCON.Y02669
*     OPERAND 'CONT' PROCESSING IS THE SAME.                   @Z40LPTA
*
*     OUTPUT =                                                   Y02669
*     ENTRY AREA OF DCM      MSGRT COMMAND                       Y02669
*     XAE                    MESSAGE CODE X'02'                  Y02669
*
*     RETURN CODES =  NONE.                                      Y02669
*
*  EXIT-ERROR =  ERROR2                                          Y02669
*
*     CONDITIONS =  THE CONDITIONAL GETMAIN FOR THE WTO PARA-    Y02669
*     METER LIST FAILED.                                         Y02669
*     CONTROL IS PASSED TO THE MESSAGE MODULE IEE5603D VIA       Y02669
*     BRANCH ON VCON TO ISSUE MESSAGE IEE931I.                   Y02669
*
*     OUTPUT =                                                   Y02669
*     XAE              MESSAGE CODE X'0E'                        Y02669
*     XAV              COMMAND VERB (MR OR MSGRT)                Y02669
*     XAU              CONSOLE ID FOR WTO                        Y02669
*     XASTSAVE         ADDRESS OF 'REF '                         Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-ERROR =  ERROR1                                          Y02669
*
*     CONDITIONS =  ENTRY TO IEE6403D WAS NOT TO SET UP MESSAGE  Y02669
*     INTERFACE.  FURTHER, THE OPERAND ON THE COMMAND IS NOT     Y02669
*     'REF '.  NEITHER IS 'REF ' TO BE DEFAULTED.                Y02669
*     CONTROL IS PASSED TO THE MESSAGE MODULE IEE5603D VIA       Y02669
*     BRANCH ON VCON TO ISSUE MESSAGE IEE156I.                   Y02669
*
*     OUTPUT =                                                   Y02669
*     XAE              MESSAGE CODE X'04'                        Y02669
*     XAV              COMMAND VERB (MR OR MSGRT)                Y02669
*     XAU              CONSOLE ID FOR WTO                        Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXIT-ERROR =  ERROR                                           Y02669
*
*     CONDITIONS =  ENTRY TO IEE6403D WAS MADE FROM IEE6303D TO  Y02669
*     SET UP THE INTERFACE TO IEE5603D TO ISSUE A MESSAGE.  IF   Y02669
*     A MESSAGE OTHER THAN IEE926I IS TO BE ISSUED, REGISTER     Y02669
*     'WRK6' IS STORED IN XASTSAVE IN THE XSA.  FURTHER, IF      Y02669
*     MESSAGE IEE925I IS TO BE ISSUED, A CODE OF X'1B' IS MOVED  Y02669
*     INTO THE HIGH ORDER BYTE OF XASTSAVE TO INDICATE THE       Y02669
*     SUFFIX TEXT TO IEE5903D.                                   Y02669
*     CONTROL IS PASSED TO THE MESSAGE MODULE IEE5603D VIA       Y02669
*     BRANCH ON VCON TO ISSUE THE APPROPRIATE MESSAGE.           Y02669
*
*     OUTPUT =                                                   Y02669
*     XAE              MESSAGE CODE PASSED FROM IEE6303D         Y02669
*     XAV              COMMAND VERB (MR OR MSGRT)                Y02669
*     XAU              CONSOLE ID FOR WTO                        Y02669
*     XASTSAVE         POSSIBLY POINTER TO VARIABLE TEXT         Y02669
*                      POSSIBLY A CODE INDICATING SUFFIX TEXT    Y02669
*
*     RETURN CODES =  NONE                                       Y02669
*
*  EXTERNAL REFERENCES =                                         Y02669
*
*     ROUTINES =  IEE5603D - SDS MESSAGE MODULE                  Y02669
*
*     DATA AREAS = NONE                                          Y02669
*
*     CONTROL BLOCKS =                                           Y02669
*     RCT          R,W                                           Y02669
*     DCM          R,W                                           Y02669
*     XSA          R,W                                           Y02669
*     UCM          R                                             Y02669
*     CVT          R                                             Y02669
*     PSA          R                                           @Y02668P
*
*     KEY;  C=CREATE, D=DELETE, R=READ, W=WRITE                  Y02669
*
*  TABLES =  VERTAB - VALID MSGRT VERBS                          Y02669
*
*  MACROS =  CVT, IEEXSA, IEECUCM, IEETDCM, IEECVMAP RCT, MODID  Y02669
*            IHAPSA, SETLOCK                                   @Y02668P
*
*     SERIALIZATION =                                            Y02669
*     LOCKS HELD =  CMS, LOCAL                                 @Y02668P
*
*  CHANGE ACTIVITY =  Y02669, Y02651, Y02668, Z40LPTA, G33CPMR @G33CPMR
*
*  MESSAGES =                                                    Y02669
*  XAE CODE                          TEXT                        Y02669
*    X'04'         IEE156I (VERB) INVALID OPERAND- (OPERAND)     Y02669
*    X'0E'         IEE931I (VERB) (OPERAND) INSUFFICIENT         Y02669
*                  STORAGE FOR COMMAND  (OPERAND IS 'REF ',      Y02669
*                  OR '   ', IF REF WAS DEFAULTED)               Y02669
*    X'02'         MR (OPERANDS)  CHANGE OPTIONS IF DESIRED      Y02669
*                  (OPERANDS ARE THE MR DEFAULTS IN EFFECT)      Y02669
*    N/A           IEE930I MR (OPERANDS)                         Y02669
*                  (OPERANDS ARE THE MR DEFAULTS IN EFFECT)      Y02669
*
*  FOR ALL BUT THE LAST MESSAGE, THE TEXT IS CONTAINED IN EITHER Y02669
*  IEE5603D OR IEE5903D, OR BOTH, AND THE MESSAGE IS ISSUED FROM Y02669
*  ONE OF THEM.  MESSAGE IEE930I IS CONSTRUCTED BY AND ISSUED BY Y02669
*  IEE6403D.                                                     Y02669
*
*  ABEND CODES =  NONE.                                          Y02669
*
**********************************************************************
         EJECT
IEE6403D CSECT
* A - CODE ADDED TO SUPPORT 'DISPLAY DUMP'                     @G33CPMR
********                                                              *
******** REGISTER EQUATES                                             *
********                                                              *
WRK0     EQU   0                   WORK REGISTER
WRK1     EQU   1                   WORK REGISTER
XSAR     EQU   2                   BASE REGISTER FOR THE XSA
WRK3     EQU   3                   WORK REGISTER
WRK4     EQU   4                   WORK REGISTER
BALR     EQU   5                   BRANCH AND LINK REGISTER
WRK6     EQU   6                   WORK REGISTER
ENTR     EQU   7                   BASE REGISTER FOR THE UCM ENTRY
RCTR     EQU   8                   BASE REGISTER FOR THE RCT
UCMR     EQU   9                   BASE REGISTER FOR THE UCM
CVTR     EQU   10                  BASE REGISTER FOR THE CVT
LSTR     EQU   11                  LIST POINTER FROM XSA
BASR     EQU   12                  ROUTINE BASE REGISTER
SAVR     EQU   13                  SAVE REGISTER
RETR     EQU   14                  RETURN REGISTER
LNKR     EQU   15                  LINK REGISTER
         EJECT
********                                                              *
******** OTHER EQUATES                                                *
********                                                              *
N0       EQU   0                   NUMBER CONSTANT
N1       EQU   1                   NUMBER CONSTANT
N2       EQU   2                   NUMBER CONSTANT
N3       EQU   3                   NUMBER CONSTANT
N4       EQU   4                   NUMBER CONSTANT
N5       EQU   5                   NUMBER CONSTANT
N6       EQU   6                   NUMBER CONSTANT
N7       EQU   7                   NUMBER CONSTANT
N8       EQU   8                   NUMBER CONSTANT
N10      EQU   10                  NUMBER CONSTANT
N11      EQU   11                  NUMBER CONSTANT
N12      EQU   12                  NUMBER CONSTANT             @Z40LPTA
N13      EQU   13                  NUMBER CONSTANT             @Z40LPTA
KCDROP   EQU   14                  NUMBER CONSTANT             @Z40LPTA
TRACKOP  EQU   18                  NUMBER CONSTANT             @Z40LPTA
MAXOP    EQU   24                  NUMBER CONSTANT             @Z40LPTA
BUFFWTO  EQU   118                 NUMBER CONSTANT             @Z40LPTA
N120     EQU   120                 NUMBER CONSTANT             @Z40LPTA
N124     EQU   124                 NUMBER CONSTANT             @Z40LPTA
BUFFDCM  EQU   126                 NUMBER CONSTANT             @Z40LPTA
N132     EQU   132                 NUMBER CONSTANT             @Z40LPTA
N136     EQU   136                 NUMBER CONSTANT             @Z40LPTA
CHARO    EQU   C'O'                CHARACTER CONSTANT: CONSOLES  Y02669
CHAR3     EQU    X'F3'                D 3850 OPERAND CONSTANT  @Z40LPTA
CHARD    EQU   C'D'                     DISPLAY VERB           @Z40LPTA
CHARP    EQU   C'P'                CHARACTER CONSTANT: DUMP    @G33CPMR
CHARK    EQU   C'K'                CONTROL VERB
CHART    EQU   C'T'                TRACK VERB                    Y02669
COMMA    EQU   C','                COMMA CHARACTER
PARA2    EQU   C')'                PARENTHSIS CONSTANT
PARA1    EQU   C'('                PARENTHSIS CONSTANT
ASTRICK  EQU   X'5C'               CHARACTER CONSTANT          @Z40LPTA
EQUAL    EQU   C'='                CHARACTER CONSTANT
BLK      EQU   X'40'               BLANK CONSTANT
TF       EQU   X'FF'               FLAG TO TURN OF SWITCHES
SUBP     EQU   229                 SUBPOOL FOR GET AND FREEMAIN  Y02669
XF0      EQU   X'F0'               NUMBER ZONE
ZERO     EQU   0                   TO TEST FOR ERROR CODE PRESENT
CHGOPT   EQU   2                   ERROR CODE FOR CHANGE OPTIONS MSG
IOERROR  EQU   4                   ERROR CODE FOR INVALID OPERAND
KERROR   EQU   11                  ERROR CODE FOR INVALID K MSG
LIERROR  EQU   12                  ERROR CODE FOR INVALID L OPERAND
NCERROR  EQU   14                  ERROR CODE FOR NO STORAGE MSG Y02669
NONCRT   EQU   27                  SECONDARY CODE FOR INVALID K MSG
KVERB    EQU   X'40'               K CDR FLAG
MCSFG    EQU   X'E0'               MCS FLAGS FOR WTO
CF0      EQU   X'F0'               NUMBER MSSK
XFF      EQU   X'FF'               END OF VERB TABLE
MOPD1    EQU   X'08'               OPERAND INTO BUFFER FLAG
MOPD2    EQU   X'04'               MULTIPLE OPERANDS FLAG
MVRB1    EQU   X'02'               VERB INTO BUFFER FLAG
MVRB2    EQU   X'01'               MULTIPLE VERB FLAG
***
         EJECT
*****************************************************************
         BALR  BASR,N0             SET PROGRAM BASE
         USING *,BASR              ESTABLISH ADDRESSIBILITY
         MODID BRANCH=YES                                        Y01886
         USING DXSA,XSAR           ADDRESSIBILITY OF XSA
         USING DSTRCT,RCTR         ADDRESSIBILITY OF RCT
         L     CVTR,CVTPTR         ADDRESS OF CVT
         USING DCVT,CVTR           ADDRESSIBILITY OF THE CVT
         L     UCMR,CVTCUCB        ADDRESS OF UCM FROM CVT
         USING UCM,UCMR            ADDRESSIBILITY OF THE UCM     Y02669
         USING UCMLIST,ENTR        ADDRESSIBILITY OF UCM ENTRY
***                                                                   *
***   SECOND LOAD OF THE MSGRT HANDLER IS ENTERED FOR TWO CONDITIONS  *
***   IF AN ERROR CONDITION HAS BEEN FOUND IN THE FIRST LOAD          *
***   OR IF A MR REF COMMAND HAS BEEN ISSUED                          *
***                                                                   *
         SPACE 2
***      IS THERE AN ERROR CODE IN THE XSA                       Y02669
STARTSC  EQU   *
         CLI   XAE,ZERO            IS THERE AN ERROR CODE PRESENT?
         BNE   ERROR               BRANCH YES TO MSG MODULE EXIT
***                                                                   *
***   TEST FOR THE VERB OF THE MSGRT COMMAND                          *
***                                                                   *
         SPACE 2
***      IS THIS A MSGRT REF COMMAND                             Y02669
***      IS THIS A MSGRT 'CONT' FUNCTION?                      @Z40LPTA
REFFMT   EQU   *
         TM    XASSDS,XASSDS6      THIS CONTINUATION?          @Z40LPTA
         BO    REFPROC             YES, PROCESS CONTINUATION   @Z40LPTA
         CLC   N0(N4,LSTR),REF     IS THIS A REFERENCE VERB?
         BE    REFPROC             YES, PROCESS REF REQUEST      Y02669
         LTR   LSTR,LSTR           NO OPERANDS (REF DEFAULT)?    Y02669
         BNZ   ERROR1              NO, BRANCH TO ERROR EXIT      Y02669
REFPROC  EQU   *                   PROCESS REF OPERAND           Y02669
         SR    WRK1,WRK1           CLEAR REG
         IC    WRK1,XAU            GET SOURCE CONSOLE ID
         BAL   BALR,FINDUCME       BRANCH TO FIND UCM ENTRY
         EJECT
***      IS THE CONSOLE A SUBSYSTEM CONSOLE OR CRT             @Y02668P
*****************************************************************
         TM    XASSDS,XASSDS3      NON-COMMTASK(JES3) REQUEST? @Y02668P
         BNO   COMTASK1            NO,TEST FOR CRT             @Y02668P
         B     WRITE1              YES, TREAT AS NON-CRT       @Y02668P
COMTASK1 EQU   *                   CONTINUE REF PROCESSING     @Y02668P
         TM    UCMDISP,UCMDISPC    IS THIS CONSOLE A CRT
         BNO   WRITE1              BRANCH NO
         L     CVTR,UCMXB          ADDRESS OF RESIDENT DCM
         L     CVTR,N0(CVTR)       ADDRESS OF TRANSIENT DCM
         USING DCMSTRT,CVTR     ADDRESSIBILITY OF TRANSIENT DCM  Y01012
         EJECT
***      GET ADDRESS OF DCM ENTRY AREA                           Y02669
*****************************************************************
         L     WRK3,DCMAENTR       ADDRESS OF ENTRY AREA OF DCM
         LH    WRK4,DCMLGNTH       LENGTH OF LINE FROM DCM
         AR    WRK4,WRK4           TWO LINES IN ENTRY AREA
         MVI   XASAVLEN,BUFFDCM    SET DCM OUTPUT LENGTH       @Z40LPTA
BUILDL   EQU   *
         ST    WRK3,XASAVBUF      SAV OUTPUT BUFFER PTR        @Z40LPTA
         LR    BALR,WRK3          BEGINNING OF BUFFER AREA     @Z40LPTA
         SR    WRK1,WRK1          ZERO REG                     @Z40LPTA
         IC    WRK1,XASAVLEN      GET OUTPUT LENGTH            @Z40LPTA
         AR    BALR,WRK1          MAXIMUM OUTPUT ADDRESS       @Z40LPTA
         ST    BALR,XASAVEND      SAVE END OF BUFFER ADDR      @Z40LPTA
BUILDL2  EQU   *                                               @Z40LPTA
         BAL   BALR,BLINST         BLANK INST. LINE
         SR    WRK6,WRK6           CLEAR COUNT REG
         MVC   N0(N3,WRK3),RTVB    MOVE MSGRT COMMAND INTO BUFFER
         LA    WRK3,N3(WRK3)       INCREMENT BUFFER AROUND MR CDR
         L     RCTR,UCMRCT         ADDRESS OF RCT FROM UCM
         LA    RCTR,N0(RCTR)       ZERO FLAG BYTE
         SPACE 2
***      IS THERE AN RCT FOR THIS CONSOLE                        Y02669
*****************************************************************
         LTR   RCTR,RCTR           IS THERE A RCT TABLE
         BZ    NONEDISP            BRANCH NO                     Y02669
         LA    WRK1,VERTAB         ADDRESS OF VERB TABLE
         SPACE 2
***      HAS THIS ENTRY BEEN DISPLAYED                           Y02669
*****************************************************************
SEARACT  EQU   *
         TM    RCTCODE,RCTRES      HAS THIS ENTRY BEEN DISPLAYED
         BO    INCRCT              BRANCH YES
         SPACE 2
***      IS THIS ENTRY ACTIVE                                    Y02669
*****************************************************************
         TM    RCTCODE,RCTACT      IS THIS ENTRY ACTIVE
         BO    TESTACT             BRANCH YES
         SPACE 2
***      IS THIS ENTRY CONTINUED                                 Y02669
*****************************************************************
INCRCT   EQU   *
         TM    RCTCODE,RCTCON      IS THIS ENTRY CONTINUED OR THE END
         BO    NXTPTR              BRANCH IF CONTINUED
         BM    BUILD1              BRANCH IF END
         SPACE 2
***      IF NEITHER CONTINUED NOR END, CHECK NEXT ENTRY          Y02669
*****************************************************************
         LA    RCTR,RCTLEN(RCTR)   INCREMENT TO NEXT ENTRY
         B     SEARACT             BRANCH TO CONTINUE SEARCH
         EJECT
*****************************************************************
NXTPTR   EQU   *
         L     RCTR,N0(RCTR)       ADDRESS OF NEXT TABLE SECTION
         B     SEARACT             BRANCH TO CONTINUE SEARCH
***                                                                   *
***  BUILD MESSAGE IN DCM INSTRUCTION LINE OR WTO BUFFER
***                                                                   *
         SPACE 2
*****************************************************************
TESTACT  EQU   *
         CLC   RCTVER(N1),N0(WRK1) IS THIS ENTRY EQUAL TO PRESENT VERB
         BNE   INCRCT              BRANCH NO
         BAL   BALR,BUFCHK         CHECK BUFFER LENGTH LEFT    @Z40LPTA
         TM    XASPLS3,MVRB1       IS VERB IN BUFFER           @Y02668P
         BO    NOMOVE              BRANCH YES
         ST    WRK3,XASTSAVE       SAVE ADDRESS IN BUFFER OF VERB
         OI    XASPLS3,MVRB1       SET VERB IN BUFFER FLAG     @Y02668P
         MVC   N1(N2,WRK3),RCTVER  MOVE VERB INTO BUFFER
         MVI   N0(WRK3),PARA1      PLACE PARENTHSIS BEFORE VERB
         LA    WRK6,N1(WRK6)       INCREMENT COUNT REG
         CLI   RCTVER,CHARK        IS THIS A CONTROL VERB
         BE    MOVELOP             BRANCH YES
         CLI   RCTVER,CHART        IS THIS A TRACK VERB          Y02669
         BNE   NOMOVE              BRANCH NO
         MVI   N3(WRK3),EQUAL      MOVE EQUAL INTO BUFFER
         LA    WRK3,N1(WRK3)       INCREMENT BUFFER POINTER
NOMOVE   EQU   *
         BAL   BALR,CVTCID         BRANCH TO CONVERT CC TO EBIDIC
         TM    XASPLS3,MOPD1       IS ONE OPERAND IN BUFFER    @Y02668P
         BO    TESTCCA             BRANCH YES TO COMPARE CCA
         LA    WRK3,N3(WRK3)       INCREMENT BUFFER POINTER
         MVI   N0(WRK3),PARA1      PLACE PARENTHSIS BEFORE OPERAND
         LA    WRK3,N1(WRK3)       INCREMENT BUFFER POINTER
         SPACE 2
***      SET ENTRY DISPLAYED BIT IN THE RCT ON                   Y02669
*****************************************************************
MOVEOP   EQU   *
         OI    RCTCODE,RCTRES      SET ENTRY DISPLAYED BIT
         MVC   N0(N1,WRK3),RCTOPD  MOVE OPERAND INTO BUFFER
         SPACE 2
***      SPECIAL PROCESSING FOR MULTI-CHARACTER OPERANDS         Y02669
*****************************************************************
         CLI   N0(WRK3),CHARO      IS THIS THE CONSOLES OPERAND
         BNE   D3850CHK            NO, TEST FOR  D 3850        @Z40LPTA
         MVC   N0(N8,WRK3),CONSOLES MOVE 'CONSOLES' INTO BUFFER
         LA    WRK3,N7(WRK3)       INCREMENT BUFFER POINTER
         B     MCOMMA                                          @Z40LPTA
D3850CHK EQU   *
         CLI   N0(WRK3),CHAR3      IS THIS D 3850 OPERAND    @Z40LPTA
         BNE   DDUMPCHK            NO, TEST FOR D DUMP         @G33CPMR
         MVC   N0(N4,WRK3),D3850   YES, MOVE IN OPERAND      @Z40LPTA
         LA    WRK3,N3(WRK3)       INCREMENT BUFFER PTR      @Z40LPTA
         B     MCOMMA                                          @G33CPMR
DDUMPCHK EQU   *                                               @G33CPMR
         CLI   N0(WRK3),CHARP      IS THIS D DUMP OPERAND?     @G33CPMR
         BNE   MCOMMA              NO, MOVE IN 'L='            @G33CPMR
         MVC   N0(L'DUMP,WRK3),DUMP YES, MOVE IN OPERAND       @G33CPMR
         LA    WRK3,N3(WRK3)       INCREMENT BUFFER PTR        @G33CPMR
MCOMMA   EQU   *
         LA    WRK3,N1(WRK3)       INCREMENT AROUND PARENTHSIS
         MVC   N1(N3,WRK3),CLEQUAL  MOVE COMMA L AND EQUAL INTO BUFFER
         MVI   N0(WRK3),PARA2      MOVE IN PARENTHSIS
NOPARA   EQU   *
         MVC   N4(N2,WRK3),XAP+N2  MOVE IN CONSOLE ID
         MVC   N6(N1,WRK3),RCTAID  MOVE IN AREA ID
         OI    XASPLS3,MOPD1       SET ONE OPERAND FLAG        @Y02668P
         B     INCRCT              BRANCH FOR NEXT ENTRY
MOVELOP  EQU   *
         OI    RCTCODE,RCTRES      SET ENTRY DISPLAYED BIT
         LA    WRK6,N1(WRK6)       INCREMENT COUNT OF VERBS
         LA    WRK3,N1(WRK3)       INCREMENT BUFFER PAST VERB
         BAL   BALR,CVTCID         BRANCH TO CONVERT CC TO EBIDIC
         B     MCOMMA              BRANCH TO MOVE IN L OPERAND
TESTCCA  EQU   *
         CLC   N4(N2,WRK3),XAP+N2  IS THIS CONSOLE ID EQUAL
         BNE   INCRCT2             BRANCH NO
         CLC   N6(N1,WRK3),RCTAID  IS THIS AREA ID EQUAL
         BNE   INCRCT2             BRANCH NO
         MVI   N0(WRK3),COMMA      MOVE COMMA BETWEEN OPERANDS
         LA    WRK3,N1(WRK3)       INCREMENT BUFFER POINTER
         OI    XASPLS3,MOPD2       SET MULTIPLE OPERAND FLAG   @Y02668P
         B     MOVEOP              BRANCH TO MOVE IN OPERAND
BUILD1   EQU   *
         L     WRK4,XASTSAVE       ADDRESS OF VERB
         L     RCTR,UCMRCT         LOAD BEGINNING OF RCT
         TM    XASPLS3,MOPD1       WAS AN ENTRY MADE           @Y02668P
         BNO   NXTTAB              BRANCH NO FOR NEXT VERB SEARCH
         TM    XASPLS3,MOPD2       IS MULTIPLE OPERAND FLAG ON @Y02668P
         BO    ONEOPS              BRANCH YES
         MVC   N0(N6,WRK3),N1(WRK3) MOVE L OPERAND OVER ONE
         CLI   N1(WRK4),CHARK      IS THIS A K COMMAND
         BE    ONEOPS1             BRANCH YES
         LA    BALR,N5(WRK3)       GET LENGTH OF TEXT
         SR    BALR,WRK4           LENGTH FOR EXECUTE
         EX    BALR,PARMOVE2       MOVE TEXT TO GET RID OF BLANKS
         CLI   N1(WRK4),CHART      THIS A TWO CHARACTER VERB TR? Y02669
         BNE   DISTYP              BRANCH NO
         MVI   N3(WRK4),EQUAL      MOVE EQUAL AFTER TWO CHARACTER VERB
DISTYP   EQU   *
         BCTR  WRK3,N0             ADJUST FOR BLANKS REMOVED
ONEOPS1  EQU   *
         BCTR  WRK3,N0             ADJUST FOR BLANKS REMOVED
         EJECT
ONEOPS   EQU   *
         LA    WRK3,N6(WRK3)       INCREMENT BUFFER POINTER
         NI    XASPLS3,TF-MOPD1-MOPD2-MVRB1 SET OPD AND VERB   @Y02668PX
                                   FLAGS OFF                   @Y02668P
         MVI   N1(WRK3),PARA2      MOVE PARENTHSIS AROUND VERB
         MVI   N2(WRK3),COMMA      COMMA INTO BUFFER
         LA    WRK3,N3(WRK3)       INCREMENT BUFFER POINTER
         TM    XASPLS3,MVRB2       DOES VERB HAVE DIFFERENT    @Y02668PX
                                   ROUTED OPERANDS             @Y02668P
         BNO   NXTTAB              BRANCH NO
         NI    XASPLS3,TF-MVRB2    TURN OFF VERB MOVED FLAG    @Y02668P
         B     SEARACT             BRANCH BACK TO SEARCH RCT
NXTTAB   EQU   *
         LA    WRK1,N1(WRK1)       INCREMENT VERB TABLE
         CLI   N0(WRK1),XFF        IS THIS THE END
         BNE   SEARACT             BRANCH NO
         LTR   WRK6,WRK6           ARE THERE ANY ACTIVE ENTRIES IN RCT
         BZ    NONEDISP            BRANCH NO PUT OUT MESSAGE
         BCTR  WRK3,N0             DECREMENT BUFFER POINTER
         MVI   N0(WRK3),BLK        BLANK OUT COMMA CHARACTER
         CH    WRK6,ONE            IS COUNT OF VERB GREATER THAN ONE
         BH    DISPLAY             BRANCH YES TO TURN OFF        Y02669
*                                  'DISPLAYED' FLAG IN RCT       Y02669
         BCTR  WRK3,N0             DECREMENT BUFFER POINTER
         MVI   N0(WRK3),BLK        BLANK OUT PARENTHSIS CHARACTER
         LR    WRK1,WRK3           END ADDRESS OF
         SR    WRK1,WRK4           LENGTH OF VERB TEXT
         BCTR  WRK1,N0             DECREMENT COUNT BY ONE
         EX    WRK1,PARMOVE1       MOVE TO BLANK VERB PARENTHSIS
         BCTR  WRK3,N0             DECREMENT BUFFER POINTER
*                                  I.E. SHIFT TEXT LEFT ONE BYTE Y02669
         SPACE 2
*****************************************************************
DISPLAY  EQU   *
         NI    RCTCODE,TF-RCTRES   TURN OFF DISPLAYED FLAG IN RCT
         TM    RCTCODE,RCTCON      IS THIS ENTRY THE END OR CONTINUED
         BM    DISPLAY2            BRANCH YES END
         BO    NXTPTR3             BRANCH YES CONTINUED
         LA    RCTR,RCTLEN(RCTR)   INCREMENT TO NEXT ENTRY
         B     DISPLAY             BRANCH BACK TO SEARCH
NXTPTR3  EQU   *
         L     RCTR,N0(RCTR)       NEXT SECTION OF THE RCT
         B     DISPLAY             BRANCH BACK TO SEARCH
         EJECT
***      NO ACTIVE ENTRIES, OR NO RCT'S, FOUND                  Y02669
*****************************************************************
NONEDISP EQU  *                                                 Y02669
         MVC  N0(N4,WRK3),NONE     MOVE IN 'NONE'               Y02669
         LA   WRK3,N4(WRK3)        INCREMENT BUFFER PAST 'NONE' Y02669
     SPACE 2
*****************************************************************
DISPLAY2 EQU   *
         TM    XASSDS,XASSDS3      NON-COMMTASK (JES3) REQUEST?@Y02668P
         BNO   COMTASK2            NO, CONTINUE CHECKS         @Y02668P
         BAL   LNKR,CLRLOCK        YES, RELEASE LOCKS          @Y02668P
         B     WRITE2              GO DO WTO                   @Y02668P
COMTASK2 EQU   *                                               @Y02668P
         TM    UCMDISP,UCMDISPC    IS THIS CONSOLE A CRT
         BNO   WRITE2              BRANCH NO
         SPACE 2
***      SET   CHANGE OPTIONS MESSAGE CODE IN XAE                Y02669
*****************************************************************
         L     WRK6,DCMAENTR       ADDRESS OF ENTRY AREA OF DCM
         LA    WRK6,N3(WRK6)       ADDRESS OF CURSOR FOR MSG RTN
         MVI   XAE,CHGOPT          MSG CODE FOR CHANGE OPTIONS
         B     ERROR               BRANCH TO PUT OUT MSG
INCRCT2  EQU   *
         OI    XASPLS3,MVRB2       SET MULTIPLE OPERANDS FLAG  @Y02668P
         B     INCRCT              BRANCH FOR NEXT ENTRY
CVTCID   EQU   *
         SR    WRK4,WRK4           CLEAR REG
         IC    WRK4,RCTCID         GET CONSOLE ID FROM RCT
         CVD   WRK4,XAP            CONVERT CONSOLE ID TO DECIMAL
         UNPK  XAP+N1(N3),XAP+N6(N2) CONVERT TO PRINTABLE CHARACTERS
         OI    XAP+N3,CF0          CHANGE ZONE TO EBDIC
         BR    BALR                BRANCH BACK TO CALLING RTN
         SPACE 2
***      GETMAIN STORAGE FOR MESSAGE BUFFER                      Y02669
*****************************************************************
WRITE1   EQU   *
         LA    WRK1,XAX+N4         AREA FOR STORAGE ADDRESS
         MVC   XAP(N10),GETAREA    MOVE REMOTE PARAMETER LIST TO XSA
         ST    WRK1,XAD            AREA FOR GETMAIN TO STORE ADDRESS
         LA    WRK1,XAP            ADDRESS OF REMOTE LIST FOR GETMAIN
         GETMAIN MF=(E,(1))        GET CORE FOR WTO
         LTR   LNKR,LNKR           IS RETURN CODE ZERO
         BNZ   ERROR2              NO, GO SET-UP FOR IEE931I     Y02669
         L     WRK3,XAX+N4         BUFFER ADDRESS
         XC    N0(N4,WRK3),N0(WRK3) ZERO FOUR BYTES
         OI    N2(WRK3),MCSFG      SET MCS FLAGES FOR WTO
         LA    WRK3,N4(WRK3)       INCREMENT BUFFER ADDRESS
         TM    XASSDS,XASSDS3      NON-COMMTASK(JES3) REQUEST? @Y02668P
         BNO   COMTASK3            NO, UNDER COMMTASK, NO      @Y02668P
*                                  LOCKS NEEDED                @Y02668P
         BAL   LNKR,GETLOCK        YES, GET CMS/LOCAL LOCKS    @Y02668P
COMTASK3 EQU   *                   CONTINUE REF PROCESSING     @Y02668P
*****************************************************************
         MVC   N0(N8,WRK3),IEE     MESSAGE ID INTO BUFFER
         LA    WRK3,N8(WRK3)       INCREMENT BUFFER AROUND MSG ID
         LA    WRK4,N120           LENGTH OF BUFFER REMAINING
         MVI   XASAVLEN,BUFFWTO    SET WTO OUTPUT LENGTH       @Z40LPTA
         B     BUILDL              BRANCH TO BUILD MESSAGE
         EJECT
***      WRITE MESSAGE VIA WTO TO NON-CRT CONSOLE                Y02669
*****************************************************************
WRITE2   EQU   *
         LR    WRK6,WRK3           SAVE ADDRESS OF MSG END     @Y02668P
         L     WRK3,XAX+N4         ADDRESS OF GETMAINED AREA
         SR    WRK6,WRK3           GET LENGTH OF BUFFER  TEXT
         STH   WRK6,N0(WRK3)       LENGTH OF WTO MSG PLUS 4
         AR    WRK6,WRK3           END OF BUFFER
         MVC   N0(N4,WRK6),DRCODES MOVE IN DESC AND ROUTE CODES
         SR    WRK0,WRK0           CLEAR REG
         IC    WRK0,XAU            TERMINAL ID FROM XSA
         WTO   MF=(E,(WRK3))       WRITE MESSAGE
         SPACE 2
***      FREEMAIN MESSAGE BUFFER                                 Y02669
*****************************************************************
         L     WRK1,XAX+N4         ADDRESS OF WORD FOR GETMAIN
         FREEMAIN R,LV=N132,A=(1),SP=SUBP                      @Z40LPTA
         SPACE 2
***      EXIT:  RETURN TO CALLER                                 Y02669
*****************************************************************
RET      EQU   *                                                 Y02669
         BR    RETR                RETURN TO CALLER
***
***   BLANK BUFFER FOR MESSAGE
***
BLINST   EQU   *
         BCTR  WRK4,N0             DECREMENT THE LENGTH -
         BCTR  WRK4,N0             BY TWO
         MVI   N0(WRK3),BLK        BLANK FIRST CHARACTER
         EX    WRK4,BLI            PROPAGATE BLANKS
         BR    BALR                RETURN FROM SUBROUTINE
         EJECT
BUFCHK   EQU   *                                               @Z40LPTA
* TEST REMAINDER OF THE OUTPUT BUFFER TO DETERMINE IF THE
* NEXT OPERAND OR VERB WILL CAUSE BUFFER-OVERFLOW. IF IT
* WILL, SET UP THE 'CONT' OPERAND.
         ST    WRK4,XAD              SAVE REG VALUE
         CLI   RCTVER,CHARD        THIS DISPLAY VERB           @Z40LPTA
         BNE   CHECKTR             NO, TEST FOR TRACK          @Z40LPTA
         LA    WRK4,MAXOP(WRK3)    LENGTH OF MAX OPERAND +CONT @Z40LPTA
         B     CHECKPTR            CHECK BUFFER CONTENT        @Z40LPTA
CHECKTR  EQU   *                                               @Z40LPTA
         CLI   RCTVER,CHART        THIS TRACK VERB             @Z40LPTA
         BNE   CHECKKCM            NO, SET UP K CMND. LEN      @Z40LPTA
         LA    WRK4,TRACKOP(WRK3)  LEN OF TRACK OPERAND + CONT @Z40LPTA
         B     CHECKPTR            CHECK BUFFER CONTENT        @Z40LPTA
CHECKKCM EQU   *                                               @Z40LPTA
         LA    WRK4,KCDROP(WRK3)   LEN OF K CMND + CONT        @Z40LPTA
CHECKPTR EQU   *                                               @Z40LPTA
         CLI   N0(WRK3),PARA2      PTR AT '),L=CCA' ?
         BNE   NEXTCHK             NO, AT END OF VERB
         LA    WRK4,N6(WRK4)       YES,BUMP PAST 'L=' VALVE
NEXTCHK  EQU   *
         C     WRK4,XASAVEND      WILL OPERAND FIT?
         BH    SETCONT            NO, SET UP CONTINUATION
         L     WRK4,XAD           RESTORE REG VALUE
         BR    BALR               RETURN TO MAIN-LINE
SETCONT  EQU   *
* ENTRY HERE IS TO SET UP THE 'CONT'  OPERAND IN THE OUTPUT
* BUFFER. DETERMINE WHAT THE LAST CHARACTER IS IN THE BUFFER-
* ', ' OR '(L=CCA' ; INITIALIZE IT WITH THE 'CONT' OPERAND.
*
         CLI   N0(WRK3),BLK        THIS END OF VERB ?
         BNE   MULTOP              NO, MULTIPE OPERAND.
         MVC   N0(N4,WRK3),CONT    SET UP 'CONT' OPERAND
         LA    WRK3,N4(WRK3)       ADJUST BUFFER ADDRESS       @Z40LPTA
         B     TSTCONT
MULTOP   EQU   *
         LR    WRK4,WRK3           GET OUTPUT BUFFER PTR
         BCTR  WRK4,N0             DECREMENT PTR
         BCTR  WRK4,N0                           BY TWO
         CLI    N0(WRK4),PARA1      THIS LEFT PAREN
         BNE    MULTOP1             NO, CONTINUE
         MVC    N0(N8,WRK4),N1(WRK4) YES, DELETE RIGHT PAREN
         MVC    N1(N6,WRK4),N2(WRK4) DELETE RIGHT PAREN
         LR     WRK3,WRK4           RE-SET OUTPUT BUFFER PTR
MULTOP1  EQU    *
         CLI   N6(WRK3),ZERO       AREA ID SPECIFIED ?
         BNE   MOVEND              YES
         MVI   N6(WRK3),ASTRICK    NO, SET SPECIAL FILLER
MOVEND   EQU   *
         MVC   N7(N6,WRK3),PCCONT  MOVE IN ' ),CONT'
         LA    WRK3,N13(WRK3)      ADJUST BUFFER ADDRESS       @Z40LPTA
TSTCONT  EQU   *
         TM    XASSDS,XASSDS6      ARE WE PROCESSING CONT NOW
         BNO   SETRCT              NO, ISSUE FIRST MR
         XC    XASPLS3,XASPLS3     CLEAR INTERNAL FLAGS        @Z40LPTA
         NI    XASSDS,TF-XASSDS6   CLEAR 'CONT' INDICATOR
* SET UP TO BLANK OUT THE OUTPUT BUFFER, SO IT CAN BE RE
* INITIALIZED WITH THE REMAINING RCT ENTRIES.
*
         SR    WRK4,WRK4           ZERO LENGTH REG
         IC    WRK4,XASAVLEN       GET OUTPUT LENGTH
         L     WRK3,XASAVBUF       GET BUFFER ADDRESS
         B     BUILDL2             START RE-SCAN
SETRCT   EQU   *
         L     RCTR,UCMRCT         RCT TABLE ADDRESS
         LA    RCTR,N0(RCTR)       CLEAR HI-BYTE
         B     DISPLAY             PROCESS THIS BUFFER
         EJECT
***
***  FIND AND SET BASE FOR UCM ENTRY - INPUT - WRK1 CONTAINS CONSOLE ID
***                                  - OUTPUT - UCM ENTRY SPECIFIED BY
*                                              ID IN ENTR REG
*                                                                     *
FINDUCME EQU   *
         L     ENTR,UCMVEA         FIRST ENTRY FROM UCM
         BCTR  WRK1,N0             SUBRRACT ONE FROM CONSOLE ID
         M     WRK0,UCMVEZ         MULIPLY ENTRY SIZE BY REDUCED ID
         AR    ENTR,WRK1           ADDRESS OF DESIRED UCM ENTRY
         BR    BALR                RETURN FROM SUBROUTINE
         SPACE 2
***      SET NO STORAGE CODE IN XSA                              Y02669
*****************************************************************
ERROR2   MVI   XAE,NCERROR         MESSAGE CODE FOR IEE931I      Y02669
         LR    WRK6,LSTR           ADDRESS OF 'REF ' IN BUFFER   Y02669
         B     ERROR               GO FINISH MSG INTERFACE       Y02669
         SPACE 2
***      SET INVALID OPERAND CODE IN XSA                         Y02669
*****************************************************************
ERROR1   EQU   *
         MVI   XAE,IOERROR         ERROR CODE FOR INVALID OPERAND
         LR    WRK6,LSTR           ADDRESS OF INVALID OPERAND
         SPACE 2
***                                                              Y02669
***      SET SECONDARY MESSAGE CODE IN XSA                       Y02669
***                                                              Y02669
ERROR    EQU   *
         CLI   XAE,LIERROR         IS THIS AN INVALID L OPERAND MSG
         BE    EXIT                BRANCH YES TO MSG MODULE
         ST    WRK6,XASTSAVE       STORE ADDRESS OF INVALID OPERAND
         CLI   XAE,KERROR          IS THIS A K ERROR MSG
         BNE   EXIT                BRANCH NO TO MSG MODULE
         MVI   XASTSAVE,NONCRT     SET SECONDARY ERROR CODE FOR MSG
         SPACE 2
***                                                              Y02669
***      EXIT TO MR MESSAGE MODULE 1     IEE5603D                Y02669
***                                                              Y02669
EXIT     EQU   *
         NI    XASSDS,XFF-XASSDS5  TURN OFF LOCK FLAG TO AVOID   Y02651
*                                  FALSE INDICATION TO IEE5603D  Y02651
*                                  THAT LOCKS ARE HELD           Y02651
         L     LNKR,MSGL1          ADDRESS OF MSG MODULE         Y02669
         BR    LNKR                BRANCH TO IEE5603D            Y02669
     EJECT
******************************************************************
***      GETLOCK ROUTINE.                                      @Y02668P
***      ACQUIRES LOCAL AND CMS LOCKS,IF NOT ALREADY HELD.     @Y02668P
******************************************************************
     SPACE 2
GETLOCK  TM    XASSDS,XASSDS5      LOCKS ALREADY HELD?         @Y02668P
         BO    LOKSHELD            YES, DON'T REACQUIRE        @Y02668P
         STM   LSTR,RETR,XASAVLOC  SAVE REGS ACROSS SETLOCKS   @Y02668P
SETLOCK1 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                @Y02668PX
               RELATED=(RCT,IEE6403D(CLRLOCK1))                @Y02668P
SETLOCK2 SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                  @Y02668PX
               RELATED=(RCT,IEE6403D(CLRLOCK2))                @Y02668P
         LM    LSTR,RETR,XASAVLOC  RESTORE SAVED REGS          @Y02668P
         OI    XASSDS,XASSDS5      SET LOCKS HELD SWITCH       @Y02668P
LOKSHELD BR    LNKR                RETURN TO CALLER            @Y02668P
         SPACE 2
******************************************************************
***      CLRLOCK ROUTINE. RELEASES CMS AND LOCAL LOCKS,IF HELD.@Y02668P
******************************************************************
         SPACE
CLRLOCK  TM    XASSDS,XASSDS5      LOCKS HELD?                 @Y02668P
         BZ    N0(LNKR)            NO,RETURN TO CALLING ROUTINE@Y02668P
         STM   LSTR,RETR,XASAVLOC  SAVE REGS ACROSS SETLOCKS   @Y02668P
CLRLOCK2 SETLOCK RELEASE,TYPE=CMS,                             @Y02668PX
               RELATED=(RCT,IEE6403D(SETLOCK2))                @Y02668P
CLRLOCK1 SETLOCK RELEASE,TYPE=LOCAL,                           @Y02668PX
               RELATED=(RCT,IEE6403D(SETLOCK1))                @Y02668P
         LM    LSTR,RETR,XASAVLOC  RESTORE SAVED REGS          @Y02668P
         NI    XASSDS,XFF-XASSDS5  TURN OFF LOCKS HELD SWITCH  @Y02668P
         BR    LNKR                RETURN TO CALLING ROUTINE   @Y02668P
         SPACE 2
*****************************************************************
BLI      MVC   N1(N0,WRK3),N0(WRK3)  USED TO BLANK INST LINE
PARMOVE2 MVC   N3(N0,WRK4),N4(WRK4) ELIMINATE PARENTHSIS
PARMOVE1 MVC   N0(N0,WRK4),N1(WRK4) ELIMINATE PARENTHSIS
         EJECT
********                                                              *
******** CONSTANT USED BY ROUTINE                                     *
********                                                              *
REF      DC    C'REF '             REFERENCE VERB
CONSOLES DC    C'CONSOLES'         CONSOLES OPERAND IN RCT IS O
D3850    DC    C'3850'             D 3850 OPERAND IN RCT IS 3  @Z40LPTA
DUMP     DC    C'DUMP'             D DUMP OPERAND IN RCT IS P  @G33CPMR
CONT     DC    C'CONT'             CONTINUATION OPERAND        @Z40LPTA
PCCONT   DC    C'),CONT'           CONTINUATION + DELIMITER    @Z40LPTA
IEE      DC    C'IEE930I '         MESSAGE ID FOR MSGRT REF CDR
RTVB     DC    C'MR '              MSGRT COMMAND
VERTAB   DC    C'DTK'              VERB TABLE                    Y02669
         DC    X'FF'               END OF VERB TABLE
CLEQUAL  DC    C',L='              L OPERAND
NONE     DC    C'NONE'             NONE OPERAND                  Y02669
MSGL1    DC    V(IEE5603D)         MSG MODULE LOAD ONE           Y02669
DRCODES  DC    X'0800'             DESCRIPTOR CODES
         DC    X'0000'             ROUTING CODES
ONE      DC    H'1'                VALUE ONE
GETAREA  GETMAIN EC,LV=N132,A=EXIT,SP=SUBP,MF=L                @Z40LPTA
PATCH    DC    CL50'***  IEE6403D  PATCH AREA  ***'            @G33CPMR
          TITLE  'TRANSIENT DISPLAY CONTROL MODULE MAP'
         IEETDCM                                                 Y01012
          TITLE 'UNIT CONTROL MODULE MAP'
         IEECUCM  FORMAT=NEW                                     Y02669
          TITLE 'CVT MAP'
DCVT     DSECT
         CVT
          TITLE 'EXTENDED SAVE AREA (XSA) MAP'
DXSA     DSECT
         IEEXSA
         SPACE 2
***************************************************************@Z40LPTA
*        THE FOLLOWING FIELDS ARE USED ONLY BY THIS MODULE,    @Z40LPTA
*        AS A STORAGE AREA FOR DATA PERTINENT TO THIS MODULES  @Z40LPTA
*        FUNCTION ONLY.                                        @Z40LPTA
         ORG   XASAVSTD                                        @Z40LPTA
XASAVBUF DS    F                   TEXT BEGINNING ADDRESS      @Z40LPTA
XASAVEND DS    F                   TEXT END ADDRESS            @Z40LPTA
XASAVLEN DS    X                   TEXT LENGTH                 @Z40LPTA
IEE6403D  TITLE 'ROUTE CONTROL TABLE MAP'
DSTRCT   DSECT                                                   Y02669
         IEECVMAP RCT
          TITLE 'PREFIX STORAGE AREA MAP'
         IHAPSA
         END
