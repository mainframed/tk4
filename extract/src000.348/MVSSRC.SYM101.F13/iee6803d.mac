         TITLE 'IEE6803D SVC 34 K A COMMAND LOAD 2'
***********************************************************************
*                                                                     *
* MODULE NAME         =  IEE6803D                               Y02669*
*                                                                     *
* DESCRIPTIVE NAME    =  CONTROL (K) A COMMAND                  Y02669*
*                                                                     *
* COPYRIGHT           =  N/A                                    Y02669*
*                                                                     *
* STATUS              =  01 - UPDATE FOR VS/2 RELEASE 3       @ZA06992*
*                                                                     *
* FUNCTION            =  HANDLES K A,NN,NN...CONTROL COMMAND.   Y02669*
*                        ALSO REFERRED TO AS K A,LL,LL...
*                                                                     *
*   OPERATION         =  BASED ON THE TARGET CONSOLE ID IN      Y02669*
*                        XASCID, ADDRESSABILITY TO THE UCME,    Y02669*
*                        DCM, AND SACB IS ESTABLISHED. IF THE   Y02669*
*                        TARGET IS MESSAGE STREAM ONLY,         Y02669*
*                        'IEE926I OUTPUT ONLY' IS ISSUED.       Y02669*
*                                                                     *
*                        NEXT THE 'NN' OPERANDS ARE VALIDITY    Y02669*
*                        CHECKED. IF ANY IS NOT A DIGIT,        Y02669*
*                        'IEE156I INVALID OPERAND' IS ISSUED.   Y02669*
*                                                                     *
*                        THE DIGITS ARE THEN PACKED AND         Y02669*
*                        CONVERTED TO BINARY.  IF ANY OF THE    Y02669*
*                        AREA DEFINITIONS IS GREATER THAN THE   Y02669*
*                        TOTAL SCREEN SIZE, 'IEE924I SCREEN     Y02669*
*                        SIZE EXCEEDED' IS ISSUED.              Y02669*
*                        IF ANY VALUE IS LESS THAN THE SMALLEST Y02669*
*                        POSSIBLE AREA SIZE, 'IEE924I AREA TOO  Y02669*
*                        SMALL' IS ISSUED.                      Y02669*
*                        IF THE TOTAL OF THE AREA DEFINITIONS   Y02669*
*                        IS GREATER THAN THE SCREEN SIZE        Y02669*
*                        'IEE914I SCREEN SIZE EXCEEDED' IS      Y02669*
*                        ISSUED.                                Y02669*
*                                                                     *
*                        IN ALL OF THE ABOVE CASES, NONE OF THE Y02669*
*                        AREA DEFINITIONS ARE ACCEPTED.         Y02669*
*                                                                     *
*                        NEXT THE SACB CHAIN IS EXAMINED TO SEE Y02669*
*                        IF ANY AREAS ARE PRESENTLY DEFINED.    Y02269*
*                        IF SO, THEY CAN ONLY BE REDEFINED IF   Y02669*
*                        THEY CONTAIN NO DISPLAY OR ARE         Y02669*
*                        LOCATED ABOVE THE HIGHEST AREA         Y02669*
*                        CONTAINING A DISPLAY. IF THERE IS A    Y02669*
*                        DISPLAY IN ONE OF THE AREAS AND        Y02669*
*                        THE NEW DEFINITION IS A DIFFERENT      Y02669*
*                        LENGTH, 'IEE924I DISPLAY IN OR ABOVE   Y02669*
*                        AREA' IS ISSUED.                       Y02669*
*                                                                     *
         EJECT
*                        GETMAINING THE AREA NEEDED FOR ALL     Y02669*
*                        THE SACB'S (SCREEN AREA CONTROL BLOCK) Y02669*
*                        THE SACB CHAIN IS BUILT AND            Y02669*
*                        INITIALIZED.                           Y02669*
*                        EACH SACB IS MARKED IN USE             Y02669*
*                            DCMASACB - DCMAUSE  X'80'          Y02669*
*                        IF THE GETMAIN FAILS FOR THE SACB'S,   Y02669*
*                        'IEE937I INSUFFICIENT STORAGE FOR      Y02669*
*                        COMMAND' IS ISSUED.                    Y02669*
*                                                                     *
*                        FINALLY A GETMAIN IS ISSUED FOR        Y02669*
*                        'IEE928I'. IF IT FAILS CONTROL IS      Y02669*
*                        RETURNED TO THE SYSTEM WITH A NON-ZERO Y02669*
*                        REG 15. IF SUCCESSFUL, A WTO IS        Y02669*
*                        ISSUED, THE CORE FREED, AND CONTROL    Y02669*
*                        RETURNED.                              Y02669*
*                                                                     *
* NOTES                  FOR FUTURE SCREEN SIZES:               Y02669*
*                        THIS MODULE WILL HAVE DIFFICULTIES IF  Y02669*
*                        AN ATTEMPT IS MADE TO DEFINE MORE THAN Y02669*
*                        12 AREAS OR 48 LINES. THE MESSAGE      Y02669*
*                        BUFFER FOR 'IEE928I' CAN NOT           Y02669*
*                        ACCOMMODATE MORE THAN 13 AREAS.        Y02669*
*                                                                     *
*   CHARACTER-CODE                                              Y02669*
*    DEPENDENCIES     =  ANY CHARACTER CODE OTHER THAN EBCDIC   Y02669*
*                        WILL REQUIRE REASSEMBLY OF THIS MODULE.Y02669*
*                        NOTE THAT THIS MODULE IS DEPENDENT     Y02669*
*                        UPON THE CHARACTER REPRESENTATION      Y02669*
*                        OF THE DECIMAL DIGIT IE. X'F1' = 1.    Y02669*
*                                                                     *
*   DEPENDENCIES      =  IEE6703D WILL ISSUE ERROR MESSAGE      Y02669*
*                        'IEE925I FOR CRT ONLY', IF TARGET      Y02669*
*                        CONSOLE IS NOT A CRT.                  Y02669*
*                                                                     *
*   RESTRICTIONS      =  THE TARGET CONSOLE MUST BE CRT.        Y02669*
*                        (VERIFIED IN IEE6703D)                 Y02669*
*                        TARGET CONSOLE CAN NOT BE MESSAGE      Y02669*
*                        STREAM ONLY.                           Y02669*
*                        'NN' MUST BE A DIGIT.                  Y02669*
*                                                                     *
*   REGISTER                                                    Y02669*
*    CONVENTIONS      =  NONE                                   Y02669*
*                                                                     *
*   PATCH-LABEL       =  PATCH                                  Y02669*
*                                                                     *
* MODULE TYPE         =  CSECT                                  Y02669*
*                                                                     *
*   PROCESSOR         =  N/A                                    Y02669*
*                                                                     *
*   MODULE SIZE       =  X'3C0' + X'48' PATCH AREA              Y02669*
*                                                                     *
*   ATTRIBUTES        =  REFRESHABLE, REENTRANT, SUPERVISOR     Y02669*
*                        MODE, KEY 0, PAGED LPA                 Y02669*
*                                                                     *
* ENTRY POINT         =  IEE6803D FROM IEE6703D                 Y02669*
*   PURPOSE           =  TO PROCESS THE K A,NN,NN COMMAND       Y02669*
*   LINKAGE           =  BRANCH                                 Y02669*
*   INPUT DATA        =  REG 2 POINTS TO THE XSA                Y02669*
*                          XAS CONTAINS L=CCA INFORMATION       Y02669*
*                             XASSDS5 ON - LOCKS HELD           Y02651*
*                          XAL ADDRESSES OPERAND BUFFER         Y02669*
*                     =  REG 14 CONTAINS THE RETURN ADDRESS     Y02669*
*                                                                     *
*   REGISTERS SAVED   =  REG 14 IS SAVED IN XSA (XAP)           Y02669*
*                        REGISTERS 11-14 ARE SAVED BEFORE       Y02651*
*                        ISSUING SETLOCK AT ZAPSACB.            Y02651*
*                                                                     *
*   REGISTER CONTENTS                                           Y02669*
*    DURING PROCESSING=  R0  - WORK REG                         Y02669*
*                        R1  - WORK REG                         Y02669*
*                        R2  - BASE REG FOR XSA                 Y02669*
*                        R3  - WORK REG                         Y02669*
*                        R4  - WORK REG & OPERAND POINTER       Y02669*
*                        R5  - WORK REG                         Y02669*
*                        R6  - WORK REG                         Y02669*
*                        R7  - BASE REG FOR SACB                Y02669*
*                        R8  - BASE REG FOR UCME                Y02669*
*                        R9  - WORK REG                         Y02669*
*                        R10 - BASE REG FOR RESIDENT DCM        Y02669*
*                        R11 - BRANCH REG FOR SUBROUTINE        Y02669*
*                        R12 - BASE REG UCM                     Y02669*
*                        R13 - BASE REG FOR MODULE              Y02669*
*                        R14 - SUBROUTINE AND MODULE RETURN REG Y02669*
*                        R15 - CODE REG                         Y02669*
*                                                                     *
*   REGISTERS RESTORED=  REGISTER 14 RESTORED AT BRANCH14       Y02669*
*                        REGISTERS 11-14 ARE RESTORED AFTER     Y02651*
*                        ISSUING SETLOCK AT ZAPSACB.            Y02651*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
* EXIT - NORMAL       =  RETURN VIA BR 14                       Y02669*
*   CONDITIONS        =  FOR K A,LL,LL...                       Y02669*
*   OUTPUT DATA       =  TARGET CONSOLE'S SACBS ARE UPDATED AND Y02669*
*                        UPDATED STATUS INFORMATION OF SACB     Y02669*
*                        BLOCKS IS ISSUED TO SOURCE CONSOLE     Y02669*
*                        DEVICE VIA WTO 'IEE928I'.              Y02669*
*   RETURN CODES      =  NONE                                   Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
* EXIT - ERROR        =  BRANCH TO IEE5603D FROM ERRORMSG       Y02669*
*   CONDITIONS        =  TO ISSUE ERROR MESSAGES                Y02669*
*   OUTPUT DATA       =  REG 2 POINTS TO XSA                    Y02669*
*                           XAE CONTAINS MAJOR MESSAGE INDEX    Y02669*
*                             X'04' - IEE156I INVALID OPERAND   Y02669*
*                             X'0A' - IEE924I INVALID AREA      Y02669*
*                                             DEFINITION        Y02669*
*                             X'0C' - IEE926I OPERAND INVALID   Y02669*
*                             X'0E' - IEE928I INSUFFICIENT      Y02669*
*                                          STORAGE FOR COMMAND  Y02669*
*                           XASTSAVE POINTS TO INVALID OPERAND  Y02669*
*                           OR CONTAINS MINOR MESSAGE INDEX     Y02669*
*                            IEE924I INVALID AREA DEFINITION    Y02669*
*                             X'0F' - SCREEN SIZE EXCEEDED      Y02669*
*                             X'10' - AREA TOO SMALL            Y02669*
*                             X'11' - DISPLAY IN OR ABOVE AREA  Y02669*
*                            IEE926I OPERAND INVALID            Y02669*
*                             X'1D' - OUTPUT ONLY               Y02669*
*                           XASSDS5 STILL ON LOCKS HELD         Y02651*
*   RETURN CODES      =  NONE                                   Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
* EXIT - ERROR        =  RETURN VIA BR 14 FROM RETURN           Y02669*
*   CONDITIONS        =  IF GETMAIN FAILS FOR MESSAGE BUFFER    Y02669*
*   OUTPUT DATA       =  LOCKS RELEASED BEFORE GETMAIN          Y02651*
*                        REG 2 POINTS TO XSA                    Y02669*
*                           XASSDS5 TURNED OFF - LOCKS RELEASED Y02651*
*   RETURN CODES      =  REG 15 NON-ZERO                        Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
* EXTERNAL REFERENCES                                           Y02669*
*                                                                     *
*   ROUTINES          =  IEE5603D                               Y02669*
*                                                                     *
*   DATA AREAS        =  NONE                                   Y02669*
*                                                                     *
*   CONTROL BLOCKS    =  IEECUCM   R - ADDRESS DCM              Y02669*
*                        IEEXSA    R - INPUT                    Y02669*
*                                  W - ERROR CODES              Y02669*
*                        IEERDCM   G - WHEN AREA DEFINED        Y02669*
*                         (SACB)   R - CHECK STATUS             Y02669*
*                                  W - INITIALIZE AND CHAIN     Y02669*
*                        CVT       R - ADDRESS UCM              Y02669*
*                        IHAPSA    NECESSARY FOR SETLOCK        Y02651*
*                        IEFPTRS   GET ADDRESS OF TCB & ASCB    Y02651*
*                                                                     *
*   TABLES            =  INTERNAL TABLE OF SACB ID'S  (A-K)     Y02669*
*                                                                     *
*   MACROS            =  GETMAIN   FOR SACB FROM SUBPOOL 241    Y02651*
*                                  (BRANCH ENTRY)               Y02651*
*                                  FOR WTO FROM SUBPOOL 229     Y02669*
*                        FREEMAIN  FOR WTO FORM SUBPOOL 229     Y02669*
*                        WTO                                    Y02669*
*                        MODID                                  Y02669*
*                        SETLOCK   CMS AND LOCAL LOCKS RELEASED Y02651*
*                                                                     *
*   LOCKS HELD        =  CMS AND LOCAL LOCKS OBTAINED IN        Y02651*
*                        IEE7503D ARE RELEASED AND XASSDS5      Y02651*
*                        IS RESET BEFORE ISSUING GETMAIN FOR    Y02651*
*                        'IEE928I' AT ZAPSACB.                  Y02651*
*                                                                     *
*   CHANGE LEVEL      =  Y02669                                 Y02669*
*                        Y02651                                 Y02651*
*                        YM1912                                 YM1912*
*                        ZA06491                              @ZA06491*
*                        ZA06692                              @ZA06692*
*                                                                     *
* MESSAGES            =  THE FOLLOWING MESSAGE IS CONTAINED IN  Y02669*
*                        AND ISSUED FROM THIS MODULE:           Y02669*
*                                                                     *
*                        IEE928I DISPLAY AREA ID'S FOR CONSOLE  Y02669*
*                                'CC' ARE  '...'                Y02669*
*                                                                     *
*                        THE FOLLOWING MESSAGES ARE CONTAINED   Y02669*
*                        IN AND ISSUED FROM IEE5603D AND        Y02669*
*                        IEE5903D:                              Y02669*
*                                                                     *
*                         MSGID  CODE  IN MESSAGE TEXT          Y02669*
*                         _____  ____  __ ____________          Y02669*
*                        IEE156I X'04' 56 INVALID OPERAND       Y02669*
*                        IEE924I X'0A' 56 INVALID AREA          Y02669*
*                                            DEFINITION         Y02669*
*                                X'0F' 59 SCREEN SIZE EXCEEDED  Y02669*
*                                X'10' 59 AREA TOO SMALL        Y02669*
*                                X'11' 59 DISPLAY IN OR ABOVE   Y02669*
*                                            AREA               Y02669*
*                        IEE926I X'0C' 56 OPERAND INVALID       Y02669*
*                                X'1D' 59 OUTPUT ONLY           Y02669*
*                        IEE928I X'0E' 56 INSUFFICIENT STORAGE  Y02669*
*                                            FOR COMMAND        Y02669*
*                                                                     *
* SYSGEN              =  INCLUDE WITH SVC IN LOAD               Y02669*
*                        MODULE IGC003D,DLIB AOSB3,             Y02669*
*                        MACRO SGIEF441, TARGLIB LPALIB         Y02669*
*                                                                     *
* SYSTEM LIBRARIES    =  NONE                                   Y02669*
*                                                                     *
***********************************************************************
         EJECT
IEE6803D CSECT
* A INCORE                                                     @ZA06491
* C FREEXTRA                                                   @ZA06491
* D ZAPSACB                                                    @ZA06491
* A SACBINIT                                                   @ZA06491
* C FREESACB                                                   @ZA06491
* A NEXTSACB                                                   @ZA06992
***********************************************************************
*                                                                     *
*                             REGISTERS                               *
*                                                                     *
***********************************************************************
R0       EQU   0                   WORK REG
R1       EQU   1                   WORK REG
PARMREG  EQU   2                   BASE REG FOR XSA
R3       EQU   3                   WORK REG
R4       EQU   4                   WORK REG
KOPS     EQU   4                   OPERAND POINTER
R5       EQU   5                   WORK REG
R6       EQU   6                   WORK REG
SACBPT   EQU   7                   SACB BASE REG
UCMEBASE EQU   8                   UCME BASE REG
R8       EQU   8                   PART OF EVEN-ODD PAIR         Y02669
R9       EQU   9                   PART OF EVEN-ODD PAIR         Y02669
RDCMBASE EQU   10                  RESIDENT DCM BASE REG
RB       EQU   11                  SUBROUTINE BRANCH REG
UCMBASE  EQU   12                  UCM BASE REG
MYBASE   EQU   13                  MODULE BASE REG
RETURN14 EQU   14                  SUBROUTINE RETURN REG         Y02669
R15      EQU   15                  CODE REG                      Y02669
         EJECT
***********************************************************************
*                                                                     *
*                      MESSAGE FLAG BIT SETTINGS                      *
*                                                                     *
***********************************************************************
IEE156I  EQU   X'04'               MAJOR - INVALID OPERAND
IEE924   EQU   X'0A'               MAJOR - INVALID AREA DEFINITION
IEE924I  EQU   X'11'                 DISPLAY IN OR ABOVE AREA
IEE924I2 EQU   X'10'                 AREA TOO SMALL
IEE924I3 EQU   X'0F'                 SCREEN SIZE EXCEEDED
IEE926I  EQU   X'0C'               MAJOR - OPERAND INVALID
IEE926   EQU   X'1D'                 OUTPUT ONLY                 Y02669
IEE931I  EQU   X'0E'               MAJOR - INSUF. STOR. FOR CMD
***********************************************************************
*                                                                     *
*                       EQUATES                                       *
*                                                                     *
***********************************************************************
N0       EQU   0                   FIELD INCREMENT
N1       EQU   1                   FIELD INCREMENT
N2       EQU   2                   FIELD INCREMENT
N3       EQU   3                   FIELD INCREMENT
N4       EQU   4                   FIELD INCREMENT
N6       EQU   6                   FIELD INCREMENT
N7       EQU   7                   FIELD INCREMENT
N8       EQU   8                   FIELD INCREMENT
N10      EQU   10                  FIELD INCREMENT               Y02669
N12      EQU   12                  FIELD INCREMENT               Y02669
N26      EQU   26                  FIELD INCREMENT
N42      EQU   42                  FIELD INCREMENT
N49      EQU   49                  FIELD SIZE
N80      EQU   80                  FIELD SIZE
***********************************************************************
*                                                                     *
*                        CHARACTER CONSTANTS                          *
*                                                                     *
***********************************************************************
BLANK    EQU   C' '                BLANK CHARACTER CONSTANT
COMMA    EQU   C','                COMMA CHARACTER CONSTANT
ZERO     EQU   X'00'               ZERO CHARACTER CONSTANT
XFF      EQU   X'FF'               MASK FOR NI                   Y02651
SIGN     EQU   X'FC'               USED TO CONVERT F TO C FOR CVB
DIGIT    EQU   X'F0'               DIGIT CHAR REPRESENTATION     Y02669
MCSMASK  EQU   X'41'               WTO MCS FLAGS
PTRCVT   EQU   16                  CVT ADDRESS
SP241    EQU   241                 SUBPOOL FOR SACB              Y02651
SP229    EQU   229                 SUBPOOL FOR MESSAGE           Y02651
         EJECT
***********************************************************************
*                                                                     *
*          ESTABLISH ADDRESSABILITY FOR MODULE AND                    *
*              BASE REGS FOR UCM, UCME, DCM, SACB                     *
*        ON ENTRY, REGISTER 2 CONTAINS ADDRESS OF XSA                 *
*                                                                     *
***********************************************************************
         BALR  MYBASE,N0           ESTABLISH ROUTINE 'S
         USING *,MYBASE            BASE REGISTER
         MODID BRANCH=YES                                        Y01886
         USING FAUXSA,PARMREG      ESTABLISH XSA ADDRESSABILITY
         L     UCMBASE,PTRCVT      GET CVT ADDRESS               Y02669
         USING CVTSECT,UCMBASE     BASE CVT REG
         L     UCMBASE,CVTCUCB     GET UCM POINTER FROM CVT
         DROP  UCMBASE                                           Y02669
         USING UCM,UCMBASE         ESTABLISH UCM ADDRESSABILITY  Y02669
         USING UCMLIST,UCMEBASE    BASE UCM ENTRY LIST
         USING DCMTSRT,RDCMBASE    ESTABLISH RDCM BASE REG       Y02669
         USING DCMACB,SACBPT       BASE SACB REG
         SPACE 3
         ST    RETURN14,XAP        SAVE RETURN POINTER           Y02669
         EJECT
***********************************************************************
*                                                                     *
*    FIND AND BASE UCM ENTRY RESIDENT DCM AND SACB                    *
*    INPUT- REG 1-CONSOLE ID RIGHT JUSTIFIED, HIGH ORDER BYTES ZERO   *
*    OUTPUT-POINTER TO UCMENTRY SPECIFIED BY CONSOLE ID IN UCMEBASE   *
*    REG USAGE-DESTROYS CONTENTS OF: REG 0,1,UCMEBASE                 *
*                                                                     *
* NOTE: IEE7503D INSURES THAT THE TARGET CONSOLE IS A CRT.            *
***********************************************************************
         SPACE 2
         SR    R1,R1               CLEAR REG
         IC    R1,XASCID           LOAD TARGET CONSOLE ID        Y02669
         BCTR  R1,ZERO             SUBTRACT ONE FROM CONSOLE ID
         L     UCMEBASE,UCMVEA     POINT TO FIRST UCME ENTRY
         M     R0,UCMVEZ           MULTIPLY ENTRY SIZE BY REDUCED ID
         AR    UCMEBASE,R1         POINT TO DESIRED UCM ENTRY
         L     RDCMBASE,UCMXB      LOAD ADDRESS OF RESIDENT DCM
         L     SACBPT,DCMADSDS     LOAD SACB POINTER FROM RDCM
***********************************************************************
*                                                                     *
*           IF TARGET IS MESSAGE STREAM = IEE926I                Y02669
*                                                                     *
***********************************************************************
         L     KOPS,XAL            LOAD POINTER TO OPERANDS      Y02669
         LA    KOPS,N0(KOPS)       CLEAR HI ORDER BYTE           Y02669
         TM    UCMDISP,UCMDISPF    IS IT A MSG STREAM CONSOLE?
         BO    MSGSTRM             YES, INVALID TARGET           Y02669
         EJECT
***********************************************************************
*                                                                     *
*               PRIME REGS FOR NN SYNTEX CHECKING                Y02669
*    ON ENTRY K A,DIGIT HAS BEEN VALIDITY CHECKED                Y02669
*                                                                     *
*    NOTE: DIGITS CAN BE ONLY 1 OR 2 DIGITS LONG, RANGING FROM 4 Y02669
*          TO MESSAGE AREA SIZE IN VALUE                         Y02669
*          2260 - 8; 2250 - 63                                   Y02669
*    ERR - IEE156I INVALID OPERAND - IF DIGIT INVALID            Y02669
*                                                                     *
***********************************************************************
         SPACE 2
         SR    R0,R0               CLEAR REG FOR TOTAL COUNTER   Y02669
         SR    R1,R1               CLEAR REG FOR NUMBER OF AREAS Y02669
         LA    R6,XASAVSTD         GET ADDR OF SAVE LENGTHS AREA Y02669
         LA    KOPS,N2(KOPS)       BUMP POINTER BEYOND COMMA     Y02669
         ST    KOPS,XASAVLOC       SAVE OP PTR FOR IEE924I(ERROR)Y02669
LLLOOP   EQU   *
         XC    XAX(N8),XAX         CLEAR PACKING AREA            Y02669
         TM    N0(KOPS),DIGIT      IS 1ST CHAR A DIGIT?          Y02669
         BNO   BADKOP              NO - IEE156I INVALID OPERAND
         CLI   N1(KOPS),BLANK      IS 2ND CHAR A BLANK?
         BE    ONEDIGIT            NO, 1 DIGIT LENGTH
         CLI   N1(KOPS),COMMA      IS 2ND CHAR A COMMA?
         BE    ONEDIGIT            YES, 1 DIGIT LENGTH
         TM    N1(KOPS),DIGIT      IS 2ND CHAR A DIGIT?
         BNO   BADKOP              NO, IEE156I INVALID OPERAND
         CLI   N2(KOPS),BLANK      IS 3RD CHAR A BLANK?
         BE    TWODIGIT            NO, 2 DIGIT LENGTH
         CLI   N2(KOPS),COMMA      IS 3RD CHAR A COMMA?
         BE    TWODIGIT            YES, 2 DIGIT LENGTH
         B     BADKOP              NO, IEE156I INVALID OPERAND
         EJECT
***********************************************************************
*                                                                     *
*                  PACK AND CONVERT TO BINARY                         *
*     BUMP OPERAND POINTER TO CHARACTER FOLLOWING LAST VALID DIGIT    *
*                                                                     *
***********************************************************************
ONEDIGIT EQU   *
         MVC   XAX+N7(N1),N0(KOPS) MOVE THE DIGIT                Y02669
         LA    KOPS,N1(KOPS)       BUMP POINTER TO NEXT NN
         B     GOPACK              GO PACK IT
TWODIGIT EQU   *
         MVC   XAX+N6(N2),N0(KOPS) MOVE THE DIGIT                Y02669
         LA    KOPS,N2(KOPS)       BUMP POINTER TO NEXT NN
GOPACK   EQU   *
         PACK  XAX+N4(N4),XAX+N4(N4)  PACK NUMBER                Y02669
         NI    XAX+N7,SIGN         CONVERT FOX TO CHARLIE        Y02669
         SR    R5,R5               CLEAR REG                     Y02669
         CVB   R5,XAX              CONVERT IT TO A BINARY NUMBER Y02669
***********************************************************************
*                                                                     *
*    IF NUMBER GREATER THAN MSG AREA = IEE924I - SCREEN SIZE EXCEEDED *
*    IF NUMBER LESS THAN FOUR = IEE924I - AREA TOO SMALL              *
*    IF TOTAL NUMBER GREATER THAN MSG AREA = IEE924I - AREA TOO SMALL *
*                                                                     *
***********************************************************************
         CH    R5,DCMRMSAL         IS NN GREATER THAN MSG AREA?
         BH    TOOBIG              YES-IT'S AN ERROR             Y02669
         CH    R5,FOUR             IS IT LESS THAN FOUR?         Y02669
         BL    TOOSMALL            YES--IT'S AN ERROR            Y02669
         AR    R0,R5               ADD TO LINE COUNTER
         CH    R0,DCMRMSAL         DOES LINE COUNT EXCEED MAX. NUMBER?
         BH    TOOBIG              YES--IT'S AN ERROR            Y02669
         STC   R5,N0(R6)           SAVE AREA LENGTH
         LA    R6,N1(R6)           BUMP LENGTH SAVE AREA POINTER
         LA    R1,N1(R1)           BUMP AREA COUNTER
         CLI   N0(KOPS),BLANK      ANY MORE DIGITS?
         BE    NOMORELL            NO                            Y02669
         CLI   N0(KOPS),COMMA      NEXT CHAR COMMA?              Y02669
         BNE   BADKOP              NO, IEE156I                   Y02669
         LA    KOPS,N1(KOPS)       BUMP POINTER BEYOND COMMA     Y02669
         B     LLLOOP              CHECK NEXT OPERAND            Y02669
         EJECT
NOMORELL EQU   *
         LTR   SACBPT,SACBPT       ANY SACB'S DEFINED?
         BZ    ENDLL               NO - SKIP NEXT 2 LOOPS
         SPACE 2
***********************************************************************
*                                                                     *
*    THE FOLLOWING CODE CHECK THAT SACBS ARE REDEFINED ONLY           *
*    IF THERE IS NO DISPLAY IN OR ABOVE AREAS                         *
*    IF SACB HAS DIFFERENT LENGTH THAN THE REDEFINITION LENGTH   Y02669
*    ERR - IEE924I DISPLAY IN OR ABOVE AREA                      Y02669
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R6,XASAVSTD         GET POINTER TO AREA LENGTHS   Y02669
TSTNXTBL EQU   *
         CLC   DCMAID(N1),DCMTOPDS IS BLOCK ABOVE USED AREA?     Y02669
         BH    BUMP                NO - COMPARE LENGTHS          Y02669
COMPLL   EQU   *
         CLC   DCMALN+N1(N1),N0(R6) YES- ARE LENGTHS THE SAME?   Y02669
         BNE   ERROR               IF NOT THE SAME IT'S AN ERROR
BUMP     EQU   *
         ICM   SACBPT,N7,DCMACBNX+1   IS THERE ANOTHER AREA?     Y02669
         BZ    ENDLL               NO, LAST SACB INSPECTED
         LA    R6,N1(R6)           BUMP LENGTHS POINTER          Y02669
         B     TSTNXTBL            DECRE PTR AND CHK NEXT BLOCK  Y02669
         EJECT
***********************************************************************
*    ALL THE SACBS HAVE BEEN INSPECTED- INITIALIZE TO DESIRED LENGTH  *
*    PRIME POINTERS TO ID TABLE, SACB CHAIN START AND LOAD SIZE OF    *
*    SCREEN                                                           *
***********************************************************************
ENDLL    EQU   *
         LA    R3,TABLE            LOAD ADDR OF AREA ID TABLE    Y02669
         LA    R6,XASAVSTD         GET POINTER TO LENGTHS        Y02669
         L     SACBPT,DCMADSDS     GET ADDRESS OF FIRST SACB
         LA    R5,DCMADSDS         SAVE ADDR OF CHAIN ORIGIN     Y02669
         LH    R4,DCMRMSAL         LOAD SIZE OF MSG AREA
         LA    R4,N1(R4)           BUMP IT BY ONE
***********************************************************************
*                                                                     *
*     IF SACB DEFINED AND IN USE, IGNORE IT                           *
*     IF SACB DEFINED AND NOT IN USE, REINITIALIZE IT                 *
*     IF NO SACB IS DEFINED, ISSUE GETMAIN AND INITIALIZE IT          *
*                                                                     *
***********************************************************************
INCORE2  EQU   *
         LTR   SACBPT,SACBPT       ANY AREA DEFINED?
         BZ    GETCORE             NO--GETMAIN MORE SACB'S
         TM    DCMAFLG1,DCMADISP   IS SACB BEING USED?
         BO    NOINIT              YES                           Y02669
         BAL   R15,SACBINIT        GO INITIALIZE SACB            Y02669
         B     INCORE              CONTINUE SACB INITIALIZATION  Y02669
NOINIT   EQU   *                                                 Y02669
         BCTR  R3,N0               DECREMENT TABLE ID POINTER    Y02669
         LA    R6,N1(R6)           INCREMENT LL LENGTH POINTER   Y02669
         SR    R4,R4               INIT STARTING POINT TO
         IC    R4,DCMATOP          CALCULATE TOP ROW NO.
         LR    R5,SACBPT           UPDATE PTR TO PREVIOUS BLOCK  Y02669
INCORE   EQU   *
         MVC   DCMTOPAR,DCMAID        MOVE TOP SACB AREA ID TO @ZA06491
         L     SACBPT,N0(SACBPT)   LOAD ADDR OF NEXT SACB
         BCT   R1,INCORE2          DECR. SACB LL COUNT
FREEXTRA EQU   *                                                 YM1912
         LTR   SACBPT,SACBPT       ARE THERE ANY NOT REDEFINED?  YM1912
         BZ    ALLDONE             NO, OK TO CONTINUE            YM1912
         TM    DCMASACB,DCMAGM     IS IT A GETMAINED SACB?     @ZA06491
         BO    FREESACB            YES, GO FREEMAIN IT         @ZA06491
         XC    DCMACLR(DCMCLRLN),DCMACLR RE-INITIALIZE SACB    @ZA06491
         NI    DCMASACB,XFF-DCMAUSE TURN OFF IN-USE BIT        @ZA06491
         XC    DCMALN(N2),DCMALN   ZERO OUT SACB LENGTH FIELD  @ZA06491
         LR    R5,SACBPT           SAVE PREVIOUS BLOCK PTR     @ZA06491
         L     SACBPT,N0(SACBPT)   LOAD ADDR OF NEXT SACB      @ZA06491
         B     FREEXTRA            LOOP TIL ALL UNUSED ARE FREED YM1912
ALLDONE  EQU   *                                                 Y02669
         LR    SACBPT,R5           RESTORE PT TO LAST BLOCK      Y02669
         B     ZAPSACB
         EJECT
***********************************************************************
*    GET CORE FOR MULTI SACB'S AND INITIALIZE THEM                    *
*    BRANCH ENTRY TO GETMAIN USED SINCE LOCKS NEED TO BE HELD         *
*      REGISTERS DESTROYED: 0, 1, 3, 4, 7, 14, 15                     *
*      INPUT INFORMATION: R4 POINTS TO CURRENT TCB                    *
*                         R7 (SACBPT) POINTS TO CURRENT ASCB          *
***********************************************************************
GETCORE  EQU   *
         ST    R1,XASTSAVE         SAVE SACB COUNT               Y02669
         LA    R9,DCMACBSZ         LOAD BYTE COUNT WANTED        Y02669
         M     R8,XASTSAVE         MULTIPLY SACB COUNT BY SIZE   Y02669
         STM   R3,R4,XASAVLOC      SAVE ACROSS GETMAIN           Y02651
         L     R4,PTRCVT           GET ADDRESS OF CVT            Y02651
         USING CVTSECT,R4          ADDRESSABILITY OF CVT         Y02651
         L     R4,CVTTCBP          GET ADDRESS OF TCBS & ASCBS   Y02651
         DROP  R4                                                Y02651
         USING TCBASCB,R4          ADDRESSABILITY OF IEFPTRS     Y02651
         L     SACBPT,ASCBPTR      ADDRESS OF ASCB FOR INTERFACE Y02651
         L     R4,TCBPTR           ADDRESS OF TCB FOR INTERFACE  Y02651
         GETMAIN RC,LV=(9),SP=SP241,BRANCH=YES                   Y02651
         LTR   R15,R15             TEST RETURN CODE              Y02669
         BNZ   MSG931              ERROR NO CORE                 Y02669
         LM    R3,R4,XASAVLOC      RESTORE AFTER GETMAIN         Y02651
         LR    SACBPT,R1           LOAD ADDR OF SACB CORE        Y02669
         L     R1,XASTSAVE         RESTORE SACB COUNTER          Y02669
         B     INIT3               GO INITIALIZE THEM
         EJECT
INIT2    EQU   *
         LA    SACBPT,DCMACBSZ(SACBPT) BUMP SACB POINTER TO NEXT Y02669
INIT3    EQU   *
         OI    DCMASACB,DCMAGM     SET GETMAINED FLAG BIT IN SACB ON
         BAL   R15,SACBINIT        GO INITIALIZE SACB            Y02669
         BCT   R1,INIT2            CONTINUE SACB INITIALIZATION  Y02669
         SPACE 2
ZAPSACB  EQU   *
         SR    R1,R1               INITIALIZE TO ZERO          @YM2777P
         ST    R1,DCMACBNX         ZERO OUT POINTER-TO-NEXT      Y02669
         EJECT
***********************************************************************
*       GETMAIN CORE FOR AND ISSUE IEE928I
***********************************************************************
         SPACE 2
         STM   RB,RETURN14,XASAVLOC                              Y02651
         SETLOCK RELEASE,TYPE=CMS,RELATED=(K,IEE7503D(LOCKSET))
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(K,IEE7503D(LOCKSET))
         LM    RB,RETURN14,XASAVLOC                              Y02651
         NI    XASSDS,XFF-XASSDS5                                Y02651
         LA    R1,XASAVLOC+N12    GET ADDR OF WHERE TO PUT ADDR  Y02669
         MVC   XASAVLOC(N10),GETAREA     MOVE PARM LIST TO XSA   Y02669
         ST    R1,XASAVLOC+N4     WHERE TO PUT ADDR FOR GETMAIN  Y02669
         LA    R1,XASAVLOC        ADDR OF PARM LIST FOR GETMAIN  Y02669
         GETMAIN  MF=(E,(1))                                     Y02669
         LTR   R15,R15             TEST RETURN CODE
         BNZ   RETURN              IF NOT ZERO;MEANS NO CORE     Y02669
         SPACE
         L     R6,XASAVLOC+N12     LOAD GETMAINED ADDR           Y02669
         LR    R1,R6               SAVE POINTER
         MVC   N4(L'IEE928I,R6),IEE928I      MOVE MSG INTO GETMAINED
         LA    R6,N49(R6)          BUMP MESSAGE POINTER
         L     SACBPT,DCMADSDS     RESET SACB PT
NEXTSACB EQU   *
         TM    DCMASACB,DCMAUSE  IS AREA IN USE?               @ZA06992
         BZ    LASTONE           IF NO, BYPASS ID IN MSG       @ZA06992
         MVC   N0(N1,R6),DCMAID    MOVE AREA ID INTO MSG
         MVI   N1(R6),COMMA        MOVE IN COMMA AFTER AREA ID
         LA    R6,N2(R6)           BUMP MESSAGE POINTER
         ICM   SACBPT,N7,DCMACBNX+1   GET POINTER TO NEXT SACB   Y02669
         BNZ   NEXTSACB            YES-KEEP ON LOOPING
LASTONE  EQU   *                                               @ZA06992
         BCTR  R6,N0               GET RID OF EXTRA COMMA
         SR    R4,R4               CLEAR REG                     Y02669
         IC    R4,XASCID           GET TARGET'S CONSOLE ID       Y02669
         CVD   R4,XAX              CONVERT TO DECIMAL            Y02669
         UNPK  XAX(N3),XAX+N6(N2)  UNPACK NUMBER                 Y02669
         OI    XAX+N2,DIGIT        FIX SIGN                      Y02669
         MVC   N42(N2,R1),XAX+N1   PUT CC INTO MSG               Y02669
         MVC   N0(N4,R6),DESCR5    MOVE DESCRIPTOR CODE          Y02669
         SR    R6,R1               GET LENGTH OF MSG
         STH   R6,N0(R1)           STORE FOR WTO
         MVI   N2(R1),MCSMASK      ID PASSED AND QUEUE BY ID FLAGS
         MVI   N3(R1),N0           ZERO SECOND MCSFLGS BYTE
         SR    R0,R0               CLEAR REG                     Y02669
         IC    R0,XAU              LOAD SOURCE DEVICE ID
         LR    R6,R1               SAVE POINTER TO PARAMETER LIST
         SPACE
         WTO   MF=(E,(1))
         FREEMAIN R,SP=SP229,LV=N80,A=(6)                        Y02669
RETURN   EQU   *                                                 Y02669
         L     RETURN14,XAP       RESTORE RETURN REG             Y02669
         BR    RETURN14           GO BACK TO SYSTEM              Y02669
         EJECT
GETAREA  GETMAIN  EC,LV=N80,A=MSG931,SP=SP229,MF=L               Y02669
         SPACE 2
SACBINIT EQU   *                                                 Y02669
         ST    SACBPT,N0(R5)       SET UP CHAINING OF BLOCKS     Y02669
         XC    DCMALN(N26),DCMALN  CLEAR SACB WITH ZEROS         Y02669
         LR    R5,SACBPT           SAVE PT TO THIS BLOCK         Y02669
         MVC   DCMAID(N1),N0(R3)   MOVE AREA ID INTO SACB        Y02669
         MVC   DCMTOPAR,DCMAID     MOVE TOP SACB AREA ID INTO R@ZA06491
         BCTR  R3,N0               DECR TABLE POINTER            Y02669
         MVC   DCMALN+N1(N1),N0(R6)   MOVE LL OF AREA INTO SACB  Y02669
         LA    R6,N1(R6)           BUMP PT                       Y02669
         SH    R4,DCMALN           MINUS NO. OF LINES FOR THIS AREA
         STC   R4,DCMATOP          SAVE TOP ROW NO. OF AREA      Y02669
         OI    DCMASACB,DCMAUSE    SET IN-USE FLAG BIT ON        Y02669
         MVC   DCMAFR(N2),F0F0     INITIALIZE FRAME NO.          Y02669
         BR    R15                                               Y02669
         EJECT
***********************************************************************
* NOTE: LOCKS HELD ON ENTRY TO IEE6803D - BRANCH ENTRY TO FREEMAIN    *
*       IS NECESSARY TO DECHAIN AND FREE SACB'S                       *
*         REGISTERS DESTROYED : 0, 1, 3, 4, 7, 14, 15                 *
*         INPUT INFORMATION: R4 POINTS TO CURRENT TCB                 *
*                            R7 POINTS TO CURRENT ASCB                *
***********************************************************************
FREESACB EQU   *                                                 YM1912
         L     R4,PTRCVT           GET ADDRESS OF CVT            YM1912
         USING CVTSECT,R4          ADDRESSABILITY FOR CVT        YM1912
         L     R4,CVTTCBP          ADDRESS OF TCBS & ASCBS       YM1912
         DROP  R4                                                YM1912
         USING TCBASCB,R4          ADDRESSABILITY FOR IEFPTRS    YM1912
         LR    R1,SACBPT           ADDR OF AREA TO FREE UP       YM1912
         L     SACBPT,N0(SACBPT)   RESET SACB POINTER            YM1912
         ST    SACBPT,XASAVSTD     SAVE DCM BASE REG             YM1912
         L     SACBPT,ASCBPTR      ADDRESS OF ASCB FOR INTERFACE YM1912
         L     R4,TCBPTR           ADDRESS OF TCB FOR INTERFACE  YM1912
         LA    R0,DCMACBSZ         PASS SACB LENGTH
         FREEMAIN RC,LV=(0),A=(1),SP=SP241,BRANCH=YES
         L     SACBPT,XASAVSTD     RESTORE DCM BASE REG          YM1912
         B     FREEXTRA          LOOP TIL ALL UNUSED SACBS FREE@ZA06491
         EJECT
***********************************************************************
*                                                                     *
*                          ERROR EXITS                           Y02669
*                                                                     *
***********************************************************************
         SPACE 2
TOOSMALL EQU   *                                                 Y02669
         BCTR  KOPS,N0             POINT TO BAD VALUE            Y02669
         MVI   XASTSAVE,IEE924I2   AREA TOO SMALL                Y02669
         B     ERROR2              BRANCH TO ERROR EXIT
TOOBIG   EQU   *                                                 Y02669
         SH    KOPS,TWO            POINT TO INVALID VALUE      @YM4785P
         CLI   N0(KOPS),COMMA      POINTING TO DIGIT?            Y02669
         BNE   MSG924I3            YES, GET ERROR CODE           Y02669
         LA    KOPS,N1(KOPS)       NO, ADVANCE TO DIGIT          Y02669
MSG924I3 EQU   *                                                 Y02669
         MVI   XASTSAVE,IEE924I3   SCREEN SIZE EXCEEDED          Y02669
         B     ERROR2              BRANCH TO ERROR EXIT
ERROR    EQU   *
         MVI   XASTSAVE,IEE924I    DISPLAY IN OR ABOVE AREA      Y02669
         L     KOPS,XASAVLOC       RETRIEVE OP PTR               Y02669
ERROR2   EQU   *
         MVI   XAE,IEE924          SET ON MAJOR FLAG BIT         Y02669
         B     STOREOP             STORE BAD OPERAND ADDR        Y02669
         SPACE 2
MSGSTRM  EQU   *                                                 Y02669
         MVI   XAE,IEE926I         INDICATE INVALID OP
         MVI   XASTSAVE,IEE926     INDICATE MSG STREAM OUTPUT    Y02669
         B     STOREOP                                           Y02669
         SPACE 2
MSG931   EQU   *
         MVI   XAE,IEE931I         CORE NOT AVAILABLE            Y02669
         B     D5603D              GO TO PUT OUT MSG             Y02669
         SPACE 2
BADKOP   EQU   *
         MVI   XAE,IEE156I         IEE156I INVALID OPERAND
STOREOP  EQU   *
         STCM  KOPS,N7,XASOPTR     SAVE OPERAND POINTER          Y02669
D5603D   EQU   *                                                 Y02669
         L     RETURN14,XAP        RESTORE RETURN REG            Y02669
         L     R15,VCON5603                                      Y02669
         BR    R15                                               Y02669
         EJECT
***********************************************************************
*                                                                     *
*                       SACB AREA ID TABLE                       Y02669
*          NOTE: FOLLOWING TABLE IS INTERNAL TO THIS MODULE.          *
*                IT WILL BE NECESSARY TO EXPAND THIS TABLE TO    Y02669
*                TO SUPPORT MORE THAN 11 AREAS OR A SCREEN       Y02669
*                WITH MORE THAN 47 LINES.                        Y02669
*                                                                     *
***********************************************************************
         SPACE 2
         DC    C'K'                SACB AREA ID
         DC    C'J'                SACB AREA ID
         DC    C'I'                SACB AREA ID
         DC    C'H'                SACB AREA ID
         DC    C'G'                SACB AREA ID
         DC    C'F'                SACB AREA ID
         DC    C'E'                SACB AREA ID
         DC    C'D'                SACB AREA ID
         DC    C'C'                SACB AREA ID
         DC    C'B'                SACB AREA ID
TABLE    DC    C'A'                BOTTOM SACB AREA ID
         EJECT
***********************************************************************
*                                                                     *
*                           CONSTANTS                            Y02669
*                                                                     *
***********************************************************************
         SPACE 2
TWO      DC    H'2'                CONSTANT                    @YM4785P
FOUR     DC    H'4'                CONSTANT
F0F0     DC    XL2'F0F0'           AREA FRAME NUMBER ZERO
IEE928I  DC    CL45'IEE928I DISPLAY AREA ID''S FOR CONSOLE CC ARE'
DESCR5   DC    B'00001000000000000000000000000000' DESCRIPTOR CODE+RT
VCON5603 DC    V(IEE5603D)         MSG MODULE NAME               Y02669
         SPACE  5
***********************************************************************
*                                                                     *
*                           PATCH AREA                           Y02669
*                                                                     *
***********************************************************************
         SPACE 2
PATCH    DC    CL68'***PATCH AREA - IEE6803D***'                 Y01939
         EJECT
         IEECUCM  FORMAT=NEW
         EJECT
         IEERDCM
         EJECT
FAUXSA   DSECT
         IEEXSA
         EJECT
CVTSECT  DSECT
         CVT
         EJECT
         IEFPTRS
         EJECT
         IHAPSA
         END
