         TITLE 'STC WRITE JCL ROUTINE                                '
IEFJSWT  CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFJSWT   73.165'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
*   PARMPTR=R1;                     /* SET UP THE PARAMETER LIST     */
         LR    PARMPTR,R1                                          0029
*   JCLPTR=JCLSPTR;                 /* SET UP JCLS POINTER FROM PARM
*                                      LIST                          */
         L     JCLPTR,JCLSPTR(,PARMPTR)                            0030
*   RPLCORE(1:RPLLGH2)=RPLLIST(1:RPLLGH2);/* MOVE IN THE RPL         */
         L     @14,RPLLGH2                                         0031
         BCTR  @14,0                                               0031
         EX    @14,@SM00433                                        0031
*   RPLPTR=ADDR(RPLCORE);           /* SET UP THE RPL                */
         LA    RPLPTR,RPLCORE                                      0032
*   RESPECIFY                                                      0033
*     IFGACB BASED(ACBPTR);         /* BASE THE ACB                  */
*   RESPECIFY                                                      0034
*     IFGRPL BASED(RPLPTR);         /* BASE THE RPL                  */
*   IF CHVCD=LOGON THEN             /* IF TSO THE USE TSO DATA SET   */
         L     @14,CSCBPTR(,PARMPTR)                               0035
         CLI   CHVCD(@14),X'98'                                    0035
         BNE   @RF00035                                            0035
*     DO;                                                          0036
*       ACBCORE(1:ACBLGH2)=ACBLIST(1:ACBLGH2);/* MOVE IN THE ACB     */
         L     @14,ACBLGH2                                         0037
         BCTR  @14,0                                               0037
         EX    @14,@SM00435                                        0037
*       ACBPTR=ADDR(ACBCORE);       /* POINT TO THE ACB              */
         LA    @14,ACBCORE                                         0038
         ST    @14,ACBPTR                                          0038
*       ENQCORE(1:ENQLGTH)=ENQLIST(1:ENQLGTH);/* MOVE IN THE ENQ     */
         L     @14,ENQLGTH                                         0039
         BCTR  @14,0                                               0039
         EX    @14,@SM00437                                        0039
*       R1=ADDR(ENQCORE);           /* POINT R1 TO ENQ LIST          */
         LA    R1,ENQCORE                                          0040
*     END;                                                         0041
*   ELSE                                                           0042
*     IF CHVCD=START THEN                                          0042
         B     @RC00035                                            0042
@RF00035 L     @14,CSCBPTR(,PARMPTR)                               0042
         CLI   CHVCD(@14),X'04'                                    0042
         BNE   @RF00042                                            0042
*       DO;                                                        0043
*         ACBCORE1(1:ACBLGH4)=ACBLIST1(1:ACBLGH4);/* MOVE IN THE ACB */
         L     @14,ACBLGH4                                         0044
         BCTR  @14,0                                               0044
         EX    @14,@SM00439                                        0044
*         ACBPTR=ADDR(ACBCORE1);    /* POINT TO THE ACB              */
         LA    @14,ACBCORE1                                        0045
         ST    @14,ACBPTR                                          0045
*         ENQCORE1(1:ENQLGTH1)=ENQLIST1(1:ENQLGTH1);/* MOVE IN THE 0046
*                                      ENQ                           */
         L     @14,ENQLGTH1                                        0046
         BCTR  @14,0                                               0046
         EX    @14,@SM00441                                        0046
*         R1=ADDR(ENQCORE1);        /* SET UP ENQ LIST               */
         LA    R1,ENQCORE1                                         0047
*       END;                                                       0048
*     ELSE                                                         0049
*       IF CHVCD=MOUNT THEN                                        0049
         B     @RC00042                                            0049
@RF00042 L     @14,CSCBPTR(,PARMPTR)                               0049
         CLI   CHVCD(@14),X'0C'                                    0049
         BNE   @RF00049                                            0049
*         DO;                                                      0050
*           ACBCORE1(1:ACBLGH4)=ACBLIST1(1:ACBLGH4);/* MOVE IN THE 0051
*                                      ACB                           */
         L     @14,ACBLGH4                                         0051
         BCTR  @14,0                                               0051
         EX    @14,@SM00439                                        0051
*           ACBPTR=ADDR(ACBCORE1);  /* POINT TO THE ACB              */
         LA    @14,ACBCORE1                                        0052
         ST    @14,ACBPTR                                          0052
*           ENQCORE1(1:ENQLGTH1)=ENQLIST1(1:ENQLGTH1);/* MOVE IN THE
*                                      ENQ                           */
         L     @14,ENQLGTH1                                        0053
         BCTR  @14,0                                               0053
         EX    @14,@SM00441                                        0053
*           R1=ADDR(ENQCORE1);      /* SET UP ENQ LIST               */
         LA    R1,ENQCORE1                                         0054
*         END;                                                     0055
*       ELSE                                                       0056
*         DO;                                                      0056
         B     @RC00049                                            0056
@RF00049 DS    0H                                                  0057
*           R15=FOURFAIL;           /* INDICATE TYPE OF ERROR        */
         LA    R15,4                                               0057
*           GEN(ABEND 184,,,SYSTEM);/* ABEND, UNKNOWN VERB CODE      */
         ABEND 184,,,SYSTEM
*         END;                                                     0059
*                                                                  0059
*   /*****************************************************************/
*   /*                                                               */
*   /* IF VERB CODE RECONIZED THEN ENQ                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0060
*   GEN( ENQ MF=(E,(1)));           /* ENQ ON RESOURCE               */
@RC00049 DS    0H                                                  0060
@RC00042 DS    0H                                                  0060
@RC00035 DS    0H                                                  0060
          ENQ MF=(E,(1))
*   R7=ACBPTR;                      /* POINT TO THE ACB              */
         L     R7,ACBPTR                                           0061
*   OPENCORE(1:OPENLGH2)=OPENLIST(1:OPENLGH2);/* MOVE IN OPEN        */
         L     @14,OPENLGH2                                        0062
         BCTR  @14,0                                               0062
         EX    @14,@SM00443                                        0062
*   R1=ADDR(OPENCORE);              /* POINT TO OPEN MACRO           */
         LA    R1,OPENCORE                                         0063
*   GEN( OPEN ((7)),MF=(E,(1)));    /* OPEN THE ACB                  */
          OPEN ((7)),MF=(E,(1))
*   RPLDACB=ACBPTR;                 /* PUT IN THE ACB PTR            */
         MVC   RPLDACB(4,RPLPTR),ACBPTR                            0065
*   RPLRLEN=LENGTH(THEJCL);         /* PUT IN THE LENTH OF THE CARD  */
         MVC   RPLRLEN(4,RPLPTR),@CF00353                          0066
*   DO WHILE NEXTJCLS^=0;           /* PUT THE JCLS                  */
         B     @DE00067                                            0067
@DL00067 DS    0H                                                  0068
*     RPLAREA=ADDR(THEJCL);         /* PUT IN THE RPL JCL ADDR       */
         LA    @14,THEJCL(,JCLPTR)                                 0068
         ST    @14,RPLAREA(,RPLPTR)                                0068
*     R7=RPLPTR;                    /* POINT TO THE RPL              */
         LR    R7,RPLPTR                                           0069
*     GEN( PUT  RPL=(7));           /* PUT THE RECORD                */
          PUT  RPL=(7)
*     IF R15^=0 THEN                /* IF OPEN OR PUT ERROR RETURN   */
         LTR   R15,R15                                             0071
         BZ    @RF00071                                            0071
*       DO;                                                        0072
*         CALL ISSUEDEQ;            /* ISSUE THE DEQ                 */
         BAL   @14,ISSUEDEQ                                        0073
*         RETURN CODE(4);           /* RETURN                        */
         L     @13,4(,@13)                                         0074
         L     @00,@SIZDATD                                        0074
         LR    @01,@11                                             0074
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,4                                               0074
         L     @14,12(,@13)                                        0074
         LM    @00,@12,20(@13)                                     0074
         BR    @14                                                 0074
*       END;                                                       0075
*     JCLPTR=NEXTJCLS;              /* POINT TO NEXT JCL RECORD      */
@RF00071 L     JCLPTR,NEXTJCLS(,JCLPTR)                            0076
*   END;                                                           0077
@DE00067 ICM   @14,15,NEXTJCLS(JCLPTR)                             0077
         BNZ   @DL00067                                            0077
*   RPLAREA=ADDR(THEJCL);           /* POINT TO THE RECORD           */
         LA    @14,THEJCL(,JCLPTR)                                 0078
         ST    @14,RPLAREA(,RPLPTR)                                0078
*   R7=RPLPTR;                      /* POINT TO THE RPL              */
         LR    R7,RPLPTR                                           0079
*   GEN( PUT RPL=(7));              /* FORCED PUT                    */
          PUT RPL=(7)
*   IF R15^=0 THEN                  /* IF OPEN OR PUT ERROR RETURN   */
         LTR   R15,R15                                             0081
         BZ    @RF00081                                            0081
*     DO;                                                          0082
*       CALL ISSUEDEQ;              /* ISSUE THE DEQ                 */
         BAL   @14,ISSUEDEQ                                        0083
*       RETURN CODE(4);             /* RETURN                        */
         L     @13,4(,@13)                                         0084
         L     @00,@SIZDATD                                        0084
         LR    @01,@11                                             0084
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,4                                               0084
         L     @14,12(,@13)                                        0084
         LM    @00,@12,20(@13)                                     0084
         BR    @14                                                 0084
*     END;                                                         0085
*   GEN(   ENDREQ  RPL=(7));        /* WAIT IN RPL                   */
@RF00081 DS    0H                                                  0086
            ENDREQ  RPL=(7)
*   RESPECIFY                                                      0087
*     SSIB BASED(SSOBSSIB);         /* BASE THE SSIB                 */
*   SSIBJBID=RPLRBAR;               /* PUT JOB ID IN SSIB            */
         L     @14,SSOBPTR(,PARMPTR)                               0088
         L     @14,SSOBSSIB(,@14)                                  0088
         MVC   SSIBJBID(8,@14),RPLRBAR(RPLPTR)                     0088
*   R7=ACBPTR;                      /* POINT TO THE ACB              */
         L     R7,ACBPTR                                           0089
*   CLOSECRE(1:CLOSELG2)=CLOSELST(1:CLOSELG2);/* MOVE IN THE CLOSE   */
         L     @14,CLOSELG2                                        0090
         BCTR  @14,0                                               0090
         EX    @14,@SM00445                                        0090
*   R1=ADDR(CLOSECRE);              /* POINT TO CLOSE PARM LIST      */
         LA    R1,CLOSECRE                                         0091
*   GEN( CLOSE ((7)),MF=(E,(1)));   /* CLOSE THE ACB                 */
          CLOSE ((7)),MF=(E,(1))
*   CALL ISSUEDEQ;                  /* ISSUE THE DEQ                 */
         BAL   @14,ISSUEDEQ                                        0093
*   RETURN CODE(0);                 /* RETURN                        */
         L     @13,4(,@13)                                         0094
         L     @00,@SIZDATD                                        0094
         LR    @01,@11                                             0094
         FREEMAIN R,LV=(0),A=(1)
         SR    @15,@15                                             0094
         L     @14,12(,@13)                                        0094
         LM    @00,@12,20(@13)                                     0094
         BR    @14                                                 0094
*ISSUEDEQ:                                                         0095
*   PROC;                           /* ISSUE DEQ OFF RESOURCE        */
ISSUEDEQ STM   @14,@12,@SA00002                                    0095
*   IF CHVCD=LOGON THEN             /* CHECK WHICH TO DEQ            */
         L     @14,CSCBPTR(,PARMPTR)                               0096
         CLI   CHVCD(@14),X'98'                                    0096
         BNE   @RF00096                                            0096
*     R1=ADDR(ENQCORE);             /* SET UP R1 TO POINT TO DEQ     */
         LA    R1,ENQCORE                                          0097
*   ELSE                                                           0098
*     R1=ADDR(ENQCORE1);            /* SET UP R1 TO POINT TO DEQ     */
         B     @RC00096                                            0098
@RF00096 LA    R1,ENQCORE1                                         0098
*   GEN( DEQ   MF=(E,(1)));         /* ISSUE THE DEQ                 */
@RC00096 DS    0H                                                  0099
          DEQ   MF=(E,(1))
*   END;                                                           0100
@EL00002 DS    0H                                                  0100
@EF00002 DS    0H                                                  0100
@ER00002 LM    @14,@12,@SA00002                                    0100
         BR    @14                                                 0100
*   END IEFJSWT                                                    0101
*                                                                  0101
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSIB)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*                                                                  0101
*       ;                                                          0101
@EL00001 L     @13,4(,@13)                                         0101
@EF00001 L     @00,@SIZDATD                                        0101
         LR    @01,@11                                             0101
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0101
         BR    @14                                                 0101
@DATA    DS    0H
@SM00433 MVC   RPLCORE(0),RPLLIST
@SM00435 MVC   ACBCORE(0),ACBLIST
@SM00437 MVC   ENQCORE(0),ENQLIST
@SM00439 MVC   ACBCORE1(0),ACBLIST1
@SM00441 MVC   ENQCORE1(0),ENQLIST1
@SM00443 MVC   OPENCORE(0),OPENLIST
@SM00445 MVC   CLOSECRE(0),CLOSELST
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
IEFJSWT  CSECT
         DS    0F
@CF00353 DC    F'80'
@DATD    DSECT
         DS    0D
SSIBPTR  DS    A
ACBPTR   DS    A
IEFJSWT  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SSMAJ    DC    CL8'SYSIEFSD'
SSMIN    DC    CL6'TSOQUE'
SSMIN1   DC    CL6'STCQUE'
PATCH    DC    X'00'
         DS    49XL1
IEFJSWT  CSECT
*                                   /* GEN THE ENQ LIST*/
ENQLIST  ENQ  (SSMAJ,SSMIN,E,6,SYSTEM),RET=HAVE,MF=L
ENQLGTH  DC  A(*-ENQLIST)
@DATD    DSECT
*                            /* GEN THE AREA FOR ENQ*/
ENQCORE  ENQ  (SSMAJ,SSMIN,E,6,SYSTEM),RET=HAVE,MF=L
IEFJSWT  CSECT
*                                       /* GEN THE ENQ LIST */
ENQLIST1  ENQ  (SSMAJ,SSMIN1,E,6,SYSTEM),RET=HAVE,MF=L
ENQLGTH1  DC    A(*-ENQLIST1)
@DATD    DSECT
ENQCORE1  ENQ  (SSMAJ,SSMIN1,E,6,SYSTEM),RET=HAVE,MF=L
IEFJSWT  CSECT
*                                             /*OPEN LIST FORM*/
OPENLIST  OPEN (7),MF=L
OPENLGH1  EQU  *
OPENLGH2  DC   A(OPENLGH1-OPENLIST)
@DATD    DSECT
*                               /*OPEN MACRO AREA */
OPENCORE  OPEN  (7),MF=L
IEFJSWT  CSECT
*                                             /*CLOSE LIST FORM*/
CLOSELST  CLOSE  (7),MF=L
CLOSELG1  EQU  *
CLOSELG2  DC   A(CLOSELG1-CLOSELST)
@DATD    DSECT
*                                   /*CLOSE MACRO AREA*/
CLOSECRE CLOSE (7),MF=L
IEFJSWT  CSECT
*                                           /*ACB STRUCTURE*/
ACBLIST ACB DDNAME=TSOINRDR,MACRF=(OUT,ADR,SEQ)
ACBLGH1 EQU   *
ACBLGH2 DC   A(ACBLGH1-ACBLIST)
@DATD    DSECT
*                              /*ACB AREA*/
ACBCORE  ACB DDNAME=TSOINRDR,MACRF=(OUT,ADR,SEQ)
IEFJSWT  CSECT
*                                            /*ACB STRUCTURE*/
ACBLIST1 ACB DDNAME=STCINRDR,MACRF=(OUT,ADR,SEQ)
ACBLGH3 EQU   *
ACBLGH4 DC   A(ACBLGH3-ACBLIST1)
@DATD    DSECT
*                               /*ACB AREA*/
ACBCORE1 ACB  DDNAME=STCINRDR,MACRF=(OUT,ADR,SEQ)
IEFJSWT  CSECT
*                                         /* RPL DEFINATION*/
RPLLIST RPL
RPLLGH1 EQU  *
RPLLGH2 DC   A(RPLLGH1-RPLLIST)
@DATD    DSECT
RPLCORE  RPL
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFJSWT  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPLPTR   EQU   @02
JCLPTR   EQU   @03
PARMPTR  EQU   @04
R1       EQU   @01
R7       EQU   @07
R15      EQU   @15
IFGACB   EQU   0
ACBAMBL  EQU   IFGACB+4
ACBIXLST EQU   ACBAMBL
ACBJWA   EQU   ACBIXLST
ACBMACRF EQU   IFGACB+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBLFB   EQU   IFGACB+20
ACBBUFPL EQU   ACBLFB
ACBRECFM EQU   IFGACB+24
ACBCCTYP EQU   IFGACB+25
ACBOPT   EQU   IFGACB+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   IFGACB+36
ACBDDNM  EQU   IFGACB+40
ACBOFLGS EQU   IFGACB+48
ACBINFLG EQU   IFGACB+50
ACBUJFCB EQU   IFGACB+52
ACBWAPTR EQU   ACBUJFCB
IFGRPL   EQU   0
RPLIDWD  EQU   IFGRPL
RPLECB   EQU   IFGRPL+8
RPLSTAT  EQU   IFGRPL+12
RPLFDBK  EQU   IFGRPL+13
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLKEYLE EQU   IFGRPL+16
RPLDACB  EQU   IFGRPL+24
RPLAREA  EQU   IFGRPL+32
RPLOPTCD EQU   IFGRPL+40
RPLOPT1  EQU   RPLOPTCD
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   IFGRPL+44
RPLRLEN  EQU   IFGRPL+48
RPLRBAR  EQU   IFGRPL+60
RPL6RBA  EQU   RPLRBAR+2
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHVCD    EQU   CHFLG
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPKE    EQU   CHAIN+28
CHTJID   EQU   CHAIN+30
CHACT1   EQU   CHAIN+35
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSHORT  EQU   CHASM+24
CHSWT    EQU   CHSHORT
SSIB     EQU   0
SSIBFLG1 EQU   SSIB+6
SSIBJBID EQU   SSIB+12
SSOB     EQU   0
SSOBSSIB EQU   SSOB+8
PARMAREA EQU   0
JCLSPTR  EQU   PARMAREA
CSCBPTR  EQU   PARMAREA+4
SSOBPTR  EQU   PARMAREA+8
JCLSAREA EQU   0
NEXTJCLS EQU   JCLSAREA
THEJCL   EQU   JCLSAREA+8
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00021 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
@NM00023 EQU   JCLSAREA+4
SSOBINDV EQU   SSOB+16
SSOBRETN EQU   SSOB+12
SSOBFUNC EQU   SSOB+6
SSOBLEN  EQU   SSOB+4
SSOBID   EQU   SSOB
SSIBSUSE EQU   SSIB+32
SSIBRSV1 EQU   SSIB+28
SSIBDEST EQU   SSIB+20
SSIBSSNM EQU   SSIB+8
SSIBRESV EQU   SSIB+7
@NM00022 EQU   SSIBFLG1
SSIBPJES EQU   SSIBFLG1
SSIBLEN  EQU   SSIB+4
SSIBID   EQU   SSIB
CHARSV16 EQU   CHSHORT+108
CHARSV15 EQU   CHSHORT+104
CHJSCBVS EQU   CHSHORT+100
CHUSCVS  EQU   CHSHORT+96
@NM00020 EQU   CHSHORT+92
@NM00019 EQU   CHSHORT+88
CHSQA    EQU   CHSHORT+52
CHQPA    EQU   CHSHORT+16
CHJCL    EQU   CHSHORT+12
CHSPC    EQU   CHSHORT+8
CHSPB    EQU   CHSHORT+4
CHTCB    EQU   CHSHORT+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00018 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHAIN+36
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHAIN+34
CHQID    EQU   CHAIN+32
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPARM   EQU   CHKEY
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHPTR    EQU   CHAIN
RPLERMSA EQU   IFGRPL+72
RPLEMLEN EQU   IFGRPL+70
@NM00017 EQU   IFGRPL+68
RPLDDDD  EQU   RPL6RBA+2
RPLS2S2  EQU   RPL6RBA
RPLS1S1  EQU   RPLRBAR
@NM00016 EQU   IFGRPL+56
RPLBUFL  EQU   IFGRPL+52
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00015 EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBSW EQU   RPLOPT1
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLARG   EQU   IFGRPL+36
RPLTCBPT EQU   IFGRPL+28
RPLCCHAR EQU   IFGRPL+20
RPLSTRID EQU   IFGRPL+18
RPLKEYL  EQU   RPLKEYLE
RPLERRCD EQU   RPLCNDCD+1
RPLCMPON EQU   RPLCNDCD
RPLERREG EQU   RPLRTNCD
@NM00014 EQU   RPLSTAT
RPLEDRQI EQU   RPLSTAT
RPLCHKI  EQU   RPLSTAT
RPLACTIV EQU   RPLSTAT
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   IFGRPL+4
RPLLEN   EQU   RPLIDWD+3
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
@NM00013 EQU   IFGACB+72
@NM00012 EQU   IFGACB+68
ACBUAPTR EQU   IFGACB+64
ACBLRECL EQU   IFGACB+62
ACBBLKSZ EQU   IFGACB+60
ACBBUFSP EQU   IFGACB+56
@NM00011 EQU   ACBWAPTR+1
ACBOPTN  EQU   ACBWAPTR
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00010 EQU   ACBINFLG
ACBERFLG EQU   IFGACB+49
ACBIOSFG EQU   ACBOFLGS
ACBEXFG  EQU   ACBOFLGS
@NM00009 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00008 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAMETH EQU   ACBDDNM+3
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   IFGACB+32
@NM00007 EQU   IFGACB+28
@NM00006 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00005 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00004 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
@NM00003 EQU   ACBBUFPL
ACBBUFNI EQU   IFGACB+18
ACBBUFND EQU   IFGACB+16
ACBSTRNO EQU   IFGACB+14
@NM00002 EQU   ACBMACR2
@NM00001 EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
ACBCHN   EQU   ACBMACR2
ACBCBRD  EQU   ACBMACR2
ACBCBOPN EQU   ACBMACR2
ACBUPD   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   IFGACB+8
ACBIBCT  EQU   ACBJWA
ACBLENG  EQU   IFGACB+2
ACBSTYP  EQU   IFGACB+1
ACBID    EQU   IFGACB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IEFJSWT
