IEE90110 CSECT
         TITLE 'MESSAGE ASSEMBLY MODULE'
***********************************************************************
*MODULE NAME= IEE90110
*
*DESCRIPTIVE NAME= MESSAGE ASSEMBLY MODULE , HALT / SWITCH COMMANDS
*
*COPYRIGHT= N/A
*
*STATUS= OS/VS2  RELEASE 2
*
*FUNCTION= ASSEMBLES AND EDITS MESSAGES FOR HALT/SWITCH COMMANDS AND
*          ISSUES THE WTO ..
*  OPERATION= FROM THE XAE FIELD IN THE EXTENDED SAVE AREA (XSA), THE
*             BYTE IS CHECKED TO SEE IF IT IS WITHIN THE CODE TABLE'S
*             (T1) LIMITS.  THE BYTE ITSELF IS USED AS AN INDEX TO T1,
*             WHICH CONTAINS, AS ELEMENTS, POINTERS TO THE MESSAGE
*             TEXT TABLE, T2.  THE MESSAGE IS ASSEMBLED AS FOLLOWS:
*                1) THE XAH FIELD OF THE XSA IS ZEROED OUT.
*                2) THE CONSOLE ID IS MOVED FROM XAU
*                   INTO REGISTER 0.
*                3) THE MCSFLAG FIELD IS SET FOR THE WTO.
*                4) THE VERB IS MOVED FROM XAV TO XAF.
*                5) THE PRE-FORMATTED TEXT IS MOVED IN.
*                6) THE MESSAGE LENGTH IS PUT INTO XAH .
*                7) THE DESCRIPTOR AND ROUTING CODES
*                   ARE MOVED IN.
*                8) THE WTO MACRO IS ISSUED.
*
*NOTES
*  DEPENDENCIES= SEE BELOW
*    CHARACTER-CODE DEPENDENCIES= THE OPERATION OF THIS MODULE DEPENDS
*                                 UPON AN INTERNAL REPRESENTATION OF
*                                 THE EXTERNAL CHARACTER SET WHICH IS
*                                 EQUIVALENT TO THE ONE USED AT
*                                 ASSEMBLY TIME.  THE CODING HAS BEEN
*                                 ARRANGED SO THAT A REDEFINITION OF
*                                 'CHARACTER' CONSTANTS, BY REASSEMBLY,
*                                 WILL RESULT IN A CORRECT MODULE FOR
*                                 THE NEW DEFINITIONS.
*  RESTRICTIONS= NONE
*  REGISTER-CONVENTIONS= STANDARD
*  PATCH-LABEL= N/A
*
*MODULE TYPE= CSECT
*  PROCESSOR= ASSEM
*  MODULE SIZE= 520 BYTES
*  ATTRIBUTES= REENTRANT, SELF-RELOCATABLE, READ-ONLY, AND TRANSIENT
*
*ENTRY POINT= IEE90110
*  PURPOSE= SAME AS FUNTION
*  LINKAGE= FROM IEE70110 VIA BRANCH
*  INPUT= REGISTER 1 POINTING TO THE XSA
*  REGISTERS SAVED= NONE
*  REGISTER USAGE= R0    UCMI FOR WTO
*                  R1    WORK REGISTER
*                  R2    POINTER TO XSA
*                  R3    WORK REGISTER
*                  R4    MODULE BASE REGISTER
*                  R5    POINTER TO THE CVT
*                  R6    UNUSED
*                  R7    UNUSED
*                  R8    UNUSED
*                  R9    UNUSED
*                  R10   UNUSED
*                  R11   UNUSED
*                  R12   UNUSED
*                  R13   UNUSED
*                  R14   RETURN ADDRESS
*                  R15   UNUSED
*  REGISTERS RESTORED= NONE
*
*EXIT - NORMAL= RETURN TO CALLER
*  CONDITIONS= ALWAYS
*  OUTPUT= MESSAGE OUTPUT (SEE BELOW)
*  RETURN CODES= NONE
*
*EXIT - ERROR= NONE
*
*EXTERNAL REFERENCES= SEE BELOW
*  ROUTINES= NONE
*  DATA AREAS= IEEXSA (CONTAINS PERTINENT MESSAGE ASSEMBLY DATA)
*  CONTROL BLOCKS= IEEXSA - R,W
*
*TABLES= T1 (INDEX TABLE TO MESSAGE TABLE)
*        T2 (MESSAGE TABLE)
*
*
*CHANGE ACTIVITY= Y02669
*
*SYSGENS=
*       LOAD MODULE NAME = IEE70110
*       LPALIB NAME = IEE90110
*SYSTEM LIBRARIES = NONE .
*
*MESSAGES= IEE334I CCCCCCCC EOD SUCCESSFUL
*          IEE706I CCCCCCCC NOT SUCCESSFUL
*
*ABEND CODES= NONE
*
***********************************************************************
         EJECT
*         REGISTER ASSIGNMENTS                                        *
R0       EQU   0                        FOR PASSING UCMI
R1       EQU   1                             T2 POINTER
R2       EQU   2                             BASE FOR XSA
R3       EQU   3                             WORK REGISTER
MBASE    EQU   4                             BASE FOR PROGRAM
R14      EQU   14                       RETURN REG
R15      EQU   15                       TPUT RETURN CODE REG
D0       EQU   0                        LENGTHS,OFFSETS,ETC.
D1       EQU   1                        *
D2       EQU   2                        *
D3       EQU   3                        *
D4       EQU   4
D5       EQU   5                        *
D7       EQU   7                        *
D8       EQU   8                        *
D9       EQU   9                        *
D22      EQU   22                       *
BLANK    EQU   C' '                     *
CODHI    EQU   X'02'                    HIGHEST VALID MSG CODE   YM1294
MCS      EQU   X'E0'                    NOTE - IN WTO MCSFLAG FIELD,
*                                       X'80' MEANS ROUTING AND/OR DE-
*                                       SCRIPTOR CODES ARE SPECIFIED -
*                                       X'40' MEANS THE WTO GOES TO THE
*                                       CONSOLE WHOSE UCMI IS IN REG 0
*                                       X'20' MEANS THE WTO IS AN IM-
*                                       MEDIATE COMMAND RESPONSE
*                                                                     *
*A  ESTABLISH PROGRAM ADDRESSABILITY                                  *
         BALR  MBASE,0
         USING *,MBASE
         MODID BRANCH=YES                                        Y01886
         USING XSA,R2                        BASE REGISTER FOR XSA
         LR    R2,R1                   SET UP XSA ADDRESSIBILITY
*  SET UP XSA HEADER
         SR    R3,R3                         CLEAR WORKING REGISTER
         ST    R3,XAH                   CLEAR OUT XSA HEADER
* OBTAIN MESSAGE CODE AND COMPUTE APPROPRIATE T1 ELEMENT ADDRESS
         IC    R3,XAE                        GET MESSAGE CODE
         AR    R3,R3                    DOUBLE FOR INDEXING
         LA    R1,T1(R3)                PT TO APPROPRIATE T1 ELEMENT
         LH    R1,0(R1)                      LOAD TABLE ELEMENT
         IC    R0,XAU              GET UCMI
         OI    XAH+D2,MCS               SET MCSFLAG FOR WTO
* BUILD MESSAGE IN XSA
         MVC   XAF(D8),XAV              MOVE SOURCE TEXT
         MVI   XAT,BLANK                FOLLOW VERB BY BLANK
* FILL IN MESSAGE ID AND PREFORMATTED TEXT
         MVC   XAI(D3),FAUFIX           MOVE IN 'IEE'
         LA    R3,T2(R1)                PT TO APPRPRIATE T2 ELEMENT
         MVC   XAI+D3(D4),D5(R3)        FILL IN MSG ID
         MVI   XAI+D7,BLANK             MAKE 8TH CHARACTER BLANK
         SR    R1,R1                    CLEAR FOR INSERT CHARACTER
         IC    R1,D4(R3)                GET MSG. TEXT LN.
         EX    R1,FAUPFT                MOVE MSG. TEXT IN
* SET UP FOR WTO TO A CONSOLE
         LA    R1,D22(R1)               MSG LN = VARIABLE TEXT LN
*                                       + 4-BYTE HDR + 8-BYTE ID
*                                       + BLANK + 8-BYTE VERB
         STH   R1,XAH                   STORE LN IN BUFFER FOR WTO
         AR    R1,R2                    PT. R1 TO END OF MSG.
         MVC   D0(D4,R1),D0(R3)         MOVE IN DESC,ROUTE CODES
         WTO   MF=(E,(R2))              WRITE MSG.
         BR    14                       RETURN TO IEE70110
         SPACE 2
FAUFIX   DC    CL3'IEE'                 FIXED PART OF MSG ID
FAUPFT   MVC   XAT+D1(D1),D9(R3)        MOVE IN PREFORMATTED TEXT
         EJECT
* THE FOLLOWING TABLE IS INDEXED BY TWICE THE MSG. CODE. EACH HALF-
* WORD POINTS TO A T2 ELEMENT CONTAINING THE APPROPRIATE MESSAGE.
         SPACE 2
T1       EQU   *
         SPACE 2
         DC    AL2(0)
         DC    Y(TM01-T2-PREMSG)
         DC    Y(TM02-T2-PREMSG)                                 YM1294
* NEW MESSAGES SHOULD BE ADDED TO THIS TABLE USING THE SAME FORMAT
* Y(TM0X-T2-PREMSG) WHERE X IS A NUMBER GREATER THAN THE LAST ENTRY.
* THIS TABLE IS BASED ON THE ONE USED IN MODULE IEE0503D.
         EJECT
         SPACE 2
PREMSG   EQU   9                        NUMBER BYTES BEFORE MSG TEXT
         SPACE 2
* THE FOLLOWING TABLE CONTAINS 2-BYTE DESCRIPTOR CODE, 2-BYTE ROUTING
* CODE, 1-BYTE LENGTH OF PREFORMATTED MSG TEXT, 4-BYTE ID FILLER, AND
* PREFORMATTED MSG TEXT.
T2       EQU   *
         SPACE 2
         DC    X'0800'
         DC    X'4000'
         DC    AL1(L'TM01-1)
         DC    C'334I'
TM01     DC    C'EOD SUCCESSFUL'
         DC    X'0800'                                           YM1294
         DC    X'0000'                                           YM1294
         DC    AL1(L'TM02-1)                                     YM1294
         DC    C'706I'                                           YM1294
TM02     DC    C'NOT SUCCESSFUL'                                 YM1294
* NEW MESSAGES SHOULD BE ADDED TO THIS TABLE USING THE SAME FORMAT.
* THIS TABLE IS BASED ON THE ONE USED IN MODULE IEE0503D.
         EJECT
FAUXSA   DSECT
         IEEXSA
         END
