         TITLE 'IEE5903D K AND MR MESSAGE MODULE LOAD TWO'
***********************************************************************
*                                                                     *
*   MODULE NAME         =    IEE5903D                           Y02669*
*                                                                     *
*   DESCRIPTIVE NAME    =    CONTROL (K), MSGRT (MR) COMMANDS   Y02669*
*                            AND L=CCA OPERAND ERROR MESSAGE    Y02669*
*                            MODULE - LOAD 2                    Y02669*
*                                                                     *
*   COPYRIGHT           =    N/A                                Y02669*
*                                                                     *
*   STATUS              =    01 - UPDATE FOR VS/2 RELEASE 2     Y02669*
*                                                                     *
*   FUNCTION            =    THIS MODULE HANDLES THE SECOND     Y02669*
*                            PARTS OF LINES FOR CONTROL (K),    Y02669*
*                            MSGRT (MR) COMMANDS AND L=CCA      Y02669*
*                            OPERAND ERROR MESSAGES.            Y02669*
*                                                                     *
*  OPERATION            =    THE MESSAGES ARE ISSUED BY THE     Y02669*
*                            WRITE TO OPERATOR (WTO) MACRO.     Y02669*
*                            UNLESS THE MESSAGE IS WRITTEN IN   Y02669*
*                            RESPONSE TO A CONTROL OR MSGRT     Y02669*
*                            COMMAND ISSUED FROM A CRT CONSOLE, Y02669*
*                            THEN THE MESSAGE IS SET UP IN THE  Y02669*
*                            INSTRUCTION LINE OF THE DCM        Y02669*
*                            TO BE WRITTEN BY DIDOCS.           Y02669*
*                                                                     *
*                            THE MESSAGE CODE FOUND IN XASTSAVE Y02669*
*                            WHEN DOUBLED SERVES AS AN INDEX    Y02669*
*                            INTO THE MESSAGE TEXT TABLE.       Y02669*
*                                                                     *
*                            THE MESSAGE TABLE ENTRIES CONTAIN  Y02669*
*                            MESSAGE FLAGS WHICH INDICATE:      Y02669*
*                              X'80' - MESSAGE REQUIRES 'CCA'   Y02669*
*                              X'40' - MESSAGE REQUIRES 'CC'    Y02669*
*                            THIS INFORMATION IS FOUND IN XAS,  Y02669*
*                            CONVERTED AND PLACED IN THE TEXT.  Y02669*
*                                                                     *
*                            AFTER THE MESSAGE TEXT HAS BEEN    Y02669*
*                            ADDED TO THE WTO BUFFER, THE WTO   Y02669*
*                            IS ISSUED, THE CORE FREED AND      Y02669*
*                            CONTROL IS RETURNED.               Y02669*
*                            OTHERWISE, THE TEXT IS ADDED TO    Y02669*
*                            THE DCM INSTRUCTION LINE, THE      Y02669*
*                            LOCKS RELEASED AND CONTROL IS      Y02651*
*                            RETURNED.                          Y02669*
*                                                                     *
*   NOTES               =    NONE                               Y02669*
*                                                                     *
         EJECT
*    CHARACTER-CODE                                             Y02669*
*     DEPENDENCIES      =    ANY CHARACTER CODE OTHER THAN      Y02669*
*                            EBCDIC WILL REQUIRE REASSEMBLY     Y02669*
*                            OF THIS MODULE.                    Y02669*
*                                                                     *
*    DEPENDENCIES       =    THE ONLY ENTRANCE TO THIS MODULE   Y02669*
*                            IS FROM IEE5603D WHICH SUPPLIES    Y02669*
*                            NECESSARY INFORMATION IN THE XSA   Y02669*
*                            AND REGISTERS.                     Y02669*
*                                                                     *
*    RESTRICTIONS       =    NONE                               Y02669*
*                                                                     *
*    REGISTER                                                   Y02669*
*     CONVENTIONS       =    NONE                               Y02669*
*                                                                     *
*     PATCH LABEL       =    PATCH                              Y02669*
*                                                                     *
*   MODULE TYPE         =    CSECT (MESSAGE MODULE)             Y02669*
*                                                                     *
*    PROCESSOR          =    N/A                                Y02669*
*                                                                     *
*    MODULE SIZE        =    X'371' + X'48' PATCH AREA          Y02669*
*                                                                     *
*    ATTRIBUTES         =    REFRESHABLE, REENTRANT,            Y02669*
*                            SUPERVISOR MODE, KEY 0,            Y02669*
*                            PAGED LPA                          Y02669*
*                                                                     *
*   ENTRY POINT         =    IEE5903D FROM IEE5603D             Y02669*
*      PURPOSE          =    TO PICK UP THE SECOND PART OF MSG  Y02669*
*                            AND TO ISSUE ERROR MESSAGES FOR    Y02669*
*                            MSGRT AND K COMMANDS AND L=CCA     Y02669*
*                            OPERAND.                           Y02669*
*      LINKAGE          =    BRANCH                             Y02669*
*      INPUT            =    REG 2 - ADDRESS OF THE XSA         Y02669*
*                                WHICH CONTAINS INFO ABOUT THE  Y02669*
*                                MESSAGE TO BE WRITTEN          Y02669*
*                              XASTSAVE - ONE BYTE MESSAGE CODE Y02669*
*                              XAU - SOURCE CONSOLE ID          Y02669*
*                              XASSDS=X'80'(XASSDS1) ISSUE WTO  Y02669*
*                              XASSDS5 ON IF LOCKS STILL HELD   Y02651*
*                                      OFF LOCKS RELEASED       Y02651*
*                              XASCID - TARGET CONSOLE ID       Y02669*
*                              XASDID - TARGET AREA ID (CRT)    Y02669*
*                              XASAVSTD+12 - MSG BUFFER ADDR    Y02669*
*                              XASAVSTD+16 - RETURN ADDRESS     Y02669*
*                            REG 3 - CURRENT POSITION IN        Y02669*
*                                    MESSAGE BUFFER             Y02669*
*                            REG 6 - CURRENT MSG TEXT LENGTH    Y02669*
*                            REG 8 - ADDRESS OF TRANS DCM       Y02669*
*                                                                     *
*      REGISTERS SAVED  =    REGISTERS 11 - 14 SAVED IN XSA     Y02651*
*                            (XASAVLOC) BEFORE ISSUING SETLOCK  Y02651*
*                            AT LOCKSOFF                        Y02651*
*                            REGISTER 14 WAS SAVED IN IEE5603D  Y02669*
*                            IN XASAVSTD + 16.                  Y02669*
*                                                                     *
*      REGISTER CONTENTS                                        Y02669*
*      DURING PROCESSING=    R0  - WORK REG FOR WTO & FREEMAIN  Y02669*
*                            R1  - WORK REG FOR WTO & FREEMAIN  Y02669*
*                            R2  - INPUT - BASE REG FOR XSA     Y02669*
*                            R3  - INPUT - CURRENT POSITION     Y02669*
*                                          IN BUFFER            Y02669*
*                            R4  - ADDR DCM INSTRUCTION LINE    Y02669*
*                            R5  - USED TO CONVERT CONSOLE ID   Y02669*
*                            R6  - INPUT - CURRENT TEXT LENGTH  Y02669*
*                            R7  - UNUSED                       Y02669*
*                            R8  - INPUT - BASE REG TRANS DCM   Y02669*
*                            R9  - ERR CODE - MSG TABLE INDEX   Y02669*
*                            R10 - CORRESPONDING TABLE ENTRY    Y02669*
*                            R11 - MINOR MSG TEXT LENGTH        Y02669*
*                            R12 - MODULE BASE REG              Y02669*
*                            R13 - UNUSED                       Y02669*
*                            R14 - RETURN REGISTER              Y02669*
*                            R15 - BRANCH REGISTER              Y02651*
*                                                                     *
*      REGISTERS RESTORED=   REGISTERS 11 - 14 RESTORE FROM     Y02651*
*                            XASAVLOC AFTER ISSUING SETLOCK AT  Y02651*
*                            LOCKSOFF                           Y02651*
*                            RESISTER 14, RESTORED BEFORE       Y02669*
*                            RETURNING AT RETURN                Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXIT - NORMAL       =    RETURN BR R14 FROM                 Y02669*
*                            LOCKSOFF -> RETURN                 Y02669*
*  1   CONDITIONS       =    MESSAGE TO GO TO CRT DEVICE        Y02669*
*      OUTPUT DATA      =    MESSAGE IN DCM INSTRUCTION LINE    Y02669*
*                              DCMIOCM1 = DCMWRINS (X'04')      Y02669*
*                            IF DEVICE IS 2250 OR HAS LIGHT PEN:Y02669*
*                              DCMIOUNQ = DCMW2250 (X'08')      Y02669*
*                            SHOW DCM LINE CONTAINS ERROR MSG   Y02669*
*                              DCMIOUNQ = DCMINERR (X'02')      Y02669*
*                            ADD 'ENTER CANCEL' TO MSG          Y02669*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
         EJECT
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXIT - NORMAL       =    RETURN VIA BR R14 FROM             Y02669*
*                            ISSUEWTO -> RETURN                 Y02669*
*      CONDITIONS       =    MESSAGE ISSUED TO REQUESTING       Y02669*
*                            CONSOLE VIA WTO AND WTO BUFFER     Y02669*
*                            FREED VIA FREEMAIN                 Y02669*
*      OUTPUT DATA      =    MESSAGE                            Y02669*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXIT - ERROR        =    RETURN VIA BR R14 FROM             Y02651*
*                            FREEXIT -> RETURN                  Y02651*
*      CONDITIONS       =    BAD MESSAGE CODE IN XASTSAVE       Y02669*
*                            MESSAGE BUFFER OBTAINED IN         Y02669*
*                            IEE5603D FREED VIA FREEMAIN        Y02669*
*      OUTPUT DATA      =    NONE                               Y02669*
*      RETURN CODES     =    NONE                               Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  **
*                                                                     *
*   EXTERNAL REFERENCES                                         Y02669*
*                                                                     *
*      ROUTINES         =    NONE                               Y02669*
*                                                                     *
*      DATA AREAS       =    NONE                               Y02669*
*                                                                     *
*      CONTROL BLOCKS   = IEETDCM R - DEVICE TYPE INFORMATION   Y02669*
*                                 W - MSG AND MSG INDICATOR     Y02669*
*                         IEEXSA  R - INPUT INFORMATION         Y02669*
*                                 W - WORK AREA                 Y02669*
*                         IHAPSA  NECESSARY FOR SETLOCK         Y02651*
*                                                                     *
*      TABLE            =    THIS MODULE CONTAINS TWO MESSAGE   Y02669*
*                            TABLES. THE FIRST IN INDEXED BY    Y02669*
*                            TWICE THE MESSAGE CODE PASSED IN   Y02669*
*                            XASTSAVE. THE INDEXED HALF WORD    Y02669*
*                            POINTS TO AN ELEMENT IN TAB4 WHICH Y02669*
*                            CONTAINS THE APPROPIATE MESSAGE.   Y02669*
*                                                                     *
*                            TAB4 CONTAINS A ONE BYTE LENGTH OF Y02669*
*                            THE PREFORMATTED MESSAGE TEXT -1,  Y02669*
*                            ONE BYTE OF MESSAGE FLAGS:         Y02669*
*                                X'80' - 'CCA' REQUIRED IN MSG  Y02669*
*                                X'40' - 'CC' REQUIRED IN MSG   Y02669*
*                            AND THE PREFORMATTED MESSAGE TEXT. Y02669*
*                                                                     *
*      MACROS           =    MODID                              Y02669*
*                            WTO                                Y02669*
*                            FREEMAIN SUBPOOL 229               Y02669*
*                            SETLOCK CMS AND LOCAL RELEASED     Y02651*
*                                                                     *
*      ENQUEUE RESOURCES=    NONE                               Y02669*
*                                                                     *
*      CHANGE LEVEL     =    Y02669                             Y02669*
*                            Y02651                             Y02651*
*                            YM1911(PROLOGUE & COMMENT CHANGES) YM1911*
*                                                                     *
*      LOCKS HELD       =    CMS AND LOCAL LOCKS OBTAINED IN    Y02651*
*                            IEE7503D OR IEE5603D ARE RELEASED  Y02651*
*                            AND XASSDS5 IS TURNED OFF AT       Y02651*
*                            LOCKSOFF BEFORE RETURNING AT       Y02651*
*                            WTODCM AND FREEXIT.                Y02651*
*                                                                     *
*   MESSAGES            =    THE FOLLOWING MESSAGES ARE         Y02669*
*                            CONTAINED WITHIN THIS MODULE:      Y02669*
*                             * MEANS 'CCA' WILL APPEAR IN THE  Y02669*
*                               MESSAGE                         Y02669*
*                             # MEANS 'CC' WILL APPEAR IN THE   Y02669*
*                               MESSAGE                         Y02669*
*                             THE MESSAGE ID INDICATES THE      Y02669*
*                             MESSAGE FOR WHICH THE FOLLOWING   Y02669*
*                             TEXT BECOMES THE SECOND PART.     Y02669*
*                                                                     *
*                             THE MOD NAME INDICATES THE MODULE Y02669*
*                             WHICH ENCOUNTERED THE ERROR AND   Y02669*
*                             ISSUED THE ERROR CODE.            Y02669*
*                                                                     *
*     MOD NAME      XASTSAVE  MSG ID   SECOND PART OF MSG       Y02669*
*     ________      ________  ______  ____________________      Y02669*
*     IEE6703D        X'06'  IEE151I  NO DISPLAY ON SCREEN      Y02669*
*     IEE6703D        X'07'           NO DISPLAY IN AREA        Y02669*
*     IEE6703D        X'04'           USE STOPTR TO DELETE      Y02669*
*     IEE6703D        X'06'  IEE158I  NO DISPLAY ON SCREEN      Y02669*
*     IEE6703D        X'07'           NO DISPLAY IN AREA        Y02669*
*     IEE6703D        X'08'           LAST FRAME DISPLAYED      Y02669*
*     IEE6703D        X'09'           FRAME NOT COMPLETE        Y02669*
*     IEE6703D        X'0A'           DISPLAY IS NOT DYNAMIC    Y02669*
*     IEE6903D        X'1E'           NO TRACK ACTIVE           Y02669*
*     IEE7503D        X'0C'  IEE921I  DISPLAY ALREADY EXISTS    Y02669*
*     IEE7503D        X'0D'           DISPLAY AREA BUSY         Y02669*
*     IEE7503D        X'0E'           NO TRACK TO STOP          Y02669*
*     IEE7503D        X'19'           NEEDS DISPLAY AREA        Y02669*
*     IEE7703D        X'1C'           DEVICE NOT SUPPORTED      Y02669*
*     IEE6803D        X'0F'  IEE924I  SCREEN SIZE EXCEEDED      Y02669*
*     IEE6803D        X'10'           AREA TOO SMALL            Y02669*
*     IEE6903D        X'11'           DISPLAY IN OR ABOVE AREA  Y02669*
*     IEE6803D                                                  Y02669*
*     IEE7503D        X'12'  IEE926I  *   NOT AN AREA           Y02669*
*     IEE6303D                        #   SUBSYSTEM CONSOLE     Y02669*
*     IEE6303D        X'1F'           SUBSYSTEM CONSOLE        @Y02668P
*     IEE7503D        X'13'           #   NOT A CONSOLE         Y02669*
*     IEE6303D                                                  Y02669*
*     IEE7503D        X'14'           #   FULL CAPABILITY       Y02669*
*     IEE7503D        X'15'           DYNAMIC DISPLAY IN AREA   Y02669*
*     IEE6703D        X'18'           ON THIS COMMAND           Y02669*
*     IEE6803D        X'1D'           #   OUTPUT ONLY           Y02669*
*     IEE7703D                                                  Y02669*
*     IEE7803D        X'16'  IEE927I  SPECIFY DISPLAY ID        Y02669*
*     IEE6703D        X'17'           SPECIFY L OPERAND         Y02669*
*     IEE7503D                                                  Y02669*
*     IEE6703D        X'1A'  IEE925I  FOR CRT ONLY              Y02669*
*     IEE7503D                                                  Y02669*
*     IEE6403D        X'1B'           FOR NON CRT ONLY          Y02669*
*                                                                     *
*   SYSGEN              =    INCLUDED WITH SVC 34 IN LOAD       Y02669*
*                            MODULE IGC0003D, DLIB AOSB3,       Y02669*
*                            MACRO SGIEF441, TARGLIB LPALIB.    Y02669*
*                                                                     *
*   SYSTEM                                                      Y02669*
*    LIBRARIES          =    NONE                               Y02669*
*                                                                     *
***********************************************************************
         EJECT
IEE5903D CSECT
***********************************************************************
*                                                                     *
*                        REGISTERS                                    *
*                                                                     *
***********************************************************************
WRK0     EQU   0                   WORK REGISTER-WTO & FREEMAIN
WRK1     EQU   1                   WORK REGISTER-WTO & FREEMAIN
XSAR2    EQU   2                   INPUT-BASE REGISTER FOR XSA   Y02669
WRK3     EQU   3                   INPUT-CURRENT PLACE IN BUFFER Y02669
WRK4     EQU   4                   ADDR OF DCM INSTRUCTION LINE  Y02669
WRK5     EQU   5                   USED TO CONVERT CONSOLE ID    Y02669
WRK6     EQU   6                   INPUT-CURRENT LENGTH OF TEXT  Y02669
R7       EQU   7      (UNUSED)     UNUSED                        Y02669
TDCMR8   EQU   8                   INPUT-BASE REG FOR THE DCM    Y02669
WRK9     EQU   9                   ERR CODE FROM XSA-TABLE INDEX Y02669
WRK10    EQU   10                  CORRESPONDING TABLE ENTRY     Y02669
WRK11    EQU   11                  SECONDARY MESSAGE TEXT LENGTH Y02669
BASE12   EQU   12                  MODULE BASE REGISTER          Y02669
R13      EQU   13     (UNUSED)     UNUSED                        Y02669
RETURN14 EQU   14                  RETURN REGISTER               Y02669
R15      EQU   15                  BRANCH REGISTER               Y02651
         EJECT
***********************************************************************
*                                                                     *
*                        CONSTANTS                                    *
*                                                                     *
***********************************************************************
N0       EQU   0                   NUMBER CONSTANT
N1       EQU   1                   NUMBER CONSTANT
N2       EQU   2                   NUMBER CONSTANT
N3       EQU   3                   NUMBER CONSTANT
N4       EQU   4                   NUMBER CONSTANT
N6       EQU   6                   NUMBER CONSTANT
N12      EQU   12                  NUMBER CONSTANT               Y02669
N15      EQU   15                  NUMBER CONSTANT
N16      EQU   16                  NUMBER CONSTANT               Y02669
N59      EQU   59                  NUMBER CONSTANT
N64      EQU   64                  NUMBER CONSTANT
***********************************************************************
*                                                                     *
*                       FLAGS AND MASKS                               *
*                                                                     *
***********************************************************************
CCAFLAG  EQU   X'80'               CCA FLAG IN MESSAGE TABLE     Y02669
CCFLAG   EQU   X'40'               CC FLAG IN MESSAGE TABLE      Y02669
CODE2HI  EQU   31                  HIGHEST VALID MESSAGE CODE  @Y02668P
CODE2LO  EQU   4                   LOWEST VALID MESSAGE CODE     Y02669
TOOHIGH  EQU   2                   CONDITION CODE - HIGHER THAN  Y02669
TOOLOW   EQU   4                   CONDITION CODE - LOWER THAN   Y02669
XFF      EQU   X'FF'               MASK TO TURN OFF FLAGS        Y02669
CF0      EQU   X'F0'               EBCDIC ZONE
SP229    EQU   229                 SUBPOOL FOR MESSAGE BUFFER    Y02669
         EJECT
***********************************************************************
*                                                                     *
*              ESTABLISH ADDRESSABILITY FOR MODULE               Y02669
*      ADDRESSABILITY FOR XSA AND RESIDENT DCM ARE PART OF INPUT Y02669
*                                                                     *
***********************************************************************
         BALR  BASE12,N0           LOAD BASE REG                 Y02669
         USING *,BASE12            ADDRESSIBILITY OF ROUTINE     Y02669
         MODID BRANCH=YES                                        Y01886
         USING DXSA,XSAR2          ADDRESSIBILITY OF XSA         Y02669
         USING DCMSTRT,TDCMR8      ADDRESSIBILITY OF TRANS DCM   Y02669
         SPACE
***********************************************************************
*                                                                     *
*                 CHECK FOR INCORRECT MESSAGE CODE                    *
*                                                                     *
***********************************************************************
         SPACE 3
         CLI   XASTSAVE,CODE2HI    IS MSG CODE HIGHER THAN MAX?  Y02669
         BC    TOOHIGH,FREEXIT     YES, CHECK LOCKS AND RETURN   Y02651
         SPACE
         CLI   XASTSAVE,CODE2LO    IS MSG CODE LOWER THAN MIN?   Y02669
         BC    TOOLOW,FREEXIT      YES, CHECK LOCKS AND RETURN   Y02651
         EJECT
***********************************************************************
*                                                                     *
*              CALCULATE ENTRY IN MESSAGE TABLE                  Y02669
*                                                                     *
***********************************************************************
         SPACE
         SR    WRK9,WRK9           CLEAR REG                     Y02669
         IC    WRK9,XASTSAVE       SECONDARY ERR CODE FROM XSA   Y02669
         AR    WRK9,WRK9           DOUBLE CODE FOR INDEX         Y02669
         LA    WRK10,TAB3(WRK9)    PT TO APPROPRIATE TAB3 ENTRY  Y02669
         LH    WRK10,N0(WRK10)     LOAD TABLE ELEMENT            Y02669
         LA    WRK10,TAB4(WRK10)   PT TO APPROPRIATE TAB4 ENTRY  Y02669
         SPACE 2
***********************************************************************
*                                                                     *
*        ADD MESSAGE TEXT TO DCM INSTRUCTION LINE OR WTO BUFFER       *
*            REG 3 - CURRENT POSITION IN MESSAGE BUFFER          Y02669
*            REG 6 - CURRENT LENGTH OF MESSAGE TEXT              Y02669
*                                                                     *
***********************************************************************
         SPACE 3
         SR    WRK11,WRK11         CLEAR REG                     Y02669
         IC    WRK11,N0(WRK10)     GET FIXED MSG TEXT LENGTH - 1 Y02669
         EX    WRK11,FXTEXT        MOVE IN FIXED TEXT            Y02669
         AR    WRK6,WRK11          ORIGINAL TEXT + TEXT LENGTH   Y02669
         LA    WRK6,N1(WRK6)       INCREMENT POSITION BY ONE     Y02669
*                                  HAD TO BE 1 LESS FOR EXECUTE  Y02669
         TM    N1(WRK10),CCAFLAG   DOES MSG REQUIRE 'CCA'?       Y02669
         BO    MOVEAREA            YES                           Y02669
         SPACE 1
         TM    N1(WRK10),CCFLAG    DOES MSG REQUIRE 'CC'?        Y02669
         BO    UNPACKC             YES                           Y02669
         SPACE 1
WTODCM   EQU   *
         TM    XASSDS,XASSDS1      IS THIS A WTO?                Y02669
         BO    ISSUEWTO            YES                           Y02669
         EJECT
***********************************************************************
*                                                                     *
*              IF MESSAGE IN DCM INSTRUCTION LINE                Y02669
*                SET BITS, FREE LOCKS AND RETURN                 Y02669
*                                                                     *
***********************************************************************
         SPACE 2
         OI    DCMIOCM1,DCMWRINS   SET WRITE INSTRUCTION LINE IN DCM
         TM    DCMIOUNQ,DCMW2250   DOES DEVICE HAVE A LIGHT PEN?
         BZ    LOCKSOFF            NO, RELEASE LOCKS, RETURN     Y02651
         SPACE
         L     WRK4,DCMAINS        YES,POINT TO INSTRUCTION LINE Y02669
         MVC   N59(N15,WRK4),ENCANCEL  MOVE ENTER-CANCEL MSG IN  Y02669
         NI    DCMIOUNQ,XFF-DCMINNOR TURN OFF NORMAL LINE BIT    Y02669
         OI    DCMIOUNQ,DCMINERR   INDICATE ERROR MSG IN INST LINE
         SPACE
***********************************************************************
*  CMS AND LOCAL LOCKS MUST BE RELEASED BEFORE EXITING FROM THIS MODULE
***********************************************************************
LOCKSOFF EQU   *
         STM   WRK11,RETURN14,XASAVLOC  SAVE REGS ACROSS SETLOCK Y02651
         SETLOCK RELEASE,TYPE=CMS,                                     *
               RELATED=(TR,PT,K,IEE7503D(LOCKSET),IEE5603D(LOCKSTAT))
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(TR,PT,K,IEE7503D(LOCKSET),IEE5603D(LOCKSTAT))
         LM    WRK11,RETURN14,XASAVLOC  RESTORE AFTER SETLOCK    Y02651
         NI    XASSDS,XASSDS5      INDICATE LOCKS OFF            Y02651
         B     RETURN
         EJECT
***********************************************************************
*                                                                     *
*                 IF MESSAGE IS IN WTO BUFFER                    Y02669
*    ISSUE WTO FOR MESSAGE, FREE THE CORE AND RETURN             Y02669
*                                                                     *
***********************************************************************
         SPACE 3
ISSUEWTO EQU   *                                                 Y02669
         LA    WRK6,N4(WRK6)       4 EXTRA BYTES FOR WTO (MCS + LEN)
         L     WRK1,XASAVSTD+N12   BEGINNING ADDR OF MSG         Y02669
         STH   WRK6,N0(WRK1)       PUT LENGTH OF TEXT + 4 IN BUFFER
         AR    WRK6,WRK1           END ADDR OF MESSAGE BUFFER
         MVC   N0(N4,WRK6),DRCODES MOVE IN DESC AND ROUTE CODES
         SR    WRK0,WRK0           CLEAR REG
         IC    WRK0,XAU            GET SOURCE CONSOLE ID FROM XSA
         WTO   MF=(E,(1))          WRITE MESSAGE
         B     OKEXIT              NO LOCKS ON TO RELEASE        Y02651
         SPACE 3
***********************************************************************
*       COME HERE IF INVALID MESSAGE CODE IN XASTSAVE ONLY       Y02651
*          IF XASSDS HAS XASSDS1=ON WTO BUFFER MUST BE FREED     Y02651
*                                   NO LOCKS HELD                Y02651
*                        XASSDS5=ON LOCKS ARE ALWAYS HELD        Y02651
***********************************************************************
         SPACE 3
FREEXIT  EQU   *                                                 Y02651
         TM    XASSDS,XASSDS1      IF ON,LOCKS HAVE BEEN RELEASEDY02651
         BZ    LOCKSOFF            IF OFF, LOCKS MUST BE RELEASEDY02651
         SPACE 2
OKEXIT   EQU   *                   NO NEED TO RELEASE LOCKS      Y02651
         L     WRK1,XASAVSTD+N12   ADDR OF BUFFER FOR FREEMAIN   Y02669
         FREEMAIN R,LV=N64,A=(1),SP=SP229 FREE BUFFER            Y02669
         SPACE
RETURN   EQU   *
         L     RETURN14,XASAVSTD+N16  RESTORE R14 SAVED IN 5603D Y02669
         BR    RETURN14            RETURN TO CALLER              Y02669
         EJECT
***********************************************************************
*                                                                     *
*    MOVE CONSOLE ID OR CONSOLE AND AREA ID INTO MESSAGE         Y02669
*                                                                     *
***********************************************************************
         SPACE 3
MOVEAREA EQU   *
         MVC   N2(N1,WRK3),XASDID  MOVE AREA ID FROM XSA INTO MSG TEXT
         SPACE
UNPACKC  EQU   *
         SR    WRK5,WRK5           CLEAR REG                     Y02669
         IC    WRK5,XASCID         GET CONSOLE ID FROM XSA       Y02669
         CVD   WRK5,XAP            CONVERT CONSOLE ID TO DECIMAL Y02669
         UNPK  XAP+N1(N3),XAP+N6(N2) THEN TO PRINTABLE CHARACTERS
         OI    XAP+N3,CF0          CHANGE ZONE TO EBCDIC
         MVC   N0(N2,WRK3),XAP+N2  MOVE CONSOLE ID TO MSG TEXT
         B     WTODCM              BRANCH TO WRITE MESSAGE
         SPACE 3
***********************************************************************
*          EXECUTE INSTRUCTION TO MOVE TEXT INTO MESSAGE BUFFER
***********************************************************************
FXTEXT   MVC   N0(N0,WRK3),N2(WRK10) MOVE IN TEXT FROM TABLE     Y02669
         SPACE 2
         EJECT
***********************************************************************
*                                                                     *
*   THE FOLLOWING TABLE IS INDEXED BY TWICE THE MESSAGE CODE IN XAE   *
*   EACH HALF-WORD POINTS TO A TAB4 ELEMENT CONTAINING THE            *
*   APPROPIATE MESSAGE                                                *
*                                                                     *
***********************************************************************
PREMSG   EQU   2
TAB3     EQU   *
         DC    AL2(0)
         DC    X'FFFF'                 OBSOLETE MESSAGE CODE     Y02669
         DC    X'FFFF'                 OBSOLETE MESSAGE CODE     Y02669
         DC    X'FFFF'                 OBSOLETE MESSAGE CODE     Y02669
         DC    Y(VM04-TAB4-PREMSG)                               Y02669
         DC    X'FFFF'                 OBSOLETE MESSAGE CODE     Y02669
         DC    Y(VM06-TAB4-PREMSG)                               Y02669
         DC    Y(VM07-TAB4-PREMSG)                               Y02669
         DC    Y(VM08-TAB4-PREMSG)                               Y02669
         DC    Y(VM09-TAB4-PREMSG)                               Y02669
         DC    Y(VM10-TAB4-PREMSG)                               Y02669
         DC    X'FFFF'                 OBSOLETE MESSAGE CODE     Y02669
         DC    Y(VM12-TAB4-PREMSG)                               Y02669
         DC    Y(VM13-TAB4-PREMSG)                               Y02669
         DC    Y(VM14-TAB4-PREMSG)                               Y02669
         DC    Y(VM15-TAB4-PREMSG)                               Y02669
         DC    Y(VM16-TAB4-PREMSG)                               Y02669
         DC    Y(VM17-TAB4-PREMSG)                               Y02669
         DC    Y(VM18-TAB4-PREMSG)                               Y02669
         DC    Y(VM19-TAB4-PREMSG)                               Y02669
         DC    Y(VM20-TAB4-PREMSG)                               Y02669
         DC    Y(VM21-TAB4-PREMSG)                               Y02669
         DC    Y(VM22-TAB4-PREMSG)                               Y02669
         DC    Y(VM23-TAB4-PREMSG)                               Y02669
         DC    Y(VM24-TAB4-PREMSG)                               Y02669
         DC    Y(VM25-TAB4-PREMSG)                               Y02669
         DC    Y(VM26-TAB4-PREMSG)                               Y02669
         DC    Y(VM27-TAB4-PREMSG)                               Y02669
         DC    Y(VM28-TAB4-PREMSG)                               Y02669
         DC    Y(VM29-TAB4-PREMSG)                               Y02669
         DC    Y(VM30-TAB4-PREMSG)                               Y02669
         DC    Y(VM31-TAB4-PREMSG)                             @Y02668P
         EJECT
***********************************************************************
*
*    THE FOLLOWING TABLE CONTAINS:                               Y02669
*        A 1-BYTE LENGTH OF PREFORMATTED MESSAGE TEXT - 1        Y02669
*          1-BYTE OF MESSAGE FLAGS                               Y02669
*             X'80' - MESSAGE REQUIRES 'CCA' VALUE FOUND IN XAS  Y02669
*             X'40' - MESSAGE REQUIES 'CC' VALUE FOUND IN XAS    Y02669
*          PREFORMATTED MESSAGE TEXT                             Y02669
*                                                                     *
***********************************************************************
TAB4     EQU   *
         DC    AL1(L'VM04-1)              LENGTH OF FIXED TEXT   Y02669
         DC    X'00'                      FLAGS FOR MESSAGE
VM04     DC    C'USE STOPTR TO DELETE'    MESSAGE FIXED TEXT     Y02669
*
         DC    AL1(L'VM06-1)                                     Y02669
         DC    X'00'
VM06     DC    C'NO DISPLAY ON SCREEN'                           Y02669
*
         DC    AL1(L'VM07-1)                                     Y02669
         DC    X'00'
VM07     DC    C'NO DISPLAY IN AREA'                             Y02669
*
         DC    AL1(L'VM08-1)                                     Y02669
         DC    X'00'
VM08     DC    C'LAST FRAME DISPLAYED'                           Y02669
*
         DC    AL1(L'VM09-1)                                     Y02669
         DC    X'00'
VM09     DC    C'FRAME NOT COMPLETE'                             Y02669
*
         DC    AL1(L'VM10-1)                                     Y02669
         DC    X'00'
VM10     DC    C'DISPLAY IS NOT DYNAMIC'                         Y02669
*
         DC    AL1(L'VM12-1)                                     Y02669
         DC    X'00'
VM12     DC    C'DISPLAY ALREADY EXISTS'                         Y02669
*
         DC    AL1(L'VM13-1)                                     Y02669
         DC    X'00'
VM13     DC    C'DISPLAY AREA BUSY'                              Y02669
*
         DC    AL1(L'VM14-1)                                     Y02669
         DC    X'00'
VM14     DC    C'NO TRACK TO STOP'                               Y02669
*
         DC    AL1(L'VM15-1)                                     Y02669
         DC    X'00'
VM15     DC    C'SCREEN SIZE EXCEEDED'                           Y02669
*
         DC    AL1(L'VM16-1)                                     Y02669
         DC    X'00'
VM16     DC    C'AREA TOO SMALL'                                 Y02669
*
         DC    AL1(L'VM17-1)                                     Y02669
         DC    X'00'
VM17     DC    C'DISPLAY IN OR ABOVE AREA'                       Y02669
*
         DC    AL1(L'VM18-1)                                     Y02669
         DC    X'80'
VM18     DC    C'    NOT AN AREA'                                Y02669
*
         DC    AL1(L'VM19-1)                                     Y02669
         DC    X'40'
VM19     DC    C'   NOT A CONSOLE'                               Y02669
*
         DC    AL1(L'VM20-1)                                     Y02669
         DC    X'40'
VM20     DC    C'   FULL CAPABILITY'                             Y02669
*
         DC    AL1(L'VM21-1)                                     Y02669
         DC    X'00'
VM21     DC    C'DYNAMIC DISPLAY IN AREA'                        Y02669
*
         DC    AL1(L'VM22-1)                                     Y02669
         DC    X'00'
VM22     DC    C'SPECIFY DISPLAY ID'                             Y02669
*
         DC    AL1(L'VM23-1)                                     Y02669
         DC    X'00'
VM23     DC    C'SPECIFY L OPERAND'                              Y02669
*
         DC    AL1(L'VM24-1)                                     Y02669
         DC    X'00'
VM24     DC    C'ON THIS COMMAND'                                Y02669
*
         DC    AL1(L'VM25-1)                                     Y02669
         DC    X'00'
VM25     DC    C'NEEDS DISPLAY AREA'                             Y02669
*
         DC    AL1(L'VM26-1)                                     Y02669
         DC    X'00'
VM26     DC    C'FOR CRT ONLY'                                   Y02669
*
         DC    AL1(L'VM27-1)                                     Y02669
         DC    X'00'
VM27     DC    C'FOR NON CRT ONLY'                               Y02669
*
         DC    AL1(L'VM28-1)                                     Y02669
         DC    X'00'
VM28     DC    C'DEVICE NOT SUPPORTED'                           Y02669
*
         DC    AL1(L'VM29-1)                                     Y02669
         DC    X'40'
VM29     DC    C'   OUTPUT ONLY'                                 Y02669
*
         DC    AL1(L'VM30-1)                                     Y02669
         DC    X'00'                                             Y02669
VM30     DC    C'NO TRACK ACTIVE'                                Y02669
*                                                                Y02669
         DC    AL1(L'VM31-1)                                   @Y02668P
         DC    X'40'                                           @Y02668P
VM31     DC    C'    SUBSYSTEM CONSOLE'                        @Y02668P
*                                                              @Y02668P
         EJECT
***********************************************************************
*                                                                     *
*                        CONSTANTS                                    *
*                                                                     *
***********************************************************************
         SPACE
ENCANCEL DC    C'*ENTER**CANCEL*'  ADDED FOR CRT WITH CURSOR     Y02669
DRCODES  DC    X'0800'             DESCRIPTOR CODE
         DC    X'0000'             ROUTING CODE
         SPACE 5
***********************************************************************
*                                                                     *
*                        PATCH AREA                                   *
*                                                                     *
***********************************************************************
PATCH    DC    C'****PATCH AREA****'
PATCH2   DC    C'IEE5903D-TEST ONLY'
PATCH3   DC    36C' '
         EJECT
         IEETDCM                                                 Y01012
         EJECT
DXSA     DSECT
         IEEXSA
         EJECT
         IHAPSA
         END
