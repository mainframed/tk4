         TITLE 'IEE5103D - STAE EXIT PROCESSOR'
***********************************************************************
* MODULE NAME   = IEE5103D                                            *
*                                                                     *
* DESCRIPTION   = STAE EXIT ROUTINE                                   *
*                                                                     *
* COPY RIGHT    = N/A                                                 *
*                                                                     *
* STATUS        = OS-VS/2-RELEASE 3.7 PTF UZ07650              @ZA15790
*                                                                     *
* FUNCTION      = THIS ROUTINE PROVIDES A COMPLETE STORAGE DUMP       *
*                 WHEN REQUIRED AND INFORMS THE OPERATOR              *
*                 OF THE ABEND OCCURRED AND THE RESULTS OF THE DUMP.  *
*                 THEN IT VALIDITY CHECKS THE CSCB ADDRESSES IN THE   *
*                 CSCB CHAIN, AND THE CIB ADDRESSES IN THE CIB CHAIN. *
*                 IF AN ERROR IS FOUND, THE CHAIN IS TRUNCATED        *
*                 AND THE SYSTEM OPERATOR INFORMED.                   *
*                                                                     *
* OPERATION     = ONCE ADDRESSABILITY HAS BEEN ESTABLISHED AND A      *
*                 FULL DIAGNOSTIC DUMP (UNDER CERTAIN CONDITIONS) HAS *
*                 BEEN TAKEN VIA MEANS OF SDUMP MACRO, THE OPERATOR/  *
*                 USER IS INFORMED OF THE ABEND AND DUMP STATUS.      *
*                 CHAINS ARE THEN SCANNED FOR VALIDITY.               *
*                 THE FIRST CSCB ELEMENT IS FOUND AND CHECKED         *
*                 TO INSURE THAT IT LIES WITHIN THE BOUNDS OF         *
*                 SQA, AND ON A DOUBLE WORD BOUNDRY.  IF THE          *
*                 CSCB ADDRESS IS VALID, THE CIB CHAIN OF THE         *
*                 CSCB JUST PROCESSED IS SCANNED FOR VALIDITY         *
*                 (THE SAME TESTS AS THE CSCB).  THIS PROCESS         *
*                 CONTINUES UNTIL ALL CSCB'S AND CIB'S HAVE           *
*                 BEEN VALIDITY CHECKED.                              *
*                 IF AN ERROR IS FOUND, THE PROPER CHAIN              *
*                 IS TRUNCATED AND THE OPERATOR IS INFORMED.          *
*                                                                     *
* NOTES:                                                              *
*  CHARACTER-                                                         *
*   CODE        = THIS MODULE MAY BE ASSEMBLED WITH ANY CODE SET      *
*  DEPENDENCIES = NONE                                                *
*  RESTRICTIONS = NONE                                                *
*  REGISTER-                                                          *
*   CONVENTIONS = NONE                                                *
*  PATCH LABEL  = PATCH                                               *
*                                                                     *
* MODULE TYPE:                                                        *
*  PROCESSOR    = ASSEMBLER                                           *
*  MODULE SIZE  = X'492'                                       @ZA15790
*  ATTRIBUTES   = REENTRANT, REUSEABLE, READ-ONLY, KEY-ZERO, PAGED LPA*
*                                                                     *
* ENTRY POINT   = IEE5103D                                            *
*  PURPOSE      = SVC 34 STAE EXIT ROUTINE                            *
*  LINKAGE      = SYNCH                                               *
*  INPUT        = WHEN REGISTER 0 IS EQUAL TO 'C'                     *
*                       (INDICATES INFORMATION IS IN REGISTERS)       *
*                      REGISTER 1 - ABEND CODE                        *
*                      REGISTER 2 - POINTER TO PARAMETER AREA         *
*                      REGISTER 14 - RETURN ADDRESS                   *
*                 WHEN REGISTER 0 IS NOT EQUAL TO 'C'                 *
*                       (INDICATES INFORMATION IS NOT IN REGISTERS)   *
*                      REGISTER 1 - POINTER TO SDWA                   *
*                      REGISTER 14 - RETURN ADDRESS                   *
*  INVOKER      = ABEND STAE INTERFACE ROUTINE                        *
* REGISTER USAGE:                                                     *
*  SAVED        = NONE                                                *
*  RESTORED     = NONE                                                *
* EXIT - NORMAL:  RETRY ADDRESS PASSED IN PARAMETER AREA              *
*  CONDITIONS   = ALL                                                 *
*  OUTPUT DATA  = DUMPS AND MESSAGES                                  *
* RETURN CODE   = EIGHT                                               *
* EXIT - ERROR:                                                       *
*  CONDITIONS   = NONE                                                *
*  OUTPUT DATA  = NONE                                                *
*  RETURN CODE  = NONE                                                *
* EXTERNAL:                                                           *
*  REFERENCES   = NONE                                                *
*  ROUTINES     = NONE                                                *
*  DATA AREAS   = INTERFACE WORK AREA                                 *
*  CONTROL BLOCK= ESTAE PARM AREA                               R,U   *
*                 COMMAND SCHEDULING CONTROL BLOCK (CSCB)       R     *
*                 STAE DIAGNOSTIC WORK AREA                     R,U   *
*                 MASTER SCHEDULER RESIDENT DATA AREA (BASEA)   R     *
*                 COMMUNICATION CONTROL TABLE (CVT)             R     *
*                 UNIT CONTROL MODULE (UCM)                     R     *
*                  KEY - R = REFERENCE                                *
*                        U = UPDATE                                   *
*                        G = GETMAIN                                  *
*                        F = FREEMIN                                  *
*  MACROS       = MODID    MODULE IDENTIFICATION                      *
*                 SDUMP    DIAGNOSTIC DUMP                            *
*                 ENQ      CSCB RESOURCE                              *
*                 DEQ      CSCB RESOURCE                              *
*                 SETRP    TO RETURN TO STAE                          *
*  TABLES       = NONE                                                *
*  ENQUEUED                                                           *
*   RESOURCES   = Q10 (CSCB)                                          *
*  LOCKS        = NONE                                                *
*  SYSGEN       = IN THE IEE0003D LOAD - NO ALIASES                   *
*  LIBRARIES    = NONE                                                *
*  CHANGE LEVEL = Y02653,ZA15790,ZA15793                       @ZA15790
* MESSAGES      = IEE480I CCCC COMMAND ABEND XXX, DUMPED, TERMINATED  *
*                 IEE480I SVC 34 ABEND XXX, DUMPED, TERMINATED        *
*                   CCCC = COMMAND NAME                               *
*                   XXX  = ABEND COMPLETION CODE                      *
*                   'DUMPED' WILL APPEAR ONLY IF A DUMP WAS TAKEN     *
*                 IEE513I COMMAND PROCESSING LIMITED                  *
***********************************************************************
         EJECT
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
MRC      IEEBASEA
         EJECT
CVTSECT  DSECT
         CVT
         EJECT
CSCB     DSECT
         IEECHAIN
         EJECT
         IHASDWA
         EJECT
         IHAGDA
         EJECT
         IHASPQE
         EJECT
         IHADQE
         EJECT
IEE5103D CSECT
* D STAE0010 APPROX 117000                                     @ZA15790
* C PATCH    APPROX 282747                                     @ZA15790
* A STAE0050 APPROX 146500                                     @ZA15793
* C DUMPPARM APPROX 282461                                     @ZA15793
* A EPARMS   APPROX 284718                                     @ZA15793
* C INSERT3  APPROX 281419                                     @ZA15793
* A MSGLEN3A APPROX 282891                                     @ZA15793
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
R0       EQU   0             INPUT REGISTER WORK REGISTER        Y02653
R1       EQU   1             INPUT REGISTER WORK REGISTER        Y02653
R2       EQU   2             INPUT REGISTER PARAMETER AREA BASE  Y02653
R3       EQU   3             WORK REGISTER                       Y02653
R4       EQU   4             WORK REGISTER                       Y02653
R5       EQU   5             WORK REGISTER                       Y02653
R6       EQU   6             WORK REGISTER                       Y02653
R7       EQU   7             WORK REGISTER                       Y02653
R8       EQU   8             WORK REGISTER                       Y02653
R9       EQU   9             WORK REGISTER                       Y02653
R10      EQU   10            WORK REGISTER                       Y02653
R11      EQU   11            BASE OF STAE DIAGNOSTIC WORK AREA   Y02653
R12      EQU   12            PROGRAM BASE                        Y02653
R14      EQU   14            RETURN ADDRESS                      Y02653
R15      EQU   15            SAVE ADDRESS IN EACH SCAN           Y02653
***********************************************************************
*        CHARACTER AND NUMERIC EQUATES                                *
***********************************************************************
E0       EQU   0             CONSTANT 0F 0                       Y02653
E3       EQU   3             CONSTANT 0F 3                       Y02653
E4       EQU   4             CONSTANT 0F 4                       Y02653
E5       EQU   5             CONSTANT 0F 5                       Y02653
E8       EQU   8             CONSTANT 0F 8                       Y02653
E12      EQU   12            CONSTANT OF 12                      Y02653
E29      EQU   29            CONSTANT OF 29                      Y02653
E38      EQU   38            CONSTANT OF 38                      Y02653
ALLB     EQU   15            ICM ALL BYTES TO REGISTER           Y02653
TWOB     EQU   3             ICM LOW TWO BYTES TO REGISTER       Y02653
CIBDISP  EQU   CHCIBP-CHAIN  DISPLACEMENT TO CIB POINTER IN CSCB Y02653
BLNK     EQU   C' '          BLANK                               Y02653
COMA     EQU   C','          COMMA                               Y02653
X10      EQU   X'10'         MASK FOR DESCRIPTOR CODES           Y02653
         EJECT
***********************************************************************
*        BASE MODULE                                                  *
***********************************************************************
         BALR  R12,R0        ESTABLISH PROGRAM ADDRESSABILITY    Y02653
         USING *,R12         SET THE BASE FOR IT                 Y02653
         MODID BRANCH=YES                                        Y01886
         EJECT
***********************************************************************
*        THE FOLLOWING CODE WILL DETERMINE THE TYPE ENTRY WAS SET UP  *
*        AS TO USE THE PROPER LINKAGE IN REENTERING THIS ROUTINE AS A *
*        RETRY ROUTINE AGAIN UNDER THE PROTECTION OF ESTAE.           *
***********************************************************************
         C     R0,TWELVE     WAS WORK AREA PASSED?               Y02653
         BE    STAE0005      YES, REQUIRED INFO IS IN REGISTERS: Y02653*
                            REGISTER 1 - ABEND CODE              Y02653*
                            REGISTER 2 - PARAMETER AREA POINTER  Y02653
         LR    R11,R1        SET ESTAE PARMAREA ADDRESS          Y02653
         USING SDWA,R11      BASE FOR ABEND WORKAREA             Y02653
         USING EPARMS,R2     BASE FOR PARMAREA                   Y02653
         L     R2,SDWAPARM   ADDRESS OF PARMAREA                 Y02653
         L     R1,SDWAABCC   GET ABEND CODE                      Y02653
         ST    R2,SDWASR01   PASS PARM ADDRESS INTO ASIR         Y02653
         TM    SDWAERRC,SDWAPERC                                 Y02653*
                             IS IT PERCOLATION?                  Y02653
         BO    STAE0010      YES, BYPASS DUMP INDICATOR          Y02653
         TM    SDWAERRA,SDWAMCHK                               @YM3502P*
                             IS IT A MACHINE CHECK?            @YM3502P
         BO    STAE0010      YES, BYPASS DUMP INDICATOR        @YM3502P
STAE0005 EQU   *                                                 Y02653
         OI    PARMFLGS,PARMDUMP                                 Y02653*
                             INDICATE DUMP REQUIRED              Y02653
         DROP  R11           RELEASE SDWA BASE                   Y02653
STAE0010 EQU   *                                                 Y02653
*        R14 USED TO BE SAVED IN PARMRETY WHICH CAUSED THE     @ZA15790
*        RETRY ADDR ESTABLISHED BY IEE0003D TO BE OVERLAID.    @ZA15790
*        CONTROL IS NOW RETURNED TO THE ADDR SPECIFIED IN      @ZA15790
*        PARMRETY INSTEAD OF THE ABEND STAE INTERFACE ROUTINE  @ZA15790
         ST    R1,PARMABND   STORE ABEND CODE IN AREA            Y02653
         ST    R12,PARMWORK  PASS BASE ADDRESS INTO ASIR         Y02653
         C     R0,TWELVE     WAS WORK AREA PASSED?               Y02653
         BE    STAE0015      YES, DO QUICK RETRY                 Y02653
         LR    R1,R11        SET SDWA ADDRESS FOR EXIT           Y02653
         SETRP RETADDR=STAE0020,RECORD=YES,RETREGS=YES,          Y02653*
               RECPARM=LRECINF,RC=4,FRESDWA=YES,DUMP=NO        @YM3503P
         BR    R14           RETURN TO ASIR                      Y02653
STAE0015 EQU   *                                                 Y02653
         LA    R0,STAE0020   SET RETRY ADDRESS                   Y02653
         LA    R15,E4        INDICATE RETRY                      Y02653
         BR    R14           RETURN TO ASIR                      Y02653
         EJECT
***********************************************************************
*        THIS SECTION OF CODE IS THE ENTRY TO THE RETRY ROUTINE.      *
*        ITS FUNCTION IS TO RESET THE BASE ADDRESS AND TO FIND        *
*        AND HANDLE ABEND RECURSIONS BY PICKING UP THE PROCESS        *
*        CODE AND BRANCHING TO THE FUNCTION TO BE PERFORMED.          *
***********************************************************************
STAE0020 EQU   *             ESTAE RETRY POINT                   Y02653
         LR    R2,R1         SET PARMAREA ADDRESS                Y02653
         L     R12,PARMWORK  SET BASE REGISTER                   Y02653
         LH    R4,PARMCODE   GET RECURSION CODE                  Y02653
         B     STAE0040(R4)  START STAE PROCESSING               Y02653
STAE0040 EQU   *                                                 Y02653
         B     STAE0050      DUMP SYSTEM                         Y02653
         B     STAE0070      INFORM OPERATOR                     Y02653
         B     STAE0120      INFORM TERMINAL USER                Y02653
         B     STAE0140      CLEAN UP CHAINS                     Y02653
         B     STAE0220      RETURN                              Y02653
         EJECT
***********************************************************************
*        THE FOLLOWING WILL BUMP THE PROCESS CODE AND THEN WILL       *
*        DETERMINE IF A DUMP IS NECESSARY.  IF ENTERED BECAUSE        *
*        OF A SYSTEM FAILURE, A PROGRAM CHECK, OR THE SYSTEM          *
*        RESTART KEY WAS DEPRESSED THEN A DUMP WILL BE TAKEN.         *
***********************************************************************
STAE0050 EQU   *                                                 Y02653
         LA    R4,E4(R4)     BUMP PROCESS CODE                   Y02653
         STH   R4,PARMCODE   PUT IT IN PARAMETER AREA            Y02653
         TM    PARMFLGS,PARMDUMP                                 Y02653*
                             DUMP REQUIRED?                      Y02653
         BNO   STAE0070      NO, BYPASS DUMP                     Y02653
         MVC   PARMMESG(DUMPL),DUMPPARM                          Y02653*
                             MOVE IN LIST FORM OF DUMP           Y02653
         LA    R6,PARMMESG   SET UP ADDRESSABILITY TO          @ZA15793
         USING PARMDMP,R6    MESSAGE AREA                      @ZA15793
         LA    R10,PARMDTIT  ADDR OF DUMP TITLE                @ZA15793
         TM    PARMFLGS,PARMCOMD  WAS COMMAND ISSUED?          @ZA15793
         BNO   STAE0060      NO. LEAVE TITLE ALONE             @ZA15793
         MVC   PARMDVAR(MSGLEN3A),INSERT3  MOVE IN "COMMAND"   @ZA15793
         LH    R9,PARMLNCM   GET LENGTH OF COMMAND             @ZA15793
         BCTR  R9,0          DECREMENT FOR EXECUTE             @ZA15793
         LA    R6,PARMDCMD   ADDR OF WHERE CMD IS TO BE PLACED @ZA15793
         DROP  R6                                              @ZA15793
         EX    R9,COMMOVE    MOVE THE COMMAND TO TITLE         @ZA15793
STAE0060 EQU   *                                               @ZA15793
         LA    R1,PARMMESG   ADDRESS OF LIST FORM                Y02653
         SDUMP HDRAD=(R10),MF=(E,(1)) INVOKE DUMP              @ZA15793
         LR    R10,R15       SAVE RETURN CODE                    Y02653
         B     STAE0080      INFORM OPERATOR                     Y02653
STAE0070 EQU   *             RECURSIVE ABEND MESSAGE ENTRY       Y02653
         LA    R10,E4        INDICATE NO 'DUMPED,' MESSAGE       Y02653
         EJECT
***********************************************************************
*        THE FOLLOWING CODE WILL CONSTRUCT A MESSAGE TO INFORM        *
*        THE OPERATOR OF THE PROBLEM, THE STATUS OF THE DUMP,         *
*        AND THAT THE COMMAND IS BEING TERMINATED.                    *
***********************************************************************
STAE0080 EQU   *             NORMAL MESSAGE ENTRY                Y02653
         LA    R4,E4(R4)     INDICATE MESSAGE ATTEMPTED          Y02653
         STH   R4,PARMCODE   PUT IT IN PARAMETER AREA            Y02653
         MVC   PARMMESG(MSGLEN5),ABMSG                           Y02653*
                             MOVE IN BASE ABEND MESSAGE          Y02653
         LA    R5,PARMMESG   ADDRESS OF MESSAGE START            Y02653
         LR    R6,R5         ADDRESS OF MESSAGE START            Y02653
         AH    R6,MSGLEN     BUMP TO BUFFER STARTING POSITION    Y02653
         TM    PARMFLGS,PARMCOMD                                 Y02653*
                             WAS A COMMAND ISSUED?               Y02653
         BNO   STAE0090      NO, THEN INDICATE SVC 34 FAILED     Y02653
         LH    R9,PARMLNCM   GET LENGTH OF COMMAND               Y02653
         BCTR  R9,R0         DECREMENT FOR EXECUTE               Y02653
         EX    R9,COMMOVE    MOVE THE COMMAND                    Y02653
         AH    R6,PARMLNCM   BUMP TO NEXT POSITION IN BUFFER     Y02653
         MVC   E0(MSGLEN3,R6),INSERT3                            Y02653*
                             MOVE IN ABEND NAME                  Y02653
         LA    R6,MSGLEN3(R6)                                    Y02653*
                             BUMP TO NEXT POSITION IN BUFFER     Y02653
         B     STAE0100      BYPASS SVC 34 FAILED PART           Y02653
STAE0090 EQU   *                                                 Y02653
         MVC   E0(MSGLEN2,R6),INSERT2                            Y02653*
                             MOVE IN 'SVC 34 FAILED' MESSAGE     Y02563
         LA    R6,MSGLEN2(R6)                                    Y02653*
                             BUMP TO NEXT POSITION IN BUFFER     Y02653
         EJECT
***********************************************************************
*        THE FOLLOWING WILL PUT THE ABEND CODE INTO THE               *
*        MESSAGE BEING BUILT.  THEN IT WILL ADD THE 'DUMPED' MESSAGE  *
*        PORTION TO THE MESSAGE, IF REQUIRED AND FINALLY IT           *
*        WILL ADD THE 'TERMINATED' MESSAGE PORTION AND ISSUE THE WTO. *
***********************************************************************
STAE0100 EQU   *             ABEND CONVERSION CODE               Y02653
         USING PARMABN0,R6   SET BASE FOR ABEND CODE             Y02653
         L     R9,PARMABND   PICK UP ABEND CODE                  Y02653
         N     R9,MASK1      'AND' OFF DUMP BIT                  Y02653
         SRL   R9,E12        SHIFT TO LOW ORDER BYTES            Y02653
         STH   R9,PARMWORK   PUT IT IN WORKAREA                  Y02653
         UNPK  PARMABN1(E5),PARMWORK(E3)                         Y02653*
                             UNPACK FOR TRANSLATE                Y02653
         TR    PARMABN2(E3),TABLE                                Y02653*
                             TRANSLATE FOR MESSAGE OUTPUT        Y02653
         MVI   PARMABN1,BLNK BLANK FIRST PART                    Y02653
         MVI   PARMABN5,COMA ADD COMMA TO END                    Y02653
         LA    R6,E5(R6)     BUMP TO NEXT POSITION IN BUFFER     Y02653
         DROP  R6            RELEASE BASE                        Y02653
         LTR   R10,R10       DUMP SUCCESSFUL?                    Y02653
         BNZ   STAE0110      NO, BYPASS 'DUMPED,' PART           Y02653
         MVC   E0(MSGLEN0,R6),INSERT0                            Y02653*
                             MOVE IN 'DUMPED,' MESSAGE           Y02653
         LA    R6,MSGLEN0(R6)                                    Y02653*
                             BUMP TO NEXT POSITION IN BUFFER     Y02653
STAE0110 EQU   *                                                 Y02653
         MVC   E0(MSGLEN4,R6),INSERT4                            Y02653*
                             MOVE IN 'TERMINATED' MESSAGE        Y02653
         LA    R6,MSGLEN4(R6)                                    Y02653*
                             BUMP TO END OF BUFFER               Y02653
         MVC   E0(E4,R6),RETCDE5                                 Y02653*
                             INSERT COMMAND STATUS ROUTING CODES Y02653
         TM    PARMFLGS,PARMCOMD                                 Y02653*
                             IS IT COMMAND STATUS?               Y02653
         BO    STAE0111      YES, BRANCH                         Y02653
         MVC   E0(E4,R6),RETCDE4                                 Y02653*
                             INSERT SYSTEM STATUS ROUTING CODES  Y02653
STAE0111 EQU   *                                                 Y02653
         SR    R6,R5         CALCULATE LENGTH OF MESSAGE         Y02653
         STH   R6,MSGLEN     PUT LENGTH IN MESSAGE               Y02653
         SR    R0,R0         CLEAR INSERTION REGISTER            Y02653
         ICM   R0,ALLB,PARMTYPE                                  Y02653*
                             GET DESTINATION INFORMATION         Y02653
         BP    STAE0115      IF POSITIVE, CONTINUE CHECKING      Y02653
STAE0112 EQU   *             MESSAGE TO MASTER CONSOLE           Y02653
         SR    R0,R0         INDICATE MASTER CONSOLE             Y02653
         B     STAE0118      GO ISSUE WTO                        Y02653
STAE0115 EQU   *             EXAMINE FOR ASID OR CONSOLE ID      Y02653
         SR    R0,R0         ZERO INSERTION REGISTER             Y02653
         ICM   R0,TWOB,PARMTPUT                                  Y02653*
                             PULL IN THE ID                      Y02653
         BM    STAE0112      TOP BIT ON THEN ASID/MASTER         Y02653
STAE0118 EQU   *                                                 Y02653
         LA    R1,PARMMESG   ADDRESS OF MESSAGE                  Y02653
         WTO   MF=(E,(1))    WRITE OUT MESSAGE                   Y02653
         EJECT
***********************************************************************
*        THE FOLLOWING SECTION OF CODE WILL DETERMINE IF THE          *
*        COMMAND WAS FROM A TERMINAL.  IF SO, IT WILL SEND THE        *
*        TERMINATION MESSAGE VIA TPUT TO THE TERMINAL THAT            *
*        ISSUED THE REQUEST.                                          *
***********************************************************************
STAE0120 EQU   *                                                 Y02653
         LA    R4,E4(R4)     INDICATE TPUT ATTEMPTED             Y02653
         STH   R4,PARMCODE   PUT IT IN PARAMETER AREA            Y02653
         SR    R15,R15       CLEAR INSERTION REGISTER            Y02653
         ICM   R15,TWOB,PARMTPUT                                 Y02653*
                             IS THERE AN ASID TO TPUT?           Y02653
         BNM   STAE0140      NO, BYPASS TPUT PROCESS             Y02653
         N     R15,MASK2     TURN OFF HIGH END BITS              Y02653
         LH    R5,MSGLEN     GET LENGTH OF WTO MESSAGE           Y02653
         LA    R6,E4         LENGTH OF UNWANTED INFORMATION      Y02653
         SR    R5,R6         SUBTRACT IT FROM WTO LENGTH         Y02653
         LA    R1,PARMPUTM   ADDRESS OF THE TPUT TEXT            Y02653
         TPUT  (1),(5),TJID=(15)                                 Y02653*
                             TPUT THE MESSAGE                    Y02653
         EJECT
***********************************************************************
*        THE FOLLOWING WILL VERIFY THE VALIDITY OF THE CSCB'S TO      *
*        SEE IF IT IS WITHIN THE BOUNDS OF SQA AND ON A DOUBLE        *
*        WORD BOUNDRY.  IT WILL ALSO CHECK THE CIB'S OF EACH CSCB.    *
***********************************************************************
STAE0140 EQU   *                                                 Y02653
         LA    R4,E4(R4)     INDICATE SCAN ATTEMPTED             Y02653
         STH   R4,PARMCODE   PUT IT IN PARAMETER AREA            Y02653
         SYSEVENT DONTSWAP   DON'T ALLOW SWAP UPDER ENQUEUE      Y02653
         MVC   PARMMESG(ENQLEN),LISTENQ                          Y02653*
                             SET UP THE LIST FORM OF ENQUEUE     Y02653
         LA    R1,PARMMESG   SET ADDRESS OF ENQUEUE LIST         Y02653
         ENQ   MF=(E,(1))    ENQUEUE ON THE CSCB CHAIN           Y02653
STAE0145 EQU   *                                                 Y02653
         L     R6,CVTPTR     ADDRESS OF THE CVT                  Y02653
         USING CVTSECT,R6    BASE THE CVT                        Y02653
         L     R5,CVTMSER    RELOAD IEEBASEA POINTER             Y02653
         USING BASE,R5       BASE FOR IEEBASEA                   Y02653
         LR    R15,R5        GET ADDRESS OF BACHN                Y02653
         L     R1,BACHN      GET ADDRESS OF CSCB CHAIN           Y02653
         LR    R8,R1         SAVE CSCB ADDRESS                   Y02653
         SR    R4,R4         INSERT CSCB CODE OF 0 IN REGISTER 4 Y02653
         L     R6,CVTGDA     OBTAIN THE GDA ADDRESS              Y02653
         DROP  R6                                                Y02653
         USING GDA,R6        ESTABLISH GDA ADDRESSABILITY        Y02653
         L     R7,SQASPQEP   OBTAIN THE SPQE ADDRESS             Y02653
         USING SPQESECT,R7   ESTABLISH SPQE ADDRESSABILITY       Y02653
         DROP  R6                                                Y02653
         L     R9,SPDQEPTR   OBTAIN THE DQE ADDRESS              Y02653
STAE0148 EQU   *                                                 Y02653
         DROP  R5            RELEASE BASE REGISTER               Y02653
         USING DQESECT,R9    ESTABLISH DQE ADDRESSABILITY        Y02653
         LR    R5,R9         SAVE THE DQE ADDRESS                Y02653
         L     R6,DQEBLKAD   LOAD THE STARTING ADDRESS           Y02653
         LA    R6,E0(R6)     CLEAR THE HIGH ORDER BYTE           Y02653
         L     R7,DQELNTH    LOAD THE LENGTH OF THE AREA         Y02653
         AR    R7,R6         COMPUTE THE ENDING ADDRESS          Y02653
         EJECT
***********************************************************************
*        FIND THE CSCB ADDRESS AND SCAN THE CSCB CHAIN.               *
*        ALSO, SCAN THE CIB CHAIN OFF EACH CSCB.                      *
***********************************************************************
STAE0150 EQU   *                                                 Y02653
         LA    R1,E0(R1)     CLEAR HIGH ORDER BYTE               Y02653
         LTR   R0,R1         IS THE ELEMENT LAST ON CHAIN?       Y02653
         BZ    STAE0180      YES, GO TO NEXT STEP                Y02653
STAE0155 EQU   *                                                 Y02653
         CR    R1,R6         IS THE ADDRESS BEFORE SQA?          Y02653
         BL    STAE0170      YES, BRANCH                         Y02653
         CR    R1,R7         IS THE ADDRESS AFTER SQA?           Y02653
         BNL   STAE0170      YES, BRANCH                         Y02653
         SLL   R0,E29        SHIFT OFF ALL BUT 3 LOW ORDER BITS  Y02653
         LTR   R0,R0         IS IT ON A DOUBLE WORD BOUNDARY?    Y02653
         BNZ   STAE0200      NO, BRANCH                          Y02653
         LTR   R4,R4         CSCB OR CIB?                        Y02653
         BZ    STAE0165      A CSCB, BRANCH                      Y02653
         LR    R15,R1        SAVE OLD CIB ADDRESS                Y02653
         L     R1,E0(R1)     GET ADDRESS OF NEXT CIB             Y02653
         B     STAE0148      CONTINUE SCANNING                   Y02653
STAE0165 EQU   *                                                 Y02653
         USING CHAIN,R1      BASE THE CSCB                     @YM6166P
         TM    CHSTS,CHAP    CSCB PROCESSING PENDING?          @YM6166P
         DROP  R1            TRLRSDR CSCB BASE                 @YM6166P
         BO    STAE0190      YES - NO CIB POINTER AVAILABLE    @YM6166P
         LA    R15,CIBDISP(R1)                                   Y02653*
                             ADDRESS OF CIB POINTER              Y02653
         L     R1,E0(R15)    GET NEXT CIB ADDRESS                Y02653
         LA    R4,E8         INSERT CODE OF 8 FOR CSCBCIB        Y02653
         B     STAE0148      SCAN THE CHAIN                      Y02653
         EJECT
***********************************************************************
*        THE FOLLOWING WILL HANDLE THE MULTIPLE PQE'S OF              *
*        SQA AND WILL RESET BACK TO THE FIRST PQE PRIOR TO            *
*        GOING ON AND CHECKING THE NEXT CONTROL BLOCK.                *
***********************************************************************
STAE0170 EQU   *                                                 Y02653
         DROP  R9                                                Y02653
         USING DQESECT,R5    ESTABLISH DQE ADDRESSABILITY        Y02653
         L     R5,DQEPTR     GET NEXT SQA SEGMENT DQE            Y02653
         LA    R5,E0(R5)     ZERO THE HIGH ORDER BYTE            Y02653
         LTR   R5,R5         ANY MORE SQA SEGMENTS?              Y02653
         BZ    STAE0200      NO MORE SQA SEGMENTS                Y02653
         L     R6,DQEBLKAD   GET THE START OF SQA SEGMENT        Y02653
         LA    R6,E0(R6)     ZERO THE HIGH ORDER BYTE            Y02653
         L     R7,DQELNTH    GET THE LENGTH OF SQA SEGMENT       Y02653
         AR    R7,R6         FIND THE NEW HIGH ADDRESS           Y02653
         B     STAE0155      RECHECK THE CURRENT CHAIN           Y02653
STAE0180 EQU   *                                                 Y02653
         LTR   R4,R4         ANY MORE CSCB'S TO PROCESS?         Y02653
         BZ    STAE0210      NO, END OF SCANNING                 Y02653
         SR    R4,R4         INDICATE CSCB CODE OF ZERO          Y02653
STAE0190 LR    R15,R8        SAVE THE CSCB ADDRESS             @YM6166P
         L     R8,E0(R15)    GET ADDRESS OF NEXT CSCB            Y02653
         LR    R1,R8         SAVE CSCB ADDRESS IN REGISTER 8     Y02653
         B     STAE0150      SCAN THE CHAIN                      Y02653
         EJECT
***********************************************************************
*        THIS CODE WILL TRUNCATE THE CSCB CHAIN AND INFORM            *
*        THE OPERATOR VIA MESSAGE IEE513I THAT THE CHAIN WAS          *
*        TRUNCATED.                                                   *
***********************************************************************
STAE0200 EQU   *                                                 Y02653
         XC    E0(E4,R15),E0(R15)                                Y02653*
                             TRUNCATE CHAIN                      Y02653
         OI    PARMFLGS,PARMCHOP                                 Y02653*
                             INDICATE CHAIN WAS CHOPPED          Y02653
         LTR   R4,R4         CSCB OR CIB CHAIN?                  Y02653
         BZ    STAE0145      CONTINUE CIB ERROR CHECKING         Y02653
STAE0210 EQU   *                                                 Y02653
         MVC   PARMMESG(DEQLEN),LISTDEQ                          Y02653*
                             SET UP THE LIST FORM OF ENQUEUE     Y02653
         LA    R1,PARMMESG   SET ADDRESS OF DEQUEUE LIST         Y02653
         DEQ   MF=(E,(1))    DEQUEUE OFF THE CSCB CHAIN          Y02653
         SYSEVENT OKSWAP     ALLOW SWAPPING AGAIN                Y02653
         TM    PARMFLGS,PARMCHOP                                 Y02653*
                             IS MESSAGE REQUIRED?                Y02653
         BNO   STAE0220      BYPASS ERROR MESSAGE                Y02653
         MVC   PARMMESG(MSGLEN6),CSCBCHOP                        Y02653*
                             MOVE MESSAGE TO BUFFER              Y02653
         SR    R0,R0         CLEAR INSERTION REGISTER            Y02653
         ICM   R0,ALLB,PARMTYPE                                  Y02653*
                             GET DESTINATION INFORMATION         Y02653
         BP    STAE0215      IF POSTIVE, CONTINUE CHECKING       Y02653
STAE0212 EQU   *             MESSAGE TO MASTER CONSOLE           Y02653
         SR    R0,R0         INDICATE MASTER CONSOLE             Y02653
         B     STAE0218      GO ISSUE WTO                        Y02653
STAE0215 EQU   *             EXAMINE FOR ASID OR CONSOLE ID      Y02653
         SR    R0,R0         ZERO INSERTION REGISTER             Y02653
         ICM   R0,TWOB,PARMTPUT                                  Y02653*
                             PULL IN THE ID                      Y02653
         BM    STAE0212      TOP BIT ON THEN ASID/MASTER         Y02653
STAE0218 EQU   *                                                 Y02653
         LA    R1,PARMMESG   ADDRESS OF BUFFER                   Y02653
         TM    PARMFLGS,PARMCOMD                                 Y02653*
                             IS IT COMMAND STATUS?               Y02653
         BO    STAE0219      YES, BRANCH                         Y02653
         MVI   E38(R1),X10   INSERT SYSTEM STATUS ROUTING CODES  Y02653
STAE0219 EQU   *                                                 Y02653
         WTO   MF=(E,(1))    WRITE OUT MESSAGE                   Y02653
         SR    R15,R15       CLEAR INSERTION REGISTER            Y02653
         ICM   R15,TWOB,PARMTPUT                                 Y02653*
                             IS THERE AN ASID TO TPUT?           Y02653
         BNM   STAE0220      NO, BYPASS TPUT PROCESS             Y02653
         N     R15,MASK2     TURN OFF HIGH END BITS              Y02653
         LA    R5,MSGLEN6    GET LENGTH OF WTO MESSAGE           Y02653
         LA    R6,E4         LENGTH OF UNWANTED INFORMATION      Y02653
         SR    R5,R6         SUBTRACT IT FROM WTO LENGTH         Y02653
         LA    R1,PARMMESG+E4                                    Y02653*
                             ADDRESS OF THE TPUT TEXT            Y02653
         TPUT  (1),(5),TJID=(15)                                 Y02653*
                             TPUT THE MESSAGE                    Y02653
         EJECT
***********************************************************************
*        THIS CODE WILL RETURN TO TO A COMMON EXIT POINT              *
*        WITH A RETURN CODE OF EIGHT.                                 *
***********************************************************************
STAE0220 EQU   *                                                 Y02653
         LA    R15,E8        SET RETURN CODE                     Y02653
         L     R14,PARMRETY  GET THE RETURN ADDRESS              Y02653
         BR    R14           RETURN TO STAE                      Y02653
         EJECT
***********************************************************************
*        CONSTANTS FOR STAE                                           *
***********************************************************************
         SPACE
         DS    0F                                                Y02653
COMMOVE  MVC   E0(E0,R6),PARMCOMM MOVE COMMAND NAME TO BUFFER    Y02653
TWELVE   DC    F'12'              ESTAE WORKAREA COMPRAND        Y02653
RETCDE4  DC    X'10004000'        SYSTEM STATUS ROUTING CODES    Y02669
RETCDE5  DC    X'08004000'        COMMAND STATUS ROUTING CODES   Y02669
MASK1    DC    X'7FFFFFFF'        'AND' MASK                     Y02653
MASK2    DC    X'00007FFF'        ASID SETUP MASK                Y02653
LRECINF  DC    CL8'IGC0003D'      MODULE NAME FOR LOGREC         Y02653
         DC    CL8'IEE5103D'      CSECT NAME FOR LOGREC          Y02653
         DC    CL8'        '      PADDING FOR LOGREC WRITE       Y02653
TABLE    EQU   *-240              TRANSLATE TABLE                Y02653
         DC    C'0123456789ABCDEF'                               Y02653
         EJECT
***********************************************************************
*        MESSAGES FOR STAE                                            *
***********************************************************************
         SPACE
         DS    0F                                                Y02653
STRT0    EQU   *                                                 Y02653
INSERT0  DC    C' DUMPED,'        SUCESSFUL DUMP MESSAGE         Y02653
END0     EQU   *                                                 Y02653
STRT2    EQU   *                                                 Y02653
INSERT2  DC    C'SVC 34 ABEND'    SVC 34 ABEND                   Y02653
END2     EQU   *                                                 Y02653
STRT3    EQU   *                                                 Y02653
INSERT3  DC    C' COMMAND '       COMMAND                      @ZA15793
END3A    EQU   *                                               @ZA15793
         DC    C'ABEND'           ABEND                        @ZA15793
END3     EQU   *                                                 Y02653
STRT4    EQU   *                                                 Y02653
INSERT4  DC    C' TERMINATED'     INDICATE FAILED                Y02653
END4     EQU   *                                                 Y02653
         DS    0F                                                Y02653
STRT5    EQU   *                                                 Y02653
ABMSG    WTO   'IEE480I ',MF=L,ROUTCDE=(2),DESC=(4,5),           Y02653*
               MCSFLAG=(RESP,REG0)                               Y02653
END5     EQU   *                                                 Y02653
         DS    0F                                                Y02653
STRT6    EQU   *                                                 Y02653
CSCBCHOP WTO   'IEE513I COMMAND PROCESSING LIMITED',             Y02653*
               MF=L,ROUTCDE=(2),DESC=(5),MCSFLAG=(RESP,REG0)     Y02653
END6     EQU   *                                                 Y02653
         EJECT
***********************************************************************
*        MACRO LIST FORMS FOR STAE                                    *
***********************************************************************
         DS    0F                                                Y02653
STRT11   EQU   *                                                 Y02653
DUMPPARM SDUMP HDR='IEE5103D - FAILURE IN SVC 34          ',   @ZA15793*
               MF=L,SDATA=(SQA,PSA,NUC,LSQA,RGN,LPA,TRT,CSA)     Y02653*
                                  DUMP OPTIONS FOR STAE DUMP     Y02653
END11    EQU   *                                                 Y02653
DEQST    EQU   *                  START OF DEQUEUE LIST          Y02653
LISTDEQ  DEQ   (MACSCB,MICSCB,3,SYSTEM),RET=HAVE,MF=L            Y02653
DEQEND   EQU   *                  END OF DEQUEUE LIST            Y02653
ENQST    EQU   *                  START OF ENQUEUE LIST          Y02653
LISTENQ  ENQ   (MACSCB,MICSCB,E,3,SYSTEM),RET=HAVE,MF=L          Y02653
ENQEND   EQU   *                  END OF DEQUEUE LIST            Y02653
MACSCB   DC    CL8'SYSIEFSD'      CSCB MAJOR NAME                Y02653
MICSCB   DC    CL8'Q10'           CSCB MINOR NAME                Y02653
PATCH    DS    0F                                              @ZA15790
         DC    CL50'*** IEE5103D PATCH AREA ***'               @ZA15790
         EJECT
***********************************************************************
*        LENGTH EQUATES                                               *
***********************************************************************
MSGLEN0  EQU   END0-STRT0    LENGTH OF 'DUMPED,' MESSAGE         Y02653
MSGLEN2  EQU   END2-STRT2    LENGTH OF 'SVC 34 ABEND' MESSAGE    Y02653
MSGLEN3  EQU   END3-STRT3    LENGTH OF 'COMMAND ABEND' MESSAGE   Y02653
MSGLEN3A EQU   END3A-STRT3   LENGTH OF ' COMMAND ' MESSAGE     @ZA15793
MSGLEN4  EQU   END4-STRT4    LENGTH OF 'TERMINATED' MESSAGE      Y02653
MSGLEN5  EQU   END5-STRT5    LENGTH OF 'IEE480I' MESSAGE         Y02653
MSGLEN6  EQU   END6-STRT6    LENGTH OF 'IEE513I........' MESSAGE Y02653
DUMPL    EQU   END11-STRT11  LENGTH OF 'IEE5103D' ID FOR STAE    Y02653
ENQLEN   EQU   ENQEND-ENQST  LENGTH OF ENQUEUE LIST              Y02669
DEQLEN   EQU   DEQEND-DEQST  LENGTH OF DEQUEUE LIST              Y02669
         EJECT
***********************************************************************
*        DSECT FOR STAE WORKAREA                                      *
***********************************************************************
EPARMS   DSECT                                                   Y02653
PARMCODE DS    F                  STAE RECURSION INDICATOR       Y02653
PARMABND DS    F                  ABEND CODE IF SUPPLIED         Y02653
PARMRETY DS    F                  RETURN ADDRESS                 Y02653
PARMWORK DS    F                  ROUTINE BASE ADDRESS           Y02653
PARMTYPE DS    H                  DESTINATION INFORMATION        Y02653
PARMTPUT DS    H                  ASID OR CONSOLE ID             Y02653
PARMFLGS DS    C                  INDICATOR BYTE                 Y02653
PARMDUMP EQU   X'80'              FAILURE ENTRY INDICATOR        Y02653
PARMCHOP EQU   X'40'              CHOPPED MESSAGE INDICATOR      Y02653
PARMCOMD EQU   X'20'              COMMAND ISSUED INDICATOR       Y02653
         DS    C                  RESERVED                       Y02653
PARMLNCM DS    H                  COMMAND LENGTH                 Y02653
PARMCOMM DS    CL8                COMMAND NAME                   Y02653
PARMMESG DS    0F                 MESSAGE BUFFER                 Y02653
MSGLEN   DS    H                  LENGTH OF MESSAGE              Y02653
MSGFLG   DS    H                  WTO FLAGS                      Y02653
PARMPUTM DS    CL60               FIRST PART OF MESSAGE          Y02653
         SPACE
PARMABN0 DSECT                    FOR CONVERT OF ABEND CODE      Y02653
PARMABN1 DS    C                  FIRST BYTE OF ABEND CODE       Y02653
PARMABN2 DS    C                  SECCOND BYTE OF ABEND CODE     Y02653
PARMABN3 DS    C                  THIRD BYTE OF ABEND CODE       Y02653
PARMABN4 DS    C                  FOURTH BYTE OF ABEND CODE      Y02653
PARMABN5 DS    C                  LAST BYTE OF ABEND CODE        Y02653
         SPACE
PARMDMP  DSECT                    MAPS SDUMP PARM LIST         @ZA15793
PARMDFLG DS    CL24               FLAGS AND ADDR'S FOR DUMP    @ZA15793
PARMDTIT DS    0CL40              DUMP TITLE                   @ZA15793
PARMDLEN DS    C                  LENGTH OF TITLE              @ZA15793
PARMDFIX DS    CL21               FIXED PART OF TITLE          @ZA15793
PARMDVAR DS    CL9                VARIABLE PART OF TITLE       @ZA15793
PARMDCMD DS    CL8                COMMAND NAME IF AVAILABLE    @ZA15793
         END
