         TITLE 'IEE3203D - VARY KEYWORD SCAN ROUTINE'             M4957
IEE3203D CSECT
* (C) BEFORE PARENSCN   OPERAND COMPARE LENGTHS                @ZA07514
* (C) KEYTAB   ADDED LEFT PAREN TO COMPARE VALUES              @ZA07514
* (C) TABSCAN,TEST FOR ZERO OPERAND LENGTH                     @ZA27029
***********************************************************************
*
* MODULE NAME       = IEE3203D
*    CSECT NAME     = IEE3203D
*
* LOAD MODULE NAME  = IGC0003D
*
* DESCRIPTIVE NAME  = VARY KEYWORD SCAN MODULE
*
* COPYRIGHT         = MISSING
*
* STATUS            = OS/VS2 RELEASE 3
*
* FUNCTION          = THIS MODULE SCANS THE VARY PRIMARY KEYWORDS
*                     NET, CH, CPU, STOR, PATH, CN AND GIVES CONTROL TO
*                     THE ATCAM PROCESSOR FOR NET OR TO IEE0803D FOR
*                     THE OTHER KEYWORDS.  IF THERE IS NO MATCH ON THE
*                     PRIMARY KEYWORDS THEN THIS ROUTINE SCANS FOR THE
*                     SECONDARY KEYWORDS IN THE COMMAND FIELD AND THEN
*                     COMPARES THIS KEYWORD TO EACH ENTRY IN A TABLE
*                     OF VALID VARY KEYWORDS.  SUCH KEYWORDS ARE:
*                        ONLINE        HARDCPY
*                        OFFLINE       MSTCONS
*                        CONSOLE       ONTP/OFFTP (TCAM)
*
* OPERATION         = IEE3203D FIRST SCANS THE VARY COMMAND OPERAND FOR
*                     THE PRIMARY KEYWORD WHICH IS DEFINED AS THE WORD
*                     FOLLOWING THE VERB 'VARY'.
*                     THE PRIMARY KEYWORDS THAT ARE SUPPORTED ARE:
*                        V NET   FOR ATCAM
*                        V PATH  FOR MP
*                        V CH    FOR MP
*                        V CPU   FOR MP
*                        V STOR  FOR MP
*                        V CN    FOR SUBSYSTEM
*                     IF NET IS FOUND THEN THIS ROUTINE WILL ROUTE
*                     TO THE ATCAM PROCESSOR TO SERVICE THE COMMAND.
*                     IF THE OTHERS ARE FOUND, THEN THIS ROUTINE WILL
*                     CHANGE THE VERB CODE IN THE XAN FOR THEM AS
*                     FOLLOWS:
*                        V PATH = X'50'
*                        V CH   = X'58'
*                        V CPU  = X'54'
*                        V STOR = X'5C'
*                        V CN   = X'78'
*                     AND CONTROL IS PASSED TO IEE0803D TO CREATE A
*                     CSCB FOR THEM SO THAT THEY CAN EVENTUALLY BE
*                     ATTACHED.
*                     IF NONE OF THE ABOVE, THEN THIS ROUTINE SCANS FOR
*                     THE SECONDARY KEYWORD WHICH IS DEFINED AS THE
*                     WORD FOLLOWING THE FIRST COMMA NOT EMBEDDED IN
*                     PARENS.  R9 IS USED TO INDEX THROUGH THE OPERAND
*                     TO FIND THE ',KEYWORD'.  COMMANDS OF THE FOLLOW-
*                     ING FORMS ARE ACCEPTABLE:
*                        V ,SECONDARY KEYWORD
*                        V UNIT,SECONDARY KEYWORD
*                        V UNIT,(MULTIPLE UNITS),SECONDARY KEYWORD
*                        V (MULTIPLE UNITS),SECONDARY KEYWORD
*                        V (MULTIPLE UNITS),UNIT,SECONDARY KEYWORD
*                     (ANY NUMBER OF BALANCED INNER/OUTER PARENS MAY BE
*                     SPECIFIED)
*                     WHEN THE COMMA PRECEDING THE KEYWORD IS FOUND, A
*                     POINTER TO THE START OF THE KEYWORD IS SAVED AND
*                     THE SCAN CONTINUES UNTIL A COMMA, BLANK OR THE
*                     END OF BUFFER IS FOUND.  WHEN THE COMPLETE
*                     KEYWORD IS FOUND, IT IS COMPARED TO EACH ENTRY
*                     IN THE VALID KEYWORD TABLE UNTIL A MATCH OR THE
*                     END OF THE TABLE IS FOUND. EACH ENTRY CONSISTS
*                     OF AN EIGHT (8) BYTE KEYWORD FOLLOWED BY THE
*                     ADDRESS OF THE RESPECTIVE PROCESSOR.
*                     THE TABLE SCAN IS DONE BY ESTABLISHING ADDRESS-
*                     ABILITY TO THE TABLE AND THEN INCREMENTING THE
*                     BASE REGISTER BY THE LENGTH OF AN ENTRY AS EACH
*                     NON-MATCH IS FOUND.  THIS METHOD INSURES FUTURE
*                     FLEXIBILITY BECAUSE NO MATTER HOW MANY NEW
*                     KEYWORDS ARE ADDED TO THE TABLE, THE LABEL
*                     'KEYTAB', WITH AN INDEX WILL ALWAYS POINT TO THE
*                     CURRENT KEYWORD AND ITS EXITING POINT.  WHEN A
*                     MATCH IS FOUND, EXIT IS MADE BY BRANCHING TO THE
*                     MODULE INDICATED IN THE TABLE.  FOR AN ERROR,
*                     EXIT IS MADE TO IEE0503D.  WHEN AN 'OFFLINE' OR
*                     'ONLINE' KEYWORD IS FOUND WITH A ',S', THIS
*                     INDICATES A SS/1 VARY REQUEST.  CONTROL IS THEN
*                     PASSED TO IEE9403D.
*
* NOTES
*    DEPENDENCIES   = KEYWORDS SUCH AS ONLINE/OFFLINE/CONSOLE/HARDCPY/
*                     MSTCONS/ONTP/OFFTP ARE STANDARD.
*                     THE NET (ATCAM), AND CH, CPU, STOR, PATH, AND CN
*                     PRIMARY KEYWORDS ARE CONSIDERED STANDARD ALSO.
*    CHARACTER/CODE DEPENDENCIES
*                   = THIS MODULE CAN BE ASSEMBLED WITH ANY NEW
*                     CHARACTER/CODE SET.
*
* RESTRICTIONS      = ON ENTRY, REG2 PTR TO THE PARAM LIST (XSA)
* REGISTER CONVENTIONS
*                   = REGISTERS ARE DEFINED AT LABEL: DEFREG
*    PATCH LABEL    = N/A
*
* MODULE TYPE       = CSECT
*    PROCESSOR      = ASSEMBLER
*    MODULE SIZE    = VS/2 R3  = X'3A6'                        @ZM30466
*    ATTRIBUTES     = REENTRANT, REUSABLE, REFRESHABLE, PAGED LPA,
*                     ZERO PSW PROTECT KEY, SUPERVISOR MODE
*
* ENTRY POINTS      = IEE3203D FROM COMMAND ROUTER RTN IEE0403D
*   PURPOSE         = VARY COMMAND ROUTER
*   LINKAGE         = BRANCH
*   INPUT           = XSA PTR IN REG 2
*                     THE XSA CONTAINS:
*                        PTR TO PARMLIST IN XAR
*                        PTR TO LIST AND VERB CODE IN XAL
*                        VERB = VARY IN XAV
*                        UCM ID IN XAU
*   REGISTERS SAVED = NONE
*   REGISTER USAGE  = R2  = XSA BASE
*                     R4  = COUNTER FOR KEYWORD CHARACTER
*                     R6  = PTR TO FIRST CHARACTER OF KEYWORD
*                     R7  = END OF BUFFER REG
*                     R9  = PTR TO CURRENT CHARACTER OF OPERAND FIELD
*                     R11 = BASE FOR VALID KEYWORD TABLE
*                     R12 = ADDRESSABILITY
*   REGISTERS RESTORED
*                   = NONE
*
* EXITS - NORMAL    =  IN THIS SYSTEM IEE3203D EXITS TO:
*   CONDITIONS           IEE0803D FOR KEYWORDS - ONLINE, CONSOLE
*                                                AND OFFLINE
*                        IEE4703D FOR KEYWORDS - HARDCPY
*                        ISTCFF3D FOR KEYWORDS(PRIMARY) - NET
*                        IEE0803D FOR KEYWORDS(PRIMARY) - CH, CPU,
*                                     PATH, STOR, AND CN
*                        IEE4303D FOR KEYWORDS - MSTCONS
*                        IED1303D FOR KEYWORDS - ONTP, OFFTP
*                        IEE9403D FOR KEYWORDS - ONLINE AND OFFLINE
*                                      WITH SS/1 PARAMETER
*   OUTPUT          = SAME AS INPUT TO THIS MODULE
*   RETURN CODES    = NONE
*
* EXITS - ERROR     = EXIT TO MESSAGE MODULE IEE0503D
*   CONDITIONS      = WHEN AN ERROR IS DETECTED
*   OUTPUT          = REG 2 PTS TO THE XSA WHICH CONTAINS:
*                     ERROR MSG CODE IN THE XAE
*                     VERB IN THE XAV
*                     UCM ID IN THE XAU
*   RETURN CODES    = NONE
*
* EXTERNAL REFERENCES
*   ROUTINES        = ISTCFF3D  FOR NET IN ATCAM
*                   = IEE0803D  FOR CH, CPU, STOR, PATH, AND CN
*                     IEE0803D  FOR OFFLINE/ONLINE/CONSOLE
*                     IEE4703D  FOR HARDCPY
*                     IEE4303D  FOR MSTCONS
*                     IED1303D  FOR ONTP/OFFTP
*                     IEE0503D  FOR ERROR MESSAGES
*                     IEE9403D  FOR OFFLINE/ONLINE WITH ',S'
*   DATA AREAS      = SEE EXITS - OUTPUT DATA
*
* CONTROL BLOCKS    = EXTENDED SAVE AREA (XSA)
*                        FOR FORMAT SEE - INPUT DATA AND
*                        OUTPUT DATA SECTIONS
*
* TABLES            = NONE
*
* MACROS            = NONE
*
* MAPPING MACROS    = IEEXSA
*    SERIALIZATION = NONE REQUIRED IN THIS MODULE
*
* CHANGE LEVEL      = Y02669, Y02674, Z30LPTJ, Z309PTJ,        @ZM30466
*                     ZM30466,ZA07514,ZA27029                  @ZA27029
*
* CHANGE ACTIVITY  = N/A
*
* MESSAGES          = 'IEE307I VARY DELIMITER ERROR'
*                        WHEN THERE IS:
*                         A) NO COMMA AFTER PARENTHESES
*                         B) UNBALANCED PARENTHESES
*                         C) NO COMMA BEFORE KEYWORD
*                         D) A KEYWORD FOUND IN A SET OF PARENTHESIS
*                         E) A SET OF PARENTHESIS THAT DOES NOT START
*                            IN THE FIRST POSITION FOR SECONDARY KYWDS
*                         F) MULTIPLE COMMA BEFORE KEYWORD     @ZA27029
*                     'IEE308I VARY TERM LENGTH ERROR'
*                        WHEN COMMAND CONTAINS AT LEAST ONE BLANK
*                     'IEE309I VARY UNIDENTIFIABLE KEYWORD'
*                        WHEN KEYWORD DOES NOT MATCH ANY TABLE ENTRY
*                     'IEE311I VARY PARAMETER MISSING'
*                        WHEN THERE IS:
*                         A) NO POINTER TO THE COMMAND PARAMETER LIST
*                         B) NO UNIT SPECIFIED BEFORE CERTAIN
*                            SECONDARY KEYWORDS
*                     'IEE312I VARY PARAMETERS CONFLICT'
*                        WHEN A VARY CONSOLE COMMAND IS SPECIFIED WITH
*                        A SS/1 PARAMETER
*                     'IEE908I VARY CMD LENGTH EXCEEDS MAX.'
*                        WHEN A VARY ONLINE/OFFLINE/CONSOLE COMMAND'S
*                        PARAMETER LIST IS GREATER THAN 124 CHARACTERS,
*                        OR WHEN A VARY ONLINE/OFFLINE WITH ',S'
*                        COMMAND'S PARAMETER LIST IS GREATER THAN 126
*                        CHARACTERS
*
* ABEND CODES       = NONE
*
* PACKAGING         = IEE3203D WILL BE PART OF LOAD MODULE
*                        = IGC0003D
*                     THIS LOAD MODULE ALIASES ARE
*                        = NONE
*                     THIS LOAD MODULE ENTRY POINTS ARE
*                        = IGC0003D
*                     MODULE WILL RESIDE IN: LPALIB
*
* SYSGEN            = SUPPLIED BY SECTIONS:
*                        LOAD MODULE NAME
*                        PACKAGING
*
* SYSTEM LIBRARIES  = NONE
*
***********************************************************************
          EJECT
*  REGISTER ASSIGNMENTS
*
DEFREG   EQU   *                                                 Y02669
R1       EQU   1
R2       EQU   2              XSA BASE
R3       EQU   3
R4       EQU   4              COUNTER FOR KEYWORD CHARC.
R5       EQU   5
R6       EQU   6              PTR TO FIRST CHAR OF KEYWORD
R7       EQU   7                   POINTER TO END OF BUFFER
R8       EQU   8                   WORK REG
R9       EQU   9                   PTR TO CURRENT CHAR OF OPERAND FIELD
R10      EQU   10
R11      EQU   11                  BASE FOR VALID KEYWORD TABLE
R12      EQU   12                  PGM BASE
R13      EQU   13
R14      EQU   14
R15      EQU   15
*    EQUATES
C0       EQU   0
C1       EQU   1
C2       EQU   2
C3       EQU   3
C4       EQU   4
C5       EQU   5                                               @ZA07514
C6       EQU   6                                                 Y02669
C7       EQU   7                                                 Y01029
C8       EQU   8
D124     EQU   124
D126     EQU   126                                             @Z30LPTJ
ERRX39   EQU   X'39'                                             Y02669
LENG     EQU   12           LENGTH OF KEYWORD-MODULE CODE ENTRY  Y01029
COMMA    EQU   C','                COMMA CHAR
LFTPAREN EQU   C'('                LEFT PAREN CHAR
RGTPAREN EQU   C')'                RIGHT PAREN CHAR
BLANK    EQU   C' '                BLANK CHAR
PARENSW  EQU   3                   SWITCH FOR BALANCED PARENS
ERR7     EQU   07                  ERROR CODE   DELIM ERROR
ERR8     EQU   8                   ERROR CODE   TERM LENGTH    @Z309PTJ
ERR9     EQU   9                   ERROR CODE   UNIDENT KEYWORD
ERR11    EQU   11                  ERROR CODE   PARAM MISSING
ERR12    EQU   12                  ERROR CODE   PARAMETER CONFLICT
CHCODE   EQU   X'58'                                             Y02669
CPUCODE  EQU   X'54'                                             Y02669
STORCODE EQU   X'5C'                                             Y02669
PATHCODE EQU   X'50'                                             Y02669
CNCODE   EQU   X'78'                                           @Z309PTJ
         EJECT
***********************************************************************
* FUNCTIONS OF THIS ROUTINE-                                          *
*     1. ESTABLISHES PROGRAM AND XSA ADDRESSABILITY                   *
*     2. INITIALIZES A BALANCED PAREN SWITCH AND A CHARACTER COUNTER  *
*     3. CHECKS XAL FOR 0. (IF 0, BRANCHES TO ERROR ROUTINE.)         *
*     4. COMPUTES THE END OF BUFFER                                   *
***********************************************************************
         BALR  R12,C0              ESTABLISH PGM ADDRESSABILITY
         USING *,R12
         MODID BR=YES                                            Y01886
         USING XSA,R2              BASE FOR EXTENDED SAVE AREA
         L     R9,XAL              REG 9 POINTS TO OPERAND FIELD OF    *
                                   VARY COMMAND
         LA    R9,C0(R9)           ZERO OUT HIGH ORDER BYTE
         LA    R5,ERR11            SET ERR CODE FOR MSG 'PARAM MISSING'
         LTR   R9,R9               IS PARAMETER PTR 0 (NO KEYWORD)
         BZ    ERREXIT             YES,PTR IS 0, GO TO ERROR ROUTINE
         L     R7,XAR              LOAD POINTER TO THE BUFFER THAT
         LA    R7,C0(R7)           CONTAINS THE VARY COMMAND
         AH    R7,C0(R7)           COMPUTE END OF BUFFER
         CLC   C0(C4,R9),CNET        IS IT 'NET'FOR VTAM       @ZA07514
         BE    VTAMEXT               YES, EXIT TO VTAM MOD.      Y02674
         CLC   C0(C3,R9),CCH        IS IT CHANNEL FOR MP       @ZA07514
         BE    CHANNEL               YES,CHANGE CODE AND EXIT    Y02669
         CLC   C0(C4,R9),CCPU        IS IT CPU FOR MP          @ZA07514
         BE    CPU                   YES, CHANGE CODE AND EXIT   Y02669
         CLC   C0(C5,R9),CSTOR       IS IT STOR FOR MP         @ZA07514
         BE    STORAGE               YES, CHANGE CODE AND EXIT   Y02669
         CLC   C0(C5,R9),CPATH       IS IT PATH FOR MP         @ZA07514
         BE    PATH                  YES, CHANGE CODE AND EXIT   Y02669
         CLC   C0(C3,R9),CCN         IS IT CN FOR SUBSYSTEM?   @ZA07514
         BE    CN                    YES, CHANGE CODE AND EXIT @Z309PTJ
* NO PRIMARY KEYWORD, SET UP AND CHECK THE SECONDARY KEYWORDS    Y02669
*                                                                Y02669
         SR    PARENSW,PARENSW     INITIALIZE PAREN SWITCH TO 0
         SR    R4,R4               INITIALIZE CHARACTER COUNTER TO 0
         EJECT
***********************************************************************
* THE COMMAND OPERAND IS SCANNED FOR A LEFT PAREN OR A COMMA.  IF A   *
* COMMA IS FOUND IN THE FIRST POSITION, A CHECK IS MADE TO SEE IF THE *
* KEYWORD AFTER THE COMMA IS VALID FOR THIS CASE.  IF NOT, AN ERROR   *
* EXIT IS MADE TO ISSUE AN IEE311I MESSAGE TO THIS EFFECT.  IF A LEFT *
* PARENTHESIS IS FOUND, THE OPERAND IS SCANNED FOR BALANCED PARENS    *
* AND THEN THE KEYWORD.  IF THERE IS NO LEFT PAREN, AND A COMMA IS    *
* FOUND IN THE SCAN, THE KEYWORD SHOULD FOLLOW.                       *
***********************************************************************
         CLI   C0(R9),COMMA        IS FIRST CHAR. A COMMA?     @Z309PTJ
         BNE   PARENSCN            NO, START SCANNING          @Z309PTJ
         CLC   C1(C7,R9),ONL       IS IT 'ONLINE' PLUS BLANK?  @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
         CLC   C1(C7,R9),ONLCOMA   IS IT 'ONLINE' PLUS COMMA?  @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
         CLC   C1(C8,R9),OFL       IS IT 'OFFLINE' PLUS BLANK? @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
         CLC   C1(C8,R9),OFLCOMA   IS IT 'OFFLINE' PLUS COMMA? @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
         CLC   C1(C8,R9),CONS      IS IT 'CONSOLE' PLUS BLANK? @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
         CLC   C1(C8,R9),CONSCOMA  IS IT 'CONSOLE' PLUS COMMA? @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
         CLC   C1(C8,R9),MSTC      IS IT 'MSTCONS' PLUS BLANK? @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
         CLC   C1(C8,R9),MSTCCOMA  IS IT 'MSTCONS' PLUS COMMA? @ZM30466
         BE    ERREXIT             YES, TAKE ERROR EXIT        @ZM30466
PARENSCN EQU   *
         SR    R6,R6               CLEAR 'BIT TEST' REGISTER   @Z30LPTJ
         CLI   C0(R9),LFTPAREN     IS FIRST CHAR. A '('?       @Z30LPTJ
         BNE   SCANCHAR            NO, AVOID INDICATOR SETTING @Z30LPTJ
         LA    R6,C1(R6)           YES, SET INDICATOR          @Z30LPTJ
SCANCHAR EQU   *                                               @Z30LPTJ
         CLI   C0(R9),LFTPAREN     IS CURRENT CHAR. A '('?     @Z30LPTJ
         BE    INCSWTCH            YES,GO TO CHECK FOR BAL PARENS
         CLI   C0(R9),COMMA        IS CURRENT CHAR A COMMA
         BE    SAVEPTR             YES, GO TO SCAN KEYWORD
         CLI   C0(R9),BLANK        IS CURRENT CHAR. A BLANK?   @Z309PTJ
         BE    TERMERR             YES, TAKE ERROR EXIT        @Z309PTJ
         CLI   C0(R9),RGTPAREN     A RIGHT PARENTHESIS EXISTS? @Z30LPTJ
         BE    DELIMERR            YES, TAKE ERROR EXIT        @Z30LPTJ
         LA    R9,C1(R9)           INCREMENT PTR TO NEXT CHAR
         CR    R9,R7               HAS END OF BUFFER BEEN REACHED
         BE    DELIMERR            YES,GO TO ERR RTN, COMMA MISSING
         B     SCANCHAR            GO BACK TO CHECK NEXT CHAR. @Z30LPTJ
***********************************************************************
* THIS ROUTINE SCANS THE PARAMETER LIST FOR BALANCED PARENS. WHEN A   *
* LEFT PAREN IS FOUND, PARENSW IS INCREMENTED BY 1, FOR A RIGHT PAREN *
* IT IS DECREMENTED BY 1. WHEN PARENSW IS 0, BALANCED PARENS HAVE BEEN*
* FOUND, AND A COMMA AND THE KEYWORD SHOULD FOLLOW.                   *
***********************************************************************
INCSWTCH LA    PARENSW,C1(PARENSW) INCREMENT BY 1 FOR LEFT PAREN
         CLI   C1(R9),BLANK        IS NEXT CHARACTER A BLANK?  @Z309PTJ
         BE    TERMERR             YES, TAKE ERROR EXIT        @Z309PTJ
CHARSCAN LA    R9,C1(R9)           INCREMENT PTR TO NEXT CHAR
         CLI   C0(R9),LFTPAREN     IS CURRENT CHAR A LEFT PAREN
         BE    INCSWTCH            YES,CHAR IS'(',SET SWTCH,CHECK AGAIN
         CLI   C0(R9),BLANK        IS CURRENT CHAR. A BLANK?   @Z309PTJ
         BE    TERMERR             YES, TAKE ERROR EXIT        @Z309PTJ
         CLI   C0(R9),RGTPAREN     IS CURRENT CHAR A RIGHT PAREN
         BNE   CHKSWTCH            NO,CHECK PAREN SWITCH FOR 0
         BCTR  PARENSW,C0          DECREMENT BY 1 FOR RIGHT PAREN
CHKSWTCH LTR   PARENSW,PARENSW     IS SWITCH 0 (BALANCED PARENS)
         BZ    KEYSCAN             YES,GO TO SCAN KEYWORD AFTER PARENS
         CLI   C0(R9),COMMA        IS THE CHARACTER A COMMA?   @Z30LPTJ
         BNE   CHKBUFF             NO, CHECK FOR END OF BUFFER @Z30LPTJ
         CLC   C1(C6,R9),ONL       IS IT AN 'ONLINE' KEYWORD?  @Z30LPTJ
         BE    DELIMERR            YES, TAKE ERROR EXIT        @Z30LPTJ
         CLC   C1(C7,R9),OFL       IS IT AN 'OFFLINE' KEYWORD? @Z30LPTJ
         BE    DELIMERR            YES, TAKE ERROR EXIT        @Z30LPTJ
         CLC   C1(C7,R9),CONS      IS IT A 'CONSOLE' KEYWORD?  @Z30LPTJ
         BE    DELIMERR            YES, TAKE ERROR EXIT        @Z30LPTJ
CHKBUFF  EQU   *                                               @Z30LPTJ
         CR    R9,R7               NO, CHECK FOR END OF BUFFER REACHED
         BNE   CHARSCAN            NO,GO BACK TO CHECK NEXT CHAR
DELIMERR LA    R5,ERR7             DELIM ERR UNBAL PARENS OR NO COMMA
         B     ERREXIT             GO TO ERROR RTN TO SET UP XCTL
TERMERR  EQU   *                                               @Z309PTJ
         LA    R5,ERR8             SET TERM LENGTH ERROR CODE  @Z309PTJ
         B     ERREXIT             GO TO ERROR EXIT ROUTINE    @Z309PTJ
         EJECT
***********************************************************************
* THIS ROUTINE CHECKS FOR A COMMA PRECEDING A KEYWORD AND IF THE COMMA*
* IS PRESENT, SCANS THE KEYWORD. A POINTER TO THE FIRST CHAR OF THE   *
* KEYWORD IS SAVED. (A KEYWORD IS DEFINED AS THE FIRST WORD FOLLOWING *
* A COMMA NOT EMBEDDED IN PARENS.) THE KEYWORD IS COMPLETE WHEN A     *
* COMMA, A BLANK, OR END OF BUFFER IS FOUND.                          *
***********************************************************************
KEYSCAN  EQU   *
         LTR   R6,R6               IS FIRST CHAR. A '('?       @Z30LPTJ
         BZ    DELIMERR            NO, TAKE ERROR EXIT         @Z30LPTJ
         LA    R9,C1(R9)           INCREMENT PTR TO NEXT CHAR
         CLI   C0(R9),COMMA        IS CURRENT CHAR A COMMA
         BNE   DELIMERR            NO.COMMA MUST PRECEDE KEYWORD
SAVEPTR  LA    R6,C1(R9)           SAVE PTR TO 1ST CHAR OF KEYWORD
SCAN1    LA    R9,C1(R9)           INCREMENT PTR TO CURR CHAR OF KEYWD
         CLI   C0(R9),COMMA        IS CURRENT CHAR A COMMA
         BE    TABSCAN             YES,COMMA MEANS END OF KEYWD FOUND
         CLI   C0(R9),BLANK        NO,CHECK CURRENT CHAR FOR BLANK
         BE    TABSCAN             YES,BLANK MEANS END OF KEYWD FOUND
         CR    R9,R7               NO,CHECK FOR END OF BUFFER
         BE    TABSCAN             GO TO SCAN TABLE
         LA    R4,C1(R4)           INCREMENT KEYWORD CHAR COUNTER
         B     SCAN1               GO BACK TO CHECK NEXT CHAR OF KEYWD
         EJECT
***********************************************************************
* THIS ROUTINE COMPARES THE KEYWORD WITH EACH ENTRY IN A TABLE OF     *
* VALID VARY KEYWORDS UNTIL A MATCH, OR THE END OF THE TABLE IS FOUND.*
* WHEN A MATCH IS FOUND, THE ADDRESS FOLLOWING THE KEYWORD IN   Y01029*
* THE TABLE IS USED TO EXIT BY.                                 Y01029*
***********************************************************************
TABSCAN  EQU   *
         LA    R11,KEYTAB          PUT ADDRESS OF KEYWORD TABLE IN A
         USING KEYTAB,R11          REG AND ESTABLISH ADDRESSABILITY
         LA    R8,TABEND           PUT ADDRESS OF END OF TABLE IN A REG
         LTR   R4,R4               VALID OPERAND LENGTH        @ZA27029
         BZ    DELIMERR            NO, SET ERROR CODE          @ZA27029
         BCTR  R4,C0               DECREMENT CHAR COUNTER FOR EX INSTR
         LA    R5,ERR9             PRESET CODE FOR UNIDENT KEYWORD MSG
SCAN2    EQU   *
         CLR   R11,R8              HAS END OF TABLE BEEN REACHED
         BH    ERREXIT             YES, THE VERB IS INVALID
         EX    R4,DOCLC            INSERT KEYWORD LENGTH IN CLC INSTR
         BE    XMOD                IF KEYWDS MATCH,GOTO SET UP EXIT MOD
INCPTR   LA    R11,LENG(R11)       IF NOT, INCREMENT PTR TO NEXT KEYWD
         B     SCAN2         GO TO CHECK NEXT ENTRY
XMOD     LA    R3,C1(R11)          COMPUTE A POINTER TO THE FIRST
         AR    R3,R4               CHARACTER AFTER THE KEYWORD
         CLI   C7(R11),BLANK           IF THE EIGHTH CHARACTER   Y01029
*                      OF THE TABLE ENTRY IS NOT A BLANK, THE    Y01029
*                      KEYWORD IS EIGHT CHARACTERS.  IT IS A     Y01029
*                      MATCH AND EXIT SHOULD BE MADE TO THE      Y01029
*                      MODULE INDICATED IN THAT TABLE ENTRY      Y01029
         BNE   EXIT                    BRANCH TO APPROPRIATE RT  Y01029
         CLI   C0(R3),BLANK        IS THE CHARACTER BLANK
         BNE   INCPTR              IF NOT, A FALSE MATCH HAS BEEN FOUND
*                                  EG. KEYWORD 'ABC' WOULD MATCH TABLE
*                                  ENTRY 'ABCD' BECAUSE ONLY THE FIRST
*                                  3 CHARACTERS WERE COMPARED.
         DROP  R11                                             @Z30LPTJ
         EJECT
*
*  THIS CODE WAS ADDED FOR THE ONLINE/OFFLINE/CONSOLE KEYWORDS   Y02669
*  BECAUSE SINCE THEY ARE ATTACHED TASKS, A CSCB IS CREATED FOR  Y02669
*  THEM WHOSE COMMAND BUFFER LENGTH IS ONLY 124 BYTES.           Y02669
*  IF THE COMMAND WAS ISSUED FROM A CONSOLE WHOSE CHARACTER SPAN Y02669
*  IS GREATED THAN 124 CHARACTERS, THE COMMAND WILL BE TRUNCATED Y02669
*  AND SUBSEQUENTLY, VARY PROCESSORS WILL THINK IT IS INVALID.   Y02669
*  TO PREVENT THIS EARLY, A SCAN IS DONE OF THE PARM LIST OF THE Y02669
*  BUFFER AND IF IT EXCEEDS 124 CHARACTERS, MSG 'IEE908I VARY    Y02669
*  CMD LENGTH EXCEEDS MAX.' WILL BE ISSUED IMMEDIATELY AND THE   Y02669
*  COMMAND WILL NOT BE PROCESSED.                                Y02669
*                                                                Y02669
EXIT     EQU   *                                                 Y01029
         LR    R3,R11     SAVE REG11 PTR SINCE IT WILL BE USED   Y02669
         CLC   C0(C6,R11),ONL     IS IT AN ONLINE COMMAND        Y02669
         BE    BUFFCHK            YES, GO CHECK BUFFER LENGTH    Y02669
         CLC   C0(C7,R11),OFL     IS IT AN OFFLINE COMMAND       Y02669
         BE    BUFFCHK            YES, GO CHECK BUFFER LENGTH    Y02669
         CLC   C0(C7,R11),CONS    IS IT A CONSOLE COMMAND        Y02669
         BE    BUFFCHK            YES, GO CHECK BUFFER LENGTH    Y02669
*  IT IS NOT THE ABOVE, THEREFORE CAN EXIT NORMALLY              Y02669
*                                                                Y02669
EXITOK   EQU   *                                                 Y02669
         LR    R11,R3             RESTORE REG11                  Y01029
         L     R15,C8(R11)             GET ADDRESS OF EXIT RT    Y01029
         BR    R15                     EXIT TO APPROPRIATE RT    Y01029
BUFFCHK  EQU   *                                                 Y02669
         L     R9,XAL             PTR TO LIST POSITION OF PARAM  Y02669
         LA    R9,C0(R9)                                         Y02669
         LA    R10,C1             INCREMENTER                    Y02669
         LR    R11,R7             OBTAIN END OF BUFFER POINTER
         BCTR  R11,C0             MINUS ONE                      Y02669
EOBLOOP  EQU   *                                                 Y02669
         CLI   C0(R9),BLANK  IS THE NEXT CHAR AN ENDING BLANK    Y02669
         BE    EXITCHK            YES GO COMPUT LENTH OF CMD     Y02669
         CLC   C0(C3,R9),SS1      NEXT 3 CHAR INDICATE A SS/1  @Z30LPTJ*
                                   REQUEST?                    @Z30LPTJ
         BE    SS1YES             YES, BRANCH                  @Z30LPTJ
         CLC   C0(C3,R9),SS1COMMA NEXT 3 CHAR INDICATE A SS/1  @Z30LPTJ*
                                   REQUEST?                    @Z30LPTJ
         BE    SS1YES             YES, BRANCH                  @Z30LPTJ
         BXLE  R9,R10,EOBLOOP     NO GO CHECK NEXT CHARACTER     Y02669
*                                                                Y02669
EXITCHK  EQU   *                                                 Y02669
         L     R10,XAL            POINTER TO BEGINNING           Y02669
         LA    R10,C0(R10)                                       Y02669
         SR    R9,R10             SIZE OF CMD IN REG9            Y02669
         LA    R10,D124           MAX SIZE                       Y02669
         CR    R9,R10             IS IT LONGER OR NOT?           Y02669
         BNH   EXITOK             NO, IT IS SAFE, GO PROCESS CMD Y02669
SIZEERR  EQU   *                                               @Z30LPTJ
         LA    R5,ERRX39          ERROR CODE                     Y02669
         EJECT
***********************************************************************
* EXIT ROUTINE-                                                       *
* THE CORRECT ERROR CODE IS PUT IN XAE IN THE XSA AND CONTROL   Y01029*
* IS PASSED TO IEE0503D                                         Y01029*
***********************************************************************
ERREXIT  EQU   *
         STC   R5,XAE              PUT ERROR CODE IN XAE
         L     R15,VCON05              GET ADDRESS OF IEE0503D   Y01029
         BR    R15                     BRANCH TO IEE0503D        Y01029
*
SS1YES   EQU   *                                               @Z30LPTJ
         CLC   C0(C7,R3),CONS     IS IT CONSOLE KEYWORD?       @Z30LPTJ
         BE    SS1ERROR           YES, ERROR                   @Z30LPTJ
         LA    R9,C2(R9)          INCREMENT COUNTER FOR SS/1   @Z30LPTJ
SS1LOOP  EQU   *                                               @Z30LPTJ
         CLI   C0(R9),BLANK       AN ENDING BLANK CHARACTER?   @Z30LPTJ
         BE    ENDLOOP            YES, COMPUTE COMMAND LENGTH  @Z30LPTJ
         BXLE  R9,R10,SS1LOOP     NO, CHECK NEXT CHARACTER     @Z30LPTJ
ENDLOOP  EQU   *                                               @Z30LPTJ
         L     R10,XAL            POINTER TO BEGINNING OF      @Z30LPTJ*
                                   BUFFER                      @Z30LPTJ
         LA    R10,C0(R10)        CLEAR HIGH ORDER BYTE        @Z30LPTJ
         SR    R9,R10             COMPUTE SIZE OF BUFFER       @Z30LPTJ
         LA    R10,D126           MAXIMUM SIZE                 @Z30LPTJ
         CR    R9,R10             IS IT < OR = MAXIMUM SIZE?   @Z30LPTJ
         BH    SIZEERR            NO, ERROR EXIT               @Z30LPTJ
         L     R15,VCON94         GET SS/1 PREPROCESSOR MODULE @Z30LPTJ
         BR    R15                GO TO SS/1 SYSTEM            @Z30LPTJ
SS1ERROR EQU   *                                               @Z30LPTJ
         LA    R5,ERR12           INSERT ERROR CODE            @Z30LPTJ
         B     ERREXIT                                         @Z30LPTJ
*
VTAMEXT  EQU   *                                                 Y02674
         L     R15,VVTAM          GET VCON VTAM MOD              Y02674
         BR    R15                EXIT TO IT                     Y02674
CHANNEL  EQU   *                                                 Y02669
         MVI   XAN,CHCODE         CHANGE THE COMMAND CODE        Y02669
         B     EXIT08             GO TO 0803D EXIT               Y02669
CPU      EQU   *                                                 Y02669
         MVI   XAN,CPUCODE        CHANGE THE COMMAND CODE        Y02669
         B     EXIT08             GO TO 0803D EXIT               Y02669
STORAGE  EQU   *                                                 Y02669
         MVI   XAN,STORCODE       CHANGE THE COMMAND CODE        Y02669
         B     EXIT08             GO TO 0803D EXIT               Y02669
PATH     EQU   *                                                 Y02669
         MVI   XAN,PATHCODE       CHANGE THE COMMAND CODE        Y02669
         B     EXIT08                GO TO 0803D EXIT          @Z309PTJ
CN       EQU   *                                               @Z309PTJ
         MVI   XAN,CNCODE            CHANGE THE COMMAND CODE   @Z309PTJ
EXIT08   EQU   *                                                 Y02669
         L     R15,VCON08         GET ADDRESS OF 0803D           Y02669
         BR    R15                EXIT TO IEE0803D               Y02669
*                                                                Y02669
         EJECT
DOCLC    CLC   C0(C0,R11),C0(R6)   DOES CURRENT TABLE ENTRY EQU KEYWD
         DS    0F                  ALIGN ON FULL WORD BOUNDARY
VCON05   DC    V(IEE0503D)         ERROR MSG MODULE              Y01029
VVTAM    DC    V(ISTCFF3D)                                       Y02674
VCON08   DC    V(IEE0803D)                                       Y02669
VCON94   DC    V(IEE9403D)         SS/1 PREPROCESSOR MODULE    @Z30LPTJ
ONLCOMA  DC    CL7'ONLINE,'                                    @ZM30466
OFLCOMA  DC    CL8'OFFLINE,'                                   @ZM30466
CONSCOMA DC    CL8'CONSOLE,'                                   @ZM30466
MSTCCOMA DC    CL8'MSTCONS,'                                   @ZM30466
         DS    0F                  ALIGN ON FULL WORD BOUNDARY
***********************************************************************
KEYTAB   EQU   *                   START OF VALID KEYWORD TABLE
*                                  ****KEYWORD FOLLOWED BY ITS****
*                                  ****    MODULE ADDR    ****   Y01029
*                                                              @ZM30466
*             ***********************************************  @ZM30466
*             *  ADDITIONAL TABLE ENTRIES MAY BE INSERTED   *  @ZM30466
*             *  INTO THIS TABLE AS LONG AS THEY CONFORM    *  @ZM30466
*             *  TO THE PRESENT TABLE STRUCTURE.            *  @ZM30466
*             ***********************************************  @ZM30466
*                                                              @ZM30466
ONL      DC    CL8'ONLINE'                                     @ZM30466
         DC    V(IEE0803D)                 ..                    Y02669
OFL      DC    CL8'OFFLINE'                ..                  @ZM30466
         DC    V(IEE0803D)                 ..                    Y02669
CONS     DC    CL8'CONSOLE'                ..                  @ZM30466
         DC    V(IEE0803D)                 ..                    Y02669
HARDC    DC    CL8'HARDCPY'                ..                  @ZM30466
         DC    V(IEE4703D)                 ..                    Y01029
MSTC     DC    CL8'MSTCONS'                ..                  @ZM30466
         DC    V(IEE4303D)                 ..                    Y01029
ONT      DC    CL8'ONTP'                   ..                  @ZM30466
         DC    V(IED1303D)                 ..                    Y01029
OFFT     DC    CL8'OFFTP'                  ..                  @ZM30466
         DC    V(IED1303D)                 ..                    Y01029
TABEND   EQU   *-LENG
*
CNET     DC    C'NET,'                                         @ZA07514
CCH      DC    C'CH('                                          @ZA07514
CCPU     DC    C'CPU('                                         @ZA07514
CSTOR    DC    C'STOR('                                        @ZA07514
CPATH    DC    C'PATH('                                        @ZA07514
CCN      DC    C'CN('                                          @ZA07514
SS1      DC    C',S '                                          @Z30LPTJ
SS1COMMA DC    C',S,'                                          @Z30LPTJ
PATCH    DC    CL50'*** IEE3202D PATCH AREA ***'               @Z30LPTJ
***********************************************************************
         EJECT
SETXSA   DSECT
         IEEXSA
         END
