        TITLE 'IEE6703D K AND STOPTR COMMAND HANDLER'
***********************************************************************
*                                                                     *
*   MODULE NAME         =       IEE6703D                        Y02669*
*                                                                     *
*   DESCRIPTIVE NAME    =       CONTROL (K) AND STOPTR (PT)     Y02669*
*                               COMMAND HANDLER FOR GRAPHICS    Y02669*
*                               DEVICES                         Y02669*
*                                                                     *
*   COPYRIGHT           =       N/A                             Y02669*
*                                                                     *
*   STATUS              =       01 - UPDATE FOR VS/2 RELEASE 3 ZA03632*
*                                                                     *
*   FUNCTION            =       SYNTAX CHECK CONTROL (K)        Y02669*
*                               COMMANDS. SCHEDULES K COMMANDS  Y02669*
*                               BY POSTING DIDOCS, WHEN THEY    Y02669*
*                               MUST BE HANDLED BY USING THE    Y02669*
*                               TRANSIENT PORTION OF THE        Y02669*
*                               DISPLAY CONTROL MODULE (DCM).   Y02669*
*                               K COMMANDS WHICH ARE HANDLED    Y02669*
*                               USING ONLY THE RESIDENT PORTION Y02669*
*                               OF THE DCM ARE HANDLED BY       Y02669*
*                               ROUTING THE COMMAND TO THE      Y02669*
*                               APPROPIATE ROUTINES FOR         Y02669*
*                               ADDITIONAL PROCESSING.          Y02669*
*                                                                     *
*                               FOR STOPTR COMMANDS FOR WHICH   Y02669*
*                               THE SCREEN MUST BE CLEARED      Y02669*
*                               (I.E. PT A OR IF THERE IS NO    Y02669*
*                               REMAINING ACTIVE TRACK OPTION)  Y02669*
*                               A PARAMETER LIST IS BUILT IN    Y02669*
*                               SP241 CONTAINING THE COMMAND    Y02669*
*                               AND OPERANDS, TRACK PROCESSOR   Y02669*
*                               IS POSTED AND EITHER CONTROL    Y02669*
*                               IS RETURNED OR DIDOCS POSTED.   Y02669*
*                                                                     *
*    OPERATION          =       FOR THE FOLLOWING COMMANDS,     Y02669*
*                               IF AN L OPERAND WAS SPECIFIED   Y02669*
*                               MESSAGE 'IEE926I' IS ISSUED VIA Y02669*
*                               IEE5603D. OTHERWISE A K-PARM    Y02669*
*                               LIST IS BUILT WITH A MODULE     Y02669*
*                               IDENTIFIER, THE OPERAND LIST,   Y02669*
*                               THE AREA ID, AND A CONTROL      Y02669*
*                               COMMAND INDICATOR.              Y02669*
*                               (SEE DATA AREAS)                Y02669*
*                               CONTROL IS THEN EITHER RETURNED Y02669*
*                               OR DIDOCS IS POSTED (SEE EXITS).Y02669*
         EJECT
*                                                                     *
*                                  COMMANDS     MOD ID          Y02669*
*                                  ________    _________        Y02669*
*                                  K  E,       IGC5607B         Y02669*
*                                  K  E,N      IGC5407B         Y02669*
*                                  K  S        IGC5A07B         Y02669*
*                                  K  S,       IGC5A07B         YM1913*
*                                  K  D        IGC5907B         Y02669*
*                                  K  D,N      IGC5907D         Y02669*
*                                  K  D,N,HOLD IGC5907D         Y02669*
*                                  K  E,PFK    IGC6B07B         Y02669*
*                                  K  D,PFK    IGC6B07B         Y02669*
*                                  K  N        IGC6B07B         Y02669*
*                                  K  E        IGC5807B         Y02669*
*                                  K  E,SEG    IGC5807B         Y02669*
*                                                                     *
*                               FOR THE FOLLOWING COMMANDS,     Y02669*
*                               NO PROCESSING IS DONE IN THIS   Y02669*
*                               MODULE:                         Y02669*
*                                                                     *
*                                  K  V    BRANCHES TO IEE7703D Y02669*
*                                  K  C,D  BRANCHES TO IEE7803D Y02669*
*                                  K  A    BRANCHES TO IEE6803D Y02669*
*                                  K  T    BRANCHES TO IEE6803D Y02669*
*                                                                     *
*                               FOR THE FOLLOWING COMMANDS,     Y02669*
*                               INITIAL PROCESSING IS DONE IN   Y02669*
*                               THIS MODULE.                    Y02669*
*                               THEN THE K-PARM LIST IS BUILT   Y02669*
*                               AND CONTROL IS EITHER RETURNED  Y02669*
*                               OR DIDOCS IS POSTED (SEE EXITS).Y02669*
*                                                                     *
*                                  COMMAND      MOD ID          Y02669*
*                                  ________    ________         Y02669*
*                                  K   E,D     IGC6P07B         Y02669*
*                                  K   D,F     IGC6N07B         Y02669*
*                                  K   D,U     IGC6N07B         Y02669*
*                                  K   D,H     IGC6N07B         Y02669*
*                                                                     *
*                               BASED ON THE L=CCA OPERAND ON   Y02669*
*                               THE COMMAND THE INITIAL         Y02669*
*                               PROCESSING IS AS FOLLOWS:       Y02669*
*                          #### IF AN AREA IS SPECIFIED ON THE  Y02669*
*                               COMMAND AND IT DOES NOT MATCH   Y02669*
*                               ANY EXISTING AREA - 'IEE151I    Y02669*
*                               NO DISPLAY IN AREA.'            Y02669*
         EJECT
*                                                                     *
*                             # IF AREAS MATCH AND OPERAND      Y02669*
*                               FIELD IS D,H OR D,U:            Y02669*
*                               IF NO DISPLAY IN AREA - IEE158I Y02669*
*                               IF IT IS NOT DYNAMIC - IEE158I  Y02669*
*                               OTHERWISE FLAG SET IN SACB FOR  Y02669*
*                               HOLD AND CLEARED FOR UPDATE:    Y02669*
*                                  DCMADFLG = DCMAHOLD (X'40')  Y02669*
*                               AND THE PARM LIST IS BUILT.     Y02669*
*                                                                     *
*                             # IF AREAS MATCH AND OPERAND      Y02669*
*                               FIELD IS D,F:                   Y02669*
*                               IF NO DISPLAY IN AREA - IEE158I Y02669*
*                               IF FRAMING IN PROCESS - IEE158I Y02669*
*                               IF LAST FRAME ON SCREEN-IEE158I Y02669*
*                               OTHERWISE SET FRAMING IN        Y02669*
*                               PROCESS BIT IN DCM:             Y02669*
*                                  DCMAFLG1 - DCMAFRPR (X'10')  Y02669*
*                               AND THE PARM LIST IS BUILT.     Y02669*
*                                                                     *
*                             # IF AREAS MATCH AND OPERAND      Y02669*
*                               FIELD IS E,D:                   Y02669*
*                               IF NO DISPLAY IN AREA - IEE158I Y02669*
*                               IF DISPLAY IS DYNAMIC - IEE151I Y02669*
*                                 USE STOPTR                    Y02669*
*                               OTHERWISE, THE PARM LIST IS     Y02669*
*                               BUILT.                          Y02669*
*                                                                     *
*                          #### IF AREA IS NOT SPECIFIED  ON    Y02669*
*                               THE COMMAND & THERE IS NO AREA  Y02669*
*                               IN USE OR THERE IS NO DISPLAY   Y02669*
*                               IN ANY AREA:                    Y02669*
*                               FOR D,H AND D,U & E,D AND D,F:  Y02669*
*                                   IEE158I NO DISP ON SCREEN   Y02669*
*                               OR IF DISPLAY IS NOT DYNAMIC    Y02669*
*                                   IEE158I-NO DYNAMIC DISPLAY  Y02669*
*                                                                     *
*                              # IF AREA IS IN USE AND DISPLAY  Y02669*
*                               IS ON SCREEN:                   Y02669*
*                               FOR E,D AND D,F: IF THERE IS    Y02669*
*                               MORE THAN ONE ON SCREEN -       Y02669*
*                                   IEE927I SPECIFY L OPERAND   Y02669*
*                               IF DYNAMIC DISPLAY - IEE151I    Y02669*
*                                   USE STOPTR TO DELETE        Y02669*
*                               IF TOP DISPLAY AREA MOVE AREA   Y02669*
*                               ID FROM DCM (DCMAID) TO XSA     Y02669*
*                               (XASDID) AND BUILD PARM LIST.   Y02669*
*                                                                     *
         EJECT
*                             # IF AREA IN USE, WITH DISPLAY IN Y02669*
*                               AREA                            Y02669*
*                               FOR D,H AND D,U:                Y02669*
*                               IF NOT A DYNAMIC DISPLAY        Y02669*
*                               IEE158I - DISPLAY NOT DYNAMIC   Y02669*
*                               IF SACB DOESN'T INDICATE THAT   Y02669*
*                               DISPLAY IN DYNAMIC - IEE927I    Y02669*
*                               SPECIFY L OPERAND               Y02669*
*                               IF AREA DEFINED IN SACB MOVE    Y02669*
*                               AREA ID FROM DCM TO XSA AND     Y02669*
*                               BUILD THE PARM LIST.            Y02669*
*                                                                     *
*                               FOR THE K D,U & STOPTR COMMAND  Y02669*
*                               THE TRACK PROCESSOR IS POSTED.  Y02669*
*                               POST IS BRANCH ENTERED THE    @Y02668P*
*                               LOCKS ARE HELD. LOCAL POST    @Y02668P*
*                               IF THE COMMAND WAS ISSUED IN  @Y02668P*
*                               COMTASK'S MEMORY. BRANCH      @ZA03632*
*                               ENTRY POST IF A MEMORY OTHER  @ZA03632*
*                               THAN COMTASK ISSUED THE CMD.  @Y02668P*
*                               (JES3)                        @Y02668P*
*                                                                     *
*                               FOR THE STOPTR COMMAND, IF THE  Y02669*
*                               SCREEN MUST BE CLEARED AND THE  Y02669*
*                               TARGET AND ISSUING CONSOLE ARE  Y02669*
*                               THE SAME, A PARM LIST IS BUILT  Y02669*
*                               IN THE DCM (SEE DATA AREAS FOR  Y02669*
*                               DESCRIPTION) IN WHICH A STOPTR  Y02669*
*                               FLAG IS SET, CONTROL IS EITHER  Y02669*
*                               RETURNED OR DIDOCS IS POSTED    Y02669*
*                               (SEE EXITS FOR CONDITIONS).     Y02669*
*                               IF THE TARGET CONSOLE IS NOT    Y02669*
*                               THE SAME AS THE ISSUING, AN     Y02669*
*                               AREA MUST BE GOTTEN FOR THE     Y02669*
*                               PARM LIST FROM SUBPOOL 241      Y02269*
*                               AND CHAINED TO THE TARGET'S     Y02669*
*                               RESIDENT DCM. OTHERWISE THE     Y02669*
*                               PARM LIST IS BUILT IN THE       Y02669*
*                               TARGET'S TRANSIENT DCM.         Y02669*
*                               CONTROL IS EITHER RETURNED      Y02669*
*                               OR DIDOCS IS POSTED.(SEE EXITS) Y02669*
*                                                                     *
*   NOTES                                                       Y02669*
*                                                                     *
*      CHARACTER CODE                                           Y02669*
*        DEPENDENCIES   =       ANY CHARACTER CODE OTHER THAN   Y02669*
*                               EBCDIC WILL REQUIRE REASSEMBLY  Y02669*
*                               OF THIS MODULE.                 Y02669*
*                                                                     *
*      DEPENDENCIES     =       NONE                            Y02669*
*                                                                     *
*      RESTRICTIONS     =       ALL TARGET CONSOLES MUST BE     Y02669*
*                               CRT (GRAPHICS) EXCEPT FOR K C,D Y02669*
*                               THE L OPERAND IS INVALID ON     Y02669*
*                               MOST OF THE K COMMANDS.         Y02669*
*                               (SEE OPERATION)                 Y02669*
*                                                                     *
*      REGISTER                                                 Y02669*
*        CONVENTIONS    =       NONE                            Y02669*
*                                                                     *
*      PATCH-LABEL      =       PATCH                           Y02669*
*                                                                     *
*   MODULE TYPE         =       CSECT                           Y02669*
*                                                                     *
*      PROCESSOR        =       N/A                             Y02669*
*                                                                     *
*      MODULE SIZE      =       X'504' + X'48' PATCH AREA       Y02669*
*                                                                     *
*      ATTRIBUTES       =       REENTRANT, REFRESHABLE,         Y02669*
*                               SUPERVISOR MODE, KEY 0,         Y02669*
*                               PAGED LPA                       Y02669*
*                                                                     *
*   ENTRY POINT         =       IEE6703D FROM IEE7503D          Y02669*
*      PURPOSE          =       TO PROCESS ALL K COMMANDS       Y02669*
*      LINKAGE          =       BRANCH                          Y02669*
*      INPUT DATA       =       REG 2 POINTS TO THE XSA         Y02669*
*                                 XAL-POINTS TO OPERANDS        Y02669*
*                                 XAN-CONTAINS COMMAND CODE     Y02669*
*                                 XAS-L=CCA INFORMATION         Y02669*
*                                 XASSDS5-ON LOCKS HELD         Y02651*
*                                 XAU-ISSUING UCME INDICATOR    Y02669*
*                               REG 14 CONTAINS THE RETURN ADDR Y02669*
*                                                                     *
*   ENTRY POINT         =       IEE6703D FROM IEE5503D          Y02669*
*      PURPOSE          =       TO PROCESS THE STOPTR COMMAND   Y02669*
*      LINKAGE          =       BRANCH                          Y02669*
*      INPUT DATA       =       REG 2 POINTS TO THE XSA         Y02669*
*                                 XAL-POINTS TO OPERANDS        Y02669*
*                                 XAN-COMMAND CODE              Y02669*
*                                 XAS-L=CCA INFORMATION         Y02669*
*                             XASSDS3 - ON CMD ISSUED FROM    @Y02668P*
*                                     ANOTHER MEMORY (JES3)   @Y02668P*
*                                 XASSDS5-ON LOCKS HELD         Y02651*
*                                 XAU-ISSUING UCME INDICATOR    Y02669*
*                               REG 14 CONTAINS THE RETURN ADDR Y02669*
*                                                                     *
*      REGISTERS SAVED  =       REGISTERS 11 - 14 BEFORE        Y02651*
*                               ISSUING SETLOCK AT LOCKSOFF.    Y02651*
*                                                                     *
         EJECT
*      REGISTER CONTENTS                                        Y02669*
*       DURING PROCESSIMG=      R0  WORK REG                    Y02669*
*                               R1  WORK REG                    Y02669*
*                               R2  BASE REG FOR XSA            Y02669*
*                               R3  WORK REG+TEMP BASE FOR UCM  Y02669*
*                               R4  WORK REG                    Y02669*
*                               R5  BASE REG FOR TRANSIENT DCM  Y02669*
*                               R6  OPERAND POINTER             Y02669*
*                               R7  WORK REG                    Y02669*
*                               R8  WORK REG+TEMP BASE FOR RDCM Y02669*
*                               R9  BASE REG FOR UCM ENTRY+ BAL Y02669*
*                               R10 BASE REG FOR K PARM LIST    Y02669*
*                               R11 REG FOR MODULE INDICATOR    Y02669*
*                               R12 BASE REG FOR SACB           Y02669*
*                               R13 BASE REG FOR THIS MODULE    Y02669*
*                               R14 RETURN REG                  Y02669*
*                               R15 LINK REG                    Y02669*
*                                                                     *
*      REGISTERS RESTORED=      REGISTERS 11 - 14 AFTER ISSUING Y02651*
*                               SETLOCK AT LOCKSOFF.            Y02651*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
**  EXIT - NORMAL       =       RETURN VIA BR R14 FROM RETURN   Y02669*
*                               AFTER RELEASING LOCKS           Y02651*
*      CONDITIONS       =       IMMEDIATE COMMAND PROCESSING IF Y02669*
*                            1  NO GETMAIN WAS NEEDED FOR THE   Y02669*
*                               K PARM LIST.                    Y02669*
*                            2  A GETMAIN WAS NEEDED AND THE    Y02669*
*                               TARGET DEVICE WAS BUSY.         Y02669*
*                            3  A GETMAIN WAS NEEDED AND THE    Y02669*
*                               TARGET DEVICE WAS NOT READY.    Y02669*
*                            4  UPON RETURN FROM THE POST.      Y02669*
*      OUTPUT DATA      =       COMMAND PARM LIST IN DCM        Y02669*
*                               (SEE DATA AREAS)                Y02669*
*      RETURN CODES     =       NONE                            Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
**  EXIT - NORMAL       =       BRANCH TO IEE6803D FROM D6803D  Y02669*
*      CONDITIONS       =       TO PROCESS K A,NN,NN COMMAND    Y02669*
*      OUTPUT DATA      =       SAME AS INPUT(LOCKS STILL HELD) Y02669*
*      RETURN CODES     =       NONE                            Y02669*
*                                                                     *
         EJECT
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
**  EXIT - NORMAL       =       BRANCH TO IEE6903D FROM D6903D  Y02669*
*      CONDITIONS       =       TO PROCESS K A COMMAND          Y02669*
*                                          K A,REF COMMAND      Y02669*
*                                          K A,NONE COMMAND     Y02669*
*                                          ALL K T COMMANDS     Y02669*
*      OUTPUT DATA      =       SAME AS INPUT(LOCKS STILL HELD) Y02669*
*      RETURN CODES     =       NONE                            Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
**  EXIT - NORMAL       =       BRANCH TO IEE7703D FROM D7703D  Y02669*
*      CONDITIONS       =       TO PROCESS K V COMMAND          Y02669*
*      OUTPUT DATA      =       SAME AS INPUT(LOCKS STILL HELD) Y02669*
*      RETURN CODES     =       NONE                            Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
**  EXIT - NORMAL       =       BRANCH TO IEE7803D FROM D7803D  Y02669*
*      CONDITIONS       =       PROCESS K C,D COMMAND           Y02669*
*      OUTPUT DATA      =       SAME AS INPUT(LOCKS STILL HELD) Y02669*
*      RETURN CODES     =       NONE                            Y02669*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
**  EXIT - NORMAL       =       RETURN VIA BR R14 AFTER POSTING Y02669*
*                               DIDOCS FROM POST                Y02669*
*                               AFTER RELEASING LOCKS           Y02651*
*      CONDITIONS       =    1  IF A GETMAIN WAS NEEDED AND     Y02669*
*                               THE DEVICE IS WAITING.          Y02669*
*                            2  IF A GETMAIN WAS NEEDED AND     Y02669*
*                               THE DEVICE WAS READY.           Y02669*
*      OUTPUT DATA      =       COMMAND PARM LIST IN GETMAINED  Y02669*
*                               AREA AND CHAINED TO DCM AND     Y02669*
*                               FLAG SET IN DCM INDICATING      Y02669*
*                               VALID K COMMAND                 Y02669*
*                                 DCMSVC34 - DCMMYCMD (X'80')   Y02669*
*      RETURN CODES     =       NONE                            Y02669*
*                                                                     *
         EJECT
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
**  EXIT - ERROR        =       BRANCH TO IEE5603D FROM D5603D  Y02669*
*      CONDITIONS       =       TO PROCESS ERROR MESSAGES       Y02669*
*      OUTPUT DATA      =       ERROR CODES FOR MESSAGES ISSUED Y02669*
*                               IN IEE5603D AND IEE5903D.       Y02669*
*      RETURN CODES     =       XAE WILL CONTAIN AN INDEX FOR   Y02669*
*                               THE MAJOR MESSAGE FOR IEE5603D: Y02669*
*                                  X'03' - IEE151I DELETE       Y02669*
*                                          REQUEST INCONSISTENT Y02669*
*                                  X'04' - IEE156I INVALID      Y02669*
*                                          OPERAND              Y02669*
*                                  X'05' - IEE158I K REQUEST    Y02669*
*                                          INCONSISTENT         Y02669*
*                                  X'09' - IEE921I REJECTED   @Y02668P*
*                                  X'0B' - IEE925I OPERAND      Y02669*
*                                  X'0C' - IEE926I L=CCA        Y02669*
*                                          OPERAND INVALID      Y02669*
*                                  X'0D' - IEE927I - K REQUEST  Y02669*
*                                          AMBIGUOUS            Y02669*
*                                  X'0E' - IEE930I-INSUFFICIENT Y02669*
*                                          STORAGE FOR COMMAND  Y02669*
*                               XASTSAVE WILL CONTAIN AN INDEX  Y02669*
*                               FOR THE MINOR MESSAGE FOR       Y02669*
*                               IEE5903D:                       Y02669*
*                                 IEE151I:
*                                  X'04' - USE STOPTR TO DELETE Y02669*
*                                  X'06' - NO DISPLAY ON SCREEN Y02669*
*                                  X'07' - NO DISPLAY IN AREA   Y02669*
*                                 IEE158I:
*                                  X'06' - NO DISPLAY ON SCREEN Y02669*
*                                  X'07' - NO DISPLAY IN AREA   Y02669*
*                                  X'08' - LAST FRAME DISPLAYED Y02669*
*                                  X'09' - FRAME NOT COMPLETE   Y02669*
*                                  X'0A' - DISPLAY IS NOT       Y02669*
*                                          DYNAMIC              Y02669*
*                                 IEE921I:                    @Y02668P*
*                                  X'19' - NEEDS DISPLAY AREA @Y02668P*
*                                 IEE925I:
*                                  X'1A' - FOR CRT ONLY         Y02669*
*                                 IEE926I:
*                                  X'18' - ON THIS COMMAND      Y02669*
*                                 IEE927I:
*                                  X'17' - SPECIFY L OPERAND    Y02669*
*                               XASSDS5 - ON LOCKS HELD         Y02651*
*                                                                     *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                     *
*   EXTERNAL                                                    Y02669*
*    REFERENCES                                                 Y02669*
*                                                                     *
*      ROUTINES         =       POSTS DIDOCS UCMECB             Y02669*
*                                     POSTCODE X'FE'            Y02669*
*                               POSTS TRACK DCMATECB            Y02669*
*                                     POSTCODE X'04'            Y02669*
*                               POSTS TRACK DCMATECB            Y02669*
*                                     POSTCODE X'08'            Y02669*
*                               BRANCHES TO  IEE7703D           Y02669*
*                                            IEE7803D           Y02669*
*                                            IEE6803D           Y02669*
*                                            IEE6903D           Y02669*
*                                            IEE5603D/IEE5903D  Y02669*
*                                                                     *
*      DATA AREAS       =       NONE                            Y02669*
*                                                                     *
*      CONTROL BLOCKS   =       CVT      R -  ADDRESS UCM       Y02669*
*                               IEEXSA   R -  INPUT INFORMATION Y02669*
*                                        W -  GETMAIN WORK AREA Y02669*
*                               IEECUCM  R -  ADDRESS DCM       Y02669*
*                                        W -  UPDATE            Y02669*
*                               IEERDCM  R -  COMPARE           Y02669*
*                                        W -  UPDATE            Y02669*
*                               IEECVMAP C -  SUBPOOL 230       Y02669*
*                               (KPARAM) W -  BUILD PARM LIST   Y02669*
*                                        R -  KPARAM CHAIN ADDR Y02669*
*                               IEETDCM  W -  FLAG, CHAIN KPARAMY02669*
*                               IHAPSA   - NECESSARY FOR SETLOCKY02651*
*                                                                     *
*    TABLES      = A COMPARE TABLE IS USED TO  DETERMINE THE    Y02669*
*                  VALIDITY OF THE OPERANDS ON THE CONTROL      Y02669*
*                  COMMANDS.                                    Y02669*
*                  THE FORMAT OF EACH ENTRY IS THE SAME.        Y02669*
*                                                                     *
*                  DLEN   DC   AL1(L'XXX-1) - LENGTH OF         Y02669*
*                                             SPECIFIC OPERAND  Y02669*
*                  XXX    DC   C'YYYYY' - CHARACTER OPERAND     Y02669*
*                                         REPRESENTATION        Y02669*
*                                                                     *
*                  DLEN AND 'XXX' ARE USED IN AN EX OF A CLC.   Y02669*
*                  IF THE OPERANDS MATCH, A BRANCH IS TAKEN TO  Y02669*
*                  EITHER PROCESS THE COMMAND OR IN TURN        Y02669*
*                  BRANCH TO THE PROPER PROCESSOR.              Y02669*
*                  OTHERWISE, THE REGISTER USED TO ADDRESS THE  Y02669*
*                  TABLE IS INCREMENTED BY TWO + THE VALUE OF   Y02669*
*                  DLEN TO REACH THE NEXT TABLE ENTRY.          Y02669*
*                                                                     *
*                  A BRANCH TABLE IS USED IN CONNECTION WITH    Y02669*
*                  THE COMPARE TABLE. IT CONSISTS OF BRANCHES   Y02669*
*                  TO THE PROPER OPERAND PROCESSORS. AN INDEX   Y02669*
*                  REGISTER IS MAINTAINED THROUGHOUT THE SCAN   Y02669*
*                  OF THE COMPARE TABLE. THIS IS USED AT        Y02669*
*                  DBRANCH TO GIVE CONTROL TO THE INDICATED     Y02669*
*                  PROCESSOR VIA THE BRANCH TABLE.              Y02669*
*                                                                     *
*      MACROS           =       MODID                           Y02669*
*                               CONDITIONAL BRANCH ENTRY        Y02651*
*                                 GETMAIN SP241 FOR KPARAM      Y02651*
*                               BRANCH ENTRY POST - DIDOCS    @ZA03632*
*                                 UCMECB - POSTCODE (X'FE')     Y02669*
*                               BRANCH ENTRY POST - IEECB800    Y02651*
*                                 DCMATECB - PTCODE (X'04')     Y02651*
*                                 (FOR STOPTR A COMMAND)        Y02651*
*                                 DCMATECB - KDUCODE (X'08')    Y02651*
*                                 (FOR K D,U COMMAND)           Y02651*
*                               SETLOCK - CMS & LOCAL RELEASED  Y02651*
*                                                                     *
*      ENQUEUED                                                 Y02669*
*       RESOURCES       =       NONE                            Y02669*
*                                                                     *
*      CHANGE LEVEL     =       Y02669                          Y02669*
*                               Y02651                          Y02651*
*                               YM1913                          YM1913*
*                               YM7666                        @YM7666P*
*                               Y02668                        @Y02668P*
*                               ZA01568                       @ZA01568*
*                               ZA02576                       @ZA02576*
*                               ZA03632                       @ZA03632*
*                               ZA09164                       @ZA09164*
*      LOCKS HELD       =       CMS AND LOCAL LOCKS WERE        Y02651*
*                               OBTAINED IN IEE7503D FOR BOTH   Y02651*
*                               STOPTR AND CONTROL COMMANDS.    Y02651*
*                               THEY MUST BE RELEASED BEFORE    Y02651*
*                               RETURNING AT RETURN,          @ZA03632*
*                               OR BRANCHING                  @ZA03632*
*                               TO IEE0503D, AT D0503D          Y02651*
*                               OTHERWISE THEY ARE RELEASED IN  Y02651*
*                               IEE5603D, IEE5903D, IEE6803D,   Y02651*
*                               IEE6903D, IEE7703D, OR IEE7803D.Y02651*
*                                                                     *
*      MESSAGES         =       THE FOLLOWING MESSAGES ARE      Y02669*
*                               CONTAINED IN AND ISSUED FROM    Y02669*
*                               IEE5603D AND IEE5903D:          Y02669*
*                                                                     *
*                                MSGID  CODE  IN MESSAGE TEXT   Y02669*
*                                _____  ____  __ ____________   Y02669*
*                               IEE151I X'03' 56 DELETE REQUEST Y02669*
*                                                  INCONSISTENT Y02669*
*                                       X'04' 59 USE STOPTR TO  Y02669*
*                                                  DELETE       Y02669*
*                                       X'06' 59 NO DISPLAY ON  Y02669*
*                                                  SCREEN       Y02669*
*                                       X'07' 59 NO DISPLAY IN  Y02669*
*                                                  AREA         Y02669*
*                               IEE156I X'04' 56 INVALID OPERND Y02669*
*                               IEE158I X'05' 56 K REQUEST      Y02669*
*                                                  INCONSISTENT Y02669*
*                                       X'06' 59 NO DISPLAY ON  Y02669*
*                                                  SCREEN       Y02669*
*                                       X'07' 59 NO DISPLAY IN  Y02669*
*                                                  AREA         Y02669*
*                                       X'08' 59 LAST FRAME     Y02669*
*                                                  DISPLAYED    Y02669*
*                                       X'09' 59 FRAME NOT      Y02669*
*                                                  COMPLETE     Y02669*
*                                       X'0A' 59 DISPLAY IS NOT Y02669*
*                                                  DYNAMIC      Y02669*
*                               IEE921I X'09' 56 REJECTED     @Y02668P*
*                                             59 NEEDS        @Y02668P*
*                                                DISPLAY AREA @Y02668P*
*                               IEE925I X'0B' 56 OPERAND        Y02669*
*                                       X'1A' 59 FOR CRT ONLY   Y02669*
*                               IEE926I X'0C' 56 L=CCA OPERAND  Y02669*
*                                                  INVALID      Y02669*
*                                       X'1A' 59 ON THIS CMND   Y02669*
*                               IEE927I X'0D' 56 K REQUEST      Y02669*
*                                                  AMBIGUOUS    Y02669*
*                                       X'17' 59 SPECIFY L      Y02669*
*                                                  OPERAND      Y02669*
*                               IEE930I X'0E' 56 INSUFFICIENT   Y02669*
*                                                  STORAGE FOR  Y02669*
*                                                  COMMAND      Y02669*
*                                                                     *
*                              THE FOLLOWING MESSAGE IS IN    @Y02668P*
*                              IEE0503D                       @Y02668P*
*                                                             @Y02668P*
*                               MSGID CODE TEXT               @Y02668P*
*                              IEE777I X'15' INVALID FROM     @Y02668P*
*                                             SUBSYSTEM       @Y02668P*
*                                             CONSOLE         @Y02668P*
*      SYSGEN           =       INCLUDE WITH SVC 34 IN LOAD     Y02669*
*                               MODULE IGC0003D, DLIB AOSB3,    Y02669*
*                               MACRO SGIEF441, TARGLIB LPALIB  Y02669*
*                                                                     *
*      SYSTEM LIBRARIES =       NONE                            Y02669*
*                                                                     *
***********************************************************************
         EJECT
IEE6703D CSECT
* A- 643196 C- 602500                                         @ZA01568*
* C-344700,344800                                             @ZA02576*
* POST (C)                                                    @ZA03632*
* SACBSCAN (C), PROCESS (D)                                   @ZA09164*
***********************************************************************
*                                                                     *
*                         REGISTER EQUATES                            *
*                                                                     *
***********************************************************************
REG0     EQU   0                   WORK REG
REG1     EQU   1                   WORK REG
XSAREG   EQU   2                   BASE REG FOR XSA
REG3     EQU   3                   WORK REG & TEMP BASE FOR UCM  Y02669
REG4     EQU   4                   WORK REG
TDCMREG  EQU   5                   BASE REG FOR TRANSIENT DCM
REG6     EQU   6                   REGISTER CONTAINING OPERAND POINTER
REG7     EQU   7                   WORK REG
REG8     EQU   8                   BASE FOR RESIDENT DCM & WORK REG
REG9     EQU   9                   UCME BASE & BAL REG           Y02651
KREG     EQU   10                  BASE REG FOR K PARAMETER LIST Y02651
MODREG   EQU   11                  REG FOR MODULE INDICATOR
SACBREG  EQU   12                  BASE REG FOR SACB
BASEREG  EQU   13                  BASE REG FOR THIS MODULE
REG14    EQU   14                  RETURN REG
R15      EQU   15                  LINK REG
         EJECT
***********************************************************************
*                                                                     *
*                          NUMBER CONSTANTS                           *
*                                                                     *
***********************************************************************
ZERO     EQU   0                   NUMBER CONSTANT
ONE      EQU   1                   NUMBER CONSTANT
N2       EQU   2                   NUMBER CONSTANT
N3       EQU   3                   NUMBER CONSTANT               Y02669
N4       EQU   4                   NUMBER CONSTANT
N5       EQU   5                   NUMBER CONSTANT             @YM7666P
N7       EQU   7                   NUMBER CONSTANT
N8       EQU   8                   NUMBER CONSTANT             @YM7666P
***********************************************************************
*                                                                     *
*                        CHARACTER CONSTANTS                          *
*                                                                     *
***********************************************************************
DCHAR    EQU   C'D'                DISPLAY CONSTANT
ECHAR    EQU   C'E'                ERASE CONSTANT
HCHAR    EQU   C'H'                HOLD CONSTANT
UCHAR    EQU   C'U'                UPDATE CONSTANT
***********************************************************************
*                                                                     *
*                     SPECIAL CODES AND MASKS                         *
*                                                                     *
***********************************************************************
PT       EQU   X'C8'               STOPTR CODE                   Y02669
POSTCODE EQU   X'FE'               CODE USED IN POSTING UCM ECB
PTCODE   EQU   X'04'               CODE FOR POSTING TRACK ECB    Y02651
KDUCODE  EQU   X'08'               CODE FOR POSTING TRACK ECB    Y02651
WAITCODE EQU   X'80'               ECB WAIT CODE
REDYCODE EQU   X'00'               ECB READY CODE
XFF      EQU   X'FF'               MASK FOR TURNING OFF FLAGS    Y02669
M7       EQU   7                   MASK FOR ADDRESS FOR ICM      Y02669
M8       EQU   8                   MASK FOR ICM XMPOST         @Y02668P
SP241    EQU   241                 SUBP NUMBER FOR KPARM GETMAIN Y02669
         EJECT
***********************************************************************
*                                                                     *
*                      ERROR CODES                                    *
*                                                                     *
***********************************************************************
MSG151   EQU   3                   IEE151I DELETE INCONSISTENT   Y02669
MSG151A  EQU   4                           USE STOP TRACK        Y02669
MSG156   EQU   4                   IEE156I INVALID OPERAND       Y02669
MSG158   EQU   5                   IEE158I K REQUEST INCONSIST   Y02669
MSG158A  EQU   8                           LAST FRAME DISPLAY    Y02669
MSG158B  EQU   9                           FRAME NOT COMPLETE    Y02669
MSG158C  EQU   10                          DISPLAY NOT DYNAMIC   Y02669
MSG1581A EQU   6                           NO DISPLAY ON SCREEN  Y02669
MSG1581B EQU   7                           NO DISPLAY IN AREA    Y02669
MSG921   EQU   9                   IEE921I REJECTED            @Y02668P
MSG921A  EQU   19                           NEEDS DISPLAY AREA @Y02668P
MSG925   EQU   11                  IEE925I OPERAND               Y02669
MSG925A  EQU   26                          FOR CRT ONLY          Y02669
MSG926   EQU   12                  IEE926I L OPERAND INVALID     Y02669
MSG926A  EQU   24                          ON THIS COMMAND       Y02669
MSG927   EQU   13                  IEE927I K REQUEST AMBIGUOUS   Y02669
MSG927A  EQU   23                          SPECIFY L OPERAND     Y02669
MSG930   EQU   14                  IEE930I INSUFFICIENT          Y02669
*                                          STORAGE FOR COMMAND   Y02669
MSG777   EQU   X'15'               IEE777I INVALID FROM        @Y02668P
*                                          SUBSYSTEM CONSOLE  @Y02668P*
         EJECT
         BALR  BASEREG,ZERO        SET UP ADDRESSIBILITY
         USING *,BASEREG           FOR PROGRAM
         MODID BRANCH=YES                                        Y01886
***********************************************************************
*           INITIALIZATION REGISTER USAGE                        Y02669
*           2  -  XSA BASE REG                                   Y02669
*           3  -  UCM BASE - THEN WORK REG                       Y02669
*           5  -  TDCM BASE REG                                  Y02669
*           6  -  ADDRESS OF K COMMAND OPERANDS                  Y02669
*           7  -  WORK REG                                       Y02669
*           8  -  WORK REG - THEN RESIDENT DCM BASE REG          Y02669
*           9  -  UCME BASE REG                                  Y02669
*          11  -  MODREG                                         Y02669
*          13  -  MODULE BASE REG                                Y02669
***********************************************************************
         USING DXSA,XSAREG         EXTENDED SAVEAREA ADDRESSIBILITY
         L     REG3,CVTPTR         GET CVT POINTER               Y02669
         USING DCVT,REG3           ADDRESSIBILITY OF CVT         Y02669
         L     REG3,CVTCUCB        GET UCM POINTER               Y02669
         DROP  REG3                                              Y02669
         SPACE   3
***********************************************************************
*       GET UCM ENTRY ADDRESS                                    Y02669
***********************************************************************
         USING UCM,REG3            ADDRESSABILITY OF UCM         Y02669
         L     REG7,UCMVEA         GET POINTER TO FIRST UCME
         SR    REG9,REG9           CLEAR WORK REGISTER           Y02669
         IC    REG9,XASCID         GET TARGET CONSOLE ID         Y02669
         BCTR  REG9,ZERO           DECREMENT BY ONE              Y02669
         M     REG8,UCMVEZ         MULT ID BY SIZE
         AR    REG9,REG7           SET PTR TO UCM ENTRY          Y02669
         DROP  REG3                                              Y02669
         USING UCMLIST,REG9        ADDRESSIBILITY OF UCM ENTRY   Y02669
         TM    UCMDISP,UCMDISPC    IS TARGET A GRAPHICS?         Y02669
         BO    GRAPHICS            YES, CONTINUE                 Y02669
         SR    REG6,REG6           CLEAR REGISTER                Y02669
         ICM   REG6,M7,XAL+1       GET 3 BYTE ADDR OF OPERANDS   Y02669
         CLC   ZERO(N3,REG6),CDCHAR IS COMMAND K C,D?            Y02669
         BE    D7803D              YES, IEE7803D WILL HANDLE     Y02669
         B     ERR925A             NO, TARGET MUST BE CRT        Y02669
         EJECT
***********************************************************************
*       ADDRESS RESIDENT AND TRANSIENT DCM FOR TARGET CONSOLE    Y02669
*       WILL ALWAYS BE CRT DEVICE.                               Y02669
***********************************************************************
GRAPHICS EQU   *
         L     REG8,UCMXB          GET ADDRESS OF RESIDENT DCM   Y02669
         USING DCMTSRT,REG8        ADDRESSIBILITY FOR DCM        Y02669
         L     TDCMREG,DCMADTRN    GET ADDRESS OF TRAN DCM       Y02669
         USING DCMSTRT,TDCMREG     ADDRESSIBILITY OF TRANS DCM   Y01012
         SR    REG6,REG6           CLEAR REGISTER                Y02669
         ICM   REG6,M7,XAL+1       GET 3 BYTE ADDR OF OPERANDS   Y02669
         BZ    KALONE              IF BLANK TREAT AS K E         Y02669
         SPACE   3
***********************************************************************
*       THIS IS A STOPTR COMMAND?                                Y02669
*  STOPTR OPERANDS WERE VALIDITY CHECKED IN IEE5503D             Y02669
***********************************************************************
         L     MODREG,DCMNINT5     SET CODE FOR SDS INTERFACE 5  Y02669
         CLI   XAN,PT              IS THIS STOPTR?               Y02669
         BE    TESTOWN             YES                           Y02669
        EJECT
***********************************************************************
*       LOOP THROUGH BRANCH TABLE SEARCHING FOR OPERANDS         Y02669
*          REGISTERS USED FOR LOOP - 1, 3, 7, 15                 Y02669
***********************************************************************
         SPACE  2
         SR    REG3,REG3           CLEAR REG FOR OP LENGTH       Y02669
         SR    R15,R15             USED TO INDEX BRANCH TABLE    Y02669
         LA    REG7,DENTAB         CALCULATE TABLE END ADDRESS   Y02669
         LA    REG1,DTAB           CALCULATE TABLE BEGIN ADDRESS Y02669
         USING DTAB,REG1           EST. ADDRESSABILITY TO TABLE  Y02669
DLOOP    EQU   *
         IC    REG3,DLEN           LENGTH OF COMPARE TAB ENTRY-1 Y02669
         EX    REG3,DCOMPARE       CHECK FOR MATCH               Y02669
         BE    BRTABLE(R15)        IF MATCH,PROCESS ACCORDINGLY  Y02669
         LA    REG1,N2(REG3,REG1)  NO MATCH, GO TO NEXT ENTRY    Y02669
         LA    R15,N4(R15)         INCRE INDEX FOR BRANCH TABLE  Y02669
         CR    REG1,REG7           END OF COMPARE TABLE REACHED  Y02669
         BL    DLOOP               NO, GO BACK AND CHECK NEXT    Y02669
*                                  TABLE ENTRY                   Y02669
         DROP  REG1                NECESSARY TO RE-EST BASE REG
         B     ERR156              YES, INVALID OPERAND - ERROR  Y02669
         EJECT
***********************************************************************
*         K   E,                                                 Y02669
***********************************************************************
SEDEL1   EQU   *                                                 Y02669
         L     MODREG,DCMNDEL1     SET CODE FOR DELETE 1 ROUTINE Y02669
         B     TESTL               BRANCH TO CHECK FOR L OPERAND Y02669
         SPACE 3
***********************************************************************
*         K   E,N                                                Y02669
***********************************************************************
SECMD    EQU   *                                                 Y02669
         L     MODREG,DCMNCMD1     SET CODE FOR COMMAND ROUTINE  Y02669
         B     TESTL               BRANCH TO CHECK FOR L OPERAND Y02669
         SPACE 3
***********************************************************************
*         K   S                                                  Y02669
***********************************************************************
SPECOPT  EQU   *                                                 Y02669
         L     MODREG,DCMNOPT1     SET CODE FOR OPTIONS ROUTINE  Y02669
         B     TESTL               BRANCH TO CHECK FOR L OPERAND Y02669
         SPACE 3
***********************************************************************
*         K   D                                                  Y02669
*         K   D,N                                                Y02669
*         K   D,N,HOLD                                           Y02669
***********************************************************************
SEDEL4   EQU   *                                                 Y02669
         L     MODREG,DCMNDEL4     SET CODE FOR DELETE 4 ROUTINE Y02669
         B     TESTL               BRANCH TO TEST FOR L OPERAND
         SPACE 3
***********************************************************************
*         K   E,PFK                                              Y02669
*         K   D,PFK                                              Y02669
*         K   N                                                  Y02669
***********************************************************************
SEPFK    EQU   *                                                 Y02669
         L     MODREG,DCMNPFK2     SET CODE FOR PFK 2 ROUTINE    Y02669
         B     TESTL               BRANCH TO TEST FOR L OPERAND
         EJECT
***********************************************************************
*         K          (DEFAULT)                                   Y02669
*         K   E                                                  Y02669
*         K   E,SEG                                              Y02669
***********************************************************************
KALONE   EQU   *                                                 Y02669
         L     MODREG,DCMNDEL3     GET FOR DELETE 3              Y02669
         SPACE   3
***********************************************************************
*  THE L OPERAND IS INVALID ON ALL OF THE ABOVE COMMANDS         Y02669
***********************************************************************
TESTL    EQU   *                                                 Y02669
         TM    XASSDS,XASSDS3     CMD INVALID FROM ASSOC       @Y02668P
         BO    DERR777            CNSL BRANCH ERROR MSG        @Y02668P
         TM    XASSDS,XASSDS2+XASSDS4 WAS L OPERAND SPECIFIED? @ZA02576
         BM    ERR926              YES, BRANCH FOR  MSG EXIT   @ZA02576
         OI    DCMSVC34,DCMTYPE1   K COMMAND NOT ROUTABLE
         B     SETDCM              BRANCH TO SET DCM FLAG AND EXIT
         SPACE 3
***********************************************************************
*         K   V                                                  Y02669
***********************************************************************
D7703D   EQU   *                                                 Y02669
         TM    XASSDS,XASSDS3      IF JES3 ISSUED K V          @Y02668P
         BO    DERR777             BRANCH INVALID FROM         @Y02668P
*                                  SUBSYSTEM CONSOLE          @Y02668P*
         L     R15,VCON7703        BRANCH TO HANDLE THE K  V CMD Y02669
         BR    R15                 BRANCH TO IEE7703D            Y02669
         SPACE 3
***********************************************************************
*         K   T                                                  Y02669
*         K   A                                                  Y02669
*         K   A,REF                                              Y02669
*         K   A,NONE                                             Y02669
***********************************************************************
D6903D   EQU   *                                                 Y02669
         L     R15,VCON6903        BRANCH TO HANDLE THE K T & A  Y02669
         BR    R15                 BRANCH TO IEE6903D            Y20669
         SPACE 3
***********************************************************************
*         K   A,NN,NN                                            Y02669
***********************************************************************
D6803D   EQU   *                                                 Y02669
         L     R15,VCON6803        BRANCH TO HANDLE K A,NN,NN    Y02669
         BR    R15                 BRANCH TO IEE6803D            Y02669
         EJECT
***********************************************************************
*         K   C,D                                                Y02669
***********************************************************************
D7803D   EQU   *                                                 Y02669
         L     R15,VCON7803        BRANCH TO HANDLE K C,D,ID     Y02669
         BR    R15                 BRANCH TO IEE7803D            Y02669
         SPACE 3
***********************************************************************
*         K   E,D                                                Y02669
***********************************************************************
SETFLG   EQU   *                                                 Y02669
         L     MODREG,DCMNINT5     SET CODE FOR SDS INTERFACE 5  Y02669
         B     PROCESS             BRANCH TO PROCESS OPERAND     Y02669
         SPACE 3
***********************************************************************
*         K   D,F                                                Y02669
***********************************************************************
SETFLGMD EQU   *                                                 Y02669
         L     MODREG,DCMNINT3     SET CODE FOR SDS INTERFACE 3  Y02669
         B     PROCESS             BRANCH TO PROCESS OPERAND     Y02669
         SPACE  3
***********************************************************************
*          K   D,H                                               Y02669
*          K   D,U                                               Y02669
***********************************************************************
MODSET   EQU   *                                                 Y02669
         L     MODREG,DCMNINT3     SET CODE FOR SDS INTERFACE 3  Y02669
         EJECT
***********************************************************************
*                                                                     *
*           COMMON SUBROUTINE FOR K D,H OR K D,U PROCESSING           *
*                                                                     *
***********************************************************************
         SPACE   2
         L     SACBREG,DCMADSDS    GET SACBPTR                 @Y02668P
         LTR   SACBREG,SACBREG     IF ZERO                     @Y02668P
         BZ    ERR921              NO AREA EXISTS              @Y02668P
         USING DCMACB,SACBREG      SET BASE FOR SACB             Y02669
         CLI   XASDID,ZERO         WAS AREA SPECIFIED ON COMMAND?Y02669
         BNE   AREA                YES, BRANCH                   Y02669
SACBTEST EQU   *                                                 Y02669
         TM    DCMASACB,DCMAUSE    IS AREA IN USE?               Y02669
         BZ    NOINUSE             NO, BRANCH                    Y02669
         TM    DCMAFLG1,DCMADISP   IS DISPLAY IN AREA?           Y02669
         BZ    NXTSACB             NO, TEST OTHER SACB'S         Y02669
         OI    XASPLS3,ONE         SET DISP ON SCREEN SWITCH RE- Y02669
*                                  SERVED BIT SET TO 0 IN 7503D  Y02669
         TM    DCMADFLG,DCMADD     IS IT A DYNAMIC DISPLAY?      Y02669
         BO    TESTCMD             YES, WHICH COMMAND IS THIS    Y02669
NXTSACB  EQU   *                                                 Y02669
         ICM   SACBREG,N7,DCMACBNX+1 GET NEXT SACB POINTER       Y02669
         BZ    NOINUSE             THERE ARE NO MORE             Y02669
         B     SACBTEST            CONTINUE SEARCH               Y02669
         SPACE 2
NOINUSE  EQU   *                                                 Y02669
         TM    XASPLS3,ONE         IS DISPLAY ON SCREEN FLAG ON? Y02669
         BO    DYDISP              YES IEE158 DISP NOT DYNAMIC   Y02669
         B     NODISPS             NO IEE158 NO DISP ON SCREEN   Y02669
         EJECT
AREA     EQU   *                                                 Y02669
         CLC   DCMAID(ONE),XASDID  COMPARE SACB WITH SPECIFIED A Y02669
         BE    TFLG                MATCH? YES,                   Y02669
         ICM   SACBREG,N7,DCMACBNX+1 NO, GET NEXT SACB           Y02669
         BNZ   AREA                ANYMORE? YES,CONTINUE SEARCH  Y02669
         B     NODISPA             NO, IEE151 NO DISPLAY IN AREA Y02669
         SPACE 2
TFLG     EQU   *                                                 Y02669
         TM    DCMAFLG1,DCMADISP   IS THERE A DISPLAY IN AREA?   Y02669
         BZ    NODISPA             ERR IEE158 NO DISP IN AREA    Y02669
         TM    DCMADFLG,DCMADD     IS DYNAMIC DISPLAY IN AREA?   Y02669
         BO    TESTUD              YES, WHICH COMMAND IS THIS    Y02669
         B     DYDISP              ERR IEE158 DISP NOT DYNAMIC   Y02669
         SPACE 2
TESTCMD  EQU   *                                                 Y02669
         MVC   XASDID,DCMAID       PUT AREA ID IN XAS            Y02669
TESTUD   EQU   *                                                 Y02669
         CLI   N2(REG6),UCHAR      IS THIS AN UPDATE COMMAND?    Y02669
         BNE   SETHOLD             NO, BRANCH TO PROCESS D,H     Y02669
***********************************************************************
*     D,U                                                        Y02669
***********************************************************************
UPDATE   EQU   *                                                 Y02669
         NI    DCMADFLG,XFF-DCMAHOLD TURN OFF HOLD FLAG IN DCM   Y02669
         ST    SACBREG,XAXSACB     SAVE SACB PTR FOR POST        Y02669
         B     TESTOWN             BRANCH TO BUILD K PARM LIST   Y02669
***********************************************************************
*     D,H                                                        Y02669
***********************************************************************
SETHOLD  EQU   *                                                 Y02669
         OI    DCMADFLG,DCMAHOLD   SET ON HOLD FLAG IN DCM       Y02669
         B     TESTOWN             BRANCH TO BUILD K PARM LIST   Y02669
         EJECT
***********************************************************************
*                                                                     *
*           COMMON SUBROUTINE FOR K E,D OR K D,F PROCESSING           *
*                                                                     *
***********************************************************************
         SPACE   2
PROCESS  EQU   *
         L     SACBREG,DCMADSDS    GET SACBPTR                 @Y02668P
         LTR   SACBREG,SACBREG     IF ZERO                     @Y02668P
         BZ    ERR921              NO AREA EXISTS              @Y02668P
         USING DCMACB,SACBREG      SET BASE FOR SACB             Y02669
         CLI   XASDID,ZERO         WAS AREA SPECIFIED ON COMMAND?Y02669
         BNE   AREASPEC            YES, BRANCH                   Y02669
         XC    XASAVSTD(N8),XASAVSTD CLEAR SACB ADDR SAVE AREA @YM7666P
SACBSCAN EQU   *                                                 Y02669
         TM    DCMASACB,DCMAUSE    IS AREA IN USE?               Y02669
         BZ    AREACHEK            NO, CHECK DISPLAY FOUND     @ZA09164
         TM    DCMADFLG,DCMADD     TRACK IN AREA?              @YM7666P
         BO    TESTTR              YES, CHECK IT OUT           @YM7666P
         TM    DCMAFLG1,DCMADISP   IS DISPLAY IN AREA?           Y02669
         BO    FOUNDONE            YES, IS IT THE RIGHT ONE      Y02669
NEXTSACB EQU   *                                               @YM7666P
         ICM   SACBREG,N7,DCMACBNX+1  IS THERE ANOTHER AREA?     Y02669
         BZ    AREACHEK            NO, GO SEE IF ONE ALREADY   @YM7666P
*                                  FOUND                       @YM7666P
         B     SACBSCAN            YES, CHECK IT OUT             Y02669
AREACHEK EQU   *                                               @YM7666P
         ICM   SACBREG,M7,XASAVSTD+1 DISPLAY AREA FOUND?       @YM7666P
*                                  GETS ADDR OF DISPLAY SACB   @YM7666P
         BZ    NOHITS              NO, CHECK IF TRACK FOUND    @YM7666P
         B     WHICHONE            YES, DETERMINE COMMAND      @YM7666P
NOHITS   EQU   *                                               @YM7666P
         ICM   SACBREG,M7,XASAVSTD+N5 TRACK FOUND?             @YM7666P
*                                  GETS ADDR OF TRACK SACB     @YM7666P
         BNZ   TRFOUND             YES, DETERMINE COMMAND      @YM7666P
         B     NODISPS             NO, ERR NO DISPLAY ON       @YM7666P
*                                  SCREEN                      @YM7666P
TRFOUND  EQU   *                                               @YM7666P
         CLI   N2(REG6),DCHAR      IS THIS ERASE DISPLAY CMD?  @YM7666P
         BE    USEPT               YES, ERR IEE151I USE STOPTR @YM7666P
         MVC   XASDID,DCMAID       NO, PUT TRACK AREA ID IN    @YM7666P
         B     FRAME               XSA AND GO HANDLE FRAME     @YM7666P
         EJECT
AREASPEC EQU   *                                                 Y02669
         CLC   DCMAID(ONE),XASDID  SACB ID MATCH SPECIFIED ID?   Y02669
         BE    MATCHID             YES, IS DISPLAY IN AREA       Y02669
         ICM   SACBREG,N7,DCMACBNX+1 GET ADDRESS OF NEXT SACB    Y02669
         BNZ   AREASPEC            CONTINUE SEARCH OF SACB'S     Y02669
         B     NODISPA             ERR-NO DISPLAY IN AREA        Y02669
MATCHID  EQU   *                                                 Y02669
         TM    DCMAFLG1,DCMADISP   IS THERE A DISPLAY IN AREA?   Y02669
         BO    WHICHONE            YES, WHICH COMMAND IS THIS    Y02669
         B     NODISPA             ERR-NO DISPLAY IN AREA        Y02669
FOUNDONE EQU   *                                                 Y02669
         CLI   XASDID,ZERO         FIRST TIME DISPLAY FOUND?   @YM7666P
         BNE   PROCESS             NO, DEFAULT TO LOWEST DISP  @ZA09164
         MVC   XASDID,DCMAID       SAVE AREA ID FOR LATER      @YM7666P
         ST    SACBREG,XASAVSTD    SAVE DISPLAY SACB ADDR      @YM7666P
         B     NEXTSACB            CHECK NEXT AREA             @YM7666P
WHICHONE EQU   *                                                 Y02669
         CLI   N2(REG6),DCHAR      IS THIS ERASE DISPLAY CMND?   Y02669
         BNE   FRAME               BRANCH NO                     Y02669
         TM    DCMADFLG,DCMADD     IS THIS A DYNAMIC DISPLAY?    Y02669
         BO    USEPT               YES IEE151 USE STOPTR COMMAND Y02669
         B     TESTOWN             BRANCH NO  K E,D IS VALID     Y02669
         SPACE 3
FRAME    EQU   *                                                 Y02669
         TM    DCMAFLG1,DCMAFRPR   IS FRAMING IN PROCESS?        Y02669
         BO    FRMNTCMP            YES IEE158 FRAME NOT COMPLETE Y02669
         TM    DCMAFLG1,DCMADEND   IS THIS THE LAST FRAME?       Y02669
         BO    LASTFRAM            YES IEE158 LAST FRAME DISPLAY Y02669
         OI    DCMAFLG1,DCMAFRPR   SET FRAMING IN PROCESS FLAG   Y02669
         B     TESTOWN             BRANCH TO BUILD K PARM LIST   Y02669
         EJECT
***************************************************************@YM7666P
*                                                              @YM7666P
* CHECK FOR TRACK FOUND IN AREA WHILE PROCESSING K E,D OR      @YM7666P
* K D,F WITHOUT L=CCA                                          @YM7666P
*                                                              @YM7666P
* FOR K E,D: AN AREA CONTAINING TRACK WILL NOT BE CONSIDERED,  @YM7666P
*            SINCE ONLY STOPTR CAN DELETE A TRACK, UNLESS IT   @YM7666P
*            IS THE ONLY OCCUPIED AREA ON THE SCREEN.  THIS    @YM7666P
*            WILL BE TREATED AS AN ERROR.                      @YM7666P
*                                                              @YM7666P
* FOR K D,F: AN AREA CONTAINING TRACK WILL BE CONSIDERED ONLY  @YM7666P
*            IF THE DISPLAY IS THE ONLY DISPLAY ON THE SCREEN. @YM7666P
*            IF ANOTHER DISPLAY IS THERE, IT WILL BE FRAMED IN @YM7666P
*            PREFERENCE TO THE TRACK.                          @YM7666P
*                                                              @YM7666P
***************************************************************@YM7666P
         SPACE 3
TESTTR   EQU   *                                               @YM7666P
         ST    SACBREG,XASAVSTD+N4 SAVE TRACK AREA SACB ADDR   @YM7666P
         B     NEXTSACB            CHECK NEXT AREA             @YM7666P
         EJECT
***********************************************************************
*                                                                     *
* BUILD PARAMETER LIST WITH COMMAND AND OPERANDS.  FIRST DETERMINE IF *
* GETMAIN HAS TO BE ISSUED IF TARGET AND ISSUING CONSOLE ARE NOT      *
* THE SAME OR IF THE DCM WILL BE USED FOR THE PARAMETER LIST          *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*   DOES TARGET CONSOLE = ISSUING ?                                   *
***********************************************************************
TESTOWN  EQU   *
         TM    XASSDS,XASSDS3      IF CMD FROM ASSOC CNSL
         BO    GETKPARM            GETMAIN KPARM LIST          @Y02668P
         CLC   XAU(ONE),XASCID     IS THE TARGET ID EQUAL TO THE ISSUE-
         BE    SETDCM              ING CONSOLE? IF NO, ISSUE GETMAIN.
***********************************************************************
*   TARGET CONSOLE DOES NOT = ISSUING                                 *
*                        OR                                   @Y02668P*
*   CMD ISSUED FROM JES3 ASSOCIATED CONSOLE                   @Y02668P*
***********************************************************************
GETKPARM EQU   *
         L     KREG,DCMADKP        GET POINTER TO PARAMETER LIST
         USING KPARAM,KREG         ADDRESSIBILITY FOR K LIST
         LA    REG0,DCMADKP        GET ADDRESS OF POINTER        Y02651
SRCLST   EQU   *                                                 Y02669
         LTR   KREG,KREG           K PARM ALREADY ON CHAIN?      Y02669
         BZ    GETAREA             NO, BRANCH TO GETMAIN ONE
         L     KREG,KCHAIN         GET POINTER TO NEXT K LIST
         LA    REG0,KCHAIN         GET ITS POINTER               Y02651
         B     SRCLST              BRANCH TO SEARCH LISTS
         EJECT
***********************************************************************
*   LOCKS MUST BE HELD FOR CHAINING THEREFORE DO BRANCH ENTRY TO      *
*   GETMAIN                                                           *
*      REGISTERS DESTROYED : 0, 1, 3, 4, 7, 14, 15                    *
*      INPUT TO GETMAIN : R4 POINTS TO CURRENT TCB                    *
*                         R7 POINTS TO CURRENT ASCB                   *
***********************************************************************
GETAREA  EQU   *
         L     REG4,CVTPTR         GET ADDRESS OF CVT            Y02651
         USING DCVT,REG4           ADDRESSABILITY OF CVT         Y02651
         L     REG4,CVTTCBP        GET ADDRESS OF TCB & ASCB PTRSY02651
         DROP  REG4                                              Y02651
         USING TCBASCB,REG4        ADDRESSABILITY OF IEFPTRS     Y02651
         L     REG7,ASCBPTR        ADDRESS OF ASCB FOR INTERFACE Y02651
         L     REG4,TCBPTR         ADDRESS OF TCB FOR INTERFACE  Y02651
         DROP  REG4                                              Y02651
         SR    REG4,REG4           INTERFACE FOR BRANCH ENTRY    Y02651
         ST    REG14,XAP           RETURN ADDRESS MUST BE SAVED  Y02651
         ST    REG0,XAD            K LIST ADDRESS MUST BE SAVED  Y02651
         GETMAIN  RC,LV=KPLLNGTH,SP=SP241,BRANCH=YES             Y02651
         L     REG14,XAP           RESTORE RETURN ADDRESS        Y02651
         L     REG4,XAD            RESTORE K LIST ADDRESS        Y02651
         LTR   R15,R15             WAS GETMAIN OK?
         BC    N7,ERR930           NO, ISSUE IEE930I             Y02669
         ST    REG1,0(REG4)        YES, CHAIN K PARM             Y02651
         LR    KREG,REG1           GET AREA ADDRESS              Y02651
         XC    KFLGS(N7),KFLGS     ZERO FLAG BYTE AND POINTER
         OI    KFLGS,KGM           INDICATE AREA WAS GETMAINED
         B     BLDLST              BRANCH TO BUILD PARAMETER LIST
         EJECT
***********************************************************************
*   TARGET CONSOLE = ISSUING                                          *
***********************************************************************
SETDCM   EQU   *
         OI    DCMSVC34,DCMMYCMD   ISSUING CONSOLE TO HANDLE COMMAND
         LA    KREG,DCMINLGN       GET ADDRESS OF TRANS DCM PARAM LIST
         MVI   KFLGS,ZERO          ZERO FLAG BYTE ONLY           Y02669
***********************************************************************
*   BUILD PARM LIST FOR ALL REQUESTS                                  *
***********************************************************************
BLDLST   EQU   *
         SR    REG7,REG7           CLEAR REGISTER                Y02669
         CR    REG6,REG7           IS OPERAND POINTER ZERO?      Y02669
         BE    NOPERAND            YES, IGNORE MOVE OF OPERANDS  Y02669
         L     REG7,XAR            NO, GET BEGINNING ADDRESS OF  Y02669
*                                  COMMAND BUFFER                Y02669
         LA    REG7,0(REG7)        CLEAR HI ORDER BYTE           Y02669
         AH    REG7,0(REG7)        CALCULATE END OF CMD BUFFER   Y02669
         SR    REG7,REG6           CALCULATE LENGTH OF OPERANDS  Y02669
         CH    REG7,LGTH125        IS LENGTH LESS THAN 125     @YM3473P
         BL    EXEC                YES BRANCH AND CONTINUE     @YM3473P
         LH    REG7,LGTH124        NO MAKE IT 125              @YM3473P
*  DON'T DECREMENT FOR EXECUTE - MUST HAVE AT LEAST 1 BLANK AT END FOR*
*  FOR PROPER INTERFACE                                               *
EXEC     EQU   *                                               @YM3473P
         EX    REG7,MOVEOPS        MOVE OPERANDS INTO K LIST     Y02669
NOPERAND EQU   *
         ST    MODREG,KMOD         PUT MODULE INDICATOR IN DCM   Y02669
         MVC   KAID(ONE),XASDID    MOVE AREA ID INTO LIST
         CLI   XAN,PT              IS COMMAND STOP TRACK?        Y02669
         BE    SETMON              YES BRANCH
         OI    KFLGS,KK            SET CONTROL COMD INDICATOR
         CLC   ZERO(N3,REG6),DUCHAR IS THIS THE K D,U COMMAND? @ZA01568
         BE    POSTRACK            GO POST TRACK PROCESSOR       Y02669
         B     INDSET              BRANCH TO TEST FOR GETMAIN
         EJECT
***********************************************************************
*   BRANCH ENTRY POST FOR STOP TRACK AND K D,U                @Y02668P*
*    1. LOCAL POST IF THE COMMAND IS ISSUED IN COMTASK        @Y02668P*
*       MEMORY                                                @Y02668P*
*    2. CROSS MEMORY POST IF THE COMMAND WAS ISSUED           @Y02668P*
*       FROM ANOTHER MEMORY (JES3)                            @Y02668P*
***********************************************************************
         SPACE   3
SETMON   EQU   *                                                 Y02669
         OI    KFLGS,KPT           SET STOPTR INDICATOR          Y02669
POSTRACK EQU   *                                                 Y02651
         STM   KREG,R15,XASAVSTD   SAVE REGS BEFORE POST         Y02651
         DROP  KREG                                              Y02651
         L     SACBREG,XAXSACB     GET ADDR OF SACB WITH TRACK   Y02669
         USING DCMACB,SACBREG      SET UP ADDRESSABILITY         Y02669
         L     MODREG,DCMATECB     GET ADDR OF TRACK CANCEL ECB  Y02669
         DROP  SACBREG                                           Y02669
         CLI   N2(REG6),UCHAR      IS THIS THE K D,U COMMAND?    Y02651
         BNE   SETPTCDE            NO, SET STOPTR POST CODE      Y02651
         LA    KREG,KDUCODE        ELSE, SET UPDATE MODE CODE    Y02651
         B     GOTOPOST            BRANCH ENTER POST ROUTINE     Y02651
SETPTCDE EQU   *                                                 Y02651
         LA    KREG,PTCODE         LOAD POST CODE FOR STOPTR     Y02651
GOTOPOST EQU   *                                                 Y02651
         L     REG14,CVTPTR        GET ADDRESS OF CVT            Y02651
         USING DCVT,REG14          ADDRESSABILITY TO CVT         Y02651
         L     R15,CVT0PT01        GET ADDRESS OF POST ROUTINE   Y02651
         TM    XASSDS,XASSDS3      DID COMTASK ISSUE THE CMD?  @Y02668P
         BZ    BRPOST              YES, BRANCH LOCAL POST      @Y02668P
         LA    SACBREG,CVTBRET     NO, JES3 XMPOST ERRET R12   @Y02668P
         ICM   MODREG,M8,XPOST     INDICATE XMPOST             @Y02668P
         L     REG3,CVTCUCB        GET ADDRESS OF UCM BASE     @Y02668P
         USING UCM,REG3            ADDRESSABILITY TO THE UCM   @Y02668P
         L     BASEREG,UCMASCB     ASCB TO BE POSTED R13       @Y02668P
BRPOST   EQU   *                                               @Y02668P
         DROP  REG14                                             Y02651
         BALR  REG14,R15           BRANCH ENTER POST             Y02651
         LM    KREG,R15,XASAVSTD   RESTORE REGS AFTER POST       Y02651
         USING KPARAM,KREG         RESTORE ADDRESSABILITY        Y02651
         SPACE 2
INDSET   EQU   *                                                 Y02669
         TM    KFLGS,KGM           WAS K PARM GETMAINED HERE?    Y02669
         BO    TSTBSY              YES, BRANCH
         B     RETURN              ELSE RETURN                   Y02669
         SPACE 2
TSTBSY   EQU   *                                                 Y02669
         TM    UCMSTS,UCMBF        IS TARGET DEVICE BUSY?        Y02669
         BO    RETURN              YES, BRANCH TO RETURN
         SPACE 2
         TM    UCMECB,WAITCODE     IS TARGET DEVICE WAITING?
         BO    POST                YES, BRANCH TO POST
         SPACE 3
         CLI   UCMECB,REDYCODE     IS TARGET DEVICE READY?
         BNE   RETURN              NO, BRANCH TO RETURN
         EJECT
***********************************************************************
*        POST DIDOCS IF THE TARGET DEVICE IS WAITING USING    @Y02668P*
*          THE POST MACRO                                     @Y02668P*
*           1. RELEASE THE LOCKS. THE LOCKS ARE ALWAYS HELD   @Y02668P*
*              ON ENTRY TO IEE6703D                           @Y02668P*
*           2. LOCAL POST IF THE COMMAND WAS ISSUED IN        @Y02668P*
*              COMTASK MEMORY                                 @Y02668P*
*           3. CROSS MEMORY POST IF A MEMORY OTHER THAN       @Y02668P*
*              COMTASK ISSUED THE COMMAND (JES3)              @Y02668P*
***********************************************************************
         SPACE 2
POST     EQU   *
         DROP  REG8                                              Y02669
         STM   KREG,R15,XASAVSTD   SAVE REGS BEFORE POST       @ZA03632
         LA    MODREG,UCMECB       ADDR OF ECB TO POST         @ZA03632
         LA    KREG,POSTCODE       POST CODE REG               @ZA03632
         L     REG14,CVTPTR        PTR TO CVT                  @ZA03632
         USING DCVT,REG14          CVT ADDRESSABILITY          @ZA03632
         L     R15,CVT0PT01        ADDR OF POST ROUTINE        @ZA03632
         TM    XASSDS,XASSDS3      DID COMM TASK ISSUE CMND?   @ZA03632
         BZ    LOCPOST             YES, BRANCH TO LOCAL POST   @ZA03632
         LA    SACBREG,CVTBRET     XMPOST ERRET ADDR           @ZA03632
         ICM   MODREG,M8,XPOST     INDICATE XMPOST             @ZA03632
         L     REG3,CVTCUCB        ADDR OF UCM BASE            @ZA03632
         USING UCM,REG3            UCM ADDRESSABILITY          @ZA03632
         L     BASEREG,UCMASCB     ASCB TO BE POSTED           @ZA03632
LOCPOST  EQU   *                                               @ZA03632
         DROP  REG14                                           @ZA03632
         BALR  REG14,R15           BRANCH ENTER POST           @ZA03632
         LM    KREG,R15,XASAVSTD   RESTORE REGISTERS           @ZA03632
RETURN   EQU   *                                                 Y02669
         BAL   REG8,LOCKSOFF       GO RELEASE LOCKS              Y02651
         BR    REG14               RETURN TO CALLER              Y02669
         EJECT
***********************************************************************
* LOCKS MUST BE RELEASED BEFORE POSTING, RETURNING OR BRANCHING  Y02651
*                        TO IEE0503D                             Y02651
***********************************************************************
         SPACE 2
LOCKSOFF EQU   *                                                 Y02651
         STM   MODREG,REG14,XASAVLOC SAVE REGS AROUND SETLOCK    Y02651
         SETLOCK RELEASE,TYPE=CMS,RELATED=(K,IEE7503D(LOCKSET))
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(K,IEE7503D(LOCKSET))
         LM    MODREG,REG14,XASAVLOC RESTORE REGS AFTER SETLOCK  Y02651
         NI    XASSDS,XFF-XASSDS5  INDICATE NO LOCKS SET         Y02651
         BR    REG8                RETURN TO MAINLINE            Y02651
         EJECT
***********************************************************************
*                                                                     *
*                            ERROR EXITS                         Y02669
*                                                                     *
* NOTE: LOCKS ARE ALWAYS HELD ON ENTRY TO IEE6703D                    *
***********************************************************************
         SPACE
ERR156   EQU   *
         SR    REG7,REG7           CLEAR REGISTER                Y02669
         CR    REG6,REG7           IS OPERAND POINTER ZERO?      Y02669
         BE    KEDEFAUT            YES, NO OPERANDS K E DEFAULT  Y02669
         LA    REG6,ZERO(REG6)     SET OP POINTER                Y02669
KEDEFAUT EQU   *                   CURSOR POINTER CAN BE ZERO    Y02669
         ST    REG6,XASTSAVE       CURSOR ADDRESS FOR MSG RTN    Y02669
         MVI   XAE,MSG156          IEE156I  - INVALID OPERAND    Y02669
         B     D5603D              BRANCH TO EXIT                Y02669
         SPACE  2
USEPT    EQU   *
         MVI   XASTSAVE,MSG151A    SECOND MSG CODE -USE STOPTR   Y02669
         SPACE 1
ERR151   EQU   *
         MVI   XAE,MSG151          IEE151I  -DELETE INCONSISTENT Y02669
         B     STOREOP             BRANCH TO MSG EXIT            Y02669
         SPACE  2
NODISPA  EQU   *
         MVI   XASTSAVE,MSG1581B   SECOND CODE - NO DISPLAY IN AREA
         CLI   ZERO(REG6),ECHAR    IS THIS AN ERASE OPERAND?      M2087
         BE    ERR151              BRANCH YES FOR DELETE MSG      M2087
         B     ERR158              NO, K MSG
         SPACE  1
NODISPS  EQU   *
         MVI   XASTSAVE,MSG1581A   SECOND CODE - NO DISPLAY ON SCREEN
         CLI   ZERO(REG6),ECHAR    IS THIS AN ERASE OPERAND?      M2087
         BE    ERR151              BRANCH YES FOR DELETE MSG      M2087
         B     ERR158              NO, K MSG
         SPACE  1
LASTFRAM EQU   *
         MVI   XASTSAVE,MSG158A    SECOND CODE - LAST FRAME DISPLAY
         B     ERR158              BRANCH TO MAJOR MSG CODE
         SPACE  1
FRMNTCMP EQU   *
         MVI   XASTSAVE,MSG158B    SECOND CODE - FRAME NOT COMPLETE
         B     ERR158              BRANCH TO MAJOR MSG CODE
         EJECT
DYDISP   EQU   *
         MVI   XASTSAVE,MSG158C    SECOND CODE - DISPLAY NOT DYNAMIC
ERR158   EQU   *
         MVI   XAE,MSG158          IEE158I  - K REQUEST INCONSISTENT
         B     STOREOP             BRANCH TO EXIT                Y02669
ERR921   EQU   *
         MVI   XAE,MSG921          IEE921I - REJECTED          @Y02668P
         MVI   XASTSAVE,MSG921A    NEEDS DISPLAY AREA          @Y02668P
         B     STOREOP             BR, SET CURSOR POINTER      @Y02668P
         SPACE 2
ERR925A  EQU   *
         MVC   XASOPTR(N3),XAL+ONE MOVE OPERAND POINTER IN       Y02669
         MVI   XASTSAVE,MSG925A    2ND CODE-FOR CRT ONLY         Y02669
         MVI   XAE,MSG925          MSG CODE-IEE925I OPERAND      Y02669
         B     D5603D              BRANCH TO EXIT                Y02669
         SPACE 2
ERR926   EQU   *
         MVI   XAE,MSG926          IEE926I  - L OPERAND INVALID
         MVI   XASTSAVE,MSG926A    SECOND CODE - ON THIS COMMAND
         B     STOREOP             BRANCH TO STORE OPERAND       Y02669
         SPACE 2
ERR927   EQU   *
         MVI   XASTSAVE,MSG927A    SECOND CODE - SPECIFY L OPERAND
         MVI   XAE,MSG927          IEE927I  - K REQUEST AMBIGUOUS
         LA    REG6,N3(REG6)       SET CURSOR TO 'L' POSITION    Y02669
         B     STOREOP
         SPACE 2
ERR930   EQU   *
         MVI   XAE,MSG930          IEE930I- INSUFFICIENT STORAGE Y02669
         SPACE 2
STOREOP  EQU   *
         STCM  REG6,N7,XASOPTR     SAVE CURSOR POINTER           Y02669
D5603D   EQU   *
         L     R15,VCON5603        RT AND K MSG MODULE NAME      Y02669
         BR    R15                 BRANCH TO IEE5603D            Y02669
DERR777  EQU   *
         MVI   XAE,MSG777          INVALID FROM SUBSYSTEM CNSL @Y02668P
D0503D   EQU   *                                               @Y02668P
         BAL   REG8,LOCKSOFF       RELEASE THE LOCKS           @Y02668P
         L     R15,VCON0503        BRANCH TO MESSAGE MODULE    @Y02668P
         BR    R15                                             @Y02668P
         EJECT
***********************************************************************
*                                                                     *
*                 CONSTANTS USED IN THIS ROUTINE                      *
*                                                                     *
***********************************************************************
         SPACE   3
VCON5603 DC    V(IEE5603D)         RT AND K MSG RTN NAME         Y02669
VCON6803 DC    V(IEE6803D)         K A,NN,NN RTN NAME            Y02669
VCON6903 DC    V(IEE6903D)         K A,REF & K A,NONE RTN NAME   Y02669
VCON7703 DC    V(IEE7703D)         K V RTN NAME                  Y02669
VCON7803 DC    V(IEE7803D)         K C,D,ID RTN NAME             Y02669
VCON0503  DC   V(IEE0503D)                                     @Y02668P
CDCHAR   DC    C'C,D'              CONSTANT COMPARE              Y02669
DFCHAR   DC    C'D,F'              CONSTANT COMPARE            @YM7666P
DUCHAR   DC    C'D,U'              CONSTANT COMPARE            @ZA01568
LGTH125  DC    H'125'              MAX LENGTH K PARM LIST      @YM3473P
LGTH124  DC    H'124'              MAX LGTH K PARM LIST MINUS1 @YM3473P
XPOST    DC    X'80'               FLAG FOR XMPOST             @Y02668P
         SPACE
DCOMPARE CLC   ONE(ZERO,REG1),ZERO(REG6) LOOK FOR MATCH IN TABLE Y02669
MOVEOPS  MVC   KOPN(ZERO),ZERO(REG6)    MOVE OPERANDS INTO KLIST Y02669
         SPACE   5
***********************************************************************
*                           PATCH AREA                                *
***********************************************************************
PATCH    DC    C'****PATCH AREA****'
PATCH1   DC    C'IEE6703D-TEST ONLY'
PATCH2   DC    36C' '
         EJECT
***********************************************************************
*                                                                     *
*                           BRANCH  TABLE                             *
*                                                                     *
*        THIS TABLE MUST BE IN A ONE-TO-ONE CORRESPONDENCE WITH  Y02669
*        THE 'COMPARE TABLE'                                     Y02669
***********************************************************************
         SPACE   5
BRTABLE  DS    0H                                                Y02669
         B     KALONE             BRANCH TO PROCESS K  E         Y02669
         B     SECMD              BRANCH TO PROCESS K  E,N       Y02669
         B     SEPFK              BRANCH TO PROCESS K  E,PFK     Y02669
         B     KALONE             BRANCH TO PROCESS K  E,SEG     Y02669
         B     SETFLG             BRANCH TO PROCESS K  E,D       Y02669
         B     SEDEL1             BRANCH TO PROCESS K  E,        Y02669
         B     SEDEL4             BRANCH TO PROCESS K  D         Y02669
         B     SEDEL4             BRANCH TO PROCESS K  D,N       Y02669
         B     SEDEL4             BRANCH TO PROCESS K  D,N,HOLD  Y02669
         B     SETFLGMD           BRANCH TO PROCESS K  D,F       Y02669
         B     MODSET             BRANCH TO PROCESS K  D,H       Y02669
         B     MODSET             BRANCH TO PROCESS K  D,U       Y02669
         B     SEPFK              BRANCH TO PROCESS K  D,PFK     Y02669
         B     ERR156             BRANCH ERROR K D               Y02669
         B     SPECOPT            BRANCH TO PROCESS K  S         Y02669
         B     SPECOPT            BRANCH TO PROCESS K  S,        YM1913
         B     SEPFK              BRANCH TO PROCESS K  N         Y02669
         B     D7703D             BRANCH TO PROCESS K  V         Y02669
         B     D6903D             BRANCH TO PROCESS K  T         Y02669
         B     D6903D             BRANCH TO PROCESS K A          Y02669
         B     D6903D             BRANCH TO PROCESS K A,REF      Y02669
         B     D6903D             BRANCH TO PROCESS K A,NONE     Y02669
         B     D6803D             BRANCH TO PROCESS K A,NN,NN    Y02669
         B     D7803D             BRANCH TO PROCESS K C,D        Y02669
         EJECT
***********************************************************************
*  NOTE: THE FOLLOWING TABLE MUST BE THE LAST ITEM IN THIS            *
*        MODULE SINCE A USING FOR THE TABLE IS ISSUED ON              *
*        REGISTER 1 AND THUS CAN REESTABLISH THE MODULE'S             *
*        BASE REGISTER FOR ANY CODE WHICH FOLLOWS THIS TABLE.         *
*                                                                     *
*                          COMPARE TABLE                              *
*                                                                     *
*           THIS TABLE MUST BE IN A ONE-TO-ONE CORRESPONDENCE    Y02669
*           WITH THE BRANCH TABLE                                Y02669
***********************************************************************
DTAB     EQU   *                                                 Y02669
DLEN     EQU   *                                                 Y02669
         DC    AL1(L'ERASE-1)       LENGTH OF OPERAND -1         Y02669
ERASE    DC    C'E '                VALID OPERAND
         DC    AL1(L'ERASEN-1)                                   Y02669
ERASEN   DC    C'E,N '                                           Y02669
         DC    AL1(L'ERASEPFK-1)                                 Y02669
ERASEPFK DC    C'E,PFK '                                         Y02669
         DC    AL1(L'ERASESEG-1)                                 Y02669
ERASESEG DC    C'E,SEG '                                         Y02669
         DC    AL1(L'ERASED-1)                                   Y02669
ERASED   DC    C'E,D '                                           Y02669
         DC    AL1(L'ERASEC-1)                                   Y02669
ERASEC   DC    C'E'                                              Y02669
         DC    AL1(L'DISPLAY-1)                                  Y02669
DISPLAY  DC    C'D '                                             Y02669
         DC    AL1(L'DISPLAYN-1)                                 Y02669
DISPLAYN DC    C'D,N '                                           Y02669
         DC    AL1(L'DNHOLD-1)                                   Y02669
DNHOLD   DC    C'D,N,HOLD '                                      Y02669
         DC    AL1(L'DISPLAYF-1)                                 Y02669
DISPLAYF DC    C'D,F '                                           Y02669
         DC    AL1(L'DISPLAYH-1)                                 Y02669
DISPLAYH DC    C'D,H '                                           Y02669
         DC    AL1(L'DISPLAYU-1)                                 Y02669
DISPLAYU DC    C'D,U '                                           Y02669
         DC    AL1(L'DPFK-1)                                     Y02669
DPFK     DC    C'D,PFK '                                         Y02669
         DC    AL1(L'JUSTD-1)                                    Y02669
JUSTD    DC    C'D'                                              Y02669
         DC    AL1(L'SPEC-1)                                     Y02669
SPEC     DC    C'S '                                             Y02669
         DC    AL1(L'SPECC-1)                                    YM1913
SPECC    DC    C'S,'                                             YM1913
         DC    AL1(L'NPFK-1)                                     Y02669
NPFK     DC    C'N'                                              Y02669
         DC    AL1(L'VARY-1)                                     Y02669
VARY     DC    C'V'                                              Y02669
         DC    AL1(L'TR-1)                                       Y02669
TR       DC    C'T'                                              Y02669
         DC    AL1(L'A-1)                                        Y02669
A        DC    C'A '                                             Y02669
         DC    AL1(L'AREF-1)                                     Y02669
AREF     DC    C'A,REF '                                         Y02669
         DC    AL1(L'ANONE-1)                                    Y02669
ANONE    DC    C'A,NONE '                                        Y02669
         DC    AL1(L'ADIGIT-1)                                   Y02669
ADIGIT   DC    C'A,'                                             Y02669
         DC    AL1(L'CD-1)                                       Y02669
CD       DC    C'C,D'                                            Y02669
DENTAB   EQU   *                                                 Y02669
         EJECT
DXSA     DSECT
         IEEXSA
         EJECT
DCVT     DSECT
         CVT
         EJECT
         IEECUCM  FORMAT=NEW
         EJECT
         IEERDCM
         EJECT
DCMSTRT  DSECT
         IEETDCM
         EJECT
PLIST    DSECT
         IEECVMAP KPARAM
         EJECT
         IHAPSA
         EJECT
         IEFPTRS
         END
