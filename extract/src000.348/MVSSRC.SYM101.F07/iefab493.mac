         TITLE 'IEFAB493 - VOL.MT. && VERIFY CONTROL                   *
                         '
IEFAB493 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(24)                                          01S0001
         DC    C'IEFAB493 78089  UZ17548 '                      01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(12),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*RETCODE = SUCCESS;                    /*INITIALIZE RETURN CODE      */
         SLR   RETCODE,RETCODE                                  01S0047
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - VMVSETUP                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - VOL.MT. AND VERIFY SET-UP RTN                 */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS SEGMENT SCANS ALL REQUEST ELEMENTS PASSED BY THE CALLER   */
*/*   OF VOL.MT.AND VERIFY IN ORDER TO OBTAIN COUNTS OF THE NUMBER OF*/
*/*   UNLOADS,MOUNTS,AND VERIFYS REQUESTED. IN ADDITION THE NUMBER   */
*/*   OF MOUNT REQUESTS SPECIFING DA AND OR WTOR TAPE MOUNTS ARE     */
*/*   COUNTED TO PROVIDE INFORMATION FOR LATER CALCULATING THE SIZE  */
*/*   OF MOUNT ENTRIES.                                              */
*/*                                                                  */
*/* OPERATION - SEE FUNCTION                                         */
*/*                                                                  */
*/* ENTRY POINT - (INLINE SUBROUTINE - ENTERED AT TOP)               */
*/*                                                                  */
*/*   PURPOSE - TO BUILD COUNT TABLE                                 */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     PTR TO CHAIN OF REQUEST ELEMENTS                             */
*/*                                                                  */
*/* EXIT - NORMAL -(INLINE SUBROUTINE - EXITS AT BOTTOM              */
*/*                                                                  */
*/*   CONDITION - PROCESSING COMPLETE (COUNT TABLE BUILD)            */
*/*                                                                  */
*/*   OUTPUT - COUNT TABLE                                           */
*/*                                                                  */
*/*   RETURN CODE - NONE                                             */
*/********************************************************************/
*VMVREQBP = VMVRQPTR;                  /*PTR.TO FIRST REQ.ELEMENT    */
         L     @10,@PC00001                                     02S0048
         L     VMVREQBP,VMVRQPTR(,@10)                          02S0048
*CNTTAB = CNTTAB && CNTTAB;            /*INITIALIZE COUNT TABLE      */
         XC    CNTTAB(16),CNTTAB                                02S0049
*DO WHILE(VMVREQBP ^= ZERO);           /*DO UNTIL NO MORE REQUESTS   */
         B     @DE00050                                         02S0050
@DL00050 DS    0H                                               02S0051
*  IF VMVUNLOD = ON ×                  /*IF UNLOAD REQUEST           */
*     VMVREWND = ON THEN               /*OR REWIND REQUEST           */
         TM    VMVUNLOD(VMVREQBP),B'10100000'                   02S0051
         BZ    @RF00051                                         02S0051
*    DO;                                                        02S0052
*      UNLDCNT = UNLDCNT + ONE;        /*UPDATE UNLOAD REQUEST COUNT */
         LA    @10,1                                            02S0053
         AL    @10,UNLDCNT                                      02S0053
         ST    @10,UNLDCNT                                      02S0053
*    END;                                                       02S0054
*  ELSE;                               /*NOT UNLOAD COUNT            */
@RF00051 DS    0H                                               02S0056
*  IF VMVMOUNT = ON THEN               /*IF MOUNT REQUEST            */
         TM    VMVMOUNT(VMVREQBP),B'00010000'                   02S0056
         BNO   @RF00056                                         02S0056
*    DO;                                                        02S0057
*      MOUNTCNT = MOUNTCNT + ONE;      /*UPDATE MOUNT REQUEST COUNT  */
         LA    @10,1                                            02S0058
         AL    @10,MOUNTCNT                                     02S0058
         ST    @10,MOUNTCNT                                     02S0058
*      UCBPTR=VMVUCBP;                 /*ADDRESS UCB                 */
         SLR   UCBPTR,UCBPTR                                    02S0059
         ICM   UCBPTR,7,VMVUCBP(VMVREQBP)                       02S0059
*      IF (VMVDWTOR=ON                 /*IF WTOR                     */
*         × UCB3DACC = ON)             /*OR IF DA                    */
*         & VMVDUPVL = OFF             /*IF NOT DUPLICATE            */
*         & VMVMTMSG = ON THEN         /*AND ISSUE MSG BIT ON        */
         TM    VMVDWTOR(VMVREQBP),B'00000100'                   02S0060
         BO    @GL00002                                         02S0060
         TM    UCB3DACC(UCBPTR),B'00100000'                     02S0060
         BNO   @RF00060                                         02S0060
@GL00002 TM    VMVDUPVL(VMVREQBP),B'10000000'                   02S0060
         BNZ   @RF00060                                         02S0060
         TM    VMVMTMSG(VMVREQBP),B'00001000'                   02S0060
         BNO   @RF00060                                         02S0060
*         DO;                                                   02S0061
*           DOMCNT = DOMCNT+ONE;       /*UPDATE DOMID COUNT          */
         LA    @10,1                                            02S0062
         AL    @10,DOMCNT                                       02S0062
         ST    @10,DOMCNT                                       02S0062
*         END;                                                  02S0063
*      ELSE;                           /*NO DOM REQUIRED             */
@RF00060 DS    0H                                               02S0065
*    END;                                                       02S0065
*  ELSE;                               /*NOT MOUNT REQUEST           */
@RF00056 DS    0H                                               02S0067
*  IF (VMVVRLBL = ON                   /*IF VERIFY LABEL             */
*     × VMVVDEND = ON)                 /*OR VERIFY DEVICE END REQUEST*/
*     & VMVDUPVL = OFF THEN            /*NOT DUPLICATE REQUEST       */
         TM    VMVVRLBL(VMVREQBP),B'00000011'                   02S0067
         BZ    @RF00067                                         02S0067
         TM    VMVDUPVL(VMVREQBP),B'10000000'                   02S0067
         BNZ   @RF00067                                         02S0067
*    DO;                               /*THEN                        */
*      VERFYCNT = VERFYCNT + ONE;      /*UPDATE VERFY REQUEST COUNT  */
         LA    @10,1                                            02S0069
         AL    @10,VERFYCNT                                     02S0069
         ST    @10,VERFYCNT                                     02S0069
*    END;                                                       02S0070
*  ELSE;                               /*NOT VERIFY REQUEST          */
@RF00067 DS    0H                                               02S0072
*  VMVREQBP = VMVNREQP;                /*POINT TO NEXT REQUEST       */
         L     VMVREQBP,VMVNREQP(,VMVREQBP)                     02S0072
*END;                                                           02S0073
@DE00050 SLR   @10,@10                                          02S0073
         CR    VMVREQBP,@10                                     02S0073
         BNE   @DL00050                                         02S0073
*IF UNLDCNT ^= ZERO THEN               /*ANY UNLOADS?                */
         C     @10,UNLDCNT                                      01S0074
         BE    @RF00074                                         01S0074
*  DO;                                 /*IF YES THEN                 */
*    CALL IEFAB494(VMVRQPTR,CNTTAB);   /*INVOKE UNLOAD PROCESSOR     */
         L     @10,@PC00001                                     01S0076
         ST    @10,@AL00001                                     01S0076
         LA    @10,CNTTAB                                       01S0076
         ST    @10,@AL00001+4                                   01S0076
         L     @15,@CV01121                                     01S0076
         LA    @01,@AL00001                                     01S0076
         BALR  @14,@15                                          01S0076
*    RETCODE = REG15;                  /*PICK UP RETURN CODE         */
         LR    RETCODE,REG15                                    01S0077
*  END;                                                         01S0078
*ELSE;                                 /*NO UNLOAD REQUESTS          */
@RF00074 DS    0H                                               01S0080
*IF MOUNTCNT ^= ZERO                   /*ANY MOUNT REQUESTS          */
*   & RETCODE = SUCCESS THEN           /*NO TERMINATING ERRORS       */
         SLR   @10,@10                                          01S0080
         C     @10,MOUNTCNT                                     01S0080
         BE    @RF00080                                         01S0080
         CR    RETCODE,@10                                      01S0080
         BNE   @RF00080                                         01S0080
*  DO;                                                          01S0081
*    VMVECORE = VMVECORE && VMVECORE;  /*CLEAR ESTAE PARM LIST       */
         XC    VMVECORE(200),VMVECORE                           01S0082
*    VMVEXITP = ADDR(VMVECORE);        /*PTR TO PARM LIST            */
         LA    @04,VMVECORE                                     01S0083
         ST    @04,VMVEXITP                                     01S0083
*    VEXASID = ASID;                   /*ASID TO ESTAE PARMS         */
         L     @15,@PC00001+4                                   01S0084
         MVC   VEXASID(2,@04),ASID(@15)                         01S0084
*/********************************************************************/
*/*                                                          @Z40FPPG*/
*/* SEGMENT NAME - ESTAECOD                                  @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/* DESCRIPTIVE NAME - ESTAE CODE                            @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/* FUNCTION - SET UP THE APPROPRIATE ESTAE ENVIRONMENT      @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/* OPERATION -                                              @Z40FPPG*/
*/*          . AN ALLOCATION STAE WORK AREA (ASWA) IS FILLED @Z40FPPG*/
*/*            IN. THIS ALLOWS THE ALLOCATION COMMON ESTAE   @Z40FPPG*/
*/*            EXIT (IEFAB4ED) TO ROUTE CONTROL TO THE OTHER @Z40FPPG*/
*/*            APPROPRIATE EXIT ROUTINES FOR SPECIFIC        @Z40FPPG*/
*/*            RECOVERY PROCESSING.                          @Z40FPPG*/
*/*          . IF NO ALLOCATION ESTAE IS IN EFFECT, OR IF ONE@Z40FPPG*/
*/*            IS BUT IT IS NOT THE CURRENT ESTAE,A NEW ESTAE@Z40FPPG*/
*/*            MUST BE ISSUED, THE ASWA BUILT BECOMES THE    @Z40FPPG*/
*/*            FIRST ONE IN A NEW CHAIN, IS THE EXIT PARM    @Z40FPPG*/
*/*            RECEIVED BY THE COMMON ESTAE EXIT, AND MUST   @Z40FPPG*/
*/*            PROVIDE THE AUTOMATIC CORE FOR THE DATA THAT  @Z40FPPG*/
*/*            ROUTINE USES. THE PTR TO THE LAST ASWA OF AN  @Z40FPPG*/
*/*            EARLIER ALLOCATION ESTAE, IF ANY, IS SAVED IN @Z40FPPG*/
*/*            THIS ASWA. NOTE THAT THE STAE CONTROL BLOCK   @Z40FPPG*/
*/*            ADDRESS IN THE ASWA IS NOT UPDATED UNTIL AFTER@Z40FPPG*/
*/*            THE ESTAE IS ISSUED SO THAT IT REFLECTS THE   @Z40FPPG*/
*/*            CURRENT ONE.                                  @Z40FPPG*/
*/*          . IF THE CURRENT ESTAE IN EFFECT IS ALLOCATION'S@Z40FPPG*/
*/*            IT CAN BE USED TO PROVIDE THIS ROUTINES NECES-@Z40FPPG*/
*/*            SARY RECOVERY ENVIRONMENT. THE SCB ADDRESS IS @Z40FPPG*/
*/*            COPIED FROM THE MOST RECENT ASWA, TO WHICH    @Z40FPPG*/
*/*            THE CHAIN PTR OF THIS NEW ASWA WILL POINT BACK@Z40FPPG*/
*/*          . THE ADDRESS OF THE NEW ASWA IS PLACED IN      @Z40FPPG*/
*/*            THE JSCB AS THE LAST ONE IN THE CHAIN FOR THE @Z40FPPG*/
*/*            CURRENT ALLOCATION ESTAE                      @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/* ENTRY - INLINE SUBROUTINE ENTERED AT THE TOP             @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/*   PURPOSE - SEE FUNCTION                                 @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/*   INPUT -                                                @Z40FPPG*/
*/*        .JSCBASWA - PTR TO LAST ASWA ON CHAIN, IF ANY     @Z40FPPG*/
*/*        .TCBSTABB - PTR TO CURRENT STAE CONTROL BLOCK     @Z40FPPG*/
*/*        .VMVECORE - VM&V ESTAE PARMS                      @Z40FPPG*/
*/*        .RETCODE - RETURN CODE (ZERO ON ENTRY)            @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/* EXIT - INLINE SUBROUTINE THAT EXITS AT THE BOTTOM        @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/*   CONDITION - ESTAE SETUP COMPLETED                      @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/*   OUTPUT -                                               @Z40FPPG*/
*/*           .ASWA - FILLED IN AND PLACED ON THE CHAIN      @Z40FPPG*/
*/*           .JSCBASWA - POINTS TO ASWA AS LAST ON CHAIN    @Z40FPPG*/
*/*           .ISSUESTA - AN IF ESTAE WAS ISSUED             @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/*   RETURN CODES - RETCODE  HAS ESTAE RETURN CODE          @Z40FPPG*/
*/*                  IF ONE WAS ISSUED. (ZERO OTHERWISE)     @Z40FPPG*/
*/*                                                          @Z40FPPG*/
*/********************************************************************/
*ASWAPTR = ADDR(ASWACORE);             /*ADDRESS ASWA CORE   @Z40FPPG*/
         LA    ASWAPTR,ASWACORE                                 02S0085
*ASWA = ASWA && ASWA;                  /*ZERO OUT ASWA       @Z40FPPG*/
         XC    ASWA(40,ASWAPTR),ASWA(ASWAPTR)                   02S0086
*ASWAID =CHARASWA;                     /*FILL IN BLOCK ID    @Z40FPPG*/
         MVC   ASWAID(4,ASWAPTR),@CC00078                       02S0087
*ASWACSCT = EXITCSCT;                  /*CSECT NAME OF EXIT  @Z40FPPG*/
         MVC   ASWACSCT(8,ASWAPTR),@CC00082                     02S0088
*ASWARTNP = ADDR(IEFAB4E2);            /*ADDRESS OF EXIT RTN @Z40FPPG*/
         L     @15,@CA01124                                     02S0089
         ST    @15,ASWARTNP(,ASWAPTR)                           02S0089
*ASWAPRMS = VMVEXITP;                  /*PARMS FOR THIS EXIT @Z40FPPG*/
         ST    @04,ASWAPRMS(,ASWAPTR)                           02S0090
*ASWAVMVF = ON;               /*CHECK FRR PERCOLATION IN EXIT@Z40FPPG*/
         OI    ASWAVMVF(ASWAPTR),B'00100000'                    02S0091
*JSCBPTR = JSCBACT;           /*ACTIVE JSCB FROM CURRENT     @Z40FPPG*/
         L     @04,LOC16PTR                                     02S0092
         L     @04,TCBLISTP(,@04)                               02S0092
         L     @04,TCBPTR(,@04)                                 02S0092
         L     @01,TCBJSCB(,@04)                                02S0092
         L     JSCBPTR,JSCBACT(,@01)                            02S0092
*RFY IEZJSCB BASED(JSCBPTR);  /*RESET BASE                   @Z40FPPG*/
*ISSUESTA = OFF;                       /*INIT. ESTAE SW      @Z40FPPG*/
         NI    ISSUESTA,B'01111111'                             02S0094
*IF JSCBASWA = ZERO   ×                /*NO ALLOC ESTAE IN EFFECT OR
*                                                            @Z40FPPG*/
*   JSCBASWA -> ASWASCBP ^= TCBSTABB THEN /*ITS NOT THE CURRENT ONE
*                                                            @Z40FPPG*/
         L     @15,JSCBASWA(,JSCBPTR)                           02S0095
         CR    @15,@10                                          02S0095
         BE    @RT00095                                         02S0095
         L     @10,ASWASCBP(,@15)                               02S0095
         SLR   @15,@15                                          02S0095
         ICM   @15,7,TCBSTABB(@04)                              02S0095
         CR    @10,@15                                          02S0095
         BE    @RF00095                                         02S0095
@RT00095 DS    0H                                               02S0096
*  DO;                                 /*PROCESS NEW ESTAE   @Z40FPPG*/
*    ISSUESTA = ON;                    /*SAY ESTAE ISSUED    @Z40FPPG*/
         OI    ISSUESTA,B'10000000'                             02S0097
*    ASWAAUTO = ADDR(AB4EDPMS);        /*1ST ASWA GIVES W/A  @Z40FPPG*/
         LA    @10,AB4EDPMS                                     02S0098
         ST    @10,ASWAAUTO(,ASWAPTR)                           02S0098
*    ASWAOLDP = JSCBASWA;              /*OLD LAST IF ANY     @Z40FPPG*/
         MVC   ASWAOLDP(4,ASWAPTR),JSCBASWA(JSCBPTR)            02S0099
*    RFY (REG2,REG3) RSTD;             /*RESTRICT WORK REGS  @Z40FPPG*/
*    REG2 = ADDR(IEFAB4ED);            /*COMMON ESTAE EXIT   @Z40FPPG*/
         L     REG2,@CA01125                                    02S0101
*    REG3 = ASWAPTR;                   /*ASWA IS EXIT PARMS  @Z40FPPG*/
         LR    REG3,ASWAPTR                                     02S0102
*    VEXITCOR(1:VEXITLNG) = VEXITLST(1:VEXITLNG);               02S0103
         L     @10,VEXITLNG                                     02S0103
         BCTR  @10,0                                            02S0103
         EX    @10,@SM01134                                     02S0103
*                                      /*MOVE TO AUTO CORE   @Z40FPPG*/
*    GEN REFS(VEXITCOR) SETS(REG15,TCBSTABB);                   02S0104
      ESTAE (2),PARAM=(3),MF=(E,VEXITCOR)
*    RFY (REG2,REG3) UNRSTD;                                    02S0105
*    RETCODE = REG15;                  /*SAVE RETURN CODE    @Z40FPPG*/
         LR    RETCODE,REG15                                    02S0106
*    IF RETCODE = ZERO THEN            /*IF ESTAE SUCCESSFUL @Z40FPPG*/
         LTR   RETCODE,RETCODE                                  02S0107
         BNZ   @RF00107                                         02S0107
*      ASWASCBP = TCBSTABB;            /*CURRENT SCB @       @Z40FPPG*/
         L     @10,LOC16PTR                                     02S0108
         L     @10,TCBLISTP(,@10)                               02S0108
         L     @10,TCBPTR(,@10)                                 02S0108
         SLR   @04,@04                                          02S0108
         ICM   @04,7,TCBSTABB(@10)                              02S0108
         ST    @04,ASWASCBP(,ASWAPTR)                           02S0108
*  END;                                /*END IF ESTAE ISSUED @Z40FPPG*/
*ELSE                                  /*CURRENT IS ALLOC'S  @Z40FPPG*/
*  DO;                                 /*USE EXISTING ESTAE  @Z40FPPG*/
         B     @RC00095                                         02S0110
@RF00095 DS    0H                                               02S0111
*    ASWASCBP = JSCBASWA -> ASWASCBP;  /*SCB @ FROM LAST ASWA@Z40FPPG*/
         L     @10,JSCBASWA(,JSCBPTR)                           02S0111
         MVC   ASWASCBP(4,ASWAPTR),ASWASCBP(@10)                02S0111
*    ASWACHNP = JSCBASWA;              /*POINT BACK TO LAST  @Z40FPPG*/
         ST    @10,ASWACHNP(,ASWAPTR)                           02S0112
*  END;                                /*CURRENT ESTAE USED  @Z40FPPG*/
*IF RETCODE = ZERO THEN                /*IF NO ERROR         @Z40FPPG*/
@RC00095 SLR   @10,@10                                          02S0114
         CR    RETCODE,@10                                      02S0114
         BNE   @RF00114                                         02S0114
*  DO;                                 /*PUT ASWA ONTO CHAIN @Z40FPPG*/
*     DO; /*MODESET  KEYADDR(ZERO)*/                            02S0116
*       SPKA (ZERO); /*SET PSW KEY*/                            02S0117
         SPKA  0(@10)                                           02S0117
*     END; /*MODESET  KEYADDR(ZERO)*/           /*KEY TO UPDATE JSCB  @
*40FPPG*/                                                       02S0118
*    JSCBASWA = ASWAPTR;               /*NEW LAST ASWA PTR   @Z40FPPG*/
         ST    ASWAPTR,JSCBASWA(,JSCBPTR)                       02S0119
*     DO; /*MODESET  EXTKEY(SCHED)*/                            02S0120
*       SPKA (16); /*SET PSW KEY*/                              02S0121
         LA    @10,16                                           02S0121
         SPKA  0(@10)                                           02S0121
*     END; /*MODESET  EXTKEY(SCHED)*/           /*BACK TO SCHED KEY   @
*40FPPG*/                                                       02S0122
*  END;                                /*END IF NO ERROR     @Z40FPPG*/
*    IF RETCODE = SUCCESS THEN         /*ESTAE SUCCESSFUL            */
@RF00114 LTR   RETCODE,RETCODE                                  01S0124
         BNZ   @RF00124                                         01S0124
*      DO;                                                      01S0125
*        CALL IEFAB495(VMVRQPTR,ASID,CANCLECB,CNTTAB,VMVEXITP); 01S0126
         L     @10,@PC00001                                     01S0126
         ST    @10,@AL00001                                     01S0126
         L     @10,@PC00001+4                                   01S0126
         ST    @10,@AL00001+4                                   01S0126
         L     @10,@PC00001+8                                   01S0126
         ST    @10,@AL00001+8                                   01S0126
         LA    @10,CNTTAB                                       01S0126
         ST    @10,@AL00001+12                                  01S0126
         LA    @10,VMVEXITP                                     01S0126
         ST    @10,@AL00001+16                                  01S0126
         L     @15,@CV01122                                     01S0126
         LA    @01,@AL00001                                     01S0126
         BALR  @14,@15                                          01S0126
*                                      /*INVOKE MOUNT PROCESSOR      */
*        RETCODE = REG15;              /*PICK UP RETURN CODE         */
         LR    RETCODE,REG15                                    01S0127
*         DO; /*MODESET  KEYADDR(ZERO)*/                        01S0128
*           SPKA (ZERO); /*SET PSW KEY*/                        01S0129
         SLR   @10,@10                                          01S0129
         SPKA  0(@10)                                           01S0129
*         END; /*MODESET  KEYADDR(ZERO)*/       /*KEY TO UPDATE JSCB  @
*40FPPG*/                                                       01S0130
*        IF ISSUESTA = ON THEN         /*WAS ESTAE ISSUED    @Z40FPPG*/
         TM    ISSUESTA,B'10000000'                             01S0131
         BNO   @RF00131                                         01S0131
*          JSCBASWA = ASWAOLDP;        /*ZERO OR OLD LAST    @Z40FPPG*/
         MVC   JSCBASWA(4,JSCBPTR),ASWAOLDP(ASWAPTR)            01S0132
*        ELSE                          /*NO ESTAE ISSUED     @Z40FPPG*/
*          JSCBASWA = ASWACHNP;        /*PRECEEDING IS LAST  @Z40FPPG*/
         B     @RC00131                                         01S0133
@RF00131 MVC   JSCBASWA(4,JSCBPTR),ASWACHNP(ASWAPTR)            01S0133
*         DO; /*MODESET  EXTKEY(SCHED)*/                        01S0134
@RC00131 DS    0H                                               01S0135
*           SPKA (16); /*SET PSW KEY*/                          01S0135
         LA    @10,16                                           01S0135
         SPKA  0(@10)                                           01S0135
*         END; /*MODESET  EXTKEY(SCHED)*/       /*BACK TO SCHED KEY   @
*40FPPG*/                                                       01S0136
*        IF ISSUESTA = ON THEN         /*WAS ESTAE ISSUED    @Z40FPPG*/
         TM    ISSUESTA,B'10000000'                             01S0137
         BNO   @RF00137                                         01S0137
*          DO;                         /*YES, CANCEL IT      @Z40FPPG*/
*            GEN REFS(VEXITCOR);                                01S0139
              ESTAE 0,MF=(E,VEXITCOR)
*          END;                        /*                    @Z40FPPG*/
*      END;                                                     01S0141
*    ELSE                              /*ESTAE ERROR                 */
*      RETCODE = ESTAEERR;             /*SET ESTAE ERROR RETURN CODE */
         B     @RC00124                                         01S0142
@RF00124 LA    RETCODE,44                                       01S0142
*  END;                                                         01S0143
*ELSE;                                 /*NO MOUNT REQUESTS           */
@RF00080 DS    0H                                               01S0145
*IF VERFYCNT ^= ZERO                   /*ANY VERIFY REQUESTS?        */
*   & RETCODE = SUCCESS THEN           /*NO TERMINATING ERRORS?      */
@RC00080 SLR   @10,@10                                          01S0145
         C     @10,VERFYCNT                                     01S0145
         BE    @RF00145                                         01S0145
         CR    RETCODE,@10                                      01S0145
         BNE   @RF00145                                         01S0145
*  DO;                                                          01S0146
*    CALL IEFAB496(VMVRQPTR,ASID,CANCLECB,CNTTAB,VMVEXITP); /*CALL
*                                        VERIFY PROCESSOR            */
         L     @10,@PC00001                                     01S0147
         ST    @10,@AL00001                                     01S0147
         L     @10,@PC00001+4                                   01S0147
         ST    @10,@AL00001+4                                   01S0147
         L     @10,@PC00001+8                                   01S0147
         ST    @10,@AL00001+8                                   01S0147
         LA    @10,CNTTAB                                       01S0147
         ST    @10,@AL00001+12                                  01S0147
         LA    @10,VMVEXITP                                     01S0147
         ST    @10,@AL00001+16                                  01S0147
         L     @15,@CV01123                                     01S0147
         LA    @01,@AL00001                                     01S0147
         BALR  @14,@15                                          01S0147
*    RETCODE = REG15;                  /*PICK UP RETURN CODE         */
         LR    RETCODE,REG15                                    01S0148
*  END;                                                         01S0149
*ELSE;                                 /*NO VERIFY REQUESTS          */
@RF00145 DS    0H                                               01S0151
*RETURN CODE(RETCODE);                 /*RETURN CODE                 */
         IC    @02,@OLDKEY                                      01S0151
         L     @13,4(,@13)                                      01S0151
         L     @00,@SIZDATD                                     01S0151
         LR    @01,@11                                          01S0151
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@06                                          01S0151
         L     @14,12(,@13)                                     01S0151
         LM    @00,@12,20(@13)                                  01S0151
         BR    @14                                              01S0151
*END IEFAB493                                                   01S0152
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (B493SPEC)                                        *
*/*%INCLUDE SYSLIB  (B493DATA)                                        *
*/*%INCLUDE SYSLIB  (IEFZB431)                                        *
*/*%INCLUDE SYSLIB  (IEFZB452)                                        *
*/*%INCLUDE SYSLIB  (IEFZB453)                                        *
*/*%INCLUDE SYSLIB  (IKJTCB  )                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*/*%INCLUDE SYSLIB  (VMVSETUP)                                        *
*/*%INCLUDE SYSLIB  (SETUSPEC)                                        *
*/*%INCLUDE SYSLIB  (ESTAECOD)                                        *
*/*%INCLUDE SYSLIB  (ESTAESPC)                                        *
*;                                                              01S0152
@DATA    DS    0H
@SM01134 MVC   VEXITCOR(0),VEXITLST
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@AL00001 DS    5A
IEFAB493 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
VMVEXITP DS    A
CNTTABP  DS    A
ASWACORE DS    CL40
CNTTAB   DS    CL16
         ORG   CNTTAB
UNLDCNT  DS    FL4
MOUNTCNT DS    FL4
VERFYCNT DS    FL4
DOMCNT   DS    FL4
         ORG   CNTTAB+16
ESTAESWS DS    BL1
         ORG   ESTAESWS
ISSUESTA DS    BL1
@NM00001 EQU   ESTAESWS+0
         ORG   ESTAESWS+1
         DS    CL7
VMVECORE DS    CL200
AB4EDPMS DS    CL500
@OLDKEY  DS    AL1
IEFAB493 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV01121 DC    V(IEFAB494)
@CV01122 DC    V(IEFAB495)
@CV01123 DC    V(IEFAB496)
@CA01124 DC    A(IEFAB4E2)
@CA01125 DC    A(IEFAB4ED)
         DS    0D
@CC00082 DC    C'IEFAB4E2'
@CC00078 DC    C'ASWA'
IEFAB493 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
IEFAB493 CSECT
VEXITLST ESTAE TERM=YES,RECORD=YES,MF=L
VEXITLNG DC A(*-VEXITLST)
@DATD    DSECT
VEXITCOR ESTAE TERM=YES,RECORD=YES,MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB493 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETCODE  EQU   @06
VMVREQBP EQU   @02
UCBPTR   EQU   @03
JSCBPTR  EQU   @07
ASWAPTR  EQU   @05
REG2     EQU   @02
REG3     EQU   @03
REG15    EQU   @15
         EXTRN IEFAB4E2
         EXTRN IEFAB4ED
LOC16PTR EQU   16
TCBLISTP EQU   0
TWOTCBSP EQU   0
TCBPTR   EQU   TWOTCBSP+4
ASWA     EQU   0
ASWAID   EQU   ASWA
ASWACSCT EQU   ASWA+4
ASWARTNP EQU   ASWA+12
ASWAPRMS EQU   ASWA+16
ASWASCBP EQU   ASWA+20
ASWAOLDP EQU   ASWA+24
ASWAFLGS EQU   ASWA+28
ASWADSWS EQU   ASWAFLGS
ASWAVMVF EQU   ASWADSWS
ASWAAUTO EQU   ASWA+32
ASWACHNP EQU   ASWA+36
VMVRQBLK EQU   0
VMVFNMAP EQU   VMVRQBLK
VMVOPTB1 EQU   VMVFNMAP
VMVUNLOD EQU   VMVOPTB1
VMVREWND EQU   VMVOPTB1
VMVMOUNT EQU   VMVOPTB1
VMVMTMSG EQU   VMVOPTB1
VMVDWTOR EQU   VMVOPTB1
VMVVRLBL EQU   VMVOPTB1
VMVVDEND EQU   VMVOPTB1
VMVOPTB2 EQU   VMVFNMAP+1
VMVOPTB3 EQU   VMVFNMAP+2
VMVDUPVL EQU   VMVOPTB3
VMVNREQP EQU   VMVRQBLK+4
VMVUCBP  EQU   VMVRQBLK+9
VMVMINFO EQU   VMVRQBLK+40
VMVACTON EQU   VMVMINFO
VMVUSER  EQU   VMVRQBLK+48
VMVEPRMS EQU   0
VEXFLAGS EQU   VMVEPRMS+196
VEXASID  EQU   VMVEPRMS+198
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBSTABB EQU   TCBSTAB+1
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00019 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
UCBBGN   EQU   0
VMVRQPTR EQU   0
ASID     EQU   0
CANCLECB EQU   0
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCBACT  EQU   JSCBSEC3+88
JSCBASWA EQU   JSCBSEC3+96
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00018 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
*                                      START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00018
UCBSKPFG EQU   @NM00018
UCBRIPND EQU   @NM00018
UCBRTIAC EQU   @NM00018
UCBRSV79 EQU   @NM00018
UCBRSV78 EQU   @NM00018
UCBRSV77 EQU   @NM00018
UCBOLTEP EQU   @NM00018
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00017 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBUFPT EQU   JSCBSEC3+92
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00015 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00014 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00019
UCBHALI  EQU   @NM00019
UCBRSV09 EQU   @NM00019
UCBRSV08 EQU   @NM00019
UCBRSV07 EQU   @NM00019
UCBRSV06 EQU   @NM00019
UCBRSV05 EQU   @NM00019
UCBRSV04 EQU   @NM00019
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00016 EQU   UCB
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00013 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00012 EQU   IEZJSCB
@NM00011 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00010 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00009 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00008 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00007 EQU   VEXFLAGS
VEXMVCAF EQU   VEXFLAGS
VEXFRR   EQU   VEXFLAGS
VEXMVCAP EQU   VMVEPRMS+192
VMVEAUTO EQU   VMVEPRMS
@NM00006 EQU   VMVUSER
VMVPROCD EQU   VMVUSER
VMVVUNTP EQU   VMVRQBLK+44
@NM00005 EQU   VMVMINFO+1
@NM00004 EQU   VMVACTON
VMVRTAIN EQU   VMVACTON
VMVDSMT  EQU   VMVACTON
VMVKEEP  EQU   VMVACTON
VMVRETCD EQU   VMVRQBLK+36
VMVJSNMP EQU   VMVRQBLK+32
VMVDSNMP EQU   VMVRQBLK+28
VMVJBNMP EQU   VMVRQBLK+24
VMVMVLSR EQU   VMVRQBLK+18
VMVUVLSR EQU   VMVRQBLK+12
@NM00003 EQU   VMVRQBLK+8
VMVOPTB4 EQU   VMVFNMAP+3
@NM00002 EQU   VMVOPTB3
VMVNUMSG EQU   VMVOPTB3
VMVCUVOL EQU   VMVOPTB3
VMVNSPVT EQU   VMVOPTB2
VMVNSLTP EQU   VMVOPTB2
VMVSLTAP EQU   VMVOPTB2
VMVNLTAP EQU   VMVOPTB2
VMVALTAP EQU   VMVOPTB2
VMVSTRG  EQU   VMVOPTB2
VMVPUBLC EQU   VMVOPTB2
VMVPRIVT EQU   VMVOPTB2
VMVUCB   EQU   VMVOPTB1
ASWRSV02 EQU   ASWAFLGS+1
ASWRSV01 EQU   ASWADSWS
ASWANOCH EQU   ASWADSWS
ASWADYUE EQU   ASWADSWS
ASWACOMF EQU   ASWADSWS
ASWADYNF EQU   ASWADSWS
NEXTTCBP EQU   TWOTCBSP
*                                      END UNREFERENCED COMPONENTS
@RF00107 EQU   @RC00095
@RC00124 EQU   @RC00080
@RF00137 EQU   @RC00124
@ENDDATA EQU   *
         END   IEFAB493,(C'PLS1244',0701,78089)
