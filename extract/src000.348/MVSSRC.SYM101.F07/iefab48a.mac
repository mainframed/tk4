         TITLE 'IEFAB48A - PROCESS OFFLINES/ALLOCATEDS                 *
                        '
IEFAB48A CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(24)                                          01S0001
         DC    C'IEFAB48A 78054  UZ16857 '                      01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(12),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
*RETCODE = ZERO;                       /*INITIALIZE RETURN CODE AREA */
         SLR   RETCODE,RETCODE                                  01S0085
*WPLPTR = ADDR(WTOL);                  /*SET POINTER TO WTO P-LIST   */
         LA    WPLPTR,WTOL                                      01S0086
*SIOTPTR = SIOT1P;                     /*POINT TO FIRST SIOT         */
         L     @10,@PC00001                                     01S0087
         L     @10,ALCWAPTR(,@10)                               01S0087
         L     SIOTPTR,SIOT1P(,@10)                             01S0087
*DO WHILE(SIOTPTR ^= ZERO &            /*SCAN ALL SIOTS              */
*    RETCODE = ZERO);                  /*EXIT IF ERROR OR JOB CANCLD */
         B     @DE00088                                         01S0088
@DL00088 DS    0H                                               01S0089
*  IF SCTDDNAM(1) ^= BLANK THEN        /*NON-BLANK DD NAME           */
         CLI   SCTDDNAM(SIOTPTR),C' '                           01S0089
         BE    @RF00089                                         01S0089
*    DO;                                                        01S0090
*      CCATCTR = ZERO;                 /*INIT CONCATENATION COUNTER  */
         SLR   @10,@10                                          01S0091
         ST    @10,CCATCTR                                      01S0091
*      SAVDDNM = SCTDDNAM;             /*SAV DD NAME                 */
         MVC   SAVDDNM(8),SCTDDNAM(SIOTPTR)                     01S0092
*    END;                                                       01S0093
*  ELSE                                /*BLANK DD NAME               */
*    CCATCTR = CCATCTR + ONE;          /*INCREMENT CONCATENATION CNT */
         B     @RC00089                                         01S0094
@RF00089 LA    @10,1                                            01S0094
         AL    @10,CCATCTR                                      01S0094
         ST    @10,CCATCTR                                      01S0094
*  VUPTR = SVOLUNAD;                   /*POINT TO FIRST VU ENTRY     */
@RC00089 MVC   VUPTR(4),SVOLUNAD(SIOTPTR)                       01S0095
*  DO VUCTR = 1 TO SVOLUNNO            /*SCAN ALL OF REQ'S VU ENTRIES*/
*      WHILE(SIOTALCD = NO &           /*EXIT IF SIOT ALLOCATED ...  */
*            RETCODE = ZERO);          /*... OR NON-ZERO RETURN CODE */
         LA    @10,1                                            01S0096
         B     @DE00096                                         01S0096
@DL00096 TM    SIOTALCD(SIOTPTR),B'00000010'                    01S0096
         BNZ   @DC00096                                         01S0096
         LTR   RETCODE,RETCODE                                  01S0096
         BNZ   @DC00096                                         01S0096
*    ALCUNSW = OFF;                    /*INIT WAIT OPTION INDICATOR  */
*    OFLUNSW = OFF;                    /*INIT OFFLINE OPTION INDIC   */
         NI    ALCUNSW,B'00111111'                              01S0098
*    LCLFLGS = LCLFLGS && LCLFLGS;     /*CLEAR LOCAL ROUTING CODES   */
         XC    LCLFLGS(1),LCLFLGS                               01S0099
*    RQLSTPTR = VOLALGTP;              /*POINT TO REQUEST LIST ENTRY */
         L     @10,VUPTR                                        01S0100
         L     RQLSTPTR,VOLALGTP(,@10)                          01S0100
*    IF VOLALOC = NO &           /*ENTRY NOT YET ALLOCATED     */
*       VDEVREQD = YES &         /*REQUIRES A DEVICE           */
*       VURCVYPR = NO &          /*NOT PROCESSED IN RECOVERY   */
*       (CVRSKFLG = NO ×         /*CONSIDERED BY ALGORITHM     */
*       (SIOTDMND = YES &        /*OR IS A DEMAND REQUEST  ... */
*        VUDMUNIQ = YES)) THEN/*                                01S0101
*                                        ENTRY NEEDS RCVY PROCESSING */
         TM    VDEVREQD(@10),B'00100000'                        01S0101
         BNO   @RF00101                                         01S0101
         TM    VOLALOC(@10),B'10000000'                         01S0101
         BNZ   @RF00101                                         01S0101
         TM    VURCVYPR(@10),B'00000001'                        01S0101
         BNZ   @RF00101                                         01S0101
         TM    CVRSKFLG(RQLSTPTR),B'10000000'                   01S0101
         BZ    @RT00101                                         01S0101
         TM    SIOTDMND(SIOTPTR),B'10000000'                    01S0101
         BNO   @RF00101                                         01S0101
         TM    VUDMUNIQ(@10),B'00000100'                        01S0101
         BNO   @RF00101                                         01S0101
@RT00101 DS    0H                                               01S0102
*      DO;                             /*PROCESS THE ENTRY           */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - BLDDDHDR                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - BUILD DD HEADER                               */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE WILL BUILD AND ISSUE A MESSAGE INFORMING THE      */
*/*   SYSTEM OPERATOR (AND APPROPRIATE DEVICE POOLS) OF THE NUMBER   */
*/*   OF UNITS CURRENTLY NEEDED BY THE REQUEST (I.E., DD) BEING      */
*/*   PROCESSED.                                                     */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     THE ROUTINE WILL COUNT THE NUMBER OF UNALLOCATED VOLUNIT     */
*/*     ENTRIES, WHICH REQUIRE A DEVICE, THAT HAVE NOT ALREADY BEEN  */
*/*     PROCESSED DURING RECOVERY. THIS IS THE NUMBER OF UNITS       */
*/*     CURRENTLY REQUIRED FOR THIS SIOT.                            */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     SVOLUNAD - PTR TO FIRST VOLUNIT ENTRY FOR SIOT               */
*/*     SAVDDNM - DDNAME TO USE IN MESSAGE                           */
*/*     CCATCTR - RELATIVE POSITION OF CONCATENATED DD               */
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - FUNCTION COMPLETED                                 */
*/*     OUTPUT -                                                     */
*/*       MESSAGE ISSUED                                             */
*/*       LCLFLGS - DEVICE POOL ROUTING CODES USED                   */
*/*     RETURN CODES - NONE                                          */
*/********************************************************************/
*TMPVUPTR = SVOLUNAD;                  /*POINT TO FIRST ENTRY FOR DD */
         L     TMPVUPTR,SVOLUNAD(,SIOTPTR)                      02S0103
*TOTUNITS = ZERO;                      /*INIT NO. UNITS DD NEEDS     */
         SLR   @10,@10                                          02S0104
         ST    @10,TOTUNITS                                     02S0104
*RFY VOLUNTAB BASED(TMPVUPTR);         /*RESET VU ENTRY BASE TO TEMP */
*DO TMPVUCTR = 1 TO SVOLUNNO;          /*GET NUMBER UNITS NOW NEEDED */
         LA    TMPVUCTR,1                                       02S0106
         B     @DE00106                                         02S0106
@DL00106 DS    0H                                               02S0107
*  IF VOLALOC = NO &           /*ENTRY NOT YET ALLOCATED     */ 02S0107
*     VDEVREQD = YES &         /*REQUIRES A DEVICE           */ 02S0107
*     VURCVYPR = NO &          /*NOT PROCESSED IN RECOVERY   */ 02S0107
*     (CVRSKFLG = NO ×         /*CONSIDERED BY ALGORITHM     */ 02S0107
*     (SIOTDMND = YES &        /*OR IS A DEMAND REQUEST  ... */ 02S0107
*      VUDMUNIQ = YES)) THEN/*                                  02S0107
*                                        ENTRY STILL TO BE PROCESSED */
         TM    VDEVREQD(TMPVUPTR),B'00100000'                   02S0107
         BNO   @RF00107                                         02S0107
         TM    VOLALOC(TMPVUPTR),B'10000000'                    02S0107
         BNZ   @RF00107                                         02S0107
         TM    VURCVYPR(TMPVUPTR),B'00000001'                   02S0107
         BNZ   @RF00107                                         02S0107
         TM    CVRSKFLG(RQLSTPTR),B'10000000'                   02S0107
         BZ    @RT00107                                         02S0107
         TM    SIOTDMND(SIOTPTR),B'10000000'                    02S0107
         BNO   @RF00107                                         02S0107
         TM    VUDMUNIQ(TMPVUPTR),B'00000100'                   02S0107
         BNO   @RF00107                                         02S0107
@RT00107 DS    0H                                               02S0108
*    DO;                                                        02S0108
*      TOTUNITS = TOTUNITS + ONE;      /*INCREMENT NUMBER UNITS REQ'D*/
         LA    @10,1                                            02S0109
         AL    @10,TOTUNITS                                     02S0109
         ST    @10,TOTUNITS                                     02S0109
*      IF VOLDAREQ = YES THEN          /*D.A. REQUEST                */
         TM    VOLDAREQ(TMPVUPTR),B'00100000'                   02S0110
         BNO   @RF00110                                         02S0110
*        LCLFLGD = ON;                 /*MUST ROUTE TO D.A. POOL     */
         OI    LCLFLGD,B'00010000'                              02S0111
*      ELSE                            /*NOT D.A. REQUEST            */
*        IF VOLTAREQ = YES THEN        /*TAPE REQUEST                */
         B     @RC00110                                         02S0112
@RF00110 TM    VOLTAREQ(TMPVUPTR),B'10000000'                   02S0112
         BNO   @RF00112                                         02S0112
*          LCLFLGC = ON;               /*MUST ROUTE TO TAPE POOL     */
         OI    LCLFLGC,B'00100000'                              02S0113
*        ELSE                          /*NOT TAPE OR D.A.            */
*          IF VOLURREQ = YES THEN      /*UNIT RECORD REQUEST         */
         B     @RC00112                                         02S0114
@RF00112 TM    VOLURREQ(TMPVUPTR),B'00001000'                   02S0114
         BNO   @RF00114                                         02S0114
*            LCLFLGG = ON;             /*ROUTE TO UNIT RECORD POOL   */
         OI    LCLFLGG,B'00000010'                              02S0115
*    END;                                                       02S0116
*  ELSE;                               /*NO PROCESSING REQUIRED      */
@RF00107 DS    0H                                               02S0118
*  TMPVUPTR = TMPVUPTR + LENGTH(VOLUNTAB); /*POINT TO NEXT VU ENTRY  */
@RC00107 AH    TMPVUPTR,@CH01970                                02S0118
*END;                                                           02S0119
         AH    TMPVUCTR,@CH00082                                02S0119
@DE00106 CH    TMPVUCTR,SVOLUNNO(,SIOTPTR)                      02S0119
         BNH   @DL00106                                         02S0119
*RFY VOLUNTAB BASED(VUPTR);            /*RESET BASE TO NORMAL        */
*WPLTXT = '';                          /*INIT TEXT AREA OF WTO P-LIST*/
         MVI   WPLTXT(WPLPTR),C' '                              02S0121
         MVC   WPLTXT+1(125,WPLPTR),WPLTXT(WPLPTR)              02S0121
*TXTLNTH = OFLHMSGL;                   /*SET LENGTH OF TEXT          */
         L     @10,@CA00133                                     02S0122
         LH    @07,OFLHMSGL-OFLHDR(,@10)                        02S0122
         ST    @07,TXTLNTH                                      02S0122
*WPLTXT(1:TXTLNTH) = OFLHMTXT(1:TXTLNTH); /*MOVE TEXT TO P-LIST      */
         BCTR  @07,0                                            02S0123
         EX    @07,@SM01977                                     02S0123
*MSGJNAME = ALCJOBN;                   /*INSERT JOB NAME             */
         L     @07,@PC00001                                     02S0124
         L     @07,ALCWAPTR(,@07)                               02S0124
         L     @07,TIOTHDRP(,@07)                               02S0124
         MVC   MSGJNAME+4(8,WPLPTR),ALCJOBN(@07)                02S0124
*OFLALDDN = SAVDDNM;                   /*MOVE IN DD NAME             */
         LA    @07,WPLTXT(,WPLPTR)                              02S0125
         SLR   @04,@04                                          02S0125
         IC    @04,DDNOFFS-OFLHDR(,@10)                         02S0125
         ALR   @07,@04                                          02S0125
         MVC   OFLALDDN(8,@07),SAVDDNM                          02S0125
*IF CCATCTR ^= ZERO THEN               /*DD IS CONCAT IN GROUP MEMBER*/
         ICM   @10,15,CCATCTR                                   02S0126
         BZ    @RF00126                                         02S0126
*  DO;                                                          02S0127
*    CALL CONVERT(CCATCTR,MSGRPOS);    /*CONVERT RELATIVE POSITION   */
         LA    @10,CCATCTR                                      02S0128
         ST    @10,@AL00001                                     02S0128
         LA    @10,MSGRPOS                                      02S0128
         ST    @10,@AL00001+4                                   02S0128
         LA    @01,@AL00001                                     02S0128
         BAL   @14,CONVERT                                      02S0128
*    OFLARPOS = MSGRPOS(2:4);          /*MOVE EBCDIC VALUE TO BUFFER */
         LA    @10,WPLTXT(,WPLPTR)                              02S0129
         L     @07,@CA00133                                     02S0129
         SLR   @04,@04                                          02S0129
         IC    @04,DDNOFFS-OFLHDR(,@07)                         02S0129
         ALR   @10,@04                                          02S0129
         MVC   OFLARPOS(3,@10),MSGRPOS+1                        02S0129
*  END;                                                         02S0130
*ELSE                                                           02S0131
*  OFLALCCN = '';                      /*BLANK OUT RELATIVE POS'N
*                                        FIELD                       */
         B     @RC00126                                         02S0131
@RF00126 LA    @10,WPLTXT(,WPLPTR)                              02S0131
         L     @07,@CA00133                                     02S0131
         SLR   @04,@04                                          02S0131
         IC    @04,DDNOFFS-OFLHDR(,@07)                         02S0131
         ALR   @10,@04                                          02S0131
         MVI   OFLALCCN(@10),C' '                               02S0131
         MVC   OFLALCCN+1(3,@10),OFLALCCN(@10)                  02S0131
*CALL CONVERT(TOTUNITS,OFLALUNO);      /*CONVERT NO. UNITS NEEDED    */
@RC00126 LA    @10,TOTUNITS                                     02S0132
         ST    @10,@AL00001                                     02S0132
         LA    @10,WPLTXT(,WPLPTR)                              02S0132
         L     @07,@CA00133                                     02S0132
         SLR   @04,@04                                          02S0132
         IC    @04,UNITSOFS-OFLHDR(,@07)                        02S0132
         ALR   @10,@04                                          02S0132
         ST    @10,@AL00001+4                                   02S0132
         LA    @01,@AL00001                                     02S0132
         BAL   @14,CONVERT                                      02S0132
*CALL IEFAB4F3                         /*COMPRESS TEXT               */
*    (ADDR(WPLTXT),TXTLNTH,MSGLNTH);                            02S0133
         LA    @10,WPLTXT(,WPLPTR)                              02S0133
         ST    @10,@TF00001                                     02S0133
         LA    @10,@TF00001                                     02S0133
         ST    @10,@AL00001                                     02S0133
         LA    @10,TXTLNTH                                      02S0133
         ST    @10,@AL00001+4                                   02S0133
         LA    @10,MSGLNTH                                      02S0133
         ST    @10,@AL00001+8                                   02S0133
         L     @15,@CV00142                                     02S0133
         LA    @01,@AL00001                                     02S0133
         BALR  @14,@15                                          02S0133
*WPLLGH = MSGLNTH + FOUR;              /*SET P-LIST LENGTH           */
         L     @10,MSGLNTH                                      02S0134
         LA    @07,4                                            02S0134
         ALR   @07,@10                                          02S0134
         STH   @07,WPLLGH(,WPLPTR)                              02S0134
*WPLMCSF = WPLMCSF && WPLMCSF;         /*CLEAR MCS FLAGS             */
         XC    WPLMCSF(2,WPLPTR),WPLMCSF(WPLPTR)                02S0135
*WPLMCSFA = ON;                        /*SET RTE/DESC CODES PRESENT  */
         OI    WPLMCSFA(WPLPTR),B'10000000'                     02S0136
*WPLFLGS = WPLFLGS && WPLFLGS;         /*INIT RTE/DESC CODES AREA    */
         LA    @07,WPLTXT(,WPLPTR)                              02S0137
         ALR   @07,@10                                          02S0137
         XC    WPLFLGS(8,@07),WPLFLGS(@07)                      02S0137
*WPLDESCF = ON;                        /*SET 'JOB STATUS' DESC. CODES*/
         OI    WPLDESCF(@07),B'00000100'                        02S0138
*WPLROUT1 = LCLFLGS;                   /*SET DEVICE POOL RTE CODES   */
         MVC   WPLROUT1(1,@07),LCLFLGS                          02S0139
*WPLROUTB = ON;                        /*ROUTE TO MASTER CONSOLE TOO */
         OI    WPLROUTB(@07),B'01000000'                        02S0140
*RFY (REG0) RSTD;                                               02S0141
*REG0 = ZERO;                          /*CLEAR REG FOR WTO           */
         SLR   REG0,REG0                                        02S0142
*GEN(WTO MF=(E,WTOL));                 /*ISSUE MESSAGE               */
         WTO MF=(E,WTOL)
*RFY (REG0) UNRSTD;                                             02S0144
*        GPLSTPTR = CVRGRPPT;          /*GET PTR TO FIRST GROUP ENTRY*/
         L     GPLSTPTR,CVRGRPPT(,RQLSTPTR)                     01S0145
*        IF SIOTDMND = NO &            /*NON-DEMAND REQUEST          */
*           SIOTJES3 ^= ON &           /*NO WAITING IF JES      01S0146
*                                        REQUEST             @ZA03855*/
*           UWAITSW = YES THEN         /*ALLOC'N IS ALLOWED TO WAIT  */
         TM    SIOTDMND(SIOTPTR),B'10000000'                    01S0146
         BNZ   @RF00146                                         01S0146
         TM    SIOTJES3(SIOTPTR),B'00100000'                    01S0146
         BO    @RF00146                                         01S0146
         L     @10,@PC00001                                     01S0146
         L     @10,ALCWAPTR(,@10)                               01S0146
         L     @10,FMAPPTR(,@10)                                01S0146
         TM    UWAITSW(@10),B'00100000'                         01S0146
         BNO   @RF00146                                         01S0146
*          DO GRPCTR = 1 TO CVRNGRP    /*SEE IF ALLOC'D UNITS AVAIL. */
*              WHILE(ALCUNSW = OFF);                            01S0147
         LA    @10,1                                            01S0147
         B     @DE00147                                         01S0147
@DL00147 TM    ALCUNSW,B'10000000'                              01S0147
         BNZ   @DC00147                                         01S0147
*            IF CVRGSKP = NO &                                  01S0148
*               CVRGALL => ZERO &                               01S0148
*               CVRGCPTR -> GRPALLCT > ZERO THEN/*              01S0148
*                                        CAN COVER & HAS ALOCD UNITS */
         TM    CVRGSKP(GPLSTPTR),B'10000000'                    01S0148
         BNZ   @RF00148                                         01S0148
         SLR   @10,@10                                          01S0148
         CH    @10,CVRGALL(,GPLSTPTR)                           01S0148
         BH    @RF00148                                         01S0148
         L     @07,CVRGCPTR(,GPLSTPTR)                          01S0148
         CH    @10,GRPALLCT(,@07)                               01S0148
         BNL   @RF00148                                         01S0148
*              ALCUNSW = ON;           /*INDIC REQ CAN WAIT FOR UNITS*/
         OI    ALCUNSW,B'10000000'                              01S0149
*            ELSE;                                              01S0150
@RF00148 DS    0H                                               01S0151
*            GPLSTPTR = GPLSTPTR + LENGTH(CVRGPLST); /*TO NEXT ENTRY */
         AH    GPLSTPTR,@CH00050                                01S0151
*          END;                                                 01S0152
         LA    @10,1                                            01S0152
         AL    @10,GRPCTR                                       01S0152
@DE00147 ST    @10,GRPCTR                                       01S0152
         CH    @10,CVRNGRP(,RQLSTPTR)                           01S0152
         BNH   @DL00147                                         01S0152
@DC00147 DS    0H                                               01S0153
*        IF OFFDEVSW = YES THEN        /*ALOC'N CAN CONSIDER OFFLINES*/
@RF00146 L     @10,@PC00001                                     01S0153
         L     @10,ALCWAPTR(,@10)                               01S0153
         L     @10,FMAPPTR(,@10)                                01S0153
         TM    OFFDEVSW(@10),B'00000100'                        01S0153
         BNO   @RF00153                                         01S0153
*          DO;                         /*SEE IF OFFLINES AVAILABLE
*                                        AND BLD/ISSUE MESSAGE(S)    */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME = BLDOLMSG                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - BUILD OFFLINE MESSAGE                         */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE CONTROLS THE PROCESSING NECESSARY TO BUILD AND    */
*/*   ISSUE TWO SETS OF OFFLINE MESSAGES. THE OPERATOR IS INFORMED,  */
*/*   FIRST, OF ALL ELIGIBLE DEVICES WHICH HAVE BEEN VARIED OFFLINE  */
*/*   AND THEN OF ALL ELIGIBLE DEVICES WHICH ARE CONSIDERED OFFLINE  */
*/*   BECAUSE THERE IS NO PATH AVAILABLE TO THE DEVICE (HIERARCHI-   */
*/*   CALLY OFFLINE).                                                */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     IF THE VOLUNIT ENTRY BEING PROCESSED HAS BEEN CONSIDERED     */
*/*     BY THE ALGORITHM THEN ALL UCB'S IN EACH ELIGIBLE GROUP ARE   */
*/*     CHECKED TO SEE IF THE UNIT CAN BE REQUESTED. A GROUP IS      */
*/*     ELIGIBLE IF THE GROUP LIST ENTRY IS NOT MARKED 'SKIP', THE   */
*/*     GROUP CONTAINS A POSSIBLE SOLUTION FOR THIS VOLUNIT ENTRY    */
*/*     AND CONTAINS OFFLINE UNITS. A UNIT WILL NOT BE REQUESTED,    */
*/*     HOWEVER, IF IT IS REQUIRED BY A DEMAND REQUEST. FOR A@ZA03855*/
*/*     JES3 REQUEST, THE UNIT PLACED IN THE LIST MUST BE    @ZA03855*/
*/*     ONE THAT JES3 SELECTED.                              @G18MP21*/
*/*     IF THE VOLUNIT ENTRY REPRESENTS A DEMAND REQUEST AND THE     */
*/*     ENTRY INDICATES THAT THE SPECIFIED UNIT IS OFFLINE THEN      */
*/*     THE UCB FOR THE UNIT IS CHECKED TO SEE IF IT CAN BE          */
*/*     REQUESTED.                                                   */
*/*     THE ROUTINE BEGINS ITS PROCESSING CHECKING FOR OPERATOR      */
*/*     VARIED UNITS AND REPEATS THE ENTIRE PROCESS FOR UNITS WHICH  */
*/*     ARE HIERARCHICALLY OFFLINE.                                  */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - BUILD/ISSUE OFFLINE MESSAGES                         */
*/*   INPUT -                                                        */
*/*     EDTABPTR - PTR TO ELIGIBLE DEVICES TABLE (EDT)               */
*/*     IOSLUTP - PTR TO IOS LOOK-UP-TABLE                           */
*/*     CVRGRPPT - PTR TO FIRST GROUP LIST ENTRY FOR VU ENTRY        */
*/*     SIOTPTR - PTR TO SIOT BEING PROCESSED                        */
*/*     VUUCBP - PTR TO UCB SELECTED BY JES3                 @ZA03855*/
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - FUNCTION COMPLETED                                 */
*/*     OUTPUT -                                                     */
*/*       MESSAGES ISSUED                                            */
*/*       OFLUNSW = ON TO 'DEVICE NAME' OPTION REQUIRED IN REPLY MSG.*/
*/*     RETURN CODES - NONE                                          */
*/********************************************************************/
*RFY EDTHDR BASED(EDTABPTR);           /*ADDR EDT THRU PTR IN ALCWA  */
*MSGOFFS = OFLOPT;                     /*SET OFFSET TO OFFLINE MSG   */
         LA    MSGOFFS,1                                        02S0156
*MAXDEVS = OFLMMAX;                    /*SET MAX PER LINE            */
         MVI   MAXDEVS,X'0C'                                    02S0157
*OLFINISW = OFF;                       /*INIT LOOP CONTROL SWITCH    */
         NI    OLFINISW,B'11101111'                             02S0158
*DO WHILE(OLFINISW = OFF);             /*REPEAT PROCESS FOR BOTH SETS
*                                        OF OFFLINE MESSAGES         */
         B     @DE00159                                         02S0159
@DL00159 DS    0H                                               02S0160
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - OFLMINIT                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - OFFLINE MESSAGE INITIALIZATION                */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE INITIALIZES THE WRITE-TO-OPERATOR PARAMETER LIST,  *
*/*   THE POINTER TO THE DEVICE LIST AND THE LENGTH OF THE INITIAL   */
*/*   TEXT FOR THE BUILDING OF OFFLINE MESSAGES.                     */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT - NONE                                                   */
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - FUNCTION COMPLETED                                 */
*/*     OUTPUT -                                                     */
*/*       WPLTXT - INITIAL OFFLINE MSG TEXT                          */
*/*       TXTLNTH - LENGTH OF INITIAL TEXT                           */
*/*       DEVLISTP - PTR TO BEGINNING OF DEVICE LIST                 */
*/*     RETURN CODES - NONE                                          */
*/********************************************************************/
*WPLTXT = '';                          /*CLEAR TEXT AREA OF P-LIST   */
         MVI   WPLTXT(WPLPTR),C' '                              03S0160
         MVC   WPLTXT+1(125,WPLPTR),WPLTXT(WPLPTR)              03S0160
*TXTLNTH = OLIDMSGL;                   /*SET LENGTH OF ID TEXT       */
         L     @10,@CA00136                                     03S0161
         LH    @08,OLIDMSGL-OFLMSGID(,@10)                      03S0161
         ST    @08,TXTLNTH                                      03S0161
*WPLTXT(1:TXTLNTH) =                   /*MOVE ID TEXT TO P-LIST      */
*    OLIDMTXT(1:TXTLNTH);                                       03S0162
         LR    @02,@08                                          03S0162
         BCTR  @02,0                                            03S0162
         EX    @02,@SM01983                                     03S0162
*MSGJNAME = ALCJOBN;                   /*MOVE IN JOB NAME            */
         L     @10,@PC00001                                     03S0163
         L     @10,ALCWAPTR(,@10)                               03S0163
         L     @10,TIOTHDRP(,@10)                               03S0163
         MVC   MSGJNAME+4(8,WPLPTR),ALCJOBN(@10)                03S0163
*DEVLISTP = ADDR(OFLDVLST);            /*POINT TO BEGINNING OF DEVICE
*                                        LIST                        */
         LA    DEVLISTP,WPLTXT(,WPLPTR)                         03S0164
         ALR   DEVLISTP,@08                                     03S0164
*  GPLSTPTR = CVRGRPPT;                /*POINT TO FIRST GROUP IN LIST*/
         L     GPLSTPTR,CVRGRPPT(,RQLSTPTR)                     02S0165
*  IF CVRSKFLG = NO THEN               /*REQ CONSIDERED BY ALGORITHM */
         TM    CVRSKFLG(RQLSTPTR),B'10000000'                   02S0166
         BNZ   @RF00166                                         02S0166
*    DO GRPCTR = 1 TO CVRNGRP;         /*SCAN ALL GROUPS FOR ELIGIBLE
*                                        OFFLINE UNITS               */
         LA    @10,1                                            02S0167
         B     @DE00167                                         02S0167
@DL00167 DS    0H                                               02S0168
*      GRPPTR = EDTGRPSP + LENGTH(GRPHDR) /*PT TO GROUP ENT IN EDT   */
*          + (CVRGRPID - 1) * GRPENTLN;                         02S0168
         L     @08,@PC00001                                     02S0168
         L     @08,ALCWAPTR(,@08)                               02S0168
         L     @08,EDTABPTR(,@08)                               02S0168
         L     @08,EDTGRPSP(,@08)                               02S0168
         LA    GRPPTR,8                                         02S0168
         ALR   GRPPTR,@08                                       02S0168
         LH    @01,CVRGRPID(,GPLSTPTR)                          02S0168
         BCTR  @01,0                                            02S0168
         M     @00,GRPENTLN(,@08)                               02S0168
         ALR   GRPPTR,@01                                       02S0168
*      IF CVRGSKP = NO &                                        02S0169
*         CVRGALL => ZERO &                                     02S0169
*         CVRGCPTR -> GRPOFFLN > ZERO THEN/*                    02S0169
*                                        ELIGIBLE GROUP HAS OFFLINES */
         TM    CVRGSKP(GPLSTPTR),B'10000000'                    02S0169
         BNZ   @RF00169                                         02S0169
         SLR   @08,@08                                          02S0169
         CH    @08,CVRGALL(,GPLSTPTR)                           02S0169
         BH    @RF00169                                         02S0169
         L     @02,CVRGCPTR(,GPLSTPTR)                          02S0169
         CH    @08,GRPOFFLN(,@02)                               02S0169
         BNL   @RF00169                                         02S0169
*        DO DEVCTR = 1 TO GRPUCBNO;    /*SCAN ALL UCB'S IN THIS GROUP*/
         LA    @08,1                                            02S0170
         B     @DE00170                                         02S0170
@DL00170 DS    0H                                               02S0171
*          UCBPTR =                    /*GET PTR TO UCB FROM L-U-T   */
*              IOSLUT(EUCBTPOS(DEVCTR) + ONE);                  02S0171
         ALR   @08,@08                                          02S0171
         L     @01,GRPUCBP(,GRPPTR)                             02S0171
         BCTR  @01,0                                            02S0171
         BCTR  @01,0                                            02S0171
         LH    @08,EUCBTPOS(@08,@01)                            02S0171
         ALR   @08,@08                                          02S0171
         L     @15,@PC00001                                     02S0171
         L     @01,ALCWAPTR(,@15)                               02S0171
         L     @01,IOSLUTP(,@01)                                02S0171
         ALR   @01,@08                                          02S0171
         SLR   UCBPTR,UCBPTR                                    02S0171
         ICM   UCBPTR,3,IOSLUT(@01)                             02S0171
*          IF SU18BIT=ON &             /*SU 18 IN SYSTEM?    @G18MP21*/
*             SIOTJES3=ON&             /*AND JES CHOSE UNITS @G18MP21*/
*             VDEVREQD=ON THEN         /*A DEVICE REQUIRED   @G18MP21*/
         L     @08,CVTPTR                                       02S0172
         L     @08,CVTIHASU(,@08)                               02S0172
         TM    SU18BIT(@08),B'00100000'                         02S0172
         BNO   @RF00172                                         02S0172
         TM    SIOTJES3(SIOTPTR),B'00100000'                    02S0172
         BNO   @RF00172                                         02S0172
         L     @08,VUPTR                                        02S0172
         TM    VDEVREQD(@08),B'00100000'                        02S0172
         BNO   @RF00172                                         02S0172
*            DO I = 1 TO VUPOOL#       /*SCAN UCBS           @G18MP21*/
*               WHILE VUCBS(I)^=UCBPTR;/*WHILE NOT MATCH     @G18MP21*/
         LA    @08,1                                            02S0173
         B     @DE00173                                         02S0173
@DL00173 LR    @15,@08                                          02S0173
         SLA   @15,2                                            02S0173
         L     @01,VUPTR                                        02S0173
         L     @01,VUUCBP(,@01)                                 02S0173
         C     UCBPTR,VUCBS-4(@15,@01)                          02S0173
         BE    @DC00173                                         02S0173
*            END;                      /*END SCAN            @G18MP21*/
         AH    @08,@CH00082                                     02S0174
@DE00173 ST    @08,I                                            02S0174
         L     @01,VUPTR                                        02S0174
         L     @01,VUUCBP(,@01)                                 02S0174
         C     @08,VUPOOL#(,@01)                                02S0174
         BNH   @DL00173                                         02S0174
@DC00173 DS    0H                                               02S0175
*          IF SIOTJES3 ^= ON ×         /*NOT A JES3 REQUEST  @ZA03855*/
*             UCBPTR = VUUCBP ×        /*OR, UCB SELECTED BY JES3
*                                                            @G18MP21*/
*              (SU18BIT = ON &         /*OR SU18 AND         @ZA25022*/
*               VUCBS(I)=UCBPTR) THEN  /* UCBPOOL MATCH FOUND@ZA25022*/
@RF00172 TM    SIOTJES3(SIOTPTR),B'00100000'                    02S0175
         BNO   @RT00175                                         02S0175
         L     @08,VUPTR                                        02S0175
         L     @08,VUUCBP(,@08)                                 02S0175
         CR    UCBPTR,@08                                       02S0175
         BE    @RT00175                                         02S0175
         L     @01,CVTPTR                                       02S0175
         L     @01,CVTIHASU(,@01)                               02S0175
         TM    SU18BIT(@01),B'00100000'                         02S0175
         BNO   @RF00175                                         02S0175
         L     @15,I                                            02S0175
         SLA   @15,2                                            02S0175
         C     UCBPTR,VUCBS-4(@15,@08)                          02S0175
         BNE   @RF00175                                         02S0175
@RT00175 DS    0H                                               02S0176
*            DO;                        /*                   @ZA03855*/
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - DMNDNEED                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - TEST IF UCB IS DEMANDED                       */
*/*                                                                  */
*/* FUNCTION - THIS ROUTINE DETERMINES IF THE INPUT UCB IS           */
*/*            NEEDED BY A DEMAND REQUEST (E.G. UNIT=190).           */
*/*                                                                  */
*/*   OPERATION - THE SIOT CHAIN IS SCANNED TO LOCATE EACH           */
*/*               DEMAND REQUEST.                                    */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*      SIOT1P - PTR TO THE FIRST SIOT IN THE CHAIN                 */
*/*        SIOTDMND - 1 FOR DEMAND REQUESTS                          */
*/*        SIOUCBAD - FOR DEMAND REQUEST, ADDRESS OF THE             */
*/*                   DEMANDED UCB                                   */
*/*        SIOTNPTR - PTR TO THE NEXT SIOT                           */
*/*      UCBPTR - PTR TO UCB                                         */
*/*                                                                  */
*/* EXIT - NORMAL - INLINE SUBROUTINE                                */
*/*                                                                  */
*/*   CONDITIONS - FUNCTION COMPLETED                                */
*/*                                                                  */
*/*   OUTPUT -                                                       */
*/*       USEUCB - 1 = NO DEMAND REQ NEEDS THIS UCB                  */
*/*              - 0 = A DEMAND REQ NEEDS THIS UCB                   */
*/*                                                                  */
*/********************************************************************/
*USEUCB = ON;                          /*ASSUME UCB NOT DEMANDED     */
         OI    USEUCB,B'00001000'                               03S0177
*RFY INDMSIOT BASED(SPTR);                                      03S0178
*SPTR = SIOT1P;                        /*POINT TO THE FIRST SIOT     */
         L     @15,@PC00001                                     03S0179
         L     @01,ALCWAPTR(,@15)                               03S0179
         L     SPTR,SIOT1P(,@01)                                03S0179
*DO WHILE (SPTR ^= ZERO                /*SCAN ALL SIOTS ..           */
*    & USEUCB = ON);                   /*..UNTIL UCB FOUND DEMANDED  */
         B     @DE00180                                         03S0180
@DL00180 DS    0H                                               03S0181
*  IF SIOTDMND = ON                    /*DEMAND REQ FOR THIS UCB ?   */
*      & SIOUCBAD = UCBPTR THEN                                 03S0181
         TM    SIOTDMND(SPTR),B'10000000'                       03S0181
         BNO   @RF00181                                         03S0181
         SLR   @15,@15                                          03S0181
         ICM   @15,7,SIOUCBAD(SPTR)                             03S0181
         CR    UCBPTR,@15                                       03S0181
         BNE   @RF00181                                         03S0181
*    DO;                               /*YES,INDICATE UCB IS DEMANDED*/
*      USEUCB = OFF;                                            03S0183
         NI    USEUCB,B'11110111'                               03S0183
*    END;                                                       03S0184
*  ELSE;                               /*NOT DEMAND REQ FOR THIS UCB */
@RF00181 DS    0H                                               03S0186
*  SPTR = SIOTNPTR;                    /*POINT TO THE NEXT SIOT      */
         L     SPTR,SIOTNPTR(,SPTR)                             03S0186
*END;                                                           03S0187
@DE00180 LTR   SPTR,SPTR                                        03S0187
         BZ    @DC00180                                         03S0187
         TM    USEUCB,B'00001000'                               03S0187
         BO    @DL00180                                         03S0187
@DC00180 DS    0H                                               03S0188
*RFY INDMSIOT BASED(SIOTPTR);                                   03S0188
*              IF USEUCB = YES THEN        /*UNIT NOT NEEDED         */
         TM    USEUCB,B'00001000'                               02S0189
         BNO   @RF00189                                         02S0189
*                DO;                                            02S0190
*                  CALL SETOLUCB;          /*PUT ELIG UCB IN DEV.LIST*/
         BAL   @14,SETOLUCB                                     02S0191
*                  IF DEVLISTP ^< ADDR(ENDDVLST) THEN /*LIST IS FULL */
         LA    @08,WPLTXT(,WPLPTR)                              02S0192
         AL    @08,TXTLNTH                                      02S0192
         SLR   @02,@02                                          02S0192
         IC    @02,MAXDEVS                                      02S0192
         SLA   @02,2                                            02S0192
         ALR   @08,@02                                          02S0192
         CR    DEVLISTP,@08                                     02S0192
         BL    @RF00192                                         02S0192
*                    CALL WRTOLMSG;      /*COMPLETE AND ISSUE MESSAGE*/
         BAL   @14,WRTOLMSG                                     02S0193
*                END;                                           02S0194
*              END;                      /*                  @ZA03855*/
*          ELSE;                       /*UCB NOT SELECTED BY JES3
*                                                            @ZA03855*/
@RF00175 DS    0H                                               02S0197
*        END;                                                   02S0197
@RC00175 LA    @08,1                                            02S0197
         AL    @08,DEVCTR                                       02S0197
@DE00170 ST    @08,DEVCTR                                       02S0197
         C     @08,GRPUCBNO(,GRPPTR)                            02S0197
         BNH   @DL00170                                         02S0197
*      ELSE;                           /*GROUP NOT CANDIDATE FOR REQ */
@RF00169 DS    0H                                               02S0199
*      GPLSTPTR = GPLSTPTR + LENGTH(CVRGPLST); /*POINT TO NEXT GROUP */
         AH    GPLSTPTR,@CH00050                                02S0199
*    END;                                                       02S0200
         LA    @10,1                                            02S0200
         AL    @10,GRPCTR                                       02S0200
@DE00167 ST    @10,GRPCTR                                       02S0200
         CH    @10,CVRNGRP(,RQLSTPTR)                           02S0200
         BNH   @DL00167                                         02S0200
*  ELSE                                /*REQUEST SKIPPED BY ALGORITHM*/
*    IF SIOTDMND = YES &               /*DEMAND REQUEST              */
*        VUDMNDOF = YES THEN           /*REQUIRED UNIT IS OFFLINE    */
         B     @RC00166                                         02S0201
@RF00166 TM    SIOTDMND(SIOTPTR),B'10000000'                    02S0201
         BNO   @RF00201                                         02S0201
         L     @10,VUPTR                                        02S0201
         TM    VUDMNDOF(@10),B'00100000'                        02S0201
         BNO   @RF00201                                         02S0201
*      DO;                                                      02S0202
*        UCBPTR = SIOUCBAD;            /*SET PTR TO UCB FROM SIOT    */
         SLR   UCBPTR,UCBPTR                                    02S0203
         ICM   UCBPTR,7,SIOUCBAD(SIOTPTR)                       02S0203
*        CALL SETOLUCB;                /*PUT ELIG UCB IN DEVICE LIST */
         BAL   @14,SETOLUCB                                     02S0204
*      END;                                                     02S0205
*    ELSE;                                                      02S0206
@RF00201 DS    0H                                               02S0207
*  IF DEVLISTP > ADDR(OFLDVLST) THEN   /*PARTIAL LIST REMAINS        */
@RC00166 LA    @10,WPLTXT(,WPLPTR)                              02S0207
         AL    @10,TXTLNTH                                      02S0207
         CR    DEVLISTP,@10                                     02S0207
         BNH   @RF00207                                         02S0207
*    CALL WRTOLMSG;                    /*WRITE PARTIAL LINE          */
         BAL   @14,WRTOLMSG                                     02S0208
*  IF MSGOFFS = OFLOPT THEN            /*MSG CODE IS 'VARIED OFFLINE'*/
@RF00207 CH    MSGOFFS,@CH00082                                 02S0209
         BNE   @RF00209                                         02S0209
*    DO;                                                        02S0210
*      MSGOFFS = HOFLOPT;              /*SWITCH CODES                */
         LA    MSGOFFS,2                                        02S0211
*      MAXDEVS = HOFLMMAX;             /*SET MAX NAMES PER LINE      */
         MVI   MAXDEVS,X'0A'                                    02S0212
*    END;                                                       02S0213
*  ELSE                                                         02S0214
*    OLFINISW = ON;                    /*SET EXIT SWITCH             */
         B     @RC00209                                         02S0214
@RF00209 OI    OLFINISW,B'00010000'                             02S0214
*END;                                                           02S0215
@RC00209 DS    0H                                               02S0215
@DE00159 TM    OLFINISW,B'00010000'                             02S0215
         BZ    @DL00159                                         02S0215
*          END;                                                 01S0216
*        IF ALCUNSW = YES ×            /*NEED REPLY OPT'NS MSG       */
*            OFLUNSW = YES THEN                                 01S0217
@RF00153 TM    ALCUNSW,B'11000000'                              01S0217
         BZ    @RF00217                                         01S0217
*          DO;                         /*SET UP FOR REPLY OPT PRC'NG */
*            RPLYVUP = VUPTR;          /*SET VU PTR IN REPLY DATA    */
         L     @10,@PC00001+4                                   01S0219
         MVC   RPLYVUP(4,@10),VUPTR                             01S0219
*            RPLYOPT = ALLOPTS;        /*ASSUME FULL OPTIONS MSG     */
         MVI   RPLYOPT(@10),X'03'                               01S0220
*            IF ALCUNSW = NO THEN      /*DON'T NEED ALLOCATED UNITS  */
         TM    ALCUNSW,B'10000000'                              01S0221
         BNZ   @RF00221                                         01S0221
*              RPLYOPT = DEVNCNCL;     /*RESET CODE TO DEV NAME OPT  */
         MVI   RPLYOPT(@10),X'02'                               01S0222
*            ELSE                      /*NEED ALLOCATED UNITS        */
*              IF OFLUNSW = NO THEN    /*DON'T NEED OFFLINE UNITS    */
         B     @RC00221                                         01S0223
@RF00221 TM    OFLUNSW,B'01000000'                              01S0223
         BNZ   @RF00223                                         01S0223
*                RPLYOPT = WAITCNCL;   /*RESET CODE TO WAIT OPTION   */
         L     @10,@PC00001+4                                   01S0224
         MVI   RPLYOPT(@10),X'01'                               01S0224
*            RPLYRTEC = LCLFLGS;       /*SET DEVICE POOL ROUTING CDES*/
@RF00223 DS    0H                                               01S0225
@RC00221 L     @10,@PC00001+4                                   01S0225
         MVC   RPLYRTEC(1,@10),LCLFLGS                          01S0225
*            COMPRTEC = COMPRTEC × RPLYRTEC; /*UPDATE COMPOSITE RTE
*                                        CODES                       */
         L     @02,@PC00001+8                                   01S0226
         OC    COMPRTEC(1,@02),RPLYRTEC(@10)                    01S0226
*            CALL IEFAB488(ALCWAPTR,RPLYDATA); /*ISSUE/PROCESS REPLY
*                                        OPTS                        */
         L     @02,@PC00001                                     01S0227
         ST    @02,@AL00001                                     01S0227
         ST    @10,@AL00001+4                                   01S0227
         L     @15,@CV00143                                     01S0227
         LA    @01,@AL00001                                     01S0227
         BALR  @14,@15                                          01S0227
*            RETCODE = REG15;          /*SAVE RETURN CODE            */
         LR    RETCODE,REG15                                    01S0228
*          END;                                                 01S0229
*        ELSE                          /*NO ALLOC'DS/OFFLINE ELIGIBLE*/
*          DO;                         /*SEE IF ANY NEW ONLINE TO USE*/
         B     @RC00217                                         01S0230
@RF00217 DS    0H                                               01S0231
*            CALL IEFAB489(ALCWAPTR,VUPTR);                     01S0231
         L     @10,@PC00001                                     01S0231
         ST    @10,@AL00001                                     01S0231
         LA    @10,VUPTR                                        01S0231
         ST    @10,@AL00001+4                                   01S0231
         L     @15,@CV00144                                     01S0231
         LA    @01,@AL00001                                     01S0231
         BALR  @14,@15                                          01S0231
*            RETCODE = REG15;          /*SAVE RETURN CODE            */
         LR    RETCODE,REG15                                    01S0232
*            IF VOLALOC = NO &         /*ENTRY STILL NOT PROCESSED   */
*                VURCVYPR = NO THEN                             01S0233
         L     @10,VUPTR                                        01S0233
         TM    VOLALOC(@10),B'10000000'                         01S0233
         BNZ   @RF00233                                         01S0233
         TM    VURCVYPR(@10),B'00000001'                        01S0233
         BNZ   @RF00233                                         01S0233
*              IF RETCODE = ZERO THEN  /*NO ERROR DURING PROC'ING    */
         LTR   RETCODE,RETCODE                                  01S0234
         BNZ   @RF00234                                         01S0234
*                DO;                   /*TERMINATE ALLOCATION        */
*                  RETCODE = ERROR;    /*SET ERROR RETURN CODE       */
         LA    RETCODE,4                                        01S0236
*                  RSNCODE = ENVIRNER; /*SET REASON CODE             */
         L     @10,@PC00001                                     01S0237
         L     @10,ALCWAPTR(,@10)                               01S0237
         L     @10,FAILRSCP(,@10)                               01S0237
         MVC   RSNCODE(2,@10),@CH00153                          01S0237
*                END;                                           01S0238
*              ELSE;                   /*NON-0 CODE, LEAVE AS IS     */
@RF00234 DS    0H                                               01S0240
*            ELSE;                     /*ENTRY WAS PROCESSED O.K.    */
@RF00233 DS    0H                                               01S0241
*          END;                                                 01S0241
*      END;                                                     01S0242
@RC00217 DS    0H                                               01S0243
*    VUPTR = VUPTR + LENGTH(VOLUNTAB); /*POINT TO NEXT VU ENTRY      */
@RF00101 LA    @10,28                                           01S0243
         AL    @10,VUPTR                                        01S0243
         ST    @10,VUPTR                                        01S0243
*  END;                                                         01S0244
         LA    @10,1                                            01S0244
         AL    @10,VUCTR                                        01S0244
@DE00096 ST    @10,VUCTR                                        01S0244
         CH    @10,SVOLUNNO(,SIOTPTR)                           01S0244
         BNH   @DL00096                                         01S0244
@DC00096 DS    0H                                               01S0245
*  SIOTPTR = SIOTNPTR;                 /*POINT TO NEXT SIOT          */
         L     SIOTPTR,SIOTNPTR(,SIOTPTR)                       01S0245
*END;                                                           01S0246
@DE00088 SLR   @10,@10                                          01S0246
         CR    SIOTPTR,@10                                      01S0246
         BE    @DC00088                                         01S0246
         CR    RETCODE,@10                                      01S0246
         BE    @DL00088                                         01S0246
@DC00088 DS    0H                                               01S0247
*RETURN CODE(RETCODE);                                          01S0247
         IC    @02,@OLDKEY                                      01S0247
         L     @13,4(,@13)                                      01S0247
         L     @00,@SIZDATD                                     01S0247
         LR    @01,@11                                          01S0247
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@04                                          01S0247
         L     @14,12(,@13)                                     01S0247
         LM    @00,@12,20(@13)                                  01S0247
         BR    @14                                              01S0247
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CONVERT                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CONVERT BINARY DATA TO EBCDIC                 */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE WILL CONVERT THE INPUT BINARY NUMBER TO ITS       */
*/*   EBCDIC EQUIVALENT. THE ROUTINE WILL ALSO REPLACE LEADING       */
*/*   ZEROES, IN THE CONVERTED NUMBER, WITH BLANKS.                  */
*/*                                                                  */
*/*                                                                  */
*/* ENTRY - CONVERT (INTERNAL PROCEDURE)                             */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     CNVTIN - NUMBER TO BE CONVERTED (FULL-WORD)                  */
*/*     CNVTOUT - OUTPUT AREA (4-BYTES)                              */
*/*                                                                  */
*/* EXIT - RETURN TO CALLER                                          */
*/*   CONDITION - CONVERSION COMPLETED                               */
*/*     OUTPUT -                                                     */
*/*       CNVTOUT - EBCDIC VALUE OF INPUT SANS LEADING ZEROES        */
*/*     RETURN CODES - NONE                                          */
*/********************************************************************/
*CONVERT:                                                       02S0248
*  PROC (CNVTIN,CNVTOUT);                                       02S0248
CONVERT  STM   @14,@12,12(@13)                                  02S0248
         MVC   @PC00002(8),0(@01)                               02S0248
*CVD(CNVTIN,CNVTDNUM);                 /*CONVERT INPUT NUMBER TO DEC */
         L     @10,@PC00002                                     02S0249
         L     @10,CNVTIN(,@10)                                 02S0249
         CVD   @10,CNVTDNUM                                     02S0249
*UNPK(CNVTOUT,CNVTDNUM(6:8));          /*UNPACK IT INTO OUTPUT AREA  */
         L     @10,@PC00002+4                                   02S0250
         UNPK  CNVTOUT(4,@10),CNVTDNUM+5(3)                     02S0250
*MVZ(CNVTOUT(LENGTH(CNVTOUT)),CNVTZONE);/*INSERT ZONE IN LAST BYTE   */
         MVZ   CNVTOUT+3(1,@10),@CB00182                        02S0251
*DO CNVTCTR = 1 TO LENGTH(CNVTOUT)     /*SCAN FOR LEADING ZEROES     */
*    WHILE(CNVTOUT(CNVTCTR) = CNVTZERO);                        02S0252
         LA    CNVTCTR,1                                        02S0252
@DL00252 L     @10,@PC00002+4                                   02S0252
         LR    @03,@10                                          02S0252
         ALR   @03,CNVTCTR                                      02S0252
         BCTR  @03,0                                            02S0252
         CLI   CNVTOUT(@03),C'0'                                02S0252
         BNE   @DC00252                                         02S0252
*  CNVTOUT(CNVTCTR) = CNVTBLNK;        /*REPLACE ZERO WITH BLANK     */
         ALR   @10,CNVTCTR                                      02S0253
         BCTR  @10,0                                            02S0253
         MVI   CNVTOUT(@10),C' '                                02S0253
*END;                                                           02S0254
         AH    CNVTCTR,@CH00082                                 02S0254
         CH    CNVTCTR,@CH00111                                 02S0254
         BNH   @DL00252                                         02S0254
@DC00252 DS    0H                                               02S0255
*RETURN;                                                        02S0255
@EL00002 DS    0H                                               02S0255
@EF00002 DS    0H                                               02S0255
@ER00002 LM    @14,@12,12(@13)                                  02S0255
         BR    @14                                              02S0255
*END CONVERT;                                                   02S0256
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - SETOLUCB                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SET OFFLINE UCB                               */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE DETERMINES IF THE INPUT UCB CAN BE REQUESTED IN   */
*/*   THE CURRENT SET OF OFFLINE MESSAGES AND, IF SO, PLACES IT IN   */
*/*   THE DEVICE LIST OF THE MESSAGE BUFFER (I.E., WTO PARM LIST).   */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     IF THE INPUT UCB IS ALLOCATABLE (UCBNALOC = 0) AND IS        */
*/*     OFFLINE, THE TYPE OF MESSAGE CURRENTLY BEING BUILT DETERMINES*/
*/*     WHETHER OR NOT THE UCB IS USED.                              */
*/*                                                                  */
*/* ENTRY - SETOLUCB (INTERNAL PROC)                                 */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     UCBPTR - PTR TO UCB TO BE CHECKED                            */
*/*       UCBNALOC - IF ON, UNIT IS NOT TO BE ALLOCATED              */
*/*       UCBONLI - IF OFF, UNIT IS OFFLINE                          */
*/*       UCBVHRSN - IF ON, UNIT IS HIERARCHICALLY OFFLINE           */
*/*     MSGOFFS - CODE FOR MESSAGE NOW BEING BUILT                   */
*/*                                                                  */
*/* EXIT - RETURN TO CALLER                                          */
*/*   CONDITION - UNIT CAN BE REQUESTED                              */
*/*     OUTPUT -                                                     */
*/*       DEVICE LIST ENTRY MADE                                     */
*/*       DEVICE LIST PTR UPDATED                                    */
*/*       OFLUNSW = ON                                               */
*/*     RETURN CODES - NONE                                          */
*/*   CONDITION - UNIT CANNOT BE REQUESTED                           */
*/*     OUTPUT - NONE                                                */
*/*     RETURN CODE - NONE                                           */
*/********************************************************************/
*SETOLUCB:                             /*FILL DEVLIST SUBRTN         */
*  PROC;                                                        02S0257
SETOLUCB STM   @14,@06,12(@13)                                  02S0257
         STM   @08,@12,52(@13)                                  02S0257
*OFLDEVSW = OFF;                       /*ASSUME UNIT CAN'T BE USED   */
         NI    OFLDEVSW,B'11011111'                             02S0258
*IF UCBNALOC = NO THEN                 /*UNIT IS ALLOCATABLE         */
         TM    UCBNALOC(UCBPTR),B'00000100'                     02S0259
         BNZ   @RF00259                                         02S0259
*  IF UCBONLI = NO THEN                /*UNIT IS NOT ONLINE          */
         TM    UCBONLI(UCBPTR),B'10000000'                      02S0260
         BNZ   @RF00260                                         02S0260
*    IF MSGOFFS = OFLOPT &             /*PRC'NG OPERATOR VARIED UNITS*/
*        UCBVHRSN = NO THEN            /*PATH AVAILABLE TO UNIT      */
         CH    MSGOFFS,@CH00082                                 02S0261
         BNE   @RF00261                                         02S0261
         TM    UCBVHRSN(UCBPTR),B'00000010'                     02S0261
         BNZ   @RF00261                                         02S0261
*      OFLDEVSW = ON;                  /*CAN REQUEST THIS UNIT       */
         OI    OFLDEVSW,B'00100000'                             02S0262
*    ELSE                                                       02S0263
*      IF MSGOFFS = HOFLOPT &          /*PRC'NG FOR HIER'LY OFFLINES */
*          UCBVHRSN = YES THEN         /*UNIT IS HIERARCH'LY OFFLINE */
         B     @RC00261                                         02S0263
@RF00261 CH    MSGOFFS,@CH00099                                 02S0263
         BNE   @RF00263                                         02S0263
         TM    UCBVHRSN(UCBPTR),B'00000010'                     02S0263
         BNO   @RF00263                                         02S0263
*        OFLDEVSW = ON;                /*CAN REQUEST THIS UNIT       */
         OI    OFLDEVSW,B'00100000'                             02S0264
*      ELSE;                                                    02S0265
@RF00263 DS    0H                                               02S0266
*  ELSE;                               /*UNIT IS ONLINE              */
@RF00260 DS    0H                                               02S0267
*IF OFLDEVSW = ON THEN                 /*UNIT CAN BE REQUESTED       */
@RC00260 DS    0H                                               02S0267
@RF00259 TM    OFLDEVSW,B'00100000'                             02S0267
         BNO   @RF00267                                         02S0267
*  DO;                                 /*PUT NAME IN LIST            */
*    OFLUNSW = ON;                     /*INDICATE OFFLINES REQUESTED */
         OI    OFLUNSW,B'01000000'                              02S0269
*    OFLDEVNM = UCBNAME;               /*SET UNIT NAME IN P-LIST     */
         MVC   OFLDEVNM(3,DEVLISTP),UCBNAME(UCBPTR)             02S0270
*    OFLMDLIM = COMMA;                 /*INSERT DELIMITER            */
         MVI   OFLMDLIM(DEVLISTP),C','                          02S0271
*    DEVLISTP = DEVLISTP +             /*UPDATE PTR TO NEXT ENTRY    */
*        LENGTH(OFLENT);                                        02S0272
         AH    DEVLISTP,@CH00111                                02S0272
*  END;                                                         02S0273
*ELSE;                                 /*CAN'T REQUEST THIS UNIT     */
@RF00267 DS    0H                                               02S0275
*RETURN;                               /*RETURN TO CALLER            */
@EL00003 DS    0H                                               02S0275
@EF00003 DS    0H                                               02S0275
@ER00003 LM    @14,@06,12(@13)                                  02S0275
         LM    @08,@12,52(@13)                                  02S0275
         BR    @14                                              02S0275
*END SETOLUCB;                                                  02S0276
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - WRTOLMSG                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - WRITE OFFLINE MESSAGE                         */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE COMPLETES THE WRITE-TO-OPERATOR PARAMETER LIST    */
*/*   FOR THE OFFLINE MESSAGES AND ISSUES THE MESSAGE TO THE         */
*/*   SYSTEM OPERATOR AND APPROPRIATE DEVICE POOLS. THE PARAMETER    */
*/*   LIST AND DEVICE LIST POINTER ARE REINITIALIZED AFTER THE       */
*/*   MESSAGE HAS BEEN ISSUED.                                       */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     DEVLISTP - PTR TO CURRENT DEVICE LIST POSITION               */
*/*     MSGOFFS - INDEX TO MESSAGE END TEXT                          */
*/*     LCLFLGS - DEVICE POOL ROUTING CODES                          */
*/*     TXTLNTH - LENGTH OF BEGINNING MESSAGE TEXT                   */
*/*                                                                  */
*/* EXIT -                                                           */
*/*  CONDITION - FUNCTION COMPLETED                                  */
*/*    OUTPUT -                                                      */
*/*      OFFLINE MESSAGE ISSUED                                      */
*/*      WTO PARM LIST REINITIALIZED WITH BEGINNING TEXT             */
*/*      DEVLISTP - RESET TO BEGINNING OF DEVICE LIST                */
*/*      TXTLNTH - RESET TO LENGTH OF BEGINNING TEXT                 */
*/*    RETURN CODES - NONE                                           */
*/********************************************************************/
*WRTOLMSG:                                                      02S0277
*  PROC;                                                        02S0277
WRTOLMSG STM   @14,@06,@SA00004                                 02S0277
         STM   @08,@12,@SA00004+36                              02S0277
*TXTLNTH = TXTLNTH +                   /*GET CURRENT TEXT LENGTH     */
*    (DEVLISTP -ADDR(OFLDVLST));                                02S0278
         L     @10,TXTLNTH                                      02S0278
         LA    @08,WPLTXT(,WPLPTR)                              02S0278
         LR    @06,@08                                          02S0278
         ALR   @06,@10                                          02S0278
         LCR   @06,@06                                          02S0278
         ALR   @06,DEVLISTP                                     02S0278
         ALR   @10,@06                                          02S0278
         ST    @10,TXTLNTH                                      02S0278
*TXTPTR = ADDR(OFLMSGS) +              /*POINT TO END-OF-MSG TEXT    */
*    OLMSGOFS(MSGOFFS);                                         02S0279
         L     TXTPTR,@CA00145                                  02S0279
         LR    @06,MSGOFFS                                      02S0279
         SLA   @06,2                                            02S0279
         L     @15,@CA00139                                     02S0279
         LA    @01,0(@06,@15)                                   02S0279
         AL    @01,@CF01988                                     02S0279
         AH    TXTPTR,OLMSGOFS-OFLMOFS(,@01)                    02S0279
*MSGLNTH = OLMTXTL(MSGOFFS);           /*GET LENGTH OF REMAINING TEXT*/
         BCTR  @15,0                                            02S0280
         BCTR  @15,0                                            02S0280
         LH    @06,OLMTXTL-OFLMOFS-2(@06,@15)                   02S0280
         ST    @06,MSGLNTH                                      02S0280
*OFLMEND(1:MSGLNTH) =                  /*MOVE TEXT TO PARM LIST      */
*    MSGTXT(1:MSGLNTH);                                         02S0281
         LR    @15,@08                                          02S0281
         ALR   @15,@10                                          02S0281
         BCTR  @15,0                                            02S0281
         LR    @14,@06                                          02S0281
         BCTR  @14,0                                            02S0281
         EX    @14,@SM01989                                     02S0281
*TXTLNTH = TXTLNTH + MSGLNTH;          /*GET TOTAL MESSAGE LENGTH    */
         ALR   @10,@06                                          02S0282
         ST    @10,TXTLNTH                                      02S0282
*CALL IEFAB4F3                         /*REMOVE EMBEDDED BLANKS      */
*     (ADDR(WPLTXT),TXTLNTH,MSGLNTH);                           02S0283
         ST    @08,@TF00001                                     02S0283
         LA    @10,@TF00001                                     02S0283
         ST    @10,@AL00001                                     02S0283
         LA    @10,TXTLNTH                                      02S0283
         ST    @10,@AL00001+4                                   02S0283
         LA    @10,MSGLNTH                                      02S0283
         ST    @10,@AL00001+8                                   02S0283
         L     @15,@CV00142                                     02S0283
         LA    @01,@AL00001                                     02S0283
         BALR  @14,@15                                          02S0283
*WPLLGH = MSGLNTH + FOUR;              /*SET P-LIST LENGTH           */
         L     @10,MSGLNTH                                      02S0284
         LA    @08,4                                            02S0284
         ALR   @08,@10                                          02S0284
         STH   @08,WPLLGH(,WPLPTR)                              02S0284
*WPLMCSF = WPLMCSF && WPLMCSF;         /*CLEAR MCS FLAGS AREA        */
         XC    WPLMCSF(2,WPLPTR),WPLMCSF(WPLPTR)                02S0285
*WPLMCSFA = ON;                        /*SET 'RTE/DESC CODES PRESENT'*/
         OI    WPLMCSFA(WPLPTR),B'10000000'                     02S0286
*WPLFLGS = WPLFLGS && WPLFLGS;         /*CLEAR RTE/DESC CODES AREA   */
         LA    @08,WPLTXT(,WPLPTR)                              02S0287
         ALR   @08,@10                                          02S0287
         XC    WPLFLGS(8,@08),WPLFLGS(@08)                      02S0287
*WPLDESCF = ON;                        /*SET 'JOB STATUS' DESC CODE  */
         OI    WPLDESCF(@08),B'00000100'                        02S0288
*WPLROUT1 = LCLFLGS;                   /*SET DEV POOL ROUTING CODES  */
         MVC   WPLROUT1(1,@08),LCLFLGS                          02S0289
*WPLROUTB = ON;                        /*ADD ROUTE TO MASTER CONSOLE */
         OI    WPLROUTB(@08),B'01000000'                        02S0290
*RFY (REG0) RSTD;                      /*RESERVE REG FOR WTO MACRO   */
*REG0 = ZERO;                          /*CLEAR REGISTER ZERO         */
         SLR   REG0,REG0                                        02S0292
*GEN(WTO MF=(E,WTOL));                 /*ISSUE MSG VIA WTO           */
         WTO MF=(E,WTOL)
*RFY(REG0) UNRSTD;                     /*RELEASE REG                 */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - OFLMINIT                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - OFFLINE MESSAGE INITIALIZATION                */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE INITIALIZES THE WRITE-TO-OPERATOR PARAMETER LIST,  *
*/*   THE POINTER TO THE DEVICE LIST AND THE LENGTH OF THE INITIAL   */
*/*   TEXT FOR THE BUILDING OF OFFLINE MESSAGES.                     */
*/*                                                                  */
*/* ENTRY - IN-LINE SEGMENT                                          */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT - NONE                                                   */
*/*                                                                  */
*/* EXIT -                                                           */
*/*   CONDITION - FUNCTION COMPLETED                                 */
*/*     OUTPUT -                                                     */
*/*       WPLTXT - INITIAL OFFLINE MSG TEXT                          */
*/*       TXTLNTH - LENGTH OF INITIAL TEXT                           */
*/*       DEVLISTP - PTR TO BEGINNING OF DEVICE LIST                 */
*/*     RETURN CODES - NONE                                          */
*/********************************************************************/
*WPLTXT = '';                          /*CLEAR TEXT AREA OF P-LIST   */
         MVI   WPLTXT(WPLPTR),C' '                              03S0295
         MVC   WPLTXT+1(125,WPLPTR),WPLTXT(WPLPTR)              03S0295
*TXTLNTH = OLIDMSGL;                   /*SET LENGTH OF ID TEXT       */
         L     @10,@CA00136                                     03S0296
         LH    @08,OLIDMSGL-OFLMSGID(,@10)                      03S0296
         ST    @08,TXTLNTH                                      03S0296
*WPLTXT(1:TXTLNTH) =                   /*MOVE ID TEXT TO P-LIST      */
*    OLIDMTXT(1:TXTLNTH);                                       03S0297
         LR    @06,@08                                          03S0297
         BCTR  @06,0                                            03S0297
         EX    @06,@SM01983                                     03S0297
*MSGJNAME = ALCJOBN;                   /*MOVE IN JOB NAME            */
         L     @10,@PC00001                                     03S0298
         L     @10,ALCWAPTR(,@10)                               03S0298
         L     @10,TIOTHDRP(,@10)                               03S0298
         MVC   MSGJNAME+4(8,WPLPTR),ALCJOBN(@10)                03S0298
*DEVLISTP = ADDR(OFLDVLST);            /*POINT TO BEGINNING OF DEVICE
*                                        LIST                        */
         LA    DEVLISTP,WPLTXT(,WPLPTR)                         03S0299
         ALR   DEVLISTP,@08                                     03S0299
*RETURN;                               /*RETURN TO CALLER            */
@EL00004 DS    0H                                               02S0300
@EF00004 DS    0H                                               02S0300
@ER00004 LM    @14,@06,@SA00004                                 02S0300
         LM    @08,@12,@SA00004+36                              02S0300
         BR    @14                                              02S0300
*END WRTOLMSG;                                                  02S0301
*END IEFAB48A                                                   01S0302
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A48ASPEC)                                        *
*/*%INCLUDE SYSLIB  (A48ADATA)                                        *
*/*%INCLUDE SYSLIB  (CNVTDATA)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*/*%INCLUDE SYSLIB  (IEFZB421)                                        *
*/*%INCLUDE SYSLIB  (IEFZB422)                                        *
*/*%INCLUDE SYSLIB  (IEFZB423)                                        *
*/*%INCLUDE SYSLIB  (IEFZB425)                                        *
*/*%INCLUDE SYSLIB  (IEFZB426)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IHASUBIT)                                        *
*/*%INCLUDE SYSLIB  (IEFZB428)                                        *
*/*%INCLUDE SYSLIB  (IEZWPL  )                                        *
*/*%INCLUDE SYSLIB  (BLDDDHDR)                                        *
*/*%INCLUDE SYSLIB  (DHDRSPEC)                                        *
*/*%INCLUDE SYSLIB  (BLDOLMSG)                                        *
*/*%INCLUDE SYSLIB  (OFLMSPEC)                                        *
*/*%INCLUDE SYSLIB  (OFLMINIT)                                        *
*/*%INCLUDE SYSLIB  (OFLMINIT)                                        *
*/*%INCLUDE SYSLIB  (INITSPEC)                                        *
*/*%INCLUDE SYSLIB  (INITSPEC)                                        *
*/*%INCLUDE SYSLIB  (DMNDNEED)                                        *
*/*%INCLUDE SYSLIB  (DNEDSPEC)                                        *
*/*%INCLUDE SYSLIB  (CONVERT )                                        *
*/*%INCLUDE SYSLIB  (CNVTSPEC)                                        *
*/*%INCLUDE SYSLIB  (SETOLUCB)                                        *
*/*%INCLUDE SYSLIB  (SOLUSPEC)                                        *
*/*%INCLUDE SYSLIB  (WRTOLMSG)                                        *
*/*%INCLUDE SYSLIB  (WTOLSPEC)                                        *
*;                                                              01S0302
@DATA    DS    0H
@CH00082 DC    H'1'
@CH00099 DC    H'2'
@CH00111 DC    H'4'
@CH00050 DC    H'16'
@CH00153 DC    H'17'
@CH01970 DC    H'28'
@SM01977 MVC   WPLTXT(0,WPLPTR),OFLHMTXT-OFLHDR(@10)
@SM01983 MVC   WPLTXT(0,WPLPTR),OLIDMTXT-OFLMSGID(@10)
@SM01989 MVC   OFLMEND(0,@15),MSGTXT(TXTPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@PC00002 DS    2F
@SA00004 DS    14F
@AL00001 DS    3A
@TF00001 DS    F
IEFAB48A CSECT
         DS    0F
@CF01988 DC    F'-4'
@DATD    DSECT
         DS    0D
EDLUCBLP DS    A
GPCNTPTR DS    A
VUPTR    DS    A
CCATCTR  DS    F
DEVCTR   DS    F
GRPCTR   DS    F
I        DS    F
MSGLNTH  DS    F
TXTLNTH  DS    F
TOTUNITS DS    F
VUCTR    DS    F
EDTPTR   DS    A
LUVPTR   DS    A
GENPTR   DS    A
GRPTABP  DS    A
EDLPTR   DS    A
EDLGNTP  DS    A
MAXDEVS  DS    FL1
INTNLSWS DS    BL1
         ORG   INTNLSWS
ALCUNSW  DS    BL1
OFLUNSW  EQU   INTNLSWS+0
OFLDEVSW EQU   INTNLSWS+0
OLFINISW EQU   INTNLSWS+0
USEUCB   EQU   INTNLSWS+0
         ORG   INTNLSWS+1
LCLFLGS  DS    BL1
         ORG   LCLFLGS
@NM00004 DS    BL1
LCLFLGB  EQU   LCLFLGS+0
LCLFLGC  EQU   LCLFLGS+0
LCLFLGD  EQU   LCLFLGS+0
@NM00005 EQU   LCLFLGS+0
LCLFLGG  EQU   LCLFLGS+0
         ORG   LCLFLGS+1
MSGRPOS  DS    CL4
SAVDDNM  DS    CL8
CNVTDNUM DS    CL8
         DS    CL1
WTOL     DS    CL138
         ORG   WTOL
@NM00044 DS    CL130
@NM00045 DS    CL8
         ORG   WTOL+138
@OLDKEY  DS    AL1
IEFAB48A CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CA00133 DC    A(OFLHDR)
@CA00136 DC    A(OFLMSGID)
@CA00139 DC    A(OFLMOFS)
@CV00142 DC    V(IEFAB4F3)
@CV00143 DC    V(IEFAB488)
@CV00144 DC    V(IEFAB489)
@CA00145 DC    A(OFLMSGS)
         DS    0D
@CB00182 DC    X'F0'
IEFAB48A CSECT
         DS   0H
A48APTCH DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB48A CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CNVTCTR  EQU   @02
TMPVUCTR EQU   @04
RETCODE  EQU   @04
MSGOFFS  EQU   @09
WPLPTR   EQU   @03
UCBPTR   EQU   @02
TXTPTR   EQU   @02
TMPVUPTR EQU   @02
SPTR     EQU   @08
SIOTPTR  EQU   @05
RQLSTPTR EQU   @06
GRPPTR   EQU   @10
GPLSTPTR EQU   @04
DEVLISTP EQU   @07
REG0     EQU   @00
REG15    EQU   @15
REG1     EQU   @01
         EXTRN OFLHDR
         EXTRN OFLMSGID
         EXTRN OFLMOFS
         EXTRN OFLMSGS
CVTPTR   EQU   16
ENDDVLST EQU   0
OFLDVLST EQU   0
OFLENT   EQU   0
OFLDEVNM EQU   OFLENT
OFLMDLIM EQU   OFLENT+3
IOSLUT   EQU   0
DDNFMT   EQU   0
OFLALDDN EQU   DDNFMT
OFLALCCN EQU   DDNFMT+9
OFLARPOS EQU   OFLALCCN+1
MSGNAMES EQU   0
MSGJNAME EQU   MSGNAMES+8
MSGTXT   EQU   0
OFLALUNO EQU   0
OFLMEND  EQU   0
RSNCODE  EQU   0
VAROFFS  EQU   0
INDMSIOT EQU   0
SCTDDNAM EQU   INDMSIOT+4
SCTUSADD EQU   INDMSIOT+20
SIOTBYT1 EQU   INDMSIOT+43
SIOTALCD EQU   SIOTBYT1
SIOTBYT3 EQU   INDMSIOT+46
SIOTJES3 EQU   SIOTBYT3
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOUCBAD EQU   SCTUTYPE+5
SIOTBYT4 EQU   INDMSIOT+81
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
SIOTDMND EQU   SIOTBYT2
SIOTEDLP EQU   INDMSIOT+136
SVOLUNAD EQU   INDMSIOT+140
SIOTNPTR EQU   INDMSIOT+152
SVOLUNNO EQU   INDMSIOT+168
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBONLI  EQU   UCBSTAT
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBVHRSN EQU   UCBWGT
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00025 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
EDTHDR   EQU   0
EDTLUVSP EQU   EDTHDR
EDTGENSP EQU   EDTHDR+4
EDTGRPSP EQU   EDTHDR+8
EDTUCBSP EQU   EDTHDR+12
EDTMSKTP EQU   EDTHDR+16
LUVSECT  EQU   0
LUVHDR   EQU   LUVSECT
LUVENTRY EQU   0
LUVGMTP  EQU   LUVENTRY+12
LUVFLAGS EQU   LUVENTRY+24
GENSECT  EQU   0
GENHDR   EQU   GENSECT
GENENTRY EQU   0
GRPTRTAB EQU   0
GRPSECT  EQU   0
GRPHDR   EQU   GRPSECT
GRPENTLN EQU   GRPHDR+4
GRPENTRY EQU   0
GRPUCBNO EQU   GRPENTRY+4
GRPUCBP  EQU   GRPENTRY+8
EUCBSECT EQU   0
EUCBHDR  EQU   EUCBSECT
EUCBENTY EQU   0
EUCBTPOS EQU   EUCBENTY
GRMSKTAB EQU   0
GMTHDR   EQU   GRMSKTAB
GMTENTRY EQU   0
IEFEDL   EQU   0
EDLHDR   EQU   IEFEDL
EDLUVFLG EQU   EDLHDR+16
EDLENTRY EQU   0
EDLDTFLG EQU   EDLENTRY+20
EDLGNTRY EQU   0
EDLGRFLG EQU   EDLGNTRY+16
EDLUCBL  EQU   0
EDLINDIC EQU   EDLUCBL+2
VOLUNTAB EQU   0
VOLSTAT  EQU   VOLUNTAB+6
VOLSTATA EQU   VOLSTAT
VOLSTATB EQU   VOLSTAT+1
VOLALOC  EQU   VOLSTATB
VDEVREQD EQU   VOLSTATB
VOLSTATC EQU   VOLSTAT+2
VOLTAREQ EQU   VOLSTATC
VOLDAREQ EQU   VOLSTATC
VOLURREQ EQU   VOLSTATC
VOLSTATD EQU   VOLSTAT+3
VUDMNDOF EQU   VOLSTATD
VUDMUNIQ EQU   VOLSTATD
VURCVYPR EQU   VOLSTATD
VOLALGTP EQU   VOLUNTAB+12
VUUCBP   EQU   VOLUNTAB+20
VUGRID   EQU   VOLUNTAB+24
VUPOOL   EQU   0
VUPOOL#  EQU   VUPOOL
VUCBS    EQU   VUPOOL+4
VUGRLST  EQU   0
VUGRLENT EQU   VUGRLST
VUGRLFLG EQU   VUGRLENT+4
ALCWA    EQU   0
FMAPPTR  EQU   ALCWA+4
SIOT1P   EQU   ALCWA+8
IOSLUTP  EQU   ALCWA+16
FAILRSCP EQU   ALCWA+20
EDTABPTR EQU   ALCWA+24
CNTABLE  EQU   ALCWA+28
ALGTABP  EQU   ALCWA+88
INDICATE EQU   ALCWA+112
@NM00033 EQU   ALCWA+113
TIOTHDRP EQU   ALCWA+120
NAMES    EQU   0
ALCJOBN  EQU   NAMES
ALGPTRS  EQU   0
CVRPARM  EQU   0
CVRFLG1  EQU   CVRPARM+8
CVRRQLST EQU   0
CVRMIN   EQU   CVRRQLST+10
CVRFLG2  EQU   CVRRQLST+16
CVRSKFLG EQU   CVRFLG2
CVRNGRP  EQU   CVRRQLST+18
CVRGRPPT EQU   CVRRQLST+20
CVRGPLST EQU   0
CVRGCPTR EQU   CVRGPLST
CVRGRPID EQU   CVRGPLST+4
CVRGALL  EQU   CVRGPLST+8
CVRFLG3  EQU   CVRGPLST+12
CVRGSKP  EQU   CVRFLG3
GRPCOUNT EQU   0
GRPALLCT EQU   GRPCOUNT+2
GRPOFFLN EQU   GRPCOUNT+4
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SUBITS   EQU   0
SUBYTE1  EQU   SUBITS
SUBYTE2  EQU   SUBITS+1
SUBYTE3  EQU   SUBITS+2
SU18BIT  EQU   SUBYTE3
SUBYTE4  EQU   SUBITS+3
SUBYTE5  EQU   SUBITS+4
SUBYTE6  EQU   SUBITS+5
SUBYTE7  EQU   SUBITS+6
SUBYTE8  EQU   SUBITS+7
SUBYTE9  EQU   SUBITS+8
SUBYTE10 EQU   SUBITS+9
SUBYTE11 EQU   SUBITS+10
SUBYTE12 EQU   SUBITS+11
SUBYTE13 EQU   SUBITS+12
FUNCMAP  EQU   0
VOLMNTSW EQU   FUNCMAP
WRTMSGSW EQU   FUNCMAP
UWAITSW  EQU   FUNCMAP
VWAITSW  EQU   FUNCMAP
MSSTRMSW EQU   FUNCMAP
OFFDEVSW EQU   FUNCMAP
CCLMNTSW EQU   FUNCMAP
GENLOKSW EQU   FUNCMAP
SSEMSGSW EQU   FUNCMAP+1
HDRMSGSW EQU   FUNCMAP+1
MTRJOBSW EQU   FUNCMAP+1
NOTIOTNQ EQU   FUNCMAP+1
TRKMSW   EQU   FUNCMAP+1
WAITOKSW EQU   FUNCMAP+1
ASNMSW   EQU   FUNCMAP+1
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLLGH   EQU   WPL
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSFA EQU   WPLMCSF1
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESCF EQU   WPLDESC1
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUTB EQU   WPLROUT1
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
UCBBGN   EQU   0
OFLHMSGL EQU   OFLHDR
UNITSOFS EQU   OFLHDR+2
DDNOFFS  EQU   OFLHDR+3
OFLHMTXT EQU   OFLHDR+4
OLIDMSGL EQU   OFLMSGID
OLIDMTXT EQU   OFLMSGID+2
OLMSGOFS EQU   OFLMOFS
OLMTXTL  EQU   OFLMOFS+2
ALCWAPTR EQU   0
RPLYDATA EQU   0
RPLYRTEC EQU   RPLYDATA+1
RPLYOPT  EQU   RPLYDATA+2
RPLYVUP  EQU   RPLYDATA+4
COMPRTEC EQU   0
CNVTIN   EQU   0
CNVTOUT  EQU   0
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00024 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTIHASU EQU   CVTS01+696
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00024
UCBSKPFG EQU   @NM00024
UCBRIPND EQU   @NM00024
UCBRTIAC EQU   @NM00024
UCBRSV79 EQU   @NM00024
UCBRSV78 EQU   @NM00024
UCBRSV77 EQU   @NM00024
UCBOLTEP EQU   @NM00024
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00023 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00001 EQU   RPLYDATA+3
RPLYSWS  EQU   RPLYDATA
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLMLLEN EQU   WPLML+1
WPLML0   EQU   WPLML
WPLLINES EQU   WPLLS01+3
WPLAREA  EQU   WPLLS01+2
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00043 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
EXTRACAL EQU   FUNCMAP+1
ALCASDSN EQU   ASNMSW
ALCSUBWT EQU   WAITOKSW
ALCATRKM EQU   TRKMSW
ALCNOENQ EQU   NOTIOTNQ
ALCJOBNM EQU   MTRJOBSW
ALCHDMSG EQU   HDRMSGSW
ALCSSMSG EQU   SSEMSGSW
ALCGENER EQU   GENLOKSW
ALCCANCL EQU   CCLMNTSW
ALCOFFDV EQU   OFFDEVSW
ALCMSSTM EQU   MSSTRMSW
ALCWTVOL EQU   VWAITSW
ALCWTUNT EQU   UWAITSW
ALCMSGLV EQU   WRTMSGSW
ALCMOUNT EQU   VOLMNTSW
SURV104  EQU   SUBITS+13
SURV103  EQU   SUBYTE13
SURV102  EQU   SUBYTE13
SURV101  EQU   SUBYTE13
SU100BT  EQU   SUBYTE13
SU99BIT  EQU   SUBYTE13
SU98BIT  EQU   SUBYTE13
SU97BIT  EQU   SUBYTE13
SU96BIT  EQU   SUBYTE13
SU95BIT  EQU   SUBYTE12
SU94BIT  EQU   SUBYTE12
SU93BIT  EQU   SUBYTE12
SU92BIT  EQU   SUBYTE12
SU91BIT  EQU   SUBYTE12
SU90BIT  EQU   SUBYTE12
SU89BIT  EQU   SUBYTE12
SU88BIT  EQU   SUBYTE12
SU87BIT  EQU   SUBYTE11
SU86BIT  EQU   SUBYTE11
SU85BIT  EQU   SUBYTE11
SU84BIT  EQU   SUBYTE11
SU83BIT  EQU   SUBYTE11
SU82BIT  EQU   SUBYTE11
SU81BIT  EQU   SUBYTE11
SU80BIT  EQU   SUBYTE11
SU79BIT  EQU   SUBYTE10
SU78BIT  EQU   SUBYTE10
SU77BIT  EQU   SUBYTE10
SU76BIT  EQU   SUBYTE10
SU75BIT  EQU   SUBYTE10
SU74BIT  EQU   SUBYTE10
SU73BIT  EQU   SUBYTE10
SU72BIT  EQU   SUBYTE10
SU71BIT  EQU   SUBYTE9
SU70BIT  EQU   SUBYTE9
SU69BIT  EQU   SUBYTE9
SU68BIT  EQU   SUBYTE9
SU67BIT  EQU   SUBYTE9
SU66BIT  EQU   SUBYTE9
SU65BIT  EQU   SUBYTE9
SU64BIT  EQU   SUBYTE9
SU63BIT  EQU   SUBYTE8
SU62BIT  EQU   SUBYTE8
SU61BIT  EQU   SUBYTE8
SU60BIT  EQU   SUBYTE8
SU59BIT  EQU   SUBYTE8
SU58BIT  EQU   SUBYTE8
SU57BIT  EQU   SUBYTE8
SU56BIT  EQU   SUBYTE8
SU55BIT  EQU   SUBYTE7
SU54BIT  EQU   SUBYTE7
SU53BIT  EQU   SUBYTE7
SU52BIT  EQU   SUBYTE7
SU51BIT  EQU   SUBYTE7
SU50BIT  EQU   SUBYTE7
SU49BIT  EQU   SUBYTE7
SU48BIT  EQU   SUBYTE7
SU47BIT  EQU   SUBYTE6
SU46BIT  EQU   SUBYTE6
SU45BIT  EQU   SUBYTE6
SU44BIT  EQU   SUBYTE6
SU43BIT  EQU   SUBYTE6
SU42BIT  EQU   SUBYTE6
SU41BIT  EQU   SUBYTE6
SU40BIT  EQU   SUBYTE6
SU39BIT  EQU   SUBYTE5
SU38BIT  EQU   SUBYTE5
SU37BIT  EQU   SUBYTE5
SU36BIT  EQU   SUBYTE5
SU35BIT  EQU   SUBYTE5
SU34BIT  EQU   SUBYTE5
SU33BIT  EQU   SUBYTE5
SU32BIT  EQU   SUBYTE5
SU31BIT  EQU   SUBYTE4
SU30BIT  EQU   SUBYTE4
SU29BIT  EQU   SUBYTE4
SU28BIT  EQU   SUBYTE4
SU27BIT  EQU   SUBYTE4
SU26BIT  EQU   SUBYTE4
SU25BIT  EQU   SUBYTE4
SU24BIT  EQU   SUBYTE4
SU23BIT  EQU   SUBYTE3
SU22BIT  EQU   SUBYTE3
SU21BIT  EQU   SUBYTE3
SU20BIT  EQU   SUBYTE3
SU19BIT  EQU   SUBYTE3
SU17BIT  EQU   SUBYTE3
SU16BIT  EQU   SUBYTE3
SU15BIT  EQU   SUBYTE2
SU14BIT  EQU   SUBYTE2
SU13BIT  EQU   SUBYTE2
SU12BIT  EQU   SUBYTE2
SU11BIT  EQU   SUBYTE2
SU10BIT  EQU   SUBYTE2
SU9BIT   EQU   SUBYTE2
SU8BIT   EQU   SUBYTE2
SU7BIT   EQU   SUBYTE1
SU6BIT   EQU   SUBYTE1
SU5BIT   EQU   SUBYTE1
SU4BIT   EQU   SUBYTE1
SU3BIT   EQU   SUBYTE1
SU2BIT   EQU   SUBYTE1
SU1BIT   EQU   SUBYTE1
SU0BIT   EQU   SUBYTE1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00042 EQU   CVTFIX+248
@NM00041 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
GRPWPTR  EQU   GRPCOUNT+12
GRPIDENT EQU   GRPCOUNT+10
GRPEXCS  EQU   GRPCOUNT+8
GRPTOTAL EQU   GRPCOUNT+6
GRPAVAIL EQU   GRPCOUNT
@NM00040 EQU   CVRGPLST+13
@NM00039 EQU   CVRFLG3
CVRFORCI EQU   CVRFLG3
CVRBOUND EQU   CVRGPLST+10
CVRGRPAL EQU   CVRGPLST+6
@NM00038 EQU   CVRRQLST+26
CVRWUCBP EQU   CVRRQLST+24
@NM00037 EQU   CVRFLG2+1
CVRDUPLI EQU   CVRFLG2+1
CVRWMOVE EQU   CVRFLG2
CVRIGNOR EQU   CVRFLG2
CVRMULTI EQU   CVRFLG2
CVRSCRTH EQU   CVRFLG2
CVRFULL  EQU   CVRFLG2
CVRREACH EQU   CVRFLG2
CVRRUSED EQU   CVRFLG2
CVRGNEXT EQU   CVRRQLST+12
CVRPTS   EQU   CVRMIN
CVRNEED  EQU   CVRRQLST+8
CVRALLCT EQU   CVRRQLST+6
CVRREQ1  EQU   CVRRQLST+4
CVRVUPTR EQU   CVRRQLST
@NM00036 EQU   CVRPARM+9
@NM00035 EQU   CVRFLG1
CVRFCALL EQU   CVRFLG1
CVROFFLG EQU   CVRFLG1
CVRALFLG EQU   CVRFLG1
CVRAVFLG EQU   CVRFLG1
CVRGRPLK EQU   CVRPARM+6
CVRNREQ  EQU   CVRPARM+4
CVRRQPTR EQU   CVRPARM
ALGGCNTP EQU   ALGPTRS+12
ALGGLSTP EQU   ALGPTRS+8
ALGRQLTP EQU   ALGPTRS+4
ALGPARMP EQU   ALGPTRS
ALCPROCN EQU   NAMES+16
ALCSTEPN EQU   NAMES+8
LOJSSNMP EQU   ALCWA+164
SSERBLKP EQU   ALCWA+160
GROUPSZ  EQU   ALCWA+156
GRIDPTR  EQU   ALCWA+152
ALCNUCBS EQU   ALCWA+148
EXITPRMP EQU   ALCWA+144
CANCELP  EQU   ALCWA+140
WORK3MP  EQU   ALCWA+136
WMASK2P  EQU   ALCWA+132
WMASKPTR EQU   ALCWA+128
LGENLOCK EQU   ALCWA+124
TCBP     EQU   ALCWA+116
ALCWASID EQU   ALCWA+114
@NM00034 EQU   @NM00033
NODEVERR EQU   @NM00033
NEEDRCVY EQU   @NM00033
ALCWAREC EQU   @NM00033
WAITIGEN EQU   @NM00033
UNITRECS EQU   @NM00033
ALCWADUL EQU   INDICATE
ALCWISAM EQU   INDICATE
DSSUNIT  EQU   INDICATE
DSSTAPE  EQU   INDICATE
PRIVASUM EQU   INDICATE
INDREQU  EQU   INDICATE
INDRETRY EQU   INDICATE
INDWAIT  EQU   INDICATE
QMGRRBP  EQU   ALCWA+108
RIMTABCT EQU   ALCWA+104
RIMTABLN EQU   ALCWA+100
RIMTABP  EQU   ALCWA+96
ALGTABSZ EQU   ALCWA+92
VOLUNSZE EQU   ALCWA+84
VOLUNPTR EQU   ALCWA+80
@NM00032 EQU   ALCWA+78
LTUNITID EQU   ALCWA+76
TOTVOLUN EQU   CNTABLE+44
NUMREQS  EQU   CNTABLE+40
TOTREQS  EQU   CNTABLE+36
OTHEREQS EQU   CNTABLE+32
SUBSREQS EQU   CNTABLE+28
STRGREQS EQU   CNTABLE+24
PUBLREQS EQU   CNTABLE+20
PVTNREQS EQU   CNTABLE+16
SPECREQS EQU   CNTABLE+12
TPREQS   EQU   CNTABLE+8
VAMREQS  EQU   CNTABLE+4
DMYREQS  EQU   CNTABLE
JSCBPTR  EQU   ALCWA+12
WASIZE   EQU   ALCWA
@NM00031 EQU   VUGRLENT+5
@NM00030 EQU   VUGRLFLG
VUGRALCD EQU   VUGRLFLG
VUGRLIDS EQU   VUGRLENT
VOLSIOTP EQU   VOLUNTAB+16
VOLUNTID EQU   VOLUNTAB+10
VUVLUNIQ EQU   VOLSTATD
VUUNALSW EQU   VOLSTATD
VUDMNDAL EQU   VOLSTATD
VUREALOC EQU   VOLSTATD
VUMUGDON EQU   VOLSTATD
@NM00029 EQU   VOLSTATC
@NM00028 EQU   VOLSTATC
VURECVRY EQU   VOLSTATC
VOLGRREQ EQU   VOLSTATC
VOLCOREQ EQU   VOLSTATC
VUAFFWRK EQU   VOLSTATB
VUVINELG EQU   VOLSTATB
VUDADSME EQU   VOLSTATB
VUDNALOC EQU   VOLSTATB
VUPROCED EQU   VOLSTATB
VOLMNTD  EQU   VOLSTATB
VOLDEFER EQU   VOLSTATA
VUDADSM  EQU   VOLSTATA
VOLRESVE EQU   VOLSTATA
VOLNSHR  EQU   VOLSTATA
VOLSTG   EQU   VOLSTATA
VOLSPEC  EQU   VOLSTATA
VOLPRV   EQU   VOLSTATA
VOLPUB   EQU   VOLSTATA
VOLID    EQU   VOLUNTAB
EDLNOJES EQU   EDLINDIC
EDLVOLAF EQU   EDLINDIC
EDLENQ   EQU   EDLINDIC
EDLDADSM EQU   EDLINDIC
EDLALCD  EQU   EDLINDIC
EDLUCBAD EQU   EDLUCBL
EDLJINEL EQU   EDLGRFLG
EDLGRID  EQU   EDLGNTRY+12
EDLLISTP EQU   EDLGNTRY+8
EDLUCBNO EQU   EDLGNTRY+4
EDLNXGRP EQU   EDLGNTRY
EINDEVTP EQU   EDLDTFLG
@NM00027 EQU   EDLENTRY+18
EDLNSCNT EQU   EDLENTRY+16
EDLGRPTR EQU   EDLENTRY+12
EDLGRPNO EQU   EDLENTRY+8
EDLDEVT  EQU   EDLENTRY+4
EDLNXTNT EQU   EDLENTRY
EDLMGENS EQU   EDLUVFLG
EDLVAM   EQU   EDLUVFLG
EDLGMTP  EQU   EDLHDR+12
EDLFGENP EQU   EDLHDR+8
EDLGENNO EQU   EDLHDR+4
EDLLUV   EQU   EDLHDR
GRPMASK  EQU   GMTENTRY
GMTENTLN EQU   GMTHDR+4
GMTENTNO EQU   GMTHDR
EUCBENLN EQU   EUCBHDR+4
EUCBENNO EQU   EUCBHDR
GRPID    EQU   GRPENTRY
GRPENTNO EQU   GRPHDR
GRPTR    EQU   GRPTRTAB
GENGRPTR EQU   GENENTRY+8
GENGRPNO EQU   GENENTRY+4
GENDEVT  EQU   GENENTRY
GENENTLN EQU   GENHDR+4
GENENTNO EQU   GENHDR
LUVAGMTP EQU   LUVENTRY+28
@NM00026 EQU   LUVFLAGS
LUVMGENS EQU   LUVFLAGS
LUVAGMSK EQU   LUVFLAGS
LUVVAM   EQU   LUVFLAGS
LUVGENP  EQU   LUVENTRY+20
LUVGENNO EQU   LUVENTRY+16
LUVALUE  EQU   LUVENTRY+8
UNITNAME EQU   LUVENTRY
LUVENTLN EQU   LUVHDR+4
LUVENTNO EQU   LUVHDR
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00025
UCBHALI  EQU   @NM00025
UCBRSV09 EQU   @NM00025
UCBRSV08 EQU   @NM00025
UCBRSV07 EQU   @NM00025
UCBRSV06 EQU   @NM00025
UCBRSV05 EQU   @NM00025
UCBRSV04 EQU   @NM00025
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00022 EQU   UCB
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTETIO EQU   INDMSIOT+148
SIOTATE  EQU   INDMSIOT+144
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
SIOTSSIC EQU   INDMSIOT+120
@NM00021 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
@NM00020 EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
SIOTSSWA EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00019 EQU   SIOTALTD
@NM00018 EQU   SIOTALTD
@NM00017 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00016 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00015 EQU   SIOTBYT4
SIOTRACT EQU   SIOTBYT4
SIOTRACD EQU   SIOTBYT4
SIOTPROT EQU   SIOTBYT4
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00014 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00013 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
SCTALCHK EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
SIOTRETN EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
SIOTDSNM EQU   SIOTTSTC
SIOTTRKM EQU   SIOTTSTC
SIOTSSMG EQU   SIOTTSTC
SIOTSSGP EQU   SIOTTSTC
@NM00012 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
SIOTINFC EQU   SIOTTSTC
@NM00011 EQU   SIOTBYT3
SIOTDSID EQU   SIOTBYT3
S3400OFF EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00010 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00009 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
SIOTVLSP EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
SIOTTYPE EQU   INDMSIOT+3
SIOTDSKA EQU   INDMSIOT
VAROFS2  EQU   VAROFFS+1
VAROFS1  EQU   VAROFFS
MSGPSNME EQU   MSGNAMES+26
@NM00008 EQU   MSGNAMES+25
MSGSNAME EQU   MSGNAMES+17
@NM00007 EQU   MSGNAMES+16
@NM00006 EQU   MSGNAMES
@NM00003 EQU   OFLALCCN
@NM00002 EQU   DDNFMT+8
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00114 EQU   @RC00107
@RC00112 EQU   @RC00107
@RC00110 EQU   @RC00107
@RF00189 EQU   @RC00175
@RF00192 EQU   @RC00175
@RC00261 EQU   @RC00260
@ENDDATA EQU   *
         END   IEFAB48A,(C'PLS2029',0701,78054)
