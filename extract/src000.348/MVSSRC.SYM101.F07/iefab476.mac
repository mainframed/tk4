         TITLE 'IEFAB476 - ALLOC VIA THE ALGORITHM                     *
                        '
IEFAB476 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFAB476  74.215'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(8),0(@01)                               01S0001
         MODESET EXTKEY=SCHED
*CVRAVFLG = ON;                        /*CONSIDER AVAILABLE DEVICES  */
*CVRALFLG = OFF;                       /*DONT CONSIDER ALLOC'D DEVS  */
*CVROFFLG = OFF;                       /*DONT CONSIDER OFFLINE DEVS  */
*CVRFCALL = ON;                        /*FIRST CALL WITH THIS DATA   */
         L     @10,@PC00001                                     01S0022
         L     @10,ALCWAPTR(,@10)                               01S0022
         L     @10,ALGTABP(,@10)                                01S0022
         L     @01,ALGPARMP(,@10)                               01S0022
         OI    CVRAVFLG(@01),B'10010000'                        01S0022
         NI    CVRALFLG(@01),B'10011111'                        01S0022
*CALL IEFAB480(ALGPARMP);              /*USE ALGORITHM TO FIND COVER */
         ST    @10,@AL00001                                     01S0023
         L     @15,@CV00078                                     01S0023
         LA    @01,@AL00001                                     01S0023
         BALR  @14,@15                                          01S0023
*RFY REG15 RSTD;                                                01S0024
*IF REG15=ALLALOC × REG15=PARTALOC THEN /*ANY ERROR ?                */
         LTR   REG15,REG15                                      01S0025
         BZ    @RT00025                                         01S0025
         CH    REG15,@CH00064                                   01S0025
         BNE   @RF00025                                         01S0025
@RT00025 DS    0H                                               01S0026
*  DO;                                                          01S0026
*    RTNCODE = SUCCESS;                /*SET RETURN CODE TO 0        */
         SLR   RTNCODE,RTNCODE                                  01S0027
*    IF REG15 = PARTALOC THEN          /*DID ALG FULLY COVER ?       */
         CH    REG15,@CH00064                                   01S0028
         BNE   @RF00028                                         01S0028
*      PARTALG = ON;                   /*NO, INDICATE                */
         L     @14,@PC00001+4                                   01S0029
         OI    PARTALG(@14),B'00010000'                         01S0029
*    ELSE                              /*INDICATE FULLY COVERED      */
*      PARTALG = OFF;                                           01S0030
         B     @RC00028                                         01S0030
@RF00028 L     @14,@PC00001+4                                   01S0030
         NI    PARTALG(@14),B'11101111'                         01S0030
*    CALL IEFAB474(ALCWAPTR,MFUNCMAP); /*PUT MULTI-UNIT REQS ON 1 GEN*/
@RC00028 L     @14,@PC00001                                     01S0031
         ST    @14,@AL00001                                     01S0031
         LA    @14,@CB00069                                     01S0031
         ST    @14,@AL00001+4                                   01S0031
         L     @15,@CV00080                                     01S0031
         LA    @01,@AL00001                                     01S0031
         BALR  @14,@15                                          01S0031
*    RTNCODE = REG15;                                           01S0032
         LR    RTNCODE,REG15                                    01S0032
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - REARANGE                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - MARK REQS TO REARANGE + CALL IEFAB477         */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*     THIS ROUTINE MARKS ALL THE VOLUNIT ENTRIES WHICH THE         */
*/*     ALGORITHM INTERFACE TABLES INDICATE MUST BE REARRANGED. THEN */
*/*     THIS ROUTINE CALLS MODULE IEFAB477 TO ACTUALLY UNALLOCATE    */
*/*     THESE VOLUNIT ENTRIES.                                       */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*       THE ALGORITHM REQUEST LIST ENTRIES ARE SCANNED TO LOCATE   */
*/*       EACH ENTRY WHICH HAS A GROUP LIST ENTRY WHICH MUST BE      */
*/*       UNALLOCATED (CVRGRPAL > CVRGALL). WHEN SUCH A REQUEST      */
*/*       LIST ENTRY IS FOUND, THE VOLUNIT TABLE IS SCANNED TO MARK  */
*/*       ALL VU ENTRIES WHICH ARE ALLOCATED TO THE SAME UNIT AS THE */
*/*       REQUEST THE ALGORITHM WANTS REARRANGED.                    */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   PURPOSE - (SEE FUNCTION)                                       */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*      ALCWAPTR - PTR TO THE ALLOCATION WORK AREA (ALCWA)          */
*/*        VOLUNPTR - PTR TO THE VOLUNIT TABLE                       */
*/*        VOLUNSZE - SIZE OF THE VOLUNIT TABLE                      */
*/*        ALGTABP - PTR TO THE ALGORITHM INTERFACE TABLES           */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITIONS - VOLUNIT ENTRIES TO BE REARRANGED HAVE BEEN        */
*/*                SUCCESSFULLY UNALLOCATED.                         */
*/*                                                                  */
*/*   OUTPUT - NONE FROM THIS SEGMENT. SEE THE SPEC FOR MODULE       */
*/*            IEFAB477 FOR A DESCRIPTION OF ITS OUTPUT.             */
*/*                                                                  */
*/*   RETURN CODES - RTNCODE SET TO 0                                */
*/*                                                                  */
*/*                                                                  */
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */
*/*                                                                  */
*/*   CONDITIONS - GETMAIN ERROR BY IEFAB477                         */
*/*                                                                  */
*/*   OUTPUT - NONE FROM THIS SEGMENT. SEE THE SPEC FOR MODULE       */
*/*            IEFAB477 FOR A DESCRIPTION OF ITS OUTPUT.             */
*/*                                                                  */
*/*   RETURN CODES - RTNCODE SET TO 4                                */
*/*                                                                  */
*/********************************************************************/
*RFY CVRRQLST BASED(AREQPTR);                                   02S0033
*RFY CVRGPLST BASED(AGRPPTR);                                   02S0034
*NEEDUNAL = OFF;                       /*ASSUME IEFAB477 NOT NEEDED  */
         NI    NEEDUNAL,B'01111111'                             02S0035
*AREQPTR = ALGRQLTP;                   /*POINT TO FIRST ALG REQUEST  */
         L     @14,@PC00001                                     02S0036
         L     @14,ALCWAPTR(,@14)                               02S0036
         L     @14,ALGTABP(,@14)                                02S0036
         L     AREQPTR,ALGRQLTP(,@14)                           02S0036
*DO AREQCTR = ONE TO CVRNREQ;          /*SCAN ALL THE ALG'S REQUESTS */
         LA    AREQCTR,1                                        02S0037
         B     @DE00037                                         02S0037
@DL00037 DS    0H                                               02S0038
*  IF CVRSKFLG = OFF                   /*IS THE ALGORITHM TO CONSIDER*/
*      & CVRALLCT > ZERO THEN          /*..AND ALREADY ALLOCATED ?   */
         TM    CVRSKFLG(AREQPTR),B'10000000'                    02S0038
         BNZ   @RF00038                                         02S0038
         ICM   @14,3,CVRALLCT(AREQPTR)                          02S0038
         BNP   @RF00038                                         02S0038
*    DO;                               /*YES, DETERMINE IF REARRANGE */
*      GRPFOUND = OFF;                 /*GROUP TO UNALLOC NOT FOUND  */
         NI    GRPFOUND,B'01111111'                             02S0040
*      AGRPPTR = CVRGRPPT;             /*POINT TO FIRST GROUP LIST NT*/
         L     AGRPPTR,CVRGRPPT(,AREQPTR)                       02S0041
*      DO AGRPCTR = ONE TO CVRNGRP     /*SCAN ALL GROUP LIST ENTRIES */
*          WHILE GRPFOUND = OFF;                                02S0042
         LA    AGRPCTR,1                                        02S0042
         B     @DE00042                                         02S0042
@DL00042 TM    GRPFOUND,B'10000000'                             02S0042
         BNZ   @DC00042                                         02S0042
*        IF CVRGRPAL > ZERO            /*MORE ALLOC'D THAN ALG COVER */
*           & CVRGALL < CVRGRPAL THEN                           02S0043
         SLR   @14,@14                                          02S0043
         LH    @10,CVRGRPAL(,AGRPPTR)                           02S0043
         CR    @10,@14                                          02S0043
         BNH   @RF00043                                         02S0043
         CH    @10,CVRGALL(,AGRPPTR)                            02S0043
         BNH   @RF00043                                         02S0043
*          DO;                         /*YES, MUST BE REARANGED      */
*            NEEDUNAL = ON;            /*INDICATE IEFAB477 NEEDED    */
         OI    NEEDUNAL,B'10000000'                             02S0045
*            GRPFOUND = ON;            /*INDICATE GROUP TO UNALLOC   */
         OI    GRPFOUND,B'10000000'                             02S0046
*            CVRALLCT = ZERO;          /*ZERO COUNT ALLOC'D TO VU    */
         STH   @14,CVRALLCT(,AREQPTR)                           02S0047
*            CVRGCPTR->GRPEXCS=CVRGCPTR->GRPEXCS+CVRGRPAL; /*INCR
*                                        EXECS                       */
         L     @09,CVRGCPTR(,AGRPPTR)                           02S0048
         AH    @10,GRPEXCS(,@09)                                02S0048
         STH   @10,GRPEXCS(,@09)                                02S0048
*            CVRGRPAL = ZERO;          /*ZERO COUNT ALLOC'D FROM GRP */
         STH   @14,CVRGRPAL(,AGRPPTR)                           02S0049
*            VUPTR = VOLUNPTR;         /*POINT TO FIRST VU TABLE NTRY*/
         L     @14,@PC00001                                     02S0050
         L     @14,ALCWAPTR(,@14)                               02S0050
         L     VUPTR,VOLUNPTR(,@14)                             02S0050
*            DO VUCTR=ONE TO VOLUNSZE/LENGTH(VOLUNTAB); /*SCAN ALL VU*/
         LA    VUCTR,1                                          02S0051
         B     @DE00051                                         02S0051
@DL00051 DS    0H                                               02S0052
*              IF VOLUNTID=CVRVUPTR->VOLUNTID  /*SAME UNIT ALLOCD?   */
*                  & VOLALOC = ON THEN                          02S0052
         L     @14,CVRVUPTR(,AREQPTR)                           02S0052
         CLC   VOLUNTID(2,VUPTR),VOLUNTID(@14)                  02S0052
         BNE   @RF00052                                         02S0052
         TM    VOLALOC(VUPTR),B'10000000'                       02S0052
         BNO   @RF00052                                         02S0052
*                DO;                   /*YES,INDICATE VU TO BE UNALCD*/
*                  VUREALOC = ON;                               02S0054
         OI    VUREALOC(VUPTR),B'01000000'                      02S0054
*                END;                                           02S0055
*              ELSE;                   /*NOT THE SAME UNIT           */
@RF00052 DS    0H                                               02S0057
*              VUPTR = VUPTR + LENGTH(VOLUNTAB); /*PT TO NEXT VU NTRY*/
         AH    VUPTR,@CH00251                                   02S0057
*            END;                                               02S0058
         AH    VUCTR,@CH00039                                   02S0058
@DE00051 L     @14,@PC00001                                     02S0058
         L     @14,ALCWAPTR(,@14)                               02S0058
         L     @00,VOLUNSZE(,@14)                               02S0058
         SRDA  @00,32                                           02S0058
         D     @00,@CF00251                                     02S0058
         CR    VUCTR,@01                                        02S0058
         BNH   @DL00051                                         02S0058
*          END;                                                 02S0059
*        ELSE;                         /*NOT MORE ALLOC'D THAN COVER */
@RF00043 DS    0H                                               02S0061
*        AGRPPTR=AGRPPTR+LENGTH(CVRGPLST);/*PT TO NEXT GROUP LIST ENT*/
         AH    AGRPPTR,@CH00212                                 02S0061
*      END;                                                     02S0062
         AH    AGRPCTR,@CH00039                                 02S0062
@DE00042 CH    AGRPCTR,CVRNGRP(,AREQPTR)                        02S0062
         BNH   @DL00042                                         02S0062
@DC00042 DS    0H                                               02S0063
*    END;                                                       02S0063
*  ELSE;                               /*ALG REQ CANNOT BE REARRANGED*/
@RF00038 DS    0H                                               02S0065
*  AREQPTR = AREQPTR + LENGTH(CVRRQLST); /*POINT TO NEXT ALG REQUEST */
         AH    AREQPTR,@CH00251                                 02S0065
*END;                                                           02S0066
         AH    AREQCTR,@CH00039                                 02S0066
@DE00037 L     @14,@PC00001                                     02S0066
         L     @14,ALCWAPTR(,@14)                               02S0066
         L     @14,ALGTABP(,@14)                                02S0066
         L     @14,ALGPARMP(,@14)                               02S0066
         CH    AREQCTR,CVRNREQ(,@14)                            02S0066
         BNH   @DL00037                                         02S0066
*IF NEEDUNAL = ON THEN                 /*ANY REQS TO UNALLOC ?       */
         TM    NEEDUNAL,B'10000000'                             02S0067
         BNO   @RF00067                                         02S0067
*  DO;                                 /*YES, CALL IEFAB477          */
*    CALL IEFAB477 (ALCWAPTR,FUNC477); /*UNALLOC REQS TO BE REARANGED*/
         L     @14,@PC00001                                     02S0069
         ST    @14,@AL00001                                     02S0069
         LA    @14,@CB00065                                     02S0069
         ST    @14,@AL00001+4                                   02S0069
         L     @15,@CV00079                                     02S0069
         LA    @01,@AL00001                                     02S0069
         BALR  @14,@15                                          02S0069
*    RTNCODE = REG15;                  /*SAVE THE RETURN CODE        */
         LR    RTNCODE,REG15                                    02S0070
*  END;                                                         02S0071
*    IF RTNCODE = SUCCESS THEN         /*ANY ERRORS ?                */
@RF00067 LTR   RTNCODE,RTNCODE                                  01S0072
         BNZ   @RF00072                                         01S0072
*      DO;                             /*NO ERRORS, CONTINUE PROCESS */
*        CALL IEFAB478(ALCWAPTR,FUNCMAP); /*ALOC FROM GROUPS ALG
*                                         PICKED                     */
         L     @14,@PC00001                                     01S0074
         ST    @14,@AL00001                                     01S0074
         L     @14,@PC00001+4                                   01S0074
         ST    @14,@AL00001+4                                   01S0074
         L     @15,@CV00081                                     01S0074
         LA    @01,@AL00001                                     01S0074
         BALR  @14,@15                                          01S0074
*        RTNCODE = REG15;              /*SAVE RETURN CODE            */
         LR    RTNCODE,REG15                                    01S0075
*      END;                                                     01S0076
*    ELSE;                             /*ERROR DETECTED BY IEFAB477  */
@RF00072 DS    0H                                               01S0078
*  END;                                                         01S0078
*ELSE                                  /*ERROR DETECTED BY IEFAB480  */
*  DO;                                                          01S0079
         B     @RC00025                                         01S0079
@RF00025 DS    0H                                               01S0080
*    RTNCODE= FAILURE;                 /*SET ERROR RETURN CODE       */
         LA    RTNCODE,4                                        01S0080
*    REASONCD = GETMNERR;              /*INDICATE GETMAIN ERROR      */
         L     @14,@PC00001                                     01S0081
         L     @14,ALCWAPTR(,@14)                               01S0081
         L     @14,FAILRSCP(,@14)                               01S0081
         MVC   REASONCD(2,@14),@CH00067                         01S0081
*  END;                                                         01S0082
*RFY REG15 UNRSTD;                                              01S0083
@RC00025 DS    0H                                               01S0084
*RETURN CODE(RTNCODE);                 /*RETURN TO CALLER            */
         IC    @02,@OLDKEY                                      01S0084
         L     @13,4(,@13)                                      01S0084
         L     @00,@SIZDATD                                     01S0084
         LR    @01,@11                                          01S0084
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@05                                          01S0084
         L     @14,12(,@13)                                     01S0084
         LM    @00,@12,20(@13)                                  01S0084
         BR    @14                                              01S0084
*END IEFAB476                          /*END OF ALLOC-VIA-ALGORITHM  */
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A476SPEC)                                        *
*/*%INCLUDE SYSLIB  (A476DATA)                                        *
*/*%INCLUDE SYSLIB  (IEFZB423)                                        *
*/*%INCLUDE SYSLIB  (IEFZB425)                                        *
*/*%INCLUDE SYSLIB  (IEFZB426)                                        *
*/*%INCLUDE SYSLIB  (REARANGE)                                        *
*/*%INCLUDE SYSLIB  (REARSPEC)                                        *
*;                                                              01S0085
@DATA    DS    0H
@CH00039 DC    H'1'
@CH00067 DC    H'2'
@CH00064 DC    H'8'
@CH00212 DC    H'16'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@AL00001 DS    2A
IEFAB476 CSECT
         DS    0F
@CF00251 DC    F'28'
@CH00251 EQU   @CF00251+2
@DATD    DSECT
         DS    0D
GRPFOUND DS    BL1
NEEDUNAL DS    BL1
@OLDKEY  DS    AL1
IEFAB476 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00078 DC    V(IEFAB480)
@CV00079 DC    V(IEFAB477)
@CV00080 DC    V(IEFAB474)
@CV00081 DC    V(IEFAB478)
         DS    0D
@CB00065 DC    B'00000000'
@CB00069 DC    B'10000000'
IEFAB476 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB476 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
VUCTR    EQU   @09
RTNCODE  EQU   @05
AREQCTR  EQU   @08
AGRPCTR  EQU   @07
VUPTR    EQU   @06
AREQPTR  EQU   @04
AGRPPTR  EQU   @03
REG15    EQU   @15
REASONCD EQU   0
VOLUNTAB EQU   0
VOLSTAT  EQU   VOLUNTAB+6
VOLSTATA EQU   VOLSTAT
VOLSTATB EQU   VOLSTAT+1
VOLALOC  EQU   VOLSTATB
VOLSTATC EQU   VOLSTAT+2
VOLSTATD EQU   VOLSTAT+3
VUREALOC EQU   VOLSTATD
VOLUNTID EQU   VOLUNTAB+10
ALCWA    EQU   0
FAILRSCP EQU   ALCWA+20
CNTABLE  EQU   ALCWA+28
VOLUNPTR EQU   ALCWA+80
VOLUNSZE EQU   ALCWA+84
ALGTABP  EQU   ALCWA+88
INDICATE EQU   ALCWA+112
@NM00007 EQU   ALCWA+113
TIOTHDRP EQU   ALCWA+120
NAMES    EQU   0
ALGPTRS  EQU   0
ALGPARMP EQU   ALGPTRS
ALGRQLTP EQU   ALGPTRS+4
CVRPARM  EQU   0
CVRNREQ  EQU   CVRPARM+4
CVRFLG1  EQU   CVRPARM+8
CVRAVFLG EQU   CVRFLG1
CVRALFLG EQU   CVRFLG1
CVROFFLG EQU   CVRFLG1
CVRFCALL EQU   CVRFLG1
CVRRQLST EQU   0
CVRVUPTR EQU   CVRRQLST
CVRALLCT EQU   CVRRQLST+6
CVRMIN   EQU   CVRRQLST+10
CVRFLG2  EQU   CVRRQLST+16
CVRSKFLG EQU   CVRFLG2
CVRNGRP  EQU   CVRRQLST+18
CVRGRPPT EQU   CVRRQLST+20
CVRGPLST EQU   0
CVRGCPTR EQU   CVRGPLST
CVRGRPAL EQU   CVRGPLST+6
CVRGALL  EQU   CVRGPLST+8
CVRFLG3  EQU   CVRGPLST+12
GRPCOUNT EQU   0
GRPEXCS  EQU   GRPCOUNT+8
ALCWAPTR EQU   0
FUNCMAP  EQU   0
PARTALG  EQU   FUNCMAP
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00002 EQU   FUNCMAP
VOLSW    EQU   FUNCMAP
@NM00001 EQU   FUNCMAP
GRPWPTR  EQU   GRPCOUNT+12
GRPIDENT EQU   GRPCOUNT+10
GRPTOTAL EQU   GRPCOUNT+6
GRPOFFLN EQU   GRPCOUNT+4
GRPALLCT EQU   GRPCOUNT+2
GRPAVAIL EQU   GRPCOUNT
@NM00014 EQU   CVRGPLST+13
@NM00013 EQU   CVRFLG3
CVRFORCI EQU   CVRFLG3
CVRGSKP  EQU   CVRFLG3
CVRBOUND EQU   CVRGPLST+10
CVRGRPID EQU   CVRGPLST+4
@NM00012 EQU   CVRRQLST+26
CVRWUCBP EQU   CVRRQLST+24
@NM00011 EQU   CVRFLG2+1
CVRDUPLI EQU   CVRFLG2+1
CVRWMOVE EQU   CVRFLG2
CVRIGNOR EQU   CVRFLG2
CVRMULTI EQU   CVRFLG2
CVRSCRTH EQU   CVRFLG2
CVRFULL  EQU   CVRFLG2
CVRREACH EQU   CVRFLG2
CVRRUSED EQU   CVRFLG2
CVRGNEXT EQU   CVRRQLST+12
CVRPTS   EQU   CVRMIN
CVRNEED  EQU   CVRRQLST+8
CVRREQ1  EQU   CVRRQLST+4
@NM00010 EQU   CVRPARM+9
@NM00009 EQU   CVRFLG1
CVRGRPLK EQU   CVRPARM+6
CVRRQPTR EQU   CVRPARM
ALGGCNTP EQU   ALGPTRS+12
ALGGLSTP EQU   ALGPTRS+8
ALCPROCN EQU   NAMES+16
ALCSTEPN EQU   NAMES+8
ALCJOBN  EQU   NAMES
EXITPRMP EQU   ALCWA+144
CANCELP  EQU   ALCWA+140
WORK3MP  EQU   ALCWA+136
WMASK2P  EQU   ALCWA+132
WMASKPTR EQU   ALCWA+128
LGENLOCK EQU   ALCWA+124
TCBP     EQU   ALCWA+116
ALCWASID EQU   ALCWA+114
@NM00008 EQU   @NM00007
NODEVERR EQU   @NM00007
NEEDRCVY EQU   @NM00007
ALCWAREC EQU   @NM00007
WAITIGEN EQU   @NM00007
UNITRECS EQU   @NM00007
ALCWADUL EQU   INDICATE
ALCWISAM EQU   INDICATE
DSSUNIT  EQU   INDICATE
DSSTAPE  EQU   INDICATE
PRIVASUM EQU   INDICATE
INDREQU  EQU   INDICATE
INDRETRY EQU   INDICATE
INDWAIT  EQU   INDICATE
QMGRRBP  EQU   ALCWA+108
RIMTABCT EQU   ALCWA+104
RIMTABLN EQU   ALCWA+100
RIMTABP  EQU   ALCWA+96
ALGTABSZ EQU   ALCWA+92
@NM00006 EQU   ALCWA+78
LTUNITID EQU   ALCWA+76
TOTVOLUN EQU   CNTABLE+44
NUMREQS  EQU   CNTABLE+40
TOTREQS  EQU   CNTABLE+36
OTHEREQS EQU   CNTABLE+32
SUBSREQS EQU   CNTABLE+28
STRGREQS EQU   CNTABLE+24
PUBLREQS EQU   CNTABLE+20
PVTNREQS EQU   CNTABLE+16
SPECREQS EQU   CNTABLE+12
TPREQS   EQU   CNTABLE+8
VAMREQS  EQU   CNTABLE+4
DMYREQS  EQU   CNTABLE
EDTABPTR EQU   ALCWA+24
IOSLUTP  EQU   ALCWA+16
JSCBPTR  EQU   ALCWA+12
SIOT1P   EQU   ALCWA+8
FMAPPTR  EQU   ALCWA+4
WASIZE   EQU   ALCWA
VUGRID   EQU   VOLUNTAB+24
VUUCBP   EQU   VOLUNTAB+20
VOLSIOTP EQU   VOLUNTAB+16
VOLALGTP EQU   VOLUNTAB+12
VURCVYPR EQU   VOLSTATD
VUVLUNIQ EQU   VOLSTATD
VUDMUNIQ EQU   VOLSTATD
VUUNALSW EQU   VOLSTATD
VUDMNDAL EQU   VOLSTATD
VUDMNDOF EQU   VOLSTATD
VUMUGDON EQU   VOLSTATD
@NM00005 EQU   VOLSTATC
@NM00004 EQU   VOLSTATC
@NM00003 EQU   VOLSTATC
VOLURREQ EQU   VOLSTATC
VOLGRREQ EQU   VOLSTATC
VOLDAREQ EQU   VOLSTATC
VOLCOREQ EQU   VOLSTATC
VOLTAREQ EQU   VOLSTATC
VUAFFWRK EQU   VOLSTATB
VUVINELG EQU   VOLSTATB
VUDADSME EQU   VOLSTATB
VUDNALOC EQU   VOLSTATB
VUPROCED EQU   VOLSTATB
VDEVREQD EQU   VOLSTATB
VOLMNTD  EQU   VOLSTATB
VOLDEFER EQU   VOLSTATA
VUDADSM  EQU   VOLSTATA
VOLRESVE EQU   VOLSTATA
VOLNSHR  EQU   VOLSTATA
VOLSTG   EQU   VOLSTATA
VOLSPEC  EQU   VOLSTATA
VOLPRV   EQU   VOLSTATA
VOLPUB   EQU   VOLSTATA
VOLID    EQU   VOLUNTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFAB476,(C'PLS0506',0603,74215)
