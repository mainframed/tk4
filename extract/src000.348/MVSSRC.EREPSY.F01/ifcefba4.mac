***********************************************************************
**                                                                   **
**                           IFCEFBA4                                **
**                                                                   **
**       THIS EDIT TABLE PROVIDES SUPPORT FOR F-4       DASD         **
**    DEVICES.  IT IS CALLED BY IFCEEDIT AT THE REQUEST OF IFCEWOD1  **
**    WHEN           FORMAT 4 IS INDICATED.  IT PROVIDES THE FORMAT  **
**    FOR SENSE BYTES 8-23.                                          **
**       THE DETAIL FORMAT OF THE OBR RECORD IS SUPPLIED AS FIGURE   **
**    44 IN PART 4 OF "OS/VS ENVIRONMENTAL RECORDING EDITING AND     **
**    PRINTING (EREP) PROGRAM" (PUB. NO. GC28-0772).                 **
**                                                                   **
**-------------------------------------------------------------------**
**                                                                   **
**                      REGISTER ASSIGNMENT                          **
**    GPR #                USE                                       **
**    2            START OF OBR RECORD                               **
**    3            CURRENT CHARACTER POSITION IN PRINT BUFFER        **
**    4            @ DATA ITEM SPECIFIED IN ROUTINE MACRO            **
**    5-8          WORK REGISTERS FOR SPECIAL ROUTINES               **
**    9            BASE REGISTER FOR IFCEFBA4                        **
**    14           RETURN POINT FROM SPECIAL ROUTINES                **
**    15           SET TO 0 TO SUPPRESS PRINT OF CURRENT LINE        **
**                                                                   **
***********************************************************************
         GBLC  &DSECT,&CSECT
IFCEFBA4 CSECT
&CSECT   SETC  'IFCEFBA4'
&DSECT   SETC  'FBA4'
*
*                                  SENSE FORMAT 1
*
FBA4     DSECT
         DSGEN (CLASRC,8),(SYSREL,8),(SWITCHES,16)
         DSGEN (SPARE1,32)
         DSGEN (DAY,32)
         DSGEN (HOUR,32)
         DSGEN (SPARE2,8),(CPUSERL,24)
         DSGEN (CPUID,16),(SPARE3,16)
         DSGEN (JOBID1,32)
         DSGEN (JOBID2,32)
         DSGEN (FCCWCC,8),(FCCWDA,24)
         DSGEN (FCCWFL,8),(FCCW,8),(FCCWCT,16)
         DSGEN (CSWUS1,8),(CSWUS2,24)
         DSGEN (CSWUS3,8),(CSWUS4,8),(CSWUS5,16)
         DSGEN (DEVDPD,8),(SECCUA,24)
         DSGEN (DEVTYP1,16),(DEVTYP2,16)
         DSGEN (SPARE4,8),(CUA,24)
         DSGEN (IORET,16),(SBCNT,16)
         DSGEN (VOLLAB1,8),(VOLLAB2,16),(VOLLAB3,8)
         DSGEN (VOLLAB4,8),(VOLLAB5,8),(SPARE5,16)
         DSGEN (LSKAD1,8),(LSKAD2,16),(LSKAD3,8)
         DSGEN (LSKAD4,8),(LSKAD5,16),(LSKAD6,8)
         DSGEN (AHA1,32)
         DSGEN (AHA2,16),(SPARE6,16)
         DSGEN (SNB,1,0,23,0,7)
         EJECT
IFCEFBA4 CSECT
         USING *,R9
         USING FBA4,R2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L13      EQU   13
L14      EQU   14
L15      EQU   15
L16      EQU   16
L17      EQU   17
L18      EQU   18
L19      EQU   19
L20      EQU   20
L23      EQU   23
L24      EQU   24
L26      EQU   26
H0F      EQU   X'0F'
HE0      EQU   X'E0'
H80      EQU   X'80'
H40      EQU   X'40'
H20      EQU   X'20'
H10      EQU   X'10'
H21      EQU   X'21'
H23      EQU   X'23'
H25      EQU   X'25'
H29      EQU   X'29'
CLRSGN   EQU   X'F0'
HFF      EQU   X'FF'
         EJECT
         DC    A(ENTRIES)
         DC    CL8'IFCEFBA4'
XR9PTR   DC    F'0'
XLABELP  DC    F'0'
***********************************************************************
**                                                                   **
**                        SPECIAL ROUTINES                           **
**                                                                   **
**===================================================================**
*
*                                  SET HEX -PRINTS 1 CHAR HEX
*
SETHEX   STM   R5,R8,XSAVE         SAVE REGS
         LA    R8,CHARS            CHARACTER TABLE POINTER
         IC    R7,L0(R4)           PICK UP CHARACTER
         SLL   R7,L24              MOVE TO HI R7
         SR    R6,R6               CLEAR REGS
         SLDL  R6,L4               MOVE FOUR BITS
         AR    R6,R8               ADD OFFSET AND POINTER
         MVC   L0(L1,R3),L0(R6)    MOVE CHARACTER TO LINE
         SR    R6,R6               CLEAR AGAIN
         SLDL  R6,L4               MOVE LAST 4 BITS
         AR    R6,R8               COMPUTE OFFSET
         MVC   L1(L1,R3),L0(R6)    MOVE LAST CHARACTER
         B     RETURN
         SPACE 2
*
*                                  TEST TO SEE IF RECORD IS IN AR-149
*                                  FORMAT
*
SETCONV  TM    L0(R4),HEX02        HAS RECORD BEEN CONVERTED KEY32
         BCR   ON,R14              YES RETURN
         SR    R15,R15             NO CLEAR R15 FOR NO PRINT OF
         BR    R14                 LINE
ON       EQU   1
HEX02    EQU   X'02'
         SPACE 2
*
*                                  NO OP RETURN
*
SKIPPER  BR    R14
         SPACE 2
*
*                                  TO ADD SPACES ON LINE
*
SPACER2  LA    R3,L4(R3)
         BR    14
         SPACE 2
*
*                                  RESTORE REGISTERS USED BY ROUTINES
*                                  IN THIS MODULE
*
RETURN   LM    R5,R8,XSAVE         RESTORE REGS
         BR    R14                 RETURN
         SPACE 2
*
*                                  SET BINARY WITH R4 POINTING TO THE
*                                  CHAR
*
SETBIN   STM   R5,R8,XSAVE         SAVE REGS
         ICM   R7,X'8',L0(R4)      PICK UP CHAR TO PRINT
         LR    R8,R3               PRINT POS POINTER TO REG8
         LA    R5,L8               LOOP COUNT
SETBINA  SR    R6,R6               CLEAR REG 6
         SLDL  R6,L1               MOVE BIT TO R6
         STC   R6,L0(R8)           PUT IT INTO PRINT LINE
         MVZ   L0(L1,R8),CHAR0
         LA    R8,L1(R8)           MOVE POINTER TO NEXT POS
         BCT   R5,SETBINA          LOOP TILL 8 PRINTED
         B     RETURN
         SPACE 2
SETBIN1  STM   R5,R8,XSAVE         SAVE REGS
         ICM   R7,X'8',L0(R4)      PICK UP CHAR TO PRINT
         LR    R8,R3               PRINT POS POINTER TO REG 8
         SR    R6,R6               CLEAR REG 6
         SLDL  R6,L1               MOVE BIT TO REG 6
         STC   R6,L11(R8)
         OC    L11(L1,R8),CHAR0
         B     RETURN              RETURN
         SPACE 2
*                                  CONVERT COUNTERS FROM HEX TO DECIMAL
*                                  READY FOR PRINT
*
CONV1    STM   R5,R8,XSAVE         SAVE REGISTERS
         XC    READYP(L8),READYP   CLEAR UNPACK BUFFER
         SR    R6,R6               ZERO REG
         LH    R6,L0(R4)           LOAD DATA TO BE CONVERTED
         CVD   R6,READYP           CONVERT ERROR COUNTER TO DECI
         UNPK  READYP(L5),READYP+L5(L3) UNPACK DECI COUNT
         OI    READYP+L4,CLRSGN    CLEAR SIGN
         MVC   L0(L4,R3),READYP+L1 MOVE COUNTER READY TO PRINT
         B     RETURN
         SPACE 2
         DS    0F
XSAVE    DC    5F'0'
NONE     DC    CL6'NONE  '
CHARS    DC    C'0123456789ABCDEF'
CHAR0    DC    C'0'
**-------------------------------------------------------------------**
**                            PATCH AREA                             **
         DC    S(PATCH)
PATCH    DC    CL50' '
**-------------------------------------------------------------------**
         EJECT
         DS    0D
READYP   DC    CL8' '
ENTRIES  DS    0F
         DC    XL4'00010001'       FORMAT 1
         DC    XL4'00010001'       FORMAT 2
         DC    A(LABELS)           LABEL POINTER
         DC    H'0'                DISP
*
*                                  SKIP TO CHANNEL 1
*
         DC    X'01'
         DC    X'000B0B00'
         SPACE 5
         LINE  (12,15),(3,15),SKIP=1
         ROUTINE SNB80,SETHEX
         ROUTINE SNB90,SETHEX
         ROUTINE SNB100,SETHEX
         ROUTINE SNB110,SETHEX
         ROUTINE SNB120,SETHEX
         ROUTINE SNB130,SETHEX
         ROUTINE SNB140,SETHEX
         ROUTINE SNB150,SETHEX
         LABEL 'BYTE 8','BYTE 9','BYTE 10','BYTE 11','BYTE 12','BYTE 13C
               ','BYTE 14','BYTE 15'
         SPACE 2
         LINE  ,(1,15),SKIP=2
         LABEL '------------------------------------------------LOCATE *
               PARAMETERS----------------------------------------------*
               -------'
         SPACE 2
         LINE  (2,15),(1,15),SKIP=3
         ROUTINE SNB80,SETBIN
         ROUTINE SNB90,SETBIN
         ROUTINE SNB100,SETBIN
         ROUTINE SNB110,SETBIN
         ROUTINE SNB120,SETBIN
         ROUTINE SNB130,SETBIN
         ROUTINE SNB140,SETBIN
         ROUTINE SNB150,SETBIN
         LABEL ''
         SPACE 2
         LINE  (12,15),(3,15),SKIP=1
         ROUTINE SNB160,SETHEX
         ROUTINE SNB170,SETHEX
         ROUTINE SNB180,SETHEX
         ROUTINE SNB190,SETHEX
         ROUTINE SNB200,SETHEX
         ROUTINE SNB210,SETHEX
         ROUTINE SNB220,SETHEX
         ROUTINE SNB230,SETHEX
         LABEL 'BYTE 16','BYTE 17','BYTE 18','BYTE 19','BYTE 20','BYTE C
               21','BYTE 22','BYTE 23'
         SPACE 2
         LINE  ,(1,1),SKIP=2
         LABEL '----# BLOCKS TRANSFERRED----  -----------------------BL*
               OCK OFFSET-----------------------  -----FAULT SYMPTOM CO*
               DE-----'
         SPACE 2
         LINE  (2,15),(1,15),SKIP=3
         ROUTINE SNB160,SETBIN
         ROUTINE SNB170,SETBIN
         ROUTINE SNB180,SETBIN
         ROUTINE SNB190,SETBIN
         ROUTINE SNB200,SETBIN
         ROUTINE SNB210,SETBIN
         ROUTINE SNB220,SETBIN
         ROUTINE SNB230,SETBIN
         LABEL ''
         SPACE 2
HEXDUMP  DC    X'FF'
         DC    XL2'0070'
         DC    XL2'0018'
         DC    XL2'0000'
         EJECT
LABELS   DS    0F
         DC    C'$'
         LSTART
         END
