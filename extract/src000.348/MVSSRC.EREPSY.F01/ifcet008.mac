         GBLC  &DSECT,&CSECT
&DSECT   SETC  'B2715'
&CSECT   SETC  'IFCET008'
         TITLE 'IFCET008 - EDIT MODULE- LINKNAME=IFCET008'
*
IFCET008 CSECT
*
*              2715  EDIT & PRINT SECTION
*
         USING *,R9,R15
*
*              DSECT FOR TABLE
*
B2715E   DSECT
         DSGEN (BTIMES,56),                                            C
               (B0BIT0,1),(B0BIT1,1),(B0BIT2,1),(B0BIT3,1),            C
               (B0BIT4,1),(B0BIT5,1),(B0BIT6,1),(B0BIT7,1)
         DSGEN (B1BIT0,1),(B1BIT1,1),(B1BIT2,1),(B1BIT3,1),            C
               (B1BIT4,1),(B1BIT5,1),(B1BIT6,1),(B1BIT7,1),            C
               (B2BIT0,1),(B2BIT1,1),(B2BIT2,1),(B2BIT3,1),            C
               (B2BIT4,1),(B2BIT5,1),(B2BIT6,1),(B2BIT7,1),            C
               (B3BIT0,1),(B3BIT1,1),(B3BIT2,1),(B3BIT3,1),            C
               (B3BIT4,1),(B3BIT5,1),(B3BIT6,1),(B3BIT7,1),(BDUM,8)
*
*              DSECT FOR RECORD
*
B2715    DSECT
         DSGEN (KEY,8),(XRELN,8),(TSWS,16),(TID,8),(TDUM1,16),         C
               (TCHAR,8)
         DSGEN (DATE,32),(TIME,32)
         DSGEN (TDUM2,8),(TSER,24),(TMOD,16),(TDUM3,16)
         DSGEN (TCUA,16),(TSID,16)
*
*              HEADER CONSTENTS
*
IFCET008 CSECT
         DC    A(EDIT)             PTR TO EDIT ENTRIES
         DC    CL8'IFCET008'
R9PTR    DC    F'0'                CURRENT ENTRY PTR
LABELPTR DC    F'0'                CURRENT LABEL PTR
*
*
*
         EJECT
*
*
*              SPECIAL ROUTINES
*
*
*
*
LOOPER   STM   R14,R12,L12(R13)        SAVE REGS
         LA    R15,4095(R9)              SET SECOND BASE REG
         LA    R15,L1(R15)
         CLI   L11(R2),HEXFF       TABLE DONE
         BE    DONE                BR-YES
         AH    R2,H11              BUMP TO NXT SLOT
         ST    R2,L28(R13)              STORE NEW POINTER
         CLI   L7(R2),HEX80        IS THIS AREA STATIONS
         BL    REGULAR             BR-NO
         CLI   SWITCH,HEXFF        HAS HDR BEEN PUT OUT
         BE    AREASTNS            YES
         LA    R5,AREASTHD-L4
         LA    R6,AREASTLB         SET PTRS TO PUT OUT HEADER
LPRTN    STM   R5,R6,R9PTR
         B     RETURN
DONE     LA    R5,LOOPERST         SET PTRS
         LA    R6,LOOPERL          TO END  EDIT
         B     LPRTN
AREASTNS LA    R5,AREASTA-L4
         LA    R6,AREASTAL
         B     LPRTN
REGULAR  CLI   L7(R2),HEX70        TEST CODE 70
         BL    REGULAR1            BN
         LA    R5,SPECERR-L4       SET PTRS
         LA    R6,SPECERRL         TO SPECIAL
         B     LPRTN
REGULAR1 SR    R7,R7
         IC    R7,L7(R2)           PICK UP CODE
         SRL   R7,L4               DROP OFF LOW BITS
         CH    R7,H5
         BH    REG6                DETERINE
         BE    REG5
         CH    R7,H3               ENTRY
         BH    REG4
         BE    REG3                TYPE
         CH    R7,H1
         BH    REG2
         BE    REG1
REG0     LA    R5,DISKADPT-L4
         LA    R6,DISKLB
         B     LPRTN
REG1     LA    R5,D2790ADP-L4
         LA    R6,D2790L
         B     LPRTN
REG2     LA    R5,MPXADPT-L4
         LA    R6,MPXADPL
         B     LPRTN
REG3     LA    R5,ADPT2740-L4
         LA    R6,ADP2740L
         B     LPRTN
REG4     LA    R5,BSCADPT-L4
         LA    R6,BSCADPL
         B     LPRTN
REG5     EQU   *
REG6     EQU   *
         LA    R5,UKNO-4
         LA    R6,UKNOL
         B     LPRTN
         DROP  R15
*
*
*
SETR2    ST    R2,SAVE2       SAVE R2
         LA    R2,ENTRIES-L11           LOAD TBL PTR - 1 ENTRY
         STM   R14,R12,L12(R13)
         L     R3,SAVE2
         USING B2715,R3
         IC    R7,TCUA             PICK
         SLL   R7,L8               UP
         IC    R7,TCUA+L1          CUA
         SLL   R7,L16
         LA    R4,CUAFLD           SET PTR TO SAVE
         BAL   R8,SETUP
         IC    R7,TSID
         SLL   R7,L8               PICK UP
         IC    R7,TSID+L1          ID
         SLL   R7,L16
         LA    R4,IDFLD
         LA    R8,RETURN
SETUP    LA    R5,L4
SETUP1   SR    R6,R6
         SLDL  R6,L4                    MOVE 4 BITS
         LA    R2,CHARS(R6)             INDEX CHAR
         MVC   L0(L1,R4),L0(R2)         MOVE IT TO FLO
         LA    R4,L1(R4)                BUMP PTR
         BCT   R5,SETUP1                LOOP
         BR    R8
*
*
*
RESETR2  L     R2,SAVE2            RESET R2
         STM   R14,R12,L12(R13)
         SH    R2,H2
         MVC   SIZE(L2),L0(R2)     SET UP SIZE OF REC FROM REC BUFF
         XC    SWITCH(L1),SWITCH       CLEAR SWITCH
         B     RETURN
*
*
*        GATHER DATA RECORDS AND PUT INTO TABLE
*               TABLE ENTRY  42 MAY ENTRIES
*             *********************************************************
*             * DAY * DAY * DAY * TME * TME * TME * TME * 4 BYTES DATA*
*             *********************************************************
*
SETTABLE STM   R14,R12,L12(R13)         SAVE INPUT REGS
         LR    R5,R2                    SET REC PTR TO SIZE OF INPUT
         SH    R5,H2                    BY BACKING OFF 2 BYTES
         LH    R5,L0(R5)                PICK UP RECORD SIZE
         SH    R5,H26                   DEC BY NUMBER OF HDR BYTES
         SR    R4,R4
         D     R4,F35                   DIVIDE TO GET NUMBER OF 35BYTE
*                                       ENTRIES IN R5
         LA    R4,L28(R2)               SET R4 TO ERROR ENTRIES
         LA    R6,ENTRIES               SET R6 TO TABLE
         MVI   L0(R6),HEXFF             SET ENTRIES AREA TO FFFF
         MVC   L1(L249,R6),L0(R6)
         MVC   L250(L214,R6),L0(R6)
*
         LTR   R5,R5                    DONE
         BZ    RETURN                   BR IF ZERO
SETTBL01 MVC   DAYTIME(L7),L0(R4)       SET UP DAYTIME
         LA    R4,L7(R4)                BUMP OVER DAY TIME
         LA    R8,L7                    SET ERROR COUNT
*
*
SETTBL02 CLC   L0(L4,R4),CHARFF         IS ENTRY DUMMY
         BE    SETTBL03                 BR-YES
         CLC   L0(L4,R4),CHAR00         DUMMY ENTRY
         BE    SETTBL03                 BR YES
         MVC   L0(L7,R6),DAYTIME        SET UP ENTRY DAY-TIME
         MVC   L7(L4,R6),L0(R4)                      4 BYTE ENTRY
         LA    R6,L11(R6)               BUMP
SETTBL03 LA    R4,L4(R4)                    PTRS
         BCT   R8,SETTBL02              LOOP 7 TIMES
*
*
         BCT   R5,SETTBL01              LOOP TILL ALL 42 ENTRIES DONE
*              TABLE NOW TO BE  SORTED
*              R6=PTR TO LAST ENTRY+11 PTRB
         LA    R4,ENTRIES-L11           SET PTR A
*
SORTTBL1 LA    R4,L11(R4)               UP PTRA BY 11
         LA    R5,L11(R4)               UP PTRC TO PTR A+11
         CR    R4,R6                    IS PTRA=PTRB(R6)
         BE    RETURN                   YES SORT DONE
SORTTBL2 CLC   L7(L1,R4),L7(R5)         COMPARE ENTRIES  *  DDDTTTTID
         BL    SORTTBL3                 NO SWAP NEEDED
         BH    SWAP                     SWAP DATES & DATA
         CLC   L0(L7,R4),L0(R5)         TEST DATES ON EQUAL RECS
         BNH   SORTTBL3                 NO NEED TO SWAP
SWAP     EQU   *
         XC    L0(L11,R4),L0(R5)
         XC    L0(L11,R5),L0(R4)        SWAP ENTRIES
         XC    L0(L11,R4),L0(R5)
SORTTBL3 LA    R5,L11(R5)               BUMP PTR TO NXT ENTRY
         CR    R5,R6                    THIS PASS DONE
         BL    SORTTBL2                 BR-NO
         B     SORTTBL1                 BR-YES
*
*
RETURN   LM    R14,R12,L12(R13)
SKIPPER  BR    R14
*
*
SETHEAD  STM   R14,R12,L12(R13)
         MVC   L30(L30,R3),HDR               MOVE PRESET HDR
         MVC   L64(L3,R3),DAY                MOVE DAY LABEL
         MVC   L79(L4,R3),TIMES                   TIME LBEL
         MVC   L70(L3,R3),L0(R4)             MOVE DAY VALUE
         MVC   L85(L2,R3),L3(R4)             MOVE HRS
         MVI   L87(R3),DOT                   MOVE OUT
         MVC   L88(L2,R3),L5(R4)             MOVE MIN VALUE
         B     RETURN
*
SETLBLS  STM   R14,R12,L12(R13)              SAVE REGS
         SR    R5,R5
         IC    R5,L0(R4)                     PICK UP CODE
         SLL   R5,L28                        DROP OFF HI-ORDER 7
         SRL   R5,L26                        MUNT LOW ORDER BY 4
         L     R5,ADCONS(R5)                 PICK UP LABEL ADCON
         ST    R5,LABELPTR
         B     RETURN
ADCONS   DC    A(LBL70)
         DC    A(LBL71)
         DC    A(LBL72)
         DC    A(LBL73)
         DC    A(LBL74)
         DC    A(LBL75)
         DC    A(LBL76)
         DC    A(LBL77)
         DC    A(LBL78)
         DC    A(LBL79)
         DC    A(LBL7A)
         DC    A(LBL7B)
         DC    A(LBL7C)
         DC    A(LBL7D)
         DC    A(LBL7E)
         DC    A(LBL7F)
SETHEX   STM   R14,R12,L12(R13)         SAVE REGS
         LA    R6,L2                    NUMB OF CHAR
SETHEX1  IC    R5,L0(R4)                PICK UP CHAR
         SLL   R5,L24                   PUT IN HI POS OF R5
SETHEX2  SR    R4,R4                    CLEAR 4
         SLDL  R4,L4                    SHIFT 4 BITS
         LA    R7,CHARS(R4)             SET PTR TO CHAR REP BY 4 BITS
         MVC   L0(L1,R3),L0(R7)         MOVE CHAR TO PRINT LINE
         LA    R3,L1(R3)                BUMP PRNT PTR
         BCT   R6,SETHEX2               LOOP
         B     RETURN
SETHEXL  STM   R14,R12,L12(R13)
         LA    R6,L1                    NUMB OF CHAR
         B     SETHEX1                  BR
SETHEXR  STM   R14,R12,L12(R13)
         LA    R6,L1                    NUMB OF CHAR
         IC    R5,L0(R4)                PICK UP BYTE
         SLL   R5,L28                   SHIFT TO LOW 4 BITS
         B     SETHEX2
*
SETSW    EQU   *
         MVI   SWITCH,HEXFF
         BR    R14
*
*
SETDOT0  STM   R14,R12,L12(R13)
SETDOTA  LA    R4,L7(R3)
SETDOT1  LA    R5,L12
SETDOT2  MVI   L0(R4),DOT
         LA    R4,L10(R4)
         BCT   R5,SETDOT2
         B     RETURN
*
*
*
TESTSW   STM   R14,R12,L12(R13)
         CLI   L7(R4),HEXF0        IS IT SPEC AS
         BE    TESTSW1             YES
         CLI   L7(R4),HEXF1        IS IT SPEC AS
         BE    TESTSW1             YES
         SR    R5,R5
         IC    R5,L9(R4)           PICK UP CODE
         SRL   R5,L4               DROP OFF LOW 4 BITS
         CH    R5,H10              GTR THAN 10
         BNH   TESTSW2             BR-NO
TESTSW1  LA    R5,L10              SET TO 10
TESTSW2  MH    R5,H10              MULT BY 10 TO GIVE BUFF OFFSET
         LA    R6,L1(R3)           COL START
         AR    R6,R5               COMPUTE ADDR
         MVC   L0(L3,R6),L0(R4)    MOVE
         MVC   L4(L2,R6),L3(R4)    IN
         MVI   L6(R6),DOT          DAY &
         MVC   L7(L2,R6),L5(R4)    TIME
         LR    R4,R3                    SET UP  FOR DOTS
         B     SETDOT1
*
*
SETDOTS  STM   R14,R12,L12(R13)
         CLI   L0(R4),HEXF0             IS IT SPECIAL
         BE    SETDOTSA                 YES
         CLI   L0(R4),HEXF1        IS IT SPECIAL
         BE    SETDOTSA                 YES
         SR    R5,R5                    CLEAR REG
         IC    R5,L2(R4)                PICK UP CODE
         SRL   R5,L4                    DROP OFF LOW 4
         CH    R5,H10                   IS IT 10
         BNH   SETDOTSB                 BR NOT HI
SETDOTSA LA    R5,L10                   SET TO 10
SETDOTSB SLL   R5,L2                    MULTI X 4
         B     TABLE(R5)                B TO TABLE
TABLE    B     AS0
         B     AS1
         B     AS2
         B     AS3
         B     AS4
         B     AS5
         B     AS6
         B     AS7
         B     AS8
         B     AS9
         B     ASA
AS0      EQU   *
AS1      EQU   *
AS8      EQU   *
         LA    R8,L2          SET INDICATOR
         B     ASALL
AS2      EQU   *
AS3      EQU   *
AS4      EQU   *
AS5      EQU   *
AS9      EQU   *
         LA    R8,L3               SET INO
         B     ASALL
AS6      EQU   *
AS7      EQU   *
         SR    R8,R8               SET IND
         B     ASALL
ASA      EQU   *
         LA    R8,L4
         IC    R7,L2(R4)           PICK UP NXT
         SLL   R7,L8               SHIFT
         IC    R7,L3(R4)           PICK UP NXT
         SLL   R7,L16
         B     ASALL1
ASALL    IC    R7,L2(R4)           PICK UP CHAR
         SLL   R7,L8               SHIFT
         IC    R7,L3(R4)           PICK UP NXT
         SLL   R7,L20              SHIFT TO HI
ASALL1   SRL   R5,L2                    DIVIDE BY 4
         MH    R5,H10              COMPUTER OFFSET
         LA    R4,L9(R3)           COL START
         AR    R4,R5
         LTR   R8,R8               IS CODE 0
         BZ    NOTAPP              BR-YES
         CH    R8,H3               TEST ENTRY
         BE    ASALL3
         BH    ASALL4
         LA    R4,L4(R4)           BUMP PTR
         B     ASALL2
ASALL3   SR    R6,R6
         SLDL  R6,L4               BRING 4 BITS TO 6
         LA    R2,CHARS(R6)        INDEX CHAR
         MVC   L0(L1,R4),L0(R2)    MOVE TO LINE
         LA    R4,L4(R4)
ASALL2   SR    R6,R6
         SLDL  R6,L4               MOVE NXT 4 BITS
         LA    R2,CHARS(R6)        INDEX CHAR
         MVC   L0(L1,R4),L0(R2)
         SR    R6,R6
         SLDL  R6,L4
         LA    R2,CHARS(R6)
         MVC   L1(L1,R4),L0(R2)
         B     SETDOTA
ASALL4   LA    R5,L2                    LOOP COUNTER
ASALL4A  SR    R6,R6
         SLDL  R6,L4
         LA    R2,CHARS(R6)
         MVC   L0(L1,R4),L0(R2)
         SR    R6,R6
         SLDL  R6,L4
         LA    R2,CHARS(R6)
         MVC   L1(L1,R4),L0(R2)
         LA    R4,L3(R4)                BUMP POINTER
         BCT   R5,ASALL4A
         B     SETDOTA
NOTAPP   BCTR  R4,R0
         MVC   L0(L9,R4),NOTAPPLY
         B     SETDOTA
*
*
*        EQUATES
*
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L16      EQU   16
L20      EQU   20
L24      EQU   24
L26      EQU   26
L28      EQU   28
L30      EQU   30
L64      EQU   64
L70      EQU   70
L79      EQU   79
L85      EQU   85
L87      EQU   87
L88      EQU   88
L214     EQU   214
L249     EQU   249
L250     EQU   250
*
DOT      EQU   C'.'
HEX70    EQU   X'70'
HEX80    EQU   X'80'
HEXF0    EQU   X'F0'
HEXF1    EQU   X'F1'
HEXFF    EQU   X'FF'
*
SAVE2    DS    F
XSAVE    DS    2D
WORK     DS    1D
NONE     DC    CL4'NONE'
F35      DC    F'35'
H1       DC    H'1'
H2       DC    H'2'
H3       DC    H'3'
H5       DC    H'5'
H10      DC    H'10'
H11      DC    H'11'
H26      DC    H'26'
H35      DC    H'35'
DAYTIME  DC    CL7' '
SWITCH   DC    C' '
CHARFF   DC    X'FFFFFFFFFFFF'
CHAR00   DC    XL4'00'
DAY      DC    CL3'DAY'
TIMES    DC    CL4'TIME'
NOTAPPLY DC    C'NOT APPLY'
*
XLABELP  EQU   LABELPTR
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
LBL73    DC    C'ERROR CODE -*AREA STATION DIAGNOSTICS WERE REQUESTED$'
         DC    C'AREA STATION ADDRESS$'
LBL70    DC    C'ERROR CODE -*ERROR COUNTERS WERE SET TO ZERO$'
         DC    CL40' '
         DC    C'$'
LBL71    DC    C'ERROR CODE -*'
         DC    C'ERROR COUNTER THRESHOLD WAS REACHED$'
         DC    C'AREA STATION ADDRESS$'
LBL72    DC    C'ERROR CODE -*'
         DC    C'ERROR SCAN WAS REQUESTED$'
         DC    C'AREA STATION ADDRESS$'
LBL74    DC    C'ERROR CODE -*'
         DC    C'AREA STATION EXERCISOR WAS REQUESTED$'
         DC    C'AREA STATION ADDRESS$'
LBL75    DC    C'ERROR CODE -*'
         DC    C'BSC ONLINE TEST WAS REQUESTED$'
         DC    C'ROUTINE NUMBER$'
LBL78    DC    C'ERROR CODE -*RECORD LENGTH CHECK ERROR$'
         DC    CL40' '
         DC    C'$'
LBL79    DC    C'ERROR CODE -*VALID CHARACTER CHECK ERROR$'
         DC    CL40' '
         DC    C'$'
LBL7A    DC    C'ERROR CODE -*INVALID TRANSACTION REQUEST$'
         DC    CL40' '
         DC    C'$'
LBL76    EQU   *
LBL77    EQU   *
LBL7B    EQU   *
LBL7C    EQU   *
LBL7D    EQU   *
LBL7E    EQU   *
LBL7F    EQU   *
         DC    C'ERROR CODE -*UNSUPPORTED SPECIAL ERROR CODE$'
         DC    CL40' '
         DC    C'$'
CHARS    DC    C'0123456789ABCDEF'
HDR      DS    0CL30
         DC    CL5'CUA'
CUAFLD   DC    CL10' '
         DC    CL10'2715 ID'
IDFLD    DC    CL5' '
ENTRIES  DS    CL464
         DC    11X'FF'
         EJECT
*        EDIT  ENTRIES
*
EDIT     DS    0F
         DC    XL4'00'
         DC    XL4'00'
         DC    A(LABELS)
         DC    XL2'00'
*
*
*
         DC    X'01'
         DC    X'000B8B00'         SKIP TO CHANNEL 1
         LABEL ' '
*
         LINE       (1,1),(1,1),SKIP=2
         ROUTINE    KEY,SKIPPER
         LABEL      '2715 ERROR LOG DATA EDITING AND PRINTING SECTION'
         LINE
         ROUTINE    KEY,SKIPPER
         LABEL      'MODEL-UNIVERSAL'
         LINE  (10,)
         SYSRELN    XRELN,1                                    @D35UGFD
         LABEL      ''                                         @D35UGFD
         LINE  (1,1)
         ROUTINE    KEY,SKIPPER
*                                                                XM0793
         LABEL '---RECORD ENTRY SOURCE -MDR-           TYPE- TELEPROCESS
               SING'                                             XM0793
         LINE       ,,SKIP=1
         ROUTINE    KEY,SKIPPER
         LABEL      'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*
               XX'
*
         LINE
         ROUTINE    KEY,SETTABLE
         ROUTINE    KEY,SETR2
         LABEL      ' '
&DSECT   SETC  'B2715E'
*
         LINE
LOOPERST EQU   *
         ROUTINE    B0BIT0,LOOPER
LOOPERL  LABEL      ' '
         LINE
         ROUTINE    B0BIT0,RESETR2
         LABEL      ' '
         DC    X'FF'
SIZE     DC    XL2'00'
         DC    XL2'0018'
         DC    XL2'00'
*
*
         EJECT
*
*                        UKNOWN CODE
UKNOL    LABEL ' '
UKNO     EQU   *
         LINE       (1,1),(1,1)
         ROUTINE    BTIMES,SETHEAD
         LABEL      'UKNOWN ERROR CODE'
*
         LINE
         ROUTINE    BTIMES,SKIPPER
         LABEL      ''
         LINE       (30,4),(1,1),SKIP=1
         ROUTINE    B0BIT0,SETHEX
         ROUTINE    B1BIT0,SETHEX
         ROUTINE    B2BIT0,SETHEX
         ROUTINE    B3BIT0,SETHEX
         LABEL      'ERROR ENTRY'
*
         LINE
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
         EJECT
         LINE      (20,20),(20,20),SKIP=3
*
*              BSC ADAPTER
BSCADPL  LABEL ' '
BSCADPT  EQU   *
         LINE       (1,1),(1,1),SKIP=1
         ROUTINE    BTIMES,SETHEAD
         LABEL      'BSC ADAPTER ERROR LOG'
*
         LINE
         ROUTINE    BTIMES,SKIPPER
         LABEL      ''
         LINE       (33,35),(5,35),SKIP=1
         ROUTINE    B0BIT0,SKIPPER
         LABEL      'MODE OF OPERATION','BSC STATUS','BSC ADAPTER STATU*
               S'
*
         LINE       ,(7,35)
         BIN        B0BIT5
         BIN        B1BIT0
         BIN        B3BIT0
         LABEL      'INITIALIZATION','LOST OPERATIONAL COND','DATA SET *
               READY OFF'
*
         LINE
         BIN        B0BIT6
         BIN        B1BIT3
         BIN        B3BIT1
         LABEL      'TRANSMIT TEXT','TEXT TIMEOUT','CLEAR TO SEND OFF'
*
         LINE
         BIN        B0BIT7
         BIN        B1BIT4
         BIN        B3BIT2
         LABEL      'RECEIVE TEXT','N - RETRYS','OVERRUN'
*
         LINE
         ROUTINE    B0BIT0,SKIPPER
         BIN        B1BIT5
         BIN        B3BIT3
         LABEL      ' ','INVALID CHARACTER','LOST BIT SERVICE'
*
         LINE       ,(5,35)
         ROUTINE    B0BIT0,SKIPPER
         BIN        B1BIT6
         BIN        B3BIT4
         LABEL      'HARDWARE ERROR','  DATA CHECK','  TRANSMIT'
*
         LINE       ,(7,35)
         BIN        B2BIT3
         BIN        B1BIT7
         BIN        B3BIT5
         LABEL      'XFER ADAPT WORD LATCH','RESPONSE TIMEOUT','DATA TE*
               RMINAL READY'
*
         LINE       (33,70),(7,70)
         BIN        B2BIT4
         BIN        B3BIT6
         LABEL      'BSC CHARACTER OVERRUN','REQUEST TO SEND'
*
         LINE
         BIN        B2BIT5
         BIN        B3BIT7
         LABEL      'ADAPTER IN PARITY ERROR','DATA CARRIER OFF'
*
         LINE
         BIN        B2BIT6
         LABEL      'CSBO PARITY ERROR'
*
         LINE
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
         EJECT
         LINE      (20,20),(20,20),SKIP=3
*
*
*              2740 ADPTER ERROR LOG
ADP2740L LABEL ' '
ADPT2740 EQU   *
         LINE       (1,1),(1,1),SKIP=1
         ROUTINE    BTIMES,SETHEAD
         LABEL      '2740 ADAPTER ERROR LOG'
*
         LINE
         ROUTINE    BTIMES,SKIPPER
         LABEL      ''
         LINE       (32,36),(5,35),SKIP=1
         ROUTINE    B1BIT0,SETHEX
         LABEL      'ROUTINE CODE','HARDWARE ERROR'
*
         LINE       ,(5,37)
         ROUTINE    B0BIT0,SKIPPER
         BIN        B2BIT3
         LABEL      ' ','KEYBOARD BIT OVERRUN'
*
         LINE
         ROUTINE    B3BIT0,SETHEX
         BIN        B2BIT5
         LABEL      'PROGRAM ERROR CODE','ADAPTER INPUT PARITY ERR'
*
         LINE
         ROUTINE    B0BIT0,SKIPPER
         BIN        B2BIT6
         LABEL      ' ','CSBO PARITY ERROR'
*
         LINE
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
*
         EJECT
         LINE      (20,20),(20,20),SKIP=3
*
*               MPX ADAPTER ERROR  LOG
MPXADPL  LABEL ' '
MPXADPT  EQU   *
         LINE       (1,1),(1,1),SKIP=1
         ROUTINE    BTIMES,SETHEAD
         LABEL      'MPX ADAPTER ERROR LOG'
*
         LINE
         ROUTINE    BTIMES,SKIPPER
         LABEL      ''
         LINE       ,(5,36),SKIP=1
         ROUTINE    B3BIT0,SKIPPER
         LABEL      'ERROR STATUS'
*
         LINE       (33,1),(7,1)
         BIN        B3BIT0
         LABEL      'PROGRAM CHECK'
*
         LINE
         BIN        B3BIT2
         LABEL      'I/O BUS OUT CHECK'
*
         LINE
         BIN        B3BIT3
         LABEL      'EQUIPTMENT CHECK'
*
         LINE
         BIN        B3BIT5
         LABEL      'XFER CHECK'
*
         LINE
         BIN        B3BIT7
         LABEL      'I/O BUS IN CHECK'
*
         LINE
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
*
         EJECT
         LINE      (20,20),(20,20),SKIP=3
*
*              DISK ADAPTER    CODE 00
DISKLB   LABEL ' '
DISKADPT EQU   *
         LINE       (1,1),(1,1),SKIP=1
         ROUTINE    BTIMES,SETHEAD
         LABEL      'DISK ADAPTER ERROR LOG'
*
         LINE
         ROUTINE    BTIMES,SKIPPER
         LABEL      ''
         LINE       (66,1),(5,36),SKIP=1
         ROUTINE    B0BIT4,SETHEXR
         ROUTINE    B1BIT0,SETHEX
         LABEL      'ERROR STATUS','SECTOR ADDRESS'
*
         LINE       (33,35),(7,1)
         BIN        B2BIT0
         LABEL      'READ CHECK'
*
         LINE
         BIN        B2BIT1
         LABEL      'CSBI PTY ERROR-DATA'
*
         LINE       ,(7,33)
         BIN        B2BIT2
         LABEL      'CSBI PTY ERROR-ADDR','READ/WRITE OP CODE STATUS'
*
         LINE       ,(7,35)
         BIN        B2BIT3
         BIN        B3BIT0
         LABEL      'DATA REG PARITY CK','READ LABEL'
*
         LINE
         BIN        B2BIT4
         BIN        B3BIT1
         LABEL      'ADDR REG PARITY','WRITE'
*
         LINE
         BIN        B2BIT5
         BIN        B3BIT2
         LABEL      'OVERRUN','READ CHECK'
*
         LINE
         BIN        B2BIT6
         BIN        B3BIT3
         LABEL      'WRITE SELECT CHECK','READ'
*
         LINE
         BIN        B2BIT7
         LABEL      'MODULO 4/LENGTH CK'
*
*
*
         LINE
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
*
         EJECT
         LINE      (20,20),(20,20),SKIP=3
*
*
*
*              SPECIAL
SPECERRL LABEL ' '
SPECERR  EQU   *
         LINE       (1,1),(1,1),SKIP=2
         ROUTINE    BTIMES,SETHEAD
         LABEL      'SPECIAL ERROR LOG'
*
         LINE       (18,13),(5,35)
         ROUTINE    B0BIT0,SETHEX
         ROUTINE    B0BIT0,SETLBLS
         LABEL      ' '
*
         LINE
         ROUTINE    B0BIT0,SKIPPER
         ROUTINE    B1BIT0,SETHEX
         LABEL      ' '
*
         LINE
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
*
         EJECT
         LINE      (20,20),(20,20),SKIP=3
*
*              AREA STATION  HEADER
AREASTLB LABEL ' '
AREASTHD EQU   *
         LINE       (1,1),(1,1),SKIP=1
         ROUTINE    BTIMES,SETHEAD
         LABEL      'AREA STATION ERROR LOG'
*
         LINE
         ROUTINE    BTIMES,SKIPPER
         LABEL      ''
         LINE       ,(4,1)
         ROUTINE    B0BIT0,SKIPPER
         LABEL      'ALL ERROR ENTRIES ARE TWO LINES. DAY AND TIME ON 1*
               ST LINE AND ERROR DATA, WHERE APPLICABLE, ON 2ND LINE.'
*
         LINE       ,(1,1),SKIP=1
         ROUTINE    B0BIT0,SKIPPER
         LABEL      'ERROR TYPE-(0)-------(1)-------(2)-------(3)------*
               -(4)-------(5)-------(6)-------(7)-------(8)-------(9)--*
               --(SPECIAL)-'
*
         LINE
         ROUTINE    B0BIT0,SKIPPER
         LABEL      'XMITD  .AREA STA.. DEVICE  . INVALID .CHANGE IN.CH*
               ANGE IN.END REQST. RECEIVE .  NULL   . RECORD  .  VALID *
                .REC.ADDR .'
*
         LINE
         ROUTINE    B0BIT0,SKIPPER
         LABEL      'ADDR.  . ADDRESS . ADDRESS .AREA STA..DATA BYTE. S*
               TATUS  . STATUS  .  DATA   .ACKNWLOG . LGTH CK .CHARACTE*
               R.         .'
*
         LINE
         ROUTINE    B0BIT0,SKIPPER
         LABEL      '       .  ERROR  .  ERROR  . RESPONSE.         .  *
               BYTE   .  ERROR  . OVERRUN . OVERRUN .  ERROR  . CK ERRO*
               R. AS DEV  .'
*
         LINE
         ROUTINE    B0BIT0,SKIPPER
         LABEL      'AS DEV .  -----  .  -----  .  -----  .  -----  .  *
               -----  .  -----  .  -----  .  -----  .  -----  .  ----- *
                .  -----  .'
*
         LINE
         ROUTINE    B0BIT0,SETSW
         LABEL      '       .         .         .         .         .  *
                      .         .         .         .         .        *
                .         .'
*
*
         EJECT
*
*              AREA STATIONS
AREASTAL LABEL ' '
AREASTA  EQU   *
         LINE       (2,3),(1,1),SKIP=1
         ROUTINE    B0BIT0,SETHEX
         ROUTINE    B1BIT0,SETHEX
         ROUTINE    BTIMES,TESTSW
         LABEL      ''
*
         LINE       (1,1),(1,1)
         ROUTINE    B0BIT0,SETDOTS
         LABEL      ' '
*
         LINE
         ROUTINE    B0BIT0,SETDOT0
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
         EJECT
*
         LINE      (20,20),(20,20),SKIP=3
*              2790 ADAPTER
D2790L   LABEL ' '
D2790ADP EQU   *
         LINE       (1,1),(1,1),SKIP=1
         ROUTINE    BTIMES,SETHEAD
         LABEL      '2790 ADAPTER ERROR LOG'
*
         LINE
         ROUTINE    BTIMES,SKIPPER
         LABEL      ''
         LINE       ,(5,1),SKIP=1
         ROUTINE    B1BIT0,SKIPPER
         LABEL      'PC ADAPTER STATUS'
*
         LINE       (33,35),(7,33)
         BIN        B1BIT0
         LABEL      'TRANSMIT ACTIVE FRAME','PARITY ERRORS'
*
         LINE       (33,35),(7,33)
         BIN        B1BIT1
         BIN        B2BIT0
         LABEL      'RECEIVE CHARACTER SYNC','  ACCUMULATOR HIGH',     X
               'SERVICE REQUESTS'
*
         LINE       ,(7,35)
         BIN        B1BIT2
         BIN        B2BIT1
         BIN        B3BIT0
         LABEL      'LOOP ACTIVE','ACCUMULATOR LOW','RECEIVE'
*
         LINE
         BIN        B1BIT3
         BIN        B2BIT2
         BIN        B3BIT1
         LABEL      'RECEIVE ACTIVE FRAME','TRANSMIT SHIFT REGISTER',  X
               'TRANSMIT'
         LINE
*
         ROUTINE    B0BIT0,SKIPPER
         BIN        B2BIT3
         LABEL      ' ','RECEIVE SHIFT REGISTER'
*
         LINE       ,(5,35)
         ROUTINE    B0BIT0,SKIPPER
         BIN        B2BIT7
         BIN        B3BIT4
         LABEL      'SEGMENT STATUS','  CONTROL REGISTER 2',           X
               'PC NOT RECEIVING FRAME'
*
         LINE
         BIN        B1BIT4
         ROUTINE    B0BIT0,SKIPPER
         BIN        B2BIT4
         LABEL      '  SEGMENT A ACTIVE',' ','TRANSMIT FRAME OVERRUN'
*
         LINE
         BIN        B1BIT5
         ROUTINE    B0BIT0,SKIPPER
         BIN        B2BIT5
         LABEL      '  SEGMENT B ACTIVE',' ','RECEIVE FRAME OVERRUN'
*
         LINE
         BIN        B1BIT6
         BIN        B3BIT6
         BIN        B2BIT6
         LABEL      '  SEGMENT C ACTIVE','RECEIVE RESET ERROR',        X
               'RECEIVE RE-SYNC ERROR'
*
         LINE
         BIN        B1BIT7
         BIN        B3BIT7
         BIN        B3BIT5
         LABEL      '  SEGMENT D ACTIVE','TRANSMIT RESET ERROR',       X
               'LOST LOOP SYNC'
*
*
         LINE
         ROUTINE    BTIMES,LOOPER
         LABEL      ' '
*
*
*
LABELS   EQU   *
         LSTART
         END
