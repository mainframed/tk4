         TITLE 'IFCE2880 - EDIT TABLE - LINKNAME=IFCE2880'
         TITLE '****  2880C EDIT  ****'
         MACRO
         PARITY &ENTRY,&REPEAT,&SPACES,&PBITS=,&DISP=,&OFFBYTE=
         GBLC  &ITEM(1500),&DSECT
         GBLA  &SHIFT(1500),&ITEMNBR
         LCLA  &IBITS,&NDX,&ISHIFT
         DC    AL4(&ENTRY)
         DC    AL1(&REPEAT)
         DC    AL1(&SPACES)
         AIF   ('&PBITS' EQ '').HARDCD
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&PBITS').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'PARITY GROUP NOT FOUND'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
         DC    AL.12(&PBITS-&DSECT),AL.4(&ISHIFT)
         AGO   .OUT
.HARDCD  ANOP
&ISHIFT  SETA  &OFFBYTE
         DC    AL.12(&DISP),AL.4(&ISHIFT)
.OUT     ANOP
         MEND
         SPACE 2
         EJECT                                                 @YM2954P
         MACRO
         SYSRELN  &LOGITEM,&SKIP$OR,&BYTES
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &LOGITEM - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1500),&DSECT
         GBLA &ITEMNBR,&BITS(1500),&SHIFT(1500),&NRENTS
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP
         LCLC  &S,&LETTER
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&CODE    SETA  1
&K       SETA  K'&BYTES
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'
         MEXIT
.OK      AIF   ('&BYTES' EQ '').USEDEFN
&LETTER  SETC  '&BYTES'(&K,1)
&S       SETC  '&BYTES'(1,&K-1)
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'
         MEXIT
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'7'
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'
.OUT     ANOP
         MEND
         SPACE 2
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN &X1,&X2,&X3,&X4,&X5,&X6,&X7,&X8,&X9,&X10,&X11,&X12,&X13,X
               &X14,&X15,&X16,&X17,&X18,&X19,&X20,&X21,&X22,&X23,&X24, X
               &X25,&X26,&X27,&X28,&X29,&X30,&X31,&X32
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1500)
         GBLA &ITEMNBR,&BITS(1500),&SHIFT(1500)
         LCLC  &SYMBOL
         LCLA  &OP,&COUNT,&BYTE
.LOOP    ANOP
&OP      SETA  &OP+1
&ITEMNBR SETA  &ITEMNBR+1
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE *,'NULL BIT COUNT FIELD'
         MEXIT
.OK1     ANOP
         AIF   ('&SYMBOL' NE '').OK
         MNOTE 'LOG ITEM SYMBOL NOT PROVIDED'
         AGO   .CNT
.OK      ANOP
         AIF   ('&SYMBOL'(1,1) EQ '''').CNT                *TEMP*
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR)  SETC '&SYSLIST(&OP,1)'
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF (&OP LT N'&SYSLIST).LOOP
         AIF   (&COUNT NE 32).NOT32
&NAME    DS    4C
         MEXIT
.NOT32   AIF   (&COUNT NE 64).ERR
&NAME    DS    8C
         MEXIT
.ERR     MNOTE '**BIT COUNT FIELDS DO NOT TOTAL 32 OR 64**'
         MEND
         EJECT
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         SPACE 2
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
&S       SETA  &LASTCC
         AGO   .DEFAULT
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
&S       SETA  &SKIP
.DEFAULT ANOP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
&TEST    SETB  0
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    FL1'9'
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
*  BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO  *
         SPACE 2
         MACRO
         BIN   &LOGITEM,&SKIP$OR
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC  &ITEM(1500)
         GBLA  &ITEMNBR,&BITS(1500),&SHIFT(1500),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T
         LCLC  &S
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
A&SYSNDX DC    AL.12(&LOGITEM-&DSECT),XL.4'&TEMP'
         AIF (&IBITS EQ 1 AND &B EQ 0).OUT
         ORG   A&SYSNDX
&B       SETB  1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
         MEND
         EJECT
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  *
         SPACE 2
         MACRO
         HEX   &LOGITEM,&SKIP$OR,&BYTES
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &LOGITEM - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC  &ITEM(1500),&DSECT
         GBLA  &ITEMNBR,&BITS(1500),&SHIFT(1500),&NRENTS
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP
         LCLC  &S,&LETTER
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&CODE    SETA  1
&K       SETA  K'&BYTES
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'
         MEXIT
.OK      AIF   ('&BYTES' EQ '').USEDEFN
&LETTER  SETC  '&BYTES'(&K,1)
&S       SETC  '&BYTES'(1,&K-1)
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'
         MEXIT
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'A'
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'
.OUT     ANOP
         MEND
         SPACE 2
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         SPACE 2
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1500)
         GBLA  &SHIFT(1500),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         SPACE 2
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(2000)
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         LCLA  &NDX,&CTR
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         SPACE 2
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         SPACE 2
         GBLC  &DSECT,&CSECT
IFCE2880 CSECT
&CSECT   SETC  'IFCE2880'
&DSECT   SETC  'C2880'
C2880    DSECT
DUM      EQU   *
         EJECT
         DSGEN (XKEY,8),(XRELN,8),(XSWS8,9),(XSWS9,1),(XSWS10,1),      C
               (XSWS11,1),                                             C
               (XSWS12,1),(XSWS13,1),(XSWS14,1),(XSWS15,1)
         DSGEN (XDUM1,13),(XCRH,1),(XDUM3,18)                  @Z30CIMC
         DSGEN (XDATE,32)
         DSGEN (XTIME,32)
         DSGEN (XDUM2,8),(XSER,24)
         DSGEN (XMOD,16),(MCEL,16)
         DSGEN (XJOBN,64)
         DSGEN (XAIO1,16),(XAIO2,16),(XAIO3,16),(XAIO4,16)
         DSGEN (XAIO5,16),(XAIO6,16),(XAIO7,16),(XAIO8,16)
         DSGEN (XFCCWCC,8),(XFCCWDA,24),(XFCCWFL,8),(XFCCW0,8),        C
               (XFCCWCT,16)
         DSGEN (XCSWK,8),(XCSWCA,24)
         DSGEN (XCSWUS0,1),(XCSWUS1,1),(XCSWUS2,1),(XCSWUS3,1),        *
               (XCSWUS4,1),(XCSWUS5,1),(XCSWUS6,1),(XCSWUS7,1),        *
               (XCSWCS0,1),(XCSWCS1,1),(XCSWCS2,1),(XCSWCS3,1),        *
               (XCSWCS4,1),(XCSWCS5,1),(XCSWCS6,1),(XCSWCS7,1),        *
               (XCSWCT,16)
         DSGEN (XECSW,32)
         DSGEN (XDEVT1,16),(XDEVT2,16)
         DSGEN (XCHID,8),(XCUA,24)
         DSGEN (XMPIN,32)
         ORG   XMPIN                                           @YL02021
         DSGEN (VCUA,16),(VLGSZ,16)                            @YL02021
BLKMPX00 DSGEN (BKMXPPCI,1),(BKMXCPCT,1),(BKMXPGCK,1),(BKMXPRCK,1),    X
               (BKMXDACK,1),(BKMXCTCK,1),(BKMXIFCK,1),(BKMXCHCK,1),    X
               (BKMXPCCK,1),(BKMXNORP,1),(BKMXMINT,1),(BKMXILSQ,1),    X
               (BKMXSCCK,1),(BKMXIRCK,1),(BKMXWCCK,1),(BKMXTCCK,1),    X
               (BKMXBRCK,1),(BKMXLBCK,1),(BKMXIOIV,1),(BKMXIOCK,1),    X
               (BKMXIOPK,1),(BKMXSSPC,1),(BKMXUPCK,1),(BKMXUCCK,1),    X
               (BKMXIVUC,1),(BKMXDUM1,1),(BKMXSMPK,1),(BKMXSAPK,1),    X
               (BKMXKPCK,1),(BKMXIVAK,1),(BKMXSPIK,1),(BKMXDUM2,1)
         SPACE 2
BLKMPX01 DSGEN (BKMXPICK,1),(BKMXSQCK,1),(BKMXIVUA,1),(BKMXCXCK,1),    X
               (BKMXCBCK,1),(BKMXIACK,1),(BKMXDUM3,1),(BKMXLGDI,1),    X
               (BKMXTOCP,1),(BKMXTOSI,1),(BKMXTOIO,1),(BKMXUDCK,1),    X
               (BKMXWDCK,1),(BKMXMGCK,1),(BKMXSOPK,1),(BKMXSIPC,1),    X
               (BKMXSPCK,1),(BKMXDUM4,1),(BKMXBOPK,1),(BKMXBIPK,1),    X
               (BKMXARCK,1),(BKMXALCK,1),(BKMXHSCK,1),(BKMXCYCK,1),    X
               (BKMXJLCK,1),(BKMXCARK,1),(BKMXCTCT,1),(BKMXDTAR,1),    X
               (BKMXBYT0,1),(BKMXBYT1,1),(BKMXBYT2,1),(BKMXBYT3,1)
         SPACE 2
BLKMPX02 DSGEN (BKMXCARO,4),(BKMXUSVL,1),(BKMXCAVL,1),(BKMXDUM5,1),    X
               (BKMXUPTY,1),(BKMXUCWR,8),(BKMXWDE2,3),(BKMXSSCH,1),    X
               (BKMXICBX,3),(BKMXIABP,1),(BKMXIAB8,8)
         SPACE 2
BLKMPX03 DSGEN (BKMXSCAN,1),(BKMXCCRQ,1),(BKMXSSIO,1),(BKMXTTIO,1),    X
               (BKMXHHIO,1),(BKMXDTXF,1),(BKMXCCRS,1),(BKMXCCDA,1),    X
               (BKMXCCPR,1),(BKMXTERM,1),(BKMXINRP,1),(BKMXIIPL,1),    X
               (BKMXRSET,1),(RAN1,1),(RAN2,1),(RAN3,1),                X
               (BKMXCCWF,1),(BKMX1SER,1),(BKMXDAT1,1),(BKMXPPE2,1),    X
               (BKMXFET3,1),(BKMXTGDL,1),(BKMXCDPF,1),(BKMXLDCY,1),    X
               (BKMXCMDS,1),(BKMXXFCT,1),(BKMXRCHE,1),(BKMXUCW1,1),    X
               (BKMXMOD0,1),(BKMXSPCC,1),(BKMXHIOB,1),(BKMXHDVM,1)
         SPACE 2
BLKMPX04 DSGEN (BKMXUASU,1),(BKMXUCW2,1),(BKMXCTFT,1),(BKMXCINS,1),    X
               (BKMXINSL,1),(BKMXSTCD,1),(BKMXDTSQ,1),(BKMXRDDT,1),    X
               (BKMXCTRC,1),(BKMXCSWS,1),(BKMXRSFL,1),(BKMXCCHK,1),    X
               (BKMXINCH,1),(BKMXIPLT,1),(BKMXIOTM,1),(BKMXDUM6,1),    X
               (BKMXDUM7,1),(BKMXDUM8,1),(BKMXINKF,1),(BKMXINCA,1),    X
               (BKMXINCM,1),(BKMXINFF,1),(BKMXTCOS,1),(BKMXTCOT,1),    X
               (BKMXCLC1,1),(BKMXCLCB,1),(BKMXCLCC,1),(BKMXCLCD,1),    X
               (BKMXCLC2,1),(BKMXCLCF,1),(BKMXCLCG,1),(BKMXCLCH,1)
         SPACE 2
BLKMPX05 DSGEN (BKMXUAST,1),(BKMXUCW3,1),(BKMXCLFT,1),(BKMXCINP,1),    X
               (BKMXISL2,1),(BKMXSTC2,1),(BKMXDSQ2,1),(BKMXRSD2,1),    X
               (BKMXCRC2,1),(BKMXCSW2,1),(BKMXRSF2,1),(BKMXCCK2,1),    X
               (BKMXICH2,1),(BKMXIPT2,1),(BKMXIOT2,1),(BKMXDUM9,1),    X
               (BKMXDM10,3),(BKMXIDAF,1),(BKMXIDAR,1),         @YA02787X
               (BKMXCURC,1),(BKMXINSR,1),(BKMXESCN,1),         @YA02787X
               (BKMXPCBD,1),(BKMXRTIC,1),(BKMXCTFC,1),                 X
               (BKMXSGTD,1),(BKMXDSIH,1),(BKMXRSDS,1),(BKMXOFLO,1),    X
               (BKMXCMDR,1)
         SPACE 2
BLKMPX06 DSGEN (BKMXSTOR,1),(BKMXREQO,1),(BKMX2REQ,1),(BKMXBT28,1),    X
               (BKMXADV1,1),(BKMXBADV,1),(BKMXEXCP,1),(BKMXBKEX,1),    X
               (BKMXSTOF,1),(BKMXDATC,1),(BKMX1OBL,1),(BKMX2OBL,1),    X
               (BKMX1REQ,1),(BKMXLREQ,1),(BKMXACPT,1),(BKMXDM11,1),    X
               (BKMXDM12,1),(RANDUM1,1),(RAN4,1),(RAN5,1),(BKMXWLLD,4),X
               (BKMXBARV,4),(BKMXQUAD,2),(BKMXDAWL,2)
         SPACE 2
BLKMPX07 DSGEN (BKMXAOUT,1),(BKMXSOUT,1),(BKMXSVOT,1),(BKMXCMOT,1),    X
               (BKMXSBOT,1),(BKMXOPOT,1),(BKMXDAOT,1),(BKMXAORI,1),    X
               (BKMXSTAI,1),(BKMXREQI,1),(BKMXINOP,1),(BKMXISSL,1),    X
               (RAN6,1),(RAN7,1),(BKMXDM27,1),(RANDUM2,1),             X
               (BKMXCD02,1),(BKMXCC02,1),(BKMXBSLI,1),(BKMXBSKP,1),    X
               (BKMXBPCI,1),(RANDUM3,1),                               X
               (BKMXCD01,1),(BKMXCC01,1),(BKMXSLI1,1),(BKMXSKIP,1),    X
               (BKMXMKOP,1),(BKMXMKO0,1),(BKMXMKO1,1),(BKMXMKIP,1),    X
               (BKMXMKIO,1),(BKMXMKI1,1)
         SPACE 2
BLKMPX08 DSGEN (BKMXIRCD,6),(BKMXDTTC,4),(BKMXDTWC,4),(BKMXDTSC,3),    X
               (BKMXDLSP,7),(BKMXPP05,8)
         SPACE 2
BLKMPX09 DSGEN (BKMXUTSL,1),(BKMXTDDA,1),(BKMXALLI,1),(BKMXINTD,1),    X
               (BKMXSDOM,1),(BKMXSYTG,1),(BKMXSYLT,1),(BKMXSYT2,1),    X
               (BKMXSYL2,1),(BKMXIRIM,1),(BKMXIROM,1),(BKMXWRTR,1),    X
               (BKMXSKWF,1),(BKMX2BYL,1),(BKMXLBYL,1),(BKMXLBRD,1),    X
               (BKMXENCD,1),(BKMXS1CD,1),(BKMXEEIC,1),(BKMXBKIC,1),    X
               (BKMXLOWC,1),(BKMXBKLC,1),(BKMXSTOP,1),(BKMXSTPI,1),    X
               (BKMXDMOD,1),(BKMXWIDE,1),(BKMXDM17,3),(BKMXSIRC,3)
         SPACE 2
BLKMPX10 DSGEN (BKMXUCBO,8),(BKMXUCB1,8),(BKMXUCB2,8),(BKMXUCB3,8)
         SPACE 2
BLKMPX11 DSGEN (BKMXKKEY,8),(BKMXCAB1,8),(BKMXCAB2,8),(BKMXCAB3,8)
         SPACE 2
BLKMPX12 DSGEN (BKMXDVSA,1),(BKMXSTAM,1),(BKMXCEND,1),(BKMXBUSY,1),    X
               (BKMXSTCE,1),(BKMXSTDE,1),(BKMXSTUC,1),(BKMXSTUE,1),    X
               (BKMXSPCI,1),(BKMXINCL,1),(BKMXPRGC,1),(BKMXPRTC,1),    X
               (BKMXCDTC,1),(BKMXCCTC,1),(BKMXICTC,1),(BKMXCHAC,1),    X
               (BKMXCRB2,8),(BKMXCRB3,8)
         SPACE 2
BLKMPX13 DSGEN (BKMXCCB0,8),(BKMXDAB1,8),(BKMXDAB2,8),(BKMXDAB3,8)
         SPACE 2
BLKMPX14 DSGEN (BKMXIRB0,8),(BKMXIRB1,8),(BKMXDM18,16)
         SPACE 2
BLKMPX15 DSGEN (BKMXLSI0,8),(BKMXLSI1,8),(BKMXLSI2,8),(BKMXLSI3,8)
         SPACE 2
BLKMPX16 DSGEN (BKMXLSD0,8),(BKMXLSD1,8),(BKMXLSD2,8),(BKMXLSD3,8)
         SPACE 2
BLKMPX17 DSGEN (BKMXDCWS,1),(BKMXP815,1),(BKMXP623,1),(BKMXP431,1),    X
               (BKMXCMND,1),(BKMXAD15,1),(BKMXRG23,1),(BKMXPT31,1),    X
               (BKMXRP07,1),(BKMXRP15,1),(BKMXRP23,1),(BKMXRP31,1),    X
               (BKMXDT07,1),(BKMXAR15,1),(BKMXRE23,1),(BKMXPY31,1),    X
               (BKMXIR07,1),(BKMXOT15,1),(BKMXPA23,1),(BKMXPA31,1),    X
               (BKMXLO07,1),(BKMXST15,1),(BKMXIF23,1),(BKMXPTY1,1),    X
               (BKMXLOC7,1),(BKMXSTO5,1),(BKMXDAT3,1),(BKMXPART,1),    X
               (BKMXDD18,4)
         SPACE 2
BLKMPX18 DSGEN (BKMXSR00,8),(BKMXSR01,8),(BKMXSR02,8),(BKMXSR03,8)
         SPACE 2
BLKMPX19 DSGEN (BKMXSR10,8),(BKMXSR11,8),(BKMXSR12,8),(BKMXSR13,8)
         SPACE 2
BLKMPX20 DSGEN (BKMXSR20,8),(BKMXSR21,8),(BKMXSR22,8),(BKMXSR23,8)
         SPACE 2
BLKMPX21 DSGEN (BKMXSR30,8),(BKMXSR31,8),(BKMXSR32,8),(BKMXSR33,8)
         SPACE 2
BLKMPX22 DSGEN (BKMXUCWS,4),(BKMXSCHS,4),(BKMXLTH1,8),(BKMXLTH2,8),    X
               (BKMXLTH3,8)
         SPACE 2
BLKMPX23 DSGEN (BKMXPRSM,2),(BKMXDGMD,2),(BKMXCHMM,1),(BKMXMCFR,1),    X
               (BKMXMCPC,1),(BKMXSRCK,1),(BKMXPRFI,1),(BKMXINSB,4),    X
               (BKMXSTPC,1),(BKMXSIMS,1),(BKMXCPII,1),(BKMXCTTC,1),    X
               (BKMXSTCY,1),(BKMXMCAC,1),(BKMXPSLR,1),(BKMXPSCC,1),    X
               (BKMXRSTI,1),(RAN10,1),(BKMXDM19,9)
         SPACE 2
BLKMPX24 DSGEN (BKMXDM20,1),(BKMXMCWP,1),(BKMXLOGO,1),(BKMXMHCL,1),    X
               (BKMXRVSP,1),(BKMXRSPT,1),(BKMXENCC,1),(BKMXSPCD,1),    X
               (BKMXSRQI,1),(BKMXISIN,1),(BKMXMADI,1),(BKMXOPLI,1),    X
               (BKMXSTAA,1),(BKMXSVCI,1),(BKMXGDTI,1),(BKMXASIO,1),    X
               (BKMXSLAB,8),(BKMXPGSC,8)
         SPACE 2
BLKMPX25 DSGEN (BKMXCANA,1),(BKMXCANB,1),(BKMXENBL,1),(BKMXDLAY,1),    X
               (BKMXCLWR,1),(BKMXBASY,1),(BKMXLSCC,1),(BKMXLOGC,1),    X
               (BKMXLGCK,1),(BKMXSMSC,1),(BKMXDM21,5),(BKMXSIMP,1),    X
               (BKMXSMDR,8),(BKMXECIR,8)
         SPACE 2
BLKMPX26 DSGEN (BKMXSI07,1),(BKMXWD01,1),(BKMXWD02,1),(BKMXPT01,1),    X
               (BKMXSI17,1),(BKMXWD11,1),(BKMXWD12,1),(BKMXPT11,1),    X
               (BKMXSI27,1),(BKMXWD21,1),(BKMXWD22,1),(BKMXPT02,1),    X
               (BKMXSI37,1),(BKMXWD31,1),(BKMXWD32,1),(BKMXPT22,1),    X
               (BKMXDM22,1),(BKMXJ815,1),(BKMXL163,1),(BKMXP241,1),    X
               (BKMXOHSV,1),(BKMXCH85,1),(BKMXM163,1),(BKMXPY41,1),    X
               (BKMXDM23,8)
         SPACE 2
BLKMPX27 DSGEN (BKMXUSIO,1),(BKMXUTIO,1),(BKMXUHIO,1),(BKMXDM24,1),    X
               (BKMXUIRQ,1),(BKMXUIRP,1),(BKMXUBSY,1),(BKMXDM25,1),    X
               (RAN8,1),(RAN9,1),(RANDUM4,1),                          X
               (BKMXBLPU,1),(BKMXBLCH,1),(BKMXBLSC,1),(BKMXBLSU,1),    X
               (BKMXBLCU,1),(RAN11,1),(RAN12,1),(RAN13,1),(RAN14,1),   X
               (BKMXDM26,12)
         DSGEN (VCCHPR0,1,1,9),(VCCHPR,1,10,16)                @YM2954P
         DSGEN (VCCHPR1,16,EQU,VCCHPR01)                       @YM2954P
         DSGEN (VDUM,24),(VFLAG,8),(VNOPRO,16)                 @YM2954P
         DSGEN (VPROC01,16),(VCHST01,16),(VPROC02,16),(VCHST02,16),    X
               (VPROC03,16),(VCHST03,16),(VPROC04,16),(VCHST04,16),    X
               (VPROC05,16),(VCHST05,16),(VPROC06,16),(VCHST06,16),    X
               (VPROC07,16),(VCHST07,16),(VPROC08,16),(VCHST08,16),    X
               (VPROC09,16),(VCHST09,16),(VPROC10,16),(VCHST10,16),    X
               (VPROC11,16),(VCHST11,16),(VPROC12,16),(VCHST12,16),    X
               (VPROC13,16),(VCHST13,16),(VPROC14,16),(VCHST14,16),    X
               (VPROC15,16),(VCHST15,16),(VPROC16,16),(VCHST16,16)
         EJECT
*
IFCEP000 DSECT
         DS    CL6
         DS    CL1
         DS    CL1
XPRTBUF  DS    15CL8
         DS    5CL8
         DS    3CL8
         DS    CL8
XSWITCH  DS    CL4
*
*      ROUTINE BRANCH TABLE
*
         DS    CL112
*
*      LOAD MODULE ENTRYPOINT NAMES
*
         DS    CL56
*
*      READ/WRITE BUFFER
*
XMCH     DC    XL2'00'
XCNTBUF  DS    CL8
XKEYBUF  DS    CL2
XDADBUF  DS    197CL8
XDUMMY   DS    CL1
         SPACE 3
ERPIB    DSECT                                                    19032
SOFWFLGS DS    CL1                 PROGRAM FLAGS FIELD IN ERPIB   19032
PROBERR  DS    CL1                 PROBABLE SOURCE OF ERROR FIELD 19032
VALFLAGS DS    CL1                 VALIDITY FLAGS FIELD           19032
CMPLBITS DS    CL1                 TERM AND RETRY CODES FIELD     19032
MPINFOFD DS    CL2                 MULTI-PROCESSING INFO FIELD    19032
CHSMS    DS    CL2                 CHANNEL STATUS FIELD           19032
         EJECT
IFCE2880 CSECT
ENTRYPTR DC    A(FORMAT1)
TABLNAME DC    CL8'IFCE2880'
REG9     DS    F
LP       DS    F
SPCLCODE EQU   *
SKIPPER  EQU   *
         BR    14
         SPACE 2
***********************************************************************
* PARITY CHECKING ROUTINE
*     R0-NOT USED
*     R1-NOT USED
*     R2-ADDR OF TOP OF LOGREC,LOOP COUNTER
*     R3-POINTS TO CURRENT MARGIN IN PRINT BUFFER
*     R4-ADDRESS OF DATA(=ARG1 OF ROUTINE MACRO)
*     R5-WORK REG
*     R6-USED TO COMPUTE PARITY
*     R7-CONTAINS PARITY BITS
*     R8-CONTAINS PRINT SPACING
*     R9-POINTS TO CURRENT EDIT TABLE ENTRY(=LABEL OF ROUTINE MACRO)
*    R10-WORK REG
*    R11-WORK REG
*    R12-CONTAINS NO. OF BYTES TO PROCESS
*    R13-BASE REG
*    R14-LINK REGS
*    R15-LINK REGS
@PARITY  DS    0F
         USING *,15
         STM   14,12,12(13)
         ST    13,SAVE13
* FIND ARG LIST *
         L     9,R9ADR
         L     9,0(9)              PICK UP ADR OF EDIT ENTRY
         LA    5,ARGTBL-8          INITIALIZE R5
LOOP1    LA    5,8(5)              BUMP R5 TO NEXT ARG LIST
         L     6,0(5)              LOAD ADDR OF EDIT ENTRY-
         CR    9,6                 =TO ADDR OF ROUTINE MACRO
         BC    7,LOOP1             NO,LOOK AT NEXT ARG LIST
*                                  YES,EXTRACT DATA FROM ARG LIST
         XR    12,12               CLEAR
         IC    12,4(5)             REPEAT FACTOR(NO. BYTES TO PROCESS)
         XR    8,8                 CLEAR
         IC    8,5(5)              PRINT SPACING BETWEEN BYTES
         LH    10,6(5)             PARITY DISP. AND BIT OFFSET
         SRDL  10,4                DISP R.J. IN R10,OFFSET L.J. IN R11
         SRL   11,28               R.J. OFFSET
         IC    7,0(2,10)           C(R7)=PARITY BITS
         SLL   7,8                 MOVE OVER
         IC    7,1(2,10)           MORE PARITY BITS(MAYBE)
         SLL   7,16(11)            SLL 16 PLUS BIT OFFSET
         XR    2,2                 CLEAR R2
         XR    10,10               CLEAR
         DROP  15
PARCOM   EQU   *
         BALR  13,0                SET UP NEW BASE REG
         USING *,13
* CONV AND STORE DATA *
LOOP2    IC    10,0(4,2)           LOAD BYTE OF DATA
         SRDL  10,4                SPLIT HEX DIGITS
         IC    10,CONVTBL(10)      CONV LEFT DIGIT TO EBCDIC
         STC   10,2(3)             STORE IN PRINT BUFFER
         XR    10,10               CLEAR
         SLDL  10,4                RIGHT DIGIT TO R10
         IC    10,CONVTBL(10)      CONVERT
         STC   10,3(3)             STORE
         XR    6,6                 CLEAR
         SLDL  6,1                 PAR BIT TO R6
         IC    10,CONVTBL(6)       CONVERT
         STC   10,0(3)             STORE
* CHECK PARITY *
         SLL   6,8                 MOVE OVER PAR BIT
         IC    6,0(4,2)            INSERT DATA
         SLL   6,23                LEFT JUSTIFY
         XR    10,10               CLEAR
         LA    R5,9                     LOAD LOOP COUNTER
ALR      ALR   6,6                 SET C.C.
         BC    12,LC               BRANCH ON NO CARRY
         LA    10,1(10)            COUNT CARRIES IN R10
LC       BCT   5,ALR               LOOP
         SRDL  10,1                LOW ORDER BIT TO R11
         ALR   11,11               WAS COUNT ODD OR EVEN (BIT 0=0 OR 1)
         BC    3,GOODPAR           ODD,PARITY GOOD
         MVI   1(3),C'*'           EVEN,STORE FLAG
GOODPAR  LA    2,1(2)              BUMP DATA XR
         AR    3,8                 BUMP PRINT LINE POINTER
         BCT   12,LOOP2            LOOP BACK
         L     13,SAVE13           FINISHED
         LM    14,12,12(13)
         BR    14
         DROP  13
R9ADR    DC    A(REG9)
SAVE13   DS    1F
CONVTBL  DC    C'0123456789ABCDEF' HEX TO EBCDIC CONVERSION TABLE
ARGTBL   DS    0D
         SPACE 2
         PARITY S1,1,0,PBITS=BKMXCMND
         PARITY S2,3,6,PBITS=BKMXAD15
         PARITY S3,2,6,PBITS=BKMXRP07
         PARITY S4,2,6,PBITS=BKMXRP23
         PARITY S5,1,0,PBITS=BKMXDT07
         PARITY S6,3,6,PBITS=BKMXAR15
         PARITY S7,4,6,PBITS=BKMXLO07
         PARITY S8,4,6,PBITS=BKMXLOC7
         PARITY S9,4,6,PBITS=BKMXSI07
         PARITY S10,4,6,PBITS=BKMXSI17
         PARITY S11,4,6,PBITS=BKMXSI27
         PARITY S12,4,6,PBITS=BKMXSI37
         PARITY S13,2,6,PBITS=BKMXIR07
         PARITY S14,3,6,PBITS=BKMXJ815
         PARITY S15,4,6,PBITS=BKMXOHSV
         PARITY S16,4,6,PBITS=RAN11
         PARITY S17,1,0,PBITS=BKMXUPTY
         PARITY S18,1,0,PBITS=BKMXIABP
         PARITY S19,1,0,PBITS=BKMXSIMP
         SPACE 2
@ABSTRAT DS    0F
         USING *,15
         STM   14,12,12(13)
         SR    6,6
         SR    7,7
         IC    7,0(4)
         SLL   7,24(5)
         SLDL  6,1
         LTR   6,6
         LM    14,12,12(13)
         BNZ   0(14)
         SR    15,15
         BR    14
         DROP  R15
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*        ROUTINES TO PICKUP THE MARK IN/OUT BITS, STRIP THE JUNK      *
*        AND STORE THE RESULTS IN THE PRINT BUFFER                    *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
@MARKIN  DS    0F
         USING *,15
         STM   14,12,SAVE+12
         SR    R6,R6
         IC    R6,L0(R4)
         SRDL  R6,L3
         SR    6,6
         SLDL  6,1
         STC   6,MYMARKIN
         OI    MYMARKIN,X'F0'
         S     3,=F'2'
         MVC   0(1,3),MYMARKIN
         SR    6,6
         SLDL  6,1
         STC   6,MYMARKIN
         OI    MYMARKIN,X'F0'
         MVC   1(1,3),MYMARKIN
         SR    6,6
         SLDL  6,1
         STC   6,MYMARKIN
         OI    MYMARKIN,X'F0'
         MVC   2(1,3),MYMARKIN
         LM    14,12,SAVE+12
         BR    14
MYMARKIN DC    C' '
         DROP  R15
         SPACE 2
@MARKOUT DS    0F
         USING *,15
         STM   14,12,SAVE+12
         SR    R6,R6
         IC    R6,L0(R4)
         SRDL  R6,L6
         SR    6,6
         SLDL  6,1
         STC   6,MYMARKOT
         OI    MYMARKOT,X'F0'
         S     3,=F'2'
         MVC   0(1,3),MYMARKOT
         SR    6,6
         SLDL  6,1
         STC   6,MYMARKOT
         OI    MYMARKOT,X'F0'
         MVC   1(1,3),MYMARKOT
         SR    6,6
         SLDL  6,1
         STC   6,MYMARKOT
         OI    MYMARKOT,X'F0'
         MVC   2(1,3),MYMARKOT
         LM    14,12,SAVE+12
         BR    14
MYMARKOT DC    C' '
         DROP  R15
         EJECT
***********************************************************************
*                                                                     *
*            ROUTINES TO SEQUENCE THE CLOCK                           *
*                                                                     *
***********************************************************************
         SPACE 2
@CLOCKA  DS    0F
         USING *,15
         STM   14,12,SAVE+12
         S     3,=F'4'             RESET THE MARGIN
         IC    7,0(4)
         SR    6,6                 CLEAR REG 6
         SLL   7,24
         LA    4,4                 SET UP LOOP LENGTH
MOREA    EQU   *
         SLL   6,7
         SLDL  6,1                 PICK UP A CLOCK BIT
         BCT   4,MOREA             GO BACK FOR THE NEXT CLOCK BIT
         O     6,=X'F0F0F0F0'      MAKE IT EBCDIC
         ST    6,CLACK             SAVE THE CLOCK BITS
         MVC   0(4,3),CLACK        STORE IN PRINT BUFFER
         LM    14,12,SAVE+12
         BR    14
         SPACE 2
CLACK    DC    F'0'
         DROP  R15
         SPACE 4
@CLOCKE  DS    0F
         USING *,15
         STM   14,12,SAVE+12
         S     3,=F'4'             RESET THE MARGIN
         IC    7,0(4)
         SR    6,6                 CLEAR REG 6
         SLL   7,28
         LA    4,4                 SET UP LOOP LENGTH
MOREE    EQU   *
         SLL   6,7
         SLDL  6,1                 PICK UP A CLOCK BIT
         BCT   4,MOREE             GO BACK FOR THE NEXT CLOCK BIT
         O     6,=X'F0F0F0F0'      MAKE IT EBCDIC
         ST    6,CLECK
         MVC   0(4,3),CLECK        STORE IN PRINT BUFFER
         LM    14,12,SAVE+12
         BR    14
         SPACE 2
CLECK    DC    F'0'
         DROP  R15
         EJECT
         USING IFCE2880,R9
         USING C2880,R2
SETSOURC STM   R5,R8,XSAVE              SAVE REGS
         XC    NOPRO(4),NOPRO           CLEAR
         CLI   L0(R4),HEX20             TEST REC SOURCE
         BE    SETCCH                   CCH NORMAL
         CLI   L0(R4),HEX21             TEST SOURCE
         BE    SETCCH                   CCH VS2(MVM)
         CLI   L0(R4),HEX22
         BE    SETCCHC                  CHH CONVERTED
         CLI   L0(R4),HEX28
         BE    SETSER1                  SER1 CHAN REC
         CLI   L0(R4),HEX2A
         BE    SETSER1C                 SER1 CHAN REC CONVERTED
         CLI   L0(R4),HEX29
         BE    SETSER0                  SER0 CHAN REC
SETSER0C MVC   CSER0A(L9),CONVERTD      SET CONVERTED MSG
SETSER0  LA    R5,CSER0                 SET SER0 MSG PTR
         B     SETSRC
SETSER1C MVC   CSER1A(L9),CONVERTD      SET CONVERTED MSG
SETSER1  LA    R5,CSER1                 SET SERC MSG PTR
         B     SETSRC
SETCCHC  MVC   CCCHA(L9),CONVERTD       SET CONV MSG
SETCCH   LA    R5,CCCH                  SET CCH PTR
SETSRC   MVC   L0(L14,R3),L0(R5)        MOVE SOURCE TO LINE
         B     RETURN                   RETURN
*
* CONVREL REMOVED FOR SYSRELN CHANGES
ALLFFF   STM   R5,R8,SSAVE              SAVE REGS                43068
AG       CLC   L0(L4,R4),HFFF           IS WORD ALL FF"S         43068
         BNE   OK                       BR - NO                  43068
         L     R5,NOLOGPTR              POINT AROUND           @YM2954P
         ST    R5,REG9                   LOGOUT LINES          @YM2954P
         L     R5,NOLOGLAB                AND                  @YM2954P
         ST    R5,LP                       LABELS              @YM2954P
         MVC   L0(L21,R3),NOLOG
OK       EQU   *
OV       LM    R5,R8,SSAVE              RESTORE REGS             43068
         BR    R14                      EXIT                     43068
SSAVE    DC    4F'0'                    SMALL SAVE AREA          43068
HFFF     DC    X'FFFFFFFF'                                       43068
*
CRHACT   STM   R5,R8,XSAVE                                     @Z30CIMC
         TM    L0(R4),HEX04        CHANNEL RECONFIG ACTIVE     @Z30CIMC
         BO    RETURN              RETURN IF YES               @Z30CIMC
         L     R5,NOCRH            BYPASS CRH MESSAGE PRINTOUT @Z30CIMC
         ST    R5,REG9                                         @Z30CIMC
         L     R5,NOCRH1                                       @Z30CIMC
         ST    R5,LP                                           @Z30CIMC
         B     RETURN                                          @Z30CIMC
SETPGMN  MVC   L0(L8,R3),L0(R4)         MOVE 8 CHAR NAME TO BUFF
         BR    R14
*
SPACER2  LA    R3,L2(R3)                BUMP R3 PTR BY 2
         BR    R14
*
SETHEX   STM   R5,R8,XSAVE              SAVE REGS
         LA    R8,CHARS                 CHAR TABLE PTR
         IC    R7,L0(R4)                PICK UP CHAR
         SLL   R7,L24                   MOVE IT TO HI POS
         SR    R6,R6
         SLDL  R6,L4                    MOVE 4 BITS TO R6
         AR    R6,R8                    INDEX FOR CHARS
         MVC   L0(L1,R3),L0(R6)         MOVE CHAR TO BUFF
         SR    R6,R6
         SLDL  R6,L4                    MOVE LAST 4 BITS TO R6
         AR    R6,R8                    INDEX INTO TABLE
         MVC   L1(L1,R3),L0(R6)         MOVE CHAR
         B     RETURN
*
*
*
*                              SET ACTIVE  I/O UNITS
SETAIO   STM   R5,R8,XSAVE              SAVE REGS
         LR    R5,R3                    SET R5 TO BUFFER
         SH    R5,H43                   POINT R5 TO BEGGIN OF DATA
         SR    R7,R7
         LA    R6,L8                    LOOP COUNT
SETAIOLP CLC   L0(L4,R5),CZEROS         TEST FOR ALL ZEROS
         BE    BLANKOUT                 BE-TO BLANK OUT ZEROS
SETAIOL1 LA    R5,L5(R5)                BUMP COUNT
         BCT   R6,SETAIOLP              LOOP TILL 8 TESTS
         CH    R7,H8                    ARE ALL ACTIVE IO ZERO
         BNE   RETURN                   NO RETURN
         LR    R5,R3                    YES
         SH    R5,H43                   PUT IN NONE
         MVC   L0(L4,R5),NONE           INTO PRINT BUFF
         B     RETURN
BLANKOUT MVC   L0(L4,R5),BLANKS         MOVE IN BLANKS
         LA    R7,L1(R7)                COUNT # OF ZERO FLDS
         B     SETAIOL1                 LOOP
RETURN   LM    R5,R8,XSAVE
         BR    R14
*
*
CHKSW9   TM    L1(R4),HEX40             TEST SWITCHES
CHECKCC  BZ    NOPRT                    IF SWITCHES OFF
         BR    R14                      DONOT PRINT
CHKSW10  TM    L1(R4),HEX20             R15 RETURNED ZERO
         B     CHECKCC                  STOPS PRINTING
CHKSW11  TM    L1(R4),HEX10
         B     CHECKCC
CHKSW12  TM    L1(R4),HEX08
         B     CHECKCC
CHKSW13  TM    L1(R4),HEX04
         B     CHECKCC
CHKSW14  TM    L1(R4),HEX02
         B     CHECKCC
CHKSW15  TM    L1(R4),HEX01
         B     CHECKCC
NOPRT    SR    R15,R15
         BR    R14
*
SETDATE  UNPK  XWORK(L8),L0(L4,R4)      UNPACL DATE
         MVZ   XWORK+L7(L1),XWORK       SET ZONE
         MVC   L0(L3,R3),XWORK+L5       MOVE DAY
         MVC  L6(L2,R3),XWORK+L3  MOVE YEAR
         BR    R14                      RETURN
*
CONVTIME TM    L0(R4),HEX48             TEST FOR NS/BIN CLOCK
         BZ    BINCLOCK                 ZERO IS BINARY CLOCK
         BO    RETURNB                  ONES IS FOR CONV TIME
         TM    L0(R4),HEX40             IF ON IS N/S CLOCK
         BO    NSCLOCK                  IF OFF TIME OK
RETURNB  BR    R14                      RETURN
*
         USING C2880,R2
ISITVS2  STM   R5,R8,XSAVE             SAVE REGS               @YL02021
         L     R5,DUMPIT                LOCATION OF DUMP PARMS @YM2954P
         MVC   L0(L2,R5),LOGSIZV2       VS 2 RECORD SIZE       @YM2954P
         CLI   XKEY,HEX21              VS2?                    @YL02021
         BE    RETURN                                          @YL02021
         MVC   L0(L2,R5),LOGSIZV1       VS 1 RECORD SIZE       @YM2954P
         SR    R15,R15                 ELIM LABEL              @YL02021
         B     RETURN                                          @YL02021
VS2TEST  STM   R5,R8,XSAVE             SAVE REGS               @YL02021
         CLI   XKEY,HEX21              VS2?                    @YL02021
         BE    RETURN                                          @YL02021
         B     COMPL                    SET UP FOR DUMP AND RET
PROC     STM   R5,R8,XSAVE             SAVE REGS               @YL02021
         SR    R5,R5                   CLEAR REG 5             @YL02021
         L     R5,NOPRO                PLACE THE NO. OF PROC. IN REG 5
         LA    R5,1(R5)                ADD ONE TO REG. 5       @YL02021
         ST    R5,NOPRO                PLACE BACK IN CORE      @YL02021
         CLC   VNOPRO(2),NOPRO+2       COMP. WITH ACTUAL NO. OF PROC.
         BL    COMPL                   FINISHED                @YL02021
         LR    R5,R3                                           @YL02021
         LA    R6,L47                   ADJUST OFFSET          @YM2954P
         SR    R5,R6                                           @YL02021
         MVC   L0(L17,R5),MSGA                                 @YL02021
         MVC   L27(L16,R5),MSGB                                @YM2954P
PROCBIN  LH    R4,L0(R4)           FETCH DATA                  @YM2954P
         SLL   R4,L15                   POSITION DATA
         LA    R6,L46              LENGTH OF LABEL             @YM2954P
         AR    R5,R6               SET UP POINTER              @YM2954P
         LA    R6,L16                   CHANGE COUNT           @YM2954P
TESTIT   SLL   R4,L1                    POSITION CHANNEL IND   @YM2954P
         LTR   R4,R4                    TEST FOR ON LINE       @YM2954P
         BNM   CHANACT                  BRANCH ON LINE         @YM2954P
PRINT    LA    R5,L3(R5)                UP DATE PRINT PTR
         BCT   R6,TESTIT           NEXT CHANNEL                @YM2954P
         B     RETURN                                          @YM2954P
CHANACT  MVI   L0(R5),C'X'         MOVE X TO PRINT             @YM2954P
         B     PRINT                    NEXT CHANNEL           @YM2954P
COMPL    SR    R15,R15                 CLEAR LABEL             @YL02021
         L     R5,DUMP                 LOAD ADDR.              @YL02021
         ST    R5,REG9                                         @YL02021
         L     R5,DUMP1                                        @Z30CIMC
         ST    R5,LP                                           @Z30CIMC
         B     RETURN                                          @YL02021
NOPRO    DC    F'00'                                           @YL02021
MSGA     DC    C'PROCESSOR ADDRESS'                            @YL02021
MSGB     DC    C'CHANNELS ON LINE'                             @YM2954P
LOGSIZV1 DC    XL2'C0'                                         @YM2954P
LOGSIZV2 DC    XL2'108'                                        @YM2954P
DUMPIT   DC    A(DUMPSIZE)                                     @YM2954P
NSCLOCK  STM   R14,R12,L12(R13)         SAVE REGS
         NI    L0(R4),HEXBF
         MVC   XWORK(L8),XDATE          MOVE DATE
         LM    R4,R5,XWORK
         SRDL  R4,L12                   POSITION FOR MICRO SECS
         D     R4,MILLION               CONVERT TO SECONDS
         SRA   R4,L19                   POSITION FOR ROUNDING
         AR    R5,R4                    UP TO NXT SECONDS
         SR    R4,R4
         D     R4,SIXTY                 CONVERT TO NINS
         CVD   R4,XWORK                 CONVERT IT
         LH    R6,XWORK+L6              PICK UP SECONDS
         SRL   R6,L4                    SHIFT OFF ZONE
         STC   R6,XDATE+L6              STORE SECONDS IN  REC
         MVI   XDATE+L7,HEX00           ZERO OUT TH'S
         SR    R4,R4
         D     R4,SIXTY                 CONVERT TO HRS
         CVD   R4,XWORK                 CONVERT REMAINDER MINUTES
         LH    R6,XWORK+L6              PICK UP
         SRL   R6,L4                    DROP ZONE
         STC   R6,XDATE+L5              STORE MINUTES
         SR    R4,R4
         D     R4,T24                   DIVIDE TO GET DAYS
         CVD   R4,XWORK                 CONV REM
         LH    R6,XWORK+L6              PICK UP
         SRL   R6,L4                    DROP ZONE
         STC   R6,XDATE+L4              STORE HRS
         LA    R4,L60                   STARTINY YEAR 1960
         LA    R6,L1                    INC OF 1
LEAPYEAR LA    R7,L3(R4)                ADD 3 YRS
         S     R5,LPYEAR                DAYS IN LEAP YEAR 366
         BZ    THISYEAR                 BR-THIS YR+1
         BM    OVERSHOT                 BR-TOOFAR
         BXLE  R4,R6,REGYEAR            UPDATE YEAR BY ONE
REGYEAR  S     R5,RGYEAR                DAYS IN RG YEAR 365
         BZ    THISYEAR                 BR-YEAR+1
         BM    OVERSHT1                 BR-TOO FAR
         BXLE  R4,R6,REGYEAR            UPDATE AND TRY AGAIN
         B     LEAPYEAR
OVERSHOT A     R5,LPYEAR                ADD BACK LEAP YEAR
         B     THISYEAR                 & USE
OVERSHT1 A     R5,RGYEAR                ADD BACK REG YEAR
         B     THISYER                  & USE
THISYEAR AR    R4,R6                    ADD 1
THISYER  AR    R5,R6                    ADD 1
         CVD   R5,XWORK                 CONVERT DAYS
         MVC   XDATE+L2(L2),XWORK+L6    MOVE DAYS
         CVD   R4,XWORK                 CONVERT YEAR
         LH    R6,XWORK+L6              PICK UP
         SRL   R6,L4                    DROP ZONE
         STC   R6,XDATE+L1              PUT YEAR
         MVI   XDATE,HEX00              SET TO ZERO
RETURNC  OI    XSWS8,HEX08              TURN ON PACKED SWITCH
         LM    R14,R12,L12(R13)         RETURN
         BR    R14
*
*
BINCLOCK STM   R14,R12,L12(R13)         SAVE REGS
         LR    R8,R2                    SAVE RECORD POINTER       P6566
         L     R3,XTIME                 PICK UP TIME IN BIN
         LTR   R3,R3                    TEST FOR ZERO
         BZ    RETURNC                  YES-RETURN
         SRL   R3,L1                    CONVERT
         M     R2,CONSTG                     TO
         D     R2,CONSTH                       DECIMAL
         LA    R4,L32                   BIT COUNTER
         MVI   TIMDIV+L3,DIV1           INITIAL DIVISOR (0A)
BCLOCKA  SR    R2,R2                    CLEAR
         D     R2,TIMDIV                DEVOLP DIGIT-REMAINDER
         LR    R0,R2                    SAVE REM
         SRDL  R0,L4                    SHIFT 4BITS
         SH    R4,H4                    DEC BY 4
         LTR   R3,R3                    DONE
         BZ    BCLOCKB                  BR-YES
         CH    R4,H24                   BITS LESS 24
         BNL   BCLOCKA                  BR-NO
         XI    TIMDIV+L3,DIV2           ALT DIV (0A XI 0C=06)
         B     BCLOCKA
BCLOCKB  SRL   R1,L0(R4)                MOVE TO FINAL POS
         LR    R2,R8                    RESTORE RECORD POINTER    P6566
         ST    R1,XTIME                 STORE BACK
         B     RETURNC
RTN0     DS    0H
         TM    BKMXINSR,X02
         BO    RTN0A
         TM    BKMXCURC,X04
         BO    RTN0C
         TM    BKMXESCN,X01
         BZ    RTN0ERR
         MVC   34(13,R3),RTN0M1
         BR    R14
RTN0A    DS    0H
         TM    BKMXINSL,X08
         BO    RTN0B
         TM    BKMXCMDS,X80
         BZ    RTN0ERR
RTN0B    MVC   34(27,R3),RTN0M2
         BR    R14
RTN0C    MVC   34(32,R3),RTN0M3
         BR    R14
RTN0ERR  MVC   34(12,R3),RTN0M4
         BR    R14
RTN0M1   DC    C'DATA TRANSFER'
RTN0M2   DC    C'CHANNEL INITIATED SELECTION'
RTN0M3   DC    C'CONTROL UNIT INITIATED SELECTION'
RTN0M4   DC    C'UNDETERMINED'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L12      EQU   12
L14      EQU   14
L27      EQU   27                                              @YM2954P
L46      EQU   46                                              @YM2954P
L47      EQU   47                                              @YM2954P
L19      EQU   19
L24      EQU   24
L32      EQU   32
L60      EQU   60
HEX40    EQU   X'40'
HEX48    EQU   X'48'
HEX02    EQU   X'02'
HEX04    EQU   X'04'
HEX08    EQU   X'08'
HEX10    EQU   X'10'
HEX20    EQU   X'20'
HEX21    EQU   X'21'                                           @YL02021
HEX22    EQU   X'22'
HEX28    EQU   X'28'
HEX2A    EQU   X'2A'
HEX29    EQU   X'29'
HEX01    EQU   X'01'
HEX00    EQU   X'00'
HEXBF    EQU   X'BF'
DIV1     EQU   X'0A'
DIV2     EQU   X'0C'
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
XWORK    DS    D
XSAVE    DS    4F
TIMDIV   DC    F'1'
CONSTG   DC    X'00030D40'
CONSTH   DC    X'024AE062'
MILLION  DC    F'1000000'
SIXTY    DC    F'60'
T24      DC    F'24'
LPYEAR   DC    F'366'
RGYEAR   DC    F'365'
H4       DC    H'4'
H8       DC    H'8'
H24      DC    H'24'
H43      DC    H'43'
CHARS    DC    C'0123456789ABCDEF'
NONE     DC    C'NONE'
CONVERTD DC    C'CONVERTED'
CZEROS   DC    C'0000'
BLANKS   DC    C'    '
CCCH     DC    CL5'CCH'
CCCHA    DC    CL9' '
CSER0    DC    CL5'SER0'
CSER0A   DC    CL9' '
CSER1    DC    CL5'SER1'
CSER1A   DC    CL9' '
         LTORG
* RELTAB  REMOVED FOR SYSRELN CHANGES
XLABELP  EQU   LP
WORK     EQU   XWORK
DUMP     DC    A(DMPSPACE-4)                                   @Z30CIMC
DUMP1    DC    A(DMPSPC1-1)                                    @Z30CIMC
SAVE     DS    9D
         DROP  R9
****    NUMERICAL EQUATES
L13      EQU   13
L15      EQU   15
L16      EQU   16
L17      EQU   17                                              @YL02021
L20      EQU   20
L21      EQU   21
L22      EQU   22
L25      EQU   25                                              @YL02021
L26      EQU   26
L31      EQU   31
L40      EQU   40
L44      EQU   44                                              @YL02021
L66      EQU   66                                              @YL02021
X01      EQU   X'01'
X02      EQU   X'02'
X04      EQU   X'04'
X08      EQU   X'08'
X09      EQU   X'09'
X10      EQU   X'10'
X20      EQU   X'20'
X30      EQU   X'30'
X40      EQU   X'40'
X80      EQU   X'80'
****    ADDRESS EQUATES
AD0      EQU   0
AD4      EQU   4
AD12     EQU   12
AD13     EQU   13
AD14     EQU   14
AD15     EQU   15
AD16     EQU   16
AD20     EQU   20
AD37     EQU   37
AD41     EQU   41
AD45     EQU   45
AD55     EQU   55
AD63     EQU   63
AD69     EQU   69
AD108    EQU   108
****    CONDITION CODE EQUATES
CC1      EQU   1
CC7      EQU   7
CC8      EQU   8
*   ROUTINE TO PRINT CHANNEL OPERATION                                *
START    DS    0H
         USING *,R15
         MVC   AD0(L40,R3),STMSG0       MOVE CHN OP MESSAGE BASE
         TM    AD12(R4),X20             TEST FOR SIO MAJOR OP
         BO    STSIO                    BRANCH IF TRIGGER SET
         TM    AD12(R4),X10             TEST FOR TIO MAJOR OP
         BO    STTIO                    BRANCH IF TRIGGER SET
         TM    AD12(R4),X08             TEST FOR HIO MAJOR OP
         BO    STHIO                    BRANCH IF TRIGGER SET
         TM    AD13(R4),X20             TEST FOR INTERRUPT RESPONSE
         BO    STINTRSP                 BRANCH IF TRIGGER SET
         TM    AD12(R4),X01             TEST FOR CDA MAJOR OP
         BO    STCDA                    BRANCH IF TRIGGER SET
         TM    AD12(R4),X04             TEST FOR DATA TXFR MAJOR OP
         BO    STDTXFR                  BRANCH IF TRIGGER SET
         TM    AD12(R4),X02             TEST FOR COMND CHAIN RESELCT
         BO    STCCRSLT                 BRANCH IF TRIGGER SET
         TM    AD12(R4),X80             TEST FOR SCAN MAJOR OP
         BO    STSCAN                   BRANCH IF TRIGGER SET
         TM    AD12(R4),X40             TEST FOR CU REQ MAJOR OP
         BO    STCUREQ                  BRANCH IF TRIGGER SET
         MVC   AD0(L40,R3),STMSG1       MOVE NO CHN OP MESSAGE
         BR    R14                     RETURN
STSIO    DS    0C
         MVC   AD41(L3,R3),STMSG7      MOVE SIO BASE MESSAGE
         TM    AD16(R4),X30            TEST FOR CTRL FTH OR INSP SEQ
         BC    CC7,STSIO0              BRANCH IF ANY TRIGGER SET
         TM    AD20(R4),X30            TEST CTRL FTH OR INSP END SEQ
         BCR   CC8,R14                 RETURN IF BOTH TRIGGERS OFF
STSIO0   DS    0C
         MVC   AD45(L9,R3),STMSG8       MOVE CCW FETCH MESSAGE
         TM    AD14(R4),X80             TEST FOR CCW FETCH
         BCR   CC1,R14                  RETURN IF TRIGGER SET
         MVC   AD45(L3,R3),STMSG9       MOVE CAW TO MESSAGE
         BR    R14                      RETURN
STTIO    DS    0C
         MVC   AD41(L3,R3),STMSGA       MOVE TIO TO MESSAGE
         TM    AD16(R4),X08             TEST FOR INITIAL SELECTION
         BO    STTIO0                   BRANCH IF TRIGGER SET
         TM    AD15(R4),X80             TEST FOR COMMAND OUT SENT
         BCR   CC8,R14                  RETURN IF TRIGGER RESET
STTIO0   DS    0C
         MVC   AD45(L22,R3),STMSGB      MOVE REMAINDER OF MESSAGE
         BR    R14                      RETURN
STHIO    DS    0C
         MVC   AD41(L8,R3),STMSGH       MOVE HIO TO MESSAGE
         TM    AD108(R4),X02            TEST BUSY TRIGGER
         BCR   CC1,R14                  RETURN IF TRIGGER SET
         MVC   AD45(L8,R3),STMSGJ       MOVE NOT BUSY TO MESSAGE
         BR    R14                      RETURN
STINTRSP DS    0C
         MVC   AD41(L31,R3),STMSGC      MOVE BASE PART OF MESSAGE
         TM    AD108(R4),X02            TEST BUSY TRIGGER
         BCR   CC1,R14                  RETURN IF TRIGGER SET
         MVC   AD63(L12,R3),STMSGD      MOVE STORE STATUS TO MSG
         TM    AD16(R4),X08             TEST FOR INITIAL SELECTION
         BO    STIRPT0                  BRANCH IF TRIGGER SET
         TM    AD15(R4),X80             TEST FOR COMMAND OUT SENT
         BCR   CC8,R14                  RETURN IF TRIGGER RESET
STIRPT0  DS    0C
         MVC   AD69(L16,R3),STMSGE      MOVE SECONDARY STATUS TO MSG
         BR    R14                      RETURN
STCDA    DS    0C
         MVC   AD41(L15,R3),STMSGK      MOVE READ CHAIN COMMAND
         TM    AD37(R4),X10             TEST READ TRIGGER
         BCR   CC1,R14                  RETURN IF TRIGGER SET
         MVC   AD41(L16,R3),STMSGL      MOVE WRITE CHAIN DATA
         BR    R14                      RETURN
STDTXFR  DS    0C
         MVC   AD41(L13,R3),STMSG3      MOVE BASE PART OF MESSAGE
         TM    AD16(R4),X02             TEST DATA SEQ TRIGGER
         BCR   CC8,R14                  RETURN IF TRIGGER RESET
         MVC   AD55(L21,R3),STMSG4      MOVE REMAINDER OF MESSAGE
         BR    R14                      RETURN
STCCRSLT DS    0C
         MVC   AD41(L22,R3),STMSG2      CHAIN COMMAND RESELCT
         BR    R14                      RETURN
STSCAN   DS    0C
         MVC   AD41(L4,R3),STMSG6       CHN OP IS SCAN
         BR    R14                      RETURN
STCUREQ  DS    0C
         MVC   AD41(L20,R3),STMSGG      CHN OP IS CTL UNIT REQ
         BR    R14                      RETURN
STMSG0   DC    C'CHANNEL OPERATION AT TIME OF FAILURE WAS'
STMSG1   DC    C'UNABLE TO DETERMINE CHANNEL OPERATION   '
STMSG2   DC    C'CHAIN COMMAND RESELECT'
STMSG3   DC    C'DATA TRANSFER'
STMSG4   DC    C'UPDATE COUNT/DATA ADR'
STMSG6   DC    C'SCAN'
STMSG7   DC    C'SIO'
STMSG8   DC    C'CCW FETCH'
STMSG9   DC    C'CAW'
STMSGA   DC    C'TIO'
STMSGB   DC    C'WITH INITIAL SELECTION'
STMSGC   DC    C'INTERRUPT RESPONSE TO CLEAR PCI'
STMSGD   DC    C'STORE STATUS'
STMSGE   DC    C'SECONDARY STATUS'
STMSGG   DC    C'CONTROL UNIT REQUEST'
STMSGH   DC    C'HIO BUSY'
STMSGJ   DC    C'NOT BUSY'
STMSGK   DC    C'READ CHAIN DATA'
STMSGL   DC    C'WRITE CHAIN DATA'
         DROP  R15
         EJECT
IFCASR01 DS    0H
         USING *,R15
         STM   R14,R12,12(R13)          SAVE REGISTERS
         CLI   XKEY,HEX21                                      @YL02021
         BNE   CONTIN                                          @YL02021
         OI    VS2FLG,X01                                      @YL02021
CONTIN   ST    R13,SVR13               SAVE REG 13             @YL02021
         L     R11,NXENTRY              LOAD SUBROUTINE RETURN ADR
         LTR   R11,R11                  TEST FOR INITIAL ENTRY
         BZ    IFCASR02                 BRANCH IF 0-INITIAL ENTRY
         LM    R12,R10,MYSAVE           RELOAD SUBROUTINE REGS
         BR    R11                      CONTINUE PROCESSING
IFCASR02 DS    0H
         SH    R3,TWOX                  SUBTRACT 2 FROM PRNT BFR ADR
         MVC   L0(L1,R3),L1(R3)         MOVE PRINTER CNTRL CHAR
         LA    R3,L1(R3)                INCREMENT PRNT BFR ADR
         USING XDADBUF,R4
         USING XPRTBUF,R3
         USING XKEYBUF,R2
NEWMOVE  CLI   XKEYBUF+1,REL19          RELEASE 19                19E03
         BE    NEWMOVE1                 BRANCH--YES               19E03
         MVC   CSWORD(8),XDADBUF+54     MOVE CSW                  19E03
         MVC   ERPIBFLD(4),XDADBUF+62   MOVE ERPIB                19E03
         MVC   MULTISYS(4),XDADBUF+74   MOVE CHANSTAT INFO        19E03
         B     CONTINUE                 CONTINUE                  19E03
NEWMOVE1 MVC   CSWORD(8),XDADBUF+46     MOVE CSW                  19E03
         MVC   ERPIBFLD(4),XDADBUF+54   MOVE ERPIB                19E03
         MVC   MULTISYS(4),XDADBUF+66   MOVE CHANSTAT INFO        19E03
CONTINUE LA    R9,ERPIBFLD              DSECT ADDRESSIBILITY      19E03
         USING ERPIB,R9
         MVI   SETUPBFR+1,C'*'                                     MP
         MVC   SETUPBFR+2(78),SETUPBFR+1                           MP
         BAL   BRANPRT,XWRTPRT    MOVE BORDER TO BUFFER AND WRITE  MP
         L     R6,VS2                                          @YL02021
         CLI   0(R6),X'01'                                     @YL02021
         BE    DUMMYTST                                        @YL02021
         MVI   SETUPBFR,C'-'           SKIP TWO SPACES             MP
         TM    MPINFOFD,MSBIT      IS MULTI-SYSTEM BIT SET        19032
         BZ    DUMMYTST      IFNOT,CKECK FOR ENTRANCE FROM ASR01   MP
         LA    SETUPADR,SETUPBFR       ADDRESS OF PRINT BUFFER     MP
         MVC   24(24,SETUPADR),MSHEAD   MOVE MULTI-SYSTEM HDR TO BUFMP
         BAL   BRANPRT,XWRTPRT     WRITE HEADER                    MP
         MVI   SETUPBFR+1,C'*'                                     MP
         MVI   VDSTAR,C'*'                                         MP
         BAL   BRANPRT,XWRTPRT     WRITE LINE DIVIDER              MP
*                                                                  MP
*                                                                  MP
*              THIS ROUTINE FORMATS AND PRINTS A MESSAGE           MP
*              CONTAINING THE ID OF THE FAILING CPU AND            MP
*              THE STATUS OF THE MULTI-PROCESSING SYSTEM           MP
*                                                                  MP
*                                                                  MP
         MVC   10(12,SETUPADR),MSCPUID  MOVE CPUID MESSAGE TO BUFFERMP
         MVC   30(15,SETUPADR),MSCPUST  MOVE CPU STATUS MESSAGE    MP
         MVI   0(SETUPADR),C'-'    SKIP TWO SPACES AFTER LINE      MP
         TM    MPINFOFD,ID         TEST FOR WHICH CPU             19032
         BZ    STATEST       SKIP CPU ID                           MP
         MVI   14(SETUPADR),C'2'   INSERT CPUID=CPU2               MP
STATEST  IC    R1,MPINFOFD         GET MS BYTE IN MPINFO          19032
         SLL   R1,30               CLEAR FOR CPUSTAT               MP
         LTR   R1,R1               TEST FOR ZERO,NEGATIVE OR POSITIVEMP
         BC    12,SHARED           IS STATUS NOT PARTITION         MP
         MVC   45(11,SETUPADR),PART     STATUS WAS PARTITIONED     MP
         B     CHANTEST      GO FOR CHANNEL STATUS                 MP
SHARED   MVC   45(6,SETUPADR),SHAR      SHARED STATUS              MP
         BE    CHANTEST                 WAS CPU RECONFIGURED OUT   MP
         MVC   51(21,SETUPADR),RECON    YES                        MP
         EJECT
*                                                                  MP
*                                                                  MP
*              THIS ROUTINE TESTS A TWO BYTE FIELD                 MP
*              MPINFO FIELD                          TO DETERMINE
*              THE CHANNEL STATUS FOR BOTH CPUS AND FORMAT         MP
*              A MESSAGE TO INDICATE THAT STATUS                   MP
*                                                                  MP
*                                                                  MP
CHANTEST BAL   BRANPRT,XWRTPRT          PRINT INFORMATION          MP
         MVI   0(SETUPADR),C'-'         SKIP TWO SPACES            MP
         MVC   10(27,SETUPADR),CHCNFIG  CHANNEL CONFIGURATION MESSAGEMP
         LA    UPKREG,0                                            MP
         TM    MPINFOFD,ID         WAS CPUID=CPU2                 19032
         BZ    CCHMOVE                 NO                          MP
         MVI   14(SETUPADR),C'2'        YES, ENTER ID 2            MP
CCHMOVE  BAL   BRANPRT,XWRTPRT          PRINT MESSAGE              MP
         LA    R1,7                     LOOP CONTROL               MP
         LA    R2,14(SETUPADR)          PTR TO SLOT FOR 'OFF' MESSAGEMP
         IC    R5,CHSMS(UPKREG)         GET CHANNEL STATUS BYTE    MP
         MVC   10(55,SETUPADR),CHTAB    GET LIST OF CHANNELS       MP
         SLL   R5,24                    POSITION BYTE FOR BIT TESTINGMP
MSLOOP   LTR   R5,R5         IS BIT ON (NEGATIVE REG) OR OFF       MP
         BC    10,MSUPDT                NO                         MP
         MVC   0(3,R2),OFF              CHANNEL OFFLINE            MP
MSUPDT   SLL   R5,1                     MOVE TO NEXT CHANNEL BIT   MP
         LA    R2,8(R2)                 UPDATE MESSAGE POINTER     MP
         BCT   R1,MSLOOP                EXIT AFTER 7-BITS PROCESSED MP
MSREND   BAL   BRANPRT,XWRTPRT          WRITE CHANNEL STATUS MESSAGEMP
         LTR   UPKREG,UPKREG            TEST FOR SECOND TIME THROUGH MP
         BC    7,PRTHD                  BOTH BYTES OF CHANSTAT PRINTED
         LA    UPKREG,1(UPKREG)         PTR TO 2ND.BYTE OF CHANSTATMP
         MVC   10(27,SETUPADR),CHCNFIG  MOVE IN CHANNEL CONFIGURATIONMP
*                                       MESSAGE                    MP
         MVI   0(SETUPADR),C'0'         SKIP SPACE AFTER NEXT MESSAGEMP
         TM    MPINFOFD,ID         ESTABLISH CPUID                19032
         BO    CCHMOVE                  BRANCH IF CPUID=CPU2       MP
         MVI   14(SETUPADR),C'2'        PUT CPU2 IN MESSAGE        MP
         B     CCHMOVE       PRINT MESSAGE                         MP
PRTHD    MVI   SETUPBFR+1,C'*'             SETUP TO PRINT DIVIDER
         MVC   2(78,SETUPADR),1(SETUPADR)
         MVI   SETUPBFR,C'0'               SPACE FIRST
         BAL   BRANPRT,XWRTPRT             PRINT DIVIDER
DUMMYTST LA    SETUPADR,SETUPBFR   GET ADDR OF BUFFER FOR PRINT    MP
         OC    ERPIBFLD+1(3),ERPIBFLD+1  TEST FOR DUMMY ERPIB     19032
         BNE   MSCONT                   CONTINUE IF MEANINGFUL ERPIB MP
         MVI   0(SETUPADR),C'-'         SKIP 2 LINES               MP
         MVC   10(17,SETUPADR),MSNERPIB ERPIB NOT CREATED MESSAGE  MP
         BAL   BRANPRT,XWRTPRT          PRINT INFORMATION          MP
         B     RETCNTL       RETURN CONTROL                        MP
*                                                                  MP
         EJECT
MSCONT   EQU   *                                                   MP
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                          INSTRUCTION ANALYSIS                       *
*        THIS PROGRAM SECTION WILL INSPECT THE FIRST FOUR(4) BITS IN  *
*        THE FIRST BYTE  OF THE              ERPIB AREA, TO DETERMINE *
*        THE INSTRUCTION CAUSING THE ERROR.                           *
         LA    SETUPADR,SETUPBFR       SET UP HEADER BOARDER.
         MVC   SETUPBFR+27(25),HEADER    SET UP HEADER MESSAGE
         MVI   0(SETUPADR),C'0'          SPACE ONE LINE
         BAL   BRANPRT,XWRTPRT
*                                                                     *
*                            TEST FOR INTERRUPT                       *
*                                                                     *
         TM    SOFWFLGS,X'40'          INTERRUPT TEST.
         BZ    INST
         MVC   SETUPBFR(42),ERRINT     BUFFER INTERRUPT MESSAGE.
         B     RITEOUT
*                                                                     *
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                                                                     *
*        BITS 32-35 WILL BE TESTED                                    *
*                                                                     *
INST     MVC   SETUPBFR(33),CAUSERR    TYPE-INST ERROR HEADER.
         TM    SOFWFLGS,X'80'          TEST FOR SIO INSTRUCTION ERROR.
         BO    PRTERSIO                BRANCH TO SETUP PRINT BUFFER.
         TM    SOFWFLGS,X'20'          TEST FOR TIO INSTRUCTION.
         BO    PRTERTIO                BRANCH TO SETUP PRINT BUFFER.
*                                                                     *
PRTERHIO MVC   SET1(3),ERRHIO          MOVE HIO LABEL INTO BUFFER.
         B     RITEOUT                 PREPARE TO WRITE MESSAGE.
*                                                                     *
PRTERSIO MVC   SET1(3),ERRSIO          MOVE SIO LABEL INTO BUFFER.
         B     RITEOUT                 PREPARE TO WRITE MESSAGE.
*                                                                     *
PRTERTIO MVC   SET1(3),ERRTIO          MOVE TIO LABEL INTO BUFFER.
*                                                                     *
RITEOUT  BAL   BRANPRT,XWRTPRT         WRITE OUT APPROPRIATE MESSAGE.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*        THE FOLLOWING PROGRAM SECTION WILL INSPECT THE ERPIBFLD
*        TO DETERMINE IF AN ERPIB IS PRESENT.   IF  ONE IS
*        NOT FOUND, CONTROL WILL BE RETURNED.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
         OC    ERPIBFLD+1(3),ERPIBFLD+1  TEST FOR  ERPIB PRESENT  19032
         BZ    NONEXIST                WRITE MSG TO INDICATE NONEXISTS.
         B     TEST1         TEST COMPLETION CODE                  MP
SETVD    EQU   XPRTBUF+33                                          MP
*                         UCB ADDRESS NON-EXISTANT
NONEXIST MVC   SETUPBFR(45),NOUCB        SET UP MSG FOR NO UCB
         BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
         B     RETCNTL                 RETURN TO CONTROL.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*        THE FOLLOWING PROGRAM SECTION WILL TEST  BYTE 5     OF THE
*        ERPIB FOR A NO RETRY BIT SETTING. IF ON, CONTROL IS RETURNED
*        AFTER MESSAGE IS PRINTED OUT.
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                       OUTPUT RETRY CODE VALUE
*
*   *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                            TEST SOFTWARE FLAGS
TEST     MVC   SETUPBFR(32),RETCDVAL     BUFFER THE BASIC MESSAGE
         IC    REG,CMPLBITS        CONTENTS OF BYTE 8 INTO R3     19032
         TM    VALFLAGS,X'10'            TEST FOR VALID RETRY CODE
         BO    VALFLG              IF VALID, GO SETUP MESSAGE
         MVC   33(43,SETUPADR),NOTVM  SETUP NOT ASSESSABLE MESSAGE
         B     BUFITA           GO PRINT IT
VALFLG   N     REG,MASK            GET RID OF UNNEED BITS
         STC   REG,RCMSG+12        STORE NO. IN RETRY CODE MSG
         OI    RCMSG+12,X'F0'      MAKE PRINTABLE
         MH    REG,CONST
         LA    REG,MSGSTRT(REG)    SET UP MSG INDEX
         MVC   33(44,SETUPADR),0(REG)  MOVE MSG TO BUFFER
BUFIT    BAL   BRANPRT,XWRTPRT     PRINT IT
         MVC   34(14,SETUPADR),RCMSG  MOVE RETRY MSG TO BUFFER
BUFITA   BAL   BRANPRT,XWRTPRT
         TM    CMPLBITS,X'08'      IS DISCONNECT IN SET           19032
         BNO   NOTDISIN            NO, SKIP MSG                   19032
         MVC   SETUPBFR(23),DISCIN SET UP MSG                     19032
         BAL   BRANPRT,XWRTPRT     PRINT MSG                      19032
NOTDISIN EQU   *                                                  19032
*
*                                  TEST NO-RETRY BIT
         TM    SOFWFLGS,X'01'          IF NORETRY BIT IS NOT ON,BRANCH
*                                      TO PRINT VALID INDICATOR MSG.
         BZ    VALIDIND
         MVC   SETUPBFR(28),NORETRY    INDICATES THAT THE BIT WAS ON.
         BAL   BRANPRT,XWRTPRT         WRITE THE MESSAGE.
         B     RETCNTL                 RETURN CONTROL.
VALIDIND MVC   SETUPBFR(29),VALIDITY   RECORDED DATA HEADING TO BUFFER
         BAL   BRANPRT,XWRTPRT         INDICATOR HEADER.
*
*                                  TEST VALID RETRY CODE
*
*
*                            TEST COUNT BIT
         MVC   SETUPBFR(42),VALCOUNT   BUFFER THE BASIC MESSAGE.
         TM    SOFWFLGS,X'02'          TEST COUNT VALIDITY.
         BZ    INVCOUNT                IF OFF, PRINT INVALID MSG.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
INVCOUNT BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*                            TEST FOR SENSE DATA STORED
*
         MVC   SETUPBFR(43),SENSDATA   BUFFER THE BASIC MESSAGE.
         TM    SOFWFLGS,X'04'          TEST SENSE BIT.
         BZ    NOSTORE                 IF OFF BRANCH TO WRITE NOSTORE.
         MVC   33(10,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
NOSTORE  BAL   BRANPRT,XWRTPRT         WRITE THE MESSAGE.
*                            TEST UNIT STATUS BIT
         MVC   SETUPBFR(42),INVALUN    BUFFER THE BASIC MESSAGE.
         TM    VALFLAGS,X'08'          TEST FOR VALID UNIT STATUS.
         BZ    WRTOUT                  UNIT STATUS INVALID.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
WRTOUT   BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*                            TEST COMMAND ADDRESS BIT
*
         MVC   SETUPBFR(42),INVALCAD   MOVE INVALID COM MSG TO BUFFER.
         TM    VALFLAGS,X'04'          TEST FOR VALID COMMAND ADDRESS.
         BZ    PTOUT                   COMMAND ADDRESS INVALID.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
PTOUT    BAL   BRANPRT,XWRTPRT         WRITE THE MESSAGE.
*
*                            TEST CHANNEL ADDRESS BIT
*
         MVC   SETUPBFR(42),INVALCHA   MOVE INVALID CHN MSG TO BFR.
         TM    VALFLAGS,X'02'          TEST FOR VALID CHANNEL ADDRESS.
         BZ    OUTWRT                  INVALID CHANNEL ADDRESS.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
OUTWRT   BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*                            TEST FOR VALID DEVICE ADDRESS
*
         MVC   SETUPBFR(42),INVALDVA   MOVE INVALID DVC ADDR MSG TO BFR
         TM    VALFLAGS,X'01'          TEST FOR VALID DEVICE ADDRESS.
         BZ    OUTPRT                  INVALID DEVICE ADDRESS.
         MVC   33(9,SETUPADR),37(SETUPADR) MODIFY THE BASIC MESSAGE.
OUTPRT   BAL   BRANPRT,XWRTPRT         WRITE MESSAGE.
*
*        PROBABLE SOURCE OF ERROR
*
         MVC   SETUPBFR(29),PSOERR      INSERT BASE MSG IN BUFFER
         CLI   PROBERR,X'80'            TEST FOR CPU ERROR
         BE    CPUER                    BRANCH TO SET UP CPU ERR MSG
         CLI   PROBERR,X'40'            TEST FOR CHANNEL ERROR
         BE    CHNER                    BRANCH TO SETUP CHANNEL ERROR
         CLI   PROBERR,X'20'       TEST FOR SCU ERROR             19032
         BE    SCUER               YES- GO SET UP FOR SCU ERRMSG  19032
         CLI   PROBERR,X'10'            TEST FOR STORAGE ERROR
         BE    STORGER                  GO SETUP STORAGE ERROR MSG
         CLI   PROBERR,X'08'            TEST FOR I/O INTERFACE ERROR
         BE    INFER                    GO SETUP I/O INTF ERROR MSG
         MVC   30(25,SETUPADR),NOTVM    SETUP NOT ASSESSABLE MESSAGE
         B     WPRMSG                   GO PRINT MSG
CPUER    MVC   30(3,SETUPADR),CPUERMSG  BUFFER CPU ERROR MESSAGE
         B     WPRMSG                   GO PRINT
CHNER    MVC   30(7,SETUPADR),CHANERMS  SETUP CHANNEL ERROR MESSAGE
         B     WPRMSG                   GO PRINT
SCUER    MVC   30(20,SETUPADR),SCUERMS  SET UP SCU MSG            19032
         B     WPRMSG                   GO PRINT IT               19032
STORGER  MVC   30(7,SETUPADR),STOGERMS  SETUP STORAGE ERROR MESSAGE
         B     WPRMSG                   GO PRINT
INFER    MVC   30(13,SETUPADR),IOINFER  SET UP INTERFACE ERROR MESSAGE
WPRMSG   BAL   BRANPRT,XWRTPRT          PRINT MESSAGE
         B     RETCNTL
*
*                            TEST COMPLETION CODE
*
TEST1    MVC   SETUPBFR(23),COMCODE    INSERT COMPLETION CODE MESSAGE
*                                      IN PRINT BUFFER.
         TM    CMPLBITS,X'C0'          TEST FOR COMPLETION CODE '3'.
         BO    SYSRET                  BRANCH FOR SYS RESET MSG OUTPUT.
         TM    CMPLBITS,X'80'          TEST FOR COMPLETION CODE '2'
         BO    SELRET                  BRANCH FOR SEL RESET MSG OUTPUT.
         TM    CMPLBITS,X'40'          TEST FOR COMPLETION CODE '1'
         BO    FORENDSQ                BRANCH FOR FORCED END MSG OUTPUT
*
*                            INTERFACE DISCONNECT
*
         MVC   SET2(29),INTDISCN      SET UP INTERFACE DISCONNECT MSG
         B     WRITER                  MESSAGE AND WRITE IT OUT.
*
*                            SYSTEM RESET
*
SYSRET   MVC   SET2(21),SYSRES        SETUP  THE SYSTEM RESET MSG AND
         B     WRITER                  WRITE IT OUT.
*
*                            SELECTIVE RESET
*
SELRET   MVC   SET2(24),SELRES          SETUP SELECTIVE RESET  MSG AND
         B     WRITER                  AND WRITE IT OUT.
*
*                            FORCED ENDING SEQUENCE
*
FORENDSQ MVC   SET2(31),FORCEND         SETUP FORCE END MESSAGE AND
*                                      WRITE IT OUT.
*
*                            OUTPUT OF COMPLETION
*                              CODE MESSAGES
*
WRITER   BAL   BRANPRT,XWRTPRT
         B     TEST
*
*                                 RETURN CONTROL
*
RETCNTL  EQU   *                                                  19032
         MVI   SETUPBFR+1,C'*'
         MVC   2(78,SETUPADR),1(SETUPADR)
         MVI   0(SETUPADR),C'-'         SETUP TO SPACE TWICE
         BAL   BRANPRT,XWRTPRT
         TM    CSWORD+5,X'0E'          EITHER CHAN CTRL OR I/F CTRL CHK
         BC    8,MSG                   NO, PRINT LOGOUT MESSAGE.
FIN1     DS    0C
         LA    R0,0                     ZERO WORK REGISTER
         ST    R0,NXENTRY               CLEAR ENTRY POINTER
         L     R13,SVR13                RESTORE REG 13
         LM    R14,R12,12(R13)          RESTORE REGISTERS
         BR    R14                      RETURN
*
*                            PRINT NO-LOGOUT MESSAGE
*
MSG      MVC   SETUPBFR+1(78),ERMSG     MESSAGE IN BUFFER
         BAL   BRANPRT,XWRTPRT
         L     R0,NOLOGPTR              POINT                  @YM2954P
         L     R1,RG9PTR                 AROUND                @YM2954P
         ST    R0,AD0(R1)                 LOGOUT               @YM2954P
         L     R0,NOLOGLAB                 LINES               @YM2954P
         L     R1,LPPTR                     AND                @YM2954P
         ST    R0,AD0(R1)                    LABELS            @YM2954P
         B     FIN1
         SPACE
****    ROUTINE TO RETURN CONTROL TO CONTROL MODULE
XWRTPRT  DS    0C
         ST    BRANPRT,NXENTRY          STORE LINK ADDRESS
         STM   R12,R10,MYSAVE           SAVE SUBROUTINE REGS
         L     R0,RTNPTR                LOAD ADCON FOR RETURN POINTER
         L     R1,RG9PTR                LOAD POINTER TO REG9
         ST    R0,AD0(R1)               STORE RETURN POINTER
         L     R0,LBLPTR                LOAD POINTER TO LABEL
         L     R1,LPPTR                 LOAD POINTER TO LP
         ST    R0,AD0(R1)               STORE LABEL POINTER
         MVI   L0(R3),X09               SET CARRIAGE CTL CHAR
         L     R13,SVR13                RESTORE REG 13
         LM    R14,R12,12(R13)          RESTORE REGISTERS
         BR    R14                      RETURN
*
*                            STORAGE
*
         DS    0F
TYPE     EQU   XDADBUF+5                                           MP
ENVCH    EQU   XDADBUF+56                                          MP
ENVMS    EQU   XDADBUF+63                                          MP
GPRMS    EQU   XDADBUF+248                                         MP
ONEVD    EQU   X'01'                                               MP
TWEN     EQU   X'20'                                               MP
EIGHTY   EQU   X'80'                                               MP
VDSTAR   EQU   XPRTBUF+79                                          MP
PLACE    EQU   ENVCH+32                                            MP
F252     EQU   252                                                 MP
FROMVD   EQU   GPRMS+32                                            MP
OCTVD    EQU     80                                                MP
AREAVD   EQU   GPRMS+92                                            MP
ID       EQU   X'08'                                               MP
MSBIT    EQU   X'10'                                                MP
K0       EQU   0                                                  19E03
K1       EQU   1                                                  19E03
K2       EQU   2                                                  19E03
K4       EQU   4                                                  19E03
K8       EQU   8                                                  19E03
K10      EQU   10                                                 19E03
K20      EQU   20                                                 19E02
K21      EQU   21                                                 19E02
K24      EQU   24                                                 19E03
FOXDOG   EQU   X'FD'                                              19E03
REL19    EQU   19                                                 19E02
XPRTBUF1 EQU   XPRTBUF+1                                          19E03
*
SETUPBFR EQU   XPRTBUF
CSWORD   DC    D'0'                CSW LOCATION                   19032
ERPIBFLD DC    F'0'                LAST HALF ERPIB                19032
MULTISYS DC    F'0'                MULTI-PROCESSING INFO          19032
MASK     DC    F'7'
NXENTRY  DC    F'0'
MYSAVE   DS    15F
VS2FLG   DC    X'00'                                           @YL02021
VS2      DC    A(VS2FLG)                                       @YL02021
SVR13    DS    1F
RTNPTR   DC    A(PRTERPIB-4)
RG9PTR   DC    A(REG9)
LBLPTR   DC    A(LABELEND-1)
LPPTR    DC    A(LP)
NOLOGPTR DC    A(VS2LINE-4)                                    @YM2954P
NOLOGLAB DC    A(VS2LAB-1)                                     @YM2954P
NOCRH    DC    A(NOTCRH-4)                                     @Z30CIMC
NOCRH1   DC    A(NOTCRH1-1)                                    @Z30CIMC
CONST    DC    H'44'
TWOX     DC    H'2'
SET1     EQU   SETUPBFR+22
SET2     EQU   SETUPBFR+21
*
*                            REGISTERS
REG      EQU   11
UPKREG   EQU   6                       ADDRESSES UNPACK AREA.
SETUPADR EQU   7                       ADDRESSES PRINT BUFFER.
PRTABREG EQU   8                       ADDRESSES CONVERSION TABLE.
BASEREG  EQU   9                       BASE REGISTER.
BRANPRT  EQU   11                      ADDRESSES PRINT ROUTINE.
CLEAREG  EQU   12
SAVADDR  EQU   13                      ADDRESSES REGISTER SAVE AREA.
BRANADDR EQU   14                      BRANCH REGISTER.
*
*                            MESSAGES
*
*
NOLOG    DC    C'CHANNEL FAILED TO LOG'
CAUSERR  DC    C'   CSW STORED BY  --             '
ERRINT   DC    C'   CSW STORED BY  INTERRUPT               '
ERRSIO   DC    C'SIO'
ERRTIO   DC    C'TIO'
ERRHIO   DC    C'HIO'
NOUCB    DC    C'   NO ADDITIONAL ERROR INFORMATION AVAILABLE.'
COMCODE  DC    C'   TERMINATION BY  --  '
SYSRES   DC    C' SYSTEM RESET- CODE 3'
SELRES   DC    C' SELECTIVE RESET- CODE 2'
FORCEND  DC    C' FORCED ENDING SEQUENCE- CODE 1'
INTDISCN DC    C' INTERFACE DISCONNECT- CODE 0'
RETCDVAL DC    C'   TIME CHANNEL DETECTED ERROR -'
RCMSG    DC    C'RETRY CODE    '
MSGSTRT  DC    C' WHILE EXECUTING TIO                        '
         DC    C' BETWEEN COMMAND OUT AND UNIT STATUS RETURN '
         DC    C' COMMAND ACCEPTED BUT BEFORE DATA TRANSFER  '
         DC    C' SOME DATA TRANSFER-CSW COMMAND ADR UPDATED '
         DC    C' COMMAND REJECTED OR COMMAND OUT NOT SENT   '
         DC    C' COMMAND ACCEPTED-DATA TRANSFER UNDETERMINED'
         DC    C' COULD NOT BE ASSESSED                      '
NOTVM    DC    C' COULD NOT BE ASSESSED                      '
NORETRY  DC    C'   PROGRAM ASSESSED NO RETRY'
DISCIN   DC    C'   DISCONNECT IN ISSUED'                         19032
VALIDITY DC    C'   VALIDITY OF RECORDED DATA '
VALCOUNT DC    C'            COUNT              = NOT VALID'
SENSDATA DC    C'            SENSE DATA         = NOT STORED'
INVALUN  DC    C'            UNIT STATUS        = NOT VALID'
INVALCAD DC    C'            COMMAND ADDRESS    = NOT VALID'
INVALCHA DC    C'            CHANNEL ADDRESS    = NOT VALID'
INVALDVA DC    C'            DEVICE ADDRESS     = NOT VALID'
PSOERR   DC    C'   PROBABLE SOURCE OF ERROR- '
CPUERMSG DC    C'CPU'
CHANERMS DC    C'CHANNEL'
SCUERMS  DC    C'STORAGE CONTROL UNIT'                            19032
STOGERMS DC    C'STORAGE'
IOINFER  DC    C'CONTROL UNIT '
HEADER   DC    C' CHANNEL  ERROR  ANALYSIS'
ERMSG    DC    C'CHANNEL CTRL OR I/F CTRL CHECK '
         DC    C'NOT INDICATED IN CSW-NO LOGOUT'
         DC    C' WITH THIS RECORD'
MSHEAD   DC    C'MULTI-SYSTEM INFORMATION'              MESSAGES   MP
MSCPUID  DC    C'CPU 1 FAILED'                           FOR        MP
MSCPUST  DC    C'CPU STATUS WAS '              ONLY THE            MP
PART     DC    C'PARTITIONED'                           M65MP TO BE  MP
SHAR     DC    C'SHARED'                        ONLY                MP
RECON    DC    C' BUT RECONFIGURED OUT'                 WRITTEN ON  MP
CHCNFIG  DC    C'CPU 1 CHANNEL CONFIGURATION'            SEC       MP
CHTAB    DC    C'CH0--ON CH1--ON CH2--ON CH3--ON CH4--ON'  *       MP
         DC    C' CH5--ON CH6--ON'                    STORAGE  FOR   MP
MSNERPIB DC    C'ERPIB NOT CREATED'         EREP RECORDS           MP
OFF      DC    C'OFF'                         CONSTANTS            MP
         DC    C'LINE   '                       MESSAGES            MP
LEVELVD  EQU    3            MODULE LEVEL INDICATOR                MP
         DROP  R15
         EJECT
         USING IFCE2880,R9
FORMAT1  DC    F'0'
FORMAT2  DC    F'0'
LABELPTR DC    A(LABLAREA)
DISP     DC    FL2'0'
         SPACE 2
***********************************************************************
*        2880C ABSTRACT FORMATER                                      *
*                                                                     *
***********************************************************************
*                                                                     *
         DC    X'01'
         DC        X'000B8B00'
         LABEL ' '
*
         LINE       (9,40),(1,35),SKIP=2
         HEX        XMOD,0,2B
         HEX        XSER,0,3B
         LABEL      'MODEL','SERIAL NO.'
*
         LINE  (10,)
         SYSRELN    XRELN,1
         LABEL      ''
         LINE       (21,40)
         ROUTINE    XKEY,SETSOURC
         LABEL      '--- RECORD SOURCE -','TYPE - INBOARD'
*
         LINE
         ROUTINE    XJOBN,SETPGMN
         LABEL      'JOB NAME'
*
         LINE       ,(8,40),SKIP=1
         ROUTINE    XSWS8,CONVTIME
         LABEL      'DAY  YEAR','HH MM SS.TH'
         LINE       (8,40),(1,40),SKIP=2
         ROUTINE    XDATE,SETDATE
         HEX        XTIME,1,4B
         LABEL      'DATE _','TIME _'
*
         LINE       (23,1),(1,1)
         HEX        XCUA,0,3B
         LABEL      'CHANNEL/UNIT ADDRESS'
         LINE  (30,1),(1,1),SKIP=2                             @YL02021
         ROUTINE   XCHID,ISITVS2                               @YL02021
         HEX   VCUA                                            @YL02021
         LABEL     'ADDR.STORED IN LOC 184'                    @YL02021
*
         LINE       ,(14,1),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL      'CC   DA    FL     CT'
         LINE       (14,3),(1,1),SKIP=2
         HEX        XFCCWCC,0,1B
         HEX        XFCCWDA,0,3B
         ROUTINE    XKEY,SPACER2
         HEX        XFCCWFL,0,1B
         HEX        XFCCW0,0,1B
         HEX        XFCCWCT,0,2B
         LABEL      'FAILING CCW'
*
         LINE       ,(14,1),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL      'K    CA    US CS  CT'
         LINE       (14,3),(1,1),SKIP=2
         HEX        XCSWK,0,1B
         HEX        XCSWCA,0,3B
         ROUTINE    XKEY,SPACER2
         ROUTINE    XCSWUS0,SETHEX
         ROUTINE    XCSWCS0,SETHEX
         HEX        XCSWCT,0,2B
         LABEL      'CSW'
*
         LINE       ,(2,38),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL      'UNIT STATUS','CHANNEL STATUS'
*
         LINE       (21,38),(3,38)
         BIN        XCSWUS0
         BIN        XCSWCS0
         LABEL      'ATTENTION','PRGM-CTLD IRPT'
         LINE
         BIN        XCSWUS1
         BIN        XCSWCS1
         LABEL      'STATUS MODIFIER','INCORRECT LENGTH'
         LINE
         BIN        XCSWUS2
         BIN        XCSWCS2
         LABEL      'CONTROL UNIT END','PROGRAM CHECK'
         LINE
         BIN        XCSWUS3
         BIN        XCSWCS3
         LABEL      'BUSY','PROTECTION CHECK'
         LINE
         BIN        XCSWUS4
         BIN        XCSWCS4
         LABEL      'CHANNEL END','CHAN DATA CHECK'
         LINE
         BIN        XCSWUS5
         BIN        XCSWCS5
         LABEL      'DEVICE END','CHAN CTRL CHECK'
         LINE
         BIN        XCSWUS6
         BIN        XCSWCS6
         LABEL      'UNIT CHECK','I/F CTRL CHECK'
         LINE       ,,SKIP=2
         BIN        XCSWUS7
         BIN        XCSWCS7
         LABEL      'UNIT EXCEPTION','CHAINING CHECK'
*
         LINE       ,(1,1),SKIP=1
         ROUTINE    XKEY,SKIPPER
         LABEL      'I/O UNIT FOUND BUSY'
         LINE       (27,5),(2,1),SKIP=2
         HEX        XAIO1
         HEX        XAIO2
         HEX        XAIO3
         HEX        XAIO4
         HEX        XAIO5
         HEX        XAIO6
         HEX        XAIO7
         HEX        XAIO8
         ROUTINE    XKEY,SETAIO
         LABEL      'CHANNEL/UNIT ADDR'
         LINE  ,(1,1),SKIP=1
         LABEL      '--- CHANNEL TYPE ---'
         LINE       ,(8,1),SKIP=2
         LABEL      '2880'
         LINE       ,(1,1),SKIP=1
         LABEL      'HEADER SENSE SWITCHES FOUND ON'
         LINE       ,(2,1)
         ROUTINE    XSWS8,CHKSW9
         LABEL      'RECORD INCOMPLETE'
         LINE
         ROUTINE    XSWS8,CHKSW10
         LABEL      'SYSTEM TERMINATED'
         LINE
         ROUTINE    XSWS8,CHKSW11
         LABEL      'UNSUPPORTED CHANNEL'
         LINE
         ROUTINE    XSWS8,CHKSW12
         LABEL      'CUA ILLEGAL'
         LINE
         ROUTINE    XSWS8,CHKSW13
         LABEL      'PORTION OF RECORD HAS BEEN DESTROYED'
         LINE
         ROUTINE    XSWS8,CHKSW14
         LABEL      'ERP WERE IN PROGRESS'
         LINE
         ROUTINE    XKEY,SKIPPER                                 P0417
         LABEL      ' '                                          P0417
         SPACE 2
PRTERPIB LINE       (1,1),(1,1),SKIP=1
         ROUTINE    XSWS8,IFCASR01
LABELEND LABEL      ''
         LINE
         ROUTINE BKMXPPCI,ALLFFF                                 43068
         LABEL ''
         LINE  ,(1,1),SKIP=2
         LABEL '2880 MPX CHANNEL'
         LINE
         LABEL '2880 MPX CHANNEL LOGOUT ABSTRACT'
         LINE  ,(1,),SKIP=1
         ROUTINE    BKMXPPCI,START
         LABEL ''
         LINE
         LABEL 'THE FOLLOWING CHANNEL CHECK TRIGGERS WERE SET'
         LINE  ,(25,),SKIP=1
         ROUTINE    BKMXDACK,@ABSTRAT
         LABEL      'CH DATA CHK'
         LINE
         ROUTINE BKMXCTCK,@ABSTRAT
         LABEL 'CH CTRL CHK'
         LINE
         ROUTINE    BKMXIFCK,@ABSTRAT
         LABEL      'INTF CTRL CHK'
         LINE  ,(1,),SKIP=1
         LABEL 'THE FOLLOWING ERROR TRIGERS WERE SET'
         LINE  ,(25,),SKIP=1
         ROUTINE BKMXPCCK,@ABSTRAT
         LABEL 'PSEUDO CTRL CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXNORP,@ABSTRAT
         LABEL 'NO RESP'
         LINE  ,,SKIP=1
         ROUTINE BKMXMINT,@ABSTRAT
         LABEL 'MPLE IN TAG'
         LINE  ,,SKIP=1
         ROUTINE BKMXILSQ,@ABSTRAT
         LABEL 'ILL SEQ'
         LINE  ,,SKIP=1
         ROUTINE BKMXSCCK,@ABSTRAT
         LABEL 'SCD CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXIRCK,@ABSTRAT
         LABEL 'IRC CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXWCCK,@ABSTRAT
         LABEL 'WC CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXTCCK,@ABSTRAT
         LABEL 'TC CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXBRCK,@ABSTRAT
         LABEL 'BIRC CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXLBCK,@ABSTRAT
         LABEL 'LBP CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXIOIV,@ABSTRAT
         LABEL 'I/O INVD MK IN'
         LINE  ,,SKIP=1
         ROUTINE BKMXIOPK,@ABSTRAT
         LABEL 'I/O MK IN P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXSSPC,@ABSTRAT
         LABEL 'SUB CHAN STAT P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXUPCK,@ABSTRAT
         LABEL 'UCWAR P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXUCCK,@ABSTRAT
         LABEL 'UCWAR CT CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXIVUC,@ABSTRAT
         LABEL 'INVD UCWAR'
         LINE  ,,SKIP=1                                        @YA02787
         ROUTINE BKMXDUM1,@ABSTRAT                             @YA02787
         LABEL 'SCU STOR HANG'                                 @YA02787
         LINE  ,,SKIP=1
         ROUTINE BKMXSMPK,@ABSTRAT
         LABEL 'SCU MK P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXSAPK,@ABSTRAT
         LABEL 'STOR ADR P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXKPCK,@ABSTRAT
         LABEL 'KEY P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXIVAK,@ABSTRAT
         LABEL 'INVD ADR CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXSPIK,@ABSTRAT
         LABEL 'STOR PROT INVD KEYS'
         LINE  ,,SKIP=1
         ROUTINE BKMXPICK,@ABSTRAT
         LABEL 'UA NO CMPR'
         LINE  ,,SKIP=1
         ROUTINE BKMXSQCK,@ABSTRAT
         LABEL 'SEQ CLK CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXIVUA,@ABSTRAT
         LABEL 'UNIT ADR CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXCXCK,@ABSTRAT
         LABEL 'I RSPNSE INVLD UA'
         LINE  ,,SKIP=1
         ROUTINE BKMXCBCK,@ABSTRAT
         LABEL 'CU BUSY CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXLGDI,@ABSTRAT
         LABEL 'LOG DISC IN'
         LINE  ,,SKIP=1
         ROUTINE BKMXTOSI,@ABSTRAT
         LABEL 'STOR INTF T/O'
         LINE  ,,SKIP=1
         ROUTINE BKMXTOIO,@ABSTRAT
         LABEL 'CHN T/O'
         LINE  ,,SKIP=1
         ROUTINE BKMXUDCK,@ABSTRAT
         LABEL 'STOR DATA CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXWDCK,@ABSTRAT
         LABEL 'WD PNTR CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXMGCK,@ABSTRAT
         LABEL 'CRB PTY CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXSOPK,@ABSTRAT
         LABEL 'SIR OUT P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXSIPC,@ABSTRAT
         LABEL 'LSD DATA CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXSPCK,@ABSTRAT
         LABEL 'SCU BO P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXBOPK,@ABSTRAT
         LABEL 'BUS OUT P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXBIPK,@ABSTRAT
         LABEL 'BUS IN P CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXARCK,@ABSTRAT
         LABEL 'AR IN CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXALCK,@ABSTRAT
         LABEL 'AL IN CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXHSCK,@ABSTRAT
         LABEL 'HS CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXCYCK,@ABSTRAT
         LABEL 'CARRY CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXJLCK,@ABSTRAT
         LABEL 'J LTH CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXCARK,@ABSTRAT
         LABEL 'CMND ADR REG CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXCTCT,@ABSTRAT
         LABEL 'CT REG CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXDTAR,@ABSTRAT
         LABEL 'DATA ADR REG CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXBYT0,@ABSTRAT
         LABEL 'BYTE 0'
         LINE  ,,SKIP=1
         ROUTINE BKMXBYT1,@ABSTRAT
         LABEL 'BYTE 1'
         LINE (1,),(1,),SKIP=1
         ROUTINE XDUM1,RTN0
         LABEL 'THE STATE OF THE I/O INTERFACE IS'
         LINE  ,,SKIP=1
         LABEL 'THE FOLLOWING I/O INTERFACE TAGS ARE SET'
         LINE  ,(25,),SKIP=1
         ROUTINE BKMXAOUT,@ABSTRAT
         LABEL 'ADR OUT'
         LINE  ,,SKIP=1
         ROUTINE BKMXSOUT,@ABSTRAT
         LABEL 'SEL OUT'
         LINE  ,,SKIP=1
         ROUTINE BKMXSVOT,@ABSTRAT
         LABEL 'SVC OUT'
         LINE  ,,SKIP=1
         ROUTINE BKMXCMOT,@ABSTRAT
         LABEL 'CMND OUT'
         LINE  ,,SKIP=1
         ROUTINE BKMXSBOT,@ABSTRAT
         LABEL 'SUP OUT'
         LINE  ,,SKIP=1
         ROUTINE BKMXOPOT,@ABSTRAT
         LABEL 'OP OUT'
         LINE  ,,SKIP=1
         ROUTINE BKMXDAOT,@ABSTRAT
         LABEL 'DATA OUT'
         LINE  ,,SKIP=1
         ROUTINE BKMXAORI,@ABSTRAT
         LABEL 'ADR IN'
         LINE  ,,SKIP=1
         ROUTINE BKMXSTAI,@ABSTRAT
         LABEL 'STA IN'
         LINE  ,,SKIP=1
         ROUTINE BKMXREQI,@ABSTRAT
         LABEL 'REQ IN'
         LINE  ,,SKIP=1
         ROUTINE BKMXINOP,@ABSTRAT
         LABEL 'OP IN'
         LINE  ,,SKIP=1
         ROUTINE BKMXISSL,@ABSTRAT
         LABEL 'SEL IN'
         LINE  ,(1,),SKIP=1
         LABEL 'THE FOLLOWING CONTROL TRIGGERS ARE SET'
         LINE  ,(25,),SKIP=1
         LABEL '  PRIORITY'
         LINE  ,,SKIP=1
         ROUTINE BKMXCURC,@ABSTRAT
         LABEL 'CU REQ'
         LINE  ,,SKIP=1
         ROUTINE BKMXINSR,@ABSTRAT
         LABEL 'INSTR'
         LINE  ,,SKIP=2
         ROUTINE BKMXESCN,@ABSTRAT
         LABEL 'SCAN'
         LINE  ,,SKIP=1
         LABEL '  MAJOR OP'
         LINE  ,,SKIP=1
         ROUTINE BKMXSCAN,@ABSTRAT
         LABEL 'SCAN'
         LINE  ,,SKIP=1
         ROUTINE BKMXCCRQ,@ABSTRAT
         LABEL 'CU REQ'
         LINE  ,,SKIP=1
         ROUTINE BKMXSSIO,@ABSTRAT
         LABEL 'SIO'
         LINE  ,,SKIP=1
         ROUTINE BKMXTTIO,@ABSTRAT
         LABEL 'TIO'
         LINE  ,,SKIP=1
         ROUTINE BKMXHHIO,@ABSTRAT
         LABEL 'HIO'
         LINE  ,,SKIP=1
         ROUTINE BKMXDTXF,@ABSTRAT
         LABEL 'DATA XFER'
         LINE  ,,SKIP=1
         ROUTINE BKMXCCRS,@ABSTRAT
         LABEL 'CHAIN CMND RSLCT'
         LINE  ,,SKIP=1
         ROUTINE BKMXCCDA,@ABSTRAT
         LABEL 'CDA'
         LINE  ,,SKIP=1
         ROUTINE BKMXCCPR,@ABSTRAT
         LABEL 'CC PREP'
         LINE  ,,SKIP=1
         ROUTINE BKMXTERM,@ABSTRAT
         LABEL 'TERM'
         LINE  ,,SKIP=1
         ROUTINE BKMXINRP,@ABSTRAT
         LABEL 'IRPT RESP'
         LINE  ,,SKIP=1
         ROUTINE BKMXIIPL,@ABSTRAT
         LABEL 'IPL'
         LINE  ,,SKIP=2
         ROUTINE BKMXRSET,@ABSTRAT
         LABEL 'RESET'
         LINE  ,,SKIP=1
         LABEL '  SEQUENCE'
         LINE  ,,SKIP=1
         ROUTINE BKMXUASU,@ABSTRAT
         LABEL 'UA SETUP'
         LINE  ,,SKIP=1
         ROUTINE BKMXUCW2,@ABSTRAT
         LABEL 'UCW'
         LINE  ,,SKIP=1
         ROUTINE BKMXCTFT,@ABSTRAT
         LABEL      'CTRL FETCH'
         LINE  ,,SKIP=1
         ROUTINE BKMXCINS,@ABSTRAT
         LABEL 'CTRL INSP'
         LINE  ,,SKIP=1
         ROUTINE BKMXINSL,@ABSTRAT
         LABEL 'INIT SEL'
         LINE  ,,SKIP=1
         ROUTINE BKMXSTCD,@ABSTRAT
         LABEL 'SET CODE'
         LINE  ,,SKIP=1
         ROUTINE BKMXDTSQ,@ABSTRAT
         LABEL 'DATA REQ'
         LINE  ,,SKIP=1
         ROUTINE BKMXRDDT,@ABSTRAT
         LABEL 'RESID DATA'
         LINE  ,,SKIP=1
         ROUTINE BKMXCTRC,@ABSTRAT
         LABEL 'CT RCVR'
         LINE  ,,SKIP=1
         ROUTINE BKMXCSWS,@ABSTRAT
         LABEL 'CSW STORE'
         LINE  ,,SKIP=1
         ROUTINE BKMXRSFL,@ABSTRAT
         LABEL 'RESET FLUSH'
         LINE  ,,SKIP=1
         ROUTINE BKMXCCHK,@ABSTRAT
         LABEL 'CHAIN CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXINCH,@ABSTRAT
         LABEL 'IND CHAIN'
         LINE  ,,SKIP=1
         ROUTINE BKMXIPLT,@ABSTRAT
         LABEL 'IPL TERM'
         LINE  ,,SKIP=2
         ROUTINE BKMXIOTM,@ABSTRAT
         LABEL 'I/O TERM'
         LINE  ,,SKIP=1
         LABEL '  END OF SEQUENCE'
         LINE  ,,SKIP=1
         ROUTINE BKMXUAST,@ABSTRAT
         LABEL 'UA SET UP'
         LINE  ,,SKIP=1
         ROUTINE BKMXUCW3,@ABSTRAT
         LABEL 'UCW'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLFT,@ABSTRAT
         LABEL 'CTRL FETCH'
         LINE  ,,SKIP=1
         ROUTINE BKMXCINP,@ABSTRAT
         LABEL 'CTRL INSP'
         LINE  ,,SKIP=1
         ROUTINE BKMXISL2,@ABSTRAT
         LABEL 'INIT SEL'
         LINE  ,,SKIP=1
         ROUTINE BKMXSTC2,@ABSTRAT
         LABEL 'SET CODE'
         LINE  ,,SKIP=1
         ROUTINE BKMXDSQ2,@ABSTRAT
         LABEL 'DATA REQ'
         LINE  ,,SKIP=1
         ROUTINE BKMXRSD2,@ABSTRAT
         LABEL 'RESID DATA'
         LINE  ,,SKIP=1
         ROUTINE BKMXCRC2,@ABSTRAT
         LABEL 'CT RCVR'
         LINE  ,,SKIP=1
         ROUTINE BKMXCSW2,@ABSTRAT
         LABEL 'CSW STORE'
         LINE  ,,SKIP=1
         ROUTINE BKMXRSF2,@ABSTRAT
         LABEL 'RESET FLUSH'
         LINE  ,,SKIP=1
         ROUTINE BKMXCCK2,@ABSTRAT
         LABEL 'CHAIN CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXICH2,@ABSTRAT
         LABEL 'IND CHAIN'
         LINE  ,,SKIP=1
         ROUTINE BKMXIPT2,@ABSTRAT
         LABEL 'IPL TERM'
         LINE  ,,SKIP=2
         ROUTINE BKMXIOT2,@ABSTRAT
         LABEL 'I/O TERM'
         LINE  ,,SKIP=1
         LABEL '  MODIFIER'
         LINE  ,,SKIP=1
         ROUTINE BKMXCCWF,@ABSTRAT
         LABEL 'CCW FETCH'
         LINE  ,,SKIP=1
         ROUTINE BKMX1SER,@ABSTRAT
         LABEL '1ST SER-0'
         LINE  ,,SKIP=1
         ROUTINE BKMXDAT1,@ABSTRAT
         LABEL '1ST DATA PRE FTH TRG'
         LINE  ,,SKIP=1
         ROUTINE BKMXPPE2,@ABSTRAT
         LABEL '2ND DATA PRE FTH TRG'
         LINE  ,,SKIP=1
         ROUTINE BKMXFET3,@ABSTRAT
         LABEL '3RD DATA PRE FTH TRG'
         LINE  ,,SKIP=1
         ROUTINE BKMXTGDL,@ABSTRAT
         LABEL 'LST DATA PRE FTH TRG'
         LINE  ,,SKIP=1
         ROUTINE BKMXCDPF,@ABSTRAT
         LABEL 'CD PRE FETCH'
         LINE  ,,SKIP=1
         ROUTINE BKMXLDCY,@ABSTRAT
         LABEL 'LAST DATA CYC'
         LINE  ,,SKIP=1
         ROUTINE BKMXCMDS,@ABSTRAT
         LABEL 'CMND-O SENT'
         LINE  ,,SKIP=1
         ROUTINE BKMXXFCT,@ABSTRAT
         LABEL 'TRFD CTRL'
         LINE  ,,SKIP=1
         ROUTINE BKMXRCHE,@ABSTRAT
         LABEL 'REM CHAN END'
         LINE  ,,SKIP=1
         ROUTINE BKMXUCW1,@ABSTRAT
         LABEL 'UCW 1'
         LINE  ,,SKIP=1
         ROUTINE BKMXMOD0,@ABSTRAT
         LABEL 'MOD 0'
         LINE  ,,SKIP=1
         ROUTINE BKMXSPCC,@ABSTRAT
         LABEL 'SUPP CC'
         LINE  ,,SKIP=1
         ROUTINE BKMXHIOB,@ABSTRAT
         LABEL 'HIO/HDV BUSY'
         LINE  ,,SKIP=1
         ROUTINE BKMXHDVM,@ABSTRAT
         LABEL 'HDV MOD'
         LINE  ,,SKIP=1
         ROUTINE BKMXPCBD,@ABSTRAT
         LABEL 'PCI BLK DATA'
         LINE  ,,SKIP=1
         ROUTINE BKMXRTIC,@ABSTRAT
         LABEL 'REM TIC'
         LINE  ,,SKIP=1
         ROUTINE BKMXCTFC,@ABSTRAT
         LABEL 'CTRL FMT CHK'
         LINE  ,,SKIP=1
         ROUTINE BKMXSGTD,@ABSTRAT
         LABEL 'STA-1 GTD'
         LINE  ,,SKIP=1
         ROUTINE BKMXDSIH,@ABSTRAT
         LABEL 'DATA SEQ INH'
         LINE  ,,SKIP=1
         ROUTINE BKMXRSDS,@ABSTRAT
         LABEL 'RESID STORE'
         LINE  ,,SKIP=1
         ROUTINE BKMXOFLO,@ABSTRAT
         LABEL 'CT OVFL'
         LINE  ,,SKIP=2
         ROUTINE BKMXCMDR,@ABSTRAT
         LABEL 'CMND RETRY'
         LINE  ,,SKIP=1
         LABEL '  SEQ CLOCK'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLC1,@ABSTRAT
         LABEL 'A'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLCB,@ABSTRAT
         LABEL 'B'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLCC,@ABSTRAT
         LABEL 'C'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLCD,@ABSTRAT
         LABEL 'D'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLC2,@ABSTRAT
         LABEL 'E'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLCF,@ABSTRAT
         LABEL 'F'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLCG,@ABSTRAT
         LABEL 'G'
         LINE  ,,SKIP=1
         ROUTINE BKMXCLCH,@ABSTRAT
         LABEL 'H'
         SPACE 2
         LINE  ,(4,),SKIP=2
         LABEL '2880 MPX CHANNEL LOGOUT EDIT'
         LINE  (69,),(25,),SKIP=1
S1       EQU   *
         ROUTINE BKMXKKEY,@PARITY
         LABEL 'KEY'
         LINE  (57,),,SKIP=1                                   @YA02787
S2       EQU   *
         ROUTINE  BKMXCAB1,@PARITY                             @YA02787
         LABEL 'COMMAND ADDRESS'
         LINE  (63,),(25,),SKIP=1
S3       EQU   *
         ROUTINE BKMXDVSA,@PARITY
         LABEL 'UNIT AND CHAN STATUS'
         LINE  ,,SKIP=1                                        @YA02787
S4       EQU   *
         ROUTINE  BKMXCRB2,@PARITY                             @YA02787
         LABEL 'BYTE COUNT'
         LINE  (69,),(25,),SKIP=1
S5       EQU   *
         ROUTINE BKMXCCB0,@PARITY
         LABEL 'COMMAND CODE'
         LINE  (57,),,SKIP=1                                   @YA02787
S6       EQU   *
         ROUTINE  BKMXDAB1,@PARITY                             @YA02787
         LABEL 'DATA ADDRESS'
         LINE  (51,),,SKIP=1                                   @YA02787
S7       EQU   *
         ROUTINE  BKMXLSI0,@PARITY                             @YA02787
         LABEL 'LOCAL STORE INTERFACE'
         LINE  ,,SKIP=1                                        @YA02787
S8       EQU   *
         ROUTINE  BKMXLSD0,@PARITY                             @YA02787
         LABEL 'LOCAL STORE DATA'
         LINE  ,,SKIP=1                                        @YA02787
S9       EQU   *
         ROUTINE  BKMXSR00,@PARITY                             @YA02787
         LABEL 'ST INTERFACE REG WORD 0'
         LINE
S10      EQU   *
         ROUTINE  BKMXSR10,@PARITY                             @YA02787
         LABEL 'ST INTERFACE REG WORD 1'
         LINE  ,,SKIP=1                                        @YA02787
S11      EQU   *
         ROUTINE  BKMXSR20,@PARITY                             @YA02787
         LABEL 'ST INTERFACE REG WORD 2'
         LINE  ,,SKIP=1                                        @YA02787
S12      EQU   *
         ROUTINE  BKMXSR30,@PARITY                             @YA02787
         LABEL 'ST INTERFACE REG WORD 3'
         LINE  (63,),,SKIP=1                                   @YA02787
S13      EQU   *
         ROUTINE  BKMXIRB0,@PARITY                             @YA02787
         LABEL 'INTERFACE REG OUT'
         LINE  (57,),,SKIP=1                                   @YA02787
S14      EQU   *
         ROUTINE  BKMXLTH1,@PARITY                             @YA02787
         LABEL 'J LATCHES'
         LINE  (51,),,SKIP=1                                   @YA02787
S15      EQU   *
         ROUTINE  BKMXPRSM,@PARITY                             @YA02787
         LABEL 'CHANNEL MCW'
         LINE  (51,),(25,),SKIP=1
S16      EQU   *
         ROUTINE BKMXUCBO,@PARITY
         LABEL 'UNIT CONTROL WORD'
         LINE  (69,),(25,),SKIP=1
S17      EQU   *
         ROUTINE BKMXUCWR,@PARITY
         LABEL  'UCW ADDRESS REG'
         LINE
S18      EQU   *
         ROUTINE BKMXIAB8,@PARITY
         LABEL 'INTRPT ADR BUFFER'
         LINE  (69,),(25,),SKIP=3
S19      EQU   *
         ROUTINE BKMXSMDR,@PARITY
         LABEL 'SIM I/O DATA REG'
* * * * * * * * *  2880 BLOCK MPX DATA FORMATTER  * * * * * * * * *
         SPACE 2
         LINE  ,(1,),SKIP=2
         LABEL 'CONTROL TRIGGERS'
         LINE  (22,24),(1,24),SKIP=1
         LABEL 'MCW STATUS FIELD','I/O INTERFACE CTRLS',               X
               'CONTROL MODIFIERS','CONTROL SEQUENCE'
         LINE
         BIN   BKMXDM20
         BIN   BKMXUTSL
         BIN   BKMXCCWF
         BIN   BKMXUASU
         LABEL 'AUTO SIM I/O','UNIT SEL','CCW FETCH','UA SETUP'
         LINE
         BIN   BKMXMCWP
         BIN   BKMXTDDA
         BIN   BKMX1SER
         BIN   BKMXUCW2
         LABEL 'MCW IDENT','TFRD DATA','1ST SER-OUT','UCW'
         LINE
         BIN   BKMXLOGO
         BIN   BKMXALLI
         BIN   BKMXDAT1
         BIN   BKMXCTFT
         LABEL 'LOG OUT','ALLOW INTF','1ST DATA PRE FTH TRG',          X
               'CTRL FETCH'
         LINE
         BIN   BKMXMHCL
         BIN   BKMXINTD
         BIN   BKMXPPE2
         BIN   BKMXCINS
         LABEL 'MACH CHK LOG','INIT DATA','2ND DATA PRE FTH TGR',      X
               'CTRL INSP'
         LINE
         BIN   BKMXRVSP
         BIN   BKMXSDOM
         BIN   BKMXFET3
         BIN   BKMXINSL
         LABEL 'REV SIM I/O PTY','SVC DATA OUT MEM','3RD DATA PRE FTH TX
               RG','INIT SEL'
         LINE
         BIN   BKMXRSPT
         BIN   BKMXSYTG
         BIN   BKMXTGDL
         BIN   BKMXSTCD
         LABEL 'REV SIR PTY','SYNC TGR 1','LST DATA PRE FTH TGR',      X
               'SET CODE'
         LINE
         BIN   BKMXENCC
         BIN   BKMXSYLT
         BIN   BKMXCDPF
         BIN   BKMXDTSQ
         LABEL 'ENABLE CTR CHK','SYNC LTH 1','CD PRE FETCH','DATA REQ'
         LINE
         BIN   BKMXSPCD
         BIN   BKMXSYT2
         BIN   BKMXLDCY
         BIN   BKMXRDDT
         LABEL 'SPLIT CE/DE','SYNC TGR 2','LAST DATA CYCLE',           X
               'RESIDUAL DATA'
         LINE  (46,24),(25,24)
         BIN   BKMXSYL2
         BIN   BKMXCMDS
         BIN   BKMXCTRC
         LABEL 'SYNC LTH 2','CMND-O SENT','CT REVR'
         LINE  (22,24),(1,24),SKIP=1
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXIRIM
         BIN   BKMXXFCT
         BIN   BKMXCSWS
         LABEL 'MCW SIM I/O TAGS','IR IN MT','TRFD CTRL','CSW STORE'
         LINE
         BIN   BKMXSRQI
         BIN   BKMXIROM
         BIN   BKMXRCHE
         BIN   BKMXRSFL
         LABEL 'REQ IN','IR OUT MT','REM CHAN END','RESET FLUSH'
         LINE
         BIN   BKMXISIN
         BIN   BKMXWRTR
         BIN   BKMXUCW1
         BIN   BKMXCCHK
         LABEL 'SEL IN','RD/WRT','UCW 1','CHAIN CHK'
         LINE
         BIN   BKMXMADI
         BIN   BKMXSKWF
         BIN   BKMXMOD0
         BIN   BKMXINCH
         LABEL 'ADR IN','BKWD/FWD','MOD 0','IND CHAIN'
         LINE
         BIN   BKMXOPLI
         BIN   BKMX2BYL
         BIN   BKMXSPCC
         BIN   BKMXIPLT
         LABEL 'OPL IN','2ND BYTE LTH','SUPP CC','IPL TERM'
         LINE
         BIN  BKMXSTAA
         BIN   BKMXLBYL
         BIN   BKMXHIOB
         BIN   BKMXIOTM
         LABEL 'STA IN','LAST BYTE LTH','HIO/HDV BUSY','I/O TERM'
         LINE
         BIN   BKMXSVCI
         BIN   BKMXLBRD
         BIN   BKMXHDVM
         BIN   BKMXDUM6
         LABEL 'SVC IN','LAST BYTE RD','INSTR MOD','TIE BREAK'
         LINE
         BIN   BKMXGDTI
         BIN   BKMXENCD
         BIN   BKMXPCBD
         LABEL 'DATA IN','ENBL CHAIN DATA','PCI BLK DATA',             X
               'END OF SEQUENCE CTRL'
         LINE
         BIN   BKMXASIO
         BIN   BKMXS1CD
         BIN   BKMXRTIC
         BIN   BKMXUAST
         LABEL 'SIM I/O DISC IN','SEEK 1ST CH DATA','REM TIC',         X
               'UA SETUP'
         LINE  (46,24),(25,24),SKIP=1
         BIN   BKMXEEIC
         BIN   BKMXCTFC
         BIN   BKMXUCW3
         LABEL 'EOC','CTRL FMT CHK','UCW'
         LINE  (22,24),(1,24),SKIP=1
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXBKIC
         BIN   BKMXSGTD
         BIN   BKMXCLFT
         LABEL 'MAINTENANCE CTRLS','BKUP EOC','STA-1 GTD','CTRL FETCH'
         LINE
         BIN   BKMXCANA
         BIN   BKMXLOWC
         BIN   BKMXDSIH
         BIN   BKMXCINP
         LABEL 'AUTO LOG REQUESTED','LOW CT','DATA SEQ INH',           X
               'CTRL INSP'
         LINE
         BIN   BKMXCANB
         BIN   BKMXBKLC
         BIN   BKMXRSDS
         BIN   BKMXISL2
         LABEL 'CH A AUTO/TEST LOG','BKUP LOW CT','RESID STORE',       X
               'INIT SEL'
         LINE
         BIN   BKMXENBL
         BIN   BKMXSTOP
         BIN   BKMXOFLO
         BIN   BKMXSTC2
         LABEL 'CH B AUTO/TEST LOG','STOP','CT OVFL','SET CODE'
         LINE
         BIN   BKMXDLAY
         BIN   BKMXSTPI
         BIN   BKMXCMDR
         BIN   BKMXDSQ2
         LABEL 'LOG STOR REQUEST','STOP ILI','CMND RETRY','DATA REQ'
         LINE
         BIN   BKMXCLWR
         ROUTINE BKMXDUM1,SKIPPER
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXRSD2
         LABEL 'DATA CYCLE CMPT','','','RESID DATA'
         LINE
         BIN   BKMXBASY
         BIN   BKMXWIDE
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXCRC2
         LABEL 'LOG CYCLE CMPT','2 WIDE','MAJOR OPERATION CTRL',       X
               'CT RCVR'
         LINE
         BIN   BKMXLSCC
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXSCAN
         BIN   BKMXCSW2
         LABEL 'LOGOUT CMPT','','SCAN','CSW STORE'
         LINE
         BIN   BKMXLOGC
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXCCRQ
         BIN   BKMXRSF2
         LABEL 'SPARE','','CU REQ','RESET FLUSH'
         LINE
         BIN   BKMXLGCK
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXSSIO
         BIN   BKMXCCK2
         LABEL 'LOG CHK','I/O INFACE TAG LINES','SIO','CHAIN CHECK'
         LINE
         BIN   BKMXSMSC
         BIN   BKMXAOUT
         BIN   BKMXTTIO
         BIN   BKMXICH2
         LABEL 'SIM SEL CH','ADR OUT','TIO','IND CHAIN'
         LINE
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXSOUT
         BIN   BKMXHHIO
         BIN   BKMXIPT2
         LABEL ' ','SEL OUT','HIO','IPL TERM'
         LINE
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXSVOT
         BIN   BKMXDTXF
         BIN   BKMXIOT2
         LABEL 'MCW CONTROLS','SVC OUT','DATA XFER','I/O TERM'
         LINE
         BIN   BKMXPRSM
         BIN   BKMXCMOT
         BIN   BKMXCCRS
         BIN   BKMXDUM9
         LABEL 'PROG SCAN MODE A-B','CMND OUT','CHAIN CMND RSLCT',     X
               'TIE BREAKER'
         LINE
         BIN   BKMXDGMD
         BIN   BKMXSBOT
         BIN   BKMXCCDA
         LABEL 'DIAG MODE A-B','SUP OUT','CDA','STORAGE CONTROLS'
         LINE
         BIN   BKMXCHMM
         BIN   BKMXOPOT
         BIN   BKMXCCPR
         BIN   BKMXSTOR
         LABEL 'CH MCW MODE','OP OUT','CC PREP','STORE REQ'
         LINE
         BIN   BKMXMCFR
         BIN   BKMXDAOT
         BIN   BKMXTERM
         BIN   BKMXREQO
         LABEL 'MCW FETCH REQ','DATA OUT','TERM','1ST REQ OUT ST'
         LINE
         BIN   BKMXMCPC
         BIN   BKMXAORI
         BIN   BKMXINRP
         BIN   BKMX2REQ
         LABEL 'MCW PTY CHK','ADR IN','IRPT RESP','2ND REQ OUT ST'
         LINE
         BIN   BKMXSRCK
         BIN  BKMXSTAI
         BIN   BKMXIIPL
         BIN   BKMXBT28
         LABEL 'STORE CHECK','STA IN','IPL','BIT 28 LTH'
         LINE
         BIN   BKMXPRFI
         BIN   BKMXREQI
         BIN   BKMXRSET
         BIN   BKMXADV1
         LABEL 'PTY FOR INSN','REQ IN','RESET','ADV TGR'
         LINE
         BIN   BKMXINSB
         BIN   BKMXINOP
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXBADV
         LABEL 'INSN BIT 0-3','OP IN',' ','BKUP ADV'
         LINE
         BIN   BKMXSTPC
         BIN   BKMXISSL
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXEXCP
         LABEL 'STOP CLK','SEL IN','PRIORITY TRIGGERS','EXCPN'
         LINE
         BIN   BKMXSIMS
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXCURC
         BIN   BKMXBKEX
         LABEL 'SIM CH SEL',' ','CU REQ','BKUP EXCPN'
         LINE
         BIN   BKMXCPII
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXINSR
         BIN   BKMXSTOF
         LABEL 'CPU INTF INH','FLAG REG','INSTR','STORE/FETCH'
         LINE
         BIN   BKMXCTTC
         BIN   BKMXCD01
         BIN   BKMXESCN
         BIN   BKMXDATC
         LABEL 'CTR CHK','CD','SCAN','DATA CTRL'
         LINE
         BIN   BKMXSTCY
         BIN   BKMXCC01
         LABEL 'STORE CYC','CC'
         LINE
         BIN   BKMXMCAC
         BIN   BKMXSLI1
         ROUTINE BKMXDUM1,SKIPPER
         LABEL 'MCW ADR CYC','SLI','PROCESSOR INTF CTRL'
         LINE
         BIN   BKMXPSLR
         BIN   BKMXSKIP
         BIN   BKMXUSIO
         BIN   BKMX1REQ
         LABEL 'PS LOG REQ','SKIP','SIO','1ST REQ'
         LINE
         BIN   BKMXPSCC
         BIN   RANDUM3                                         @YA02787
         BIN   BKMXUTIO
         BIN   BKMXLREQ
         LABEL 'PS CHER CTRL','IDA','TIO','LAST REQ'           @YA02787
         LINE
         BIN   BKMXRSTI
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXUHIO
         BIN   BKMXACPT
         LABEL 'RESET INSN','BACKUP FLAG REG','HIO','ACPT'
         LINE
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXCD02
         BIN   BKMXUIRQ
         LABEL ' ','BKUP CD','IRPT REQ'
         LINE
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXCC02
         BIN   BKMXUIRP
         LABEL 'BLAME FIELD','BKUP CC','IRPT RESP','PROGRAM CHK INDS'
         LINE
         BIN   BKMXBLPU
         BIN   BKMXBSLI
         BIN   BKMXUBSY
         BIN   BKMXINKF
         LABEL 'CPU','BKUP CLI','BUSY','IV KEY FLD'
         LINE
         BIN   BKMXBLCH
         BIN   BKMXBSKP
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXINCA
         LABEL 'CH','BKUP SKIP',' ','IV CMND ADR'
         LINE
         BIN   BKMXBLSC
         BIN   BKMXBPCI
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXINCM
         LABEL 'SCU','BKUP PCI','SEQ CLOCK','IV CMND'
         LINE
         BIN   BKMXBLSU
         BIN   RANDUM2                                         @YA02787
         ROUTINE BKMXCLC1,@CLOCKA
         BIN   BKMXINFF
         LABEL  'SU','IDA','A-B-C-D','IN FLAG FLD'             @YA02787
         LINE
         BIN   BKMXBLCU
         ROUTINE BKMXDUM1,SKIPPER
         ROUTINE BKMXCLC2,@CLOCKE
         BIN   BKMXTCOS
         LABEL 'CU',' ','E-F-G-H','TIC ON SIO'
         LINE
         ROUTINE BKMXDUM1,SKIPPER
         ROUTINE BKMXDUM1,SKIPPER
         ROUTINE BKMXDUM1,SKIPPER
         BIN   BKMXTCOT
         LABEL ' ',' ',' ','TIC ON TIC'
         LINE  SKIP=2
         LABEL 'MISC REGS AND TAGS'
         LINE  (22,24),(1,24),SKIP=1
         ROUTINE BKMXMKIP,@MARKIN
         BIN   BKMXICBX
         BIN   BKMXDTSC
         BIN   BKMXWLLD
         LABEL 'MK IN P-0-1','ICB 0-2','SCD 0-2','SIR WD -03 LLD'
         LINE
         ROUTINE BKMXMKOP,@MARKOUT
         BIN   BKMXIRCD
         BIN   BKMXCARO
         BIN   BKMXBARV
         LABEL 'MK OUT P-0-1','IRC 0-5','CHAN ADR 0-3','BAR WD 0-3 VLD'
         LINE
         BIN   BKMXSIRC
         BIN   BKMXDTTC
         BIN   BKMXQUAD
         BIN   BKMXDLSP
         LABEL 'BIRC P-4-5','TC 0-3','QUAD PNTR 0-1','LBP P-0-5'
         LINE
         BIN   BKMXSCHS
         BIN   BKMXDTWC
         BIN   BKMXDAWL
         BIN   BKMXPP05
         LABEL 'SCS32-34','WC 0-3','DAW 28-29','BBP P-P-05-5'
         LINE
         BIN   BKMXUCWS
         BIN   BKMXUSVL
         BIN   BKMXCAVL
         BIN   BKMXECIR
         LABEL 'UCW 32-34-P','UNIT STAT VLD','CMND ADDR VLD',          X
               'EC IDEN REG'
         LINE
         BIN   BKMXWDE2
         BIN   BKMXSSCH
         BIN   BKMXDUM5
         BIN   BKMXDM27
         LABEL 'WD ENCODE 0-2','SHARED SUB CH','BLK MPX MODE',         X
               'INTF ACTIVE'
         LINE
         BIN   BKMXDM11
         BIN   RAN4
         BIN   RAN5
         LABEL 'CONTING CONNECT','READ QUAD','WRITE QUAD'
         LINE
         BIN   RAN6
         BIN   RAN7
         BIN   RAN8
         BIN   RAN9
         LABEL 'SERV IN','DATA IN','CC HI ORD','CC LOW ORD'
         LINE  ,,SKIP=2
         BIN   RAN1
         BIN   RAN10
         BIN   BKMXIDAF                                        @YA02787
         BIN   BKMXIDAR                                        @YA02787
         LABEL 'STIDC','INB INT RSP','IDA FETCH','IDA REF'     @YA02787
         LINE
         LABEL 'CHECK INDICATORS'
         LINE  SKIP=1
         BIN   BKMXPCCK
         BIN   BKMXNORP
         BIN   BKMXMINT
         BIN   BKMXILSQ
         LABEL 'PSEUDO CTRL CHK','NO RESP','MPLE IN TAG','ILL SEQ'
         LINE
         BIN   BKMXSCCK
         BIN   BKMXIRCK
         BIN   BKMXWCCK
         BIN   BKMXTCCK
         LABEL 'SCD CHK','IRC CHK','WC CHK','TC CHK'
         LINE
         BIN   BKMXBRCK
         BIN   BKMXLBCK
         BIN   BKMXIOIV
         BIN   BKMXDUM1                                        @YA02787
         LABEL 'BIRC CHK','LBP CHK','I/O INVD MK IN','SCU STOR HANG'
         LINE
         BIN   BKMXIOPK
         BIN   BKMXSSPC
         BIN   BKMXUPCK
         BIN   BKMXUCCK
         LABEL 'I/O MK IN P CHK','SUB CHAN STAT P CHK','UCWAR P CHK',  X
               'UCWAR CT CHK'
         LINE
         BIN   BKMXIVUC
         BIN   BKMXSMPK
         BIN   BKMXSAPK
         BIN   BKMXKPCK
         LABEL 'INVD UCWAR','SCU MK P CHK','STOR ADR P CHK','KEY P CHK'
         LINE
         BIN   BKMXIVAK
         BIN   BKMXSPIK
         BIN   BKMXPICK
         BIN   BKMXSQCK
         LABEL 'INVD ADR CHK','STOR PROT INVD KEY','UA NO CMPR',       X
               'SEQ CLK CHK'
         LINE
         BIN   BKMXIVUA
         BIN   BKMXCXCK
         BIN   BKMXCBCK
         BIN   BKMXTOCP                                        @YA02787
   LABEL 'UNIT ADR CHK','I RSPNSE INVD UA','CU BUSY CHK','INSTR T/O'
         LINE
         BIN   BKMXLGDI
         BIN   BKMXTOSI
         BIN   BKMXTOIO
         LABEL 'LOG DISC IN','STOR INTF T/O','CHN T/O'
         LINE
         BIN   BKMXUDCK
         BIN   BKMXWDCK
         BIN   BKMXMGCK
         BIN   BKMXSOPK
         LABEL 'STOR DATA CHK','WD PNTR CHK','CRB PTY CHK',            X
               'SIR OUT P CHK'
         LINE
         BIN   BKMXSIPC
         BIN   BKMXSPCK
         BIN   BKMXBOPK
         BIN   BKMXBIPK
         LABEL 'LSD DATA CHK','SCU BO P CHK','BUS OUT P CHK',          X
               'BUS IN P CHK'
         LINE
         BIN   BKMXARCK
         BIN   BKMXALCK
         BIN   BKMXHSCK
         BIN   BKMXCYCK
         LABEL 'AR IN CHK','AL IN CHK','HS CHK','CARRY CHK'
         LINE
         BIN   BKMXJLCK
         BIN   BKMXCARK
         BIN   BKMXCTCT
         BIN   BKMXDTAR
         LABEL 'J LTH CHK','CMND ADR REG CHK','CT REG CHK',            X
               'DATA ADR REG CHK'
         LINE
         BIN   BKMXBYT0
         BIN   BKMXBYT1
         BIN   BKMXBYT2                                        @YA02787
         BIN   BKMXBYT3                                        @YA02787
         LABEL 'BYTE 0','BYTE 1','BYTE 2','BYTE 3'             @YA02787
VS2LINE  LINE  ,,SKIP=1                                        @YM2954P
         ROUTINE   XCHID,VS2TEST                               @YL02021
VS2LAB   LABEL ''                                              @YM2954P
         LINE  (30),(1),SKIP=2                                 @YM2954P
         HEX   VCCHPR1                                         @YM2954P
         LABEL 'CCH FOOTPRINTS'                                @YM2954P
         LINE  (50,1),(20,1),SKIP=1                            @YM2954P
         BIN   VCCHPR01                                        @YM2954P
         LABEL 'IOS GPRS SAVED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR02                                        @YM2954P
         LABEL 'UCB ADDRESS ZERO'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR03                                        @YM2954P
         LABEL 'ERPIB EXISTS'                                  @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR04                                        @YM2954P
         LABEL 'IGFCCHSI ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR05                                        @YM2954P
         LABEL 'IGFCCHII ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR06                                        @YM2954P
         LABEL 'IGFCCHFE ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR07                                        @YM2954P
         LABEL 'IGFC60 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR08                                        @YM2954P
         LABEL 'IGFC70 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR09                                        @YM2954P
         LABEL 'IGDC80 ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR10                                        @YM2954P
         LABEL 'IGFCIC ENTERED'                                @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR11                                        @YM2954P
         LABEL 'IGFCCHRD ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR12                                        @YM2954P
         LABEL 'IGFCCHMP ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR13                                        @YM2954P
         LABEL 'IGFCCHUC ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR14                                        @YM2954P
         LABEL 'IGFCCHAS ENTERED'                              @YM2954P
         LINE  ,                                               @YM2954P
         BIN   VCCHPR15                                        @YM2954P
         LABEL 'IGFCCHIO ENTERED'                              @YM2954P
         LINE  ,,SKIP=2                                        @YM2954P
         BIN   VCCHPR16                                        @YM2954P
         LABEL 'IGFCCHEX ENTERED'                              @YM2954P
         LINE  ,(30,30),SKIP=2                                 @YM2954P
         ROUTINE    XCHID,SKIPPER                              @YM2954P
         LABEL 'MULTIPROCESSING INFORMATION'                   @YM2954P
         LINE  ,(22,40),SKIP=2                                 @Z30CIMC
         ROUTINE XCRH,CRHACT                                   @Z30CIMC
         LABEL 'CHANNEL RECONFIGURATION HARDWARE IS ACTIVE'    @Z30CIMC
NOTCRH   LINE  ,(49,1),SKIP=1                                  @Z30CIMC
NOTCRH1  LABEL '0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15'
         LINE  (25,25),(30,30),SKIP=1                          @YM2954P
         HEX   (VPROC01)                                       @YM2954P
         ROUTINE    VCHST01,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC02)                                       @YM2954P
         ROUTINE    VCHST02,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC03)                                       @YM2954P
         ROUTINE    VCHST03,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC04)                                       @YM2954P
         ROUTINE    VCHST04,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC05)                                       @YM2954P
         ROUTINE    VCHST05,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC06)                                       @YM2954P
         ROUTINE    VCHST06,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC07)                                       @YM2954P
         ROUTINE    VCHST07,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC08)                                       @YM2954P
         ROUTINE    VCHST08,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC09)                                       @YM2954P
         ROUTINE    VCHST09,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC10)                                       @YM2954P
         ROUTINE    VCHST10,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC11)                                       @YM2954P
         ROUTINE    VCHST11,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC12)                                       @YM2954P
         ROUTINE    VCHST12,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC13)                                       @YM2954P
         ROUTINE    VCHST13,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC14)                                       @YM2954P
         ROUTINE    VCHST14,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC15)                                       @YM2954P
         ROUTINE    VCHST15,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
         LINE  ,                                               @YM2954P
         HEX   (VPROC16)                                       @YM2954P
         ROUTINE    VCHST16,PROC                               @YM2954P
         LABEL ''                                              @YM2954P
DMPSPACE LINE  ,,SKIP=2                                        @Z30CIMC
         ROUTINE XDUM1,SKIPPER                                 @Z30CIMC
DMPSPC1  LABEL ''                                              @Z30CIMC
DUMPCODE DC    XL1'FF'                                         @YM2954P
DUMPSIZE DC    XL2'1E8'                                        @YM2954P
         DC    XL2'18'                                         @YM2954P
ADDRLABL DC    XL2'0'                                          @YM2954P
LABLAREA EQU   *                                               @YM2954P
         LSTART ,                                              @YM2954P
         END   ENTRYPTR                                        @YM2954P
