         TITLE 'IFCEGUS1 - EDIT TABLE - LINKNAME=IFCEGUS1'
*
***********************************************************************
         SPACE 2
         GBLC  &DSECT,&CSECT
IFCEGUS1 CSECT
*
&CSECT   SETC  'IFCEGUS1'
&DSECT   SETC  'GUS1'
*
*                OBR EDIT TABLE 3838
*
GUS1     DSECT
*
         DSGEN (XDUM1,8),(XRELN,8),(XDUM2,8),                          X
               (SW2B0,1),(SW2B1,1),(SW2B2,1),(SW2B3,1),                X
               (SW2B4,1),(SW2B5,1),(SW2B6,1),(SW2B7,1)
         DSGEN (XDUM2A,32)                   SPARES
         DSGEN (XDATE,32)                    DATE
         DSGEN (XTIME,32)                    TIME
         DSGEN (XDUM3,8),(XSER,24)           SPARE AND SERIAL NO
         DSGEN (XMODEL,16),(XMCEL,16)        MODEL #  AND MCEL
         DSGEN (XPGN1,32)                    PROGRAM
         DSGEN (XPGN2,32)                           NAME
         DSGEN (XFCCWCC,8),(XFCCWDA,24)      FAILING COMM & ADDR
         DSGEN (XFCCWFL,8),(XZERO,8),(XFCCWCT,16)  CCW CHAIN & COUNT
         DSGEN (XCSWK,8),(XCSWCA,24)         CSW COMM & ADDR
         DSGEN (XCSWATTN,1),(XCSWSM,1),(XCSWCUE,1),(XCSWBSY,1),        X
               (XCSWCE,1),(XCSWDE,1),(XCSWUC,1),(XCSWUE,1),            X
               (XCSWPCI,1),(XCSWSILI,1),(XCSWPC,1),(XCSWPCHK,1),       X
               (XCSWCDC,1),(XCSWCCC,1),(XCSWICC,1),(XCSWCH,1),         X
               (XCSWCT,16)
         DSGEN (XDUMA,8),(XCUA2,24)          SPARE AND SECONDARY CUA
         DSGEN (XDEVT1,16),(XDEVT2,16)       DEVICE TYPE
         DSGEN (XDUM4,8),(XCUA,24)           SPARE & CUA
         DSGEN (XDUM5,32)                    SPARES
         DSGEN (SDR1,8),(SDR2,8),(SDR3,8),(SDR4,8),                    X
               (SDR5,8),(SDR6,8),(SDR7,8),(SDR8,8)
         DSGEN (SDR9,8),(SDR10,8),                                     X
               (XB0CMDR,1),(XB0INTRQ,1),(XB0BUSC,1),(XB0ECHK,1),       X
               (XB0DCHK,1),(XB0NU1,1),(XB0NOTIN,1),(XB0PRE,1), @G29AFFRX
               (XB1RST,1),(XB1URERR,1),(XB1DDEP,1),(XB1INVP,1),        X
               (XB1NU1,1),(XB1NU2,1),(XB1NU3,1),(XB1NU4,1)
         DSGEN (XB2CPMC,1),(XB2IO,1),(XB2ARELM,1),(XB2DTC,1),          X
               (XB2CPEXC,1),(XB2PERM,1),(XB2NU1,1),(XB2NU2,1),         X
               (XB3SNSTY,8),(XB4B5,16)
         DSGEN (XB6B7,16),(XB8,8),                             @G29AFFRX
               (XB9BIT0,1),(XB9BIT1,1),(XB9BIT2,1),(XB9BIT3,1),        X
               (XB9BIT4,1),(XB9BIT5,1),(XB9BIT6,1),(XB9BIT7,1)
         DSGEN (XB10BIT0,1),(XB10BIT1,1),(XB10BIT2,1),(XB10BIT3,1),    X
               (XB10BIT4,1),(XB10BIT5,1),(XB10BIT6,1),(XB10BIT7,1),    X
               (XB11BIT0,1),(XB11BIT1,1),(XB11BIT2,1),(XB11BIT3,1),    X
               (XB11BIT4,1),(XB11BIT5,1),(XB11BIT6,1),(XB11BIT7,1),    X
               (XB12BIT0,1),(XB12BIT1,1),(XB12BIT2,1),(XB12BIT3,1),    X
               (XB12BIT4,1),(XB12BIT5,1),(XB12BIT6,1),(XB12BIT7,1),    X
               (XB13,8)                                        @G29AFFR
         DSGEN (XB14BIT0,1),(XB14BIT1,1),(XB14BIT2,1),(XB14BIT3,1),    X
               (XB14BIT4,1),(XB14BIT5,1),(XB14BIT6,1),(XB14BIT7,1),    X
               (XB15BIT0,1),(XB15BIT1,1),(XB15BIT2,1),(XB15BIT3,1),    X
               (XB15BIT4,1),(XB15BIT5,1),(XB15BIT6,1),(XB15BIT7,1),    X
               (XB16XB17,16)                                   @G29AFFR
         DSGEN (XB18XB19,16),(XB20,8),(XB21,8)                 @G29AFFR
         DSGEN (XB22,8),(XB23,8),(XB24,8),(XB25,8)
         DSGEN (XB26XB27,16),(XB28XB29,16)
         DSGEN (XB30XB31,16)
         ORG   XB8                                             @G29AFFR
         DSGEN (XB8BIT,1,0,7)                                  @G29AFFR
         ORG   XB13                                            @G29AFFR
         DSGEN (XB13BIT,1,0,7)                                 @G29AFFR
         ORG   XB16XB17                                        @G29AFFR
         DSGEN (XB16BIT,1,0,7),(XB17BIT,1,0,7)                 @G29AFFR
         ORG   XB18XB19                                        @G29AFFR
         DSGEN (XB18BIT,1,0,7),(XB19BIT,1,0,7)                 @G29AFFR
***********************************************************************
EXPNOBR  DSECT
EXPNHDRA DS    CL64
EXPNSDRA DS    CL10
EXPNSNSA DS    CL32
***********************************************************************
NORMOBR  DSECT
NORMHDRA DS    CL64
NORMSDRA DS    CL10
NORMSNSA DS    CL32
***********************************************************************
SHRTOBR  DSECT
SHRTHDRA DS    CL24
SHRTSDRA DS    CL10
***********************************************************************
IFCEGUS1 CSECT
         USING *,R9
         USING GUS1,R2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L10      EQU   10
L12      EQU   12
L13      EQU   13
L16      EQU   16
L17      EQU   17
L19      EQU   19                                              @G29AFFR
L20      EQU   20
L21      EQU   21
L22      EQU   22                                              @G29AFFR
L24      EQU   24
L27      EQU   27
L29      EQU   29
L30      EQU   30
L31      EQU   31
L32      EQU   32
L36      EQU   36
L40      EQU   40                                              @G29AFFR
L44      EQU   44
L46      EQU   46
L64      EQU   64
L80      EQU   80                                              @G29AFFR
L96      EQU   96
L102     EQU   102                                             @G29AFFR
L106     EQU   106
HEX01    EQU   X'01'
HEX02    EQU   X'02'
HEX04    EQU   X'04'                                           @G29AFFR
HEX08    EQU   X'08'
HEX10    EQU   X'10'
HEX20    EQU   X'20'
HEX30    EQU   X'30'
HEXFF    EQU   X'FF'
A        EQU   C'A'
B        EQU   C'B'
***********************************************************************
*              DECLARES
***********************************************************************
         DC    A(ENTRIES)          PTR TO EDIT ENTRIES
         DC    CL8'IFCEGUS1'
XR9PTR   DC    F'0'                PTR TO NEXT EDIT-4
XLABELP  DC    F'0'                LABEL PTR SAVE
SHRTADCN DC    A(SHRTOBRS-4)
         DC    A(SHRTOBRL)
HWLABAD  DC    A(HWLABEL)
DATLABAD DC    A(DATLABEL)
NOTINLAB DC    A(NILABEL)                                      @G29AFFR
OBRAREA  DS    CL106
SAVE2    DS    F
XSAVE    DS    4F
UNITCK   DC    C'UNIT CHECK'
OVFL     DC    C'OVERFLOW'
UNIVERS  DC    C'UNIVERSAL   SERIAL NO. NONE  '
OVRLAYS  DC    C' X  X XX  XXXX   X X X   XXXXX'
MPCPU    DC    C'MULTIPROCESSOR - CPU'
JOBID    DC    C'JOB IDENTITY'
SERNO    DC    C'SERIAL NO.'
TFLG     DC    X'00'
SUBLAB   DC    C'SUBCHANNEL I.D. (+8)'                         @G29AFFR
CPLAB    DC    C'CP MICRO STATE (+13)'                         @G29AFFR
NLLABEL  DC    C'    CP CSAR (+18,+19)'                        @G29AFFR
LASTLABL DC    C'CP INSTR CTR (+22,+23)'                       @G29AFFR
WORK     DS    D
NONE     DC    C'NONE'
BLANKS   DC    CL36' '
ZERO     DC    XL4'00'
CHARS    DC    C'0123456789ABCDEF'
XXXX     DC    C'XXXX'
***********************************************************************
*              SPECIAL ROUTINE SECTION
***********************************************************************
*
***********************************************************************
*              CONVERT 4 BYTES TO EBCDIC
***********************************************************************
BRCNT    STM   R5,R8,XSAVE
         IC    R7,L0(R4)                GET 1ST BYTE
         SLL   R7,L8                    MAKE ROOM
         IC    R7,L1(R4)                GET 2ND BYTE
         SLL   R7,L8                    MAKE ROOM
         IC    R7,L2(R4)                GET 3RD BYTE
         SLL   R7,L8                    MAKE ROOM
         IC    R7,L3(R4)                GET 4TH BYTE
         LA    R8,CHARS                 GET ADDR. OF CHAR. TABLE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L0(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L1(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L2(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L3(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L4(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L5(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L6(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    GET 4 BITS
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L7(L1,R3),L0(R6)         MOVE CHAR INTO LINE
         B     RETURN
***********************************************************************
*              CHECKS TO SEE IF DATA SHOULD BE OVERLAYED BY 'XXXX'
***********************************************************************
CHECK2   STM   R5,R8,XSAVE              SAVE WORK REGS         @G29AFFR
         TM    L0(R4),HEX10             Q/ IS BIT 3 ON         @G29AFFR
         BO    RETURN                   YES, SKIP OVERLAY      @G29AFFR
         LA    R5,L40                   AMOUNT TO BACKSPACE    @G29AFFR
         B     CHECK11                                         @G29AFFR
CHECK1   STM   R5,R8,XSAVE              SAVE WORK REGS         @G29AFFR
         TM    L0(R4),HEX10             Q/ IS BIT 3 ON         @G29AFFR
         BO    RETURN                   YES, SKIP OVERLAY      @G29AFFR
         LA    R5,L80                   AMOUNT TO BACKSPACE    @G29AFFR
CHECK11  SR    R3,R5                    BACKSPACE              @G29AFFR
         MVC   L0(L1,R3),XXXX           MOVE IN 'X'            @G29AFFR
         LA    R3,L20(R3)               ADVANCE PTR            @G29AFFR
         MVC   L0(L1,R3),XXXX           MOVE IN 'X'            @G29AFFR
         B     RETURN                                          @G29AFFR
***********************************************************************
*              CHECKS TO SEE IF DATA SHOULD BE OVERLAYED BY 'XXXX'
***********************************************************************
CHECKER0 STM   R5,R8,XSAVE              SAVE WORK REGS         @G29AFFR
         TM    L0(R4),HEX01             Q/ IS BIT 7 ON         @G29AFFR
         BO    CHECKER2                 YES, SKIP OVERLAY      @G29AFFR
         LA    R5,L80                   AMOUNT TO BACKSPACE    @G29AFFR
         SR    R3,R5                    BACKSPACE PRINT LINE PTR
         B     CHECKER1                                        @G29AFFR
CHECKER  STM   R5,R8,XSAVE              SAVE WORK REGS         @G29AFFR
         TM    L0(R4),HEX01             Q/ IS BIT 7 ON         @G29AFFR
         BO    CHECKER2                 YES, SKIP OVERLAY      @G29AFFR
         LA    R5,L102                  AMOUNT TO BACKSPACE    @G29AFFR
         SR    R3,R5                    BACKSPACE PRINT LINE PTR
         MVC   L0(L2,R3),XXXX           MOVE IN 'XX'           @G29AFFR
         LA    R3,L22(R3)               ADVANCE PTR            @G29AFFR
CHECKER1 MVC   L0(L1,R3),XXXX           MOVE IN 'X'            @G29AFFR
         LA    R3,L20(R3)               ADVANCE PTR            @G29AFFR
         MVC   L0(L1,R3),XXXX           MOVE IN 'X'            @G29AFFR
         LA    R3,L20(R3)               ADVANCE PTR            @G29AFFR
         MVC   L0(L1,R3),XXXX           MOVE IN 'X'            @G29AFFR
         LA    R3,L20(R3)               ADVANCE PTR            @G29AFFR
         B     CHECKER3                                        @G29AFFR
CHECKER2 LA    R5,L20                   AMOUNT TO BACKSPACE    @G29AFFR
         SR    R3,R5                    BACKSPACE              @G29AFFR
CHECKER3 TM    L0(R4),HEX10             Q/ IS BIT 3 ON         @G29AFFR
         BO    RETURN                   YES SKIP OVERLAY       @G29AFFR
         MVC   L0(L1,R3),XXXX           MOVE IN 'X'            @G29AFFR
         B     RETURN                                          @G29AFFR
***********************************************************************
*              CHECK IF BYTES 14-19 SHOULD BE PRINTED
***********************************************************************
CONDSNS  STM   R5,R8,XSAVE
         TM    L0(R4),HEXFF             Q/ ANY BITS ON IN BYTE 8
         BNZ   NXTEST                   YES, SKIP OVERLAY
         LR    R5,R3                    GET PTR TO LINE POS.
         LA    R6,L96                   AMOUNT TO BACKSPACE
         SR    R5,R6                    BACKSPACE
         MVC   L0(L4,R5),XXXX           MOVE IN 'XXXX'
NXTEST   TM    XB12BIT0,HEXFF           Q/ ANY BITS ON IN BYTE 12
         BNZ   NXTEST1                  YES, SKIP OVERLAY
         TM    XB13BIT0,HEXFF           Q/ ANY BITS ON IN BYTE 13
         BNZ   NXTEST1                  YES, SKIP OVERLAY
         LR    R5,R3                    GET PTR TO PRINT POS.
         LA    R6,L64                   AMOUNT TO BACKSPACE PTR
         SR    R5,R6                    BACKSPACE
         MVC   L0(L4,R5),XXXX           MOVE IN 'XXXX'
NXTEST1  TM    XB10BIT0,HEXFF           Q/ ANY BITS ON IN BYTE 10
         BNZ   RETURN                   YES, SKIP OVERLAY
         LR    R5,R3                    GET PTR TO PRINT POS.
         LA    R6,L32                   AMOUNT TO BACKSPACE PTR
         SR    R5,R6                    BACKSPACE
         MVC   L0(L4,R5),XXXX           MOVE IN 'XXXX'
         B     RETURN
***********************************************************************
*              CHECK IF BYTES 20-27 SHOULD BE PRINTED
***********************************************************************
CONDSNS1 STM   R5,R8,XSAVE              SAVE REGS
         TM    L0(R4),HEX30             Q/ IS BIT 2 OR 3 ON IN BYTE 12
         BC    5,RETURN                 YES, 1 OR BOTH IS ON
         LR    R5,R3                    GET PTR TO PRINT POS.
         LA    R6,L31                   AMOUNT TO BACKSPACE PTR
         SR    R5,R6                    BACKSPACE PTR
         MVC   L0(L30,R5),OVRLAYS       MOVE IN OVERLAY
         B     RETURN
***********************************************************************
*              CHECK IF OVERLAY IS NEEDED                      @G29AFFR
***********************************************************************
CPINSCON STM   R5,R8,XSAVE              SAVE WORK REGS         @G29AFFR
         TM    XB0CMDR,HEX10            Q/ IS BIT 3 ON         @G29AFFR
         BO    SETHEX2                  YES, OUTPUT DATA       @G29AFFR
         MVC   L0(L4,R3),XXXX           MOVE IN 'XXXX'         @G29AFFR
         ST    R5,XSAVE                 SAVE WORK REG          @G29AFFR
         LA    R5,L20                   AMT TO BACKSPACE       @G29AFFR
         SR    R3,R5                    BACKSPACE              @G29AFFR
         L     R5,XSAVE                 RESTORE WORK REG       @G29AFFR
         BR    R14                      EXIT                   @G29AFFR
***********************************************************************
*              EXPAND RECORD
***********************************************************************
EXPNDRTN STM   R5,R8,XSAVE
         ST    R2,SAVE2                 SAVE R2 FOR LATER
         LA    R5,OBRAREA               PICK UP ADDR OF EXPANDED AREA
         USING EXPNOBR,R5
         USING NORMOBR,R4
         XC    EXPNOBR(L106),EXPNOBR    CLEAR AREA
         TM    SW2B0,HEX20              Q/ IS THIS A SHORT OBR RECORD
         BO    MOVESHRT                 YES
MOVEALL  MVC   EXPNOBR(L106),NORMOBR    MOVE ENTIRE RECORD
EXPNDRET LR    R2,R5                    SWAP PTRS
         B     RETURN
         USING SHRTOBR,R4
MOVESHRT MVC   EXPNHDRA(L24),SHRTHDRA   MOVE HEADER
         MVC   EXPNSDRA(L10),SHRTSDRA   MOVE STATISTICAL AREA
         B     EXPNDRET
         DROP  R4,R5
***********************************************************************
*              MOVE LABEL INTO PRINT LINE                      @G29AFFR
***********************************************************************
MOVELAB  MVC   L0(L20,R3),SUBLAB        MOVE IN LABEL          @G29AFFR
         BR    R14                      RETURN                 @G29AFFR
***********************************************************************
*              MOVE LABEL INTO PRINT LINE                      @G29AFFR
***********************************************************************
MOVEOLAB STM   R5,R8,XSAVE              SAVE WORK REGS         @G29AFFR
         LR    R5,R3                    GET PRINT POS. PTR     @G29AFFR
         LA    R6,L19                   AMOUNT TO BACKSPACE    @G29AFFR
         SR    R5,R6                    BACKSPACE              @G29AFFR
         MVC   L0(L20,R5),CPLAB         MOVE IN LABEL          @G29AFFR
         B     RETURN                                          @G29AFFR
***********************************************************************
*              MOVE LABEL INTO PRINT LINE                      @G29AFFR
***********************************************************************
NLLAB    MVC   L0(L21,R3),NLLABEL       MOVE IN LABEL          @G29AFFR
         BR    R14                      RETURN                 @G29AFFR
***********************************************************************
*              CLEAR HEX JOBNAME IF SHORT OBR RECORD
***********************************************************************
NONAME   TM    L0(R4),HEX20             Q/ IS THIS A SHORT OBR RECORD
         BCR   14,R14                   NO, SO LET HEX JOB NAME PRINT
         ST    R5,XSAVE                 SAVE WORK REG
         LA    R5,L44                   AMOUNT TO BACKSPACE PTR
         SR    R3,R5                    BACKUP PTR
         MVC   L0(L17,R3),BLANKS        CLEAR OUT HEX JOBNAME
         AR    R3,R5                    RESTORE PTR
         L     R5,XSAVE                 RESTORE REG
         BR    R14
***********************************************************************
*              DETERMINE IF LONG OR SHORT OBR RECORD
***********************************************************************
RECTYPE  STM   R5,R8,XSAVE
         LR    R5,R3                    GET PTR TO CUR. DATA PRINT POS.
         LA    R6,L31                   AMOUNT TO BACKSPACE PTR
         SR    R5,R6                    BACKSPACE PTR
         TM    L0(R4),HEX20             Q/ IS THIS A SHORT OBR RECORD
         BO    RECSHORT                 YES
         MVC   L0(L10,R5),UNITCK        NO, INSERT 'UNIT CHECK' LABEL
         B     RETURN
RECSHORT MVC   L0(L10,R5),OVFL          INSERT 'OVERFLOW'
         B     RETURN
***********************************************************************
*              RESET REG. 2 TO START OF INPUT RECORD
***********************************************************************
RESETR2  L     R2,SAVE2                 RESTORE REG
         BR    R14
***********************************************************************
*              COMMON REGISTER RESTORE AND RETURN
***********************************************************************
RETURN   LM    R5,R8,XSAVE
         BR    R14
***********************************************************************
*              TEST FOR CONVERTED RECORD - KEY 32
***********************************************************************
SETCONV  TM    L0(R4),HEX02             Q/ IS CONVERT SWITCH ON
         BCR   1,R14                    YES
         SR    R15,R15                  ZERO IS TO STOP PRINT
         BR    R14
***********************************************************************
*              SETCPU NO. AND SERIAL NO.
***********************************************************************
SETCPUNO STM   R5,R8,XSAVE              SAVE REGS
         SR    R5,R5                    CLEAR REG
         IC    R5,L0(R4)                GET 1ST BYTE OF CPU MODEL NO.
         SLL   R5,L4                    MAKE ROOM FOR SECOND BYTE
         IC    R5,L1(R4)                GET 2ND BYTE
         LTR   R5,R5                    Q/ IS MODEL NO. ZERO
         LR    R5,R3                    GET PTR TO CURRENT PRNT POS.
         BNZ   SETSER                   MODEL NO. IS NOT ZERO
         LA    R6,L46                   AMOUNT TO BACKSPACE PTR
         SR    R5,R6                    BACKSPACE PTR
         MVC   L0(L29,R5),UNIVERS       INSERT LABEL FOR NONE
         B     RETURN
SETSER   LA    R6,L36                   AMOUNT TO BACKSPACE
         SR    R5,R6                    BACKSPACE PTR
         MVC   L0(L10,R5),SERNO         INSERT 'SERIAL NO.'
         B     RETURN
***********************************************************************
*              SET DATE
***********************************************************************
SETDATE  CLC   L1(L3,R4),ZERO           Q/ IS DATE ZERO
         BE    SETDTE                   YES
         UNPK  XSAVE(L8),L1(L3,R4)      UNPACK DATE
         MVC   L5(L2,R3),XSAVE+L3       MOVE YEAR
         MVC   L0(L3,R3),XSAVE+L5       MOVE JULIAN DAY
         BR    R14
SETDTE   MVC   L0(L4,R3),NONE           SET DATE TO NONE
         BR    R14
***********************************************************************
*              HEX (CONVERT 1 HEX BYTE TO 2 EBCDIC CHARACTER)
***********************************************************************
SETHEX1  MVI   TFLG,X'01'               INDICATE BACKSPACE REQUIRED
SETHEX   STM   R5,R8,XSAVE              SAVE REGS
         LA    R8,CHARS                 GET ADDR OF EBCDIC CHAR. TABLE
         IC    R7,L0(R4)                PICK UP BYTE TO CONVERT
         SLL   R7,L24                   MOVE IT TO HI PART OF R7
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    MOVE 4 BITS TO R6
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         TM    TFLG,X'01'               Q/ BACKSPACE REQUIRED
         BO    PERFCNT                  YES
         MVC   L0(L1,R3),L0(R6)         MOVE CHAR TO LINE
SETHEXX  SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    MOVE LAST 4 BITS TO R6
         AR    R6,R8                    COMPUTE OFFSET
         TM    TFLG,X'01'               Q/ BACKSPACE REQUIRED
         BO    PERFCNT1                 YES
         MVC   L1(L1,R3),L0(R6)         MOVE CHAR TO LINE + 1
         B     RETURN
PERFCNT  LR    R5,R3                    GET PTR TO PRINT POS.
         LA    R8,L29                   SET UP FOR BACKSPACE
         SR    R5,R8                    BACKSPACE
         MVC   L0(L1,R5),L0(R6)         MOVE CHAR INTO LINE
         LA    R8,CHARS                 RESTORE REG 8
         B     SETHEXX                  RETURN TO MAINLINE
PERFCNT1 MVC   L1(L1,R5),L0(R6)         MOVE CHAR INTO LINE
         MVI   TFLG,X'00'               CLEAR FLAG
         B     RETURN
***********************************************************************
*              HEX (CONVERT 2 HEX BYTES TO 4 EBCDIC CHARACTERS)
***********************************************************************
SETHEX2  STM   R5,R8,XSAVE              SAVE REGS
         LA    R8,CHARS                 GET ADDR OF EBCDIC CHAR. TABLE
         IC    R7,L0(R4)                PICK UP BYTE TO CONVERT
         SLL   R7,L24                   MOVE IT TO HI PART OF R7
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    MOVE 4 BITS TO R6
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L0(L1,R3),L0(R6)         MOVE CHAR TO LINE
         SR    R6,R6                    CLEAR
         SLDL  R6,L4                    MOVE LAST 4 BITS TO R6
         AR    R6,R8                    COMPUTE OFFSET
         MVC   L1(L1,R3),L0(R6)         MOVE CHAR TO LINE + 1
         IC    R7,L1(R4)                PICK UP 2ND INPUT BYTE
         SLL   R7,L24                   MOVE IT TO HI PART OF R7
         SR    R6,R6                    CLEAR REG
         SLDL  R6,L4                    MOVE 4 BITS TO R6
         AR    R6,R8                    COMPUTE OFFSET INTO CHAR. TABLE
         MVC   L2(L1,R3),L0(R6)         MOVE CHAR TO LINE + 2
         SR    R6,R6                    CLEAR
         SLDL  R6,L4                    MOVE LAST 4 BITS TO R6
         AR    R6,R8                    COMPUTE OFFSET
         MVC   L3(L1,R3),L0(R6)         MOVE CHAR TO LINE + 3
         B     RETURN
***********************************************************************
*              PRELIMINARY TESTS BEFORE USING SETHEX2 CONV. ROUTINE
***********************************************************************
SETHEX20 TM    XB0CMDR,HEX10            Q/ IS BIT 3 ON         @G29AFFR
         BO    SETHEX2                  YES, OUTPUT DATA       @G29AFFR
         MVC   L0(L4,R3),XXXX           NO, MOVE IN 'XXXX'     @G29AFFR
         BR    R14                      EXIT                   @G29AFFR
SETHEX22 TM    XB0CMDR,HEX10            Q/ IS BIT 3 ON         @G29AFFR
         BO    SETHEXF                  YES, SET UP FOR CONVERSION
         MVC   L17(L4,R3),XXXX          NO, MOVE IN 'XXXX'     @G29AFFR
         BR    R14                      EXIT                   @G29AFFR
SETHEXF  LA    R3,L17(R3)               ADVANCE POS. PTR       @G29AFFR
         B     SETHEX2                  GO CONVERT DATA        @G29AFFR
***********************************************************************
*              SET PROGRAM NAME
***********************************************************************
SETPGMN  DS    0H
         TM    SW2B0,HEX20              Q/ IS THIS A SHORT OBR RECORD
         BCR   1,R14                    YES, THUS NO JOB ID
         MVC   L0(L12,R3),JOBID         MOVE IN 'JOB IDENTITY'
         MVC   L13(L8,R3),XPGN1         MOVE IN JOB NAME
         BR    R14
***********************************************************************
*              ADVANCE DATA PTR TO NEXT POSITION
***********************************************************************
SKIPPER  BR    R14                      RETURN
***********************************************************************
*              DETERMINE SENSE DATA TYPE
***********************************************************************
SNSTYPE  TM    XB3SNSTY,HEX01           Q/ IS THIS HARDWARE VERIF. SNS
         BO    HARDWARE                 YES
         TM    XB3SNSTY,HEX02           Q/ IS THIS DATA-RELATED SENSE
         BO    DATAREL                  YES
         TM    XB3SNSTY,HEX04           Q/ IS THIS NOT-INITIALIZED SNS
         BO    NOTIN                    YES                    @G29AFFR
SNSRET   BR    R14                      MUST BE EQUIPMENT-RELATED SNS
HARDWARE STM   R5,R8,XSAVE
         LA    R5,HWSENSE-4             GET ADR OF 1ST HW LINE
         ST    R5,XR9PTR                SAVE PTR
         L     R5,HWLABAD               GET ADR OF 1ST HW LABELS
         ST    R5,XLABELP               SAVE PTR
         B     SNSEXIT                                         @G29AFFR
DATAREL  STM   R5,R8,XSAVE
         LA    R5,DATSENSE-4            GET ADR OF 1ST DAT-REL LINE
         ST    R5,XR9PTR                SAVE PTR
         L     R5,DATLABAD              GET ADR OF 1ST DAT-REL LABEL
         ST    R5,XLABELP               SAVE PTR
         B     SNSEXIT                                         @G29AFFR
NOTIN    STM   R5,R8,XSAVE              SAVE WORK REGS         @G29AFFR
         LA    R5,NOTINIT-4             GET ADDR OF 1ST NOT-INIT LINE
         ST    R5,XR9PTR                UPDATE LINE PTR        @G29AFFR
         L     R5,NOTINLAB              GET ADDR OF 1ST NOT-INIT LABEL
         ST    R5,XLABELP               UPDATE LABEL PTR       @G29AFFR
SNSEXIT  SR    R15,R15                  DONT PRINT THIS LINE   @G29AFFR
         B     RETURN
***********************************************************************
*              ADVANCE PRINT POSITION PTR 1 SPACES
***********************************************************************
SPACER1  LA    R3,L1(R3)                ADVANCE PRINT POS. PTR 1 SPACE
         BR    R14
***********************************************************************
*              ADVANCE PRINT POSITION PTR 16 SPACES
***********************************************************************
SPACER16 LA    R3,L16(R3)               UP PTR BY 16
         BR    R14
***********************************************************************
*              MP TEST
***********************************************************************
TESTMP   TM    L0(R4),HEX10             Q/ IS THIS A MP RECORD
         BZ    NOMP                     NO
         MVC   L0(L20,R3),MPCPU         MOVE IN MP LABEL
         TM    L0(R4),HEX08             Q/ IS IT CPUA OR CPUB
         BO    MPB                      IT IS CPUB
         MVI   L21(R3),A                MOVE 'A' IN PRINT LINE
NOMP     BR    R14
MPB      MVI   L21(R3),B                MOVE 'B' IN PRINT LINE
         BR    R14
***********************************************************************
*              IF SHORT RECORD THEN SKIP TO STAT. EDIT SETS
***********************************************************************
TESTSHRT TM    SW2B0,HEX20              Q/ IS THIS A SHORT OBR RECORD
         BZ    SKIPPER                  NO
         BCTR  R3,R0                    BACK UP POS. PTR 1 SPACE
         MVC   L0(L6,R3),BLANKS         CLEAR HEX SECONDARY CUA
         MVC   XR9PTR(L8),SHRTADCN      POINT TO STAT. EDIT SETS
         BR    R14
***********************************************************************
*              LINE/LABEL SETS
***********************************************************************
ENTRIES  DS    0F
         DC    XL4'00'             FORMAT 1
         DC    XL4'00'             FORMAT 2
         DC    A(LABELS)           LABEL PTR
         DC    H'0'                DISP
***********************************************************************
*        SKIP TO CHANNEL 1
***********************************************************************
         DC    X'02'
         DC    X'000B8B00'
         DC    AL.12(XDUM1-GUS1),XL.4'D'   = ROUTINE XDUM1,EXPNDRTN
         DC    AL.4(0),AL.12(EXPNDRTN-IFCEGUS1)
***********************************************************************
         LINE  (55,23),(1,35),SKIP=1
         ROUTINE SW2B0,RECTYPE
         HEX   XMODEL,0,2B
         HEX   XSER,0,3B
         ROUTINE XMODEL,SETCPUNO
         LABEL '---RECORD ENTRY TYPE -','   SOURCE - OUTBOARD',        X
               'MODEL-'
***********************************************************************
         LINE  (16,1),(4,1)
         SYSRELN XRELN,4                                       @D35UGFD
         LABEL ''                                              @D35UGFD
***********************************************************************
         LINE  (69,1),(31,19)
         ROUTINE XPGN1,SETPGMN
         LABEL 'DAY YEAR','HH MM SS.TH'
***********************************************************************
         LINE  (31,19),(25,19)
         ROUTINE XDATE,SETDATE
         HEX   XTIME,1,4B
         ROUTINE XDUM1,SKIPPER
         HEX   XPGN1,B6,4B
         HEX   XPGN2,B16,4B
         ROUTINE SW2B0,NONAME
         LABEL 'DATE-','TIME-'
***********************************************************************
         LINE  (1,1),(1,1)
         ROUTINE SW2B0,TESTMP
         LABEL ''
***********************************************************************
         LINE  ,(1,1),SKIP=2
         ROUTINE XDUM1,SETCONV
         LABEL   'OBR RECORD CONVERTED TO THE STANDARD FORMAT'
***********************************************************************
         LINE  ,(2,32),SKIP=1
         LABEL 'DEVICE TYPE','3838'
***********************************************************************
         LINE  (34,1),(2,1)
         HEX   XCUA,B0,3B
         LABEL 'PRIMARY   CHANNEL UNIT ADDRESS'
***********************************************************************
         LINE  ,,SKIP=2
         HEX   XCUA2,B0,3B
         ROUTINE XDUM1,TESTSHRT
         LABEL 'ALTERNATE CHANNEL UNIT ADDRESS'
***********************************************************************
         LINE  ,(23,38),SKIP=1
         LABEL 'CC   CA   FL     CT','K    CA   US CS  CT'
***********************************************************************
         LINE  (23,3),(5,51),SKIP=2
         HEX   XFCCWCC,0,1B
         HEX   XFCCWDA,0,3B
         ROUTINE XDUM1,SPACER1
         HEX   XFCCWFL,0,1B
         HEX   XZERO,0,1B
         HEX   XFCCWCT,0,2B
         ROUTINE XDUM1,SPACER16
         HEX   XCSWK,0,1B
         HEX   XCSWCA,0,3B
         ROUTINE XDUM1,SPACER1
         ROUTINE XCSWATTN,SETHEX
         ROUTINE XCSWPCI,SETHEX
         HEX   XCSWCT,0,2B
         LABEL 'FAILING CCW','CSW'
***********************************************************************
         LINE  ,(5,28)
         ROUTINE XDUM1,SKIPPER
         LABEL 'UNIT STATUS','CHANNEL STATUS','STATISTICAL DATA',      X
               'STATISTICAL DATA'
***********************************************************************
         LINE  (20,28),(3,26),SKIP=1
         BIN   XCSWATTN
         BIN   XCSWPCI
         HEX   SDR1,0,1L
         HEX   SDR1,0,1R
         LABEL 'ATTENTION','PRGM-CTLD INTRPT','DATA CHECK (READ)',     X
               '    NOT USED'
***********************************************************************
         LINE
         BIN   XCSWSM
         BIN   XCSWSILI
         HEX   SDR2,0,1L
         HEX   SDR2,0,1R
         LABEL 'STATUS MODIFIER','INCORRECT LENGTH',                   X
               'DATA CHECK (WRITE)','    NOT USED'
***********************************************************************
         LINE
         BIN   XCSWCUE
         BIN   XCSWPC
         HEX   SDR3,0,1L
         HEX   SDR3,0,1R
         LABEL 'CONTROL UNIT END','PROGRAM CHECK',                     X
               'INTERVENTION REQD','    NOT USED'
***********************************************************************
         LINE
         BIN   XCSWBSY
         BIN   XCSWPCHK
         HEX   SDR4,0,1L
         HEX   SDR4,0,1R
         LABEL 'BUSY','PROTECTION CHECK','BUS OUT PARITY',             X
               '    NOT USED'
***********************************************************************
         LINE
         BIN   XCSWCE
         BIN   XCSWCDC
         HEX   SDR5,0,1L
         HEX   SDR5,0,1R
         LABEL 'CHANNEL END','CHAN DATA CHECK','EQUIPMENT CHECK',      X
               '    NOT USED'
***********************************************************************
         LINE
         BIN   XCSWDE
         BIN   XCSWCCC
         HEX   SDR6,0,1L
         HEX   SDR6,0,1R
         LABEL 'DEVICE END','CHAN CTL CHECK','NOT USED','    NOT USED'
***********************************************************************
         LINE
         BIN   XCSWUC
         BIN   XCSWICC
         HEX   SDR7,0,1L
         HEX   SDR7,0,1R
         LABEL 'UNIT CHECK','I/F CTL CHECK','NOT USED','    NOT USED'
***********************************************************************
         LINE  ,,SKIP=3
         BIN   XCSWUE
         BIN   XCSWCH
         HEX   SDR8,0,1L
         HEX   SDR8,0,1R
         LABEL 'UNIT EXCEPTION','CHAINING CHECK','NOT USED',           X
               '    CHAN DATA CHK'
***********************************************************************
         LINE  ,(1,43)
         LABEL 'SENSE BYTE DATA - FIXED FORMAT - (BYTES 0-7)'
***********************************************************************
         LINE  ,(5,24),SKIP=2
         LABEL 'STANDARD STATUS (+0)','REQUEST STATUS (+1)',           X
               'DETECTING COMP (+2)','CIT OPERATION CODE (+4,+5)'
***********************************************************************
         LINE  (23,23),(3,24),SKIP=1
         BIN   XB0CMDR
         BIN   XB1RST
         BIN   XB2CPMC
         HEX   XB4B5,B6,2B
         LABEL 'COMMAND REJECT','RESTARTABLE','CP MACHINE CHK'
***********************************************************************
         LINE
         BIN   XB0INTRQ
         BIN   XB1URERR
         BIN   XB2IO
         LABEL 'INTERVENTION REQD','UNRELATED ERROR','I/O'
***********************************************************************
         LINE
         BIN   XB0BUSC
         BIN   XB1DDEP
         BIN   XB2ARELM
         LABEL 'BUS OUT PARITY','DATA-DEPENDENT','ARITH ELEMENT'
***********************************************************************
         LINE
         BIN   XB0ECHK
         BIN   XB1INVP
         BIN   XB2DTC
         LABEL 'EQUIPMENT CHECK','INVALID PASSWORD','DATA TRANS CTLR'
***********************************************************************
         LINE
         BIN   XB0DCHK
         BIN   XB1NU1
         BIN   XB2CPEXC
         LABEL 'DATA CHECK','NOT USED','CP EXECUTIVE',                 X
               '  CIT OPERATION OFFSET (+6,+7)'
***********************************************************************
         LINE
         BIN   XB0NU1                                          @G29AFFR
         BIN   XB1NU2
         BIN   XB2PERM
         LABEL 'NOT USED','NOT USED','PERF MONITOR'
***********************************************************************
         LINE
         BIN   XB0NOTIN                                        @G29AFFR
         BIN   XB1NU3
         BIN   XB2NU1
         HEX   XB6B7,B6,2B
         LABEL 'NOT INTIIALIZED','NOT USED','NOT USED'         @G29AFFR
***********************************************************************
         LINE  ,,SKIP=3
         BIN   XB0PRE                                          @G29AFFR
         BIN   XB1NU4
         BIN   XB2NU2
         LABEL 'PREV I/O EXCEPTION','NOT USED','NOT USED'      @G29AFFR
***********************************************************************
         LINE  ,(1,36),SKIP=2
         ROUTINE XB3SNSTY,SNSTYPE
         LABEL 'SENSE BYTE DATA - EXTENDED FORMAT 0 ',                 X
               '- EQUIPMENT-RELATED (BYTES 8-31)'
***********************************************************************
         LINE  ,(3,18)
         LABEL 'STOR PAR (+8)','ADDR CHK (+9)','CP STAT (+10)',        X
               'AE STAT (+11)','CP EXEC (+12)','CP EXEC (+13)'
***********************************************************************
         LINE  (14,18),(3,18),SKIP=1
         BIN   XB8BIT0
         BIN   XB9BIT0
         BIN   XB10BIT0
         BIN   XB11BIT0
         BIN   XB12BIT0
         BIN   XB13BIT0
         LABEL 'BULK STOR','BULK STOR','ILL MICRO','MACH CHK',         X
               'INV INSTR','INV AD REF'
***********************************************************************
         LINE
         BIN   XB8BIT1
         BIN   XB9BIT1
         BIN   XB10BIT1
         BIN   XB11BIT1
         BIN   XB12BIT1
         BIN   XB13BIT1
         LABEL 'CP PGM ST','CP PGM ST','EDB T/O','WS CONFLCT',         X
               'DIV ZERO','INIT ERR'
***********************************************************************
         LINE
         BIN   XB8BIT2
         BIN   XB9BIT2
         BIN   XB10BIT2
         BIN   XB11BIT2
         BIN   XB12BIT2
         BIN   XB13BIT2
         LABEL 'CP CTL ST','NOT USED','EDB PAR R','NOT USED',          X
               'I/O INIT','BUF SPACE'
***********************************************************************
         LINE
         BIN   XB8BIT3
         BIN   XB9BIT3
         BIN   XB10BIT3
         BIN   XB11BIT3
         BIN   XB12BIT3
         BIN   XB13BIT3
         LABEL 'AE WRK ST','NOT USED','EDB PAR O','NOT USED',          X
               'INV IOCW','NOT USED'
***********************************************************************
         LINE
         BIN   XB8BIT4
         BIN   XB9BIT4
         BIN   XB10BIT4
         BIN   XB11BIT4
         BIN   XB12BIT4
         BIN   XB13BIT4
         LABEL 'AE CTL ST','NOT USED','NOT USED','NOT USED',           X
               'DTC INIT','NOT USED'
***********************************************************************
         LINE
         BIN   XB8BIT5
         BIN   XB9BIT5
         BIN   XB10BIT5
         BIN   XB11BIT5
         BIN   XB12BIT5
         BIN   XB13BIT5
         LABEL 'NOT USED','NOT USED','NOT USED','NOT USED',            X
               'INV TCB','NOT USED'
***********************************************************************
         LINE
         BIN   XB8BIT6
         BIN   XB9BIT6
         BIN   XB10BIT6
         BIN   XB11BIT6
         BIN   XB12BIT6
         BIN   XB13BIT6
         LABEL 'NOT USED','NOT USED','NOT USED','NOT USED',            X
               'AE INIT','NOT USED'
***********************************************************************
         LINE  ,,SKIP=3
         BIN   XB8BIT7
         BIN   XB9BIT7
         BIN   XB10BIT7
         BIN   XB11BIT7
         BIN   XB12BIT7
         BIN   XB13BIT7
         LABEL 'NOT USED','NOT USED','NOT USED','NOT USED',            X
               'INV AFCW','NOT USED'
***********************************************************************
         LINE  ,(21,28),SKIP=2
         LABEL 'STORAGE CARD (+14,+15)','CP PGM STOR ADDR (+16,+17)',  X
               '             CP CSAR (+18,+1','9)'
***********************************************************************
         LINE  (36,32)
         ROUTINE XB14BIT0,SETHEX2
         ROUTINE XB16BIT0,SETHEX2
         ROUTINE XB18BIT0,SETHEX2
         ROUTINE XB8BIT0,CONDSNS
         LABEL ''
***********************************************************************
         LINE  ,(63,36),SKIP=1
         LABEL 'CC FL ST   CNT    SS      ADDR'
***********************************************************************
         LINE  (64,3),(32,72)
         HEX   XB20,0,1L
         HEX   XB20,B1,1R
         HEX   XB21,B1,1B
         HEX   XB22,0,1B
         HEX   XB23,B1,1B
         HEX   XB24,0,1L
         HEX   XB24,B1,1R
         HEX   XB25,0,1L
         HEX   XB25,B1,1R
         HEX   XB26XB27,B2,2B
         ROUTINE XB12BIT0,CONDSNS1
         LABEL 'FAILING IOCW (+20-+27)'
***********************************************************************
DUMPCODE LINE  ,,SKIP=1
         ROUTINE XDUM1,RESETR2
         LABEL ''
***********************************************************************
         DC    X'FF'
         DC    XL2'006A'         RECORD LENGTH
         DC    XL2'0020'         LENGTH OF HDR
         DC    XL2'0020'         DISP. FOR START OF DATA
SHRTOBRL LABEL ''
***********************************************************************
SHRTOBRS LINE  ,(1,1),SKIP=2
         LABEL 'STATISTICAL DATA'
***********************************************************************
         LINE  (21,30),(1,30),SKIP=1
         HEX   SDR1,0,1L
         HEX   SDR1,0,1R
         LABEL 'DATA CHECK (READ)','NOT USED'
***********************************************************************
         LINE
         HEX   SDR2,0,1L
         HEX   SDR2,0,1R
         LABEL 'DATA CHECK (WRITE)','NOT USED'
***********************************************************************
         LINE
         HEX   SDR3,0,1L
         HEX   SDR3,0,1R
         LABEL 'INTERVENTION REQD','NOT USED'
***********************************************************************
         LINE
         HEX   SDR4,0,1L
         HEX   SDR4,0,1R
         LABEL 'BUS CUT PARITY','NOT USED'
***********************************************************************
         LINE
         HEX   SDR5,0,1L
         HEX   SDR5,0,1R
         LABEL 'EQUIPMENT CHECK','NOT USED'
***********************************************************************
         LINE
         HEX   SDR6,0,1L
         HEX   SDR6,0,1R
         LABEL 'NOT USED','NOT USED'
***********************************************************************
         LINE
         HEX   SDR7,0,1L
         HEX   SDR7,0,1R
         LABEL 'NOT USED','NOT USED'
***********************************************************************
         LINE
         HEX   SDR8,0,1L
         HEX   SDR8,0,1R
         LABEL 'NOT USED','CHAN DATA CHECK'
***********************************************************************
         LINE  ,,SKIP=2
         ROUTINE XDUM1,RESETR2
         LABEL ''
***********************************************************************
         DC    X'FF'
         DC    XL2'0022'         RECORD LENGTH
         DC    XL2'0010'         LENGTH OF HDR
         DC    XL2'0010'         DISP. FOR START OF DATA
HWLABEL  LABEL ''
***********************************************************************
HWSENSE  LINE  ,(1,38),SKIP=2
         LABEL 'SENSE BYTE DATA - EXTENDED FORMAT 1 - ',               X
               'HARDWARE VERIFICATION (BYTES 8-19)'
***********************************************************************
         LINE  ,(3,42)
         LABEL 'PERF MON EXEC CNT (+8)      PM ERR STAT    ',          X
               '(+10)  (+11)  (+12)  (+13)  (+14)  (+15)  ',           X
               '(+16)  (+17)  (+18)  (+19)'
***********************************************************************
         LINE  (41,7),(31,1),SKIP=1
         ROUTINE XB8BIT0,SETHEX1
         BIN   XB10BIT0
         BIN   XB11BIT0
         BIN   XB12BIT0
         BIN   XB13BIT0
         BIN   XB14BIT0
         BIN   XB15BIT0
         BIN   XB16BIT0
         BIN   XB17BIT0
         BIN   XB18BIT0
         BIN   XB19BIT0
         LABEL 'CP FAILURE'
***********************************************************************
         LINE  (48,7),(31,1)
         BIN   XB10BIT1
         BIN   XB11BIT1
         BIN   XB12BIT1
         BIN   XB13BIT1
         BIN   XB14BIT1
         BIN   XB15BIT1
         BIN   XB16BIT1
         BIN   XB17BIT1
         BIN   XB18BIT1
         BIN   XB19BIT1
         LABEL 'AE FAILURE'
***********************************************************************
         LINE
         BIN   XB10BIT2
         BIN   XB11BIT2
         BIN   XB12BIT2
         BIN   XB13BIT2
         BIN   XB14BIT2
         BIN   XB15BIT2
         BIN   XB16BIT2
         BIN   XB17BIT2
         BIN   XB18BIT2
         BIN   XB19BIT2
         LABEL 'BULK STOR'
***********************************************************************
         LINE  (48,7),(3,28)
         BIN   XB10BIT3
         BIN   XB11BIT3
         BIN   XB12BIT3
         BIN   XB13BIT3
         BIN   XB14BIT3
         BIN   XB15BIT3
         BIN   XB16BIT3
         BIN   XB17BIT3
         BIN   XB18BIT3
         BIN   XB19BIT3
         LABEL 'PERF MON ERR CNT (+9)','DTC FAILURE'
***********************************************************************
         LINE  (48,7),(31,1)
         BIN   XB10BIT4
         BIN   XB11BIT4
         BIN   XB12BIT4
         BIN   XB13BIT4
         BIN   XB14BIT4
         BIN   XB15BIT4
         BIN   XB16BIT4
         BIN   XB17BIT4
         BIN   XB18BIT4
         BIN   XB19BIT4
         LABEL 'NOT USED'
***********************************************************************
         LINE  (41,7),(31,1)
         ROUTINE XB9BIT0,SETHEX1
         BIN   XB10BIT5
         BIN   XB11BIT5
         BIN   XB12BIT5
         BIN   XB13BIT5
         BIN   XB14BIT5
         BIN   XB15BIT5
         BIN   XB16BIT5
         BIN   XB17BIT5
         BIN   XB18BIT5
         BIN   XB19BIT5
         LABEL 'NOT USED'
***********************************************************************
         LINE  (48,7),(31,1)
         BIN   XB10BIT6
         BIN   XB11BIT6
         BIN   XB12BIT6
         BIN   XB13BIT6
         BIN   XB14BIT6
         BIN   XB15BIT6
         BIN   XB16BIT6
         BIN   XB17BIT6
         BIN   XB18BIT6
         BIN   XB19BIT6
         LABEL 'NOT USED'
***********************************************************************
         LINE
         BIN   XB10BIT7
         BIN   XB11BIT7
         BIN   XB12BIT7
         BIN   XB13BIT7
         BIN   XB14BIT7
         BIN   XB15BIT7
         BIN   XB16BIT7
         BIN   XB17BIT7
         BIN   XB18BIT7
         BIN   XB19BIT7
         LABEL 'NOT USED'
***********************************************************************
         LINE  ,,SKIP=2
         ROUTINE XDUM1,RESETR2
         LABEL ''
***********************************************************************
         DC    X'FF'
         DC    XL2'006A'         RECORD LENGTH
         DC    XL2'0020'         LENGTH OF HDR
         DC    XL2'0020'         DISP. FOR START OF DATA
DATLABEL LABEL ''
***********************************************************************
DATSENSE LINE  ,(1,38),SKIP=2
         LABEL 'SENSE BYTE DATA - EXTENDED FORMAT 2 - ',               X
               'DATA-RELATED (BYTES 8-15)'
***********************************************************************
         LINE  ,(3,27)
         LABEL ' DATA-DEP STAT (+8)','  DATA-DEP STAT (+9)',           X
               'AE DATA CHK STAT (+10)','AE DATA CHK STAT (+11)'
***********************************************************************
         LINE  (20,28),(3,28),SKIP=1
         BIN   XB8BIT0
         BIN   XB9BIT0
         BIN   XB10BIT0
         BIN   XB11BIT0
         LABEL 'I/O LIMIT CHECK','CIT INDEX OVFL','NOT USED',          X
               'ADDER A EXP OVFL'
***********************************************************************
         LINE
         BIN   XB8BIT1
         BIN   XB9BIT1
         BIN   XB10BIT1
         BIN   XB11BIT1
         LABEL 'I/O LENGTH ERR','CIT INDX DIV CHK','NOT USED',         X
               'ADDER A EXP UNFL'
***********************************************************************
         LINE
         BIN   XB8BIT2
         BIN   XB9BIT2
         BIN   XB10BIT2
         BIN   XB11BIT2
         LABEL 'CHAN PGM CORRES','BULK ST LIM CHK','NOT USED',         X
               'ADDER A INT OVFL'
***********************************************************************
         LINE
         BIN   XB8BIT3
         BIN   XB9BIT3
         BIN   XB10BIT3
         BIN   XB11BIT3
         LABEL 'CIT LIMIT CHECK','DTC CONVERT','RECP EST EXP OVF',     X
               'ADD A RT EXP LRG'
***********************************************************************
         LINE
         BIN   XB8BIT4
         BIN   XB9BIT4
         BIN   XB10BIT4
         BIN   XB11BIT4
         LABEL 'INV CIT OPER','SELEC ERROR STOP','MULT EXP OVFL',      X
               'ADDER B EXP OVFL'
***********************************************************************
         LINE
         BIN   XB8BIT5
         BIN   XB9BIT5
         BIN   XB10BIT5
         BIN   XB11BIT5
         LABEL 'INV CIT PARAM','NOT USED','MULT EXP UNFL',             X
               'ADDER B EXP UNFL'
***********************************************************************
         LINE
         BIN   XB8BIT6
         BIN   XB9BIT6
         BIN   XB10BIT6
         BIN   XB11BIT6
         LABEL 'INV CIT BRANCH','NOT USED','INT MULT OVFL',            X
               'ADDER B INT OVFL'
***********************************************************************
         LINE  ,,SKIP=3
         BIN   XB8BIT7
         BIN   XB9BIT7
         BIN   XB10BIT7
         BIN   XB11BIT7
         LABEL 'CIT BR CNT EXCD','NOT USED','UNNORM RECP EST',         X
               'ADD B RT EXP LRG'
***********************************************************************
         LINE  (76,2),(31,1)
         ROUTINE XB12BIT0,BRCNT
         LABEL 'CIT SUCCESSFUL BRANCH COUNT (+12-+15)'
***********************************************************************
         LINE  ,,SKIP=2
         ROUTINE XDUM1,RESETR2
         LABEL ''
***********************************************************************
         DC    X'FF'
         DC    XL2'006A'         RECORD LENGTH
         DC    XL2'0020'         LENGTH OF HDR
         DC    XL2'0020'         DISP. FOR START OF DATA
NILABEL  LABEL ''                                              @G29AFFR
***********************************************************************
NOTINIT  LINE  ,(1,38),SKIP=2                                  @G29AFFR
         LABEL 'SENSE BYTE DATA - EXTENDED FORMAT 4 - ',       @G29AFFRX
               'NOT INITIALIZED (BYTES 8-19)'                  @G29AFFR
***********************************************************************
         LINE  (3,1),(30,20)                                   @G29AFFR
         ROUTINE XDUM1,MOVELAB                                 @G29AFFR
         LABEL 'I/O STAT  (+9)','I/O STAT (+10)','I/O STAT (+11)',     X
               'CP CHECK (+12)'                                @G29AFFR
***********************************************************************
         LINE  (22,20),,SKIP=1                                 @G29AFFR
         HEX   XB8,B2,1B                                       @G29AFFR
         BIN   XB9BIT0                                         @G29AFFR
         BIN   XB10BIT0                                        @G29AFFR
         BIN   XB11BIT0                                        @G29AFFR
         BIN   XB12BIT0                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER                               @G29AFFR
         LABEL 'NOT USED','READ','CMD REJ','NOT USED'          @G29AFFR
***********************************************************************
         LINE  (42,20)                                         @G29AFFR
         BIN   XB9BIT1                                         @G29AFFR
         BIN   XB10BIT1                                        @G29AFFR
         BIN   XB11BIT1                                        @G29AFFR
         BIN   XB12BIT1                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER0                              @G29AFFR
         LABEL 'NOT USED','WRITE','BUS O PAR','ILL MICBR'      @G29AFFR
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB9BIT2                                         @G29AFFR
         BIN   XB10BIT2                                        @G29AFFR
         BIN   XB11BIT2                                        @G29AFFR
         BIN   XB12BIT2                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER0                              @G29AFFR
         LABEL 'NOT USED','SENSE','SUPPRESS 0','EQUIP CHECK'   @G29AFFR
***********************************************************************
         LINE  (22,20)                                         @G29AFFR
         ROUTINE XDUM1,MOVEOLAB                                @G29AFFR
         BIN   XB9BIT3                                         @G29AFFR
         BIN   XB10BIT3                                        @G29AFFR
         BIN   XB11BIT3                                        @G29AFFR
         BIN   XB12BIT3                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER0                              @G29AFFR
         LABEL 'SENSE ID','CTL PROC','STOP','DIV ZERO'         @G29AFFR
***********************************************************************
         LINE  (42,20)                                         @G29AFFR
         BIN   XB9BIT4                                         @G29AFFR
         BIN   XB10BIT4                                        @G29AFFR
         BIN   XB11BIT4                                        @G29AFFR
         BIN   XB12BIT4                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER0                              @G29AFFR
         LABEL 'CHAN END','CTL SYS','DATA CHECK','INV ADDR'    @G29AFFR
***********************************************************************
         LINE  (22,20)                                         @G29AFFR
         HEX   XB13,B2,1B                                      @G29AFFR
         BIN   XB9BIT5                                         @G29AFFR
         BIN   XB10BIT5                                        @G29AFFR
         BIN   XB11BIT5                                        @G29AFFR
         BIN   XB12BIT5                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER                               @G29AFFR
         LABEL 'UNIT CHECK','DISCON IN','ADDR CHECK','INV INSTR'
***********************************************************************
         LINE  (42,20)                                         @G29AFFR
         BIN   XB9BIT6                                         @G29AFFR
         BIN   XB10BIT6                                        @G29AFFR
         BIN   XB11BIT6                                        @G29AFFR
         BIN   XB12BIT6                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER0                              @G29AFFR
         LABEL 'STAT MOD','SEL RESET','STAT TAKN','NOT USED'   @G29AFFR
***********************************************************************
         LINE  ,,SKIP=3                                        @G29AFFR
         BIN   XB9BIT7                                         @G29AFFR
         BIN   XB10BIT7                                        @G29AFFR
         BIN   XB11BIT7                                        @G29AFFR
         BIN   XB12BIT7                                        @G29AFFR
         ROUTINE XB0CMDR,CHECKER0                              @G29AFFR
         LABEL 'BUSY','INT DISCN','ONLINE','NOT USED'          @G29AFFR
***********************************************************************
         LINE  (86,1),(10,20),SKIP=2                           @G29AFFR
         ROUTINE XDUM1,NLLAB                                   @G29AFFR
         LABEL 'CP MCH CK (+14)','CP MCH CK (+15)',            @G29AFFRX
               'CP PGM STOR DATA ADDR (+16,+17)'               @G29AFFR
***********************************************************************
         LINE  (23,20),(10,20),SKIP=1                          @G29AFFR
         BIN   XB14BIT0                                        @G29AFFR
         BIN   XB15BIT0                                        @G29AFFR
         ROUTINE XB16XB17,SETHEX20                             @G29AFFR
         ROUTINE XB18XB19,SETHEX22                             @G29AFFR
         ROUTINE XB0CMDR,CHECK1                                @G29AFFR
         LABEL 'NOT USED','PS PAR I-F'                         @G29AFFR
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB14BIT1                                        @G29AFFR
         BIN   XB15BIT1                                        @G29AFFR
         ROUTINE XB0CMDR,CHECK2                                @G29AFFR
         LABEL 'NOT USED','PS PAR D-F'                         @G29AFFR
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB14BIT2                                        @G29AFFR
         BIN   XB15BIT2                                        @G29AFFR
         ROUTINE XB0CMDR,CHECK2                                @G29AFFR
         LABEL 'NOT USED','NOT USED'                           @G29AFFR
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB14BIT3                                        @G29AFFR
         BIN   XB15BIT3                                        @G29AFFR
         ROUTINE XB0CMDR,CHECK2                                @G29AFFR
         LABEL 'NOT USED','ILL AD I-F','CP INSTR CTR (+22,+23)'
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB14BIT4                                        @G29AFFR
         BIN   XB15BIT4                                        @G29AFFR
         ROUTINE XB0CMDR,CHECK2                                @G29AFFR
         LABEL 'NOT USED','ILL AD D-F'                         @G29AFFR
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB14BIT5                                        @G29AFFR
         BIN   XB15BIT5                                        @G29AFFR
         ROUTINE XB22,CPINSCON                                 @G29AFFR
         ROUTINE XB0CMDR,CHECK2                                @G29AFFR
         LABEL 'EDB PAR R','EDB T/O'                           @G29AFFR
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB14BIT6                                        @G29AFFR
         BIN   XB15BIT6                                        @G29AFFR
         ROUTINE XB0CMDR,CHECK2                                @G29AFFR
         LABEL 'EDB PAR W','NOT USED'                          @G29AFFR
***********************************************************************
         LINE  ,                                               @G29AFFR
         BIN   XB14BIT7                                        @G29AFFR
         BIN   XB15BIT7                                        @G29AFFR
         ROUTINE XB0CMDR,CHECK2                                @G29AFFR
         LABEL 'CTL ST PAR','NOT USED'                         @G29AFFR
***********************************************************************
         LINE  ,,SKIP=2                                        @G29AFFR
         ROUTINE XDUM1,RESETR2                                 @G29AFFR
         LABEL ''                                              @G29AFFR
***********************************************************************
         DC    X'FF'                                           @G29AFFR
         DC    X'006A'                                         @G29AFFR
         DC    X'0020'                                         @G29AFFR
         DC    X'0020'                                         @G29AFFR
***********************************************************************
LABELS   DS    0F                                              @G29AFFR
         DC    C'$'                                            @G29AFFR
         LSTART                                                @G29AFFR
         END
