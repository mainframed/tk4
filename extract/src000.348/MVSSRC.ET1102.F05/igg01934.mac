GG34     TITLE 'IGG01934 COMMON LAST LOAD OF OPEN'
IGG01934 CSECT
*A-000000-999999                                               @X31X8N0
*A428000                                                        SA59524
*CHANGE ACTIVITY AS FOLLOWS:
*A016300,017400,063000,271604-271768,343200-344400,349800-360000,X01004
*A709100,723000-723100,734100-734500,741600-741700               X01004
*C014000,342000,741500                                           X01004
*D014300-014900,218080-219791,219840,725000                      X01004
*A345000-349200,360600,727000                                    Y01004
*C176000                                                         Y01004
*D708000-708760,768200-768500,774000                             Y01004
*A016200,327000-337000,342600                                    X02004
*C017300,062000,321000-322000,734400                             X02004
*A629000                                                         S21101
*D629500                                                         S21101
*A738000                                                         S21101
*C336000-338000,344000-346000                                    S21101
*D352000-360000                                                  S21101
*A057000,162000,218000,219040,219680,266000,374000,382000,398000 CLUP21
*A462000,482000,492000,494000,586000,610000,680000,709560,722300 CLUP21
*A734000,740000,768000,768500,828000                             CLUP21
*C014000-020000,138000,146000,218080-218560,219200,268000-360000 CLUP21
*C426000,492000,612000-616000,778000                             CLUP21
*D219120,248000,624000-632000,686000-704000,708640-708680        CLUP21
*D710000-716000,732000,814000-816000,822000-824000               CLUP21
*C160000,542000,568000,786000,806000,808000,820000-828000,830000 S21903
*C834000,836000                                                  S21903
*D162400-163600,510000-512000,592000-634000,664000-706000        S21903
*D709480-709520,722500,742000-768100,774000,786000-798000        S21903
*D808000,812000,820000,820800,821600,828000,828160,828320        S21903
*D828480                                                         S21903
*A828480-828560                                                  S21903
*C166000,646000,778000                                           S21903
*C008000,038000,044000,056000,058000,084000,085000,172000,176000 Y02027
*C239200,242600,357600,493500,530000,534000,709560               Y02027
*D174000,178000,243200                                           Y02027
*A157000,242900,570200-571400                                    Y02027
*A002100                                                       @Z30X8NM
*C008000,270600,271664,271720,496200,709360,768700             @Z30X8NM
*D242900,270800-270900,271620-271648,271668-271676             @Z30X8NM
*D271724-271736,828560,829200-830000                           @Z30X8NM
*A311000,337000,828600                                         @Z40X9NG
*C006000,006200,008000,098000,157000,302000-308000,322000      @Z40X9NG
*C342000,342600-343200,345000,348000,725300                    @Z40X9NG
*D315000-319000,344400,582000,723400-723800,724600             @Z40X9NG
*D728000-730000,732000-733000,734200-741000,749500-757500      @Z40X9NG
*D820400-821200                                                @Z40X9NG
*C829700-831800                                                @OZ26164
         EJECT                                                 @Z40X9NG
***********************************************************************
*                                                                     *
*MODULE NAME - IGG01934                                               *
*                                                                     *
*DESCRIPTIVE NAME - COMMON LAST LOAD OF OPEN                          *
*                                                                     *
*COPYRIGHT - NONE                                                     *
*                                                                     *
*STATUS - CHANGE LEVEL 9                                       @Z40X9NG
*                                                                     *
*FUNCTION/OPERATION - THIS ROUTINE PERFORMS ALL DISABLED              *
*   INITIALIZATION FUNCTIONS FOR TCAM.  THE APPROPRIATE TCAM     X01004
*   DISPATCHER IS LOADED AND ITS ADDRESS SAVED IN THE AVT. THE   CLUP21
*   ADDRESS OF THE AVT IS SAVED IN THE FIRST WORD OF THE         CLUP21
*   DISPATCHER. FOR CHECKPOINT DCB'S, THE CHECKPOINT CHANNEL END CLUP21
*   APPENDAGE IS LOADED AND ITS ADDRESS SAVED IN THE DEB. FOR    CLUP21
*   VS, THE NUMBER OF PAGES REQUIRED BY THE APPENDAGE IS IN-     X02004
*   DICATED IN THE APPENDAGE VECTOR TABLE IN THE DEB.  FOR       X01004
*   DISK QUEUEING, THE REUS/COPY ROUTINE IS LOADED AND ITS       CLUP21
*   ADDRESS SAVED IN THE AVT. THE APPROPRIATE EXCP DRIVER AND    CLUP21
*   DISK END APPENDAGES ARE LOADED AND THEIR ADDRESSES SAVED IN  CLUP21
*   THE AVT AND DEB RESPECTIVELY.  FOR VS THE DISK END APPENDAGE X02004
*   IS FIXED IN REAL STORAGE.  ALL SECONDARY DSCB'S IN CORE      X01004
*   ARE FREED BEFORE CONTROL IS TRANSFERRED TO THE NEXT LOAD OF  CLUP21
*   OPEN.                                                        CLUP21
*   PRIOR TO LOADING ANY MODULES AND ON THE FIRST PASS ONLY, AN  CLUP21
*   ATTEMPT IS MADE TO REDUCE POSSIBLE FRAGMENTATION OF CORE     CLUP21
*   CAUSED BY COPIES OF THE INTRO MODULES BEING RETAINED IN      CLUP21
*   SUBPOOL 251 EVEN THOUGH THEIR USE COUNT IS ZERO. THESE       CLUP21
*   MODULES WILL BE PURGED BY GETMAIN ROUTINES WHILE TRYING TO   CLUP21
*   SATISFY A CONDITIONAL GETMAIN REQUEST. THIS INSURES THE      CLUP21
*   CLEANEST POSSIBLE CORE LAYOUT PRIOR TO LOADING OTHER MODULES.CLUP21
*                                                                     *
*ENTRY POINTS - THIS ROUTINE IS ENTERED AT IGG01934 VIA AN            *
*   XCTL FROM AN I/O SUPPORT MODULE OR FROM ANOTHER ACCESS            *
*   METHOD'S OPEN EXECUTOR.  IT MAY ALSO BE RE-ENTERED FROM           *
*   THE RELOOP PORTION OF THIS ROUTINE IF IT DETERMINES THAT          *
*   THERE IS ANOTHER DATA CONTROL BLOCK TO BE OPENED.                 *
*                                                                     *
*INPUT - THE REGISTERS 5,6,7 AND 8 ARE THE INPUT AS FOLLOWS,          *
*   5 - THE ADDRESS OF THE WTG TABLE PREFIX                      Y02027
*   6 -  THE ADDRESS OF THE BEGINNING OF THE WHERE-TO-GO TABLE        *
*   7 - THE ADDRESS OF THE COPY OF THE CURRENT DCB               Y02027
*   8 -  THE ADDRESS OF THE CURRENT EXECUTOR'S ENTRY IN THE           *
*        WHERE-TO-GO TABLE.                                           *
*                                                                     *
*OUTPUT - REGISTERS 7 AND 8 WILL BE POSITIONED AT THEIR NEXT          *
*   RESPECTIVE ENTRIES IN THE WTG TABLE PREFIX AND IN THE        Y02027
*   WHERE-TO-GO TABLE                                            Y02027
*                                                                     *
*EXTERNAL ROUTINES - VS PGFIX ROUTINE (SVC 113) - TO FIX THE     X02004
*   DISK END APPENDAGE IN REAL STORAGE.                          X01004
*                                                                     *
*EXITS - NORMAL                                                       *
*   THIS ROUTINE EXITS VIA AN XCTL TO THE MODULE IDENTIFIED           *
*   BY THE NEXT NON-ZERO ENTRY IN THE WHERE-TO-GO TABLE               *
*                                                                     *
*        ERROR                                                        *
*   NONE                                                              *
*                                                                     *
*TABLES/WORKAREAS - THE WHERE-TO-GO TABLE CONTAINS THE ID AND         *
*   TTR OF THE OPEN EXECUTOR.  THE WHERE-TO-GO TABLE PREFIX      Y02027
*   CONTAINS THE ADDRESS OF A COPY OF EACH DCB SPECIFIED         Y02027
*   IN THE OPEN MACRO INSTRUCTION.  THE OPEN WORK AREA                *
*   DESCRIBES THE CHARACTERISTICS AND UP TO SIXTEEN EXTENTS OF        *
*   A DATA SET.  THE ADDRESS VECTOR TABLE IS A RESIDENT VECTOR        *
*   LIST USED TO STORE THE ADDRESSES OF THE LOADED ROUTINES           *
*                                                                     *
*ATTRIBUTES - THIS ROUTINE IS EXECUTED IN LPALIB AND RUNS      @Z40X9NG
*   ENABLED, PRIVELEGED. AND REENTRANT.                               *
***********************************************************************
         EJECT
*REGISTER USAGE
*
RE       EQU   0                        WORK REGISTER
RF       EQU   1                        WORK REGISTER
RDCB     EQU   2                        ADDRESS OF THE CRRRENT DCB
RBASE    EQU   3                        BASE OF THIS ROUTINE
RCORE    EQU   4                        ADDRESS OF DCB WORK AREA
RPAR     EQU   5                        ADDRESS OF FIRST ENTRY IN
*                                         DCB PARAMETER LIST
RWTG     EQU   6                        ADDRESS OF WHERE-TO-GO TABLE
RPARC    EQU   7                        ADDRESS OF CURRENT ENTRY IN
*                                         DCB PARAMETER LIST
RWTGC    EQU   8                        ADDRESS OF CURRENT ENTRY IN
*                                         WHERE-TO-GO TABLE
RAVT     EQU   9                        ADDRESS OF THE AVT
RUCB     EQU   10                       ADDRESS OF CURRENT UCB
RDEB     EQU   11                       ADDRESS OF THE DEB
RTIOT    EQU   12                       WORK REGISTER            CLUP21
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK REGISTER
RJ       EQU   15                       WORK REGISTER
         USING CVT,RF                   CVT DSECT BASE
         USING IEDQDEB,RDEB             DEB DSECT BASE
         USING FORCORE,RCORE            DSCB DSECT
         USING IHADCB,RDCB              DCB DSECT BASE
         USING IEDQAVTD,RAVT            AVT DSECT BASE
         USING IOSB,RJ                  IOSB ADDRESSABILITY    @Z40X9NG
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY S21903
         USING *,RBASE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE ADDRESSES THE OPEN WORKAREA, DEB,   *
*        DCB, AND THE OFFSET INTO THE DEB FOR THE ID'S OF THE     *
*        LOADED SUBROUTINES.                                      *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                CLUP21
IGG01934 IEDHJN RESTART                                          S21903
         L     RCORE,FOUR(RWTGC)       LOAD THE ADDRESS OF THE
*                                        OPEN WORK AREA
         L     RDCB,DXUDCBAD            ADDR OF USER DCB         Y02027
         L     RDEB,DCBDEBAD            LOAD DEB ADDR            Y02027
         LA    RD,DEBPTR                LOAD THE LENGTH OF THE DEB
*                                         PREFIX
         SR    RDEB,RD                  SET THE BEGINNING ADDRESS
*                                         OF THE DEB APPENDAGE
         SR    RTIOT,RTIOT              CLEAR A REGISTER FOR THE
*                                         COUNT OF LOADED
*                                         SUB-ROUTINES
         SR    RD,RD                    CLEAR A SIZE REGISTER
         IC    RD,DEBNMEXT              LOAD THE NUMBER OF EXTENTS
         SLL   RD,4                     MULTIPLY THE NUMBER OF
*                                         EXTENTS BY 16
         LA    RUCB,DEBUCBAD(RD)        LOAD THE ADDRESS OF THE
*                                         ACCESS METHOD DEPENDENT
*                                         SECTION
         SR    RD,RD                    CLEAR A LENGTH REGISTER
         IC    RD,DEBAMLNG              LOAD THE LENGTH OF THE
*                                         ACCESS METHOD SECTION
         AR    RUCB,RD                  ADDRESS OF THE SUB-ROUTINE
*                                         ID SECTION
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE PERFORMS THE REMAINING REQUIRED     *
*        LOADS. FOR CHECKPOINT DCBS, THE CHECKPOINT CHANNEL END   *
*        APPENDAGE IS LOADED. FOR NON-CHECKPOINT DCBS, THE        *
*        APPROPRIATE EXCP DRIVER, DISK END APPENDAGE, AND         *
*        REUS/COPY ARE LOADED IF NEEDED. THE SEQUENCE OF LOADS IS *
*        FROM LARGEST MODULE TO SMALLEST MODULE SO AS TO MAKE     *
*        OPTIMUM USE OF CORE IN SP 252.                           *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                CLUP21
         TM    DCBOPTCD,CHECKDCB+CKP3705 IS THIS CHECKPT DCB   @ZM46687
         BZ    TESTEXCP                 NO, BRANCH               S22024
         TM    DCBOPTCD,CKP3705         3705 CHECKPOINT DCB    @ZM46687
         BO    FREEDSCB                 YES, SKIP CEA LOAD     @ZM46687
         LA    RC,CHKPTAPN              ADDRESS ID OF CHECKPOINT CLUP21
*                                         CHANNEL END APPENDAGE  CLUP21
         BAL   RD,LOADRTNE              CALL LOAD SUBROUTINE     CLUP21
         ST    RE,DEBCEA                SAVE IN THE DEB          CLUP21
         L     RC,CVTPTR                RC = CVT ADDRESS.        X01004
         SLL   RF,THREE                 RF = APPENDAGE LENGTH IN X01004
*                                         DOUBLEWORDS.  MULTIPLY X01004
*                                         IT BY EIGHT.           X01004
         SLL   RE,TWENTY                SET RE = NUMBER OF BYTES X01004
         SRL   RE,TWENTY                  IN FIRST 4K PAGE NOT   X01004
*                                         OCCUPIED BY APPENDAGE. X01004
         LH    RD,FOURK                 RD = PAGE SIZE         @Z30X8NM
         SR    RD,RE                    RD = MAX. BYTES IN FIRST X01004
*                                         PAGE THAT APPENDAGE    X01004
*                                         MAY OCCUPY.            X01004
         SR    RE,RE                    CLEAR FOR BCTR.          X01004
         BCTR  RE,ZERO                  APPENDAGE OCCUPIES AT    X01004
*                                         LEAST ONE PAGE.        X01004
PAGEFIT  EQU   *                                                 X01004
         CR    RF,RD                    DOES APPENDAGE FIT IN NO.X01004
*                                         OF BYTES IN RD         X01004
         BNH   LASTPAGE                 BRANCH IF YES.           X01004
         AH    RD,FOURK                 ADD THE SIZE OF        @Z30X8NM
*                                       ANOTHER PAGE - 4K      @Z30X8NM
         BCT   RE,PAGEFIT               APPENDAGE OCCUPIES AT    X01004
*                                         LEAST 1 MORE PAGE. SEE X01004
*                                         IF 1 MORE IS ENOUGH.   X01004
LASTPAGE EQU   *                                                 X01004
         LPR   RE,RE                    MAKE PAGE COUNT POSITIVE.X01004
         STCM  RE,ONE,DEBCEA            PUT COUNT OF PAGES RE-   X01004
*                                         QUIRED BY APPENDAGE IN X01004
*                                         APPENDAGE VECTOR TABLE.X01004
         B     ENDLOAD                  GO TO NEXT LOAD          Y02027
*                                                                CLUP21
TESTEXCP EQU   *
         TM    AVTBIT1,AVTDISKN         DOES AVT HAVE DISK AREA
         BNO   ENDLOAD                  NO, BRANCH               Y02027
         NC    AVTIA(FOUR),AVTIA        REUS/COPY BEEN LOADED    CLUP21
         BNZ   TESTDRIV                 YES, BRANCH              CLUP21
         TM    DCBOPTCD,REUSQUE         TEST FOR REUSABLE QUEUES CLUP21
         BO    REUSABLE                 YES, BRANCH              CLUP21
         CLC   AVTTOTNC,AVTFZERO        ARE MAIN STORAGE QUEUES  CLUP21
*                                         BEING USED             CLUP21
         BE    TESTDRIV                 NO, BRANCH               CLUP21
*                                                                CLUP21
REUSABLE EQU   *                                                 CLUP21
         LA    RC,REUS                  ADDRESS ID OF REUS/COPY  CLUP21
         BAL   RD,LOADRTNE              CALL LOAD SUBROUTINE     CLUP21
         LR    RD,RE                                             CLUP21
         LA    RD,FOUR(RD)              LOCATE ACTUAL ENTRY POINTCLUP21
         ST    RD,AVTIA                 SAVE IN AVT              CLUP21
         LR    RD,RE                                             CLUP21
         A     RD,0(RD)                 ADD THE OFFSET TO THE    CLUP21
*                                         COPY QCB               CLUP21
         ST    RD,AVTCOPY               SAVE ADDRESS OF COPY QCB CLUP21
*                                         IN THE AVT             CLUP21
TESTDRIV EQU   *                                                 CLUP21
         NC    AVTFL(FOUR),AVTFL        EXCP DRIVER BEEN LOADED  CLUP21
         BNZ   TESTAPPN                 YES, BRANCH              CLUP21
         LA    RC,EXCPDRIV              ADDR ID OF EXCP DRIVER @Z40X9NG
         BAL   RD,LOADRTNE              CALL LOAD SUBROUTINE     CLUP21
         ST    RE,AVTFL                 SAVE EXCP DRIVER ADDRESS CLUP21
*                                         IN THE AVT             CLUP21
         EJECT                                                 @Z40X9NG
TESTAPPN EQU   *                                                 CLUP21
         LA    RC,DISKAPPN              ADDRESS ID OF DISK END   CLUP21
*                                         APPENDAGE              CLUP21
         BAL   RD,LOADRTNE              CALL LOAD SUBROUTINE     CLUP21
         LR    RC,RE                    COPY APPENDAGE ADDRESS   X02004
         LA    RC,APPSTART-APP(,RC)     GET ENTRY POINT ADDR   @Z40X9NG
*                                       OF APPENDAGE           @Z40X9NG
         ST    RC,DEBCEA                SAVE DISK END APPENDAGE  X02004
*                                       ADDRESS IN DEB           X02004
         ST    RC,DEBXCEA               SET ABEND APPENDAGE      X02004
         L     RJ,DCBIOBAD              GET IOSBE ADDR         @Z40X9NG
         LA    RJ,IOSBELEN(,RJ)         GET PTR TO 1ST IOSBE   @Z40X9NG
         ICM   RJ,ADDR,IOSBEIOS-IOSBE(RJ) GET PTR TO 1ST IOSB  @Z40X9NG
         SLR   RC,RC                    CLEAR FOR INSERT       @Z40X9NG
         IC    RC,DEBNMEXT              GET NUMBER OF IOSB'S   @Z40X9NG
INITIOSB EQU   *                                               @Z40X9NG
*        IOSPCI & IOSDIE WERE SET TO 0 WHEN IOSB WAS CLEARED   @Z40X9NG
         MVC   IOSNRM(FOUR),DEBCEA      SET NORMAL END         @Z40X9NG
*                                       APPENDAGE ADDR         @Z40X9NG
         MVC   IOSABN(FOUR),DEBXCEA     SET ABNORMAL END       @Z40X9NG
*                                       APPENDAGE ADDR         @Z40X9NG
         LA    RJ,LENIOSB+SRBSIZE(,RJ)  POINT TO NEXT IOSB     @Z40X9NG
         BCT   RC,INITIOSB              IF ANOTHER IOSB, GO    @Z40X9NG
*                                       INITIALIZE IT          @Z40X9NG
         LR    RJ,RE                    GET APPENDAGE ADDRESS  @Z40X9NG
         LH    RF,APPLEN-APP(,RJ)       GET LENGTH IN BYTES    @Z40X9NG
*                                       OF APPENDAGE           @Z40X9NG
         LH    RC,APPSIO-APP(,RJ)       GET OFFSET TO DISKSIO  @Z40X9NG
         AR    RC,RJ                    CALCULATE SIO APPENDAGE@Z40X9NG
*                                       ADDRESS                @Z40X9NG
         ST    RC,DEBSIOA               STORE IN DEB FOR IOS.    X01004
         BAL   RC,FIXIT1                FIX APPENDAGE          @Z40X9NG
         LR    RJ,RDEB                  COPY DEB ADDRESS         Y01004
         LR    RE,RDEB                  COPY DEB ADDRESS         Y01004
         SR    RF,RF                    CLEAR FOR INSERT         Y01004
         IC    RF,DEBLNGTH              DOUBLE WORD LENGTH OF DEBY01004
         BAL   RC,FIXIT                 FIX DEB                @Z40X9NG
         B     ENDLOAD                  CONTINUE PROCESSING      Y02027
         EJECT                                                   Y02027
FIXIT    EQU   *                                                 Y01004
         SLL   RF,THREE                 CONVERT DOUBLEWORD       X01004
*                                         LENGTH TO BYTE LENGTH. X01004
FIXIT1   EQU   *                                               @Z40X9NG
         LA    RJ,ZERO(RF,RJ)           BUMP TO END ADDRESS + 1  Y02027
         LR    RF,RE                    SET START ADDRESS        Y02027
         LA    RE,AVTDMECB              ADDRESS OF PGFIX ECB.    X01004
         XC    AVTDMECB(FOUR),AVTDMECB  CLEAR ECB.               X01004
         PGFIX R,A=(1),EA=(15),ECB=(0)  ISSUE PAGE FIX           Y02027
         SPACE 2
         LA    RF,AVTDMECB              ADDRESS OF FIX ECB       Y02027
         WAIT  ECB=(RF)                 WAIT FOR PAGE FIX        Y02027
         SPACE 1                                                 Y02027
         TM    AVTDMECB+THREE,FIXERR    CHECK PGFIX RETURN CODE. X01004
         BNZ   WTGSETUP                 EXIT ON ERROR.           X01004
         BR    RC                       RETURN TO CALLER         Y01004
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE FREEMAINS ALL SECONDARY DSCB'S      *
*              PRIOR TO RETURNING TO SYSTEM OPEN                  *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                              @ZM46687
FREEDSCB EQU   *                                               @ZM46687
         SR    RC,RC                    CLEAR THE DSCB FORMAT  @ZM46687
*                                       LENGTH REGISTER        @ZM46687
         LR    RD,RBASE                 SET A FIRST TIME SWITCH@ZM46687
*                                                              @ZM46687
FIRSTDSB EQU   *                                               @ZM46687
         LR    RUCB,RCORE               SAVE THE ADDRESS OF THE@ZM46687
*                                         CURRENT DSCB         @ZM46687
         LTR   RCORE,RCORE              IS THIS THE LAST DSCB  @ZM46687
*                                         THIS CHAIN           @ZM46687
         L     RCORE,DSCCORE(RC)        LOAD THE ADDRESS OF THE@ZM46687
*                                         NEXT DSCB            @ZM46687
         BZ    ALLFREE                  YES, BRANCH            @ZM46687
*                                                              @ZM46687
NEXTDSCB EQU   *                                               @ZM46687
         SR    RC,RC                    CLEAR THE DSCB FORMAT  @ZM46687
*                                         LENGTH REGISTER      @ZM46687
         LA    RE,FORMAT1L              LOAD THE LEN OF A FORM @ZM46687
*                                         1 DSCB               @ZM46687
         CLI   DSCFMTID,FORMAT1         IS THIS A FORMAT 1 DSCB@ZM46687
         BE    FOMATONE                 YES, BRANCH            @ZM46687
         LA    RE,FORMAT3L              LOAD THE LEN OF A FORM @ZM46687
*                                         3 DSCB               @ZM46687
         LA    RC,FORMAT3X              SET THE FORMAT 3 INDEX @ZM46687
         LTR   RD,RD                    IS THE FIRST TIME SW   @ZM46687
*                                         SET                  @ZM46687
         BNZ   FIRSTDSB                 YES, BRANCH            @ZM46687
*                                                              @ZM46687
FOMATONE EQU   *                                               @ZM46687
         LTR   RCORE,RCORE              DSCB REALLY HERE       @ZM46687
         BZ    ALLFREE                  BRANCH IF NO           @ZM46687
         SR    RD,RD                    CLEAR THE FIRST TIME SW@ZM46687
         LR    RF,RCORE                 COPY THE ADDRESS OF THE@ZM46687
*                                         DSCB TO BE FREED     @ZM46687
         L     RCORE,DSCCORE(RC)        LOAD THE ADDRESS OF THE@ZM46687
*                                         NEXT DSCB            @ZM46687
         FREEMAIN R,LV=(0),A=(1)        FREE THE DSCB          @ZM46687
*                                                              @ZM46687
         LTR   RCORE,RCORE              IS THIS THE LAST DSCB  @ZM46687
*                                         THE CHAIN            @ZM46687
         BNZ   NEXTDSCB                 NO, BRANCH             @ZM46687
         EJECT                                                 @ZM46687
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *@ZM46687
*                                                              @ZM46687
*        THIS SECTION OF CODE ZEROES THE 'NEXT DSCB ADDRESS'   @ZM46687
*        POINTER IN THE LAST DSCB OF THE FIRST VOLUME          @ZM46687
*                                                              @ZM46687
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *@ZM46687
*                                                              @ZM46687
ALLFREE  EQU   *                                               @ZM46687
         L     RJ,FOUR(RWTGC)           LOAD THE ADDRESS OF THE@ZM46687
*                                         FIRST DSCB           @ZM46687
         SR    RF,RF                    CLEAR THE DSCB LENGTH  @ZM46687
         SR    RD,RD                    CLEAR THE FIRST TIME SW@ZM46687
         LR    RCORE,RUCB               COPY THE ADDRESS OF THE@ZM46687
*                                         LAST DSCB            @ZM46687
         CLI   DSCFMTID,FORMAT1         IS THIS A FORMAT 1 DSCB@ZM46687
         BE    FMTONE                   YES, BRANCH            @ZM46687
         LA    RF,FORMAT3X              SET THE FORMAT 3 INDEX @ZM46687
*                                                              @ZM46687
FMTONE   EQU   *                                               @ZM46687
         ST    RD,DSCCORE(RF)           ZERO THE LAST          @ZM46687
*                                         DSCB POINTER         @ZM46687
         TM    DCBOPTCD,CHECKDCB+CKP3705 CHECKPOINT DCB        @ZM46687
         BZ    ENDLOAD                  NO, BRANCH             @ZM46687
         MVC   0(FIVE,RWTGC),CHCKLOAD   MOVE ID AND TTR FOR    @ZM46687
*                                         IGG01941 TO WTG TABLE@ZM46687
         B     ENDLOAD2                 GO TO ROUTINE END      @ZM47816
         EJECT                                                 @ZM46687
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE PERFORMS PROCESSING NECESSARY TO    *
*        XCTL TO THE NEXT LOAD OF DISK OPEN.                      *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                CLUP21
ENDLOAD  EQU   *
         TM    DCBOPTCD,CHECKDCB        IS THIS CHKPOINT DCB   @Z30X8NM
         BZ    ENDLOAD1                 NO, BRANCH               Y02027
         MVC   0(TWO,RWTGC),CHCKLOAD    MOVE ID FOR 1941 TO      Y02027
*                                       WTG TABLE                Y02027
         B     ENDLOAD2                 XCTL TO NEXT LOAD        Y02027
         SPACE 2                                                 Y02027
ENDLOAD1 EQU   *                                                 Y02027
         XC    0(2,RWTGC),0(RWTGC)      CLEAR THE ID OF THE CURRENT
*                                         ENTRY IN THE WHERE-TO-GO
*                                         TABLE TO INDICATE THAT
*                                         TCAM OPENS ARE COMPLETE
         SPACE 2
ENDLOAD2 EQU   *
         L     RCORE,4(RWTGC)           LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
         STC   RTIOT,DEBNMSUB           STORE THE COUNT OF LOADED
*                                         ROUTINES IN THE DEB
*
RELOOP   EQU   *
         LA    RWTGC,8(RWTGC)           INCREMENT POINTER TO NEXT
*                                         ENTRY IN WTG TABLE
         LA    RPARC,4(RPARC)           INCREMENT POINTER TO NEXT
*                                         DCB
         CLC   ZERO(TWO,RWTGC),AMIDCNST IS IGG01934 NEEDED AGAIN Y02027
*
         BE    RESTART                  YES, BRANCH              Y02027
*
         CLC   0(2,RWTGC),OPIDCNST      TEST FOR END OF WTG TABLE
*
         BNE   RELOOP                   BRANCH IF NOT END        S21903
*
         LR    RPARC,RPAR               RESET POINTER TO FIRST OF
*                                         DCB PARAMETER LIST
         LA    RWTGC,32(RWTG)           RESET POINTER TO FIRST OF
*                                         THE WTG TABLE
         EJECT
ZCHEK    EQU   *
         CLI   0(RWTGC),X'00'           IS THIS ENTRY'S ID ZERO
         BNE   XCTLRTN                  IF NOT, TRANSFER CONTROL
*
         LA    RWTGC,8(RWTGC)           PICK UP ADDRESS OF NEXT
*                                         ENTRY IN WTG TABLE
         LA    RPARC,4(RPARC)           BUMP POINTER TO NEXT DCB
         B     ZCHEK                    GO CHECK FOR ZERO ID     S21903
XCTLRTN  EQU   *
         CLC   ZERO(TWO,RWTGC),OPIDCNST IS COMMON OPEN THE       Y02027
*                                       NEXT EXECUTOR            Y02027
         BNE   XCTLRTN1                 NO, BRANCH               Y02027
         SPACE 1
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5          Y02027
         SPACE 1
XCTLRTN1 EQU   *                                                 Y02027
         LA    RJ,DXCCW12               LOAD THE ADDRESS OF THE
*                                         LAST DOUBLE WORD IN THE
*                                         OPEN WORK AREA
         MVC   6(2,RWTG),0(RWTGC)       MOVE EXECUTOR ID TO
*                                         PARAMETER LIST
         XCTL  DE=(RWTG),SF=(E,(15))
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE PERFORMS INITIALIZATION OF THE      *
*        BLDL TYPE LIST INPUT TO THE LOAD SVC. THE ID OF THE      *
*        LOADED MODULE IS PLACED IN THE DEB AND THE DEB COUNT OF  *
*        LOADED SUBROUTINES IS INCREMENTED.                       *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                CLUP21
LOADRTNE EQU   *
         MVC   6(2,RWTG),0(RC)          MOVE ID TO LOAD LIST
         LR    RE,RWTG                  ADDRESS OF THE PARAMETER
*                                         LIST
         L     RF,CVTPTR                CVT ADDRESS
         L     RF,CVTSVDCB              ADDRESS OF DCB FOR
*                                         SVCLIB
         LOAD  EPLOC=(0),DCB=(1)        LOAD MODULE              S21903
*
         MVC   0(2,RUCB),0(RC)          MOVE THE ID OF THE LOADED
*                                         ROUTINE TO THE DEB
         LA    RUCB,2(0,RUCB)           BUMP THE POINTER TO THE NEXT
*                                         ID POSITION IN THE DEB
         LA    RTIOT,1(0,RTIOT)         INCREMENT THE COUNT OF
*                                         LOADED ROUTINES
         BR    RD                       RETURN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE IS USED TO SAVE THE ID OF THE       *
*        CURRENT OPEN EXECUTOR AND TO MOVE THE ID OF THE          *
*        ERROR HANDLER INTO THE WHERE-TO-GO PARAMETER LIST        *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
WTGSETUP EQU   *
         MVI   AVTOPERT,TCAMER23        SET TCAM ERROR INDEX     X01004
         L     RCORE,FOUR(RWTGC)        LOAD THE ADDRESS OF THE
*                                         OPEN WORK AREA
         MVC   AVTOPXCL(TWO),AMIDCNST   MOVE THE ID OF THE CURRENT
*                                         EXECUTOR INTO THE AVT
*                                         FOR THE RETURN TO THIS
*                                         EXECUTOR
         MVC   AVTEZERO(TWO,RWTGC),OPENERP MOVE ID FOR THE     @Z30X8NM
*                                         ERROR HANDLER INTO THE
*                                         WHERE-TO-GO PARAMETER LIST
         B     XCTLRTN1                 BRANCH TO XCTL ROUTINE   Y02027
         EJECT
ONE      EQU   1                        OFFSET OF 1              S22024
TWO      EQU   2                        OFFSET OF 2              S22024
THREE    EQU   3                        OFFSET OF 3              S22024
FOUR     EQU   4                        OFFSET OF 4              S22024
FIVE     EQU   5                        OFFSET OF 5              S22024
SIX      EQU   6                        OFFSET OF 6              S22024
SEVEN    EQU   7                        OFFSET OF 7              S22024
EIGHT    EQU   8                        OFFSET OF 8              S22024
NINE     EQU   9                        OFFSET OF 9              S22024
TWELVE   EQU   12                       OFFSET OF 12             S22024
TCAMER23 EQU   23                       TCAM ERROR NO. 23        S22024
TWENTY   EQU   20                       OFFSET OF 20             X01004
FORMAT3X EQU   44                       FORMAT 3               @ZM46687
FORMAT1L EQU   104                      FORMAT 1               @ZM46687
FORMAT3L EQU   144                      FORMAT 3               @ZM46687
FORMAT1  EQU   C'1'                     FORMAT 1               @ZM46687
CKP3705  EQU   X'10'                    OPTCD=I                @ZM46687
ADDR     EQU   7                        ICM/STCM MASK          @Z40X9NG
DEBIOVR  EQU   X'20'                    EXCPVR IS VALID          Y01004
DEBPTR   EQU   36                       DEB PREFIX LENGTH
REUSQUE  EQU   X'01'                    REUSE QUEUE              S22024
CHECKDCB EQU   X'20'                    CHECK DCB                S22024
ZERO     EQU   0                        LENGTH CONSTANT          X01004
FIXERR   EQU   X'04'                    PGFIX ERROR CODE IN ECB. X01004
FOURK    DC    H'4096'                  PAGE SIZE              @Z30X8NM
CPBTEST  DC    H'1'                     TEST FOR SINGLE CPB SPT
AMIDCNST DC    C'34'                    ID FOR IGG01934
OPIDCNST DC    C'0S'                    ID FOR SYSTEM OPEN
         EJECT
DISPATCH DC    C'RB'                    DISPATCHER               S21903
DTRDISP  DC    C'RO'                    DTRACE DISPATCHER
DISKAPPN DC    C'R2'                    ID FOR DISK END APPENDAGE
COPY     DC    C'RQ'                    POST-PENDING ROUTINE     S21903
CHKPTAPN DC    C'RA'                    CHECKPOINT CHAN END APN  CLUP21
EXCPDRIV DC    C'RC'                    EXCP DRIVER              CLUP21
REUS     DC    C'RP'                    REUS/COPY                CLUP21
CHCKLOAD DC    C'41'                    ID FOR CHECKPOINT MODULE S21903
OPENERP  DC    C'33'                    ID OF THE OPEN ERROR HANDLER
         EJECT                                                 @Z40X9NG
*        OVERLAY FOR START OF DISK END APPENDAGE               @Z40X9NG
         SPACE 1                                               @Z40X9NG
APP      DSECT                                                 @Z40X9NG
APPLEN   DS    H                        LENGTH IN BYTES        @Z40X9NG
APPSIO   DS    H                        OFFSET TO DISKSIO APP  @Z40X9NG
APPNAME  DS    CL8                      NAME OF APPENDAGE      @Z40X9NG
APPHJN   DS    CL2                      HJN                    @Z40X9NG
APPSTART DS    H                        START OF CHE AND ABE   @Z40X9NG
         SPACE 4                                               @Z40X9NG
         TIOSBED                                               @OZ26164
         EJECT                                                 @Z40X9NG
*        IOSB DSECT                                            @Z40X9NG
         SPACE 1                                               @Z40X9NG
         IECDIOSB                                              @Z40X9NG
         SPACE 4                                               @Z40X9NG
LENIOSB  EQU   IOSEND-IOSB              LENGTH OF IOSB         @Z40X9NG
         EJECT                                                 @Z40X9NG
*        SERVICE REQUEST BLOCK DSECT                           @Z40X9NG
         SPACE 1                                               @Z40X9NG
         IHASRB                                                @Z40X9NG
         EJECT
         TTCXD
         EJECT
         TDEBD
         EJECT
FORCORE  DSECT
         IECDSECT
         EJECT
         TAVTD
         EJECT
CVT      DSECT
         CVT
         EJECT
         DCBD DSORG=TQ
         END
