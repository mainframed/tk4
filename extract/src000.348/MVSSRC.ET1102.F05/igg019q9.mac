         TITLE 'IGG019Q9 -- CONCENTRATOR SEND SCHEDULER'
IGG019Q9 CSECT
*A-000000-999999                                               @X31X8I0
         SPACE 3
*CHANGE-ACTIVITY = AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A178810-178950                                                 SA58993
*D484000-486000,A484000-486100                                  SA56606
*A601030-601810                                                  Y05331
*A002000,624000                                                @Z30X8IM
*C005000,194000,287000,298000,405000,452000                    @Z30X8IM
*D195000-196000,288000-289000,299000-300000,406000-407000      @Z30X8IM
*D453000-454000                                                @Z30X8IM
***********************************************************************
*                                                                     *
*  MODULE NAME = IGG019Q9
*
*  DECSRIPTIVE NAME = CONCENSTRATOR SEND SCHEDULER
*
*        COPYRIGHT='NONE'
*
* STATUS -- CHANGE LEVEL 8                                     @Z30X8IM
*                                                                     *
* FUNCTION -- TO SCHEDULE A SENDING OPERATION AND TO EFFECT READING   *
*    FROM MULTIPLE QCBS FOR CONCENTRATOR OUTPUT.                      *
*                                                                     *
* ENTRY POINTS --                                                     *
*         FIRST EXECUTALBE INSTRUCTION                                *
*         'DESTENT' WHEN BRANCHED TO BY DESTINATION ASSIGNMENT        *
*                                                                     *
* INPUT --                                                            *
*    WHEN ACTIVATED BY THE DISPATCHER -                               *
*    R1 POINTS TO A BUFFER, LCB OR ERB                                *
*    R3 ADDRESS OF STCB                                               *
*    R7 ADDRESS OF QCB                                                *
*    R11 DISPATCHER BASE                                              *
*    R13 ADDRESS OF AVTSAVE2                                          *
*    R15 ENTRY POINT ADDRESS                                          *
*                                                                     *
*    'DESTENT' -                                                      *
*    R7 ADDRESS OF QCB                                                *
*    R13 ADDRESS OF AVTSAVE2                                          *
*    R14 RETURN ADDRESS                                               *
*    R15 ENTRY POINT ADDRESS                                          *
*                                                                     *
* OUTPUT --                                                           *
*    R1 POINTS TO A BUFFER, LCB OR ERB                                *
*    R3 ADDRESS OF STCB                                               *
*    R11 DISPATCHER BASE                                              *
*    R13 ADDRESS OF AVTSAVE2                                          *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         DSPPOSTR                                                    *
*         DSPUNAVR                                                    *
*         DSPPRIOR                                                    *
*                                                                     *
* EXITS,NORMAL --                                                     *
*         DSPDISP                                                     *
*         DSPBYPAS                                                    *
*         DSPPOST                                                     *
*         BR 14 RETURN TO DESTINATION ASSIGMENT                       *
*                                                                     *
* EXITS,ERROR --                                                      *
*         NONE                                                        *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    AVT                                                              *
*    LCB                                                              *
*    QCB                                                              *
*    QCBE                                                             *
*    SCB                                                              *
*    DCB                                                              *
*    DEB                                                              *
*    TERMINAL ENTRY                                                   *
*    DRQ                                                              *
*                                                                     *
* ATTRIBUTES --                                                       *
*    RE-ENTRANT, REFRESHABLE, PROBLEM PROGRAM MODE                    *
*                                                                     *
* CHARACTER CODE DEPENDENCY --
*    THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A PARTICULAR   *
*    INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.           *
*                                                                     *
* NOTES --                                                            *
*    STANDARD TCAM LINKAGES AND DEVIATIONS FROM STANDARDS.            *
*    THE ADDRESS OF THE SCHEDULER IS STORED BY OPEN IN THE AVT.       *
*    DESTINATION ASSIGNMENT EXPECTS THE OFFSET TO 'DESTENT' TO BE     *
*    THE FIRST TWO BYTES OF THIS MODULE.                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        SYMBOLIC REGISTERS                                           *
***********************************************************************
         SPACE 1
RZERO    EQU   0                         WORK REGISTER
RPARM    EQU   1                         PARAMETER REGISTER
RWORKA   EQU   2                        WORK REG
RQCBE    EQU   3                        QCBE REG
RSTCB    EQU   3                         STCB
RLCB     EQU   4                         LCB
RWORKB   EQU   5                        WORK REG
RPQCB    EQU   5                         PPIORTY LEVEL QCB
RDRQ     EQU   6                         DRQ
RQCB     EQU   7                         QCB
RWORKC   EQU   8                        WORK REG
RTERM    EQU   8                         TERMINAL ENTRY
RSCB     EQU   9                         SCB
RDCB     EQU   10                        DCB
RDISP    EQU   11                        DISPATCHER BASE
RBASE    EQU   12                        CSECT BASE
RAVT     EQU   13                        AVT BASE
RRETURN  EQU   14                        RETURN REGISTER
RENTRY   EQU   15                        ENTRY POINT ADDRESS
         SPACE 1
***********************************************************************
*        ESTABLISH CSECT AND CONTROL BLOCK ADDRESSABILITY             *
***********************************************************************
         SPACE 2
         USING IEDQDISP,RDISP           DISP
         USING AVTSAVE2,RAVT            AVT
         USING IEDQQCB,RQCB             QCB
         USING IEDQSCB,RSCB             SCB
         USING IEDQLCB,RLCB             LCB
         USING IEDQTRM,RTERM            TERMINAL ENTRY
         USING IHADCB,RDCB              DCB
         USING IEDQSTCB,RSTCB           STCB
         USING IEDQDRQ,RDRQ             DRQ
         SPACE 2
         DC    AL2(DESTENT-IGG019Q9)     OFFSET TO DESTENT
         SPACE 2
         USING *,RENTRY
         B     SETBASE                  BRANCH/DUMMY QCB
         DC    H'0'                     FILLER
         DC    AL1(DSPMCPL6)            STCB
         DC    AL3(*-1)                 STCB ADDR
         DC    H'0'                     FILLER
SETBASE  BALR  RBASE,0                  SET BASE REG
         DROP  RENTRY
         USING *,RBASE
         LR    RLCB,RPARM               ASSUME LCB
         CLI   LCBRSKEY-IEDQLCB(RPARM),RSVTO
*                                       ELEMENT A LCB
         BE    SETREGS                  BRANCH IF YES
         TM    PRFTIC-IEDQPRF(RPARM),CCWTIC
*                                       ELEMENT A BUFFER
         BZ    SETERB                   BRANCH IF NO
         SPACE 1
**********************************************************************
*        ELEMENT IS A BUFFER                                          *
**********************************************************************
         SPACE 1
         L     RSTCB,QCBSLINK-1          ADDRESS OF DEST SCH STCB
         B     DSPBYPAS                  ACTIVATE DEST SCH
         DC    CL8'IGG019Q9'            MODULE ID
         IEDHJN
SETERB   EQU   *
         LA    RWORKA,LCBERB-IEDQLCB    ERB OFFSET INTO LCB
         SR    RLCB,RWORKA              COMPUTE LCB
SETREGS  EQU   *
         L     RSCB,LCBSCBA-1           SCB
         L     RDCB,LCBDCBPT            DCB
         L     RDRQ,LCBSTCBA-1          STCB ADDR
         LA    RWORKA,DRQSTVTO-IEDQDRQ  STCB OFFSET IN DRQ
         SR    RDRQ,RWORKA              OF DRQ
         CLI   LCBRSKEY-IEDQLCB(RPARM),RSVTO
*                                       ELEMENT A LCB
         BE    LCB                      BRANCH IF YES
         SPACE 1
***********************************************************************
*        ELEMENT IS AN ERB                                            *
***********************************************************************
         SPACE 1
         NI    LCBERBST,255-LCBDLNKN    MARK ERB UNAVAILABLE
         L     RWORKC,LCBSCBDA-1        LINE SCB ADDR
         TM    SCBSTAT1-IEDQSCB(RWORKC),SCBCEND
*                                       CONC END OF MSG
         BO    RELERB                   BRANCH IF YES
         L     RQCB,SCBDESTQ-1          QCB ADDR
         LH    RQCBE,QCBEXTO            EXTENSION OFFSET
         AR    RQCBE,RQCB               QCBE
         USING IEDQQCBE,RQCBE
         L     RDRQ,QCBECONC-1          CONC TERM ENTRY
         L     RDRQ,TRMDESTQ-1-IEDQTRM(RDRQ)
*                                       DRQ ADDR
         TM    LCBSTAT1,LCBRCLLN        ERB FROM RECALL
         BNO   GETNXTQ                  BRANCH IF NO
         NI    DRQFLAG3,AVTEFF-DRQERBAV MARK ERB AVAILABLE FOR  SA56908
*                                       PCI                     SA56908
         NI    LCBSTAT1,255-LCBRCLLN    RESET RECALL
         L     RPARM,LCBERBCH-1         RECALLED BUFFER ADDR
         TM    LCBERBST,LCBERROR        LINE ERROR
         BZ    CHKEOB                   BRANCH IF NO
         LA    RWORKA,AVTBFRTB          BUFFER RET QUEUE
         ST    RWORKA,PRFQCBA-1-IEDQPRF(RPARM)
*                                       SET QCB ADDR
         LA    RWORKA,LCBERB            ERB ADDR
         ST    RWORKA,PRFLINK-1-IEDQPRF(RPARM)
*                                       LINK ERB TO BUFFER
         MVI   PRFPRI-IEDQPRF(RPARM),PRIBFRTB
*                                       SET BUFFER PRIORITY
         L     RWORKA,LCBRCQCB          RETURN QCB ADDR
         ST    RWORKA,LCBERB            SET QCB ADDR
         XC    LCBERBLK,LCBERBLK        ZERO LINK FIELD
         MVI   LCBERBPY,PRIDSPLB-1      SET ERROR PRIORITY
         B     DSPCHAIN                 POST ERB AND BUFFER
CHKEOB   EQU   *
         LTR   RPARM,RPARM              IS THERE A BUFFER       SA58993
         BNZ   NORDERR                  YES,CONT PROCESSING     SA58993
         SPACE 1
**********************************************************************
*                                                                    *
* IF NO BUFFER HAS BEEN RETURNED, ISSUE 045-3 ABEND AS IEDQFA WOULD  *
*  HAVE DONE HAD LCBRCLLN NOT BEEN SET                               *
*                                                                    *
**********************************************************************
         SPACE 1
         LA    RENTRY,ABCODE3           SET ABEND CODE IN RG 15 SA58993
         BAL   RRETURN,AVTABEND         BRANCH TO ABEND IN AVT  SA58993
ABCODE3  EQU   X'03'                    ABEND CODE              SA58993
         SPACE 3
NORDERR  EQU   *
         NC    SCBEOB,SCBEOB            BUFFER BEEN USED
         BZ    NOCNCL                   BRANCH IF NO
         OI    PRFSTAT1-IEDQPRF(RPARM),PRFCNCLN
*                                       SET CANCEL MSG
NOCNCL   EQU   *
         MVC   LCBISZE,PRFSCAN+1-IEDQPRF(RPARM)
*                                       SET IDLE COUNT
         LH    RWORKB,PRFSIZE-IEDQPRF(RPARM)
*                                       GET DATA AMOUNT
         SH    RWORKB,SCBEOB            REMAINING DATA
         LTR   RWORKB,RWORKB            CAN AMOUNT BE CALCULATED
         BP    AMTVALID                 BRANCH IF YES
         SR    RWORKB,RWORKB            ZERO REG
AMTVALID EQU   *
         LA    RWORKA,AVTINOUT          INMSG/OUTMSG DELIMITER
         STCM  RWORKA,ADR,SCBMACR       RESET MACRO ADDRESS    @Z30X8IM
         NI    SCBHBFNO,CLRQPTR         RESET QTYPE FROM WHERE
*                                       IEDQBD SAVES IT
         MVC   SCBUNTCT,SCBDEOB
         MVC   SCBDEOB,SCBCPBNO-IEDQSCB(RWORKC)
*                                       RESTORE AFTER RECALL
         LA    RZERO,ONE                SET REG TO ONE
         LA    RWORKA,AVTACTIB          ACTIVATE QCB ADDR
         MVI   LCBERBPY,PRIINTRQ        SET INITIAL PRTY
         TM    LCBERBST,LCBEOMSG        EOM IN RECALLED BUFFER
         BO    CHKCBGN                  BRANCH IF YES
         LNR   RWORKB,RWORKB            SET REG NEG
         AH    RWORKB,SCBCTBSZ          SET REMAINING SIZE
         BC    3,BLDERB                 BRANCH IF MORE THAN ONE BUF
*                                       NEEDED TO FILL CTB
CHKCBGN  EQU   *
         OI    LCBERBST,LCBDLNKN        RELEASE ERB
         TM    SCBSTAT1-IEDQSCB(RWORKC),SCBCBGN
*                                       CONC MSG BEGIN
         BO    SETEDATA                 BRANCH IF YES
         XC    LCBERBCH,LCBERBCH        CLEAR BUFFER ADDR
         MVC   PRFQCBA-IEDQPRF(THREE,RPARM),DCBMH
*                                       SET POST QCB
         MVI   PRFPRI-IEDQPRF(RPARM),PRIMHBFR
*                                       POST PRTY
         B     DSPPOST                  POST BUFFER TO MH
         SPACE 1
***********************************************************************
*        ELEMENT IS A LCB                                             *
***********************************************************************
         SPACE 1
LCB      EQU   *
         TM    LCBSTAT1,LCBOCNI         STOPLINE
         BO    STOPLINE                 BRANCH IF YES
         TM    AVTBIT1,AVTCLOSN+AVTQUCKN
*                                       QUICK CLOSE
         BO    NOSEND                   BRANCH IF YES
         TM    DRQSTAT,DRQTRMHO         CONC HELD
         BO    RMVDRQST                 BRANCH IF YES
         SR    RZERO,RZERO              INDICATE DRQ STCB SHOULD
*                                       BE REMOVED IF NO STCBS
*                                       IN DRQ CHAIN
         LR    RWORKA,RDRQ              DRQ ADDR
         SH    RWORKA,AVTHA4            SUB FOUR
DRQLPA   EQU   *
         L     RWORKA,FOUR(RWORKA)      FIRST/NEXT STCB
         CLI   FOUR(RWORKA),ZERO        LAST ELEMENT
         BE    DRQLPAND                 BRANCH IF YES
         LR    RQCB,RWORKA              STCB ADDR
         LA    RZERO,QCBSTVTO-IEDQQCB   STCB OFFSET INTO QCB
         SR    RQCB,RZERO               QCB ADDR
         LH    RQCBE,QCBEXTO            QCB EXTENSION OFFSET
         AR    RQCBE,RQCB               QCBE ADDR
         USING IEDQQCBE,RQCBE
         NI    QCBEFLG,255-QCBESRVC     RESET SERVICED
         TM    QCBEFLG,QCBEOPL          PROIRITY QUEUEING
         BNO   DRQLPA                   BRANCH IF NO
         SR    RWORKC,RWORKC            ZERO REG
         IC    RWORKC,QCBENPLV          NUMBER OF PRTY LEVLES
QCBELPA  EQU   *
         SR    RWORKB,RWORKB            ZERO REG
         IC    RWORKB,QCBELGTH          QCBE ENTRY LENGTH
         AR    RQCBE,RWORKB             NEXT ENTRY
         NI    QCBEFLG,255-QCBESRVC     RESET SERVICED
         BCT   RWORKC,QCBELPA           LAST LEVEL
         B     DRQLPA                   BRANCH IF YES
DRQLPAND EQU   *
         LTR   RZERO,RZERO              ANY STCBS
         BZ    RMVDRQST                 BRANCH IF NO
         L     RSCB,LCBSCBDA-1          LINE SCB ADDRESS
         MVI   SCBSTAT1,SCBCBGN         SET CONC MSG BEGIN
         MVI   LCBSTAT1,LCBSENDN        SET SENDING
         XC    LCBRECAD,LCBRECAD        ZERO FIELDS
         XC    LCBRECOF,LCBRECOF
         MVI   DRQBUFCT,ZERO            CLEAR BUFCT
         MVN   DRQBUFCT,DCBBUFOU        SET BUFOUT
         OI    DRQFLAG3,DRQFSPCI        SET FIRST PCI
CLRCURQ  EQU   *
         XC    DRQCURQ,DRQCURQ          CLEAR CURRENT QCB POINTER
GETNXTQ  EQU   *
         L     RQCB,DRQCURQ-1           GET CURRENT QCB
         LA    RQCB,ZERO(RQCB)          CLEAR HI-ORDER BYTE
         LTR   RQCB,RQCB                CURRENT QCB
         BNZ   DRQLPBND                 BRANCH IF YES
         LA    RZERO,QCBSTVTO-IEDQQCB  STCB OFFSET INTO QCB
         LR    RWORKA,RDRQ              DRQ ADDR
         SH    RWORKA,AVTHA4            SUB FOUR
DRQLPB   EQU   *
         L     RQCB,FOUR(RWORKA)        FIRST/NEXT STCB
         CLI   FOUR(RQCB),ZERO          ANY STCBS
         BE    RMVDRQST                 BRANCH IF NO
         STCM  RWORKA,ADR,DRQPRVLK      SAVE PREV LINK FIELD   @Z30X8IM
         LR    RWORKA,RQCB              UPDATE LOOP REG
         SR    RQCB,RZERO               QCB ADDR
DRQLPBND EQU   *
         LH    RQCBE,QCBEXTO            QCB EXTENSION OFFSET
         AR    RQCBE,RQCB               QCBE ADDR
         TM    QCBEFLG,QCBESRVC+QCBEHELD
*                                       SERVICED OR TEMP HOLD
         BNZ   DRQLPB                   BRANCH IF EITHER
         STCM  RQCB,ADR,DRQCURQ         UPDATE CURRENT QUEUE   @Z30X8IM
         SR    RWORKA,RWORKA            ZERO REG
         SR    RSCB,RSCB                ZERO REG
         IC    RSCB,QCBSCBOF            QCB OFFSET TO SCB
         IC    RWORKA,AVTSCBSZ          SIZE OF SCB
         MR    RSCB-1,RWORKA            COMPUTE DISP OF SCB
         AL    RSCB,LCBSCBDA-ONE        COMPUTE SCB ADDRESS
         LH    RWORKB,SCBCTBSZ          SET REG
         LR    RPARM,RQCBE              SET REG TO QCBE
         TM    SCBQTYPE,SCBBFMM         MIDDLE OF MSG
         BNO   INITIAL                  BRANCH IF NO
         MVI   LCBERBPY,PRISBPCI        SET NOT INITIAL PRTY
         TM    QCBEFLG,QCBEOPL          PRTY QUEUEING
         BZ    NOTPRTYQ                 BRANCH IF NO
         IC    RWORKA,SCBPRI            PRTY QUE INDEX
         BAL   RRETURN,FINDQCBE         GET CORRECT QCBE
NOTPRTYQ EQU   *
         MVC   LCBTTCIN,QCBETCIN-IEDQQCBE(RPARM)
*                                       SET TTCIN
         MVC   LCBTTBIN,LCBTTCIN        SET TTBIN FOR KA
         NC    SCBDEOB,SCBDEOB          EMBEDDED RS
         BZ    BUILDERB                 BRANCH IF NO
         TM    SCBQTYPE,SCBCOREQ        CORE QUEUEING
         BO    COREONLY                 BRANCH IF YES
         TM    SCBSTAT1,PRFNLSTN        EOM BUFFER
         BO    NOTLAST                  BRANCH IF NO
         CLC   SCBDEOB+1(THREE),SCBCRCD SENDING LAST SEG
         BNL   COREONLY                                         SA60792
         NC    SCBXTRA(THREE),SCBXTRA                           SA60792
         BZ    RSET                                             SA60792
         CLC   SCBDEOB+ONE(THREE),SCBXTRA                       SA60792
         BNL   COREONLY                                         SA60792
RSET     EQU   *                                                SA60792
         OI    SCBSTAT1,PRFNLSTN        SET NOT LAST
NOTLAST  EQU   *
         XC    SCBXTRA,SCBXTRA          CLEAR FOR RECALL
         XC    SCBNTXT,SCBNTXT          CLEAR FOR RECALL
COREONLY EQU   *
         MVZ   SCBHBFNO,SCBQTYPE        SET QTYPE FLGS FOR FA   SA52971
         L     RWORKC,LCBSCBDA-1        LINE SCB ADDR
         MVC   SCBCPBNO-IEDQSCB(FOUR,RWORKC),SCBDEOB
*                                       SAVE OVER RECALL
         OI    LCBSTAT1,LCBRCLLN        SET RECALL BIT
         OI    DRQFLAG3,DRQERBAV        MARK ERB NOT AVAILABLE  SA56908
*                                       FOR PCI                 SA56908
         L     RWORKA,AVTCSCH           CONC SCH ADDR
         SH    RWORKA,AVTHA2            SUB TWO
         ST    RWORKA,LCBRCQCB          SET RETURN ADDR
         LA    RZERO,ONE                SET REG
         B     SETQCBAD                 GO POST THE ERB TO RECALL
INITIAL  EQU   *
         MVI   LCBERBPY,PRIINTRQ        INITIAL REQUEST PRI
         TM    QCBDSFLG,QCBHELD         REUSABILITY RUNNING
         BO    RMVSTCB                  BRANCH IF YES
         TM    QCBSTAT,QCBTRMHO         TERMINAL HELD
         BO    RMVSTCB                  BRANCH IF YES
         NC    SCBCTBSZ,SCBCTBSZ        CTBSZ ZERO
         BNZ   CTBSZOK                  BRANCH IF NO
         MVC   SCBCTBSZ,QCBEDAMT        SET DATA AMOUNT
CTBSZOK  EQU   *
         SR    RRETURN,RRETURN          INDICATE STCB SHOULD BE
*                                       REMOVED IF NO DATA
PQCBLP   EQU   *
         LA    RWORKA,ONE               SET REG TO ONE
         LNR   RWORKA,RWORKA            SET NEG
         LA    RPQCB,QCBMSIZE-QCBPSIZE(RQCB)
*                                       SET REG INITIALLY
         USING IEDQPQCB,RPQCB
NXTPQCB  EQU   *
         LA    RPQCB,QCBPSIZE(RPQCB)    FIRST/NEXT PQCB
         LA    RWORKA,ONE(RWORKA)       SET REG TO PQCB INDEX
         TM    QCBEFLG,QCBEOPL          LEVEL QUEUEING
         BZ    CHKFEFO                  BRANCH IF NO
         LTR   RRETURN,RRETURN          PREVIOUS LEVEL SERVICED OR HELD
         BNZ   CHKFEFO                  BRANCH IF YES
         BAL   RRETURN,FINDQCBE         GET CORRECT QCBE
         TM    QCBEFLG-IEDQQCBE(RPARM),QCBEHELD+QCBESRVC
*                                       LEVEL SERVICED OR HELD
         BNZ   CHKLAST                  BRANCH IF YES
         SR    RRETURN,RRETURN          ZERO FLAG REG
CHKFEFO  EQU   *
         NC    QCBFFEFO,QCBFFEFO        UNSENT MESSAGE
         BZ    CHKLAST                  BRANCH IF NO
         TM    QCBEFLG,QCBEOPL          LEVEL QUEUEING
         BNO   BUILDSCB                 BRANCH IF NO
         BAL   RRETURN,FINDQCBE         GET CORRECT QCBE
         TM    QCBEFLG-IEDQQCBE(RPARM),QCBESRVC+QCBEHELD
*                                       LEVEL SERVICED OR HELD
         BNZ   CHKLAST                  BRANCH IF EITHER
         OI    QCBEFLG-IEDQQCBE(RPARM),QCBEDATA
*                                       SET DATA IN MSG
         B     BUILDSCB                 BRANCH
CHKLAST  EQU   *
         CLI   QCBPRIPQ,ZERO            LAST PRTY LEVEL
         BNE   NXTPQCB                  BRANCH IF NO
         LA    RWORKA,QCBSTVTO-IEDQQCB(RQCB)
*                                       SET RWORKA
         XC    DRQCURQ,DRQCURQ          CLEAR CURRENT QUEUE
         LA    RZERO,QCBSTVTO-IEDQQCB   SET REG
         LTR   RRETURN,RRETURN          REMOVE STCB FROM DRQ
         BNZ   DRQLPB                   BRANCH IF NO
RMVSTCB  EQU   *
         L     RWORKA,DRQPRVLK-1        GET PREVIOUS LINK FIELD
         MVC   FIVE(THREE,RWORKA),QCBSLINK
*                                       DE-LINK STCB FROM DRQ
         MVC   QCBSLINK,QCBSTCHN        MOVE DEST SCH TO LAST
         LA    RWORKA,QCBSTVTO          ADDR OF CONC STCB
         ST    RWORKA,QCBSTCHN-1        STORE IN QCB
         MVI   QCBSTVTO,CSVTO           RESTORE CONC SCH VTO
         NI    QCBEFLG-IEDQQCBE(RPARM),255-QCBEHELD
*                                       RESET TEMPORARY HOLD
         B     CLRCURQ                  GET NEXT STCB
BUILDSCB EQU   *
         OI    QCBFLAG,QCBSDFFO         SET FIRST FFEFO
         MVI   LCBTTCIN+ONE,ONE                                 SA60792
         MVC   SCBSCHDR,QCBFFEFO        MOVE REL REC NO
         MVC   SCBSCSEG,QCBFFEFO        MOVE REL REC NO
         STC   RWORKA,SCBPRI            PRTY LEVEL
         XC    SCBFEFO(THREE),SCBFEFO   ZERO FIELD
         NI    SCBQTYPE,255-SCBNREUS-SCBREUS-SCBCOREQ-SCBNORCL
*                                       RESET QTYPE
         LA    RZERO,AVTINOUT           ADDR OF 0100
         ST    RZERO,SCBMACR-1          SET SCBMACR
         STCM  RQCB,ADR,SCBDESTQ        QCB ADDRESS            @Z30X8IM
         LH    RWORKB,SCBCTBSZ          SET REG
BUILDERB EQU   *
         SR    RZERO,RZERO              ZERO REG
         IC    RZERO,DRQBUFCT           GET BUFFER COUNT
         LTR   RZERO,RZERO              BUFFER COUNT ZERO
         BNZ   BUFCTSET                 BRANCH IF NO
         LA    RZERO,ONE                SET TO ONE
BUFCTSET EQU   *
         TM    QCBEFLG,QCBECNT          QCNTRL EQUAL SIZE
         BNO   SETQCBAD                 BRANCH IF NO
         SR    RZERO,RZERO              ZERO REG
BLDERB   EQU   *
         L     RTERM,QCBECONC-1         CONC TERM ADDR
         LA    RWORKA,DCBBUFSI          DCB BUF SIZE
         TM    TRMDEVFL,X'80'           BUF SZ SPECIFIED
         BNO   GETBUFSZ                 BRANCH IF NO
         LA    RWORKA,TRMOPNO+1         LOC OF BUF SZ IF NO OPT
         TM    TRMSTATE,TRMOPTFN        OPT FIELDS
         BNO   GETBUFSZ                 BRANCH IF NO
         SR    RWORKA,RWORKA            ZERO REG
         IC    RWORKA,TRMOPNO           NO OF OPT FIELDS
         LA    RWORKA,TRMOPT+1(RWORKA)  LOC OF BUF SIZE
GETBUFSZ EQU   *
         SR    RPARM,RPARM              ZERO REG
         IC    RPARM,ZERO(RWORKA)       FIRST BYTE
         SLL   RPARM,EIGHT              SHIFT
         IC    RPARM,ONE(RWORKA)        SECOND BYTE
         SR    RWORKA,RWORKA            ZERO REG
         IC    RWORKA,DCBRESER          HDR RESERVE CHARS
         LA    RWORKA,AVTHDRSZ(RWORKA)  AVAIL BUF SIZE
         TM    SCBQTYPE,SCBBFMM         MID-MESSAGE
         BNO   USEHDR                   BRANCH IF NO
BUFCTLP  EQU   *
         LA    RWORKA,AVTTXTSZ          AVAIL BUFF SIZE
USEHDR   EQU   *
         LNR   RWORKA,RWORKA            SET REG NEG
         AR    RWORKA,RPARM             DATA AMOUNT
         AH    RZERO,HALFONE            COUNT BUFFER
         SR    RWORKB,RWORKA            SUB DATA AMOUNT
         BP    BUFCTLP                  BRANCH IF NOT ENOUGH BUFFERS
SETQCBAD EQU   *
         LA    RWORKA,AVTDSIOB          DISK I/O QCB ADDR
SETEDATA EQU   *
         OI    QCBEFLG,QCBEDATA         SET DATA IN MSG
         OI    SCBQTYPE,SCBBFMM         SET MID-MESSAGE
SETERBCT EQU   *
         STC   RZERO,DRQERBCT           SAVE ERB COUNT
         CLC   DRQBUFCT,DRQERBCT        BUF COUNT EQUAL OR HIGH
         BNL   BUFCTOK                  BRANCH IF YES
         MVC   DRQBUFCT,DRQERBCT        SET BUFFER COUNT
BUFCTOK  EQU   *
         NC    LCBERBCH,LCBERBCH        RECALLED BUFFER THERE
         BZ    ERBCTOK                  BRANCH IF NO
         BCTR  RZERO,ZERO               SUBTRACT ONE
ERBCTOK  EQU   *
         STC   RZERO,LCBERBCT           SET ERB COUNT
         MVI   LCBERBCT+1,ZERO          ZERO DISABLED COUNT
         STCM  RSCB,ADR,LCBSCBA         STORE ADDR OF CURR SCB @Z30X8IM
         NI    LCBERBST,255-LCBEOMSG    RESET EOM READ
POSTERB  EQU   *
         ST    RWORKA,LCBERB            QCB ADDR IN ERB
         XC    LCBERBLK,LCBERBLK        ZERO LINK
         LA    RPARM,LCBERB             ERB ADDR
         B     DSPPOST                  POST
RMVDRQST EQU   *
         L     RSCB,LCBSCBDA-1          LINE SCB ADDR
         SR    RWORKB,RWORKB            CLEAR REG
         IC    RWORKB,AVTCSCH           IEDQGH OFFSET INTO VCON TAB
         L     RWORKA,AVTMSGS-1         VCON TAB ADDR
         L     RWORKA,ZERO(RWORKB,RWORKA)
*                                       IEDQGH ADDRESS
         CR    RPARM,RLCB               ELEMENT A LCB
         BE    RMVST                    BRANCH IF YES
         TM    SCBSTAT1,SCBCBGN         CONC MSG BEGIN
         BZ    POSTERB                  BRANCH IF NO
RMVST    EQU   *
         LR    RQCB,RLCB                SET REGS
         LR    RSTCB,RDRQ               FOR UNAVR
         ST    RLCB,LCBQCBA-1           SET QCB ADDR
         XC    LCBLINK,LCBLINK          ZERO LINK FIELD
         NI    LCBSTAT1,LCBOCNI         RESET ALL EXCEPT STOPLINE
         OI    LCBSTAT1,LCBRECVN        SET LINE RECVN
         MVC   LCBSCBA,LCBSCBDA         RESET SCB ADDR
         BAL   RRETURN,DSPUNAVR         MOVE CONC STCB FROM LCB TO DRQ
         LR    RPARM,RLCB               SET REG
         B     DSPPOST                  POST LCB TO LCB
STOPLINE EQU   *
         L     RSTCB,STCBLINK-1-IEDQSTCB(RSTCB)  NEXT STCB      SA56606
         LR    RPARM,RLCB               ELEMENT ADDR            SA56606
         LR    RQCB,RLCB                QCB ADDR                SA56606
         B     DSPBYPAS                 EXIT-NEXT STCB          SA56606
NOSEND   EQU   *
         MVI   LCBSTAT1,LCBFREEN        SET LCB FREE
         LA    RPARM,AVTOPCOB+FOUR      OP CNTRL ECB
         POST  (1)                      POST OPCTL
RELERB   EQU   *
         OI    LCBERBST,LCBEOMSG+LCBDLNKN
*                                       RELEASE ERB
         B     DSPDISP                  RETURN
         SPACE 1
***********************************************************************
*        ROUTINE TO FIND CORRECT QCBE FOR LEVEL QUEUEING              *
*        INPUT     RWORKA - INDEX TO PRIORTY QUEUE                    *
*        WORK      RWORKC RZERO                                       *
*        OUTPUT    RPARM - CORRECT QCBE                               *
***********************************************************************
         SPACE 1
FINDQCBE EQU   *
         SR    RPARM,RPARM              ZERO REG
         SR    RWORKC,RWORKC            ZERO REG
         IC    RWORKC,QCBELGTH          EXTENSION LENGTH
         AR    RWORKC,RQCBE             NEXT ENTRY
         IC    RPARM,QCBELGTH-IEDQQCBE(RWORKC)
*                                       NEXT ENTRY LENGTH
         MR    RPARM-1,RWORKA           COMPUTE QCBE ADDR
         AR    RPARM,RWORKC             QCBE ADDR
         BR    RRETURN                  RETURN
         EJECT
***********************************************************************
*        THIS LOGIC IS ACTIVATED BY THE DESTINATION SCHEDULER         *
*        WHEN A EOM BUFFER IS POSTED TO A DESTINATION QCB             *
***********************************************************************
         SPACE 1
DESTENT  EQU   *
         USING *,RENTRY                  ESTABLISH ADDRESSIBILITY
         L     RDCB,QCBDCBAD-1           DCB
         TM    DCBOFLGS,OPEN             DCB OPEN
         BCR   8,RRETURN                 BRANCH IF NO
         L     RPARM,DCBDEBAD            DEB
         TM    DEBOPATB-DEBNMSUB(RPARM),OUTPUT
*                                        OPEN FOR OUTPUT
         BCR   8,RRETURN                 BRANCH IF NO
         SR    RWORKA,RWORKA            ZERO REG
         IC    RWORKA,DEBNMEXT-DEBNMSUB(RPARM)
*                                        NUMBER OF LCBS
         SR    RPARM,RPARM               ZERO REG
         IC    RPARM,QCBRELLN            QCB STARTING RLN
         LR    RLCB,RPARM                SAVE RLN
         BCTR  RLCB,RZERO                SUB  1
         SR    RWORKA,RLCB              COUNT OF LCBS TO SCAN
         BCR   13,RRETURN                BRANCH IF RLN < DRBNMEXT
         SR    RWORKA,RWORKA            ZERO REG
         IC    RWORKA,DCBEIOBX          LCB SIZE
         MR    RPARM-1,RWORKA           STARTING LCB OFFSET
         AL    RPARM,DCBIOBAD            POINT TO 1OB
         LA    RWORKA,LCBFLAG1-IEDQLCB  IOB OFFSET
         SR    RPARM,RWORKA             ADJUST TO START OF LCB
         LR    RLCB,RPARM                LCB
         LR    RZERO,RRETURN            SAVE RRETURN
         SPACE 1
***********************************************************************
*        WHEN ENTERED WITH THE DRQ A CONCENTRATOR OR A QACTION        *
*        RELEASE WAS DONE                                             *
***********************************************************************
         SPACE 1
         LR    RWORKA,RQCB              SAVE DRQ REG
         TM    QCBDSFLG,QCBDRQQ         DRQ
         BO    RELDRQ                   BRANCH IF YES
         SPACE 1
***********************************************************************
*        LOCATE DATA READY Q                                          *
***********************************************************************
         SPACE 1
         LH    RQCBE,QCBEXTO            EXTENSION OFFSET
         AR    RQCBE,RQCB               QCBE ADDR
         L     RTERM,QCBECONC-IEDQQCBE-1(RQCBE)
         LA    RPARM,QCBSTCHN-1         ADDRESS OF STCB
         MVC   QCBSTCHN,QCBSLINK         REMOVE STCB
         L     RQCB,TRMDESTQ-1           DRQ
         LR    RWORKA,RQCB              SAVE DRQ ADDR
         BAL   RRETURN,DSPPRIOR          ENQ STCB
         LR    RRETURN,RZERO             RESTORE RRETURN
         LR    RQCB,RWORKA              RESTORE DRQ REG
RELDRQ   EQU   *
         TM    DRQSTAT-IEDQDRQ(RQCB),DRQTRMHO
*                                       CONC HELD
         BCR   ONE,RRETURN              BRANCH IF YES
         L     RSTCB,DRQSTCHN-IEDQDRQ-1(RQCB)
*                                        GET FIRST STCB
         LA    RSTCB,ZERO(RSTCB)        ZERO HI-ORDER BYTE
         LA    RPARM,DRQSTCHN-IEDQDRQ-1(RQCB)
*                                        ADDRESS OF MAIN STCB
         CLR   RSTCB,RPARM               MAIN STCB FIRST
         BCR   7,RRETURN                 BRANCH IF NO
         TM    LCBSTAT1,LCBFREEN         LINE FREE
         BNO   LINKSTCB                  BRANCH IF NO
         CLI   LCBPRI,PRILCBDL           SYSTEM INTERVAL
         BE    LINKSTCB                  BRANCH IF YES
         NI    LCBSTAT1,LCBOCNI          PRESERVE STOPLINE FLAG
         OI    LCBSTAT1,LCBSENDN         SET SENDING
         ST    RLCB,LCBQCBA-1            PREPARE TO POST LCB TO LCB
         XC    LCBLINK,LCBLINK           ZERO LINK FIELD
         LR    RPARM,RLCB               SET POST REG
         BAL   RRETURN,DSPPOSTR          POST LCB
         LR    RQCB,RWORKA              RESTORE DRQ REG
LINKSTCB EQU   *
         LR    RSTCB,RLCB                SET UNAVL REG
         L     RDCB,LCBDCBPT             DCB ADDRESS
         TM    DCBCPRI,EQPRI            EQUAL PRIORITY
         BO    PRIEQ                    BRANCH IF YES
         OI    LCBSTAT2,LCBSNDPR         SET SEND PRIORITY
PRIEQ    EQU   *
         BAL   RRETURN,DSPUNAVR          MOVE STCB TO LCB
         LR    RRETURN,RZERO             RESTORE REG
         CLI   LCBCPA+24,CCWPOLL         LINE IN AUTOPOLL
         BCR   7,RRETURN                 BRANCH IF NO
         L     RWORKA,16(0)             ADDRESS OF CVT           Y05331
         L     RWORKA,AVTCVTPT(,RWORKA) ADDRESS OF AVT PTR       Y05331
         L     RWORKA,0(0,RWORKA)       ADDRESS OF AVT           Y05331
         ST    RLCB,AVTSAVE2-IEDQAVTD(0,RWORKA)  SAVE LCB PTR    Y05331
         L     RWORKA,AVTSAVTP-IEDQAVTD(0,RWORKA) SEC AVT PTR    Y05331
         USING IEDNSVTD,RWORKA                                   Y05331
         TM    SAVTDIAF,SAVTVIRT        IN VIRTUAL ENVIRONMENT ? Y05331
         BNO   NOVIRT   **** BNO NOVIRT ***NO,BRANCH             Y05331
         ST    RENTRY,AVTSAVE2+28       SAVE BASE                Y05331
         L     RENTRY,SAVTDIAG          VIRTUAL DIAGNOSE ROUTINE Y05331
         LR    RDCB,RRETURN             SAVE RETURN ADDRESS      Y05331
         LA    RZERO,LCBCPA+32          TIC ADDRESS              Y05331
         MVI   LCBCPA+32,CCWNOP         NOP VIRTUAL TIC          Y05331
         BAL   RRETURN,4(,RENTRY)       NOP REAL TIC,STOP AUTOPOLY05331
         L     RWORKA,16(0)             ADDRESS OF CVT           Y05331
         L     RWORKA,AVTCVTPT(,RWORKA) ADDRESS OF AVT PTR       Y05331
         L     RWORKA,0(0,RWORKA)       ADDRESS OF AVT           Y05331
         L     RWORKA,AVTSAVTP-IEDQAVTD(0,RWORKA) SEC AVT PTR    Y05331
         L     RENTRY,SAVTDIAG          VIRTUAL DIAGNOSE ROUTINE Y05331
         DROP  RWORKA                                            Y05331
         LA    RZERO,LCBCPA+56          TIC ADDRESS              Y05331
         MVI   LCBCPA+56,CCWNOP         NOP VIRTUAL TIC          Y05331
         BAL   RRETURN,4(,RENTRY)       NOP REAL TIC,STOP AUTOPOLY05331
         LR    RRETURN,RDCB             RESTORE RETURN ADDRESS   Y05331
         L     RENTRY,AVTSAVE2+28       RESTORE BASE             Y05331
         BR    RRETURN                  RETURN                   Y05331
NOVIRT   EQU   *                        NON VIRTUAL ENVIRONMENT  Y05331
         MVI   LCBCPA+32,CCWNOP         NOP TICS
         MVI   LCBCPA+56,CCWNOP         AFTER POLLS
         BR    RRETURN                  RETURN
         EJECT
***********************************************************************
*        EQUATES                                                      *
***********************************************************************
ZERO     EQU   0                        ZERO
ONE      EQU   1                        ONE
TWO      EQU   2                        TWO
THREE    EQU   3                        THREE
FOUR     EQU   4                        FOUR
FIVE     EQU   5                        FIVE
SIX      EQU   6                        SIX
SEVEN    EQU   7                        SEVEN
EIGHT    EQU   8                        EIGHT
NINE     EQU   9                        NINE
EQPRI    EQU   X'02'                    PRIORITY
OPEN     EQU   X'10'                    OPEN FLAGS
OUTPUT   EQU   X'01'                    DCB FLAGS
CSVTO    EQU   X'20'                    CONC VTO
RSVTO    EQU   X'0C'                    RCV VTO
CLRQPTR  EQU   X'0F'                    QUEUEING MASK
ADR      EQU   7                        MASK FOR ADDR STORE    @Z30X8IM
         EJECT
***********************************************************************
*        CONSTANTS                                                    *
***********************************************************************
HALFONE  DC    H'1'                     ONE
         EJECT
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
         TPRIOR
         TAVTD
         TQCBD
         TLCBD
         TSCBD
         TDEBD
         DCBD  DSORG=TX
         TDISPD
         TTRMD
         TRECBD
         TSTCBD
         TPRFD
         TCCWD
         TDRQD
         TQCBED
         END
