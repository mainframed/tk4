1945     TITLE 'IGG01945-CONTINUATION RESTART-SCAN MESSAGE QUEUES'
         SPACE 2
IGG01945 CSECT
         SPACE 3
* CHANGE ACTIVITY=AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A000000-999999                                                @Y16X5C0
*C130600,180100,180540,180600                                   SA52963
*C129000,131000,159400,222000,244000,245000,258000,259000,288500 S21101
*C342000,383000,384000,394300,397500,409000,425300-427400,       S21101
*C426200                                                         S21101
*D124500,138000-144000,181000-212500,217000,219000,229000-233500 S21101
*D249000-256000,279000,297000,298000,299000,305000-306000        S21101
*D348200-355000                                                  S21101
*A002000,124000,174000,180000,224000,238000,241000,247000,263600 S21101
*A180100,180340,394600                                           S21101
*A263000,263400,268000,359000,360000                             A42409
*C131000                                                         A42409
*D562000                                                         S21903
*C013000,109000,110000,122000,124000,124200,127000,128000,130000,S21903
*C157000,158000,159000,174500,266000,288260,288440,341000,343000,S21903
*C556000,557000,559000,560000,021000,022000,027000-031000,041000 S21903
*D032000-039000                                                  S21903
*C556000,557000,559000,560000                                    S21903
*A134000                                                        SA52971
*C129000,130600,159300-171200,173500-425400                     SA52971
*D146000,151000-159000,428000-430000,479000-545000,562000       SA52971
*C002050-003950                                                 SA54280
*A448210-448770                                                 SA59171
*A427001                                                        SA58446
*  PTM  0318,0331,0819,0923,1029,1209
*A448200                                                        SA62987
*C448470                                                       @SA73800
*A448770                                                       @Y17XACL
*D453000                                                       @Y17XACL
*A124000,452000,547000,565000                                  @G36XRCU
*C062000,064000,149300,474000,130600                           @G36XRCU
*D549000-560000                                                @G36XRCU
*A124200,167700,173500,547000,565100                           @OZ18748
*D425600-427000 COPIED AFTER STATEMENT 173500                  @OZ18748
         EJECT
***********************************************************************
*                                                                     *
*MODULE-NAME=IGG01945 (TCAM,CHECKPOINT/RESTART)                       *
*                                                                     *
*DESCRIPTIVE-NAME=CONTINUATION RESTART - SCAN MESSAGE QUEUES          *
*                                                                     *
*COPYRIGHT='NONE'                                                     *
*                                                                     *
*STATUS: VERSION 10.0                                                 *
*                                                                     *
*FUNCTION:THIS MODULE ACCESSES THE MESSAGE QUEUES DATA SET AT         *
*   RESTART TIME. THERE ARE THREE TYPES OF SITUATIONS THIS MODULE     *
*   CAN ENCOUNTER. THE USER MAY WANT TO DO A WARM START AFTER A       *
*   SYSTEM FAILURE BUT WITHOUT A SCAN OF THE MESSAGE QUEUES.    S21903*
*   (S=WY ON INTRO). IN THIS CASE,THIS MODULE LOCATES THE LAST        *
*   MESSAGE ON EACH FEFO QUEUE AT THE TIME OF THE CHECKPOINT AND      *
*   ZEROS THE FEFO CHAIN FIELD IN CASE MORE MESSAGES WERE PUT ON      *
*   THE FEFO QUEUE AFTER THE CHECKPOINT.(THESE WILL BE LOST.)         *
*                                                                     *
*   IN THE SECOND SITUATION,THE USER MAY HAVE SYNCHRONIZED QUEUES     *
*   FOR APPLICATION PROGRAMS BY SPECIFYING SYNC=YES ON THE PROCESS    *
*   MACRO. IN THIS CASE, THIS MODULE SCANS THE READ AHEAD MESSAGE FEFO*
*   QUEUE(S) FOR THIS PROCESS ENTRY RECREATING A FEFO QUEUE           *
*   WHICH INCLUDES ALL MESSAGES WHICH WERE ON THE FEFO QUEUE AT ANY   *
*   TIME AFTER THE CHECKPOINT WAS TAKEN. SOME OF THESE MAY HAVE       *
*   ALREADY BEEN SERVICED BEFORE THE SYSTEM FAILURE. IN ORDER TO      *
*   DETERMINE WHICH SERVICED MESSAGES SHOULD BE PUT ON THE FEFO       *
*   QUEUE, THIS MODULE READS THE FEFO POINTER OF THE MESSAGE AND      *
*   CHECKS TO SEE IF IT HAS BEEN FLAGGED SERVICED, OR CANCELLED, AND  *
*   IT READS EVERY SEGMENT OF THE MESSAGE TO DETERMINE IF ALL OF THE  *
*   MESSAGE WAS RECEIVED. IF ANY OF THE ABOVE ARE TRUE, THEN THE      *
*   MESSAGE IS NOT PUT IN THE FEFO CHAIN.
*                                                                     *
*   IN ALL SITUATIONS, THE FEFO QUEUE IS                              *
*   RECREATED,THE SEQUENCE NUMBERS ARE UPDATED,AND THE QBACK CHAIN    *
*   IS RECREATED. THE SEQUENCE-IN NUMBER REFERS TO THE SOURCE         *
*   TERMINAL ENTRY. THE SEQUENCE-OUT NUMBER REFERS TO THE DESTINA-    *
*   TION TERMINAL ENTRY. THE SEQUENCE NUMBER IN THE MESSAGE IS USED   *
*   TO UPDATE THE TERMINAL ENTRY ONLY IF IT IS GREATER THAN THE       *
*   NUMBER ALREADY IN THE TERMINAL ENTRY. THE QBACK CHAIN POINTER     *
*   IN THE HEADER BUFFER REFERS TO THE QBACK CHAIN POINTED TO BY      *
*   THE DESTINATION QCB. THE QBACK CHAIN POINTER IN THE TEXT BUFFER   *
*   REFERS TO THE QBACK CHAIN POINTED TO BY THE SOURCE QCB. IF THE    *
*   QBACK POINTER IN THE MESSAGE IS HIGHER THAN THE QBACK POINTER     *
*   IN THE QCB,THE RECORD NUMBER OF THE MESSAGE BUFFER ITSELF(NOT     *
*   THE QBACK FIELD) IS USED TO UPDATE THE QBACK POINTER IN THE QCB.  *
*                                                                     *
*ENTRY POINT:                                                         *
*                                                                     *
*        IGG01945                                                     *
*                                                                     *
*INPUT:REGISTERS 2,5,6,7,8 CONTAIN THE FOLLOWING:                     *
*                                                                     *
*   2-ADDRESS OF CHECKPOINT WORK AREA                                 *
*   5-ADDRESS OF THE BEGINNING OF THE WTG TABLE PREFIX         @G36XRCU
*   6-ADDRESS OF BEGINNING OF WHERE-TO-GO TABLE                       *
*   7-ADDRESS OF THE COPY OF THE CURRENT DCB                   @G36XRCU
*   8-ADDRESS OF CURRENT ENTRY IN WHERE-TO-GO TABLE                   *
*                                                                     *
*OUTPUT:                                                              *
*                                                                     *
*   REGISTERS 2,5,6 ARE SAME AS INPUT                                 *
*   REGISTERS 7 AND 8 ARE UPDATED TO THE NEXT ENTRIES                 *
*   THE MESSAGE QUEUES DATA SET(S) IS RECONTRUCTED.                   *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*                                                                     *
*        IEDQFL                                                       *
*                                                                     *
*EXITS-NORMAL:THIS MODULE XCTLS TO THE NEXT ENTRY IN THE WHERE-TO-    *
*   GO TABLE                                                          *
*                                                                     *
*EXITS-ERROR:NONE                                                     *
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   AVT(AVTCLRHI,AVTCPBCB,AVTDKAPQ,AVTEA,AVTFCPB,AVTFL,AVTINCPQ,      *
*       AVTMINKY,AVTNADDR,AVTOSECB,AVTRADDR,AVTRNMPT,AVTSAVE2,        *
*       AVTSAVE3                                                      *
*   CHECKPOINT WORK AREA                                              *
*   CPB                                                               *
*   DATA AREA OF MESSAGE                                              *
*   PREFIX                                                            *
*   QCB                                                               *
*   TERMNAME TABLE                                                    *
*   TERMINAL TABLE                                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*ATTRIBUTES:REENTERABLE                                               *
*                                                                     *
*NOTES:THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
***********************************************************************
         EJECT
         SPACE 3
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0                        REGISTER EQUATE          S21903
R1       EQU   1                        REGISTER EQUATE          S21903
R2       EQU   2                        ADDRESS OF CKPT WORK AREA
R3       EQU   3                        ADDRESS OF CPB
R4       EQU   4                        ADDRESS OF PREFIX
R5       EQU   5                        LENGTH OF TERMNAME
R6       EQU   6                        ADDRESS OF TERMNAME ENTRY
R7       EQU   7                        ADDRESS OF QCB
R8       EQU   8                        ADDRESS OF TERMINAL ENTRY
RAVT     EQU   9                        ADDRESS OF AVT
R10      EQU   10                       ADDRESS OF DATA FIELD
R11      EQU   11                       COUNT OF TERMNAME ENTRIES
R12      EQU   12                       BASE REG
R13      EQU   13                       REGISTER EQUATE          S21903
R14      EQU   14                       BRANCH REG
R15      EQU   15                       REGISTER EQUATE          S21903
ZERO     EQU   0                        NUMERIC 0              @G36XRCU
TWO      EQU   2                        NUMERIC 2              @G36XRCU
INCR     EQU   4                        INCREMENT                S21903
ONE      EQU   1                        LEN OR OFFSET 1        @OZ18748
FOUR     EQU   4                        LEN OR OFFSET 4        @OZ18748
FIVE     EQU   5                        LEN OR OFFSET 5        @OZ18748
SIX      EQU   6                        LEN OR OFFSET 6        @OZ18748
SEV      EQU   7                        LEN OR OFFSET 7        @OZ18748
EIGHT    EQU   8                        LEN OR OFFSET 8        @OZ18748
         SPACE 3
         BALR  R12,0                    SET UP BASE REG
         USING *,R12                    ESTABLISH BASE           S21903
IGG01945 IEDHJN START                   LAST ASSEMBLY DATE     @G36XRCU
         USING IEDQAVTD,RAVT            BASE FOR AVT
         USING IEDQCKPD,R2              BASE FOR CKPT WORK AREA
         USING IEDQCPB,R3               BASE FOR CPB               0819
         USING IEDQPRF,R4               BASE FOR PREFIX            0819
         USING IEDQDATA,R10             BASE FOR DATA FIELD        0819
         USING IEDQTNTD,R6              BASE FOR DSECT           S21903
         USING IEDQTRM,R8               BASE FOR DSECT           S21903
         USING IEDQQCB,R7               BASE FOR DSECT           S21903
         SPACE 3
*THE CORE TABLES HAVE BEEN UPDATED. NOW SCAN THE MESSAGE QUEUES ON
*DISK,REMOVING SERVICED AND INCOMPLETE MESSAGES AND UPDATING FEFO
*CHAINS AND SEQUENCE NUMBERS(IN THE TERMINAL TABLE).
         USING FORCORE,R5               OPEN WORK AREA DSECT   @G36XRCU
         L     R5,INCR(R8)              ADDR OF OPEN WORK AREA @G36XRCU
         L     R2,DXUDCBAD              ADDRESS OF USER'S DCB  @G36XRCU
         DROP  R5                                              @G36XRCU
         L     R2,DCBIOBAD-IHADCB(R2)   GET CURRENT WORKAREA ADDRS22024
         SPACE
         ST    R12,CKPSAVE1             SAVE BASE FOR IGG01945     1209
         L     R13,CKPSAVE1+8           GET BASE FOR IGG019Q8    CLUP21
         ST    R13,CKPGETML             SAVE ADDR OF THIS ROUTINES21101
         LM    R15,R11,CKPSAVE1+16      RESTORE REGS INITIALIZED BY1210X
                                        FIRST CKPT OPEN MODULE     1209
         L     R6,AVTRNMPT              ADDR OF TERMNAME TABLE     0331
         SR    R5,R5                    CLEAR                      0331
         IC    R5,TNTENLEN              GET LENGTH OF TERMNAMES    0331
         LH    R11,TNTLEN               GET COUNT OF ENTRIES       0331
         AR    R6,R5                    POINT TO ADDR OF 1ST TERMS21101
         N     R11,AVTCLRHI             CLEAR HIGH ORDER HALF WORD 0331
         LA    R6,TNTFIRST              GET 1ST ENTRY              0331
         L     R0,AVTEA                 SAVE ADDR OF DISPATCHER    0318
         MVI   CKPSWCH1,AVTEZERO        CLEAR CKPT-QCB SWITCH      0318
         TM    CKPFLAGS,CKPNORML        NORMAL CLOSEDOWN       @OZ18748
         BO    SKIPQ8                   DON'T SCAN QUEUES      @OZ18748
         L     R3,AVTFCPB               GET CPB FROM FREEPOOL      0318
         L     R10,CPBXREAF             GET PREFIX ADDRESS         0318
         LR    R4,R10                   GET PREFIX ADDRESS         0318
         ST    R8,CPBWORK               SAVE ENTRY ADDR IN CPB     0318
         MVC   AVTFCPB+1(3),CPBNEXT     REMOVE CPB FROM FREEPOOL   0318
         L     R12,CKPGETML             ADDR OF SUBROUTINE         0923
         BALR  R14,R12                  BRANCH TO SUBROUTINE
         L     R12,CKPSAVE1             RESET BASE REG           CLUP21
         ST    R0,AVTEA                 RESTORE ADDRESS OF DISPATS21101
         ST    R0,AVTSAVE2+64           RESTORE ADDRESS OF DISPATS21101
         ST    RAVT,AVTSAVE2+56         RESTORE AVT ADDRESS      S21101
         MVI   AVTCPBCB+4,0             CLEAR CLEANUP QCB PRIORITS21101
         MVC   CPBNEXT,AVTFCPB+1        MOVE 1ST CPB ADDR TO LINKS21101X
                                        FIELD                    S21101
         ST    R3,AVTFCPB               PUT ADDR OF CPB AT BEGINNS21101
*                                       ING OF QUEUE             S21101
         B     NOERR                    SKIP WRITING CNTRL REC @OZ18748
SKIPQ8   EQU   *                                               @OZ18748
         NI    CKPFLAGS,AVTEFF-CKPNORML TURN OFF BIT           @OZ18748
         L     R3,AVTRDYA               READY PARM LIST        @OZ18748
         L     R1,FOUR(R3)              ADDR OF RESTART MSG RTN@OZ18748
         LTR   R1,R1                    ROUTINE PRESENT        @OZ18748
         BZ    NOERR                    NO                     @OZ18748
         XC    CKPIOFL1(FOUR),CKPIOFL1  REINITIALIZE FLAGS     @OZ18748
         OI    CKPIOFL1,CKPCMDCH        TURN ON CMD CHAINING   @OZ18748
         XC    CKPIOFL3(EIGHT),CKPIOFL3 CLEAR FLAG AND CSW     @OZ18748
         XC    CKPIORC,CKPIORC          CLEAR ERROR COUNTS     @OZ18748
         USING IEDQDEB,R3               DEB ADDRESSABILITY     @OZ18748
         L     R3,CKPCPARM              ADDRESS OF DEB         @OZ18748
         MVI   CKPIOM,ZERO              ZERO OUT               @OZ18748
         MVC   CKPIOBB(SIX),DEBBINUM    DISK INFORMATION       @OZ18748
         MVI   CKPIOR,ONE               RECORD NUMBER          @OZ18748
         LA    R3,CKPCNTLR              ADDR OF CONTROL RECORD @OZ18748
         ST    R3,CKPRW                 PUT ADDR IN CCW        @OZ18748
         MVI   CKPRW,CKPWRITE           WRITE COMMAND CODE     @OZ18748
         MVI   CKPRW+SIX,ZERO           CLEAR COUNT            @OZ18748
         MVC   CKPRW+SEV(ONE),CKPCRLEN  CONTROL RECORD COUNT   @OZ18748
         MVI   CKPSECTR,ZERO            SET TO FIRST SECTOR    @OZ18748
         LA    R3,CKPSCHID              ADDR OF CCW            @OZ18748
         ST    R3,CKPIOCPA-ONE          SET CHANNEL PROGRAM    @OZ18748
         DROP  R3                                              @OZ18748
         EXCP  CKPIOB                   ADDRESS
         WAIT  ECB=CKPECB               WAIT FOR I/O           @OZ18748
         TM    CKPECB,X'7F'             CHECK FOR DISK ERROR   @OZ18748
         BO    NOERR                    NO DISK ERROR          @OZ18748
         OI    CKPFLAGS,CKPERR          INDICATE ERROR         @OZ18748
         LM    R14,R11,CKPSAVE1+12      RESTORE REGISTERS      @OZ18748
         MVC   ZERO(FIVE,R8),QME42      ERROR ROUTINE          @OZ18748
         B     QMJ83                    GO XCTL                @OZ18748
NOERR    EQU   *                                               @OZ18748
         SR    R11,R11                  CLEAR REG               SA58446
         STH   R11,AVTDSKCT             CLEAR DISK READ COUNT    S21101
         SPACE 3
         LA    R0,QMJSUB                ADDRESS OF SUBROUTINE NAME 1029
         SVC   9                        DELETE IGG019Q8
         CLC   AVTADEBR+1(3),AVTFZERO   REUS DISK OPEN          SA62987
         BE    NOREUS                   BRANCH IF NO            SA62987
         L     R3,AVTRADDR              ADJUST AVTRADDR         SA59171
         LA    R3,3(R3)                 TO REFLECT              SA59171
         SRL   R3,2                     THE ABSOLUTE NO OF RCDS SA59171
         LR    R15,R3                   SAVE IT                 SA59171
         S     R15,AVTLODPT             RADDR-LODPT RCD NO      SA59171
         L     R5,AVTTOTNR              GET TOTAL NO OF RCDS    SA59171
         SRL   R5,2                     DIVIDED BY 4            SA59171
         CR    R15,R5                   RESTART IN REUS         SA59171
*                                       SLOWDOWN MODE           SA59171
         BL    NOFULL                   NO, BYPASS SLOWDOWN     SA59171
         OI    AVTBIT3,AVTRFULN         SET REUS SLOWDOWN       SA59171
NOFULL   EQU   *                                                SA59171
         TM    AVTBIT4,AVTRUFTN         IN REUS AT CHKPT        SA59171
         BO    POSTREUS                 BRANCH IF YES           SA59171
         CL    R3,AVTLODPT              GREATER THAN LODPT      SA59171
         BL    NOREUS                   BRANCH IF NO            SA59171
POSTREUS EQU   *                                                SA59171
         SR    R6,R6                    DIVIDE RADDR BY TOTAL NOSA59171
         LR    R7,R3                    OF RECORDS. IF REMAINDERSA59171
         D     R6,AVTTOTNR              IS LESS THAN 1/4 OF THE SA59171
         SR    R14,R14                  TOTAL NO OF RCDS RADDR  SA59171
         L     R15,AVTTOTNR             SHOULD BE CHANGED TO ITSSA59171
         LA    R5,4                     MODULO VALUE IF THE 2 TOSA59171
         DR    R14,R5                   23RD BIT IS ALSO ON     SA59171
         CR    R15,R6                   REMAINDER LESS THAN     SA59171
         BL    SETREUS                  1/4 OF TOTAL BR NO      SA59171
         TM    AVTRADDR+1,AVTMODBT      IS 2ND TO 23RD BIT ON? @SA73800
         BNO   SETREUS                  BR-NO                   SA59171
         SLL   R6,2                     ADJUST THE VALUE        SA59171
         SH    R6,AVTHA3                OF AVTRADDR             SA59171
         ST    R6,AVTRADDR              SET REUS TO MODULO VALUESA59171
         XC    AVTLODPT,AVTLODPT        LOAD PT SHOULD BE REL TOSA59171
*                                       ZERO                    SA59171
SETREUS  EQU   *                                                SA59171
         IC    R3,AVTADEBR              SINCE 1/4 OF TOTAL MAY  SA59171
         LA    R3,1(R3)                 HAVE A REMAINDER, EVERY SA59171
*                                       4TH TIME LDP            SA59171
         STC   R3,AVTADEBR              LDPT IS CHANGED,THE     SA59171
         CLI   AVTADEBR,4               QUOTIENT AND REMAINDER  SA59171
         BL    ADD1QTR                  MUST BE ADDED TO KEEP   SA59171
*                                       ZONE BOUNDARIES         SA59171
         MVI   AVTADEBR,AVTEZERO        ON THE SAME DISK        SA59171
         AR    R15,R14                  LOCATION                SA59171
ADD1QTR  EQU   *                                                SA59171
         L     R3,AVTLODPT              ADD 1/4 OR 1/4 +        SA59171
*                                       THE REMAINDER           SA59171
         AR    R3,R15                   TO LDPT FOR NEXT POINT  SA59171
         ST    R3,AVTLODPT              TO CALL REUSABILITY     SA59171
         L     R1,AVTIA                 GET ADDR OF REUS QCB    SA59171
         LA    R13,AVTSAVE2             LOAD SAVE AREA ADDR     SA59171
         L     R11,AVTEA                SET DISP BASE           SA59171
         USING IEDQDISP,R11             DISP BASE               SA59171
         BAL   R14,DSPPOSTR             POST REUS QCB TO ITSELF SA59171
*                                       TO ACTIVATE REUS ZONE   SA59171
*                                       CLEANING                SA59171
         DROP  R11                      DROP DISP BASE          SA59171
NOREUS   EQU   *                                                SA59171
         OI    AVTCKFLG,AVTCKTAC        INDICATE THAT TCAM     @Y17XACL
*                                       CHECKPOINT IS ACTIVE   @Y17XACL
         EJECT                                                 @Y17XACL
*SET UP WHERE-TO-GO TABLE TO XCTL TO NEXT OPEN MODULE
         SPACE
         LM    R14,R11,CKPSAVE1+12      RESTORE REGS
         L     R15,4(R8)                ADDR OF OPEN WORK AREA @G36XRCU
         XC    0(5,R8),0(R8)            CLEAR TO INDICATE COMPLETE
QMJ83    EQU   *
         LA    R8,8(0,R8)               GET NEXT WTG ENTRY
         LA    R7,4(0,R7)               GET NEXT DCB LIST ENTRY
         CLC   ZERO(TWO,R8),AMIDCNST    IS THIS EXECUTOR
*                                       REQUIRED AGAIN         @G36XRCU
         BE    START                    YES, RETURN TO PROCESS @G36XRCU
         CLC   0(2,R8),QMJ0S            CHECK FOR END OF TABLE
         BNE   QMJ83                    BRANCH IF NOT END
         LR    R7,R5                    RESET PARM LIST ADDR
         LA    R8,32(0,R6)              RESET WTG TABLE POINTER
QMJ85    EQU   *
         CLI   0(R8),0                  CHECK FOR ZEROED ENTRY
         BNE   QMJ87                    BRANCH NOT ZERO
         LA    R8,8(0,R8)               GET NEXT WTG ENTRY
         LA    R7,4(0,R7)               GET NEXT DCB ENTRY
         B     QMJ85                    BRANCH TO CK FOR ZERO    S21903
         SPACE 3
*XCTL TO NEXT MODULE
         SPACE
QMJ87    EQU   *
         MODESET EXTKEY=DATAMGT         RETURN TO KEY 5        @G36XRCU
         SPACE
         LA    R15,DXCCW12-FORCORE(R15) GET PARM LIST          @G36XRCU
         MVC   6(2,R6),0(R8)            MOVE MODULE ID TO BLDL LIST
         MVC   14(3,R6),2(R8)           MOVE TTR TO BLDL LIST
         XCTL  DE=(R6),SF=(E,(15))
         SPACE 3
QMJSUB   DC    CL8'IGG019Q8'            NAME OF LOADED SUBROUTINE  0923
QMJ0S    DC    CL2'0S'                  ID AT END OF WTG TABLE
QME42    DC    C'42'                    ID FOR ERROR MODULE    @OZ18748
         DC    XL3'0'                   CONSTANT               @OZ18748
         DC    X'0'                     CONSTANT               @OZ18748
AMIDCNST DC    C'45'                    ID FOR THIS EXECUTOR   @G36XRCU
         EJECT
         TAVTD
         TCKPD 3330                     MERLIN VERSION      0513 S21101
         TQCBD
         EJECT
FORCORE  DSECT                                                 @G36XRCU
         IECDSECT                                              @G36XRCU
         EJECT
         DCBD  DSORG=TQ                                          S22024
*DSECT FOR DEB
         SPACE
IEDQDEB  DSECT
         ORG   IEDQDEB+16               ORG TO START OF DEB      S21903
DEBNMEXT DS    X                        NO OF EXTENTS IN DATA SET
         ORG IEDQDEB+25                 ORG TO DCB POINTER
DEBDCBAD DS    AL3                      ADDR OF DCB
         SPACE
*FOR EACH EXTENT THERE IS A 16-BYTE SEGMENT AS FOLLOWS.
         SPACE
         ORG   IEDQDEB+32               ORG TO UCB               S21903
DEBDVMOD DS    XL1                      DEVICE MODIFIER
DEBUCBAD DS    XL3                      ADDR OF UCB
DEBBINUM DS    XL2                      BIN NO
DEBSTRCC DS    XL2                      CYLLINDER ADDR FOR START
DEBSTRHH DS    XL2                      TRACK ADDR FOR START OF EXT
DEBENDCC DS    XL2                      CYLLINDER ADDR FOR EXTNT END
DEBENDHH DS    XL2                      TRACK ADDR FOR EXTENT END
DEBNMTRK DS    XL2                      NO TRACKS IN THIS EXTENT
DEBEND   EQU   *
DEBSEGLN EQU   DEBEND-DEBDVMOD          LNGTH OF SEG FOR EACH EXTENT
CKPFIRST EQU   X'40' .                  INDICATES EMPTY FEFO QUEUS21101
CKPSTAYN EQU   X'20'                    NO-SCAN SPECIFIED-S=WY   S21101
         TTNTD
         TTRMD
         TDISPD
         TCPBD 3330                     MERLIN VERSION      0513 S21101
         TPRFD
         TDATAD
         END
