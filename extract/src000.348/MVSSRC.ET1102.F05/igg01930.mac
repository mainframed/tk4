         TITLE 'IGG01930 FIRST LOAD OF TCAM MESSAGE QUEUES OPEN'
IGG01930 CSECT
*A-000000-999999                                               @X31X8N0
         SPACE 2
*CHANGE-ACTIVITY = AS FOLLOWS:                                   S21903
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A430000,459000,473000                                           X01004
*C087200-088000,213000-214000,467000                             X01004
*A276000                                                         Y01004
*A091000,340000,430600                                           X02004
*A091600,323000,430600                                           Y05330
*C091400                                                         Y05330
*D284200-285200                                                  Y05330
*A247000,275000,459000                                          SA54471
*A087000,090000                                                  M2318
*D152000-153000,285000                                           A41033
*A002000,003000                                                  S21903
*C085000,299000,308000,314000,460000-464000,471000,              S21903
*C476000-479000,488000-491000                                    S21903
*C005000,020000,023000,028000-032500,045000,046000,210000        Y02027
*C240000,242000,253000,255000,257000-259000,451600               Y02027
*D089000                                                         Y02027
*A088000,089600,089700,091040,091060,0259500,340110-340160       Y02027
*A353180-353900,398400,399400,447000,459050                      Y02027
*A000002                                                       @Z30X8NM
*C005000,092000-093400,189000,223000,284000,421000             @Z30X8NM
*D466000-471000,473000,475000-479000                           @Z30X8NM
*D322000,323000,340110-340500,430400,430800                    @Z30X8NG
*D091100-091700                                                  X03039
*                TCAM LEVEL 10.0 CHANGES                       @G36XRNP
*C093500,189000,223000                                         @G36XRNP
*                                                              @G36XRNP
         SPACE 3
***********************************************************************
*                                                                     *
*MODULE-NAME = IGG01930   (TCAM,INITIALIZATION)                @G36XRNP
*                                                                S21903
*DESCRIPTIVE-NAME = FIRST LOAD OF TCAM MESSAGE QUEUES OPEN       S21903
*                                                                S21903
*COPYRIGHTS = 'NONE'                                             S21903
*                                                                     *
*STATUS - CHANGE LEVEL 10.0                                    @G36XRNP
*                                                                     *
*FUNCTION/OPERATION - THIS ROUTINE GETS MAIN STORAGE FOR AND          *
*   INITIALIZES A DATA EXTENT BLOCK.IT ANALYZES DEVICE TYPE           *
*   INFORMATION PROVIDED IN THE UNIT CONTROL BLOCK TO DETERMINE       *
*   WHAT TYPE OF DIRECT ACCESS DEVICES AREA USED FOR THE MESAGE       *
*   QUEUES.                                                           *
*                                                                     *
*ENTRY POINTS - THIS ROUTINE IS ENTERED AT IGG01930 VIA AN            *
*   XCTL FROM AN I/O SUPPORT MODULE OR FROM ANOTHER ACCESS            *
*   METHOD'S OPEN EXECUTOR.  IT MAY ALSO BE RE-ENTERED FROM           *
*   THE RELOOP PORTION OF THIS ROUTINE IF IT DETERMINES THAT          *
*   THERE IS ANOTHER DATA CONTROL BLOCK TO BE OPENED.                 *
*                                                                     *
*INPUT - THE REGISTERS 5,6,7,AND 8 ARE THE INPUT AS FOLLOWS,          *
*   5 - THE ADDRESS OF THE WTG TABLE PREFIX                      Y02027
*   6 -  THE ADDRESS OF THE BEGINNING OF THE WHERE-TO-GO TABLE        *
*   7 - THE ADDRESS OF THE COPY OF THE CURRENT DCB               Y02027
*   8 -  THE ADDRESS OF THE CURRENT EXECUTOR'S ENTRY IN THE           *
*        WHERE-TO-GO TABLE.                                           *
*                                                                     *
*OUTPUT                                                          Y02027
*   REGISTER 7 WILL POINT TO THE ADDRESS OF THE COPY OF          Y02027
*   THE NEXT DCB TO BE PROCESSED BY THIS OPEN EXECUTOR           Y02027
*                                                                Y02027
*   REGISTER 8 WILL POINT TO THE ID OF THE NEXT OPEN             Y02027
*   EXECUTOR TO BE GIVEN CONTROL                                 Y02027
*                                                                Y02027
*   A DEB WILL HAVE BEEN BUILT AND INITIALIZED IN                Y02027
*   SUBPOOL 230                                                  Y02027
*                                                                Y02027
*                                                                     *
*EXTERNAL ROUTINES - NONE                                             *
*                                                                     *
*EXITS - NORMAL                                                       *
*   THIS ROUTINE EXITS VIA AN XCTL TO THE MODULE IDENTIFIED BY        *
*   THE NEXT NON-ZERO ENTRY IN THE WHERE-TO-GO TABLE, NAMELY          *
*   IGG01931                                                          *
*                                                                     *
*      - ERROR                                                        *
*                                                                     *
*TABLES/WORKAREAS - THE WHERE-TO-GO TABLE CONTAINS THE ID AND         *
*   TTR OF THE OPEN EXECUTOR LOAD.  THE DATA CONTROL BLOCK            *
*   COPY LIST CONTAINS THE ADDRESSES OF A COPY OF EACH DCB       Y02027
*   SPECIFIED IN THE OPEN MACRO INSTRUCTION. THE OPEN WORK AREA  Y02027
*   DESCRIBES THE CHARACTERISTICS AND UP TO SIXTEEN EXTENTS OF        *
*   A DATA SET.  THE ADDRESS VECTOR TABLE IS A RESIDENT VECTOR        *
*   LIST USED TO LOCATE CERTAIN PARAMETERS WHICH ARE NEEDED IN        *
*   DEB CONSTRUCTION.                                                 *
*                                                                     *
*ATTRIBUTES - THIS ROUTINE IS EXECUTED IN THE TRANSIENT AREA AS       *
*   ENABLED, PRIVILEGED, AND REENTRANT.                               *
         EJECT
*       REGISTER USAGE
*
RE       EQU   0                        WORK REGISTER
RF       EQU   1                        WORK REGISTER
RDCB     EQU   2                        ADDRESS OF THE CURRENT DCB
RTIOT    EQU   3                        ADDRESS OF THE TIOT
RCORE    EQU   4                        ADDRESS OF DCB WORK AREA
RPAR     EQU   5                        ADDRESS OF FIRST ENTRY IN
*                                         DCB PARAMETER LIST
RWTG     EQU   6                        ADDRESS OF WHERE-TO-GO TABLE
RPARC    EQU   7                        ADDRESS OF CURRENT ENTRY IN
*                                         DCB PARAMETER LIST
RWTGC    EQU   8                        ADDRESS OF CURRENT ENTRY IN
*                                         WHERE-TO-GO TABLE
RAVT     EQU   9                        ADDRESS OF THE AVT
RUCB     EQU   10                       ADDRESS OF THE CURRENT UCB
RDEB     EQU   11                       ADDRESS OF THE DEB
RBASE    EQU   12                       BASE OF THIS ROUTINE
RC       EQU   13                       WORK REGISTER
RD       EQU   14                       WORK REGISTER
RJ       EQU   15                       WORK REGISTER
*
         USING IHADCB,RDCB              DCB DSECT
         USING IEDJCIOB,RTIOT           PRIVATE IOB DSECT
         USING IEDQDEB,RDEB             DATA EXTENT BLOCK DSECT
         USING IEDQTCB,RC               TCB DSECT
         USING IEDQCPB,RD               CPB DSECT
         USING FORCORE,RCORE            DCB WORK AREA DSECT
         USING IEDQAVTD,RAVT            AVT DSECT
*
         BALR  RBASE,0                  ESTABLISH ADDRESSABILITY S21903
         USING *,RBASE
*
IGG01930 IEDHJN RESTART                                          S22024
         EJECT                                                   Y02027
         MODESET EXTKEY=SUPR            GET INTO KEY 0           Y02027
         SPACE 2
         L     RCORE,FOUR(RWTGC)        ADDRESS OF WORK AREA     S22024
         L     RDCB,DXUDCBAD            LOAD THE ADDRESS OF THE  Y02027
*                                         USER'S DCB             Y02027
         XC    DXCCW10(FOUR),DXCCW10    CLEAR IN CASE OF         S22024
*                                       OPEN ERROR               M2318
         L     RAVT,DCBIOBAD            ADDRESS OF THE AVT
         SPACE 1                                                 Y02027
         CLI   DXUKEY,KEY6              IS INVOKER IN KEY 6      Y02027
         BNE   NOTKEY6                  NO, GO SET ERROR CODE    Y02027
         SPACE 1                                                 Y02027
         TM    DCBOPTCD,CHKPOINT        IS THIS CKPOINT DCB    @Z30X8NM
         BO    DISKQ                    YES, BRANCH            @Z30X8NM
         TM    DCBOPTCD,CKP3705         3705 CKPOINT DCB       @Z30X8NM
         BZ    CHKAVTDK                 NO, BRANCH             @G36XRNP
         XC    AVTEZERO(TWO,RWTGC),AVTEZERO(RWTGC) LAST LOAD   @Z30X8NM
         B     DISKQ                    3705 CKPT OPEN         @G36XRNP
CHKAVTDK EQU   *                                               @Z30X8NM
         TM    AVTBIT1,AVTDISKN         DO WE HAVE THE CORRECT   S22024
*                                        AVT TO SUPPORT DISK     S22024
*                                        QUEUEING                S22024
         BZ    AVTERROR                 NO, BRANCH               S22024
         CLC   DSCKEYL(ONE),AVTKEYLE+ONE ARE KEYLENGTHS THE SAME S22024
         BNE   KEYLNGER                 NO, BRANCH
         EJECT
DISKQ    EQU   *
         L     RC,AVTTCB                LOAD THR TCB ADDRESS
         L     RF,TIOT(RC)              LOAD THE ADDRESS OF THE
*                                         TIOT
         AH    RF,DCBTIOT               ADD DCB OFFSET TO STARTING
*                                         ADDRESS OF THE TIOT
         SR    RE,RE                    CLEAR DD ENTRY LENGTH REG.
         IC    RE,AVTEZERO(RF)          LOAD LENGTH OF DD ENTRY  S22024
*
         SH    RE,DDLENGTH              SUBTRACR 16 FROM THE LENGTH
         SRL   RE,SHIFT2                DIVIDE RESULT BY 4 TO GET
*                                         THE NUMBER OF UCB'S
         BCTR  RE,0                     REDUCE NUMBER OF UCB'S BY 1
         AH    RF,DDLENGTH              LOAD POINTER TO FIRST UCB
         L     RUCB,AVTEZERO(RF)        LOAD POINTER TO THE UCB  S22024
         LA    RUCB,AVTEZERO(RUCB)      CLEAR HIGH ORDER BYTE    S22024
*
         LA    RD,ONE                   LOAD A COMPARISON VALUE
         CR    RE,RD                    UCB'S GREATER THAN ONE
         BL    DEVTEST                  BRANCH TO DEVICE TEST
*
*
         MVC   AVTGETMN+THREE(ONE),UCBTYPE(RUCB) MOVE DEVICE     S22024
*                                        TYPE TO WORK AREA       S22024
UCBPT    EQU   *
         LA    RF,FOUR(RF)              LOAD POINTER TO NEXT UCB
         L     RUCB,AVTEZERO(RF)        LOAD NEXT UCB ADDRESS    S22024
*
         CLC   UCBTYPE(ONE,RUCB),AVTGETMN+THREE TEST DEVICE      S22024
*                                        CODES FOR EACH UCB      S22024
         BNE   BADISK                   THE DEVICES ARE NOT ALIKE
         BCT   RE,UCBPT                 BRANCH TO UPDATE UCB POINTER
         EJECT
DEVTEST  EQU   *
         L     RC,CVT                   LOAD THE ADDRESS OF THE CVT
         L     RC,DADT(RC)              LOAD THE ADDRESS OF THE
*                                         DIRECT ACCESS DEVICE
*                                         TABLE
         IC    RF,UCBTYPE(RUCB)         PICK UP THE DIRECT ACCESS
*                                         TYPE BYTE
         N     RF,FULLWORD              REMOVE ALL EXTRANEOUS BITS
*                                         FROM THE REGISTER
         IC    RF,AVTEZERO(RF,RC)       USING THE DEVICE TYPE BITS22024
*                                         AS AN OFFSET, PICK UP A
*                                         BYTE FROM THE OFFSET
*                                         TABLE IN THE  DADT
         LA    RTIOT,AVTEZERO(RF,RC)    LOAD THE ADDRESS OF THE  S22024
*                                         ENTRY FOR THIS UCB IN THE
*                                         DEVICE TABLE
         LH    RE,TWO(RTIOT)            LOAD THE NUMBER OF
*                                         TRACKS/CYLINDER FOR THIS
*                                         PARTICULAR DEVICE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*             COUNT  NUMBER OF EXTENTS ON THIS DATA SET           *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SR    RC,RC                    CLEAR EXTENT COUNTER
         SR    RF,RF                      REGISTERS
EXTLOOP  EQU   *
         IC    RC,DSCNOEXT              PICK UP NUMBER OF EXTENTS
*                                         ON THIS VOLUME
         AR    RF,RC                    ADD TO PREVIOUS TOTAL
         L     RCORE,DSCCORE            LOAD CORE ADDRESS OF THE
*                                         NEXT DSCB RECORD
         LTR   RCORE,RCORE              TEST FOR END OF DSCB CHAIN
         BZ    ENDSCB                   BRANCH IF END OF CHAIN
TESTDSCB EQU   *
         CLI   DSCFMTID,FORMAT1         IS NEW DSCB A FORMAT 1   S22024
         BE    EXTLOOP                  BRANCH IF A FORMAT 1
*
         L     RCORE,DSCCORE+FORM3EXT   LOAD ADDRESS OF NEXT DSCBS22024
         LTR   RCORE,RCORE              TEST FOR END OF DSCB CHAIN
         BNZ   TESTDSCB                 IF NOT END BRANCH TO TEST
*                                         FORMAT OF THIS DSCB
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        COMPUTE THE NUMBER OF BYTES REQUIRED FOR THE DEB         *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ENDSCB   EQU   *
         LR    RUCB,RF                  COPY THE NUMBER OF EXTENTS
         TM    DCBOPTCD,REUS+NONREUS    TEST FOR REUSABLE OR     S22024
*                                         NON-REUSABLE QUEUEING
         BNZ   TESTOPCD                 DETERMINE WHICH TYPE
         TM    DCBOPTCD,CHKPOINT+CKP3705   THIS CHKPOINT DCB   @G36XRNP
         BNZ   MULTIDEB                 GET THE DEB SIZE         S22024
         B     BADQUEUE                 BRANCH TO ERROR ROUTINE
TESTOPCD EQU   *
         TM    DCBOPTCD,REUS            TEST FOR REUS QUEUEING   S22024
         BO    *+8                      YES, SKIP NEXT INSTRUCTION
         LA    RCORE,QUECONST           SET THE QUEUEING CONSTANT
         ST    RE,AVTTRCYR(RCORE)       STORE TRACKS/CYLINDER
*                                         VALUE IN THE AVT
         ST    RF,AVTNOVOR(RCORE)       STORE NUMBER OF EXTENTS
*                                         THE AVT
MULTIDEB EQU   *
         MH    RF,H20                   MULTIPLY THE NUMBER OF
*                                         EXTENTS BY 20
         LA    RF,DEBSIZE(RF)           ADD 77 TO INITIAL SIZE
         LR    RC,RF                    COPY DEB SIZE
         SRL   RC,SHIFT3                GET NUMBER OF DOUBLE WORDS
         LA    RE,AVTDOUBL              ADDRESS OF WORD TO HOLD
*                                         ADDRESS OF THE DEB
         MVI   AVTOPERT,TCAMER0E        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         MVI   AVTGETMN+NINE,SP230      SET THE SUBPOOL ID       Y02027
*                                         PARAMETER LIST
         BAL   RD,AVTPAR                SET UP PARM LIST IN AVT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        INITIALIZATION OF THE DEB AND THE DCB                    *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         L     RDEB,AVTDOUBL            SET DEB BASE REGISTER
         TM    DCBOPTCD,CHKPOINT+CKP3705   THIS CHKPOINT DCB   @G36XRNP
         BNZ   DEBINIT                  YES, BRANCH              S22024
         ST    RDEB,AVTADEBR(RCORE)     STORE DEB ADDRESS IN AVT
DEBINIT  EQU   *
         XC    AVTEZERO(SIXTY8,RDEB),AVTEZERO(RDEB) ZERO FIRST   S22024
*                                        68 BYTES OF THE DEB     S22024
         L     RF,CVT                   ADDRESS OF THE CVT
         LA    RF,CVTBRET(RF)           ADDRESS OF THE APPENDAGE S22024
*                                         BRANCHING ROUTINE
         ST    RF,DEBEOEA         *********************************
         ST    RF,DEBSIOA         *********************************
         ST    RF,DEBPCIA         *********************************
         ST    RF,DEBCEA                SET CEA ADDRESS TO BR 14 S22024
         ST    RF,DEBXCEA         *********************************
         ST    RDEB,DEBEXSCL            STORE APPENDAGE TABLE ADDRESS
*                                         IN THE  DEB
         MVI   DEBEXSCL,DIRACCES        INDICATE THAT THIS DEB IS
*                                         FOR A DIRECT ACCESS DEVICE
         LA    RF,DEBNMSUB              LOAD THE ADDRESS OF THE  Y02027
*                                         BASIC DEB
         ST    RF,DCBDEBAD              STORE THE DEB ADDRESS IN Y02027
*                                         THE DCB
         STC   RC,DEBLNGTH              STORE NUMBER OF DOUBLE WORDS
*                                         IN THE DEB
         ST    RC,DEBWKARA              ZERO FIRST 3 BYTES OF WKARA
*                                          FIELD IN THE DEB
         L     RCORE,FOUR(,RWTGC)       RESTORE OPEN WORK AREA   S22024
*                                        ADDRESS                 S22024
         MVC   DEBWKARA+THREE(FIVE),DXCCW7 MOVE FIVE BYTES FROM  S22024
*                                        THE SEVENTH CHANNEL WORDS22024
         STC   RUCB,DEBNMEXT            STORE THE NUMBER OF EXTENTS
*                                         IN THE DEB
         L     RC,AVTTCB                LOAD THE TCB ADDRESS
         ST    RC,DEBTCBAD              STORE TCB ADDRESS IN THE Y02027
*                                         DEB
         L     RE,TCBDEB                LOAD THE ADDRESS OF THE  Y02027
*                                         FIRST DEB IN THE QUEUE
CHAINDEB ST    RE,DEBDEBAD              SAVE THE ADDRESS OF THE  Y02027
*                                         PREVIOUS DEB IN THIS   Y02027
         CS    RE,RF,TCBDEB             CHAIN THIS DEB TO THE    Y02027
*                                         TCB IF TCBDEB HAS NOT  Y02027
*                                         CHANGED                Y02027
         BNE   CHAINDEB                 CHECK AGAIN              Y02027
         SLL   RUCB,SHIFT2              MULTIPLY THE NUMBER OF   S22024
*                                         EXTENTS BY 4 TO GET THE
*                                         ACCESS METHOD LENGTH
         STC   RUCB,DEBAMLNG            STORE THIS LENGTH IN THE
*                                         DEB
         ST    RDCB,DEBPROTG            STORE THE DCB ADDRESS IN
*                                         THE DEB
         MVC   DEBPROTG(ONE),TCBPKF     MOVE PROTECTION TAG OF   S22024
*                                         TCB TO THE DEB
         OI    DEBPROTG,OPNDEBID        OR IN THE DEB IDENTIFIER
         MVC   DEBPRIOR(ONE),TCBDSP     MOVE TCB PRIORITY TO DEB S22024
         MVC   DEBOPATB(ONE),AVTEZERO(RPARC) MOVE ATTRIBUTES TO  S22024
*                                         THE DEB
         NI    DEBOPATB,ATTRMASK        CLEAR EOL FLAG IF ON    SA54471
         EJECT
         SPACE 2
         DEBCHK (RDCB),TYPE=ADD,AM=TCAM INSERT DEB IN CHAIN      Y01004
         SPACE 2
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*                  XCTL TO NEXT OPEN EXECUTOR                     *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
ENDLOAD  EQU   *
         MVC   AVTEZERO(TWO,RWTGC),OPENLD2 ID OF               @Z30X8NM
*                                        SECOND LOAD             S22024
         L     RCORE,FOUR(RWTGC)        ADDR OF OPEN WORK AREA   S22024
RELOOP   EQU   *
         LA    RWTGC,EIGHT(RWTGC)       INCREMENT POINTER TO NXT S22024
*                                         ENTRY IN WTG TABLE
         LA    RPARC,FOUR(RPARC)        INCREMENT POINTER TO NXT S22024
*                                         DCB IN LIST
         CLC   AVTEZERO(TWO,RWTGC),AMIDCNST IS THIS OPEN NEEDED  S22024
*                                        AGAIN                   S22024
*
         BE    RESTART                  IF YES, RETURN TO BEGINNING
*
*
         CLC   AVTEZERO(TWO,RWTGC),OPIDCNST TEST FOR END OF WTG  S22024
*                                        TABLE                   S22024
*
         BNE   RELOOP                   BRANCH IF NO             S21903
*
         LR    RPARC,RPAR               RESET POINTER TO FIRST OF
*                                         THE DCB PARAMETER LIST
         LA    RWTGC,THIRTY2(RWTG)      RESET POINTER TO FIRST OFS22024
*                                         THE WTG TABLE
ZCHEK    EQU   *
         CLI   AVTEZERO(RWTGC),AVTEZERO IS THE ENTRY ID ZERO     S22024
*
         BNE   XCTLRTN                  XCTL TO NEXT LOAD        S21903
*
         LA    RWTGC,EIGHT(RWTGC)       PICK UP ADDRESS OF NEXT  S22024
*                                         ENTRY IN WTG TABLE
         LA    RPARC,FOUR(RPARC)        INCREMENT POINTER TO THE S22024
*                                         NEXT DCB
         B     ZCHEK                    CHECK NEXT ENTRY         S21903
*        TRANSFER CONTROL TO SYSTEM OPEN
*
XCTLRTN  EQU   *
         LA    RJ,DXCCW12               ADDRESS OF A DOUBLE WORD S22024
*
         MVC   SIX(TWO,RWTG),AVTEZERO(RWTGC) MOVE ID TO THE      S22024
*                                         PARAMETER LIST
XCTLRTN1 EQU   *                                                 Y05330
*
         XCTL  DE=(RWTG),SF=(E,(15))
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN         *
*        THE USER HAS SPECIFIED AN INCORRECT AVT TO SUPPORT       *
*                       DISK QUEUEING
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
AVTERROR EQU   *
         MVI   AVTOPERT,TCAMER0A        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         B     WTGSETUP                 SET THE WHERE-TO-GO ENTRY
         SPACE 3                                                 Y02027
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THE USER HAS SPECIFIED CONFLICTING KEYLENGTH VALUES      *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
KEYLNGER EQU   *
         MVI   AVTOPERT,TCAMER0B        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         B     WTGSETUP                 SET THE WHERE-TO-GO ENTRY
         SPACE 3                                                 Y02027
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *Y02027
*                                                               *Y02027
*        THIS SECTION OF CODE IS EXECUTED ONLY WHEN THE         *Y02027
*        INVOKER IS NOT RUNNING IN PROTECT KEY 6                *Y02027
*                                                               *Y02027
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *Y02027
NOTKEY6  EQU   *                                                 Y02027
         MVI   AVTOPERT,UNAUTHD         SET THE ERROR IDENTIFIER Y02027
         B     WTGSETUP                 GO TO THE XCTL ROUTINE   Y02027
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THE EXTENTS OF THE MESSAGE QUEUES DATA SETS ARE          *
*        CONTAINED ON DIFFERENT TYPES OF DISK DRIVES              *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
BADISK   EQU   *
         MVI   AVTOPERT,TCAMER0C        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         B     WTGSETUP                 SET THE WHERE-TO-GO ENTRY
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF ERROR CODE IS EXECUTED ONLY WHEN AN      *
*        INVALID TYPE OF QUEUEING IS DETECTED IN THE DCB          *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
BADQUEUE EQU   *
         MVI   AVTOPERT,TCAMER0D        MOVE THE ERROR IDENTIFIER
*                                         FOR TCAM INTO THE AVT
         B     WTGSETUP                 SET THE WHERE-TO-GO ENTRY
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS ROUTINE SETS UP A PARAMETER LIST IN THE AVT.  THIS  *
*        LIST WILL BE REFERENCED BY ALL GETMAIN MACROS ISSUED     *
*        IN DISK OPEN.                                            *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
AVTPAR   EQU   *
         ST    RF,AVTGETMN              STORE BYTE COUNT IN AVT
*                                         PARAMETER LIST.
         ST    RE,AVTGETMN+FOUR         STORE ADDR OF WORD IN    S22024
*                                         SECOND WORD OF AVT
*                                         PARAMETER LIST.
         LA    RF,AVTGETMN              LOAD ADDRESS OF AVT
*                                         PARAMETER LIST.
         SPACE 2
         MODESET EXTKEY=DATAMGT         GET INTO KEY 5           Y02027
         SPACE 2
         GETMAIN   ,MF=(E,(1))          GET AREA FOR CORE QUEUE.
         SPACE 2
         MODESET EXTKEY=SUPR            RETURN TO KEY 0          Y02027
         SPACE 2
*
         LTR   RJ,RJ                    TEST RETURN CODE
         BNZ   WTGSETUP                 THE GETMAIN FOR THE DEB WAS
*                                         NOT SUCCESSFUL
         BR    RD                       RETURN TO THE CALLING POINT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                 *
*        THIS SECTION OF CODE IS USED TO SAVE THE ID OF THE       *
*        CURRENT OPEN EXECUTOR AND TO MOVE THE ID OF THE          *
*        ERROR HANDLER INTO THE WHERE-TO-GO PARAMETER             *
*                            LIST                                 *
*                                                                 *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
WTGSETUP EQU   *
         L     RCORE,FOUR(RWTGC)        LOAD THE  ADDRESS OF THE
*                                         OPEN WORK AREA
         MVC   AVTOPXCL(TWO),AMIDCNST   MOVE THE ID OF THE CURRENT
*                                         EXECUTOR INTO THE AVT
*                                         FOR THE RETURN TO THIS
*                                         EXECUTOR
         MVC   AVTEZERO(TWO,RWTGC),OPENERP ID FOR              @Z30X8NM
*                                         ERROR HANDLER INTO THE
*                                         WHERE-TO-GO PARAMETER LIST
         B     XCTLRTN                  BRANCH TO THE XCTL ROUTINE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                  CONSTANTS AND EQUATES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ZERO     EQU   0                        CONSTANT                 X01004
ALL      EQU   15                       MASK FOR ICM OF 4 BYTES  X02004
ONE      EQU   1                        OFFSET OF ONE            S22024
TWO      EQU   2                        OFFSET OF TWO            S22024
THREE    EQU   3                        OFFSET OF THREE          S22024
SHIFT2   EQU   2                        LOGICAL ARITHMETIC       S22024
SHIFT3   EQU   3                        LOGICAL ARITHMETIC       S22024
FOUR     EQU   4                        OFFSET OF 4              S22024
FIVE     EQU   5                        OFFSET OF 5              S22024
SIX      EQU   6                        OFFSET OF SIX            S22024
EIGHT    EQU   8                        OFFSET OF EIGHT          S22024
NINE     EQU   9                        OFFSET OF NINE           S22024
TCAMER0A EQU   10                       TCAM ERROR NO. 10        S22024
TEN      EQU   10                       OFFSET OF TEN            S22024
TCAMER0B EQU   11                       TCAM ERROR NO. 11        S22024
TCAMER0C EQU   12                       TCAM ERROR NO. 12        S22024
TIOT     EQU   12                       VALUE 12                 S22024
TCAMER0D EQU   13                       TCAM ERROR NO. 13        S22024
FORMAT3  EQU   13                       VALUE     13             S22024
FORMAT1  EQU   C'1'                     FORMAT ' DSCB IDENTIFIER S22024
FOURTEEN EQU   14                       OFFSET OF FOURTEEN       S22024
TCAMER0E EQU   14                       TCAM ERROR NO. 14        S22024
CVT      EQU   16                       CVT DISPLACEMENT         S22024
UCBTYPE  EQU   19                       INDEX BYTE OFFSET        S22024
QUECONST EQU   24                       NUMERIC CONSTANT
UNAUTHD  EQU   32                       UNAUTHORIZED INVOKER     Y02027
NEXTCPB  EQU   32                       VALUE 32                 S22024
THIRTY2  EQU   32                       OFFSET OF THIRTY-TWO     S22024
FORM3EXT EQU   44                       VALUE 44                 S22024
DADT     EQU   64                       DEVICE TABLE OFFSET      S22024
SIXTY8   EQU   68                       OFFSET OF SIXTY-EIGHT    S22024
DEBSIZE  EQU   77                       VALUE 77                 S22024
CVTBRET  EQU   82                       BR 14 INSTRUCTION IN CVT S22024
SP230    EQU   230                      SUBPOOL FOR DEB          Y02027
EXERR01  EQU   X'01'                    ERROR NO. 1              S22024
EXERR02  EQU   X'02'                    ERROR NO. 2              S22024
EXERR03  EQU   X'03'                    ERROR NO. 3              S22024
EXERR04  EQU   X'04'                    ERROR NO. 4              S22024
DIRACCES EQU   X'04'                    VALUE X'04'              S22024
EXERR05  EQU   X'05'                    ERROR NO. 5              S22024
OPNDEBID EQU   X'0F'                    IDENTIFIER FOR A DEB
REUS     EQU   X'01'                    OPTCD=R                  S22024
KEY6     EQU   X'60'                    PROTECT KEY 6            Y02027
NONREUS  EQU   X'02'                    OPTCD=L                  S22024
CKP3705  EQU   X'10'                    OPTCD=I                  S22024
CHKPOINT EQU   X'20'                    OPTCD=C                  S22024
ATTRMASK EQU   X'7F'                    HI BIT OFF              SA54471
FULLWORD DC    F'15'                    NUMERIC CONSTANT         S21903
HWORD    DC    H'0'                     NUMERIC CONSTANT         S21903
DDLENGTH DC    H'16'                    NUMERIC CONSTANT         S21903
H20      DC    H'20'                    NUMERIC CONSTANT         S21903
OPIDCNST DC    C'0S'                    ID OF LAST OPEN MODULE   S21903
AMIDCNST DC    C'30'                    ID FOR IGG01930
OPENLD2  DC    C'31'                    ID OF THE SECOND OPEN LOAD
OPENERP  DC    C'33'                    ERROR HANDLER MODULE
         EJECT
         TAVTD                          AVT MACRO
         EJECT
         TTCBD
         EJECT
         TDEBD
         EJECT
*                                                                     *
* PRIVATE IOB DSECT USED ONLY BY DISK OPEN                            *
*                                                                     *
IEDJCIOB DSECT                                                   S22024
JOBFLAG1 DS    C                        FIRST FLAG BYTE          S21903
JOBFLAG2 DS    C                        SECOND FLAG BYTE         S21903
JOBSENSO DS    C                        FIRST SENSE BYTE         S21903
JOBSENS1 DS    C                        SECOND SENSE BYTE        S21903
JOBECBCC DS    C                   COMPLETION CODE
JOBECBPT DS    AL3                 ADDRESS OF THE ECB
JOBFLAG3 DS    C                   I/O ERROR FLAGS
JOBCSW   DS    CL7                 CSW
JOBSIOCC DS    C                   SIO CONDITION CODES
JOBSTART DS    AL3                 ADDRESS OF CHANNEL PROGRAM
JOBRSVD  DS    C                   RESERVED
JOBDCBPT DS    AL3                 ADDRESS OF THE DCB
JOBOPCOD DS    C                   OP CODE
JOBRESTR DS    AL3                 RESTART ADDRESS OF IOS
JOBINCAM DS    H                   BLOCK COUNT
JOBERRCT DS    H                   NUMBER OF ERROR RETRIES
JOBSEEK  DS    CL8                 MBBCCHHR
JOBXECB  DS    F                   ECB
JOBXCC   DS    C                   CURRENT ARM POSITION - CYL
JOBXRETQ DS    AL3                 ADDRESS OF QUEUE OF CPB'S
*                                    AVAILABLE TO DISK END FOR RETRY
JOBXLOCK DS    C                   FLAG BITS
JOBXNEWQ DS    AL3                 ADDR OF CPB QUE BEING BUILT
JOBEND   EQU   *
         EJECT
         TCPBD
         EJECT
FORCORE  DSECT
         IECDSECT
         EJECT
         DCBD  DSORG=TQ                 DCB DSECT
         END
