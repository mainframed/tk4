19RN TITLE  '''IGG019RN''   PCI APPENDAGE'
IGG019RN CSECT
         SPACE 3
*CHANGE ACTIVITY= AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A158200-159600,258200-259500,528000-690100                      S99228
*C235300-235600,241000                                           S99228
*A273100-273116                                                  S22029
*A197500,325300,325600,326500                                    S22025
*A150400-151600,224600-225200,244400-245600                      S22026
*A268200-269600,742500-743500,269500,385150                      S22026
*C200000-210000,213200-215300,228000-234000,240000-240500,       S22026
*C244000,252000,266000,274000-345000,376000-377000,              S22026
*C382000-386100,401000-426000,570000,718000-719000               S22026
*D212000-212400,346000-358000,360000-366000,428000-450000,       S22026
*D504000-514000                                                  S22026
*A391000                                                          M6126
*A588000                                                         S21101
*C186500                                                         S21101
*A618000                                                          M6293
*C187000                                                          M6293
*C068000-072000,158000,164000-168000,476000,487700-487900        S22025
*C710000-715000                                                  S22025
*A323540,323690                                                 SA54277
*A246000                                                        SA55927
*A008000,200000                                                  S21903
*C200000                                                         S21903
*D010000                                                         S21903
*D257000                                                        SA61761
*A258150                                                        SA61761
*A151600                                                        SA52947
*C203000-204000                                                 SA52947
*D257000                                                        SA61761
*A130400-131600,133000,134600-135200,136000-137000,142300-143500,Y02027
*A494000-501500,520200-520620,720200-720400,721500-721800        Y02027
*C521400                                                         Y02027
*D136000,154000,156700-156800,494000-502000,520200-520640        Y02027
*D431750-431760                                                @ZA02070
*A431940                                                       @ZA02070
*A518040                                                       @SA62375
*D151600                                                       @SA70322
*A163600,285000                                                @SA70322
*C517720,517840                                                @SA70322
*D517650,517680                                                @SA70322
*C517960,518000                                                @SA70322
*C517920                                                       @SA70322
*D434490,434510                                                @ZA03738
*C434340                                                       @ZA03738
*D451120                                                       @ZA03738
*A451060                                                       @ZA03738
*C452440                                                       @ZA03738
*A517520                                                       @SA70322
*A516320                                                       @YA08787
*D516280                                                       @YA08787
*A215300                                                        OZ07068
*D198220-199270                                                 OZ07068
*C433050-433110                                                @OS76474
*D458000                                                       @OZ07832
*A458600                                                       @OS76718
*C452120,A452380                                               @OZ09940
*C418000                                                       @OX12568
         SPACE 3
***********************************************************************
*                                                                     *
*MODULE-NAME= IGG019RN                                           S21903
*                                                                S21903
*DESCRIPTIVE-NAME= TCAM PCI APPENDAGE                            S21903
*                                                                S21903
*COPYRIGHT= 'NONE'                                               S21903
*                                                                     *
*STATUS -- CHANGE LEVEL 5                                        Y01004
*                                                                     *
*FUNCTION -- IF PCI ON A WRITE IDLE LOOP - TO POST INITIAL REQUESTED  *
*   BUFFERS TO MH.                                                    *
*   TO REMOVE BUFFERS FROM THE CHANNEL PROGRAM WHICH HAVE ALREADY     *
*   BEEN PROCESSED AND IF REQUIRED, TO REQUEST ADDITIONAL BUFFERS.    *
*                                                                     *
*ENTRY POINTS -- 'IGG019RN' TO PERFORM THE FUNCTIONS OUTLINED ABOVE.  *
*   ENTRY IS BY A BR R15.                                             *
*                                                                     *
*INPUT -- IOS WILL HAVE THE FOLLOWING REGISTERS INITIALIZED UPON      *
*   ENTRY TO AN APPENDAGE.                                            *
*   R1 - RQE ADDRESS                                                  *
*   R3 - DEB ADDRESS                                                  *
*   R4 - DCB ADDRESS                                                  *
*   REGISTERS 0 - 9 MUST REMAIN THE SAME UPON RETURN TO IOS           *
*   REGISTER 9 MAY BE CHANGED AND MADE ZERO UPON RETURN TO IOS        *
*                                                                     *
*OUTPUT -- BUFFERS WILL BE ON THE DISABLED READY QUEUE POSTED TO THE  *
*   BUFFER RETURN QCB OR TO MH.  FOR AOS, THE REAL TIC AND DATA AD-   *
*   DRESSES IN THE CCW'S IN THESE BUFFERS WILL HAVE BEEN TRANSLATED   *
*   TO VIRTUAL.                                                       *
*   IF ADD WAS SPECIFIED IN THE LINE GROUP DCB, THE ERB WILL BE       *
*   POSTED TO REQUEST ADDITIONAL BUFFERS (FROM BUFFER REQUEST OR      *
*   DISK I/O) WITH A COUNT OR IF THE ERB WAS ALREADY POSTED, THE      *
*   COUNT WILL BE INCREASED.                                          *
*                                                                     *
*EXTERNAL ROUTINES -- IEAPTRV - AOS REAL-TO-VIRTUAL SUBROUTINE.       *
*                  -- TNTDCODE -                                      *
*                  -- IGG019R0 - SCAN SUBROUTINE OF TCAM LINE END     *
*   APPENDAGE - TO SCAN BSC LINE CONTROL FOR A START SEQUENCE, WHEN   *
*   THE BSC LINE IS RECEIVING.                                        *
*                  -- IEA0PT011 - POST ROUTINE - TO CROSS MEMORY Y02027
*   POST  TCAM'S ECB COMPLETE.                                   Y02027
*                                                                     *
*EXITS-NORMAL -- RETURN TO IOS VIA BR R14                             *
*                                                                     *
*EXITS-ERROR -- NONE                                                  *
*                                                                     *
*TABLES/WORK AREAS -- TCCWD,TAVTD,DCBD,TPRIOR                         *
*   AVTREADD,AVTBFRTB,AVTDSIOB                                        *
*                                                                     *
*ATTRIBUTES -- REUSABLE,REFRESHABLE, DISABLED                         *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICULAR REPRESENTATION OF THE EXTERNAL CHARACTER SET.          *
*                                                                     *
***********************************************************************
*                                                                     *
*        REGISTERS                                                    *
*                                                                     *
R0       EQU   0
R1       EQU   1
RLCB     EQU   2                        LCB ADDRESS
RDEB     EQU   3                        DEB ADDRESS              Y01004
RDCB     EQU   4                        DCB ADDRESS
R5       EQU   5
R6       EQU   6
RPREFIX  EQU   6                        BUFFER ADDRESS           Y01004
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                                                Y01004
RCCODE   EQU   10                       CONDITION CODE FOR CROSS Y02027
*                                       MEMORY POST              Y02027
RTCX     EQU   10                       ADDR OF THE TCAM CVT     Y02027
*                                       EXTENTION                Y02027
R11      EQU   11                       WORK REG
RECB     EQU   11                       ADDR OF ECB FOR XMPOST   Y02027
RBASE    EQU   12                       BASE REG
RERRET   EQU   12                       ADDR OF ERROR ROUTINE   Y02027
*                                       FOR XMPOST FAILURE       Y02027
RASCB    EQU   13                       ADDR OF TCAM'S ADDRESS   Y02027
*                                       SPACE CONTROL BLOCK      Y02027
RAVT     EQU   13                       AVT BASE                 Y01004
RSAVE    EQU   13                       ADDRESS OF SAVE AREA     Y02027
*                                       PASSED BY IOS            Y02027
R14      EQU   14                       RETURN TO IOS
R15      EQU   15                       WORK REG
CURR     EQU   15                       ADDR OF CURRENT ELEMENT  Y02027
*                                       ON THE ASYNCHRONOUS      Y02027
*                                       READY QUEUE
RCVT     EQU   15                       ADDR OF COMM VECTOR TBL  Y02027
RXMPOST  EQU   15                       ADDR OF XMPOST RTN       Y02027
*
***********************************************************************
PCIADDR  EQU   X'20'                    PCI ADD FOR RCV
PCIADDS  EQU   X'10'                    PCI ADD FOR SEND
PCIADDXR EQU   X'80'                    PCI = X FOR RVC          S22026
PCIADDXS EQU   X'40'                    PCI = X FOR SEND         S22026
NOTTIC   EQU   7                        TEST FOR TIC OP CODE    SA52947
POSTED   EQU   X'40'
ALL      EQU   15                       MASK FOR 370 INSTRUCTION Y01004
AD       EQU   7                        MASK FOR 370 INSTRUCTION Y01004
LCIN     EQU   X'80'                    MASK FOR LINE CNTRL OPT  Y01004
CEAP     EQU   12                       INDEX TO CHANNEL END IN  Y01004
*                                       APPENDAGE VECTOR TABLE   Y01004
POSTAD   EQU   X'98'                    OFFSET IN CVT TO OS POST Y01004
NOTIC    EQU   X'07'                    OTHER THAN TIC OP CODE   A52947
VRTIC    EQU   X'FF'-X'80'              MASK TO TEST VIRTUAL TIC Y01004
REALTIC  EQU   X'88'                    TIC OP CODE, PLUS FLAG   Y01004
*                                       FOR REAL TIC-TO ADDRESS  Y01004
READ     EQU   X'02'                    CCW OP CODE FOR READ     Y02027
ESOHCH   EQU   26 .                                              S22026
RSOHCH   EQU   29                       OFFSET SOH%R SEQUENCE    S99228
CEDE     EQU   X'0C'                    STATUS=CHAN END, DEVICE END TSO
DLEEOTCH EQU   16                       OFFSET TO SEQUENCE
EOTCH    EQU   0                        OFFSET TO SEQUENCE IN SCT
TOTESOH  EQU   27                       SOH % / FOR TOTE         S21903
CSOHCH   EQU   28                       INDEX TO SOH % C         S99238
STXENQCH EQU   11                       OFFSET TO SEQUENCE IN SCT
IN       EQU   X'80'                    MASK FOR LCIN
X80      EQU   X'80'                    MASK FOR TS SWITCH
DISDLEOT EQU   X'01'                    FLAG TO WRITE DLE EOT
STAT1    EQU   X'0A'                    DB, US, DE MASK          S99228
STAT2    EQU   X'3E'                    CR, IR, EC, DC, CC MASK  S99228
SS0      EQU   6                        SENSE 0 OFFSET           S99228
SS1      EQU   7                        SENSE 1 OFFSET           S99228
C3270    EQU   X'04'                    3270 DEVICE              S99228
CNOIDLES EQU   X'02'                    NO IDLES DEFINED         S99228
PCIFLAG  EQU   X'80'                    PCI STATUS IN CSW
INVSTART EQU   8                        OFFSET TO START OF       Y02027
*                                       INVITATION LIST          Y02027
LOOKOFF  EQU   X'08'                    LEA OFFSET LOOKER ADCON  S99228
CUMASK   EQU   X'01'                    DCT GENERAL POLL INDIC   S99228
SORCOFF  EQU   X'0C'                    LEA OFFSET SOURCER ADCON S99228
ZERO     EQU   0                                                 S99228
ONE      EQU   1                        BUMP PAST LENGTH         S22025
TWO      EQU   2                        OFFSET OF INVLIST ENTRY  S22025
*                                            SIZE                S22025
THREE    EQU   3                        OFFSET TO CSW STATUS IN  X02004
*                                       THE LCB                  X02004
FOUR     EQU   4                        NUM OF BITS IN HALFBYTE  S22025
LOOPCT   EQU   4                        COUNT FOR LOOP LOOKING   S22025
*                                            FOR EOT             S22025
CTLLEN   EQU   8                        LENGTH OF INVLIST CTL WD S22025
UCBOFF   EQU   28                       OFFSET TO UCB REGISTER   X02004
UCBTYPE  EQU   16                       OFFSET TO UCB TYPE FIELD X02004
AUTO     EQU   X'80'                    AUTOPOLL DEVICE - UCB
FIVE     EQU   5                        FOR USE IN               Y01004
SEVEN    EQU   7                        CONSTANT                 Y01004
THRTN    EQU   13                      LCBCPA OFFSET TO SIO CCW  Y01004
TWNTY4   EQU   24                       LCBCPA OFFSET TO POLL CCWY01004
TWNTY    EQU   20                       SCT OFFSET               Y01004
THIRTY2  EQU   32                       ADDRESSING               Y01004
HALF     EQU   3                        MASK FOR ICM HALF WORD   Y01004
CCNONZ   EQU   7                        NON ZERO CONDITION CODE  Y01004
CCZRO    EQU   8                        ZERO CONDITION CODE      Y01004
CHPGMCHK EQU   X'20'                    MASK TO CHK CHANNEL PROG Y01004
*                                       CHECK                    Y01004
HI       EQU   8                        MASK FOR ICM HI ORDER    Y02027
         EJECT
EOA      EQU   X'16'                    S/S EOA CHARACTER        S22025
ENDOLIST EQU   X'FE'                    END OF INVLIST         @SA70322
         USING IEDQQCB,R6               QCB BASE                 S22025
         USING IEDQTNTD,R7              TERMNAME TABLE BASE      S22025
         USING IHADCB,RDCB              DCB BASE                 S22025
         USING IEDQLCB,RLCB             LCB ADDRESS
         USING IEDQAVTD,RAVT
         USING IEDQPRF,RPREFIX
         USING DEBNMSUB,RDEB                                     Y01004
         USING LCBFLAG1,RLCB                                     Y01004
         DC    A(END19RN-IGG019RN)      LENGTH OF APPENDAGE      X02004
         USING *,R15                                             Y01004
         SPACE 1                                                 Y01004
         STM   R0,R15,ZERO(RSAVE)       SAVE REGISTERS           Y02027
         TM    LCBSTAT1,LCBSENDN        TEST LINE FOR SEND OR    Y01004
*                                       RECEIVE STATE USING THE  Y01004
*                                       IOB BASE TO SET THE      Y01004
*                                       CONDITION CODE FOR THE   Y01004
*                                       FOLLOWING BAL TO ENABLE  Y01004
*                                       SPM TO BE USED           Y01004
         BAL   RBASE,TAG                SET BASE AND BYPASS ID   Y01004
BASEQU   EQU   *                                                 Y02027
*                                                                Y01004
         DROP  R15                                               Y01004
         USING *,RBASE                                           Y01004
IGG019RN IEDHJN
TAG      DS    0H                                                Y01004
         L     RCVT,CVTPTR              ADDR OF CVT              Y02027
         L     RTCX,AVTCVTPT(RCVT)      ADDR OF TCAM ADDRESSES   Y02027
         USING IEDQTCX,RTCX                                      Y02027
PCILOCK  EQU   *                                                 Y02027
         TS    TCXDSAVE                 PCI ACTIVE ON OTHER CPU  Y02027
         BNZ   PCILOCK                  YES, LOOP TILL DONE      Y02027
         STCM  RSAVE,AD,TCXDSAVE+ONE    SAVE ADDR OF SAVE AREA   Y02027
         L     RAVT,TCXAVT              PICKUP AVT ADDRESS       Y02027
         DROP  RTCX                                              Y02027
         LA    RLCB,0(RLCB)             CLEAR FOR FLAG           Y01004
         SH    RLCB,SIZE                SET TO LCB BASE
         USING IEDQLCB,RLCB                                      Y01004
         TS    LCBPCILK                 IS LCB LOCKED FOR PCI    Y02027
         BNE   EXIT                     YES, IGNORE THIS PCI     Y02027
         SR    R11,R11                  CLEAR REGISTER           Y02027
         ICM   R11,SEVEN,LCBCSW         PICKUP CSW ADDRESS       Y02027
BACKUP   EQU   *                                                 S22026
         SH    R11,EIGHT                SUB EIGHT                S22026
         TM    PRFOPCDE-IEDQPRF(R11),NOTIC  WAS PCI ON TIC CCW   A52947
         BZ    BACKUP                   BRANCH YES               A52947
         SPACE 1                                                 S22026
***********************************************************************
*        IF PCI IS RECEIVED ON A READ RESPONSE CCW IN TRANSPARENT     *
*        MODE THE CSW SHOULD BE RESET TO THE WRITE DLE ETB CCW        *
***********************************************************************
         SPACE 1                                                 S22026
         LA    R11,0(R11)               CLEAR FOR COMPARE
         LA    R10,LCBCPA+THIRTY2       ADDRESS OF READ RESP CCW Y01004
         CLR   R10,R11                  PCI RECEIVED ON RESPONSE Y01004
*                                       CCW                      Y01004
         BE    BACKUP                   BR IF YES -- SUB EIGHT   Y01004
         STCM  R11,AD,LCBCSW            UPDATE CSW               Y02027
         SR    R15,R15                  CLEAR                  @G36XRIB
         BCTR  R15,0                    SET FF IN HIGH ORDER   @G36XRIB
         ICM   R15,AD,AVTIOT+1          IS I/O TRACE ACTIVE    @G36XRIB
         BZ    NOTRACE                  BRANCH NO               OZ07068
         BALR  R14,R15                  LINK TO I/O TRACE       OZ07068
         SPACE 1                                                OZ07068
NOTRACE  EQU   *                                                OZ07068
         SR    R10,R10                                           Y01004
         LR    R5,R10                                            Y01004
         LR    R9,R10                   CLEAR WORK REGISTER      Y01004
         ICM   RPREFIX,AD,LCBLSPCI      PICK UP LAST PCI         Y01004
         TM    LCBFLAG3,LCBOBRRD        TPER RECORD              Y01004
         BO    NOFREE                   YES, IGNORE THIS PCI     Y01004
NEXBFR   EQU   *                                                 Y01004
         IC    R5,PRFNBUNT              NUMBER OF UNITS          Y01004
         NI    PRFFLAGS,X'FF'-CCWPCI    RESET PCI FLAG           Y01004
COMPAR   EQU   *                                                 Y01004
         CLM   RPREFIX,AD,LCBCSW        THIS INTERRUPTING CCW    Y01004
         BE    FOUND                    BRANCH YES               Y01004
*                                                                Y01004
         ICM   R1,ALL,PRFTIC            TIC TO ADDRESS           Y01004
         BNM   NOCONV                   NO CONVERSION IF VIRTUAL Y01004
*                                                                Y01004
         BAL   R14,VIRTUAL              CONVERT ADDRESS          Y01004
*                                                                Y01004
NOCONV   EQU   *                                                 Y01004
         LR    RPREFIX,R1               SAVE UNIT ADDRESS        Y01004
         BCT   R5,COMPAR                CHECK NEXT UNIT          Y01004
*                                                                Y01004
         LA    R9,ONE(R9)               ADD TO BFRS TO FREE      Y01004
         TM    PRFFLAGS,CCWPCI           HAS REQUEST FOR BUFFER  Y01004
*                                       ALREADY BEEN MADE        Y01004
         BNO   NEXBFR                   YES - DON'T ADD TO COUNT Y01004
*                                                                Y01004
         BCT   R10,NEXBFR               COUNT BUFFERS AND BRANCH Y01004
*                                                                Y01004
FOUND    EQU   *                                                 Y01004
         LR    R0,R9                    SAVE NUMBER OF BUFFERS   Y01004
         L     R11,LCBSCBA-ONE          SCB ADDRESS              Y01004
         USING IEDQSCB,R11                                       Y01004
         SPM   RBASE                    IS LINE RECEIVING        Y01004
         BZ    CKAUTOPL                 BRANCH YES               Y01004
*                                                                Y01004
CONTINUE EQU   *                                                 Y01004
         LA    R15,EXIT                 ASSUME NO BUFFERS TO     Y01004
*                                       DEALLOCATE               Y01004
         LTR   R0,R0                    ANY BUFFERS              Y01004
         BZ    OKFREE                   BRANCH NONE TO DEALLOCATEY01004
*                                                                Y01004
         LA    R15,RETURN               SET TO DEALLOCATE BUFFERSY01004
         TM    LCBSTAT2,LCBSYNC         BSC LINE                 Y01004
         BNO   OKFREE                   BRANCH NO                Y01004
*                                                                Y01004
         SPM   RBASE                    LINE IN SEND STATE       Y01004
         BO    HOLDBFR                  BRANCH YES               Y01004
*                                                                Y01004
         TM    SCBSTATE,SCBTRANP        TRANSPARENT MODE         Y01004
         BO    OKFREE                   BRANCH YES               Y01004
*                                                                Y01004
HOLDBFR  EQU   *                                                 Y01004
         BCT   R0,OKFREE                DECREMENT BUFFERS TO FREEY01004
*                                       AND BRANCH IF NOT ZERO   Y01004
NOFREE   EQU   *                                                 Y01004
         LA    R15,EXIT                 SET TO NOT DEALLOCATE    Y01004
*                                       BUFFERS                  Y01004
OKFREE   EQU   *                                                 Y01004
         LPR   R10,R10                  SET COUNT POSITIVE       Y01004
         SPM   RBASE                    SEND STATE               Y01004
         BO    SNDCHK                   BRANCH YES               Y01004
*                                                                Y01004
         TM    DCBPCI,PCIADDR+PCIADDXR  ADD ON RECEIVE SPECIFIED Y01004
         BCR   CCZRO,R15                BRANCH NO                Y01004
*                                                                Y01004
         TM    LCBCSW+THREE,ONE         WAS EOT RECEIVED         Y02027
         BCR   CCNONZ,R15               BRANCH YES               Y01004
*                                                                Y01004
         TM    LCBCSW+FOUR,CHPGMCHK     CHANNEL PROGRAM CHECK    Y02027
         BZ    POSTST                   BRANCH NO                Y01004
*                                                                Y01004
         TM    LCBERBST,LCBDLNKN        IS ERB AVAILABLE         Y01004
         BCR   CCNONZ,R15               BRANCH NO                Y01004
*                                                                Y01004
POSTST   EQU   *                                                 Y01004
         LA    R9,LCBERBCT+ONE          ADDR OF DISABLED COUNT   Y01004
         TM    LCBERBST,LCBDLNKN        ERB AVAILABLE            Y01004
         BNO   SKIPPOST                 BRANCH IF NO             Y01004
         SR    R1,R1                                             Y01004
         LA    R5,ALL                   MASK TO CLEAR BUFIN      Y01004
         IC    R1,DCBBUFOU              BUFOUT REQUEST           Y01004
         NR    R1,R5                    CLEAR OUT BUFIN          Y01004
         LA    R7,AVTDSIOB              SET TO POST ERB TO IEDQFAY01004
         SPM   RBASE                    LINE IN SEND STATE       Y01004
         BO    USESEND                  BRANCH YES               Y01004
CONT     EQU   *                                               @SA70322
*                                                                Y01004
         LA    R7,AVTBFREB              SET TO REQUEST BUFFERS   Y01004
         IC    R1,DCBBUFIN              PICK UP BUFIN            Y01004
         SRL   R1,FOUR                  CLEAR OUT BUFOUT         Y01004
USESEND  EQU   *                                                 Y01004
         CLI   LCBERBPY,PRIINTRQ        FIRST PCI                Y01004
         MVI   LCBERBPY,PRISBPCI        SET PRIORITY             Y01004
         BNE   SETPOST                  BRANCH IF NO             Y01004
         MVI   LCBERBPY,PRIFSPCI        SET FIRST PCI            Y01004
         IC    R5,DCBBUFMA              BUFMAX REQUEST           Y01004
         SR    R5,R1                    GET DIFFERENCE           Y01004
         AR    R10,R5                   ADD TO BE DEQUEUED       Y01004
SETPOST  EQU   *                                                 Y01004
         LTR   R10,R10                  ANY BUFFERS TO REQUEST   Y01004
         BCR   CCZRO,R15                BRANCH NO - EXIT         Y01004
         LR    R14,R15                                           Y01004
         LA    R15,POST                 SET TO POST ERB          Y01004
         LA    RPREFIX,LCBERB           ELEMENT TO POST          Y01004
         BCTR  R9,ZERO                  SET TO ENABLED COUNT     Y01004
SKIPPOST EQU   *                                                 Y01004
         IC    R5,0(R9)                 GET COUNT                Y01004
         NI    LCBERBST,LCBDLNKF        MARK ERB POSTED          Y01004
         TM    LCBERBCT+ONE,LCBDCNT     DISABLED COUNT USED      Y01004
         BZ    NOLOCK                   BRANCH IF NO             Y01004
         LA    R9,LCBERBCT              ENABLED COUNT            Y01004
         IC    R5,0(R9)                 GET COUNT                Y01004
NOLOCK   EQU   *                                                 Y01004
         AR    R5,R10                   ADD COUNTS               Y01004
         STC   R5,0(R9)                 UPDATE COUNT             Y01004
         BR    R15                      RETURN                   Y01004
*                                                                Y01004
SNDCHK   EQU   *                                                 Y01004
         TM    DCBPCI,PCIADDS+PCIADDXS  PCI REQUEST SET          Y01004
         BCR   CCZRO,R15                BRANCH NO                Y01004
*                                                                Y01004
         L     R9,LCBSCBA-1             SCB ADDR                 S22026
         TM    SCBQTYPE-IEDQSCB(R9),SCBCONC                      S22026
*                                       CONC                     S22026
         BZ    CKERBST                  BRANCH IF NOT CONC       S22026
         L     R9,SCBDESTQ-1-IEDQSCB(R9) QCB ADDR                S22026
         AH    R9,QCBEXTO-IEDQQCB(R9)   QCBE ADDR                S22026
         L     R9,QCBECONC-1-IEDQQCBE(R9)                        S22026
*                                       CONC TERM ENTRY          S22026
         L     R9,TRMDESTQ-1-IEDQTRM(R9)                         S22026
         LA    R15,RETURN               SET REG TO RETURN        S22026
         LA    R11,DRQBUFCT-IEDQDRQ(R9) SET R11 TO DRQBUFCT      S22026
         TM    DRQFLAG3-IEDQDRQ(R9),DRQFSPCI                     S22026
*                                       FIRST PCI FOR CONC MSG   S22026
         BZ    NOTFRST                  BRANCH IF NO             S22026
         NI    DRQFLAG3-IEDQDRQ(R9),255-DRQFSPCI                 S22026
*                                       RESET FIRST PCI FLAG     S22026
         SR    R7,R7                                             Y01004
         LA    R5,ALL                                            Y01004
         IC    R7,DCBBUFOU              GET BUFOUT COUNT         Y01004
         NR    R7,R5                    CLEAR OUT BUFIN          Y01004
         IC    R5,DCBBUFMA                                       Y01004
         SR    R5,R7                    BUFMAX LESS BUFOUT       Y01004
         AR    R10,R5                                            Y01004
NOTFRST  EQU   *                                                 Y01004
         TM    DRQFLAG3-IEDQDRQ(R9),DRQERBAV  ERB AVAILABLE      S22026
         BO    CONCADD                  BRANCH IF NO             S22026
         TM    LCBERBST,LCBDLNKN        ERB AVAILABLE            S22026
         BZ    CONCADD                  BRANCH IF NO             S22026
         TM    LCBERBST,LCBEOMSG        ERB AVAILABLE            S22026
         BO    CONCADD                  BRANCH IF NO             S22026
         NI    LCBERBST,LCBDLNKF        MARK ERB NOT AVAILABLE   S22026
         MVI   LCBERBPY,PRIINTRQ-1      SET ERB PRIORITY         S22026
         LA    R15,POST                 SET RETURN REG           S22026
*                                                                S22026
CONCADD  EQU   *                                                 S22026
         IC    R7,0(R11)                GET COUNT                S22026
         AR    R7,R10                   ADD COUNTS               S22026
         STC   R7,0(R11)                UPDATE COUNT             S22026
         L     R7,AVTCSCH               CONC SCH ADDR+2          S22026
         BCTR  R7,0                    SUB ONE                   S22026
         BCTR  R7,0                    SUB ONE                   S22026
         LA    RPREFIX,LCBERB           SET POST REG             S22026
         LA    R14,RETURN               SET SUBROUTINE RETURN    S22026
         BR    R15                      EXIT TO POST OR RETURN   S22026
          SPACE 2
CKERBST  EQU   *                                                 S22026
         TM    LCBERBST,LCBEOMSG        EOT READ FROM Q          Y01004
         BZ    POSTST                   BRANCH NO                Y01004
*                                                                Y01004
         BR    R15                      EXIT                     Y01004
*                                                                Y01004
RETURN   EQU   *                                                 Y01004
         LTR   R10,R0                   BUFFERS TO DEALLOCATE    Y01004
         BZ    EXIT                     EXIT - NO BUFFERS TO FREEY01004
         SPM   RBASE                    SENDING                  Y01004
         BO    CHKADDXS                 BRANCH IF YES            S22025
         TM    DCBPCI,PCIADDXR          PCI=X ON RECEIVE         S22025
         B     CHKCOND                  BRANCH TO CHK COND       S22025
CHKADDXS EQU   *                                                 S22025
         TM    DCBPCI,PCIADDXS          PCI=X ON SEND            S22025
CHKCOND  BO    EXIT                     BRANCH IF YES            S22025
         ICM   R11,AD,LCBLSPCI          FIRST BUFFER TO FREE     Y01004
BFRSCON  EQU   *                                                 Y01004
         SR    R7,R7                    CLEAR REGISTER           Y01004
         LR    RPREFIX,R11              NEXT BUFFER ADDRESS      Y01004
         IC    R5,PRFNBUNT              NUMBER OF UNITS IN BUFFERY01004
UNTSCON  EQU   *                                                 Y01004
         ICM   R1,ALL,PRFTIC-IEDQPRF(R11) REAL TIC ADDRESS       Y01004
         BNM   NOCONV2                  BRANCH IF VIRTUAL ADDRESSY01004
*                                                                Y01004
         BAL   R14,VIRTUAL              CONVERT TO VIRTUAL       Y01004
*                                                                Y01004
         STCM  R1,AD,PRFTIC+1-IEDQPRF(R11) STORE VIRTUAL ADDRESS Y01004
         NI    PRFTIC-IEDQPRF(R11),VRTIC SET VIRTUAL TIC OP CODE Y01004
NOCONV2  EQU   *                                                 Y01004
         SPM   RBASE                    LINE IN SEND STATE       Y01004
         BNZ   SNDLOOP                  BRANCH IF SEND           Y01004
*                                                                Y01004
         CLM   R11,AD,LCBCPA+THRTN      WAS SIO DONE ON THIS UNITY01004
         BNE   NOSIO                    NO                       Y01004
         LR    R7,R11                   INDICATE SCAN REQ'D ON   Y01004
*                                       THIS BUFFER              Y01004
NOSIO    EQU   *                                                 Y01004
         LR    R9,R1                    SAVE NEXT UNIT/BUFFER    Y01004
         BAL   R14,COMMON               USE COMMON CODE TO CHECK Y01004
*                                       I/O DATA ADDRESS         Y01004
*                                                                Y01004
         ST    R1,PRFIOADR-IEDQPRF-1(R11)  SET VIRTUAL ADDR AND  Y01004
*                                       CLEAR OP CODE FOR FLAG   Y01004
         LR    R0,R11                   SAVE CURRENT UNIT ADDRESSY01004
         LR    R11,R9                   SET UP NEXT UNIT ADDRESS Y01004
         BCT   R5,UNTSCON               CONVERT NEXT UNIT- IF ONEY01004
*                                       LAST IN THIS BUFFER      Y01004
         CLM   R9,AD,LCBCSW             IS THIS THE PCI BUFFER   Y01004
         LR    R9,R7                    SET SCAN REQUIRED FLAG   Y01004
         BNE   NOTEND                   BRANCH NO                Y01004
         LR    R7,R0                    RESET NEXT UNIT ADDRESS  Y01004
*                                                                Y01004
         AH    R1,PRFCOUNT-IEDQPRF(R7)  ADD CCW COUNT            Y01004
         BCTR  R1,ZERO                  POINT TO LAST CHARACTER  Y01004
*                                       RECEIVED                 Y01004
         IC    R7,0(,R1)                PICK UP DATA CHARACTER   Y01004
         L     R1,DCBSCTAD-1            SPECIAL CHARACTERS TABLE Y01004
         LA    R15,FOUR                 SET LOOP CONTROL         Y01004
CHECKCH  EQU   *                                                 Y01004
         SR    R14,R14                  CLEAR FOR ADDRESSING     Y01004
         IC    R14,TWNTY(R15,R1)        CHARACTER OFFSET         Y01004
         LTR   R14,R14                  SEQUENCE DEFINED         Y01004
         BZ    NEXT                     BRANCH NO                Y01004
*                                                                Y01004
         AR    R14,R1                   ADDRESS OF SEQUENCE      Y01004
         CLM   R7,ONE,ONE(R14)          IS THIS THE CHARACTER    Y01004
         BE    CONVREAL                 BRANCH YES               Y01004
*                                                                Y01004
NEXT     EQU   *                                                 Y01004
         BCT   R15,CHECKCH              CHECK NEXT SEQUENCE      Y01004
*                                                                Y01004
NOTEND   EQU   *                                                 Y01004
         LTR   R9,R9                    IS SCAN REQ'D ON THIS BFRY01004
         BZ    NOSCAN                   NO, POST                 Y01004
*                                                                Y01004
         TM    LCBSTAT2,LCBSYNC         BSC LINE                 Y01004
         BO    PREPSCAN                 BRANCH-YES             @OX12568
         STM   R0,R15,SAVEREG+FOUR      SAVE REGISTERS         @OX12568
         B     SCANEND                  BRANCH                 @OX12568
PREPSCAN EQU   *                                               @OX12568
*                                                                Y01004
         TM    LCBMSGFM,LCBVSTRT+LCBRSTRT VALID SEQUENCE RECEIVEDY01004
         BNZ   NOSCAN                   BRANCH YES               Y01004
*                                                                Y01004
         SPACE 1                                                 Y01004
***********************************************************************
*        FOR BISYNC RECEIVE ONLY A SCAN ROUTINE MUST BE EXECUTED      *
*        PARAMETERS -- ADDRESSABILITY - R5  RETURN - R10  LCB - R2    *
*              DEB - R3                                               *
*        WORK -         R3, R6, R7, R8, R9, R11                       *
***********************************************************************
*
*        REGISTER EQUATES
*
RWKA     EQU   3
RA       EQU   7                        WORK REGISTER
RB       EQU   8                        WORK REGISTER
RC       EQU   9                        WORK REGISTER
RD       EQU   10                       WORK REGISTER
RE       EQU   11                       WORK REGISTER
         USING IEDQLCBX,RE                                       S99228
         SPACE 1                                                 S22026
         BAL   R14,COMMON               USE COMMON CODE TO CHECK Y01004
*                                       I/O DATA ADDRESS         Y01004
         ST    R1,PRFIOADR-IEDQPRF-1(R11)   AND STORE            Y01004
         SPACE 1                                                 Y01004
         STM   R0,R15,SAVEREG+FOUR      SAVE REGISTERS           S99228
*                                       BUFFERS                  Y01004
SCAN     EQU   *
*    SCBTRNSP OR SCBNONTR IS SET UPON RECEIPT OF FIRST BLOCK OF DATA
* AND RESET IN BUFFER DISPOSITION.  IT'S PURPOSE IS TO DETERMINE
* LCBISZE AND TYPE OF MSG RECEIVED FOR SUBSEQUNET CONTINUE SEQUENCES
* I/O GENERATOR MIGHT BUILD A READ OF COUNT 1 OR 2 AFTER WRITE ACK/NAK
* IF LCOUT IS IN USE.  ON SUBSEQUENT BLOCKS OF DATA THE SCAN ROUTINE
* LOOKS FOR LINE CONTROL CHARACTERS IN LCBERCCW+12 IF LCOUT IS IN USE.
*     LCBVSTRT OR LCBRSTRT IS SET BY SCAN TO INFORM PCI APPENDAGE
* ON SUBSEQUENT PCI'S AND LINE END THAT SCAN HAS COMPLETED.
*    WHEN LCBVSTRT IS SET, ONE OF THE FOLLOWING SILL ALSO BE SET:
* LCBTTD,LCBENQ,LCBEOT,LCBOLT.  LCBRSTRT IS SET WHEN AN INVALID
* START CHARACTER IS DETECTED OR IF USER IS NOT MAINTAINING
* TRANSPARENCY OR NON-TRANSPARENCY FOR THIS MESSAGE.  THESE BITS ARE
* RESET IN ACTIVATE.
         SR    RB,RB                    CLEAR WORK REGISTER
         L     RD,DEBAPPAD-DEBNMSUB(,RWKA) APPENDAGE TABLE       Y02027
         TM    TWO(RD),X80              IS ALTMH SPECIFIED       Y02027
         BZ    DCBMHLC                  BRANCH NO                S22029
         TM    LCBSTAT2,LCBDIAL         DIAL LINE?               S22029
         BO    DCBMHLC                  BRANCH YES               S22029
         NC    LCBTTCIN,LCBTTCIN        IS CONNECTED INDEX ZERO  S22029
         BZ    DCBMHLC                  YES - USE OWNING MH LC   S22029
* THIS ROUTINE GETS THE ADDRESS OF THE DESTINATION QCB           S22029
         LH    RC,LCBTTCIN .            GET CONNECTED INDEX      S22029
         L     RA,AVTRNMPT .            GET TNT CODE BASE        S22029
         BAL   RPREFIX,TNTDCODE-IEDQTNTD(RA) .GO GET TERM TABLE  S22029
*                                       ENTRY                    S22029
         L     RE,AVTEZERO(RB) .        GET ADDR OF DEST QCB     Y02027
         TM    QCBDSFLG-IEDQQCB(RE),QCBALTMH IS TERMINAL         S22029
*                                       CONNECTED TO ALTMH       S22029
         BZ    DCBMHLC .                NO - USE OWNING MH LC    S22029
         LA    RD,ONE(,RD)              USE ALTMH OPTIONS        Y02027
DCBMHLC  EQU   * .                                               S22029
         L     RC,LCBSCBA-1             SCB ADDR               @ZA02070
         USING IEDQSCB,RC                                      @ZA02070
         MVC   LCBERCCW+1(ONE),0(RD)    SAVE STARTMH OPTIONS     Y02027
         SR    RB,RB                    CLEAR FOR IC             Y02027
         L     RPREFIX,LCBLSPCI-1 .     GET HEADER BUFFER        S21101
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR TYPE MESSAGE DETERMINEDS21101
         IC    RB,LCBISZE .             GET IDLES RESERVED       S21101
         LA    RWKA,PRFSHDR(RB) .       SET INITIAL SCAN IF FIRSTS21101
         ST    RWKA,LCBERCCW+4 .        SAVE IT FOR LATER        S21101
         BZ    NOTSET .                 BRANCH VERY FIRST BLOCK  S21101
         SPACE 1                                                 S21101
         TM    PRFSTAT1,PRFNHDRN .      HEADER BUFFER            S21101
         BO    SET .                    BRANCH IF NO             S21101
         SPACE 1                                                 S21101
         TM    SCBQTYPE,SCBBFMM .       MIDDLE OF MESSAGE        S21101
         BZ    SET .                    BRANCH IF NO             S21101
*                                                                S21101
*        THE FOLLOWING CODE IS EXECUTED FOR INPUT BUFFERED       S21101
* TERMINAL SUPPORT SUCH AS ENQUIRY MODE ON 2770.  WE ARE READING S21101
* A SUBSEQUNET BLOCK OF A MESSAGE AND THE HEADER BUFFER MUST BE  S21101
* CONVERTED TO A TEXT BUFFER.  THE CCW IS REBUILT OR POSSIBLE    S21101
* ERROR RETRIES BY ERP AND FOR RECEPTION OF TTD, ENQ, ETC.  A    S21101
* FLAG IS SET IN THE TIC FIELD (PRFBFMM) TO INDICATE TO MH THAT  S21101
* IDLES FOR THIS BUFFER ARE SET IN LCBISZE.                      S21101
*                                                                S21101
         TM    PRFTIC,PRFBFMM .         MID MSG SITUATION        S22025
         BO    SET .                    BRANCH IF YES            S22025
*                                                                S22025
         OI    PRFTIC,PRFBFMM .         SET HEADER CONVERTED     S22025
*                                         TO TEXT                S22025
         NI    PRFFLAGS,AVTEFF-CCWSLI . RESET WRAP SWITCH        S21101
         TM    SCBBSCFM,SCBTRNSP .      RECEIVEING TRANSPARENT   S21101
         BZ    ITSNONTR .               BRANCH IF NO-TEST LCIN   S21101
         SPACE 1                                                 S21101
         BAL   RB,SETISZE .             BUMP IDLES  COUNT        S21101
ITSOUT   EQU   *                                                 S21101
         BAL   RB,SETISZE .             TWO FOR TRANSPARENT      S21101
         B     ADJBUF .                 NOW RESET BUFFER CCW FOR S21101
*                                         ERP AND OTHER -TTD,ENQ S21101
         SPACE 1                                                 S21101
ITSNONTR EQU   *                                                 S21101
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BZ    ITSOUT .                 BRANCH IF LCOUT -BUMP IDLS21101
*                                         PAST STX               S21101
ADJBUF   EQU   *                                                 S21101
         BAL   RE,BLDBUFF1 .            REBUILD BUFFER USING NEW S21101
*                                         IDLES COUNT            S21101
         L     RC,LCBSCBA-1 .           RESET SCB BASE           S21101
NOTSET   EQU   *                                                 S21101
         L     RPREFIX,LCBERCCW+4 .     DATA ADDRESS IN BUFFER   S21101
*                                         TO SCAN FOR LINE CNTROLS21101
         B     SCANTEST .               START THE SCAN           S21101
SET      EQU   *
         SPACE
         L     RWKA,LCBCPA+12 .         GET CURRENT CCW          S21101
         LA    RPREFIX,LCBERCCW+12 .    SCAN AREA                S21101
         LA    RA,ONE(,RPREFIX) .       ASSUME TRANSPARENT       S21101
         TM    SCBBSCFM,SCBTRNSP .      TRANSPARENT MODE         S21101
         BO    TRCOM                    BRANCH IF YES
         BCTR  RA,R0                    ADJUST-LCIN,LCOUT-NONTRANSP
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BO    NOTR                     BRANCH IF LCIN
         SPACE
TRCOM   EQU   *
         LR    RE,RWKA                  COPY CCW ADDRESS
         CLI   CCWCOUNT+1-CCW(RWKA),3   AT LEAST 3 CHARACTERS
        L     RWKA,CCWADDR-1-CCW(,RWKA) DATA ADDRESS
         BH    MOVEIT                   YES
         LH    RB,CCWCOUNT-CCW(RE)  GET COUNT
         BCTR  RB,0                     FOR EXECUTE
         EX    RB,MOVELC                MOVE
         LA    RA,1(RA,RB)              ADJUST SCAN AREA
         TM    11(RE),X'03'             IS THERE NEXT UN IT
         BNZ   SCANTEST                 NO
         L     RE,8(,RE)                GET NEXT UNIT
         L     RE,CCWADDR-1-CCW(,RE)    GET DATA ADDRESS
         MVC   0(3,RA),0(RE)            MOVE DATA
         B     SCANTEST                 SCAN DATA
MOVEIT   EQU   *
        MVC   1(2,RA),0(RWKA)          MOVE DATA FOR SCAN
         B     SCANTEST                 START SCAN
         SPACE
NOTR    EQU   *
         LR    RPREFIX,RWKA             GET CURRENT CCW ADDRESS
         CLI   PRFCOUNT+1,3             AT LEAST 3 CHARCTERS
         BH    NOMOVE                   YES
         LH    RWKA,PRFCOUNT            GET COUNT
         L     RB,PRFIOADR-1            GET DATA ADDRSS
         BCTR  RWKA,0                   FOR EXECUTE
         EX    RWKA,MOVESCAN            MOVE REMANING COUNT
         LA    RA,1(RA,RWKA)            ADJUST SCAN AREA
         TM    PRFTIC+3,X'03'           IS THERE NEXT UNIT
         BNZ   STARTSCN                 NO
         L     RPREFIX,PRFTIC           NEXT C W
         L     RB,PRFIOADR-1            DATA DADDRESS
         LA    RWKA,2                   MOVE AT LEAST 3
         EX    RWKA,MOVESCAN            MOVE DATA
STARTSCN EQU   *
         LA    RPREFIX,LCBERCCW+12      SCAN AREA
         B     SCANTEST                 SCAN THE DATA
         SPACE
NOMOVE   EQU   *
         L     RPREFIX,PRFIOADR-1       FOR SCAN
SCANTEST EQU  *
         L     RE,DCBSCTAD-1            SCT ADDRESS
         SR    RA,RA                    CLEAR EORK REGISTER
         IC    RA,STXENQCH(,RE)         TTD OOFFSET
         LA    RWKA,1(RA,RE)            POINT TO SEQUENC
         CLC   1(2,RWKA),0(RPREFIX)     STX ENQ
        BNE   NOTTTD                   NO
         OI    SCBERR2,SCBABRTN         POSSIBLE ABORT
         OI    SCBERR4,SCBTXTTN         SET TEXT ERROR
         OI    LCBMSGFM,LCBTTD+LCBVSTRT . SAET STATUS            S21101
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR TYPE MSG DETERMINED  @OS76474
         BNZ   SCANEND                  Y- NO NEED TO UPDTE CCW@OS76474
         SPACE 5                                                 S21101
BLDBUFF  EQU   *
         LA    RE,SCANEND               SET FINAL EXIT ADDRESS   Y02027
BLDBUFF1 EQU   *                                                 S21101
*        REBUILD BUFFER IF FIRST BLOCK FROM POLLING
         L     RPREFIX,LCBLSPCI-1       LAST SERVICED BUFFER
         SR    RWKA,RWKA                CLEAR WORK REGISTER
         IC    RWKA,LCBISZE             NO OF IDLES FOR HEADER
         LA    RWKA,PRFSHDR(RWKA)          PREIX PLUS IDLES
         L     RB,PRFIOADR-1            DATA ADDRESS
         LR    RC,RB                    SAVE FOR UPDATE
         LA    RB,0(,RB)                CLEAR HI ORDER BYTE
         SR    RB,RWKA                  FIND DIFFERNCE IN ADDRESS
         SR    RC,RB                    NEW LOWER DATA DADRESS
         AH    RB,PRFCOUNT              ADJUST COUNT
         ST    RC,PRFIOADR-1            NEW DATA ADDRESS
         STH   RB,PRFCOUNT              SET NEW COUNT
         BR    RE .                     REUTRN TO CALLER         S21101
NOTTTD   EQU   *
         CLC   1(1,RWKA),0(RPREFIX)     STX RECEIVED
         BNE   TRTTD                    NO TRY TRANSPARENT TTD
STXREC   EQU   *
         TM    SCBBSCFM,SCBTRNSP .      TRANSPARENT              S21101
         BNZ   ERRSET                   YES, WRONAG FORMAT
         TM    SCBBSCFM,SCBNONTR .      NON-TRANSPARENT MODE     S21101
         BNZ   ITSET                    YES
         TM    LCBERCCW+1,IN            LCIN
         BO    ITSET                    YES
         SPACE
         BAL   RB,SETISZE               BUMP IDLES
ITSET    EQU   *
         OI    SCBBSCFM,SCBNONTR .      SET NONTRANSPARENT BIT   S21101
ALLSET   EQU   *
         OI    LCBMSGFM,LCBVSTRT .      VALID START CHARACTER    S21101
         B     SCANEND                  SCAN COMPLETED.          Y02027
TRTTD    EQU   *
         CLC   0(2,RWKA),0(RPREFIX) .  STX                      SA44892
         BNE   NOTRAN                                           SA44892
         TM    SCBBSCFM,SCBNONTR .    RECEIVING NONTRANSP       SA44892
         BNZ   SETERR                                           SA44892
         OI    LCBMSGFM,LCBVSTRT .     VALID START SEQUENCE.    SA44892
         TM    SCBBSCFM,SCBTRNSP .     ALREADY RECEIVE AT LEAST SA44892
*                                      ONE DATA SEQUENCE ?      SA44892
         BNZ   SCANEND                  YES,SCAN COMPLETED.      Y02027
         BAL   RB,SETISZE .            BUMP IDLES               SA44892
         BAL   RB,SETISZE .            BUMP IDLES               SA44892
         OI    SCBBSCFM,SCBTRNSP .     SET TRANSP . RECEIVE     SA44892
         B     BLDBUFF .               REBUILD BUFFER FOR CASE  SA44892
*                                      OF MULTIPOINT LINE .     SA44892
NOTRAN   EQU   *
         CLC   2(1,RWKA),0(RPREFIX)     INQ RECEIVED
         BNE   NOTENQ                   NO
         SPACE
         OI    LCBMSGFM,LCBVSTRT+LCBENQ SET ENQ START            S21101
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR TYPE MSG DETERMINED    S21101
         BNZ   SCANEND                  YES,SCAN COMPLETED.      Y02027
         TM    LCBSTAT2,LCBDIAL         DIAL LINE
         BZ    BLDBUFF                  BRANCH NO
         SPACE
         NI    LCBMSGFM,AVTEFF-(LCBENQ+LCBVSTRT) RESET ENQ AND STS21101
         B     TESTENT                  SEE IF ENTRY FROM PCI
         SPACE
NOTENQ   EQU   *
         IC    RA,EOTCH(,RE)            EOT SEQUENCE
         LA    RWKA,1(RA,RE)            POINT TO EOT SEQUENCE
         CLC   0(1,RWKA),0(RPREFIX)     EOT RECEIVED
         BNE   TRYSOH                   NOT EOT, TRY SOH
         OI    LCBMSGFM,LCBEOT+LCBVSTRT SET STATUS BITS          S21101
         B     SCANEND                  SCAN COMPLETED.          Y02027
TRYSOH   EQU   *
         IC    RA,ESOHCH(,RE) .         SOH % E                  S22026
         LA    RWKA,1(RA,RE) .          POINT TO SEQUENCE        S22026
         CLC   0(3,RWKA),0(RPREFIX) .   SOH % E SEQUENCE         S22026
         BE    TPER .                   YES, SET TPER BIT        S99238
         SPACE
         IC    RA,CSOHCH(,RE) .         SOH % C                  S99238
         LA    RWKA,1(RA,RE) .          POINT TO SEQUENCE        S99238
         CLC   0(3,RWKA),0(RPREFIX) .   SOH % C SEQUENCE         S99238
         BNE   TRYOLT .                 NO, TRY NEXT SEQUENCE    S22026
         OI    LCBFLAG3,LCBSOHC         SOH % C MESSAGE          S99238
TPER     EQU   * .                                               S99238
         OI    LCBFLAG3,LCBOBRRD .      SET TPER RECORD          S22026
         B     STXREC .                 GO TO COMMON CODE        S22026
TRYOLT   EQU   * .                                               S22026
         IC    RA,RSOHCH(,RE)           INSERT SOH%R OFFSET      S99228
         LA    RWKA,ONE(RA,RE)          POINT TO SOH%R CHARS     S99228
         CLC   ZERO(THREE,RWKA),ZERO(RPREFIX)  SOH%R?            S99228
         BNE   PROBOLT                  BRANCH NO                S99228
         OI    SCBERR2,SCBSOHE          SET SOH% MESSAGE FLAG    S99228
         OI    LCBFLAG3,LCBSOHR         SET SOH%R MSG INDICATOR  S99228
         TM    SS1(RPREFIX),STAT2       CR, IR, EC, DC, CC?      S99228
         BNZ   YESLOG                   YES, LOG SOH%R MESSAGE   S99228
         TM    SS0(RPREFIX),STAT1       DB, DE?                  S99228
         BNZ   STXREC                   BRANCH EITHER            S99228
YESLOG   EQU   *                                                 S99228
         TM    LCBTSOB,LCBTSBUF         IS THIS TIME SHARING BUF S99228
         BZ    YESLOG1                  BRANCH ON NO             S99228
         OI    SCBERR4,SCBTRMLN         SET TERMINAL ERROR FLAG  S99228
YESLOG1  EQU   *                                                 S99228
         OI    LCBFLAG3,LCBOBRRD        SET RECORDING FLAG       S99228
         B     STXREC                   RETURN TO COMMON CODE    S99228
PROBOLT  EQU   *                                                 S99228
         IC    RA,TOTESOH(,RE)          SOH % / FOR TOTE         S21903
         LA    RWKA,1(RA,RE)            POINT TO SEQUENCE        S21903
         CLC   0(3,RWKA),0(RPREFIX)     ON LINE TEST?            S21903
         BNE   SOHTRY                   TRY SOH
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR 1ST TIME               S21101
         BNZ   STXREC                   NO
         OI    LCBMSGFM,LCBVSTRT+LCBOLT INDICATE OLT REQUEST     S21101
         OI    SCBBSCFM,SCBNONTR .      SET NONTRANSPARENT BIT   S21101
         B     SCANEND                  SCAN COMPLETED.          Y02027
SOHTRY   EQU   *
         CLC   0(1,RWKA),0(RPREFIX)     SOH RECEIVED
         BE    STXREC                   YES, USE COMMON CODE
         IC    RA,DLEEOTCH(,RE)         INDEX TO SEQUENCE
         LA    RWKA,1(RA,RE)            BUMP TO SEQUENCE
         CLC   0(2,RWKA),0(RPREFIX)     DLE EOT RECEVIED
         BNE   ERRSET                   NO
         NI    LCBTPCD+11,AVTEFF-DISDLEOT DONT WRITE DLE EOT NEXT
         OI    LCBMSGFM,LCBEOT+LCBENQ+LCBVSTRT VALID START       S21101
*                                         SET DLE EOT RECEIVED   S21101
         OI    LCBSTAT2,LCBNEGRP        SET NEGATIVE RESPONSE
         B     SCANEND                  SCAN COMPLETED         @ZA03738
ERRSET   EQU   *
         TM    LCBSTAT2,LCBDIAL         DIAL
         BZ    SETERR                   NO
         SPACE
*        THIS MIGHT BE ID ENQ IF CPU ID WAS HIT ON LINE
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR 1ST TIME               S21101
         BNZ   SETERR                   NO, NOT FIRST BLOCK
         SPACE
TESTENT  EQU   * .                                               S21101
         CLI   LCBCPA+24,CCWDISAB .     CONNECTION JUXT MADE     S21101
         BNE   SETERR .                 BRANCH IF NO             S21101
         SPACE
         TM    LCBCSW+3,CEDE            PCI OR LINE END
         B     SCANEND                  SCAN COMPLETED.          Y02027
SETERR   EQU   *
         OI    SCBERR3,SCBFORMN         SET FORMAT ERROR
         OI    SCBERR4,SCBTXTTN         TEXT ERROR
         OI    LCBMSGFM,LCBRSTRT .      SET INVALID START        S21101
         B     SCANEND                  SCAN COMPLETED.          Y02027
MOVELC   MVC   1(1,RA),0(RWKA)          'EXECUTED'
MOVESCAN MVC   0(1,RA),0(RB)            'EXECUTED'
SETISZE  EQU   *
         ICM   RPREFIX,AD,LCBLSPCI .    FIRST BUFFER             X01004
         LH    RA,PRFSIZE .             PICK UP SIZE             X01004
         LA    RA,ONE(,RA) .            ADD ONE                  X01004
         STH   RA,PRFSIZE .             RESTORE NEW SIZE         X01004
         IC    RA,LCBISZE .             PICK UP IDLES COUNT      X01004
         LA    RA,ONE(,RA) .            ADD ONE                  X01004
         STC   RA,LCBISZE .             STORE NEW COUNT          X01004
         BR    RB                       RETURN
         DROP  RC
SCANEND  EQU   *                                                 Y02027
         SPACE 1
         SR    R11,R11                  CLEAR LENGTH REGISTER    S99228
         IC    R11,DCBEIOBX             INSERT LCB LENGTH        S99228
         SH    R11,EIGHT                8 BYTES TO POINT TO EXT  S99228
         LA    R11,ZERO(R11,RLCB)       LOAD ADDR LCB EXTENSION  S99228
         USING IEDQLCBX,R11                                      S99228
         TM    LCBXFLAG,LCBSRCPF        SOURCE DETERMINATION     S99228
*                                       ALREADY PERFORMED?       S99228
         BO    NOSOURCE                 BRANCH YES               S99228
         L     R5,SAVEREG               LOAD ADDR APP VEC TABLE  X02004
LOOKER   EQU   *                                                 S99228
* THIS SUBROUTINE LOCATES THE INVITATION LIST AND DEVICE         S99228
* CHARACTERISTICS TABLE ENTRY FOR 2260  AND 3270 DEVICES         S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         IC    RB,LCBUCBX               LOAD INVLIST INDEX       S99228
         SLL   RB,TWO                   MULTIPLY INDEX BY 4      S99228
         L     RC,DCBINVLI(RB)          LOAD ADDR INVLIST CWORD  S99228
         LR    R0,RC                    SAVE ADDR INVLIST CWORD  S99228
         LH    RC,LCBTTCIN .            LOAD TERM INDEX          S99228
         N     RC,AVTCLRHI .            CLEAR HI-ORDER HALF      S99228
         TM    LCBSTAT1,LCBSENDN        SEND STATE?              S99228
         BO    OUTBY                    YES, USE LCBTTCIN        S99228
         TM    LCBXFLAG,LCBSRCPF        SRC DETERM PERFORMED?    S99228
         BO    USEPTR                   YES, USE INVLIST PTR     S99228
         LTR   RC,RC .                  TTCIN ZERO               S99228
         BNZ   OUTBY                    NO, LCBTTCIN VALID       S99228
USEPTR   EQU   *                                                 S99228
         LR    RC,R0                    RESTORE REG              S99228
         L     RA,LCBINVPT-ONE          LOAD INVLIST ENTRY PTR   S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         IC    RB,TWO(R0,RC)            LOAD INVLIST ENTRY LENGTHS99228
         AR    RA,RB                    SKIP TO END INVLIST ENT  S99228
         BCTR  RA,R0                    POINT TO ENTRY INDEX     S99228
         IC    RB,ZERO(R0,RA)           LOAD ENTRY INDEX VALUE   S99228
         SLL   RB,ONE                   DOUBLE INDEX VALUE       S99228
         SR    RC,RB                    POINT TO TNT INDEX       S99228
         LH    RC,ZERO(R0,RC)           LOAD TNT INDEX           S99228
OUTBY    EQU   *                                                 S99228
         BAL   RWKA,BOLOC               BRANCH TO DCT ENTRY LOC  S99228
         MVC   LCBXDCT(THREE),ONE(RA)   SAVE DCT BYTES 1, 2, 3   S99228
         LR    RC,R0                    LOAD INVLIST CWORD ADDR  Y02027
         B     LOOKEND                  LOOKUP COMPLETE.         Y02027
BOLOC    EQU   *                                                 S99228
* THIS SUBROUTINE LOCATES DEVICE CHARACTERISTICS TABLE ENTRIES   S99228
         N     RC,AVTCLRHI              CLEAR HI ORDER BYTES     S99228
         L     RA,AVTRNMPT              LOAD ADDR TERMNAME TABLE S99228
         USING IEDQTNTD,RA                                       S99228
         BAL   RPREFIX,TNTDCODE         BRANCH TO TRM ENT LOC RT S99228
         USING IEDQTRM,RB                                        S99228
         DROP  RA                                                S99228
         SR    RA,RA                    CLEAR INDEX REGISTER     S99228
         IC    RA,TRMCHCIN              LOAD DCT INDEX           S99228
         BCTR  RA,R0                    DECREMENT FOR ENTRY      S99228
         MH    RA,AVTDCTLN              MULTIPLY FOR OFFSET    @G36XRIB
         DROP  RB                                                S99228
         A     RA,AVTCSTCS              SET ADDR DCT ENTRY       S99228
         BR    RWKA                     RETURN TO CALLER         S99228
LOOKEND  EQU   *                                                 Y02027
         SPACE 2
         TM    LCBDCT1,CUMASK           GENERAL POLL IN PROGRESS?S99228
         BNO   NOSOURCE                 BRANCH NO                X02004
         TM    LCBMSGFM,LCBOLT          TRM PRESENT?             S99228
         BO    SRCSET                   BRANCH YES               S99228
         L     RPREFIX,LCBLSPCI-1       LOAD BUFFER ADDRESS      Y02027
SOURCER  EQU   *                                                 S99228
* THIS SUBROUTINE CALCULATES TRANSMISSION SOURCES OF MESSAGES    S99228
* RECEIVED UNDER GENERAL POLL                                    S99228
         SR    RB,RB                    CLEAR IDLES REGISTER     S99228
         IC    RB,LCBISZE               INSERT IDLES COUNT       S99228
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BO    LCPRES                   BRANCH YES               S99228
         BCTR  RB,R0                    SET TO POINT AT LC CHAR  S99228
LCPRES   EQU   *                                                 S99228
         LA    RE,PRFSHDR(RB)           LOAD DATA ADDRESS        S99228
         TM    LCBSTAT2,LCBSYNC         BISYNC LINE?             S99228
         BZ    REGMSG                   NO, SKIP SOH%R SEARCH    S99228
         L     RB,DCBSCTAD-ONE          LOAD ADDR SPEC CHARS TBL S99228
         SR    RA,RA                    CLEAR OFFSET REGISTER    S99228
         IC    RA,RSOHCH(R0,RB)         INSERT SOH%R OFFSET      S99228
         LA    RB,ONE(RA,RB)            LOAD ADDR SOH%R CHARS    S99228
         CLC   ZERO(ONE,RB),ZERO(RE)    SOH%R MESSAGE?           S99228
         BNE   USUMSG                   BRANCH NO                S99228
         LA    RE,THREE(R0,RE)          BYPASS SOH%R STX CHARS   S99228
USUMSG   EQU   *                                                 S99228
         LA    RE,ONE(R0,RE)            POINT TO CU ENTRY        S99228
REGMSG   EQU   *                                                 S99228
         LR    R0,RC                    SAVE INVLIST C WORD ADDR S99228
         SR    RA,RA                    CLEAR ENTRY COUNT REG    S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         IC    RB,TWO(R0,RC)            LOAD INVLIST ENTRY LENGT S99228
         IC    RA,ONE(R0,RC)            SET ACTIVE INVLIST E CNT S99228
         LA    RC,INVSTART(R0,RC)       SET INVLIST START ADDR   Y02027
         LA    RPREFIX,TWO              SET ACTIVE-INACTIVE CON  S99228
SYNCTEST EQU   *                                               @ZA03738
         LTR   RA,RA                    TEST NUMBER ACTIVE ENT   S99228
         BZ    NOORG                    NO ACTIVE ENTRIES NO SRC S99228
         TM    LCBSTAT2,LCBSYNC         TEST FOR BSYNC LINE      S99228
         BZ    SLOLINE                  NO, NO SKIP OF 1ST CU    S99228
         LA    RC,ONE(R0,RC)            ADJ PTR TO COMPARE 2ND C S99228
SLOLINE  EQU   *                                                 S99228
         L     RWKA,LCBINVPT-ONE        LOAD INVLIST POINTER     S99228
CONCHECK EQU   *                                                 S99228
         CLC   ZERO(ONE,RWKA),ZERO(RC)  COMPARE CONTROL UNIT ADD S99228
         BE    DVCCHECK                 CU ADDRS EQUAL CHECK DVC S99228
CONTEST  EQU   *                                                 S99228
         AR    RC,RB                    SKIP TO NEXT INVLIST ENT S99228
         BCT   RA,CONCHECK              CONTINUE SEARCHING       S99228
         BCT   RPREFIX,FEINCRE          PROCESS INACTIVE ENTRIES S99228
         B     NOORG                    NO SRC FOUND SET NO SRC  S99228
DVCCHECK EQU   *                                                 S99228
         CLC   ONE(ONE,RC),ONE(RE)      COMPARE DEVICE ADDR      S99228
         BNE   CONTEST                  BRANCH DEVICE NOT FOUND  S99228
         STM   RPREFIX,RC,SRCREGS       SAVE REGISTERS           S99228
         LR    RA,R0                    LOAD INVLIST CWORD ADDR  S99228
         TM    LCBSTAT2,LCBSYNC         BYSNC INVLIST?           S99228
         BZ    RUNLOW                   BRANCH NO                S99228
         BCTR  RB,R0                    REDUCE ENTRY LENGTH      S99228
RUNLOW   EQU   *                                                 S99228
         BCTR  RB,R0                    REDUCE ENTRY SIZE        S99228
         IC    RB,ZERO(RB,RC)           INSERT ENTRY INDEX       S99228
         SLL   RB,ONE                   DOUBLE INDEX VALUE       S99228
         SR    RA,RB                    POINT TO TNT INDEX       S99228
         LH    RC,ZERO(R0,RA)           LOAD TNT INDEX           S99228
         BAL   RWKA,BOLOC               BRANCH TO DCT ENTRY LOC  S99228
         TM    ONE(RA),C3270            3270 DEVICE?             S99228
         BO    RELOAD                   BRANCH YES               S99228
         TM    THREE(RA),CNOIDLES       2260 DEVICE?             S99228
RELOAD   EQU   *                                                 S99228
         LM    RPREFIX,RC,SRCREGS       RESTORE REGISTERS        S99228
         BO    SETORG                   BRANCH IF GENPOLL DEVICE S99228
         B     CONTEST                  NOT GENPOLL DEVICE       S99228
FEINCRE  EQU   *                                                 S99228
         LA    RC,ONE(R0,RC)            ADJ PTR ADDR TO PASS FE  S99228
         LR    RWKA,R0                  RESTORE CONTROL WORD ADD S99228
         IC    RA,ZERO(R0,RWKA)         LOAD TOTAL ENTRIES       S99228
         SR    RB,RB                    CLEAR ACTIVE ENTRIES REG S99228
         IC    RB,ONE(R0,RWKA)          LOAD ACTIVE ENTIRES      S99228
         SR    RA,RB                    DERIVE INACTIVE ENTRIES  S99228
         IC    RB,TWO(R0,RWKA)          RESTORE LENGTH           S99228
         B     SYNCTEST                 CONT SRCH INACT ENTRIES  S99228
SETORG   EQU   *                                                 S99228
         TM    LCBSTAT2,LCBSYNC         BYSNC INVLIST?           S99228
         BZ    UNSYNC                   NO, NO RETARD INV PTR    S99228
         BCTR  RC,R0                    RETARD INV PTR TO CU ADD S99228
UNSYNC   EQU   *                                                 S99228
         SR    R11,R11                  CLEAR FOR IC           @OZ09940
         IC    R11,DCBEIOBX             GET IOB SIZE           @OZ09940
         SH    R11,EIGHT                GET OFFSET TO EXTENSION@OZ09940
         LA    R11,ZERO(R11,RLCB)       ADDR OF EXTENSION      @OZ09940
         ST    RC,LCBXRADR              SAVE ERP POLL ADDR       S99228
*                                       FOR ERP POLL             S99228
         BCTR  RC,R0                    RETARD INVLIST ENTRY PTR S99228
         AR    RC,RB                    PT TO INVLIST ENT INDEX  S99228
         SR    RWKA,RWKA                CLEAR WORK REGISTER      S99228
         IC    RWKA,ZERO(R0,RC)         LOAD INDEX VALUE         S99228
         SLL   RWKA,ONE                 DOUBLE INDEX VALUE       S99228
         LR    RC,R0                    RSTR INVLIST C WORD ADDR S99228
         SR    RC,RWKA                  POINT TO TNT INDEX       S99228
         LH    RWKA,ZERO(R0,RC)         LOAD TNT INDEX VALUE     S99228
         STH   RWKA,LCBTTCIN            SET SOURCE OF TRANS      S99228
         B     SRCSET                   SRC DETERM COMPLETE      Y02027
NOORG    EQU   *                                                 S99228
         SR    R11,R11                  CLEAR FOR IC           @OZ09940
         IC    R11,DCBEIOBX             GET IOB SIZE           @OZ09940
         SH    R11,EIGHT                GET OFFSET TO EXTENSION@OZ09940
         LA    R11,ZERO(R11,RLCB)       ADDR OF EXTENSION      @OZ09940
         NI    LCBXFLAG,LCBERSTP        PREVENT ERP POLL         S99228
         XC    LCBTTCIN(TWO),LCBTTCIN   INVALID SOURCE CLEAR SRC S99228
         B     NOSOURCE                 END OF SRC DETERMINATN @ZA03738
SRCSET   EQU   *                                                 S99228
         OI    LCBXFLAG,LCBSRCPF        SET SRC DETERM PERFORMED S99228
NOSOURCE EQU   *                                                 S99228
         LM    R0,R15,SAVEREG+FOUR      RESTORE REGISTERS        S99228
         DROP  R11                                               S99228
         SPACE 1
*                                                                Y01004
         SR    R5,R5                    CLEAR FOR COUNT          Y01004
NOSCAN   EQU   *                                                 Y01004
         TM    LCBSTAT2,LCBSYNC         BSC LINE               @OS76718
         BNO   NOSCAN1                  BRANCH NO              @OS76718
         TM    LCBMSGFM,LCBVSTRT        VALID START            @OS76718
         BNO   NOSCAN1                  BRANCH NO              @OS76718
         L     R7,LCBSCBA-1             SCB ADDR               @OS76718
         NI    SCBERR2-IEDQSCB(R7),X'FF'-SCBABRTN  RESET ERR   @OS76718
         NI    SCBERR3-IEDQSCB(R7),X'FF'-SCBFORMN  RESET ERR   @OS76718
         NI    SCBERR4-IEDQSCB(R7),X'FF'-SCBTXTTN  RESET ERR   @OS76718
NOSCAN1  EQU   *                                               @OS76718
         OI    PRFSTAT1,PRFNLSTN        SET NOT LAST BUFFER      Y01004
         MVC   PRFSIZE,DCBBUFSI         SET BUFFER SIZE          Y01004
         L     R7,DCBMH-1               SET TO POST TO MH        Y01004
         MVI   PRFPRI,PRIMHBFR          SET PRIORITY             Y01004
         B     POSTLNK                  USE COMMON CODE          Y01004
*                                                                Y01004
SNDLOOP  EQU   *                                                 Y01004
         LR    R11,R1                   NEXT UNIT ADDRESS        Y01004
         BCT   R5,UNTSCON               CONTINUE IF MORE UNITS   Y01004
         LA    R7,AVTBFRTB              BUFFER RETURN QUEUE      Y01004
         MVI   PRFPRI,PRIBFRTB          SET RETURN PRIORITY      Y01004
POSTLNK  EQU   *                                                 Y01004
         BAL   R14,POST                 PUT BUFFER ON READY QUEUEY01004
*                                                                Y01004
         BCT   R10,BFRSCON              CONVERT NEXT BUFFER IF   Y01004
*                                       ONE                      Y01004
SETEXIT  EQU   *                                                 Y01004
         STCM  R11,AD,LCBLSPCI          SET NEXT BUFFER AS LSPCI Y01004
EXIT     EQU   *                                                 Y01004
         MVI   LCBPCILK,ZERO            CLEAR PCI LOCK FOR MP    Y02027
         L     RCVT,CVTPTR              PICKUP CVT ADDRESS       Y02027
         USING CVT,RCVT                                          Y02027
         L     RTCX,CVTAQAVT            PICKUP ADDR OF TCAM CVT  Y02027
*                                       EXTENSION                Y02027
         USING IEDQTCX,RTCX                                      Y02027
         L     R9,TCXDSAVE              ADDR OF IOS SAVE AREA    Y02027
         MVI   TCXDSAVE,AVTEZERO        CLEAR PCI LOCK FLAG      Y02027
         TM    AVTOSECB,POSTED          IS TCAM RUNNING          X02004
         BNZ   POSTRTN                  IF YES - DO NOT POST     Y02027
*                                                                Y01004
         LA    RECB,AVTOSECB            PICKUP ADDR OF ECB       Y02027
         SR    R14,R14                  CLEAR FOR OR             Y02027
         ICM   R14,HI,XMPOSTMK          PICK UP MASK             Y02027
         OR    RECB,R14                 INDICATE CROSS MEMORY    Y02027
*                                       POST REQUEST             Y02027
         LA    RERRET,CVTBRET           SETUP ERROR RETURN ADDR  Y02027
*                                       FOR XMPOST TO BR 14 INST Y02027
         OR    RERRET,R14               NOT MEMORY RELATED       Y02027
         L     RASCB,TCXASCB            PASS TCAM'S ADDRESS      Y02027
*                                       SPACE CTL BLOCK TO XMPST Y02027
         DROP  RTCX                                              Y02027
         L     RXMPOST,CVT0PT01         ADDR OF XMPOST RTN       Y02027
         SR    RCCODE,RCCODE            INDICATE CCODE OF ZERO   Y02027
         BALR  R14,RXMPOST              POST TCAM'S ECB COMPLETE Y02027
POSTRTN  EQU   *                                                 Y02027
         LM    R0,R15,ZERO(R9)          RESTORE REGISTERS        Y02027
         SR    R9,R9                    CLEAR FOR IOS            Y02027
         BR    R14                      RETURN TO IOS            Y02027
         SPACE 2
COMMON   EQU   *                                                 Y01004
         SR    R1,R1                    INSURE 0 HIGH ORDER BYTE Y01004
         ICM   R1,AD,PRFIOADR-IEDQPRF(R11)  I/O DATA ADDR        Y01004
         CLI   PRFOPCDE-IEDQPRF(R11),ZERO HAS IT BEEN CONVERTED  Y01004
         BNE   VIRTUAL                  BRANCH NO - CONVERT      Y01004
         BR    R14                      RETURN                   Y01004
         SPACE 2                                                 S22025
CKAUTOPL EQU   *                                                 Y01004
         L     RPREFIX,LCBLSPCI-1       ADDRESS OF FIRST BUFFER  Y01004
         TM    PRFSTAT1,PRFNHDRN        IS THIS A HEADER BUFFER  Y01004
         BO    CONTINUE                 BRANCH NO - RETURN       Y01004
*                                                                Y01004
         CLI   LCBCPA+TWNTY4,CCWPOLL    POLL CCW                 Y01004
         BE    AUTOSRC                  YES,BRANCH             @YA08787
*                                       TIME                     Y01004
         CLI   DCBEIOBX,X'C8'           LCB TOO SMALL FOR AUTOP@YA08787
         BL    CONTINUE                 YES,BRANCH             @YA08787
         CLI   LCBCPA+53,AVTEFF         ERP AUTOPOLL DONE      @YA08787
         BNE   CONTINUE                 NO-NOT AUTOPOLL        @YA08787
AUTOSRC  EQU   *                                               @YA08787
         MVI   LCBCPA+53,AVTEZERO       TURN OFF ERP AUTOPOLL  @YA08787
         MVI   LCBCPA+TWNTY4,CCWNOP     SET FIRST TIME SWITCH    Y01004
         ICM   R1,AD,PRFIOADR           REAL DATA ADDRESS        Y01004
         BAL   R14,VIRTUAL              CONVERT TO VIRTUAL       Y01004
*                                                                Y01004
         BCTR  R1,ZERO                  DECREMENT ADDRESS        Y01004
         BCTR  R1,ZERO                  BY 2 BYTE READ IN LCB    Y01004
         IC    R5,LCBUCBX               RELATIVE LINE NUMBER-1   Y01004
         SLL   R5,TWO                   MULTIPLY BY 4 FOR INDEX  Y01004
         L     R7,DCBINVLI(R5)          INVITATION LIST FOR LINE Y01004
         SR    R5,R5                    CLEAR                    Y01004
         LR    R14,R5                   CLEAR                    Y01004
         IC    R14,0(R1)                INDEX BYTE RECEIVED      Y01004
         TM    LCBSTAT2,LCBSYNC         BSC LINE                 Y01004
         BO    RESTORE1                 BRANCH YES               X02004
*                                                                Y01004
         L     R9,DEBAPPAD              APPENDAGE VECTOR TABLE   Y01004
         TM    0(R9),LCIN               WAS LC IN SPECIFIED      Y01004
         BNO   LCOUT                    BRANCH NOT LC=IN         Y01004
*                                                                Y01004
         MVI   0(R1),EOA                REPLACE INDEX WITH EOA   Y01004
         B     LCOUT                    GET ADDR OF INVLIST      X02004
         SPACE 1
RESTORE1 EQU   *                                                 S22028
         TM    LCBTSOB,LCBTSBUF         TSO TERMINAL             S22028
         BZ    LCOUT                    NO, BRANCH               X02004
         MVI   AVTEZERO(R1),ZERO        REPLACE INDEX BYTE WITH 0X02004
LCOUT    EQU   *                                                 Y01004
         LTR   R14,R14                  INDEX BYTE RECEIVED = 0  Y01004
         BZ    NOTVALID                 BRANCH YES - IGNORE      Y01004
*                                                                Y01004
         SR    R0,R0                                           @SA70322
         IC    R0,TWO(,R7)              SIZE OF EACH ENTRY     @SA70322
         LA    R9,SEVEN(,R7)            POINT TO FIRST ENTRY -1  Y01004
INVLOOP  EQU   *                                                 Y01004
         AR    R9,R0                    FIRST/NEXT ENTRY       @SA70322
         CLM   R14,ONE,0(R9)            IS THIS THE ENTRY        Y01004
         BE    INVFOUND                 BR, YES, INVLIST FOUND @SA70322
         CLI   ONE(R9),ENDOLIST         END OF LIST?           @SA70322
         BE    NOTVALID                 BR YES, INV NOT FOUND  @SA70322
         CLI   TWO(R9),ENDOLIST         END OF INVLIST?        @SA70322
         BE    NOTVALID                 BR YES, INV NOT FOUND  @SA70322
         B     INVLOOP                  CONTINUE SEARCH        @SA70322
INVFOUND EQU   *                                               @SA70322
         BCTR  R0,ZERO                  ACCOUNT FOR INDEX      @SA70322
         SR    R9,R0                    BACK UP TO CURRENT ENT @SA70322
         STCM  R9,AD,LCBINVPT           SET UP CURRENT ENTRY     Y01004
         SR    R11,R11                  CLEAR FOR IC           @SA62375
         IC    R11,DCBEIOBX             GET IOB SIZE           @SA62375
         SH    R11,EIGHT                GET OFFSET TO EXTENSION@SA62375
         LA    R11,ZERO(R11,RLCB)       ADDR OF EXTENSION      @SA62375
         USING IEDQLCBX,R11                                    @SA62375
         MVC   LCBERADR(THREE),LCBINVPT SET INVLIST ADDRESS    @SA62375
         DROP  R11                                             @SA62375
         LA    R1,0(R14,R14)            CLEAR R1 AND DOUBLE INDEXY01004
         SR    R7,R1                    POINT TO TNT INDEX       Y01004
         ICM   R1,HALF,0(R7)            PICK UP TNT INDEX        Y01004
         LR    R5,R1                    SAVE TNT OFFSET          Y01004
         L     R15,AVTRNMPT             ADDR OF CONVERSION ROUT. Y01004
         BALR  R14,R15                  LINK TO IT               Y01004
*                                                                Y01004
         L     RPREFIX,0(R1)            QCB ADDRESS              Y01004
         OI    LCBTSOB,LCBTSBUF         INDICATE TIME-SHARING    S22029
*                                       TERMINAL ON THIS LINE    S22029
         TM    QCBFLAG-IEDQQCB(RPREFIX),QCBTSSES  TIME-SHARING   X02004
*                                       TERMINAL CONNECTED NOW   X02004
         BO    MIX0270                  YES,LINE STATUS IS OK    S22029
         SPACE 1
         NI    LCBTSOB,AVTEFF-LCBTSBUF  NO, INDICATE A TCAM      S22029
*                                       TERMINAL ON THIS LINE    S22029
MIX0270  EQU   *                                                 S22029
         SR    R0,R0                    CLEAR REGISTERS          Y01004
         LR    R1,R0                                             Y01004
         IC    R0,QCBSCBOF-IEDQQCB(RPREFIX) SCB OFFSET           Y01004
         IC    R1,AVTSCBSZ              SIZE OF AN SCB           Y01004
         MR    R0,R0                    CALCULATE SCB ADDRESS    Y01004
         AL    R1,LCBSCBDA-1            ADD DIRECTORY ADDRESS    Y01004
         LR    R11,R1                   SCB ADDRESS TO SCB REG.  Y01004
         STCM  R1,AD,LCBSCBA            SET SCB ADDRESS          Y01004
NOTVALID EQU   *                                                 Y01004
         STH   R5,LCBTTCIN              UNKNOWN CURRENTLY        Y01004
*                                       CONNECTED                Y01004
         SR    R0,R0                    SINCE ENTRY TO THIS ROUT Y01004
*                                       IS WITH HEADER BUFFER    Y01004
*                                       ONLY - INDICATE NO       Y01004
*                                       BUFFERS TO FREE          Y01004
         B     CONTINUE                 RETURN                   Y01004
*                                                                Y01004
CONVREAL EQU   *                                                 Y01004
         IC    R5,PRFNBUNT              NUMBER OF UNITS          Y01004
         LR    R11,RPREFIX              SET FOR COMMON EXIT      Y01004
REALOOP  EQU   *                                                 Y01004
         ICM   R1,AD,PRFIOADR           I/O ADDRESS              Y01004
         LRA   R1,0(,R1)                CONVERT TO REAL          Y01004
         STCM  R1,AD,PRFIOADR           STORE IN CCW             Y01004
         MVI   PRFOPCDE,READ            RESET READ OP CODE       Y02027
         ICM   R9,AD,PRFTIC+ONE         TIC TO ADDRESS           Y01004
         LRA   R1,0(,R9)                CONVERT TO REAL          Y01004
         STCM  R1,AD,PRFTIC+ONE         SET REAL TIC TO          Y01004
         OI    PRFTIC,REALTIC           RESET REAL TIC OP CODE   Y01004
         LR    RPREFIX,R9               NEXT UNIT ADDRESS        Y01004
         BCT   R5,REALOOP               CONVERT NEXT UNIT        Y01004
*                                                                Y01004
         B     SETEXIT                  USE COMMON CODE          Y01004
*                                                                Y01004
POST     EQU   *                                                 Y01004
         STCM  R7,AD,PRFQCBA            SET QCB ADDR. IN ELEMENT Y01004
         DROP  RAVT                                              Y02027
         L     RCVT,CVTPTR              PICKUP CVT ADDRESS       Y02027
         L     RAVT,CVTAQAVT           PICKUP ADDR OF TCAM'S     Y02027
*                                       CVT EXTENSION            Y02027
         USING IEDQTCX,RAVT                                      Y02027
         L     CURR,TCXREADY            PICKUP ADDR OF CURRENT   Y02027
*                                       ELEMENT ON AYNCHRONOUS   Y02027
*                                       READY QUEUE              Y02027
NEWCURR  STCM  CURR,SEVEN,PRFLINK       LINK NEW ELEMENT TO THE  Y02027
*                                       CURRENT ELEMENT          Y02027
         CS    CURR,RPREFIX,TCXREADY    WAS CURRENT ELEMENT      Y02027
*                                       UPDATED ASYNCHRONOUSLY   Y02027
         BNE   NEWCURR                  YES, LINK NEW ELEMENT    Y02027
*                                       TO NEW CURRENT ELEMENT   Y02027
*                                       NO, ASYNCHRONOUS RDY Q   Y02027
*                                       IS UPDATED WITH NEW ELEM Y02027
*                                       BY COMPARE-AND-SWAP INST Y02027
         L     RAVT,TCXAVT              RESTORE AVT ADDRESS      Y02027
         DROP  RAVT                                              Y02027
         USING IEDQAVTD,RAVT                                     Y02027
         BR    R14                      RETURN                   Y01004
*                                                                Y01004
***********************************************************************
*                                                                     *
*        THE FOLLOWING SUBROUTINE IS ADDED FOR AOS TO CONVERT REAL    *
*        ADDRESSES TO VIRTUAL.  THE FOLLOWING REGISTERS ARE USED ON   *
*        EXIT TO IEAPTRV:                                             *
*              R1 = REAL ADDRESS TO BE TRANSLATED.                    *
*              R14 = RETURN ADDRESS IN IGG019RN.                      *
*              R15 = ENTRY POINT ADDRESS IN IEAPTRV.                  *
*        UPON RETURN FROM IEAPTRV, REGISTER CONTENTS ARE AS FOLLOWS:  *
*              R0 = CONTENTS DESTROYED BY IEAPTRV.                    *
*              R1 = VIRTUAL ADDRESS.                                  *
*              R14 = RETURN ADDRESS IN IGG019RN.                      *
*              R15 = RETURN CODE.                                     *
*                                                                     *
VIRTUAL  EQU   *                                                 Y01004
         L     R15,CVTPTR               R15 = CVT ADDRESS.       Y01004
         L     R15,CVTPTRV              R15 V ADDRESS OF AOS     Y02027
*                                       REAL TO VIRTUAL SUBROUT. Y01004
         LA    R1,ZERO(,R1)             CLEAR HIGH-ORDER BYTE OF Y01004
*                                       REGISTER CONTAINING REAL Y01004
*                                       ADDRESS TO ZERO          Y01004
         BR    R15                      LINK OUT TO IEAPTRV.     Y01004
*                                                                     *
*        END OF SUBROUTINE ADDED FOR AOS.                             *
*                                                                     *
***********************************************************************
         SPACE 2
SAVEREG  DS    17F                      GENERAL POLL SAVE AREA   S99228
SRCREGS  DS    4F                       SAVE AREA FOR SOURCE     S99228
*                                       DETERMINATION REGISTERS  S99228
SIZE     DC    AL2(LCBFLAG1-IEDQLCB)    OFFSET TO IOB FROM LCB   S22025
EIGHT    DC    H'8'                     HALFWORD OF EIGHT        S22025
SIXTEEN  DC    H'16'                    LCB EXTENSION            X02004
XMPOSTMK DC    X'80'                    MASK TO INDICATE CROSS   Y02027
*                                       MEMORY POST              Y02027
END19RN  EQU   *                        END OF LOAD MODULE       X02004
         EJECT
         CVT   DSECT=YES
         EJECT
         TTCXD
         EJECT
         TDEBD                                                   Y01004
         EJECT ,                                                 S22025
         TPRIOR
         EJECT ,                                                 S22025
         TCCWD
         EJECT ,                                                 S22025
         DCBD  DSORG=TX
DCBILIST EQU   DCBINVLI
         EJECT ,                                                 S22025
         TPRFD
         EJECT ,                                                 S22025
         TLCBD
         EJECT ,                                                 S22025
         TTNTD
         EJECT ,                                                 S22025
         TQCBD
         EJECT ,                                                 S22025
         TTCBD
         EJECT ,                                                 S22025
         TSCBD
         EJECT ,                                                 S22025
         TAVTD
         TDRQD                                                   S22026
         EJECT ,                                                 S22025
         TTRMD                                                   S22026
         EJECT ,                                                 S22025
         TQCBED                                                  S22026
         END
