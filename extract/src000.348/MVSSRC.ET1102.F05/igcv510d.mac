         TITLE 'IGCV510D OPERATOR CONTROL STOP GENERAL POLL MODULE'
IGCV510D CSECT
         EJECT
         SPACE 3
* CHANGE-ACTIVITY = AS FOLLOWS:
********************* MICROFICHE FLAGS ********************** SUPT CODE
*D710000-722000,730000,704000                                   SA60006
*C 698000                                                       SA60309
*A 778000                                                       SA60309
*D 890000                                                      @Y17XARZ
*A 224000,734000,866000                                        @Y17XARP
*D 736000-756000                                               @Y17XARP
*D 706000,758000                                               @Y17XART
*C028000                                                       @OY14490
*D036000-040000                                                @OY14490
*A028000-4740000                                               @OY14490
*D532000                                                       @OX16689
*A534000,840000                                                @OX16689
***********************************************************************
*                                                                     *
* MODULE-NAME=IGCV510D  (TCAM, OP CTL)                         @Y17XART
*                                                                     *
* DESCRIPTIVE-NAME=OPERATOR CONTROL STOP GENERAL POLL MODULE          *
*                                                                     *
* COPYRIGHT='NONE'                                                    *
*                                                                     *
*  STATUS:  CHANGE LEVEL 10                                    @Y17XART
*                                                                     *
* FUNCTION --                                                         *
*    THIS ROUTINE RECEIVES CONTROL WHEN IT IS DETERMINED IN           *
*    MODULE IGCV210D THAT THE STOP TERMINAL REQUEST IS FOR A GENERAL  *
*    POLL ENTRY. THE ROUTINE FIRST DEACTIVATES THE GENERAL POLL ENTRY *
*    JUST AS A NORMAL STOP TERMINAL REQUEST. AFTER THE GENERAL POLL   *
*    ENTRY IS DEACTIVATED, THE OPTION IS CHECKED. IF THE 'B'  @OY14490*
*    OPTION IS SPECIFIED, THE INACTIVE SIDE OF THE INVITATION @OY14490*
*    LIST IS NOT SCANNED FOR TERMINAL ENTRIES.  IF THE 'E'    @OY14490*
*    OPTION IS SPECIFIED, THE INACTIVE ENTRIES ARE SCANNED    @OY14490*
*    TO LOCATE ALL SPECIFIC POLL ENTRIES WHOSE CONTROL UNIT ADDRESSES *
*    ARE EQUAL TO THAT OF THE GENERAL POLL ENTRY BEING STOPPED. ALL OF*
*    THESE SPECIFIC POLL ENTRIES ARE THEN ACTIVATED.                  *
*    THIS MODULE IS BEING CHANGED TO REFERENCE THE ASYNCRONOUS @Y17XART
*    READY Q INSTEAD OF THE DISABLED READY Q FOR POSTS.        @Y17XART
*                                                                     *
* ENTRY POINTS --                                                     *
*         'IGCV510D' TO PROCESS VARY GENERAL POLL,OFFTP OPERATOR      *
*    CONTROL COMMANDS.  CALLING SEQUENCE IS:                          *
*    MVC OPCLCNME+VARINAME(NAMELEN)=C'V5'                             *
*    LR RPARM,ROPCAVT                                                 *
*    XCTL SF=(E,OPCXCTL)                                              *
*    PURPOSE - SEE FUNCTION                                    @Y17XART
*                                                                     *
* INPUT --                                                            *
*    REGISTER 2 - ADDRESS OF OPERATOR CONTROL AVT                     *
*    REGISTER 3 - ADDRESS OF OPERATOR CONTROL ELEMENT                 *
*    REGISTER 4 - ADDRESS OF TCAM AVT                                 *
*    REGISTER 5 - ADDRESS OF LINE CONTROL BLOCK                       *
*    REGISTER 6 - ADDRESS OF GENERAL POLL INVITATION CHARACTERS       *
*    REGISTER A - LENGTH OF EACH INVITATION ENTRY                     *
*    REGISTER B - ADDRESS OF INVITATION LIST                          *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER 0 - NUMBER OF APPROPRIATE OPERATOR AWARENESS MESSAGE    *
*                                                                     *
*    RETURN CODES:                                                    *
*    0 - GENERAL POLL WAS STOPPED                                     *
*    8 - GENERAL POLL WAS ALREADY STOPPED                             *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         'XCTL' (SVC 7) TO TRANSFER CONTROL TO ANOTHER MODULE        *
*                                                                     *
* EXITS,NORMAL --                                                     *
*         GENERAL POLL WAS STOPPED                                    *
*         RESPONSE MESSAGE NUMBER WAS SET UP                          *
*         X'00' RETURN CODE WAS SET UP                                *
*         XCTL TO CHECKPOINT MODULE IGC0610D                          *
*                                                                     *
*         GENERAL POLL WAS ALREADY STOPPED                            *
*         RESPONSE MESSAGE NUMBER WAS SET UP                          *
*         X'08' RETURN CODE WAS SET UP                                *
*         XCTL TO ERROR MODULE IGC0910D                               *
*                                                                     *
* EXITS,ERROR --                                                      *
*         NONE                                                        *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    OPERATOR CONTROL AVT                                             *
*    OPERATOR CONTROL ELEMENT                                         *
*    LINE CONTROL BLOCK                                               *
*    INVITATION LIST                                                  *
*                                                                     *
* ATTRIBUTES --                                                       *
*    SERIALLY REUSABLE, REFRESHABLE, DISABLED, TRANSIENT,             *
*    SUPERVISOR MODE.                                                 *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    SEE NOTES BELOW.                                                 *
*                                                                     *
* NOTES --                                                            *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO*
*    THAT REDEFINITION OF ''CHARACTER'' CONSTANTS, BY REASSEMBLY, WILL*
*    RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.              *
*    COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS PRIMARILY*
*    THROUGH THE OPERATOR CONTROL AVT.                                *
*
*     DEPENDENCIES - NONE                                      @Y17XART
*     RESTRICTIONS - NONE                                      @Y17XART
*     REGISTER CONVENTIONS - STANDARD OP CTL                   @Y17XART
*     PATCH LABEL - SEE ORG AT END OF DC'S                     @Y17XART
*
* MODULE TYPE - CSECT                                          @Y17XART
*    PROCESSOR - ASSEMBLER                                     @Y17XART
*    MODULE SIZE - MAXIMUM 2 K                                 @Y17XART
*                                                                     *
***********************************************************************
         EJECT
*                            R E G I S T E R  E Q U A T E S
RZERO    EQU   0                        PARAMETER REGISTER
RPARM    EQU   1                        PARAMETER REGISTER
ROPCAVT  EQU   2                        POINTER TO OP CONTROL AVT
ROPCE    EQU   3                        POINTER TO CURRENT OPCE
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORKA   EQU   5                        POINTER TO RESIDENT WORKAREA
RRLNKA   EQU   5                        RELATIVE LINE NUMBER
RLCB     EQU   5                        LCB BASE
RLCB1    EQU   6                        LCB BASE
RENTRY   EQU   6                        G.P. ENTRY ADDRESS
RTERM    EQU   6                        TERM ENTRY BASE
RSCB     EQU   6                        SCB ADDRESS
RTNT     EQU   6                        TERM NAME TABLE ADDRESS
RUCN     EQU   6                        UCB ADDRESS
RDCB     EQU   7                        DCB ADDRESS
ROFF     EQU   7                        OFFSET TO DDNAME, ADDR, RLN
RTOT     EQU   7                        LENGTH OF ENTRIES ACTIVATED
RWORK    EQU   8                        WORK REGISTER
RWORK1   EQU   9                        WORK REGISTER
RPREFIX  EQU   9                        BUFFER ADDRESS
RLENGTH  EQU   10                       LENGTH OF INVLIST ENTRY
RDEB     EQU   10                       DEB BASE
RLIST    EQU   11                       ADDRESS OF INVLIST ENTRIES
RQCB     EQU   11                       QCB ADDRESS
RBASE    EQU   12                       BASE FOR MODULE
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
CURR     EQU   14                       REGISTER 14            @Y17XARP
RBRNCH   EQU   15                       SUBROUTINE BRANCH ENTRY POINT
         SPACE 2
*                            M I S C E L L A N E O U S  E Q U A T E S
ZERO     EQU   0                        ZERO
ONE      EQU   1                        ONE
TWO      EQU   2                        TWO
THREE    EQU   3                        THREE
FOUR     EQU   4                        FOUR
FIVE     EQU   5                        FIVE
SIX      EQU   6                        SIX
SEVEN    EQU   7                        SEVEN
EIGHT    EQU   8                        EIGHT
X80      EQU   X'80'                    HEX80
X40      EQU   X'40'                    HEX40
X20      EQU   X'20'                    HEX20
X10      EQU   X'10'                    HEX10
X08      EQU   X'08'                    HEX08
X04      EQU   X'04'                    HEX04
X02      EQU   X'02'                    HEX02
X01      EQU   X'01'                    HEX01
ANYMOVED EQU   X'01'                    ANY ENTRIES MOVED
BUSY     EQU   4                        C.P.U. BUSY
CCODE    EQU   11                       CONDITION CODE
CVTPTR   EQU   16                       ADDRESS OF C.V.T.
DIST     EQU   X'40'                    DISTRIBUTION LIST
ENDACT   EQU   X'FE'                    END OF ACTIVE INDICATOR
EOT      EQU   X'80'                    EOT CHARACTER PRESENT
ERROR13  EQU   13                       ERROR MESSAGE
ERROR16  EQU   16                       ERROR MESSAGE
ERROR19  EQU   19                       ERROR MESSAGE
ERROR25  EQU   25                       ERROR MESSAGE
ERROR46  EQU   46                       ERROR MESSAGE
ERROR47  EQU   47                       ERROR MESSAGE
ERROR88  EQU   88                       ERROR MESSAGE
ERROR90  EQU   90                       ERROR MESSAGE
ERROR91  EQU   91                       ERROR MESSAGE
ERROR146 EQU   146                      ERROR MESSAGE
GOODHOLD EQU   51                       HOLD SUCCESSFUL
GPSTOP   EQU   144                      STOP G.P. MESSAGE
HKOFF    EQU   0                        OFFSET FOR IEDQHK
LCBPRIOR EQU   X'E0'                    PRIORITY FOR LCB
LINOPN   EQU   X'C1'                    OPEN INDICATOR
MVLEN    EQU   36                       LENGTH FOR MOVE
NAMELEN  EQU   2                        LENGTH FOR MOVE
ON       EQU   1                        BIT SETTING
STOPSNGL EQU   X'48'                    STOP WITHOUT HOLD
TR       EQU   3                        LENGTH OF THREE
VARINAME EQU   3                        OFFSET TO VARIABLE PART OF NAME
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING DEBNMSUB,RDEB            DEB ADDRESSABILITY
         USING IHADCB,RDCB              DCB ADDRESSABILITY
         USING IEDQQCB,RQCB             QCB ADDRESSABILITY
         USING IEDQTNTD,RTNT            TNT ADDRESSABILITY
         USING IEDQSCB,RSCB             SCB ADDRESSABILITY
         USING IEDQPRF,RPREFIX          BUFFER ADDRESSABILITY
         USING IEDQTRM,RTERM            TERM ENTRY ADDRESSABILITY
         SPACE 2
         BALR  RBASE,0                  SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
BASE     EQU   *
IGCV510D IEDHJN  V510D000
         LR    ROPCAVT,RPARM            SET UP AVT ADDRESSING
         L     RAVT,OPCAVTPT            TCAM AVT ADDRESSING
         L     ROPCE,OPCCOPCE           GET CURRENT ELEMENT POINTER
         LA    RENTRY,SEVEN(RLIST)      GET PRT TO FIRST ENTRY INDEX
         SR    RRET,RRET                CLEAR REGISTER
         IC    RRET,ONE(RLIST)          GET NUMBER OF ACTIVE ENTRIES
         SR    RLENGTH,RLENGTH          CLEAR REGISTER
         IC    RLENGTH,TWO(RLIST)       GET LENGTH OF EACH ENTRY
         LTR   RRET,RRET                ANY ACTIVE ENTRIES
         BZ    V510D018                 NO, MUST ALREADY BE STOPPED
         SPACE 2
V510D001 EQU   *
         AR    RENTRY,RLENGTH           GO TO NEXT ENTRY'S INDEX
         CLC   AVTEZERO(ONE,RENTRY),OCMODNME+THREE
*                                       IS THIS AN ACTIVE ENTRY
         BE    V510D201                 YES, GO DEACTIVATE IT
         TM    THREE(RLIST),EOT         EOT PRESENT
         BZ    V510D101                 NO, BRANCH
         CLI   TWO(RENTRY),ENDACT       END OF ACTIVES
         BCTR  RRET,ZERO                DECREMENT ACTIVE COUNTER
         BNE   V510D001                 NO, BRANCH
         B     V510D018                 YES, MUST ALREADY BE INACTIVE
V510D101 EQU   *
         CLI   ONE(RENTRY),ENDACT       END OF ACTIVES
         BCTR  RRET,ZERO                DECREMENT ACTIVE COUNTER
         BNE   V510D001                 NO, BRANCH
         B     V510D018                 YES, MUST ALREADY BE INACTIVE
V510D201 EQU   *
         OI    OPCFLAG1,ANYMOVED        SET MOVED INDICATOR
         LR    RWORK,RENTRY             SAVE NEXT ENTRY POINTER
         SR    RENTRY,RLENGTH           BACK UP ENTRY POINTER
         BCT   RRET,V510D002            SWAP ENTRIES
         B     V510D003                 GO TO NEXT ENTRY
         SPACE 2
V510D002 EQU   *
         EX    RWORK1,V510D098          THREE EXECUTES
         EX    RWORK1,V510D099          TO SWAP
         EX    RWORK1,V510D100          TWO ENTRIES
         AR    RENTRY,RLENGTH           ADJUST POINTER
         AR    RWORK,RLENGTH            ADJUST POINTER
         BCT   RRET,V510D002            IF NOT DONE RETURN
         SPACE 2
V510D003 EQU   *
         IC    RRET,TWO(RLIST)          GET LENGTH OF ENTRY
         TM    THREE(RLIST),EOT         IS THIS EOT-X'FE'(BSC)
         BO    V510D006                 YES, BRANCH
         SPACE 2
V510D004 EQU   *
         MVC   ONE(ONE,RWORK),AVTEZERO(RWORK) MOVE ONE CHARACTER AT
         BCTR  RWORK,ZERO               A TIME, STARTING WITH
         BCT   RRET,V510D004            THE LAST CHARACTER
         MVI   ONE(RWORK),ENDACT        INSERT ACTIVE END CHARACTER
         LA    RWORK,TWO(RWORK)         POINT TO G.P. INVLIST ENTRY
         SPACE 2
V510D005 EQU   *
         IC    RRET,ONE(RLIST)          GET COUNT OF ACTIVE ENTRIES
         BCTR  RRET,ZERO                SUBTRACT ONE
         STC   RRET,ONE(RLIST)          STORE NEW ACTIVE COUNT
         LA    RRET,ONE(RRET)           GET OLD ACTIVE COUNT
         SR    RTOT,RTOT                CLEAR REGISTER
         IC    RTOT,ZERO(RLIST)         GET TOTAL COUNT
         CR    RRET,RTOT                ANY INACTIVE ENTRIES
         BE    V510D018                 NO, BRANCH
         TM    OCSWITCH,OCOFFTPB        B OPTION               @OY14490
         BO    V510D018                 YES, SKIP ACTIVATING   @OY14490
*                                       TERMINALS              @OY14490
         B     V510D008                 GO COMPLETE INVLIST ADJUSTMENT
         SPACE 2
V510D006 EQU   *
         MVC   OCMODNME+FOUR(TWO),ONE(RWORK)
*                                       SAVE EOT-X'FE' CHARACTERS
         SPACE 2
V510D007 EQU   *
         MVC   TWO(ONE,RWORK),AVTEZERO(RWORK) MOVE ONE CHARACTER AT
         BCTR  RWORK,ZERO               A TIME, STARTING WITH
         BCT   RRET,V510D007            THE LAST CHARACTER
         MVC   ONE(TWO,RWORK),OCMODNME+FOUR RESET EOT-X'FE'
         LA    RWORK,THREE(RENTRY)      POINT TO G.P. INVLIST ENTRY
         B     V510D005                 GO UPDATE ACTIVE COUNT
         SPACE 2
V510D008 EQU   *
         SR    RTOT,RTOT                CLEAR REGISTER
         IC    RTOT,ZERO(RLIST)         GET TOTAL NUMBER OF ENTRIES
         SR    RTOT,RRET                COMPUTE COUNT OF INACTIVES
         MR    RTERM,RLENGTH            GET LENGTH OF ALL INACTIVES
         LA    RENTRY,ZERO(RLENGTH,RWORK) POINT TO SECOND INACTIVE ENT.
         LA    RWORK1,ZERO(RTOT,RWORK)  POINT TO LAST INACTIVE ENTRY
         SR    RBRNCH,RBRNCH            CLEAR REGISTER
         SPACE 2
V510D009 EQU   *
         CLC   ZERO(ONE,RWORK),ZERO(RENTRY) IS THE NEXT CONTROL
*                                       UNIT ADDR EQUAL TO THE GENERAL
*                                       POLL CONTROL UNIT ADDRESS
         BNE   V510D011                 NO, BRANCH
         BCTR  RLENGTH,ZERO             SET UP LENGTH FOR EXECUTE
         BCTR  RLENGTH,ZERO             SET UP LENGTH FOR EXEC @OX16689
         EX    RLENGTH,V510D105         SAME CONTROL UNIT      @OX16689
         LA    RLENGTH,ONE(,RLENGTH)    RESTORE ENTRY LENGTH   @OX16689
         BNE   SWAP                     NO, MUST BE TERMINAL GO@0X16689
*                                        MOVE TO ACTIVE SIDE   @OX16689
         LA    RLENGTH,ONE(,RLENGTH)    RESTORE ENTRY LENGTH   @OX16689
         B     V510D011                 CONTINUE CKNG ENTRIES  @OX16689
SWAP     EQU   *                                               @OX16689
         LA    RBRNCH,ONE(,RBRNCH)      INCREMENT COUNTER      @OX16689
         EX    RLENGTH,V510D092         THREE EXECUTES
         EX    RLENGTH,V510D093         TO SWAP
         EX    RLENGTH,V510D094         TWO ENTRIES
         LA    RLENGTH,ONE(RLENGTH)     RESTORE ENTRY LENGTH
         LR    RWORK,RENTRY             ADJUST POINTER TO G.P. ENTRY
         LA    RENTRY,ZERO(RLENGTH,RWORK) ADJUST PTR TO NEXT ENTRY
         SPACE 2
V510D010 EQU   *
         CR    RWORK,RWORK1             IS G.P. PTR EQUAL TO LAST PTR
         BNE   V510D009                 NO, CONTINUE CHECKING
         B     V510D012                 YES, GO ADJUST END OF ACTIVE
*                                       ENTRIES INDICATOR
         SPACE 2
V510D011 EQU   *
         CR    RENTRY,RWORK1            LAST ENTRY TO CHECK
         BE    V510D111                 YES, BRANCH
         BCTR  RLENGTH,ZERO             SET UP LENGTH FOR EXECUTE
         EX    RLENGTH,V510D095         THREE EXECUTES TO SWAP
         EX    RLENGTH,V510D096         THE NEXT ENTRY WTIH
         EX    RLENGTH,V510D097         ONE AT THE END OF INVLIST
         LA    RLENGTH,ONE(RLENGTH)     RESTORE LENGTH
         SPACE 2
V510D111 EQU   *
         SR    RWORK1,RLENGTH           BACK UP ONE ENTRY
         B     V510D010                 GO CHECK FOR END OF LIST
         SPACE 2
V510D012 EQU   *
         SR    RRET,RRET                CLEAR REGISTER
         IC    RRET,ONE(RLIST)          GET COUNT OF ACTIVE ENTRIES
         AR    RRET,RBRNCH              ADD NUMBER OF ENTRIES MOVED
         STC   RRET,ONE(RLIST)          STORE BACK NEW COUNT
         SPACE 2
V510D013 EQU   *
         SR    RRET,RRET                CLEAR REGISTER
         SPACE 2
V510D014 EQU   *
         LTR   RBRNCH,RBRNCH            ANY ENTRIES MOVED
         BZ    V510D018                 NO, BRANCH
         SPACE 2
V510D114 EQU   *
         AR    RRET,RLENGTH             INCREMENT LENGTH BY
         BCT   RBRNCH,V510D114          NUMBER OF ENTRIES MOVED
         SR    RWORK,RRET               BACK UP TO FIRST INACTIVE ENTRY
         BCTR  RWORK,ZERO               BACK UP TO ACTIVE END CHAR.
         LA    RBRNCH,ONE               SET AS A DECREMENT COUNTER
         TM    THREE(RLIST),EOT         IS THIS EOT-X'FE'(BSC)
         BO    V510D016                 YES, BRANCH
         SPACE 2
V510D015 EQU   *
         MVC   ZERO(ONE,RWORK),ONE(RWORK) MOVE ONE CHARACTER
         LA    RWORK,ONE(RWORK)         AT A TIME, STARTING
         BCT   RRET,V510D015            WITH THE LAST CHARACTER
         MVI   ZERO(RWORK),ENDACT       INSERT ACTIVE END CHARACTER
         B     V510D018                 CONTINUE PROCESSING
         SPACE 2
V510D016 EQU   *
         BCTR  RWORK,ZERO               BACK UP TO EOT CHARACTER
         MVC   OCMODNME+FOUR(TWO),ZERO(RWORK) SAVE EOT-X'FE'
         SPACE 2
V510D017 EQU   *
         MVC   ZERO(ONE,RWORK),TWO(RWORK) MOVE ONE CHARACTER
         LA    RWORK,ONE(RWORK)         AT A TIME, STARTING
         BCT   RRET,V510D017            WITH THE FIRST CHARACTER
         MVC   ZERO(TWO,RWORK),OCMODNME+FOUR RESET EOT-X'FE'
         SPACE 2
V510D018 EQU   *
         TM    OPCFLAG1,ANYMOVED        WAS G.P. ENTRY ALREADY STOPPED
         BO    V510D020                 NO, GO SET GOOD RETURN
         SPACE 2
V510D019 EQU   *
         TM    OCFLAG,OCMPP+OCTOTE      TOTE OR MPP
         LA    RZERO,ERROR146           ALREADY STOPPED MESSAGE
         BZ    V510D021                 NO, CHECK FOR LINE RESTART
         LA    RPARM,EIGHT              SET ALREADY CODE FOR TOTE
         B     V510D021                 GO CHECK FOR LINE RESTART
         SPACE 2
V510D020 EQU   *
         SR    RPARM,RPARM              SET GOOD RETURN
         SPACE 2
V510D021 EQU   *
         TM    OPCSPEC,OPCRSTRT         RESTART SITUATION
         BO    V510D125                 YES BRANCH              SA60309
         TM    OCSWITCH,X40             SHOULD LINE BE RESTARTED
         BZ    V510D025                 NO, BRANCH
         SPACE 2
         SPACE 2
V510D023 EQU   *
         MVI   LCBPRI-IEDQLCB(RLCB),LCBPRIOR SET E0 PRIORITY IN BUFFER
         OI    LCBSTAT1-IEDQLCB(RLCB),LCBRECVN SET STATUS FOR START
         ST    RLCB,ZERO(RLCB)          MAKE LCB POINT TO ITSELF
         L     RWORK,CVTPTR             GET CVT ADDR           @Y17XARP
         L     RWORK,AVTCVTPT(RWORK)    GET ADDR OF TCX        @Y17XARP
         USING IEDQTCX,RWORK            ESTABLISH ADDRESSIBLTY @Y17XARP
         L     CURR,TCXREADY            GET ADDR OF CURRENT    @Y17XARP
*                                       ENTRY ON ASYN READY Q  @Y17XARP
NEWCURR  STCM  CURR,SEVEN,LCBLINK-IEDQLCB(RLCB)                @Y17XARP
*                                       LINK NEW ELEMENT TOOLD @Y17XARP
         CS    CURR,RLCB,TCXREADY       WAS CURR ELEM UPDATED  @Y17XARP
*                                       ASYNCHRONOUSLY         @Y17XARP
         BNE   NEWCURR                  YES, LINK NEW ELEM TO  @Y17XARP
*                                       CURR ELEM. NO, ASYN    @Y17XARP
*                                       READY QUEUE NOW HAS    @Y17XARP
*                                       NEW ELEM               @Y17XARP
         CLI   OCOPTCDE,STOPSNGL        TOTE DEACTIVATE ONLY
         BE    V510D025                 YES BRANCH
         LTR   RPARM,RPARM              ERROR OR GOOD
         BNZ   V510D028                 ERROR, BRANCH
         SPACE 2
V510D025 EQU   *
         NI    OCFLAG,OCFOXES-OCLINE    TURN OFF BIT
         OI    OCSWITCH,X40             TERMINAL INDICATOR TO MSG MOD.
         LTR   RPARM,RPARM              IS IT A GOOD RETURN
         BNZ   V510D028                 NO, BRANCH
V510D125 EQU   *                                                SA60309
         MVC   OPCLDNME+VARINAME(NAMELEN),CHECKPT SET-TO GO TO CHECKPT
         MVC   OCWTG(NAMELEN),WRTMSG    SET WTG TO MESSAGE MODULE
         MVI   OCPARM,ZERO              CLEAR FIRST BYTE
         MVI   OCPARM+ONE,GPSTOP        SET UP SO CHECKPOINT CAN SET
         SPACE 2
V510D026 EQU   *
         TM    OCFLAG,OCTOTE+OCMPP      TOTE OR MPP
         BZ    V510D027                 NO, BRANCH
         MVC   OCWTG(NAMELEN),WRITE     SET MESSAGE MODULE FOR CHECKPT
         STH   RPARM,OCPARM             SET PARAMETER FIELD
         MVC   OPCLDNME+VARINAME(NAMELEN),WRITE SET WRITER NAME
         SPACE 2
V510D027 EQU   *
         NI    OPCFLAG1,ZERO            CLEAR FLAGS
         LR    RPARM,ROPCAVT            PICK UP OPERATOR CONTROL AVT
         XCTL  SF=(E,OPCXCTL)           TRANSFER TO NEXT MODULE
         SPACE 2
V510D028 EQU   *
         LA    RPARM,EIGHT              SET BAD RETURN CODE
         MVC   OCWTG(NAMELEN),AVTFZERO  INDICATE NO CONTINUE
         MVC   OPCLDNME+VARINAME(NAMELEN),WRTMSG SET TO GO TO ERR MOD
         B     V510D026                 GO PROCESS ERROR MESSAGE
         SPACE 2
V510D092 XC    ZERO(ZERO,RWORK),ZERO(RENTRY) SWAP
V510D093 XC    ZERO(ZERO,RENTRY),ZERO(RWORK)  TWO
V510D094 XC    ZERO(ZERO,RWORK),ZERO(RENTRY)   ENTRIES
V510D095 XC    ZERO(ZERO,RENTRY),ZERO(RWORK1) SWAP
V510D096 XC    ZERO(ZERO,RWORK1),ZERO(RENTRY)  TWO
V510D097 XC    ZERO(ZERO,RENTRY),ZERO(RWORK1)   ENTRIES
V510D098 XC    ONE(AVTEZERO,RWORK),ONE(RENTRY) SWAP
V510D099 XC    ONE(AVTEZERO,RENTRY),ONE(RWORK)  TWO
V510D100 XC    ONE(AVTEZERO,RWORK),ONE(RENTRY)   ENTIRES
V510D105 CLC   ZERO(ZERO,RWORK),ZERO(RENTRY) COMPARE POLL CHARS@OX16689
         SPACE 2
ERRORTAB DS    0F                       ERROR TABLE
XCTL03   DC    C'03'                    ERROR MODULE NAME
CHECKPT  DC    C'06'                    CHECKPOINT MODULE NAME
WRITE    DC    C'07'                    OUTPUT WRITER NAME
WRTMSG   DC    C'09'                    HOLD, RELEASE, AND VARY MESSAGE
STOPLN   DC    C'V1'                    STOPLINE MODULE
FIRSTLD  DC    C'00'                    FIRST LOAD
HOLD     DC    C'H0'                    HOLD MODULE
STPTERM  DC    C'V2'                    STOP TERMINAL MODULE
         ORG   IGCV510D+1024            PATCH AREA
         EJECT
         TAVTD
         EJECT
         TTCXD SVS
         EJECT
         DCBD  DSORG=TX
         EJECT
         TDEBD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TLCBD
         EJECT
         TQCBD
         EJECT
         TPRFD
         EJECT
         TSCBD
         EJECT
         TTNTD
         EJECT
         TTRMD
         END
