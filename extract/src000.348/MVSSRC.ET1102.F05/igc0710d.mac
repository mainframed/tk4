         TITLE 'IGC0710D - OUTPUT MESSAGE ROUTER FOR OP CONTROL'
IGC0710D CSECT
         SPACE 3
*CHANGE-ACTIVITY = AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A000000-999999                                                  S99240
*D444000-445000                                                 SA59003
*A124000,150000,175000,553000                                   SA67103
*C296000-305000,443000-484000,523500-526000                     SA67103
*D195500                                                        SA67103
*               67103 RE-WROTE                                  SA67068
*C559000                                                        SA65449
*A215000                                                       @YA05128
*A442000                                                       @YA05139
*D479000-482000                                                @YA05139
*A278000,279000                                                @YA06888
*A473000                                                       @SA74873
*A171500,226000                                                @YA10424
*A015000,046000,048000,115000,121500,519000                    @Y17XARX
*C006000,008000,015000,026000,048000,065000,081000,461000      @Y17XARX
*C562800                                                       @Y17XARX
*D005000,005500,562600                                         @Y17XARX
*C278500                                                       @OY13278
*A560000                                                       @OY13278
         SPACE 3
***********************************************************************
*                                                                     *
* MODULE NAME = IGC0710D (TCAM, OPERATOR CONTROL)              @Y17XARX
*                                                                     *
*  DESCRIPTIVE NAME = OUTPUT MESSAGE WRITER                           *
*                                                                     *
* STATUS = VERSION 10.0                                        @Y17XARX
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*FUNCTION -                                                           *
*                                                                     *
*        THIS MODULE GAINS CONTROL VIA AN XCTL FROM VARIOUS OPERATOR  *
*        CONTROL ROUTINES WHICH WANT TO OUTPUT A MESSAGE TO A TERMINAL*
*        A CONSOLE OR SSCP MH OR PASS A RETURN CODE TO TOTE    @Y17XARX
*        OR AN MPP.                                            @Y17XARX
*                                                                     *
*        UPON ENTRY IT CHECKS THE CURRENT ELEMENT FIELD IN THE OPCAVT.*
*        IF THERE ISN'T AN ELEMENT IT CHECKS TO SEE IF THERE IS ANY   *
*        CONSOLE INPUT OR OUTPUT. IT PICKS UP THE LENGTH OF THE       *
*        MESSAGE FROM THE OPERATOR CONTROL RESIDENT WORK AREA AND     *
*        CHECKS IF FOR 0. IF 0 IT XCTLS TO THE MODULE INDICATED BY THE*
*        ID IN THE WTG FIELD OR IT FREES BUFFER UNITS BY TPOSTING THEM*
*        TO BUFFER RETURN IF THERE ISN'T AN ID IN THE WTG FIELD.      *
*                                                                     *
*        IF THERE IS AN ELEMENT PRESENT IT DETERMINES WHERE THE OUTPUT*
*        IS GOING; EITHER TOTE,MPP,CONSOLE OR TERMINAL.               *
*                                                                     *
*        IF TOTE; IT POSTS TOTE'S ECB COMPLETE THEN FREES ANY UNITS   *
*        ASSOCIATED WITH THE COMMAND.                                 *
*                                                                     *
*        IF MPP; IT POSTS THE MPP COMPLETE THEN FREES ANY BUFFER      *
*        UNITS ASSOCIATED WITH THE COMMAND.                           *
*                                                                     *
*        IF CONSOLE; IT USES A WTO TO OUTPUT THE MESSAGE TO THE CONSOLE
*        IF NO BUFFER UNITS ARE ASSOCIATED WITH THE COMMAND IT XCTLS  *
*        BACK TO IGC0010D. IF UNITS ARE ASSOCIATED IT XCTLS TO THE    *
*        MODULE INDICATED BY THE ID IN THE WTG FIELD. IF ONE IS       *
*        PRESENT. IF ONE ISN'T PRESENT IT FREES BUFFER UNITS BY       *
*        TPOSTING THEM TO BUFFER DISPOSITION.                         *
*                                                                     *
*        IF OUTPUT IS FOR A TERMINAL IT MOVES THE MESSAGE FROM THE    *
*        RESIDENT WORKAREA INTO BUFFER UNITS THEN IT INITIALIZES A    *
*        DUMMY LCBAND SCB IN ORDER TO GET THE OUTPUT MESSAGE ON THE   *
*        CORRECT OUTPUT QUEUE BY USING THE LCBSETUP SUBROUTINE IN     *
*        IEDQCA. THEN IT TPOSTS THE BUFFER TO BUFFER DISPOSITION.     *
*                                                                     *
*        IF OUTPUT IS FOR SSCP MH, IGC0710D MOVES THE MESSAGE  @Y17XARX
*        FROM THE RESIDENT WORKAREA INTO BUFFER UNITS, INITIAL-@Y17XARX
*        IZES THE BUFFER TO BE PROCESS THROUGH THE SSCP MH,AND @Y17XARX
*        SETS UP THE RH.  IGCO710D TPOST THE BUFFER TO SSCP    @Y17XARX
*        DESTINATION QUEUE.                                    @Y17XARX
*                                                              @Y17XARX
* NOTES = COMMUNICATION BETWEEN THE VARIOUS TRANSIENT MODULES  @Y17XARX
* IS PRIMARILY THORUGH THE OPERATOR CONTROL AVT.               @Y17XARX
*        DEPENDENCIES = NONE                                   @Y17XARX
*        RESTRICTIONS = NONE                                   @Y17XARX
*        REGISTER CONVENTIONS = OPERATOR CONTROL               @Y17XARX
*        PATCH LABEL = PATCH                                   @Y17XARX
*                                                              @Y17XARX
* MODULE TYPE = PROCEDURE                                      @Y17XARX
*        PROCESSOR = ASSEMBLER                                 @Y17XARX
*        MODULE SIZE = 1050 BYTES                              @Y17XARX
*        ATTRIBUTES = REFRESHABLE,DISABLED,SERIALLY REUSABLE,  @Y17XARX
*        TRANSIENT(TYPE 4),SUPERVISOR MODE                     @Y17XARX
*                                                              @Y17XARX
* ENTRY POINT = IGC0710D                                       @Y17XARX
*        PURPOSE = SEE FUNCTION                                @Y17XARX
*        LINKAGE = XCTL SF( E, OPCXCTL)                        @Y17XARX
*                                                                     *
*INPUT -                                                              *
*        POINTER TO THE OPERATOR CONTROL AVT IN REGISTER 1 AND        *
*        A PARAMETER IN REGISTER ZERO.                                *
*                                                                     *
*OUTPUT - TPOST ECB FOR TOTE OR MPP                                   *
*            PASSES CIB                                               *
*            IN CIB IS RETURN CODE                                    *
*               0 - FUNCTION REQUESTED WAS SUCCESSFUL                 *
*               4 - FUNCTION REQUESTED WAS UNSUCCESSFUL               *
*               8 - FUNCTION REQUESTED HAS ALREADY BEEN DONE          *
*                                                                     *
*         CONSOLE                                                     *
*            WRITES OUTPUT MESSAGE                                    *
*                                                                     *
*         TERMINAL                                                    *
*            TPOST BUFFER CONTAINING THE MESSAGE TO IEDQBD     @Y17XARX
*                                                              @Y17XARX
*         TERMINAL (SSCP)                                      @Y17XARX
*            TPOST BUFFER CONTAINING THE MESSAGE TO SSCP D.QUE @Y17XARX
*                                                                     *
*EXTERNAL ROUTINES -                                                  *
*        SVC 7 (XCTL)                                                 *
*        SVC 102 (AQCTL)                                              *
*        SVC 35 (WTO)                                                 *
*        OPCGETBF - ALLOCATE BUFFER SUBROUTINE IN IEDQCA              *
*        OPCLCB - LCBSETUP SUBROUTINE IN IEDQCA                       *
*                                                                     *
*EXITS -                                                              *
*        NORMAL - IGC0010D OR ANY MODULE WHOSE ID IS IN THE WTG FIELD *
*                                                                     *
*        ABNORMAL -                                                   *
*              NONE                                                   *
*                                                                     *
*TABLES/WORKAREAS -                                                   *
*        TCAM AVT,OP CONTROL AVT, OPCE,IEAQFX,PCB,PRF,PRF1,RH, @Y17XARX
*        SECONDARY AVT                                         @Y17XARX
*                                                                     *
*ATTRIBUTES -                                                         *
*        REFRESHABLE,DISABLED,SERIALLY REUSABLE,TRANSIENT (TYPE 4)    *
*        SUPERVISOR MODE                                              *
*                                                                     *
*NOTES -                                                              *
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING     *
*        HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER          *
*        CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     *
*        FOR THE NEW DEFINITION.                                      *
*                                                                     *
*        COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS      *
*        PRIMARILY THROUGH THE OPERATOR CONTROL AVT.                  *
*                                                                     *
***********************************************************************
         EJECT
         SPACE
*                          E Q U A T E S
         SPACE
RZERO    EQU   0                        PARAMETER REGISTER
RPARM    EQU   1                        PARAMETER REGISTER
ROPCAVT  EQU   2                        POINTER TO OP CONTROL AVT
ROPCE    EQU   3                        POINTER TO CURRENT ELEMENT
RAVT     EQU   4                        POINTER TO TCAM AVT
RCIB     EQU   5                        CIB POINTER
RKEY     EQU   5                        UNIT LENGTH
RWORKA   EQU   6                        POINTER TO WORKAREA
RHOLD    EQU   7                        WORK REGISTER
RWORK    EQU   8                        WORK REGISTER
RPREFIX  EQU   9                        UNIT POINTER
RDATA    EQU   9                        POINTER TO MSG IN WORKAREA
RBUFF    EQU   10                       DATA POINTER IN UNITS
RSAVTPTR EQU   10                       TO ACCESS SAVT FIELDS  @Y17XARR
RLEN     EQU   11                       LENGTH OF OUTPUT MESSAGE
RBASE    EQU   12                       BASE FOR MODULE
R13      EQU   13                       BASE FOR REGSAVE AREA IN OPCAVT
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
RBRNCH   EQU   15                       SUBROUTINE ENTRY POINTER
         SPACE 2
*        M I S C E L L A N E O U S       E Q U A T E S
ADDRESS  EQU   7                        PICKUP 3 BYTE ADRESS   @Y17XARR
ADDRLEN  EQU   3                        LENGTH OF ADDRESS
ALL      EQU   120                      LENGTH OF 120
BEGIN    EQU   0                        OFFSET TO BEGINNING OF DATA
BLANK    EQU   X'40'                    BLANK CHARACTER         SA67103
BUSY     EQU   4                        BIT ON FROM TS INSTRUCTION
BYTETWO  EQU   16                       SPECIAL SHIFT FOR ERROR 63
CODELEN  EQU   4                        LENGTH OF WTO CODE FIELDS
CODEOFF  EQU   5                        OFFSET TO WTO CODES
ECB      EQU   12                       OFFSET TO ECB ADDR IN CIB
END      EQU   0                        LAST OF MESSAGE
ENDLIST  EQU   128                      END OF AQCTL LIST
EOT      EQU   X'37'                    END OF TRANSMISSION
EXTRA    EQU   1                        ONE BYTE LENGTH
FREE     EQU   1                        210D CODE TO RELEASE UNITS
LAST     EQU   40                       LAST MOVE LENGTH
LASTDATA EQU   380                      LAST MOVE TO ADDRESS
LASTMOVE EQU   500                      LAST MOVE FROM ADDRESS
LEFT     EQU   6                        OFFSET TO REMAINING SPACE
LENCOUNT EQU   4                        FIRST FOUR  BYTES OF WTO
LENLEN   EQU   2                        LENGTH OF LENGTH FIELD
LENOFF   EQU   0                        OFFSET IN WORKAREA TO MSG LENGT
LENTWO   EQU   2                        LENGTH OF TWO
LINK     EQU   4                        LENGTH OF LINK FIELD
MCSLEN   EQU   2                        LENGTH OF WTO FLAGS
MCSFLAG  EQU   2                        OFFSET TO WTO FLAGS
MSGOFF   EQU   4                        LOCATION OF MESSAGE IN WORKAREA
NAMELEN  EQU   2                        LENGTH OF XCTL NAME CHANGE
NOTBUSY  EQU   8                        EIGHT                    S22024
NOTCA    EQU   2                        ENTRY NOT FROM IEDQCA
NOTONES  EQU   14                       CONDITION CODE FOR BCR  SA67103
NOTTERM  EQU   128                      FREE UNITS ONLY
ONE      EQU   1                        OFFSET OF ONE
OUTTOTE  EQU   64                       SPECIAL FLAG FOR TOTE IN-OUT
PASTOLT  EQU   4                        OFFSET TO PASS OLT=
POST     EQU   12                       POST FLAGS FOR 102
REMDATA  EQU   244                      OFFSET TO LAST OF DATA
REST     EQU   256                      LENGTH OF LAST PART OF DATA
RETCODE  EQU   11                       OFFSET IN CIB FOR RETURN CODE
SECDATA  EQU   124                      OFFSET TO SECOND PART OF DATA
SIZELEN  EQU   2                        LENGTH OF PRFSIZE
START    EQU   4                        OFFSET TO NEXT BYTE IN UNIT
TCB      EQU   9                        OFFSET FOR TCB ADDR IN 102 LIST
THREE    EQU   3                        LENGTH OF THREE
TIC      EQU   8                        TIC COMMAND
TJID     EQU   4                        OFFSET TO TJID
TOTECON  EQU   X'0C'                    TRM FROM CONSOLE
TOTETERM EQU   X'10'                    TRM FROM TERMINAL
VARINAME EQU   3                        OFFSET TO CHANGE LOAD NAME
CKPMOD   EQU   C'6'                     ID OF CHECKPOINT MODULE  S22024
WORD     EQU   4                        LENGTH OF ONE WORD
WTGLEN   EQU   2                        LENGTH OF NAME CHANGE
ZERO     EQU   0                        ZERO                     S22024
FOUR     EQU   4                        DISPLACEMENT           @ZM46693
USEASCB  EQU   X'80'                    HAVE ASCB PTR FLAG     @ZM46693
EIGHT    EQU   8                        EIGHT                    S22024
SWAP     EQU   X'02'                    FLAG TO MAKE SWAPPABLE @YA10424
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING IEDQTRM,RPARM            TERMINAL ADDRESSABILITY SA67103
         SPACE
         BALR  RBASE,0                  MODULE BASE
         USING *,RBASE                  MODULE ADDRESSABILITY
IGC0710D IEDHJN SKIPID
         LR    ROPCAVT,RPARM            SET AVT BASE
         L     RAVT,OPCAVTPT            ADDRESS TCAM AVT
         MVI   OPCLDNME+VARINAME+ONE,CKPMOD SET CHECKPOINT AS    S22024
*                                        NEXT MODULE             S22024
         TM    OPCSPEC,OPCRSTRT         RESTART IN PROGRESS      S22024
         BO    XCTL                     YES, EXIT                S22024
         MVC   OPCLDNME+VARINAME(NAMELEN),FIRSTLD SET NEXT MOD
         L     RWORKA,OPCWORK           ADDRESS OF WORKAREA IN IEDQCA
         LA    R13,OPCSAVE              ADDRESS OF SAVEAREA IN OPCAVT
         L     ROPCE,OPCCOPCE           GET ELEMENT ADDRESS
         LTR   ROPCE,ROPCE              NO ELEMENT?
         BZ    CONOUT                   CORRECT, CONSOLE INPUT, OUTPUT
         SPACE
         CLC   OCOPTCDE(LENTWO),TOTEOUT REQUEST TO POST OLT TO TOTE?
         BNE   TESTMPP                  NO, TEST NORMAL OUTPUT
         SPACE
         OI    OPCFLAG1,OUTTOTE+NOTTERM INDICATE SPECIAL TOTE PROCESS
         MVI   OCSWITCH,TOTETERM        DEFAULT TO TERM INPUT
         TM    OCFLAG,OCCONSOL          INPUT FORM CONSOLE?
         BNO   TESTMPP                  NO, FROM SECONDARY TERM
         SPACE
         MVI   OCSWITCH,TOTECON         INDICATE CONSLE INPUT TO TOTE
         NI    OCFLAG,OCFOXES-OCCONSOL  TURN OFF CONSOLE FLAG
*        TEST MPP OR TOTE
TESTMPP  EQU   *
         TM    OCFLAG,OCTOTE+OCMPP      TOTE OR MPP COMMAND
         BZ    TESTCON                  NO, TEST FOR CONSOLE INPUT
         TITLE 'IGC0710D - TOTE, MPP POST ROUTINE'
         L     RCIB,OCCIB               GET CIB ADDRESS
         LR    RWORK,RZERO              INSERT MSG NUM IN REG 8
         N     RWORK,AVTCLRHI           CLEAR HI ORDER 2 BYTES
         CH    RWORK,CLOSEMSG           MSG NUM EQUAL 63
         BNE   STORECDE                 NO
         SR    RZERO,RZERO              YES ZERO OUT TO INDICATE GOOD
*                                       RETURN CODE
STORECDE EQU   *
         LA    RWORK,AVTHRESE           GET ADDR OF THRESHOLD  @YA05128
*                                        CLOSEDOWN ELEMENT     @YA05128
         LA    RCIB,0(RCIB)             CLEAR HIGH ORDER BYTE  @YA05128
         CR    RCIB,RWORK               IS THIS THE CIB        @YA05128
         BE    CONOUT                   YES, MESSAGE GOES TO   @YA05128
*                                        CONSOLE               @YA05128
         TM    OCFLAG,OCTOTE            TOTE INPUT FOR COMMAND?
         BO    POSTTOTE                 YES, ISSUE POST FOR TOTE
         SPACE 1
         LA    RWORK,AIBKEY-IEDQAIB     BACK UP TO BEGINNING OF@ZM46693
         SR    RCIB,RWORK               THE AIB                @ZM46693
         USING IEDQAIB,RCIB             AIB ADDRESSABILITY     @ZM46693
         SR    RHOLD,RHOLD              CLEAR REGISTER         @ZM46693
         ICM   RHOLD,ONE,AIBOPRC        CHECK FOR RET CODE     @ZM46693
         BNZ   GOMPP                    BR IF RC ALREADY SET   @ZM46693
         LTR   RZERO,RZERO              RET CODE IN R0         @ZM46693
         BZ    GOMPP                    BR IF GOOD COMPLETION  @ZM46693
         STC   RZERO,AIBOPRC            SET ERROR CODE         @ZM46693
         SPACE 1
GOMPP    EQU   *                                               @ZM46693
         L     RHOLD,AIBPCBAD           PTR TO PCB OR ASCB     @ZM46693
         TM    AIBPCBAD,USEASCB         DO WE HAVE THE ASCB PTR@ZM46693
         BO    SETPARMS                 BRANCH IF YES          @ZM46693
         L     RHOLD,PCBPEBAD-IEDQPCB(RHOLD)   GET PEB ADDRESS @ZM46693
         LTR   RHOLD,RHOLD              HAS APPL PROGRAM CLOSED@ZM46693
         BZ    FREEUNIT                 BRANCH IF YES          @ZM46693
         L     RHOLD,PEBASCB-IEDQPEB(RHOLD)  GET ASCB PTR      @ZM46693
         LTR   RHOLD,RHOLD              IS APPL PROG IN THE    @ZM46693
*                                       PROCESS OF CLOSING     @ZM46693
         BM    FREEUNIT                 BRANCH IF YES          @ZM46693
         SPACE 1
SETPARMS EQU   *                                               @ZM46693
         LA    RHOLD,ZERO(RHOLD)        CLEAR HI ORDER BYTE    @ZM46693
         L     RPARM,AIBECBA            GET ECB TO BE POSTED   @ZM46693
         L     RWORK,CVTPTR             GET CVT PTR            @ZM46693
         LA    RWORK,CVTBRET-CVTMAP(RWORK) XMPOST ERR EXIT ADDR@ZM46693
         ICM   RWORK,EIGHT,HEX80        FLAG TELLING XMPOST NOT@ZM46693
*                                       TO RESTORE REGISTERS   @ZM46693
         ST    RPARM,AIBXMLST           SET POINTERS IN XMPOST @ZM46693
         STM   RHOLD,RWORK,AIBXMLST+FOUR     SET PARMS IN LIST @ZM46693
         LA    RPARM,AIBXMLST           SET PARM REGISTER      @ZM46693
         SR    RZERO,RZERO              CLEAR COMP CODE REG    @ZM46693
         POST  ,(0),MF=(E,(1))          XMPOST                 @ZM46693
         DROP  RCIB                     FREE REGISTER          @ZM46693
         SPACE 2
         TM    AVTBIT1,AVTCLOSN         CLOSEDOWN IN EFFECT?
         BO    HAVEID                   YES - DON'T FREE UNITS
         B     FREEUNIT                 FREE ATTACHED UNITS
         SPACE
POSTTOTE EQU   *
         STC   RZERO,RETCODE(RCIB)      SET RETURN CODE        @ZM46693
         L     RWORK,ECB(RCIB)          GET ECB ADDR FOR POST  @ZM46693
         LR    RPARM,RWORK              POINT 1 TO ECB
         SPACE
         POST  (1)                      POST COMPLETION IN TOTE ECB
         SPACE 2
         B     FREEUNIT                 FREE ATTACHED UNITS
         TITLE 'IGC0710D - CONSOLE OUTPUT WRITER'
CONOUT   EQU   *
         SRL   RZERO,BYTETWO            SHIFT FOR CONSOLE ID
         B     HAVEID                   CONSOLE ID SET
         SPACE
*        TEST CONSOLE
TESTCON  EQU   *
         TM    OCFLAG,OCCONSOL          CONSOLE INPUT FOR COMMAND?
         BO    AROUND                   YES
         TM    AVTBIT1,AVTCLOSN         CLOSEDOWN IN EFFECT?
         BO    HAVEID                   YES
         B     CHEKUNIT                 NO CHECK BUFFER UNITS
         SPACE
AROUND   EQU   *
         SR    RZERO,RZERO              CLEAR TO RECEIVE CONSOLE ID
         IC    RZERO,OCCONID            PICK UP CONSOLE ID FROM ELEM
HAVEID   EQU   *
         SPACE
         LH    RWORK,LENOFF(RWORKA)     PICK UP MESSAGE LENGTH
         LTR   RWORK,RWORK              ZERO LENGTH?
         BZ    CHEKXCTL                 BRANCH IF YES            S22024
         LA    RLEN,WTOLEN              GET LENGTH OF WTO LINE   S22024
         SPACE
WRTCONT  EQU   *
         LA    RWORK,LENCOUNT(RWORK)    ADD MSG. FLAGS TO LENGTH
         STH   RWORK,LENOFF(RWORKA)     STORE IN WTO LIST
         SR    RWORK,RLEN               CK FOR MORE DATA THAN LINE LEN
         BNP   ENDWRT                   NO, DO WTO
         STH   RLEN,LENOFF(RWORKA)      YES, SET LINE LEN TO MAX.
         SPACE
ENDWRT   EQU   *
         LR    RPARM,RWORKA             POINT TO MESSAGE
         MVC   MCSFLAG(MCSLEN,RWORKA),WTOOUT+MCSFLAG PLACE WTO FLAGS
         AH    RWORKA,LENOFF(RWORKA)    CODES IN MESSAGE
         MVC   OPCDOUBL(CODELEN),AVTEZERO(RWORKA) SAVE 4 BYTES OF DATA
         MVC   AVTEZERO(CODELEN,RWORKA),WTOOUT+CODEOFF SET WTO CODES
         LTR   RRET,RZERO               CONSOLE ID THERE       @OY13278
         BNZ   USEID                    YES, GO USE IT         @OY13278
         NI    MCSFLAG(RPARM),NOTREGO   INDICATE TO USE MCSFLAG@OY13278
         MVC   AVTEZERO(CODELEN,RWORKA),MSCON SET MASTER CONSOL@OY13278
USEID    EQU   *                                               @OY13278
         WTO   MF=(E,(1))               WRITE LINE OF MESSAGE
         LR    RZERO,RRET               RESTORE CONSOLE ID     @YA06888
         MVC   AVTEZERO(CODELEN,RWORKA),OPCDOUBL RESTORE SAVED DATA
         SH    RWORKA,AVTHA4            BACK UP FOR LENGTH & MCSFLAGS
         LTR   RWORK,RWORK              ANY DATA LEFT
         BP    WRTCONT                  YES, RETURN FOR NEXT WTO
         TITLE 'IGC0710D - FREE UNIT CODE'
CHEKXCTL EQU   *
         LTR   ROPCE,ROPCE              NO BUFFERS?
         BZ    SETPARM                  CALL 010D
         TM    AVTBIT1,AVTCLOSN         CLOSEDOWN IN EFFECT?
         BO    SETPARM                  YES, CALL 010D
         SPACE
         OC    OCWTG(WTGLEN),OCWTG      WHERE TO GO SET?
         BNZ   ENDOUT                   YES, SET MOD NAME
         SPACE
         USING IEDQPRF,ROPCE
FREEUNIT EQU   *
         BAL   RRET,CHKATTCH            GO CHECK OCATTACH       SA67103
         LR    RPARM,ROPCE              GET BFR TO BE FREED     SA67103
         L     RBRNCH,OPCFREBF          ADDR OF FREE-BFR RTN    SA67103
         BALR  RRET,RBRNCH              GO FREE OPCE'S UNITS    SA67103
         B     SETPARM                  GO PREPARE TO EXIT      SA67103
         TITLE 'IGC0710D - TERMINAL OUTPUT ROUTINE'
         USING IEDQOPCE,ROPCE
COUNTBUF EQU   *
         LR    RPREFIX,ROPCE            GET START POINTER
CLEARCTR EQU   *
         SR    RWORK,RWORK              CLEAR COUNTER
         USING IEDQPRF,RPREFIX
UNITCNT  EQU   *
         EX    RPREFIX,OPCHNEND    END OF CHAIN?
         BNZ   COUNTEND                 YES, GET TOTAL COUNT
         SPACE
         MVI   PRFTIC,TIC               SET TIC FIELD
         LR    RBUFF,RPREFIX            SAVE LAST UNIT POINTER
         L     RPREFIX,PRFTIC           GET TIC FIELD
         BCT   RWORK,UNITCNT            NEGATIVE COUNTER
         SPACE
COUNTEND EQU   *
         LPR   RWORK,RWORK              MAKE COUNT POSITIVE
         BR    RRET                     BACK TO PROCESSING
         EJECT
         SPACE
         USING IEDQOPCE,ROPCE
         DROP  RPREFIX                                           S22024
CHEKUNIT EQU   *                                                 S22024
         LH    RHOLD,LENOFF(RWORKA)     GET MESSAGE LENGTH       S22024
         TM    OCFLAG,OCOUTPUT          IS THIS MULTI-PART       S22024
*                                       OUTPUT REQUEST           S22024
         BO    MULTI                    BRANCH ON YES            S22024
         LA    RWORK,AVTHDRSZ+ONE       GET HEADER PREFIX SIZE   S22024
         DROP  ROPCE                                             S22024
         USING IEDQPRF,ROPCE                                     S22024
         STH   RWORK,PRFSIZE            SET INITIAL DATA SIZE    S22024
         BCTR  RWORK,ZERO               SET COUNT FOR SCAN       S22024
         SLL   RWORK,EIGHT              SHIFT SIZE TO HIGH       S22024
*                                       ORDER HALF OF HALFWORD   S22024
         STH   RWORK,PRFSCAN            SET INITIAL SCAN OFFSET  S22024
         MVI   PRFSTAT1,ZERO            SET BUFFER STATUS        S22024
         DROP  ROPCE                                             S22024
         USING IEDQOPCE,ROPCE                                    S22024
         ST    ROPCE,OCBACKUP           STORE ADDRESS OF FIRST   S22024
*                                       UNIT TO RECEIVE DATA     S22024
         LA    RWORK,PRFSHDR-IEDQPRF    GET OFFSET TO FIRST      S22024
*                                       BYTE OF DATA IN HEADER   S22024
         STH   RWORK,OCBACKUP+START     STORE START ADDRESS      S22024
         BAL   RRET,COUNTBUF            GET COUNT OF UNITS       S22024
         DROP  ROPCE                                             S22024
         USING IEDQPRF,ROPCE                                     S22024
         STC   RWORK,PRFNBUNT           SET UNIT COUNT IN BUFFER S22024
         LH    RLEN,AVTKEYLE            GET UNIT SIZE            S22024
         MR    RBUFF,RWORK              CALCULATE SPACE AVAILABLES22024
*                                       IN ALL UNITS             S22024
         SH    RLEN,PRFSIZE             SUBTRACT HEADER SIZE     S22024
         DROP  ROPCE                                             S22024
         USING IEDQOPCE,ROPCE                                    S22024
         STH   RLEN,OCBACKUP+LEFT       STORE AMOUNT OF SPACE    S22024
         LR    RBUFF,ROPCE              SET ADDRESS OF CURRENT   S22024
*                                       UNIT TO RECEIVE DATA     S22024
MULT2    EQU   *                                                 S22024
         LTR   RHOLD,RHOLD              IS MESSAGE LENGTH ZERO   S22024
         BZ    OUTPUT                   BRANCH ON YES            S22024
         CH    RHOLD,OCBACKUP+LEFT      IS ENOUGH SPACE          S22024
*                                       AVAILABLE FOR MESSAGE    S22024
         BH    NEEDUNIT                 BRANCH ON NO             S22024
MOVMSG   EQU   *                                                 S22024
         LA    RDATA,MSGOFF(RWORKA)     ADDRESS OF MESSAGE TEXT  S22024
         LR    RLEN,RHOLD               SAVE MESSAGE LENGTH      S22024
         DROP  ROPCE                                             S22024
         USING IEDQPRF,ROPCE                                     S22024
         AH    RHOLD,PRFSIZE            CALCULATE NEW DATA SIZE  S22024
         STH   RHOLD,PRFSIZE            STORE NEW SIZE           S22024
LOOP1    EQU   *                                                 S22024
         MVI   PRFTIC-IEDQPRF(RBUFF),TIC SET TIC COMMAND         S22024
         LH    RHOLD,AVTKEYLE           GET UNIT SIZE            S22024
         LA    RHOLD,AVTUMALN(RHOLD)    ADD OFFSET TO FIRST BYTE S22024
         DROP  ROPCE                                             S22024
         USING IEDQOPCE,ROPCE                                    S22024
         SH    RHOLD,OCBACKUP+START     CALCULATE SPACE AVAILABLES22024
*                                       IN THIS UNIT             S22024
         LR    RWORK,RLEN               SAVE MESSAGE LENGTH      S22024
         CR    RLEN,RHOLD               IS ENOUGH SPACE          S22024
*                                       AVAILABLE IN THIS UNIT   S22024
         BNH   MOVALL                   BRANCH ON YES            S22024
         LR    RWORK,RHOLD              AMOUNT OF DATA THAT      S22024
*                                       WILL FIT IN UNIT         S22024
MOVALL   EQU   *                                                 S22024
         BCTR  RWORK,ZERO               REDUCE FOR MOVE          S22024
         AH    RBUFF,OCBACKUP+START     ADD OFFSET TO AREA       S22024
         EX    RWORK,MOVEDATA           MOVE DATA INTO UNIT      S22024
         SH    RBUFF,OCBACKUP+START     RESTORE TO ORIGINAL      S22024
         LA    RWORK,ONE(RWORK)         RESTORE ORIGINAL COUNT   S22024
         AR    RDATA,RWORK              ADDRESS OF NEXT BYTE     S22024
*                                       TO MOVE                  S22024
         LH    RHOLD,OCBACKUP+START     GET START OFFSET         S22024
         AR    RHOLD,RWORK              CALCULATE NEW VALUE      S22024
         STH   RHOLD,OCBACKUP+START     STORE START ADDRESS      S22024
         LH    RHOLD,OCBACKUP+LEFT      GET AMOUNT OF SPACE LEFT S22024
         SR    RHOLD,RWORK              CALCULATE NEW VALUE      S22024
         STH   RHOLD,OCBACKUP+LEFT      STORE NEW VALUE          S22024
         SR    RLEN,RWORK               CALCULATE AMOUNT OF DATA S22024
*                                       REMAINING TO BE MOVED    S22024
*                                       HAS ALL BEEN MOVED       S22024
         BP    NOTALL                   BRANCH ON NO             S22024
         LH    RHOLD,AVTKEYLE           GET UNIT SIZE            S22024
         LA    RHOLD,AVTUMALN(RHOLD)    ADD OFFSET TO FIRST BYTE S22024
         CH    RHOLD,OCBACKUP+START     IS OFFSET AT END OF UNIT S22024
         BNE   OUTPUT                   BRANCH ON NO             S22024
NOTALL   EQU   *                                                 S22024
         L     RBUFF,PRFTIC-IEDQPRF(RBUFF) ADDRESS OF NEXT UNIT  S22024
         ST    RBUFF,OCBACKUP           SET NEXT UNIT ADDRESS    S22024
         LA    RHOLD,AVTUMALN           GET OFFSET TO DATA IN    S22024
*                                       NEXT UNIT                S22024
         STH   RHOLD,OCBACKUP+START     STORE START OFFSET       S22024
         LTR   RLEN,RLEN                HAS ALL DATA BEEN MOVED  S22024
         BP    LOOP1                    BRANCH ON NO             S22024
         B     OUTPUT                   ALL DATA MOVED           S22024
MULTI    EQU   *                                                 S22024
         L     RBUFF,OCBACKUP           GET CURRENT UNIT ADDRESS S22024
         B     MULT2                    GO PROCESS MULTI-PART    S22024
NEEDUNIT EQU   *                                                 S22024
         LR    RPARM,RHOLD              SAVE MESSAGE LENGTH      S22024
         SH    RPARM,OCBACKUP+LEFT      SUBTRACT AMOUNT OF       S22024
*                                       SPACE AVAILABLE          S22024
         SR    RZERO,RZERO              CLEAR REGISTER           S22024
         LH    RWORK,AVTKEYLE           GET UNIT SIZE            S22024
         DR    RZERO,RWORK              CALCULATE NUMBER OF      S22024
*                                       UNITS REQUIRED FOR MSG   S22024
         LTR   RZERO,RZERO              WAS THERE A REMAINDER    S22024
         BZ    NORMNDR                  BRANCH ON NO             S22024
         LA    RPARM,ONE(RPARM)         ADD ONE TO NUMBER OF     S22024
*                                       UNITS REQUIRED           S22024
NORMNDR  EQU   *                                                 S22024
         L     RBRNCH,OPCGETBF          ADDRESS OF UNIT REQUEST  S22024
*                                       ROUTINE FOR OP CNTRL     S22024
         BALR  RRET,RBRNCH              REQUEST UNITS            S22024
         DROP  ROPCE                                             S22024
         USING IEDQPRF,ROPCE                                     S22024
         IC    RWORK,PRFNBUNT           GET NUMBER OF UNITS      S22024
         AR    RWORK,RZERO              ADD NUMBER REQUESTED     S22024
         STC   RWORK,PRFNBUNT           STORE NEW UNIT COUNT     S22024
         ST    RPARM,PRFTIC-IEDQPRF(RBUFF) ADD NEW UNITS TO CHAINS22024
         MVI   PRFTIC-IEDQPRF(RBUFF),TIC SET TIC COMMAND         S22024
         LH    RPARM,AVTKEYLE           GET UNIT SIZE            S22024
         MR    RZERO,RZERO              CALCULATE BYTE AVAILABLE S22024
*                                       IN NEW UNITS             S22024
         DROP  ROPCE                                             S22024
         USING IEDQOPCE,ROPCE                                    S22024
         AH    RPARM,OCBACKUP+LEFT      ADD NUMBER AVAILABLE     S22024
         STH   RPARM,OCBACKUP+LEFT      STORE NEW COUNT          S22024
         B     MOVMSG                   GO PUT MESSAGE IN UNITS  S22024
         SPACE
OUTPUT   EQU   *
         AH    RBUFF,OCBACKUP+START     LAST BYTE POINTER        S22024
         OC    OCWTG(WTGLEN),OCWTG      WHERE TO GO SET?
         BZ    SKIPNAME                 NO, LEAVE NAME AS IS
         SPACE
         OI    OCFLAG,OCOUTPUT          SET MULTI-PART OUTPUT FLAG
ENDOUT   EQU   *                                                 S22024
         MVC   OPCLDNME+VARINAME(NAMELEN),OCWTG SET NEW MODULE NAME
         LH    RZERO,OCPARM             PICK UP PARAMETER VALUE
         B     XCTL                     CALL NEXT MODULE
         SPACE
SKIPNAME EQU   *
         TM    OPCFLAG1,OUTTOTE         TOTE OLT TO POST       @YA05139
         BO    POSTOLT                  YES, BRANCH            @YA05139
         LH    RPARM,OCDEST             GET DEST TNT OFFSET     SA67103
         L     RBRNCH,AVTRNMPT          ADDR OF TNT CODE        SA67103
         BALR  RRET,RBRNCH              GO GET TERM ADDR        SA67103
         MVI   ZERO(RBUFF),EOT          SET EOT IN LAST BYTE    SA67103
         TM    TRMSTATE,TRMLINE+TRMLOG  SINGLE-TERMINAL ENTRY?  SA67103
         BNZ   BALATTCH                 BRANCH IF NO            SA67103
         TM    TRMSTATE,TRMPREF         3705 RESOURCE ?        @Y17XARR
         BZ    BALATTCH                 BRANCH IF NO            SA67103
         MVI   ZERO(RBUFF),BLANK        YES, ELIMINATE EOT      SA67103
         SPACE 1                                                SA67103
BALATTCH EQU   *                                                SA67103
         LA    RPARM,OCX02              NUMBER OF UNITS PASSED @SA74873
         L     RBRNCH,OPCFREBF          ADDR OF FREE BFR RTN   @SA74873
         BALR  RRET,RBRNCH              GO FREE UNITS          @SA74873
         BAL   RRET,CHKATTCH            GO CHECK OCATTACH       SA67103
         TM    OCFLAG,OCSSCP            IS IT SSCP FLOW        @ZM48772
         BO    POSTOUT                  YES BYPASS  QUEUING    @ZM48772
*                                       ON OPCWAITO            @ZM48772
         SR    RWORK,RWORK              ZERO FOR OUTPUT CHECK  @ZM47790
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               C
               RELATED=OPCWAITO-IEDQCA(SETATSK1)               @ZM46693
         SPACE
         TS    OPCSTCBS                 CHECK FOR OUTPUT BUSY
         BZ    RELEASE                  NO, POST OUTPUT        @ZM46693
         SPACE
         LA    RWORK,OPCWAITO           GET ADDRESS OF QCW
QUELOOP  EQU   *
         L     RLEN,ZERO(RWORK)         PICK UP QUEUE LINK POINTER
         LA    RLEN,ZERO(RLEN)          CLEAR HIGH BYTE OF ADDRESS
         LTR   RLEN,RLEN                END OF QUEUE CHAIN?
         BZ    ENDFOUND                 YES, PUT NEW ELEMENT ON QUEUE
         SPACE
         LR    RWORK,RLEN               RESET POINTER TO CURRENT ELEM
         B     QUELOOP                  FIND END OF QUEUE CHAIN
         SPACE
ENDFOUND EQU   *
         IC    RLEN,ZERO(RWORK)         SAVE FIRST BYTE
         ST    ROPCE,ZERO(RWORK)        PLACE NEW ELEMENT ON QUEUE
         STC   RLEN,ZERO(RWORK)         RESTORE HIGH ORDER BYTE
         XC    ONE(LINK-ONE,ROPCE),ONE(ROPCE) CLEAR LINK FIELD
RELEASE  EQU   *                                               @ZM46693
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          C
               RELATED=IGC0710D(SETATSK)                       @ZM46693
         LTR   RWORK,RWORK              ELEMENT PUT ON OUTPUT Q@ZM46693
         BNZ   SETPARM                  YES, BRANCH            @ZM46693
         B     TERMINPT                 NO GO SEND DATA        @ZM48772
         SPACE
POSTOUT  EQU   *                        SET UP RH              @ZM48772
         LA    RWORK,PRF1LEN            GET LENGTH OF PREFIX   @Y17XARR
         SR    ROPCE,RWORK              BACKUP TO PREFIX       @Y17XARR
         USING IEDRH,ROPCE              ESTAB ADDR SETUP A     @Y17XARR
*                                       COMPLETE RH            @Y17XARR
         SPACE 2
***************************************************************@Y17XARR
*                         SETUP RH                             @Y17XARR
***************************************************************@Y17XARR
*                         THIS IS A REQUEST,                   @Y17XARR
***************************************************************@Y17XARR
*                         FM DATA,  UNFORMATTED                @Y17XARR
***************************************************************@Y17XARR
*                         NO SENSE, AND ONLY CHAIN.            @Y17XARR
***************************************************************@Y17XARR
         SPACE 2                                               @Y17XARR
         MVI   TRHBYTE0,TRHBC+TRHEC     BEGIN OF CHAIN         @Y17XARR
*                                       END OF CHAIN           @Y17XARR
         MVI   TRHBYTE1,TRHDR1          DEFINITE RESPONSE,     @Y17XARR
*                                       NO PACING              @Y17XARR
         MVI   TRHBYTE2,AVTEZERO        NO BRACKETS, NO CHANGE @Y17XARR
*                                       DIRECTION, NO CODE     @Y17XARR
*                                       SELECT                 @Y17XARR
         USING IEDPF1,ROPCE             ESTAB ADDR FOR ENTIRE  @Y17XARR
*                                       PREFIX                 @Y17XARR
         MVI   PRF1FLG1,PRF1FIDI        FID1, NORMAL FLOW      @Y17XARR
*                                       SECOND WORD NOT USED   @Y17XARR
         LA    ROPCE,PRF1LEN(,ROPCE)    ADJUST BUFFER POINTER  @Y17XARR
*                                       PASSED PREFIX IN ORDER @Y17XARR
*                                       TO POST                @Y17XARR
         USING IEDQPRF,ROPCE            ESTAB ADDR FOR BUFFER  @Y17XARR
         MVC   PRFDEST,OCDEST-IEDQOPCE(ROPCE) SETUP DESTINATION@Y17XARR
         SR    RSAVTPTR,RSAVTPTR        CLEAR TO GET SAVT PTR  @Y17XARR
         L     RSAVTPTR,AVTSAVTP         GET SAVT POINTER      @YM05661
         MVC   PRFSRCE,SAVTSCPT-IEDNSVTD(RSAVTPTR) SETUP SOURCE@Y17XARR
         LA    RSAVTPTR,SAVTSCPQ-IEDNSVTD(RSAVTPTR)            @Y17XARR
*                                       GET ADDR OF DEST QCB   @Y17XARR
         STCM  RSAVTPTR,ADDRESS,PRFQCBA PUT SSCP DEST QCB ADDR @Y17XARR
*                                       IN BUFFER              @Y17XARR
         XC    PRFLCB,PRFLCB            INDICATOR TO GET DEST  @Y17XARR
*                                       FROM PRFDEST           @Y17XARR
         XC    PRFLINK,PRFLINK          CLEAR THE LINK FIELD   @Y17XARR
         MVI   PRFPRI,PRIDESTQ          SETUP PRIORITY FOR     @Y17XARR
*                                       POST                   @Y17XARR
         B     POSTIT                   POST BUFFER TO SSCP    @Y17XARR
TERMINPT EQU   *                                               @Y17XARR
         L     RBRNCH,OPCLCB            GET ADDRESS OF LCB SET UP CODE
         BALR  RRET,RBRNCH              SET UP DUMMY LCB
         SPACE
         B     POSTIT                   GO ISSUE SVC 102        SA67103
         SPACE 1                                                SA67103
POSTOLT  EQU   *                                                SA67103
         USING IEDQPRF,ROPCE
         SR    RWORK,RWORK              CLEAR FOR INSERT
         IC    RWORK,PRFSCAN            GET SCAN POINTER
         STH   RWORK,PRFSCAN            REPLACE SCAN POINTER
         LH    RWORK,PRFSIZE            GET DATA SIZE
         BCTR  RWORK,RZERO              CUT OFF EXTRA ADDED IN
         STH   RWORK,PRFSIZE            REPLACE NEW COUNT
         LA    RWORK,AVTOLTQB           GET TOTE QCB ADDRESS
         ST    RWORK,PRFQCBA-ONE        SET DESTINATION QCB ADDR
         MVI   PRFPRI,PRIONLT           SET PRIORITY
         MVC   PRFKEY(ONE),PRFLCB       SET KEY FOR TOTE
POSTIT   EQU   *
         ST    ROPCE,OPCAQCTL           PLACE BLOCK ADDRESS IN LIST
         ST    ROPCE,OPCAQCTL+WORD      PLACE ADDRESS IN LIST
         MVI   OPCAQCTL,POST            SET FLAG FOR POST
         MVI   OPCAQCTL+WORD,ENDLIST    SET END OF LIST
         LA    RPARM,OPCAQCTL           POINT TO LIST FOR POSTING
         SPACE
         AQCTL                          POST LCB FOR OUTPUT TO BD
         SPACE 2
SETPARM  EQU   *
         NI    OPCSPEC,AVTEFF-OPCFRMCA  TURN OFF FROM QCA FLAG @ZM46693
         LA    RZERO,NOTCA              INDICATE RETURN TO 010D
XCTL     EQU   *
         NI    OPCFLAG1,AVTEZERO        CLEAR FLAGS SET
         LR    RPARM,ROPCAVT            SET AVT POINTER
         SPACE
         XCTL  SF=(E,OPCXCTL)           CALL REQUIRED MODULE
         SPACE 2                                                SA67103
CHKATTCH EQU   *                                                SA67103
         DROP  ROPCE                                            SA67103
         USING IEDQOPCE,ROPCE                                   SA67103
         TM    OCFLAG,OCATTACH          ELMNT ATTACHED TO OPCE? SA67103
         BCR   NOTONES,RRET             BRANCH IF NO            SA67103
         L     RWORK,OCELEM             GET ATTACHED OPCE       SA67103
         ST    RWORK,OPCNEXT            MAKE IT NEXT TO GO      SA67103
         BR    RRET                     RETURN TO CALLER        SA67103
         SPACE 2
MOVEDATA MVC   BEGIN(ZERO,RBUFF),BEGIN(RDATA) MOVE DATA TO BUFFER UNITS
         SPACE 2
*          C O N S T A N T S
FIRSTLD  DC    C'00'                    INITIAL SVC LOAD
TOTEOUT  DC    X'4412'                  SPECIAL OLT VERB/SWITCH  S22024
WTOLEN   EQU   84                       LENGTH INCLUDING FLAGS  SA65449
CLOSEMSG DC    H'63'                    MSG NUM FOR CLOSEDOWN
MSCON    DC    X'04004020'              ROUTE AND DESCRIPTOR   @OY13278
*                                       CODES FOR MASTER       @OY13278
*                                       CONSOLE AND HARDCOPY   @OY13278
NOTREGO  EQU   X'80'                    MASK FOR MCSFLAGS      @OY13278
HEX80    DC    X'80'                    FLAG FOR XMPOST        @ZM46693
         SPACE 2
WTOOUT   WTO   ' ',DESC=5,MCSFLAG=(REG0,RESP),MF=L WTO FLAGS
         SPACE 2
END0710D EQU   *                                                 S22024
PATCH    DC    100X'FF'                 PATCH AREA             @Y17XARR
         SPACE 2
         TITLE 'IGC0710D - DSECT REFERENCED BY THIS MODULE'
         TAIBD EXT=(NETWKCTL)                                  @ZM46693
         EJECT
         TAVTD
         EJECT
CVTMAP   CVT   DSECT=YES                                       @ZM46693
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TPCBD
         EJECT
         TPEBD                                                 @ZM46693
         EJECT
         TPRFD
         EJECT
         IHAPSA                                                @ZM46693
         EJECT
         TPRIOR
         EJECT
         TRHD                                                  @Y17XARR
         EJECT                                                 @Y17XARR
         TTRMD
         END
