         TITLE 'IGCVI10D,  3705 STARTLINE                              *
                        '
IGCVI10D CSECT ,                                                   0001
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                            @ZM48467
*                                                            @ZM48484*/
*                                                                  0498
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0498
*   ROPCAVT=RPARM;                  /* OPCAVT ADDR                   */
         LR    ROPCAVT,RPARM                                       0498
*   RAVT=OPCAVTPT;                  /* TCAM AVT ADDR                 */
         L     RAVT,OPCAVTPT(,ROPCAVT)                             0499
*   ROPCE=OPCCOPCE;                 /* OPCE ADDR                     */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0500
*   OPCFLAG1=0;                     /* CLEAR FLAG                    */
         MVI   OPCFLAG1(ROPCAVT),X'00'                             0501
*   GEN NOREFS NOSETS NOEXIT SEQFLOW;                              0502
IGCVI10D IEDHJN SKIPID,HJN
*                                                                  0503
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN PROGRAM LOGIC                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*   IF OPREPRI=PRIMEDFG&OPREFLG1=OPRVI THEN                        0503
         CLI   OPREPRI(ROPCE),X'DF'                                0503
         BNE   @RF00503                                            0503
         CLI   OPREFLG1(ROPCE),X'04'                               0503
         BNE   @RF00503                                            0503
*     CALL STRTRET;                 /* SPECIAL PRIORITY AND FLAG   0504
*                                      INDICATING STARTLINE RETURNED
*                                      FROM IEDNSL                   */
         BAL   @14,STRTRET                                         0504
*   ELSE                                                           0505
*     IF OCRESP=ON THEN             /* IF RESPONSE TO STARTLINE FROM
*                                      IGCA010D PROC         @ZM47662*/
         B     @RC00503                                            0505
@RF00503 TM    OCRESP(ROPCE),B'00000001'                           0505
         BNO   @RF00505                                            0505
*       DO;                         /*                       @ZM47662*/
*         OCRESP=OFF;               /*                       @ZM47662*/
         NI    OCRESP(ROPCE),B'11111110'                           0507
*         CALL PROCRESP;            /*                       @ZM47662*/
         BAL   @14,PROCRESP                                        0508
*       END;                        /*                       @ZM47662*/
*     ELSE                                                         0510
*       IF OCPARM^=0 THEN                                          0510
         B     @RC00505                                            0510
@RF00505 ICM   @15,3,OCPARM(ROPCE)                                 0510
         BZ    @RF00510                                            0510
*         CALL SNASTRT;             /* NON-ZERO RET CODE MEANS SNA 0511
*                                      STARTLINE FROM IGCFA10D,    0511
*                                      PROCESS IT                    */
         BAL   @14,SNASTRT                                         0511
*       ELSE                                                       0512
*         FIRSTREQ=ON;              /* GET FIRST LINE FLAG           */
         B     @RC00510                                            0512
@RF00510 OI    FIRSTREQ(ROPCAVT),B'10000000'                       0512
*   DO WHILE(FIRSTREQ=ON×MORELINE=ON);/* LOOP FOR GRP,ALL AND FIRST
*                                      TIME THROUGH                  */
@RC00510 DS    0H                                                  0513
@RC00505 DS    0H                                                  0513
@RC00503 B     @DE00513                                            0513
@DL00513 DS    0H                                                  0514
*     EXITFLAG=OFF;                 /* RESET SO THAT WE DO NOT XCTL
*                                      TO OURSELF WHEN PROCESSING A
*                                      GROUP FOR MULTIPLE NCPS,ONLY
*                                      SOME OF WHICH ARE ACTIVE    0514
*                                                            @ZM48377*/
         NI    EXITFLAG(ROPCAVT),B'11011111'                       0514
*     CALL STRTREQ;                 /* PROC STARTLINE REQ            */
         BAL   @14,STRTREQ                                         0515
*   END;                                                           0516
@DE00513 TM    FIRSTREQ(ROPCAVT),B'11000000'                       0516
         BNZ   @DL00513                                            0516
*   RPARM=ROPCAVT;                  /* SET R1 TO OPC AVT             */
         LR    RPARM,ROPCAVT                                       0517
*   IF OPCMODID=VI THEN             /* IF GOING TO RETURN TO VI    0518
*                                      INSURE THAT STRTREQ GETS    0518
*                                      EXECUTED              @ZM47662*/
         CLC   OPCMODID(2,ROPCAVT),@CC02563                        0518
         BNE   @RF00518                                            0518
*     OCPARM=0;                     /*                       @ZM47662*/
         SLR   @15,@15                                             0519
         STH   @15,OCPARM(,ROPCE)                                  0519
*   IF OPCMODID=XCTL00 THEN         /* CLEAR REG 0 PRIOR     @YM03724*/
@RF00518 CLC   OPCMODID(2,ROPCAVT),@CC02565                        0520
         BNE   @RF00520                                            0520
*     RZERO=0;                      /* TO TRANSFER OF CONTROL        */
         SLR   RZERO,RZERO                                         0521
*   ELSE                                                           0522
*     ;                             /* TO MODULE IGC0010D.           */
@RF00520 DS    0H                                                  0523
*   GEN EXIT REFS(OPCXCTL);                                        0523
          XCTL  SF=(E,OPCXCTL(ROPCAVT))
*                                                                  0524
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS STARTLINE RETURN THIS ROUTINE IS CALLED FROM THE MAIN */
*   /* PROGRAM LOGIC                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0524
*STRTRET:                                                          0524
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0524
@EL00001 DS    0H                                                  0524
@EF00001 DS    0H                                                  0524
@ER00001 BR    @14                                                 0524
STRTRET  DS    0H                                                  0525
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0525
*   RPARM=ADDR(NSLGRPNM);           /* GET GROUP NAME AS RETURNED  0526
*                                      FROM NSL                      */
         LA    RPARM,NSLGRPNM(,RNSL)                               0526
*   CALL WAITLSRH;                  /* FIND OPCE WITH SAME GRPNAME ON
*                                      OPCWAITV                      */
         BAL   @14,WAITLSRH                                        0527
*   RESPECIFY                                                      0528
*     RWORK6 RSTD;                  /* RWORK6 IS USED AS A TEMP SAVE
*                                      AREA FOR THE OPCE FOUND BY  0528
*                                      WAITLSRCH                     */
*   RWORK6=RPARM;                   /* SAVE OPCE ADDR                */
         LR    RWORK6,RPARM                                        0529
*   RZERO->OCLINK=RPARM->OCLINK;    /* UNLINK OPCE FROM CHAIN        */
         LR    @15,RZERO                                           0530
         MVC   OCLINK(4,@15),OCLINK(RPARM)                         0530
*   RPARM=RNSL;                     /* GET ADDR OF BUFFER RETURNED 0531
*                                      FROM NSL                      */
         LR    RPARM,RNSL                                          0531
*   RPARM->OCUNIT=BADTIC;           /* 1 BUFFER TO FREE      @YM03737*/
         MVC   OCUNIT(4,RPARM),@CF02506                            0532
*   RESPECIFY                                                      0533
*     RSAVE RSTD;                   /* REG 13 =SAVE AREA ADDR        */
*   RSAVE=ADDR(OPCSAVE);            /* SAVE AREA ADDR                */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0534
*   CALL FREEBUF;                   /* FREE BUFFER UNIT              */
         L     @15,OPCFREBF(,ROPCAVT)                              0535
         BALR  @14,@15                                             0535
*   RESPECIFY                                                      0536
*     RSAVE UNRSTD;                                                0536
*   ROPCE=RWORK6;                   /* SET UP OPCE ADDR              */
         LR    ROPCE,RWORK6                                        0537
*   RESPECIFY                                                      0538
*     RWORK6 UNRSTD;                                               0538
*   OPCCOPCE=ROPCE;                 /* MAKE ORIGINAL OPCE THE CURRENT
*                                      ONE                   @ZM48377*/
         ST    ROPCE,OPCCOPCE(,ROPCAVT)                            0539
*   RPARM=OCTRMTBL;                 /* GET TTCIN OF LINE             */
         SLR   RPARM,RPARM                                         0540
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0540
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0541
         BALR  @14,@15                                             0541
*   RTERM=RPARM;                    /* SET UP TTE BASE FOR LINE WE 0542
*                                      ARE WORKING WITH              */
         LR    RTERM,RPARM                                         0542
*   OPCWRKSP(1)=MSGNO20;            /* SET UP MSG NUMB 20            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF00632                        0543
*   OPCWRKSP(2)=PARM0;              /* SET UP PARM OF 0              */
         SLR   @15,@15                                             0544
         ST    @15,OPCWRKSP+4(,ROPCAVT)                            0544
*   CALL NORMEXIT;                  /* DO NORMAL EXIT PROCESSING     */
         BAL   @14,NORMEXIT                                        0545
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
         L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0546
*   RETURN;                                                        0547
@EL00002 DS    0H                                                  0547
@EF00002 DS    0H                                                  0547
@ER00002 BR    @14                                                 0547
*   END;                            /* END OF STRTRET                */
*                                                                  0549
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS RESPONSE THIS ROUTINE IS CALLED BY MAIN PROGRAM LOGIC */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0549
*PROCRESP:                                                         0549
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0549
PROCRESP DS    0H                                                  0550
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0550
*   RPARM=ADDR(OCBACKUP);           /* SET PTR TO GRPNAME            */
         LA    RPARM,OCBACKUP(,ROPCE)                              0551
*   CALL WAITLSRH;                  /* SEARCH WAITL CHAIN FOR OPCE 0552
*                                      WITH SAME GRPNAME             */
         BAL   @14,WAITLSRH                                        0552
*   RESPECIFY                                                      0553
*     RWORK8 RSTD;                  /* TEMP SAVE AREA FOR OPCE AD    */
*   RWORK8=RPARM;                   /* SAVE ADDR OF REAL OPCE        */
         LR    RWORK8,RPARM                                        0554
*   RZERO->OCLINK=RPARM->OCLINK;    /* UNLINK OPCE FROM CHAIN        */
         LR    @15,RZERO                                           0555
         MVC   OCLINK(4,@15),OCLINK(RPARM)                         0555
*   RPARM=OCUNIT;                   /* FREE RESPONSE BUFFER          */
         L     RPARM,OCUNIT(,ROPCE)                                0556
*   RPARM->OCUNIT=BADTIC;           /* 1 BUFFER TO FREE      @YM03737*/
         MVC   OCUNIT(4,RPARM),@CF02506                            0557
*   RESPECIFY                                                      0558
*     RSAVE RSTD;                   /* REG13=SAVE AREA ADDR          */
*   RSAVE=ADDR(OPCSAVE);            /* SAVE AREA ADDR                */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0559
*   IF OCPARM=1 THEN                /* ON GOOD RESP,CAUSE TERMINAL 0560
*                                      PRIMING FOR LINE              */
         CLC   OCPARM(2,ROPCE),@CH00061                            0560
         BNE   @RF00560                                            0560
*     DO;                           /*                       @YM08579*/
*       CALL FREEBUF;               /* FREE BUF RTN IN QCA   @YM08579*/
         L     @15,OPCFREBF(,ROPCAVT)                              0562
         BALR  @14,@15                                             0562
*       RESPECIFY                                                  0563
*         RSAVE UNRSTD;                                            0563
*       CALL STRTLINE;              /*                       @YM08579*/
         BAL   @14,STRTLINE                                        0564
*     END;                          /*                       @YM08579*/
*   ELSE                                                           0566
*     CALL ERRRESP;                 /* OTHERWISE DO ERROR PROCES   0566
*                                      BUFFER MAY BE NEEDED FOR MSG
*                                      199                   @YM08579*/
         B     @RC00560                                            0566
@RF00560 BAL   @14,ERRRESP                                         0566
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
@RC00560 L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0567
*   RETURN;                                                        0568
@EL00003 DS    0H                                                  0568
@EF00003 DS    0H                                                  0568
@ER00003 BR    @14                                                 0568
*   RESPECIFY                                                      0569
*     RWORK8 UNRSTD;                                               0569
*   END;                            /* END OF PROCRESP               */
*                                                                  0571
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS SNA STARTLINE REQUEST THIS ROUTINE IS CALLED FROM MAIN*/
*   /* PROGRAM LOGIC                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0571
*SNASTRT:                                                          0571
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0571
SNASTRT  DS    0H                                                  0572
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0572
*   OCWTG=OCWTGB;                   /* RESTORE OCWTG TO ORIG         */
         MVC   OCWTG(2,ROPCE),OCWTGB(ROPCE)                        0573
*   OPCWRKSP(1)=OCPARM;             /* SAVE RESP MSG NUMB            */
         LH    @15,OCPARM(,ROPCE)                                  0574
         ST    @15,OPCWRKSP(,ROPCAVT)                              0574
*   RPARM=OCTRMTBL;                 /* TTCIN OF LINE TO PROCESS      */
         SLR   RPARM,RPARM                                         0575
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0575
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0576
         BALR  @14,@15                                             0576
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0577
*   IF OCPARM=GOODSTRT×OCPARM=PARTGOOD/* GOOD RESPONSE PROCESSING    */
*       ×OCPARM=LOGICGD THEN                                       0578
         LH    @15,OCPARM(,ROPCE)                                  0578
         CH    @15,@CH02537                                        0578
         BE    @RT00578                                            0578
         CH    @15,@CH02539                                        0578
         BE    @RT00578                                            0578
         CH    @15,@CH02541                                        0578
         BNE   @RF00578                                            0578
@RT00578 DS    0H                                                  0579
*     DO;                                                          0579
*       OPCWRKSP(2)=PARM0;          /* SET PARM TO ZERO              */
         SLR   @15,@15                                             0580
         ST    @15,OPCWRKSP+4(,ROPCAVT)                            0580
*       CALL NORMEXIT;              /* SET UP EXIT                   */
         BAL   @14,NORMEXIT                                        0581
*     END;                                                         0582
*   ELSE                                                           0583
*     DO;                           /* ERROR RESPONSE PROC           */
         B     @RC00578                                            0583
@RF00578 DS    0H                                                  0584
*       OPCWRKSP(2)=PARM4;          /* SET UP ERROR PARM             */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0584
*       CALL ERREXIT;               /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0585
*     END;                                                         0586
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
@RC00578 L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0587
*   RETURN;                                                        0588
@EL00004 DS    0H                                                  0588
@EF00004 DS    0H                                                  0588
@ER00004 BR    @14                                                 0588
*   END;                            /* END OF SNASTRT                */
*                                                                  0590
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS STARTLINE REQUEST THIS ROUTINE IS CALLED FROM MAIN    */
*   /* PROGRAM LOGIC                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0590
*STRTREQ:                                                          0590
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0590
STRTREQ  DS    0H                                                  0591
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0591
*   IF FIRSTREQ=ON THEN                                            0592
         TM    FIRSTREQ(ROPCAVT),B'10000000'                       0592
         BNO   @RF00592                                            0592
*     DO;                           /* IF FIRST REQUEST FIND FIRST 0593
*                                      LINE TO PROC                  */
*       FIRSTREQ=OFF;               /* RESET FLAG                    */
         NI    FIRSTREQ(ROPCAVT),B'01111111'                       0594
*       CALL GETFIRST;              /* FIND THE FIRST LINE           */
         BAL   @14,GETFIRST                                        0595
*     END;                                                         0596
*   ELSE                                                           0597
*     IF MORELINE=ON THEN                                          0597
         B     @RC00592                                            0597
@RF00592 TM    MORELINE(ROPCAVT),B'01000000'                       0597
         BNO   @RF00597                                            0597
*       MORELINE=OFF;               /* RESET LOOP BIT        @YM06057*/
         NI    MORELINE(ROPCAVT),B'10111111'                       0598
*     ELSE                                                         0599
*       ;                           /*                       @YM06057*/
@RF00597 DS    0H                                                  0600
*   RPARM=OCTRMTBL;                 /* TTCIN OF LINE TO PROCESS      */
@RC00592 SLR   RPARM,RPARM                                         0600
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0600
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0601
         BALR  @14,@15                                             0601
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0602
*   IF EXITFLAG=OFF THEN                                           0603
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0603
         BNZ   @RF00603                                            0603
*     DO;                           /* NO ERROR FOUND YET            */
*       CALL SNACHK;                /* CHECK FOR SNA LINE            */
         BAL   @14,SNACHK                                          0605
*       IF EXITFLAG=OFF THEN                                       0606
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0606
         BNZ   @RF00606                                            0606
*         DO;                       /* NO PREVIOUS ERROR             */
*           CALL ACT3705;           /* VERIFY 3705 ACTIVE            */
         BAL   @14,ACT3705                                         0608
*           IF EXITFLAG=OFF THEN                                   0609
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0609
         BNZ   @RF00609                                            0609
*             DO;                   /* NO ERROR FOUND YET            */
*               CALL LINESTAT;      /* VERFIY STATUS OF LINE         */
         BAL   @14,LINESTAT                                        0611
*               IF EXITFLAG=OFF THEN                               0612
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0612
         BNZ   @RF00612                                            0612
*                 DO;               /* NO ERRORS,CONT PROC           */
*                   CALL ACTLINK;   /* BUILD ACT LINK REQ            */
         BAL   @14,ACTLINK                                         0614
*                   OPCMODID=SSCPA0;/* CALL SSCP ROUTER              */
         MVC   OPCMODID(2,ROPCAVT),@CC02561                        0615
*                 END;                                             0616
*             END;                                                 0617
*         END;                                                     0618
*     END;                                                         0619
*   ELSE                                                           0620
*     ;                                                            0620
@RF00603 DS    0H                                                  0621
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
@RC00603 L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0621
*   RETURN;                                                        0622
@EL00005 DS    0H                                                  0622
@EF00005 DS    0H                                                  0622
@ER00005 BR    @14                                                 0622
*   END;                            /* END OF STRTREQ                */
*                                                                  0624
*   /*****************************************************************/
*   /*                                                               */
*   /* GET FIRST LINE TO PROCESS THIS ROUTINE IS CALLED BY STRTREQ.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0624
*GETFIRST:                                                         0624
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0624
GETFIRST DS    0H                                                  0625
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0625
*   IF OCRENTRD=ON THEN                                            0626
         TM    OCRENTRD(ROPCE),B'10000000'                         0626
         BNO   @RF00626                                            0626
*     DO;                           /* 2ND ENTRY TO VI               */
*       OCRENTRD=OFF;               /* RESET INDICATOR               */
         NI    OCRENTRD(ROPCE),B'01111111'                         0628
*       OCWTG=OCWTGB;               /* RESTORE OCWTG                 */
         MVC   OCWTG(2,ROPCE),OCWTGB(ROPCE)                        0629
*     END;                                                         0630
*   ELSE                                                           0631
*     ;                                                            0631
@RF00626 DS    0H                                                  0632
*   RPARM=OCTRMTBL;                 /* GET TTCIN OF GRP OR LINE      */
         SLR   RPARM,RPARM                                         0632
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0632
*   CALL IEDQTNT;                   /* CONVERT TTCIN TO TTE          */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0633
         BALR  @14,@15                                             0633
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0634
*   IF TRMTYPE=TRMGRP THEN                                         0635
         LR    @15,RTERM                                           0635
         SH    @15,@CH00036                                        0635
         CLI   TRMTYPE(@15),X'00'                                  0635
         BNE   @RF00635                                            0635
*     DO;                           /* IF GROUP TTE THEN DO          */
*       IF TRMSUBST^=0 THEN         /* IF VALID SUBST PTR            */
         ICM   @11,3,TRMSUBST(@15)                                 0637
         BZ    @RF00637                                            0637
*         OCTRMTBL=TRMSUBST;        /* SAVE LINE TTCIN IN OPCE       */
         MVC   OCTRMTBL(2,ROPCE),TRMSUBST(@15)                     0638
*       ELSE                                                       0639
*         DO;                       /* NO LINES IN GROUP             */
         B     @RC00637                                            0639
@RF00637 DS    0H                                                  0640
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0640
*           OPCMODID=MOD03;         /* ERROR EXIT MODULE             */
         MVC   OPCMODID(2,ROPCAVT),@CC02559                        0641
*           OPCWRKSP(1)=MSG102;     /* ERROR MSG NUMBER              */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02543                        0642
*           OPCWRKSP(2)=PARM4;      /* PARM VALUE                    */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0643
*         END;                                                     0644
*     END;                                                         0645
*   ELSE                                                           0646
*     ;                                                            0646
@RF00635 DS    0H                                                  0647
*   IF EXITFLAG=OFF THEN                                           0647
@RC00635 TM    EXITFLAG(ROPCAVT),B'00100000'                       0647
         BNZ   @RF00647                                            0647
*     DO;                           /* NO ERROR COND FOUND           */
*       RPARM=ADDR(OCBACKUP);       /* GET ADDR OF GRPNAME           */
         LA    RPARM,OCBACKUP(,ROPCE)                              0649
*       CALL WAITLSRH;              /* FIND OPCE WITH SAME GRPNAME   */
         BAL   @14,WAITLSRH                                        0650
*       IF RPARM=0 THEN                                            0651
         LTR   RPARM,RPARM                                         0651
         BNZ   @RF00651                                            0651
*         DO;                       /* IF OPCE NOT FOUND WITH SAME 0652
*                                      GRPNAME THEN DO               */
*           IF OCALLFLG=ON THEN                                    0653
         TM    OCALLFLG(ROPCE),B'00000100'                         0653
         BNO   @RF00653                                            0653
*             DO;                   /* GRP,ALL LOOP                  */
*               OCSOME=OFF;         /* CLEAR STATUS BITS             */
*               OCNONE=OFF;                                        0656
         NI    OCSOME(ROPCE),B'11111100'                           0656
*             END;                                                 0657
*           ELSE                                                   0658
*             ;                                                    0658
@RF00653 DS    0H                                                  0659
*         END;                                                     0659
*       ELSE                                                       0660
*         DO;                       /* OPCE WITH SAME GRP NAME FOUND */
         B     @RC00651                                            0660
@RF00651 DS    0H                                                  0661
*           OCWTGB=OCWTG;           /* SAVE OCWTG                    */
         MVC   OCWTGB(2,ROPCE),OCWTG(ROPCE)                        0661
*           OCRENTRD=ON;            /* INDICATE 2ND ENTRY            */
         OI    OCRENTRD(ROPCE),B'10000000'                         0662
*           OCWTG=VI;               /* SET TO RETURN HERE            */
         MVC   OCWTG(2,ROPCE),@CC02563                             0663
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0664
*           OPCMODID=XCTL00;        /* MODULE TO GET CONTROL         */
         MVC   OPCMODID(2,ROPCAVT),@CC02565                        0665
*           CALL WAITLATT;          /* ATTACH OPCE TO WAITL          */
         BAL   @14,WAITLATT                                        0666
*         END;                                                     0667
*     END;                                                         0668
*   ELSE                                                           0669
*     ;                                                            0669
@RF00647 DS    0H                                                  0670
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RC00647 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0670
*   RETURN;                                                        0671
@EL00006 DS    0H                                                  0671
@EF00006 DS    0H                                                  0671
@ER00006 BR    @14                                                 0671
*   END;                            /* END OF GETFIRST               */
*                                                                  0673
*   /*****************************************************************/
*   /*                                                               */
*   /* WAITL ATTACH SUBROUTINE. REG 1 MUST POINT TO OPCE ON WAITL    */
*   /* CHAIN AND REG 3 (ROPCE) TO THE OPCE TO BE ATTACHED THIS       */
*   /* ROUTINE IS CALLED BY GETFIRST                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0673
*WAITLATT:                                                         0673
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0673
WAITLATT DS    0H                                                  0674
*   DO WHILE(RPARM->OCATTACH=ON);   /* IF OPCES ALREADY ATTACHED     */
         B     @DE00674                                            0674
@DL00674 DS    0H                                                  0675
*     RPARM=RPARM->OCELMPTR;        /* NEXT OPCE                     */
         SLR   @15,@15                                             0675
         ICM   @15,7,OCELMPTR(RPARM)                               0675
         LR    RPARM,@15                                           0675
*   END;                                                           0676
@DE00674 TM    OCATTACH(RPARM),B'00000010'                         0676
         BO    @DL00674                                            0676
*   RPARM->OCELMPTR=ROPCE;          /* OPCE TO ATTACH                */
         STCM  ROPCE,7,OCELMPTR(RPARM)                             0677
*   RPARM->OCATTACH=ON;             /* IND ATTACHED OPCE             */
         OI    OCATTACH(RPARM),B'00000010'                         0678
*   RETURN;                                                        0679
@EL00007 DS    0H                                                  0679
@EF00007 DS    0H                                                  0679
@ER00007 BR    @14                                                 0679
*   END;                            /* END OF WAITLATT               */
*                                                                  0681
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS FOR SNA LINES THIS ROUTINE IS CALLED BY*/
*   /* STRTREQ.                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0681
*SNACHK:                                                           0681
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0681
SNACHK   DS    0H                                                  0682
*   IF TRMTYPE=TRMSDLC THEN                                        0682
         LR    @15,RTERM                                           0682
         AL    @15,@CF01705                                        0682
         CLI   TRMTYPE-15(@15),X'21'                               0682
         BNE   @RF00682                                            0682
*     DO;                           /* IF SNA LINE                   */
*       OCIPLWA=0;                  /* CLEAR FOR USE BY ACT-DE       */
         SLR   @15,@15                                             0684
         ST    @15,OCIPLWA(,ROPCE)                                 0684
*       OCPTRSAV=0;                 /* CLEARED FOR ACTIVATE USE      */
         ST    @15,OCPTRSAV(,ROPCE)                                0685
*       OCWTGB=OCWTG;               /* SAVE CALLER                   */
         MVC   OCWTGB(2,ROPCE),OCWTG(ROPCE)                        0686
*       OCWTG=VI;                   /* INDICATE RETURN HERE          */
         MVC   OCWTG(2,ROPCE),@CC02563                             0687
*       OCSWITCH=OCTOFA;            /* IND ACT LINK REQ              */
         MVI   OCSWITCH(ROPCE),X'22'                               0688
*       OPCMODID=FA;                /* ACT MOD TO GET CONTROL        */
         MVC   OPCMODID(2,ROPCAVT),@CC02567                        0689
*       EXITFLAG=ON;                /* IND EXIT                      */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0690
*     END;                                                         0691
*   ELSE                                                           0692
*     ;                                                            0692
@RF00682 DS    0H                                                  0693
*   RETURN;                                                        0693
@EL00008 DS    0H                                                  0693
@EF00008 DS    0H                                                  0693
@ER00008 BR    @14                                                 0693
*   END;                            /* END OF SNACHK                 */
*                                                                  0695
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS THE ACTIVE STATUS OF THE LINE THIS     */
*   /* ROUTINE IS CALLED BY STRTREQ                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0695
*LINESTAT:                                                         0695
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0695
LINESTAT DS    0H                                                  0696
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0696
*   IF TRMEPMOD=ON THEN                                            0697
         LR    @15,RTERM                                           0697
         AL    @15,@CF02672                                        0697
         TM    TRMEPMOD-5(@15),B'10000000'                         0697
         BNO   @RF00697                                            0697
*     DO;                           /* IF LINE IS IN EP MODE         */
*       OPCWRKSP(1)=MSG443;         /* SET UP ERROR MSG              */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02520                        0699
*       OPCWRKSP(2)=PARM4;          /* SET UP PARM VALUE             */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0700
*       EXITFLAG=ON;                /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0701
*       CALL ERREXIT;               /* EXECUTE ERROR PROCESS         */
         BAL   @14,ERREXIT                                         0702
*     END;                                                         0703
*   ELSE                                                           0704
*     DO;                           /* LINE NOT IN EP MODE           */
         B     @RC00697                                            0704
@RF00697 DS    0H                                                  0705
*       IF OCTOTE=ON THEN                                          0705
         TM    OCTOTE(ROPCE),B'01000000'                           0705
         BNO   @RF00705                                            0705
*         TRMSTOTE=OFF;             /* IF TOTE REQUEST, INDICATE LINE
*                                      NOT IN TOTE MODE              */
         LR    @15,RTERM                                           0706
         AL    @15,@CF02673                                        0706
         NI    TRMSTOTE-7(@15),B'11111110'                         0706
*       ELSE                                                       0707
*         ;                                                        0707
@RF00705 DS    0H                                                  0708
*       IF TRMSTOTE=ON THEN                                        0708
         LR    @15,RTERM                                           0708
         AL    @15,@CF02673                                        0708
         TM    TRMSTOTE-7(@15),B'00000001'                         0708
         BNO   @RF00708                                            0708
*         DO;                       /* IF TOTE OWNS LINE             */
*           OPCWRKSP(1)=MSG49;      /* SET ERROR MSG NUMBER          */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02522                        0710
*           OPCWRKSP(2)=PARM4;      /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0711
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0712
*           CALL ERREXIT;           /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0713
*         END;                                                     0714
*       ELSE                                                       0715
*         DO;                       /* TOTE DOESNT CONTROL LINE      */
         B     @RC00708                                            0715
@RF00708 DS    0H                                                  0716
*           IF TRMRSACT=ON THEN                                    0716
         LR    @15,RTERM                                           0716
         AL    @15,@CF02674                                        0716
         TM    TRMRSACT-6(@15),B'10000000'                         0716
         BNO   @RF00716                                            0716
*             DO;                   /* IF LINE ALREADY ACTIVE        */
*               OPCWRKSP(1)=MSG19;  /* SET ERROR MSG NUMBER          */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02524                        0718
*               OPCWRKSP(2)=PARM8;  /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00046                      0719
*               EXITFLAG=ON;        /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0720
*               CALL ERREXIT;       /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0721
*             END;                                                 0722
*           ELSE                                                   0723
*             ;                                                    0723
@RF00716 DS    0H                                                  0724
*         END;                                                     0724
*     END;                                                         0725
@RC00708 DS    0H                                                  0726
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN REG            */
@RC00697 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0726
*   RETURN;                                                        0727
@EL00009 DS    0H                                                  0727
@EF00009 DS    0H                                                  0727
@ER00009 BR    @14                                                 0727
*   END;                            /* END OF LINESTAT               */
*                                                                  0729
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS FOR NCP ACTIVE THIS ROUTINE IS CALLED  */
*   /* BY STRTREQ.                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0729
*ACT3705:                                                          0729
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0729
ACT3705  DS    0H                                                  0730
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN REG               */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0730
*   IF TRMCOHRT=0 THEN                                             0731
         LR    @15,RTERM                                           0731
         AL    @15,@CF02675                                        0731
         ICM   @11,3,TRMCOHRT-8(@15)                               0731
         BNZ   @RF00731                                            0731
*     DO;                           /* IF NO COHORT PTR              */
*       OPCWRKSP(1)=NCPACT;         /* NCP NOT ACTIVE MSG            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02526                        0733
*       OPCWRKSP(2)=PARM4;          /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0734
*       EXITFLAG=ON;                /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0735
*       CALL ERREXIT;               /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0736
*     END;                                                         0737
*   ELSE                                                           0738
*     DO;                           /* HIERARCHY IN PLACE            */
         B     @RC00731                                            0738
@RF00731 DS    0H                                                  0739
*       RESPECIFY                                                  0739
*         RSAVE RSTD;               /* R13=SAVE AREA ADDR            */
*       RSAVE=ADDR(OPCSAVE);        /* SET UP SAVE AREA              */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0740
*       RPARM=RTERM;                /* PASS TTE                      */
         LR    RPARM,RTERM                                         0741
*       CALL COHORTLK;              /* COHORT LOOK UP RTN            */
         L     @15,OPCHORT(,ROPCAVT)                               0742
         BALR  @14,@15                                             0742
*       RESPECIFY                                                  0743
*         RSAVE UNRSTD;                                            0743
*       RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEGATIVE PREFIX    */
         SH    RPARM,@CH00036                                      0744
*       IF RPARM->TRMRSACT=OFF THEN                                0745
         TM    TRMRSACT(RPARM),B'10000000'                         0745
         BNZ   @RF00745                                            0745
*         DO;                       /* ACTIVE FLAG OFF               */
*           OPCWRKSP(1)=NCPACT;     /* NCP NOT ACTIVE MSG            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02526                        0747
*           OPCWRKSP(2)=PARM4;      /* PARM VALUE                    */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0748
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0749
*           CALL ERREXIT;           /* ERROR PROCESS                 */
         BAL   @14,ERREXIT                                         0750
*         END;                                                     0751
*       ELSE                                                       0752
*         DO;                       /* ACTIVE FLAG ON                */
         B     @RC00745                                            0752
@RF00745 DS    0H                                                  0753
*           IF OCACTREQ=OFF&RPARM->TRMINPG=ON THEN                 0753
         TM    OCACTREQ(ROPCE),B'00001000'                         0753
         BNZ   @RF00753                                            0753
         TM    TRMINPG(RPARM),B'00100000'                          0753
         BNO   @RF00753                                            0753
*             DO;                   /* IF REQUEST IS NOT FROM      0754
*                                      ACTIVATE AND ACT-DEACT-     0754
*                                      IPL-DUMP IN PROGRESS,ERROR    */
*               RPARM=(RPARM+LENGTH(IEDNTRM))->TRMDESTQ->QCBDCBAD;/*
*                                      GET DEB ADDRESS       @YM09041*/
         ICM   @15,7,TRMDESTQ+18(RPARM)                            0755
         SLR   @11,@11                                             0755
         ICM   @11,7,QCBDCBAD(@15)                                 0755
         LR    RPARM,@11                                           0755
*               RFY                                                0756
*                 IHADCB BASED(RPARM);/*                     @XM05659*/
*               RPARM=DCBDEBAD;     /* GET DEB ADDRESS       @XM05659*/
         L     @15,DCBDEBAD+40(,RPARM)                             0757
         LR    RPARM,@15                                           0757
*               RFY                                                0758
*                 IEDQDEB BASED(RPARM);                            0758
*               RPARM=RPARM-(ADDR(DEBNMSUB)-ADDR(IEDQDEB));/* BACKUP */
         SH    RPARM,@CH00800                                      0759
*               OCBACKUP=''B;       /* CLEAR TO INSERT THE UCB ADDR  */
         XC    OCBACKUP(8,ROPCE),OCBACKUP(ROPCE)                   0760
*               OCBACKUP(1:3)=DEBUCBAD->UCBNAME;/* INSERT THE UCB  0761
*                                      ADDR                          */
         ICM   @15,7,DEBUCBAD(RPARM)                               0761
         MVC   OCBACKUP(3,ROPCE),UCBNAME(@15)                      0761
*               OPCWRKSP(1)=NCPACT2;/* ERROR MSG                     */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02528                        0762
*               OPCWRKSP(2)=PARM4;  /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0763
*               EXITFLAG=ON;        /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0764
*               CALL ERREXIT;       /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0765
*             END;                                                 0766
*           ELSE                                                   0767
*             ;                                                    0767
@RF00753 DS    0H                                                  0768
*         END;                                                     0768
*     END;                                                         0769
@RC00745 DS    0H                                                  0770
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RC00731 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0770
*   RETURN;                                                        0771
@EL00010 DS    0H                                                  0771
@EF00010 DS    0H                                                  0771
@ER00010 BR    @14                                                 0771
*   END;                            /* END OF ACT3705                */
*                                                                  0773
*   /*****************************************************************/
*   /*                                                               */
*   /* WAITL CHAIN SEARCH ROUTINE THIS ROUTINE IS CALLED BY          */
*   /* STRTRET,PROCRESP,GETFIRST                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0773
*WAITLSRH:                                                         0773
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0773
WAITLSRH DS    0H                                                  0774
*   RESPECIFY                                                      0774
*    (RWORK6,                                                      0774
*     RWORK7) RSTD;                 /* THIS RTN USES RWORK6 TO     0774
*                                      CONTAIN THE ADDR OF THE PREVI
*                                      OPCE ON THE CHAIN. RWORK7 HAS
*                                      THIS ADDRESS OF THE OPCE WE 0774
*                                      ARE LOOKING AT                */
*   RWORK6=ADDR(OPCWAITV);          /* ADDR OF WAITL CHAIN           */
         LA    RWORK6,OPCWAITV(,ROPCAVT)                           0775
*   RWORK7=OPCWAITV;                /* GET 1ST ELEM ON CHAIN         */
         L     RWORK7,OPCWAITV(,ROPCAVT)                           0776
*   RWORK7=RWORK7&MASKBYTE;         /* CLEAR HIGH ORDER BY   @YM06021*/
         N     RWORK7,@CF02517                                     0777
*   DO WHILE(RWORK7^=0&RWORK7->OCBACKUP^=RPARM->GRPNAME);/* SEARCH 0778
*                                      WAITL CHAIN UNTIL END OF CHAIN
*                                      FOUND OR MATCHING GRPNAMES  0778
*                                      FOUND                         */
         B     @DE00778                                            0778
@DL00778 DS    0H                                                  0779
*     RWORK6=RWORK7;                /* SAVE THIS AS PREVIOUS         */
         LR    RWORK6,RWORK7                                       0779
*     RWORK7=RWORK7->OCLINK;        /* NEXT OPCE                     */
         L     RWORK7,OCLINK(,RWORK7)                              0780
*   END;                                                           0781
@DE00778 LTR   RWORK7,RWORK7                                       0781
         BZ    @DC00778                                            0781
         CLC   OCBACKUP(8,RWORK7),GRPNAME(RPARM)                   0781
         BNE   @DL00778                                            0781
@DC00778 DS    0H                                                  0782
*   IF RWORK7=0 THEN                                               0782
         LTR   RWORK7,RWORK7                                       0782
         BNZ   @RF00782                                            0782
*     RPARM=0;                      /* NO OPCE FOUND                 */
         SLR   RPARM,RPARM                                         0783
*   ELSE                                                           0784
*     DO;                                                          0784
         B     @RC00782                                            0784
@RF00782 DS    0H                                                  0785
*       RPARM=RWORK7;               /* R1=OPCE                       */
         LR    RPARM,RWORK7                                        0785
*       RZERO=RWORK6;               /* R0=PREVIOUS OPCE              */
         LR    RZERO,RWORK6                                        0786
*     END;                                                         0787
*   RESPECIFY                                                      0788
*    (RWORK6,                                                      0788
*     RWORK7) UNRSTD;                                              0788
*   RETURN;                                                        0789
@EL00011 DS    0H                                                  0789
@EF00011 DS    0H                                                  0789
@ER00011 BR    @14                                                 0789
*   END;                            /* END OF WAITLSRH               */
         B     @EL00011                                            0790
*                                                                  0791
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBR BUILDS THE ACT LINK REQUEST THIS ROUTINE IS CALLED  */
*   /* BY STRTREQ                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0791
*ACTLINK:                                                          0791
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0791
ACTLINK  DS    0H                                                  0792
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0792
*   RPARM=1;                        /* GET ONE BUFFER                */
         LA    RPARM,1                                             0793
*   RESPECIFY                                                      0794
*     RSAVE RSTD;                   /* R13=SAVE AREA ADDR            */
*   RSAVE=ADDR(OPCSAVE);            /* ADDR OF SAVE AREA             */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0795
*   CALL ALLOCBUF;                  /* GET BUFF SUBR IN QCA          */
         L     @15,OPCGETBF(,ROPCAVT)                              0796
         BALR  @14,@15                                             0796
*   RESPECIFY                                                      0797
*     RSAVE UNRSTD;                                                0797
*   RPARM->OPREPRI=PRIHIFLG;        /* SET PRIORITY                  */
         MVI   OPREPRI(RPARM),X'E9'                                0798
*   RPARM->OPREFLG1=OPRA0;          /* SET FLAG FOR A0               */
         MVI   OPREFLG1(RPARM),X'01'                               0799
*   RPARM->OCSWITCH=OCACTLK;        /* SET ACTLINK REQ FLAG          */
         MVI   OCSWITCH(RPARM),X'50'                               0800
*   RPARM->OCWTG=VI;                /* INDICATE RETURN HERE          */
         MVC   OCWTG(2,RPARM),@CC02563                             0801
*   RPARM->OCACTREQ=ON;             /* INDICATE ACTIVATE IN PROG     */
         OI    OCACTREQ(RPARM),B'00001000'                         0802
*   RPARM->OCTRMTBL=OCTRMTBL;       /* GET TTCIN FROM OPCE MOVE TO 0803
*                                      DUMMY OPCE                    */
         MVC   OCTRMTBL(2,RPARM),OCTRMTBL(ROPCE)                   0803
*   RPARM->OCBACKUP=OCBACKUP;       /* MOVE GRPNAME FROM OPCE TO   0804
*                                      DUMMY OPCE                    */
         MVC   OCBACKUP(8,RPARM),OCBACKUP(ROPCE)                   0804
*   OPCCOPCE=RPARM;                 /* ATTACH DUMMY OPCE TO OAVT     */
         ST    RPARM,OPCCOPCE(,ROPCAVT)                            0805
*   CALL WAITLADD;                  /* PUT ORIGINAL OPCE ON WAITL    */
         BAL   @14,WAITLADD                                        0806
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0807
*   RETURN;                                                        0808
@EL00012 DS    0H                                                  0808
@EF00012 DS    0H                                                  0808
@ER00012 BR    @14                                                 0808
*   END;                            /* END OF ACTLINK                */
*                                                                  0810
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE BUILDS THE REQUEST TO IEDNSL TO PRIME THE     */
*   /* TERMINALS ON A SPECIFIC LINE THIS ROUTINE IS CALLED BY        */
*   /* PROCRESP                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0810
*STRTLINE:                                                         0810
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0810
STRTLINE DS    0H                                                  0811
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0811
*   RESPECIFY                                                      0812
*     RWORK8 RSTD;                  /* PROCRESP HAS LOADED RWORK8  0812
*                                      WITH THE REAL OPCE ADDR       */
*   NSLPLCB=''B;                    /* CLEAR FIELD                   */
         MVI   NSLPLCB(RNSL),X'00'                                 0813
*   NSLSAVE=''B;                    /* CLEAR FIELD           @YM05736*/
         SLR   @15,@15                                             0814
         STCM  @15,7,NSLSAVE(RNSL)                                 0814
*   NSLGPCUS=''B;                   /* CLEAR FIELD                   */
         MVI   NSLGPCUS(RNSL),X'00'                                0815
*   NSLREQTY=NSLSTRTL;              /* INDICATE STARTLINE REQ        */
         MVI   NSLREQTY(RNSL),X'01'                                0816
*   NSLPRIBK=PRIMEDFG;              /* SET RETURN PRIORITY           */
         MVI   NSLPRIBK(RNSL),X'DF'                                0817
*   NSLFLGBK=OPRVI;                 /* RETURN FLAG TO VI             */
         MVI   NSLFLGBK(RNSL),X'04'                                0818
*   RPARM=RWORK8->OCTRMTBL;         /* TTCIN OF LINE                 */
         SLR   RPARM,RPARM                                         0819
         ICM   RPARM,3,OCTRMTBL(RWORK8)                            0819
*   CALL IEDQTNT;                   /* GET TTE ADDR                  */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0820
         BALR  @14,@15                                             0820
*   NSLTTEPT=RPARM;                 /* PASS IN PARM LIST             */
         ST    RPARM,NSLTTEPT(,RNSL)                               0821
*   NSLGRPNM=RWORK8->OCBACKUP;      /* PASS GROUP NAME               */
         MVC   NSLGRPNM(8,RNSL),OCBACKUP(RWORK8)                   0822
*   OPREQCB=SAVTSPLN;               /* QCB FOR NSL                   */
         L     @15,AVTSAVTP(,IEDQAPTR)                             0823
         MVC   OPREQCB(3,ROPCE),SAVTSPLN+1(@15)                    0823
*   OPREPRI=PRIOPCTL;               /* PRIORITY FOR NSL              */
         MVI   OPREPRI(ROPCE),X'DC'                                0824
*   QCTLWRD1=RNSL;                  /* NSL BUFFER ADDR               */
         LA    @15,180                                             0825
         ALR   @15,ROPCAVT                                         0825
         ST    RNSL,QCTLWRD1(,@15)                                 0825
*   QCTLWRD2=RNSL;                  /* NSL BUFFER ADDR               */
         ST    RNSL,QCTLWRD2(,@15)                                 0826
*   QCTLREQ=TPOST;                  /* INDICATE POST REQUEST         */
         MVI   QCTLREQ(@15),X'0C'                                  0827
*   QCTLEND=ENDLIST;                /* END OF PARM LIST              */
         MVI   QCTLEND(@15),X'80'                                  0828
*   RTERM=RPARM;                    /* SET TTE BASE FOR LINE         */
         LR    RTERM,RPARM                                         0829
*   RPARM=ADDR(OPCAQCTL);           /* ADDR OF PARM LIST             */
         LA    RPARM,OPCAQCTL(,ROPCAVT)                            0830
*   SVC(102);                       /* ISSUE SVC 102                 */
         SVC   102                                                 0831
*   ROPCE=RWORK8;                   /* ESTAB ADDR TO OPCE            */
         LR    ROPCE,RWORK8                                        0832
*   CALL WAITLADD;                  /* PUT OPCE ON WAITCHAIN         */
         BAL   @14,WAITLADD                                        0833
*   OPCMODID=XCTL00;                /* EXIT TO IGC0010D              */
         MVC   OPCMODID(2,ROPCAVT),@CC02565                        0834
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0835
*   RETURN;                                                        0836
@EL00013 DS    0H                                                  0836
@EF00013 DS    0H                                                  0836
@ER00013 BR    @14                                                 0836
*   RESPECIFY                                                      0837
*     RWORK8 UNRSTD;                                               0837
*   END;                            /* END OF STRT TERM              */
*                                                                  0839
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE PUTS AN ELEMENT ON THE WAITL CHAIN THIS       */
*   /* ROUTINE IS CALLED BY ACTLINK,STRTLINE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0839
*WAITLADD:                                                         0839
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0839
WAITLADD DS    0H                                                  0840
*   RESPECIFY                                                      0840
*     RWORK7 RSTD;                  /* RWORK7 IS USED TO CONTAIN ADDR
*                                      OF AN ELEMENT OF WAITL        */
*   RWORK7=OPCWAITV;                /* GET 1ST ELEM ON WAITL         */
         L     RWORK7,OPCWAITV(,ROPCAVT)                           0841
*   OCLINK=RWORK7;                  /* SET NEXT ELEM PTR             */
         ST    RWORK7,OCLINK(,ROPCE)                               0842
*   ROPCE=ROPCE&MASKBYTE;           /* CLEAR THE HIGH ORDER BYTE   0843
*                                                            @YM04620*/
         N     ROPCE,@CF02517                                      0843
*   OPCWAITV=ROPCE;                 /* CHAIN ELEM IN                 */
         ST    ROPCE,OPCWAITV(,ROPCAVT)                            0844
*   RETURN;                                                        0845
@EL00014 DS    0H                                                  0845
@EF00014 DS    0H                                                  0845
@ER00014 BR    @14                                                 0845
*   RESPECIFY                                                      0846
*     RWORK7 UNRSTD;                                               0846
*   END;                            /* END OF WAITLADD               */
*                                                                  0848
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR RESPONSE PROCESSING THIS ROUTINE IS CALLED BY PROCRESP  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0848
*ERRRESP:                                                          0848
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0848
ERRRESP  DS    0H                                                  0849
*   RESPECIFY                                                      0849
*     RWORK8 RSTD;                  /* PROCRESP HAS LOADED OPCE ADDR
*                                      IN RWORK8                     */
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0850
*   IF OCPARM=PARM2 THEN            /* LINE ALREADY STARTED? @YM08579*/
         CLC   OCPARM(2,ROPCE),@CH00132                            0851
         BNE   @RF00851                                            0851
*     DO;                           /*                       @YM08579*/
*       RESPECIFY                                                  0853
*         RSAVE RSTD;                                              0853
*       RSAVE=ADDR(OPCSAVE);        /* ADDR OF SAVE AREA             */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0854
*       CALL FREEBUF;               /* FREE RSP BUFFER       @YM08579*/
         L     @15,OPCFREBF(,ROPCAVT)                              0855
         BALR  @14,@15                                             0855
*     END;                          /*                       @YM08579*/
*   ELSE                            /*                       @YM08579*/
*     RWORK8->OCUNIT=ROPCE->OCUNIT; /* SAVE BUF FOR MG199    @YM08579*/
         B     @RC00851                                            0857
@RF00851 MVC   OCUNIT(4,RWORK8),OCUNIT(ROPCE)                      0857
*   RPARM=ROPCE;                    /* FREE OPCE                     */
@RC00851 LR    RPARM,ROPCE                                         0858
*   RPARM->OCUNIT=BADTIC;           /* 1 BUFFER TO FREE      @YM03737*/
         MVC   OCUNIT(4,RPARM),@CF02506                            0859
*   IF OCPARM=PARM2 THEN            /* LINE ALREADY STARTED? @YM04637*/
         CLC   OCPARM(2,ROPCE),@CH00132                            0860
         BNE   @RF00860                                            0860
*     OPCWRKSP(1)=MSG19;            /* SETUP ALREADY STARTED MESSAGE
*                                                            @YM04637*/
         MVC   OPCWRKSP(4,ROPCAVT),@CF02524                        0861
*   ELSE                            /* NCP REJECTION         @YM04637*/
*     OPCWRKSP(1)=MSG199;           /* MSG NUMBER 199                */
         B     @RC00860                                            0862
@RF00860 MVC   OPCWRKSP(4,ROPCAVT),@CF02530                        0862
*   CALL FREEBUF;                   /* QCA FREE BUFFER RTN           */
@RC00860 L     @15,OPCFREBF(,ROPCAVT)                              0863
         BALR  @14,@15                                             0863
*   RESPECIFY                                                      0864
*     RSAVE UNRSTD;                                                0864
*   OPCWRKSP(2)=PARM4;              /* SET UP PARM VALUE             */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00250                      0865
*   ROPCE=RWORK8;                   /* GET OPCE                      */
         LR    ROPCE,RWORK8                                        0866
*   RESPECIFY                                                      0867
*     RWORK8 UNRSTD;                                               0867
*   OPCCOPCE=ROPCE;                 /* MAKE ORIGINAL OPCE THE CURRENT
*                                      ONE                   @ZM48377*/
         ST    ROPCE,OPCCOPCE(,ROPCAVT)                            0868
*   RPARM=OCTRMTBL;                 /* TTCIN OF LINE TO PROCESS      */
         SLR   RPARM,RPARM                                         0869
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0869
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0870
         BALR  @14,@15                                             0870
*   RTERM=RPARM;                    /* SET TTE BASE                  */
         LR    RTERM,RPARM                                         0871
*   CALL ERREXIT;                   /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0872
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0873
*   RETURN;                                                        0874
@EL00015 DS    0H                                                  0874
@EF00015 DS    0H                                                  0874
@ER00015 BR    @14                                                 0874
*   END;                            /* END OF ERRRESP                */
*                                                                  0876
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR PROCESSING THIS ROUTINE IS CALLED BY SNASTRT,           */
*   /* LINESTAT,ACT3705,ERRRESP                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0876
*ERREXIT:                                                          0876
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0876
ERREXIT  DS    0H                                                  0877
*   OPCWRKSP(5)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+16(,ROPCAVT)                       0877
*   CALL ERRSTAT;                   /* UPDATE ERROR STATUS           */
         BAL   @14,ERRSTAT                                         0878
*   IF MORELINE=OFF THEN                                           0879
         TM    MORELINE(ROPCAVT),B'01000000'                       0879
         BNZ   @RF00879                                            0879
*     DO;                           /* IF NO MORE LINES TO PROCESS,
*                                      THEN SETUP EXIT               */
*       IF OCWTG=0 THEN                                            0881
         ICM   @15,3,OCWTG(ROPCE)                                  0881
         BNZ   @RF00881                                            0881
*         DO;                       /* NOT INTERNAL CALL             */
*           RZERO=OPCWRKSP(1);      /* SET UPMSG NUMB                */
         L     RZERO,OPCWRKSP(,ROPCAVT)                            0883
*           RPARM=OPCWRKSP(2);      /* PARM VALUE                    */
         L     RPARM,OPCWRKSP+4(,ROPCAVT)                          0884
*           IF RZERO=MSG511         /* IF SOME LINES STARTED @ZM48467*/
*             THEN                                                 0885
         CH    RZERO,@CH02534                                      0885
         BNE   @RF00885                                            0885
*             DO;                   /*                       @ZM48467*/
*               OPCMODID=CHKPT;     /* SET TO XCTL TO IGC0610D     0887
*                                                            @ZM48467*/
         MVC   OPCMODID(2,ROPCAVT),@CC02553                        0887
*               OCWTG=MOD03;        /* SET TO GO TO ERROR MESSAGE  0888
*                                      MODULE CHAIN FOLLOWING      0888
*                                      CHECKPOINT            @ZM48467*/
         MVC   OCWTG(2,ROPCE),@CC02559                             0888
*               OCPARM=RZERO;       /* SET MESSAGE NUMBER IN OPCE SO
*                                      THAT IGC0610D CAN SET RZERO 0889
*                                      PRIOR TO XCTL TO IGC0310D   0889
*                                                            @ZM48484*/
         STH   RZERO,OCPARM(,ROPCE)                                0889
*             END;                  /*                       @ZM48467*/
*           ELSE                                                   0891
*             OPCMODID=MOD03;       /* ..ELSE XCTL DIRECTLY TO MSG 0891
*                                      MODULE                @ZM48467*/
         B     @RC00885                                            0891
@RF00885 MVC   OPCMODID(2,ROPCAVT),@CC02559                        0891
*           CALL NONINTEX;          /* COMMON NON-INTERNALEXIT       */
@RC00885 BAL   @14,NONINTEX                                        0892
*         END;                                                     0893
*       ELSE                                                       0894
*         CALL INTRINVK;            /* ELSE INTERNAL INVOKER         */
         B     @RC00881                                            0894
@RF00881 BAL   @14,INTRINVK                                        0894
*     END;                                                         0895
*   ELSE                                                           0896
*     ;                                                            0896
@RF00879 DS    0H                                                  0897
*   RRETURN=OPCWRKSP(5);            /* RESTORE RETURN ADDR           */
@RC00879 L     RRETURN,OPCWRKSP+16(,ROPCAVT)                       0897
*   RETURN;                                                        0898
@EL00016 DS    0H                                                  0898
@EF00016 DS    0H                                                  0898
@ER00016 BR    @14                                                 0898
*   END;                            /* END OF ERREXIT                */
*                                                                  0900
*   /*****************************************************************/
*   /*                                                               */
*   /* NORMAL EXIT PROCESSING THIS ROUTINE IS CALLED BY              */
*   /* STRTRET,SNASTRT                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0900
*NORMEXIT:                                                         0900
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0900
NORMEXIT DS    0H                                                  0901
*   OPCWRKSP(4)=RRETURN;            /* SAVE RTURN ADDR               */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0901
*   CALL NORMSTAT;                  /* UPDATE NORMAL STATUS          */
         BAL   @14,NORMSTAT                                        0902
*   IF MORELINE=OFF THEN                                           0903
         TM    MORELINE(ROPCAVT),B'01000000'                       0903
         BNZ   @RF00903                                            0903
*     DO;                           /* IF NO MORE LINES              */
*       IF OCWTG^=0 THEN                                           0905
         ICM   @15,3,OCWTG(ROPCE)                                  0905
         BZ    @RF00905                                            0905
*         CALL INTRINVK;            /* IF INTERNALLY INVOKED, SETUP
*                                      TO RETURN INTERNALLY          */
         BAL   @14,INTRINVK                                        0906
*       ELSE                                                       0907
*         DO;                       /* NOT INTERNALLY INVOKED        */
         B     @RC00905                                            0907
@RF00905 DS    0H                                                  0908
*           RZERO=OPCWRKSP(1);      /* PUT MSG NUMBER IN R0          */
         L     RZERO,OPCWRKSP(,ROPCAVT)                            0908
*           RPARM=OPCWRKSP(2);      /* SET UP PARAMETER              */
         L     RPARM,OPCWRKSP+4(,ROPCAVT)                          0909
*           OCPARM=RZERO;           /* PUT MSG NUMBER IN OCPARM      */
         STH   RZERO,OCPARM(,ROPCE)                                0910
*           OPCMODID=CHKPT;         /* EXIT TO CHECK POINT           */
         MVC   OPCMODID(2,ROPCAVT),@CC02553                        0911
*           OCWTG=MOD09;            /* THEN TO MSG MOD 09            */
         MVC   OCWTG(2,ROPCE),@CC02555                             0912
*           CALL NONINTEX;          /* EXIT SET UP                   */
         BAL   @14,NONINTEX                                        0913
*         END;                                                     0914
*     END;                                                         0915
*   ELSE                                                           0916
*     ;                                                            0916
@RF00903 DS    0H                                                  0917
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RC00903 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0917
*   RETURN;                                                        0918
@EL00017 DS    0H                                                  0918
@EF00017 DS    0H                                                  0918
@ER00017 BR    @14                                                 0918
*   END;                            /* END OF NORMEXIT               */
*                                                                  0920
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE STATUS IN AN ERROR SITUATION THIS ROUTINE IS CALLED BY */
*   /* ERREXIT                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0920
*ERRSTAT:                                                          0920
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0920
ERRSTAT  DS    0H                                                  0921
*   OPCWRKSP(7)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+24(,ROPCAVT)                       0921
*   IF OCALLFLG=ON THEN                                            0922
         TM    OCALLFLG(ROPCE),B'00000100'                         0922
         BNO   @RF00922                                            0922
*     DO;                           /* IF GRP,ALL PROCESSING         */
*       IF OCSOME=OFF THEN                                         0924
         TM    OCSOME(ROPCE),B'00000010'                           0924
         BNZ   @RF00924                                            0924
*         DO;                       /* IF NO LINES STARTED OR STATE
*                                      INDICATOR IS UNSET, CHANGE  0925
*                                      STATE TO NO LINES STARTED     */
*           OCNONE=ON;              /* NO LINES STARTED              */
         OI    OCNONE(ROPCE),B'00000001'                           0926
*           OPCWRKSP(1)=MSG512;     /* SET UP MSG NUMBER             */
         MVC   OPCWRKSP(4,ROPCAVT),@CF00837                        0927
*         END;                                                     0928
*       ELSE                                                       0929
*         DO;                                                      0929
         B     @RC00924                                            0929
@RF00924 DS    0H                                                  0930
*           OCNONE=OFF;             /* IF SOME OR ALL LINES STARTED
*                                      INDICATOR ON,CHANGE STATE TO
*                                      SOME STARTED                  */
         NI    OCNONE(ROPCE),B'11111110'                           0930
*           OPCWRKSP(1)=MSG511;     /* SET UP MSG NUMBER             */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02534                        0931
*         END;                                                     0932
*       CALL CHKMORE;               /* CHECK FOR MORE LINES          */
@RC00924 BAL   @14,CHKMORE                                         0933
*     END;                                                         0934
*   ELSE                                                           0935
*     ;                                                            0935
@RF00922 DS    0H                                                  0936
*   RRETURN=OPCWRKSP(7);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+24(,ROPCAVT)                       0936
*   RETURN;                                                        0937
@EL00018 DS    0H                                                  0937
@EF00018 DS    0H                                                  0937
@ER00018 BR    @14                                                 0937
*   END;                            /* END OF ERRSTAT                */
*                                                                  0939
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE ALL STATUS IN NORMAL PROCESSING THIS ROUTINE IS CALLED */
*   /* BY NORMEXIT                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0939
*NORMSTAT:                                                         0939
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0939
NORMSTAT DS    0H                                                  0940
*   OPCWRKSP(5)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+16(,ROPCAVT)                       0940
*   IF OCALLFLG=ON THEN                                            0941
         TM    OCALLFLG(ROPCE),B'00000100'                         0941
         BNO   @RF00941                                            0941
*     DO;                           /* IF GRP,ALL PROCESSING         */
*       IF(OCSOME=OFF&OCNONE=OFF)×(OCSOME=ON&OCNONE=ON) THEN       0943
         TM    OCSOME(ROPCE),B'00000011'                           0943
         BZ    @RT00943                                            0943
         TM    OCSOME(ROPCE),B'00000011'                           0943
         BNO   @RF00943                                            0943
@RT00943 DS    0H                                                  0944
*         DO;                       /* IF THIS IS 1ST SUCCESSFUL LINE
*                                      START OR ALL HAVE BEEN      0944
*                                      SUCESSFUL,THEN DO             */
*           OCSOME=ON;              /* INDICATE ALL SUCCESSFUL       */
*           OCNONE=ON;                                             0946
         OI    OCSOME(ROPCE),B'00000011'                           0946
*           OPCWRKSP(1)=MSG510;     /* MSG NUMBER 510                */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02532                        0947
*         END;                                                     0948
*       ELSE                                                       0949
*         DO;                       /* IF NOT ALL HAVE BEEN SUCC     */
         B     @RC00943                                            0949
@RF00943 DS    0H                                                  0950
*           OCSOME=ON;              /* INDICATE SOME STARTED         */
*           OCNONE=OFF;                                            0951
         OI    OCSOME(ROPCE),B'00000010'                           0951
         NI    OCNONE(ROPCE),B'11111110'                           0951
*           OPCWRKSP(1)=MSG511;     /* SET UP MSG NUMBER             */
         MVC   OPCWRKSP(4,ROPCAVT),@CF02534                        0952
*         END;                                                     0953
*       CALL CHKMORE;               /* MORE LINES TO PROCESS?        */
@RC00943 BAL   @14,CHKMORE                                         0954
*     END;                                                         0955
*   ELSE                                                           0956
*     ;                                                            0956
@RF00941 DS    0H                                                  0957
*   RRETURN=OPCWRKSP(5);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+16(,ROPCAVT)                       0957
*   RETURN;                                                        0958
@EL00019 DS    0H                                                  0958
@EF00019 DS    0H                                                  0958
@ER00019 BR    @14                                                 0958
*   END;                            /* END OF NORMSTAT               */
*                                                                  0960
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL INVOCATION PROCESSING THIS ROUTINE IS CALLED BY      */
*   /* ERREXIT,NORMEXIT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0960
*INTRINVK:                                                         0960
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0960
INTRINVK DS    0H                                                  0961
*   RZERO=OPCWRKSP(1);              /* SET UP MSG NUMBER             */
         L     RZERO,OPCWRKSP(,ROPCAVT)                            0961
*   OCPARM=RZERO;                   /* SAVE INOPCE                   */
         STH   RZERO,OCPARM(,ROPCE)                                0962
*   OPCMODID=OCWTG;                 /* RETURN TO CALLER              */
         MVC   OPCMODID(2,ROPCAVT),OCWTG(ROPCE)                    0963
*   OCWTG=0;                        /* NO RETURN                     */
         SLR   @15,@15                                             0964
         STH   @15,OCWTG(,ROPCE)                                   0964
*   IF OPCMODID=MOD07 THEN                                         0965
         CLC   OPCMODID(2,ROPCAVT),@CC02557                        0965
         BNE   @RF00965                                            0965
*     DO;                           /* IF EXIT IS TO IGC0710D        */
*       RZERO=0;                    /* CLEAR RZERO                   */
         SLR   RZERO,RZERO                                         0967
*       OCPARM=RZERO;               /* CLEAR OCPARM                  */
         STH   RZERO,OCPARM(,ROPCE)                                0968
*     END;                                                         0969
*   ELSE                                                           0970
*     ;                                                            0970
@RF00965 DS    0H                                                  0971
*   RETURN;                                                        0971
@EL00020 DS    0H                                                  0971
@EF00020 DS    0H                                                  0971
@ER00020 BR    @14                                                 0971
*   END;                            /* END OF INTRINVK               */
*                                                                  0973
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON NON-INTERNAL EXIT PROCESSING THIS ROUTINE IS CALLED BY */
*   /* ERREXIT,NORMEXIT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0973
*NONINTEX:                                                         0973
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0973
NONINTEX DS    0H                                                  0974
*   IF OCTOTE=ON THEN                                              0974
         TM    OCTOTE(ROPCE),B'01000000'                           0974
         BNO   @RF00974                                            0974
*     DO;                           /* IF TOTE INPUT                 */
*       OCWTG=MOD07;                /* SET EXIT TO IGC0710D          */
         MVC   OCWTG(2,ROPCE),@CC02557                             0976
*       OCPARM=RPARM;               /* SAVE RETURN CODE              */
         STH   RPARM,OCPARM(,ROPCE)                                0977
*       RZERO=RPARM;                /* RETURN CODE                   */
         LR    RZERO,RPARM                                         0978
*       IF OPCMODID=MOD03 THEN                                     0979
         CLC   OPCMODID(2,ROPCAVT),@CC02559                        0979
         BNE   @RF00979                                            0979
*         DO;                       /* IF EXIT IS TO ERROR MOD       */
*           OPCMODID=MOD07;         /* GO TO MSG MODULE              */
         MVC   OPCMODID(2,ROPCAVT),@CC02557                        0981
*           OCWTG=0;                /* NO RETURN                     */
         SLR   @15,@15                                             0982
         STH   @15,OCWTG(,ROPCE)                                   0982
*         END;                                                     0983
*       ELSE                                                       0984
*         ;                                                        0984
@RF00979 DS    0H                                                  0985
*     END;                                                         0985
*   ELSE                                                           0986
*     ;                                                            0986
@RF00974 DS    0H                                                  0987
*   IF OPCWRKSP(1)^=MSG199 THEN     /* IS THIS MSG IED199I?  @YM09054*/
         CLC   OPCWRKSP(4,ROPCAVT),@CF02530                        0987
         BE    @RF00987                                            0987
*     OCUNIT=BADTIC;                /* INDICATE INVALID TIC ADDR     */
         MVC   OCUNIT(4,ROPCE),@CF02506                            0988
*   ELSE                                                           0989
*     ;                             /* IF IED199I, DO NOT RESET    0989
*                                      OCUNIT                @YM09054*/
@RF00987 DS    0H                                                  0990
*   RETURN;                                                        0990
@EL00021 DS    0H                                                  0990
@EF00021 DS    0H                                                  0990
@ER00021 BR    @14                                                 0990
*   END;                            /* END OF NONINTEX               */
*                                                                  0992
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR MORE LINES THIS ROUTINE IS CALLED BY                */
*   /* NORMSTAT,ERRSTAT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0992
*CHKMORE:                                                          0992
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0992
CHKMORE  DS    0H                                                  0993
*   RESPECIFY                                                      0993
*    (RWORK6) RSTD;                 /*                       @ZM46522*/
*   OPCWRKSP(6)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+20(,ROPCAVT)                       0994
*   RPARM=RTERM;                    /*                       @ZM46522*/
         LR    RPARM,RTERM                                         0995
*   RPARM=RPARM-LENGTH(IEDNTRM);    /* BACK UP FOR NEG PREFIX      0996
*                                                            @ZM46522*/
         SH    RPARM,@CH00036                                      0996
*   DO UNTIL((RPARM->TRMTYPE=TRMGRP)×(RPARM->TRMRSACT=OFF));/* INSURE
*                                      THAT A VALID ENTRY IS FOUND 0997
*                                                            @ZM46522*/
@DL00997 DS    0H                                                  0998
*     RWORK6=RPARM->TRMCOHTG;       /* SAVE TTCIN FOR OPC UPDATE   0998
*                                                            @ZM46522*/
         SLR   @15,@15                                             0998
         ICM   @15,3,TRMCOHTG(RPARM)                               0998
         LR    RWORK6,@15                                          0998
*     RPARM=RPARM->TRMCOHTG;        /* GET COHORT G PTR              */
         LR    RPARM,@15                                           0999
*     CALL IEDQTNT;                 /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             1000
         BALR  @14,@15                                             1000
*     RPARM=RPARM-LENGTH(IEDNTRM);  /* BACK UP TO NEG PREFIX ADDR    */
         SH    RPARM,@CH00036                                      1001
*   END;                            /*                       @ZM46522*/
@DE00997 CLI   TRMTYPE(RPARM),X'00'                                1002
         BE    @DC00997                                            1002
         TM    TRMRSACT(RPARM),B'10000000'                         1002
         BNZ   @DL00997                                            1002
@DC00997 DS    0H                                                  1003
*   IF RPARM->TRMTYPE=TRMGRP THEN                                  1003
         CLI   TRMTYPE(RPARM),X'00'                                1003
         BNE   @RF01003                                            1003
*     MORELINE=OFF;                 /* IF TTE IS FOR GROUP THEN NO 1004
*                                      MORE LINES TOPROC             */
         NI    MORELINE(ROPCAVT),B'10111111'                       1004
*   ELSE                                                           1005
*     DO;                           /* MORE LINES TO PROCESS         */
         B     @RC01003                                            1005
@RF01003 DS    0H                                                  1006
*       MORELINE=ON;                /* SET INDICATOR                 */
         OI    MORELINE(ROPCAVT),B'01000000'                       1006
*       OCTRMTBL=RWORK6;            /* SET NEXT LINE TO PROC @ZM46522*/
         STH   RWORK6,OCTRMTBL(,ROPCE)                             1007
*     END;                                                         1008
*   RRETURN=OPCWRKSP(6);            /* RELOAD RETURN ADDR            */
@RC01003 L     RRETURN,OPCWRKSP+20(,ROPCAVT)                       1009
*   RESPECIFY                                                      1010
*    (RWORK6) UNRSTD;               /*                       @ZM46522*/
*   RETURN;                                                        1011
@EL00022 DS    0H                                                  1011
@EF00022 DS    0H                                                  1011
@ER00022 BR    @14                                                 1011
*   END;                            /* END OF CHKMORE                */
*   END                             /* IGCVI10D END                  */
*                                                                  1013
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (TDEBD   )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (TNSLD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPRED  )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  1013
*       ;                                                          1013
@DATA    DS    0H
@CH00061 DC    H'1'
@CH00132 DC    H'2'
@CH00036 DC    H'18'
@CH00800 DC    H'36'
@CH02537 DC    H'382'
@CH02541 DC    H'515'
@CH02539 DC    H'530'
         DS    0F
         DS    0F
@CF00250 DC    F'4'
@CF00046 DC    F'8'
@CF02524 DC    F'19'
@CF00632 DC    F'20'
@CF02522 DC    F'49'
@CF02543 DC    F'102'
@CF02530 DC    F'199'
@CF02528 DC    F'210'
@CF02526 DC    F'400'
@CF02520 DC    F'443'
@CF02532 DC    F'510'
@CF02534 DC    F'511'
@CH02534 EQU   @CF02534+2
@CF00837 DC    F'512'
@CF02672 DC    F'-13'
@CF02674 DC    F'-12'
@CF02673 DC    F'-11'
@CF02675 DC    F'-10'
@CF01705 DC    F'-3'
@CF02506 DC    XL4'08000002'
@CF02517 DC    XL4'00FFFFFF'
         DS    0D
@CC02553 DC    C'06'
@CC02555 DC    C'09'
@CC02557 DC    C'07'
@CC02559 DC    C'03'
@CC02561 DC    C'A0'
@CC02563 DC    C'VI'
@CC02565 DC    C'00'
@CC02567 DC    C'FA'
ZAPAREA  DC    60X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IEDQAPTR EQU   @04
IEDNSLP  EQU   @03
ROPCE    EQU   @03
ROPCAVT  EQU   @02
IEDQTPTR EQU   @05
RTERM    EQU   @05
RNSL     EQU   @03
RZERO    EQU   @00
RPARM    EQU   @01
ROPRE    EQU   @03
RAVT     EQU   @04
RWORK6   EQU   @06
RWORK7   EQU   @07
RWORK8   EQU   @08
RSAVE    EQU   @13
RRETURN  EQU   @14
RLINK    EQU   @15
RWORK10  EQU   @10
RWORK11  EQU   @11
RWORK9   EQU   @09
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00003 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00085 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSPLN EQU   IEDNSVTD+224
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTNETF EQU   IEDNSVTD+324
SAVTCDRV EQU   IEDNSVTD+332
IHADCB   EQU   0
IHADCS1A EQU   0
DCBBCKUP EQU   IHADCS1A+8
IHADCS2K EQU   0
DCBDUMPD EQU   IHADCS2K
DCBTRSTA EQU   IHADCS2K+5
DCBDSORG EQU   IHADCS2K+6
DCBDSRG2 EQU   DCBDSORG+1
DCBRNCKD EQU   IHADCS2K+12
DCBEXLST EQU   IHADCS2K+16
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS43 EQU   0
DCBSCTAB EQU   IHADCS43
IEDQDEB  EQU   0
DEBPRF   EQU   IEDQDEB
DEBAPVT  EQU   DEBPRF
DEBNMSUB EQU   IEDQDEB+36
DEBNMEXT EQU   IEDQDEB+52
DEBUCBS  EQU   IEDQDEB+68
IEDQDPTR EQU   0
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00121 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
IEDNNSLD EQU   0
IEDNSLD  EQU   0
NSLPLCB  EQU   IEDNSLD+8
NSLSAVE  EQU   IEDNSLD+9
NSLGPCUS EQU   IEDNSLD+12
NSLPRIBK EQU   IEDNSLD+18
NSLFLGBK EQU   IEDNSLD+19
NSLERB   EQU   IEDNSLD+20
NSLESTAT EQU   NSLERB+8
NSLUNCNT EQU   NSLERB+12
NSLREQTY EQU   IEDNSLD+35
NSLGRPNM EQU   IEDNSLD+36
NSLTTEBG EQU   NSLGRPNM
NSLTTEPT EQU   IEDNSLD+44
IEDQOPCE EQU   0
OCLINK   EQU   IEDQOPCE
OCELEM   EQU   IEDQOPCE+4
OCELMPTR EQU   OCELEM+1
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
@NM00128 EQU   OCRUDEST+1
OCUNITBF EQU   @NM00128+2
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCTOTE   EQU   OCFLAG
OCATTACH EQU   OCFLAG
OCRESP   EQU   OCFLAG
OCCIB    EQU   IEDQOPCE+16
OCMSTSAV EQU   OCCIB
OCDEST   EQU   OCMSTSAV
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCWTGB   EQU   OCTIOT
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCRENTRD EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCNONE   EQU   OCALSTAT
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCBUFNED EQU   OCBACKUP
OCBUFGOT EQU   OCBACKUP+2
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCPTRSAV EQU   OCMODNME+4
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OC379RRT EQU   OCRSTGTM
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQOPCD EQU   0
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCSAVE  EQU   IEDQOPCD+56
OPCFLAG1 EQU   IEDQOPCD+146
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCHORT  EQU   IEDQOPCD+256
OPCGETBF EQU   IEDQOPCD+276
OPCFREBF EQU   IEDQOPCD+280
OPCSPEC  EQU   IEDQOPCD+300
OPCWRKSP EQU   IEDQOPCD+320
OPCWAITV EQU   IEDQOPCD+364
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
OPCSESS  EQU   IEDQOPCD+384
OPCPCID  EQU   IEDQOPCD+456
OPCUNIQP EQU   OPCPCID+2
OPCSESSF EQU   IEDQOPCD+464
OPCBLIN  EQU   OPCSESSF
IEDOPRED EQU   0
OPREQCB  EQU   IEDOPRED+1
OPREPRI  EQU   IEDOPRED+4
OPRESAVE EQU   IEDOPRED+8
OPRETIC  EQU   OPRESAVE
OPRVTCHK EQU   OPRETIC+3
OPREFLG1 EQU   IEDOPRED+12
OPREFLG3 EQU   IEDOPRED+14
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBELCHN EQU   IEDQQCB+1
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
QCBTSOF2 EQU   QCBINSRC+1
QCBTSOF1 EQU   QCBINSRC+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
IEDQQPTR EQU   0
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IEDQTNTD EQU   0
TNTSTART EQU   IEDQTNTD+82
IEDQNPTR EQU   0
IEDTNTA  EQU   0
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMRSTRT EQU   TRMDESTQ+2
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMSESCT EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMPLIM  EQU   TLISTEN+1
TRMALTD  EQU   IEDQTRM+8
TRMPRILK EQU   TRMALTD
TRMDEVFL EQU   IEDQTRM+10
TRMADDC  EQU   TRMDEVFL
TRMNCPI  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMSIO   EQU   TRMSTAT
TRMOWNER EQU   TRMSIO
IEDNTRM  EQU   0
TRMINDEX EQU   IEDNTRM
TRMCOHTG EQU   IEDNTRM+2
TRMBYTE6 EQU   TRMCOHTG
TRMCDF0  EQU   TRMBYTE6
TRMBYTE5 EQU   TRMCOHTG+1
TRMBYTE4 EQU   IEDNTRM+4
TRMBYTE3 EQU   IEDNTRM+5
TRMBYTE2 EQU   IEDNTRM+6
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+7
TRMSCPRQ EQU   TRMBYTE1
TRMSTOTE EQU   TRMBYTE1
TRMCOHRT EQU   IEDNTRM+8
TRMBYTE0 EQU   IEDNTRM+10
TRMNOWCD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+11
TRMLTRAC EQU   TRMSIBPT
TRMRLMCT EQU   IEDNTRM+14
TRMLGBST EQU   TRMRLMCT
TRMTYPE  EQU   IEDNTRM+15
TRMSUBST EQU   IEDNTRM+16
GRPNAME  EQU   0
QCTLPARM EQU   0
QCTLWRD1 EQU   QCTLPARM
QCTLREQ  EQU   QCTLWRD1
QCTLWRD2 EQU   QCTLPARM+4
QCTLEND  EQU   QCTLWRD2
FREEBUF  EQU   0
ALLOCBUF EQU   0
IEDQTNT  EQU   0
COHORTLK EQU   0
DEBSUBR  EQU   0
QCBLDCB  EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   46
TNTNAME  EQU   0
UCBBGN   EQU   0
UCBDCPTR EQU   0
DCBPTR   EQU   QCBDCBAD
DEBUCB   EQU   DEBUCBS
DEBDVMOD EQU   DEBUCB
DEBUCBAD EQU   DEBUCB+1
UCBPTR   EQU   DEBUCBAD
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00120 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
@NM00137 EQU   OCCIB
@NM00138 EQU   @NM00137+1
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
OCFID0   EQU   OCMODNME
OCFID01  EQU   OCBACKUP
@NM00143 EQU   OCCKDATA
OCMSGFLG EQU   OCPREFLG
OCBKUP1  EQU   OCMODNME
@NM00148 EQU   OCMODNME
OCBKUP2  EQU   OCCKDATA
OCBKUP3  EQU   OCLDNME
OCRESPTR EQU   OCBKUP3+4
OCDIALLN EQU   OCRESPTR
OCIPLDMP EQU   OCLDNME+4
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
@NM00178 EQU   QCBFHDLZ
TRMDIALQ EQU   TRMPLIM
@NM00191 EQU   TRMSTATE
TRMCDFD0 EQU   TRMBYTE5
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMLU1   EQU   TRMBYTE4
TRMLINK1 EQU   TRMBYTE4
TRMDCONS EQU   TRMLINK1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMCDMGR EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
TRMEPMOD EQU   TRMLINK
FLAGS    EQU   OPCFLAG1
FIRSTREQ EQU   FLAGS
MORELINE EQU   FLAGS
EXITFLAG EQU   FLAGS
OCLINRRT EQU   OCTRUNIT
OCPCID   EQU   OCBACKUP
OCRSNCDE EQU   OCALSTAT
TNTFIRST EQU   TNTSTART
TRMOPT   EQU   IEDQTRM+20
TRMPOOLP EQU   TRMINSEQ
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00209 EQU   FLAGS
TRMLDISC EQU   TRMLINK
@NM00208 EQU   TRMLINK
TRMLALOC EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMCDLOG EQU   TRMCDMGR
@NM00207 EQU   TRMCDMGR
@NM00206 EQU   TRMCDMGR
@NM00205 EQU   TRMCDMGR
@NM00204 EQU   TRMCDMGR
@NM00203 EQU   TRMCDMGR
TRMBKDUP EQU   TRMCDMGR
TRMLULOG EQU   TRMLU
@NM00202 EQU   TRMLU
@NM00201 EQU   TRMLU
@NM00200 EQU   TRMLU
TRMTDIFF EQU   TRMLU
@NM00199 EQU   TRMLU
@NM00198 EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
TRMPDOCQ EQU   TRMPU
TRMPULOC EQU   TRMPU
TRMPDNAS EQU   TRMPU
TRMPALOC EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMNCPLK EQU   TRMLINK1
@NM00197 EQU   TRMLINK1
TRMDCONN EQU   TRMDCONS
TRMDCOP  EQU   TRMDCONS
TRMPMARY EQU   TRMLU1
@NM00196 EQU   TRMLU1
@NM00195 EQU   TRMLU1
TRMCDSRQ EQU   TRMLU1
TRMLSCVP EQU   TRMLU1
@NM00194 EQU   TRMLU1
@NM00193 EQU   TRMNCP1
TRMANS   EQU   TRMNCP1
TRMLINOP EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMINERR EQU   TRMCDFD0
TRMLUTM  EQU   TRMCDFD0
TRMLUIT  EQU   TRMCDFD0
TRMLUREQ EQU   TRMCDFD0
TRMCDPRE EQU   TRMCDFD0
TRMWASCD EQU   TRMCDFD0
TRMSRPFG EQU   TRMCDFD0
TRMSESRQ EQU   TRMCDFD0
@NM00192 EQU   @NM00191
TRMENTRY EQU   @NM00191
TRMSRPTR EQU   TRMDIALQ
QCBPFEFO EQU   @NM00178+1
QCBDATFL EQU   @NM00178
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
@NM00151 EQU   OCIPLDMP
OCACTRQ  EQU   OCIPLDMP
OCDACRQ  EQU   OCIPLDMP
OCIPLRQ  EQU   OCIPLDMP
OCDMPRQ  EQU   OCIPLDMP
@NM00150 EQU   OCRESPTR+2
OCOHNATA EQU   OCDIALLN
OCRRTPTR EQU   OCBKUP3
@NM00149 EQU   OCBKUP2+4
OCNHITTC EQU   OCBKUP2+2
OCLINTTC EQU   OCBKUP2
OCCSIB   EQU   @NM00148
@NM00147 EQU   OCBKUP1+6
OCTARTTC EQU   OCBKUP1+4
OCSRTTC  EQU   OCBKUP1+2
OCRSTTC  EQU   OCBKUP1
@NM00146 EQU   OCMSGFLG
OCRRT    EQU   OCMSGFLG
OCNAME   EQU   OCMSGFLG
OCLU1TTE EQU   @NM00143+4
OCLU2TTI EQU   @NM00143+2
OCLU1TTI EQU   @NM00143
OCSLUTNT EQU   OCFID01+6
OCPLUTNT EQU   OCFID01+4
OCBIADDR EQU   OCFID01
OCSRCED  EQU   OCFID0+4
OCSRCEU  EQU   OCFID0
OCICINAC EQU   OCICSW
@NM00142 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00141 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00140 EQU   @NM00137+2
@NM00139 EQU   @NM00138
OCTSTAT  EQU   @NM00138
OCREASON EQU   @NM00137
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00120
UCBSKPFG EQU   @NM00120
UCBRIPND EQU   @NM00120
UCBRTIAC EQU   @NM00120
UCBRSV79 EQU   @NM00120
UCBRSV78 EQU   @NM00120
UCBRSV77 EQU   @NM00120
UCBOLTEP EQU   @NM00120
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00119 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00211 EQU   QCTLWRD2+1
@NM00210 EQU   QCTLWRD1+1
TRMPRIME EQU   TRMLGBST
TRMOWNR  EQU   TRMLTRAC+1
TRMGPCNT EQU   TRMLTRAC
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMACDC  EQU   TRMNOWCD
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
@NM00190 EQU   TRMCDF0
TRMPURGE EQU   TRMCDF0
TRMCDST  EQU   TRMINDEX
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMNADDR EQU   TRMOWNER
@NM00189 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
@NM00188 EQU   TRMNCPI
TRMRNTRM EQU   TRMDEVFL+1
@NM00187 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMSCV   EQU   TRMADDC
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMSTEAL EQU   TRMPRILK
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TRMSESCT
TRMVERIF EQU   TRMRSTRT
@NM00186 EQU   TRMRSTRT
@NM00185 EQU   TRMDESTQ
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TNTTRMAD EQU   IEDTNTA
@NM00184 EQU   IEDQTNTD+46
TNTLEN   EQU   IEDQTNTD+44
@NM00183 EQU   IEDQTNTD+41
TNTENLEN EQU   IEDQTNTD+40
@NM00182 EQU   IEDQTNTD+38
@NM00181 EQU   IEDQTNTD
QCBTTCIN EQU   QCBPLCBA+1
@NM00180 EQU   QCBPLCBA
@NM00179 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00177 EQU   QCBFHDTZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   QCBINSRC
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00176 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00175 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00174 EQU   QCBELCHN+2
@NM00173 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
@NM00172 EQU   OPREFLG3
OPREATCH EQU   OPREFLG3
@NM00171 EQU   OPREFLG3
OPREFLG2 EQU   IEDOPRED+13
@NM00170 EQU   OPRVTCHK
OPRITSET EQU   OPRVTCHK
@NM00169 EQU   OPRVTCHK
@NM00168 EQU   OPRETIC
OPRELINK EQU   IEDOPRED+5
OPREKEY  EQU   IEDOPRED
OPCBOTTM EQU   IEDQOPCD+1276
OPCDSRWT EQU   IEDQOPCD+1272
@NM00167 EQU   IEDQOPCD+1188
@NM00166 EQU   IEDQOPCD+1036
@NM00165 EQU   IEDQOPCD+1028
@NM00164 EQU   IEDQOPCD+468
OPCLSABC EQU   IEDQOPCD+466
@NM00163 EQU   IEDQOPCD+465
@NM00162 EQU   OPCBLIN
OPCBLDSC EQU   OPCBLIN
OPCUNIQV EQU   OPCUNIQP+2
OPCUNIQU EQU   OPCUNIQP
OPCOSSCP EQU   OPCPCID
OPCSDUPU EQU   IEDQOPCD+452
OPCSDULU EQU   IEDQOPCD+448
OPCSDRVT EQU   IEDQOPCD+444
OPCSDRET EQU   IEDQOPCD+440
OPCSDHSY EQU   IEDQOPCD+436
OPCSDENQ EQU   IEDQOPCD+432
OPCSDDIA EQU   IEDQOPCD+428
OPCSDCIS EQU   IEDQOPCD+424
OPCSDBIS EQU   IEDQOPCD+420
OPCSDAPU EQU   IEDQOPCD+416
OPCSDALU EQU   IEDQOPCD+412
OPCCSKEY EQU   IEDQOPCD+408
OPCSSKEY EQU   IEDQOPCD+404
OPCPRTTE EQU   IEDQOPCD+400
OPCLU2TT EQU   OPCSESS+14
OPCLU1TT EQU   OPCSESS+12
OPCSENSE EQU   OPCSESS+8
OPCCSIB  EQU   OPCSESS+4
OPCCTTE  EQU   OPCSESS
OPCGTSIB EQU   IEDQOPCD+380
@NM00161 EQU   OPCPWCOB+9
@NM00160 EQU   OPCPWCOB+8
@NM00159 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00158 EQU   OPCSPEC
@NM00157 EQU   OPCSPEC
@NM00156 EQU   OPCSPEC
@NM00155 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00154 EQU   OPCLDNME+5
@NM00153 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00152 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCDOUBL EQU   IEDQOPCD
@NM00145 EQU   OCLDNME+4
@NM00144 EQU   OCPREFLG
OCREMCON EQU   OCPREFLG
OCCLNUP  EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
OCRMPORQ EQU   OCREQFLG
OCCDLACT EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
OCNCP    EQU   OCRSTGTM+2
OCCKDAT2 EQU   OC379RRT+1
OCCKDAT1 EQU   OC379RRT
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
@NM00136 EQU   OCBACKUP+4
OCBUFRET EQU   OCBUFGOT
OCBUFUSD EQU   OCBUFNED
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00135 EQU   OCRSID+1
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00134 EQU   OCALSTAT
OCDIALX  EQU   OCWTGB
@NM00133 EQU   OCMSTSAV+2
OCREQVAL EQU   OCDEST+1
OCCONID  EQU   OCDEST
OCRLN    EQU   IEDQOPCE+15
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00132 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00131 EQU   OCUNITBF
OCINVTIC EQU   OCUNITBF
@NM00130 EQU   OCUNITBF
@NM00129 EQU   @NM00128
@NM00127 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPRI EQU   OCELEM
NSLTTEND EQU   NSLGRPNM+4
NSLOPCEP EQU   NSLTTEBG
@NM00126 EQU   IEDNSLD+34
NSLUNREQ EQU   NSLUNCNT+1
NSLBFREQ EQU   NSLUNCNT
NSLBUFFR EQU   NSLERB+9
@NM00125 EQU   NSLESTAT
NSLMPPI  EQU   NSLESTAT
@NM00124 EQU   NSLESTAT
NSLELINK EQU   NSLERB+5
NSLERBPR EQU   NSLERB+4
NSLERQCB EQU   NSLERB
NSLTTCIN EQU   IEDNSLD+16
NSLCTTRM EQU   IEDNSLD+13
@NM00123 EQU   NSLGPCUS
NSLDRDRV EQU   NSLGPCUS
NSLSDIAL EQU   NSLGPCUS
NSLNGPSL EQU   NSLGPCUS
NSLGPTSP EQU   NSLGPCUS
NSLNGPST EQU   NSLGPCUS
@NM00122 EQU   NSLPLCB
NSLPLCBR EQU   NSLPLCB
NSLOPRE  EQU   IEDNSLD
NSLSAVE2 EQU   IEDNNSLD+4
NSLSAVE1 EQU   IEDNNSLD
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00121
UCBHALI  EQU   @NM00121
UCBRSV09 EQU   @NM00121
UCBRSV08 EQU   @NM00121
UCBRSV07 EQU   @NM00121
UCBRSV06 EQU   @NM00121
UCBRSV05 EQU   @NM00121
UCBRSV04 EQU   @NM00121
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00118 EQU   UCB
DEBAPPAD EQU   IEDQDEB+65
DEBEXSCL EQU   IEDQDEB+64
DEBDCBAD EQU   IEDQDEB+61
DEBPROTG EQU   IEDQDEB+60
DEBECBAD EQU   IEDQDEB+57
DEBPRIOR EQU   IEDQDEB+56
DEBUSRPG EQU   IEDQDEB+53
DEBSYSPG EQU   IEDQDEB+49
DEBOPATB EQU   IEDQDEB+48
DEBIRBAD EQU   IEDQDEB+45
DEBOFLGS EQU   IEDQDEB+44
DEBDEBAD EQU   IEDQDEB+41
DEBAMLNG EQU   IEDQDEB+40
DEBTCBAD EQU   IEDQDEB+37
@NM00117 EQU   DEBPRF+33
DEBLNGTH EQU   DEBPRF+32
DEBDCBMK EQU   DEBPRF+28
DEBDSCBA EQU   DEBPRF+21
DEBWKARA EQU   DEBPRF+20
DEBXCEA  EQU   DEBAPVT+16
DEBCEA   EQU   DEBAPVT+12
DEBPCIA  EQU   DEBAPVT+8
DEBSIOA  EQU   DEBAPVT+4
DEBEOEA  EQU   DEBAPVT
DCBBUFSI EQU   IHADCS43+6
DCBUNTCT EQU   IHADCS43+5
DCBILCT  EQU   IHADCS43+4
DCBSCTAD EQU   DCBSCTAB+1
@NM00116 EQU   DCBSCTAB
DCBPUTA  EQU   DCBGETA
@NM00115 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00114 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00113 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBEIOBX EQU   DCBEXLST
DCBRNCKA EQU   DCBRNCKD+1
@NM00112 EQU   DCBRNCKD
DCBIOBAD EQU   IHADCS2K+8
DCBDSGTR EQU   DCBDSRG2
@NM00111 EQU   DCBDSRG2
DCBDSRG1 EQU   DCBDSORG
DCBCHNGL EQU   DCBTRSTA
DCBNIDLE EQU   DCBTRSTA
DCBBAKUP EQU   DCBTRSTA
DCBIPLED EQU   DCBTRSTA
DCBRSTRT EQU   DCBTRSTA
DCBINITL EQU   DCBTRSTA
DCBAUTOD EQU   DCBTRSTA
DCBAUTOI EQU   DCBTRSTA
@NM00110 EQU   IHADCS2K+4
DCBDUMPA EQU   DCBDUMPD+1
DCBUNITN EQU   DCBDUMPD
DCBBCKUA EQU   DCBBCKUP+1
@NM00109 EQU   DCBBCKUP
DCBIPLTX EQU   IHADCS1A
@NM00108 EQU   IHADCB
SAVTLLCB EQU   IEDNSVTD+380
SAVTSCF0 EQU   IEDNSVTD+376
SAVTLSNY EQU   IEDNSVTD+372
SAVTLSZP EQU   IEDNSVTD+368
SAVTOMSU EQU   IEDNSVTD+364
SAVTGTSB EQU   IEDNSVTD+360
SAVTHIBL EQU   IEDNSVTD+356
SAVTHISY EQU   IEDNSVTD+352
SAVTNAX2 EQU   IEDNSVTD+348
SAVTCDRU EQU   IEDNSVTD+344
SAVTPOLC EQU   IEDNSVTD+342
SAVTPOLM EQU   IEDNSVTD+340
SAVTPOLR EQU   IEDNSVTD+336
SAVTCDRN EQU   SAVTCDRV
SAVTPOLL EQU   IEDNSVTD+328
SAVTPOLN EQU   IEDNSVTD+326
@NM00107 EQU   IEDNSVTD+325
@NM00106 EQU   SAVTNETF
SAVTSDIS EQU   SAVTNETF
SAVTROUT EQU   SAVTNETF
SAVTNETW EQU   SAVTNETF
SAVTDIAL EQU   IEDNSVTD+320
SAVTRQUT EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTSITS  EQU   IEDQAVTD+1264
AVTMSUHI EQU   IEDQAVTD+1260
AVTSITU  EQU   IEDQAVTD+1256
AVTSITP  EQU   IEDQAVTD+1252
AVTPADDR EQU   IEDQAVTD+1248
@NM00091 EQU   IEDQAVTD+1246
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00090 EQU   IEDQAVTD+1242
@NM00089 EQU   IEDQAVTD+1241
@NM00088 EQU   IEDQAVTD+1240
@NM00087 EQU   IEDQAVTD+1237
@NM00086 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00085
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00084 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00083 EQU   IEDQAVTD+1140
@NM00082 EQU   IEDQAVTD+1137
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00074 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00073 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00072 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00071 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00070 EQU   AVTBIT2
@NM00069 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00068 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00067 EQU   IEDQAVTD+950
@NM00066 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00065 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00052 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00051 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00050 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00049 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00048 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00047 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00046 EQU   AVTOPCQB+8
@NM00045 EQU   AVTOPCEC+1
@NM00044 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00043 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00042 EQU   AVTCKPEC+1
@NM00041 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00040 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00039 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00038 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00037 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00030 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00029 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00022 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00021 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00020 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00019 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00018 EQU   AVTSAVTP+1
@NM00017 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00016 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00015 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00014 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00013 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00012 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00606 EQU   @RC00603
@RF00609 EQU   @RC00603
@RF00612 EQU   @RC00603
@RC00637 EQU   @RC00635
@RC00651 EQU   @RC00647
@RC00782 EQU   @EL00011
@RC00881 EQU   @RC00879
@RC00905 EQU   @RC00903
@PB00022 EQU   @EL00001
@PB00021 EQU   @PB00022
@PB00020 EQU   @PB00021
@PB00019 EQU   @PB00020
@PB00018 EQU   @PB00019
@PB00017 EQU   @PB00018
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IGCVI10D,(C'PLS0647',0701,77341)
