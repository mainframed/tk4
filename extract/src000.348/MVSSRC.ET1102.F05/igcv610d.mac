         TITLE 'IGCV610D- OPERATOR CONTROL START GENERAL POLL MODULE'
IGCV610D CSECT                          ENTRY POINT
         EJECT
         SPACE 3
**CHANGE-ACTIVITY = AS FOLLOWS:
*D530000                                                       @OX16689
*A532000,846000                                                @OX16689
********************* MICROFICHE FLAGS **********************SUPPT CODE
*000000-999999                                                 @Y16X5R0
*D710000-722000,730000,704000                                   SA60006
*C 698000                                                       SA60309
*A 778000                                                       SA60309
*D 916000                                                      @Y17XARZ
*A222000,734000,872000                                         @Y17XARP
*D736000-756000                                                @Y17XARP
*C012006                                                       @Y17XARP
*C010200                                                       @Y17XART
*A040000,054000,164000,866000                                  @Y17XART
*D706000,758000                                                @Y17XART
***********************************************************************
**                                                                    *
**MODULE-NAME=IGCV610D (TCAM, OP CTL)                          @Y17XART
**                                                                    *
**DESCRIPTIVE-NAME=OPERATOR CONTROL START GENERAL POLL MODULE         *
**                                                                    *
**COPYRIGHT='NONE'                                                    *
**                                                                    *
** STATUS:  CHANGE LEVEL 10                                    @Y17XART
**                                                                    *
* FUNCTION --                                                         *
*    THIS ROUTINE RECEIVES CONTROL WHEN IT IS DETERMINED IN           *
*    MODULE IGCV410D THAT THE START TERMINAL REQUEST IS FOR A GENERAL *
*    POLL ENTRY. THE ROUTINE FIRST ACTIVATES THE GENERAL POLL ENTRY   *
*    JUST AS A NORMAL START TERMINAL REQUEST. AFTER THE GENERAL POLL  *
*    ENTRY IS ACTIVATED ALL OF THE OTHER ACTIVE ENTRIES ARE SCANNED   *
*    TO LOCATE ALL SPECIFIC POLL ENTRIES WHOSE CONTROL UNIT ADDRESSES *
*    ARE EQUAL TO THAT OF THE GENERAL POLL ENTRY BEING STARTED. ALL OF*
*    THESE SPECIFIC POLL ENTRIES ARE THEN DEACTIVATED                 *
*    SINCE THIS ROUTINE PROCESSES ONLY GENERAL POLL ENTRIES, 'B' AND  *
*    'E' REQUESTS WILL BE HANDLED THE SAME. IN OTHER WORDS NO RELEASE *
*    FUNCTION WILL BE PERFORMED ON A 'B' TYPE REQUEST.                *
*    THIS MODULE WAS UPDATED TO POST TO THE ASYNCRONOUS READY  @Y17XART
*    Q INSTEAD OF THE DISABLED READY Q.                        @Y17XART
*                                                                     *
* ENTRY POINTS --                                                     *
*         'IGCV610D' TO PROCESS VARY GENERAL POLL,ONTP OPERATOR       *
*    CONTROL COMMANDS.  CALLING SEQUENCE IS:                          *
*    MVC OPCLDNME+VARINAME(NAMELEN)=C'V6'                             *
*    LR RPARM,ROPCAVT                                                 *
*    XCTL SF=(E,OPCXCTL)                                              *
*    PURPOSE - SEE FUNCTION                                    @Y17XART
*                                                                     *
* INPUT --                                                            *
*    REGISTER 2 - ADDRESS OF OPERATOR CONTROL AVT                     *
*    REGISTER 3 - ADDRESS OF OPERATOR CONTROL ELEMENT                 *
*    REGISTER 4 - ADDRESS OF TCAM AVT                                 *
*    REGISTER 5 - ADDRESS OF LINE CONTROL BLOCK                       *
*    REGISTER 6 - ADDRESS OF GENERAL POLL INVITATION CHARACTERS       *
*    REGISTER A - LENGTH OF EACH INVITATION ENTRY                     *
*    REGISTER B - ADDRESS OF INVITATION LIST                          *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER 0 - NUMBER OF APPROPRIATE OPERATOR AWARENESS MESSAGE    *
*                                                                     *
*    RETURN CODES:                                                    *
*    0 - GENERAL POLL WAS STARTED                                     *
*    8 - GENERAL POLL WAS ALREADY STARTED                             *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         'XCTL' (SVC 7) TO TRANSFER CONTROL TO ANOTHER MODULE        *
*                                                                     *
* EXITS,NORMAL --                                                     *
*         GENERAL POLL WAS STARTED                                    *
*         RESPONSE MESSAGE NUMBER WAS SET UP                          *
*         X'00' RETURN CODE WAS SET UP                                *
*         XCTL TO CHECKPOINT MODULE IGC0610D                          *
*                                                                     *
*         GENERAL POLL WAS ALREADY STARTED                            *
*         RESPONSE MESSAGE NUMBER WAS SET UP                          *
*         X'08' RETURN CODE WAS SET UP                                *
*         XCTL TO ERROR MODULE IGC0910D                               *
*                                                                     *
* EXITS,ERROR --                                                      *
*         NONE                                                        *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    OPERATOR CONTROL AVT                                             *
*    OPERATOR CONTROL ELEMENT                                         *
*    LINE CONTROL BLOCK                                               *
*    INVITATION LIST                                                  *
*                                                                     *
* ATTRIBUTES --                                                       *
*    SERIALLY REUSABLE, REFRESHABLE, DISABLED, TRANSIENT,             *
*    SUPERVISOR MODE.                                                 *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    SEE NOTES BELOW.                                                 *
*                                                                     *
* NOTES --                                                            *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO*
*    THAT REDEFINITION OF ''CHARACTER'' CONSTANTS, BY REASSEMBLY, WILL*
*    RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.              *
*    COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS PRIMARILY*
*    THROUGH THE OPERATOR CONTROL AVT.                                *
*    RESTRICTIONS - NONE                                       @Y17XART
*    REGISTER CONVENTIONS - STANDARD OP CTL                    @Y17XART
*    PATCH LABEL - ZAPAREA                                     @Y17XART
* MODULE TYPE - CSECT                                          @Y17XART
*    PROCESSOR - ASSEMBLER                                     @Y17XART
*    MODULE SIZE -                                             @Y17XART
*                                                                     *
***********************************************************************
         EJECT
*                            R E G I S T E R  E Q U A T E S
RZERO    EQU   0                        PARAMETER REGISTER
RPARM    EQU   1                        PARAMETER REGISTER
ROPCAVT  EQU   2                        POINTER TO OP CONTROL AVT
ROPCE    EQU   3                        POINTER TO CURRENT OPCE
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORKA   EQU   5                        POINTER TO RESIDENT WORKAREA
RRLNKA   EQU   5                        RELATIVE LINE NUMBER
RLCB     EQU   5                        LCB BASE
RLCB1    EQU   6                        LCB BASE
RENTRY   EQU   6                        G.P. ENTRY ADDRESS
RTERM    EQU   6                        TERM ENTRY BASE
RSCB     EQU   6                        SCB ADDRESS
RTNT     EQU   6                        TERM NAME TABLE ADDRESS
RUCN     EQU   6                        UCB ADDRESS
RDCB     EQU   7                        DCB ADDRESS
ROFF     EQU   7                        OFFSET TO DDNAME, ADDR, RLN
RWORK    EQU   8                        WORK REGISTER
RWORK1   EQU   9                        WORK REGISTER
RPREFIX  EQU   9                        BUFFER ADDRESS
RLENGTH  EQU   10                       LENGTH OF INVLIST ENTRY
RDEB     EQU   10                       DEB BASE
RLIST    EQU   11                       ADDRESS OF INVLIST ENTRIES
RQCB     EQU   11                       QCB ADDRESS
RBASE    EQU   12                       BASE FOR MODULE
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
CURR     EQU   14                       REGISTER 14            @Y17XARP
RBRNCH   EQU   15                       SUBROUTINE BRANCH ENTRY POINT
         SPACE 2
*                            M I S C E L L A N E O U S  E Q U A T E S
ZERO     EQU   0                        ZERO
ONE      EQU   1                        ONE
TWO      EQU   2                        TWO
THREE    EQU   3                        THREE
FOUR     EQU   4                        FOUR
FIVE     EQU   5                        FIVE
SIX      EQU   6                        SIX
SEVEN    EQU   7                        SEVEN
EIGHT    EQU   8                        EIGHT
X80      EQU   X'80'                    HEX80
X40      EQU   X'40'                    HEX40
X20      EQU   X'20'                    HEX20
X10      EQU   X'10'                    HEX10
X08      EQU   X'08'                    HEX08
X04      EQU   X'04'                    HEX04
X02      EQU   X'02'                    HEX02
X01      EQU   X'01'                    HEX01
ANYMOVED EQU   X'01'                    ANY ENTRIES MOVED BIT
BUSY     EQU   4                        C.P.U. BUSY
CCODE    EQU   11                       CONDITION CODE
CVTPTR   EQU   16                       ADDRESS OF C.V.T.
DIST     EQU   X'40'                    DISTRIBUTION LIST
ENDACT   EQU   X'FE'                    END OF ACTIVE ENTRIES INDICATOR
EOT      EQU   X'80'                    EOT CHARACTER PRESENT
ERROR13  EQU   13                       ERROR MESSAGE
ERROR16  EQU   16                       ERROR MESSAGE
ERROR19  EQU   19                       ERROR MESSAGE
ERROR25  EQU   25                       ERROR MESSAGE
ERROR46  EQU   46                       ERROR MESSAGE
ERROR47  EQU   47                       ERROR MESSAGE
ERROR88  EQU   88                       ERROR MESSAGE
ERROR90  EQU   90                       ERROR MESSAGE
ERROR91  EQU   91                       ERROR MESSAGE
ERROR145 EQU   145                      ERROR MESSAGE
GOODHOLD EQU   51                       SUCCESSFUL HOLD
GPSTRT   EQU   143                      G.P. STARTED MESSAGE
HKOFF    EQU   0                        OFFSET FOR IEDQHK
LCBPRIOR EQU   X'E0'                    PRIORITY FOR LCB
LINOPN   EQU   X'C1'                    OPEN INDICATOR
MVLEN    EQU   36                       MOVE LENGTH
NAMELEN  EQU   2                        MOVE LENGTH
ON       EQU   1                        BIT SETTING
STRTBOTH EQU   X'08'                    START WITH RELEASE
STRTSNGL EQU   X'46'                    START WITHOUT RELEASE
TR       EQU   3                        LENGTH OF THREE
VARINAME EQU   3                        OFFSET TO VARIABLE PART OF NAME
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING DEBNMSUB,RDEB            DEB ADDRESSABILITY
         USING IHADCB,RDCB              DCB ADDRESSABILITY
         USING IEDQQCB,RQCB             QCB ADDRESSABILITY
         USING IEDQTNTD,RTNT            TNT ADDRESSABILITY
         USING IEDQSCB,RSCB             SCB ADDRESSABILITY
         USING IEDQPRF,RPREFIX          BUFFER ADDRESSABILITY
         USING IEDQTRM,RTERM            TERM ENTRY ADDRESSABILITY
         SPACE 2                        SPACE 2
         BALR  RBASE,0                  SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
BASE     EQU   *                        BASE
IGCV610D IEDHJN  V610D000
         LR    ROPCAVT,RPARM            SET UP AVT ADDRESSING
         L     RAVT,OPCAVTPT            TCAM AVT ADDRESSING
         L     ROPCE,OPCCOPCE           GET CURRENT ELEMENT POINTER
         LA    RENTRY,SEVEN(RLIST)      POINTER TO FIRST ENTRY INDEX
         SR    RRET,RRET                CLEAR REGISTER
         IC    RRET,ONE(RLIST)          GET NUMBER OF ACTIVE ENTRIES
         SR    RLENGTH,RLENGTH          CLEAR REGISTER
         IC    RLENGTH,TWO(RLIST)       GET LENGTH OF EACH ENTRY
         LTR   RRET,RRET                ARE THERE ANY ACTIVE ENTRIES
         BZ    V610D002                 IF NO, CHECK INACTIVE ENTRIES
         SPACE 2                        SPACE 2
V610D001 EQU   *
         AR    RENTRY,RLENGTH           GO TO NEXT ENTRY'S INDEX
         CLC   ZERO(ONE,RENTRY),OCMODNME+THREE IS THIS AN ACTIVE ENTRY
         BE    V610D020                 YES, BRANCH
         BCT   RRET,V610D001            NOT END OF ACTIVE
         SPACE 2                        SPACE 2
*THE FOLLOWING CODE CHECKS TO SEE IF THE G.P. ENTRY IS THE FIRST IN-
*ACTIVE ENTRY.  IF IT IS, THE END OF ACTIVE INDICATOR IS MOVED PAST IT.
         SPACE 2                        SPACE 2
V610D002 EQU   *
         LA    RENTRY,ONE(RENTRY)       SKIP ACTIVE FLAG
         TM    THREE(RLIST),EOT         IS EOT ENTRY PRESENT
         BZ    V610D003                 NO, BRANCH
         LA    RENTRY,ONE(RENTRY)       SKIP PAST EOT
         SPACE 2                        SPACE 2
V610D003 EQU   *
         AR    RENTRY,RLENGTH           GET TO NEXT INDEX
         CLC   ZERO(ONE,RENTRY),OCMODNME+THREE IS THIS AN ENTRY
         BNE   V610D003                 NO GET ANOTHER
         OI    OPCFLAG1,ANYMOVED        SET MOVED INDICATOR
         SR    RENTRY,RLENGTH           POINT TO PREVIOUS ENTRY
         LR    RWORK,RENTRY
         SR    RWORK,RLENGTH            POINT TO PREVIOUS ENTRY
         SPACE 2                        SPACE 2
V610D004 EQU   *
         CLI   ZERO(RENTRY),ENDACT      FIRST INACTIVE ENTRY
         BE    V610D006                 YES, GO MAKE IT ACTIVE
         SPACE 2                        SPACE 2
V610D005 EQU   *
         LR    RWORK1,RLENGTH           GET LENGTH
         BCTR  RWORK1,ZERO              DECREMENT FOR EXECUTE
         EX    RWORK1,V610D098          SWAP
         EX    RWORK1,V610D099           ADJACENT
         EX    RWORK1,V610D100            ENTRIES
         SR    RENTRY,RLENGTH           BACK POINTERS
         SR    RWORK,RLENGTH            UP ONE ENTRY
         B     V610D004                  KEEP PROCESSING
         SPACE 2                        SPACE 2
V610D006 EQU   *
         TM    THREE(RLIST),EOT         EOT ENTRY PRESENT
         BZ    V610D007                 NO, BRANCH
         LA    RRET,TWO                 SET FOR DECREMENT BY TWO
         SR    RENTRY,RRET              BACK UP TWO FOR EOT-X'FE'
         SR    RWORK,RRET               BACK UP TWO FOR EOT-X'FE'
         MVC   OCMODNME+FOUR(TWO),ONE(RENTRY) SAVE EOT-X'FE'
         LR    RWORK1,RLENGTH           PICK UP LENGTH OF ENTRY
         BCTR  RWORK1,ZERO              DECREMENT FOR EXECUTE
         EX    RWORK1,V610D093          MAKE ENTRY ACTIVE
         LA    RRET,ONE(RLENGTH,RENTRY) SET ADDRESSING FOR EOT-X'FE'
         MVC   ZERO(TWO,RRET),OCMODNME+FOUR RESET EOT-X'FE'
         B     V610D008                 CONTINUE PROCESSING
         SPACE 2                        SPACE 2
V610D007 EQU   *
         BCTR  RENTRY,ZERO              BACK UP TO INDEX
         EX    RWORK1,V610D097          PLACE ENTRY ON ACTIVE SIDE
         LA    RRET,ONE(RLENGTH,RENTRY) POINT TO NEW END OF ACTIVE
         MVI   ZERO(RRET),ENDACT        RESET END-OF-ACTIVE INDICATOR
         SPACE 2                        SPACE 2
V610D008 EQU *
         SR    RRET,RRET                CLEAR REGISTER
         IC    RRET,ONE(RLIST)          GET NUMBER OF ACTIVE ENTRIES
         LA    RRET,ONE(RRET)           INCREMENT BY ONE
         STC   RRET,ONE(RLIST)          STORE BACK NEW COUNT
         SPACE 2                        SPACE 2
V610D009 EQU   *
         BCTR  RRET,ZERO                DECREMENT BACK TO OLD COUNT
         LTR   RRET,RRET                WERE THERE ANY ACTIVE ENTRIES
         BZ    V610D020                 NO, NO NEED TO GO ON
         SR    RRET,RRET                CLEAR REGISTER
         SPACE 2                        SPACE 2
V610D010 EQU   *
         LA    RENTRY,ONE(RENTRY)       SKIP PAST INDEX BYTE
         LR    RWORK,RENTRY             SET UP FOR COMPARE
         SR    RWORK,RLENGTH            POINT TO ENTRY BEFORE G.P. ENT
         LA    RWORK1,EIGHT(RLIST)      POINT TO FIRST ACTIVE ENTRY
         SPACE 2                        SPACE 2
V610D011 EQU   *
         CLC   ZERO(ONE,RWORK),ZERO(RENTRY) SAME CONTROL UNIT ADDRESS
         BNE   V610D013                 NO, BRANCH
         BCTR  RLENGTH,ZERO             SET UP LENGTH FOR EXECUTE
         BCTR  RLENGTH,ZERO             SET UP LENGTH FOR EXEC @OX16689
         EX    RLENGTH,V610D105         SAME CONTROL UNIT      @OX16689
         LA    RLENGTH,ONE(,RLENGTH)    RESTORE ENTRY LENGTH   @OX16689
         BNE   SWAP                     NO, MUST BE TERMINAL GO@OX16689
*                                        MOVE TO ACTIVE SIDE   @OX16689
         LA    RLENGTH,ONE(,RLENGTH)    RESTORE ENTRY LENGTH   @OX16689
         B     V610D013                 CONTINUE CKNG ENTRIES  @OX16689
SWAP     EQU   *                                               @OX16689
         LA    RRET,ONE(,RRET)          INCREMENT MOVE COUNTER @OX16689
         EX    RLENGTH,V610D090         SWAP
         EX    RLENGTH,V610D091          ADJACENT
         EX    RLENGTH,V610D092           ENTRIES
         LA    RLENGTH,ONE(RLENGTH)     RESTORE LENGTH
         SPACE 2                        SPACE 2
V610D012 EQU   *
         LR    RENTRY,RWORK             ADJUST POINTER TO G.P. ENTRY
         CR    RWORK,RWORK1             FINISHED MOVING ENTRIES
         BE    V610D014                 YES, GO ADJUST END OF ACTIVE
         SR    RWORK,RLENGTH            SET POINTER TO ADJACENT ENTRY
         B     V610D011                 NO, CONTINUE CHECKING
         SPACE 2                        SPACE 2
*AT THIS POINT A CHECK IS MADE TO SEE IF ALL SPECIFIC POLL ENTRIES
*HAVE BEEN EXAMINED. IF THEY HAVE THEN THE ACTIVE COUNT IS UPDATED
*TO REFLECT ANY CHANGES. IF THEY HAVENT THEN ANOTHER IS EXAMINED
V610D013 EQU   *
         CR    RWORK,RWORK1             ALL ENTRIES MOVED
         BE    V610D014                 YES, BRANCH
         BCTR  RLENGTH,ZERO             SET UP LENGTH FOR EXECUTE
         EX    RLENGTH,V610D094         MOVE ENTRY
         EX    RLENGTH,V610D095          TO THE END
         EX    RLENGTH,V610D096           OF THE LIST
         LA    RLENGTH,ONE(RLENGTH)     RESTORE LENGTH
         AR    RWORK1,RLENGTH           MOVE TO NEXT ENTRY
         B     V610D011                 CONTINUE PROCESSING
         SPACE 2                        SPACE 2
*AT THIS POINT THE G.P. ENTRY HAS BEEN ACTIVATED AND ALL THE S.P.
*ENTRIES WITH THE SAME CONTROL UNIT ADDRESS HAVE BEEN
*DEACTIVATED.
         SPACE 2                        SPACE 2
V610D014 EQU   *
         SR    RLENGTH,RLENGTH          CLEAR REGISTER
         IC    RLENGTH,ONE(RLIST)       GET NUMBER OF ACTIVE ENTRIES
         SR    RLENGTH,RRET             SUBTRACT NO. OF ENTRIES MOVED
         STC   RLENGTH,ONE(RLIST)       STORE BACK NEW COUNT
         SR    RLENGTH,RLENGTH          CLEAR REGISTER
         IC    RLENGTH,TWO(RLIST)       RESTORE LENGTH
         SPACE 2                        SPACE 2
V610D015 EQU   *
         LTR   RRET,RRET                ANY ENTRIES MOVED
         BZ    V610D020                 NO, BRANCH
         LA    RRET,ONE(RRET)           INCREMENT BY ONE
         SR    RBRNCH,RBRNCH            CLEAR REGISTER
         SPACE 2                        SPACE 2
V610D016 EQU   *
         AR    RBRNCH,RLENGTH           INCREMENT LENGTH BY
         BCT   RRET,V610D016            NUMBER OF ENTRIES MOVED
         LA    RRET,ONE                 SET UP AS A DECREMENT
         AR    RENTRY,RBRNCH            POINT TO END OF ENTRIES
         BCTR  RENTRY,ZERO              BACK UP ONE
         SR    RBRNCH,RLENGTH           SUBTRACT OUT G.P. ENTRY
         TM    THREE(RLIST),EOT         IS THIS EOT-X'FE'(BSC)
         BO    V610D018                 YES, BRANCH
         SPACE 2                        SPACE 2
V610D017 EQU   *
         MVC   ONE(ONE,RENTRY),ZERO(RENTRY) MOVE ONE CHARACTER
         SR    RENTRY,RRET              AT A TIME, STARTING
         BCT   RBRNCH,V610D017          WITH THE LAST CHARACTER
         MVI   ONE(RENTRY),ENDACT       RESET END OF ACTIVE INDICATOR
         B     V610D020                 CONTINUE PROCESSING
         SPACE 2                        SPACE 2
V610D018 EQU   *
         MVC   OCMODNME+FOUR(TWO),ONE(RENTRY)  SAVE EOT-X'FE'
         SPACE 2                        SPACE 2
V610D019 EQU   *
         MVC   TWO(ONE,RENTRY),ZERO(RENTRY) MOVE ONE CHARACTER
         SR    RENTRY,RRET              AT A TIME, STARTING
         BCT   RBRNCH,V610D019          WITH THE LAST CHARACTER
         MVC   ONE(TWO,RENTRY),OCMODNME+FOUR RESET EOT-XHFE'
         SPACE 2                        SPACE 2
V610D020 EQU   *
         TM    OPCFLAG1,ANYMOVED        WAS G.P. ENTRY ALREADY STARTED
         BO    V610D021                 NO, SET GOOD RETURN CODE
         LA    RPARM,EIGHT              SET BAD RETURN CODE
         LA    RZERO,ERROR145           ALREADY STARTED MESSAGE
         B     V610D022                 CONTINUE PROCESSING
         SPACE 2                        SPACE 2
V610D021 EQU   *
         SR    RPARM,RPARM              CLEAR REGISTER
         SPACE 2                        SPACE 2
V610D022 EQU   *
         TM    OPCSPEC,OPCRSTRT         RESTART SITUATION
         BO    V610D126                 YES BRANCH              SA60309
         TM    OCSWITCH,X40             SHOULD LINE BE RESTARTED
         BZ    V610D026                 NO, BRANCH
         SPACE 2                        SPACE 2
         SPACE 2                        SPACE 2
V610D024 EQU   *
         MVI   LCBPRI-IEDQLCB(RLCB),LCBPRIOR SET E0 PRIORITY IN BUFFER
         OI    LCBSTAT1-IEDQLCB(RLCB),LCBRECVN SET STATUS FOR START
         ST    RLCB,ZERO(RLCB)          MAKE LCB POINT TO ITSELF
         L     RWORK,CVTPTR             GET CVT ADDR           @Y17XARP
         L     RWORK,AVTCVTPT(RWORK)    GET ADDR OF TCX        @Y17XARP
         USING IEDQTCX,RWORK            ESTABLISH ADDR         @Y17XARP
         L     CURR,TCXREADY            GET ADDR OF CURRENT    @Y17XARP
*                                       ENTRY ON ASYN READY Q  @Y17XARP
NEWCURR  STCM  CURR,SEVEN,LCBLINK-IEDQLCB(RLCB)                @Y17XARP
*                                       LINK NEW ELEM TO CURR  @Y17XARP
         CS    CURR,RLCB,TCXREADY       WAS CURR ELEM UPDATED  @Y17XARP
*                                       ASYNCHRONOUSLY         @Y17XARP
         BNE   NEWCURR                  YES,LINK NEW ELEM TO   @Y17XARP
*                                       CURR ELEM. NO, ASYN    @Y17XARP
*                                       READY QUEUE NOW HAS    @Y17XARP
*                                       NEW ELEM               @Y17XARP
         CLI   OCOPTCDE,STRTSNGL        TOTE ACTIVATE ONLY
         BE    V610D026                 YES, BRANCH
         LTR   RPARM,RPARM              ERROR OR GOOD
         BNZ   V610D029                 BRANCH ON ERROR
         SPACE 2                        SPACE 2
V610D026 EQU   *
         NI    OCFLAG,OCFOXES-OCLINE    TURN OFF BIT
         OI    OCSWITCH,X40             TERMINAL INDICATOR TO MSG. MOD
         LTR   RPARM,RPARM              IS IT A GOOD RETURN
         BNZ   V610D029                 NO, BRANCH TO PROCESS ERROR
V610D126 EQU   *                                                SA60309
         MVC   OPCLDNME+VARINAME(NAMELEN),CHECKPT SET CHECKPOINT NAME
         MVC   OCWTG(NAMELEN),WRTMSG    SET WTG TO MESSAGE MODULE
         MVI   OCPARM,ZERO              CLEAR FIRST BYTE
         MVI   OCPARM+ONE,GPSTRT        GENERAL POLL STARTED MESSAGE
         SPACE 2                        SPACE 2
V610D027 EQU   *
         TM    OCFLAG,OCTOTE+OCMPP      TOTE OR MPP
         BZ    V610D028                 NO, BRANCH
         MVC   OCWTG(NAMELEN),WRITE     SET MESSAGE MODULE FOR CHECKPT
         STH   RPARM,OCPARM             SET PARAMETER FIELD
         LR    RZERO,RPARM              SET RETURN CODE IN REG 0
         MVC   OPCLDNME+VARINAME(NAMELEN),WRITE GO TO WRITER
         SPACE 2                        SPACE 2
V610D028 EQU   *
         NI    OPCFLAG1,ZERO            CLEAR FLAGS
         LR    RPARM,ROPCAVT            PICK UP OPERATOR CONTROL AVT
         XCTL  SF=(E,OPCXCTL)           TRANSFER TO NEXT MODULE
         SPACE 2                        SPACE 2
V610D029 EQU   *
         LA    RPARM,EIGHT              SET BAD RETURN CODE
         MVC   OPCLDNME+VARINAME(NAMELEN),WRTMSG SET TO GO TO ERR MOD
         MVC   OCWTG(NAMELEN),AVTFZERO  INDICATE NO CONTINUE
         B     V610D027                 GO PROCESS ERROR MESSAGE
         SPACE 2                        SPACE 2
V610D090 XC    ZERO(ZERO,RWORK),ZERO(RENTRY) SWAP TWO ADJACENT ENTRIES
V610D091 XC    ZERO(ZERO,RENTRY),ZERO(RWORK) SWAP TWO ADJACENT ENTRIES
V610D092 XC    ZERO(ZERO,RWORK),ZERO(RENTRY) SWAP TWO ADJACENT ENTRIES
V610D093 MVC   ONE(ZERO,RENTRY),THREE(RENTRY) MOVE ENTRY OVER TWO BYTES
V610D094 XC    ZERO(ZERO,RWORK1),ZERO(RWORK) MOVE ENTRY TO END OF LIST
V610D095 XC    ZERO(ZERO,RWORK),ZERO(RWORK1) MOVE ENTRY TO END OF LIST
V610D096 XC    ZERO(ZERO,RWORK1),ZERO(RWORK) MOVE ENTRY TO END OF LIST
V610D097 MVC   ONE(ZERO,RENTRY),TWO(RENTRY)   MOVE ENTRY DOWN ONE BYTE
V610D098 XC    ONE(ZERO,RWORK),ONE(RENTRY) SWAP TWO ADJACENT ENTRIES
V610D099 XC    ONE(ZERO,RENTRY),ONE(RWORK) SWAP TWO ADJACENT ENTRIES
V610D100 XC    ONE(ZERO,RWORK),ONE(RENTRY) SWAP TWO ADJACENT ENTRIES
V610D105 CLC   ZERO(ZERO,RWORK),ZERO(RENTRY) COMPARE POLL CHARS@OX16689
         SPACE 2                        SPACE 2
ERRORTAB DS    0F                       ERROR TABLE
XCTL03   DC    C'03'                    ERROR MODULE NAME
CHECKPT  DC    C'06'                    CHECKPOINT MODULE NAME
WRITE    DC    C'07'                    OUTPUT WRITER NAME
WRTMSG   DC    C'09'                    HOLD, RELEASE, AND VARY MESSAGE
STOPLN   DC    C'V1'                    STOP LINE MODULE
FIRSTLD  DC    C'00'                    FIRST LOAD
RELEASE  DC    C'R0'                    RELEASE MODULE
STRTERM  DC    C'V4'                    START TERMINAL MODULE
ZAPAREA  DC    50X'FF'                  PATCH AREA             @Y17XART
         ORG   IGCV610D+1024            PATCH AREA
         EJECT
         TAVTD
         EJECT
         TTCXD SVS
         EJECT
         DCBD  DSORG=TX
         EJECT
         TDEBD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TQCBD
         EJECT
         TLCBD
         EJECT
         TTNTD
         EJECT
         TSCBD
         EJECT
         TPRFD
         EJECT
         TTRMD
         EJECT
         END
