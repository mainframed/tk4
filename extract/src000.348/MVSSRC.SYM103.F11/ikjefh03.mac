         TITLE 'IKJEFH03 HELP READ ROUTINE                           '
IKJEFH03 CSECT ,                                                   0001
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
         MVC   DYNLFORM(DYNLLNTH),INLRDECB
*                                   /* MOVE L FORM OF DECB INTO    0028
*                                      DYNAMIC STORAGE */          0028
*        PARMPTR=ADDR(COMMON);      /* SET ADDRESS OF PARAMETER BLOCK
*                                      */                          0028
         L     PARMPTR,@PC00001                                    0028
*        REG2=READCBP;              /* SET ADDRESS OF DCB */       0029
         L     REG2,READCBP(,PARMPTR)                              0029
*        GENERATE;                                                 0030
         USING IHADCB,REG2
*        DCBSYN=ADDR(SYNADRTN);     /* SET POINTER TO SYNAD ROUTINE
*                                      IN DCB */                   0031
         LA    @10,SYNADRTN                                        0031
         ST    @10,@TF00001                                        0031
         MVC   DCBSYN(3),@TF00001+1                                0031
*        DCBEOFP=ADDR(EODRT);       /* SET POINTER TO END OF DATA  0032
*                                      ROUTINE IN DCB */           0032
*                                                                  0032
         LA    @10,EODRT                                           0032
         ST    @10,@TF00001                                        0032
         MVC   DCBEOFP(3),@TF00001+1                               0032
*        /************************************************************/
*        /*                                                          */
*        /*  DONE FIRST TIME ROUTINE IS CALLED                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0033
*        IF SWREAD='0'B THEN                                       0033
         TM    SWREAD(PARMPTR),B'01000000'                         0033
         BNZ   @RF00033                                            0033
*                                   /* FIRST TIME ROUTINE ENTERED */
*          DO;                                                     0034
*            SWREAD='1'B;           /* INDICATE THE ROUTINE HAS BEEN
*                                      CALLED AT LEAST ONE TIME */ 0035
         OI    SWREAD(PARMPTR),B'01000000'                         0035
*            GO TO READBLK;         /* SKIP TO READ NEXT BLOCK */  0036
         B     READBLK                                             0036
*          END;                                                    0037
*                                                                  0037
*        /************************************************************/
*        /*                                                          */
*        /*  DONE EVERY TIME ROUTINE IS ENTERED BUT FIRST            */
*        /*                                                          */
*        /************************************************************/
*                                                                  0038
*        TOTALEX=TOTALEX+80;        /* DETERMINE THE TOTAL NUMBER OF
*                                      BYTES ALREADY EXAMINED BY THE
*                                      CALLING ROUTINE */          0038
@RF00033 LA    @10,80                                              0038
         LH    @04,TOTALEX(,PARMPTR)                               0038
         AR    @04,@10                                             0038
         STH   @04,TOTALEX(,PARMPTR)                               0038
*        DATAREAP=DATAREAP+80;      /* POINT TO THE NEXT 80 BYTE AREA
*                                      */                          0039
*                                                                  0039
         A     @10,DATAREAP(,PARMPTR)                              0039
         ST    @10,DATAREAP(,PARMPTR)                              0039
*        /************************************************************/
*        /*                                                          */
*        /*  READ A BLOCK OF THE HELP DATA SET                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0040
*        IF TOTALEX=DCBBLKS-CSWBYTCT THEN                          0040
         LH    @03,DCBBLKS                                         0040
         L     @15,DCBIOBP                                         0040
         SH    @03,CSWBYTCT(,@15)                                  0040
         CR    @04,@03                                             0040
         BNE   @RF00040                                            0040
*                                   /* COMPARE THE TOTAL NUMBER OF 0041
*                                      BYTES ALREADY EXAMINED TO THE
*                                      NUMBER OF BYTES READ */     0041
*          DO;                      /* IF EQUAL READ ANOTHER BLOCK */
*            DATAREAP=DATAREAP-TOTALEX;                            0042
         SR    @10,@04                                             0042
         ST    @10,DATAREAP(,PARMPTR)                              0042
*                                   /* RESET THE POINTER TO THE    0043
*                                      BEGINNING OF THE AREA THE   0043
*                                      BLOCK IS TO BE READ INTO */ 0043
*                                                                  0043
*    READBLK:                                                      0043
*            TOTALEX=0;             /* INITIALIZE THE TOTAL AREA   0043
*                                      EXAMINED BY THE CALLER */   0043
READBLK  SR    @10,@10                                             0043
         STH   @10,TOTALEX(,PARMPTR)                               0043
*            RFY REG3 RSTD;    /* REGISTER FOR READ Y02668*/       0044
*            REG3=DATAREAP;         /* ADDRESS OF AREA BLOCK IS READ
*                                      INTO */                     0045
         L     REG3,DATAREAP(,PARMPTR)                             0045
*        GENERATE;                                                 0046
         READ  READDECB,SF,(REG2),(REG3),'S',MF=E  READ 1 BLOCK
         CHECK READDECB                CHECK READ SUCCESSFUL
*            RFY REG3 UNRSTD;    /* REGISTER FOR READ Y02668*/     0047
*          END;                                                    0048
*                                                                  0048
*                                                                  0048
*        /************************************************************/
*        /*                                                          */
*        /* READ SUCCESSFUL OR UNNECESSARY THEN GO TO RETURN         */
*        /*                                                          */
*        /************************************************************/
*                                                                  0049
*                                                                  0049
*        GO TO RT;                                                 0049
*                                                                  0049
*                                                                  0049
*                                                                  0049
         B     RT                                                  0049
*    SYNADRTN:                                                     0050
*                                                                  0050
*        /************************************************************/
*        /*                                                          */
*        /*  SYNAD ROUTINE                                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0050
*        GEN(SYNADAF ACSMETH=BSAM); /* SYNAD MACRO */              0050
SYNADRTN SYNADAF ACSMETH=BSAM
*        SAVEMSG=SYNADTXT;          /* SAVE TEST FROM THE SYNAD    0051
*                                      MESSAGE */                  0051
         MVC   SAVEMSG(52),SYNADTXT(REG1)                          0051
*        GEN(SYNADRLS);             /* SYNAD RELEASE MACRO */      0052
*                                                                  0052
         SYNADRLS
*        /************************************************************/
*        /*                                                          */
*        /*  INPUT TO MESSAGE ROUTINE                                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0053
*        MTNOIDSW='0'B;             /* NO MSG ID TO STRIP  Y02668*/
*        MTPUTLSW='1'B;        /* PUTLINE WANTED     Y02668*/      0054
         L     @10,MSGPTR(,PARMPTR)                                0054
         OI    MTPUTLSW(@10),B'01000000'                           0054
         NI    MTNOIDSW(@10),B'01111111'                           0054
*        MT2OLDSW='1'B;        /* SET SWITCHES TO REVERSE ORDER    0055
*                                      OF MESSAGES Y02668*/        0055
         OI    MT2OLDSW(@10),B'10000000'                           0055
*        SWERRMSG='1'B;             /* INDICATE AN ERROR MESSAGE HAS
*                                      BEEN PUT OUT */             0056
         OI    SWERRMSG(PARMPTR),B'00000001'                       0056
*        MSGID='300D';              /* SET MESSAGE IDENTIFICATION  0057
*                                      NUMBER */                   0057
         MVC   MSGID(4,@10),@CC00154                               0057
*        VAR1=ADDR(SAVEMSG);   /* ADDRESS OF SYNAD TEXT Y02668*/   0058
         LA    @04,SAVEMSG                                         0058
         ST    @04,@TF00001                                        0058
         MVC   VAR1(3,@10),@TF00001+1                              0058
*        L1='00110100'B;        /* LENGTH OF SYNAD TEXT Y02668*/   0059
         MVI   L1(@10),X'34'                                       0059
*         REG1 = ADDR(MSGTABLE);                 /* Y02668*/       0060
         LR    REG1,@10                                            0060
*        CALL IKJEFF02;                                            0061
         L     @15,@CV00156                                        0061
         BALR  @14,@15                                             0061
*                                   /* CALL MESSAGE ROUTINE Y02668*/
*        GO TO RT;                  /* RETURN */                   0062
*                                                                  0062
*                                                                  0062
*                                                                  0062
*                                                                  0062
         B     RT                                                  0062
*    EODRT:                                                        0063
*                                                                  0063
*        /************************************************************/
*        /*                                                          */
*        /* END OF DATA ROUTINE                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0063
*        SWEOD='1'B;                /* INDICATE END OF DATA FOUND */
*                                                                  0063
*                                                                  0063
*                                                                  0063
EODRT    OI    SWEOD(PARMPTR),B'00001000'                          0063
*    RT:                                                           0064
*                                                                  0064
*        /************************************************************/
*        /*                                                          */
*        /*  RETURN TO CALLER                                        */
*        /*                                                          */
*        /************************************************************/
*        RETURN;                                                   0064
@EL00001 L     @13,4(,@13)                                         0064
@EF00001 L     @00,@SIZDATD                                        0064
         LR    @01,@11                                             0064
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0064
         BR    @14                                                 0064
*        GENERATE;                                                 0065
INLRDECB READ  INLNDECB,SF,,,'S',MF=L
         DS    60C                 FOR MAINTANENCE
*/*IKJEFH03: CHART */                                              0066
*/*%START: E START */                                              0066
*/* D (NO,,YES,%INIT) FIRST BLOCK READ? */                         0066
*/* P ADD 80 TO INDEX THROUGH BLOCK */                             0066
*/* P SET ADDRESS OF CARD IMAGE */                                 0066
*/* D (YES,,NO,%RET) AT END OF BLOCK? */                           0066
*/* P INITIALIZE ADDRESS OF CARD IMAGE */                          0066
*/*%INIT: P INITIALIZE INDEX THROUGH BLOCK */                      0066
*/* I (EOD,%EOD,SYND,%ERR,NORM,%RET) READ ONE BLOCK */             0066
*/*%EOD: P (,%RET) INDICATE EOD OCCURRED */                        0066
*/*%ERR: P SET UP ERROR MSG */                                     0066
*/* S IKJEFF02:PUT OUT ERROR MSG */                                0066
*/*%RET: R RETURN */                                               0066
*/*IKJEFH03: END */                                                0066
*        END IKJEFH03                                              0066
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                        *
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        *
*;                                                                 0066
         B     @EL00001                                            0066
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SAV001  EQU   @SA00001
@TF00001 DS    F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IKJEFH03 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
SAVEMSG  DS    CL52
IKJEFH03 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
@CV00156 DC    V(IKJEFF02)
         DS    0D
@CC00154 DC    C'300D'
@DATD    DSECT
DYNLFORM EQU   *
DYNRDECB READ  READDECB,SF,,,'S',MF=L
DYNLLNTH EQU   *-DYNLFORM
         DCBD  DSORG=(PO),DEVD=(DA)
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
@DATEND  EQU   *
IKJEFH03 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
PARMPTR  EQU   @05
REG1     EQU   @01
REG2     EQU   @02
REG3     EQU   @03
SAVPARM  EQU   0
CPPLPTR  EQU   SAVPARM
SWITCHES EQU   SAVPARM+4
SWERRMSG EQU   SWITCHES
SWREAD   EQU   SWITCHES+1
SWEOD    EQU   SWITCHES+1
DATAREAP EQU   SAVPARM+8
READCBP  EQU   SAVPARM+12
MSGPTR   EQU   SAVPARM+16
TOTALEX  EQU   SAVPARM+24
MSGTABLE EQU   0
TMCTPTR  EQU   MSGTABLE+4
ECBPTR   EQU   MSGTABLE+8
@NM00001 EQU   MSGTABLE+12
SW       EQU   MSGTABLE+20
MTNOIDSW EQU   SW
MTPUTLSW EQU   SW
RETMSG   EQU   MSGTABLE+21
SW2      EQU   MSGTABLE+24
MT2OLDSW EQU   SW2
MSGID    EQU   MSGTABLE+40
MTINSRTS EQU   MSGTABLE+44
L1       EQU   MTINSRTS
VAR1     EQU   MTINSRTS+1
L2       EQU   MTINSRTS+4
L3       EQU   MTINSRTS+8
L4       EQU   MTINSRTS+12
RET      EQU   0
CPPL     EQU   0
CSWBYTCT EQU   22
SYNADMSG EQU   0
SYNADTXT EQU   SYNADMSG+68
MSGECB   EQU   0
MSGTMCT  EQU   0
COMMON   EQU   0
@NM00007 EQU   DCBEODAD
DCBEOFP  EQU   @NM00007+1
@NM00009 EQU   DCBSYNAD
DCBSYN   EQU   @NM00009+1
DCBBLKS  EQU   DCBBLKSI
DCBIOBP  EQU   DCBIOBA
*                                      START UNREFERENCED COMPONENTS
@NM00010 EQU   @NM00009
@NM00008 EQU   @NM00007
@NM00011 EQU   SYNADMSG
CPPLECT  EQU   CPPL+12
CPPLPSCB EQU   CPPL+8
CPPLUPT  EQU   CPPL+4
CPPLCBUF EQU   CPPL
RETCHAR  EQU   RET+2
RETSIZE  EQU   RET
MSGRTN   EQU   MSGTABLE+60
VAR4     EQU   MTINSRTS+13
HIGHL4   EQU   L4
VAR3     EQU   MTINSRTS+9
HIGHL3   EQU   L3
VAR2     EQU   MTINSRTS+5
HIGHL2   EQU   L2
HIGHL1   EQU   L1
@NM00006 EQU   MSGTABLE+36
@NM00005 EQU   MSGTABLE+32
MTOLDPTR EQU   MSGTABLE+28
@NM00004 EQU   MSGTABLE+25
@NM00003 EQU   SW2
@NM00002 EQU   SW
MTJOBISW EQU   SW
MTKEY1SW EQU   SW
MTHEXSW  EQU   SW
MTWTOSW  EQU   SW
MSGCSECT EQU   MSGTABLE+16
MTHIGH   EQU   @NM00001
MTCPPL   EQU   TMCTPTR
LISTPTR  EQU   MSGTABLE
COMECB   EQU   SAVPARM+20
SWBLK    EQU   SWITCHES+1
SWFIRST  EQU   SWITCHES+1
SWMOVOR  EQU   SWITCHES+1
SWMSGLOP EQU   SWITCHES+1
SWKEY    EQU   SWITCHES+1
SWFOUND  EQU   SWITCHES+1
SWSUBSER EQU   SWITCHES
SWPRINT  EQU   SWITCHES
SWPARSE  EQU   SWITCHES
SWSUBCOM EQU   SWITCHES
SWCOMAND EQU   SWITCHES
SWPARS   EQU   SWITCHES
SWCLOSE  EQU   SWITCHES
*                                      END UNREFERENCED COMPONENTS
RT       EQU   @EL00001
@RF00040 EQU   RT
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IKJEFH03
