         TITLE 'IKJEFF50 - STATUS INITIALIZATION ROUTINE               *
                        '
IKJEFF50 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFF50  74.008'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
DUMMYLBL DS    0H                                                  0003
*                                                                    */
*                                                                  0069
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE LOCAL POINTERS AND SWITCHES                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0069
*   SWITCHES=0;                     /* CLEAR THE SWITCH TABLE        */
         SLR   @10,@10                                             0069
         STC   @10,SWITCHES                                        0069
*   SAVELIST=0;                     /* CLEAR STORAGE AREA            */
         SLR   @04,@04                                             0070
         LR    SAVELIST,@04                                        0070
*   FIBCMPTR=ADDR(FIBPARML);        /* USE LOCAL PTR TO FIBCPARM FOR
*                                      EFFICIENCY                    */
*                                                                  0071
         L     FIBCMPTR,@PC00001                                   0071
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE MESSAGE TABLE INTERFACE HERE -- SO THAT IF     */
*   /* THERE IS AN ERROR FROM PARSE THE MESSAGE TABLE WILL ALREADY BE*/
*   /* INITIALIZED. ALSO SERVES AS INTERFACE FOR THE REST OF THE     */
*   /* STATUS PACKAGE                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0072
*   MSGTABLE=MSGTABLE&&MSGTABLE;    /* CLEAR THE MESSAGE AREA        */
         XC    MSGTABLE(64),MSGTABLE                               0072
*   CPECB=0;                        /* ZERO COMMUNICATIONS ECB       */
         ST    @04,CPECB                                           0073
*   LISTPTR=ADDR(MSGCSECT);         /* PICK UP ADDR OF PTR TO MESSAGE
*                                      CSECT                         */
         LA    @07,MSGCSECT                                        0074
         ST    @07,LISTPTR                                         0074
*   ECBPTR=ADDR(CPECB);             /* PICK UP ADDR OF COMMUNICATIONS
*                                      ECB                           */
         LA    @07,CPECB                                           0075
         ST    @07,ECBPTR                                          0075
*   MSGCSECT=ADDR(IKJEFF55);        /* ADDR OF MESSAGES              */
         L     @07,@CV00064                                        0076
         ST    @07,MSGCSECT                                        0076
*   MSGPTR=ADDR(MSGTABLE);          /* SAVE ADDR OF PARMLIST TO MSG
*                                      ROUTINE                       */
         LA    @07,MSGTABLE                                        0077
         ST    @07,MSGPTR                                          0077
*   MSGRTNPT=ADDR(IKJEFF02);        /* PICK UP ADDR OF IKJEFF02 FOR
*                                      CANCEL/STATUS PARMLIST        */
         L     @07,@CV00063                                        0078
         ST    @07,MSGRTNPT                                        0078
*   MTCPPL=ADDR(FIBCPPLC);          /* PICK UP PTR TO CPPL           */
         LA    @07,FIBCPPLC(,FIBCMPTR)                             0079
         ST    @07,MTCPPL                                          0079
*   MTPUTLSW='1'B;                  /* INDICATE WANT PUTLINE-NO    0080
*                                      STATUS MESSAGES USE PROMPTING
*                                      OTHER THAN IKJ56208A IN     0080
*                                      IKJEFF51                      */
         OI    MTPUTLSW,B'01000000'                                0080
*   MTHIGH='1'B;                    /* FOR STANDARD LINKAGE          */
         OI    MTHIGH,B'10000000'                                  0081
*   SWITCHES=SWITCHES&&SWITCHES;    /* ZERO SWITCHES                 */
         LR    @07,@10                                             0082
         XR    @07,@10                                             0082
         STC   @07,SWITCHES                                        0082
*   IF FIBECTNO^='1'B THEN          /* IF STATUS CMND WITH OPERANDS  */
         TM    FIBECTNO(FIBCMPTR),B'10000000'                      0083
         BO    @RF00083                                            0083
*STATOP:                                                           0084
*     DO;                           /* CHECK TO SEE IF STATUS WAS  0084
*                                      ENTERED WITH NO OPERANDS==IF
*                                      YES THEN BRANCH TO BUILD AN 0084
*                                      AUTOMATIC LIST==IF NO THEN  0084
*                                      FALL THROUGH                  */
STATOP   DS    0H                                                  0085
*       STATUSSW='1'B;              /* TURN ON STATUS SWITCH IN-   0085
*                                      DICATING THE COMMAND STATUS 0085
*                                      WAS ENTERED                 0085
*                                                                    */
         OI    STATUSSW,B'01000000'                                0085
*                                                                  0086
*       /*************************************************************/
*       /*                                                           */
*       /* STATUS COMMAND WITH OPERAND -- INITIALIZE THE PARSE       */
*       /* INTERFACE TABLE                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0086
*       PPLPTR=ADDR(PPLLN);         /* GET PPL SOME STORAGE          */
         LA    PPLPTR,PPLLN                                        0086
*       PPLPCL=ADDR(IKJEFF5A);      /* PICK UP PCL FOR PARSE         */
         L     @10,@CV00065                                        0087
         ST    @10,PPLPCL(,PPLPTR)                                 0087
*       PPLUPT=FIBCPPLU;            /* PICK UP UPT ADDRESS           */
         L     @10,FIBCPPLU(,FIBCMPTR)                             0088
         ST    @10,PPLUPT(,PPLPTR)                                 0088
*       PPLECT=FIBCPPLE;            /* PICK UP ECT ADDRESS           */
         L     @10,FIBCPPLE(,FIBCMPTR)                             0089
         ST    @10,PPLECT(,PPLPTR)                                 0089
*       PPLECB=ADDR(CPECB);         /* PTR TO COMMUNICATIONS ECB     */
         LA    @10,CPECB                                           0090
         ST    @10,PPLECB(,PPLPTR)                                 0090
*       PERMPDLP=0;                 /* INIT PTR TO PDE TO ZERO       */
         SLR   @10,@10                                             0091
         ST    @10,PERMPDLP                                        0091
*       PPLANS=ADDR(PERMPDLP);      /* WITHIN THIS AREA PARSE WILL 0092
*                                      PLACE A PTR TO PDL            */
         LA    @07,PERMPDLP                                        0092
         ST    @07,PPLANS(,PPLPTR)                                 0092
*       PPLCBUF=FIBCPPLC;           /* POINT TO INPUT COMMAND BUFFER */
         L     @07,FIBCPPLC(,FIBCMPTR)                             0093
         ST    @07,PPLCBUF(,PPLPTR)                                0093
*       PPLUWA=0;                   /* INITIALIZE PARSE WORK AREA    */
*                                                                  0094
         ST    @10,PPLUWA(,PPLPTR)                                 0094
*       /*************************************************************/
*       /*                                                           */
*       /* CALL PARSE TO SYNTAX CHECK THE COMMAND BUFFER             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0095
*SETKEY0:                                                          0095
*       GEN(MODESET EXTKEY=SUPR,RELATED=(KEY0,IKJEFF50(SETKEY1)));/*
*                                      SEE SUBPOOL NOTES             */
SETKEY0  MODESET EXTKEY=SUPR,RELATED=(KEY0,IKJEFF50(SETKEY1))
*       RFY                                                        0096
*        (R1,                                                      0096
*         R15) RSTD;                                               0096
*       R1=PPLPTR;                  /* PTR TO PARSE PARAM LIST       */
         LR    R1,PPLPTR                                           0097
*       DO;                         /* CALLTSSR EP(IKJPARS)          */
*         RESPECIFY                                                0099
*           GPR01P RSTD;                                           0099
*         IF CVTPARS=0 THEN                                        0100
         L     @14,CVTPTR                                          0100
         L     @14,CVTPARS(,@14)                                   0100
         LTR   @14,@14                                             0100
         BNZ   @RF00100                                            0100
*           GEN(LINK EP=IKJPARS);                                  0101
         LINK EP=IKJPARS
*         ELSE                                                     0102
*           CALL CVTPARS;                                          0102
         B     @RC00100                                            0102
@RF00100 L     @10,CVTPTR                                          0102
         L     @15,CVTPARS(,@10)                                   0102
         BALR  @14,@15                                             0102
*         RESPECIFY                                                0103
*           GPR01P UNRSTD;                                         0103
@RC00100 DS    0H                                                  0104
*       END;                                                       0104
*       RETCODE=R15;                /* SAVE PARSE R.C.               */
         ST    R15,RETCODE                                         0105
*       RFY                                                        0106
*        (R1,                                                      0106
*         R15) UNRSTD;                                             0106
*SETKEY1:                                                          0107
*       GEN(MODESET EXTKEY=SCHED,RELATED=(KEY1,IKJEFF50(SETKEY0)));/*
*                                      SEE SUBPOOL NOTES             */
SETKEY1  MODESET EXTKEY=SCHED,RELATED=(KEY1,IKJEFF50(SETKEY0))
*       MTKEY1SW='1'B;              /* INDICATE IN KEY 1 (SCHEDULER)
*                                      - SEE SUBPOOL NOTES           */
*                                                                  0108
         OI    MTKEY1SW,B'00001000'                                0108
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK PARSE'S RETURN CODE - IF O.K. GET CORE FOR JOBLIST  */
*       /* TABLE                                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0109
*       IF RETCODE=PARSER0 THEN                                    0109
         L     @10,RETCODE                                         0109
         LTR   @10,@10                                             0109
         BNZ   @RF00109                                            0109
*PARSRET:                                                          0110
*         DO;                       /* IF NO ERROR FROM PARSE CONT 0110
*                                      PROCESSING                    */
PARSRET  DS    0H                                                  0111
*           TBLCOUNT=1;             /* INIT COUNT OF PDES TO ONE     */
         MVC   TBLCOUNT(4),@CF00037                                0111
*           PDEPTR=PERMPDLP+HEADER; /* PICK UP PTR TO FIRST PDE      */
         L     PDEPTR,PERMPDLP                                     0112
         AL    PDEPTR,HEADER                                       0112
*           DO WHILE CHAINPTR^=0;   /* FIND OUT HOW MANY PDES ARE  0113
*                                      PRESENT SO THAT WILL HAVE THE
*                                      NUMBER OF JOBS TO GET CORE FOR*/
         B     @DE00113                                            0113
@DL00113 DS    0H                                                  0114
*             IF PRESENT='1'B THEN  /* IF JOBID PRESNT COUNT IT TOO  */
         TM    PRESENT(PDEPTR),B'10000000'                         0114
         BNO   @RF00114                                            0114
*               TBLCOUNT=TBLCOUNT+1;                               0115
         LA    @10,1                                               0115
         AL    @10,TBLCOUNT                                        0115
         ST    @10,TBLCOUNT                                        0115
*             PDEPTR=LAST;          /* IF THIS IS NOT THE LAST PDE 0116
*                                      THEN POINT TO THE NEXT PDE IN
*                                      LIST                          */
@RF00114 L     PDEPTR,LAST(,PDEPTR)                                0116
*             TBLCOUNT=TBLCOUNT+1;  /* UPDATE COUNT OF PDES          */
         LA    @10,1                                               0117
         AL    @10,TBLCOUNT                                        0117
         ST    @10,TBLCOUNT                                        0117
*           END;                                                   0118
@DE00113 ICM   @10,7,CHAINPTR(PDEPTR)                              0118
         BNZ   @DL00113                                            0118
*           IF PRESENT='1'B THEN    /* IF LAST PDE CONTAINED A JOBID
*                                      WILL NOT BE ABLE TO TELL IT SO
*                                      UPDATE PDECOUNT IF ONE PRESENT*/
         TM    PRESENT(PDEPTR),B'10000000'                         0119
         BNO   @RF00119                                            0119
*             TBLCOUNT=TBLCOUNT+1;                                 0120
         LA    @10,1                                               0120
         AL    @10,TBLCOUNT                                        0120
         ST    @10,TBLCOUNT                                        0120
*           RFY                                                    0121
*            (R0,                                                  0121
*             R1) RSTD;                                            0121
@RF00119 DS    0H                                                  0122
*           R0=TBLCOUNT*LEN;        /* NOW KNOW HOW MANY NAMES & IDS
*                                      WERE ENTERED SO MULTIPLY BY 0122
*                                      NINE IN ORDER TO GET STOR- AGE
*                                      FOR JOBNAMES(JOBIDS)          */
         L     @09,TBLCOUNT                                        0122
         M     @08,LEN                                             0122
         LR    R0,@09                                              0122
*           SAVECTR=R0;             /* SAVE AMT OF CORE FOR LATER  0123
*                                      FREEMAIN                      */
         STH   R0,SAVECTR                                          0123
*           GEN(GETMAIN R,LV=(0));  /* GET THE CORE                  */
         GETMAIN R,LV=(0)
*           JOBLISTP=R1;            /* PLACE PTR TO CORE IN JOB LIST
*                                      PTR                           */
         ST    R1,JOBLISTP                                         0125
*           SAVELIST=R1;            /* SAVE THE ADDR OF THE TOP OF 0126
*                                      THE JOB NAME LIST             */
         LR    SAVELIST,R1                                         0126
*           RFY                                                    0127
*            (R0,                                                  0127
*             R1) UNRSTD;                                          0127
*           PDEPTR=PERMPDLP+HEADER; /* RESET PDE PTR TO PT TO BE-  0128
*                                      GINNING OF PDE CHAIN          */
*                                                                  0128
         L     PDEPTR,PERMPDLP                                     0128
         AL    PDEPTR,HEADER                                       0128
*           /*********************************************************/
*           /*                                                       */
*           /* THE FOLLOWING CODE PLACES THE JOBNAME BEING POINTED TO*/
*           /* FROM THE PDE INTO A JOB LIST TABLE                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0129
*           DO K=1 TO TBLCOUNT;     /* INITIALIZE TABLE              */
         LA    K,1                                                 0129
         B     @DE00129                                            0129
@DL00129 DS    0H                                                  0130
*             JOBNMID(K)=JOBNAME(1:NAMELEN);                       0130
         L     @10,JOBLISTP                                        0130
         LA    @07,9                                               0130
         LR    @01,K                                               0130
         MR    @00,@07                                             0130
         ST    @01,@TF00001                                        0130
         ALR   @01,@10                                             0130
         AL    @01,@CF00878                                        0130
         MVI   JOBNMID(@01),C' '                                   0130
         MVC   JOBNMID+1(6,@01),JOBNMID(@01)                       0130
         LH    @04,NAMELEN(,PDEPTR)                                0130
         BCTR  @04,0                                               0130
         L     @15,JOBNAMEP(,PDEPTR)                               0130
         EX    @04,@SM00879                                        0130
*             LEN1(K)='00'X;        /* INITIALLY ZERO SW BIT         */
         LR    @04,@10                                             0131
         AL    @04,@TF00001                                        0131
         AL    @04,@CF00881                                        0131
         MVI   LEN1(@04),X'00'                                     0131
*             IF PRESENT='1'B THEN  /* IF A JOBID WAS ENTERED CONT   */
         TM    PRESENT(PDEPTR),B'10000000'                         0132
         BNO   @RF00132                                            0132
*               DO;                                                0133
*                 LEN1(K)=IDJOBID;  /* SW INDCATR THAT JOBID IS NEXT
*                                      IN LIST                       */
         LR    @04,@10                                             0134
         AL    @04,@TF00001                                        0134
         AL    @04,@CF00881                                        0134
         MVI   LEN1(@04),X'44'                                     0134
*                 JOBNMID(K+1)=JOBID(1:JOBIDLN);/* PICK UP JOBID     */
         LR    @04,@10                                             0135
         AL    @04,@TF00001                                        0135
         MVI   JOBNMID+1(@04),C' '                                 0135
         MVC   JOBNMID+2(6,@04),JOBNMID+1(@04)                     0135
         LH    @15,JOBIDLN(,PDEPTR)                                0135
         BCTR  @15,0                                               0135
         L     @01,JOBIDP(,PDEPTR)                                 0135
         EX    @15,@SM00882                                        0135
*                 K=K+1;                                           0136
         AH    K,@CH00037                                          0136
*                 LEN1(K)=IDJOBNM;                                 0137
         LR    @01,@07                                             0137
         MR    @00,K                                               0137
         ALR   @10,@01                                             0137
         AL    @10,@CF00881                                        0137
         MVI   LEN1(@10),X'00'                                     0137
*               END;                                               0138
*             PDEPTR=CHAINPTR;      /* UPDATE PDEPTR TO NEXT PDE     */
@RF00132 SLR   @10,@10                                             0139
         ICM   @10,7,CHAINPTR(PDEPTR)                              0139
         LR    PDEPTR,@10                                          0139
*           END;                                                   0140
         AH    K,@CH00037                                          0140
@DE00129 C     K,TBLCOUNT                                          0140
         BNH   @DL00129                                            0140
*           LEN1(TBLCOUNT)=IDLASTJB;/* INDICATE END OF LIST          */
         L     @10,TBLCOUNT                                        0141
         MH    @10,@CH00754                                        0141
         L     @07,JOBLISTP                                        0141
         ALR   @07,@10                                             0141
         AL    @07,@CF00881                                        0141
         MVI   LEN1(@07),X'80'                                     0141
*           GEN(IKJRLSA PERMPDLP);  /* FREE THE PDE CHAIN            */
         IKJRLSA PERMPDLP
*         END PARSRET;                                             0143
*                                                                  0144
*       /*************************************************************/
*       /*                                                           */
*       /* ERROR FROM PARSE                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0144
*       ELSE                                                       0144
*         DO;                                                      0144
         B     @RC00109                                            0144
@RF00109 DS    0H                                                  0145
*           QUIT=ON;                /* ERROR FROM PARSE SO TURN ON 0145
*                                      QUIT BIT                      */
*                                                                  0145
         OI    QUIT,B'00001000'                                    0145
*           /*********************************************************/
*           /*                                                       */
*           /* CALL IKJEFF19 (GENLFAIL) TO ISSUE PARSE ERROR MESSAGE */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0146
*           GFPARMS=GFPARMS&&GFPARMS;/* ZERO OUT PARAMETER LIST      */
         XC    GFPARMS(44),GFPARMS                                 0146
*           GFCALLID=GFPARSE;       /* NO MSGS PUT OUT FOR PARSE   0147
*                                      RETURN CODES 4 AND 20, R.C.4 =
*                                      PARSE UNABLE TO PROMPT USER 0147
*                                      (ISSUES MESSAGE), R.C.20 =  0147
*                                      VALIDITY CHECK EXIT TERMINATED
*                                      (N/A)                         */
         MVC   GFCALLID(2),@CH00744                                0147
*           GFRCODE=RETCODE;        /* NEED REGISTER 15 CODE FROM  0148
*                                      PARSE                         */
         L     @10,RETCODE                                         0148
         ST    @10,GFRCODE                                         0148
*           GFKEYN08=ON;            /* TELL IKJEFF19 TO ISSUE MESSAGE
*                                      IN KEY 0                      */
         OI    GFKEYN08,B'10000000'                                0149
*           GF02PTR=MSGRTNPT;       /* POINT TO IKJEFF02, SINCE    0150
*                                      ALREADY LOADED                */
         L     @10,MSGRTNPT                                        0150
         ST    @10,GF02PTR                                         0150
*           GFCPPLP=MTCPPL;         /* CPPL NEEDED WHEN ISSUE PUTLINE*/
         L     @10,MTCPPL                                          0151
         ST    @10,GFCPPLP                                         0151
*           GFECBP=ECBPTR;          /* ECB FOR PUTLINE               */
*                                                                  0152
         L     @10,ECBPTR                                          0152
         ST    @10,GFECBP                                          0152
*           /*********************************************************/
*           /*                                                       */
*           /* CALL GENLFAIL                                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0153
*           RFY                                                    0153
*             R0 RSTD;                                             0153
*           GEN(LOAD EP=IKJEFF19);                                 0154
         LOAD EP=IKJEFF19
*           CALL IKJEFF19(GFPARMS); /* CALL GENLFAIL SERVICE ROUTINE */
         LA    @10,GFPARMS                                         0155
         ST    @10,@AL00001                                        0155
         LR    @15,R0                                              0155
         LA    @01,@AL00001                                        0155
         BALR  @14,@15                                             0155
*           GEN(DELETE EP=IKJEFF19);                               0156
         DELETE EP=IKJEFF19
*           RFY                                                    0157
*             R0 UNRSTD;                                           0157
*           RETCODE=CMDRC12;        /* INDICATE ERROR OCCURRED       */
         MVC   RETCODE(4),@CF00052                                 0158
*         END;                                                     0159
*     END STATOP;                                                  0160
*                                                                  0161
*   /*****************************************************************/
*   /*                                                               */
*   /* STATUS WITH NO OPERANDS -- PUT USERID IN JOBLIST              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0161
*   ELSE                                                           0161
*STATLIST:                          /* LABEL FOR DO/END GROUP        */
*     DO;                                                          0161
         B     @RC00083                                            0161
@RF00083 DS    0H                                                  0161
STATLIST DS    0H                                                  0162
*       STATAUTO='1'B;              /* THE USER ENTERED STATUS WITH
*                                      NO OPERANDS SO TURN ON THE  0162
*                                      'CREATE AN AUTOMATIC LIST' BIT*/
         OI    STATAUTO,B'00100000'                                0162
*       MTKEY1SW='1'B;              /* INDICATE IN KEY 1 (SCHEDULER)
*                                      - SEE SUBPOOL NOTES           */
         OI    MTKEY1SW,B'00001000'                                0163
*       RFY                                                        0164
*        (R0,                                                      0164
*         R1) RSTD;                                                0164
*       R0=AUTOCTR*LEN;             /* DETERMINE AMT OF CORE TO GET  */
         L     @03,AUTOCTR                                         0165
         M     @02,LEN                                             0165
         LR    R0,@03                                              0165
*       SAVECTR=R0;                 /* SAVE AMT OF CORE FOR LATER  0166
*                                      FREEMAIN                      */
         STH   R0,SAVECTR                                          0166
*       GEN(GETMAIN R,LV=(0));      /* GETMAIN THE NECESSARY AMOUNT
*                                      OF CORE                       */
         GETMAIN R,LV=(0)
*       JOBLISTP=R1;                /* PLACE THE POINTER TO THE CORE
*                                      IN THE JOBNAMELIST FIELD      */
         ST    R1,JOBLISTP                                         0168
*       SAVELIST=R1;                /* SAVE THE POINTER TO THE HEAD
*                                      OF THE JOB NAME LIST          */
         LR    SAVELIST,R1                                         0169
*       RFY                                                        0170
*        (R0,                                                      0170
*         R1) UNRSTD;                                              0170
*       TBLCOUNT=AUTOCTR;           /* SET THE COUNT TO INDICATE A 0171
*                                      TABLE OF 1 ENTRY WAS BUILT    */
         L     @10,AUTOCTR                                         0171
         ST    @10,TBLCOUNT                                        0171
*       LEN1(TBLCOUNT)=FIBPSCBL;    /* INDICATE LENGTH OF USERID     */
         L     @07,JOBLISTP                                        0172
         MH    @10,@CH00754                                        0172
         SLR   @04,@04                                             0172
         IC    @04,FIBPSCBL(,FIBCMPTR)                             0172
         LA    @01,0(@10,@07)                                      0172
         AL    @01,@CF00881                                        0172
         STC   @04,LEN1(,@01)                                      0172
*       JOBNMID(TBLCOUNT)=FIBPSCBU(1:FIBPSCBL);/* SAVE USERID IN JOB
*                                      LIST - IF STATAUTO IS ON    0173
*                                      IKJEFF52 WILL PASS THE USERID
*                                      TO THE JOB ENTRY SUBSYSTEM, 0173
*                                      WHICH WILL RETURN STATUS FOR
*                                      JOBNAMES = USERID + 1 CHAR    */
         ALR   @07,@10                                             0173
         AL    @07,@CF00878                                        0173
         MVI   JOBNMID(@07),C' '                                   0173
         MVC   JOBNMID+1(6,@07),JOBNMID(@07)                       0173
         BCTR  @04,0                                               0173
         EX    @04,@SM00885                                        0173
*     END STATLIST;                 /* END OF BUILD 39-LIST JOB NAME
*                                      SECTION                     0174
*                                                                    */
*   IF QUIT^='1'B THEN              /* IF NO ERRORS HAVE OCCURRED TO
*                                      THIS POINT THEN CONTINUE    0175
*                                      PROCESSING                    */
@RC00083 TM    QUIT,B'00001000'                                    0175
         BO    @RF00175                                            0175
*NOERR:                             /* CALL NEXT MODULE IF NO ERROR
*                                      SO FAR                        */
*     DO;                                                          0176
*                                                                  0176
NOERR    DS    0H                                                  0177
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP PARAMETERS TO PASS INTO IKJEFF51                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0177
*       CSPTR1=ADDR(FIBCPARM);      /* R1 -> CSPTR1 -> FIBCPARM      */
         ST    FIBCMPTR,CSPTR1                                     0177
*       CSPTR2=ADDR(PARMLIST);      /* PASS A POINTER TO           0178
*                                      CANCEL/STATUS PARAMETER LIST,
*                                      ALSO                          */
         LA    @10,PARMLIST                                        0178
         ST    @10,CSPTR2                                          0178
*       CSHIGH='1'B;                /* STANDARD LINKAGE CONVENTION   */
*                                                                  0179
         OI    CSHIGH,B'10000000'                                  0179
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE PARAMETER LIST BEING POINTED TO BY CSPTR2      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0180
*       JOBLISTP=SAVELIST;          /* RESTORE POINTER TO TOP OF JOB
*                                      NAME LIST                     */
         ST    SAVELIST,JOBLISTP                                   0180
*       NUMJOBSP=ADDR(TBLCOUNT);    /* INDICATE NO. OF JOB NAMES TO
*                                      BE PROCESSED                  */
         LA    @10,TBLCOUNT                                        0181
         ST    @10,NUMJOBSP                                        0181
*       SWITPTR=ADDR(SWITCHES);     /* PICK ADDR OF SWITCH TABLE-  0182
*                                      WHICH WILL INDICATE WHAT    0182
*                                      COMMAND WAS ENTERED           */
         LA    @10,SWITCHES                                        0182
         ST    @10,SWITPTR                                         0182
*       PTHIGH='1'B;                /* INDICATE END OF CANCEL/STATUS
*                                      PARMLIST                      */
         OI    PTHIGH,B'10000000'                                  0183
*       RFY                                                        0184
*        (R0,                                                      0184
*         R1,                                                      0184
*         R15) RSTD;                                               0184
*       R1=ADDR(CSPTRS);            /* SET UP REG ONE AS CONVEYOR OF
*                                      PARAMETERS                    */
         LA    R1,CSPTRS                                           0185
*       GENERATE;                                                  0186
*                                    /* LINK TO IKJEFF51 */
            LINK  EP=IKJEFF51        CALL THE COMMAND CHECK RTN CANCEL
*       RETCODE=R15;                /* SAVE RETURN CODE FROM IKJEFF51*/
         ST    R15,RETCODE                                         0187
*     END NOERR;                                                   0188
*                                                                  0189
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAN-UP CODE AFTER ERROR OR RETURN FROM IKJEFF51             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0189
*   IF SAVELIST^=0 THEN             /* IF ANY CORE WAS OBTAINED THEN
*                                      FREE IT                       */
@RF00175 LTR   SAVELIST,SAVELIST                                   0189
         BZ    @RF00189                                            0189
*     DO;                                                          0190
*       R0=SAVECTR;                 /* INDICATE LENGTH OF CORE TO  0191
*                                      FREE                          */
         LH    R0,SAVECTR                                          0191
*       R1=SAVELIST;                /* POINT TO WHERE CORE EXISTS    */
         LR    R1,SAVELIST                                         0192
*       GEN(FREEMAIN R,LV=(0),A=(1));/* FREE THE CORE                */
         FREEMAIN R,LV=(0),A=(1)
*     END;                                                         0194
*   RFY                                                            0195
*    (R0,                                                          0195
*     R1,                                                          0195
*     R15) UNRSTD;                                                 0195
@RF00189 DS    0H                                                  0196
*   RETURN CODE(RETCODE);           /* RETURN WITH APPROPRIATE CODE
*                                                                    */
         L     @10,RETCODE                                         0196
         L     @13,4(,@13)                                         0196
         L     @00,@SIZDATD                                        0196
         LR    @01,@11                                             0196
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0196
         L     @14,12(,@13)                                        0196
         LM    @00,@12,20(@13)                                     0196
         BR    @14                                                 0196
*                                                                  0197
*/****************************************************************** */
*/*                                                                  */
*/*    PCL/PCE MACROS DESCRIBING SYNTAX OF STATUS COMMAND TO PARSE   */
*/*                                                                  */
*/*    - ONE POSITIONAL PARAMETER (JOBNAME OR JOBNAME LIST)          */
*/*        JOBNAME CAN BE IN THE FORM JOBNAME(JOBID) OR JOBNAME ONLY */
*/*    - IF PARSE FINDS A SYNTAX ERROR IT WILL INSERT THE PROMPT=    */
*/*        INFO INTO ITS PROMPT MESSAGE    'ENTER <TEXT> -'          */
*/*    - THE HELP= TEXT IS USED AS A SECOND LEVEL MESSAGE            */
*/*        'ENTER <TEXT>' FOR PARSE PROMPT MESSAGES                  */
*/*    - NOTE: THE PARSE JOBNAME RTN WILL CHECK JOBNAME AND JOBID    */
*/*            FOR ALPHA-NUMERIC, 1ST CHARACTER ALPHA, MAX 8 CHARS.  */
*/*    - NOTE: THE MAXIMUM LENGTH FOR HELP= TEXT IS 255 CHARACTERS   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0197
*   GENERATE;                                                      0197
IKJEFF5A IKJPARM
IKJP1    IKJPOSIT JOBNAME,                                             X
               LIST,                                                   X
               PROMPT='JOBNAME OR JOBNAME(JOBID)',                     X
               HELP='ALPHANUMERIC NAME(S), WITH FIRST CHARACTER ALPHABEX
               TIC AND MAXIMUM OF 8 CHARACTERS.  JOBNAME IS THE NAME ONX
                THE JOB CARD AND JOBID IS THE ID ASSIGNED BY THE JOB ENX
               TRY SUBSYSTEM AT THE TIME THE JOB WAS SUBMITTED.'
         IKJENDP
IKJEFF50 CSECT
*   END IKJEFF50                                                   0198
*                                                                  0198
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJEFFB2)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFGF)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFPT)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                       */
*/*%INCLUDE SYSLIB  (IKJPPL  )                                       */
*                                                                  0198
*       ;                                                          0198
@EL00001 L     @13,4(,@13)                                         0198
@EF00001 L     @00,@SIZDATD                                        0198
         LR    @01,@11                                             0198
         FREEMAIN R,LV=(0),A=(1)
@ER00001 L     @14,12(,@13)                                        0198
         LM    @00,@12,20(@13)                                     0198
         BR    @14                                                 0198
@DATA    DS    0H
@CH00754 DC    H'9'
@CH00744 DC    H'21'
@SM00879 MVC   JOBNMID-1(0,@01),JOBNAME(@15)
@SM00882 MVC   JOBNMID(0,@04),JOBID(@01)
@SM00885 MVC   JOBNMID-1(0,@07),FIBPSCBU(FIBCMPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@AL00001 DS    1A
@TF00001 DS    F
IKJEFF50 CSECT
         DS    0F
@CF00037 DC    F'1'
@CH00037 EQU   @CF00037+2
@CF00052 DC    F'12'
@CF00881 DC    F'-9'
@CF00878 DC    F'-8'
@DATD    DSECT
         DS    0D
RETCODE  DS    A
TBLCOUNT DS    A
PERMPDLP DS    A
CPECB    DS    F
I        DS    A
LOOP     DS    F
REGHOLD  DS    A
SAVECTR  DS    H
SWITCHES DS    AL1
         ORG   SWITCHES
CANCELSW DS    BL1
STATUSSW EQU   SWITCHES+0
STATAUTO EQU   SWITCHES+0
JOBIDSW  EQU   SWITCHES+0
QUIT     EQU   SWITCHES+0
PTPURGSW EQU   SWITCHES+0
@NM00010 EQU   SWITCHES+0
         ORG   SWITCHES+1
         DS    CL1
CSPTRS   DS    CL8
         ORG   CSPTRS
CSPTR1   DS    AL4
CSPTR2   DS    AL4
         ORG   CSPTR2
CSHIGH   DS    BL1
         ORG   CSPTRS+8
GFPARMS  DS    CL44
         ORG   GFPARMS
GFCBPTR  DS    AL4
GFRCODE  DS    FL4
GF02PTR  DS    AL4
GFCALLID DS    FL2
GFBITS   DS    BL1
         ORG   GFBITS
GFKEYN08 DS    BL1
GFSUBSYS EQU   GFBITS+0
GFWTPSW  EQU   GFBITS+0
@NM00006 EQU   GFBITS+0
         ORG   GFPARMS+15
@NM00007 DS    AL1
GFCPPLP  DS    AL4
GFECBP   DS    AL4
GFDSNLEN DS    FL2
GFPGMNL  DS    FL2
GFDSNP   DS    AL4
GFPGMNP  DS    AL4
@NM00008 DS    AL4
@NM00009 DS    AL4
         ORG   GFPARMS+44
PARMLIST DS    CL20
         ORG   PARMLIST
JOBLISTP DS    AL4
NUMJOBSP DS    AL4
SWITPTR  DS    AL4
MSGRTNPT DS    AL4
MSGPTR   DS    AL4
         ORG   MSGPTR
PTHIGH   DS    BL1
         ORG   PARMLIST+20
MSGTABLE DS    CL64
         ORG   MSGTABLE
LISTPTR  DS    AL4
TMCTPTR  DS    AL4
         ORG   TMCTPTR
MTCPPL   DS    AL4
         ORG   MSGTABLE+8
ECBPTR   DS    AL4
@NM00011 DS    AL4
         ORG   @NM00011
MTHIGH   DS    BL1
         ORG   MSGTABLE+16
MSGCSECT DS    AL4
SW       DS    AL1
         ORG   SW
MTNOIDSW DS    BL1
MTPUTLSW EQU   SW+0
MTWTOSW  EQU   SW+0
MTHEXSW  EQU   SW+0
MTKEY1SW EQU   SW+0
MTJOBISW EQU   SW+0
MTWTPSW  EQU   SW+0
MTNHEXSW EQU   SW+0
         ORG   MSGTABLE+21
RETMSG   DS    AL3
SW2      DS    AL1
         ORG   SW2
MT2OLDSW DS    BL1
MTDOMSW  EQU   SW2+0
@NM00012 EQU   SW2+0
         ORG   MSGTABLE+25
@NM00013 DS    AL3
MTOLDPTR DS    AL4
@NM00014 DS    AL4
@NM00015 DS    AL4
MSGID    DS    CL4
MTINSRTS DS    CL16
         ORG   MTINSRTS
L1       DS    AL1
         ORG   L1
HIGHL1   DS    BL1
         ORG   MTINSRTS+1
VAR1     DS    AL3
L2       DS    AL1
         ORG   L2
HIGHL2   DS    BL1
         ORG   MTINSRTS+5
VAR2     DS    AL3
L3       DS    AL1
         ORG   L3
HIGHL3   DS    BL1
         ORG   MTINSRTS+9
VAR3     DS    AL3
L4       DS    AL1
         ORG   L4
HIGHL4   DS    BL1
         ORG   MTINSRTS+13
VAR4     DS    AL3
         ORG   MSGTABLE+60
MSGRTN   DS    AL4
         ORG   MSGTABLE+64
PPLLN    DS    CL28
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFF50 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00063 DC    V(IKJEFF02)
@CV00064 DC    V(IKJEFF55)
@CV00065 DC    V(IKJEFF5A)
         DS    0D
AUTOCTR  DC    A(1)
LEN      DC    F'9'
HEADER   DC    A(8)
PATCH    DS    CL60
         ORG   PATCH
PTCHINIT DC    20CL3'ZAP'
         ORG   PATCH+60
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
K        EQU   @02
SAVELIST EQU   @06
PDEPTR   EQU   @03
PPLPTR   EQU   @04
FIBCMPTR EQU   @05
R0       EQU   @00
R1       EQU   @01
R15      EQU   @15
GPR01P   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
CVTPTR   EQU   16
IKJEFF19 EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTRSV90 EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
FIBCPARM EQU   0
FIBPSCBU EQU   FIBCPARM+4
FIBPSCBL EQU   FIBCPARM+11
FIBCPPLC EQU   FIBCPARM+12
FIBCPPLU EQU   FIBCPARM+16
FIBCPPLE EQU   FIBCPARM+24
FIBFLAGS EQU   FIBCPARM+36
FIBECTNO EQU   FIBFLAGS
JOBLIST  EQU   0
LEN1     EQU   JOBLIST
JOBNMID  EQU   JOBLIST+1
RET      EQU   0
PPL      EQU   0
PPLUPT   EQU   PPL
PPLECT   EQU   PPL+4
PPLECB   EQU   PPL+8
PPLPCL   EQU   PPL+12
PPLANS   EQU   PPL+16
PPLCBUF  EQU   PPL+20
PPLUWA   EQU   PPL+24
PDE      EQU   0
JOBNAMEP EQU   PDE
NAMELEN  EQU   PDE+4
PARSESW  EQU   PDE+6
JOBIDP   EQU   PDE+8
JOBIDLN  EQU   PDE+12
FLAG     EQU   PDE+14
PRESENT  EQU   FLAG
LAST     EQU   PDE+16
CHAINPTR EQU   LAST+1
JOBNAME  EQU   0
JOBID    EQU   0
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
MSGECB   EQU   0
MSGTMCT  EQU   0
FIBPARML EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTPARS  EQU   CVTS01+176
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00018 EQU   LAST
@NM00017 EQU   PDE+15
@NM00016 EQU   PDE+7
QUOTED   EQU   PARSESW
OMITTED  EQU   PARSESW
RETCHAR  EQU   RET+2
RETSIZE  EQU   RET
FIBCMDBF EQU   FIBCPARM+52
@NM00005 EQU   FIBCPARM+48
@NM00004 EQU   FIBCPARM+44
FIBCUSER EQU   FIBCPARM+40
@NM00003 EQU   FIBCPARM+38
FIBECTCN EQU   FIBCPARM+28
FIBCPPLP EQU   FIBCPARM+20
FIBCID   EQU   FIBCPARM+2
FIBCLEN  EQU   FIBCPARM
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTRSVA1 EQU   CVTXTNT2+48
CVTRSVA0 EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTRSV90
CVTRSV9G EQU   CVTRSV90
CVTRSV9F EQU   CVTRSV90
CVTRSV9E EQU   CVTRSV90
CVTRSV9D EQU   CVTRSV90
CVTRSV9C EQU   CVTRSV90
CVTRSV9B EQU   CVTRSV90
CVTRSV9A EQU   CVTRSV90
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTRV484 EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTRV319 EQU   CVTUSR
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00109 EQU   @RC00083
@ENDDATA EQU   *
         END   IKJEFF50,(C'PL/S-II',0503,74008)
