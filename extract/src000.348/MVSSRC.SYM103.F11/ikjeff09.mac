         TITLE 'IKJEFF09 - SUBMIT INSTALLATION EXIT INTERFACE          *
                        '
IKJEFF09 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFF09  73.297'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(32),0(@01)                                 0001
DUMYLBL1 DS    0H                                                  0003
*                                      IKJEFFIE MACRO              0048
*                                                                    */
*                                                                  0049
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0049
*   CONTABPT=PCONTAB;               /* USE LOCAL PTR TO CONTROL TABLE*/
         L     @10,@PC00001+16                                     0049
         L     @10,PCONTAB(,@10)                                   0049
         ST    @10,CONTABPT                                        0049
*   HTPTR=ADDR(HIST);               /* SET UP BASE FOR HISTORY TABLE */
         L     HTPTR,@PC00001+8                                    0050
*   MSGPTR=MSGPT;                   /* SET UP BASE FOR MESSAGE TABLE */
         L     @10,@PC00001+12                                     0051
         L     MSGPTR,MSGPT(,@10)                                  0051
*   EXITAD=PEXIT;                   /* USE LOCAL COPY OF IKJEFF10'S
*                                      ADDRESS                       */
         L     @10,@PC00001+24                                     0052
         L     EXITAD,PEXIT(,@10)                                  0052
*   INEXIT='1'B;                    /* SET ON TRACE BIT              */
         OI    INEXIT(HTPTR),B'00100000'                           0053
*   EXCONTRL=EXCONTRL&&EXCONTRL;    /* ZERO INTERNAL SWITCHES        */
*                                                                  0054
         XC    EXCONTRL(1),EXCONTRL                                0054
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE PARAMETER LIST PASSED TO THE EXIT              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0055
*   EXITLIST=EXITLIST&&EXITLIST;    /* ZERO OUT EXIT PARMLIST        */
         XC    EXITLIST(32),EXITLIST                               0055
*   SWITCHES=SWITCHES&&SWITCHES;    /* ZERO THE PARMLIST EXTENSION   */
         XC    SWITCHES(4),SWITCHES                                0056
*   EXITWORK=EXWORD;                /* WORD FOR EXIT'S USE           */
         L     @10,@PC00001+20                                     0057
         L     @10,EXWORD(,@10)                                    0057
         ST    @10,EXITWORK                                        0057
*   CARDPTR=STMTPTR;                /* SET UP POINTER TO CURRENT   0058
*                                      INPUT CARD                    */
         L     @10,@PC00001                                        0058
         L     @10,STMTPTR(,@10)                                   0058
         ST    @10,CARDPTR                                         0058
*   USERIDPT=ADDR(USERID);                                         0059
         L     @10,@PC00001+4                                      0059
         ST    @10,USERIDPT                                        0059
*   SWITSPT=ADDR(SWITCHES);         /* PTR TO PARMLIST EXTENSION     */
         LA    @10,SWITCHES                                        0060
         ST    @10,SWITSPT                                         0060
*   ACCTIPT=ADDR(HTACCNTI);         /* ACCOUNTING INFORMATION FOR  0061
*                                      USER FROM LOGON ACT C.B.      */
         L     @08,HTACCNTP(,HTPTR)                                0061
         ST    @08,ACCTIPT                                         0061
*   ACCTLPT=ADDR(HTACCNTL);         /* LENGTH OF ACCOUNT INFO        */
         LA    @08,HTACCNTL(,HTPTR)                                0062
         ST    @08,ACCTLPT                                         0062
*   IETAKEEX=TAKEXITS;              /* GET BITS FOR TYPE EXIT TO TAKE*/
         MVC   IETAKEEX(1,@10),TAKEXITS(HTPTR)                     0063
*   IEOPRAND=OPOFF;                 /* OFFSET TO FIRST COLUMN OF   0064
*                                      CARD'S OPERAND FIELD        0064
*                                                                    */
         MVC   IEOPRAND(1,@10),OPOFF(HTPTR)                        0064
*                                                                  0065
*   /*****************************************************************/
*   /*                                                               */
*   /* TURN ON BIT(S) IDENTIFYING TYPE CARD BEING PASSED TO EXIT     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0065
*   IF CJOB='1'B THEN               /* IF CURRENT CARD IS A JOB CARD */
         TM    CJOB(HTPTR),B'00010000'                             0065
         BNO   @RF00065                                            0065
*     IESJOB='1'B;                  /* TURN ON JOB CARD BIT IN EXIT
*                                      PARMLIST                      */
         OI    IESJOB(@10),B'10000000'                             0066
*   IF CEXEC='1'B THEN              /* IF CURRENT CARD IS EXEC       */
@RF00065 TM    CEXEC(HTPTR),B'00001000'                            0067
         BNO   @RF00067                                            0067
*     IESEXEC='1'B;                                                0068
         L     @10,SWITSPT                                         0068
         OI    IESEXEC(@10),B'01000000'                            0068
*   IF CDD='1'B THEN                /* IF CURRENT CARD IS DD         */
@RF00067 TM    CDD(HTPTR),B'00000100'                              0069
         BNO   @RF00069                                            0069
*     IESDD='1'B;                                                  0070
         L     @10,SWITSPT                                         0070
         OI    IESDD(@10),B'00100000'                              0070
*   IF CCOMMAND='1'B THEN           /* IF CURRENT CARD IS COMMAND    */
@RF00069 TM    CCOMMAND(HTPTR),B'00000010'                         0071
         BNO   @RF00071                                            0071
*     IESCMD='1'B;                                                 0072
         L     @10,SWITSPT                                         0072
         OI    IESCMD(@10),B'00010000'                             0072
*   IF CNULL='1'B THEN              /* IF CURRENT CARD IS NULL       */
@RF00071 TM    CNULL(HTPTR),B'00100000'                            0073
         BNO   @RF00073                                            0073
*     IESNULL='1'B;                                                0074
         L     @10,SWITSPT                                         0074
         OI    IESNULL(@10),B'00001000'                            0074
*   IF CJES='1'B THEN               /* IF CURRENT CARD IS JOB ENTRY
*                                      SUBSYSTEM CONTROL CARD      0075
*                                      (SLASH-ASTERISK-NONBLANK)     */
@RF00073 TM    CJES(HTPTR),B'10000000'                             0075
         BNO   @RF00075                                            0075
*     IESJES='1'B;                                                 0076
         L     @10,SWITSPT                                         0076
         OI    IESJES(@10),B'10000000'                             0076
*   IF CCOMMENT='1'B THEN           /* IF CURRENT CARD IS COMMENT  0077
*                                      (COULD BE JES3 CONTROL CARD)  */
@RF00075 TM    CCOMMENT(HTPTR),B'00000001'                         0077
         BNO   @RF00077                                            0077
*     IESCOMNT='1'B;                                               0078
         L     @10,SWITSPT                                         0078
         OI    IESCOMNT(@10),B'01000000'                           0078
*   IF COPCONEX='1'B THEN           /* IF OPERAND IS TO BE CONTINUED */
@RF00077 TM    COPCONEX(HTPTR),B'01000000'                         0079
         BNO   @RF00079                                            0079
*     IESOPCON='1'B;                                               0080
         L     @10,SWITSPT                                         0080
         OI    IESOPCON(@10),B'00000100'                           0080
*   IF CCONEX='1'B THEN             /* IF STATEMENT IS TO BE       0081
*                                      CONTINUED                     */
@RF00079 TM    CCONEX(HTPTR),B'10000000'                           0081
         BNO   @RF00081                                            0081
*     IESSCON='1'B;                                                0082
         L     @10,SWITSPT                                         0082
         OI    IESSCON(@10),B'00000010'                            0082
*   IF CVERBCOP='1'B THEN           /* IF CURRENT CARD IS A        0083
*                                      CONTINUATION                  */
@RF00081 TM    CVERBCOP(HTPTR),B'00001000'                         0083
         BNO   @RF00083                                            0083
*     IESCONTN='1'B;                                               0084
         L     @10,SWITSPT                                         0084
         OI    IESCONTN(@10),B'00000001'                           0084
*   CARD2=CARD;                     /* SAVE THE ORIGINAL STATEMENT 0085
*                                                                    */
@RF00083 L     @10,@PC00001                                        0085
         L     @10,STMTPTR(,@10)                                   0085
         MVC   CARD2(80),CARD(@10)                                 0085
*                                                                  0086
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL INSTALLATION EXIT (MAY CALL FROM LOOP)                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0086
*CALLEX:                                                           0086
*   CALL INSTEXIT(EXITLIST);        /* CALL THE EXIT -- IKJEFF10     */
CALLEX   LA    @10,EXITLIST                                        0086
         ST    @10,@AL00001                                        0086
         LR    @15,EXITAD                                          0086
         LA    @01,@AL00001                                        0086
         BALR  @14,@15                                             0086
*   RFY                                                            0087
*     R15 RSTD;                                                    0087
*   RETCODE=R15;                    /* SAVE RETURN CODE              */
         ST    R15,RETCODE                                         0088
*   RFY                                                            0089
*     R15 UNRSTD;                                                  0089
*                                                                  0089
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PARMLIST'S RESPTR IS NOT ZERO, FREE THE REPLY BUFFER       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0090
*   IF RESPTR^=0 THEN                                              0090
         L     @10,RESPTR                                          0090
         LTR   @10,@10                                             0090
         BZ    @RF00090                                            0090
*     DO;                                                          0091
*       RFY                                                        0092
*        (R0,                                                      0092
*         R1) RSTD;                                                0092
*       R0=RETSIZE;                                                0093
         SLR   @10,@10                                             0093
         ICM   @10,7,RETMSG(MSGPTR)                                0093
         LH    R0,RETSIZE(,@10)                                    0093
*       HOLD=R1;                                                   0094
         LR    HOLD,R1                                             0094
*       R1=ADDR(RET);                                              0095
         LR    R1,@10                                              0095
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0096
         FREEMAIN R,LV=(0),A=(1)
*       R1=HOLD;                                                   0097
         LR    R1,HOLD                                             0097
*       RFY                                                        0098
*        (R0,                                                      0098
*         R1) UNRSTD;                                              0098
*       RESPTR=0;                                                  0099
         SLR   @10,@10                                             0099
         ST    @10,RESPTR                                          0099
*     END;                                                         0100
*                                                                  0100
*   /*****************************************************************/
*   /*                                                               */
*   /* TAKE ERROR EXIT IF EXIT'S R.C. SAYS ABORT                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0101
*   IF RETCODE=IEABORT THEN                                        0101
@RF00090 L     @10,RETCODE                                         0101
         CH    @10,@CH00131                                        0101
         BE    @RT00101                                            0101
*     GO TO BAD;                    /* CAUSE ERROR TERMIN. OF SUBMIT
*                                                                    */
*                                                                  0103
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUESTED, ISSUE PROMPT MESSAGE AND OBTAIN REPLY FOR EXIT  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0103
*   IF RETCODE=IEPROMPT THEN                                       0103
         CH    @10,@CH00129                                        0103
         BNE   @RF00103                                            0103
*     DO;                                                          0104
*       MSGID='09A ';                                              0105
         MVC   MSGID(4,MSGPTR),@CC00294                            0105
*CALLMSG:                                                          0106
*       MTPUTLSW='0'B;              /* CALL THE MESSAGE PROCESSING 0106
*                                      ROUTINE FOR PUTGET      Y02656*/
*                                                                  0106
CALLMSG  NI    MTPUTLSW(MSGPTR),B'10111111'                        0106
*       /*************************************************************/
*       /*                                                           */
*       /* GENERAL CODE TO ISSUE ANY MESSAGE FOR EXIT                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0107
*CALLMSG2:                                                         0107
*       L1=IEMSGLN-2;               /* LENGTH OF VARIABLE            */
CALLMSG2 L     @10,EXMSGPTR                                        0107
         LH    @08,IEMSGLN(,@10)                                   0107
         BCTR  @08,0                                               0107
         BCTR  @08,0                                               0107
         STC   @08,L1(,MSGPTR)                                     0107
*       VAR1=ADDR(IEMSGTXT);        /* VARIABLE                      */
*                                                                  0108
         LA    @10,IEMSGTXT(,@10)                                  0108
         STCM  @10,7,VAR1(MSGPTR)                                  0108
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE MESSAGE (COULD BE ERROR MESSAGE FROM IKJEFF09)      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0109
*MSG:                                                              0109
*       RFY                                                        0109
*         R1 RSTD;                                                 0109
MSG      DS    0H                                                  0110
*       HOLD=R1;                                                   0110
         LR    HOLD,R1                                             0110
*       R1=MSGPTR;                                                 0111
         LR    R1,MSGPTR                                           0111
*       CALL MSGMOD;                /* CALL IKJEFF02 SERVICE ROUTINE */
         L     @15,MSGRTN(,MSGPTR)                                 0112
         BALR  @14,@15                                             0112
*       RFY                                                        0113
*         R15 RSTD;                                                0113
*       MSGR15=R15;                 /* SAVE MSG ROUTINE RETURN CODE  */
         LR    MSGR15,R15                                          0114
*       RFY                                                        0115
*         R15 UNRSTD;                                              0115
*       MTPUTLSW='1'B;              /* CHANGE MESSAGE TABLE SWITCH 0116
*                                      BACK TO PUTLINE         Y02656*/
         OI    MTPUTLSW(MSGPTR),B'01000000'                        0116
*       R1=HOLD;                                                   0117
         LR    R1,HOLD                                             0117
*       RFY                                                        0118
*         R1 UNRSTD;                                               0118
*                                                                  0119
*       /*************************************************************/
*       /*                                                           */
*       /* DO SPECIAL PROCESSING AFTER SOME MESSAGES                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0119
*       IF MSGID='09C ' THEN                                       0119
         CLC   MSGID(4,MSGPTR),@CC00302                            0119
         BE    @RT00119                                            0119
*         GO TO BAD;                /* TAKE ERROR EXIT               */
*       IF MSGID='09D ' THEN        /* ERROR MESSAGE, SO             */
         CLC   MSGID(4,MSGPTR),@CC00303                            0121
         BE    @RT00121                                            0121
*         GO TO BAD;                /* TAKE ERROR EXIT               */
*                                                                  0122
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE ERROR MESSAGE IF UNABLE TO PROMPT                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0123
*       IF MSGR15=12 THEN                                          0123
         CH    MSGR15,@CH00129                                     0123
         BNE   @RF00123                                            0123
*         DO;                       /* IF RETURN CODE FROM MSG MODULE
*                                      IS EQUAL 12 THEN INDICATES THE
*                                      USER IS IN NOPROMPT MODE      */
*           MSGID='09C ';           /* WISH TO PUT OUT A PUTLINE MSG
*                                      TO TERMINAL USER IN WHICH WILL
*                                      BE THE PUTGET MSG THE SYSTEM
*                                      TRIED TO PUT OUT--ONLY      0125
*                                      ALLOWING, HOWEVER EIGHTY    0125
*                                      CHARACTERS                    */
         MVC   MSGID(4,MSGPTR),@CC00302                            0125
*           IF L1>80 THEN           /* TRUNCATE MSG IF GREATER THAN
*                                      80 CHARACTERS                 */
         CLI   L1(MSGPTR),80                                       0126
         BNH   @RF00126                                            0126
*             L1=80;                                               0127
         MVI   L1(MSGPTR),X'50'                                    0127
*           L2=LENGTH(CTCMDNM);     /* INSERT THE COMMAND NAME Y02993*/
@RF00126 MVI   L2(MSGPTR),X'08'                                    0128
*           VAR2=ADDR(CTCMDNM);                                    0129
         L     @10,@PC00001+28                                     0129
         STCM  @10,7,VAR2(MSGPTR)                                  0129
*           GO TO MSG;              /* ISSUE THE PROMPT ERROR MESSAGE*/
         B     MSG                                                 0130
*         END;                      /* DON'T CHECK OTHER MSG R15   0131
*                                      R.C.S - ALWAYS ASSUME CAN DO A
*                                      PUTLINE WHEN WORKING WITH   0131
*                                      INSTALLATION EXITS            */
*       IF RETCODE=IEPROMPT THEN    /* IF ISSUED A PROMPT,           */
@RF00123 CLC   RETCODE(4),@CF00129                                 0132
         BNE   @RF00132                                            0132
*         RESPTR=RETMSG;            /* GIVE EXIT A POINTER TO REPLY  */
         SLR   @10,@10                                             0133
         ICM   @10,7,RETMSG(MSGPTR)                                0133
         ST    @10,RESPTR                                          0133
*       GO TO CALLEX;               /* GO BACK TO EXIT               */
         B     CALLEX                                              0134
*     END;                                                         0135
*                                                                  0136
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUESTED, ISSUE AN INFORMATIVE MESSAGE FOR THE EXIT       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*   IF RETCODE=IEMSG THEN                                          0136
@RF00103 CLC   RETCODE(4),@CF00073                                 0136
         BNE   @RF00136                                            0136
*     DO;                           /* MSG ONLY                      */
*       MSGID='09B ';                                              0138
         MVC   MSGID(4,MSGPTR),@CC00304                            0138
*       GO TO CALLMSG2;             /* IKJEFF02 WILL ISSUE PUTLINE   */
         B     CALLMSG2                                            0139
*     END;                                                         0140
*                                                                  0140
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUESTED, GET NEXT STATEMENT FROM EXIT - DON'T READ IT    */
*   /* FROM SUBMITTED DATA SET                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*   IF RETCODE=IERETURN THEN                                       0141
@RF00136 CLC   RETCODE(4),@CF00126                                 0141
         BNE   @RF00141                                            0141
*     DO;                           /* RETURN FOR ANOTHER STMT       */
*       IF CALLMADE^='1'B THEN      /* IF CALLMADE IS NOT ON THEN THE
*                                      CONTROL RTN HAS NOT BEEN    0143
*                                      CALLED BEFORE                 */
         TM    CALLMADE,B'10000000'                                0143
         BO    @RF00143                                            0143
*         DO;                                                      0144
*FIRSTCAL:                          /* FIRST CALL OF IKJEFF06 ROUTINE*/
*           CALLMADE='1'B;          /* NO, SO SET FLAG SO NEXT TIME
*                                      WILL NOT HAVE TO COPY THE JCL
*                                      SWITCHES -- THIS IS DONE THE
*                                      FIRST TIME A CHANGED CARD IS
*                                      RE-PROCESSED SO AS TO MAKE IT
*                                      LOOK LIKE A FOLLOWER OF THE 0145
*                                      PRECEDING CARD                */
FIRSTCAL OI    CALLMADE,B'10000000'                                0145
*           CURRJCL=PRIORJCL;       /* RE-SET JCL SWITS              */
         MVC   CURRJCL(4,HTPTR),PRIORJCL(HTPTR)                    0146
*         END;                                                     0147
*NEXTCALL:                          /* NEXT CALL OF IKJEFF06         */
*       STMTPTR=CARDPTR;            /* PT TO STMT AS SEEN BY THE EXIT*/
@RF00143 DS    0H                                                  0148
NEXTCALL L     @10,@PC00001                                        0148
         L     @08,CARDPTR                                         0148
         ST    @08,STMTPTR(,@10)                                   0148
*       CALL IKJEFF06(CONTABPT);    /* IKJEFF06 IS AN ALTERNATE E.P.
*                                      IN IKJEFF05                   */
         LA    @10,CONTABPT                                        0149
         ST    @10,@AL00001                                        0149
         L     @15,@CV00053                                        0149
         LA    @01,@AL00001                                        0149
         BALR  @14,@15                                             0149
*       IF RETCODE=IERETURN THEN    /* IF MUST GO BACK FOR ANOTHER   */
         CLC   RETCODE(4),@CF00126                                 0150
         BNE   @RF00150                                            0150
*         DO;                                                      0151
*           CARDPTR=0;              /* YES                           */
         SLR   @10,@10                                             0152
         ST    @10,CARDPTR                                         0152
*           GO TO CALLEX;           /* GO TO EXIT FOR ANOTHER STMT.  */
         B     CALLEX                                              0153
*         END;                      /* NO                            */
*       GO TO OUT;                  /* FINISHED                      */
         B     OUT                                                 0155
*     END;                                                         0156
*                                                                  0156
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUESTED, CONTINUE PROCESSING THE CURRENT CARD            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0157
*   IF RETCODE=IECONTIN THEN                                       0157
@RF00141 L     @10,RETCODE                                         0157
         LTR   @10,@10                                             0157
         BZ    @RT00157                                            0157
*     GO TO FORCE;                  /* CHECK WHETHER EXIT CHANGED  0158
*                                      CARD                          */
*                                                                  0158
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OF CODE WILL BE ENTERED WHEN THE RETURN CODE IS  */
*   /* NOT 0, 4, 8,12 OR 16. IT IS A NON-INTERPRETABLE RETURN CODE SO*/
*   /* IKJEFF09 WILL PUT OUT AN ERROR MESSAGE AND ABORT              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0159
*ERROR:                                                            0159
*   VAR1=ADDR(RETCODE);                                            0159
ERROR    LA    @10,RETCODE                                         0159
         STCM  @10,7,VAR1(MSGPTR)                                  0159
*   L1='84'X;                       /* INDICATES DECIMAL CONVERSION  */
         MVI   L1(MSGPTR),X'84'                                    0160
*   MSGID='09D ';                                                  0161
         MVC   MSGID(4,MSGPTR),@CC00303                            0161
*   GO TO MSG;                      /* ISSUE THE ERROR MESSAGE       */
*                                                                  0162
         B     MSG                                                 0162
*   /*****************************************************************/
*   /*                                                               */
*   /* CODE USED TO ABNORMALLY TERMINATE THE SUBMIT COMMAND          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0163
*BAD:                                                              0163
*   QUIT='1'B;                                                     0163
BAD      OI    QUIT(HTPTR),B'10000000'                             0163
*   GO TO OUT;                      /* DON'T PROCESS THE CARD      0164
*                                                                    */
         B     OUT                                                 0164
*                                                                  0165
*   /*****************************************************************/
*   /*                                                               */
*   /* CODE TO CHECK HOW THIS CARD IS TO BE PROCESSED                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0165
*FORCE:                                                            0165
*   IF CALLMADE='1'B THEN           /* IF CALLED IKJEFF06 CONTROL  0165
*                                      ROUTINE ONCE                  */
FORCE    TM    CALLMADE,B'10000000'                                0165
         BO    @RT00165                                            0165
*     GO TO NEXTCALL;               /* NEED TO CALL AGAIN TO PROCESS
*                                      LAST STMT AS SEEN BY THE EXIT */
*                                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK WHETHER EXIT WANTS THIS CARD DELETED                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0167
*   IF CARDPTR=0 THEN                                              0167
         SLR   @10,@10                                             0167
         C     @10,CARDPTR                                         0167
         BNE   @RF00167                                            0167
*     DO;                           /* IF DELETED, JUST RETURN     0168
*                                      WITHOUT RE-SETTING THE JCL  0168
*                                      SWITCHES SO THAT CONTINUATIONS
*                                      WILL BE IDENTIFIED PROPERLY   */
*       STMTPTR=0;                                                 0169
         L     @07,@PC00001                                        0169
         ST    @10,STMTPTR(,@07)                                   0169
*       GO TO OUT;                  /* DON'T PROCESS CURRENT CARD    */
         B     OUT                                                 0170
*     END;                                                         0171
*                                                                  0171
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK WHETHER EXIT CHANGED THE CURRENT CARD                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0172
*   IF CARD^=CARD2 THEN                                            0172
@RF00167 L     @10,@PC00001                                        0172
         L     @10,STMTPTR(,@10)                                   0172
         CLC   CARD(80,@10),CARD2                                  0172
         BNE   @RT00172                                            0172
*     GO TO FIRSTCAL;               /* IF CARD AND CARD2 ARE NOT THE
*                                      SAME, THE EXIT CHANGED THE  0173
*                                      STMT SO BETTER CALL CONTROL   */
*                                                                  0173
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON CODE TO CLEAN UP AND RETURN FROM THIS MODULE           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0174
*OUT:                               /* SAVE THE EXIT WORD AND SWITCH
*                                      SETTINGS                      */
*   EXWORD=EXITWORK;                /* SAVE EXIT'S WORD              */
OUT      L     @10,@PC00001+20                                     0174
         L     @07,EXITWORK                                        0174
         ST    @07,EXWORD(,@10)                                    0174
*   TAKEXITS=IETAKEEX;              /* EXIT CAN CHANGE TYPE OF EXITS
*                                      TAKEN                         */
         L     @10,SWITSPT                                         0175
         MVC   TAKEXITS(1,HTPTR),IETAKEEX(@10)                     0175
*   INEXIT='0'B;                                                   0176
         NI    INEXIT(HTPTR),B'11011111'                           0176
*   END IKJEFF09                    /* RETURN TO CALLER-QUIT SWITCH
*                                      ON IF ERROR             Y02993
*                                                                    */
*                                                                  0177
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJEFFIE)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFHT)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                       */
*                                                                  0177
*       ;                                                          0177
@EL00001 L     @13,4(,@13)                                         0177
@EF00001 L     @00,@SIZDATD                                        0177
         LR    @01,@11                                             0177
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0177
         BR    @14                                                 0177
@DATA    DS    0H
@CH00131 DC    H'16'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    8F
@AL00001 DS    1A
IKJEFF09 CSECT
         DS    0F
@CF00126 DC    F'4'
@CF00073 DC    F'8'
@CF00129 DC    F'12'
@CH00129 EQU   @CF00129+2
@DATD    DSECT
         DS    0D
CONTABPT DS    A
RETCODE  DS    A
CARD2    DS    CL80
EXCONTRL DS    CL1
         ORG   EXCONTRL
CALLMADE DS    BL1
         ORG   EXCONTRL+1
         DS    CL3
EXITLIST DS    CL32
         ORG   EXITLIST
CARDPTR  DS    AL4
EXMSGPTR DS    AL4
RESPTR   DS    AL4
USERIDPT DS    AL4
SWITSPT  DS    AL4
EXITWORK DS    FL4
ACCTIPT  DS    AL4
ACCTLPT  DS    AL4
         ORG   EXITLIST+32
SWITCHES DS    CL4
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFF09 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00053 DC    V(IKJEFF06)
         DS    0D
@CC00294 DC    C'09A '
@CC00302 DC    C'09C '
@CC00303 DC    C'09D '
@CC00304 DC    C'09B '
PATCH    DS    CL51
         ORG   PATCH
PTCHINIT DC    17CL3'ZAP'
         ORG   PATCH+51
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
EXITAD   EQU   @09
MSGR15   EQU   @08
MSGPTR   EQU   @05
HOLD     EQU   @07
HTPTR    EQU   @06
R0       EQU   @00
R1       EQU   @01
R15      EQU   @15
CARD     EQU   0
INSTEXIT EQU   0
MSGMOD   EQU   0
IEMSGBUF EQU   0
IEMSGLN  EQU   IEMSGBUF
IEMSGTXT EQU   IEMSGBUF+2
IEREPLY  EQU   0
IESUBCTL EQU   0
IETAKEEX EQU   IESUBCTL
IEOPRAND EQU   IESUBCTL+1
IESTMTYP EQU   IESUBCTL+2
IESJOB   EQU   IESTMTYP
IESEXEC  EQU   IESTMTYP
IESDD    EQU   IESTMTYP
IESCMD   EQU   IESTMTYP
IESNULL  EQU   IESTMTYP
IESOPCON EQU   IESTMTYP
IESSCON  EQU   IESTMTYP
IESCONTN EQU   IESTMTYP
IESTMTP2 EQU   IESUBCTL+3
IESJES   EQU   IESTMTP2
IESCOMNT EQU   IESTMTP2
HISTORY  EQU   0
WHATMOD  EQU   HISTORY+12
INEXIT   EQU   WHATMOD+3
JCLSWITS EQU   HISTORY+16
PRIORJCL EQU   JCLSWITS
PVERB    EQU   PRIORJCL
PDTYPE   EQU   PRIORJCL+2
PMISC    EQU   PRIORJCL+3
CURRJCL  EQU   JCLSWITS+4
CVERB    EQU   CURRJCL
CNULL    EQU   CVERB
CJOB     EQU   CVERB
CEXEC    EQU   CVERB
CDD      EQU   CVERB
CCOMMAND EQU   CVERB
CCOMMENT EQU   CVERB
CJES     EQU   CVERB+1
CDTYPE   EQU   CURRJCL+2
CMISC    EQU   CURRJCL+3
CCONEX   EQU   CMISC
COPCONEX EQU   CMISC
CVERBCOP EQU   CMISC
STATICSW EQU   HISTORY+24
GENL     EQU   STATICSW
QUIT     EQU   GENL
TAKEXITS EQU   STATICSW+1
OPOFF    EQU   STATICSW+2
CODEFLD  EQU   STATICSW+3
DLMONJCL EQU   HISTORY+32
HTSWITCH EQU   HISTORY+34
HTACCNTP EQU   HISTORY+40
HTACCNTL EQU   HISTORY+44
HTACCNTI EQU   0
MSGTABLE EQU   0
TMCTPTR  EQU   MSGTABLE+4
ECBPTR   EQU   MSGTABLE+8
@NM00013 EQU   MSGTABLE+12
SW       EQU   MSGTABLE+20
MTPUTLSW EQU   SW
RETMSG   EQU   MSGTABLE+21
SW2      EQU   MSGTABLE+24
MSGID    EQU   MSGTABLE+40
MTINSRTS EQU   MSGTABLE+44
L1       EQU   MTINSRTS
VAR1     EQU   MTINSRTS+1
L2       EQU   MTINSRTS+4
VAR2     EQU   MTINSRTS+5
L3       EQU   MTINSRTS+8
L4       EQU   MTINSRTS+12
MSGRTN   EQU   MSGTABLE+60
RET      EQU   0
RETSIZE  EQU   RET
IEACCNTI EQU   0
IEACCNTL EQU   0
IECARD   EQU   0
IEUSERID EQU   0
MSGECB   EQU   0
MSGTMCT  EQU   0
STMTPTR  EQU   0
USERID   EQU   0
HIST     EQU   0
MSGPT    EQU   0
PCONTAB  EQU   0
EXWORD   EQU   0
PEXIT    EQU   0
CTCMDNM  EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
RETCHAR  EQU   RET+2
VAR4     EQU   MTINSRTS+13
HIGHL4   EQU   L4
VAR3     EQU   MTINSRTS+9
HIGHL3   EQU   L3
HIGHL2   EQU   L2
HIGHL1   EQU   L1
@NM00017 EQU   MSGTABLE+36
@NM00016 EQU   MSGTABLE+32
MTOLDPTR EQU   MSGTABLE+28
@NM00015 EQU   MSGTABLE+25
@NM00014 EQU   SW2
MTDOMSW  EQU   SW2
MT2OLDSW EQU   SW2
MTNHEXSW EQU   SW
MTWTPSW  EQU   SW
MTJOBISW EQU   SW
MTKEY1SW EQU   SW
MTHEXSW  EQU   SW
MTWTOSW  EQU   SW
MTNOIDSW EQU   SW
MSGCSECT EQU   MSGTABLE+16
MTHIGH   EQU   @NM00013
MTCPPL   EQU   TMCTPTR
LISTPTR  EQU   MSGTABLE
@NM00012 EQU   HISTORY+50
HTACNTC2 EQU   HISTORY+48
HTACNTC1 EQU   HISTORY+46
@NM00011 EQU   HISTORY+36
@NM00010 EQU   HISTORY+35
@NM00009 EQU   HTSWITCH
HTDLMSW  EQU   HTSWITCH
HTDLM    EQU   DLMONJCL
@NM00008 EQU   HISTORY+28
HTCODE   EQU   CODEFLD
@NM00007 EQU   TAKEXITS
COMNTX   EQU   TAKEXITS
JESX     EQU   TAKEXITS
NULLX    EQU   TAKEXITS
CMDX     EQU   TAKEXITS
DDX      EQU   TAKEXITS
EXECX    EQU   TAKEXITS
JOBX     EQU   TAKEXITS
NONOTIFY EQU   GENL
FIRST    EQU   GENL
FLUSH    EQU   GENL
CDLMFND  EQU   CMISC
CNOTHING EQU   CMISC
CCOMCON  EQU   CMISC
CNAME    EQU   CMISC
CCONERR  EQU   CMISC
CDDDATA  EQU   CDTYPE
CDDAST   EQU   CDTYPE
@NM00006 EQU   CVERB+1
@NM00005 EQU   CVERB+1
CDATA    EQU   CVERB
CDELIM   EQU   CVERB
PDLMFND  EQU   PMISC
PNOTHING EQU   PMISC
PCOMCON  EQU   PMISC
PVERBCOP EQU   PMISC
PNAME    EQU   PMISC
PCONERR  EQU   PMISC
POPCONEX EQU   PMISC
PCONEX   EQU   PMISC
PDDDATA  EQU   PDTYPE
PDDAST   EQU   PDTYPE
@NM00004 EQU   PVERB+1
@NM00003 EQU   PVERB+1
PJES     EQU   PVERB+1
PCOMMENT EQU   PVERB
PCOMMAND EQU   PVERB
PDD      EQU   PVERB
PEXEC    EQU   PVERB
PJOB     EQU   PVERB
PNULL    EQU   PVERB
PDATA    EQU   PVERB
PDELIM   EQU   PVERB
INOINIT  EQU   WHATMOD+3
INCOMPIN EQU   WHATMOD+3
INMSG    EQU   WHATMOD+3
INDAIRIN EQU   WHATMOD+3
INWRMGR  EQU   WHATMOD+3
INIDENT  EQU   WHATMOD+3
INREAD   EQU   WHATMOD+3
INGEN    EQU   WHATMOD+2
INPROMPT EQU   WHATMOD+1
INCONTRL EQU   WHATMOD
SUBTAB   EQU   HISTORY
@NM00002 EQU   IESTMTP2
@NM00001 EQU   IETAKEEX
IETCOMNT EQU   IETAKEEX
IETJES   EQU   IETAKEEX
IETNULL  EQU   IETAKEEX
IETCMD   EQU   IETAKEEX
IETDD    EQU   IETAKEEX
IETEXEC  EQU   IETAKEEX
IETJOB   EQU   IETAKEEX
IERTEXT  EQU   IEREPLY+2
IEREPLYL EQU   IEREPLY
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00101 EQU   BAD
@RT00119 EQU   BAD
@RT00121 EQU   BAD
@RF00132 EQU   CALLEX
@RF00150 EQU   OUT
@RT00157 EQU   FORCE
@RT00165 EQU   NEXTCALL
@RT00172 EQU   FIRSTCAL
@ENDDATA EQU   *
         END   IKJEFF09,(C'PL/S-II',0503,73297)
