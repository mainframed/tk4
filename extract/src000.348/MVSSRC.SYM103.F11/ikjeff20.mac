         TITLE 'IKJEFF20 - SVC 100 FIB STAI ROUTINE                    *
                        '
IKJEFF20 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFF20  78.076'                                 0001
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
*   R3=R0;                          /* SAVE REG 0            @ZA20346*/
         LR    R3,R0                                               0072
*   SDWAPTR=R1;                     /* SAVE PTR TO STAI PARMS@ZA20346*/
         LR    SDWAPTR,R1                                          0073
*   R5=R2;                          /* SAVE CODE IF NO SDWA  @ZA20346*/
         LR    R5,R2                                               0074
*   GEN;                                                           0075
*                                   /* GETMAIN WORKAREA FOR  @ZA20346*/
        L 0,@SIZDATD                /* THIS ESTAI EXIT.      @ZA20346*/
        GETMAIN R,LV=(0)            /*                       @ZA20346*/
        LR 10,1                     /* ESTAB ADDRESSABILITY  @ZA20346*/
        USING @DATD,10              /* TO WORKAREA           @ZA20346*/
*   R2=R5;                          /* RESTORE CODE IF NOSDWA@ZA20346*/
         LR    R2,R5                                               0076
*   RFY                                                            0077
*    (R5) UNRSTD;                   /* REG 5 NO LONGER NEEDED@ZA20346*/
*   IF R3^=EC12 THEN                                               0078
         C     R3,@CF00043                                         0078
         BE    @RF00078                                            0078
*     DO;                           /* IF GETMAIN RC GOOD    @ZA20346*/
*       GEN(STM 14,12,12(13));      /* SAVE RTMS REGS        @ZA20346*/
         STM 14,12,12(13)
*       GEN(ST 13,SAVE1+4);         /* SET PTR TO RTM SA     @ZA20346*/
         ST 13,SAVE1+4
*       GEN(LA 13,SAVE1);           /* SET PTR TO ESTAE SA   @ZA20346*/
         LA 13,SAVE1
*       FIBCMPTR=SVCPLPTR;          /* USE LOCAL PTR TO FIBCPARM     */
         L     @15,SDWAPARM(,SDWAPTR)                              0083
         L     FIBCMPTR,SVCPLPTR(,@15)                             0083
*       ABNDCODE=SDWAABCC;          /* PICK UP ABEND CODE FROM STAI
*                                      PARMLIST                      */
         L     @15,SDWAABCC(,SDWAPTR)                              0084
         ST    @15,ABNDCODE                                        0084
*     END;                          /*                       @ZA20346*/
*   ELSE                            /*                       @ZA20346*/
*     DO;                           /* GETMAIN RC BAD        @ZA20346*/
         B     @RC00078                                            0086
@RF00078 DS    0H                                                  0087
*       R13=ADDR(SAVE1);            /*                       @ZA20346*/
         LA    R13,SAVE1                                           0087
*       RFY                                                        0088
*         SVCPLPTR BASED(R2);                                      0088
*       FIBCMPTR=SVCPLPTR;          /* USE LOCAL PTR TO FIBCPARM     */
         L     FIBCMPTR,SVCPLPTR(,R2)                              0089
*       ABNDCODE=R1;                                               0090
         ST    R1,ABNDCODE                                         0090
*       RFY                                                        0091
*         R2 UNRSTD;                                               0091
*     END;                          /*                       @ZA20346*/
*                                                                  0092
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE ABEND MESSAGE, UNLESS ENTERED FOR ATTENTION OR FOR      */
*   /* OUTPUT COMMAND                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0093
*COMMON:                            /* MAINLINE CODE         @ZA20346*/
*   SAVE14=R14;                     /* SAVE R14 FOR RETURN   @ZA20346*/
@RC00078 DS    0H                                                  0093
COMMON   ST    R14,SAVE14                                          0093
*   RFY                                                            0094
*     R14 UNRSTD;                   /* RELEASE REG 14        @ZA20346*/
*   IF ECTATRM=OFF&                 /* ABNORMAL TERMINATION BIT ON 0095
*                                      (33E ABEND) MEANS DETACH WITH
*                                      STAE=YES WAS ISSUED BEFORE  0095
*                                      TASK TERMINATED NORMALLY. TMP
*                                      ISSUES THIS DETACH IF USER HIT
*                                      ATTENTION, THEN ENTERED     0095
*                                      ANOTHER COMMAND - DON'T WANT
*                                      ABEND MESSAGE                 */
*       FIBCID^=FIBOUTPT THEN       /* CHECK FOR CALLER NOT OUTPUT   */
         L     @06,ECTPTR(,FIBCMPTR)                               0095
         TM    ECTATRM(@06),B'00100000'                            0095
         BNZ   @RF00095                                            0095
         CLC   FIBCID(2,FIBCMPTR),@CH00518                         0095
         BE    @RF00095                                            0095
*     DO;                                                          0096
*       GFPARMS=GFPARMS&&GFPARMS;   /* ZERO PARAMETER LIST TO GENERAL
*                                      FAILURE ROUTINE IKJEFF19      */
         XC    GFPARMS(44),GFPARMS                                 0097
*       GFRCODE=ABNDCODE;           /* PASS THE ABEND CODE TO      0098
*                                      IKJEFF19 FOR INSERTION IN   0098
*                                      MESSAGE                       */
         L     @06,ABNDCODE                                        0098
         ST    @06,GFRCODE                                         0098
*       GFCALLID=GFABEND;           /* WANT ABEND MESSAGE            */
         MVC   GFCALLID(2),@CH00034                                0099
*       GFCPPLP=ADDR(FIBCPPLC);     /* CPPL ADDR NEEDED FOR PUTLINE  */
         LA    @06,FIBCPPLC(,FIBCMPTR)                             0100
         ST    @06,GFCPPLP                                         0100
*       IF R3^=EC12 THEN            /* POINT TO STAI PARAMETER LIST
*                                      (SDWA), IF PASSED ONE@ZA20346 */
         C     R3,@CF00043                                         0101
         BE    @RF00101                                            0101
*         GFCBPTR=SDWAPTR;                                         0102
         ST    SDWAPTR,GFCBPTR                                     0102
*       GFPLPTR=ADDR(GFPARMS);      /* STANDARD LINKAGE              */
@RF00101 LA    @06,GFPARMS                                         0103
         ST    @06,GFPLPTR                                         0103
*       GFPHIGH=ON;                 /* STANDARD LINKAGE              */
         OI    GFPHIGH,B'10000000'                                 0104
*       R1=ADDR(GFPLPTR);           /* STANDARD LINKAGE              */
         LA    R1,GFPLPTR                                          0105
*       GEN(LINK EP=IKJEFF19);      /* USE GENERAL FAIL ROUTINE      */
         LINK EP=IKJEFF19
*     END;                                                         0107
*   RFY                                                            0108
*    (R1) UNRSTD;                                                  0108
*                                                                  0108
@RF00095 DS    0H                                                  0109
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR SUBMIT COMMAND                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*   IF FIBCID=FIBSUBMT THEN         /* ONLY CLOSE INTRDR IF SUBMIT 0109
*                                      COMMAND WAS ISSUED            */
         CLC   FIBCID(2,FIBCMPTR),@CH00514                         0109
         BNE   @RF00109                                            0109
*     DO;                           /* DO CLOSE CHECKING             */
*       IF FIBCUSER^=ZEROADDR THEN  /* IF SUBMIT HAS CREATED ITS   0111
*                                      CONTROL TABLE                 */
         SLR   @06,@06                                             0111
         L     @04,FIBCUSER(,FIBCMPTR)                             0111
         CR    @04,@06                                             0111
         BE    @RF00111                                            0111
*         DO;                       /* CHKCONTB                      */
*           CONLIST=FIBCUSER;       /* USE LOCAL PTR TO CONTROL TABLE*/
         LR    CONLIST,@04                                         0113
*           IF CTACBPT^=ZEROADDR THEN/* IF THE INTRDR DATA SET IS  0114
*                                      OPEN                          */
         C     @06,CTACBPT(,CONLIST)                               0114
         BE    @RF00114                                            0114
*DOCALL:                            /* LABEL FOR DO/END GROUP        */
*             DO;                                                  0115
*                                                                  0115
DOCALL   DS    0H                                                  0116
*               /*****************************************************/
*               /*                                                   */
*               /* CLOSE SUBMIT'S INTERNAL READER DATA SET IF IT IS  */
*               /* OPEN                                              */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0116
*               HTCODE=CLOSCODE;    /* TELL IKJEFF15 TO CLOSE THE  0116
*                                      INTRDR                        */
         L     @01,HTPTR(,CONLIST)                                 0116
         MVI   HTCODE(@01),X'04'                                   0116
*               MTKEY1SW=OFF;       /* NOW IN KEY 0, NOT KEY 1       */
         L     @01,MSGPTR(,CONLIST)                                0117
         NI    MTKEY1SW(@01),B'11110111'                           0117
*               CALL IKJEFF15       /* GO TO SUBMIT OUTPUT INIT    0118
*                                      MODULE                        */
*                   (CONTAB);       /* PARAM IS SUBMIT CONTROL TABLE */
         ST    CONLIST,@AL00001                                    0118
         L     @15,CLOSERPT(,CONLIST)                              0118
         LA    @01,@AL00001                                        0118
         BALR  @14,@15                                             0118
*             END DOCALL;                                          0119
*         END;                      /* END CODE TO CHECK SUBMIT'S  0120
*                                      CONTROL TABLE                 */
@RF00114 DS    0H                                                  0121
*     END;                          /* END CODE TO CHECK FOR CLOSE   */
@RF00111 DS    0H                                                  0122
*   IF R3^=EC12 THEN                /* CHECK IF SDWA PROVIDED      0122
*                                                            @ZA20346*/
@RF00109 C     R3,@CF00043                                         0122
         BE    @RF00122                                            0122
*     DO;                           /* IF YES, SETUP SDWA FOR RET  0123
*                                                            @ZA20346*/
*       DO;                         /* SETRP WKAREA(SDWAPTR)DUMP(NO)R
*                                      C(SDWAPSTI)                   */
*         RESPECIFY                                                0125
*          (GPR00P,                                                0125
*           GPR01P,                                                0125
*           GPR14P,                                                0125
*           GPR15P) RSTD;                                          0125
*         GPR01P=SDWAPTR;                                          0126
         LR    GPR01P,SDWAPTR                                      0126
*         GPR01P->SDWARCDE=SDWAPSTI;/* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'10'                              0127
*         GPR01P->SDWAREQ='0'B;     /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0128
*         RESPECIFY                                                0129
*          (GPR00P,                                                0129
*           GPR01P,                                                0129
*           GPR14P,                                                0129
*           GPR15P) UNRSTD;                                        0129
*       END;                        /*                       @ZA20346*/
*       GEN(L 13,SAVE1+4);          /* RELOAD SAVEAREA CHAIN PTR   0131
*                                                            @ZA20346*/
         L 13,SAVE1+4
*     END;                          /*                       @ZA20346*/
*   R14=SAVE14;                     /* RELOAD RETURN POINT IN R14  0133
*                                                            @ZA20346*/
@RF00122 L     R14,SAVE14                                          0133
*   GEN;                                                           0134
*                              /* FREEMAIN WORKAREA          @ZA20346*/
          L 0,@SIZDATD         /* SUBPOOL AND LENGTH         @ZA20346*/
          LR 1,10              /* ADDRESS OF AREA            @ZA20346*/
          FREEMAIN R,LV=(0),A=(1) /*                         @ZA20346*/
*   IF R3^=EC12 THEN                /* CHECK IF SDWA PROVIDED      0135
*                                                            @ZA20346*/
         C     R3,@CF00043                                         0135
         BE    @RF00135                                            0135
*     GEN(RETURN (14,12));          /* IF YES, RESTORE REGS  @ZA20346*/
         RETURN (14,12)
*   ELSE                                                           0137
*     RETURN CODE(SDWAPSTI);        /* INDICATE PREVENT FURTHER STAI
*                                      PROCESSING                    */
         B     @RC00135                                            0137
@RF00135 LA    @15,16                                              0137
@EL00001 DS    0H                                                  0137
@EF00001 DS    0H                                                  0137
@ER00001 BR    @14                                                 0137
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0138
*     GPR01P PTR(31) REG(1),                                       0138
*     GPR14P PTR(31) REG(14),                                      0138
*     GPR15P PTR(31) REG(15);                                      0138
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0139
*     I031F FIXED(31) BASED,                                       0139
*     I031P PTR(31) BASED,                                         0139
*     I015F FIXED(15) BASED,                                       0139
*     I015P PTR(15) BASED,                                         0139
*     I008P PTR(8) BASED,                                          0139
*     I001C CHAR(1) BASED;          /* DECLARES FOR MACRO EXPANS.  0139
*                                                            @ZA20346*/
*   END IKJEFF20                                                   0140
*                                                                  0140
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJEFFGF)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFIB)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFB2)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFCT)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFHT)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                       */
*                                                                  0140
*       ;                                                          0140
         B     @EL00001                                            0140
@DATA    DS    0H
@CH00034 DC    H'31'
@CH00514 DC    XL2'0001'
@CH00518 DC    XL2'0003'
@DATD    DSECT
         DS    0F
@AL00001 DS    1A
IKJEFF20 CSECT
         DS    0F
@CF00043 DC    F'12'
@DATD    DSECT
         DS    0D
ABNDCODE DS    F
SAVE14   DS    F
GFPLPTR  DS    AL4
         ORG   GFPLPTR
GFPHIGH  DS    BL1
         ORG   GFPLPTR+4
GFPARMS  DS    CL44
         ORG   GFPARMS
GFCBPTR  DS    AL4
GFRCODE  DS    FL4
GF02PTR  DS    AL4
GFCALLID DS    FL2
GFBITS   DS    BL1
         ORG   GFBITS
GFKEYN08 DS    BL1
GFSUBSYS EQU   GFBITS+0
GFWTPSW  EQU   GFBITS+0
@NM00055 EQU   GFBITS+0
         ORG   GFPARMS+15
@NM00056 DS    AL1
GFCPPLP  DS    AL4
GFECBP   DS    AL4
GFDSNLEN DS    FL2
GFPGMNL  DS    FL2
GFDSNP   DS    AL4
GFPGMNP  DS    AL4
@NM00057 DS    AL4
@NM00058 DS    AL4
         ORG   GFPARMS+44
SAVE1    DS    18F
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFF20 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PATCH    DS    CL51
         ORG   PATCH
PTCHINIT DC    17CL3'ZAP'
         ORG   PATCH+51
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FIBCMPTR EQU   @05
CONLIST  EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R5       EQU   @05
R10      EQU   @10
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
SDWAPTR  EQU   @07
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
SVCPLPTR EQU   0
IKJEFF15 EQU   0
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTATRM  EQU   ECTSWS
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
FIBMAINP EQU   0
FIBPARMS EQU   0
FIBCPARM EQU   0
FIBCID   EQU   FIBCPARM+2
FIBCPPLC EQU   FIBCPARM+12
FIBCPPLE EQU   FIBCPARM+24
FIBFLAGS EQU   FIBCPARM+36
FIBCUSER EQU   FIBCPARM+40
CONTAB   EQU   0
CLOSERPT EQU   CONTAB+20
HISTPT   EQU   CONTAB+24
MSGLISPT EQU   CONTAB+36
CTACBPT  EQU   CONTAB+72
HISTORY  EQU   0
WHATMOD  EQU   HISTORY+12
JCLSWITS EQU   HISTORY+16
PRIORJCL EQU   JCLSWITS
PVERB    EQU   PRIORJCL
PDTYPE   EQU   PRIORJCL+2
PMISC    EQU   PRIORJCL+3
CURRJCL  EQU   JCLSWITS+4
CVERB    EQU   CURRJCL
CDTYPE   EQU   CURRJCL+2
CMISC    EQU   CURRJCL+3
STATICSW EQU   HISTORY+24
GENL     EQU   STATICSW
TAKEXITS EQU   STATICSW+1
CODEFLD  EQU   STATICSW+3
HTCODE   EQU   CODEFLD
DLMONJCL EQU   HISTORY+32
HTSWITCH EQU   HISTORY+34
HTACCNTP EQU   HISTORY+40
MSGTABLE EQU   0
TMCTPTR  EQU   MSGTABLE+4
ECBPTR   EQU   MSGTABLE+8
@NM00074 EQU   MSGTABLE+12
SW       EQU   MSGTABLE+20
MTKEY1SW EQU   SW
RETMSG   EQU   MSGTABLE+21
SW2      EQU   MSGTABLE+24
MTINSRTS EQU   MSGTABLE+44
L1       EQU   MTINSRTS
L2       EQU   MTINSRTS+4
L3       EQU   MTINSRTS+8
L4       EQU   MTINSRTS+12
RET      EQU   0
HTACCNTI EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
MSGECB   EQU   0
MSGTMCT  EQU   0
FIBPTR   EQU   HISTPT
HTPTR    EQU   HISTPT
MSGPTR   EQU   MSGLISPT
ECTPTR   EQU   FIBCPPLE
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
RETCHAR  EQU   RET+2
RETSIZE  EQU   RET
MSGRTN   EQU   MSGTABLE+60
VAR4     EQU   MTINSRTS+13
HIGHL4   EQU   L4
VAR3     EQU   MTINSRTS+9
HIGHL3   EQU   L3
VAR2     EQU   MTINSRTS+5
HIGHL2   EQU   L2
VAR1     EQU   MTINSRTS+1
HIGHL1   EQU   L1
MSGID    EQU   MSGTABLE+40
@NM00078 EQU   MSGTABLE+36
@NM00077 EQU   MSGTABLE+32
MTOLDPTR EQU   MSGTABLE+28
@NM00076 EQU   MSGTABLE+25
@NM00075 EQU   SW2
MTPGMSW  EQU   SW2
MTNPLMSW EQU   SW2
MTNOXQSW EQU   SW2
MTDOMSW  EQU   SW2
MT2OLDSW EQU   SW2
MTNHEXSW EQU   SW
MTWTPSW  EQU   SW
MTJOBISW EQU   SW
MTHEXSW  EQU   SW
MTWTOSW  EQU   SW
MTPUTLSW EQU   SW
MTNOIDSW EQU   SW
MSGCSECT EQU   MSGTABLE+16
MTHIGH   EQU   @NM00074
MTCPPL   EQU   TMCTPTR
LISTPTR  EQU   MSGTABLE
@NM00073 EQU   HISTORY+50
HTACNTC2 EQU   HISTORY+48
HTACNTC1 EQU   HISTORY+46
HTACCNTL EQU   HISTORY+44
@NM00072 EQU   HISTORY+36
@NM00071 EQU   HISTORY+35
@NM00070 EQU   HTSWITCH
HTDLMSW  EQU   HTSWITCH
HTDLM    EQU   DLMONJCL
@NM00069 EQU   HISTORY+28
OPOFF    EQU   STATICSW+2
@NM00068 EQU   TAKEXITS
COMNTX   EQU   TAKEXITS
JESX     EQU   TAKEXITS
NULLX    EQU   TAKEXITS
CMDX     EQU   TAKEXITS
DDX      EQU   TAKEXITS
EXECX    EQU   TAKEXITS
JOBX     EQU   TAKEXITS
NONOTIFY EQU   GENL
FIRST    EQU   GENL
FLUSH    EQU   GENL
QUIT     EQU   GENL
CDLMFND  EQU   CMISC
CNOTHING EQU   CMISC
CCOMCON  EQU   CMISC
CVERBCOP EQU   CMISC
CNAME    EQU   CMISC
CCONERR  EQU   CMISC
COPCONEX EQU   CMISC
CCONEX   EQU   CMISC
CDDDATA  EQU   CDTYPE
CDDAST   EQU   CDTYPE
@NM00067 EQU   CVERB+1
@NM00066 EQU   CVERB+1
CJES     EQU   CVERB+1
CCOMMENT EQU   CVERB
CCOMMAND EQU   CVERB
CDD      EQU   CVERB
CEXEC    EQU   CVERB
CJOB     EQU   CVERB
CNULL    EQU   CVERB
CDATA    EQU   CVERB
CDELIM   EQU   CVERB
PDLMFND  EQU   PMISC
PNOTHING EQU   PMISC
PCOMCON  EQU   PMISC
PVERBCOP EQU   PMISC
PNAME    EQU   PMISC
PCONERR  EQU   PMISC
POPCONEX EQU   PMISC
PCONEX   EQU   PMISC
PDDDATA  EQU   PDTYPE
PDDAST   EQU   PDTYPE
@NM00065 EQU   PVERB+1
@NM00064 EQU   PVERB+1
PJES     EQU   PVERB+1
PCOMMENT EQU   PVERB
PCOMMAND EQU   PVERB
PDD      EQU   PVERB
PEXEC    EQU   PVERB
PJOB     EQU   PVERB
PNULL    EQU   PVERB
PDATA    EQU   PVERB
PDELIM   EQU   PVERB
INOINIT  EQU   WHATMOD+3
INCOMPIN EQU   WHATMOD+3
INMSG    EQU   WHATMOD+3
INDAIRIN EQU   WHATMOD+3
INWRMGR  EQU   WHATMOD+3
INEXIT   EQU   WHATMOD+3
INIDENT  EQU   WHATMOD+3
INREAD   EQU   WHATMOD+3
INGEN    EQU   WHATMOD+2
INPROMPT EQU   WHATMOD+1
INCONTRL EQU   WHATMOD
SUBTAB   EQU   HISTORY
CTIDLN   EQU   CONTAB+84
CTCMDNM  EQU   CONTAB+76
CTRPLPT  EQU   CONTAB+68
INITSAVE EQU   CONTAB+64
COMECBPT EQU   CONTAB+60
DDPTR    EQU   CONTAB+56
EXITAD   EQU   CONTAB+52
EXWORD   EQU   CONTAB+48
TMCTPT   EQU   CONTAB+44
USERIDPT EQU   CONTAB+40
JOBNAMPT EQU   CONTAB+32
CTNDSNPT EQU   CONTAB+28
STMTPT   EQU   CONTAB+16
CONTABPT EQU   CONTAB+12
TABID    EQU   CONTAB
FIBCMDBF EQU   FIBCPARM+52
@NM00063 EQU   FIBCPARM+48
@NM00062 EQU   FIBCPARM+44
@NM00061 EQU   FIBCPARM+38
FIBECTNO EQU   FIBFLAGS
FIBECTCN EQU   FIBCPARM+28
FIBCPPLP EQU   FIBCPARM+20
FIBCPPLU EQU   FIBCPARM+16
FIBPSCBL EQU   FIBCPARM+11
FIBPSCBU EQU   FIBCPARM+4
FIBCLEN  EQU   FIBCPARM
@NM00060 EQU   FIBPARMS+28
@NM00059 EQU   FIBPARMS+24
FIBLEN   EQU   FIBPARMS+22
FIBID    EQU   FIBPARMS+20
FIBMACRO EQU   FIBPARMS+12
FIBCODE  EQU   FIBPARMS+8
FIBUSER  EQU   FIBPARMS+4
FIBCPPL  EQU   FIBPARMS
FIBHIGH  EQU   FIBMAINP
@NM00054 EQU   ECT+52
@NM00053 EQU   ECT+48
@NM00052 EQU   ECT+44
@NM00051 EQU   ECTSWS2+1
@NM00050 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
@NM00049 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
@NM00048 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00047 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00046 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00045 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00044 EQU   SDWADDAT+3
@NM00043 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00042 EQU   SDWADDAT+1
@NM00041 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00040 EQU   SDWADUMP+2
@NM00039 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00038 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00037 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00036 EQU   SDWAACF3
@NM00035 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00034 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00033 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00032 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00031 EQU   SDWA+239
@NM00030 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00029 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00028 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00027 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00026 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00025 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00024 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00023 EQU   SDWAINC2
@NM00022 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00021 EQU   SDWAILC2
@NM00020 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00019 EQU   SDWANXT2
@NM00018 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00017 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00016 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00015 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00014 EQU   SDWAINC1
@NM00013 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00012 EQU   SDWAILC1
@NM00011 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00010 EQU   SDWANXT1
@NM00009 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00008 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00007 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00006 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00005 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00004 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00003 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00002 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00001 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00135 EQU   @EL00001
@ENDDATA EQU   *
         END   IKJEFF20,(C'PLS2120',0701,78076)
