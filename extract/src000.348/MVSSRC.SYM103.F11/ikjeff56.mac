         TITLE 'IKJEFF56 - CANCEL/STATUS LEAD AND CLEAN-UP ROUTINE     *
                        '
IKJEFF56 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IKJEFF56  74.114'                                 0001
IKJEFFCA DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00109-IKJEFFCA)
         ENTRY IKJEFFCA
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @15,@01,16(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0045
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY POINT FOR STATUS COMMAND                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0045
*   SWITCHES=0;                                                    0045
         MVI   SWITCHES,X'00'                                      0045
*   STATUSSW='1'B;                  /* COMMAND IS STATUS, NOT CANCEL */
*                                                                  0046
         OI    STATUSSW,B'01000000'                                0046
*   /*****************************************************************/
*   /*                                                               */
*   /* USE SVC 100 TO CHANGE TO PROTECT KEY 1 AND ATTACH NEXT        */
*   /* CANCEL/STATUS MODULE WITH STAI EXIT = IKJEFF20                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0047
*BEGIN:                             /* CODE COMMON TO CANCEL AND   0047
*                                      STATUS COMMANDS               */
*   RFY                                                            0047
*     R1 RSTD;                                                     0047
BEGIN    DS    0H                                                  0048
*   CPPLPTR=R1;                     /* PICK UP POINTER TO CPPL       */
         LR    CPPLPTR,R1                                          0048
*   RFY                                                            0049
*     R1 UNRSTD;                                                   0049
*   FIBPARMS=FIBPARMS&&FIBPARMS;    /* ZERO OUT FIB PARAMETER AREA   */
         XC    FIBPARMS(32),FIBPARMS                               0050
*   FIBMACRO=' ';                   /* BLANK ERROR MACRO NAME        */
         MVI   FIBMACRO+1,C' '                                     0051
         MVC   FIBMACRO+2(6),FIBMACRO+1                            0051
         MVI   FIBMACRO,C' '                                       0051
*   FIBCPPL=CPPLPTR;                /* PUT A POINTER TO CPPL IN    0052
*                                      FIBCPPL FIELD                 */
         ST    CPPLPTR,FIBCPPL                                     0052
*   IF STATUSSW='1'B THEN           /* IF STATUS WAS ENTERED THEN    */
         TM    STATUSSW,B'01000000'                                0053
         BNO   @RF00053                                            0053
*     FIBID=FIBST;                  /* TELL SVC 100 TO ATTACH STATUS
*                                      MODULE                        */
         MVC   FIBID(2),@CH00092                                   0054
*   ELSE                            /* ELSE, CANCEL MODULE           */
*     FIBID=FIBCANCL;                                              0055
         B     @RC00053                                            0055
@RF00053 MVC   FIBID(2),@CH00086                                   0055
*   FIBMAINP=ADDR(FIBPARMS);        /* POINTER TO FIB PARM LIST      */
@RC00053 LA    @10,FIBPARMS                                        0056
         ST    @10,FIBMAINP                                        0056
*   FIBHIGH='1'B;                   /* STANDARD LINKAGE CONVENTION   */
         OI    FIBHIGH,B'10000000'                                 0057
*   RFY                                                            0058
*     R1 RSTD;                                                     0058
*   R1=ADDR(FIBMAINP);              /* REGISTER 1 -> PTR -> FIBPARMS */
         LA    R1,FIBMAINP                                         0059
*   SVC(100);                       /* SVC FOR FIB, PROF AND OPER TSO
*                                      COMMANDS....IKJEFFS0 PL/S   0060
*                                      MACRO                         */
         SVC   100                                                 0060
*   RFY                                                            0061
*     R1 UNRSTD;                                                   0061
*                                                                  0062
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK RETURN CODE FROM SVC 100 AND CANCEL/STATUS MODULES      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0062
*   RFY                                                            0062
*     R15 RSTD;                                                    0062
*   RETCODE=R15;                    /* SAVE RETURN CODE              */
         ST    R15,RETCODE                                         0063
*   RFY                                                            0064
*     R15 UNRSTD;                                                  0064
*   IF RETCODE^=RCOK THEN           /* CHECK FIRST FOR NON-ZERO R.C. */
         L     @10,RETCODE                                         0065
         LTR   @10,@10                                             0065
         BZ    @RF00065                                            0065
*BADRC:                                                            0066
*     DO;                           /* CODE FOR NON-ZERO R.C.        */
BADRC    DS    0H                                                  0067
*       CPECB=0;                    /* ZERO COMMUNICATIONS ECB       */
         SLR   @10,@10                                             0067
         ST    @10,CPECB                                           0067
*/********************************************************************/
*/*                                                                  */
*/* ISSUE AN ERROR MESSAGE IF A MESSAGE WASN'T ISSUED ALREADY.       */
*/*                                                                  */
*/*  RETURN CODE = 12 MEANS ANOTHER CANCEL/STATUS MODULE DETECTED    */
*/*  AN ERROR AND ISSUED A MESSAGE.  RCABEND AREA IN RETURN CODE     */
*/*  NON-ZERO (AND OTHER FIELDS ZERO) MEANS AN ABEND OCCURRED AND    */
*/*  SVC 100 RETURNED CONTROL TO THIS MODULE AFTER THE RECOVERY      */
*/*  PROCESSING - BUT CONTROL SHOULD BE RETURNED TO THE CALLER       */
*/*  OF THE CANCEL/STATUS CP, NOT HERE.                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0068
*       IF^((RETCODE=RCCALLEE)×(RCABEND^='000000000000'B&RCHIGH=0& 0068
*           RCRETCOD='000000000000'B)) THEN/* CHECK FOR OTHER FIELDS
*                                      ZERO ON ABEND TO RULE OUT CASE
*                                      OF VERY HIGH RETURN CODE      */
         CLC   RETCODE(4),@CF00044                                 0068
         BE    @RF00068                                            0068
         MVC   @TS00001(2),RCABEND                                 0068
         NC    @TS00001(2),@CB00214                                0068
         BZ    @RT00068                                            0068
         CLI   RCHIGH,0                                            0068
         BNE   @RT00068                                            0068
         MVC   @TS00001(2),RCRETCOD                                0068
         NC    @TS00001(2),@CB00216                                0068
         BZ    @RF00068                                            0068
@RT00068 DS    0H                                                  0069
*ERRMSG:                            /* LABEL FOR DO/END GROUP        */
*         DO;                                                      0069
ERRMSG   DS    0H                                                  0070
*           MSGTABLE=MSGTABLE&&MSGTABLE;/* CLEAR MSGPARM AREA        */
         XC    MSGTABLE(64),MSGTABLE                               0070
*           IF RETCODE=FIBNOFIB THEN/* IF USER UNAUTHORIZED TO USE 0071
*                                      THE FIB COMMANDS              */
         CLC   RETCODE(4),@CF00097                                 0071
         BNE   @RF00071                                            0071
*             MSGID=IDMSGA;         /* ID OF MSG FOR UNAUTHORIZED    */
         MVC   MSGID(4),@CC00048                                   0072
*           ELSE                    /* ELSE MACRO ERROR IN SVC100 (OR
*                                      UNEXPECTED RETURN CODE)       */
*             DO;                                                  0073
         B     @RC00071                                            0073
@RF00071 DS    0H                                                  0074
*               IF RETCODE^=FIBBADMC THEN/* PUT THE UNEXPECTED R.C.
*                                      IN MSG 259I-FIBMACRO IS BLANK */
         L     @10,RETCODE                                         0074
         CH    @10,@CH00099                                        0074
         BE    @RF00074                                            0074
*                 FIBCODE=RETCODE;                                 0075
         ST    @10,FIBCODE                                         0075
*               MSGID=IDMSGB;       /* ID OF MSG TO BE PUT OUT       */
@RF00074 MVC   MSGID(4),@CC00050                                   0076
*               L2=LENGTH(FIBMACRO);                               0077
         MVI   L2,X'08'                                            0077
*               VAR2=ADDR(FIBMACRO);/* PUT ADDR OF MACRO NAME IN   0078
*                                      MSGLIST                       */
         LA    @10,FIBMACRO                                        0078
         STCM  @10,7,VAR2                                          0078
*               L3=RCHEX;           /* INDICATE LENGTH OF VARIABLE IS
*                                      FOUR AND NEEDS CONVERSION     */
         MVI   L3,X'84'                                            0079
*               VAR3=ADDR(FIBCODE); /* PICK UP ADDRESS OF THE BAD  0080
*                                      RETURN CODE                   */
         LA    @10,FIBCODE                                         0080
         STCM  @10,7,VAR3                                          0080
*             END;                                                 0081
*                                                                  0082
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE ERROR MESSAGE - 251I OR 259I                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0082
*           L1=LENGTH(ECTPCMD);                                    0082
@RC00071 MVI   L1,X'08'                                            0082
*           VAR1=ADDR(ECTPCMD);     /* COMMAND NAME                  */
         L     @10,ECTPTR(,CPPLPTR)                                0083
         LA    @10,ECTPCMD(,@10)                                   0083
         STCM  @10,7,VAR1                                          0083
*           MTCPPL=FIBCPPL;         /* PUT CPPL POINTER IN MSGLIST   */
         L     @10,FIBCPPL                                         0084
         ST    @10,MTCPPL                                          0084
*           MTPUTLSW='1'B;          /* INDICATES PUTLINE, NOT PUTGET */
         OI    MTPUTLSW,B'01000000'                                0085
*           ECBPTR=ADDR(CPECB);     /* PICK UP ADDR OF COMMUNICATIONS
*                                      ECB                           */
         LA    @10,CPECB                                           0086
         ST    @10,ECBPTR                                          0086
*           LISTPTR=ADDR(MSGCSECT); /* PICK UP POINTER TO THE MESSAGE
*                                      SECTION OF MSGTABLE           */
         LA    @10,MSGCSECT                                        0087
         ST    @10,LISTPTR                                         0087
*           RFY                                                    0088
*            (R0,                                                  0088
*             R1) RSTD;                                            0088
*           GEN(LOAD EP=IKJEFF55);  /* ONLY LOAD IF NEED ERROR MSG   */
         LOAD EP=IKJEFF55
*           MSGCSECT=R0;            /* SAVE ADDRESS OF MSG CSECT     */
         ST    R0,MSGCSECT                                         0090
*           MTHIGH='1'B;            /* FOR STANDARD LINKAGE CONVEN.  */
         OI    MTHIGH,B'10000000'                                  0091
*           R1=ADDR(MSGTABLE);      /* PICK UP ADDR OF MSG PARMS     */
         LA    R1,MSGTABLE                                         0092
*           GEN(LINK EP=IKJEFF02);  /* ISSUE THE ERROR MESSAGE       */
         LINK EP=IKJEFF02
*           RFY                                                    0094
*            (R0,                                                  0094
*             R1) UNRSTD;                                          0094
*           GEN(DELETE EP=IKJEFF55);/* UNLOAD THE MESSAGE CSECT      */
         DELETE EP=IKJEFF55
*           RETCODE=RCTMPBAD;       /* SET RETURN CODE FOR ERRORS  0096
*                                      DETECTED WITHIN THE MODULE    */
         MVC   RETCODE(4),@CF00044                                 0096
*         END ERRMSG;                                              0097
*                                                                  0098
*       /*************************************************************/
*       /*                                                           */
*       /* FLUSH CLIST STACK IF ANY ERROR FOUND                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0098
*       RFY                                                        0098
*        (STPLPTR) RSTD;            /* RESTRICT R1                   */
@RF00068 DS    0H                                                  0099
*       STPLPTR=ADDR(STPLCORE);     /* PICK UP ADDR OF STACK PARAM 0099
*                                      LIST=I/O PARAMETER LIST (IOPL)*/
         LA    STPLPTR,STPLCORE                                    0099
*       STPLUPT=CPPLUPT;            /* PICK UP UPT ADDR OUT OF CPPL  */
         L     @10,CPPLUPT(,CPPLPTR)                               0100
         ST    @10,STPLUPT(,STPLPTR)                               0100
*       STPLECT=CPPLECT;            /* PICK UP ECT ADDR OUT OF CPPL  */
         L     @10,CPPLECT(,CPPLPTR)                               0101
         ST    @10,STPLECT(,STPLPTR)                               0101
*       STPLECB=ADDR(CPECB);        /* PICK UP ADDR OF COMM ECB      */
         LA    @10,CPECB                                           0102
         ST    @10,STPLECB(,STPLPTR)                               0102
*       STPLSTPB=ADDR(STPBCORE);    /* PT TO AREA FOR STACK PARAM  0103
*                                      BLOCK                         */
         LA    @10,STPBCORE                                        0103
         ST    @10,STPLSTPB(,STPLPTR)                              0103
*       STPBCORE=STPBLIST;          /* COPY LIST FORM OF STACK (STPB)
*                                      INTO REENTRANT CORE           */
         MVC   STPBCORE(16),STPBLIST                               0104
*       GENERATE;                                                  0105
*                                   /* FLUSH STACK AND CLEAR INPUT */
            STACK MF=(E,(1))        FLUSH STACK         (DELETE=ALL)
            TCLEARQ INPUT           CLEAR INPUT
*       RFY                                                        0106
*        (STPLPTR) UNRSTD;          /* UNRESTRICT R1                 */
*     END BADRC;                                                   0107
*   RETURN CODE(RETCODE);           /* PASS RETURN CODE BACK TO    0108
*                                      CALLER                        */
*                                                                  0108
@RF00065 L     @10,RETCODE                                         0108
         L     @13,4(,@13)                                         0108
         L     @00,@SIZDATD                                        0108
         LR    @01,@11                                             0108
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0108
         L     @14,12(,@13)                                        0108
         LM    @00,@12,20(@13)                                     0108
         BR    @14                                                 0108
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY POINT FOR CANCEL COMMAND                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*IKJEFFCA:                                                         0109
*   ENTRY(DUMMY);                   /* ENTRY FOR CANCEL              */
@EP00109 MVC   @PC00001(4),0(@01)                                  0109
*   SWITCHES=0;                     /* INITIALIZE SWITCHES           */
         MVI   SWITCHES,X'00'                                      0110
*   CANCELSW='1'B;                  /* TURN ON SWITCH TO SAY CANCEL
*                                      IS CALLER                     */
         OI    CANCELSW,B'10000000'                                0111
*   GO TO BEGIN;                    /* GO INTO MOTHER PROCEDURE      */
         B     BEGIN                                               0112
*   END IKJEFF56                                                   0113
*                                                                  0113
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJEFFIB)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFMT)                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJSTPL )                                       */
*/*%INCLUDE SYSLIB  (IKJSTPB )                                       */
*/*%INCLUDE SYSLIB  (IKJEFFS0)                                       */
*                                                                  0113
*       ;                                                          0113
@DATA    DS    0H
@CH00099 DC    H'84'
@CH00086 DC    XL2'0002'
@CH00092 DC    XL2'0005'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
IKJEFF56 CSECT
         DS    0F
@CF00044 DC    F'12'
@CF00097 DC    F'80'
@DATD    DSECT
         DS    0D
RETCODE  DS    AL4
         ORG   RETCODE
RCHIGH   DS    AL1
RCABEND  DS    BL2
RCRETCOD EQU   RETCODE+2
         ORG   RETCODE+4
CPECB    DS    F
FIBMAINP DS    AL4
         ORG   FIBMAINP
FIBHIGH  DS    BL1
         ORG   FIBMAINP+4
SWITCHES DS    AL1
         ORG   SWITCHES
CANCELSW DS    BL1
STATUSSW EQU   SWITCHES+0
@NM00001 EQU   SWITCHES+0
         ORG   SWITCHES+1
@TS00001 DS    CL2
         DS    CL1
FIBPARMS DS    CL32
         ORG   FIBPARMS
FIBCPPL  DS    AL4
FIBUSER  DS    AL4
FIBCODE  DS    AL4
FIBMACRO DS    CL8
FIBID    DS    FL2
FIBLEN   DS    FL2
@NM00002 DS    AL4
@NM00003 DS    AL4
         ORG   FIBPARMS+32
MSGTABLE DS    CL64
         ORG   MSGTABLE
LISTPTR  DS    AL4
TMCTPTR  DS    AL4
         ORG   TMCTPTR
MTCPPL   DS    AL4
         ORG   MSGTABLE+8
ECBPTR   DS    AL4
@NM00004 DS    AL4
         ORG   @NM00004
MTHIGH   DS    BL1
         ORG   MSGTABLE+16
MSGCSECT DS    AL4
SW       DS    AL1
         ORG   SW
MTNOIDSW DS    BL1
MTPUTLSW EQU   SW+0
MTWTOSW  EQU   SW+0
MTHEXSW  EQU   SW+0
MTKEY1SW EQU   SW+0
MTJOBISW EQU   SW+0
MTWTPSW  EQU   SW+0
MTNHEXSW EQU   SW+0
         ORG   MSGTABLE+21
RETMSG   DS    AL3
SW2      DS    AL1
         ORG   SW2
MT2OLDSW DS    BL1
MTDOMSW  EQU   SW2+0
MTNOXQSW EQU   SW2+0
MTNPLMSW EQU   SW2+0
MTPGMSW  EQU   SW2+0
@NM00005 EQU   SW2+0
         ORG   MSGTABLE+25
@NM00006 DS    AL3
MTOLDPTR DS    AL4
@NM00007 DS    AL4
@NM00008 DS    AL4
MSGID    DS    CL4
MTINSRTS DS    CL16
         ORG   MTINSRTS
L1       DS    AL1
         ORG   L1
HIGHL1   DS    BL1
         ORG   MTINSRTS+1
VAR1     DS    AL3
L2       DS    AL1
         ORG   L2
HIGHL2   DS    BL1
         ORG   MTINSRTS+5
VAR2     DS    AL3
L3       DS    AL1
         ORG   L3
HIGHL3   DS    BL1
         ORG   MTINSRTS+9
VAR3     DS    AL3
L4       DS    AL1
         ORG   L4
HIGHL4   DS    BL1
         ORG   MTINSRTS+13
VAR4     DS    AL3
         ORG   MSGTABLE+60
MSGRTN   DS    AL4
         ORG   MSGTABLE+64
STPLCORE DS    CL16
STPBCORE DS    CL16
IKJEFF56 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00048 DC    C'251I'
@CC00050 DC    C'259I'
@CB00214 DC    B'1111111111110000'
@CB00216 DC    B'0000111111111111'
PATCH    DS    CL36
         ORG   PATCH
PTCHINIT DC    12CL3'ZAP'
         ORG   PATCH+36
IKJEFF56 CSECT
*                                   /* NOW CREATE STPBLIST */
STPBLIST  STACK DELETE=ALL,MF=L     CREATES NON-REENT STPB
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFF56 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CPPLPTR  EQU   @04
R0       EQU   @00
R1       EQU   @01
STPLPTR  EQU   @01
R15      EQU   @15
RET      EQU   0
CPPL     EQU   0
CPPLUPT  EQU   CPPL+4
CPPLECT  EQU   CPPL+12
ECT      EQU   0
ECTPCMD  EQU   ECT+12
ECTSWS   EQU   ECT+28
STPL     EQU   0
STPLUPT  EQU   STPL
STPLECT  EQU   STPL+4
STPLECB  EQU   STPL+8
STPLSTPB EQU   STPL+12
STPB     EQU   0
MSGECB   EQU   0
MSGTMCT  EQU   0
DUMMY    EQU   0
ECTPTR   EQU   CPPLECT
STPBPTR  EQU   STPLSTPB
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
STPBOTDD EQU   STPB+12
STPBINDD EQU   STPB+8
STPBALSD EQU   STPB+4
@NM00011 EQU   STPB
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
@NM00010 EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00009 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
CPPLPSCB EQU   CPPL+8
CPPLCBUF EQU   CPPL
RETCHAR  EQU   RET+2
RETSIZE  EQU   RET
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IKJEFF56,(C'PL/S-II',0503,74114)
