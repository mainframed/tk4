         TITLE 'IKJEFLGB, LOGON ESTAI EXIT/RETRY                       *
                        '
IKJEFLGB CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFLGB  78.177'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
LWASWAR  EQU   4
LWAMSPE  EQU   16
INITDONE EQU  4
NQUSERID EQU  8
DQUSERID EQU  12
SCHEDULE EQU  16
BCDONE   EQU  20
TERMINAT EQU  24
NQDQ0    EQU  0
NQDQ4    EQU  4
NQDQ8    EQU  8
STARTP2  EQU  16
INITRDY  EQU  20
ENDTASK  EQU  24
         EJECT
         EJECT
         EJECT
         EJECT
         EJECT
         EJECT
*        R3 = R14;                     /*SAVE RETURN ADDRESS         */
         LR    R3,R14                                              0057
*        IF R0 = 12                    /* SDWA DOES NOT EXIST        */
*          THEN                        /* TRUE                       */
         C     R0,@CF01190                                         0058
         BNE   @RF00058                                            0058
*            DO;                                                   0059
*              LWAPTR1 = R2;           /* GET LWA PTR FROM SDWA      */
         LR    LWAPTR1,R2                                          0060
*              EWAPTR1 = LWAGBWKA;     /* GET EWA PTR FROM LWA       */
         L     EWAPTR1,LWAGBWKA(,LWAPTR1)                          0061
*              EWASDWA = '0'B;         /* SDWA DOES NOT EXIST        */
         NI    EWASDWA(EWAPTR1),B'10111111'                        0062
*              ABNDCODE = R1;          /* SAVE ABEND COMPLETION CODE */
         ST    R1,ABNDCODE(,EWAPTR1)                               0063
*            END;                                                  0064
*          ELSE                        /* SDWA EXISTS                */
*            DO;                                                   0065
         B     @RC00058                                            0065
@RF00058 DS    0H                                                  0066
*              SDWAPTR = R1;           /* SET PTR TO SDWA            */
         LR    SDWAPTR,R1                                          0066
*              LWAPTR1 = SDWAPARM;     /* SET PTR TO LWA             */
         L     LWAPTR1,SDWAPARM(,SDWAPTR)                          0067
*              EWAPTR1 = LWAGBWKA;     /* SET PTR TO EWA             */
         L     EWAPTR1,LWAGBWKA(,LWAPTR1)                          0068
*              ABNDCODE = SDWAABCC;    /* SAVE ABEND COMPLETION CODE */
         MVC   ABNDCODE(4,EWAPTR1),SDWAABCC(SDWAPTR)               0069
*              EWASDWA = '1'B;         /* SDWA EXISTS                */
         OI    EWASDWA(EWAPTR1),B'01000000'                        0070
*              EWASAVE(7) = R1;        /* SAVE SDWA ADDR FOR RETRY   */
         ST    R1,EWASAVE+24(,EWAPTR1)                             0071
*              IF (SDWAPCHK = '1'B ×   /* PROGRAM CHECK ABEND OR     */
*                 SDWARKEY = '1'B ×    /*   PSW RESTART OR   @ZA13833*/
*                 LWAINX1 = '1'B)      /* ABEND IN IKJEFLD   @ZA13833*/
*                THEN                  /* YES                        */
         TM    SDWAPCHK(SDWAPTR),B'01100000'                       0072
         BNZ   @RT00072                                            0072
         TM    LWAINX1(LWAPTR1),B'00000010'                        0072
         BNO   @RF00072                                            0072
@RT00072 DS    0H                                                  0073
*                  DO;                                             0073
*                     R13 = ADDR(EWASAVE2(1)); /* POINT TO SA        */
         LA    R13,EWASAVE2(,EWAPTR1)                              0074
*                     R1 = ADDR(MSGESTAI); /* POINT TO LIST          */
         LA    R1,MSGESTAI(,EWAPTR1)                               0075
*                     GEN(MVC  0(SDUMPSL,R1),SDUMPS); /* INIT      0076
*                                       SDUMP LIST OVERLAY MSG AREA  */
         MVC  0(SDUMPSL,R1),SDUMPS
*                     GEN(SDUMP MF=(E,(1))); /* ISSUE SDUMP          */
         SDUMP MF=(E,(1))
*                  END;                                            0078
*              SDWARCRD = '1'B;        /* INDICATE ERROR RECORDING   */
@RF00072 OI    SDWARCRD(SDWAPTR),B'10000000'                       0079
*              SDWAMODN = 'IKJEFLC';   /* OFFENDING MODULE           */
         MVI   SDWAMODN+7(SDWAPTR),C' '                            0080
         MVC   SDWAMODN(7,SDWAPTR),@CC01613                        0080
*              SDWAREXN = 'IKJEFLGB';  /* RECOVERY ROUTINE           */
         MVC   SDWAREXN(8,SDWAPTR),@CC01614                        0081
*            END;                                                  0082
*        R14 = R3;                     /*RESTORE RETURN ADDRESS      */
@RC00058 LR    R14,R3                                              0083
*        RESPECIFY (R0,R1,R2,R3) UNRSTD;                           0084
*                                                                  0084
*        EWARETRY = '0'B;              /* DEFAULT OF NO RETRY        */
         NI    EWARETRY(EWAPTR1),B'01111111'                       0085
*        R13 = ADDR(EWASAVE2(1));      /* POINT TO SAVE AREA         */
         LA    R13,EWASAVE2(,EWAPTR1)                              0086
*        EWASAVE(2) = 0;               /* ZERO OUT BACKWARD SA PTR   */
         SLR   @11,@11                                             0087
         ST    @11,EWASAVE+4(,EWAPTR1)                             0087
*        EWASAVE(4) = R14;             /* SAVE REG 14                */
         ST    R14,EWASAVE+12(,EWAPTR1)                            0088
*        EWASAVE2(2) = ADDR(EWASAVE);  /* CHAIN BACK POINTER         */
         ST    EWAPTR1,EWASAVE2+4(,EWAPTR1)                        0089
*        RESPECIFY R4 RSTD;            /* RESTRICT REG 4 FOR MSGINIT */
*        R4 = ABNDCODE;                /* R4=ABEND CODE              */
         L     R4,ABNDCODE(,EWAPTR1)                               0091
*        R4=R4 & '00FFF000'X;          /* ZERO OUT HIGH ORDER BIT    */
*                                                                  0092
         N     R4,@CF01615                                         0092
*        IF R4 ^= 0                    /* IF SYSTEM ABEND CODE       */
*          THEN                        /* YES, SYSTEM ABEND CODE     */
         CR    R4,@11                                              0093
         BE    @RF00093                                            0093
*            DO;                       /* ACT ON SYSTEM ABEND CODE   */
*              CALL MSGINIT;           /* INIT OPER×TERM MSGS        */
         BAL   @14,MSGINIT                                         0095
*              IF LWAPHASE = '0'B      /* WAS LOGON IN PHASE I ?     */
*                THEN                  /* YES, LOGON WAS IN PHASE I  */
         TM    LWAPHASE(LWAPTR1),B'00010000'                       0096
         BNZ   @RF00096                                            0096
*                 CALL PHASE1;         /* HANDLE PHASE I PROGLEMS    */
         BAL   @14,PHASE1                                          0097
*                ELSE                  /* NO, LOGON WAS IN PHASE II  */
*                 CALL PHASE2;         /* HANDLE PHASE II PROBLEMS   */
         B     @RC00096                                            0098
@RF00096 BAL   @14,PHASE2                                          0098
*            END;                                                  0099
@RC00096 DS    0H                                                  0100
*        RESPECIFY R4 UNRSTD;          /* UNRESTRICT REG 4           */
*                                                                  0100
@RF00093 DS    0H                                                  0101
*        IF LWALTBC = '0'B             /* IF NOT LISTBC ERR          */
*          THEN                        /*   TRUE                     */
         TM    LWALTBC(LWAPTR1),B'00001000'                        0101
         BNZ   @RF00101                                            0101
*            DO;                                                   0102
*              IF LWAPDCB ^= 0         /* UADS DCB OPEN ?            */
*                THEN                  /* YES                        */
         L     @11,LWAPDCB(,LWAPTR1)                               0103
         LTR   @11,@11                                             0103
         BZ    @RF00103                                            0103
*                  CALL CLOSUADS;      /* CLOSE UADS DCB             */
*                                                                  0104
         BAL   @14,CLOSUADS                                        0104
*              IF LWARNML ^= 0         /* IS THERE USERID TO DEQ     */
*                THEN DO;                                          0105
@RF00103 CLI   LWARNML(LWAPTR1),0                                  0105
         BE    @RF00105                                            0105
*                  LWARNML = ''B;      /* DEQ IS DONE                */
*                                                                  0107
         MVI   LWARNML(LWAPTR1),X'00'                              0107
*                  DO; /* DEQ (SYSIKJUA,LWARNM,LWARNML,SYSTEM) RET(HAVE
* TCB(LWASTCB->LOGONTCB) MF(E,DEQA,COMPLETE)*/                     0108
*                     RFY GPR01F RESTRICTED;                       0109
*                     DEQA(1:20)=DEQA(1:20)&&DEQA(1:20);           0110
         XC    DEQA(20,EWAPTR1),DEQA(EWAPTR1)                      0110
*                     DEQA03(1)=DEQA03(1) × '00000001'B;  /*TURN ON OPT
*ONS*/                DEQA04(1)=LWARNML; /*SET RNAME LENGTH*/      0111
         OI    DEQA03(EWAPTR1),B'00000001'                         0111
         IC    @11,LWARNML(,LWAPTR1)                               0112
         STC   @11,DEQA04(,EWAPTR1)                                0112
*                     DEQA05(1)=DEQA05(1) × '01000001'B;  /*TURN ON OPT
*ONS*/                DEQA06(1)=ADDR(SYSIKJUA);                    0113
         OI    DEQA05(EWAPTR1),B'01000001'                         0113
         LA    @11,SYSIKJUA                                        0114
         ST    @11,DEQA06(,EWAPTR1)                                0114
*                     DEQA07(1)=ADDR(LWARNM);                      0115
         LA    @11,LWARNM(,LWAPTR1)                                0115
         ST    @11,DEQA07(,EWAPTR1)                                0115
*                     DEQA03(1,1)='1'B;  /*SET END OF LIST BIT*/   0116
         OI    DEQA03(EWAPTR1),B'10000000'                         0116
*                     DEQA01=ADDR(LWASTCB->LOGONTCB);              0117
         L     @11,LWASTCB(,LWAPTR1)                               0117
         ST    @11,DEQA01(,EWAPTR1)                                0117
*                     GPR01F=ADDR(DEQA02);                         0118
         LA    GPR01F,DEQA02(,EWAPTR1)                             0118
*                     SVC (48);                                    0119
         SVC   48                                                  0119
*                     RFY GPR01F UNRESTRICTED;                     0120
*                  END; /* DEQ (SYSIKJUA,LWARNM,LWARNML,SYSTEM) RET(HAV
*) TCB(LWASTCB->LOGONTCB) MF(E,DEQA,COMPLETE)*/                  END;
*                                                                  0121
*                DO; /* DEQ (QNAME,RNAME,8,SYSTEM) RET(HAVE) MF(E,DEQA,
*OMPLETE)*/         RFY GPR01F RESTRICTED;                         0123
@RF00105 DS    0H                                                  0124
*                   DEQA(1:20)=DEQA(1:20)&&DEQA(1:20);             0125
         XC    DEQA(20,EWAPTR1),DEQA(EWAPTR1)                      0125
*                   DEQA04(1)=8; /*SET RNAME LENGTH*/              0126
         MVI   DEQA04(EWAPTR1),X'08'                               0126
*                   DEQA05(1)=DEQA05(1) × '01000001'B;  /*TURN ON OPTIO
*S*/                DEQA06(1)=ADDR(QNAME);                         0127
         OI    DEQA05(EWAPTR1),B'01000001'                         0127
         LA    @11,QNAME                                           0128
         ST    @11,DEQA06(,EWAPTR1)                                0128
*                   DEQA07(1)=ADDR(RNAME);                         0129
         LA    @11,RNAME                                           0129
         ST    @11,DEQA07(,EWAPTR1)                                0129
*                   DEQA03(1,1:2)='11'B;  /*SET END OF LIST BITS*/ 0130
         OI    DEQA03(EWAPTR1),B'11000000'                         0130
*                   GPR01F=ADDR(DEQA02);                           0131
         LA    GPR01F,DEQA02(,EWAPTR1)                             0131
*                   SVC (48);                                      0132
         SVC   48                                                  0132
*                   RFY GPR01F UNRESTRICTED;                       0133
*                END; /* DEQ (QNAME,RNAME,8,SYSTEM) RET(HAVE) MF(E,DEQA
*COMPLETE)*//* COND DEQ UADS      @ZA13806*/                       0134
*              GEN( STAX );            /* CANCEL ATTENTION EXIT      */
*                                                                  0135
          STAX
*              CALL FREECORE;          /* FREE ANY CORE IN SP0,1 & 78*/
*                                                                  0136
         BAL   @14,FREECORE                                        0136
*             IF LWARACF = YES        /* RACINIT DONE IN LE  @Z40RQKC*/
*              THEN DO;                                   /*@Z40RQKC*/
         TM    LWARACF(LWAPTR1),B'01000000'                        0137
         BNO   @RF00137                                            0137
*                LWARACF = NO;        /* RACINIT IS COMPLETE @Z40RQKC*/
*                                                                  0139
         NI    LWARACF(LWAPTR1),B'10111111'                        0139
*                DO; /* RACINIT  MF(E,RACLST,COMPLETE) ENVIR(DELETE)*/
*                RACLST = RACLST && RACLST;/*INIT. LIST*/          0141
         XC    RACLST(48,EWAPTR1),RACLST(EWAPTR1)                  0141
*                RACLST01 = 48;/*PARM LIST LENGTH*/                0142
         MVI   RACLST01(EWAPTR1),X'30'                             0142
*                RACLST02 = '00000000'B;/*RESERVED FIELD*/         0143
         MVI   RACLST02(EWAPTR1),B'00000000'                       0143
*                RACLST03 = '00000000'B;/*RESERVED FIELD*/         0144
         MVI   RACLST03(EWAPTR1),B'00000000'                       0144
*                RACLST04 = '10000000'B; /*SET ENVIR FLAGS*/       0145
         MVI   RACLST04(EWAPTR1),B'10000000'                       0145
*                RESPECIFY GPR01P RESTRICTED;                      0146
*                GPR01P = ADDR(RACLST); /*ADDR OF RACINIT LIST*/   0147
         LA    GPR01P,RACLST(,EWAPTR1)                             0147
*                IF CVTRAC^=0 & RCVTRNA='0'B THEN/*RACF ACTIVE*/   0148
         L     @11,CVTPTR                                          0148
         L     @11,CVTRAC(,@11)                                    0148
         LTR   @11,@11                                             0148
         BZ    @RF00148                                            0148
         TM    RCVTRNA(@11),B'10000000'                            0148
         BNZ   @RF00148                                            0148
*                SVC (131); /*ISSUE RACINIT SVC*/                  0149
         SVC   131                                                 0149
*                ELSE/*RACF NOT ACTIVE*/                           0150
*                DO;                                               0150
         B     @RC00148                                            0150
@RF00148 DS    0H                                                  0151
*                RFY GPR15P RSTD;                                  0151
*                GPR15P=32;/*SET RACF NOT ACTIVE RET CODE*/        0152
         LA    GPR15P,32                                           0152
*                RFY GPR15P UNRSTD;                                0153
*                END;                                              0154
*                RESPECIFY GPR01P UNRESTRICTED;                    0155
@RC00148 DS    0H                                                  0156
*                END; /* RACINIT  MF(E,RACLST,COMPLETE) ENVIR(DELETE)*/
*                END;                                     /*@Z40RQKC*/
*            END;                                                  0158
@RF00137 DS    0H                                                  0159
*GEN(EJECT);                                                       0159
@RF00101 DS    0H                                                  0159
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME-                                                     */
*/*      IKJEFLGB MAIN LINE CONTINUED                                */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      ESTAI TERMINATION VIA SETRP                                 */
*/*                                                                  */
*/********************************************************************/
*        RESPECIFY (R0,R14,R15) RSTD;                              0160
*        IF EWARETRY = '1'B            /* RETRY SPECIFIED            */
*          THEN                        /* YES, RETRY SPECIFIED       */
         TM    EWARETRY(EWAPTR1),B'10000000'                       0161
         BNO   @RF00161                                            0161
*            LWABEND = '1'B;           /* INDICATE ABEND FOR LB AND LD*
         OI    LWABEND(LWAPTR1),B'00000010'                        0162
*          ELSE                        /* NO, RETRY NOT WANTED       */
*            LWABEND = '0'B;           /* TELLS LB NO REATTACH OF LC */
*                                                                  0163
         B     @RC00161                                            0163
@RF00161 NI    LWABEND(LWAPTR1),B'11111101'                        0163
*        R15 = 0;                      /* INDICATE NO RETRY          */
*                                                                  0164
@RC00161 SLR   R15,R15                                             0164
*        IF EWASDWA = '0'B             /* IF NO SDWA                 */
*          THEN                        /* TRUE                       */
         TM    EWASDWA(EWAPTR1),B'01000000'                        0165
         BNZ   @RF00165                                            0165
*            DO;                                                   0166
*              R14 = EWASAVE(4);       /* RESTORE REG 14             */
         L     R14,EWASAVE+12(,EWAPTR1)                            0167
*              RETURN;                 /* RETURN                     */
@EL00001 DS    0H                                                  0168
@EF00001 DS    0H                                                  0168
@ER00001 BR    @14                                                 0168
*            END;                                                  0169
*        RESPECIFY (R0,R14,R15) UNRSTD;                            0170
@RF00165 DS    0H                                                  0171
*        R13 = ADDR(EWASAVE);          /* POINT R13 FOR SETRP RETURN */
*                                                                  0171
         LR    R13,EWAPTR1                                         0171
*        DO;  /*SETRP WKAREA(SDWAPTR)REGS(14)RC(0)*/               0172
*          RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;           0173
*          GPR01P = SDWAPTR;                                       0174
         LR    GPR01P,SDWAPTR                                      0174
*          GPR01P->SDWARCDE = 0;  /*SAVE RC VALUE*/                0175
         MVI   SDWARCDE(GPR01P),X'00'                              0175
*          GEN (RETURN (14));                                      0176
         RETURN (14)
*          RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;         0177
*        END;    /* NO RETRY          */                           0178
*                                                                  0178
*        RETURN;                       /* RETURN                     */
         B     @EL00001                                            0179
*        RESPECIFY SDWA BASED(SDWAPTR);                            0180
*GEN(EJECT);                                                       0181
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGNAME-                                                          */
*/*      MSGINIT                                                     */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      SET UP ERROR MESSAGE DEFAULST                               */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*      IF USERID OR PROCNAME FIELDS ARE NULL THEN SET THEM TO      */
*/*      'UNKNOWN'. CONVERT ABEND CODE IN SDWA TO EBCDIC. SET DEFAULT*/
*/*      SESSION STATUS TEXT TO 'TERMINATED'.                        */
*/*                                                                  */
*/*INPUT-                                                            */
*/*      CSCB, LWA, SDWA, EWA                                        */
*/*                                                                  */
*/*OUTPUT-                                                           */
*/*      USERTEXT, PROCTEXT, CODETEXT, RETRYTXT                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0182
*MSGINIT:                                                          0182
*        PROCEDURE OPTIONS(NOSAVEAREA,NOSAVE);                     0182
*                                                                  0182
         B     @PB00002                                            0182
MSGINIT  DS    0H                                                  0183
*        MSGINI14 = R14;               /* RESTORE REG                */
*                                                                  0183
         ST    R14,MSGINI14(,EWAPTR1)                              0183
*        RESPECIFY CHAIN BASED(CHAINPTR); /*  CHANGE BASE OF CSCB    */
*        RESPECIFY (R4,CHAINPTR) RSTD;                             0185
*        CHAINPTR = JSELCSCB;          /*  ADDR OF CSCB FROM JSEL    */
*                                                                  0186
         L     @11,LWAJSEL(,LWAPTR1)                               0186
         L     CHAINPTR,JSELCSCB(,@11)                             0186
*        IF CHKEY(1) = ' ' ×           /* IS USERID FIELD NULL ?     */
*           CHKEY(1) = '00'X           /* IS USERID FIELD NULL ?     */
*          THEN                        /* YES IT IS NULL             */
         CLI   CHKEY(CHAINPTR),C' '                                0187
         BE    @RT00187                                            0187
         CLI   CHKEY(CHAINPTR),X'00'                               0187
         BNE   @RF00187                                            0187
@RT00187 DS    0H                                                  0188
*            USERTEXT = 'UNKNOWN ';    /* INDICATE USER IS UNKNOWN   */
         MVC   USERTEXT(8,EWAPTR1),@CC01641                        0188
*          ELSE                        /* NO, THE USER IS KNOWN      */
*            USERTEXT = CHKEY;         /* SAVE USERID                */
*                                                                  0189
         B     @RC00187                                            0189
@RF00187 MVC   USERTEXT(8,EWAPTR1),CHKEY(CHAINPTR)                 0189
*        IF CHCLS(1) = '00'X ×         /* IS PROC FIELD NULL ?       */
*           CHCLS(1) = ' '             /* IS PROC FIELD NULL ?       */
*          THEN                        /* YES IT IS NULL             */
@RC00187 CLI   CHCLS(CHAINPTR),X'00'                               0190
         BE    @RT00190                                            0190
         CLI   CHCLS(CHAINPTR),C' '                                0190
         BNE   @RF00190                                            0190
@RT00190 DS    0H                                                  0191
*            PROCTEXT = 'UNKNOWN ';    /* INDICATE PROC IS UNKNOWN   */
         MVC   PROCTEXT(8,EWAPTR1),@CC01641                        0191
*          ELSE                        /* NO, PROC IS KNOWN          */
*            PROCTEXT = CHCLS;         /* SAVE PROC NAME             */
*                                                                  0192
         B     @RC00190                                            0192
@RF00190 MVC   PROCTEXT(8,EWAPTR1),CHCLS(CHAINPTR)                 0192
*        GEN( SRL R4,8);               /* RIGHT JUSTIFY SYSTEM ABND  */
@RC00190 DS    0H                                                  0193
          SRL R4,8
*        ABNDCODE = R4;                /* MOVE AVND CODE TO CORE     */
         ST    R4,ABNDCODE(,EWAPTR1)                               0194
*        UNPK(CODETEXT,ABNDCODE(3:4)); /* 'NNNN'X TO 'FNFNFNFN'X     */
         UNPK  CODETEXT(3,EWAPTR1),ABNDCODE+2(2,EWAPTR1)           0195
*        TR(CODETEXT,TRTABLE(1));      /* 'FA'X-> 'C1'X = 'A' ETC    */
*                                                                  0196
         TR    CODETEXT(3,EWAPTR1),TRTABLE                         0196
*        RETRYTXT = 'TERMINATED      ';/* DEFAULT IS TERM. SESSION   */
*                                                                  0197
         MVC   RETRYTXT(16,EWAPTR1),@CC01644                       0197
*        RESPECIFY CHAIN BASED(JSELCSCB); /* CHANGE BASE OF CSCB     */
*        RESPECIFY (R4,CHAINPTR) UNRSTD;                           0199
*        R14 = MSGINI14;               /* RESTORE REG 14             */
*                                                                  0200
         L     R14,MSGINI14(,EWAPTR1)                              0200
*END MSGINIT;                                                      0201
@EL00002 DS    0H                                                  0201
@EF00002 DS    0H                                                  0201
@ER00002 BR    @14                                                 0201
@PB00002 DS    0H                                                  0202
*GEN(EJECT);                                                       0202
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME-                                                     */
*/*      PHASE1                                                      */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      HANDLE PHASE I (IKJEFLC, LE, LEA, LI,LD) ABEND              */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*      INCREMENT RETRY COUNTER IN LWA.RETRY WILL NOT BE            */
*/*      ATTEMPTED IF CANCEL OR DISCONNECT IS INDICATED, IF FOUR     */
*/*      RETRIES HAVE ALREADY BEEN SCHEDULED, OR IF CURRENT ABEND    */
*/*      SAME AS LAST ONE. IF ALL INDICATIONS ALLOW RETRY, SET RETRY */
*/*      BIT AND SET MESSAGE TEXT TO 'ATTEMPTING RETRY'. SEND MSGS   */
*/*      INDICATING INSTALLATION EXIT ERROR OR SYSTEM ERROR.         */
*/*                                                                  */
*/*INPUT-                                                            */
*/*      LWA, CSCB, EWA                                              */
*/*                                                                  */
*/*OUTPUT-                                                           */
*/*      EWARETRY, LWALPCNT, RETRYTXT                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0203
*PHASE1:                                                           0203
*        PROCEDURE OPTIONS(NOSAVEAREA,NOSAVE);                     0203
*                                                                  0203
         B     @PB00003                                            0203
PHASE1   DS    0H                                                  0204
*        PHASE114 = R14;               /*  SAVE REG 14               */
*                                                                  0204
         ST    R14,PHASE114(,EWAPTR1)                              0204
*        LWALPCNT = LWALPCNT + 1;      /* INCREMENT RETRY COUNT      */
         LA    @11,1                                               0205
         AL    @11,LWALPCNT(,LWAPTR1)                              0205
         ST    @11,LWALPCNT(,LWAPTR1)                              0205
*        IF EWASDWA = '1'B &           /* SDWA EXIST ?               */
*          (CHDISC = '0'B &            /* NO CANCEL INDICATION       */
*           LWADISC = '0'B &           /* NO TERMINATION INDICATION  */
*           LWALPCNT < 5 &             /* VALID # OF RETRIES         */
*           (LWAPSW = '0'B ×           /* PREVIOUS ABND NOT PSWRSTRT */
*            SDWARKEY = '0'B) &        /*   OR CURRENT NOT PSWRESTART*/
*           (LWAMCK = '0'B ×           /* PREVIOUS ABND NOT MCHK     */
*            SDWAMCHK = '0'B) &        /*   OR CURRENT NOT MCHK      */
*           (LWAPCK = '0'B ×           /* PREVIOUS ABND NOT PGM CHK  */
*            SDWAPCHK = '0'B))         /*   OR CURRENT NOT PGM CHK   */
*          THEN                        /* ALL ABOVE CONDITIONS TRUE  */
         TM    EWASDWA(EWAPTR1),B'01000000'                        0206
         BNO   @RF00206                                            0206
         L     @08,LWAJSEL(,LWAPTR1)                               0206
         L     @08,JSELCSCB(,@08)                                  0206
         TM    CHDISC(@08),B'00100000'                             0206
         BNZ   @RF00206                                            0206
         TM    LWADISC(LWAPTR1),B'00010000'                        0206
         BNZ   @RF00206                                            0206
         C     @11,@CF00751                                        0206
         BNL   @RF00206                                            0206
         TM    LWAPSW(LWAPTR1),B'00001000'                         0206
         BZ    @GL00007                                            0206
         TM    SDWARKEY(SDWAPTR),B'00100000'                       0206
         BNZ   @RF00206                                            0206
@GL00007 TM    LWAMCK(LWAPTR1),B'00000010'                         0206
         BZ    @GL00006                                            0206
         TM    SDWAMCHK(SDWAPTR),B'10000000'                       0206
         BNZ   @RF00206                                            0206
@GL00006 TM    LWAPCK(LWAPTR1),B'00000100'                         0206
         BZ    @RT00206                                            0206
         TM    SDWAPCHK(SDWAPTR),B'01000000'                       0206
         BNZ   @RF00206                                            0206
@RT00206 DS    0H                                                  0207
*            DO;                       /* WE WANT RETRY              */
*              EWARETRY = '1'B;        /* INDICATE RETRY             */
         OI    EWARETRY(EWAPTR1),B'10000000'                       0208
*              RETRYTXT =                                          0209
*                'ATTEMPTING RETRY';   /* INDICATE RETRY FOR MESG    */
         MVC   RETRYTXT(16,EWAPTR1),@CC01502                       0209
*            END;                                                  0210
*                                                                  0210
*        IF SDWARKEY = '1'B            /* PSW RESTART ?              */
*          THEN                        /* YES                        */
@RF00206 TM    SDWARKEY(SDWAPTR),B'00100000'                       0211
         BNO   @RF00211                                            0211
*            LWAPSW = '1'B;            /* THEN INDICATE SO IN LWA    */
*                                                                  0212
         OI    LWAPSW(LWAPTR1),B'00001000'                         0212
*        IF SDWAMCHK = '1'B            /* MACHINE CHECK ?            */
*          THEN                        /* YES                        */
@RF00211 TM    SDWAMCHK(SDWAPTR),B'10000000'                       0213
         BNO   @RF00213                                            0213
*            LWAMCK = '1'B;            /* THEN INDICATE SO IN LWA    */
*                                                                  0214
         OI    LWAMCK(LWAPTR1),B'00000010'                         0214
*        IF SDWAPCHK = '1'B            /* PROGRAM CHECK ?            */
*          THEN                        /* YES                        */
@RF00213 TM    SDWAPCHK(SDWAPTR),B'01000000'                       0215
         BNO   @RF00215                                            0215
*            LWAPCK = '1'B;            /* THEN INDICATE SO IN LWA    */
*                                                                  0216
         OI    LWAPCK(LWAPTR1),B'00000100'                         0216
*        IF LWAINX1 = '1'B             /* INSTALLATION EXIT ERROR ?  */
*          THEN                        /* YES                        */
@RF00215 TM    LWAINX1(LWAPTR1),B'00000010'                        0217
         BNO   @RF00217                                            0217
*            CALL INSTLERR;            /* SEND ERR MSGS              */
         BAL   @14,INSTLERR                                        0218
*          ELSE                        /* NO, IT IS SYSTEM ERROR     */
*            CALL SYSTMERR;            /* SEND SYSTEM ERR MSG        */
*                                                                  0219
         B     @RC00217                                            0219
@RF00217 BAL   @14,SYSTMERR                                        0219
*        R14 = PHASE114;              /* RESTORE REG 14             */
*                                                                  0220
@RC00217 L     R14,PHASE114(,EWAPTR1)                              0220
*END PHASE1;                                                       0221
@EL00003 DS    0H                                                  0221
@EF00003 DS    0H                                                  0221
@ER00003 BR    @14                                                 0221
@PB00003 DS    0H                                                  0222
*GEN(EJECT);                                                       0222
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME-                                                     */
*/*      PHASE2                                                      */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      HANDLE PHASE 2(IKJEFLH,LISTBC)ABENDS                        */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*      IF LISTBC WAS IN PROGRESS AT TIME OF ABEND SEND MSG TO      */
*/*      TERMINAL, IF NOT SEND SYSTEM ERROR MESSAGE.                 */
*/*                                                                  */
*/*INPUT-                                                            */
*/*      LWA, EWA                                                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0223
*PHASE2:                                                           0223
*        PROCEDURE OPTIONS(NOSAVEAREA,NOSAVE);                     0223
*                                                                  0223
         B     @PB00004                                            0223
PHASE2   DS    0H                                                  0224
*        PHASE214 = R14;               /*  SAVE REG 14               */
*                                                                  0224
         ST    R14,PHASE214(,EWAPTR1)                              0224
*        IF LWALTBC = '1'B             /* WAS LISTBC PROCESSING ?    */
*          THEN                        /* YES                        */
         TM    LWALTBC(LWAPTR1),B'00001000'                        0225
         BNO   @RF00225                                            0225
*            DO;                                                   0226
*              MSG56406 = IKJ56406;    /* COPY MSG TO WORK AREA      */
         MVC   MSG56406(69,EWAPTR1),IKJ56406                       0227
*              RESPECIFY (R0,R1) RSTD;                             0228
*              R1 = ADDR(MSGESTAI);    /* GET ADDR OF MSG FOR TPUT   */
         LA    R1,MSGESTAI(,EWAPTR1)                               0229
*              R0 = LENGTH(IKJ56406);  /* LENGTH OF MSG FOR TPUT     */
         LA    R0,69                                               0230
*              GEN(TPUT (1),(0),BREAKIN);/* SEND MSG TO TERMINAL     */
         TPUT (1),(0),BREAKIN
*              RESPECIFY (R0,R1) UNRSTD;                           0232
*            END;                                                  0233
*          ELSE                        /* NO                         */
*            CALL SYSTMERR;            /* SEND SYSTEM ERR MESSAGE    */
*                                                                  0234
         B     @RC00225                                            0234
@RF00225 BAL   @14,SYSTMERR                                        0234
*        R14 = PHASE214;               /* RESTORE REG 14             */
*                                                                  0235
@RC00225 L     R14,PHASE214(,EWAPTR1)                              0235
*END PHASE2;                                                       0236
@EL00004 DS    0H                                                  0236
@EF00004 DS    0H                                                  0236
@ER00004 BR    @14                                                 0236
@PB00004 DS    0H                                                  0237
*GEN(EJECT);                                                       0237
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME-                                                     */
*/*      INSTLERR                                                    */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      SEND 'INSTALLATION ERROR' ERROR MESSAGES TO THE TERMINAL    */
*/*      AND THE OPERATOR                                            */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*      BUILD MESSAGES FROM DEFAULT MESSAGE TEXT AND SEND THE MSGS  */
*/*                                                                  */
*/*INPUT-                                                            */
*/*      EWA                                                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0238
*INSTLERR:                                                         0238
*        PROCEDURE OPTIONS(NOSAVEAREA,NOSAVE);                     0238
*                                                                  0238
         B     @PB00005                                            0238
INSTLERR DS    0H                                                  0239
*        INSTLE14 = R14;               /*  SAVE REG 14               */
*                                                                  0239
         ST    R14,INSTLE14(,EWAPTR1)                              0239
*        MSG56451 = IKJ56451;          /* COPY MSG TO WORK AREA      */
         MVC   MSG56451(61,EWAPTR1),IKJ56451                       0240
*        RET56451 = RETRYTXT;          /* INSERT RETRY TEXT          */
         MVC   RET56451(16,EWAPTR1),RETRYTXT(EWAPTR1)              0241
*        COD56451 = CODETEXT;          /* INSERT ABEND CODE          */
         MVC   COD56451(3,EWAPTR1),CODETEXT(EWAPTR1)               0242
*        RESPECIFY (R0,R1) RSTD;                                   0243
*        R1 = ADDR(MSGESTAI);          /* ADDR OF MSG FOR TPUT       */
         LA    R1,MSGESTAI(,EWAPTR1)                               0244
*        R0 = LENGTH(IKJ56451);        /* LENGTH OF MSG FOR TPUT     */
         LA    R0,61                                               0245
*        GEN( TPUT (1),(0),BREAKIN );  /* SEND TO TERMINAL           */
*                                                                  0246
          TPUT (1),(0),BREAKIN
*        MSG603 = IKJ603;              /* COPY WTO MSG TO WORK AREA  */
         MVC   MSG603(71,EWAPTR1),IKJ603                           0247
*        RET603 = RETRYTXT;            /* INSERT RETRY CODE          */
         MVC   RET603(16,EWAPTR1),RETRYTXT(EWAPTR1)                0248
*        CODE603 = CODETEXT;           /* INSERT ABEND CODE          */
         MVC   CODE603(3,EWAPTR1),CODETEXT(EWAPTR1)                0249
*        R1 = ADDR(MSGESTAI);          /* ADDR OF MSG FOR WTO        */
         LA    R1,MSGESTAI(,EWAPTR1)                               0250
*        GEN( WTO MF=(E,(1)) );        /* SEND MSG TO OPERATOR       */
          WTO MF=(E,(1))
*        RESPECIFY (R0,R1) UNRSTD;                                 0252
*                                                                  0252
*        R14 = INSTLE14;               /* RESTORE REG 14             */
         L     R14,INSTLE14(,EWAPTR1)                              0253
*END INSTLERR;                                                     0254
@EL00005 DS    0H                                                  0254
@EF00005 DS    0H                                                  0254
@ER00005 BR    @14                                                 0254
@PB00005 DS    0H                                                  0255
*GEN(EJECT);                                                       0255
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME-                                                     */
*/*      SYSTMERR                                                    */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      SEND SYSTEM ERROR MESSAGES TO TERMINAL&OPERATOR             */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*      BUILD MESSAGES FROM DEFAULT MESSAGE TEXT AND SEND THE MSGS  */
*/*                                                                  */
*/*INPUT-                                                            */
*/*      EWA                                                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0256
*SYSTMERR:                                                         0256
*        PROCEDURE OPTIONS(NOSAVEAREA,NOSAVE);                     0256
*                                                                  0256
         B     @PB00006                                            0256
SYSTMERR DS    0H                                                  0257
*        SYSTME14 = R14;               /*  SAVE REG 14               */
*                                                                  0257
         ST    R14,SYSTME14(,EWAPTR1)                              0257
*        MSG56452 = IKJ56452;          /* COPY MSG TO MSG WORK AREA  */
         MVC   MSG56452(46,EWAPTR1),IKJ56452                       0258
*        RET56452 = RETRYTXT;          /* INSERT RETRY TEXT          */
         MVC   RET56452(16,EWAPTR1),RETRYTXT(EWAPTR1)              0259
*        RESPECIFY (R0,R1) RSTD;                                   0260
*        R1 = ADDR(MSGESTAI);          /* GET ADDR OF MSG FOR TPUT   */
         LA    R1,MSGESTAI(,EWAPTR1)                               0261
*        R0 = LENGTH(MSG56452);        /* GET LENGTH OF MSG FOR TPUT */
         LA    R0,46                                               0262
*        GEN( TPUT (1),(0),BREAKIN );  /* SEND MSG TO TERMINAL       */
*                                                                  0263
          TPUT (1),(0),BREAKIN
*        MSG601 = IKJ601;              /* COPY WTO MSG TO MSG WA     */
         MVC   MSG601(83,EWAPTR1),IKJ601                           0264
*        RET601 = RETRYTXT;            /* INSERT RETRY TEXT          */
         MVC   RET601(16,EWAPTR1),RETRYTXT(EWAPTR1)                0265
*        CODE601 = CODETEXT;           /* INSERT ABEND CODE          */
         MVC   CODE601(3,EWAPTR1),CODETEXT(EWAPTR1)                0266
*        USER601 = USERTEXT;           /* INSERT USERID              */
         MVC   USER601(8,EWAPTR1),USERTEXT(EWAPTR1)                0267
*        PROC601 = PROCTEXT;           /* INSERT PROC NAME           */
         MVC   PROC601(8,EWAPTR1),PROCTEXT(EWAPTR1)                0268
*        R1 = ADDR(MSGESTAI);          /* GET ADDR OF MSG FOR WTO    */
         LA    R1,MSGESTAI(,EWAPTR1)                               0269
*        GEN( WTO MF=(E,(1)) );        /* SEND MSG TO TERMINAL       */
          WTO MF=(E,(1))
*        RESPECIFY (R0,R1) UNRSTD;                                 0271
*                                                                  0271
*        R14 = SYSTME14;               /* RESTORE REG 14             */
*                                                                  0272
         L     R14,SYSTME14(,EWAPTR1)                              0272
*END SYSTMERR;                                                     0273
@EL00006 DS    0H                                                  0273
@EF00006 DS    0H                                                  0273
@ER00006 BR    @14                                                 0273
@PB00006 DS    0H                                                  0274
*GEN(EJECT);                                                       0274
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME-                                                     */
*/*      CLOSUADS                                                    */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      CLOSE UADS DCB                                              */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*      CLOSE UADS DCB                                              */
*/*                                                                  */
*/*INPUT-                                                            */
*/*      LWAPDCB=POINTER TO UADS DCB                                 */
*/*                                                                  */
*/********************************************************************/
*                                                                  0275
*CLOSUADS:                                                         0275
*        PROCEDURE OPTIONS(NOSAVEAREA,NOSAVE);                     0275
*                                                                  0275
         B     @PB00007                                            0275
CLOSUADS DS    0H                                                  0276
*        CLOSUA14 = R14;               /*  SAVE REG 14               */
*                                                                  0276
         ST    R14,CLOSUA14(,EWAPTR1)                              0276
*        UADCLOSE = UADSCLOS;          /* INIT CLOSE LIST FORM       */
         L     @11,UADSCLOS                                        0277
         ST    @11,UADCLOSE(,EWAPTR1)                              0277
*        RESPECIFY (R1,R2) RSTD;                                   0278
*        R1 = ADDR(UADCLOSE);          /* R1=ADDR OF L-FORM CLOSE    */
         LA    R1,UADCLOSE(,EWAPTR1)                               0279
*        R2 = LWAPDCB;                 /* R2=ADDR OF UADS DCB        */
         L     R2,LWAPDCB(,LWAPTR1)                                0280
*        GEN( CLOSE 0(2),MF=(E,(1)) );  /* CLOSE UADS                */
          CLOSE 0(2),MF=(E,(1))
*        RESPECIFY (R1,R2) UNRSTD;                                 0282
*        LWAPDCB = 0;                  /* ZERO POINTER TO UADS DCB   */
         SLR   @11,@11                                             0283
         ST    @11,LWAPDCB(,LWAPTR1)                               0283
*        R14 = CLOSUA14;               /* RESTORE REG 14             */
*                                                                  0284
         L     R14,CLOSUA14(,EWAPTR1)                              0284
*END CLOSUADS;                                                     0285
@EL00007 DS    0H                                                  0285
@EF00007 DS    0H                                                  0285
@ER00007 BR    @14                                                 0285
@PB00007 DS    0H                                                  0286
*GEN(EJECT);                                                       0286
         EJECT
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME-                                                     */
*/*      FREECORE                                                    */
*/*                                                                  */
*/*FUNCTION-                                                         */
*/*      FREE SUBPOOLS 0, 1 & 78 TO FREE ANY ALLOCATED CORE.         */
*/*                                                                  */
*/*OPERATION-                                                        */
*/*      ISSUE FREEMAINS ON SUBPOOLS 0&1&78.                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0287
*FREECORE:                                                         0287
*        PROCEDURE OPTIONS(NOSAVEAREA,NOSAVE);                     0287
*                                                                  0287
         B     @PB00008                                            0287
FREECORE DS    0H                                                  0288
*        FREEC14 = R14;                /*  SAVE REG 14               */
*                                                                  0288
         ST    R14,FREEC14(,EWAPTR1)                               0288
*        RESPECIFY (R1,R0) RSTD;                                   0289
*                                                                  0289
*        R1 = 0;                       /*  ZERO SUBPOOL ADDRESS     */
         SLR   R1,R1                                               0290
*        GEN( FREEMAIN R,LV=0,A=(R1),SP=1 );  /*  FREE SP 1         */
*                                                                  0291
          FREEMAIN R,LV=0,A=(R1),SP=1
*        R1 = 0;                       /*  ZERO SUBPOOL ADDRESS     */
         SLR   R1,R1                                               0292
*        GEN( FREEMAIN R,LV=0,A=(R1),SP=78);  /*  FREE SP 78        */
          FREEMAIN R,LV=0,A=(R1),SP=78
*        RESPECIFY (R0,R1) UNRSTD;                                 0294
*        R14 = FREEC14;                /*  RESTORE REG 14            */
*                                                                  0295
         L     R14,FREEC14(,EWAPTR1)                               0295
*END FREECORE;                                                     0296
@EL00008 DS    0H                                                  0296
@EF00008 DS    0H                                                  0296
@ER00008 BR    @14                                                 0296
*/********************************************************************/
*/*                                                                  */
*/*DECLARE-                                                          */
*/*          EPILOG                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0297
*                                                                  0297
*  DECLARE /*GENERAL PURPOSE REGISTERS */                          0297
*    GPR01F FIXED(31) REG(1),                                      0297
*    GPR00P PTR(31) REG(0),                                        0297
*    GPR01P PTR(31) REG(1),                                        0297
*    GPR14P PTR(31) REG(14),                                       0297
*    GPR15P PTR(31) REG(15);                                       0297
*                                                                  0297
*  DECLARE /* COMMON VARIABLES */                                  0298
*    I256C CHAR(256) BASED,                                        0298
*    I031F FIXED(31) BASED,                                        0298
*    I031P PTR(31)   BASED,                                        0298
*    I015F FIXED(15) BASED,                                        0298
*    I015P PTR(15)   BASED,                                        0298
*    I008P PTR(8)    BASED,                                        0298
*    I001C CHAR(1)   BASED;                                        0298
*END IKJEFLGB                                                      0299
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (ICHPRCVT)                                        *
*/*%INCLUDE SYSLIB  (IHASDWA )                                        *
*/*%INCLUDE SYSLIB  (IKJEFLWA)                                        *
*/*%INCLUDE SYSLIB  (IEFVJSEL)                                        *
*/*%INCLUDE SYSLIB  (IEECHAIN)                                        *
*/*%INCLUDE SYSLIB  (IKJPSCB )                                        *
*;                                                                 0299
         B     @EL00001                                            0299
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IKJEFLGB CSECT
         DS    0F
@CF00751 DC    F'5'
@CF01190 DC    F'12'
@CF01615 DC    XL4'00FFF000'
@DATD    DSECT
         DS    0D
IKJEFLGB CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC01502 DC    C'ATTEMPTING RETRY'
@CC01644 DC    C'TERMINATED      '
@CC01614 DC    C'IKJEFLGB'
@CC01641 DC    C'UNKNOWN '
@CC01613 DC    C'IKJEFLC'
SYSIKJUA DC    CL8'SYSIKJUA'
         DS    CL1
IKJ56451 DS    CL61
         ORG   IKJ56451
@NM00084 DC    CL16'IKJ56451I LOGON'
@NM00085 DC    CL16'ATTEMPTING RETRY'
@NM00086 DC    CL26', INSTALLATION EXIT ABEND'
@NM00087 DC    CL3'XXX'
         ORG   IKJ56451+61
         DS    CL3
IKJ56452 DS    CL46
         ORG   IKJ56452
@NM00090 DC    CL30'IKJ56452I SYSTEM ERROR, LOGON'
@NM00091 DC    CL16'ATTEMPTING RETRY'
         ORG   IKJ56452+46
         DS    CL2
IKJ56406 DS    CL69
         ORG   IKJ56406
@NM00093 DC    CL43'IKJ56406I ABEND WHILE PROCESSING BROADCAST '
@NM00094 DC    CL26'DATA SET, LOGON PROCEEDING'
         ORG   IKJ56406+69
QNAME    DC    CL8'SYSIKJUA'
RNAME    DC    CL8'OPENUADS'
         DS    CL3
DEQS     DS    CL20
         ORG   DEQS
DEQS01   DC    AL4(LWASTCB)
DEQS02   DS    CL12
         ORG   DEQS02+0
DEQS03   DC    B'10000001'
DEQS04   DC    AL1(0)
DEQS05   DC    B'01000001'
@NM00105 DS    CL1
DEQS06   DC    A(0)
DEQS07   DC    A(0)
         ORG   DEQS+16
DEQS08   DS    AL4
         ORG   DEQS+20
TRTABLE  DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
         DC    224CL1' '
         DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
IKJEFLGB CSECT
IKJ601   WTO   'IKJ601I TSO LOGON ATTEMPTING RETRY. ABEND XXX, USER UNK*
               NOWN , PROC UNKNOWN ',MF=L,ROUTCDE=(2,10),DESC=4
IKJ603   WTO   'IKJ603I TSO LOGON ATTEMPTING RETRY, INSTALLATION EXIT A*
               BEND XXX ',MF=L,ROUTCDE=(2,10),DESC=4
IKJEFLGB CSECT
UADSCLOS CLOSE (,),MF=L
CLOSEND  EQU    *
IKJEFLGB CSECT
SDUMPS SDUMP SDATA=(RGN,NUC,SQA,LPA),HDR='TSOLOGON ESTAI',MF=L
SDUMPSL EQU *-SDUMPS
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFLGB CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
EWAPTR1  EQU   @09
LWAPTR1  EQU   @10
SDWAPTR  EQU   @07
CHAINPTR EQU   @02
R0       EQU   @00
R1       EQU   @01
R14      EQU   @14
R15      EQU   @15
R4       EQU   @04
R2       EQU   @02
R3       EQU   @03
R13      EQU   @13
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR15P   EQU   @15
GPR00P   EQU   @00
GPR14P   EQU   @14
CVTPTR   EQU   16
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
RCVT     EQU   0
RCVTSTAT EQU   RCVT+53
RCVTRNA  EQU   RCVTSTAT
RCVTSTA1 EQU   RCVT+150
RCVTAUOP EQU   RCVT+151
RCVTFLGS EQU   RCVT+153
RCVTEROP EQU   RCVT+154
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAMCHK EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
LWA      EQU   0
LWAPSCB  EQU   LWA+24
LWAJSEL  EQU   LWA+28
LWAAECB  EQU   LWA+36
LWAPECB  EQU   LWA+40
LWASECB  EQU   LWA+44
LWALPCNT EQU   LWA+48
LWAPDCB  EQU   LWA+52
LWAFLGS  EQU   LWA+56
@NM00058 EQU   LWAFLGS
@NM00059 EQU   LWAFLGS+1
@NM00061 EQU   LWAFLGS+2
LWARACF  EQU   @NM00061
LWAPHASE EQU   @NM00061
LWAPSW   EQU   @NM00061
LWAPCK   EQU   @NM00061
LWAMCK   EQU   @NM00061
LWAFLGS4 EQU   LWAFLGS+3
LWALTBC  EQU   LWAFLGS4
LWAINX1  EQU   LWAFLGS4
LWACTLS  EQU   LWA+64
LWADISC  EQU   LWACTLS
LWABEND  EQU   LWACTLS+1
LWANAME  EQU   LWA+72
LWARNML  EQU   LWANAME
LWARNM   EQU   LWANAME+1
LWAELST  EQU   LWA+92
LWAPECBP EQU   LWAELST+4
LWASTCB  EQU   LWA+128
LWAGBWKA EQU   LWA+140
LOGONTCB EQU   0
JSEL     EQU   0
JSELCSCB EQU   JSEL+8
JSELASCB EQU   JSEL+20
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHDISC   EQU   CHACT
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHCLS    EQU   CHAIN+16
CHPKE    EQU   CHAIN+28
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
EWA      EQU   0
EWASAVE  EQU   EWA
EWASAVE2 EQU   EWA+72
EWAFLAGS EQU   EWA+144
EWARETRY EQU   EWAFLAGS
EWASDWA  EQU   EWAFLAGS
USERTEXT EQU   EWA+145
PROCTEXT EQU   EWA+153
CODETEXT EQU   EWA+161
RETRYTXT EQU   EWA+164
ABNDCODE EQU   EWA+180
PHASE114 EQU   EWA+184
PHASE214 EQU   EWA+188
INSTLE14 EQU   EWA+192
SYSTME14 EQU   EWA+196
CLOSUA14 EQU   EWA+200
FREEC14  EQU   EWA+208
MSGINI14 EQU   EWA+216
MSGESTAI EQU   EWA+220
UADCLOSE EQU   EWA+320
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTRAC   EQU   CVTS01+644
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
RACLST   EQU   MSGESTAI
RACLST01 EQU   RACLST
RACLST02 EQU   RACLST+1
RACLST03 EQU   RACLST+2
RACLST04 EQU   RACLST+3
DEQA     EQU   MSGESTAI
DEQA01   EQU   DEQA
DEQA02   EQU   DEQA+4
DEQA03   EQU   DEQA02
DEQA04   EQU   DEQA02+1
DEQA05   EQU   DEQA02+2
DEQA06   EQU   DEQA02+4
DEQA07   EQU   DEQA02+8
MSG56451 EQU   MSGESTAI
RET56451 EQU   MSG56451+16
COD56451 EQU   MSG56451+58
MSG56452 EQU   MSGESTAI
RET56452 EQU   MSG56452+30
MSG56406 EQU   MSGESTAI
MSG601   EQU   MSGESTAI
RET601   EQU   MSG601+22
CODE601  EQU   MSG601+46
USER601  EQU   MSG601+56
PROC601  EQU   MSG601+71
MSG603   EQU   MSGESTAI
RET603   EQU   MSG603+22
CODE603  EQU   MSG603+64
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00104 EQU   MSG603+67
@NM00103 EQU   MSG603+38
@NM00102 EQU   MSG603
@NM00101 EQU   MSG601+79
@NM00100 EQU   MSG601+64
@NM00099 EQU   MSG601+49
@NM00098 EQU   MSG601+38
@NM00097 EQU   MSG601
@NM00096 EQU   MSG56406+43
@NM00095 EQU   MSG56406
@NM00092 EQU   MSG56452
@NM00089 EQU   MSG56451+32
@NM00088 EQU   MSG56451
DEQA08   EQU   DEQA+16
@NM00083 EQU   DEQA02+3
RACLST15 EQU   RACLST+44
RACLST14 EQU   RACLST+40
RACLST13 EQU   RACLST+36
RACLST12 EQU   RACLST+32
RACLST11 EQU   RACLST+28
RACLST10 EQU   RACLST+24
RACLST09 EQU   RACLST+20
RACLST08 EQU   RACLST+16
RACLST07 EQU   RACLST+12
RACLST06 EQU   RACLST+8
RACLST05 EQU   RACLST+4
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00071 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
INIT14   EQU   EWA+212
DEQUSE14 EQU   EWA+204
WORK2    EQU   ABNDCODE+2
@NM00082 EQU   ABNDCODE
@NM00081 EQU   EWAFLAGS
@NM00080 EQU   EWAFLAGS
@NM00079 EQU   EWAFLAGS
@NM00078 EQU   EWAFLAGS
@NM00077 EQU   EWAFLAGS
@NM00076 EQU   EWAFLAGS
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00075 EQU   PSCB+36
@NM00074 EQU   PSCB+32
PSCBSOUT EQU   PSCB+31
PSCBSUBM EQU   PSCB+30
PSCBSUBC EQU   PSCB+29
PSCBSUBH EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00073 EQU   PSCBATR1
@NM00072 EQU   PSCBATR1
PSCBRCVR EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00070 EQU   CHSHORT+84
@NM00069 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00068 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHPCOI   EQU   CHPARM
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
JSELEOL  EQU   JSELASCB
JSELJSXL EQU   JSEL+16
JSELJCL  EQU   JSEL+12
JSELJSOL EQU   JSEL+4
@NM00067 EQU   JSEL
@NM00066 EQU   LWA+152
LWASPF   EQU   LWA+148
LWASWKA  EQU   LWA+144
LWADEST2 EQU   LWA+132
LWATCON1 EQU   LWA+124
LWATCON  EQU   LWA+120
LWATSRU1 EQU   LWA+116
LWATSRU  EQU   LWA+112
LWATCPU1 EQU   LWA+108
LWATCPU  EQU   LWA+104
LWARCDE  EQU   LWA+100
LWAEOEL  EQU   LWAPECBP
LWAAECBP EQU   LWAELST
LWANQDQ  EQU   LWA+80
LWARTCD  EQU   LWA+68
@NM00065 EQU   LWACTLS+1
LWADEST  EQU   LWACTLS+1
LWANONQ  EQU   LWACTLS+1
LWABUPT  EQU   LWACTLS+1
LWAUNIT  EQU   LWACTLS+1
LWAATR2  EQU   LWACTLS+1
LWAATR1  EQU   LWACTLS+1
@NM00064 EQU   LWACTLS
LWAJJCL  EQU   LWACTLS
LWANUAD  EQU   LWACTLS
LWANOPR  EQU   LWACTLS
LWAFAIL  EQU   LWACTLS
LWAMOUNT EQU   LWACTLS
LWAUFAI  EQU   LWACTLS
LWAPTID  EQU   LWA+60
LWAILGN  EQU   LWAFLGS4
LWATNBT  EQU   LWAFLGS4
LWASICSP EQU   LWAFLGS4
LWAQTIP  EQU   LWAFLGS4
LWANORDR EQU   LWAFLGS4
@NM00063 EQU   LWAFLGS4
LWABND   EQU   @NM00061
LWAVTAM  EQU   @NM00061
@NM00062 EQU   @NM00061
@NM00060 EQU   @NM00059
LWALS    EQU   @NM00059
LWALGB   EQU   @NM00059
LWALG    EQU   @NM00059
LWALK    EQU   @NM00059
LWALJ    EQU   @NM00059
LWALGM   EQU   @NM00059
LWALL    EQU   @NM00058
LWALH    EQU   @NM00058
LWALI    EQU   @NM00058
LWALEA   EQU   @NM00058
LWALE    EQU   @NM00058
LWALC    EQU   @NM00058
LWALB    EQU   @NM00058
LWALA    EQU   @NM00058
LWASBCE  EQU   LWASECB+3
@NM00057 EQU   LWASECB
LWAPBCE  EQU   LWAPECB+3
@NM00056 EQU   LWAPECB
LWAABCE  EQU   LWAAECB+3
@NM00055 EQU   LWAAECB
LWAPECT  EQU   LWA+32
LWAACCT  EQU   LWA+20
LWAPASCB EQU   LWA+16
LWATEST  EQU   LWA+12
LWALWA   EQU   LWA+4
LWAPPTR  EQU   LWA
@NM00054 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00053 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00052 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00051 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00050 EQU   SDWADDAT+3
@NM00049 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00048 EQU   SDWADDAT+1
@NM00047 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00046 EQU   SDWADUMP+2
@NM00045 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00044 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWACSCT EQU   SDWARECP+8
@NM00043 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00042 EQU   SDWAACF3
@NM00041 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00040 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00039 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00038 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00037 EQU   SDWA+239
@NM00036 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00035 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00034 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00033 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00032 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00031 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00030 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00029 EQU   SDWAINC2
@NM00028 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00027 EQU   SDWAILC2
@NM00026 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00025 EQU   SDWANXT2
@NM00024 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00023 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00022 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00021 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00020 EQU   SDWAINC1
@NM00019 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00018 EQU   SDWAILC1
@NM00017 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00016 EQU   SDWANXT1
@NM00015 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00014 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00013 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00012 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00011 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00010 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00009 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00008 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00007 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
RCVTEXTA EQU   RCVT+173
RCVTVERS EQU   RCVT+172
RCVTRID0 EQU   RCVT+168
RCVTRCXP EQU   RCVT+164
RCVTRIXP EQU   RCVT+160
RCVTRAU0 EQU   RCVT+156
RCVTPINV EQU   RCVT+155
@NM00006 EQU   RCVTEROP
RCVTSAUD EQU   RCVTEROP
RCVTAVIO EQU   RCVTEROP
RCVTTUAC EQU   RCVTEROP
RCVTTERP EQU   RCVTEROP
RCVTNDUP EQU   RCVTFLGS
RCVTSHR  EQU   RCVTFLGS
RCVTRDHD EQU   RCVTFLGS
RCVTROFF EQU   RCVTFLGS
RCVTAXTA EQU   RCVT+152
RCVTATER EQU   RCVTAUOP
RCVTATAP EQU   RCVTAUOP
RCVTADAS EQU   RCVTAUOP
RCVTADAT EQU   RCVTAUOP
RCVTAUSE EQU   RCVTAUOP
RCVTAGRO EQU   RCVTAUOP
@NM00005 EQU   RCVTAUOP
@NM00004 EQU   RCVTSTA1
RCVTTAPE EQU   RCVTSTA1
RCVTUVOL EQU   RCVT+144
RCVTUADS EQU   RCVT+100
RCVTDSN  EQU   RCVT+56
RCVTNREC EQU   RCVT+54
@NM00003 EQU   RCVTSTAT
RCVTNTMS EQU   RCVTSTAT
RCVTNDVS EQU   RCVTSTAT
RCVTNTVS EQU   RCVTSTAT
RCVTNDSS EQU   RCVTSTAT
RCVTNLS  EQU   RCVTSTAT
RCVTDSNL EQU   RCVT+52
RCVTISTL EQU   RCVT+48
RCVTBAM  EQU   RCVT+44
RCVTXLEN EQU   RCVT+40
RCVTRUCB EQU   RCVT+36
RCVTRDX  EQU   RCVT+32
RCVTRCX  EQU   RCVT+28
RCVTRIX  EQU   RCVT+24
RCVTHDR  EQU   RCVT+20
RCVTTEMP EQU   RCVT+16
RCVTINDX EQU   RCVT+12
RCVTDEB  EQU   RCVT+8
RCVTDCB  EQU   RCVT+4
RCVTID   EQU   RCVT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@PB00008 EQU   @EL00001
@ENDDATA EQU   *
         END   IKJEFLGB,(C'PLS1815',0701,78177)
