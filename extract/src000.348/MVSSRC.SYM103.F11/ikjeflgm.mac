         TITLE 'IKJEFLGM, LOGON MESSAGE SENDER MODULE                  *
                        '
IKJEFLGM CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFLGM  78.173'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
         EJECT
         EJECT
         EJECT
         EJECT
         EJECT
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
         EJECT
         EJECT
         EJECT
         EJECT
*                                                                  0078
*                                                                  0078
*   PARMPTR = PARMREG;            /* GET ADDRESS OF PARAMETER LIST 0079
*                                    PASSED BY CALLER                */
*                                                                  0079
         LR    PARMPTR,PARMREG                                     0079
*   SRUPT = PTRUPT;               /* INITIALIZE UPT POINTER.         */
         MVC   SRUPT(4),PTRUPT(PARMPTR)                            0080
*   SRECT = PTRECT;               /* INITIALIZE ECT POINTER.         */
         MVC   SRECT(4),PTRECT(PARMPTR)                            0081
*   SRECB = PTRECB;               /* INITIALIZE CANCEL ECB POINTER.  */
*                                                                  0082
         MVC   SRECB(4),PTRECB(PARMPTR)                            0082
*   RTNCODE = 0;                  /* INITIALIZE RETURN CODE TO ZERO  */
*                                                                  0083
*                                                                  0083
         SLR   @10,@10                                             0083
         L     @03,BACKPTR+4(,SAVEREG)                             0083
         ST    @10,RTNCODE+16(,@03)                                0083
*   /*****************************************************************/
*   /*      IF THE MESSAGE NUMBER IS ZERO, A GETLINE                 */
*   /*      HAS BEEN REQUESTED.                                      */
*   /*****************************************************************/
*                                                                  0084
*   IF MSGNM = 0                                                   0084
*     THEN                                                         0084
         L     @03,MSGNMPTR(,PARMPTR)                              0084
         CH    @10,MSGNM(,@03)                                     0084
         BNE   @RF00084                                            0084
*       DO;                                                        0085
*         GEN(MVC   GTPBDYN(GTPBLEN),GTPBDNW);                     0086
         MVC   GTPBDYN(GTPBLEN),GTPBDNW
*         GOTO CKGET;             /* GO TO CHECK RETURN CODE FROM  0087
*                                    GETLINE.                        */
         B     CKGET                                               0087
*       END;                                                       0088
*GEN(EJECT);                                                       0089
@RF00084 DS    0H                                                  0089
         EJECT
*   RESPECIFY  MSGDPTR RSTD;                                       0090
*                                                                  0090
*   SVEMSGNM = MSGNM;             /* SAVE NUMBER OF MESSAGE        0091
*                                    TO BE SENT TO TERMINAL          */
         L     @10,MSGNMPTR(,PARMPTR)                              0091
         MVC   SVEMSGNM(2),MSGNM(@10)                              0091
*   CNTLSWC = CNTLSWC && CNTLSWC; /* SET COMMUNICATIONS SWITCHES OFF */
         XC    CNTLSWC(1),CNTLSWC                                  0092
*   PTRNEXT = SEGS1PTR;           /* GET ADDRESS OF FIRST SET OF   0093
*                                    TEXT INSERTION BUFFERS PASSED 0093
*                                    BY CALLER                       */
*                                                                  0093
         MVC   PTRNEXT(4),SEGS1PTR(PARMPTR)                        0093
*NEXTMSG:                                                          0094
*                                                                  0094
*   MSGDPTR = IKJLGZ + MSGDOFST(SVEMSGNM); /* GET ADDRESS OF MESSAGE
*                                    DESCRIPTOR BLOCK.               */
*                                                                  0094
NEXTMSG  L     @10,IKJLGZ                                          0094
         LH    @15,SVEMSGNM                                        0094
         ALR   @15,@15                                             0094
         BCTR  @15,0                                               0094
         BCTR  @15,0                                               0094
         LH    MSGDPTR,MSGDOFST(@15,@10)                           0094
         ALR   MSGDPTR,@10                                         0094
*   /*****************************************************************/
*   /*     IF SVC DUMP TO BE ISSUED, SET COMMUNICATION SWITCH SO     */
*   /*     THAT DUMP WILL BE TAKEN BEFORE RETURNING TO CALLER        */
*   /*****************************************************************/
*                                                                  0095
*   IF DUMP = '1'B                                                 0095
*     THEN                                                         0095
         TM    DUMP(MSGDPTR),B'00000010'                           0095
         BNO   @RF00095                                            0095
*       DUMPCORE = '1'B;                                           0096
*                                                                  0096
         OI    DUMPCORE,B'10000000'                                0096
*   IF TEXTI = '1'B               /* IF MESSAGE REQUIRES TEXT      0097
*                                    INSERTION, SET UP FOR IT.       */
*     THEN                                                         0097
@RF00095 TM    TEXTI(MSGDPTR),B'00000100'                          0097
         BNO   @RF00097                                            0097
*       DO;                                                        0098
*         SEG1(1) = SEGMOVE;      /* MOVE CALLER SUPPLIED TEXT     0099
*                                    INSERTION BUFFER POINTERS TO  0099
*                                    WORK AREA                       */
*                                                                  0099
         L     @10,PTRNEXT                                         0099
         MVC   SEG1(16),SEGMOVE(@10)                               0099
*         /***********************************************************/
*         /*     LOOP TO INSERT OFFSETS INTO USER SUPPLIED TEXT      */
*         /*     INSERTION BUFFERS.                                  */
*         /*     IF THE USER DID NOT SUPPLY A BUFFER, ONE CONTAIN-   */
*         /*     NING THE TEXT 'UNKNOWN' WILL BE CONSTRUCTED AND     */
*         /*     THE OFFSET PLACED IN IT.                            */
*         /***********************************************************/
*                                                                  0100
*         DO LOOPCNT = 1 TO INSNUM;                                0100
*                                                                  0100
         LA    LOOPCNT,1                                           0100
         B     @DE00100                                            0100
@DL00100 DS    0H                                                  0101
*           IF SEGPTR1(LOOPCNT) = 0 /* IF SEGMENT NOT SUPPLIED,    0101
*                                    CONSTRUCT DUMMY SEGMENT.        */
*             THEN                                                 0101
         LR    @10,LOOPCNT                                         0101
         SLA   @10,2                                               0101
         L     @04,SEGPTR1-4(@10)                                  0101
         LTR   @04,@04                                             0101
         BNZ   @RF00101                                            0101
*               DO;                                                0102
*                                                                  0102
*                 /***************************************************/
*                 /*      CONSTRUCT 'UNKNOWN' TEXT BUFFER.           */
*                 /**************************************************/
*                                                                  0103
*                 DUMMYLNG(LOOPCNT) = 11; /* SET SEGMENT LENGTH.     */
         LR    @04,LOOPCNT                                         0103
         MH    @04,@CH01368                                        0103
         LA    @15,11                                              0103
         STH   @15,DUMMYLNG-12(@04)                                0103
*                 DUMMYOFT(LOOPCNT) = INSOFST(LOOPCNT); /* SET OFFSET
*                                    OF THIS TEXT IN MESSAGE.        */
         SLR   @15,@15                                             0104
         IC    @15,INSOFST-1(LOOPCNT,MSGDPTR)                      0104
         STH   @15,DUMMYOFT-12(@04)                                0104
*                 DUMMYTXT(LOOPCNT) = 'UNKNOWN'; /* INDICATE TEXT  0105
*                                    IS UNKNOWN                      */
         LA    @01,DUMMYTXT-12(@04)                                0105
         MVC   0(7,@01),@CC01379                                   0105
*                 SEGPTR1(LOOPCNT) = ADDR(DUMMYLNG(LOOPCNT));      0106
         LA    @04,DUMMYLNG-12(@04)                                0106
         ST    @04,SEGPTR1-4(@10)                                  0106
*               END;                                               0107
*             ELSE                                                 0108
*                                                                  0108
*               /*****************************************************/
*               /*    PLACE OFFSET INTO CALLER SUPPLIED BUFFER       */
*               /*****************************************************/
*                                                                  0108
*               DO;                                                0108
         B     @RC00101                                            0108
@RF00101 DS    0H                                                  0109
*                 RESPECIFY SEGPTR RSTD;                           0109
*                 SEGPTR = SEGPTR1(LOOPCNT); /* GET ADDRESS OF     0110
*                                    SUPPLIED SEGMENT */           0110
*                                                                  0110
         LR    @10,LOOPCNT                                         0110
         SLA   @10,2                                               0110
         L     SEGPTR,SEGPTR1-4(@10)                               0110
*                   STOROFST = INSOFST(LOOPCNT); /* SET OFFSET OF  0111
*                                    THIS SEGMENT INTO MESSAGE.      */
         SLR   @10,@10                                             0111
         IC    @10,INSOFST-1(LOOPCNT,MSGDPTR)                      0111
         STH   @10,STOROFST(,SEGPTR)                               0111
*               END;                                               0112
*                                                                  0112
*         END;                                                     0113
@RC00101 AH    LOOPCNT,@CH00033                                    0113
@DE00100 MVC   @ZT00003+3(1),INSNUM(MSGDPTR)                       0113
         C     LOOPCNT,@ZT00003                                    0113
         BNH   @DL00100                                            0113
*         NUMSEG1 = INSNUM + 1;   /* TOTAL NUMBER OF SEGMENTS IN THIS
*                                    MESSAGE, INCLUDING BASE SEGMENT.*/
         LA    @10,1                                               0114
         MVC   @ZT00003+3(1),INSNUM(MSGDPTR)                       0114
         AL    @10,@ZT00003                                        0114
         ST    @10,NUMSEG1                                         0114
*         PTRNEXT = SEGS2PTR;     /* GET ADDRESS OF NEXT SET OF    0115
*                                    CALLER SUPPLIED TEXT INSERTION
*                                    BUFFERS                         */
         MVC   PTRNEXT(4),SEGS2PTR(PARMPTR)                        0115
*       END;                                                       0116
*     ELSE                                                         0117
*                                                                  0117
*       NUMSEG1 = 1;              /* IF NO TEXT TO BE INSERTED,    0117
*                                    THERE IS ONLY ONE SEGMENT.      */
*                                                                  0117
         B     @RC00097                                            0117
@RF00097 MVC   NUMSEG1(4),@CF00033                                 0117
*   MAINSEG = IKJLGZ + MSGOFST;   /* GET ACTUAL ADDRESS OF MESSAGE.  */
@RC00097 LH    @10,MSGOFST(,MSGDPTR)                               0118
         AL    @10,IKJLGZ                                          0118
         ST    @10,MAINSEG                                         0118
*   SVEMSGNM = MSGOFSTR;          /* SAVE MESSAGE NUMBER OF RELATED
*                                    MESSAGE.                        */
*                                                                  0119
         LH    @10,MSGOFSTR(,MSGDPTR)                              0119
         STH   @10,SVEMSGNM                                        0119
*   IF WTOM = '1'B                /* IF WTO MESSAGE, NEEDS SPECIAL 0120
*                                    SET UP. BRANCH TO PROCESS.      */
*     THEN                                                         0120
         TM    WTOM(MSGDPTR),B'00010000'                           0120
         BO    @RT00120                                            0120
*       GOTO WTOMSG;                                               0121
*                                                                  0121
*   IF SVEMSGNM ^= 0    &         /* IF THERE IS A RELATED MESSAGE AND
*                                    IT IS A SECONDARY LEVEL MESSAGE,
*                                    IT MUST BE SET UP NOW.          */
*         SECND = '1'B                                             0122
*     THEN                                                         0122
         SLR   @07,@07                                             0122
         CR    @10,@07                                             0122
         BE    @RF00122                                            0122
         TM    SECND(MSGDPTR),B'00001000'                          0122
         BNO   @RF00122                                            0122
*       DO;                                                        0123
*         SECONLVL = '1'B;        /* INDICATE SECOND LEVEL MESSAGES
*                                    ARE TO BE USED IN OUTPUT.       */
         OI    SECONLVL,B'01000000'                                0124
*         OLD2 = OLD1;            /* MOVE FIRST LEVEL MESSAGE TO   0125
*                                    A COPY BUFFER IN CASE A SECONDARY
*                                    MESSAGE MUST VE SET UP.         */
         MVC   OLD2(28),OLD1                                       0125
*         CHANPTR2 = ADDR(CHANPTR1); /* CHAIN POINTERS TOGETHER.     */
         LA    @10,CHANPTR1                                        0126
         ST    @10,CHANPTR2                                        0126
*         CHANPTR1 = 0;           /* INDICATE END OF CHAIN.          */
         ST    @07,CHANPTR1                                        0127
*         GOTO NEXTMSG;                                            0128
         B     NEXTMSG                                             0128
*       END;                                                       0129
*GEN(EJECT);                                                       0130
@RF00122 DS    0H                                                  0130
         EJECT
*   /*****************************************************************/
*   /*        TEST FOR MESSAGE TYPES:                                */
*   /*        PUTLINE OR PUTGET AND SINGLE-LEVEL,  OR                */
*   /*        PUTLINE OR PUTGET AND MULTI-LEVEL                      */
*   /*****************************************************************/
*                                                                  0131
*                                                                  0131
*   IF SECONLVL = '1'B            /* IF MESSAGE IS MULTI-LEVEL,    0131
*                                    BRANCH TO PROCESS.              */
*     THEN                                                         0131
         TM    SECONLVL,B'01000000'                                0131
         BO    @RT00131                                            0131
*       GOTO MULTILVL;                                             0132
*                                                                  0132
*                                                                  0132
*   OUTADR = ADDR(NUMSEG1);       /* GET ADDRESS OF 'OLD' FOR SINGLE
*                                    LEVEL MESSAGES                  */
*                                                                  0133
         LA    OUTADR,NUMSEG1                                      0133
*   IF PUT = '1'B                 /* IF PUTLINE MESSAGE, ISSUE     0134
*                                    PUTLINE MACRO.                  */
*     THEN                                                         0134
         TM    PUT(MSGDPTR),B'01000000'                            0134
         BNO   @RF00134                                            0134
*       DO;                                                        0135
*         GEN(MVC   PTPBDYN(PTPBLEN),PTPBDDF);                     0136
         MVC   PTPBDYN(PTPBLEN),PTPBDDF
*         GOTO CKPUT;             /* GOTO CHECK RETURN CODES FROM  0137
*                                    PUTLINE.                        */
         B     CKPUT                                               0137
*       END;                                                       0138
*                                                                  0138
*                                                                  0138
*                                                                  0138
*   IF PUTG = '1'B                /* IF PUTGET MESSAGE, ISSUE      0139
*                                    PUTGET MACRO.                   */
*     THEN                                                         0139
@RF00134 TM    PUTG(MSGDPTR),B'00100000'                           0139
         BNO   @RF00139                                            0139
*       DO;                                                        0140
*         GEN(MVC   PGPBDYN(PGPBLEN),PGPBDDF);                     0141
         MVC   PGPBDYN(PGPBLEN),PGPBDDF
*         GOTO CKPGET;            /* GOTO CHECK RETURN CODE FROM   0142
*                                    PUTGET.                         */
         B     CKPGET                                              0142
*       END;                                                       0143
*                                                                  0143
*   IF PGMODE = '1'B                                               0144
*     THEN                                                         0144
@RF00139 TM    PGMODE(MSGDPTR),B'00000001'                         0144
         BNO   @RF00144                                            0144
*       DO;                                                        0145
*         GEN(MVC   PGPBDYN(PGPBLEN),PGPBDMD);                     0146
         MVC   PGPBDYN(PGPBLEN),PGPBDMD
*         GOTO CKPGET;                                             0147
         B     CKPGET                                              0147
*       END;                                                       0148
*                                                                  0148
*                                                                  0148
*   IF PGBYPS = '1'B                                               0149
*     THEN                                                         0149
@RF00144 TM    PGBYPS(MSGDPTR),B'00000010'                         0149
         BNO   @RF00149                                            0149
*       DO;                                                        0150
*         GEN(MVC   PGPBDYN(PGPBLEN),PGPBDBP);                     0151
         MVC   PGPBDYN(PGPBLEN),PGPBDBP
*         GOTO CKPGET;                                             0152
         B     CKPGET                                              0152
*       END;                                                       0153
*                                                                  0153
*   IF PGASIS = '1'B              /* IF PUTGET WITH TERMGET  @G32OPKU*/
*     THEN                        /* ASIS, ISSUE THAT MACRO  @G32OPKU*/
@RF00149 TM    PGASIS(MSGDPTR),B'00000100'                         0154
         BNO   @RF00154                                            0154
*       DO;                       /*                         @G32OPKU*/
*         GEN(MVC PGPBDYN(PGPBLEN),PGPBDAS);/*               @G32OPKU*/
         MVC PGPBDYN(PGPBLEN),PGPBDAS
*         GOTO CKPGET;            /* NOW ISSUE PUTGET        @G32OPKU*/
         B     CKPGET                                              0157
*       END;                      /*                         @G32OPKU*/
*                                                                  0158
*                                                                  0158
*   RTNCODE = 12;                 /* IF NOT PUTLINE OR PUTGET, GIVE
*                                    CALLER 'INVALID PARAMETERS'   0159
*                                    RETURN CODE. MESSAGE CSECT NOT
*                                    CORRECTLY FORMED.               */
@RF00154 L     @10,BACKPTR+4(,SAVEREG)                             0159
         MVC   RTNCODE+16(4,@10),@CF01368                          0159
*   GOTO WANTDUMP;                /* GO TO TEST FOR SVC DUMP REQUEST.*/
*                                                                  0160
         B     WANTDUMP                                            0160
*MULTILVL:                                                         0161
*                                                                  0161
*   /*****************************************************************/
*   /*     MULTI-LEVEL MESSAGES.                                     */
*   /*****************************************************************/
*                                                                  0161
*   OUTADR = ADDR(CHANPTR2);                                       0161
MULTILVL LA    OUTADR,CHANPTR2                                     0161
*   IF PUT = '1'B                 /* IF PUTLINE MESSAGE, ISSUE PUTLINE
*                                    MACRO (MULTILEVEL).             */
*     THEN                                                         0162
         TM    PUT(MSGDPTR),B'01000000'                            0162
         BNO   @RF00162                                            0162
*       DO;                                                        0163
*       GEN(MVC   PTPBDYN(PTPBLEN),PTPBDML);                       0164
         MVC   PTPBDYN(PTPBLEN),PTPBDML
*       GOTO CKPUT;               /* GOTO CHECK RETURN CODES FROM  0165
*                                    PUTLINE.                        */
         B     CKPUT                                               0165
*       END;                                                       0166
*                                                                  0166
*                                                                  0166
*   RTNCODE = 12;                 /* IF NOT PUTLINE OR PUTGET, GIVE
*                                    CALLER 'INVALID PARAMETERS'   0167
*                                    RETURN CODE. MESSAGE CSECT NOT
*                                    CORRECTLY FORMED.               */
@RF00162 L     @10,BACKPTR+4(,SAVEREG)                             0167
         MVC   RTNCODE+16(4,@10),@CF01368                          0167
*   GOTO WANTDUMP;                /* GO TO TEST FOR SVC DUMP REQUEST.*/
*                                                                  0168
         B     WANTDUMP                                            0168
*GEN(EJECT);                                                       0169
         EJECT
*CLEANOUT:                                                         0170
*                                                                  0170
*   /*****************************************************************/
*   /*       CHECK FOR SECONDARY OR RELATED MESSAGES                 */
*   /*****************************************************************/
*                                                                  0170
*   SECONLVL = '0'B;                                               0170
*                                                                  0170
CLEANOUT NI    SECONLVL,B'10111111'                                0170
*   IF SVEMSGNM ^= 0              /* IF RELATED MESSAGES,          0171
*                                    GO TO SEND NEXT ONE             */
*     THEN                                                         0171
         LH    @10,SVEMSGNM                                        0171
         LTR   @10,@10                                             0171
         BNZ   @RT00171                                            0171
*       GOTO NEXTMSG;                                              0172
*                                                                  0172
*WANTDUMP:                                                         0173
*                                                                  0173
*   /*****************************************************************/
*   /*    IF SVC DUMP IS TO BE ISSUED AS PART OF THIS TRANSACTION,   */
*   /*    SET UP FOR AND INVOKE SVC DUMP.                            */
*   /*****************************************************************/
*                                                                  0173
*   IF DUMPCORE ^= '1'B           /* IF A DUMP IS NOT NEEDED, RETURN */
*     THEN                                                         0173
WANTDUMP TM    DUMPCORE,B'10000000'                                0173
         BNO   @RT00173                                            0173
*       GOTO RTNTCLR;                                              0174
*                                                                  0174
*                                                                  0174
*   RESPECIFY  PARMREG RSTD;      /*                            M1786*/
*   GEN(MVC SDUMPA(SDUMPSE-SDUMPS),SDUMPS); /* L-FORM SDUMP MOVE   0176
*                                                              Y02669*/
         MVC SDUMPA(SDUMPSE-SDUMPS),SDUMPS
*   PARMREG = ADDR(SDUMPA);         /* ADDR OF SDUMP LIST      Y02669*/
         LA    PARMREG,SDUMPA                                      0177
*   GEN(SDUMP MF=(E,(1)));          /* CALL SVC DUMP ROUTINE.  Y02669*/
         SDUMP MF=(E,(1))
*   RESPECIFY PARMREG UNRSTD;                                      0179
*   GO TO RTNTCLR;                                                 0180
         B     RTNTCLR                                             0180
*WTOMSG:                                                           0181
*   WTOTXT(1:80) = MAINSEG -> MSGTXT(1:80); /* MOVE THE MAIN SEGMENT
*                                    OF THE 'WTO' MESSAGE TO A     0181
*                                    TEMPORARY BUFFER                */
WTOMSG   L     @10,MAINSEG                                         0181
         MVC   WTOTXT(80),MSGTXT(@10)                              0181
*   WTOLEN = WTOLEN + 4;          /* INCREASE LENGTH OF 'WTO' SO THAT
*                                    PUTLINE WILL INCLUDE 'MCS' FLAGS
*                                    IN ITS TEXT INSERTION PROCESS   */
         LH    @10,WTOLEN                                          0182
         LA    @10,4(,@10)                                         0182
         STH   @10,WTOLEN                                          0182
*   SAVEMCS = WTOOFST;            /* SAVE 'MCS' FLAG HALF-WORD. (IT
*                                    IS THE OFFSET FIELD, WHICH MUST
*                                    BE ZERO FOR A PRIMARY SEGMENT). */
         LH    SAVEMCS,WTOOFST                                     0183
*   WTOOFST = 0;                  /* SET OFFSET FIELD TO ZERO        */
         SLR   @10,@10                                             0184
         STH   @10,WTOOFST                                         0184
*   MAINSEG = ADDR (WTOMSGBF);    /* SET MAIN SEGMENT POINTER IN   0185
*                                    PUTLINE'S PARAMETER LIST TO   0185
*                                    ADDRESS OF TEMPORARY BUFFER     */
*                                                                  0185
*                                                                  0185
         LA    @10,WTOMSGBF                                        0185
         ST    @10,MAINSEG                                         0185
*   GEN(MVC   PTPBDYN(PTPBLEN),PTPBFMT);                           0186
*                                                                  0186
         MVC   PTPBDYN(PTPBLEN),PTPBFMT
*   GEN(PUTLINE PARM=PTPBDYN,OUTPUT=(NUMSEG1,FORMAT),MF=(E,SRPL) );
*                                                                  0187
         PUTLINE PARM=PTPBDYN,OUTPUT=(NUMSEG1,FORMAT),MF=(E,SRPL)
*   IF RTNREG ^= 0                /* IF RETURN CODE NOT EQUAL TO   0188
*                                    ZERO, GOTO SET APPROPRIATE    0188
*                                    RETURN CODE FOR CALLER          */
*     THEN                                                         0188
         LTR   RTNREG,RTNREG                                       0188
         BNZ   @RT00188                                            0188
*       GOTO CKPUTRTN;                                             0189
*   RESPECIFY  (WTOMSGPT) RSTD;                                    0190
*                                                                  0190
*   WTOMSGPT = PTPBFLN;           /* GET ADDRESS OF FORMATED LINE    */
         LA    @10,PTPBDYN                                         0191
         L     WTOMSGPT,PTPBFLN(,@10)                              0191
*   WTOMSGPT -> BUFLEN = WTOMSGPT -> BUFLEN - 4; /* RE-ADJUST BUFFER
*                                    LENGTH.                         */
         LH    @10,BUFLEN(,WTOMSGPT)                               0192
         SH    @10,@CH00054                                        0192
         STH   @10,BUFLEN(,WTOMSGPT)                               0192
*   WTOMSGPT -> STOROFST = SAVEMCS; /* RESTORE 'MCS' FLAG HALF-WORD  */
*                                                                  0193
         STH   SAVEMCS,STOROFST(,WTOMSGPT)                         0193
*   GEN(WTO    MF=(E,(WTOMSGPT)) );                                0194
*                                                                  0194
*                                                                  0194
         WTO    MF=(E,(WTOMSGPT))
*   RESPECIFY  (OUT) RSTD;                                         0195
*   OUT = WTOMSGPT -> BUFLEN;     /* GET LENGTH OF LINE TO BE FREED. */
         LH    OUT,BUFLEN(,WTOMSGPT)                               0196
*   GEN(FREEMAIN R,SP=1,LV=(OUT),A=(WTOMSGPT)); /* FREE LINE.        */
         FREEMAIN R,SP=1,LV=(OUT),A=(WTOMSGPT)
*   RESPECIFY  (WTOMSGPT,OUT) UNRSTD;                              0198
*                                                                  0198
*   GOTO CLEANOUT;                                                 0199
         B     CLEANOUT                                            0199
*GEN(EJECT);                                                       0200
         EJECT
*CKGET:                                                            0201
*                                                                  0201
*   GEN(GETLINE PARM=GTPBDYN,MF=(E,SRPL) );                        0201
CKGET    GETLINE PARM=GTPBDYN,MF=(E,SRPL)
*   RESPECIFY  (SVRTN) RSTD;                                       0202
*   SVRTN = RTNREG;               /* SAVE RETURN CODE FROM GETLINE   */
*                                                                  0203
         LR    SVRTN,RTNREG                                        0203
*   IF SVRTN = 0                  /* IF RETURN CODE IS ZERO, GIVE  0204
*                                    CALLER ADDRESS OF INPUT LINE    */
*     THEN                                                         0204
         LTR   SVRTN,SVRTN                                         0204
         BNZ   @RF00204                                            0204
*       DO;                                                        0205
*         INPUT = GTPBIBUF;       /* RETURN ADDRESS OF LINE OBTAINED
*                                    BY GETLINE.                     */
         L     @10,PTRINPUT(,PARMPTR)                              0206
         LA    @07,GTPBDYN                                         0206
         MVC   INPUT(4,@10),GTPBIBUF(@07)                          0206
*         GOTO RTNTCLR;           /* RETURN TO CALLER                */
         B     RTNTCLR                                             0207
*       END;                                                       0208
*                                                                  0208
*   /*****************************************************************/
*   /*     RETURN CODE FROM GETLINE NONE ZERO. SET APPROPRIATE       */
*   /*     RETURN CODE FOR CALLER                                    */
*   /*****************************************************************/
*                                                                  0209
*   SVRTN = SVRTN/4;              /* GET INDEX INTO RETURN CODE    0209
*                                    ARRAY FOR GETLINE.              */
@RF00204 LA    @10,4                                               0209
         LR    @00,SVRTN                                           0209
         SRDA  @00,32                                              0209
         DR    @00,@10                                             0209
         LR    SVRTN,@01                                           0209
*   RTNCD = GETRTN(SVRTN);        /* GIVE RETURN CODE TO CALLER.     */
         ALR   @10,SAVEREG                                         0210
         L     @10,BACKPTR(,@10)                                   0210
         LA    @07,GETRTN-1(SVRTN)                                 0210
         MVC   RTNCD+19(1,@10),0(@07)                              0210
*   GOTO RTNTCLR;                                                  0211
         B     RTNTCLR                                             0211
*GEN(EJECT);                                                       0212
         EJECT
*CKPUT:                                                            0213
*                                                                  0213
*   PTPBOUT = OUTADR;                                              0213
CKPUT    LA    @10,PTPBDYN                                         0213
         ST    OUTADR,PTPBOUT+4(,@10)                              0213
*   GEN(PUTLINE  PARM=PTPBDYN,MF=(E,SRPL));                        0214
*                                                                  0214
         PUTLINE  PARM=PTPBDYN,MF=(E,SRPL)
*CKPUTRTN:                                                         0215
*                                                                  0215
*   SVRTN = RTNREG;               /* SAVE RETURN CODE FROM PUTLINE   */
*                                                                  0215
CKPUTRTN LR    SVRTN,RTNREG                                        0215
*   IF SVRTN = 0                  /* IF ZERO RETURN CODE, GO TO    0216
*                                    PROCESS NEXT MESSAGE            */
*                                                                  0216
*     THEN                                                         0216
         LTR   SVRTN,SVRTN                                         0216
         BZ    @RT00216                                            0216
*       GOTO CLEANOUT;                                             0217
*                                                                  0217
*   /*****************************************************************/
*   /*     RETURN CODE FROM PUTLINE NONE ZERO. SET APPROPRIATE       */
*   /*     RETURN CODE FOR CALLER                                    */
*   /*****************************************************************/
*                                                                  0218
*   SVRTN = SVRTN/4;              /* GET INDEX INTO RETURN CODE    0218
*                                    ARRAY FOR PUTLINE               */
         LA    @10,4                                               0218
         LR    @00,SVRTN                                           0218
         SRDA  @00,32                                              0218
         DR    @00,@10                                             0218
         LR    SVRTN,@01                                           0218
*   RTNCD = PUTRTN(SVRTN);        /* GIVE RETURN CODE TO CALLER      */
         ALR   @10,SAVEREG                                         0219
         L     @10,BACKPTR(,@10)                                   0219
         LA    @07,PUTRTN-1(SVRTN)                                 0219
         MVC   RTNCD+19(1,@10),0(@07)                              0219
*   GOTO WANTDUMP;                                                 0220
         B     WANTDUMP                                            0220
*GEN(EJECT);                                                       0221
         EJECT
*CKPGET:                                                           0222
*                                                                  0222
*   PGPBOUT = OUTADR;                                              0222
CKPGET   LA    @10,PGPBDYN                                         0222
         ST    OUTADR,PGPBOUT+4(,@10)                              0222
*   GEN(PUTGET  PARM=PGPBDYN,MF=(E,SRPL));                         0223
         PUTGET  PARM=PGPBDYN,MF=(E,SRPL)
*   SVRTN = RTNREG;               /* SAVE RETURN CODE FROM PUTGET    */
*                                                                  0224
         LR    SVRTN,RTNREG                                        0224
*   IF SVRTN = 0                  /* IF ZERO RETURN CODE, GIVE     0225
*                                    CALLER ADDRESS OF INPUT LINE    */
*     THEN                                                         0225
         LTR   SVRTN,SVRTN                                         0225
         BNZ   @RF00225                                            0225
*       DO;                                                        0226
*         INPUT = PGPBIBUF;       /* RETURN ADDRESS OF LINE OBTAINED
*                                    BY PUTGET.                      */
         L     @10,PTRINPUT(,PARMPTR)                              0227
         LA    @07,PGPBDYN                                         0227
         MVC   INPUT(4,@10),PGPBIBUF(@07)                          0227
*         GOTO CLEANOUT;                                           0228
         B     CLEANOUT                                            0228
*       END;                                                       0229
*                                                                  0229
*   /*****************************************************************/
*   /*     RETURN CODE FROM PUTGET NONE ZERO. SET APPROPRIATE        */
*   /*     RETURN CODE FOR CALLER                                    */
*   /*****************************************************************/
*                                                                  0230
*   SVRTN = SVRTN/4;              /* GET INDEX INTO RETURN CODE ARRAY
*                                    FOR PUTGET                      */
@RF00225 LA    @10,4                                               0230
         LR    @00,SVRTN                                           0230
         SRDA  @00,32                                              0230
         DR    @00,@10                                             0230
         LR    SVRTN,@01                                           0230
*   RTNCD = PGETRTN(SVRTN);       /* GIVE RETURN CODE TO CALLER      */
         ALR   @10,SAVEREG                                         0231
         L     @10,BACKPTR(,@10)                                   0231
         LA    @07,PGETRTN-1(SVRTN)                                0231
         MVC   RTNCD+19(1,@10),0(@07)                              0231
*   GOTO WANTDUMP;                /* RETURN TO CALLER.               */
*                                                                  0232
*                                                                  0232
         B     WANTDUMP                                            0232
*RTNTCLR:                                                          0233
*                                                                  0233
*   RETURN;                                                        0233
*GEN(EJECT);                                                       0234
         EJECT
*   /*****************************************************************/
*   /*     LIST FORMS OF ALL MACROS USED                             */
*   /*****************************************************************/
*                                                                  0235
*   GEN;                                                           0235
***********************************************************************
GTPBDNW  GETLINE INPUT=(TERM,LOGICAL),MF=L
***********************************************************************
PTPBDDF  PUTLINE OUTPUT=(0),MF=L
***********************************************************************
PTPBDML  PUTLINE OUTPUT=(0,MULTLVL),MF=L
***********************************************************************
PTPBFMT  PUTLINE OUTPUT=(0,FORMAT),MF=L
***********************************************************************
PGPBDDF  PUTGET  OUTPUT=(0),MF=L
***********************************************************************
PGPBDMD  PUTGET  OUTPUT=(0,MODE),MF=L
***********************************************************************
PGPBDBP  PUTGET  OUTPUT=(0,PTBYPS),MF=L
***********************************************************************
PGPBDAS  PUTGET  OUTPUT=(0),TERMGET=(ASIS),MF=L                @G32OPKU
***********************************************************************
*   GEN DATA;                                                      0236
*GEN(EJECT);                                                       0237
         EJECT
*END IKJEFLGM                                                      0238
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IKJTCB  )                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IKJPTPB )                                        *
*/*%INCLUDE SYSLIB  (IKJGTPB )                                        *
*/*%INCLUDE SYSLIB  (IKJPGPB )                                        *
*;                                                                 0238
@EL00001 L     @13,4(,@13)                                         0238
@EF00001 L     @00,@SIZDATD                                        0238
         LR    @01,@11                                             0238
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0238
         BR    @14                                                 0238
@DATA    DS    0H
@CH00054 DC    H'4'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
IKJEFLGM CSECT
         DS    0F
@CF00033 DC    F'1'
@CH00033 EQU   @CF00033+2
@CF01368 DC    F'12'
@CH01368 EQU   @CF01368+2
@DATD    DSECT
         DS    0D
PTRNEXT  DS    A
SVEMSGNM DS    H
         DS    CL2
SRPL     DS    CL16
         ORG   SRPL
SRUPT    DS    AL4
SRECT    DS    AL4
SRECB    DS    AL4
SRPB     DS    AL4
         ORG   SRPL+16
OLD1     DS    CL28
         ORG   OLD1
CHANPTR1 DS    AL4
NUMSEG1  DS    AL4
MAINSEG  DS    AL4
SEGPTR1  DS    AL4
         ORG   SEGPTR1+0
SEG1     DS    CL16
         ORG   OLD1+40
OLD2     DS    CL28
         ORG   OLD2
CHANPTR2 DS    AL4
NUMSEG2  DS    AL4
MAINSEG2 DS    AL4
SEGPTR2  DS    4A
         ORG   OLD2+28
CNTLSWC  DS    BL1
         ORG   CNTLSWC
DUMPCORE DS    BL1
SECONLVL EQU   CNTLSWC+0
         ORG   CNTLSWC+1
         DS    CL1
WTOMSGBF DS    CL80
         ORG   WTOMSGBF
WTOTXT   DS    CL80
         ORG   WTOTXT
WTOLEN   DS    FL2
WTOOFST  DS    FL2
         ORG   WTOMSGBF+80
DUMMYSEG DS    CL11
         ORG   DUMMYSEG+0
DUMMYLNG DS    FL2
DUMMYOFT DS    FL2
DUMMYTXT DS    CL7
         ORG   DUMMYSEG+48
IKJEFLGM CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
@CV00050 DC    V(IKJEFLGZ)
         DS    0D
IKJLGZ   DC    VL4(IKJEFLGZ)
@CC01379 DC    C'UNKNOWN'
         DS    CL1
HEX80    DC    X'80000000'
GETRTN   DC    X'0C'
         DC    X'08'
         DC    X'0C'
         DC    X'0C'
         DC    X'0C'
         DC    X'10'
         DC    X'08'
PUTRTN   DC    X'08'
         DC    X'0C'
         DC    X'0C'
         DC    X'10'
         DC    X'08'
PGETRTN  DC    X'0C'
         DC    X'08'
         DC    X'04'
         DC    X'0C'
         DC    X'0C'
         DC    X'0C'
         DC    X'10'
         DC    X'08'
IKJEFLGM CSECT
SDUMPS   SDUMP SDATA=(RGN,NUC,SQA,LPA),HDR='IKJEFLGM REQUEST',MF=L
SDUMPSE  EQU   *
@DATD    DSECT
SDUMPA   SDUMP SDATA=(RGN,NUC,SQA,LPA),HDR='IKJEFLGM REQUEST',MF=L
@DATD    DSECT
***********************************************************************
*       LIST FORMS OF MACROS USED (IN DYNAMIC ARE)                    *
***********************************************************************
         SPACE   4
***********************************************************************
GTPBDYN  GETLINE MF=L
GTPBLEN  EQU   *-GTPBDYN
***********************************************************************
PTPBDYN  PUTLINE MF=L
PTPBLEN  EQU   *-PTPBDYN
***********************************************************************
PGPBDYN  PUTGET  MF=L
PGPBLEN  EQU   *-PGPBDYN
***********************************************************************
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFLGM CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
LOOPCNT  EQU   @05
SAVEMCS  EQU   @05
PARMREG  EQU   @01
PARMPTR  EQU   @02
MSGDPTR  EQU   @03
OUT      EQU   @04
SEGPTR   EQU   @06
WTOMSGPT EQU   @06
SVRTN    EQU   @06
OUTADR   EQU   @07
SAVEREG  EQU   @13
RTNREG   EQU   @15
GTMNPTR  EQU   @01
SEGMOVE  EQU   0
MSGDOFST EQU   0
MSGDBLK  EQU   0
MSGOFST  EQU   MSGDBLK
MSGOFSTR EQU   MSGDBLK+2
MSGTYPE  EQU   MSGDBLK+4
PGASIS   EQU   MSGTYPE
PGBYPS   EQU   MSGTYPE
PGMODE   EQU   MSGTYPE
PUT      EQU   MSGTYPE+1
PUTG     EQU   MSGTYPE+1
WTOM     EQU   MSGTYPE+1
SECND    EQU   MSGTYPE+1
TEXTI    EQU   MSGTYPE+1
DUMP     EQU   MSGTYPE+1
INSNUM   EQU   MSGDBLK+6
INSOFST  EQU   MSGDBLK+7
PARMLST2 EQU   0
PTRUPT   EQU   PARMLST2
PTRECT   EQU   PARMLST2+4
PTRECB   EQU   PARMLST2+8
MSGNMPTR EQU   PARMLST2+12
PTRINPUT EQU   PARMLST2+16
SEGS1PTR EQU   PARMLST2+20
SEGS2PTR EQU   PARMLST2+24
INPUT    EQU   0
MSGNM    EQU   0
@NM00003 EQU   0
BUFLEN   EQU   @NM00003
STOROFST EQU   @NM00003+2
BACKPTR  EQU   0
RTNCODE  EQU   0
RTNCD    EQU   0
MSGTXT   EQU   0
UPT      EQU   0
UPTSWS   EQU   UPT+12
CVTPTR   EQU   0
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBPAIR  EQU   0
TCBCURR  EQU   TCBPAIR+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
PTPBOUT  EQU   0
PTPB     EQU   0
PTPBFLN  EQU   PTPB+8
GTPB     EQU   0
GTPBIBUF EQU   GTPB+4
PGPBOUT  EQU   0
PGPB     EQU   0
PGPBIBUF EQU   PGPB+12
PARMLIST EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00015 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00014 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00018 EQU   PGPB
@NM00017 EQU   GTPB
PTPBOPUT EQU   PTPB+4
@NM00016 EQU   PTPB
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00013 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00012 EQU   IEZJSCB
@NM00011 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00010 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00009 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00008 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
TCBNEXT  EQU   TCBPAIR
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00007 EQU   CVTFIX+248
@NM00006 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00005 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00004 EQU   UPT
@NM00002 EQU   MSGTYPE+1
PUTD     EQU   MSGTYPE+1
@NM00001 EQU   MSGTYPE
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00120 EQU   WTOMSG
@RT00131 EQU   MULTILVL
@RT00171 EQU   NEXTMSG
@RT00188 EQU   CKPUTRTN
@RT00216 EQU   CLEANOUT
RTNTCLR  EQU   @EL00001
@RT00173 EQU   RTNTCLR
@ENDDATA EQU   *
         END   IKJEFLGM,(C'PLS1527',0701,78173)
