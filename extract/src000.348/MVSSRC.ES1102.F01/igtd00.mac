TD00     TITLE 'IGTD00 - MONITOR MAIN ROUTINE.                         *
                        '
IGTD00   CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IGTD00    77.092'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @07,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@07                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         GETMAIN  R,LV=(0)
         LR    @06,@01                                          01S0001
         USING @DATD,@06                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @06,8(,@13)                                      01S0001
         LR    @13,@06                                          01S0001
         MVC   @PC00001(4),0(@01)                               01S0001
*   R2P=R1P;                        /* SAVE THE POINTER TO THE INPUT.*/
         LR    R2P,R1P                                          01S0037
*                                                               02S0038
*/********************************************************************/
*/*  ESTABLISH THE ERROR RECOVERY ENVIRONMENT.                       */
*/********************************************************************/
*                                                               02S0038
*   R15F=0;                         /* SET RETURN CODE.              */
         SLR   R15F,R15F                                        02S0038
*   IF R15P=0 THEN                  /* TEST FOR ERROR RECOVERY  01S0039
*                                      ESTABLISHED.                  */
         LTR   R15P,R15P                                        01S0039
         BNZ   @RF00039                                         01S0039
*     DO;                           /* IF ESTAE OR STAE OK           */
*                                                               02S0041
*/********************************************************************/
*/*                 VALIDATE INPUT PARAMETERS.                       */
*/********************************************************************/
*                                                               02S0041
*       RESPECIFY                                               02S0041
*        (R4F) RESTRICTED;                                      02S0041
*       R4F=0;                      /* INITIALIZE RETURN CODE.       */
         SLR   R4F,R4F                                          02S0042
*/* INPDATA = ID,SUBS,COLD                                           */
*/* ID = (00,99) INITIAL COMMAND SET ID.                             */
*/* SUBS = 1 TO 4 CHAR SUBSYSTEM ID.                                 */
*/* COLD = OPTIONAL FORCE COLD START INDICATOR.                      */
*                                                               02S0043
*       IF INPLEN<4×INPLEN>12 THEN  /* TEST MIN AND MAX VALS FOR
*                                      LENGTH.                       */
         L     @05,@PC00001                                     02S0043
         LH    @05,INPLEN(,@05)                                 02S0043
         C     @05,@CF00055                                     02S0043
         BL    @RT00043                                         02S0043
         C     @05,@CF00542                                     02S0043
         BNH   @RF00043                                         02S0043
@RT00043 DS    0H                                               02S0044
*         R4F=4;                    /* SET INVALID INPUT RETURN CODE */
         LA    R4F,4                                            02S0044
*       ELSE                                                    02S0045
*         DO;                                                   02S0045
         B     @RC00043                                         02S0045
@RF00043 DS    0H                                               02S0046
*           MEMBID='        ';      /* INITIALIZE THE COMMAND SET
*                                      MEMBER NAME.                  */
         MVC   MEMBID(8),@CC00543                               02S0046
*           IF INPDATA(3)^=',' THEN /* TEST FOR DELIMITER.           */
         L     @05,@PC00001                                     02S0047
         CLI   INPDATA+2(@05),C','                              02S0047
         BE    @RF00047                                         02S0047
*             R4F=4;                /* SET INVALID INPUT RETURN CODE.*/
         LA    R4F,4                                            02S0048
*           ELSE                                                02S0049
*             DO;                                               02S0049
         B     @RC00047                                         02S0049
@RF00047 DS    0H                                               02S0050
*               MAJORNM(1:4)='SYSZ';/* INITIALIZE THE MAJOR NAME
*                                      FIELD.                        */
         MVC   MAJORNM(4),@CC00545                              02S0050
*               DO R3F=4 TO INPLEN BY 1/* SCAN THE SUBSYSTEM NAME
*                                      FIELD.                        */
*                     WHILE INPDATA(R3F)^=','/* QUIT WHEN DELIMITER
*                                      IS FOUND.                     */
*                     &R3F<8;       /* OR WHEN 4 CHARS MOVED    02S0051
*                                      (SUBSYTEM NAME IS FOUR CHARS
*                                      OR LESS).                     */
         LA    R3F,4                                            02S0051
         B     @DE00051                                         02S0051
@DL00051 L     @05,@PC00001                                     02S0051
         LR    @01,@05                                          02S0051
         ALR   @01,R3F                                          02S0051
         CLI   INPDATA-1(@01),C','                              02S0051
         BE    @DC00051                                         02S0051
         C     R3F,@CF00059                                     02S0051
         BNL   @DC00051                                         02S0051
*                 MAJORNM(1+R3F)=INPDATA(R3F);/* MOVE DATA TO MAJOR
*                                      NAME.                         */
         LA    @01,MAJORNM(R3F)                                 02S0052
         ALR   @05,R3F                                          02S0052
         MVC   0(1,@01),INPDATA-1(@05)                          02S0052
*               END;                                            02S0053
         AL    R3F,@CF00052                                     02S0053
@DE00051 L     @05,@PC00001                                     02S0053
         CH    R3F,INPLEN(,@05)                                 02S0053
         BNH   @DL00051                                         02S0053
@DC00051 DS    0H                                               02S0054
*               MEMBID(1:R3F-4)=MAJORNM(5:R3F);/* MOVE IN SUBSYS
*                                      NAME.                         */
         LR    @05,R3F                                          02S0054
         SL    @05,@CF00204                                     02S0054
         EX    @05,@SM00662                                     02S0054
*               MEMBID(R3F-3)='I';  /* NEXT CHAR IS 'I'              */
         LA    @05,MEMBID-4(R3F)                                02S0055
         MVI   0(@05),C'I'                                      02S0055
*               MEMBID(R3F-2:R3F-1)=INPDATA(1:2);/* GET UNIQUE ID
*                                      FIELD.                        */
         LA    @05,MEMBID-3(R3F)                                02S0056
         L     @15,@PC00001                                     02S0056
         MVC   0(2,@05),INPDATA(@15)                            02S0056
*               IF R3F^=INPLEN+1 THEN/* TEST FOR OPTIONAL PARAMETER. */
         LA    @05,1                                            02S0057
         AH    @05,INPLEN(,@15)                                 02S0057
         CR    R3F,@05                                          02S0057
         BE    @RF00057                                         02S0057
*                 IF INPDATA(R3F)^=',' THEN/* TEST FOR VALID    02S0058
*                                      DELIMITER                     */
         ALR   @15,R3F                                          02S0058
         CLI   INPDATA-1(@15),C','                              02S0058
         BE    @RF00058                                         02S0058
*                   R4F=4;          /* SET INVALID INPUT RETURN CODE.*/
         LA    R4F,4                                            02S0059
*                 ELSE                                          02S0060
*                   IF INPDATA(R3F+1)='C' THEN                  02S0060
         B     @RC00058                                         02S0060
@RF00058 L     @05,@PC00001                                     02S0060
         ALR   @05,R3F                                          02S0060
         CLI   INPDATA(@05),C'C'                                02S0060
         BNE   @RF00060                                         02S0060
*                     COLDSTRT='1'B;/* FORCE COLD START IF PARM 02S0061
*                                      PRESENT                       */
         OI    COLDSTRT,B'10000000'                             02S0061
*                   ELSE                                        02S0062
*                     IF INPDATA(R3F+1)='W' THEN/* CHECK FOR WARM
*                                      START.                        */
         B     @RC00060                                         02S0062
@RF00060 L     @05,@PC00001                                     02S0062
         ALR   @05,R3F                                          02S0062
         CLI   INPDATA(@05),C'W'                                02S0062
         BNE   @RF00062                                         02S0062
*                       COLDSTRT='0'B;/* SET FORCE COLD NOT REQUIRED.*/
         NI    COLDSTRT,B'01111111'                             02S0063
*                     ELSE                                      02S0064
*                       R4F=4;      /* SET INVALID INPUT RETURN CODE.*/
         B     @RC00062                                         02S0064
@RF00062 LA    R4F,4                                            02S0064
*             END;                                              02S0065
@RC00062 DS    0H                                               02S0065
@RC00060 DS    0H                                               02S0065
@RC00058 DS    0H                                               02S0065
@RF00057 DS    0H                                               02S0066
*         END;                                                  02S0066
@RC00047 DS    0H                                               02S0067
*       IF R4F=0 THEN               /* IF ALL OK, GO FIND THE APCT.  */
@RC00043 LTR   R4F,R4F                                          02S0067
         BNZ   @RF00067                                         02S0067
*         DO;                                                   02S0068
*                                                               02S0068
*           /*********************************************************/
*           /*                                                       */
*           /* FIND THE ADDRESS OF THE SSCVT FOR THIS SUBSYSTEM.     */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0069
*           RESPECIFY                                           02S0069
*            (R15F,                                             02S0069
*             R1P) RESTRICTED;                                  02S0069
*           MFLEXT(1:12)=''X;       /* ZERO THE EXTRACT LIST AREA.   */
         XC    MFLEXT(12),MFLEXT                                02S0070
*           GEN SETS(CSCBPTR)                                   02S0071
*               (EXTRACT CSCBPTR,'S',FIELDS=(COMM),MF=(E,MFLEXT) );
         EXTRACT CSCBPTR,'S',FIELDS=(COMM),MF=(E,MFLEXT)
*           CSCBPTR=CSCBPTR         /* COMPUTE ADDRESS OF THE CSCB.  */
*               -(ADDR(CHECBP)-ADDR(CHPTR));                    02S0072
         L     @14,CSCBPTR                                      02S0072
         SL    @14,@CF00659                                     02S0072
         ST    @14,CSCBPTR                                      02S0072
*           R1P=ADDR(MAJORNM)+4;    /* POINT TO THE SUBSYSTEM NAME
*                                      FOR IGTUDA, WHICH WILL USE IT
*                                      TO FIND THE SSCVT FOR THE
*                                      SUBSYSTEM.                    */
         LA    R1P,MAJORNM                                      02S0073
         LA    R1P,4(,R1P)                                      02S0073
*           GEN REFS(MAJORNM)(         LINK EP=IGTUDA     );    02S0074
                  LINK EP=IGTUDA
*           RESPECIFY                                           02S0075
*             R1P UNRESTRICTED;                                 02S0075
*           IF R15F^=0              /* NON ZERO MEANS IT FOUND AN
*                                      SSCVT                         */
*               &R15P->SSCTSUSE->APCTID='APCT'/* VERIFY THAT IT IS AN
*                                      AUTHORIZED 3838 SUBSYSTEM.    */
*               &CHKEY(1:4)=MAJORNM(5:8)/* SUBSYSTEM MUST BE         */
*               &CHKEY(5:8)='    '  /* THE NAME OF THE JOB STARTED.  */
*             THEN                                              02S0076
         LTR   R15F,R15F                                        02S0076
         BZ    @RF00076                                         02S0076
         L     @14,SSCTSUSE(,R15P)                              02S0076
         CLC   APCTID(4,@14),@CC00372                           02S0076
         BNE   @RF00076                                         02S0076
         L     @05,CSCBPTR                                      02S0076
         CLC   CHKEY(4,@05),MAJORNM+4                           02S0076
         BNE   @RF00076                                         02S0076
         CLC   CHKEY+4(4,@05),@CC00553                          02S0076
         BNE   @RF00076                                         02S0076
*             DO;                   /* GOT A GOOD APCT.              */
*               APCTPTR=R15P->SSCTSUSE;/* GET POINTER TO THE APCT    */
         LR    APCTPTR,@14                                      02S0078
*               APCTSSVT=R15P->SSCTSSVT;/* SET PTR TO SSVT.          */
         L     @14,SSCTSSVT(,R15P)                              02S0079
         ST    @14,APCTSSVT(,APCTPTR)                           02S0079
*             END;                  /* DONE.                         */
*           ELSE                                                02S0081
*             DO;                                               02S0081
         B     @RC00076                                         02S0081
@RF00076 DS    0H                                               02S0082
*               CALL IGTDWTO(IGT200I,MAJORNM(5:8));/* WRITE THE ERROR
*                                      MESSAGE TO THE OPERATOR.      */
         LA    @14,IGT200I                                      02S0082
         ST    @14,@AL00001                                     02S0082
         LA    @14,MAJORNM+4                                    02S0082
         ST    @14,@AL00001+4                                   02S0082
         MVI   @AL00001+4,X'80'                                 02S0082
         LA    @01,@AL00001                                     02S0082
         BAL   @14,IGTDWTO                                      02S0082
*               R4F=8;              /* SET INVALID SUBSYS REQUESTED
*                                      CODE.                         */
         LA    R4F,8                                            02S0083
*             END;                                              02S0084
*         END;                                                  02S0085
*       ELSE                        /* INVALID INPUT MESSAGE    02S0086
*                                      REQUIRED.                     */
*         CALL IGTDWTO(IGT201I);    /* WRITE THE ERROR MESSAGE TO THE
*                                      OPERATOR.                     */
         B     @RC00067                                         02S0086
@RF00067 LA    @01,@AL00086                                     02S0086
         BAL   @14,IGTDWTO                                      02S0086
*       R15F=R4F;                   /* SET RETURN CODE FOR MAIN 02S0087
*                                      ROUTINE.                      */
@RC00067 LR    R15F,R4F                                         02S0087
*       RESPECIFY                                               02S0088
*        (R4F,                                                  02S0088
*         R15F) UNRESTRICTED;                                   02S0088
*       IF R15P=0 THEN              /* IF OK PROCEED                 */
         LTR   R15P,R15P                                        01S0089
         BNZ   @RF00089                                         01S0089
*         DO;                                                   01S0090
*           DYNENQ(1:4)=''X;        /* CLEAR THE AREA.               */
         XC    DYNENQ(4),DYNENQ                                 01S0091
*           GEN REFS(MAJORNM,MONITOR) SETS(DYNENQ);             01S0092
            MVI   DYNENQ,X'80'      SET THE VL INDICATOR.
            ENQ (MAJORNM,MONITOR,E,7,SYSTEM),RET=USE,MF=(E,DYNENQ)
*           R3P=R15P;               /* SAVE ADDR OF ENQ WORKAREA     */
         LR    R3P,R15P                                         01S0093
*           IF R15P=0 THEN          /* IF WE GOT IT, PROCEED BECAUSE */
*                                                               01S0094
         LTR   R15P,R15P                                        01S0094
         BNZ   @RF00094                                         01S0094
*             /*******************************************************/
*             /*                                                     */
*             /* WE ARE THE ONLY MONITOR.                            */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0095
*             DO;                                               01S0095
*               IF COLDSTRT='1'B    /* SEE IF FORCE COLD START  01S0096
*                                      APPLICABLE                    */
*                   &APCTWARM='1'B THEN/* WHICH IS IF WARM IS   01S0096
*                                      POSSIBLE                      */
         TM    COLDSTRT,B'10000000'                             01S0096
         BNO   @RF00096                                         01S0096
         TM    APCTWARM(APCTPTR),B'00000100'                    01S0096
         BNO   @RF00096                                         01S0096
*                 DO;               /* BUT COLD IS FORCED.           */
*                   GEN REFS(WTORL,WTORL2,WTORL2L);             01S0098
*                                          /*
           MVC  WTORL(L'WTORL2L),WTORL2 MOVE THE MESSAGE TO OUTPUT AREA
*                   WTORL(21:24)=APCTSSID;/* PUT THE SUBSYSTEM NAME
*                                      IN THE MSG                    */
         MVC   WTORL+20(4),APCTSSID(APCTPTR)                    01S0099
*                   DO UNTIL WTORRPLY(1)='N'/* MAKE THE OPERATOR
*                                      VERIFY THE COLD               */
*                         ×WTORRPLY(1)='Y'/* START REQUEST OR DENY
*                                      IT.                           */
*                         ×WTORRPLY(1)='U';/* U IS EQUIVALENT TO YES.*/
@DL00100 DS    0H                                               01S0101
*                     WTORRPLY='';  /* BLANK THE INPUT AREA.         */
         MVI   WTORRPLY,C' '                                    01S0101
         MVC   WTORRPLY+1(3),WTORRPLY                           01S0101
*                     WTORECB=''X;  /* ZERO THE ECB.                 */
         SLR   @15,@15                                          01S0102
         ST    @15,WTORECB                                      01S0102
*                     GEN SETS(WTORRPLY,WTORECB);               01S0103
           WTOR ,WTORRPLY,3,WTORECB,MF=(E,WTORL) ASK HIM.
           WAIT ECB=WTORECB        WAIT FOR REPLY.
*                   END;                                        01S0104
@DE00100 CLI   WTORRPLY,C'N'                                    01S0104
         BE    @DC00100                                         01S0104
         CLI   WTORRPLY,C'Y'                                    01S0104
         BE    @DC00100                                         01S0104
         CLI   WTORRPLY,C'U'                                    01S0104
         BNE   @DL00100                                         01S0104
@DC00100 DS    0H                                               01S0105
*                   IF WTORRPLY(1)='Y'×/* IF HE SAYS YES, DO A COLD
*                                      START.                        */
*                       WTORRPLY(1)='U' THEN/* 'U' MEANS YES ALOS.   */
         CLI   WTORRPLY,C'Y'                                    01S0105
         BE    @RT00105                                         01S0105
         CLI   WTORRPLY,C'U'                                    01S0105
         BNE   @RF00105                                         01S0105
@RT00105 DS    0H                                               01S0106
*                     DO;                                       01S0106
*                       CALL IGTDWTO(IGT208I,APCTSSID);/* WRITE 01S0107
*                                      CANCEL MSG.                   */
         LA    @15,IGT208I                                      01S0107
         ST    @15,@AL00001                                     01S0107
         LA    @15,APCTSSID(,APCTPTR)                           01S0107
         ST    @15,@AL00001+4                                   01S0107
         MVI   @AL00001+4,X'80'                                 01S0107
         LA    @01,@AL00001                                     01S0107
         BAL   @14,IGTDWTO                                      01S0107
*                       APCTSTRT='1'B;/* TELL ALLOCATION WE ARE 01S0108
*                                      STARTING                      */
*                                                               01S0108
         L     @15,APCTSTRT(,APCTPTR)                           01S0108
@GL00010 LR    @14,@15                                          01S0108
         O     @14,@CF00666                                     01S0108
         CS    @15,@14,APCTSTRT(APCTPTR)                        01S0108
         BNE   @GL00010                                         01S0108
*                       /*********************************************/
*                       /*                                           */
*                       /* WAIT FOR ALL USERS TO QUIT, SIGNIFIED BY  */
*                       /* GETTING ENQED                             */
*                       /*                                           */
*                       /*********************************************/
*                                                               01S0109
*                       DYNENQ(1:4)='80000000'X;/* CLEAR THE AREA.   */
         MVC   DYNENQ(4),@CB00559                               01S0109
*                       GEN SETS(DYNENQ) REFS(ALLOCATE,MAJORNM);
             MVI   DYNENQ,X'80'      SET THE VL INDICATOR.
             ENQ (MAJORNM,ALLOCATE,E,8,SYSTEM),MF=(E,DYNENQ)
*                       APCTSTAT=APCTSTAT&'00'X;/* CLEAR THE START UP
*                                      INDICATORS.                   */
         NI    APCTSTAT(APCTPTR),X'00'                          01S0111
*                       APCTSTRT='1'B;/* KEEP START UP ON.           */
         L     @15,APCTSTRT(,APCTPTR)                           01S0112
@GL00011 LR    @14,@15                                          01S0112
         O     @14,@CF00666                                     01S0112
         CS    @15,@14,APCTSTRT(APCTPTR)                        01S0112
         BNE   @GL00011                                         01S0112
*                       DYNENQ(1:4)='80000000'X;/* CLEAR THE AREA.   */
         MVC   DYNENQ(4),@CB00559                               01S0113
*                       GEN SETS(DYNENQ) REFS(ALLOCATE,MAJORNM);
             DEQ (MAJORNM,ALLOCATE,8,SYSTEM),MF=(E,DYNENQ)
* HAVING FREED THE RESOURCE WHICH ONLY GUARANTEED THAT ALL USERS
* WERE GONE, NORMAL START UP MAY PROCEED.
*                     END;                                      01S0115
*                 END;                                          01S0116
*                                                               01S0116
@RF00105 DS    0H                                               01S0117
*/*APCTPTR MUST POINT TO THE APCT AT THE CALL OF IGTD10.             */
*                                                               01S0117
*               APCTHALT='0'B;      /* RESET MONITOR HALTING.        */
@RF00096 DS    0H                                               01S0118
*               APCTTERM='0'B;      /* RESET MONITOR TERMINATION
*                                      REQUEST                       */
         L     @15,APCTTERM(,APCTPTR)                           01S0118
@GL00012 LR    @14,@15                                          01S0118
         N     @14,@CF00669                                     01S0118
         CS    @15,@14,APCTTERM(APCTPTR)                        01S0118
         BNE   @GL00012                                         01S0118
*               CALL APCVZD10(MEMBID);/* CALL IGTD10.                */
         LA    @15,MEMBID                                       01S0119
         ST    @15,@AL00001                                     01S0119
         L     @15,APCTZD10(,APCTPTR)                           01S0119
         LA    @01,@AL00001                                     01S0119
         BALR  @14,@15                                          01S0119
*               DYNENQ(1:4)='80000000'X;/* CLEAR THE AREA.           */
         MVC   DYNENQ(4),@CB00559                               01S0120
*               GEN REFS(MONITOR,MAJORNM) SETS(DYNENQ)/* DEQ FROM THE
*                                      MONITOR                       */
*                   ( DEQ (MAJORNM,MONITOR,7,SYSTEM),MF=(E,DYNENQ) );
          DEQ (MAJORNM,MONITOR,7,SYSTEM),MF=(E,DYNENQ)
*             END;                                              01S0122
*           ELSE                                                01S0123
*             CALL IGTDWTO(IGT202I,MAJORNM(5:8));/* WRITE THE ERROR
*                                      MESSAGE TO THE OPERATOR.      */
         B     @RC00094                                         01S0123
@RF00094 LA    @15,IGT202I                                      01S0123
         ST    @15,@AL00001                                     01S0123
         LA    @15,MAJORNM+4                                    01S0123
         ST    @15,@AL00001+4                                   01S0123
         MVI   @AL00001+4,X'80'                                 01S0123
         LA    @01,@AL00001                                     01S0123
         BAL   @14,IGTDWTO                                      01S0123
*         END;                                                  01S0124
@RC00094 DS    0H                                               01S0125
*     END;                                                      01S0125
@RF00089 DS    0H                                               01S0126
*   RETURN CODE(0);                 /* RETURN TO CALLER              */
@RF00039 L     @13,4(,@13)                                      01S0126
         L     @00,@SIZDATD                                     01S0126
         LR    @01,@06                                          01S0126
         FREEMAIN R,LV=(0),A=(1)
         SLR   @15,@15                                          01S0126
         L     @14,12(,@13)                                     01S0126
         LM    @00,@12,20(@13)                                  01S0126
         BR    @14                                              01S0126
         EJECT
*                                                               01S0127
*/********************************************************************/
*/*THIS PROCEDURE ISSUES A WTO TO WRITE AN ERROR MESSAGE TO THE      */
*/*OPERATOR.  THE MESSAGE FORMAT IS "IGTNNNX  ×---UP TO 70 CHARS OF  */
*/* TEXT---×, WHERE NNN IS THE MESSAGE NUMBER AND X IS THE ACTION    */
*/*CODE.  IF ONLY ONE PARAMETER IS PASSED TO THE ROUTINE,  IT IS THE */
*/*MESSAGE TO BE PRINTED.  IF THE SECOND PARAMETER IS PRESENT,  IT IS*/
*/*FOUR CHARACTERS THAT REPLACE THE FIRST FOUR CHARACTERS OF THE TEXT*/
*/*THE TEXT MUST ALWAYS BE IN THE FORMAT OF THE LIST FORM OF THE WTO.*/
*/********************************************************************/
*                                                               01S0127
*IGTDWTO:                                                       01S0127
*   PROC(IN1,IN2);                  /* THE MESSAGE WRITER ROUTINE.   */
IGTDWTO  STM   @14,@12,@SA00002                                 01S0127
         MVC   @PC00002(8),0(@01)                               01S0127
*   DCL                                                         01S0128
*    (IN1,                                                      01S0128
*     IN2) CHAR(*);                 /* DEFINE INPUT TO THIS ROUTINE. */
*   DCL                                                         01S0129
*     1 WTOARG BASED(R1P),          /* INPUT TO IGTDWTO.             */
*      2 MSGPTR PTR(31),            /* ADDRESS OF THE ERROR MSG WTO. */
*       3 VLIST1 BIT(1),            /* VARIABLE LIST INDICATOR.      */
*      2 VARDATAP PTR(31),          /* ADDRESS OF THE VARIABLE DATA. */
*       3 VLIST2 BIT(8);            /* VARIABLE LIST INDICATOR.      */
*   DCL                                                         01S0130
*     1 MSG CHAR(90) BASED(MSGPTR)  /* THE ERROR MESSAGE.            */
*           BOUNDARY(WORD),                                     01S0130
*      2 MSGLEN PTR(15);            /* LENGTH OF THE MESSAGE.        */
*   DCL                                                         01S0131
*     VARDATA CHAR(4) BASED(VARDATAP);/* THE VARIABLE DATA.          */
*   DCL                                                         01S0132
*     1 OUTBUF CHAR(90)             /* DEFINE THE WTO OUTPUT BUFFER. */
*           BDY(WORD),                                          01S0132
*      2 WTOSTUFF PTR(31),          /* RESERVE SPACE FOR THE    01S0132
*                                      LENGTH,ETC                    */
*      2 MSGNO CHAR(9),             /* MESSAGE NUMBER--IGTNNNX ----  */
*      2 MSGTEXT CHAR(77);          /* ACTUAL TEXT OF THE MESSAGE.   */
*   RESPECIFY                                                   01S0133
*     R1P RESTRICTED;               /* POINTS TO THE PARAMETER LIST. */
*   OUTBUF(1:MSGLEN+4)=MSG(1:MSGLEN+4);/* MOVE THE MESSAGE TO THE
*                                      OUTPUT AREA, INCLUDING THE
*                                      ROUTING INFO- MATION AT THE
*                                      END.                          */
         L     @15,MSGPTR(,R1P)                                 01S0134
         LA    @14,3                                            01S0134
         AH    @14,MSGLEN(,@15)                                 01S0134
         EX    @14,@SM00672                                     01S0134
*   IF VLIST1^='1'B THEN            /* TEST FOR THE EXISTANCE OF THE
*                                      SECOND PARAMETER.             */
         TM    VLIST1(R1P),B'10000000'                          01S0135
         BO    @RF00135                                         01S0135
*     MSGTEXT(1:4)=VARDATA;         /* IF PRESENT, INSERT VARIABLE
*                                      DATA INTO MESSAGE.            */
         L     @15,VARDATAP(,R1P)                               01S0136
         MVC   MSGTEXT(4),VARDATA(@15)                          01S0136
*   GEN REFS(OUTBUF)                                            01S0137
*       ( WTO   MF=(E,OUTBUF)  WRITE THE MESSAGE TO THE OPERATOR.   );
@RF00135 DS    0H                                               01S0137
          WTO   MF=(E,OUTBUF)  WRITE THE MESSAGE TO THE OPERATOR.
*   END;                            /* END OF PROCEDURE IGTDWTO.
*                                      IGTXEPLG                      */
@EL00002 DS    0H                                               01S0138
@EF00002 DS    0H                                               01S0138
@ER00002 LM    @14,@12,@SA00002                                 01S0138
         BR    @14                                              01S0138
*                                                               01S0139
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM DECLARES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0139
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0139
*     I031F FIXED(31) BASED,                                    01S0139
*     I031P PTR(31) BASED,                                      01S0139
*     I015F FIXED(15) BASED,                                    01S0139
*     I015P PTR(15) BASED,                                      01S0139
*     I008P PTR(8) BASED,                                       01S0139
*     I001C CHAR(1) BASED;                                      01S0139
*                                                               01S0140
*   /*****************************************************************/
*   /*                                                               */
*   /* MODULE PATCH AREA                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0140
*   DCL                                                         01S0140
*     APPATCH CHAR(*) INT STATIC LOCAL GEND;                    01S0140
*   GENERATE DATA DEFS(APPATCH);                                01S0141
*                                                               01S0142
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERAL REGISTER DECLARES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0142
*   DCL                                                         01S0142
*     R0F FIXED(31) REG(0),                                     01S0142
*     R0P PTR(24) REG(0),                                       01S0142
*     R0RSTD PTR(31) REG(0),                                    01S0142
*     R1F FIXED(31) REG(1),                                     01S0142
*     R1P PTR(24) REG(1),                                       01S0142
*     R1RSTD PTR(31) REG(1),                                    01S0142
*     R2F FIXED(31) REG(2),                                     01S0142
*     R2P PTR(24) REG(2),                                       01S0142
*     R2RSTD PTR(31) REG(2),                                    01S0142
*     R3F FIXED(31) REG(3),                                     01S0142
*     R3P PTR(24) REG(3),                                       01S0142
*     R3RSTD PTR(31) REG(3),                                    01S0142
*     R4F FIXED(31) REG(4),                                     01S0142
*     R4P PTR(24) REG(4),                                       01S0142
*     R4RSTD PTR(31) REG(4),                                    01S0142
*     R5F FIXED(31) REG(5),                                     01S0142
*     R5P PTR(24) REG(5),                                       01S0142
*     R5RSTD PTR(31) REG(5),                                    01S0142
*     R6F FIXED(31) REG(6),                                     01S0142
*     R6P PTR(24) REG(6),                                       01S0142
*     R6RSTD PTR(31) REG(6),                                    01S0142
*     R7F FIXED(31) REG(7),                                     01S0142
*     R7P PTR(24) REG(7),                                       01S0142
*     R7RSTD PTR(31) REG(7),                                    01S0142
*     R8F FIXED(31) REG(8),                                     01S0142
*     R8P PTR(24) REG(8),                                       01S0142
*     R8RSTD PTR(31) REG(8),                                    01S0142
*     R9F FIXED(31) REG(9),                                     01S0142
*     R9P PTR(24) REG(9),                                       01S0142
*     R9RSTD PTR(31) REG(9),                                    01S0142
*     R10F FIXED(31) REG(10),                                   01S0142
*     R10P PTR(24) REG(10),                                     01S0142
*     R10RSTD PTR(31) REG(10),                                  01S0142
*     R11F FIXED(31) REG(11),                                   01S0142
*     R11P PTR(24) REG(11),                                     01S0142
*     R11RSTD PTR(31) REG(11),                                  01S0142
*     R12F FIXED(31) REG(12),                                   01S0142
*     R12P PTR(24) REG(12),                                     01S0142
*     R12RSTD PTR(31) REG(12),                                  01S0142
*     R13F FIXED(31) REG(13),                                   01S0142
*     R13P PTR(24) REG(13),                                     01S0142
*     R13RSTD PTR(31) REG(13),                                  01S0142
*     R14F FIXED(31) REG(14),                                   01S0142
*     R14P PTR(24) REG(14),                                     01S0142
*     R14RSTD PTR(31) REG(14),                                  01S0142
*     R15F FIXED(31) REG(15),                                   01S0142
*     R15P PTR(24) REG(15),                                     01S0142
*     R15RSTD PTR(31) REG(15),                                  01S0142
*                                                               01S0142
*     /***************************************************************/
*     /*                                                             */
*     /* VPSS CONTROL BLOCK POINTER DECLARES                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0142
*     APSMPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT BLOCK 01S0142
*                                      (SUGGESTED POINTER)           */
*     APSCPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT CONTROL
*                                      WORD (SUGGESTED POINTER)      */
*     APINPTR PTR(24) REG(01),      /* USER'S INPUT PARAMETER LIST
*                                      (SUGGESTED POINTER)           */
*/*                                                                  */
*                                                               01S0142
*     APDATA PTR(24) REG(06),       /* ADDRESS OF DYNAMIC DATA  01S0142
*                                      WORKAREA (DATAREG)            */
*     APCODE PTR(24) REG(07),       /* PROGRAM CODE BASE REGISTER
*                                      (CODEREG)                     */
*     APDEBPTR PTR(24) REG(08),     /* VPSS DEB (SUGGESTED POINTER)  */
*     APNPPTR PTR(24) REG(08),      /* SUBSYSTEM INITIALIZATION 01S0142
*                                      WORKAREA BLOCK (ONLY USED BY
*                                      SUBSYSTEM INITIALIZATION)     */
*     APRLPTR PTR(24) REG(08),      /* VPSS ACB REQUEST LIST    01S0142
*                                      (SUGGESTED POINTER)           */
*     APCIPTR PTR(24) REG(08),      /* 3838 CONTROL TABLE (SUGGESTED
*                                      POINTER)                      */
*     APCWPTR PTR(24) REG(08),      /* CALL INTERFACE WORKAREA  01S0142
*                                      (SUGGESTED POINTER)           */
*     APERPTR PTR(24) REG(08),      /* ERP/IO APPENDAGE WORKAREA
*                                      (SUGGESTED POINTER)           */
*     APACBPTR PTR(24) REG(09),     /* VPSS ACB (SUGGESTED POINTER)  */
*     APCQPTR PTR(24) REG(09),      /* COMMAND QUEUE ELEMENT    01S0142
*                                      (SUGGESTED POINTER)           */
*     APOTPTR PTR(24) REG(09),      /* OPTION TABLE (SUGGESTED  01S0142
*                                      POINTER)                      */
*     APIOPTR PTR(24) REG(10),      /* I/O ELEMENT (SUGGESTED   01S0142
*                                      POINTER)                      */
*     APEXLPTR PTR(24) REG(10),     /* VPSS EXLST (SUGGESTED POINTER)*/
*     APUBPTR PTR(24) REG(10),      /* UNIT BLOCK (SUGGESTED POINTER)*/
*     APAXPTR PTR(24) REG(10),      /* VPSS ACB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCPPTR PTR(24) REG(10),      /* VPSS CALL PROCESSING     01S0142
*                                      INDICATORS (SUGGESTED POINTER)*/
*     APOCPTR PTR(24) REG(10),      /* VPSS OPEN/CLOSE SUBSYSTEM
*                                      WORKAREA (REQUIRED POINTER)   */
*     APATPTR PTR(24) REG(11),      /* VPSS ACB TABLE (SUGGESTED
*                                      POINTER)                      */
*     APLBPTR PTR(24) REG(11),      /* LABEL RESOLUTION TABLE   01S0142
*                                      (SUGGESTED POINTER)           */
*     APUTPTR PTR(24) REG(11),      /* USER TABLE (SUGGESTED POINTER)*/
*     APDSPTR PTR(24) REG(11),      /* VPSS DATASET ENTRY (SUGGESTED
*                                      POINTER)                      */
*     APXLPTR PTR(24) REG(11),      /* TRANSLATION TABLE (SUGGESTED
*                                      POINTER)                      */
*     APDXPTR PTR(24) REG(11),      /* VPSS DEB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED  01S0142
*                                      POINTER)                      */
*     APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA
*                                      (REQUIRED POINTER)            */
*     APRETURN PTR(24) REG(14),     /* RETURN ADDRESS FOR SUBROUTINE
*                                      LINKAGE                       */
*     APENTRY PTR(24) REG(15),      /* SUBROUTINE ENTRY POINT LINKAGE*/
*     APRCODE PTR(24) REG(15);      /* CONTAINS SUBROUTINE RETURN
*                                      CODE                          */
*                                                               01S0143
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REGISTER DECLARES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0143
*   END                                                         01S0143
*                                                               01S0143
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IEFJSCVT)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSUT5  (IGTD00ER)                                       */
*/*%INCLUDE SYSUT5  (IGTD00CK)                                       */
*                                                               01S0143
*       ;                                                       01S0143
@EL00001 L     @13,4(,@13)                                      01S0143
@EF00001 L     @00,@SIZDATD                                     01S0143
         LR    @01,@06                                          01S0143
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0143
         BR    @14                                              01S0143
@DATA    DS    0H
@SM00662 MVC   MEMBID(0),MAJORNM+4
@SM00672 MVC   OUTBUF(0),MSG(@15)
         DS    0F
@AL00086 DC    AL1(X'80')              LIST WITH   1 ARGUMENT(S)
         DC    AL3(IGT201I)
@DATD    DSECT
         DS    0F
@SA00001 DS    20F
@PC00001 DS    1F
@SA00002 DS    15F
@PC00002 DS    2F
@AL00001 DS    2A
IGTD00   CSECT
         DS    0F
@CF00052 DC    F'1'
@CF00055 DC    F'4'
@CF00204 DC    F'5'
@CF00059 DC    F'8'
@CF00542 DC    F'12'
@CF00659 DC    F'40'
@CF00666 DC    BL4'01000000000000000000000000000000'
@CF00669 DC    BL4'11100111111111111111111111111111'
@DATD    DSECT
         DS    0D
CSCBPTR  DS    A
WTORECB  DS    A
SSCTPTR  DS    A
COLDSTRT DS    BL1
WTORRPLY DS    CL4
MAJORNM  DS    CL8
MEMBID   DS    CL8
         DS    CL3
OUTBUF   DS    CL90
         ORG   OUTBUF
WTOSTUFF DS    AL4
MSGNO    DS    CL9
MSGTEXT  DS    CL77
         ORG   OUTBUF+90
IGTD00   CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00543 DC    C'        '
@CC00372 DC    C'APCT'
@CC00545 DC    C'SYSZ'
@CC00553 EQU   @CC00543
@CB00559 DC    X'80000000'
ALLOCATE DC    CL8'ALLOCATE'
MONITOR  DC    CL7'MONITOR'
@DATD    DSECT
MFLEXT  EXTRACT  ,,FIELDS=(COMM),MF=L
@DATD    DSECT
*                                     /*DEFINES THE WTOR LIST FORM.  */
WTORL    WTOR  'IGT207A SSSS: VERIFY COLD START. RESPOND Y, U, OR N',  *
               MF=L,ROUTCDE=(1)
IGTD00   CSECT
*                                       /*DEFINES THE WTOR DYN AREA  */
WTORL2   WTOR  'IGT207A SSSS: VERIFY COLD START. RESPOND Y, U, OR N',  *
               MF=L,ROUTCDE=(1)
WTORL2L EQU WTORL2,*-WTORL2,C'C' DEFINE RIGHT LENGTH AREA.
@DATD    DSECT
*                                 /*LIST FORM OF THE ENQ.            */
DYNENQ ENQ (*-*,*-*,E,7,SYSTEM),RET=HAVE,MF=L
IGTD00   CSECT
IGT200I WTO   'IGT200I  .... INVALID SUBSYSTEM NAME.',ROUTCDE=2,MF=L
IGT201I WTO   'IGT201I  START COMMAND SYNTAX ERROR.',ROUTCDE=2,MF=L
IGT202I WTO   'IGT202I  .... SUBSYSTEM ALREADY ACTIVE.',ROUTCDE=2,MF=L
IGT208I WTO   'IGT208I  ....: CANCEL ACTIVE USERS.',ROUTCDE=2,MF=L
IGTD00   CSECT
*                                   /* GENERATE PATCH
         IGTXZAP ,                 GENERATE PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGTD00   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
APDATA   EQU   @06
APCODE   EQU   @07
R3P      EQU   @03
APCTPTR  EQU   @12
APSVPTR  EQU   @13
R2F      EQU   @02
R3F      EQU   @03
R2P      EQU   @02
R1P      EQU   @01
R15F     EQU   @15
R15P     EQU   @15
R4F      EQU   @04
APACBPTR EQU   @09
APATPTR  EQU   @11
APAXPTR  EQU   @10
APCIPTR  EQU   @08
APCPPTR  EQU   @10
APCQPTR  EQU   @09
APCWPTR  EQU   @08
APDEBPTR EQU   @08
APDSPTR  EQU   @11
APDXPTR  EQU   @11
APENTRY  EQU   @15
APERPTR  EQU   @08
APEXLPTR EQU   @10
APINPTR  EQU   @01
APIOPTR  EQU   @10
APLBPTR  EQU   @11
APNPPTR  EQU   @08
APOCPTR  EQU   @10
APOTPTR  EQU   @09
APRCODE  EQU   @15
APRETURN EQU   @14
APRLPTR  EQU   @08
APSCPTR  EQU   @01
APSMPTR  EQU   @01
APUBPTR  EQU   @10
APUTPTR  EQU   @11
APXLPTR  EQU   @11
R0F      EQU   @00
R0P      EQU   @00
R0RSTD   EQU   @00
R1F      EQU   @01
R1RSTD   EQU   @01
R10F     EQU   @10
R10P     EQU   @10
R10RSTD  EQU   @10
R11F     EQU   @11
R11P     EQU   @11
R11RSTD  EQU   @11
R12F     EQU   @12
R12P     EQU   @12
R12RSTD  EQU   @12
R13F     EQU   @13
R13P     EQU   @13
R13RSTD  EQU   @13
R14F     EQU   @14
R14P     EQU   @14
R14RSTD  EQU   @14
R15RSTD  EQU   @15
R2RSTD   EQU   @02
R3RSTD   EQU   @03
R4P      EQU   @04
R4RSTD   EQU   @04
R5F      EQU   @05
R5P      EQU   @05
R5RSTD   EQU   @05
R6F      EQU   @06
R6P      EQU   @06
R6RSTD   EQU   @06
R7F      EQU   @07
R7P      EQU   @07
R7RSTD   EQU   @07
R8F      EQU   @08
R8P      EQU   @08
R8RSTD   EQU   @08
R9F      EQU   @09
R9P      EQU   @09
R9RSTD   EQU   @09
@NM00001 EQU   0
APCVZD10 EQU   0
APCT     EQU   0
APCTID   EQU   APCT
APCTSSVT EQU   APCT+8
APCTENQM EQU   APCT+12
APCTSSID EQU   APCTENQM+4
APCTSMIN EQU   APCT+32
APCTSMAD EQU   APCT+36
APCTZ@@@ EQU   APCT+40
APCTU@@@ EQU   APCT+440
APCTBR14 EQU   APCT+840
APCTERRS EQU   APCT+876
@NM00015 EQU   APCT+936
APCTSTAT EQU   @NM00015
APCTSTRT EQU   APCTSTAT
APCTHALT EQU   APCTSTAT
APCTTERM EQU   APCTSTAT
APCTWARM EQU   APCTSTAT
APCTPRSW EQU   @NM00015+1
APCTAPCQ EQU   APCT+944
APCTCQAQ EQU   APCT+952
APCTZ@@1 EQU   APCT+1120
SSCT     EQU   0
SSCTFLG1 EQU   SSCT+12
SSCTSSVT EQU   SSCT+16
SSCTSUSE EQU   SSCT+20
APSV     EQU   0
APSVREGS EQU   APSV+12
CHAIN    EQU   0
CHPTR    EQU   CHAIN
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHPKE    EQU   CHAIN+28
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHECBP   EQU   CHASM
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
WTOARG   EQU   0
MSGPTR   EQU   WTOARG
VLIST1   EQU   MSGPTR
VARDATAP EQU   WTOARG+4
MSG      EQU   0
MSGLEN   EQU   MSG
VARDATA  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
INPARM   EQU   0
INPLEN   EQU   INPARM
INPDATA  EQU   INPARM+2
IN1      EQU   0
IN2      EQU   0
APCTZ    EQU   APCTZ@@@
APCTZD10 EQU   APCTZ+28
APCTZ1   EQU   APCTZ@@1
APCTU    EQU   APCTU@@@
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00053 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
@NM00047 EQU   APCTU+48
APCT1JBJ EQU   APCTU+44
APCT2JHL EQU   APCTU+40
APCT1JHL EQU   APCTU+36
APCT1JHT EQU   APCTU+32
APCT2JHC EQU   APCTU+28
APCT1JHC EQU   APCTU+24
APCT1JAA EQU   APCTU+20
APCT1MBM EQU   APCTU+16
APCT1CMD EQU   APCTU+12
APCT2MBD EQU   APCTU+8
APCT1MBD EQU   APCTU+4
APCT1MAB EQU   APCTU
@NM00046 EQU   APCTZ1+108
APCTZKGD EQU   APCTZ1+104
APCTZKGC EQU   APCTZ1+100
APCTZKGB EQU   APCTZ1+96
APCTZKGA EQU   APCTZ1+92
APCTZJAX EQU   APCTZ1+88
APCTZDWI EQU   APCTZ1+84
APCTZLCB EQU   APCTZ1+80
APCTZLCA EQU   APCTZ1+76
APCTZJDM EQU   APCTZ1+72
APCTZJDG EQU   APCTZ1+68
APCTZJDD EQU   APCTZ1+64
APCTZKBF EQU   APCTZ1+60
APCTZUKA EQU   APCTZ1+56
@NM00045 EQU   APCTZ1+52
@NM00044 EQU   APCTZ1+48
@NM00043 EQU   APCTZ1+44
APCTZKBE EQU   APCTZ1+40
@NM00042 EQU   APCTZ1+36
@NM00041 EQU   APCTZ1+32
APCTZKBD EQU   APCTZ1+28
APCTZJHQ EQU   APCTZ1+24
APCTZJHC EQU   APCTZ1+20
@NM00040 EQU   APCTZ1+16
@NM00039 EQU   APCTZ1+12
APCTZKBB EQU   APCTZ1+8
APCTZKBC EQU   APCTZ1+4
APCTZKBA EQU   APCTZ1
@NM00038 EQU   APCTZ+396
APCTZJHW EQU   APCTZ+392
APCTZJHT EQU   APCTZ+388
APCTZJHR EQU   APCTZ+384
APCTZDQR EQU   APCTZ+380
APCTZJHE EQU   APCTZ+376
APCTZJHF EQU   APCTZ+372
APCTZJHO EQU   APCTZ+368
APCTZJH6 EQU   APCTZ+364
APCTZJDJ EQU   APCTZ+360
APCTZJDA EQU   APCTZ+356
@NM00037 EQU   APCTZ+352
@NM00036 EQU   APCTZ+348
APCTZKDA EQU   APCTZ+344
APCTZKCA EQU   APCTZ+340
@NM00035 EQU   APCTZ+336
APCTZJBM EQU   APCTZ+332
APCTZJBJ EQU   APCTZ+328
APCTZJBG EQU   APCTZ+324
APCTZJBD EQU   APCTZ+320
APCTZJBA EQU   APCTZ+316
APCTZJJ0 EQU   APCTZ+312
APCTZJI3 EQU   APCTZ+308
APCTZJI0 EQU   APCTZ+304
APCTZJH0 EQU   APCTZ+300
APCTZMIF EQU   APCTZ+296
@NM00034 EQU   APCTZ+292
APCTZD83 EQU   APCTZ+288
APCTZMIC EQU   APCTZ+284
APCTZMIB EQU   APCTZ+280
APCTZD82 EQU   APCTZ+276
APCTZKAA EQU   APCTZ+272
APCTZDAP EQU   APCTZ+268
APCTZUJA EQU   APCTZ+264
APCTZUFA EQU   APCTZ+260
APCTZJAY EQU   APCTZ+256
APCTZJAP EQU   APCTZ+252
APCTZJAM EQU   APCTZ+248
APCTZJAJ EQU   APCTZ+244
APCTZJAG EQU   APCTZ+240
APCTZJAD EQU   APCTZ+236
APCTZJAA EQU   APCTZ+232
APCTZJFA EQU   APCTZ+228
APCTZUHB EQU   APCTZ+224
APCTZUHA EQU   APCTZ+220
APCTZDIO EQU   APCTZ+216
APCTZUAG EQU   APCTZ+212
APCTZUAF EQU   APCTZ+208
APCTZDUA EQU   APCTZ+204
APCTZDDQ EQU   APCTZ+200
APCTZDEQ EQU   APCTZ+196
APCTZDUL EQU   APCTZ+192
APCTZDDA EQU   APCTZ+188
APCTZDIP EQU   APCTZ+184
APCTZDBK EQU   APCTZ+180
APCTZDAL EQU   APCTZ+176
APCTZDMM EQU   APCTZ+172
APCTZDWT EQU   APCTZ+168
APCTZMJI EQU   APCTZ+164
APCTZDRI EQU   APCTZ+160
APCTZDID EQU   APCTZ+156
APCTZD81 EQU   APCTZ+152
APCTZDMD EQU   APCTZ+148
APCTZMMA EQU   APCTZ+144
APCTZMJH EQU   APCTZ+140
APCTZMJC EQU   APCTZ+136
APCTZMJB EQU   APCTZ+132
APCTZMBM EQU   APCTZ+128
APCTZMBK EQU   APCTZ+124
APCTZMBH EQU   APCTZ+120
APCTZDX4 EQU   APCTZ+116
APCTZDX3 EQU   APCTZ+112
APCTZDX2 EQU   APCTZ+108
APCTZDX1 EQU   APCTZ+104
APCTZMBR EQU   APCTZ+100
APCTZMBG EQU   APCTZ+96
APCTZMBD EQU   APCTZ+92
APCTZMBA EQU   APCTZ+88
APCTZD4E EQU   APCTZ+84
APCTZD80 EQU   APCTZ+80
APCTZD60 EQU   APCTZ+76
APCTZD49 EQU   APCTZ+72
APCTZD48 EQU   APCTZ+68
APCTZD47 EQU   APCTZ+64
APCTZD46 EQU   APCTZ+60
APCTZD45 EQU   APCTZ+56
APCTZD44 EQU   APCTZ+52
APCTZD43 EQU   APCTZ+48
APCTZD42 EQU   APCTZ+44
APCTZD41 EQU   APCTZ+40
APCTZD40 EQU   APCTZ+36
APCTZD20 EQU   APCTZ+32
APCTZUBB EQU   APCTZ+24
@NM00033 EQU   APCTZ+20
APCTZUAE EQU   APCTZ+16
APCTZUAD EQU   APCTZ+12
APCTZUAC EQU   APCTZ+8
APCTZUAB EQU   APCTZ+4
APCTZUAA EQU   APCTZ
VLIST2   EQU   VARDATAP
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00052 EQU   CHSHORT+84
@NM00051 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00050 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPCOI   EQU   CHPARM
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
APSVWORK EQU   APSV+80
@NM00049 EQU   APSV+80
APSVFREE EQU   APSV+76
APSVAPSM EQU   APSV+72
APSVRG12 EQU   APSVREGS+56
APSVRG11 EQU   APSVREGS+52
APSVRG10 EQU   APSVREGS+48
APSVRG9  EQU   APSVREGS+44
APSVRG8  EQU   APSVREGS+40
APSVRG7  EQU   APSVREGS+36
APSVRG6  EQU   APSVREGS+32
APSVRG5  EQU   APSVREGS+28
APSVRG4  EQU   APSVREGS+24
APSVRG3  EQU   APSVREGS+20
APSVRG2  EQU   APSVREGS+16
APSVRG1  EQU   APSVREGS+12
APSVRG0  EQU   APSVREGS+8
APSVRG15 EQU   APSVREGS+4
APSVRG14 EQU   APSVREGS
APSVNEXT EQU   APSV+8
APSVPREV EQU   APSV+4
APSVAPSC EQU   APSV
SSCTRSV1 EQU   SSCT+13
@NM00048 EQU   SSCTFLG1
SSCTUPSS EQU   SSCTFLG1
SSCTSFOR EQU   SSCTFLG1
SSCTSNAM EQU   SSCT+8
SSCTSCTA EQU   SSCT+4
SSCTID   EQU   SSCT
@NM00032 EQU   APCT+1556
APCTSVCT EQU   APCT+1552
APCTDAVT EQU   APCT+1548
APCTLOGL EQU   APCT+1544
@NM00031 EQU   APCT+1540
APCTDMPU EQU   APCT+1536
APCTDMPM EQU   APCT+1532
APCTNDMP EQU   APCT+1530
APCTASID EQU   APCT+1528
APCTLGPG EQU   APCT+1526
APCTLGLN EQU   APCT+1524
APCTAPVU EQU   APCT+1520
APCTABR  EQU   APCT+1116
APCTACTR EQU   APCT+1112
APCTLOGD EQU   APCT+1108
APCTDCLD EQU   APCT+1104
APCTIOAP EQU   APCT+1100
@NM00030 EQU   APCT+1080
@NM00029 EQU   APCT+1078
APCTKCAX EQU   APCT+1076
APCTABND EQU   APCT+1072
@NM00028 EQU   APCT+1068
APCTAPIO EQU   APCT+1064
APCTCSCT EQU   APCT+1060
APCTSTDF EQU   APCT+1056
APCTSTMX EQU   APCT+1052
APCTRGMX EQU   APCT+1048
APCTSIZE EQU   APCT+1046
APCTCTUB EQU   APCT+1045
APCTMFID EQU   APCT+1044
APCTMFSZ EQU   APCT+1040
APCTCRTN EQU   APCT+1036
APCTAPCP EQU   APCT+1032
APCTAMNA EQU   APCT+1028
APCTEMNA EQU   APCT+1024
APCTAALP EQU   APCT+1020
APCTEALP EQU   APCT+1016
@NM00027 EQU   APCT+1012
@NM00026 EQU   APCT+1008
@NM00025 EQU   APCT+1004
APCTEIPL EQU   APCT+1000
@NM00024 EQU   APCT+996
@NM00023 EQU   APCT+992
@NM00022 EQU   APCT+988
@NM00021 EQU   APCT+984
@NM00020 EQU   APCT+980
APCTECPW EQU   APCT+976
APCTEULD EQU   APCT+972
APCTECPT EQU   APCT+968
APCTEALC EQU   APCT+964
APCTECBL EQU   APCT+960
APCTECIT EQU   APCT+956
APCTCQAF EQU   APCTCQAQ
APCTCQL  EQU   APCTAPCQ+4
APCTCQF  EQU   APCTAPCQ
APCTCQLK EQU   APCT+940
@NM00019 EQU   @NM00015+2
@NM00018 EQU   APCTPRSW
APCTAPST EQU   APCTPRSW
@NM00017 EQU   APCTPRSW
@NM00016 EQU   APCTSTAT
APCTQSCE EQU   APCTSTAT
APCTACT  EQU   APCTSTAT
@NM00014 EQU   APCT+935
APCTSOUT EQU   APCT+934
APCTDAID EQU   APCT+933
APCTSV34 EQU   APCT+932
APCTMJOB EQU   APCT+928
APCTTCB  EQU   APCT+924
APCTASCB EQU   APCT+920
APCTDCNW EQU   APCT+918
APCTDCNR EQU   APCT+916
@NM00013 EQU   APCT+912
@NM00012 EQU   APCT+908
@NM00011 EQU   APCT+904
@NM00010 EQU   APCT+900
@NM00009 EQU   APCTERRS+22
APCTERTJ EQU   APCTERRS+20
APCTERTD EQU   APCTERRS+18
APCTERTC EQU   APCTERRS+16
APCTERTB EQU   APCTERRS+14
APCTERTA EQU   APCTERRS+12
APCTERT9 EQU   APCTERRS+10
APCTERT3 EQU   APCTERRS+8
APCTERT2 EQU   APCTERRS+6
APCTERT1 EQU   APCTERRS+4
APCTERT0 EQU   APCTERRS+2
APCTERTT EQU   APCTERRS
APCTDSAP EQU   APCT+872
APCTISUB EQU   APCT+868
APCTUBAP EQU   APCT+864
APCTAPDS EQU   APCT+860
APCTUBIC EQU   APCT+856
APCTUBIS EQU   APCT+852
APCTAPUB EQU   APCT+848
APCTUBLK EQU   APCT+844
APCTBR1A EQU   APCTBR14+2
@NM00008 EQU   APCTBR14
APCTSMSZ EQU   APCTSMAD+2
@NM00007 EQU   APCTSMAD+1
@NM00006 EQU   APCTSMAD
APCTSMIS EQU   APCTSMIN+2
@NM00005 EQU   APCTSMIN+1
APCTSMSP EQU   APCTSMIN
@NM00004 EQU   APCT+30
APCTLINE EQU   APCT+28
APCTLBSZ EQU   APCT+24
APCTREG  EQU   APCT+20
@NM00003 EQU   APCTENQM
APCTUSER EQU   APCT+4
ENQRC    EQU   @NM00001+3
@NM00002 EQU   @NM00001
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00076 EQU   @RC00067
@ENDDATA EQU   *
         END   IGTD00,(C'PLS2003',0701,77092)
