TD40     TITLE 'IGTD40 - COMMAND PROCESSING ROUTINE.                   *
                        '
IGTD40   CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IGTD40    77.174'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @07,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@07                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         IGTYGSV  R,LV=(0)
         LR    @06,@01                                          01S0001
         USING @DATD,@06                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @06,8(,@13)                                      01S0001
         LR    @13,@06                                          01S0001
*                                                               01S0082
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/* END OF APMM                                                      */
*/*                                                                  */
*                                                               01S0083
         EJECT
*                                                               01S0083
*   /*****************************************************************/
*   /*                                                               */
*   /* CREATE THE STAE ENVIRONMENT.                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0083
*   DO;                             /* PROCESS THE STAE.             */
*     RFY                                                       01S0084
*      (R2P,                                                    01S0084
*       R15P) RSTD;                 /* NEED THESE REGS.              */
*     D40APCT=APCTPTR;              /* PTR TO THE APCT.              */
         ST    APCTPTR,D40APCT                                  01S0085
*     D40CODE=40;                   /* INDICATE THE ROUTINE.         */
         MVC   D40CODE(2),@CH00573                              01S0086
*     D40FLAGS=''X;                 /* CLEAR FLAGS.                  */
         XC    D40FLAGS(2),D40FLAGS                             01S0087
*     D40RTRY=ADDR(STAERTRN);       /* ADDRESS OF THE RETRY ROUTINE. */
         LA    @14,STAERTRN                                     01S0088
         ST    @14,D40RTRY                                      01S0088
*     R2P=APCTZD4E;                 /* ADDRESS OF THE EXIT ROUTINE.  */
         L     R2P,APCTZD4E(,APCTPTR)                           01S0089
*     GEN REFS(DSTAE,SSTAE,R2P)     /* ISSUE THE STAE.               */
*         FLOWS(STAERTRN) SEQFLOW NOEXIT;                       01S0090
         MVC   DSTAE,SSTAE          MOV IN THE SKELETON.
         IGTYSTAE (R2P),MF=(E,DSTAE),PARAM=D40STAE ISSUE THE STAE.
*     RFY                                                       01S0091
*      (R2P,                                                    01S0091
*       R15P) UNRSTD;                                           01S0091
*   END;                            /* PROCESS THE STAE.             */
*   INUSER='0'B;                    /* WE HAVE CONTROL.              */
         NI    INUSER,B'01111111'                               01S0093
*   DO UNTIL APCTHALT='1'B;         /* PROCESS COMMANDS UNTIL THE
*                                      SYSTEM CARRIES OUT AN OPERATOR
*                                      HALT COMMAND. THIS CAN OCCUR
*                                      ONLY WHEN ALL USERS HAVE 01S0094
*                                      TERMINATED.                   */
@DL00094 DS    0H                                               01S0095
*     DO;                           /* IGTYWAIT                 01S0095
*                                      ECB(APCTECPW)LONG(YES)        */
*       RFY                                                     01S0096
*        (GPR00F,                                               01S0096
*         GPR01P) RSTD;             /* REGISTERS USED                */
*       DCL                                                     01S0097
*         BIT0007X BIT(8) BASED(ADDR(APCTECPW));/* OVERLAY BYTE-0 OF
*                                      ECB                           */
*       IF BIT0007X(2)='0'B THEN    /* IF ECB NOT ALREADY POSTED     */
         TM    BIT0007X+976(APCTPTR),B'01000000'                01S0098
         BNZ   @RF00098                                         01S0098
*         DO;                       /* THEN ISSUE WAIT SVC           */
*           GPR01P=ADDR(APCTECPW);  /* POINT TO ECB                  */
         LA    GPR01P,APCTECPW(,APCTPTR)                        01S0100
*           GPR00F=1×'80000000'X;   /* WAIT COUNT                    */
         L     GPR00F,@CF00871                                  01S0101
*           SVC(1);                 /* WAIT FOR ECB POSTING          */
         SVC   1                                                01S0102
*         END;                      /* ECB WAIT COMPLETE             */
*       RFY                                                     01S0104
*        (GPR00F,                                               01S0104
*         GPR01P) UNRSTD;           /* FINISHED WITH REGISTERS       */
@RF00098 DS    0H                                               01S0105
*     END;                          /* ECB WAIT COMPLETE WAIT FOR A
*                                      COMMAND TO PROC.              */
*     RESPECIFY                                                 01S0106
*       APCQ BASED(APCQPTR);        /* BASE POINTER TO THE APCQ.     */
*     RESPECIFY                                                 01S0107
*       APCQPTR RESTRICTED;         /* POINTER TO THE APCQ.          */
*     CALL APCVZDX3;                /* RESET THE ECB, AND REMOVE THE
*                                      OLDEST APCQ FROM THE QUEUE.
*                                      THE APCQ ADDRESS WILL BE 01S0108
*                                      PLACED IN APCQPTR.            */
         L     @15,APCTZDX3(,APCTPTR)                           01S0108
         BALR  @14,@15                                          01S0108
*     DO WHILE APCQPTR^=0;          /* PROCESS ALL COMMANDS HAVE BEEN
*                                      REMOVED FROM THE QUEUE,  01S0109
*                                      SIGNIFIED BY THE APCQPTR BEING
*                                      ZERO ON RETURN FROM APCVZDX3
*                                      AT THE END OF THE LOOP.       */
         B     @DE00109                                         01S0109
@DL00109 DS    0H                                               01S0110
*       IF APCQINT='0'B THEN        /* IF THE COMMAND WAS NOT   01S0110
*                                      INTERNALLY GENERATED, IT MUST
*                                      BE PARSED.                    */
         TM    APCQINT(APCQPTR),B'10000000'                     01S0110
         BNZ   @RF00110                                         01S0110
*         DO;                                                   01S0111
*           RECURSE='0'B;           /* RESET RECURSIVE ABEND FLAG.   */
         NI    RECURSE,B'10111111'                              01S0112
*           STM(R0P,R15P,D40REGS);  /* SAVE RETRY REGS.              */
         STM   R0P,R15P,D40REGS                                 01S0113
*           INUSER='1'B;            /* WE ARE NOW IN THE USER.       */
*                                                               01S0114
         OI    INUSER,B'10000000'                               01S0114
*           /*********************************************************/
*           /*                                                       */
*           /* WE NOW CALL AN INSTALLATION ROUTINE TO ALLOW THEM TO  */
*           /* APPROVE OR DISAPPROVE THE COMMAND. THEY MAY ALSO      */
*           /* EXECUTE IT IF THEY SO CHOOSE. TO TELL US WHICH OPTION */
*           /* WAS SELECTED, R15 IS EXAMINED. RC = 0 MEANS THAT THE  */
*           /* MONITOR IS TO PROCESS IT. THE ROUTINE MAY HAVE ALTERED*/
*           /* THE ORIGINAL CONTENTS IF HE WANTED TO. RC = 4 MEANS   */
*           /* THAT THE EXIT ROUTINE PROCESSED THE COMMAND. THIS     */
*           /* FEATURE ALLOWS INSTALLATION DEFINED COMMANDS THAT THE */
*           /* MONITOR NEED NOT BE CONCERNED WITH. ANY OTHER RETURN  */
*           /* CODE MEANS THAT THE INSTALLATION REJECTED THE COMMAND.*/
*           /* --------------------------------- ONLY OPERATOR       */
*           /* GENERATED COMMANDS ARE PASSED TO THE EXIT ROUTINE.    */
*           /* COMMANDS INTERNALLY GENERATED BY THE MONITOR ARE NOT  */
*           /* PASSED TO THE EXIT. --------------------------- THE   */
*           /* FORMAT OF THE INPUT IS A STANDARD PARMATER LIST       */
*           /* POINTING TO A HALF WORD CONTAINING THE LENGTH OF THE  */
*           /* COMMAND FOLLOWED BY THE COMMAND (SAME AS A VL RECORD).*/
*           /* THE LENGTH OF THE COMMAND DATA MAY BE CHANGED AS LONG */
*           /* AS THE DATA DOES NOT EXCEED 140 CHARACTERS IN LENGTH  */
*           /* AND THE HALF WORD CONTAINING THE LENGTH IS UPDATED.   */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0115
*           CALL APCV1CMD(APCQTXLN);/* LET USER VERIFY COMMAND.      */
         LA    @08,APCQTXLN(,APCQPTR)                           01S0115
         ST    @08,@AL00001                                     01S0115
         L     @15,APCT1CMD(,APCTPTR)                           01S0115
         LA    @01,@AL00001                                     01S0115
         BALR  @14,@15                                          01S0115
*           RESPECIFY                                           01S0116
*             R15P RESTRICTED;      /* SAVE USER RETURN CODE.        */
*           INUSER='0'B;            /* WE ARE NOW OUT OF USER.       */
         NI    INUSER,B'01111111'                               01S0117
*           IF R15P=0 THEN          /* MEANS HE OKED IT.             */
         LTR   R15P,R15P                                        01S0118
         BNZ   @RF00118                                         01S0118
*             DO;                                               01S0119
*               RESPECIFY                                       01S0120
*                 R15P UNRESTRICTED;/* NO LONGER NEED RC.            */
*               IF APCQTXLN>40 THEN /* SET PROPER LENGTH.            */
         LA    @08,40                                           01S0121
         CH    @08,APCQTXLN(,APCQPTR)                           01S0121
         BNL   @RF00121                                         01S0121
*                 TXLEN=40;                                     01S0122
         ST    @08,TXLEN                                        01S0122
*               ELSE                                            01S0123
*                 TXLEN=APCQTXLN;   /* USE WHAT WE WERE GIVEN.       */
         B     @RC00121                                         01S0123
@RF00121 LH    @08,APCQTXLN(,APCQPTR)                           01S0123
         ST    @08,TXLEN                                        01S0123
*               CALL APCVZDWT(IGT212I,/* LOG THE COMMAND.            */
*                   14,APCQCMND,TXLEN);                         01S0124
@RC00121 LA    @08,@CF00579                                     01S0124
         ST    @08,@AL00001                                     01S0124
         LA    @08,@CF00393                                     01S0124
         ST    @08,@AL00001+4                                   01S0124
         LA    @08,APCQCMND(,APCQPTR)                           01S0124
         ST    @08,@AL00001+8                                   01S0124
         LA    @08,TXLEN                                        01S0124
         ST    @08,@AL00001+12                                  01S0124
         MVI   @AL00001+12,X'80'                                01S0124
         L     @15,APCTZDWT(,APCTPTR)                           01S0124
         LA    @01,@AL00001                                     01S0124
         BALR  @14,@15                                          01S0124
*               CALL PARSE;         /* PARSE THE COMMAND.            */
         BAL   @14,PARSE                                        01S0125
*               RESPECIFY                                       01S0126
*                 R15P RESTRICTED;  /* USER RETURN CODE.             */
*             END;                                              01S0127
*           ELSE                                                01S0128
*             IF R15P^=4 THEN       /* 4 MEANS THAT USER PROCESSED
*                                      IT.                           */
         B     @RC00118                                         01S0128
@RF00118 C     R15P,@CF00062                                    01S0128
         BE    @RF00128                                         01S0128
*               DO;                                             01S0129
*                 APCQIINF=APCQERR; /* SER ERROR CODE.               */
         MVC   APCQIINF(4,APCQPTR),@CF00038                     01S0130
*                 CODE='12';                                    01S0131
         MVC   CODE(2),@CC00658                                 01S0131
*               END;                                            01S0132
*             ELSE                  /* USER DID ALL THAT WAS    01S0133
*                                      NECESSARY                     */
*               APCQIINF=APCQNOP;   /* SO WE DONE HAVE ANYTHING TO
*                                      DO.                           */
         B     @RC00128                                         01S0133
@RF00128 MVC   APCQIINF(4,APCQPTR),@CF00047                     01S0133
*           RESPECIFY                                           01S0134
*             R15P UNRESTRICTED;    /* FREE R15.                     */
@RC00128 DS    0H                                               01S0134
@RC00118 DS    0H                                               01S0135
*         END;                                                  01S0135
*                                                               01S0135
*       /*************************************************************/
*       /*                                                           */
*       /* SELECT THE PROPER COMMAND PROCESSING ROUTINE.             */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0136
*       DO;                         /* CASE(APCQIINF)NAMES(DISP,DUMP,
*                                      ENAB,DSAB,IPL,UNLD,IC,HALT,DUL
*                                      S,MDMP,PTCH,FDMP,UDMP,RIPL,ERR
*                                      ,NOP,DWI)                     */
@RF00110 DS    0H                                               01S0137
*         DCL                                                   01S0137
*           CL0001@ LABEL BASED(CP0001@(APCQIINF)) VALUERANGE(DISP,DUMP
*               ,ENAB,DSAB,IPL,UNLD,IC,HALT,DULS,MDMP,PTCH,FDMP,UDMP,
*               RIPL,ERR,NOP,DWI);  /* BRANCH TARGET                 */
*         DCL                                                   01S0138
*           CP0001@(17) PTR(31) INIT(ADDR(DISP),ADDR(DUMP),ADDR(ENAB),
*               ADDR(DSAB),ADDR(IPL),ADDR(UNLD),ADDR(IC),ADDR(HALT),
*               ADDR(DULS),ADDR(MDMP),ADDR(PTCH),ADDR(FDMP),ADDR(UDMP),
*               ADDR(RIPL),ADDR(ERR),ADDR(NOP),ADDR(DWI));      01S0138
*         GOTO CL0001@;             /* BRANCH TO SELECTED CASE  01S0139
*                                      ROUTINES MATCH UP WITH APCQ
*                                      COMMAND OP CODES.             */
         L     @08,APCQIINF(,APCQPTR)                           01S0139
         SLA   @08,2                                            01S0139
         L     @08,CP0001@-4(@08)                               01S0139
         BR    @08                                              01S0139
*DISP:                                                          01S0140
*         DO;                       /* SUBCASE                       */
DISP     DS    0H                                               01S0141
*           CALL APCVZD41;          /* PROCESS DISPLAY COMMAND.      */
         L     @15,APCTZD41(,APCTPTR)                           01S0141
         BALR  @14,@15                                          01S0141
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0142
*         END;                      /* END OF SUBCASE                */
*DUMP:                                                          01S0144
*FDMP:                                                          01S0144
*UDMP:                                                          01S0144
*         DO;                       /* SUBCASE                       */
DUMP     DS    0H                                               01S0144
FDMP     DS    0H                                               01S0144
UDMP     DS    0H                                               01S0145
*           CALL APCVZD42;          /* PROCESS THE DUMP AND FORCE
*                                      DUMP AND USER DUMP COMMANDS.  */
         L     @15,APCTZD42(,APCTPTR)                           01S0145
         BALR  @14,@15                                          01S0145
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0146
*         END;                      /* END OF SUBCASE                */
*ENAB:                                                          01S0148
*         DO;                       /* SUBCASE                       */
ENAB     DS    0H                                               01S0149
*           CALL APCVZD43;          /* PROCESS THE ENABLE COMMAND.   */
         L     @15,APCTZD43(,APCTPTR)                           01S0149
         BALR  @14,@15                                          01S0149
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0150
*         END;                      /* END OF SUBCASE                */
*DSAB:                                                          01S0152
*         DO;                       /* SUBCASE                       */
DSAB     DS    0H                                               01S0153
*           CALL APCVZD44;          /* PROCESS THE DISABLE COMMAND.  */
         L     @15,APCTZD44(,APCTPTR)                           01S0153
         BALR  @14,@15                                          01S0153
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0154
*         END;                      /* END OF SUBCASE                */
*IPL:                                                           01S0156
*         DO;                       /* SUBCASE                       */
IPL      DS    0H                                               01S0157
*           CALL APCVZD45;          /* PROCESS THE IPL COMMAND.      */
         L     @15,APCTZD45(,APCTPTR)                           01S0157
         BALR  @14,@15                                          01S0157
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0158
*         END;                      /* END OF SUBCASE                */
*UNLD:                                                          01S0160
*         DO;                       /* SUBCASE                       */
UNLD     DS    0H                                               01S0161
*           CALL APCVZD46;          /* PROCESS THE UNLOAD COMMAND.   */
         L     @15,APCTZD46(,APCTPTR)                           01S0161
         BALR  @14,@15                                          01S0161
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0162
*         END;                      /* END OF SUBCASE                */
*IC:                                                            01S0164
*         DO;                       /* SUBCASE                       */
IC       DS    0H                                               01S0165
*           CALL APCVZD47;          /* PROCESS AN INITIALIZATION
*                                      COMPLETE COMMAND.             */
         L     @15,APCTZD47(,APCTPTR)                           01S0165
         BALR  @14,@15                                          01S0165
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0166
*         END;                      /* END OF SUBCASE                */
*HALT:                                                          01S0168
*         DO;                       /* SUBCASE                       */
HALT     DS    0H                                               01S0169
*           CALL APCVZD48;          /* PROCESS THE HALT COMMAND.     */
         L     @15,APCTZD48(,APCTPTR)                           01S0169
         BALR  @14,@15                                          01S0169
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0170
*         END;                      /* END OF SUBCASE                */
*DULS:                                                          01S0172
*         DO;                       /* SUBCASE                       */
DULS     DS    0H                                               01S0173
*           CALL APCVZD49;          /* PROCESS THE DISABLE UNLOAD
*                                      SCAN                          */
         L     @15,APCTZD49(,APCTPTR)                           01S0173
         BALR  @14,@15                                          01S0173
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0174
*         END;                      /* END OF SUBCASE                */
*MDMP:                                                          01S0176
*         DO;                       /* SUBCASE                       */
MDMP     DS    0H                                               01S0177
*           CALL APCVZDMD;          /* PROCESS THE MONITOR DUMP 01S0177
*                                      COMMAND                       */
         L     @15,APCTZDMD(,APCTPTR)                           01S0177
         BALR  @14,@15                                          01S0177
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0178
*         END;                      /* END OF SUBCASE                */
*RIPL:                                                          01S0180
*         DO;                       /* SUBCASE                       */
RIPL     DS    0H                                               01S0181
*           CALL APCVZDRI;          /* PROCESS THE RE-IPL REQUEST.   */
         L     @15,APCTZDRI(,APCTPTR)                           01S0181
         BALR  @14,@15                                          01S0181
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0182
*         END;                      /* END OF SUBCASE                */
*ERR:                                                           01S0184
*PTCH:                                                          01S0184
*         DO;                       /* SUBCASE                       */
*                                                               01S0184
ERR      DS    0H                                               01S0184
PTCH     DS    0H                                               01S0185
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS AN INVALID COMMAND VERB.                      */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0185
*           IF APCQTXLN>40 THEN     /* IF MORE THAN 40 CHAR OF INPUT */
         LA    @08,40                                           01S0185
         CH    @08,APCQTXLN(,APCQPTR)                           01S0185
         BNL   @RF00185                                         01S0185
*             TXLEN=40;             /* THEN ONLY OUTPUT 40.          */
         ST    @08,TXLEN                                        01S0186
*           ELSE                                                01S0187
*             TXLEN=APCQTXLN;       /* USE WHAT WE ARE GIVEN.        */
         B     @RC00185                                         01S0187
@RF00185 LH    @08,APCQTXLN(,APCQPTR)                           01S0187
         ST    @08,TXLEN                                        01S0187
*           QUOTE=TXLEN+15;         /* OFFSET TO CLOSING QUOTE.      */
@RC00185 L     @08,TXLEN                                        01S0188
         LA    @08,15(,@08)                                     01S0188
         STH   @08,QUOTE                                        01S0188
*           CALL APCVZDWT           /* CALL THE ERROR MESSAGE WRITER.*/
*               (IGT213I,14,APCTSSID,4,/* MESSAGE NUMBER AND SUBSYS. */
*               41,CODE,2,          /* ERROR CODE.                   */
*               66,APCQCMND,TXLEN,  /* THE COMMAND IN ERROR.         */
*               52,QUOTE,2);        /* AND THE LENGTH OF THE COMMAND.*/
         MVC   @AL00001(52),@AL00189                            01S0189
         LA    @08,APCTSSID(,APCTPTR)                           01S0189
         ST    @08,@AL00001+8                                   01S0189
         LA    @08,CODE                                         01S0189
         ST    @08,@AL00001+20                                  01S0189
         LA    @08,APCQCMND(,APCQPTR)                           01S0189
         ST    @08,@AL00001+32                                  01S0189
         LA    @08,TXLEN                                        01S0189
         ST    @08,@AL00001+36                                  01S0189
         LA    @08,QUOTE                                        01S0189
         ST    @08,@AL00001+44                                  01S0189
         L     @15,APCTZDWT(,APCTPTR)                           01S0189
         LA    @01,@AL00001                                     01S0189
         BALR  @14,@15                                          01S0189
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0190
*         END;                      /* END OF SUBCASE                */
*NOP:                                                           01S0192
*         DO;                       /* SUBCASE                       */
*                                                               01S0192
NOP      DS    0H                                               01S0193
*           /*********************************************************/
*           /*                                                       */
*           /* INSTALLATION EXIT DID IT ALL.                         */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0193
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0193
*         END;                      /* END OF SUBCASE                */
*DWI:                                                           01S0195
*         DO;                       /* SUBCASE WARM START       01S0195
*                                      INITIALIZATION.               */
DWI      DS    0H                                               01S0196
*           CALL APCVZDWI;          /* CALL WARM START ROUTINE.      */
         L     @15,APCTZDWI(,APCTPTR)                           01S0196
         BALR  @14,@15                                          01S0196
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */
         B     CE0001@                                          01S0197
*         END;                      /* END OF SUBCASE                */
*CE0001@:                                                       01S0199
*       END;                        /* END OF CASE                   */
CE0001@  DS    0H                                               01S0200
*THROWAY:                                                       01S0200
*       ;                           /* RETRY LABEL.                  */
THROWAY  DS    0H                                               01S0201
*       CALL APCVZDX4;              /* RETURN THE APCQ TO THE FREE Q.*/
         L     @15,APCTZDX4(,APCTPTR)                           01S0201
         BALR  @14,@15                                          01S0201
*       CALL APCVZDX3;              /* GO FIND OUT IF THERE IS  01S0202
*                                      ANOTHER APCQ TO BE PROCESSED.
*                                      APCQPTR WILL BE NON-ZERO IF
*                                      THERE IS.                     */
         L     @15,APCTZDX3(,APCTPTR)                           01S0202
         BALR  @14,@15                                          01S0202
*     END;                          /* END OF COMMAND PROCESSING
*                                      LOOP.                         */
@DE00109 LTR   APCQPTR,APCQPTR                                  01S0203
         BNZ   @DL00109                                         01S0203
*     RESPECIFY                                                 01S0204
*       APCQ;                       /* NO MORE POINTER TO THE APCQ.  */
*     RESPECIFY                                                 01S0205
*       APCQPTR UNRESTRICTED;       /* RELEASE THE REGISTER.         */
*   END;                            /* END OF WAIT LOOP.             */
@DE00094 TM    APCTHALT(APCTPTR),B'00010000'                    01S0206
         BNO   @DL00094                                         01S0206
*   APCTHALT='0'B;                  /* RESET HALT INDICATOR.         */
         L     @15,APCTHALT(,APCTPTR)                           01S0207
@GL00001 LR    @14,@15                                          01S0207
         N     @14,@CF00875                                     01S0207
         CS    @15,@14,APCTHALT(APCTPTR)                        01S0207
         BNE   @GL00001                                         01S0207
*   GEN(IGTYSTAE 0);                /* CANCEL THE STAE.              */
         IGTYSTAE 0
*   RETURN CODE(0);                 /* RETURN TO CALLER.             */
         L     @13,4(,@13)                                      01S0209
         L     @00,@SIZDATD                                     01S0209
         LR    @01,@06                                          01S0209
         IGTYFSV  R,LV=(0),A=(1)
         SLR   @15,@15                                          01S0209
         L     @14,12(,@13)                                     01S0209
         LM    @00,@12,20(@13)                                  01S0209
         BR    @14                                              01S0209
*STAERTRN:                                                      01S0210
*   ;                               /* ENTRY TO STAE RETRY ROUTINE.  */
STAERTRN DS    0H                                               01S0211
*   CALL APCVZDWT(IGT220I,          /* TELL THE OPERATOR OF THE 01S0211
*                                      FAILURE                       */
*       14,APCTSSID,4,35,'12',2);   /* PARMS.                        */
         MVC   @AL00001(28),@AL00211                            01S0211
         LA    @15,APCTSSID(,APCTPTR)                           01S0211
         ST    @15,@AL00001+8                                   01S0211
         L     @15,APCTZDWT(,APCTPTR)                           01S0211
         LA    @01,@AL00001                                     01S0211
         BALR  @14,@15                                          01S0211
*   GO TO THROWAY;                  /* RETURN TO MAIN STREAM.        */
         B     THROWAY                                          01S0212
         EJECT
*                                                               01S0213
*/* **************************************************************** */
*/*      THIS ROUTINE PERFORMS THE INITIAL PARSING OF THE OPERATOR   */
*/*  GENERATED COMMANDS.  IT ISOLATES THE VERB AND DETERMINES THE    */
*/*  INTERNAL OP CODE.  IT LOCATES THE PARAMETERS AND SETS APCQPSTR  */
*/*  TO THE OFFSET TO THEM, IF ANY ARE PRESENT.  APCQPLEN IS ALTERED */
*/*  TO RELECT THE PARM FIELD LENGTH.  APCQIINF CONTAINS THE         */
*/*  INTERNAL COMMAND CODE.                                          */
*/*      IF THE VERB CANNOT BE IDENTIFIED,  APCQIINF IS SET TO       */
*/*  INDICATE  AN ERROR.                                             */
*/*                                                                  */
*/* **************************************************************** */
*                                                               01S0213
*PARSE:                                                         01S0213
*   PROC OPTIONS(SAVE(R14P) NOSAVEAREA);                        01S0213
PARSE    ST    @14,12(,@13)                                     01S0213
*   DCL                                                         01S0214
*     FUNCAREA CHAR(256);           /* TRT FUNCTION CODE AREA        */
*   DCL                                                         01S0215
*     CTPTR PTR(31);                /* POINTER TO COMMAND TABLE 01S0215
*                                      ENTRIES                       */
*   DCL                                                         01S0216
*     1 CT BDY(WORD) BASED(CTPTR),  /* ENTRY IDENTIFYING A PARTICULAR
*                                      COMMAND.                      */
*      2 CTMINL FIXED(15),          /* MINIMUM LENGTH OF ABREVIATION.*/
*      2 CTMAXL FIXED(15),          /* LENGTH OF COMMAND VERB.       */
*      2 CTVERB CHAR(8),            /* VERB.                         */
*      2 CTOP FIXED(15),            /* INTERNAL COMMAND CODE.        */
*      2 CTSTAT BIT(16),            /* STATUS INDICATORS             */
*       3 CTPARM BIT(1),            /* ON MEANS NO PARAMETERS WITH
*                                      VERB                          */
*       3 CTEND BIT(1),             /* MARKS END OF COMMAND TABLE    */
*       3 * BIT(14);                /* RESERVED.                     */
*   DCL                                                         01S0217
*    (I,                                                        01S0217
*     J) PTR(31);                   /* INDEX FIELDS.                 */
*   DCL                                                         01S0218
*     ENDSW BIT(1);                 /* LOOP SWITCH.                  */
*   DCL                                                         01S0219
*    (ONEFUNC,                                                  01S0219
*     TWOFUNC) LABEL;               /* FOR BC'S AFTER TRTS.          */
*   DCL                                                         01S0220
*     1 CMNDTBL STATIC LOCAL,       /* DEFINE THE COMMAND TABLE      */
*      2 *,                         /* DISPLAY COMMAND               */
*       3 * FIXED(15) INIT(1),      /* MINIMUM COMMAND ABREVIATION
*                                      LENGTH                        */
*       3 * FIXED(15) INIT(007),    /* COMMAND LENGTH                */
*       3 * CHAR(8) INIT('DISPLAY'),/* COMMAND VERB                  */
*       3 * FIXED(15) INIT(APCQDISP),/* INTERNAL COMMAND CODE        */
*       3 * FIXED(8) INIT(0000),    /* INDICATORS                    */
*       3 * FIXED(8) INIT(0),       /* RESERVED. DISPLAY COMMAND.    */
*      2 *,                         /* DUMP COMMAND                  */
*       3 * FIXED(15) INIT(2),      /* MINIMUM COMMAND ABREVIATION
*                                      LENGTH                        */
*       3 * FIXED(15) INIT(004),    /* COMMAND LENGTH                */
*       3 * CHAR(8) INIT('DUMP'),   /* COMMAND VERB                  */
*       3 * FIXED(15) INIT(APCQDUMP),/* INTERNAL COMMAND CODE        */
*       3 * FIXED(8) INIT(0000),    /* INDICATORS                    */
*       3 * FIXED(8) INIT(0),       /* RESERVED. DUMP COMMAND.       */
*      2 *,                         /* ENABLE COMMAND                */
*       3 * FIXED(15) INIT(1),      /* MINIMUM COMMAND ABREVIATION
*                                      LENGTH                        */
*       3 * FIXED(15) INIT(006),    /* COMMAND LENGTH                */
*       3 * CHAR(8) INIT('ENABLE'), /* COMMAND VERB                  */
*       3 * FIXED(15) INIT(APCQENAB),/* INTERNAL COMMAND CODE        */
*       3 * FIXED(8) INIT(0000),    /* INDICATORS                    */
*       3 * FIXED(8) INIT(0),       /* RESERVED. ENABLE COMMAND.     */
*      2 *,                         /* DISABLE COMMAND               */
*       3 * FIXED(15) INIT(4),      /* MINIMUM COMMAND ABREVIATION
*                                      LENGTH                        */
*       3 * FIXED(15) INIT(007),    /* COMMAND LENGTH                */
*       3 * CHAR(8) INIT('DISABLE'),/* COMMAND VERB                  */
*       3 * FIXED(15) INIT(APCQDSAB),/* INTERNAL COMMAND CODE        */
*       3 * FIXED(8) INIT(0000),    /* INDICATORS                    */
*       3 * FIXED(8) INIT(0),       /* RESERVED. DISABLE COMMAND     */
*      2 *,                         /* X COMMAND                     */
*       3 * FIXED(15) INIT(1),      /* MINIMUM COMMAND ABREVIATION
*                                      LENGTH                        */
*       3 * FIXED(15) INIT(001),    /* COMMAND LENGTH                */
*       3 * CHAR(8) INIT('X'),      /* COMMAND VERB                  */
*       3 * FIXED(15) INIT(APCQDSAB),/* INTERNAL COMMAND CODE        */
*       3 * FIXED(8) INIT(0000),    /* INDICATORS                    */
*       3 * FIXED(8) INIT(0),       /* RESERVED. DISABLE COMMAND     */
*      2 *,                         /* IPL COMMAND                   */
*       3 * FIXED(15) INIT(1),      /* MINIMUM COMMAND ABREVIATION
*                                      LENGTH                        */
*       3 * FIXED(15) INIT(003),    /* COMMAND LENGTH                */
*       3 * CHAR(8) INIT('IPL'),    /* COMMAND VERB                  */
*       3 * FIXED(15) INIT(APCQIPL),/* INTERNAL COMMAND CODE         */
*       3 * FIXED(8) INIT(0000),    /* INDICATORS                    */
*       3 * FIXED(8) INIT(0),       /* RESERVED. IPL COMMAND.        */
*      2 *,                         /* UNLOAD COMMAND                */
*       3 * FIXED(15) INIT(1),      /* MINIMUM COMMAND ABREVIATION
*                                      LENGTH                        */
*       3 * FIXED(15) INIT(006),    /* COMMAND LENGTH                */
*       3 * CHAR(8) INIT('UNLOAD'), /* COMMAND VERB                  */
*       3 * FIXED(15) INIT(APCQUNLD),/* INTERNAL COMMAND CODE        */
*       3 * FIXED(8) INIT(0064),    /* INDICATORS                    */
*       3 * FIXED(8) INIT(0);       /* RESERVED. THIS IS LAST ENTRY
*                                      IN THE TABLE                  */
*   RESPECIFY                                                   01S0221
*     APCQPTR RESTRICTED;                                       01S0221
*   RESPECIFY                                                   01S0222
*     APCQ BASED(APCQPTR);                                      01S0222
*   FUNCAREA=''X;                   /* CLEAR THE FUNCTION CODE AREA. */
         XC    FUNCAREA(256),FUNCAREA                           01S0223
*   FUNCAREA(65)='04'X;             /* BLANK'S VALUE.                */
         MVI   FUNCAREA+64,X'04'                                01S0224
*   DO I=1 TO APCQTXLN BY 1         /* LOCATE FIRST NON -BLANK CHAR. */
*         WHILE APCQCMND(I)=' ';                                01S0225
         LA    I,1                                              01S0225
         B     @DE00225                                         01S0225
@DL00225 LR    @08,APCQPTR                                      01S0225
         ALR   @08,I                                            01S0225
         CLI   APCQCMND-1(@08),C' '                             01S0225
         BNE   @DC00225                                         01S0225
*   END;                            /* I NOW = FIRST NON-BLANK +1.   */
         AL    I,@CF00049                                       01S0226
@DE00225 CH    I,APCQTXLN(,APCQPTR)                             01S0226
         BNH   @DL00225                                         01S0226
@DC00225 DS    0H                                               01S0227
*   IF I<APCQTXLN THEN              /* IS THERE A COMMAND AT ALL?    */
         CH    I,APCQTXLN(,APCQPTR)                             01S0227
         BNL   @RF00227                                         01S0227
*     DO;                           /* IF YES, PARSE IT.             */
*       RESPECIFY                                               01S0229
*        (R1P,                                                  01S0229
*         R2P) RESTRICTED;                                      01S0229
*       J=I-1;                                                  01S0230
*                                                               01S0230
         LR    J,I                                              01S0230
         BCTR  J,0                                              01S0230
*/*   INITIALIZE REGS.                                               */
*                                                               01S0231
*       R1P=0;                                                  01S0231
         SLR   R1P,R1P                                          01S0231
*       R2P=2;                                                  01S0232
         LA    R2P,2                                            01S0232
*       TRT(APCQCMND(I:APCQTXLN),FUNCAREA);                     01S0233
         LR    @03,APCQPTR                                      01S0233
         ALR   @03,I                                            01S0233
         LH    @08,APCQTXLN(,APCQPTR)                           01S0233
         SLR   @08,I                                            01S0233
         EX    @08,@SB00878                                     01S0233
*       BC(6,ONEFUNC);              /* IF COMMAND END AT LAST BYTE OF*/
         BC    6,ONEFUNC                                        01S0234
*       R2P=0;                                                  01S0235
         SLR   R2P,R2P                                          01S0235
*       R1P=ADDR(APCQCMND)+APCQTXLN;/* APCQCMND, DUMMY UP REGS.      */
         LA    R1P,APCQCMND(,APCQPTR)                           01S0236
         AH    R1P,APCQTXLN(,APCQPTR)                           01S0236
*ONEFUNC:                                                       01S0237
*       ;                                                       01S0237
ONEFUNC  DS    0H                                               01S0238
*       I=R1P-ADDR(APCQCMND);       /* COMPUTE INDEX OF LAST CHAR    */
         LA    I,APCQCMND(,APCQPTR)                             01S0238
         LCR   I,I                                              01S0238
         ALR   I,R1P                                            01S0238
*       ENDSW='0'B;                 /* RESET LOOP END SWITCH.        */
         NI    ENDSW,B'01111111'                                01S0239
*       DO CTPTR=ADDR(CMNDTBL)      /* LOOP THRU THE COMMAND TABLE.  */
*             BY LENGTH(CT)         /*                               */
*             WHILE ENDSW='0'B;     /* END OF LOOP SIGNALLED         */
         LA    CTPTR,CMNDTBL                                    01S0240
         B     @DE00240                                         01S0240
@DL00240 DS    0H                                               01S0241
*         IF I-J>=CTMINL&           /* SEE IF LENGTH OF INPUT CAN FIT*/
*             I-J<=CTMAXL THEN      /* LENGTHS OF VERB AND      01S0241
*                                      ABREVIATION.                  */
         LR    @03,I                                            01S0241
         SLR   @03,J                                            01S0241
         CH    @03,CTMINL(,CTPTR)                               01S0241
         BL    @RF00241                                         01S0241
         CH    @03,CTMAXL(,CTPTR)                               01S0241
         BH    @RF00241                                         01S0241
*           IF CTVERB(1:I-J)=APCQCMND(J+1:I) THEN/* IS THIS THE 01S0242
*                                      COMMAND?                      */
         BCTR  @03,0                                            01S0242
         LR    @15,APCQPTR                                      01S0242
         ALR   @15,J                                            01S0242
         EX    @03,@SC00880                                     01S0242
         BNE   @RF00242                                         01S0242
*             DO;                                               01S0243
*               ENDSW='1'B;         /* SET END SWITCH.               */
         OI    ENDSW,B'10000000'                                01S0244
*               APCQIINF=CTOP;      /* SET OP CODE.                  */
         LH    @03,CTOP(,CTPTR)                                 01S0245
         ST    @03,APCQIINF(,APCQPTR)                           01S0245
*               IF CTPARM='0'B THEN /* ARE PARAMETERS PERMITTED?     */
         TM    CTPARM(CTPTR),B'10000000'                        01S0246
         BNZ   @RF00246                                         01S0246
*                 DO;                                           01S0247
*                   DO I=I+1        /* FIND START OF PARMS.          */
*                         TO APCQTXLN BY 1 WHILE APCQCMND(I)=' ';
         LA    @03,1                                            01S0248
         ALR   @03,I                                            01S0248
         LR    I,@03                                            01S0248
         B     @DE00248                                         01S0248
@DL00248 LR    @03,APCQPTR                                      01S0248
         ALR   @03,I                                            01S0248
         CLI   APCQCMND-1(@03),C' '                             01S0248
         BNE   @DC00248                                         01S0248
*                   END;                                        01S0249
         AL    I,@CF00049                                       01S0249
@DE00248 CH    I,APCQTXLN(,APCQPTR)                             01S0249
         BNH   @DL00248                                         01S0249
@DC00248 DS    0H                                               01S0250
*                   IF I<=APCQTXLN THEN/* SEE IF ANY PARM PRESENT.   */
         CH    I,APCQTXLN(,APCQPTR)                             01S0250
         BH    @RF00250                                         01S0250
*                     DO;           /* PROCESS THE PARMS.            */
*                       J=I;        /* SAVE START OF PARMS.          */
*                                                               01S0252
         LR    J,I                                              01S0252
*                       /*********************************************/
*                       /*                                           */
*                       /* INITIALIZE REGS.                          */
*                       /*                                           */
*                       /*********************************************/
*                                                               01S0253
*                       R1P=0;                                  01S0253
         SLR   R1P,R1P                                          01S0253
*                       R2P=0;                                  01S0254
         SLR   R2P,R2P                                          01S0254
*                       TRT(APCQCMND(I:APCQTXLN),FUNCAREA);/* LOOK
*                                      FOR END OF PARMS.             */
         LR    @03,APCQPTR                                      01S0255
         ALR   @03,I                                            01S0255
         LH    @15,APCQTXLN(,APCQPTR)                           01S0255
         SLR   @15,I                                            01S0255
         EX    @15,@SB00878                                     01S0255
*                       BC(6,TWOFUNC);/* IF PARMS END AT LAST BYTE,  */
         BC    6,TWOFUNC                                        01S0256
*                       R2P=0;      /* DUMMY UP REGS.                */
         SLR   R2P,R2P                                          01S0257
*                       R1P=ADDR(APCQCMND)+APCQTXLN;            01S0258
         LA    R1P,APCQCMND(,APCQPTR)                           01S0258
         AH    R1P,APCQTXLN(,APCQPTR)                           01S0258
*TWOFUNC:                                                       01S0259
*                       ;                                       01S0259
TWOFUNC  DS    0H                                               01S0260
*                       I=R1P-ADDR(APCQCMND)+1;/* GET INDEX TO LAST
*                                      CHR                           */
         LA    I,APCQCMND(,APCQPTR)                             01S0260
         LCR   I,I                                              01S0260
         ALR   I,R1P                                            01S0260
         AL    I,@CF00049                                       01S0260
*                       APCQPLEN=I-J;/* SET NEW LENGTH.              */
         LR    @03,I                                            01S0261
         SLR   @03,J                                            01S0261
         STH   @03,APCQPLEN(,APCQPTR)                           01S0261
*                       APCQPSTR=J; /* SET OFFSET.                   */
         STH   J,APCQPSTR(,APCQPTR)                             01S0262
*                     END;          /* END OF PROCESSING OF PARMS.   */
*                 END;                                          01S0264
*             END;                                              01S0265
*           ELSE                                                01S0266
*             ;                     /* NULL ELSE FOR VERB TEST.      */
@RF00242 DS    0H                                               01S0267
*         ELSE                                                  01S0267
*           IF CTEND='1'B THEN      /* IS THIS THE END?              */
         B     @RC00241                                         01S0267
@RF00241 TM    CTEND(CTPTR),B'01000000'                         01S0267
         BNO   @RF00267                                         01S0267
*             DO;                                               01S0268
*               APCQIINF=APCQERR;   /* IF YES - BAD COMMAND          */
         MVC   APCQIINF(4,APCQPTR),@CF00038                     01S0269
*               ENDSW='1'B;         /* EXIT.                         */
         OI    ENDSW,B'10000000'                                01S0270
*               CODE='08';          /* SET REJECTION CODE.           */
         MVC   CODE(2),@CC00791                                 01S0271
*             END;                                              01S0272
*       END;                                                    01S0273
@RF00267 DS    0H                                               01S0273
@RC00241 AL    CTPTR,@CF00047                                   01S0273
@DE00240 TM    ENDSW,B'10000000'                                01S0273
         BZ    @DL00240                                         01S0273
*     END;                                                      01S0274
*   ELSE                                                        01S0275
*     DO;                                                       01S0275
         B     @RC00227                                         01S0275
@RF00227 DS    0H                                               01S0276
*       APCQIINF=APCQERR;           /* INDICATE ERROR.               */
         MVC   APCQIINF(4,APCQPTR),@CF00038                     01S0276
*       CODE='08';                  /* SET REJECTION CODE.           */
         MVC   CODE(2),@CC00791                                 01S0277
*     END;                                                      01S0278
*   END;                            /* IGTXEPLG                      */
@EL00002 DS    0H                                               01S0279
@EF00002 DS    0H                                               01S0279
@ER00002 L     @14,12(,@13)                                     01S0279
         BR    @14                                              01S0279
*                                                               01S0280
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM DECLARES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0280
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S0280
*     GPR01P PTR(31) REG(1);                                    01S0280
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0281
*     I031F FIXED(31) BASED,                                    01S0281
*     I031P PTR(31) BASED,                                      01S0281
*     I015F FIXED(15) BASED,                                    01S0281
*     I015P PTR(15) BASED,                                      01S0281
*     I008P PTR(8) BASED,                                       01S0281
*     I001C CHAR(1) BASED;                                      01S0281
*                                                               01S0282
*   /*****************************************************************/
*   /*                                                               */
*   /* MODULE PATCH AREA                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0282
*   DCL                                                         01S0282
*     APPATCH CHAR(*) INT STATIC LOCAL GEND;                    01S0282
*   GENERATE DATA DEFS(APPATCH);                                01S0283
*                                                               01S0284
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERAL REGISTER DECLARES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0284
*   DCL                                                         01S0284
*     R0F FIXED(31) REG(0),                                     01S0284
*     R0P PTR(24) REG(0),                                       01S0284
*     R0RSTD PTR(31) REG(0),                                    01S0284
*     R1F FIXED(31) REG(1),                                     01S0284
*     R1P PTR(24) REG(1),                                       01S0284
*     R1RSTD PTR(31) REG(1),                                    01S0284
*     R2F FIXED(31) REG(2),                                     01S0284
*     R2P PTR(24) REG(2),                                       01S0284
*     R2RSTD PTR(31) REG(2),                                    01S0284
*     R3F FIXED(31) REG(3),                                     01S0284
*     R3P PTR(24) REG(3),                                       01S0284
*     R3RSTD PTR(31) REG(3),                                    01S0284
*     R4F FIXED(31) REG(4),                                     01S0284
*     R4P PTR(24) REG(4),                                       01S0284
*     R4RSTD PTR(31) REG(4),                                    01S0284
*     R5F FIXED(31) REG(5),                                     01S0284
*     R5P PTR(24) REG(5),                                       01S0284
*     R5RSTD PTR(31) REG(5),                                    01S0284
*     R6F FIXED(31) REG(6),                                     01S0284
*     R6P PTR(24) REG(6),                                       01S0284
*     R6RSTD PTR(31) REG(6),                                    01S0284
*     R7F FIXED(31) REG(7),                                     01S0284
*     R7P PTR(24) REG(7),                                       01S0284
*     R7RSTD PTR(31) REG(7),                                    01S0284
*     R8F FIXED(31) REG(8),                                     01S0284
*     R8P PTR(24) REG(8),                                       01S0284
*     R8RSTD PTR(31) REG(8),                                    01S0284
*     R9F FIXED(31) REG(9),                                     01S0284
*     R9P PTR(24) REG(9),                                       01S0284
*     R9RSTD PTR(31) REG(9),                                    01S0284
*     R10F FIXED(31) REG(10),                                   01S0284
*     R10P PTR(24) REG(10),                                     01S0284
*     R10RSTD PTR(31) REG(10),                                  01S0284
*     R11F FIXED(31) REG(11),                                   01S0284
*     R11P PTR(24) REG(11),                                     01S0284
*     R11RSTD PTR(31) REG(11),                                  01S0284
*     R12F FIXED(31) REG(12),                                   01S0284
*     R12P PTR(24) REG(12),                                     01S0284
*     R12RSTD PTR(31) REG(12),                                  01S0284
*     R13F FIXED(31) REG(13),                                   01S0284
*     R13P PTR(24) REG(13),                                     01S0284
*     R13RSTD PTR(31) REG(13),                                  01S0284
*     R14F FIXED(31) REG(14),                                   01S0284
*     R14P PTR(24) REG(14),                                     01S0284
*     R14RSTD PTR(31) REG(14),                                  01S0284
*     R15F FIXED(31) REG(15),                                   01S0284
*     R15P PTR(24) REG(15),                                     01S0284
*     R15RSTD PTR(31) REG(15),                                  01S0284
*                                                               01S0284
*     /***************************************************************/
*     /*                                                             */
*     /* VPSS CONTROL BLOCK POINTER DECLARES                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0284
*     APSMPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT BLOCK 01S0284
*                                      (SUGGESTED POINTER)           */
*     APSCPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT CONTROL
*                                      WORD (SUGGESTED POINTER)      */
*     APINPTR PTR(24) REG(01),      /* USER'S INPUT PARAMETER LIST
*                                      (SUGGESTED POINTER)           */
*/*                                                                  */
*                                                               01S0284
*     APDATA PTR(24) REG(06),       /* ADDRESS OF DYNAMIC DATA  01S0284
*                                      WORKAREA (DATAREG)            */
*     APCODE PTR(24) REG(07),       /* PROGRAM CODE BASE REGISTER
*                                      (CODEREG)                     */
*     APDEBPTR PTR(24) REG(08),     /* VPSS DEB (SUGGESTED POINTER)  */
*     APNPPTR PTR(24) REG(08),      /* SUBSYSTEM INITIALIZATION 01S0284
*                                      WORKAREA BLOCK (ONLY USED BY
*                                      SUBSYSTEM INITIALIZATION)     */
*     APRLPTR PTR(24) REG(08),      /* VPSS ACB REQUEST LIST    01S0284
*                                      (SUGGESTED POINTER)           */
*     APCIPTR PTR(24) REG(08),      /* 3838 CONTROL TABLE (SUGGESTED
*                                      POINTER)                      */
*     APCWPTR PTR(24) REG(08),      /* CALL INTERFACE WORKAREA  01S0284
*                                      (SUGGESTED POINTER)           */
*     APERPTR PTR(24) REG(08),      /* ERP/IO APPENDAGE WORKAREA
*                                      (SUGGESTED POINTER)           */
*     APACBPTR PTR(24) REG(09),     /* VPSS ACB (SUGGESTED POINTER)  */
*     APCQPTR PTR(24) REG(09),      /* COMMAND QUEUE ELEMENT    01S0284
*                                      (SUGGESTED POINTER)           */
*     APOTPTR PTR(24) REG(09),      /* OPTION TABLE (SUGGESTED  01S0284
*                                      POINTER)                      */
*     APIOPTR PTR(24) REG(10),      /* I/O ELEMENT (SUGGESTED   01S0284
*                                      POINTER)                      */
*     APEXLPTR PTR(24) REG(10),     /* VPSS EXLST (SUGGESTED POINTER)*/
*     APUBPTR PTR(24) REG(10),      /* UNIT BLOCK (SUGGESTED POINTER)*/
*     APAXPTR PTR(24) REG(10),      /* VPSS ACB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCPPTR PTR(24) REG(10),      /* VPSS CALL PROCESSING     01S0284
*                                      INDICATORS (SUGGESTED POINTER)*/
*     APOCPTR PTR(24) REG(10),      /* VPSS OPEN/CLOSE SUBSYSTEM
*                                      WORKAREA (REQUIRED POINTER)   */
*     APATPTR PTR(24) REG(11),      /* VPSS ACB TABLE (SUGGESTED
*                                      POINTER)                      */
*     APLBPTR PTR(24) REG(11),      /* LABEL RESOLUTION TABLE   01S0284
*                                      (SUGGESTED POINTER)           */
*     APUTPTR PTR(24) REG(11),      /* USER TABLE (SUGGESTED POINTER)*/
*     APDSPTR PTR(24) REG(11),      /* VPSS DATASET ENTRY (SUGGESTED
*                                      POINTER)                      */
*     APXLPTR PTR(24) REG(11),      /* TRANSLATION TABLE (SUGGESTED
*                                      POINTER)                      */
*     APDXPTR PTR(24) REG(11),      /* VPSS DEB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED  01S0284
*                                      POINTER)                      */
*     APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA
*                                      (REQUIRED POINTER)            */
*     APRETURN PTR(24) REG(14),     /* RETURN ADDRESS FOR SUBROUTINE
*                                      LINKAGE                       */
*     APENTRY PTR(24) REG(15),      /* SUBROUTINE ENTRY POINT LINKAGE*/
*     APRCODE PTR(24) REG(15);      /* CONTAINS SUBROUTINE RETURN
*                                      CODE                          */
*                                                               01S0285
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REGISTER DECLARES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0285
*   END                                                         01S0285
*                                                               01S0285
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCQ)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPMM)                                       */
*                                                               01S0285
*       ;                                                       01S0285
@EL00001 L     @13,4(,@13)                                      01S0285
@EF00001 L     @00,@SIZDATD                                     01S0285
         LR    @01,@06                                          01S0285
         IGTYFSV  R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0285
         BR    @14                                              01S0285
@DATA    DS    0H
@CH00573 DC    H'40'
@SB00878 TRT   APCQCMND-1(0,@03),FUNCAREA
@SC00880 CLC   CTVERB(0,CTPTR),APCQCMND(@15)
         DS    0F
@AL00189 DC    A(@CF00581)             LIST WITH  13 ARGUMENT(S)
         DC    A(@CF00393)
         DS    F
         DC    A(@CF00062)
         DC    A(@CF00694)
         DS    F
         DC    A(@CF00042)
         DC    A(@CF00695)
         DS    F
         DS    F
         DC    A(@CF00579)
         DS    F
         DC    AL1(X'80')
         DC    AL3(@CF00042)
@AL00211 DC    A(@CF00428)             LIST WITH   7 ARGUMENT(S)
         DC    A(@CF00393)
         DS    F
         DC    A(@CF00062)
         DC    A(@CF00702)
         DC    A(@CC00658)
         DC    AL1(X'80')
         DC    AL3(@CF00042)
@DATD    DSECT
         DS    0F
@SA00001 DS    20F
@AL00001 DS    13A
IGTD40   CSECT
         DS    0F
@CF00049 DC    F'1'
@CF00042 DC    F'2'
@CF00062 DC    F'4'
@CF00393 DC    F'14'
@CF00038 DC    F'15'
@CF00047 DC    F'16'
@CF00702 DC    F'35'
@CF00694 DC    F'41'
@CF00579 DC    F'52'
@CF00581 DC    F'56'
@CF00695 DC    F'66'
@CF00428 DC    F'72'
@CF00871 DC    F'-2147483647'
@CF00875 DC    BL4'11101111111111111111111111111111'
@DATD    DSECT
         DS    0D
TXLEN    DS    F
QUOTE    DS    H
CODE     DS    CL2
D40STAE  DS    CL76
         ORG   D40STAE
D40APCT  DS    AL4
D40CODE  DS    FL2
D40FLAGS DS    BL2
         ORG   D40FLAGS
INUSER   DS    BL1
RECURSE  EQU   D40FLAGS+0
         ORG   D40STAE+8
D40REGS  DS    CL64
D40RTRY  DS    AL4
         ORG   D40STAE+76
FUNCAREA DS    CL256
ENDSW    DS    BL1
IGTD40   CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00658 DC    C'12'
@CC00791 DC    C'08'
CMNDTBL  DS    CL112
         ORG   CMNDTBL
@NM00051 DS    CL16
         ORG   @NM00051
@NM00052 DC    H'1'
@NM00053 DC    H'7'
@NM00054 DC    CL8'DISPLAY'
@NM00055 DC    H'1'
@NM00056 DC    AL1(0)
@NM00057 DC    AL1(0)
         ORG   CMNDTBL+16
@NM00058 DS    CL16
         ORG   @NM00058
@NM00059 DC    H'2'
@NM00060 DC    H'4'
@NM00061 DC    CL8'DUMP'
@NM00062 DC    H'2'
@NM00063 DC    AL1(0)
@NM00064 DC    AL1(0)
         ORG   CMNDTBL+32
@NM00065 DS    CL16
         ORG   @NM00065
@NM00066 DC    H'1'
@NM00067 DC    H'6'
@NM00068 DC    CL8'ENABLE'
@NM00069 DC    H'3'
@NM00070 DC    AL1(0)
@NM00071 DC    AL1(0)
         ORG   CMNDTBL+48
@NM00072 DS    CL16
         ORG   @NM00072
@NM00073 DC    H'4'
@NM00074 DC    H'7'
@NM00075 DC    CL8'DISABLE'
@NM00076 DC    H'4'
@NM00077 DC    AL1(0)
@NM00078 DC    AL1(0)
         ORG   CMNDTBL+64
@NM00079 DS    CL16
         ORG   @NM00079
@NM00080 DC    H'1'
@NM00081 DC    H'1'
@NM00082 DC    CL8'X'
@NM00083 DC    H'4'
@NM00084 DC    AL1(0)
@NM00085 DC    AL1(0)
         ORG   CMNDTBL+80
@NM00086 DS    CL16
         ORG   @NM00086
@NM00087 DC    H'1'
@NM00088 DC    H'3'
@NM00089 DC    CL8'IPL'
@NM00090 DC    H'5'
@NM00091 DC    AL1(0)
@NM00092 DC    AL1(0)
         ORG   CMNDTBL+96
@NM00093 DS    CL16
         ORG   @NM00093
@NM00094 DC    H'1'
@NM00095 DC    H'6'
@NM00096 DC    CL8'UNLOAD'
@NM00097 DC    H'6'
@NM00098 DC    AL1(64)
@NM00099 DC    AL1(0)
         ORG   CMNDTBL+112
CP0001@  DC    AL4(DISP)
         DC    AL4(DUMP)
         DC    AL4(ENAB)
         DC    AL4(DSAB)
         DC    AL4(IPL)
         DC    AL4(UNLD)
         DC    AL4(IC)
         DC    AL4(HALT)
         DC    AL4(DULS)
         DC    AL4(MDMP)
         DC    AL4(PTCH)
         DC    AL4(FDMP)
         DC    AL4(UDMP)
         DC    AL4(RIPL)
         DC    AL4(ERR)
         DC    AL4(NOP)
         DC    AL4(DWI)
IGTD40   CSECT
*                             /* DEFINE THE STATIC STAE.             */
SSTAE    IGTYSTAE *-*,CT,PARAM=*-*,XCTL=NO,PURGE=NONE,ASYNCH=YES,      X
               TERM=YES,RECORD=YES,MF=L
@DATD    DSECT
*                             /* DEFINE THE DYNAMIC AREA.            */
DSTAEX   IGTYSTAE *-*,CT,PARAM=*-*,XCTL=NO,PURGE=NONE,ASYNCH=YES,      X
               TERM=YES,RECORD=YES,MF=L
DSTAE    EQU   DSTAEX,*-DSTAEX,C'C'
IGTD40   CSECT
*                                   /* GENERATE PATCH
         IGTXZAP ,                 GENERATE PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGTD40   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
J        EQU   @05
I        EQU   @04
CTPTR    EQU   @08
APDATA   EQU   @06
APCODE   EQU   @07
APCTPTR  EQU   @12
APSVPTR  EQU   @13
R2P      EQU   @02
R15P     EQU   @15
GPR00F   EQU   @00
GPR01P   EQU   @01
APCQPTR  EQU   @09
R0P      EQU   @00
R14P     EQU   @14
R1P      EQU   @01
APACBPTR EQU   @09
APATPTR  EQU   @11
APAXPTR  EQU   @10
APCIPTR  EQU   @08
APCPPTR  EQU   @10
APCWPTR  EQU   @08
APDEBPTR EQU   @08
APDSPTR  EQU   @11
APDXPTR  EQU   @11
APENTRY  EQU   @15
APERPTR  EQU   @08
APEXLPTR EQU   @10
APINPTR  EQU   @01
APIOPTR  EQU   @10
APLBPTR  EQU   @11
APNPPTR  EQU   @08
APOCPTR  EQU   @10
APOTPTR  EQU   @09
APRCODE  EQU   @15
APRETURN EQU   @14
APRLPTR  EQU   @08
APSCPTR  EQU   @01
APSMPTR  EQU   @01
APUBPTR  EQU   @10
APUTPTR  EQU   @11
APXLPTR  EQU   @11
R0F      EQU   @00
R0RSTD   EQU   @00
R1F      EQU   @01
R1RSTD   EQU   @01
R10F     EQU   @10
R10P     EQU   @10
R10RSTD  EQU   @10
R11F     EQU   @11
R11P     EQU   @11
R11RSTD  EQU   @11
R12F     EQU   @12
R12P     EQU   @12
R12RSTD  EQU   @12
R13F     EQU   @13
R13P     EQU   @13
R13RSTD  EQU   @13
R14F     EQU   @14
R14RSTD  EQU   @14
R15F     EQU   @15
R15RSTD  EQU   @15
R2F      EQU   @02
R2RSTD   EQU   @02
R3F      EQU   @03
R3P      EQU   @03
R3RSTD   EQU   @03
R4F      EQU   @04
R4P      EQU   @04
R4RSTD   EQU   @04
R5F      EQU   @05
R5P      EQU   @05
R5RSTD   EQU   @05
R6F      EQU   @06
R6P      EQU   @06
R6RSTD   EQU   @06
R7F      EQU   @07
R7P      EQU   @07
R7RSTD   EQU   @07
R8F      EQU   @08
R8P      EQU   @08
R8RSTD   EQU   @08
R9F      EQU   @09
R9P      EQU   @09
R9RSTD   EQU   @09
APCT     EQU   0
APCTENQM EQU   APCT+12
APCTSSID EQU   APCTENQM+4
APCTSMIN EQU   APCT+32
APCTSMAD EQU   APCT+36
APCTZ@@@ EQU   APCT+40
APCTU@@@ EQU   APCT+440
APCTBR14 EQU   APCT+840
APCTERRS EQU   APCT+876
@NM00012 EQU   APCT+936
APCTSTAT EQU   @NM00012
APCTHALT EQU   APCTSTAT
APCTPRSW EQU   @NM00012+1
APCTAPCQ EQU   APCT+944
APCTCQAQ EQU   APCT+952
APCTECPW EQU   APCT+976
APCTZ@@1 EQU   APCT+1120
APCQ     EQU   0
APCQIINF EQU   APCQ+12
APCQPLEN EQU   APCQ+20
APCQPSTR EQU   APCQ+22
APCQSW   EQU   APCQ+24
APCQINT  EQU   APCQSW
APCQTXLN EQU   APCQ+26
APCQCMND EQU   APCQ+28
APSV     EQU   0
APSVREGS EQU   APSV+12
APCVZDX3 EQU   0
APCVZDX4 EQU   0
APCVZD41 EQU   0
APCVZD42 EQU   0
APCVZD43 EQU   0
APCVZD44 EQU   0
APCVZD45 EQU   0
APCVZD46 EQU   0
APCVZD47 EQU   0
APCVZD48 EQU   0
APCVZD49 EQU   0
APCVZDMD EQU   0
APCVZDRI EQU   0
APCVZDWT EQU   0
APCVZDWI EQU   0
APCV1CMD EQU   0
BIT0007X EQU   0
CL0001@  EQU   0
CT       EQU   0
CTMINL   EQU   CT
CTMAXL   EQU   CT+2
CTVERB   EQU   CT+4
CTOP     EQU   CT+12
CTSTAT   EQU   CT+14
CTPARM   EQU   CTSTAT
CTEND    EQU   CTSTAT
APCVZDAL EQU   0
APCVZDAP EQU   0
APCVZDBK EQU   0
APCVZDDA EQU   0
APCVZDDQ EQU   0
APCVZDEQ EQU   0
APCVZDID EQU   0
APCVZDIO EQU   0
APCVZDIP EQU   0
APCVZDMM EQU   0
APCVZDQR EQU   0
APCVZDUA EQU   0
APCVZDUL EQU   0
APCVZDX1 EQU   0
APCVZDX2 EQU   0
APCVZD10 EQU   0
APCVZD20 EQU   0
APCVZD4E EQU   0
APCVZD40 EQU   0
APCVZD60 EQU   0
APCVZD80 EQU   0
APCVZD81 EQU   0
APCVZD82 EQU   0
APCVZD83 EQU   0
APCVZJAA EQU   0
APCVZJAD EQU   0
APCVZJAG EQU   0
APCVZJAJ EQU   0
APCVZJAM EQU   0
APCVZJAP EQU   0
APCVZJAX EQU   0
APCVZJAY EQU   0
APCVZJBA EQU   0
APCVZJBD EQU   0
APCVZJBG EQU   0
APCVZJBJ EQU   0
APCVZJBM EQU   0
APCVZJDA EQU   0
APCVZJDD EQU   0
APCVZJDG EQU   0
APCVZJDJ EQU   0
APCVZJDM EQU   0
APCVZJHC EQU   0
APCVZJHE EQU   0
APCVZJHF EQU   0
APCVZJHO EQU   0
APCVZJHQ EQU   0
APCVZJHR EQU   0
APCVZJHT EQU   0
APCVZJHW EQU   0
APCVZJH0 EQU   0
APCVZJH6 EQU   0
APCVZJI0 EQU   0
APCVZJI3 EQU   0
APCVZJJ0 EQU   0
APCVZKAA EQU   0
APCVZKBA EQU   0
APCVZKBB EQU   0
APCVZKBC EQU   0
APCVZKBD EQU   0
APCVZKBE EQU   0
APCVZKBF EQU   0
APCVZKCA EQU   0
APCVZKDA EQU   0
APCVZKGA EQU   0
APCVZKGB EQU   0
APCVZKGC EQU   0
APCVZKGD EQU   0
APCVZLCA EQU   0
APCVZLCB EQU   0
APCVZMBA EQU   0
APCVZMBD EQU   0
APCVZMBG EQU   0
APCVZMBH EQU   0
APCVZMBK EQU   0
APCVZMBM EQU   0
APCVZMIB EQU   0
APCVZMIC EQU   0
APCVZMIF EQU   0
APCVZMJB EQU   0
APCVZMJC EQU   0
APCVZMJH EQU   0
APCVZMJI EQU   0
APCVZMMA EQU   0
APCVZUAA EQU   0
APCVZUAB EQU   0
APCVZUAC EQU   0
APCVZUAD EQU   0
APCVZUAE EQU   0
APCVZUAF EQU   0
APCVZUAG EQU   0
APCVZUBB EQU   0
APCVZUFA EQU   0
APCVZUHA EQU   0
APCVZUHB EQU   0
APCVZUJA EQU   0
APCVZUKA EQU   0
APCV1JAA EQU   0
APCV1JBJ EQU   0
APCV1JHC EQU   0
APCV1JHL EQU   0
APCV1JHT EQU   0
APCV1MAB EQU   0
APCV1MBD EQU   0
APCV2JHC EQU   0
APCV2JHL EQU   0
APCV2MBD EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
APCTZ    EQU   APCTZ@@@
APCTZUAA EQU   APCTZ
APCTZUAB EQU   APCTZ+4
APCTZUAC EQU   APCTZ+8
APCTZUAD EQU   APCTZ+12
APCTZUAE EQU   APCTZ+16
APCTZUBB EQU   APCTZ+24
APCTZD10 EQU   APCTZ+28
APCTZD20 EQU   APCTZ+32
APCTZD40 EQU   APCTZ+36
APCTZD41 EQU   APCTZ+40
APCTZD42 EQU   APCTZ+44
APCTZD43 EQU   APCTZ+48
APCTZD44 EQU   APCTZ+52
APCTZD45 EQU   APCTZ+56
APCTZD46 EQU   APCTZ+60
APCTZD47 EQU   APCTZ+64
APCTZD48 EQU   APCTZ+68
APCTZD49 EQU   APCTZ+72
APCTZD60 EQU   APCTZ+76
APCTZD80 EQU   APCTZ+80
APCTZD4E EQU   APCTZ+84
APCTZMBA EQU   APCTZ+88
APCTZMBD EQU   APCTZ+92
APCTZMBG EQU   APCTZ+96
APCTZDX1 EQU   APCTZ+104
APCTZDX2 EQU   APCTZ+108
APCTZDX3 EQU   APCTZ+112
APCTZDX4 EQU   APCTZ+116
APCTZMBH EQU   APCTZ+120
APCTZMBK EQU   APCTZ+124
APCTZMBM EQU   APCTZ+128
APCTZMJB EQU   APCTZ+132
APCTZMJC EQU   APCTZ+136
APCTZMJH EQU   APCTZ+140
APCTZMMA EQU   APCTZ+144
APCTZDMD EQU   APCTZ+148
APCTZD81 EQU   APCTZ+152
APCTZDID EQU   APCTZ+156
APCTZDRI EQU   APCTZ+160
APCTZMJI EQU   APCTZ+164
APCTZDWT EQU   APCTZ+168
APCTZDMM EQU   APCTZ+172
APCTZDAL EQU   APCTZ+176
APCTZDBK EQU   APCTZ+180
APCTZDIP EQU   APCTZ+184
APCTZDDA EQU   APCTZ+188
APCTZDUL EQU   APCTZ+192
APCTZDEQ EQU   APCTZ+196
APCTZDDQ EQU   APCTZ+200
APCTZDUA EQU   APCTZ+204
APCTZUAF EQU   APCTZ+208
APCTZUAG EQU   APCTZ+212
APCTZDIO EQU   APCTZ+216
APCTZUHA EQU   APCTZ+220
APCTZUHB EQU   APCTZ+224
APCTZJAA EQU   APCTZ+232
APCTZJAD EQU   APCTZ+236
APCTZJAG EQU   APCTZ+240
APCTZJAJ EQU   APCTZ+244
APCTZJAM EQU   APCTZ+248
APCTZJAP EQU   APCTZ+252
APCTZJAY EQU   APCTZ+256
APCTZUFA EQU   APCTZ+260
APCTZUJA EQU   APCTZ+264
APCTZDAP EQU   APCTZ+268
APCTZKAA EQU   APCTZ+272
APCTZD82 EQU   APCTZ+276
APCTZMIB EQU   APCTZ+280
APCTZMIC EQU   APCTZ+284
APCTZD83 EQU   APCTZ+288
APCTZMIF EQU   APCTZ+296
APCTZJH0 EQU   APCTZ+300
APCTZJI0 EQU   APCTZ+304
APCTZJI3 EQU   APCTZ+308
APCTZJJ0 EQU   APCTZ+312
APCTZJBA EQU   APCTZ+316
APCTZJBD EQU   APCTZ+320
APCTZJBG EQU   APCTZ+324
APCTZJBJ EQU   APCTZ+328
APCTZJBM EQU   APCTZ+332
APCTZKCA EQU   APCTZ+340
APCTZKDA EQU   APCTZ+344
APCTZJDA EQU   APCTZ+356
APCTZJDJ EQU   APCTZ+360
APCTZJH6 EQU   APCTZ+364
APCTZJHO EQU   APCTZ+368
APCTZJHF EQU   APCTZ+372
APCTZJHE EQU   APCTZ+376
APCTZDQR EQU   APCTZ+380
APCTZJHR EQU   APCTZ+384
APCTZJHT EQU   APCTZ+388
APCTZJHW EQU   APCTZ+392
APCTZ1   EQU   APCTZ@@1
APCTZKBA EQU   APCTZ1
APCTZKBC EQU   APCTZ1+4
APCTZKBB EQU   APCTZ1+8
APCTZJHC EQU   APCTZ1+20
APCTZJHQ EQU   APCTZ1+24
APCTZKBD EQU   APCTZ1+28
APCTZKBE EQU   APCTZ1+40
APCTZUKA EQU   APCTZ1+56
APCTZKBF EQU   APCTZ1+60
APCTZJDD EQU   APCTZ1+64
APCTZJDG EQU   APCTZ1+68
APCTZJDM EQU   APCTZ1+72
APCTZLCA EQU   APCTZ1+76
APCTZLCB EQU   APCTZ1+80
APCTZDWI EQU   APCTZ1+84
APCTZJAX EQU   APCTZ1+88
APCTZKGA EQU   APCTZ1+92
APCTZKGB EQU   APCTZ1+96
APCTZKGC EQU   APCTZ1+100
APCTZKGD EQU   APCTZ1+104
APCTU    EQU   APCTU@@@
APCT1MAB EQU   APCTU
APCT1MBD EQU   APCTU+4
APCT2MBD EQU   APCTU+8
APCT1CMD EQU   APCTU+12
APCT1JAA EQU   APCTU+20
APCT1JHC EQU   APCTU+24
APCT2JHC EQU   APCTU+28
APCT1JHT EQU   APCTU+32
APCT1JHL EQU   APCTU+36
APCT2JHL EQU   APCTU+40
APCT1JBJ EQU   APCTU+44
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00044 EQU   APCTU+48
APCT1MBM EQU   APCTU+16
@NM00043 EQU   APCTZ1+108
@NM00042 EQU   APCTZ1+52
@NM00041 EQU   APCTZ1+48
@NM00040 EQU   APCTZ1+44
@NM00039 EQU   APCTZ1+36
@NM00038 EQU   APCTZ1+32
@NM00037 EQU   APCTZ1+16
@NM00036 EQU   APCTZ1+12
@NM00035 EQU   APCTZ+396
@NM00034 EQU   APCTZ+352
@NM00033 EQU   APCTZ+348
@NM00032 EQU   APCTZ+336
@NM00031 EQU   APCTZ+292
APCTZJFA EQU   APCTZ+228
APCTZMBR EQU   APCTZ+100
@NM00030 EQU   APCTZ+20
@NM00050 EQU   CTSTAT
APSVWORK EQU   APSV+80
@NM00049 EQU   APSV+80
APSVFREE EQU   APSV+76
APSVAPSM EQU   APSV+72
APSVRG12 EQU   APSVREGS+56
APSVRG11 EQU   APSVREGS+52
APSVRG10 EQU   APSVREGS+48
APSVRG9  EQU   APSVREGS+44
APSVRG8  EQU   APSVREGS+40
APSVRG7  EQU   APSVREGS+36
APSVRG6  EQU   APSVREGS+32
APSVRG5  EQU   APSVREGS+28
APSVRG4  EQU   APSVREGS+24
APSVRG3  EQU   APSVREGS+20
APSVRG2  EQU   APSVREGS+16
APSVRG1  EQU   APSVREGS+12
APSVRG0  EQU   APSVREGS+8
APSVRG15 EQU   APSVREGS+4
APSVRG14 EQU   APSVREGS
APSVNEXT EQU   APSV+8
APSVPREV EQU   APSV+4
APSVAPSC EQU   APSV
@NM00048 EQU   APCQ+176
@NM00047 EQU   APCQ+172
@NM00046 EQU   APCQ+168
APCQSCID EQU   APCQ+25
APCQNEMG EQU   APCQSW
APCQNMSG EQU   APCQSW
@NM00045 EQU   APCQSW
APCQPRTY EQU   APCQSW
APCQCQAP EQU   APCQ+16
APCQUSER EQU   APCQ+8
APCQAPCQ EQU   APCQ+4
APCQID   EQU   APCQ
@NM00029 EQU   APCT+1556
APCTSVCT EQU   APCT+1552
APCTDAVT EQU   APCT+1548
APCTLOGL EQU   APCT+1544
@NM00028 EQU   APCT+1540
APCTDMPU EQU   APCT+1536
APCTDMPM EQU   APCT+1532
APCTNDMP EQU   APCT+1530
APCTASID EQU   APCT+1528
APCTLGPG EQU   APCT+1526
APCTLGLN EQU   APCT+1524
APCTAPVU EQU   APCT+1520
APCTABR  EQU   APCT+1116
APCTACTR EQU   APCT+1112
APCTLOGD EQU   APCT+1108
APCTDCLD EQU   APCT+1104
APCTIOAP EQU   APCT+1100
@NM00027 EQU   APCT+1080
@NM00026 EQU   APCT+1078
APCTKCAX EQU   APCT+1076
APCTABND EQU   APCT+1072
@NM00025 EQU   APCT+1068
APCTAPIO EQU   APCT+1064
APCTCSCT EQU   APCT+1060
APCTSTDF EQU   APCT+1056
APCTSTMX EQU   APCT+1052
APCTRGMX EQU   APCT+1048
APCTSIZE EQU   APCT+1046
APCTCTUB EQU   APCT+1045
APCTMFID EQU   APCT+1044
APCTMFSZ EQU   APCT+1040
APCTCRTN EQU   APCT+1036
APCTAPCP EQU   APCT+1032
APCTAMNA EQU   APCT+1028
APCTEMNA EQU   APCT+1024
APCTAALP EQU   APCT+1020
APCTEALP EQU   APCT+1016
@NM00024 EQU   APCT+1012
@NM00023 EQU   APCT+1008
@NM00022 EQU   APCT+1004
APCTEIPL EQU   APCT+1000
@NM00021 EQU   APCT+996
@NM00020 EQU   APCT+992
@NM00019 EQU   APCT+988
@NM00018 EQU   APCT+984
@NM00017 EQU   APCT+980
APCTEULD EQU   APCT+972
APCTECPT EQU   APCT+968
APCTEALC EQU   APCT+964
APCTECBL EQU   APCT+960
APCTECIT EQU   APCT+956
APCTCQAF EQU   APCTCQAQ
APCTCQL  EQU   APCTAPCQ+4
APCTCQF  EQU   APCTAPCQ
APCTCQLK EQU   APCT+940
@NM00016 EQU   @NM00012+2
@NM00015 EQU   APCTPRSW
APCTAPST EQU   APCTPRSW
@NM00014 EQU   APCTPRSW
@NM00013 EQU   APCTSTAT
APCTWARM EQU   APCTSTAT
APCTTERM EQU   APCTSTAT
APCTQSCE EQU   APCTSTAT
APCTSTRT EQU   APCTSTAT
APCTACT  EQU   APCTSTAT
APCTVUNX EQU   APCT+935
APCTSOUT EQU   APCT+934
APCTDAID EQU   APCT+933
APCTSV34 EQU   APCT+932
APCTMJOB EQU   APCT+928
APCTTCB  EQU   APCT+924
APCTASCB EQU   APCT+920
APCTDCNW EQU   APCT+918
APCTDCNR EQU   APCT+916
@NM00011 EQU   APCT+912
@NM00010 EQU   APCT+908
@NM00009 EQU   APCT+904
@NM00008 EQU   APCT+900
@NM00007 EQU   APCTERRS+22
APCTERTJ EQU   APCTERRS+20
APCTERTD EQU   APCTERRS+18
APCTERTC EQU   APCTERRS+16
APCTERTB EQU   APCTERRS+14
APCTERTA EQU   APCTERRS+12
APCTERT9 EQU   APCTERRS+10
APCTERT3 EQU   APCTERRS+8
APCTERT2 EQU   APCTERRS+6
APCTERT1 EQU   APCTERRS+4
APCTERT0 EQU   APCTERRS+2
APCTERTT EQU   APCTERRS
APCTDSAP EQU   APCT+872
APCTISUB EQU   APCT+868
APCTUBAP EQU   APCT+864
APCTAPDS EQU   APCT+860
APCTUBIC EQU   APCT+856
APCTUBIS EQU   APCT+852
APCTAPUB EQU   APCT+848
APCTUBLK EQU   APCT+844
APCTBR1A EQU   APCTBR14+2
@NM00006 EQU   APCTBR14
APCTSMSZ EQU   APCTSMAD+2
@NM00005 EQU   APCTSMAD+1
@NM00004 EQU   APCTSMAD
APCTSMIS EQU   APCTSMIN+2
@NM00003 EQU   APCTSMIN+1
APCTSMSP EQU   APCTSMIN
@NM00002 EQU   APCT+30
APCTLINE EQU   APCT+28
APCTLBSZ EQU   APCT+24
APCTREG  EQU   APCT+20
@NM00001 EQU   APCTENQM
APCTSSVT EQU   APCT+8
APCTUSER EQU   APCT+4
APCTID   EQU   APCT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00242 EQU   @RC00241
@RC00227 EQU   @EL00002
@RF00246 EQU   @RC00242
@RF00250 EQU   @RC00242
@ENDDATA EQU   *
         END   IGTD40,(C'PLS1628',0701,77174)
