         TITLE 'IEDIAH - IEDHALT ROUTINE                               *
                        '
IEDIAH   CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
         USING IEDIAH,RBASE
IEDIAH   IEDHJN START                   MODULE ID/DATE
*   IF RZERO=0                      /* IF FROM IEDQBD                */
*     THEN                                                         0306
         SLR   @10,@10                                             0306
         CR    RZERO,@10                                           0306
         BNE   @RF00306                                            0306
*     DO;                           /* THEN DO FOLLOWING             */
*       RFY                                                        0308
*         PARMLIST BASED(RWORK8);   /* CHANGE PARM BASE      @YM07360*/
*       LCBERBLK=RPARM;             /* LINK POST LIST TO ERB         */
         STCM  RPARM,7,LCBERBLK(RLCB)                              0309
*       RAVT=RSAVE-SAVEALEN;        /* SET AVT BASE                  */
         LR    RAVT,RSAVE                                          0310
         SH    RAVT,SAVEALEN                                       0310
*       LCBERBQB=ADDRBD;            /* SET POST ADDRESS              */
         L     @07,AVTMSGS-1(,RAVT)                                0311
         MVC   LCBERBQB(3,RLCB),ADDRBD+1(@07)                      0311
*       LCBERBPY=PRIRCQCB;          /* SET POST PRIORITY             */
         MVI   LCBERBPY(RLCB),X'E0'                                0312
*       LCBERBCH=0;                 /* CLEAR THE CHAIN               */
         STCM  @10,7,LCBERBCH(RLCB)                                0313
*       LCBRCLLN='0'B;              /* SET NO RECALL                 */
         NI    LCBRCLLN(RLCB),B'01111111'                          0314
*       RPARM=LCBTTCIN;             /* GET THE TNT OFFSET            */
         LH    RPARM,LCBTTCIN(,RLCB)                               0315
         N     RPARM,@CF01863                                      0315
*       REG15=AVTRNMPT;             /* GET TNT CODE ADDRESS          */
         L     REG15,AVTRNMPT(,RAVT)                               0316
*       RPARM=RPARM&AVTCLRHI;       /* CLEAR HIGH - ORDER HALF       */
         N     RPARM,AVTCLRHI(,RAVT)                               0317
*       IF RPARM^=0 THEN                                           0318
         CR    RPARM,@10                                           0318
         BE    @RF00318                                            0318
*         DO;                       /* TTCIN ZERO?           @XA11347*/
*           GEN(BALR 14,15);        /* LOCATE TERMINAL ENTRY         */
         BALR 14,15
*           RFY                                                    0321
*             IEDTRM BASED(RPARM);  /* BASE DSECT                    */
*           RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO PREFIX @YM07360*/
         SL    RPARM,@CF01485                                      0322
*           IF TRMPREF='1'B&        /* IF THIS IS A 3705 RESOURCE  0323
*                                                            @YM08402*/
*               LCBLUNIT='1'B&      /* THEN IF IT IS AN LU@YM08402   */
*               TRMSIBPT^=0&        /* THEN IF A SESSION EXISTS    0323
*                                                            @YM08402*/
*               SIBINDEX^=SAVTSCPT THEN/* THEN IF IT IS AN LU-LU   0323
*                                      SESSION               @YM08402*/
         TM    TRMPREF(RPARM),B'00010000'                          0323
         BNO   @RF00323                                            0323
         TM    LCBLUNIT(RLCB),B'01000000'                          0323
         BNO   @RF00323                                            0323
         SLR   @10,@10                                             0323
         ICM   @10,7,TRMSIBPT(RPARM)                               0323
         LTR   @10,@10                                             0323
         BZ    @RF00323                                            0323
         L     @07,AVTSAVTP(,RAVT)                                 0323
         CLC   SIBINDEX(2,@10),SAVTSCPT(@07)                       0323
         BE    @RF00323                                            0323
*             DO;                   /*                       @YM07360*/
*               IF IAHFLUSH^='1'B THEN/* IF FLUSH OPT THEN   @YM07360*/
         TM    IAHFLUSH(RWORK8),B'10000000'                        0325
         BO    @RF00325                                            0325
*                 SIBLGOFF='1'B;    /* SET LOGOFF FLAG       @YM07360*/
         OI    SIBLGOFF(@10),B'10000000'                           0326
*               ELSE                                               0327
*                 QCBFLUSH='1'B;    /* ELSE SET Q FLUSH      @YM07360*/
         B     @RC00325                                            0327
@RF00325 SLR   @10,@10                                             0327
         ICM   @10,7,TRMDESTQ(RPARM)                               0327
         AL    @10,@CF01865                                        0327
         OI    QCBFLUSH-4(@10),B'00000010'                         0327
*             END;                  /*                       @YM07360*/
@RC00325 DS    0H                                                  0329
*         END;                      /*                       @YM07360*/
@RF00323 DS    0H                                                  0330
*       RPARM=ADDR(LCBERB);         /* SET ELEMENT TO POST           */
@RF00318 LA    RPARM,LCBERB(,RLCB)                                 0330
*       CALL DSPCHAIN;              /* GO POST LIST                  */
         LA    @15,DSPCHAIN(,RDISP)                                0331
         BALR  @14,@15                                             0331
*     END;                                                         0332
*   ELSE                                                           0333
*     DO;                                                          0333
         B     @RC00306                                            0333
@RF00306 DS    0H                                                  0334
*       RFY                                                        0334
*         PARMLIST BASED(RLIST);    /* RESET PARM BASE       @YM07360*/
*       RFY                                                        0335
*         IEDTRM BASED(RTRM);       /*                       @YM07360*/
*       RLIST=RPARM;                /* SET UP PARMLIST       @Z30X8MJ
*                                      BASE                  @Z30X8MJ*/
         LR    RLIST,RPARM                                         0336
*       RPARM=LCBTTCIN;             /* GET THE TNT OFFSET@Z30X8MJ    */
         LH    RPARM,LCBTTCIN(,RLCB)                               0337
         N     RPARM,@CF01863                                      0337
*       RPARM=RPARM&AVTCLRHI;       /* CLEAR HI-ORDER BYT@YM07360    */
         N     RPARM,AVTCLRHI(,RAVT)                               0338
*       IF RPARM^=0 THEN                                           0339
         LTR   RPARM,RPARM                                         0339
         BZ    @RF00339                                            0339
*         DO;                       /* TTCIN ZERO?           @XA11347*/
*           REG15=AVTRNMPT;         /* GET TNT CODE ADDR     @Z30X8MJ*/
         L     REG15,AVTRNMPT(,RAVT)                               0341
*           GEN(BALR 14,15);        /* LOCATE TERMINAL       @Z30X8MJ
*                                      ENTRY                 @Z30X8MJ*/
         BALR 14,15
*           REG15=4;                /* SET BAD RETURN        @Z30X8MJ
*                                      CODE                  @Z30X8MJ*/
         LA    REG15,4                                             0343
*           RTRM=RPARM;             /* TRM ADDRESSABILITY    @YM06115*/
         LR    RTRM,RPARM                                          0344
*           RTRM=RTRM-LENGTH(IEDNTRM);/* BACK UP TO PREFIX   @YM07360*/
         SL    RTRM,@CF01485                                       0345
*           IF TRMPREF='1'B&        /* IF THIS IS A 3705 RESOURCE  0346
*                                                            @YM08402*/
*               LCBLUNIT='1'B&      /* THEN IF IT IS AN LU   @YM08402*/
*               TRMSIBPT^=0&        /* THEN IF A SESSION EXISTS    0346
*                                                            @YM08402*/
*               SIBINDEX^=SAVTSCPT THEN/* THEN IF IT IS AN LU-LU   0346
*                                      SESSION               @YM08402*/
         TM    TRMPREF(RTRM),B'00010000'                           0346
         BNO   @RF00346                                            0346
         TM    LCBLUNIT(RLCB),B'01000000'                          0346
         BNO   @RF00346                                            0346
         SLR   @10,@10                                             0346
         ICM   @10,7,TRMSIBPT(RTRM)                                0346
         LTR   @10,@10                                             0346
         BZ    @RF00346                                            0346
         L     @07,AVTSAVTP(,RAVT)                                 0346
         CLC   SIBINDEX(2,@10),SAVTSCPT(@07)                       0346
         BE    @RF00346                                            0346
*             DO;                   /* RESOURCE, CONTINUE@YM07360    */
*               REG15=0;            /* CLEAR RETURN CODE     @Z30X8MJ*/
         SLR   REG15,REG15                                         0348
*               IF PRFSCAN<PRFSIZE THEN/* NOT OUT OF BUFFER          */
         LH    @10,PRFSCAN(,RPRF)                                  0349
         CH    @10,PRFSIZE(,RPRF)                                  0349
         BNL   @RF00349                                            0349
*                 DO;               /* NORMAL PROCESSING             */
*                   IF IAHPRMOP='1'B/* IF OPTION FIELD SPECIFIED   0351
*                                                            @YM07360*/
*                     THEN                                         0351
         TM    IAHPRMOP(RLIST),B'00100000'                         0351
         BNO   @RF00351                                            0351
*                     CALL LINKAE;  /* LINK TO IEDQAE        @YM07360*/
         BAL   @14,LINKAE                                          0352
*                   ELSE                                           0353
*                     IF IAHPRMST='1'B/* IF CHARACTERS SPECIFIED   0353
*                                                            @YM07360*/
*                       THEN                                       0353
         B     @RC00351                                            0353
@RF00351 TM    IAHPRMST(RLIST),B'01000000'                         0353
         BNO   @RF00353                                            0353
*                       DO;         /* NO,CHECK FOR TSO      @ZA03102*/
*                         REG15=4;  /* SET BAD RETURN CODE   @ZA03102*/
         LA    REG15,4                                             0355
*                         IF PRFTSMSG='1'B/* TSO BUFFER?     @ZA03102*/
*                           THEN                                   0356
         TM    PRFTSMSG(RPRF),B'00010000'                          0356
         BNO   @RF00356                                            0356
*                           DO;     /* YES,PREPARE TO SCAN   @ZA03102*/
*                             STRNGPTR=CHARPTR;/* GET ADDRESS OF   0358
*                                      CHARACTER STRING      @ZA03102*/
         SLR   @10,@10                                             0358
         ICM   @10,7,CHARPTR(RLIST)                                0358
         ST    @10,STRNGPTR                                        0358
*                             STRNGCNT=NOCHARS;/* GET LENGTH OF    0359
*                                      CHARACTER STRING      @ZA03102*/
         SLR   @10,@10                                             0359
         IC    @10,NOCHARS(,RLIST)                                 0359
         STH   @10,STRNGCNT                                        0359
*                             CALL TSOSCAN;/* SCAN BUFFER FOR LOGOFF
*                                      SEQUENCE              @ZA03102*/
         BAL   @14,TSOSCAN                                         0360
*                           END;    /* END DO GROUP          @ZA03102*/
*                         ELSE      /* NOT TSO BUFFER        @YM08402*/
*                           DO;     /*                       @YM08402*/
         B     @RC00356                                            0362
@RF00356 DS    0H                                                  0363
*                             IF PRFSCAN=0 THEN                    0363
         LH    @10,PRFSCAN(,RPRF)                                  0363
         LTR   @10,@10                                             0363
         BZ    @RT00363                                            0363
*                               ;   /* NO,DO NOT SCAN BUFFER @ZA03102*/
*                             ELSE                                 0365
*                               CALL LINKAL;/* LINK TO IEDQAL      0365
*                                                            @ZA03102*/
         BAL   @14,LINKAL                                          0365
*                           END;    /*                       @YM08402*/
@RT00363 DS    0H                                                  0367
*                         IF REG15=0/* GOOD RETURN CODE?     @Z30X8MJ*/
*                           THEN                                   0367
@RC00356 LTR   REG15,REG15                                         0367
         BNZ   @RF00367                                            0367
*                           DO;     /* YES, CONTINUE         @Z30X8MJ*/
*                             IF IAHFLUSH^='1'B THEN/* IF NOT QUEUE
*                                      FLUSH                 @YM07360*/
         TM    IAHFLUSH(RLIST),B'10000000'                         0369
         BO    @RF00369                                            0369
*                               SIBLGOFF='1'B;/* SET LOGOFF REQUIRED
*                                                            @YM07360*/
         SLR   @10,@10                                             0370
         ICM   @10,7,TRMSIBPT(RTRM)                                0370
         OI    SIBLGOFF(@10),B'10000000'                           0370
*                             ELSE                                 0371
*                               QCBFLUSH='1'B;/* ELSE SET QUE FLUSH
*                                                            @YM07360*/
         B     @RC00369                                            0371
@RF00369 SLR   @10,@10                                             0371
         ICM   @10,7,TRMDESTQ(RTRM)                                0371
         AL    @10,@CF01865                                        0371
         OI    QCBFLUSH-4(@10),B'00000010'                         0371
*                           END;    /* END OF DO GROUP       @Z30X8MJ*/
*                       END;        /* END OF DO GROUP       @Z30X8MJ*/
*                     ELSE                                         0374
*                       IF PRFNLSTN='0'B&/* IF THIS IS END OF DATA   */
*                           RLIST=SCBMBHEN-1/* AND MULTI-BFR       0374
*                                      ENTR@Z30X8MJ                  */
*                         THEN                                     0374
         B     @RC00353                                            0374
@RF00353 TM    PRFNLSTN(RPRF),B'00000010'                          0374
         BNZ   @RF00374                                            0374
         L     @10,SCBMBHEN-1(,RSCB)                               0374
         LA    @10,0(,@10)                                         0374
         BCTR  @10,0                                               0374
         CR    RLIST,@10                                           0374
         BNE   @RF00374                                            0374
*                         DO;       /* RESET MULTI-BFR ENTRY         */
*                           REG15=4;/* SET ERROR RETURN              */
         LA    REG15,4                                             0376
*                           CALL RESTORE;/* RESTORE THE SCB          */
         BAL   @14,RESTORE                                         0377
*                         END;                                     0378
*                 END;              /* END OF DO GROUP       @Z30X8MJ*/
*               ELSE                                               0380
*                 ;                 /*                       @YM07360*/
@RF00349 DS    0H                                                  0381
*             END;                  /*                       @XA11347*/
@RC00349 DS    0H                                                  0382
*         END;                                                     0382
@RF00346 DS    0H                                                  0383
*     END;                          /*                       @YM07360*/
@RF00339 DS    0H                                                  0384
*   REG14=AVTUI;                                                   0384
@RC00306 L     REG14,AVTUI(,RAVT)                                  0384
*   GEN(B     4(14));                                              0385
         B     4(14)
*   RFY                                                            0386
*     RLIST UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0387
*     RDISP UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0388
*     RZERO UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0389
*     RWORK8 UNRSTD;                /* RELEASE TO COMPILER           */
*   RETURN;                                                        0390
@EL00001 DS    0H                                                  0390
@EF00001 DS    0H                                                  0390
@ER00001 BR    @14                                                 0390
*LINKAL:                                                           0391
*   RFY                                                            0391
*     RWORK1 RSTD;                  /* RESTRICT USAGE                */
LINKAL   DS    0H                                                  0392
*   RFY                                                            0392
*     REG2 RSTD;                    /* RESTRICT USAGE                */
*   RFY                                                            0393
*     RLIST RSTD;                   /* RESTRICT USAGE                */
*   RWORK1=REG14;                   /* SAVE RETURN ADDRESS           */
         LR    RWORK1,REG14                                        0394
*   REG2=PRFSCAN;                   /* SAVE SCAN POINTER             */
         LH    REG2,PRFSCAN(,RPRF)                                 0395
*   REG2=REG2&AVTCLRHI;             /* CLEAR HI HALF                 */
         N     REG2,AVTCLRHI(,RAVT)                                0396
*   REG15=SCBMBHEN-1;               /* SETUP MACRO PARAMETER @       */
         L     REG15,SCBMBHEN-1(,RSCB)                             0397
         LA    REG15,0(,REG15)                                     0397
         BCTR  REG15,0                                             0397
*   RFY                                                            0398
*     RZERO RSTD;                                                  0398
*   RZERO=CHARPTR;                  /* GET ADDRESS OF CHARS          */
         SLR   RZERO,RZERO                                         0399
         ICM   RZERO,7,CHARPTR(RLIST)                              0399
*   RPARM=NOCHARS;                  /* GET NUMBER OF CHARS           */
         SLR   RPARM,RPARM                                         0400
         IC    RPARM,NOCHARS(,RLIST)                               0400
*   RWORK3=RPARM;                   /* SAVE NUMBER LOOKING FOR       */
         LR    RWORK3,RPARM                                        0401
*   IF REG15=RLIST THEN             /* MBH ENTRY?                    */
         CR    REG15,RLIST                                         0402
         BNE   @RF00402                                            0402
*     DO;                           /* YES, ADJUST FOR PRIOR PASS    */
*       RWORK3=SCBDESTL;            /* GET NUMBER ALREADY FOUND      */
         SLR   RWORK3,RWORK3                                       0404
         IC    RWORK3,SCBDESTL(,RSCB)                              0404
*       CALL RESTORE;               /* RESTORE SCB                   */
         BAL   @14,RESTORE                                         0405
*       SRA(RWORK3,4);              /* REALIGN COUNT                 */
         SRA   RWORK3,4                                            0406
*       RZERO=RZERO+RWORK3;         /* ADJUST DATA POINTER           */
         ALR   RZERO,RWORK3                                        0407
*       RPARM=RPARM-RWORK3;         /* ADJUST COUNT OF CHARS         */
         SLR   RPARM,RWORK3                                        0408
*       RWORK3=RPARM;               /* RESET NUMBER LOOKING FOR      */
         LR    RWORK3,RPARM                                        0409
*     END;                          /* END OF MBH PROCESSING         */
*   SLL(RPARM,24);                  /* PUT COUNT IN HIGH BYTE        */
@RF00402 SLL   RPARM,24                                            0411
*   RPARM=RPARM+REG2;               /* ADD IN OFFSET FOR SCAN        */
         ALR   RPARM,REG2                                          0412
*   REG2=' ';                       /* INDICATE BLANK CHAR           */
         LA    REG2,64                                             0413
*   REG15=AVTAL;                    /* GET SCAN ROUTINE ADDR         */
         L     REG15,AVTAL(,RAVT)                                  0414
*   GEN(BALR 14,15);                /* LINK TO SCAN ROUTINE          */
         BALR 14,15
*   PRFSCAN=RZERO;                  /* UPDATE SCAN POINTER           */
         STH   RZERO,PRFSCAN(,RPRF)                                0416
*   IF REG15=RWORK3 THEN            /* IF ALL CHARS FOUND            */
         CR    REG15,RWORK3                                        0417
         BNE   @RF00417                                            0417
*     REG15=0;                      /* SET A GOOD RETURN             */
         SLR   REG15,REG15                                         0418
*   ELSE                                                           0419
*     DO;                           /* SEE IF ANY FOUND              */
         B     @RC00417                                            0419
@RF00417 DS    0H                                                  0420
*       IF REG15^=0&                /* SOME FOUND AND                */
*           PRFNLSTN='1'B THEN      /* THIS IS NOT THE LAST BUF      */
         LTR   REG15,REG15                                         0420
         BZ    @RF00420                                            0420
         TM    PRFNLSTN(RPRF),B'00000010'                          0420
         BNO   @RF00420                                            0420
*         DO;                       /* SETUP FOR MBH                 */
*           PRFSCAN=PRFSIZE+1;      /* SET SCAN PTR PAST END BFR     */
         LA    @10,1                                               0422
         AH    @10,PRFSIZE(,RPRF)                                  0422
         STH   @10,PRFSCAN(,RPRF)                                  0422
*           SLL(REG15,4);           /* ALIGN NUMBER FOUND            */
         SLL   REG15,4                                             0423
*           TEMP=REG15;             /* SAVE IN TEMPORARY PLACE       */
         STC   REG15,TEMP                                          0424
*           GEN(MVZ SCBDESTL-IEDQSCB(1,RSCB),TEMP);/* SAVE COUNT     */
         MVZ SCBDESTL-IEDQSCB(1,RSCB),TEMP
*           REG15=RSAVE;            /* SAVE SAVEAREA ADDRESS         */
         LR    REG15,RSAVE                                         0426
*           RSAVE=ADDR(AVTSAVE2);   /* POINTER TO SAVE2              */
         LA    RSAVE,AVTSAVE2(,RAVT)                               0427
*           GEN REFS(AVTEXA2S)(EX RZERO,AVTEXA2S-IEDQAVTD(RAVT));  0428
         EX RZERO,AVTEXA2S-IEDQAVTD(RAVT)
*           RSAVE=REG15;            /* RESTORE SAVE AREA             */
         LR    RSAVE,REG15                                         0429
*           SCBMBHEN=RLIST+1;       /* SAVE FOR STARTMH              */
         LA    @10,1                                               0430
         ALR   @10,RLIST                                           0430
         STCM  @10,7,SCBMBHEN(RSCB)                                0430
*         END;                      /* END OF MBH SETUP              */
*       REG15=4;                    /* SET ERROR RETURN              */
@RF00420 LA    REG15,4                                             0432
*     END;                                                         0433
*   REG14=RWORK1;                   /* COPY RETURN ADDRESS           */
@RC00417 LR    REG14,RWORK1                                        0434
*   RETURN;                         /* RETURN                        */
         B     @EL00001                                            0435
*   RFY                                                            0436
*     RZERO UNRSTD;                                                0436
*RESTORE:                                                          0437
*   SCBDESTL=SCBDESTL&'0F'X;        /* CLEAR SCB FIELD               */
RESTORE  LA    @10,15                                              0437
         SLR   @00,@00                                             0437
         IC    @00,SCBDESTL(,RSCB)                                 0437
         NR    @10,@00                                             0437
         STC   @10,SCBDESTL(,RSCB)                                 0437
*   SCBMBHEN=ADDR(AVTINOUT);        /* RESTORE NEXT MACRO ADDR       */
         LA    @10,AVTINOUT(,RAVT)                                 0438
         STCM  @10,7,SCBMBHEN(RSCB)                                0438
*   REG15=RSAVE;                    /* SAVE ADDRESS OF SAVEAREA      */
         LR    REG15,RSAVE                                         0439
*   RSAVE=ADDR(AVTSAVE2);           /* POINT TO SAVE2                */
         LA    RSAVE,AVTSAVE2(,RAVT)                               0440
*   GEN REFS(AVTEXS2A)(EX RZERO,AVTEXS2A-IEDQAVTD(RAVT));          0441
         EX RZERO,AVTEXS2A-IEDQAVTD(RAVT)
*   RSAVE=REG15;                    /* RESTORE ADDRESS OF     SAVEARA*/
         LR    RSAVE,REG15                                         0442
*   R14OFF=ADDR(NEXTSI);            /* SET TO RETURN TO NEXT MAC     */
         LA    @10,NEXTSI+8(,RLIST)                                0443
         ST    @10,R14OFF+72(,RAVT)                                0443
*   RETURN;                                                        0444
         B     @EL00001                                            0444
*   RFY                                                            0445
*     RWORK1 UNRSTD;                /* RELEASE TO COMPILER           */
*   RFY                                                            0446
*     REG2 UNRSTD;                  /* RELEASE TO COMPILER           */
*LINKAE:                                                           0447
*   RFY                                                            0447
*     RWORK1 RSTD;                  /* RESTRICT USAGE                */
LINKAE   DS    0H                                                  0448
*   RFY                                                            0448
*     RZERO RSTD;                   /* RESTRICT USAGE                */
*   RFY                                                            0449
*     REG2 RSTD;                    /* RESTRICT USAGE                */
*   RWORK1=REG14;                   /* SAVE RETURN ADDRESS           */
         LR    RWORK1,REG14                                        0450
*   IAHPARM(1:1)=QAEINDX;           /* SET QAE'S INDEX IN PARMLIST   */
         LA    @10,408                                             0451
         ALR   @10,RAVT                                            0451
         MVC   IAHPARM(1,@10),QAEINDX(RLIST)                       0451
*   IAHPARM(2:2)=4;                 /* PUT LENGTH IN LIST            */
         MVI   IAHPARM+1(@10),X'04'                                0452
*   IAHPARM(3:3)=OPTOFST;           /* SET OPTION FIELD OFFSET       */
         MVC   IAHPARM+2(1,@10),OPTOFST(RLIST)                     0453
*   IAHPARM(4:4)=15;                /* SET RETURN REG        @YM08438*/
         MVI   IAHPARM+3(@10),X'0F'                                0454
*   RPARM=ADDR(IAHPARM);            /* SET PARMLIST POINTER          */
         LR    RPARM,@10                                           0455
*   REG15=AVTUI;                    /* GET INTERFACE ROUTINE         */
         L     REG15,AVTUI(,RAVT)                                  0456
*   GEN(BALR  14,15);               /* LINK TO IEDQAE                */
         BALR  14,15
*   IF REG15=0 THEN                 /* IF NOT FOUND                  */
         LTR   REG15,REG15                                         0458
         BNZ   @RF00458                                            0458
*     REG15=4;                      /* THEN SET ERROR RETURN         */
         LA    REG15,4                                             0459
*   STRNGPTR=REG15;                 /* GET ADDRESS OF OPTION FIELD 0460
*                                      FROM IEDQAE           @ZA03102*/
@RF00458 ST    REG15,STRNGPTR                                      0460
*   REG15=4;                        /* SET BAD RETURN CODE   @ZA03102*/
         LA    REG15,4                                             0461
*   IF PRFTSMSG='1'B                /* TSO BUFFER?           @ZA03102*/
*     THEN                                                         0462
         TM    PRFTSMSG(RPRF),B'00010000'                          0462
         BNO   @RF00462                                            0462
*     DO;                           /* YES,PREPARE TO SCAN   @ZA03102*/
*       STRNGCNT=(RPARM->COUNT)+1;  /* GET NUMBER OF CHARACTERS IN 0464
*                                      OPTION FIELD STRING@ZA03102   */
         SLR   @10,@10                                             0464
         IC    @10,COUNT(,RPARM)                                   0464
         LA    @10,1(,@10)                                         0464
         STH   @10,STRNGCNT                                        0464
*       CALL TSOSCAN;               /* SCAN BUFFER FOR LOGOFF      0465
*                                      SEQUENCE              @ZA03102*/
         BAL   @14,TSOSCAN                                         0465
*     END;                          /* END DO GROUP          @ZA03102*/
*   ELSE                                                           0467
*     IF PRFSCAN=0                  /* OPTION FIELD FOUND,IS SCAN  0467
*                                      POINTER SET?          @ZA03102*/
*       THEN                                                       0467
         B     @RC00462                                            0467
@RF00462 LH    @10,PRFSCAN(,RPRF)                                  0467
         LTR   @10,@10                                             0467
         BZ    @RT00467                                            0467
*       ;                           /* YES, DO NOT SCAN      @YM07360*/
*     ELSE                                                         0469
*       DO;                         /* SCAN POINTER SET,CALL NON-TSO
*                                      SCAN ROUTINE          @ZA03102*/
*         RZERO=REG15;              /* SET ADDRESS OF CHARS          */
         LR    RZERO,REG15                                         0470
*         REG15=AVTAL;              /* GET ADDR OF SCAN ROUTINE      */
         L     REG15,AVTAL(,RAVT)                                  0471
*         RWORK3=RPARM->COUNT;      /* GET NUMBER OF CHARS           */
         SLR   RWORK3,RWORK3                                       0472
         IC    RWORK3,COUNT(,RPARM)                                0472
*         RWORK3=RWORK3+1;          /* INCREMENT THE COUNT           */
         LA    RWORK3,1(,RWORK3)                                   0473
*         RPARM=RWORK3;             /* PUT COUNT IN PARM REG         */
         LR    RPARM,RWORK3                                        0474
*         GEN(SLL   RPARM,24);      /* SHIFT TO HI ORDER BYTE        */
         SLL   RPARM,24
*         REG2=PRFSCAN;             /* GET OFFSET FOR SCAN           */
         LH    REG2,PRFSCAN(,RPRF)                                 0476
*         REG2=REG2&AVTCLRHI;       /* CLEAR HI ORDER HALF           */
         N     REG2,AVTCLRHI(,RAVT)                                0477
*         RPARM=RPARM+REG2;         /* PUT OFFSET IN PARM REG        */
         ALR   RPARM,REG2                                          0478
*         REG2=' ';                 /* SET BLANK CHAR                */
         LA    REG2,64                                             0479
*         GEN(BALR  14,15);         /* LINK TO IEDQAL                */
         BALR  14,15
*         IF REG15=0                /* IF NOT FOUND                  */
*           THEN                                                   0481
         LTR   REG15,REG15                                         0481
         BNZ   @RF00481                                            0481
*           REG15=4;                /* THEN SET ERROR RETURN         */
         LA    REG15,4                                             0482
*         ELSE                                                     0483
*           IF REG15=RWORK3         /* IF ALL WERE FOUND             */
*             THEN                                                 0483
         B     @RC00481                                            0483
@RF00481 CR    REG15,RWORK3                                        0483
         BNE   @RF00483                                            0483
*             DO;                   /* SET GOOD RETURN               */
*               PRFSCAN=RZERO;      /* SET NEW SCAN PTR              */
         STH   RZERO,PRFSCAN(,RPRF)                                0485
*               REG15=0;            /* GOOD RETURN CODE              */
         SLR   REG15,REG15                                         0486
*             END;                                                 0487
*           ELSE                                                   0488
*             REG15=4;              /* SET ERROR RETURN CODE         */
         B     @RC00483                                            0488
@RF00483 LA    REG15,4                                             0488
*       END;                                                       0489
@RC00483 DS    0H                                                  0489
@RC00481 DS    0H                                                  0490
*   REG14=RWORK1;                   /* RESTORE RETURN ADDRESS        */
@RT00467 DS    0H                                                  0490
@RC00462 LR    REG14,RWORK1                                        0490
*   RFY                                                            0491
*     REG2 UNRSTD;                  /* RELEASE TO COMPILER           */
*   RFY                                                            0492
*     RZERO UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0493
*     RWORK1 UNRSTD;                /* RELEASE TO COMPILER           */
*   RFY                                                            0494
*     RLIST UNRSTD;                 /* RELEASE TO COMPILER           */
*   RETURN;                         /* RETURN TO CALLER              */
         B     @EL00001                                            0495
*                                                                  0496
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SCANS THE TSO HEADER BUFFER FOR THE LOGOFF    */
*   /* CHARACTER STRING SPECIFIED BY THE IEDHALT MACRO. THE LOGOFF   */
*   /* SEQUENCE MUST BE THE FIRST NON-BLANK USER DATA CONTAINED IN   */
*   /* BUFFER. IF THE LOGOFF SEQUENCE IS NOT FOUND, THE RETURN CODE  */
*   /* IS SET TO 8.                                          @ZA03102*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0496
*TSOSCAN:                                                          0496
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/*                       @ZA03102*/
TSOSCAN  DS    0H                                                  0497
*   R14SAVE=REG14;                  /* SAVE RETURN ADDRESS   @ZA03102*/
         ST    REG14,R14SAVE                                       0497
*   PRFPTR=RPRF;                    /* GET BUFFER ADDRESS    @ZA03102*/
         ST    RPRF,PRFPTR                                         0498
*   RFY                                                            0499
*     IEDQPRF BASED(PRFPTR);        /* RESPECIFY BFR PREFIX  @ZA03102*/
*   CHARCNT=0;                      /* INITIALIZE COUNT OF CHARACTERS
*                                      COMPARED              @ZA03102*/
         MVI   CHARCNT,X'00'                                       0500
*   SCANPTR=ADDR(PRFSHDR);          /* INITIALIZE SCAN POINTER     0501
*                                                            @ZA03102*/
         L     @10,PRFPTR                                          0501
         LA    SCANPTR,PRFSHDR(,@10)                               0501
*   UNITCNT=AVTHDRSZ;               /* INITIALIZE COUNT OF BYTES   0502
*                                      SCANNED IN UNIT       @ZA03102*/
         LA    @10,30                                              0502
         LR    UNITCNT,@10                                         0502
*   BFRCNT=AVTHDRSZ;                /* INITIALIZE COUNT OF BYTES   0503
*                                      SCANNED IN BUFFER     @ZA03102*/
         LR    BFRCNT,@10                                          0503
*   CALL FINDATA;                   /* FIND BEGINNING OF BUFFER DATA
*                                                            @ZA03102*/
         BAL   @14,FINDATA                                         0504
*   DO BFRCNT=(BFRCNT+1) TO PRFSIZE WHILE(REG15=4);/* SCAN TO FIRST
*                                      NON-BLANK CHARACTER. COMPARE
*                                      TO IEDHALT LOGOFF SEQUENCE FOR
*                                      MATCH                 @ZA03102*/
         LA    @10,1                                               0505
         ALR   @10,BFRCNT                                          0505
         LR    BFRCNT,@10                                          0505
         B     @DE00505                                            0505
@DL00505 C     REG15,@CF00473                                      0505
         BNE   @DC00505                                            0505
*     IF UNITCNT=AVTKEYLE           /* WHOLE UNIT BEEN SCANNED?    0506
*                                                            @ZA03102*/
*       THEN                                                       0506
         CH    UNITCNT,AVTKEYLE(,RAVT)                             0506
         BNE   @RF00506                                            0506
*       DO;                         /* YES,LOOK AT NEXT UNIT @ZA03102*/
*         CALL LINKUNIT;            /* LINK UNITS            @ZA03102*/
         BAL   @14,LINKUNIT                                        0508
*         BFRCNT=BFRCNT-1;          /* ADJUST BUFFER COUNT SINCE NO
*                                      BYTE SCANNED          @ZA03102*/
         BCTR  BFRCNT,0                                            0509
*       END;                        /* END DO GROUP          @ZA03102*/
*     ELSE                                                         0511
*       DO;                         /* NO,LOOK AT NEXT BYTE  @ZA03102*/
         B     @RC00506                                            0511
@RF00506 DS    0H                                                  0512
*         UNITCNT=UNITCNT+1;        /* INCREMENT UNIT COUNT  @ZA03102*/
         AL    UNITCNT,@CF00035                                    0512
*         IF BUFDATA=' '            /* BYTE A BLANK?         @ZA03102*/
*           THEN                                                   0513
         CLI   BUFDATA(SCANPTR),C' '                               0513
         BNE   @RF00513                                            0513
*           IF CHARCNT>0            /* NON-BLANK CHARACTER ALREADY 0514
*                                      FOUND?                @ZA03102*/
*             THEN                                                 0514
         CLI   CHARCNT,0                                           0514
         BNH   @RF00514                                            0514
*             REG15=EIGHT;          /* YES,SET BAD RETURN CODE     0515
*                                                            @ZA03102*/
         LA    REG15,8                                             0515
*           ELSE                                                   0516
*             SCANPTR=SCANPTR+1;    /* NO,POINT TO NEXT BYTE @ZA03102*/
         B     @RC00514                                            0516
@RF00514 AL    SCANPTR,@CF00035                                    0516
*         ELSE                                                     0517
*           DO;                     /* BYTE NOT A BLANK-COMPARE FOR
*                                      MATCH                 @ZA03102*/
         B     @RC00513                                            0517
@RF00513 DS    0H                                                  0518
*             CHARCNT=CHARCNT+1;    /* INCREMENT COUNT OF CHARACTERS
*                                      COMPARED              @ZA03102*/
         SLR   @10,@10                                             0518
         IC    @10,CHARCNT                                         0518
         LA    @10,1(,@10)                                         0518
         STC   @10,CHARCNT                                         0518
*             IF BUFDATA=STRING(CHARCNT)/* DATA BYTE EQUAL         0519
*                                      CORRESPONDING BYTE IN IEDHALT
*                                      MACRO STRING?         @ZA03102*/
*               THEN                                               0519
         ST    @10,@TF00001                                        0519
         L     @10,STRNGPTR                                        0519
         AL    @10,@TF00001                                        0519
         BCTR  @10,0                                               0519
         CLC   BUFDATA(1,SCANPTR),STRING(@10)                      0519
         BNE   @RF00519                                            0519
*               IF CHARCNT=STRNGCNT /* YES,HAS WHOLE STRING BEEN   0520
*                                      EXAMINED?             @ZA03102*/
*                 THEN                                             0520
         L     @10,@TF00001                                        0520
         CH    @10,STRNGCNT                                        0520
         BNE   @RF00520                                            0520
*                 REG15=0;          /* YES,SET SUCCESSFUL RETURN CODE
*                                                            @ZA03102*/
         SLR   REG15,REG15                                         0521
*               ELSE                                               0522
*                 SCANPTR=SCANPTR+1;/* NO,BUMP SCAN POINTER TO NEXT
*                                      BYTE                  @ZA03102*/
         B     @RC00520                                            0522
@RF00520 AL    SCANPTR,@CF00035                                    0522
*             ELSE                                                 0523
*               REG15=EIGHT;        /* NO MATCH FOUND ON DATA      0523
*                                      BYTE-SET BAD RETURN CODE    0523
*                                                            @ZA03102*/
         B     @RC00519                                            0523
@RF00519 LA    REG15,8                                             0523
*           END;                    /* END DO GROUP          @ZA03102*/
@RC00519 DS    0H                                                  0525
*       END;                        /* END DO GROUP          @ZA03102*/
@RC00513 DS    0H                                                  0526
*   END;                            /* END DO WHILE LOOP     @ZA03102*/
@RC00506 AL    BFRCNT,@CF00035                                     0526
@DE00505 L     @10,PRFPTR                                          0526
         CH    BFRCNT,PRFSIZE(,@10)                                0526
         BNH   @DL00505                                            0526
@DC00505 DS    0H                                                  0527
*   REG14=R14SAVE;                  /* RESTORE RETURN ADDRESS@ZA03102*/
         L     REG14,R14SAVE                                       0527
*   END TSOSCAN;                    /* RETURN TO CALLER      @ZA03102*/
@EL00002 DS    0H                                                  0528
@EF00002 DS    0H                                                  0528
@ER00002 BR    @14                                                 0528
*                                                                  0529
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS HEADER BUFFER TEXT FOR RESERVE BYTES   */
*   /* AND 3270 CONTROL CHARACTERS. ANY SUCH BYTES FOUND ARE SKIPPED */
*   /* AND SCAN POINTER IS ADVANCED TO FIRST BYTE OF USER DATA.      */
*   /*                                                       @ZA03102*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0529
*FINDATA:                                                          0529
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/*                       @ZA03102*/
FINDATA  DS    0H                                                  0530
*   RFY                                                            0530
*     IEDDCT BASED(DCTPTR);                                        0530
*   R14SAVE2=REG14;                 /* SAVE RETURN ADDRESS   @ZA03102*/
         ST    REG14,R14SAVE2                                      0531
*   IF LCBISZE>0                    /* ANY RESERVE BYTES?    @ZA03102*/
*     THEN                                                         0532
         CLI   LCBISZE(RLCB),0                                     0532
         BNH   @RF00532                                            0532
*     DO;                           /* YES,SKIP THEM         @ZA03102*/
*       UNITCNT=UNITCNT+LCBISZE;    /* INCLUDE COUNT OF RESERVE BYTES
*                                      IN UNIT COUNT         @ZA03102*/
         SLR   @10,@10                                             0534
         IC    @10,LCBISZE(,RLCB)                                  0534
         ALR   UNITCNT,@10                                         0534
*       BFRCNT=BFRCNT+LCBISZE;      /* INCLUDE COUNT OF RESERVE BYTES
*                                      IN BUFFER COUNT       @ZA03102*/
         ALR   BFRCNT,@10                                          0535
*       IF UNITCNT=>AVTKEYLE        /* WHOLE UNIT BEEN SCANNED?    0536
*                                                            @ZA03102*/
*         THEN                                                     0536
         CH    UNITCNT,AVTKEYLE(,RAVT)                             0536
         BL    @RF00536                                            0536
*         CALL LINKUNIT;            /* YES,LOOK AT NEXT UNIT @ZA03102*/
         BAL   @14,LINKUNIT                                        0537
*       ELSE                                                       0538
*         SCANPTR=SCANPTR+LCBISZE;  /* NO,ADVANCE SCAN POINTER PAST
*                                      RESERVE BYTES         @ZA03102*/
         B     @RC00536                                            0538
@RF00536 SLR   @10,@10                                             0538
         IC    @10,LCBISZE(,RLCB)                                  0538
         ALR   SCANPTR,@10                                         0538
*     END;                          /* END DO GROUP          @ZA03102*/
*   ELSE                                                           0540
*     ;                             /* NO RESERVE BYTES      @ZA03102*/
@RF00532 DS    0H                                                  0541
*   IF REG15=4                      /* PROBLEM FOUND?        @ZA03102*/
*     THEN                                                         0541
@RC00532 C     REG15,@CF00473                                      0541
         BNE   @RF00541                                            0541
*     DO;                           /* NO,CONTINUE SCAN      @ZA03102*/
*       IF SIBFMPRO=2               /* 3270 STATION?         @YM08402*/
*         THEN                                                     0543
         SLR   @10,@10                                             0543
         ICM   @10,7,TRMSIBPT(RTRM)                                0543
         CLI   SIBFMPRO(@10),2                                     0543
         BNE   @RF00543                                            0543
*         DO;                       /* YES,SKIP 3270 CONTROL       0544
*                                      CHARACTERS AND SBA,IF       0544
*                                      SPECIFIED             @ZA03102*/
*           UNITCNT=UNITCNT+AVTHA3; /* INCLUDE THREE CONTROL       0545
*                                      CHARACTERS IN UNIT COUNT    0545
*                                                            @ZA03102*/
         LH    @10,AVTHA3(,RAVT)                                   0545
         ALR   UNITCNT,@10                                         0545
*           BFRCNT=BFRCNT+AVTHA3;   /* INCLUDE THREE CONTROL       0546
*                                      CHARACTERS IN BUFFER COUNT  0546
*                                                            @ZA03102*/
         ALR   BFRCNT,@10                                          0546
*           IF UNITCNT=>AVTKEYLE    /* WHOLE UNIT BEEN SCANNED?    0547
*                                                            @ZA03102*/
*             THEN                                                 0547
         CH    UNITCNT,AVTKEYLE(,RAVT)                             0547
         BL    @RF00547                                            0547
*             CALL LINKUNIT;        /* YES,LOOK AT NEXT UNIT @ZA03102*/
         BAL   @14,LINKUNIT                                        0548
*           ELSE                                                   0549
*             SCANPTR=SCANPTR+AVTHA3;/* NO,ADVANCE SCAN POINTER PAST
*                                      CONTROL CHARACTERS    @ZA03102*/
         B     @RC00547                                            0549
@RF00547 AH    SCANPTR,AVTHA3(,RAVT)                               0549
*           IF REG15=4              /* PROBLEM FOUND?        @ZA03102*/
*             THEN                                                 0550
@RC00547 C     REG15,@CF00473                                      0550
         BNE   @RF00550                                            0550
*             IF BUFDATA=SBACHAR    /* NO,SBA ON?            @ZA03102*/
*               THEN                                               0551
         CLI   BUFDATA(SCANPTR),X'11'                              0551
         BNE   @RF00551                                            0551
*               DO;                 /* YES,SKIP SBA BYTES    @ZA03102*/
*                 UNITCNT=UNITCNT+AVTHA3;/* INCLUDE THREE SBA BYTES
*                                      IN UNIT COUNT         @ZA03102*/
         LH    @10,AVTHA3(,RAVT)                                   0553
         ALR   UNITCNT,@10                                         0553
*                 BFRCNT=BFRCNT+AVTHA3;/* INCLUDE THREE SBA BYTES IN
*                                      UNIT COUNT            @ZA03102*/
         ALR   BFRCNT,@10                                          0554
*                 IF UNITCNT=>AVTKEYLE/* WHOLE UNIT BEEN SCANNED?  0555
*                                                            @ZA03102*/
*                   THEN                                           0555
         CH    UNITCNT,AVTKEYLE(,RAVT)                             0555
         BL    @RF00555                                            0555
*                   CALL LINKUNIT;  /* YES,LOOK AT NEXT UNIT @ZA03102*/
         BAL   @14,LINKUNIT                                        0556
*                 ELSE                                             0557
*                   SCANPTR=SCANPTR+AVTHA3;/* NO,ADVANCE SCAN POINTER
*                                      PAST SBA BYTES        @ZA03102*/
         B     @RC00555                                            0557
@RF00555 AH    SCANPTR,AVTHA3(,RAVT)                               0557
*               END;                /* END DO GROUP          @ZA03102*/
*             ELSE                                                 0559
*               ;                   /* SBA NOT ON            @ZA03102*/
@RF00551 DS    0H                                                  0560
*           ELSE                                                   0560
*             ;                     /* PROBLEM FOUND,GET OUT @ZA03102*/
@RF00550 DS    0H                                                  0561
*         END;                      /* END DO GROUP          @ZA03102*/
*       ELSE                                                       0562
*         ;                         /* NOT 3270 STATION      @ZA03102*/
@RF00543 DS    0H                                                  0563
*     END;                          /* END DO GROUP          @ZA03102*/
*   ELSE                                                           0564
*     ;                             /* PROBLEM FOUND,GET OUT @ZA03102*/
@RF00541 DS    0H                                                  0565
*   REG14=R14SAVE2;                 /* RESTORE RETURN ADDRESS@ZA03102*/
@RC00541 L     REG14,R14SAVE2                                      0565
*   END FINDATA;                    /* RETURN TO CALLER      @ZA03102*/
@EL00003 DS    0H                                                  0566
@EF00003 DS    0H                                                  0566
@ER00003 BR    @14                                                 0566
*                                                                  0567
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SETS SCAN POINTER TO SUBSEQUENT UNIT AND      */
*   /* ADJUSTS UNIT COUNT WHEN END OF BUFFER UNIT IS REACHED. IF     */
*   /* BUFFER TIC FIELD DOES NOT CONTAIN A UNIT ADDRESS FOR LINKAGE, */
*   /* A RETURN CODE OF 16 IS SET.                           @ZA03102*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0567
*LINKUNIT:                                                         0567
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);/*                       @ZA03102*/
LINKUNIT DS    0H                                                  0568
*   IF PRFTI0=TIC2                  /* TIC FIELD SET TO 2?   @ZA03102*/
*     THEN                                                         0568
         L     @10,PRFPTR                                          0568
         CLC   PRFTI0(3,@10),@CF00273+1                            0568
         BNE   @RF00568                                            0568
*     REG15=AVTHA16;                /* YES,SET BAD RETURN CODE     0569
*                                                            @ZA03102*/
         LH    REG15,AVTHA16(,RAVT)                                0569
*   ELSE                                                           0570
*     DO;                           /* NO,LINK UNITS         @ZA03102*/
         B     @RC00568                                            0570
@RF00568 DS    0H                                                  0571
*       PRFPTR=PRFTI0;              /* GET NEXT UNIT ADDRESS @ZA03102*/
         L     @10,PRFPTR                                          0571
         L     @10,PRFTI0-1(,@10)                                  0571
         LA    @10,0(,@10)                                         0571
         ST    @10,PRFPTR                                          0571
*       UNITCNT=UNITCNT-AVTKEYLE;   /* ADJUST UNIT COUNT FOR NEW UNIT
*                                                            @ZA03102*/
         SH    UNITCNT,AVTKEYLE(,RAVT)                             0572
*       SCANPTR=ADDR(PRFSUNIT)+UNITCNT;/* POINT TO FIRST BYTE TO BE
*                                      SCANNED IN NEW UNIT   @ZA03102*/
         LA    SCANPTR,PRFSUNIT(,@10)                              0573
         ALR   SCANPTR,UNITCNT                                     0573
*     END;                          /* END DO GROUP          @ZA03102*/
*   END LINKUNIT;                   /* RETURN TO CALLER      @ZA03102*/
@EL00004 DS    0H                                                  0575
@EF00004 DS    0H                                                  0575
@ER00004 BR    @14                                                 0575
*   RFY                                                            0576
*     IEDQPRF BASED(RPRF);          /* RESTORE BUFFER PREFIX BASE  0576
*                                                            @ZA03102*/
*   RFY                                                            0577
*     RWORK3 UNRSTD;                /* RELEASE TO COMPILER           */
*   RFY                                                            0578
*     RSCB UNRSTD;                  /* RELEASE TO COMPILER           */
*   RFY                                                            0579
*     RLCB UNRSTD;                  /* RELEASE TO COMPILER           */
*   RFY                                                            0580
*     RAVT UNRSTD;                  /* RELEASE TO COMPILER           */
*   RFY                                                            0581
*     REG14 UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0582
*     REG15 UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0583
*     RPARM UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0584
*     RBASE UNRSTD;                 /* RELEASE TO COMPILER           */
*   RFY                                                            0585
*     RSAVE UNRSTD;                                                0585
*   RFY                                                            0586
*     RPRF UNRSTD;                                                 0586
*   END IEDIAH                                                     0587
*                                                                  0587
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TDCTD   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*                                                                  0587
*       ;                                                          0587
@DATA    DS    0H
         DS    0F
@TF00001 DS    F
         DS    0F
@CF00035 DC    F'1'
@CF00273 DC    F'2'
@CF00473 DC    F'4'
@CF01485 DC    F'14'
@CF01865 DC    F'-4'
@CF01863 DC    XL4'0000FFFF'
         DS    0D
DCTPTR   DS    A
PRFPTR   DS    A
STRNGPTR DS    A
SAVEALEN DC    XL2'48'
STRNGCNT DS    H
         DS    CL1
IEDQQPTR DS    AL3
CHARCNT  DS    FL1
TEMP     DS    CL1
         DS    CL2
@NM00178 DS    CL8
         ORG   @NM00178
R14SAVE  DC    A(0)
R14SAVE2 DC    A(0)
         ORG   @NM00178+8
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SCANPTR  EQU   @07
UNITCNT  EQU   @02
BFRCNT   EQU   @11
IEDQSPTR EQU   @10
IEDQAPTR EQU   @09
RDISP    EQU   @11
IEDQLPTR EQU   @04
LCBXPTR  EQU   @05
IEDQPPTR EQU   @06
RTRM     EQU   @08
RPARM    EQU   @01
RZERO    EQU   @00
RLIST    EQU   @11
REG2     EQU   @02
RSCB     EQU   @03
RLCB     EQU   @04
RWORK3   EQU   @05
RPRF     EQU   @06
RWORK1   EQU   @07
RWORK8   EQU   @08
RAVT     EQU   @09
RBASE    EQU   @12
RSAVE    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
IEDQTPTR EQU   @01
RETREG   EQU   @15
RQCB     EQU   @07
RWORK10  EQU   @10
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBDESTL EQU   IEDQSCB+36
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDQAVTD EQU   0
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVEX EQU   IEDQAVTD+288
@NM00007 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00007
AVTEXA2S EQU   IEDQAVTD+396
AVTEXS2A EQU   IEDQAVTD+402
AVTPARM  EQU   IEDQAVTD+408
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTUI    EQU   IEDQAVTD+520
AVTHG02  EQU   IEDQAVTD+528
AVTAL    EQU   IEDQAVTD+532
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTMSGS  EQU   IEDQAVTD+729
AVTINOUT EQU   IEDQAVTD+766
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTHA3   EQU   IEDQAVTD+1024
AVTHA16  EQU   IEDQAVTD+1030
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00087 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDDCT   EQU   0
DCTBYTE1 EQU   IEDDCT+1
DCTBYTE2 EQU   IEDDCT+2
DCTBYTE3 EQU   IEDDCT+3
DCTBYTE4 EQU   IEDDCT+4
DCTBYTE5 EQU   IEDDCT+5
IEDQDISP EQU   0
DSPCHAIN EQU   12
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBISZE  EQU   IEDQLCB+28
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSENS0 EQU   LCBIOBSN+1
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBRCLLN EQU   LCBSTAT1
LCBCTLMD EQU   LCBSTAT1
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBQB EQU   LCBERB+1
LCBERBPY EQU   IEDQLCB+80
LCBERBLK EQU   IEDQLCB+81
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCH EQU   IEDQLCB+85
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBTTCIN EQU   IEDQLCB+90
LCBMSGFM EQU   IEDQLCB+92
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBLUNIT EQU   LCBSTAT5
LCBSTAT6 EQU   LCBTPCD+4
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFTI0   EQU   PRFTIC+1
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
@NM00153 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00153
PRFSIZE  EQU   PRFSVFFO+2
PRFSTAT1 EQU   IEDQPRF+20
PRFTSMSG EQU   PRFSTAT1
PRFEOFN  EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00161 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00161+1
QCBTSOF1 EQU   @NM00161+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBFLUSH EQU   QCBSTAT1
QCBPLCBA EQU   IEDNQCB+5
IEDSIBD  EQU   0
SIBINDEX EQU   IEDSIBD+8
SIBSESSN EQU   IEDSIBD+10
SIBLGOFF EQU   SIBSESSN
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBSTAT2 EQU   IEDSIBD+17
SIBFMPRO EQU   IEDSIBD+19
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBBIND2 EQU   SIBBIND+1
SIBBIND3 EQU   SIBBIND+2
SIBSTAT0 EQU   IEDSIBD+23
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
COUNT    EQU   0
ADDRBD   EQU   0
IAHPARM  EQU   0
PARMLIST EQU   0
IAHSTAT  EQU   PARMLIST+2
IAHFLUSH EQU   IAHSTAT
IAHPRMST EQU   IAHSTAT
IAHPRMOP EQU   IAHSTAT
QAEINDX  EQU   PARMLIST+4
NOCHARS  EQU   QAEINDX
CHARPTR  EQU   PARMLIST+5
OPTOFST  EQU   CHARPTR
MACROCOD EQU   0
NEXTSI   EQU   MACROCOD+6
SAVEAREA EQU   0
R14OFF   EQU   SAVEAREA+12
BUFDATA  EQU   0
STRING   EQU   0
DSPBYPAS EQU   20
DSPDISP  EQU   4
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPOST  EQU   24
DSPPOSTR EQU   28
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPUNAVR EQU   44
DSPWAIT  EQU   16
IEDQTNT  EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00134 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
PRFSHDR  EQU   IEDQPRF+42
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
SCBRGSAV EQU   SCBEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00174 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00173 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00172 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
@NM00141 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00140 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00139 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00138 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00137 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00136 EQU   @NM00134+4
LCBNCPPT EQU   @NM00134+1
@NM00135 EQU   @NM00134
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00133 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00132 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00131 EQU   LCBCSWU1
@NM00130 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00129 EQU   LCBRSPIN
R15OFF   EQU   SAVEAREA+16
@NM00177 EQU   SAVEAREA+8
@NM00176 EQU   SAVEAREA+4
@NM00175 EQU   SAVEAREA
BALR     EQU   MACROCOD+4
LOAD     EQU   MACROCOD
IAHNOUSE EQU   PARMLIST+3
IAHLEN   EQU   PARMLIST+1
IAHINDX  EQU   PARMLIST
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00171 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00170 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00169 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
SIBLUTYP EQU   SIBSTAT0
SIBCD    EQU   SIBSTAT0
@NM00168 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBFMODE EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBBRACK EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPEBI  EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBTSPRO EQU   IEDSIBD+18
@NM00167 EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBTERM  EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBBSTAT EQU   SIBSTAT1
SIBRTRP  EQU   SIBSTAT1
@NM00166 EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBDSTAT EQU   SIBSESSN
SIBSSTAT EQU   SIBSESSN
SIBINBIU EQU   SIBSESSN
SIBSHUTC EQU   SIBSESSN
SIBCHAIN EQU   IEDSIBD+4
SIBRUSEG EQU   IEDSIBD
QCBTTCIN EQU   QCBPLCBA+1
@NM00165 EQU   QCBPLCBA
@NM00164 EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00163 EQU   QCBFHDTZ
@NM00162 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00161
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00160 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00159 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBELCHN EQU   IEDQQCB+1
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00158 EQU   IEDPF2+1
@NM00157 EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00156 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00155 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00154 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00153+3
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFPIUO  EQU   PRFPLQCB
@NM00152 EQU   PRFTICC
@NM00151 EQU   PRFTICC
@NM00150 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00149 EQU   PRFTICC
@NM00148 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00147 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00146 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00145 EQU   LCBXFLAG
@NM00144 EQU   LCBXFLAG
@NM00143 EQU   LCBXFLAG
@NM00142 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCCW5  EQU   LCBCPA+32
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00128 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00127 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBSCBA  EQU   IEDQLCB+93
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
@NM00126 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
@NM00125 EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00124 EQU   LCBTSTSW
@NM00123 EQU   LCBTSTSW
@NM00122 EQU   LCBTSTSW
@NM00121 EQU   LCBTSTSW
@NM00120 EQU   LCBTSTSW
@NM00119 EQU   LCBTSTSW
@NM00118 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBCVRSP EQU   LCBCTLMD
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00117 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
LCBRESTR EQU   LCBRCQCB
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00116 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUE  EQU   LCBCSWUS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00115 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBIOBSN+2
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00114 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00113 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00112 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBLNENT EQU   LCBSCBDA+1
@NM00111 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00110 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00109 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00108 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBPRI   EQU   LCBRCB+4
LCBQCBA  EQU   LCBRCB+1
LCBKEY   EQU   LCBRCB
@NM00107 EQU   DCTBYTE5
DCTL3270 EQU   DCTBYTE5
DCTSCS   EQU   DCTBYTE5
DCTTSPRF EQU   DCTBYTE4
DCTFMPRF EQU   DCTBYTE4
DCT2760  EQU   DCTBYTE3
DCTNOIDL EQU   DCTBYTE3
DCTCONTN EQU   DCTBYTE3
DCTBUFF  EQU   DCTBYTE3
DCTCHECK EQU   DCTBYTE3
DCTENCTL EQU   DCTBYTE3
DCTWTTA  EQU   DCTBYTE3
DCT1050  EQU   DCTBYTE3
DCTAUDIO EQU   DCTBYTE2
DCTLOCAL EQU   DCTBYTE2
DCTCONT  EQU   DCTBYTE2
DCTXMIT  EQU   DCTBYTE2
DCTSTCTL EQU   DCTBYTE2
DCTTWX   EQU   DCTBYTE2
DCTBRDST EQU   DCTBYTE2
DCTBISYN EQU   DCTBYTE2
DCTUMASK EQU   DCTBYTE1
DCTSADEV EQU   DCTBYTE1
DCT3270  EQU   DCTBYTE1
DCT2741  EQU   DCTBYTE1
DCT5041  EQU   DCTBYTE1
DCTATTEN EQU   DCTBYTE1
DCTBREAK EQU   DCTBYTE1
DCTINHIB EQU   DCTBYTE1
DCTBYTE0 EQU   IEDDCT
SAVTBITN EQU   IEDNSVTD+312
@NM00106 EQU   SAVTCKQB+8
@NM00105 EQU   SAVTCKEC+1
@NM00104 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00103 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00102 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00101 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00100 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00099 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00098 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00097 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00096 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00095 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00094 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00093 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00092 EQU   IEDQAVTD+1242
@NM00091 EQU   IEDQAVTD+1241
@NM00090 EQU   IEDQAVTD+1240
@NM00089 EQU   IEDQAVTD+1237
@NM00088 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00087
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00086 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00085 EQU   IEDQAVTD+1140
@NM00084 EQU   IEDQAVTD+1137
@NM00083 EQU   AVTBIT4
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00076 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00075 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00074 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00073 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00072 EQU   AVTBIT2
@NM00071 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00070 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00069 EQU   IEDQAVTD+950
@NM00068 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00067 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00066 EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL1
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00054 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00053 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00052 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00051 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00050 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00049 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00048 EQU   AVTOPCQB+8
@NM00047 EQU   AVTOPCEC+1
@NM00046 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00045 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00044 EQU   AVTCKPEC+1
@NM00043 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00042 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00041 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00040 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTREFTM EQU   IEDQAVTD+764
@NM00039 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
@NM00038 EQU   AVTSYSER
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00032 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00031 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00030 EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00024 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00023 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTCRDYN EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00022 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00021 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00020 EQU   AVTSAVTP+1
@NM00019 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00018 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00017 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00016 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTOSECB EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00015 EQU   AVTPKF
@NM00014 EQU   AVTPKF
@NM00013 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00007+1
@NM00008 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00006 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00005 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE1 EQU   IEDQAVTD
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBSCHDR EQU   SCBCLSEG
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00004 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00003 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00002 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBFMM  EQU   SCBQTYPE
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00001 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBDESTQ EQU   IEDQSCB+1
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00374 EQU   @RC00349
@RC00353 EQU   @RC00349
@RC00351 EQU   @RC00349
@RC00514 EQU   @RC00513
@RC00520 EQU   @RC00519
@RC00536 EQU   @RC00532
@RC00543 EQU   @RC00541
@RC00568 EQU   @EL00004
@RF00367 EQU   @RC00353
@RC00369 EQU   @RC00353
@RC00550 EQU   @RC00543
@RC00551 EQU   @RC00550
@RC00555 EQU   @RC00551
@ENDDATA EQU   *
         END   IEDIAH,(C'PLS1658',0701,77012)
