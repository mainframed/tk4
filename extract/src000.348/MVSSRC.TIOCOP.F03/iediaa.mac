         TITLE 'IEDIAA - TCAM COMMON OPEN ROUTINE'
IEDIAA   CSECT
*A-000000-999999                                               @X31X8N0
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*****   THIS MODULE IS A RE-WRITE OF IGG01932   *****          @Z30X8NJ
*A116800                                                       @ZA02601
*A118600                                                       @ZA07083
*          TCAM LEVEL 10.0 CHANGES                             @G36XRNP
*A158000                                                       @G36XRNP
*C190000,237700,252400-253100,254500,512000,542000,373000      @G36XRNP
*C385000                                                       @G36XRNP
*D34600-350000,352000,514000                                   @G36XRNP
*A116900                                                       @G36XRNU
***********************************************************************
* MODULE NAME - IEDIAA  (TCAM,INITIALIZATION)                  @G36XRNP
*                                                              @Z30X8NJ
* DESCRIPTIVE NAME - TCAM COMMON OPEN ROUTINE                  @Z30X8NJ
*                                                              @Z30X8NJ
* COPYRIGHT - 'NONE'                                           @Z30X8NJ
*                                                              @Z30X8NJ
* STATUS - CHANGE LEVEL 10.0                                   @G36XRNP
*                                                              @Z30X8NJ
* FUNCTION - THIS ROUTINE OBTAINS THE TCAM CVT EXTENSION.      @Z30X8NJ
*    THIS ROUTINE THEN FIXES DATA AREAS WHICH MUST BE IN CORE IN      *
*    ORDER FOR TCAM TO OPERATE UNDER VS.  THE AVT,             @Z30X8NJ
*    CPB'S, TERMINAL TABLE, TNT, DCT, I/O TRACE AREA, BUFFER   @Z30X8NJ
*    POOL,AND, IF ENVIRON = TSO OR MIXED, THE TSINPUT QCB WILL   X02004
*    BE FIXED BY THIS MODULE.  THE FOLLOWING DATA AREAS WILL BE@Z30X8NJ
*    FIXED FOR EACH LINE BY IGG01936 - DCB, SCB, LCB, AND THE  @Z30X8NJ
*    INVITATION LIST. IF TCAM IS RUNNING UNDER VM, THEN THE    @Z30X8NJ
*    VIRTUAL DIAGNOSE ROUTINE WILL BE LOADED.                  @Z30X8NJ
*                                                                X03039
* ENTRY POINT - THIS ROUTINE IS ENTERED AT IEDIAA VIA A LINK   @Z30X8NJ
*               FROM IEDQOA                                    @Z30X8NJ
*                                                                X03039
* INPUT - REGISTERS 1 AND 14 ARE INPUT AS FOLLOWS:               X03039
*    1 - CONTAINS THE AVT ADDRESS                                X03039
*   14 - CONTAINS THE RETURN ADDRESS FOR IEDQOA                  X03039
*                                                                X03039
* OUTPUT - ALL NEEDED DATA AREAS WILL BE FIXED.                       *
*                                                                     *
* EXTERNAL ROUTINES - AOS LOAD ROUTINE (SVC 8)                        *
*                                                                     *
* EXITS, NORMAL                                                       *
*    THIS ROUTINE EXITS VIA BR 14 TO IEDQOA                      X03039
*                                                                     *
* EXITS, ERROR     N/A                                                *
*                                                                     *
* TABLES/WORKAREAS - DCB                                       @Z30X8NJ
*                    AVT                                       @Z30X8NJ
*                    PRIORITY                                  @Z30X8NJ
*                    CVT                                       @Z30X8NJ
*                    COMMON BUFFER MASTER QCB                  @Z30X8NJ
*                    TERMNAME TABLE                            @Z30X8NJ
*                    TSID                                      @Z30X8NJ
*                                                                     *
*  ATTRIBUTES - THIS ROUTINE IS EXECUTED ENABLED AND RE-ENTRANT  X03039
*                                                                     *
* CHARACTER CODE DEPENDENCY - THE OPERATION OF THIS MODULE DOES NOT   *
*    DEPEND UPON A PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL *
*    CHARACTER SET.                                                   *
*                                                                     *
* NOTES - NONE                                                        *
*                                                                     *
***********************************************************************
        EJECT
*        REGISTER USAGE
R0       EQU   0                        WORK REGISTER          @Z30X8NJ
R1       EQU   1                        WORK REGISTER          @Z30X8NJ
R2       EQU   2                        WORK REGISTER          @Z30X8NJ
R3       EQU   3                        WORK REGISTER          @Z30X8NJ
RCORE    EQU   4                        WORK REGISTER FOR FIXING Y01948
R6       EQU   6                        WORK REGISTER          @Z30X8NJ
R7       EQU   7                        WORK REGISTER          @Z30X8NJ
R8       EQU   8                        WORK REGISTER          @Z30X8NJ
RAVT     EQU   9                        ADDRESS OF TCAM AVT
RTNT     EQU   10                       ADDR OF TERMNAME TABLE @Z30X8NJ
RCMB     EQU   10                       ADDR OF MASTER QCB     @Z30X8NJ
R10      EQU   10                       WORK REGISTER          @Z30X8NJ
R11      EQU   11                       WORK REGISTER          @Z30X8NJ
RBASE    EQU   12                       BASE OF IEDIAA         @Z30X8NJ
RTCX     EQU   13                       ADDR OF TCX            @Z30X8NJ
R13      EQU   13                       WORK REGISTER          @Z30X8NJ
R14      EQU   14                       RETURN ADDRESS           X03039
R15      EQU   15                       WORK REGISTER          @Z30X8NJ
RCVT     EQU   15                       CVT BASE REGISTER      @Z30X8NJ
*
         USING IEDQAVTD,RAVT            AVT DSECT
         USING IEDQTNTD,RTNT            TERMNAME TABLE DSECT   @Z30X8NJ
         USING IEDQTCX,RTCX             TCX DSECT              @Z30X8NJ
         USING CVT,RCVT                 CVT BASE               @Z30X8NJ
         USING IEDNSVTD,R7              THE SECONDARY AVT DSECT  X03039
         SPACE 2
         BALR  RBASE,ZERO               SET UP ADDRESSABILITY
         USING *,RBASE
         SPACE 2
IEDIAA IEDHJN SKIPP                                              X03039
*
         LR    RAVT,R1                  INITIALIZE AVT BASE    @Z30X8NJ
         AH    R1,MINUS3                POINT TO SYSTEM TYPE     X03039
         CLI   AVTEZERO(R1),VS          CORRECT MACRO USED
         BE    GOODASM                  YES,CONTNUUE
         MVI   MESGERR1,MACROERR        MOVE ERROR CHAR          X03039
         MVC   MESGERR2(EIGHT),MACERR   MOVE ERROR WORD          X03039
         B     ERRMSG                   WRITE ERR MSG AND ABEND  X03039
GOODASM  EQU   *
         MODESET MODE=SUP               GET INTO SUPERVISOR    @ZM30327
*                                         STATE                @ZM30327
         MODESET EXTKEY=SUPR            PLACE MODULE IN KEY 0  @ZM30327
*                                                                Y02027
*              GET CORE FOR PAGE FIX PARAMETER LIST              Y02027
*                                                                Y02027
         GETMAIN RC,LV=16,SP=254
         LTR   R15,R15                  GETMAIN SUCCESSFUL     @Z30X8NJ
         BNZ   ERRORMSG                 NO, INDICATE ERROR     @Z30X8NJ
         LR    R11,R1                   GET ADDR OF GOTTEN CORE@Z30X8NJ
         XC    ZERO(PGFXAREA,R11),ZERO(R11)  CLEAR PAGEFIX     @Z30X8NJ
*                                       PARAMETER LIST           Y02027
*                                                                Y02027
*              GET CORE FOR TCAM'S CVT EXTENSION                 Y02027
*                                                                Y02027
         MODESET EXTKEY=TCAM
         GETMAIN RC,LV=TCXSIZE,SP=231   GET TCX AREA             Y02027
         MODESET EXTKEY=SUPR
*                                                                Y02027
         LTR   R15,R15                  GETMAIN SUCCESSFUL     @Z30X8NJ
         BNZ   ERRORMSG                 NO, INDICATE ERROR     @Z30X8NJ
         XC    ZERO(TCXSIZE,R1),ZERO(R1)  CLEAR TCX AREA       @Z30X8NJ
         EJECT
         L     RCVT,CVTPTR              ADDRESS OF CVT         @Z30X8NJ
         ST    R1,CVTAQAVT              STORE ADDRESS OF TCX IN@Z30X8NJ
*                                       CVT                      Y02027
         USING IEDQTCX,RTCX             TCX BASE               @Z30X8NJ
         LR    RTCX,R1                  SAVE TCX ADDRESS       @Z30X8NJ
         LR    R0,R1                    START OF TCX FOR       @Z30X8NJ
*                                         PAGEFIX ROUTINE      @Z30X8NJ
         LA    R1,TCXSIZE               SIZE OF TCX FOR PAGEFIX@Z30X8NJ
*                                         ROUTINE              @Z30X8NJ
         BAL   R6,FIXPAGE               FIX THE TCX            @Z30X8NJ
         L     RCVT,CVTPTR              RESTORE CVT ADDRESS    @Z30X8NJ
         EJECT
*****************************************************************Y02027
*                                                               *Y02027
*        INITIALIZE TCAM'S CVT EXTENSION                        *Y02027
*                                                               *Y02027
*****************************************************************Y02027
         STCM  RAVT,AD,TCXAVT+ONE       ADDRESS OF AVT         @Z30X8NJ
         MVC   TCXPASWD,AVTPASWD        MOVE THE SCRAMBLED       Y02027
*                                       PASSWORD FROM THE AVT    Y02027
         MVC   TCXSCBSZ(ONE),AVTSCBSZ   COPY SIZE OF SCB       @ZA02601
         MVC   TCXABEPL,AVTABEPL        MOVE ABEND PARM TO TCX @G36XRNU
         MVC   TCXOCQ,AVTOCQPT          MOVE ADDR OF OPEN/CLOSE  Y02027
*                                       QCB TO TCX               Y02027
         MVC   TCXCOMPT,AVTCOMPT        MOVE CSCB ADDR TO TCX    Y02027
         LH    R1,AVTEW                 PICKUP THE AIB SIZE    @Z30X8NJ
         LA    R1,AIBPRFSZ(,R1)         ADD 72 BYTE AIB PREFIX @Z30X8NJ
         STH   R1,TCXSZAIB              STORE AIB SIZE IN TCX  @Z30X8NJ
         TM    AVTEW+TWO,TCXAUTH        DO A. P. REQUIRE AUTH.   Y02027
         BNO   UPDATCX                  BRANCH IF NO             Y02027
         OI    TCXFLAG1,TCXAUTH         TURN OF AUTH FLAG        Y02027
         TM    AVTSCOPT,AVTAPDMP        IS APPL DUMP REQUESTED @ZA07083
         BZ    UPDATCX                  BRANCH IF NO           @ZA07083
         OI    TCXFLAG1,TCXAPDMP        TURN ON APPL DUMP FLAG @ZA07083
UPDATCX  EQU   *                                                 Y02027
         MVC   TCXTCB,AVTTCB            ADDRESS OF TCB           Y02027
         USING PSA,R0                   SET UP PSA BASE REG    @Z30X8NJ
         L     R1,PSAAOLD               ADDR OF CURRENT ASCB   @Z30X8NJ
*                                         FOR TCAM'S MEMORY    @Z30X8NJ
         USING ASCB,R1                  ASCB BASE              @Z30X8NJ
         ST    R1,TCXASCB               ADDR OF SPACE CONTROL  @Z30X8NJ
*                                       BLOCK FOR TCAM MEMORY    Y02027
         MVC   TCXASID,ASCBASID         ADDRESS SPACE IDENTIFIER Y02027
*                                       FOR TCAM MEMORY          Y02027
         SPACE 1
*        SAVE ATTENTION TABLE ROUTINE POINTER                    Y02027
         L     R1,CVTIXAVL              GET POINTER TO         @Z30X8NJ
*                                       COMMUNICATIONS AREA FOR  Y02027
*                                       I/O SUPERVISOR           Y02027
         DROP  R1                       DROP ASCB BASE         @Z30X8NJ
         USING IOCOM,R1                 IOCOM ADDRESSABILITY   @Z30X8NJ
         L     R1,IOCATTBL              GET ATTN TABLE POINTER @Z30X8NJ
         DROP  R1                       DROP IOCOM BASE        @Z30X8NJ
         USING ATB,R1                   ATTN TABLE BASE        @Z30X8NJ
         LA    R1,TCAM(R1)              INCREMENT ATTN TABLE   @Z30X8NJ
*                                         ADDRESS              @Z30X8NJ
         MVC   TCXSATTN,ATBRTN          SAVE INITIAL VALUE OF    Y02027
*                                       ATTN ROUTINE POINTER     Y02027
*                                       FOR TCAM                 Y02027
         DROP  R0                       DROP PSA BASE REG      @Z30X8NJ
         DROP  R1                       DROP ATB  BASE         @Z30X8NJ
         EJECT
*****************************************************************
*                                                               *
*        THE FOLLOWING CODE IS EXECUTED AT INTRO TIME TO        *
*        FIX THE AVT, QCBS, CPBS, TNT, TERMINAL TABLE, DCT,     *
*        BUFFER POOL, AND, IF ENVIRON = TSO OR MIXED, THE       *X02004
*        TSINPUT QCB.                                           *X02004
*                                                               *
*****************************************************************
         LR    R0,RAVT                  ADDRESS OF THE AVT     @Z30X8NJ
         LA    R1,AVTLNG                MAXIMUM AVT LENGTH     @Z30X8NJ
         BAL   R6,FIXPAGE               FIX AVT                @Z30X8NJ
*
         USING IEDQTNTD,RTNT            SET UP ADDRESSIBILITY  @Z30X8NJ
         L     RTNT,AVTRNMPT            ADDRESS OF TERMNAME    @Z30X8NJ
*                                         TABLE (TNT)          @Z30X8NJ
         SR    R1,R1                    CLEAR REGISTER 1       @Z30X8NJ
         IC    R1,TNTENLEN              LENGTH OF ENTRY        @Z30X8NJ
         LA    R0,THREE                 LENGTH OF ADDRESS      @Z30X8NJ
         AR    R1,R0                    LENGTH OF TNT ENTRY    @Z30X8NJ
         LR    R7,R1                    SAVE THE ENTRY LENGTH  @Z30X8NJ
         MH    R1,TNTLEN                MULTIPLY LENGTH OF     @Z30X8NJ
*                                         ENTRY BY NUMBER OF   @Z30X8NJ
*                                         ENTRIES              @Z30X8NJ
         LA    R1,TNTOFF(R1)            ADD TO LENGTH THE CODE @Z30X8NJ
*                                         BEFORE THE FIRST     @Z30X8NJ
*                                         ENTRY                @Z30X8NJ
         SR    R6,R6                    CLEAR FOR IC           @Z30X8NJ
         IC    R6,ZERO(R1,RTNT)         GET TOTE ENTRY COUNT   @Z30X8NJ
         L     RCORE,AVTCOREC           LOCATE START OF BUFFERS  X02004
*                                       ETC. TO FIX              X02004
         STC   R6,EIGHT(RCORE)          SAVE NUMBER OF TOTE TNT@Z30X8NJ
*                                         ENTRIES FOR CLOSE    @Z30X8NJ
         STC   R6,TCXTOTE               PUT NUMBER OF TOTE TNT @G36XRNP
*                                       ENTRIES IN TCX         @G36XRNP
         MR    R6,R6                    ENTRIES TO FIX FOR TOTE@Z30X8NJ
         AR    R1,R7                    ADD TOTE TO TNT LENGHT @Z30X8NJ
         LTR   R7,R7                    ANY TOTE ENTRIES         X03039
         BNZ   TOTEYES                  YES, BRANCH              X02004
         LA    R1,ONE(R1)               ADJUST TERM TABLE      @Z30X8NJ
*                                         OFFSET               @Z30X8NJ
TOTEYES  EQU   *                                                 X02004
         LR    R15,RTNT                 COPY TNT START ADDR    @Z30X8NJ
         AR    R1,R0                    ROUND TO WORD BOUNDARY @Z30X8NJ
         SRL   R1,TWO                   SHIFT OUT LOW ORDER    @Z30X8NJ
         SLL   R1,TWO                     TWO BITS             @Z30X8NJ
         LA    RCORE,ZERO(R1,R15)       GET ADDRESS OF TERMNAME@Z30X8NJ
         ICM   RCORE,ALL,ZERO(RCORE)      TABLE                @Z30X8NJ
         LR    R0,R15                   PUT TNT ADDRESS IN PARM@Z30X8NJ
*                                         REGISTER             @Z30X8NJ
         BAL   R6,FIXPAGE               FIX TNT                @Z30X8NJ
         L     R1,ZERO(RCORE)           ADDRESS OF END OF THE  @Z30X8NJ
*                                         TERMINAL TABLE AND   @Z30X8NJ
*                                         QCBS                 @Z30X8NJ
         LR    R10,R1                   SAVE ADDRESS OF SCBS   @Z30X8NJ
         SR    R1,RCORE                 GET LENGTH OF TERMINAL @Z30X8NJ
*                                         TABLE                @Z30X8NJ
         LR    R0,RCORE                 ADDR OF TERMINAL TABLE @Z30X8NJ
         L     RCORE,FOUR(RCORE)        ADDRESS OF THE NUMBER OF
*                                         ENTRIES IN DEVICE
*                                         CHARACTERISTICS TABLE
         BAL   R6,FIXPAGE               FIX TERMINAL TABLE AND @Z30X8NJ
*                                         QUEUE CONTROL BLOCKS @Z30X8NJ
         LH    R1,ZERO(RCORE)           NUMBER OF ENTRIES IN   @Z30X8NJ
*                                         DEVICE CHARACTERIS-  @Z30X8NJ
*                                         TICS TABLE           @Z30X8NJ
         MH    R1,AVTDCTLN              MULTIPY BY SIZE OF A   @G36XRNP
*                                       DCT ENTRY FOR LENGTH   @G36XRNP
*                                       DCT                    @G36XRNP
         LTR   R1,R1                    DEV CHAR TABLE PRESENT?@Z30X8NJ
         BZ    NODEVC                   BRANCH IF NO           @Z30X8NJ
         L     R0,AVTCSTCS              ADDRESS OF DCT         @Z30X8NJ
         BAL   R6,FIXPAGE               FIX DCT                @Z30X8NJ
NODEVC   EQU   *                                                OY03928
         LR    R0,R10                   ADDRESS OF SCBS        @Z30X8NJ
         LH    R1,TWO(RCORE)            SCB LENGTH IN DOUBLE   @Z30X8NJ
*                                         WORDS                @Z30X8NJ
         SLL   R1,THREE                 SCB LENGTH             @Z30X8NJ
         BAL   R6,FIXPAGE               FIX SCB                @Z30X8NJ
         TM    AVTSCOPT,AVTCMBUF        COMMON BUFFER USED       X02004
         BZ    CKTSO                    NO, CHECK FOR TSO        X02004
         L     RCMB,AVTCBQCB            ADDRESS OF MASTER QCB  @Z30X8NJ
         USING IEDCMB,RCMB              CMB BASE               @Z30X8NJ
         L     RCORE,CMBFIRST-ONE       ADDRESS OF FIRST PREFIX  X02004
         LR    R0,RCMB                  ADDR OF QCB, STCB'S AND@Z30X8NJ
*                                         PREFIXES FOR COMMBUF @Z30X8NJ
         L     R1,CMBLAST-ONE           ADDRESS OF LAST PREFIX @Z30X8NJ
         LA    R1,PRELNG(,R1)           ADDR END OF LAST PREFIX@Z30X8NJ
         SR    R1,R0                    LENGTH OF QCB'S, ETC   @Z30X8NJ
         BAL   R6,FIXPAGE               FIX COMMBUF CONTROL    @Z30X8NJ
*                                         BLOCKS               @Z30X8NJ
         LH    R3,CMBDAREA              NUMBER OF DATA AREAS   @Z30X8NJ
         N     R3,AVTCLRHI              FORCE POSITIVE         @Z30X8NJ
         DROP  RCMB                     DROP CMB BASE          @Z30X8NJ
COMLOOP  EQU   *                                                 X02004
         LA    R13,EIGHT                CONSTANT TO LOCATE IDA @Z30X8NJ
         SR    R0,R0                    CLEAR FOR ICM          @Z30X8NJ
         ICM   R0,AD,ONE(RCORE)         ADDRESS OF DATA AREA   @Z30X8NJ
         SR    R0,R13                   ADJUST TO IDA LIST PTR @Z30X8NJ
         LR    R15,R0                   COPY ADDRESS           @Z30X8NJ
         LR    R13,R0                   COPY ADDRESS           @Z30X8NJ
         L     R1,FOUR(R15)             TOTAL LENGTH TO FIX    @Z30X8NJ
         TM    ZERO(R15),CCWIDA         IDA TO BE USED         @Z30X8NJ
         BNO   COMLOOP1                 NO, BRANCH             @Z30X8NJ
         L     R0,ZERO(R15)             ADDRESS OF IDA LIST    @Z30X8NJ
COMLOOP1 EQU   *
         BAL   R6,FIXPAGE               FIX COMMBUF DATA AREA  @Z30X8NJ
         TM    ZERO(R13),CCWIDA         IDA TO BE USED         @Z30X8NJ
         BNO   COMLOOP3                 NO, FIX BUFFER         @Z30X8NJ
         L     R6,ZERO(R13)             ADDRESS OF IDA LIST    @Z30X8NJ
COMLOOP2 EQU   *
         L     R10,ZERO(R6)             GET IDA ENTRY          @Z30X8NJ
         LRA   R10,ZERO(R10)            CONVERT TO REAL ADDR   @Z30X8NJ
         ST    R10,ZERO(R6)             PUT REAL ADDR IN ENTRY @Z30X8NJ
         LA    R6,FOUR(R6)              BUMP TO NEXT ENTRY     @Z30X8NJ
         CR    R13,R6                   END OF LIST            @Z30X8NJ
         BH    COMLOOP2                 NO, CONVERT NEXT ENTRY @Z30X8NJ
COMLOOP3 EQU   *
         LA    RCORE,PRELNG(RCORE)      BUMP TO NEXT PREFIX    @Z30X8NJ
         BCT   R3,COMLOOP               FIX NEXT DATA AREA     @Z30X8NJ
CKTSO    EQU   *
         TM    AVTBIT1,AVTTSON          TSO OR MIXED ENVIRON   @Z30X8NJ
         BZ    FIXBUFS                  NO, BRANCH             @Z30X8NJ
         ICM   R0,ALL,AVTTSOPT          ADDR OF TSINPUT QCB    @Z30X8NJ
         BZ    FIXBUFS                  BRANCH IF IT IS ZERO   @Z30X8NJ
         LA    R1,TSITSW-IEDQTSI+TSWLEN LENGTH TO FIX          @G36XRNP
         BAL   R6,FIXPAGE               FIX TSINPUT QCB        @Z30X8NJ
         L     R1,AVTKA02               ADDRESS OF IEDQKA02    @Z30X8NJ
         LR    R0,R1                    COPY ADDRESS           @Z30X8NJ
         LTR   R0,R0                    IS KA IN THE SYSTEM?   @Z30X8NJ
         BZ    NOKA                     NO, BRANCH             @Z30X8NJ
         SH    R1,AVTHA4                ADJUST TO LENGTH       @Z30X8NJ
         L     R1,ZERO(R1)              LENGTH TO PAGE FIX     @Z30X8NJ
         BAL   R6,FIXPAGE               FIX IEDQKA02           @Z30X8NJ
NOKA     EQU   *
         L     R1,AVTTSOPT              ADDRESS OF TSO SUPPORT @Z30X8NJ
         L     R0,TSISCHED-IEDQTSI(,R1) ADDRESS OF IEDAYZ      @Z30X8NJ
         LTR   R0,R0                    IS 270X TSO SCHEDULER  @Z30X8NJ
*                                         IN THE SYSTER?       @Z30X8NJ
         BZ    FIXBUFS                  NO, BRANCH
         LA    R1,AYZLNG                LENGTH OF IEDAYZ       @Z30X8NJ
         BAL   R6,FIXPAGE               FIX IEDAYZ             @Z30X8NJ
FIXBUFS  EQU   *
         ICM   R0,ALL,AVTSAVTP          GET SECONDARY AVT ADDR @Z30X8NJ
         BZ    NOSAVT                   BRANCH IF ADDR IS ZERO @Z30X8NJ
         LA    R1,SAVTVMSZ              VM ONLY                @Z30X8NJ
         TM    AVTSAVTF,AVTVTMCP        EP ONLY IN SYSTEM?     @G36XRNP
         BZ    EPONLY                   NO, BRANCH             @G36XRNP
         LA    R1,SAVTSIZE              ENTIRE LENGTH          @Z30X8NJ
EPONLY   EQU   *                                               @G36XRNP
         BAL   R6,FIXPAGE               FIX SECONDARY AVT      @Z30X8NJ
NOSAVT   EQU   *
         L     R3,AVTCOREC              ADDRESS OF I/O TRACE,  @Z30X8NJ
*                                         BUFFERS AND CPB'S    @Z30X8NJ
         LM    R0,R1,EIGHT(R3)          ADDR AND LENGTH TO FIX @Z30X8NJ
         XC    EIGHT(EIGHT,R3),EIGHT(R3)  CLEAR BUFFER         @Z30X8NJ
         LR    R3,R0                    SAVE ADDRESS TO FIX    @Z30X8NJ
         LR    RCORE,R1                 SAVE LENGTH TO FIX     @Z30X8NJ
         BAL   R6,FIXPAGE               FIX TRACE, BUFFERS,    @Z30X8NJ
*                                         AND CPB'S            @Z30X8NJ
         EJECT
         L     RCVT,CVTPTR              PICKUP CVT ADDRESS     @Z30X8NJ
         L     RTCX,CVTAQAVT            PICKUP TCX ADDRESS     @Z30X8NJ
         XC    TCXREADY,TCXREADY        CLEAR TCX READY POINTER  Y02027
         STM   R3,RCORE,TCXBUFA         SAVE ADDRESSES AND     @Z30X8NJ
*                                         LENGTH FOR FREE CORE @Z30X8NJ
*                                         FOR PAGE FIX         @Z30X8NJ
*                                         PARAMETER LIST       @Z30X8NJ
*                                                                Y02027
         LR    R1,R11                   MOVE ADDR OF PGFX PARAM@Z30X8NJ
*                                       LIST INTO FREEMAIN PARAM Y02027
         FREEMAIN RC,A=(1),LV=16,SP=254
         SPACE 2
         L     R13,AVTMSGS-ONE          ADDR OF OPTIONAL VCONS @Z30X8NJ
         L     R13,ZERO(R13)            ADDRESS OF IEDQBD      @Z30X8NJ
         ST    R13,AVTBSCAN             STORE IT IN AVT        @Z30X8NJ
         EJECT
* * * * * * ** * * * * * * * * * * * * * * * * * * * * * * * * * Y02027
*                                                                Y02027
*        LOAD VIRTUAL DIAGNOSE ROUTINE IF IN A VIRTUAL MACHINE   Y02027
*                                                                Y02027
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * ** * * Y02027
         SPACE
CHECKDA  EQU   *                                                 Y05331
         L     R7,AVTSAVTP              SECONDARY AVT POINTER    X03039
         TM    SAVTDIAF,SAVTVIRT        IN VIRTUAL ENVIRONMENT ? Y05331
         BZ    DISPLOAD                 NO, BRANCH               X03039
         LA    R0,QDA                   IEDQDA NAME FOR LOAD   @Z30X8NJ
         BAL   R6,LOADER                LOAD IEDQDA FROM       @Z30X8NJ
*                                         LINKLIB              @Z30X8NJ
         STCM  R1,AD,SAVTDIAG+ONE       SAVE ADDRESS           @Z30X8NJ
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*        THIS SECTION OF CODE LOADS THE APPROPRIATE DISPATCHER  *X03039
*        AND SAVES ITS ADDRESS IN THE AVT AND IN THE FORMATTED  *X03039
*        AREA IN SUBPOOL 254. THE ADDRESS OF THE AVT IS SAVED   *X03039
*        IN THE FIRST WORD OF THE DISPATCHER.                   *X03039
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*                                                                X03039
DISPLOAD EQU   *
         LA    R13,DTRDISP              YES, LOAD ITS ADDRESS  @Z30X8NJ
         BAL   R6,LOADRTNE              BRANCH AND LOAD THE    @Z30X8NJ
*                                         DISPATCHER           @Z30X8NJ
         L     RCVT,CVTPTR              PICKUP CVT ADDRESS     @Z30X8NJ
         L     R13,CVTAQAVT             LOAD THE ADDRESS OF THE@Z30X8NJ
*                                         FREE AREA            @Z30X8NJ
         OI    CVTTCMFG,CVTTCRDY        TURN ON TCAM READY FLAG@ZM30334
         LR    R6,R0                    COPY THE ADDRESS OF    @Z30X8NJ
*                                         THE DISPATCHER       @Z30X8NJ
         ST    R6,TCXDISP               STORE THE DISPATCHER'S @Z30X8NJ
*                                         ADDR IN THE FREE AREA@Z30X8NJ
         ST    R6,AVTSAVE2+SIXTY4       STORE THE DISPATCHER'S @Z30X8NJ
         ST    R6,AVTEA                   ADDR IN TWO LOCATIONS@Z30X8NJ
         L     R13,AVTRDYA              START UP MSG SPECIFIED @Z30X8NJ
         NC    ZERO(EIGHT,R13),ZERO(R13) ANY ROUTINES SPECIFIED@Z30X8NJ
         BZ    GETE8                    LOAD IEDQE8            @G36XRNP
         LA    R13,STARTUP              ADDR OF START UP MSG   @Z30X8NJ
*                                         ROUTINE ID           @Z30X8NJ
         BAL   R6,LOADRTNE              LOAD THE ROUTINE       @Z30X8NJ
         ST    R0,AVTSUPPT              SAVE ADDR IN AVT       @Z30X8NJ
         MVI   AVTDSIOB+4,HIGHPRI       SET HIGH READY Q PRI     X03039
         MVC   AVTDSIOB+1(3),AVTSUPPT+1 SET ST UP MSG QCB ADDR   X03039
         MVC   AVTDSIOB+5(3),AVTREADY+1 PLACE AS TOP ON RDY Q    X03039
         LA    R6,AVTDSIOB              GET ADDR OF DISK I/O   @Z30X8NJ
*                                         QCB                  @Z30X8NJ
         ST    R6,AVTREADY              SAVE THE ADDRESS       @Z30X8NJ
GETE8    EQU   *                                               @G36XRNP
         LA    R0,QE8                   LOAD ADDR OF MOD NAME  @G36XRNP
         BAL   R6,LOADER                LOAD IEDQE8            @G36XRNP
         L     RCVT,CVTPTR              POINT TO CVT           @ZM05881
         L     R13,CVTAQAVT             POINT TO TCX           @ZM05881
         STCM  R0,AD,TCXQE8+1           STORE ADDRESS OF QE8   @ZM46590
MODE6    EQU   *                                               @ZM30327
         MODESET EXTKEY=TCAM            SET MODULE'S KEY TO 6  @ZM30327
         MODESET MODE=PROB              RETURN TO PROBLEM      @ZM30327
*                                         PROGRAM STATE        @ZM30327
         BR    R14                      RETURN TO IEDQOA         X03039
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*                                                               *X03039
*        THIS SECTION OF CODE ISSUES THE LOAD MACRO TO LOAD     *X03039
*        THE DISPATCHER.                                        *X03039
*                                                               *X03039
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*                                                                X03039
LOADRTNE EQU   *                                                 X03039
         L     RCVT,CVTPTR              PICKUP CVT ADDRESS     @Z30X8NJ
         LR    R0,R13                   LOAD ID ADDR INTO REG 0@Z30X8NJ
         L     R1,CVTSVDCB              ADDR OF DCB FOR SVCLIB @Z30X8NJ
*                                                                X03039
         LOAD  EPLOC=(0),DCB=(1)        LOAD MODULE              X03039
*                                                                X03039
         BR    R6                       RETURN                 @Z30X8NJ
         SPACE 3                                                 X02004
LOADER   EQU   *                        LOAD MODULES FROM LINKLIBX02004
         L     RCVT,CVTPTR              GET ADDRESS OF CVT     @Z30X8NJ
         L     R10,CVTLINK              ADDR OF LINKLIB DCB    @Z30X8NJ
         LA    R1,ZERO(R10)             CLEAR HI-ORDER BYTE AND@Z30X8NJ
*                                       SET UP FOR LOAD          Y02027
         LOAD  EPLOC=(0),DCB=(1)        LOAD MODULE FORM LINKLIB X02004
         LR    R1,R0                    COPY MODULE ADDRESS    @Z30X8NJ
         BR    R6                       RETURN TO MAINLINE CODE@Z30X8NJ
         EJECT
*****************************************************************
*                                                               *
*        THIS ROUTINE FIXES ALL DATA AREA THAT MUST BE IN REAL  *
*        CORE.                                                  *
*                                                               *
*****************************************************************
FIXPAGE  EQU   *
         LR    R15,R0                   COPY STARTING ADDRESS  @Z30X8NJ
         LA    R15,ZERO(R1,R15)         GET ENDING ADDRESS OF  @Z30X8NJ
*                                         PARM LIST            @Z30X8NJ
         LR    R1,R0                    GET STARTING ADDRESS   @Z30X8NJ
*                                         OF PARM LIST         @Z30X8NJ
         XC    ZERO(FOUR,R11),ZERO(R11)  CLEAR ECB             @Z30X8NJ
         LR    R0,R11                   MOVE ECB TO REG 0      @Z30X8NJ
*
         PGFIX R,A=(1),EA=(15),ECB=(0)  ISSUE PAGE FIX SVC     @Z30X8NJ
*
*
         WAIT  ECB=(R11)                WAIT FOR PAGE FIX      @Z30X8NJ
*
         TM    THREE(R11),FOUR          FIX GOOD?              @Z30X8NJ
         BCR   EIGHT,R6                 YES, RETURN TO CALLER  @Z30X8NJ
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*                                                               *X03039
*        THIS CODE BUILDS AND WRITES THE ERROR MESSAGES         *X03039
*                                                               *X03039
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*                                                                X03039
ERRORMSG EQU   *                                                 X03039
         MVI   MESGERR1,G               MOVE ERROR CHAR INTO MSG X03039
         MVC   MESGERR2(EIGHT),NOSQS    MOVE ERROR WORD INTO MSG X03039
ERRMSG   EQU   *                                                 X03039
         LA    R1,MESSAGE               LOAD ADDR OF MESSAGE   @Z30X8NJ
*                                                                X03039
         WTO   MF=(E,(1))               ISSUE WTO SVC          @Z30X8NJ
*                                                                X03039
ABENDCD  EQU *                                                   X03039
         L     R0,AVTTCB                LOAD TCB ADDR          @Z30X8NJ
         L     R1,COMPCODE              LOAD CODES INTO REG 1  @Z30X8NJ
         ABEND (1)                      ISSUE ABEND SVC        @Z30X8NJ
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*                                                               *X03039
*        THIS IS THE FORMAT OF THE OPEN ERROR MESSAGE           *X03039
*                                                               *X03039
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *X03039
*                                                                X03039
         CNOP  0,4                                               X03039
MESSAGE  DC    AL2(MESGEND-*)           LENGTH OF MESSAGE        X03039
         DC    X'8000'                  MCSFLAGS FIELD           X03039
         DC    C'IED008I TCAM OPEN ERROR ' MESSAGE TEXT          X03039
MESGERR0 DC    C'040 - '                ABEND CODE               X03039
MESGERR1 DC    C'0'                     ERROR CHARACTER          X03039
         DC    C' '                     TRAILING BLANK           X03039
MESGERR2 DC    CL8' '                   ERROR WORD               X03039
MESGEND  EQU   *                                                 X03039
         DC    X'1000'                  DESCRIPTOR CODES         X03039
         DC    X'4020'                  ROUTING CODES            X03039
         EJECT
QDA      DC    CL8'IEDQDA'              MODULE NAME FOR LOAD     Y05331
QE8      DC    CL8'IEDQE8'              BINARY SEARCH RTN      @G36XRNP
MACERR   DC    CL8'OS MCP'              ERROR WORD FOR MSG       X03039
NOSQS    DC    CL8'DSPAREA'             ERROR WORD FOR MSG     @Z30X8NJ
DTRDISP  DC    C'IGG019RO'              DTRACE DISPATCHER ID     X03039
STARTUP  DC    C'IGG019R6'                                       X03039
         DS    0F
MINUS3   DC    H'-3'                    OFFSET TO SYSTYPE FROM AVT
VS       EQU   C'V'                     SYSTEM TYPE
MACROERR EQU   C'I'                     DOWNLEVEL MACRO ERROR    X03039
         DS    0F                       FORCE ALIGNMENT        @Z30X8NJ
COMPCODE DC    XL1'80'                  DUMP/STEP CODE           X03039
         DC    XL3'040000'              COMPLETION CODE          X03039
HIGHPRI  EQU   X'FC'                    HIGH READY Q PRIOTITY    X03039
CVTADDR  EQU   16                       LOCATION OF CVT ADDR     X03039
CVTLNK   EQU   8                        OFFSET TO LINKLIB DCB    X03039
AVTLNG   EQU   1280                     MAXIMUM AVT LENGTH       Y01948
ZERO     EQU   0                        LENGTH
ONE      EQU   1                        LENGTH
TWO      EQU   2                        LENGTH
THREE    EQU   3                        LENGTH
FOUR     EQU   4                        LENGTH
FIVE     EQU   5                        LENGTH
SIX      EQU   6                        LENGTH
EIGHT    EQU   8                        LENGTH
NINE     EQU   9                        LENGTH
TEN      EQU   10                       LENGTH
TWELVE   EQU   12                       LENGTH                   X03039
FOURTEN  EQU   14                       LENGTH
ALL      EQU   15                       MASK TO ICM ALL 4 BYTES  Y01948
FIXPARM  EQU   16                       OFFSET TO PGFIX PARMS    Y01948
SIXTEEN  EQU   16                       DISPLACEMENT           @Z30X8NJ
SIXTY4   EQU   64                       DISPLACEMENT           @Z30X8NJ
WAIT     EQU   1                        WAIT SVC NUMBER          Y01948
FIXPG    EQU   X'52'                    CODE INDICATING PGFIX    Y01948
PGFIX    EQU   113                      PGFIX SVC NUMBER         Y01948
AYZLNG   EQU   X'AF4'                   LENGTH OF IEDAYZ       @G36XRNU
TCAM23   EQU   23                       GETMAIN FAILURE CODE     Y01948
SP234    EQU   234                      SUBPOOL 234 - FIXED SQS  Y01948
CCWIDA   EQU   4                        INDIRECT ADDRESSING FLAG X02004
AD       EQU   7                        ICM/STCM MASK            X02004
PRELNG   EQU   12                       LENGTH OF COMMBUF PREFIX X02004
G        EQU   C'G'                     ERROR CHAR FOR MESSAGE @Z30X8NJ
PGFXAREA EQU   16                       SIZE OF PAGE FIX PARAM   Y02027
*                                       LIST                     Y02027
AIBPRFSZ EQU   72                       AIB PREFIX SIZE          Y02027
ATTNTAB  EQU   20                       ATTENTION TABLE INDEX    Y02027
TCAM     EQU   ATTNTAB*TWO              OFFSET OF TCAM'S ENTRY   Y02027
*                                       IN ATTENTION TABLE       Y02027
         SPACE 2
         EJECT
         DCBD  DSORG=TX
         EJECT
         TAVTD
         TPRIOR
         EJECT
         EJECT
         IEDCMB                                                  X02004
         EJECT
         TTNTD
         EJECT
         TTSID
         EJECT
         TTSWD
         EJECT
         CVT   DSECT=YES                                         Y02027
         EJECT
         TTCXD                                                   Y02027
         EJECT
         IHAPSA
         EJECT
FORCORE  DSECT                                                   Y02027
         IECDSECT                                                Y02027
         SPACE 3
         EJECT
         SPACE 3
         EJECT
         IHAASCB                                                 Y02027
         EJECT
         IECDIOCM ,                                              Y02027
         EJECT
         IECDATB ,                                               Y02027
         END
