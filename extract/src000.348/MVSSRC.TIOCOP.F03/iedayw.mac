         TITLE 'IEDAYW - OUTPUT EDIT ROUTINE FOR 270X TERMINALS'
IEDAYW   CSECT
         SPACE 3
* CHANGE ACTIVITY AS FOLLOWS:
******************* MICROFICHE FLAGS ************************ SUPT CODE
*D374000-374500,381000-381500                                   SA67757
*A376000,382500                                                 SA67757
*C726500                                                       @SA69640
* C369500                                                      @YA08091
* D109000,838500-839000,841500,845500                          @YA08091
*C179500                                                       @YA08763
*A087000,309000,487500                                         @SA74058
*A179700                                                       @YA09113
*C145500                                                       @SA74875
*A156000                                                       @SA74875
*D369000-370000,377500-383000                                  @YA10216
*A826500                                                       @SA75159
*A191500                                                       @YA11153
*A179700                                                       @OZ07091
*D099000-100500,101500                                         @Y17XAYP
*A692500                                                       @G36XRYP
*C117500,122500,125000,140500,144000,166000,180000,204000      @G36XRYP
*C209000,217500,221000,259000,313000,314000,340500,341500      @G36XRYP
*C395000,396000,454500,455500,459000,520500,521500,533000      @G36XRYP
*C534000,554000,570500,571500,572500,575000,585000,594500      @G36XRYP
*C601500,607000,609000,611500,612500,630500,633500,639500      @G36XRYP
*C642000,658000,664500,665500,673500,728000,729000,733500      @G36XRYP
*C768000                                                       @G36XRYP
*D096000-098000,693000,838000                                  @G36XRYP
*A470500,471000                                                @OS78322
*C395500,418000                                                @OS78322
*D409500-412000                                                @OS78322
***************** DEVELOPEMENT ****************************************
         SPACE 3
***********************************************************************
*                                                                     *
*  MODULE NAME = IEDAYW       (TCAM,TSO)                       @G36XRYP
*                                                                     *
*  DESCRIPTIVE NAME = OUTPUT EDIT ROUTINE FOR TSO                     *
*                                                                     *
* COPYRIGHT = 'NONE'                                                  *
*                                                                     *
* STATUS = VERSION 10.0                                        @G36XRYP
*                                                                     *
*FUNCTION -- THE TIOC EDIT ROUTINE INSPECTS AND EDITS OUTPUT MESSAGES *
*   CONTAINED IN TSO BUFFERS AND MSGGEN MESSAGES IN THE SCB FOR TERM- *
*   INALS CONNTECTED TO 270X CONTROL UNITS, EXCEPT FOR 3270'S. EDITED *
*   TSO MESSAGES ARE MOVED TO TCAM BUFFERS TO BE SENT.  MSGGEN MES-   *
*   SAGES REMAIN IN THE SCB.  THE EDIT SCAN IS BASED ON THE LINE SIZE,*
*   THE RECEIVING BUFFER SIZE, AND THE PRESENCE OF NEW LINE CHAR-     *
*   ACTERS IN THE MESSAGE.  THE LINE SIZE FOR TSO MESSAGES IS SPECI-  *
*   FIED BY THE USER IN THE TERMINAL STATUS BLOCK.  FOR MSGGEN MES-   *
*   SAGES, IT IS 120 BYTES.  IF THE MAXIMUM LINE SIZE IS REACHED,     *
*   A NEW LINE CHARACTER AND THE APPROPRIATE NUMBER OF IDLE CHAR-     *
*   ACTERS ARE INSERTED INTO THE BUFFER TO AVOID OVERPRINTING THE     *
*   LINE AT THE TERMINAL.  THE TCAM BUFFER SIZE MAY NOT BE EXCEEDED.  *
*   IF THE ENTIRE TCAM BUFFER IS FILLED BEFORE REACHING THE LINE SIZE *
*   OR A NEW LINE CHARACTER, THE EDIT IS TERMINATED, AND ONLY A PAR-  *
*   TIAL LINE IS SENT.  THE PRESENCE OF A NEW LINE CHARACTER IN THE   *
*   BUFFER SIGNIFIES THE END OF A COMPLETE LINE.  AT THE END OF A     *
*   LINE OR A MESSAGE, THIS ROUTINE FIRST CHECKS TO SEE IF SIMULATED  *
*   ATTENTION BY LINE COUNT WAS REQUESTED.  IF IT WAS, THIS ROUTINE   *
*   LINKS TO THE SIMULATED ATTENTION ROUTINE (IEDAYS) TO UPDATE THE   *
*   QCB SIMULATED ATTENTION LINE COUNT, AND TO REQUEST A SIMULATED    *
*   ATTENTION READ IF THE THRESHOLD IS REACHED.  NEXT, THIS ROUTINE   *
*   CHECKS TO SEE IF THE MESSAGE IS A CONTROL OR "AS IS" MESSAGE.     *
*   THESE MESSAGES CANNOT CONTAIN STANDARD LINE AND CARRIAGE CONTROL  *
*   CHARACTERS.  FOR THESE MESSAGES, THIS ROUTINE REPLACES ANY IN-    *
*   VALID CHARACTERS (EOT, NEW LINE, TAB, ETC.) WITH A COLON TO AVOID *
*   PROGRAM-CAUSED I/O ERRORS.  IN ADDITION TO INSERTING NEW LINE AND *
*   IDLE CHARACTERS, AND REPLACING INVALID CHARACTERS, THIS ROUTINE   *
*   INSERTS ANY OTHER LINE CONTROL CHARACTERS (E.G. STX, ETX) AND     *
*   CARRIAGE CONTROL CHARACTERS (E.G. LINE FEED CHARACTER) REQUIRED   *
*   TO EDIT THE MESSAGE FOR OUTPUT TO A PARTICULAR TERMINAL.  WHEN    *
*   THE TCAM BUFFER IS READY TO BE SENT, THIS ROUTINE ISSUES THE QTIP *
*   SVC (SVC 101) TO UPDATE THE OFFSET AND LENGTH FIELDS IN THE TIME  *
*   SHARING BUFFER PREFIX.  IF THE TCAM BUFFER ACCOMMODATED THE EN-   *
*   TIRE TSO BUFFER, THE PREFIX IS MARKED EDITED IN FULL.  OTHERWISE, *
*   THE OFFSET INDICATES THE POINT IN THE TSO BUFFER TO START EDITING *
*   ON THE NEXT ENTRY TO THIS ROUTINE, AND THE LENGTH INDICATES THE   *
*   LENGTH OF THE DATA YET TO BE EDITED.  ON RETURN TO THE CALLING    *
*   ROUTINE, THIS ROUTINE SETS A RETURN CODE INDICATING THE STATUS OF *
*   THE EDIT REQUEST.                                                 *
*                                                                     *
*ENTRY POINT -- IEDAYW TO EDIT A 270X CONNTECTED OUTPUT MESSAGE       *
*                                                                     *
*    CALLING SEQUENCE                                                 *
*          L    R15,AVTTSOPT                                          *
*          L    R15,TSI270X-IEDQTSI(,R15)                             *
*          BR   R15                                                   *
*                                                                     *
*INPUT -- IEDAYW IS CALLED BY THE TIOC OUTPUT EDIT CONTROL ROUTINE TO *
*   EDIT TSO MESSAGES FOR TERMINALS CONNTECTED TO TSO THROUGH A 270X  *
*   UNIT, WITH THE FOLLOWING REGISTERS SET:                           *
*   R4  HAS THE LCB ADDRESS                                           *
*   R6  HAS THE TIME SHARING BUFFER ADDRESS ( IN THE TSO REGION) OR   *
*       THE MSGGEN DATA ADDRESS                                       *
*   R7  HAS THE TCAM BUFFER ADDRESS OR THE ADDRESS OF THE RECEIVING   *
*       AREA IN THE SCB                                               *
*   R11 HAS THE ADDRESS OF AVTSAVE4 (GMAIN)                           *
*   R13  HAS THE ADDRESS OF AVTSAVE2                                  *
*   R15 HAS THE ENTRY POINT ADDRESS OF IEDAYW                         *
*                                                                     *
*   IEDAYW IS CALLED BY THE TIOC OUTPUT EDIT CONTROL ROUTINE (IEDAYE) *
*   TO EDIT MSGGEN MESSAGES, WITH THE FOLLOWING REGISTERS SET.        *
*   R0 HAS THE LENGTH OF THE DATA AREA IN THE SCB                     *
*   R1 HAS THE ADDRESS OF THE RECEIVING AREA IN THE SCB               *
*   R2 HAS THE MESSAGE ADDRESS                                        *
*   R3 HAS THE SCB ADDRESS                                            *
*   R4 HAS THE LCB ADDRESS                                            *
*   R11 HAS THE DISPATCHER ADDRESS                                    *
*   R13 HAS THE ADDRESS OF AVTSAVE2                                   *
*   R14 HAS THE RETURN ADDRESS IN IEDAYM                              *
*   R15 HAS THE ENTRY POINT ADDRESS                                   *
*                                                                     *
*OUTPUT -- ON RETURN TO THE CALLING ROUTINE AFTER FINISHING THE EDIT  *
*   THE MESSAGE IS IN EDITED FORM, THE QCB CARRAIGE POSITION COUNT IS *
*   UPDATED, AND THE FOLLOWING REGISTERS ARE SET:                     *
*   R1  HAS THE LENGTH OF THE DATA MOVED                              *
*   R5  HAS THE DESTINATION QCB ADDRESS                               *
*   R14 HAS THE RETURN ADDRESS                                        *
*   R15 HAS ONE OF THE FOLLOWING RETURN CODES:                        *
*        X'00' = SUCCESSFUL COMPLETION                                *
*        X'0C' = PARTIAL LINE MOVED                                   *
*        X'10' = END OF LINE REACHED                                  *
*                                                                     *
*EXTERNAL ROUTINES -- IEDQTNT - TO GET THE TERMINAL ENTRY FROM THE    *
*   LCB TERMINAL INDEX OR LINE ENTRY, OR FROM THE INVITATION LIST FOR *
*   THE LINE.                                                         *
*   IEDAYS - TO HANDLE REQUESTS FOR SIMULATED ATTENTION BY LINE COUNT *
*   QTIP SVC ROUTINE - TO UPDATE THE TIME SHARING BUFFER PREFIX       *
*                                                                     *
*EXITS-NORMAL -- TO THE TSOUTPUT ROUTINE                              *
*   TO THE TSO MESSAGE GENERATION ROUTINE                             *
*                                                                     *
*EXITS-ERROR -- NONE                                                  *
*                                                                     *
*TABLES/WORKAREAS -- CVT, TSCVT, AVT, TSB, QCB, TSID, LCB, SCB, DCB,  *
*   TERMINAL ENTRY, TCAM BUFFER PREFIX, TSO BUFFER PREFIX.            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET. *
*      THE MESSAGE PROVIDED FROM THE TSO MESSAGE GENERATION ROUTINE   *
*   MAY BE A MSGGEN MESSAGE, A SIMULATED ATTENTION MESSAGE, AN AUTO-  *
*   MATIC LINE NUMBERING MESSAGE, OR A PROMPT MESSAGE.  THIS ROUTINE  *
*   PROCESSES THEM IDENTICALLY.                                       *
*                                                                     *
***********************************************************************
         SPACE
* * * * *     R E G I S T E R  E Q U A T E S  * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
R0       EQU   0                        REGISTER 0
RPARM    EQU   1                        REGISTER 1
RPARM2   EQU   2                        REGISTER 2
RNDX     EQU   1                        REGISTER 1
RTIOC    EQU   2                        TSO BUFFER
RBASEDIT EQU   3                        BASE REG FOR EDIT SUBROUTINE
RLCB     EQU   4                        LCB
RQCB     EQU   5                        QCB
RTSBUF   EQU   6                        TSO BUFFER ADDRESS
RTCBUF   EQU   7                        TCAM BUFFER ADDRESS
RTSB     EQU   8                        TSB
RTEMP    EQU   8                        RTEMP/RTEMPA MUST BE EVN/ODD PR
RTEMPA   EQU   9                        WORK REGISTER
RDCB     EQU   10                       DCB
RMAIN    EQU   11                       SAVE AREA
RBASE    EQU   12                       BASE REGISTER
RAVT     EQU   13                       AVT SAVE AREA
RLINK    EQU   14                       LINK REGISTER
RRTN     EQU   15                       RETURN REGISTER
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
* * * * * * * * *  M I S C E L L A N E O U S  E Q U A T E S  * * * *
ZERO     EQU   0                        ZERO
ONE      EQU   1                        ONE
TWO      EQU   2                        TWO
THREE    EQU   3                        THREE
FOUR     EQU   4                        FOUR
FIVE     EQU   5                        FIVE
EIGHT    EQU   8                        EIGHT
TWELVE   EQU   12                       TWELVE
THIRTEEN EQU   13                       THIRTEEN
FOURTEEN EQU   14                       FOURTEEN
FIFTEEN  EQU   15                       FIFTEEN
SIXTEEN  EQU   16                       SIXTEEN
THIRTY2  EQU   32                       THIRTY TWO
E3       EQU   3                        THREE
E11      EQU   11                       ELEVEN
E12      EQU   12                       TWELVE
E16      EQU   16                       SIXTEEN
E20      EQU   20                       TWENTY
E24      EQU   24                       TWENTY FOUR
E28      EQU   28                       TWENTY EIGHT
E32      EQU   32                       THIRTY TWO
E40      EQU   40                       FORTY
E44      EQU   X'44'                    DISP TO BUFFER ADDR.
E52      EQU   52                       FIFTY TWO
E80      EQU   80                       2260 REMOTE DEFAULT LINE SIZE
E120     EQU   120                      1050/2741 DEFAULT LINE SIZE
RC0      EQU   0                        RETURN CODE 0
RC12     EQU   12                       RETURN CODE X'C'
RC16     EQU   16                       RETURN CODE X'10'
RC44     EQU   44                       RET.CODE, NO DATA TSBUF@SA74058
X2741    EQU   0                        SETTINGS FOR 'DEVICE'
X2260R   EQU   8                        DITTO
X2260L   EQU   12                       DITTO
XTWX     EQU   16                       DITTO
CR       EQU   X'0D'                    CARR RTN
LF       EQU   X'25'                    TTY LINE FEED
NLCHAR   EQU   X'15'                    NEW LINE
IDLECHAR EQU   X'17'                    IDLE
BYP      EQU   X'24'                    BYPASS CHAR
RES      EQU   X'14'                    RESTORE CHAR
HTAB     EQU   X'05'                    HORIZ TAB
EOT      EQU   X'37'                    CIRCLE C
EOB      EQU   X'26'                    CIRCLE B
BSP      EQU   X'16'                    BACKSPACE
PRE      EQU   X'27'                    PREFIX
UC       EQU   X'36'                    UPPER CASE
LC       EQU   X'06'                    DOWN SHIFT
STX      EQU   X'02'                    STX
ETX      EQU   X'03'                    ETX
QCBDEND  EQU   8                        QCB FLAG
NOT      EQU   X'FF'                    ALL BITS
IDLES    EQU   X'F0'                    IDLES INDICATOR
FIVEIDLS EQU   X'F5'                    FIVE IDLES
MAXIDLES EQU   X'FC'                    MAXIMUM IDLES
NEEDBOTH EQU   X'E2'                    NEED BOTH LF AND CR
NEEDLF   EQU   X'C2'                    NEED LINE FEED
COLON    EQU   C':'                     COLON
         SPACE
* * * * * *  A D D R E S S A B I L I T Y  * * * * * * * *
         USING IEDAYW,RBASE             ESTABLISH ADDRESSABILITY
         USING AVTSAVE2,RAVT            ESTABLISH SAVE AREA
         USING IEDQQCB,RQCB             ESTABLISH QCB ADDRESS
         USING EDIT,RBASEDIT             ESTABLISH ADDRESSABILITY
         USING IEDQLCB,RLCB             ESTABLISH LCB ADDRESS
         USING TIOCBUF,RTIOC            TSO BUFFER DSECT
         USING TSBUFR,RMAIN             SAVE AREA ADDRESS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         LR    RBASE,RRTN               SET BASE REGISTER
         L     RBASEDIT,VEDIT           PICK UP VCON
IEDAYW   IEDHJN AYW00020                MODIFICATION DATE
         TM    WFLGS,TSOASIS+CONTROLM   IS THIS ASIS CONTROL
         BNO   AYE0000                  NO, CONTINUE
         NI    WFLGS,NOT-CONTROLM       TURN OFF CONTROL MODE
AYE0000  EQU   *
         SPACE
         LTR   RTSBUF,RTSBUF            SEE IF ENTRY TO SEND IDLES
         BNZ   CHKTYP                   NO.
         TM    WFLGS,TSOMSG             TPUT SEND IDLES HERE
         BZ    CHKTYP                   BRANCH NO
         TM    AVTPARM3+THREE,DCTNOIDL  IS THIS 2260 REMOTE    @G36XRYP
         BZ    AYW00030                 NO, BRANCH
         BAL   RLINK,INSTX              IF SO ADD STX
AYW00030 EQU   *
         TM    QCBRETCT,QCBNL           IF BOTH BITS OFF AND
         BNZ   AYW00040                 CARR COUTN = LINESIZE
         LA    RLINK,AYW00040           IS INDIC OF ENTRY TO
         CLC   QCBCARCT,LINESV+ONE      RETURN CARRIAGE AFTER
         BE    INSNL                    TCLEARQ (OUTPUT)
AYW00040 EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  CHECK FOR 2260 REMOTE  @G36XRYP
         BZ    AYW00050                 BRANCH NOT ZERO
         BAL   RLINK,INSETX             ADD ETX FOR REMOTE
         B     AYW00070                 SUCCESSFUL COMPLETION
AYW00050 EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IDLES FOR TWX ?        @G36XRYP
         BZ    AYW00060                 NO, BRANCH
         LA    RTEMPA,ONE               AVOID RETURN COUNT OF 0
         BAL   RLINK,NOROUND            IMBEDDED IN SNDIDLES
         B     AYW00070                 SUCCESSFUL COMPLETION
AYW00060 EQU   *
         BAL   RLINK,SNDIDLES           SEND IDLES,CLR OR UPDATE CARCT
         SPACE
AYW00070 EQU   *
         LA    RRTN,RC0                 SUCCESS RETURN CODE
         B     EXIT                     EXIT
         SPACE
AYW00080 EQU   *
         LA    RRTN,RC16                END OF LINE RETURN CODE
         B     EXIT                     EXIT
         SPACE
AYW00090 EQU   *
         LA    RRTN,RC12                INCOMPLETE MOVE RETURN CODE
         SPACE
EXIT     EQU   *
         MVC   QCBCARCT,CARCT+ONE       UPDATE CARRIAGE POSITION COUNT
         MVC   E20(E12,RAVT),TOR        SAVE CONTENTS OF RTN REGS
         ST    RRTN,E16(RAVT)           SAVE RETURN CODE FOR 15
         RETURN (14,12)
         SPACE 2
CHKTYP   EQU   *
         TM    WFLGS,TSOMSG             TSO OR MSGGEN
         BO    SENDTSO                  TSO
         NI    QCBRETCT,NOT-QCBDEND-QCBIEND  SPECIAL OUTPUT FLAGS OFF
         IC    RLINK,MSGLEN+ONE         SIZE IN SCB
         STC   RLINK,WBUFSZ+ONE        IS TCAM BFR SIZE
         TM    AVTPARM3+THREE,DCTNOIDL  IS THIS 2260 REMOTE    @G36XRYP
         BZ    CHK00                    BRANCH NO.
         BAL   RLINK,INSTX              YES. BEGIN WITH STX
CHK00    EQU   *
         LTR   RTSBUF,RTSBUF            ENTRY FOR LEFT ADJUSTMENT?
         BNZ   DATA                     BRANCH NO
*  ENTRY IS TO RETURN CARRIAGE. SEE IF IT NEEDS TO BE RETURNED.
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX LINE     @G36XRYP
         BZ    CHK02                    NO. CONTINUE
         TM    QCBRETCT,QCBCR+QCBLF     CHECK FOR BOTH SEND
         BNZ   CHKWHICH                 YES, DETERMINE WHICH   @SA74875
*                                       WAS SENT               @SA74875
         TM    WFLGS,TSOMSG             TSO OR MSGGEN          @SA74875
         BO    CHK01                    TSO                    @SA74875
         B     CHK07                    GO CHECK CARRIAGE COUNT@SA74875
         SPACE 2                                               @SA74875
CHKWHICH EQU   *                                               @SA74875
         TM    QCBRETCT,QCBCR           CHECK FOR CR SENT
         BO    CHKLF                    CR SENT. CHECK LF
         MVI   ZERO(RTCBUF),CR          INSERT CR
         B     CHKLF1                   USE COMMON CODE
         SPACE
CHKLF    EQU   *
         TM    QCBRETCT,QCBLF           WAS LF SENT
         BO    RESET1                   YES. NOTHING TO DO
         MVI   ZERO(RTCBUF),LF          INSERT LF
CHKLF1   EQU   *
         BAL   RLINK,MVD1               UPDATE COUNT AND POINTER
         MVI   CARCT+ONE,ZERO           CLEAR CARR POSITION
         NI    QCBRETCT,NOT-QCBNL       TURN OFF CR/LF FLAGS
         B     RESET1                   TO RETURN
CHK02    EQU   *
         CLI   CARCT+ONE,NOT            REQ FOR LINE RETURN
         BE    CHK01                    FROM 2260 REMOTE
         CLI   CARCT+ONE,IDLES          0 IDLES
         BE    RESET1                   SEND NOTHING
         TM    CARCT+ONE,IDLES          INDICATE IDLES
         BO    ANNL02                   SEND IDLES ONLY
CHK07    EQU   *                                               @SA74875
         CLI   CARCT+ONE,ZERO           DOES IT NEED LEFT ADJUSTMENT
         BE    CHK03                    BRANCH NO
         BAL   RLINK,INSNL              ADD NL
         B     CHK05                    THEN COUNT IT
CHK03    EQU   *
         MVI   CARCT+ONE,ZERO           CLEAR CARR
         MVI   TOR+THREE,ZERO           RETURN COUNT OF ZERO
         B     RESET1                   BRANCH
CHK01    EQU   *
         BAL   RLINK,INSNL              RETURN LINE
         TM    AVTPARM,E3               ANY 2260?
         BZ    CHK05                    BRANCH NO
         MVI   CARCT+ONE,ZERO           LINE WAS COUNTED IN IEDAYC
         B     CHK06                    CONTINUE
CHK05    EQU   *
         CLI   CARCT+ONE,X'FF'          REQ. TO RETN CARR/CURSOR?
         BE    CHK06                    BR YES TO SKIP COUNT LINE
         BAL   RLINK,SMCALL             COUNT ONE LINE
CHK06    EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  2260 REMOTE?           @G36XRYP
         BZ    ANNL02                   BRANCH NO
         BAL   RLINK,INSETX             ADD ETX FOR REMOTE
         NI    QCBRETCT,QCBNL           CLEAR FLAGS
         MVI   CARCT+ONE,ZERO           CLEAR CARR COUNT
         B     RESET2                   BRANCH
***********************************************************************
DATA     EQU   *
         MVC   LINE,LINESV              SET LINE SIZE
         IC    RLINK,0(RTSBUF)          FIRST BYTE IS COUNT
         STC   RLINK,BLNTH+ONE          BUF LENGTH
         STC   RLINK,MSGLEN+ONE         = MSG LENGTH
         LA    RTSBUF,ONE(,RTSBUF)
         TM    WFLGS,NOLEFT             WANT CARRIAGE RETURNED
         BO    PUTDATA                  BRANCH NO TO MOVE NOW
         L     RLINK,LCBSCBA-ONE        GET SCB ADDRESS
         USING IEDQSCB,RLINK            ADDRESSABILITY
         TM    SCBERR2,SCBALN          ENTRY FOR AUTO LINE NO?
         DROP  RLINK
         BZ    NOALN                    BRANCH NO
         CLI   MSGLEN+ONE,EIGHT         IS THIS AUTO DATA OR MSG
         BH    NOALN                    BRANCH ON MSG
         MVC   DEND+EIGHT(EIGHT),ZERO(RTSBUF) SAVE EBCDIC LINE NO TO
*                                       AVOID OVERSTORING W/IDLES
         LA    RTSBUF,DEND+EIGHT        CHANGE INPUT POINTER
NOALN    EQU   *
         CLI   CARCT+ONE,ZERO           DOES IT NEED TO BE RETURN
         BNE   CKTWX                    YES, BRANCH            @YA08763
         TM    WFLGS,TSOMSG             IS THIS MSGGEN         @YA08763
         BO    MIDLES                   NO, BRANCH             @YA08763
         TM    AVTPARM,E3               IS IT 2260 DISPLAY     @OZ07091
         BNZ   MIDLES                   YES, BRANCH            @OZ07091
         TM    LCBTSOB,LCB2741N         IS THIS A 2741 TERM.   @YA09113
         BO    MIDLES                   YES, BRANCH            @YA09113
CKTWX    EQU   *                                               @YA08763
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX LINE     @G36XRYP
         BZ    DATA01                   CHECK FOR SPECIAL CASE
         TM    QCBRETCT,QCBCR+QCBLF     HAVE LF/CR BEEN SENT
         BZ    DATA04                   BR NO TO SEND BOTH
         BO    MIDLES                   BR YES TO SEND NEITHER
         TM    QCBRETCT,QCBCR           WAS CR SENT
         BZ    DATA02                   BR NO TO INSERT CR
         MVI   ZERO(RTCBUF),LF          INSERT LF
         B     DATA03                   TO COMMON CODE
DATA01   EQU   *
         CLI   CARCT+ONE,NOT            NEED CARR RETURN
         BE    DATA01A                  BRANCH YES
         TM    CARCT+ONE,IDLES          CARR FIELD INDICATE IDLES
         BO    MIDLES                   BRANCH YES FOR IDLES ONLY
         BAL   RLINK,SMCALL             COUNT LINE FOR CARR RTN
DATA01A  EQU   *
         BAL   RLINK,INSNL              YES. BUT DON'T COUNT LINE.
         B     MIDLES                   CONTINUE
DATA02   EQU   *
         MVI   ZERO(RTCBUF),CR          INSERT CR
DATA03   EQU   *
         BAL   RLINK,MVD1               UPDATE COUNT AND TCAM PTR
         B     MIDLES                   CLEAR COUNT FIELD
DATA04   EQU   *
         CLI   CARCT+ONE,ZERO           IS CR/LF NEEDED?       @YA11153
         BE    MIDLES                   NO                     @YA11153
         BAL   RLINK,INSNL              RETURN CARRIAGE
         BAL   RLINK,SMCALL             COUNT ONE LINE
MIDLES   EQU   *
         BAL   RLINK,SNDIDLES           PUT IN IDLES
         MVI   CARCT+ONE,ZERO           CLEAR CARR COUNT
***********************************************************************
PUTDATA  EQU   *
         L     RLINK,LCBSCBA-ONE        GET SCB ADDRESS
         USING IEDQSCB,RLINK            ADDRESSABILITY
         TM    SCBERR2,SCBALN           AUTO LINE OR AUTO CHAR
         DROP  RLINK
         BZ    PUT00                    BRANCH NO
         CLI   MSGLEN+ONE,EIGHT         IS THIS AUTO DATA OR MSG
         BH    PUT00                    BRANCH ON MSG
         TM    LCBTSOB,LCB2741N         IS IT A 2741
         BZ    PUT00                    BRANCH NO
         MVI   CARCT+ONE,FIVEIDLS       TO INSERT 5 IDLES
         BAL   RLINK,SNDIDLES           TO KEEP PROMPT FROM PRT ON FLY
PUT00    EQU   *
         LH    RNDX,MSGLEN              ASSUME ROOM FOR ALL
         CLC   MSGLEN,WBUFSZ            IS THERE ROOM
         BNH   PUT01                    BRANCH YES
         LH    RNDX,WBUFSZ              TRUNCATE TO SIZE IN SCB
PUT01    EQU   *
         TM    AVTPARM3+TWO,DCTLOCAL    IS THIS 2260 LOCAL     @G36XRYP
         BZ    PUT02                    BRANCH NO
         CH    RNDX,LINE                WILL MSG WRAP TO NEXT LINE
         BNH   PUT02                    BRANCH NO
         BAL   RLINK,SMCALL             UPDATE LINE COUNT IF SO
PUT02    EQU   *
         BAL   RRTN,UPTOTCCT            UPDT TO,TCAM BUF, AND CARR
         BCTR  RNDX,ZERO                REDUCE FOR MOVE
         EX    RNDX,MOVDATA             MSG TO SCB
         AR    RTCBUF,RNDX              UPDATE PTR TO LAST MOVED
         TM    AVTPARM3+TWO,DCTTWX      TWX LINE               @G36XRYP
         BO    CTWXND                   BRANCH YES
         TM    AVTPARM,E3               ANY 2260
         BM    IS2260                   YES
         CLI   ZERO(RTCBUF),NLCHAR      WAS LAS CHAR A NEW LINE (NL)
         LA    RTCBUF,ONE(,RTCBUF)      POINT BEYOND LAST CHAR
         BNE   RESET1                   BRANCH NO
         BAL   RLINK,SMCALL             COUNT ONE LINE
         TM    WFLGS,NOLEFT             ATTN ONLY ENTRY WITH NOLEFT
         BNO   ANNL02                   BRANCH NO
         MVI   CARCT+ONE,MAXIDLES       MAX IDLES FOR ATTN
         B     ANNL02                   BRANCH YES
***********************************************************************
IS2260   EQU   *
         CLI   ZERO(RTCBUF),NLCHAR      WAS LAST CHAR NL?
         BNE   NOEND                    NO
         BAL   RLINK,SMCALL             COUNT OUTPUT LINE
         TM    AVTPARM3+TWO,DCTLOCAL    FOR A 2260 LOCAL       @G36XRYP
         BO    ANNL02                   YES. LEAVE NL
         MVI   ZERO(RTCBUF),CR          OVERLAY WITH CR FOR REMOTE
         LA    RTCBUF,ONE(,RTCBUF)      STEP PAST LAST CHAR
         BAL   RLINK,INSETX             ADD ETX AT END
         B     ANNL02                   RESET CARRIAGE COUNT
NOEND    EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  SEE IF REMOTE          @G36XRYP
         BZ    RESET1                   NO.
         LA    RTCBUF,ONE(,RTCBUF)      POINT TO NEXT CHAR SLOT
         BAL   RLINK,INSETX             TO ADD ETX AT END
         B     RESET2                   LEAVE W/O RESETTING CARR COUNT
ANNL02   EQU   *
         BAL   RLINK,SNDIDLES           INSERT IDLES IF REQUIRED,CLR CT
RESET1   EQU   *
         BCTR  RTCBUF,ZERO              BACK UP TO LAST CHAR
         CLI   ZERO(RTCBUF),BSP         IS THIS A BACKSPACE
         BNE   RESET2                   BRANCH NO
         CLI   CARCT+ONE,TWO            IS THIS THE PROMPT
         BNE   RESET2                   BRANCH NO
         MVI   CARCT+ONE,ZERO           SHOW  CARRIAGE AT LEFT
RESET2   EQU   *
         L     RLINK,TOR                GET NO. CHAR MOVED
         ST    RLINK,FROMR              REARRANGE RETURN REGS
         B     AYW00070                 SUCCESSFUL COMPLETION
         SPACE
CTWXND   EQU   *
         CLI   ZERO(RTCBUF),CR          WAS LAST CHAR CR
         BE    CTWXCR                   YES. ASSUME AUTO CHAR PROMPT
         CLI   0(RTCBUF),NLCHAR         WAS LST ONE NL
         BNE   RESET1                   NO. THAT IS ALL
         MVI   0(RTCBUF),CR             CHANGE TO RETURN
         LA    RTCBUF,ONE(,RTCBUF)      STEP TO NEXT BYTE
         BAL   RLINK,SNLF               ADD LINE FEED
         BAL   RLINK,SMCALL             COUNT ONE LINE
CTWXCR   EQU   *
         MVI   CARCT+ONE,ZERO           CLEAR CARR COUNT
         B     RESET1                   PREPARE TO RETURN
***********************************************************************
         SPACE
UPDATE   EQU   *
         IC    RTEMP,0(RNDX,RTSBUF)     GET LAST CHARACTER MOVED
         STC   RTEMP,TSBUFR             AND SAVE IT FOR LATER LOOK
         LA    RNDX,ONE(,RNDX)          RESTORE COUNT MOVED
         AR    RTCBUF,RNDX              UPDATE TCAM POINTER
         LH    RDCB,LINE                AVAILABLE LINE SIZE
         SR    RDCB,RNDX                LESS MESSAGE LENGTH
         AH    RDCB,DEND+TWO            LESS NON-PRINT COUNT
         STH   RDCB,LINE
         BAL   RRTN,UPTOTCCT            UPDT TO, TCAM BUF, AND CARR
         SPACE
         AR    RTSBUF,RNDX              UPDATE TS BUFR POINTER
         LH    RDCB,MSGLEN              MSG LENGTH PASSED TO AYE
         SR    RDCB,RNDX                LESS NO. CHAR MOVED
         STH   RDCB,MSGLEN
         L     RDCB,FROMR               NO. REMOVED FROM TS BUFF
         AR    RDCB,RNDX                PLUS THOSE REMOVED THIS TIME
         ST    RDCB,FROMR
         LH    RDCB,BLNTH               NO. CHAR IN TS BUFR
         SR    RDCB,RNDX                REDUCE BY NO. MOVED
         STH   RDCB,BLNTH
         LH    RDCB,MOVED               AMOUNT REMOVED FROM 1 TS BUFR
         AR    RDCB,RNDX                PLUS NO. MOVED THIS TIME
         STH   RDCB,MOVED
         BR    RLINK                    RETURN TO CALLER
         SPACE
UPTOTCCT EQU   *
         LH    RDCB,WBUFSZ              CURRENT TCAM BFR SIZE
         SR    RDCB,RNDX                SUBTRACT NO. CHAR MOVED
         STH   RDCB,WBUFSZ              STORE REMAINDER
         L     RDCB,TOR                 'TO' COUNT TO BE RETURNED
         AR    RDCB,RNDX                ADD NO. CHAR MOVED THIS TIME
         ST    RDCB,TOR                 STORE IT BACK
         LH    RDCB,CARCT               CURRENT CARR COUNT
         AR    RDCB,RNDX                ADD NO. MOVED
         SH    RDCB,DEND+TWO            SUBTRACT NON-PRINT IF ANY
         BP    UPDT                     DO NOT ALLOW NEG COUNT
         SR    RDCB,RDCB                SET TO 0
UPDT     EQU   *
         STH   RDCB,CARCT               STORE IT BACK
         BR    RRTN                     RETURN TO CALLER
         SPACE
SNDIDLES EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX LINES    @G36XRYP
         BO    CLRCAR                   YES. DO NOT ADD IDLES
         TM    AVTPARM,THREE            ANY 2260
         BM    CLRCAR                   YES
         TM    SAVX1,ONE                ANY HORIZONTAL TABS
         BZ    SND00                    BRANCH NO
         MVC   CARCT,LINESV             USE MAX IDLES W/TABS
         NI    SAVX1,NOT-ONE            SWITCH OFF
SND00    EQU   *
         NC    WBUFSZ,WBUFSZ
         BNZ   SND                      BRANCH ROOM LEFT
         OI    WFLGS+ONE,ONE            INDICATE NOT ALL INSERTED
         LH    RTEMPA,CARCT             GET CURRENT COUNT
         BAL   RRTN,DIVIDE              CALC NO. OF IDLES
         STH   RTEMPA,CARCT             PUT INTO CARR FIELD
         OI    CARCT+ONE,IDLES          INDICATE COUNT IS IDLES
         BR    RLINK                    RETURN
***********************************************************************
CLRCAR   EQU   *
         MVI   CARCT+ONE,ZERO           ZERO CARRIAGE POSITION
         NI    QCBRETCT,NOT-QCBNL
         BR    RLINK                    RETURN
SND      EQU   *
         TM    LCBTSOB,LCB2741N         IS THIS A 2741
         BO    SND01                    BRANCH YES TO INSERT IDLES
         LTR   RPARM2,RPARM2            1050. CHK FOR ENTRY TO RTN CARR
         BNZ   SND01                    NO. TREAT NORMALLY
         MVI   ZERO(RTCBUF),IDLECHAR    INSERT ONE IDLE
         MVC   ONE(E11,RTCBUF),ZERO(RTCBUF)  PROPAGATE FOR 12
         MVI   E12(RTCBUF),EOT          FINISH WITH EOT
         LA    RNDX,THIRTEEN            TOTAL INSERTED
         B     CLRC                     TO UPDATE COUNTS
SND01    EQU   *
         LH    RTEMPA,CARCT             CURRENT CARR COUNT
         SR    RNDX,RNDX                IN CASE NO IDLES NEEDED
         CLI   CARCT+ONE,IDLES          IDLES OR COUNT
         BE    CLRC                     CLR COUNT AND RETURN
         BH    NOROUND                  IDLES
         LTR   RTEMPA,RTEMPA            ANY NEED FOR IDLES
         BZ    CLRC                     BRANCH NO
         BAL   RRTN,DIVIDE              ELSE CONVERT TO IDLES
NOROUND  EQU   *
         N     RTEMPA,K15               GET IDLE COUNT
         LR    RNDX,RTEMPA
         CH    RNDX,WBUFSZ              SEE IF ENOUGH ROOM
         BH    PARTI                    SEND ONLY PART
         NI    WFLGS+ONE,NOT-ONE        INDICATE ALL SENT
ALLI     EQU   *
         MVI   ZERO(RTCBUF),IDLECHAR    INSERT FIRST IDLE
         BCT   RNDX,NOTONE              BRANCH IF MORE THAN ONE NEEDED
         B     MODCK                    ONLY ONE REQUIRED
NOTONE   EQU   *
         BCTR  RNDX,ZERO                REDUCE FOR MOVE
         EX    RNDX,MOVIDL              PROPAGATE THE REST
         LA    RNDX,ONE(,RNDX)          RESTORE COUNT
MODCK    EQU   *
         LA    RNDX,ONE(,RNDX)          ONLY ONE USED FOR ONE IDLE
         AR    RTCBUF,RNDX              POINT BEYOND IDLES
         SR    RTEMPA,RNDX              SEE IF WE GOT THEM ALL
         LTR   RTEMPA,RTEMPA            DID THEY ALL GO
         BZ    CLRC                     BRANCH IF THEY DID
         STC   RTEMPA,CARCT+ONE         STORE COUNT NOT MOVED
         OI    CARCT+ONE,IDLES          INDICATES IDLES
         B     NOCLR                    DO NOT CLEAR CARCT
CLRC     EQU   *
         MVI   CARCT+ONE,ZERO           INDICATE ALL SEND
NOCLR    EQU   *
         LH    RTEMPA,WBUFSZ            TCAM BUFFER SIZE
         SR    RTEMPA,RNDX              REDUCE BY NO. IDLES
         STH   RTEMPA,WBUFSZ            STORE IT BACK
         L     RTEMPA,TOR               GET 'TO' COUNT PASSED BACK
         AR    RTEMPA,RNDX              ADD NO. CHAR MOVED TO BUF
         ST    RTEMPA,TOR               PUT IT BACK
         BR    RLINK                    RETURN
PARTI    EQU   *
         OI    WFLGS+ONE,ONE            INDICATE NOT ALL SENT
         LH    RNDX,WBUFSZ              SEND AS MUCH AS POSSIBLE
         B     ALLI                     BRANCH
         SPACE
DIVIDE   EQU   *
         SR    RTEMP,RTEMP              CLEAR FOR DIVIDE
         LA    RDCB,E11                 N / 11 ROUNDED
         DR    RTEMP,RDCB               DO THE DIVIDE
         LTR   RTEMP,RTEMP              SEE IF ROUNDING REQUIRED
         BZ    DIVX                     BRANCH NO
         LA    RTEMPA,ONE(,RTEMPA)      ROUND
DIVX     EQU   *
         C     RTEMPA,K15               IF GREATER IS TROUBLE
         BNH   DIVY                     IS OK
         L     RTEMPA,K15               SET AT MAXIMUM NO.
DIVY     EQU   *
         BR    RRTN                     RETURN
         SPACE
         SPACE
**  ROUTINE TO CALCULATE SPACE AVAILABLE IN TCAM BUFFER AND/OR
**  ON THE CURRENT LINE.  THE SIZE OF AVAILABLE SPACE IS RETURNED IN
**  RNDX....  INPUT SIZE IS IN 'BLNTH' IN WORK AREA.
CALCSIZ  EQU   *
         NC    WBUFSZ,WBUFSZ            TEST ROOM IN TCAM
         BZ    NOBUF                    NO ROOM LEFT IN TCAM BUFFER
         LH    RNDX,BLNTH               CURRENT TS BUFFER SIZE
         LTR   RNDX,RNDX                TEST TSO BUFFER SIZE   @SA74058
         BP    VALIDCNT                 BUFFER SIZE >  ZERO    @SA74058
         MVI   SWT2,RC44                INDICATE NO DATA MOVE  @SA74058
         BR    RLINK                                           @SA74058
VALIDCNT EQU   *                                               @SA74058
         BCTR  RNDX,ZERO                MINUS 1
         IC    RDCB,ZERO(RNDX,RTSBUF)   GET LAST CHARACTER
         STC   RDCB,SAVX2               SAVE IT FOR NOW
         CLC   BLNTH,MSGLEN             EQUAL FOR END OF MSG OR BFR
         BNE   CALC1                    IF NOT END, JUST GET SIZE
         TM    BUFFFL1,BUFFNLCR         IS THIS LAST BUFFER
         BZ    CALC1                    BRANCH NO
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX LINE     @G36XRYP
         BO    BUFMCHK                  YES. TWX MAY NEED 2 CHAR ADDED
         TM    AVTPARM3+THREE,DCTNOIDL  IS IT 2260 REMOTE      @G36XRYP
         BZ    OTHER                    OTHERS NEED NL ONLY
BUFMCHK  EQU   *
         LH    RNDX,WBUFSZ              SIZE OF TCAM BUFFER
         BCTR  RNDX,ZERO                REDUCE FOR MSG=BFR-1 CHK
         CH    RNDX,MSGLEN              IS MSG=BFR-1?
         BE    FAKER                    BRANCH YES
OTHER    EQU   *
         CLC   MSGLEN,WBUFSZ            IS MSGSZE = TCAM BFR SIZE
         BE    FAKER                    BRANCH YES. FORCE ANOTHER ENTRY
CALC1    EQU   *
         CLC   BLNTH,WBUFSZ             COMPARE TO CURRENT LENGTH OF
**                                      SPACE AVAILABLE
         BH    SPART                    BRANCH HIGH
         LH    RNDX,BLNTH               LET IT ALL GO
         TM    WFLGS,CONTROLM           CONTROL MODE INPUT
         BO    CTLSZ                    YES
         CH    RNDX,LINE                COMPARE TO SPACE THIS LINE
         BH    SPLNMG                   SEND REST OF LINE
CTLSZ    EQU   *
         TM    BUFFFL1,BUFFNLCR         IS THIS LAST BUFFER
         BO    CHK1050                  BRANCH YES
NOT1050  EQU   *
         MVI   SWT2,FOUR                SEND ALL DATA THIS LINE
         BR    RLINK                    RETURN
CHK1050  EQU   *
         TM    FLAG2,X1050              IS THE DEVICE A 1050
         BZ    NOT1050                  NO, BRANCH
         LA    RDCB,ONE                 FOR COMPARE
         CR    RDCB,RNDX                IS THERE ONLY ONE CHAR
         BE    NOT1050                  BRANCH YES
         CLI   SAVX2,NLCHAR             WAS LAST CHAR NL
         BE    C105X                    YES. WILL NEED IDLES
         TM    WFLGS,TSOASIS+CONTROLM   IS IT ASIS OR CTRL MODE
         BM    NOT1050                  IF SO, IDLES WILL NOT BE ADDED
C105X    EQU   *
         OI    QCBRETCT,QCBIEND+QCBDEND FAKING FLAGS
         BCTR  RNDX,ZERO                EDIT BUMPS BY ONE IF QCBDEND ON
         MVI   SWT2,THIRTY2             RTN CODE
         BR    RLINK                    RETURN
*  WILL NOT BE ROOM TO INSERT NEW LINE.
*  REDUCE APPARENT TCAM BUFFER SIZE TO FORCE RETURN WITH NEW BUFFER
FAKER    EQU   *
         TM    WFLGS,TSOASIS+CONTROLM
         BM    CALC1                    NO NEED FOR NL AT END
         TM    FLAG1,TRAILER            IS TRAILER BUFFER INDICATED
         BO    CALC1                    YES. NOTHING SPECIAL TO DO
         CLC   MSGLEN,LINE              IS DATA LONGER THAN LINE
         BH    CALC1                    YES. WILL TAKE END OF LINE EXIT
         TM    BUFFFL1,BUFFNLCR         IS THIS ALL OF MSG
         BZ    CALC1                    NO. OWAIT
         TM    AVTPARM3+TWO,DCTTWX      IS THIS MSG FOR TWX?   @G36XRYP
         BO    FAKETWX                  BRANCH YES. SPECIAL TREATMENT
         TM    AVTPARM3+THREE,DCTNOIDL  IS THIS 2260 REMOTE    @G36XRYP
         BO    FAK2260                  YES. MAKE 2260 CHECKS
         TM    AVTPARM3+TWO,DCTLOCAL    IS THIS 2260 LOCAL     @G36XRYP
         BZ    LESS1                    BRANCH NO
         CLC   MSGLEN,LINE              YES. IS MSG EQUAL LINE
         BE    CALC1                    IF SO, DO NOTHING NL NOT NEEDED
LESS1    EQU   *
         OI    QCBRETCT,QCBDEND         LAST. FORCE SECOND ENTRY
         LH    RNDX,WBUFSZ
         BCTR  RNDX,ZERO                SUBTRACT ONE
         STH   RNDX,WBUFSZ
         OI    SAVX1,TWO                INDICATE TCAM REDUCED
         B     CALC1                    BLNTH/MSGLEN MAY NOT BE SAME
         SPACE
FAK2260  EQU   *
         LH    RNDX,BLNTH               GET ALL OF TS BFR
*  DECREMENT RNDX BECAUSE EDIT ADDS 1 IF QCBDEND IS ON.
         BCTR  RNDX,ZERO                MINUS 1 FOR EDIT
         CLC   MSGLEN,WBUFSZ            IS MSG LENGTH = TCAM BFR SIZE
         BE    NLCHK                    YES. SEE IF LAST IS NL
*  MESSAGE IS 1 CHAR SHORTER THAN TCAM BUFFER. IF LAST CHAR IS NL
*  OR MSG FILLS LINE, ONLY ETX WILL BE NEEDED.
         CLC   MSGLEN,LINE              DOES MSG = LINE
         BE    CALC1                    YES. WILL NEED ONLY ETX
         CLI   SAVX2,NLCHAR             IS LAST CHAR NL
         BE    CALC1                    YES. NEEDS ONLY ETX
*  LAST CHAR IS NOT A NL AND LINE IS NOT FULL. SET QCBDEND TO
*  REDUCE QTIP FOR MOVE TO FORCE SECOND ENTRY TO SEND ETX
*  ADD NL BEFORE EXIT IEDAYE.
FAKETX   EQU   *
         OI    QCBRETCT,QCBDEND         SET SECOND ENTRY FLAG
         MVI   SWT2,E16                 RTN CODE FOR ETX ONLY
         BR    RLINK                    RETURN
         SPACE
*  MESSAGE IS EXACTLY AS LONG AS TCAM BUFFER. UNLESS IT ENDS IN NL
*  OR FILLS LINE, MUST SET QCBDEND AND FOR SECOND ENTRY FOR NL,TEX.
*
*  IF IT ENDS IN NL OR MSG FILLS LINE, FORCE SECOND ENTRY FOR ETX ONLY
NLCHK    EQU   *
         CLI   SAVX2,NLCHAR             IS LAST CHAR NL
         BE    CHGNL                    YES. NL CHANGE TO CR
         CLC   BLNTH,LINE               DOES IT FILL LINE
         BE    NONL                     YES. DO NOT INSERT CR
*  NL AND ETX WILL BOTH BE NEEDED AT SECOND ENTRY.
         OI    QCBRETCT,QCBDEND         SET SPECIAL FLAG
         MVI   SWT2,E20                 SET RETURN CODE
         BR    RLINK                    AND RETURN
CHGNL    EQU   *
         MVI   SWT2,E24                 TO CHANGE NL TO CR
         B     CHGX                     COMMON CODE
NONL     EQU   *
         MVI   SWT2,E28                 NOT TO ADD NL
CHGX     EQU   *
         OI    QCBRETCT,QCBDEND         SECOND ENTRY FLAG
         BR    RLINK                    RETURN TO CALLER
         SPACE
FAKETWX  EQU   *
         L     RNDX,TOR                 COUNT IDLES THAT
         LA    RNDX,TWO(,RNDX)          WE WILL INSERT
         ST    RNDX,TOR                 IN THE END OF TCAM BUFFER
         LH    RNDX,WBUFSZ              REDUCE APPARENT TCAM
         BCTR  RNDX,ZERO                BY
         BCTR  RNDX,ZERO                TWO
         STH   RNDX,WBUFSZ              FOR THE MOVE
         LA    RDCB,ZERO(RTCBUF,RNDX)   POINT TO END OF BUFFER
         MVI   ZERO(RDCB),IDLECHAR      LAST 2 CHAR OF BFR ARE IDLES
         MVI   ONE(RDCB),IDLECHAR       *
         LTR   RNDX,RNDX                WAS REDUCTION TO ZERO?  SA67757
         BZ    NOBUF                    BR YES TO NO SPACE RETRNSA67757
         B     CALC1                    CONTINUE
         SPACE
         SPACE
*  CAN ONLY SEND PART AS NOT ENOUGH ROOM IN TCAM BUFFER
SPART    EQU   *
         LH    RNDX,WBUFSZ              MAX IS TCAM BUF SIZE
         CH    RNDX,LINE                COMPARE TO  LINE SIZE
         BNL   SPLNMG                   PARTIAL LINE, PARTIAL MSG
         MVI   SWT2,EIGHT               FILL TCAM BUFFER
         BR    RLINK                    RETURN
         SPACE
*  NOT ENOUGH ROOM ON LINE AND POSSIBLY
*  NOT ENOUGH ROOM IN TCAM BUFFER
SPLNMG   EQU   *
         MVI   SWT2,TWELVE              MAX MOVE IS TO FILL LINE
         LH    RNDX,LINE                GET COUNT FROM LINE SIZE AVAIL
         BR    RLINK                    RETURN
         SPACE
NOBUF    EQU   *
         MVI   SWT2,E40                 INDICATE NO SPACE IN TCAM BFR
         BR    RLINK                    RETURN
         SPACE
INSNL    EQU   *
         NC    WBUFSZ,WBUFSZ            TEST TCAM BUFFERSIZE
         BCR   EIGHT,RLINK              IF EMPTY, RETURN
         TM    AVTPARM3+TWO,DCTTWX      IS DEVICE TWX?         @G36XRYP
         BO    SNCR                     YES                    @OS78322
         TM    AVTPARM3+THREE,DCTNOIDL  2260 REMOTE?           @G36XRYP
         BO    INSCR                    YES
         MVI   0(RTCBUF),NLCHAR         INSERT NEW LINE
MVD1     EQU   *
         LA    RTCBUF,ONE(,RTCBUF)      BUMP TCAM ADDRESS
         L     RTEMP,TOR                GET 'TO' COUNT
         LA    RTEMP,ONE(,RTEMP)        UPDATE IT
         ST    RTEMP,TOR                AND SAVE IT
         LH    RTEMP,WBUFSZ             SIZE OF TCAM BUFFER
         BCTR  RTEMP,ZERO               DECREMENT FOR NL
         STH   RTEMP,WBUFSZ             UPDATE TCAM BUF SIZE
         BR    RLINK                    RETURN
         SPACE
INSETX   EQU   *
         MVI   ZERO(RTCBUF),ETX         ETX TO TCAM BUFFER
         B     MVD1                     RETURN FROM MVD1 VIA RLINK
         SPACE
INSCR    EQU   *
         NC    WBUFSZ,WBUFSZ            ANY MORE SPACE IN TCAM
         BCR   8,RLINK                  NO. RETURN
         MVI   0(RTCBUF),CR             REMOTE USES CARR RET
         B     MVD1                     GO UPDATE COUNT, PTR AND RTN
INSTX    EQU   *
         NC    WBUFSZ,WBUFSZ            TEST BUFFERSIZE
         BCR   EIGHT,RLINK              IF EMPTY, RETURN
         MVI   ZERO(RTCBUF),STX         ELSE INSERT STX
         B     MVD1                     AND COUNT IT, THEN RETURN
SNCR     EQU   *
         MVI   ZERO(RTCBUF),CR          INSERT CARR RETURN
SNCRX    EQU   *
         LR    RNDX,RLINK               SAVE ENTRY REG
         BAL   RLINK,MVD1               UPDATE COUNT,POINTER
         LR    RLINK,RNDX               RETRIEVE ENTRY REG
         NC    WBUFSZ,WBUFSZ            ANY MORE ROOM
         BNZ   SNLF                     BRANCH YES
*  NOT ROOM TO INSERT LF
         MVI   CARCT+ONE,NEEDLF         INDICATE LF STILL NEEDED
         OI    WFLGS+ONE,ONE            INDICATE REQUEST NOT COMPLETE
         B     AYW00080                 FINISH                 @OS78322
         SPACE
SNLF     EQU   *
         MVI   ZERO(RTCBUF),LF          INSERT LINE FEED
         B     MVD1                     GO COUNT, UPDT AND RETURN
         SPACE
         SPACE
SENDTSO  EQU   *
         L     RLINK,BUFFTRLR-ONE       SEE IF TRAILER BUFFER FOLLOWS
         LA    RLINK,ZERO(,RLINK)       CLEAR FLAG BYTE
         LTR   RLINK,RLINK              TEST FOR ADDRESS
         BNZ   SENDT01                  BRANCH IF ADDRESS
         NI    FLAG1,AVTEFF-TRAILER     NO TRAILER, CLEAR FLAG
         B     SENDT02                  CONTINUE
SENDT01  EQU   *
         OI    FLAG1,TRAILER            SET TRAILER FLAG
SENDT02  EQU   *
         SR    RTEMP,RTEMP
         IC    RTEMP,BUFFOFST           OFFSET TO DATA IN TS BUF
         AR    RTSBUF,RTEMP             POINT TO DATA
         MVC BLNTH+ONE(ONE),BUFFLNTH    AMT OF DATA IN BUFFER
         TM    QCBRETCT,QCBIEND         ENTRY FOR IDLES ONLY
         BZ    SENDT03                  BRANCH NO
         NI    QCBRETCT,NOT-QCBDEND-QCBIEND FLAGS OFF
         BAL   RLINK,SNDIDLES           PUT IN IDLES
         MVI   MOVED+ONE,ONE            SET UP DUMMY QTIP
         BAL   RLINK,QTIPR              UPDATE THE BUFFER FOR 1 CHAR
         B     AYW00070                 SUCCESSFUL COMPLETION
SENDT03  EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  2260 REMOTE?           @G36XRYP
         BZ    SEND01                   NO
         TM    QCBRETCT,QCBDEND         IS THIS SPECIAL ENTRY
         BZ    SEND00                   BRANCH NO
         NI    QCBRETCT,NOT-QCBDEND     TURN OFF FLAG
         MVI   MOVED+ONE,ONE            SET FOR DUMMY QTIP
         BAL   RLINK,QTIPR              EXEC QTIP
         CLI   CARCT+ONE,NOT-ONE        IS IT FOR NL AND ETX
         BE    SEND05                   BRANCH YES
         B     SEND04                   FOR NL AND ETX
SEND00   EQU   *
*  IF THIS IS THE FIRST BASIC UNIT OF A 2260 REMOTE MESSAGE, WE MUST
*  INSERT AN STX AS THE FIRST CHARACTER OF THE BUFFER.
         L     RTEMPA,LCBERBCH-ONE      ADDRESS OF FIRST BASIC UNIT.
         LA    RTEMPA,0(,RTEMPA)        CLEAR FOR COMPARE
         LA    RLINK,0(RTCBUF)          BFR ADDR PASSED
         L     RTEMP,LCBSCBA-ONE        GET SCB ADDRESS
         L     RTEMP,E44(RTEMP)         GET BUFFER ADDRESS
         LA    RTEMP,0(RTEMP)          CLEAR FOR COMPARE
         CR    RTEMP,RTEMPA            ARE THEY THE SAME
         BNE   NOTFIRST                 NO
         CLI   LCBERBPY,PRIINTRQ        FIRST INITL REQUEST
         BNE   NOTFIRST                 BR NO . DO NOT ADD STX
         L     RTEMP,TOR                PICKUP COUNT OF INSERTED
*                                       DATA
         LTR   RTEMP,RTEMP              STX ALREADY INSERTED
         BNZ   NOTFIRST                 YES, CONTINUE DATA
*                                       STREAM EDITING
         BAL   RLINK,INSTX              YES. ADD STX
         B     NOTFIRST                 BRANCH
SEND01   EQU   *
         TM    QCBRETCT,QCBDEND         ENTRY TO INSERT NL
         BZ    SEND02                   NO
         NI    QCBRETCT,NOT-QCBDEND     TURN OFF BIT
         MVI   MOVED+ONE,ONE
         BAL   RLINK,QTIPR              UPDATE TSO BUFFER
         TM    FLAG1,TRAILER            IS THERE A TRAILER BUFFER
         BZ    SEND07                   BRANCH IF NO MORE BUFFERS
         BAL   RLINK,INSNL              IS SPECIAL CASE WHEN LINE
*                                       ENDS WITH END OF TCAM BUFFER
         BAL   RLINK,SNDIDLES           INSERT IDLES
         BAL   RLINK,SMCALL             COUNT ONE OUTPUT LINE
         B     MDA3                     GET NEXT BUFFER AND RESTART
SEND07   EQU   *
         TM    AVTPARM3+TWO,DCTTWX      SEEIF TWX LINE         @G36XRYP
         BO    TWXEND                   YES
         TM    AVTPARM3+TWO,DCTLOCAL    IS THIS 2260 LOCAL     @G36XRYP
         BZ    SEND05                   BRANCH NO TO SEND NL
         CLC   CARCT,LINESV             IS LINE FULL
         BE    SEND03                   BRANCH YES TO SKIP NL
SEND05   EQU   *
         BAL   RLINK,INSNL              BRANCH TO INSERT NL CHAR
SEND03   EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  IS IT 2260 REMOTE      @G36XRYP
         BZ    SEND06                   BR NO  TO SEND NOTHING ELSE
SEND04   EQU   *
         BAL   RLINK,INSETX             ADD ETX AS LAST CHAR
SEND06   EQU   *
         BAL   RLINK,SMCALL             COUNT ONE LINE
         BAL   RLINK,SNDIDLES           FOR IDLES AND/OR CLEAR CARR CT
         B     AYW00070                 SUCCESSFUL COMPLETION
TWXEND   EQU   *
         MVI   0(RTCBUF),CR             LF WAS IN LAST BUFFER
         BAL   RLINK,MVD1               ADD 1 TO COUNT
         B     SEND03                   GET IDLES AND GO
SEND02   EQU   *
         CLI   CARCT+ONE,NOT            WAS LAST OPERATION INPUT WITH
*                                       CR OR LF MISSING
         BE    SEND12                   YES. SEE WHAT IS NEEDED
         CLI   CARCT+ONE,NEEDLF         IS LF NEEDED
         BE    NOLF                     YES. INSERT IT IN BFR
         CLI   CARCT+ONE,NEEDBOTH       BOTH LF/CR NEEDED
         BE    NOCTL                    YES. PUT THEM IN
         TM    CARCT+ONE,IDLES          INDICATE IDLES
         BNO   NOTFIRST                 BRANCH NO
         B     SEND08                   INSERT NEEDED IDLES
SEND12   EQU   *
         TM    LCBTSOB,LCB2741N         IS IT 2741?            @OS78322
         BO    NOCLR2                   YES, DON'T CLEAR YET   @OS78322
         MVI   CARCT+ONE,ZERO           CLEAR CARRIAGE COUNT
NOCLR2   EQU   *                                               @OS78322
         TM    QCBRETCT,QCBCR+QCBLF     SEE IF ONE OR BOTH MISSING
         BZ    NOCTL                    BOTH. INSERT BOTH
         TM    QCBRETCT,QCBCR           WAS CR RECEIVED
         BO    NOLF                     BRANCH YES TO ADD LF
         MVI   ZERO(RTCBUF),CR          ELSE INSERT CR
         BAL   RLINK,MVD1               AND COUNT IT
TWXI     EQU   *
         NI    QCBRETCT,NOT-QCBNL
         B     NOTFIRST                 BRANCH
NOLF     EQU   *
         BAL   RLINK,SNLF               INSERT LINE FEED (TTY)
SEND08   EQU   *
         BAL   RLINK,SNDIDLES           WILL CLEAR CARR COUNT
NOTFIRST EQU   *
         LH    RLINK,LINESV             LD TERMINAL LINE SIZE
         SH    RLINK,CARCT              GET  LINE SIZE LEFT
         BP    PASTNL                   BRANCH POSITIVE
         TM    WFLGS,CONTROLM           CONTROL MODE
         BZ    NOCTL                    NO
         LH    RLINK,LINESV
         B     PASTNL                   BRANCH
NOCTL    EQU   *
         BAL   RLINK,INSNL              INSERT NL
         BAL   RLINK,SNDIDLES           INSERT IDLES
         TM    WFLGS+ONE,ONE            WAS THERE ROOM
         BO    AYW00090                 NO, BRANCH
         LH    RLINK,LINESV             YES. START COUNT AT 0
PASTNL   EQU   *
         STH   RLINK,LINE               SET REMAINING LINE SIZE
MOREIN   EQU   *
         BAL   RLINK,CALCSIZ            AMT. THAT CAN BE  MOVED
         CLI   SWT2,E40                 SEE IF ANY ROOM IN TCAM BFR
         BE    AYW00090                 NO, EXIT FOR NEW BUFFER
         CLI   SWT2,RC44                SEE IF TSO BFR HAS DATA@SA74058
         BE    NEWLINE                  NODATA IN TSBUF TO EDIT@SA74058
         BAL   RLINK,EDIT               EDIT IT
         SR    RTEMP,RTEMP
         IC    RTEMP,SWT2               WHERE TO GO NEXT
WTG      EQU   *
         B     WTG(RTEMP)               USE CALCSIZE RC FOR BRANCH
         B     NEWLINE                  RTN CODE 4. CURR TS BUF EMPTY
         B     EBUF                     RTN CODE 8. TCAM BFR FILLED.
         B     PARTML                   RTN CODE 12. A LINE IS COMPLETE
         B     SNCRNOW                  RTN CODE 16. CR NOW,ETX NXT
         B     NXNLETX                  RTN CODE 20. NL + ETX NEXT
         B     CHNGNOW                  RTN CODE 24. CHG NO TO CR NOW
         B     SN0NOW                   RTN CODE 28. ETX NEXT ENTRY
         B     SP1050                   RTN CODE 32. FORCE IDLES ENTRY
***********************************************************************
         SPACE
SNCRNOW  EQU   *
         BAL   RLINK,INSNL              ADD CR AS LAST CHAR
SN0NOW   EQU   *
         BAL   RLINK,QTIPR              UPDATE TS BUFFER
         MVI   CARCT+ONE,ZERO           FOR ETX ONLY
         B     AYW00090                 FORCE SECOND ENTRY
CHNGNOW  EQU   *
         BCTR  RTCBUF,ZERO              BACK UP TO LAST CHAR
         MVI   ZERO(RTCBUF),CR          OVERSTORE WITH CR
         B     SN0NOW                   WAIT FOR ETX NEXT ENTRY
NXNLETX  EQU   *
         MVI   CARCT+ONE,AVTEFF-ONE     FOR NL/ETX
         BAL   RLINK,QTIPR              UPDATE TS BUFF
         B     AYW00090                 FORCE SECOND ENTRY
SP1050   EQU   *
         BAL   RLINK,QTIPR              UPDATE BUFFER
         BAL   RLINK,SMCALL             COUNT A LINE
         CLI   SAVX2,NLCHAR             WAS LAST A NL
         BE    SP105                    BRANCH YES
         TM    WFLGS,TSOASIS+CONTROLM   IS IT ASIS OR CONTROL MODE
         BM    SP106                    BRANCH EITHER TO SKIP NL
         BAL   RLINK,INSNL              INSERT NL
SP105    EQU   *
         BAL   RLINK,SNDIDLES           ADD IDLES
         TM    WFLGS+ONE,ONE            DID THEY ALL GO
         BO    AYW00090                 NO, FORCE SECOND ENTRY
SP106    EQU   *
         NI    QCBRETCT,NOT-QCBDEND-QCBIEND  NO NEED TO FAKE IT
         MVI   MOVED+ONE,ONE            YES. FINISH OFF TS BUFFR
         BAL   RLINK,QTIPR              WITH THIS CALL TO QTIP
         B     AYW00070                 SUCCESSFUL COMPLETION
         SPACE
*  FILLED LINE. MORE TO DO.
PARTML   EQU   *
         BAL   RLINK,QTIPR              UPDATE TSO BUFFER
         NC    LINE,LINE                SEE IF BSP LEFT ROOM
         BZ    LINEFINI                 BR LINE IS FULL
         NC    WBUFSZ,WBUFSZ            CAN TCAM TAKE MORE
         BNZ   MOREIN                   IF SO, GET THEM
         B     AYW00090                 EXIT FOR NEW BUFFER
LINEFINI EQU   *
         BAL   RLINK,SMCALL             COUNT LINE
         NC    MSGLEN,MSGLEN
         BNZ   PART01                   MORE TO DO
         TM    BUFFFL1,BUFFNLCR
         BZ    PART01                   NOT LAST BUFFER
         MVI   SWT2,FOUR
PART01   EQU   *
         CLI   TSBUFR,NLCHAR            WAS LAST CHAR A NL
         BE    EOL60                    2260 CHECKS
         TM    AVTPARM3+TWO,DCTLOCAL    LOCAL DOES NOT USE ETX @G36XRYP
         BO    LIDLES                   JUST CLEARS COUNT
         TM    AVTPARM3+THREE,DCTNOIDL  REMOTE,ETX AT END LINE @G36XRYP
         BO    ETXNOW                   INSERT IT
         NC    WBUFSZ,WBUFSZ            ROOM FOR NL
         BNZ   PART02                   BRANCH YES
         MVI   CARCT+ONE,NOT            TO GET NL NEXT ENTRY
         NI    QCBRETCT,NOT-QCBNL       INDICATE NO NL
         B     AYW00080                 EXIT
PART02   EQU   *
         BAL   RLINK,INSNL              NO. ADD NL AND IDLES
LIDLES   EQU   *
         BAL   RLINK,SNDIDLES           INSERT IDLES
         B     AYW00080                 EXIT
ETXNOW   EQU   *
         NC    WBUFSZ,WBUFSZ            ANY ROOM IN TCAM
         BZ    NOBF1                    NO. OVERLAY CR
         BAL   RLINK,INSETX             ADD ETX AS LAST IN BFR
         B     LIDLES                   TO CLEAR CARR COUNT
NOBF1    EQU   *
         BCTR  RTCBUF,ZERO              BACK UP
         MVI   0(RTCBUF),ETX            INSERT ETX
         B     LIDLES                   INSERT IDLES
         SPACE
EOL60    EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  IS IT REMOTE           @G36XRYP
         BO    CHNG                     YES
         TM    AVTPARM3+TWO,DCTTWX      IS IT TWX              @G36XRYP
         BO    CHNGTWX                  YES
         B     LIDLES                   INSERT IDLES
CHNG     EQU   *
         BCTR  RTCBUF,ZERO              BACK OFF POINTER
         MVI   0(RTCBUF),CR             REMOTE USES CR
         LA    RTCBUF,ONE(,RTCBUF)      ADD ONE TO BUFFER
         NC    WBUFSZ,WBUFSZ            ANY ROOM IN TCAM
         BZ    NOROOM                   NO
         BAL   RLINK,INSETX             ADD ETX TO BUFFERS
         B     LIDLES                   INSERT IDLES
NOROOM   EQU   *
         BCTR  RTCBUF,ZERO              SUBTRACT ONE
         MVI   0(RTCBUF),ETX            INSERT ETX
         B     AYW00080                 EXIT
         SPACE
CHNGTWX  EQU   *
         BCTR  RTCBUF,ZERO              SUBTRACT ONE
         MVI   0(RTCBUF),CR             CHANGE TO CR FOR TWX
         LA    RTCBUF,ONE(,RTCBUF)      ADD ONE TO BUFFER
         NC    WBUFSZ,WBUFSZ            ANY MORE ROOM
         BNZ   CHG01                    MORE ROOM LEFT
         MVI   CARCT+ONE,NEEDLF         INDIC LF NEEDED
         B     AYW00080                 EXIT
CHG01    EQU   *
         BAL   RLINK,SNLF               INSERT LF
         B     LIDLES                   INSERT IDLES AND EXIT
         SPACE
EBUF     EQU   *
         BAL   RLINK,QTIPR              GO UPDATE TSO BUFFER
         TM    SAVX1,TWO                WAS THIS MSG EQUAL TCAM BUF
         BZ    LNCHK                    NO. CHECK IF END OF LINE
         B     AYW00090                 INCOMPLETE MOVE
         SPACE
*  NBR OF CHAR MOVED IS LESS THAN OR EQUAL TO LINESIZE, BUT THERE IS
*  NO MORE ROOM IN THE TCAM BUFFER.
LNCHK    EQU   *
         NC    LINE,LINE                ANY ROOM ON LINE
         BNZ   AYW00090                 YES, OUT OF BUFFERS
         BAL   RLINK,SMCALL             NO. COUNT ONE LINE
         TM    AVTPARM3+THREE,DCTNOIDL  IS THIS A 2260 REMOTE  @G36XRYP
         BZ    AYW00080                 EXIT
         BCTR  RTCBUF,ZERO              WILL HAVE TO OVERLAY TO GET ETX
         MVI   ZERO(RTCBUF),ETX         INSERT ETX
         B     AYW00080                 EXIT
         SPACE
*  ALL DATA IN TS BUF MOVED.
NEWLINE  EQU   *
         NC    LINE,LINE                WAS THIS CASE OF END OF LINE
         BNZ   NEW03                    BRANCH NO
*  YES. IS END OF THE LINE. THE FOLLOWING CODE CHECKS FOR ROOM TO
*  INSERT NL (2741),OR LF/CR (TWX). IF THERE WILL NOT BE ROOM, THEN
*  QCBDEND IN QCBRETCT WILL BE TURNED ON. THE CALL TO QTIP WILL
*  REDUCE THE 'MOVED' COUNT BY 1 TO FORCE A NEW ENTRY. AT THAT TIME,
*  THE NL OR CR/LF WILL BE INSERTED, AND THE NEXT BUFFER WILL BE
*  PICKED UP AND HANDLED.
         TM    LCBTSOB,LCB2741N         IS THIS A 2741 TERM
         BZ    NEW02                    BRANCH NO
NEW01    EQU   *
         CLI   WBUFSZ+ONE,ZERO          IS TCAM BFR FULL?
         BNE   NEW03                    IF NOT IS FALSE ALARM
         TM    AVTPARM3+THREE,DCTNOIDL  IS IT 2260 REMOTE      @G36XRYP
         BO    NEW05                    IF SO, EXIT UNLESS BUFFNLCR ON
NEW06    EQU   *
         OI    QCBRETCT,QCBDEND         SET SPECIAL FLAG
         BAL   RLINK,QTIPR              UPDATE BUFFER POINTERS
         B     AYW00090                 GO GET A NEW BUFFER
NEW05    EQU   *
         TM    BUFFFL1,BUFFNLCR         END OF MSG
         BO    NEW06                    BRANCH YES
         BAL   RLINK,QTIPR              UPDATE BUFFER
         B     AYW00090                 WAIT FOR NEW BUFFER
NEW02    EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS IT A TWX LINE       @G36XRYP
         BO    NEW01                    TREAT SAME AS FOR 2741
         TM    AVTPARM3+THREE,DCTNOIDL  SEE IF 2260 REMOTE     @G36XRYP
         BO    NEW01                    SAME LOGIC. IT NEEDS ETX
         TM    AVTPARM3+TWO,DCTLOCAL    IS IT 2260 LOCAL       @G36XRYP
         BZ    NEW01                    NO. ASSUME IT MUST BE 1050
NEW03    EQU   *
         NC    WBUFSZ,WBUFSZ            SEE IF TCAM EMPTY
         BNZ   NEW04                    BRANCH NOT EMPTY
         TM    AVTPARM3+THREE,DCTNOIDL  IS THIS 2260 REMOTE    @G36XRYP
         BO    NEW01                    BRANCH YES FOR FAKE
NEW04    EQU   *
         BAL   RLINK,QTIPR              UPDATE TS BUFFER
         LH    RTEMP,MSGLEN             SEE IF ANY MORE MSG CHAR
         LTR   RTEMP,RTEMP              COUNT = 0?
         BNZ   MOREDA                   BRANCH NO TO CHK NEXT BFR
*  THIS MAY BE THE END OF MESSAGE OR BUFFERS.
         TM    WFLGS,TSOASIS+CONTROLM   ASIS OR CTL NO NL AT END
         BM    ASISCHK                  ASIS MODE
         TM    BUFFFL1,BUFFNLCR         IS THIS LAST BUFFER
         BO    LINE0                    LAST BUFFER
         NC    LINE,LINE                ANY MORE ROOM THIS LINE
         BNZ   NOLINE                   ROOM LEFT LINE
LINE0    EQU   *
         BAL   RLINK,SMCALL             COUNT LINE
NOLINE   EQU   *
*  EDIT MODE. INSERT WHATEVER NECESSARY TO START NEXT MESSAGE
*  AT BEGINNING OF NEXT LINE.
         SPACE
         TM    AVTPARM3+THREE,DCTNOIDL  IS DEVICE 2260 REMOTE? @G36XRYP
         BNO   NOT2260R                 BRANCH ON NO
         CLI   TSBUFR,NLCHAR            WAS LAST CHAR A NL
         BNE   ED01                     NO
         B     SWNL                     GO CHANGE NL TO CR
ED01     EQU   *
         TM    BUFFFL1,BUFFNLCR         LAST BUFFER
         BO    ED03                     BRANCH END OF MSG
         BAL   RLINK,INSETX             APPEND ETX
         B     AYW00070                 SUCCESSFUL COMPLETION
ED03     EQU   *
         NC    LINE,LINE                END OF SCREEN LINE?
         BZ    JUSTETX                  BRANCH YES. CR NOT NEEDED
         BAL   RLINK,INSNL              NO. ADD CR AND ETX
JUSTETX  EQU   *
         BAL   RLINK,INSETX             ADD ETX
         B     JUSTIDL                  ADD IDLES
         SPACE
NOT2260R EQU   *
         TM    AVTPARM3+TWO,DCTLOCAL    IS IT LOCAL 2260       @G36XRYP
         BO    ITSLOC                   YES
         CLI   TSBUFR,NLCHAR            WAS LAST CHARACTER AN NL?
         BE    CTWX03                   YES. CHECK FOR TWX LINE
AYW01440 EQU   *
         TM    BUFFFL1,BUFFNLCR         THIS THE END OF MSG
         BZ    GETLATER                 NO, BRANCH
LEND     EQU   *
         BAL   RLINK,INSNL              PUT IN NL
JUSTIDL  EQU   *
         BAL   RLINK,SNDIDLES           INSERT IDLES
         B     AYW00070                 SUCCESSFUL COMPLETION
         SPACE
CTWX03   EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS IT TWX              @G36XRYP
         BZ    JUSTIDL                  NO
         BCTR  RTCBUF,ZERO              BACK OFF
         MVI   0(RTCBUF),CR             REPLACE WITH CR
         LA    RTCBUF,ONE(,RTCBUF)      ADD ONE TO BUFFER
         BAL   RLINK,SNLF               ADD LINE FEED
         B     JUSTIDL                  ADD IDLES
         SPACE
         SPACE
*  COULD BE LOCAL 2260. IF SO, NL IS NOT NEEDED
NOTR     EQU   *
         TM    AVTPARM3+TWO,DCTLOCAL    IS IT A LOCAL          @G36XRYP
         BO    JUSTIDL                  BRANCH 2260 LOCAL
         CLI   0(RTCBUF),NLCHAR
         BNE   LEND                     NOT NEW LINE CHAR
         TM    AVTPARM3+TWO,DCTTWX      IS IT TWX LINE         @G36XRYP
         BO    TWXCR                    YES
         B     JUSTIDL                  INSERT IDLES
         SPACE
CK60R    EQU   *
         TM    AVTPARM3+TWO,DCTLOCAL    2260 LOCAL             @G36XRYP
         BO    JUSTIDL                  YES. JUST CLR COUNT AND GO
         TM    AVTPARM3+THREE,DCTNOIDL  IS IT REMOTE           @G36XRYP
         BZ    LEND                     NO, BRANCH
         BAL   RLINK,INSETX             ADD ETX
         B     JUSTIDL                  ADD IDLES
SWNL     EQU   *
         BCTR  RTCBUF,ZERO              BACK OFF
         MVI   0(RTCBUF),CR             OVERLAY WITH CR
         LA    RTCBUF,ONE(,RTCBUF)
         B     JUSTETX                  ADD ETX
         SPACE
ITSLOC   EQU   *
         CLI   TSBUFR,NLCHAR            WAS LAST ONE AN NL
         BE    JUSTIDL                  YES
         NC    LINE,LINE                ROOM LEFT THIS LINE
         BZ    JUSTIDL                  NO, ADD IDLES
         B     AYW01440                 BRANCH
         SPACE
*  MORE DATA IN THIS MSG. PROBABLY OWAIT.
*  INSERT NL/IL ONLY IF END OF A LINE.
GETLATER EQU   *
         NC    LINE,LINE                ANY ROOM ON LINE
         BZ    CK60R                    CHK FOR 2260R
         NI    QCBRETCT,NOT-QCBNL       CLEAR NL/CR BITS
*  STILL HAVE ROOM ON THIS LINE.
*  SET RETURN CODE 0, AND LEAVE QCBCARCT AS IT IS.
         B     AYW00070                 SUCCESSFUL COMPLETION
         SPACE
*  MSGLEN=0 WHEN ENTERED.
ASISCHK  EQU   *
         TM    BUFFFL1,BUFFNLCR         IS THE LAST BUFFER
         BO    ASIS                     YES, IS END OF MSG
*  ASIS AND NOT THE LAST BUFFER
         NC    LINE,LINE                IS IT END OF A LINE
         BNZ   AS60CK                   SEE IF A 2260 REMOTE
*  END OF A LINE. LET IT COUNT FOR SIMATTN.
         BAL   RLINK,SMCALL             COUNT LINE
         TM    AVTPARM3+THREE,DCTNOIDL  2260R                  @G36XRYP
         BZ    NOTR                     NO
         BAL   RLINK,INSETX             ADD ETX TO BUFFERS
         B     JUSTIDL                  NOW WE CAN LEAVE
         SPACE
AS60CK   EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  IS IT 2260 REMOTE      @G36XRYP
         BZ    AYW00070                 SUCCESSFUL COMPLETION
END60    EQU   *
         BAL   RLINK,INSETX             APPEND ETX
         B     AYW00070                 SUCCESSFUL COMPLETION
         SPACE
*  ASIS MODE, END OF MSG. REPLACE AN NL WITH WHATEVER REQUIRED TO BEGIN
*  NEXT MESSAGE ON A NEW LINE
         SPACE
ASIS     EQU   *
         TM    WFLGS,CONTROLM           IS IT CONTROL MODE?
         BO    AS60CK                   YES. LET IT GO, CHECK FOR 2260
         TM    AVTPARM3+THREE,DCTNOIDL  IS DEVICE 2260 REMOTE? @G36XRYP
         BO    AS2260                   BRANCH ON YES
         CLI   TSBUFR,NLCHAR            WAS LAST CHARACTER AN NL?
         BNE   EOLEOM                   COULD BE END LINE OR END MSG
         BAL   RLINK,SMCALL             COUNT ONE LINE
         TM    AVTPARM3+TWO,DCTTWX      THIS A TWX LINE        @G36XRYP
         BO    TWXCR                    GO FOR TWX CR
         B     JUSTIDL                  ADD IDLES
TWXCR    EQU   *
         BCTR  RTCBUF,ZERO              SUBTRACT ONE
         MVI   0(RTCBUF),CR             INSERT CARRIAGE RETURN
         LA    RTCBUF,ONE(,RTCBUF)      ADD ONE TO BUFFER
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT
         BNZ   DOLF                     YES, BRANCH
         MVI   CARCT+ONE,NEEDLF         INDICATE LINE FEED NEEDED
         B     AYW00070                 SUCCESSFUL COMPLETION
DOLF     EQU   *
         BAL   RLINK,SNLF               PUT IN LINE FEED
         B     JUSTIDL                  THEN CLEAR CHAR COUNT
AS2260   EQU   *
         NC    LINE,LINE                IS THIS END OF A LINE
         BNZ   ASNO                     NO. COUNT LINE IF ENDS WITH NL
         BAL   RLINK,SMCALL             COUNT A LINE
         CLI   TSBUFR,NLCHAR            WAS LAST CHAR A NL
         BE    SWNL                     IF SO, CHANGE TO CR
         B     JUSTETX                  ELSE, JUST ADD ETX
ASNO     EQU   *
         CLI   TSBUFR,NLCHAR            WAS LAST CHAR NL
         BNE   END60                    NO. IS MORE ROOM  THIS LINE
         BAL   RLINK,SMCALL             COUNT A LINE
         B     SWNL                     THEN CHANGE NL TO CR
         SPACE
*  END OF MESSAGE. LAST CHAR NOT A NL.
EOLEOM   EQU   *
         NC    LINE,LINE                END OF A LINE
         BNZ   AYW00070                 SUCCESSFUL COMPLETION
         BAL   RLINK,SMCALL             COUNT LINE
         TM    AVTPARM3+TWO,DCTLOCAL    LOCAL 2260             @G36XRYP
         BO    EOL01                    YES, BRANCH
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN BUFFER
         BZ    AYW00080                 EXIT
         BAL   RLINK,INSNL              YES. PUT IN NL AND IDLES NOW
EOL01    EQU   *
         BAL   RLINK,SNDIDLES           INSERT IDLES
         B     AYW00070                 SUCCESSFUL COMPLETION
         SPACE
MOREDA   EQU   *
         NC    LINE,LINE                WAS THIS END OF LINE
         BNZ   NOTEND                   BRANCH ON NO
         BAL   RLINK,SMCALL             COUNT LINE
         TM    AVTPARM3+THREE,DCTNOIDL  2260 REMOTE            @G36XRYP
         BO    MOREA                    YES, BRANCH
         TM    AVTPARM3+TWO,DCTLOCAL    2260 LOCAL             @G36XRYP
         BZ    MDA1                     NO, BRANCH
         MVI   CARCT+ONE,ZERO
         B     AYW00080                 EXIT
MDA1     EQU   *
         BAL   RLINK,INSNL              INSERT NEW LINE
         BAL   RLINK,SNDIDLES           ADD IDLES
         B     AYW00080                 EXIT
MOREA    EQU   *
         BAL   RLINK,INSETX             ADD ETX FOR REMOTE
         MVI   CARCT+ONE,ZERO
         B     AYW00080                 EXIT
NOTEND   EQU   *
         TM    QCBRETCT,QCBDEND
         BZ    MDA2                     NOT SPECIAL CASE
         NI    QCBRETCT,NOT-QCBDEND     TURN OFF FLAG
         TM    AVTPARM3+TWO,DCTTWX      IS IT TWX              @G36XRYP
         BZ    AYW00090                 NO, EXIT
         MVI   0(RTCBUF),LF             LF AS LAST IN BUFFER
         BAL   RLINK,MVD1               COUNT IT
         B     AYW00090                 EXIT NOT ALL
MDA2     EQU   *
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT
         BZ    AYW00090                 NO, EXIT
MDA3     EQU   *
         TM    FLAG1,TRAILER            IS A TRAILER BFR PRESENT
         BZ    AYW00090                 INCOMPLETE RETURN
         L     RTSBUF,BUFFTRLR-ONE      YES. GET ITS ADDRESS
         LA    RTSBUF,ZERO(,RTSBUF)     CLEAR HIGH BYTE
         ST    RTSBUF,TSCURR            STORE AS CURRENT BUFFER
         LR    RTIOC,RTSBUF             SAVE START ADDRESS OF BUF
         B     SENDTSO                  CONTINUE  EDIT
         SPACE
SMCALL   EQU   *
         STM   RLINK,RRTN,AVTDOUBL      SAVE REGISTERS
         L     RRTN,AVTTSOPT            POINT TO WORK AREA
         USING IEDQTSI,RRTN
         L     RRTN,TSISIMAT            ADDR OF SIM ATTN ROUTINE
         DROP  RRTN
         LA    RRTN,0(,RRTN)            SEE IF SIM ATTN USED
         LTR   RRTN,RRTN                SIM ATTN SPECIFIED
         BZ    NOGO                     NO SIM ATTN
         BAL   RLINK,SIXTEEN(RRTN)      CALL IEDAYS
NOGO     EQU   *
         LM    RLINK,RRTN,AVTDOUBL      RESTORE REGISTERS
         BR    RLINK                    RETURN
QTIPR    EQU   *
         STM   ZERO,ONE,AVTDOUBL        SAVE
         STM   FOURTEEN,FIFTEEN,AVTSAVE2 REGISTERS
         LH    RRTN,MOVED               DATA MOVED
         TM    QCBRETCT,QCBDEND         WAS THIS MSG=BUF CASE
         BZ    QTIP01                   NO
         BCTR  RRTN,ZERO                LEAVE ONE IF BUFFER TO GET BACK
QTIP01   EQU   *
         XC    MOVED,MOVED              NONE MOVED NEXT BFR YET
************************************************************** @G36XRYP
*        CHANGE DATA OFFSET AND LENGTH FIELD IN THE TSO BUFFER @G36XRYP
************************************************************** @G36XRYP
         SR    R0,R0                    CLEAR REG FOR IC       @G36XRYP
         IC    R0,BUFFOFST              GET OFFSET TO DATA     @G36XRYP
         AR    R0,RRTN                  ADD LENGTH OF TEXT     @G36XRYP
*                                       MOVED                  @G36XRYP
         STC   R0,BUFFOFST              STORE UPDATED OFFSET   @G36XRYP
         IC    R0,BUFFLNTH              GET DATA LENGTH        @G36XRYP
         SR    R0,RRTN                  ADJUST BY AMOUNT MOVED @G36XRYP
         STC   R0,BUFFLNTH              STORE UPDATED LENGTH   @G36XRYP
         LM    ZERO,ONE,AVTDOUBL        RESTORE
         LM    FOURTEEN,FIFTEEN,AVTSAVE2 REGISTERS
         BR    RLINK                    RETURN
         SPACE
F8       DC    F'8'                     STCB OFFSET
VEDIT    DC    A(EDIT)                  EDIT SUBROUTINE
K15      DC    F'15'                    HEX 15
         SPACE
**  RNDX HAS AMOUNT OF DATA TO BE MOVED. RTSBUF/RTCBUF ARE MOVE ADDR
EDIT     EQU   *
         ST    RLINK,AVTDOUBL+FOUR      SAVE REGISTERS
         TM    QCBRETCT,QCBDEND         WAS TCAM SIZE REDUCED
         BZ    ED02                     NO
         LA    RNDX,ONE(,RNDX)          YES. ADD IT BACK TO EDIT
ED02     EQU   *
         LR    RTEMP,RNDX               SAVE COUNT
         XC    DEND(FOUR),DEND
         BCTR  RNDX,ZERO                REDUCE FOR EX
         EX    RNDX,MOVDATA             MOVE DATA
*  BEFORE POINTERS ARE UPDATED, CHECK CHARACTERS JUST MOVED FOR
*  VALIDITY. IN EDIT OR ASIS MODE, AN EOT OR EOB WILL BE REPLACED.
*  IN EDIT MODE ONLY WILL CERTAIN CHARACTERS BE REPLACED. THESE ARE
*  BYPASS, RESTORE, HORIZONTAL TABS AND NL CHARACTERS. THEY WILL BE
*  OVERSTORED WITH THE COLON (:). IN ASIS OR EDIT MODE, THE TCAM
*  TRANSLATION TABLES WILL TRANSLATE UPPRINTABLE CHARACTERS TO SOME
*  PRINTABLE CHARACTER TO AVOID PROGRAM-CAUSED I/O ERRORS.
         SPACE
         LR    RTEMPA,RTCBUF
         TM    WFLGS,CONTROLM           CONTROL MODE
         BO    REDUC                    BRANCH YES
LOOPY    EQU   *
         CLI   0(RTEMPA),X'3F'          IN CONTROL RANGE
         BH    LOOPX                    NO
CTAB     EQU   *
         CLI   0(RTEMPA),EOT
         BE    REPLCH                   REPLACE WITH COLON
         CLI   0(RTEMPA),LC             DOWN SHIFT
         BE    CTAB1                    YES, BRANCH
         TM    WFLGS,TSOASIS            ASIS MODE?
         BZ    NOIS                     NO
         CLI   0(RTEMPA),IDLECHAR       IDLE
         BE    CTAB1                    YES, BRANCH
         CLI   0(RTEMPA),LF             ALSO LET LINE FEED GO
         BE    CTAB1                    YES, BRANCH
         CLI   ZERO(RTEMPA),NLCHAR      NL ASIS STAYS
         BE    CTAB2                    NL ASIS WILL BE ALLOWED
NOIS     EQU   *
         CLI   0(RTEMPA),BSP            BACKSPACE CAN GO IN EITHER MODE
         BE    TESTBS                   DEPENDS ON CHAR DEL CHAR
         CLI   0(RTEMPA),RES            RESTORE CHAR
         BE    CMOD                     OK FOR ASIS, OUT FOR EDIT
         CLI   0(RTEMPA),BYP
         BE    CMOD                     OK FOR ASIS, OUT FOR EDIT
         CLI   0(RTEMPA),PRE
         BE    CMOD                     OK FOR ASIS, OUT FOR EDIT
         CLI   0(RTEMPA),HTAB           HORIZONTAL TAB
         BE    CMOD                     YES, BRANCH
         CLI   0(RTEMPA),CR             IF CR, REPLACE WITH NL
         BE    REPLCR                   YES, BRANCH
         CLI   0(RTEMPA),NLCHAR         IF NL, IS SPECIAL
         BE    CKNL                     YES, BRANCH
         B     REPLCH                   REPLACE ANY OTHER IN CTL RANGE
         SPACE
CTAB1    EQU   *
         TM    AVTPARM,THREE            2260
         BM    REPLCH                   YES, BRANCH
         B     NOTAB                    LET GO BUT NON-PRINT   @SA69640
         EJECT
CTAB2    EQU   *
         TM    AVTPARM3+THREE,DCTNOIDL  IS THIS 2260 REMOTE    @G36XRYP
         BO    CTAB3                    B YES TO RPLACE WITH CR
         TM    AVTPARM3+TWO,DCTTWX      OR IS IT TWX           @G36XRYP
         BZ    LOOPX                    OTHERS GO AS IS
CTAB3    EQU   *
         MVI   ZERO(RTEMPA),CR          OVERLAY FOR TWX/2260R
         B     LOOPX                    THEN RETURN TO MAIN CODES
         SPACE
TESTBS   EQU   *
         TM    AVTPARM,THREE            2260?
         BM    REPLCH                   YES, BRANCH
         TM    AVTPARM3+TWO,DCTTWX      IS THIS TWX DATA?      @G36XRYP
         BO    REPWID                   NO BSP FOR TWX. REPLACE W/IDLE
         LH    RLINK,DEND+TWO           COUNT NOT PRINT = 2
         LA    RLINK,TWO(,RLINK)
         STH   RLINK,DEND+TWO
LOOPX    EQU   *
         LA    RTEMPA,ONE(,RTEMPA)      STEP TO NEXT CHAR
         BCT   RTEMP,LOOPY              SEE IF ANY MORE
BACK     EQU   *
         BAL   RLINK,UPDATE             UPDATE COUNTS, POINTERS, ETC.
         L     RLINK,AVTDOUBL+FOUR      RETRIEVE RETURN ADDR
         BR    RLINK                    RETURN
REPWID   EQU   *
         MVI   ZERO(RTEMPA),IDLECHAR    OVERLAY BSP W/IDLE
         LH    RLINK,DEND+TWO           NO PRINT COUNT
         LA    RLINK,ONE(,RLINK)        UPDATE BY ONE
         STH   RLINK,DEND+TWO           REPLACE IT
         B     LOOPX                    RESUME SCAN
         SPACE
CMOD     EQU   *
         TM    AVTPARM,THREE            2260
         BM    REPLCH                   YES, BRANCH
         TM    WFLGS,TSOASIS            EDIT OR ASIS
         BZ    REPLCH                   EDIT MODE. REPLACE IT
         CLI   0(RTEMPA),HTAB           WAS THIS TAB
         BNE   NOTAB                    NO, BRANCH
*  HORIZONTAL TAB. LET IT GO BUT DO NOT CHANGE NON/PRINT COUNT
         OI    SAVX1,ONE                FLAG FOR UPDATE SUBROUTINE
         B     LOOPX                    CHECK NEXT
NOTAB    EQU   *                        NON PRINT TYPE
*  ASIS MODE. LET IT GO BUT ADD TO NON-PRINT COUNT FOR LINE.
         LH    RLINK,DEND+TWO           NON-PRINT COUNT
         LA    RLINK,ONE(,RLINK)        ADD ONE
         STH   RLINK,DEND+TWO
         B     LOOPX                    CONTINUE SCAN
         SPACE
*  EDIT MODE. REPLACE WITH COLON.
         SPACE
REPLCH   EQU   *
         MVI   ZERO(RTEMPA),COLON       REPLACE CHAR IN TCAM
         B     LOOPX                    CHECK NEXT
         SPACE
CKNL     EQU   *
         BCT   RTEMP,CKLST              WAS THIS LAST CHARACTER
*   NL WAS LAST. IF NOT END OF LINE AND NOT END OF MSG, REPLACE IT
         LA    RTEMP,ONE                RESTORE INDEX
         CLI   SWT2,TWELVE              END OF LINE
         BE    LOOPX                    YES
         LH    RLINK,BLNTH              GET DATA LENGTH
         SR    RLINK,RNDX               SUBTRACT MOVED
         BCTR  RLINK,ZERO               SUBTRACT ONE
         LTR   RLINK,RLINK              LAST CHAR
         BNZ   REPLCH                   NO, BRANCH
         L     RLINK,TSBUFR             ADDRESS OF FIRST TS BUFFER
         TM    BUFFFL1-BUFFFL1(RLINK),BUFFHDR      WAS IT BUFFER
         BZ    LOOPX                    NO. ASSUME THAT THIS IS THE
*                                       END OF THE MSG AFTER OWAIT
         TM    BUFFFL2-BUFFFL1(RLINK),BUFFPART SEE IF PARTIAL MSG
         BZ    CKNL01                   NO, BRANCH
         NI    WFLGS,NOT-TSOASIS        RESET FLAG
         B     LOOPX                    CHECK NEXT
CKNL01   EQU   *
         TM    BUFFFL1,BUFFNLCR         SEE IF END OF MSG
         BO    LOOPX                    YES, CHECK NEXT
         B     REPLCH                   REPLACE
CKLST    EQU   *
         LA    RTEMP,ONE(,RTEMP)        RESTORE COUNT
         B     REPLCH                   REPLACE
REDUC    EQU   *
         TM    AVTPARM3+TWO,DCTLOCAL    IS IT 2260 L           @G36XRYP
         BZ    REDUC01                  NO, BRANCH
         LTR   RNDX,RNDX                CHECK FOR 1 CHAR MSG
         BNZ   REDUC02                  MORE THAN 1
*  PROBABLY TCLEARQ TPUT CTRL 1 IDLE. MAKE IT A COLON.
         MVI   ZERO(RTCBUF),COLON       INSERT COLON
         B     LOOPY                    CHECK NEXT
REDUC02  EQU   *
         BCTR  RNDX,ZERO                SUBTRACT ONE
         MVI   ZERO(RTCBUF),COLON       PUT IN A COLON
         EX    RNDX,MOVIDL              PROPAGATE ALL
         LA    RNDX,ONE(,RNDX)          RESET INDEX
         B     LOOPY                    CHECK NEXT
REDUC01  EQU   *
         EX    RNDX,CTLTR               TEST CONTROL CHARS
         LR    RRTN,RTEMP               CHAR COUNT
CTLOOP   EQU   *
         CLI   ZERO(RTEMPA),COLON       IS CHAR COLON
         BNE   NOPRINT                  NO, BRANCH
         BCTR  RRTN,ZERO                REDUCE NON-PRINT COUNT
NOPRINT  EQU   *
         LA    RTEMPA,ONE(,RTEMPA)      STEP TO NEXT
         BCT   RTEMP,CTLOOP             COUNT TEST
         STH   RRTN,DEND+TWO            STORE NON-PRINT COUNT
         B     BACK                     LOOP BACK
         SPACE
REPLCR   EQU   *
         MVI   ZERO(RTEMPA),NLCHAR      MAKE CR=NL
         B     CKNL                     NOW SEE IF IT WAS VALID
         SPACE
MOVDATA  MVC   ZERO(ZERO,RTCBUF),ZERO(RTSBUF) MOVE DATA
MOVIDL   MVC   ONE(ZERO,RTCBUF),ZERO(RTCBUF) PROPAGATE THE REST
CTLTR    TR    ZERO(ZERO,RTEMPA),CTLTBL TRANSLATE DATA
CTLTBL   EQU   *
         DC    CL1':'                   C
         DC    XL4'01020304'            *O
         DC    CL1':'                   **N
         DC    XL2'0607'                ***T
         DC    6CL1':'                  ****R
         DC    XL2'0E0F'                *****O
         DC    CL1':'                   ******L
         DC    XL1'11'                  *
         DC    2CL1':'                  T
         DC    XL1'14'                  *A
         DC    2CL1':'                  **B
         DC    XL1'17'                  ***L
         DC    12CL1':'                 ****E
         DC    XL1'24'                  *
         DC    2CL1':'                  C
         DC    XL1'27'                  *H
         DC    7CL1':'                  **E
         DC    XL1'2F'                  ***C
         DC    4CL1':'                  ****K
         DC    XL3'343536'              *
         DC    9CL1':'                  *
         DC    192CL1':'                REST GET COLON
AYWPATCH DC    10F'0'                   PATCH AREA
         SPACE
         EJECT
GMAIN    DSECT
TSBUFR   DS    F                        TSO BUF OR MSGGEN ADDRESS
TCBUFR   DS    F                        TCAM/SCB ADDRESS
MOVED    DS    H                        DATA MOVED
LINE     DS    H                        LINE SIZE REMAINING
BLNTH    DS    H                        TSO BUFFER DATA SIZE
MSGLEN   DS    H                        MESSAGE SIZE
WBUFSZ   DS    H                        TCAM BUFFER SIZE
*                                                                     *
CARCT    DS    H                        QCBCARCT
*                             BIT DEFINITIONS                         *
SBASCND  EQU   X'F0'                    SECOND ENTRY OFFSET
CUR1SCND EQU   X'F1'                    SECOND ENTRY OFFSET
CUR2SCND EQU   X'F2'                    SECOND ENTRY OFFSET
STFDSCND EQU   X'F3'                    SECOND ENTRY OFFSET
RDATSCND EQU   X'F4'                    SECOND ENTRY OFFSET
INCSCND  EQU   X'F5'                    SECOND ENTRY OFFSET
ETXSCND  EQU   X'F6'                    SECOND ENTRY OFFSET
EOTSCND  EQU   X'F7'                    SECOND ENTRY OFFSET
*                                                                     *
LINESV   DS    H                        FROM TSB OR DEFAULT
*                                                                     *
LINENUM  EQU   LINESV                   DISPLAY NUMBER OF LINES
LINESIZE EQU   LINESV+1                 DISPLAY LINE SIZE
*                                                                     *
SWT1     DS    X                        SWITCH 1
*                             BIT DEFINITIONS                         *
CUR2FLAG EQU   X'80'                    SECOND CURSOR FLAG
CUR1FLAG EQU   X'40'                    FIRST CURSOR FLAG
RDATTNLF EQU   X'20'                    READ ATTRIBUTE BYTE FLAG
SFATTSW  EQU   X'10'                    START FIELD FLAG
BYPFLAG  EQU   X'08'                    BYPASS FLAG
CRNL     EQU   X'04'                    CARRIAGE RETURN/NEWLINE FLAG
SBAENDSW EQU   X'02'                    SET BUFFER ADDRESS FLAG
INCSW    EQU   X'01'                    INSERT CURSOR FLAG
*                                                                     *
SWT2     DS    X                        SWITCH 2
*                             BIT DEFINITIONS                         *
RETCOD4  EQU   4                        CALCSIZE RETURN CODE 4
RETCOD8  EQU   8                        CALCSIZE RETURN CODE OF 8
RETCOD12 EQU   12                       CALCSIZE RETURN CODE OF 12
RETCOD16 EQU   16                       CALCSIZE RETURN CODE OF 16
RETCOD40 EQU   40                       CALCSIZE RETURN CODE NO ROOM
*                                                                     *
WFLGS    DS    H                        TSO FLAGS
*                             BIT DEFINITIONS                         *
TSOMSG   EQU   X'80'                    TSO ENTRY
CONTROLM EQU   X'40'                    CONTROL MODE
TSOASIS  EQU   X'20'                    TSO TPUT ASIS
FRSTMGEN EQU   X'10'                    FIRST MSGGEN IND
NOLEFT   EQU   X'06'                    NO LEFT JUSTIFICATION REQUEST
LEFT     EQU   X'05'                    LEFT JUSTIFICATION REQUEST
*                                                                     *
SAVX1    DS    H                        SCREEN CURSOR ADDRESS
*                                                                     *
FLAG1    DS    X                        FLAG BYTE 1
*                             BIT DEFINITIONS                         *
TRAILER  EQU   X'80'                    TRAILER BUFFER FLAG
FLASHBCK EQU   X'40'                    FLASHBACK REQUESTED FLAG
RESTSW   EQU   X'20'                    RESTORE CHAR FLAG      @SA73817
RECALC   EQU   X'10'                    USED LOCALLY IN AYB.   @SA75159
*                                       BYPASS CODE AND RESET  @SA75159
EOTSW    EQU   X'02'                    EOT FLAG
ETXSW    EQU   X'01'                    ETX FLAG
*                                                                     *
FLAG2    DS    X                        FLAG BYTE 2
*                             BIT DEFINITIONS                         *
X3705    EQU   X'80'                    TERMINAL ON A 3705
X1050    EQU   X'40'                    DEVICE IS A 1050
NLCRFLAG EQU   X'10'                    NL/CR COUNT FLAG
NWLNCNT  EQU   X'08'                    LINE COUNT FLAG
CARRDATT EQU   X'04'                    READ ATTRIBUTE LINE POS FLAG
HEADERFG EQU   X'02'                    FIRST BASIC UNIT FLAG
NOMOVECT EQU   X'01'                    NO MOVECOUNT FLAG
*                                                                     *
SAVX2    DS    H                        FIRST/LAST CHARACTER
TOR      DS    F                        DATA COUNT
FROMR    DS    F                        DATA COUNT MOVED
TSCURR   DS    F                        CURRENT TSO BUFFER
MSGNLNTH DS    H                        LENGTH OF MSGGEN DATA
DEND     DS    D                        DOUBLE SAVE
SIZE     EQU   *-GMAIN                  LENGTH OF WORKAREA
         EJECT
         IKJTIOCB
         SPACE
         IKJTIOCP
         SPACE
         TTNTD
         SPACE
         TTSID
         TPRFD
         TLCBD
         TQCBD
         TSCBD
         TDCTD
AYOSRCE  EQU   SCBSRCE+16               CONFORM WITH IEDAYO
         TAVTD
         IKJTSB
         TPRIOR
         SPACE
TSOPART  EQU   X'40'
         END
