         TITLE 'IEDIAQ - 3705 RESOURCE SEND SCHEDULER                  *
                        '
IEDIAQ   CSECT ,                                                01S0001
@PROLOG  DS    0H                                               01S0002
*                                    /*
         DC    AL2(LCBSCAN-IEDIAQ)      OFFSET OF LCBSCAN
         USING IEDIAQ,RBASE             INFORM THE ASSEMBLER OF THE
*                                       REGISTER TO BE USED FOR
*                                       ADDRESSING CODE
*   RBASE=AVTSEND-OFFIAQ;           /* SET BASE REGISTER TO START OF
*                                      CSECT                         */
         L     RBASE,AVTSEND(,RAVT)                             02S0438
         BCTR  RBASE,0                                          02S0438
         BCTR  RBASE,0                                          02S0438
*   GEN NOREFS NOSETS;                                          02S0439
*                                    /*
IEDIAQ   IEDHJN AFTERHJN                MODULE IDENTIFICATION MACRO
*                                                               02S0440
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: DETERMINE THE TYPE OF INPUT. IF A QCB, THEN CALL     */
*   /* LCBSCAN1. IF AN PLCB OR ERB, THEN SEND SCHEDULER CODE IS      */
*   /* EXECUTED. OTHERWISE, THE INPUT IS A BUFFER AND LCBSCAN1 IS    */
*   /* CALLED IF INITIATE MODE IS SET.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0440
*   RSTATE=NOSTATE;                 /* INITIALIZE STATE VALUES       */
         SLR   RSTATE,RSTATE                                    02S0440
*   IF RPARM->QCBSTVTO=DSPSEND THEN /* TEST FOR ENTRY WITH QCB       */
         CLI   QCBSTVTO(RPARM),34                               02S0441
         BNE   @RF00441                                         02S0441
*     DO;                           /* ENTRY IS WITH QCB             */
*       IF QCBTSSES=ON THEN         /* TEST FOR TSO SESSION          */
         TM    QCBTSSES(RQCB),B'10000000'                       02S0443
         BNO   @RF00443                                         02S0443
*         DO;                       /* TSO SESSION                   */
*           RSTATE=STQCBTSO;        /* INDICATE QCB IN TSO SESSION   */
         LA    RSTATE,2                                         02S0445
*           QCBPOSTO=OFF;           /* RESET QCB POSTED              */
         NI    QCBPOSTO(RQCB),B'11011111'                       02S0446
*         END;                                                  02S0447
*       CALL LCBSCAN1;              /* CALL LCBSCAN AT INTERNAL ENTRY
*                                      POINT                         */
@RF00443 BAL   @14,LCBSCAN1                                     02S0448
*       RETADDR=ADDR(DSPDISP);      /* RETURN TO DISPATCHER          */
         LA    @10,DSPDISP(,RDISP)                              02S0449
         ST    @10,RETADDR                                      02S0449
*     END;                                                      02S0450
*   ELSE                            /* ENTRY NOT WITH QCB            */
*     IF RPARM->PRFTICON=ON THEN    /* IF ENTRY WITH A BFR   @YM04602*/
         B     @RC00441                                         02S0451
@RF00441 TM    PRFTICON(RPARM),B'00001000'                      02S0451
         BNO   @RF00451                                         02S0451
*       DO;                         /* ENTRY WITH A BUFFER   @YM04602*/
*         RPRF=RPARM;               /* SAVE BUFFER ADDRESS           */
         LR    RPRF,RPARM                                       02S0453
*         RLCB=PRFLCB;              /* GET PLCB ADDR FROM THE BUFFER */
         L     RLCB,PRFLCB-1(,RPRF)                             02S0454
         LA    RLCB,0(,RLCB)                                    02S0454
*         IF LCBINITN=ON&           /* INITIATE MODE ...     @YM06986*/
*             QCBTSQ=OFF THEN       /* ... BUT DEST DOESN'T HAVE TSO
*                                      QUEUES                @YM06986*/
         TM    LCBINITN(RLCB),B'00010000'                       02S0455
         BNO   @RF00455                                         02S0455
         TM    QCBTSQ(RQCB),B'10000000'                         02S0455
         BNZ   @RF00455                                         02S0455
*           DO;                     /* YES, INITIATE MODE    @YM06485*/
*             SAVERPRF=RPRF;        /* SAVE BUFFER ADDRESS   @YM06485*/
         ST    RPRF,SAVERPRF                                    02S0457
*             CALL LCBSCAN1;        /* YES, CALL LCBSCAN AT INTERNAL
*                                      ENTRY POINT                   */
         BAL   @14,LCBSCAN1                                     02S0458
*             RPRF=SAVERPRF;        /* RESTORE BUFFER ADDRESS   02S0459
*                                                            @YM06485*/
         L     RPRF,SAVERPRF                                    02S0459
*           END;                    /*                       @YM06485*/
*         RSTCB=QCBSLINK;           /* GET NEXT STCB                 */
@RF00455 L     RSTCB,QCBSLINK-1(,RQCB)                          02S0461
         LA    RSTCB,0(,RSTCB)                                  02S0461
*         RPARM=RPRF;               /* PASS BUFFER AS THE ELEMENT    */
         LR    RPARM,RPRF                                       02S0462
*         RETADDR=ADDR(DSPBYPAS);   /* SET RETURN TO BYPASS ENTRY OF
*                                      DISPATCHER                    */
         LA    @10,DSPBYPAS(,RDISP)                             02S0463
         ST    @10,RETADDR                                      02S0463
*       END;                                                    02S0464
*     ELSE                          /* ELSE ENTRY IS WITH AN ERB OR
*                                      PLCB                  @YM04602*/
*       DO;                         /* ENTRY WITH ERB OR PLCB   02S0465
*                                                            @YM04602*/
         B     @RC00451                                         02S0465
@RF00451 DS    0H                                               02S0466
*         RLCB=RQCB;                /* RQCB POINTS TO THE PLCB       */
         LR    RLCB,RQCB                                        02S0466
*                                                               03S0467
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.SENDSCH: SEND SCHEDULER PROPER - DETERMINE      */
*         /* AVAILABILITY OF MESSAGE TO SEND AND THE AVAILABILITY OF */
*         /* RESOURCES FOR SENDING THE MESSAGE.                      */
*         /*                                                         */
*         /***********************************************************/
*                                                               03S0467
*                                                               04S0467
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.SENDSCH.SETUP: GET THE TERMINAL ENTRY ADDRESS   */
*         /* FOR THE TERMINAL WHICH OWNS THE PLCB. SAVE THE STATUS   */
*         /* INFORMATION AND SET SENDING IN THE PLCB.                */
*         /*                                                         */
*         /***********************************************************/
*                                                               04S0467
*         RPARM=LCBTTCIN;           /* GET TNT OFFSET                */
         LH    RPARM,LCBTTCIN(,RLCB)                            04S0467
         N     RPARM,@CF02297                                   04S0467
*         CALL IEDQTNT;             /* GET TERM ENTRY ADDRESS        */
         L     @15,AVTRNMPT(,RAVT)                              04S0468
         BALR  @14,@15                                          04S0468
*         RTRM=RPARM-LENGTH(IEDNTRM);/* SAVE TERM ENTRY ADDRESS      */
         LR    RTRM,RPARM                                       04S0469
         SL    RTRM,@CF01880                                    04S0469
*         RQCB=TRMDESTQ;            /* SET DESTINATION QCB ADDRESS   */
         SLR   RQCB,RQCB                                        04S0470
         ICM   RQCB,7,TRMDESTQ(RTRM)                            04S0470
*         SAVSTAT1=LCBSTAT1;        /* SAVE CURRENT STATUS           */
         MVC   SAVSTAT1(1),LCBSTAT1(RLCB)                       04S0471
*         LCBRCLLN=OFF;             /* RESET ALL ...                 */
         NI    LCBRCLLN(RLCB),B'01111111'                       04S0472
*         LCBCTLMD=OFF;             /* ... OF LCBSTAT1 ...           */
         NI    LCBCTLMD(RLCB),B'11111101'                       04S0473
*         LCBINITN=OFF;             /* .... EXCEPT ...               */
*         LCBCONT=OFF;              /* ..... LCBOCNI ...             */
*         LCBFREEN=OFF;             /* ...... AND ...                */
*         LCBRECVN=OFF;             /* ....... LCBSENDN              */
*         LCBSENDN=ON;              /* SET SENDING IN THE PLCB       */
         OI    LCBSENDN(RLCB),B'00000001'                       04S0478
         NI    LCBINITN(RLCB),B'11100001'                       04S0478
*         IF QCBSCHDL=ON×           /* TEST FOR RECEIVE BEFORE SEND
*                                      ...                           */
*             (TRMSTPND=ON&         /* ... OR STATUS PENDING ...
*                                                            @YM05724*/
*             TRMSNA=OFF) THEN      /* ... FOR PRESNA        @YM05724*/
         TM    QCBSCHDL(RQCB),B'00000100'                       03S0479
         BO    @RT00479                                         03S0479
         TM    TRMSTPND(RTRM),B'10000000'                       03S0479
         BNO   @RF00479                                         03S0479
         TM    TRMSNA(RTRM),B'00000010'                         03S0479
         BNZ   @RF00479                                         03S0479
@RT00479 DS    0H                                               03S0480
*           RSTATE=STBYPAS;         /* YES, REQUEST BYPASS STATE     */
         LA    RSTATE,1                                         03S0480
*         ELSE                      /* NO STATUS PENDING             */
*           DO;                                                 03S0481
         B     @RC00479                                         03S0481
@RF00479 DS    0H                                               03S0482
*                                                               04S0482
*             /*******************************************************/
*             /*                                                     */
*             /* PROCESS.SENDSCH.CHKLOCK: PERFORM SEND SCHEDULING IF */
*             /* IN LOCK MODE.                                       */
*             /*                                                     */
*             /*******************************************************/
*                                                               04S0482
*             RSCB=LCBSCBA;         /* SET SCB ADDRESS               */
         L     RSCB,LCBSCBA-1(,RLCB)                            04S0482
         LA    RSCB,0(,RSCB)                                    04S0482
*             IF SCBLCK1N=ON×       /* TEST FOR ...                  */
*                 SCBMSGLN=ON THEN  /* ... LOCK MODE                 */
         TM    SCBLCK1N(RSCB),B'00101000'                       04S0483
         BZ    @RF00483                                         04S0483
*               DO;                 /* LOCK MODE                     */
*                 IF SCBMSGLN=OFF THEN/* TEST FOR EXTENDED LOCK      */
         TM    SCBMSGLN(RSCB),B'00001000'                       04S0485
         BNZ   @RF00485                                         04S0485
*                   IF SAVRECVN=OFF THEN/* TEST RECEIVING STATUS IN
*                                      SAVED LCBSTAT1                */
         TM    SAVRECVN,B'00000010'                             04S0486
         BNZ   @RF00486                                         04S0486
*                     RSTATE=STBYPAS;/* REQUEST BYPASS               */
         LA    RSTATE,1                                         04S0487
*                   ELSE                                        04S0488
*                     ;             /*                       @YM04622*/
@RF00486 DS    0H                                               04S0489
*                 ELSE              /* NOT EXTENDED LOCK             */
*                   QCBLKRLN=''B;   /* RESET LOCK RLN                */
         B     @RC00485                                         04S0489
@RF00485 MVI   QCBLKRLN(RQCB),X'00'                             04S0489
*                 IF RSTATE=NOSTATE THEN/* TEST FOR NO STATE SET
*                                                            @YM04622*/
@RC00485 SLR   @10,@10                                          04S0490
         CR    RSTATE,@10                                       04S0490
         BNE   @RF00490                                         04S0490
*                   IF QCBLKRRN^=0 THEN/* TEST FOR A LOCK MSG        */
         L     @09,QCBLKRRN-1(,RQCB)                            04S0491
         LA    @09,0(,@09)                                      04S0491
         CR    @09,@10                                          04S0491
         BE    @RF00491                                         04S0491
*                     DO;           /* PROCESS THE LOCK MESSAGE      */
*                       RSTATE=STSEND;/* REQUEST SEND STATE          */
         LA    RSTATE,5                                         04S0493
*                       SCBSCHDR=QCBLKRRN;/* SET CURRENT HEADER BEING
*                                      SENT                          */
         STCM  @09,7,SCBSCHDR(RSCB)                             04S0494
*                       SCBFEFO=0;  /* RESET SAVED FEFO POINTER      */
         STCM  @10,7,SCBFEFO(RSCB)                              04S0495
*                       QCBSDFFO=ON;/* CURRENTLY SENDING FEFO MSG    */
         OI    QCBSDFFO(RQCB),B'00000100'                       04S0496
*                     END;                                      04S0497
*               END;                                            04S0498
@RF00491 DS    0H                                               04S0498
@RF00490 DS    0H                                               04S0499
*             IF RSTATE=NOSTATE THEN/* TEST FOR NO STATE SET         */
@RF00483 LTR   RSTATE,RSTATE                                    03S0499
         BNZ   @RF00499                                         03S0499
*               DO;                 /* NO STATE IS SET               */
*                                                               04S0501
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.SENDSCH.CHKBYPAS: IF AN ELEMENT IS ON   */
*                 /* THE PIU WAIT CHAIN FOR WHICH A RESPONSE IS NOT  */
*                 /* OWED TO RTR, THEN REQUEST A BYPASS. ALSO, IF THE*/
*                 /* TERMINAL IS IN MIDDLE OF MESSAGE OR MESSAGE     */
*                 /* LIMIT HAS BEEN REACHED ON OUTPUT, THEN REQUEST A*/
*                 /* BYPASS.                                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0501
*                 IF LCBWAITC^=0 THEN/* TEST FOR AN ELEMENT ON THE
*                                      PIU WAIT CHAIN                */
         L     @10,LCBWAITC-1(,RLCB)                            04S0501
         LA    @10,0(,@10)                                      04S0501
         LTR   @10,@10                                          04S0501
         BZ    @RF00501                                         04S0501
*                   IF LCBRTRRO=ON  /* TEST FOR A RESPONSE OWED TO
*                                      RTR                           */
*                     THEN                                      04S0502
         TM    LCBRTRRO(RLCB),B'00000100'                       04S0502
         BO    @RT00502                                         04S0502
*                     ;             /* RESPONSE IS OWED              */
*                   ELSE            /* NO RESPONSE OWED              */
*                     RSTATE=STBYPAS;/* REQUEST BYPASS               */
         LA    RSTATE,1                                         04S0504
*                 IF SCBBFMM=ON×    /* MIDDLE OF MSG OR ...          */
*                     (SCBMLMTN=ON&SAVRECVN=OFF)×/* ... MSG LIMIT ON
*                                      OUTPUT OR             @YM09046*/
*                     TRMNOSND=ON THEN/* ... 'NO SEND' REQUESTED     */
@RT00502 DS    0H                                               04S0505
@RF00501 TM    SCBBFMM(RSCB),B'00000001'                        04S0505
         BO    @RT00505                                         04S0505
         TM    SCBMLMTN(RSCB),B'00000001'                       04S0505
         BNO   @GL00004                                         04S0505
         TM    SAVRECVN,B'00000010'                             04S0505
         BZ    @RT00505                                         04S0505
@GL00004 TM    TRMNOSND(RTRM),B'00000010'                       04S0505
         BNO   @RF00505                                         04S0505
@RT00505 DS    0H                                               04S0506
*                   DO;                                         04S0506
*                     RFY                                       04S0507
*                       RUNIT RSTD; /* RESTRICT FOR CS LOOP  @YM07266*/
*                     RFY                                       04S0508
*                       RDISP UNRSTD;/* UNRESTRICT FOR CS LOOP  04S0508
*                                                            @YM07266*/
*                     SAVREG=RDISP; /* SAVE REGISTER 11      @YM07266*/
         ST    RDISP,SAVREG                                     04S0509
*                     TRMNOSND=OFF; /* RESET 'DO NOT SEND' INDICATOR */
         LA    @15,TRMNOSND(,RTRM)                              04S0510
         LR    @14,@15                                          04S0510
         LA    @09,3                                            04S0510
         NR    @14,@09                                          04S0510
         LCR   @14,@14                                          04S0510
         ALR   @15,@14                                          04S0510
         L     @09,0(,@15)                                      04S0510
@GL00007 LR    @05,@09                                          04S0510
         N     @05,@CB02301+3(@14)                              04S0510
         CS    @09,@05,0(@15)                                   04S0510
         BNE   @GL00007                                         04S0510
*                     RDISP=SAVREG; /* RESTORE REGISTER 11   @YM07266*/
         L     RDISP,SAVREG                                     04S0511
*                     RFY                                       04S0512
*                       RDISP RSTD; /*                       @YM07266*/
*                     RFY                                       04S0513
*                       RUNIT UNRSTD;/*                      @YM07266*/
*                     SCBMLMTN=OFF; /* RESET MESSAGE LIMIT ON OUTPUT */
         NI    SCBMLMTN(RSCB),B'11111110'                       04S0514
*                     RSTATE=STBYPAS;/* YES, REQUEST BYPASS          */
         LA    RSTATE,1                                         04S0515
*                   END;                                        04S0516
*                 IF RSTATE=NOSTATE THEN/* TEST FOR NO STATE SET     */
@RF00505 LTR   RSTATE,RSTATE                                    03S0517
         BNZ   @RF00517                                         03S0517
*                   DO;             /* NO STATE IS SET               */
*                     IF QCBTSSES=OFF THEN/* SKIP BUILDING RESET FOR
*                                      TSO SESSION                   */
         TM    QCBTSSES(RQCB),B'10000000'                       03S0519
         BNZ   @RF00519                                         03S0519
*                       DO;                                     03S0520
*                                                               04S0521
*                         /*******************************************/
*                         /*                                         */
*                         /* PROCESS.SENDSCH.CHKRESET: CHECK FOR     */
*                         /* CONDITIONS THAT REQUIRE A RESET. IF A   */
*                         /* RESET IS NEEDED AND A BUFFER IS         */
*                         /* AVAILABLE THEN REQUEST THAT A RESET BE  */
*                         /* SENT.                                   */
*                         /*                                         */
*                         /*******************************************/
*                                                               04S0521
*                         IF TRMSNA=OFF THEN/* NO RESET FOR SNA 04S0521
*                                      RESOURCES             @YM05724*/
         TM    TRMSNA(RTRM),B'00000010'                         04S0521
         BNZ   @RF00521                                         04S0521
*                           IF TRMINOUT=ON×/* IS AN INVITE      04S0522
*                                      OUTSTANDING           @YM04622*/
*                               (TRMRDOUT=ON&/* TEST FOR READ   04S0522
*                                      OUTSTANDING           @YM04622*/
*                               (DCTSTCTL=OFF×/* AND NOT A   @OY19456*/
*                               TRMDIAL=ON)) THEN/* POLLED TERMINAL
*                                                            @OY19456*/
         TM    TRMINOUT(RTRM),B'00000001'                       04S0522
         BO    @RT00522                                         04S0522
         TM    TRMRDOUT(RTRM),B'00000010'                       04S0522
         BNO   @RF00522                                         04S0522
         SLR   @15,@15                                          04S0522
         IC    @15,TRMCHCIN(,RTRM)                              04S0522
         BCTR  @15,0                                            04S0522
         MH    @15,AVTDCTLN(,RAVT)                              04S0522
         AL    @15,AVTCSTCS(,RAVT)                              04S0522
         TM    DCTSTCTL(@15),B'00010000'                        04S0522
         BZ    @RT00522                                         04S0522
         TM    TRMDIAL(RTRM),B'00001000'                        04S0522
         BNO   @RF00522                                         04S0522
@RT00522 DS    0H                                               04S0523
*                             DO;   /* RESET STATE                   */
*                               CALL GETBFR;/* GET A BUFFER          */
         BAL   @14,GETBFR                                       04S0524
*                               IF RSTATE=NOSTATE THEN/* TEST FOR NO
*                                      STATE                         */
         LTR   RSTATE,RSTATE                                    04S0525
         BNZ   @RF00525                                         04S0525
*                                 DO;                           04S0526
*                                   CALL BLDRESET;/* BUILD A RESET
*                                      COMMAND                       */
         BAL   @14,BLDRESET                                     04S0527
*                                   RSTATE=STFRELCB;/* REQUEST LCB BE
*                                      DEALLOCATED                   */
         LA    RSTATE,8                                         04S0528
*                                 END;                          04S0529
*                             END;                              04S0530
@RF00525 DS    0H                                               04S0531
*                       END;                                    03S0531
@RF00522 DS    0H                                               03S0531
@RF00521 DS    0H                                               03S0532
*                     IF RSTATE=NOSTATE THEN/* TEST FOR NO STATE SET */
@RF00519 LTR   RSTATE,RSTATE                                    03S0532
         BNZ   @RF00532                                         03S0532
*                       DO;         /* NO STATE IS SET               */
*                         IF AVTTSON=ON THEN/* IF TSO IN THE SYSTEM
*                                      THEN                  @YM09012*/
         TM    AVTTSON(RAVT),B'01000000'                        03S0534
         BNO   @RF00534                                         03S0534
*                           DO;     /* ... CALL TSO SCHEDULER   03S0535
*                                                            @YM08526*/
*                             IF QCBTSSES=ON THEN               03S0536
         TM    QCBTSSES(RQCB),B'10000000'                       03S0536
         BNO   @RF00536                                         03S0536
*                               DO; /* TSO SESSION           @OZ29322*/
*                                                               04S0538
*                                 /***********************************/
*                                 /*                                 */
*                                 /* PROCESS.SENDSCH.CHKTSO: HANDLE  */
*                                 /* TSO CONSIDERATIONS.     @YM08526*/
*                                 /*                                 */
*                                 /***********************************/
*                                                               04S0538
*                                 RFY                           04S0538
*                                   RSELECT RSTD;               04S0538
*                                 RSELECT=TSOA02;/* SELECT VALUE FOR
*                                      LCB POST ENTRY TO IEDAYJ      */
         LA    RSELECT,2                                        04S0539
*                                 CALL IEDAYJ;/* CALL IEDAYJ, TSO
*                                      SCHEDULER                     */
         L     @10,IEDTTPTR(,RAVT)                              04S0540
         L     @15,TSIRNSCH(,@10)                               04S0540
         BALR  @14,@15                                          04S0540
*                                 RFY                           04S0541
*                                   RRETCODE RSTD;              04S0541
*                                 IF RRETCODE=TSORMVSN THEN/* DOES
*                                      TSO REQUEST EXIT => REMOVE THE
*                                      SEND SCHEDULER                */
         LTR   RRETCODE,RRETCODE                                04S0542
         BNZ   @RF00542                                         04S0542
*                                   CALL RMVSCHED;/* YES, REMOVE SEND
*                                      SCHEDULER                     */
         BAL   @14,RMVSCHED                                     04S0543
*                                 ELSE                          04S0544
*                                   IF RRETCODE=TSODISP THEN/* DOES
*                                      TSO REQUEST EXIT TO TCAM 04S0544
*                                      DISPATCHER                    */
         B     @RC00542                                         04S0544
@RF00542 C     RRETCODE,@CF00255                                04S0544
         BNE   @RF00544                                         04S0544
*                                    RSTATE=STEXIT;/* YES, REQUEST
*                                      EXIT STATE                    */
         LA    RSTATE,3                                         04S0545
*                                   ELSE                        04S0546
*                                    IF RRETCODE=TSOTCAMS THEN/* DOES
*                                      TSO REQUEST NORMAL TCAM SEND
*                                      SCHEDULING                    */
         B     @RC00544                                         04S0546
@RF00544 C     RRETCODE,@CF00044                                04S0546
         BE    @RT00546                                         04S0546
*                                     ;/* YES, TAKE NO ACTION        */
*                                    ELSE                       04S0548
*                                     IF RRETCODE=TSOTSOS THEN/* DOES
*                                      TSO REQUEST SPECIAL TSO SEND
*                                      SCHEDULING                    */
         C     RRETCODE,@CF00244                                04S0548
         BNE   @RF00548                                         04S0548
*                                      RSTATE=STSEND;/* YES, REQUEST
*                                      SEND STATE                    */
         LA    RSTATE,5                                         04S0549
*                                     ELSE                      04S0550
*                                      IF RRETCODE=TSOBYPAS THEN/*
*                                      DOES TSO REQUEST BYPASS TO
*                                      RECEIVE                       */
         B     @RC00548                                         04S0550
@RF00548 C     RRETCODE,@CF00174                                04S0550
         BNE   @RF00550                                         04S0550
*                                       RSTATE=STBYPAS;/* YES,  04S0551
*                                      REQUEST BYPASS TO RECEIVE     */
         LA    RSTATE,1                                         04S0551
*                                      ELSE                     04S0552
*                                       RSTATE=STFRELCB;/* ELSE MUST
*                                      BE TSO REQUEST FOR PLCB  04S0552
*                                      DEALLOCATION                  */
         B     @RC00550                                         04S0552
@RF00550 LA    RSTATE,8                                         04S0552
*                                 RFY                           04S0553
*                                   RRETCODE UNRSTD;            04S0553
@RC00550 DS    0H                                               04S0553
@RC00548 DS    0H                                               04S0553
@RT00546 DS    0H                                               04S0553
@RC00544 DS    0H                                               04S0553
@RC00542 DS    0H                                               04S0554
*                                 RFY                           04S0554
*                                   RSELECT UNRSTD;             04S0554
*                               END;/*                       @OZ30085*/
*                             ELSE                              03S0556
*                               IF QCBTSQ=ON&QCBREUS=OFF&QCBNREUS=OFF&
*                                   QCBCORE=OFF/*            @OZ30085*/
*                                 THEN                          03S0556
         B     @RC00536                                         03S0556
@RF00536 TM    QCBTSQ(RQCB),B'10000000'                         03S0556
         BNO   @RF00556                                         03S0556
         TM    QCBREUS(RQCB),B'01110000'                        03S0556
         BNZ   @RF00556                                         03S0556
*                                 RSTATE=STBYPAS;/* TSO ONLY QUEUES
*                                                            @OZ30085*/
         LA    RSTATE,1                                         03S0557
*                           END;    /*                       @YM08526*/
*                         ELSE      /* ELSE CHECK FOR ABILITY TO SEND
*                                                            @YM08526*/
*                           DO;     /*                       @YM08526*/
         B     @RC00534                                         03S0559
@RF00534 DS    0H                                               03S0560
*                                                               04S0560
*                             /***************************************/
*                             /*                                     */
*                             /* PROCESS.SENDSCH.CHKSEND: CHECK FOR  */
*                             /* CONDITIONS THAT PREVENT A SEND FROM */
*                             /* OCCURRING. IF ANY EXIST, THEN REMOVE*/
*                             /* THE SEND SCHEDULER FROM THE QCB.    */
*                             /*                                     */
*                             /***************************************/
*                                                               04S0560
*                             RFY                               04S0560
*                               IEDTRM BASED(LCBNCPPT-LENGTH(IEDNTRM));
*                                   /* ADDRESS THE TERMINAL ENTRY FOR
*                                      THE 3705                      */
*                             IF LCBOCNI=ON×/* IS A NON-IMMEDIATE
*                                      OPERATOR CONTROL OPERATION IN
*                                      PROGRESS OR ...               */
*                                 (AVTCLOSN=ON&AVTQUCKN=ON)×/* ... IS
*                                      QUICK CLOSEDOWN IN PROGRESS   */
*                                 (TRMNCPCL=ON&/* IS 3705 IN ...     */
*                                 TRMQUCKN=ON)×/* ... QUICK CLOSEDOWN
*                                      ...                   @YM08004*/
*                                 TRMINOP=ON THEN/* ... OR CHANNEL
*                                      INOP HAS OCCURRED     @YM08120*/
         TM    LCBOCNI(RLCB),B'00100000'                        04S0561
         BO    @RT00561                                         04S0561
         TM    AVTCLOSN(RAVT),B'00000110'                       04S0561
         BO    @RT00561                                         04S0561
         L     @10,LCBNCPPT-1(,RLCB)                            04S0561
         LA    @10,0(,@10)                                      04S0561
         SL    @10,@CF01880                                     04S0561
         TM    TRMNCPCL(@10),B'01001000'                        04S0561
         BO    @RT00561                                         04S0561
         TM    TRMINOP(@10),B'10000000'                         04S0561
         BNO   @RF00561                                         04S0561
@RT00561 DS    0H                                               04S0562
*                               CALL RMVSCHED;/* YES, REMOVE SEND
*                                      SCHEDULER                     */
         BAL   @14,RMVSCHED                                     04S0562
*                             ELSE  /* 3705 NOT IN QUICK CLOSEDOWN   */
*                               DO;                             04S0563
         B     @RC00561                                         04S0563
@RF00561 DS    0H                                               04S0564
*                                 RFY                           04S0564
*                                   IEDTRM BASED(RTRM);/* ADDRESS THE
*                                      RESOURCE'S TERM ENTRY         */
*                                 IF TRMSNA=ON THEN/* TEST FOR AN SNA
*                                      RESOURCE                      */
         TM    TRMSNA(RTRM),B'00000010'                         04S0565
         BNO   @RF00565                                         04S0565
*                                   DO;/* SNA RESOURCE               */
*                                    RFY                        04S0567
*                                      RSIB RSTD;               04S0567
*                                    RSIB=TRMSIBPT;/* GET SIB POINTER*/
         SLR   RSIB,RSIB                                        04S0568
         ICM   RSIB,7,TRMSIBPT(RTRM)                            04S0568
*                                    IF SIBLGOFF=ON THEN/* IS LUS
*                                      REQUESTED                     */
         TM    SIBLGOFF(RSIB),B'10000000'                       04S0569
         BNO   @RF00569                                         04S0569
*                                     CALL RMVSCHED;/* YES, REMOVE
*                                      SEND SCHEDULER                */
         BAL   @14,RMVSCHED                                     04S0570
*                                    RFY                        04S0571
*                                      RSIB UNRSTD;             04S0571
@RF00569 DS    0H                                               04S0572
*                                   END;                        04S0572
*                                 ELSE/* NOT SNA                     */
*                                   IF TRMSPACT=OFF&/* IS SEND  04S0573
*                                      IMPOSSIBLE            @YM08526*/
*                                       TRMCLOSN=OFF THEN/*  @YM08540*/
         B     @RC00565                                         04S0573
@RF00565 TM    TRMSPACT(RTRM),B'00010000'                       04S0573
         BNZ   @RF00573                                         04S0573
         TM    TRMCLOSN(RTRM),B'00100000'                       04S0573
         BNZ   @RF00573                                         04S0573
*                                    CALL RMVSCHED;/* YES, REMOVE
*                                      SEND SCHEDULER                */
         BAL   @14,RMVSCHED                                     04S0574
*                               END;                            04S0575
@RF00573 DS    0H                                               04S0575
@RC00565 DS    0H                                               04S0576
*                           END;    /*                       @YM08526*/
@RC00561 DS    0H                                               03S0577
*                         IF RSTATE=NOSTATE THEN/* TEST FOR NO STATE
*                                      REQUESTED                     */
@RC00534 LTR   RSTATE,RSTATE                                    03S0577
         BNZ   @RF00577                                         03S0577
*                           IF QCBTRMHO=ON THEN/* IS TERMINAL HELD   */
         TM    QCBTRMHO(RQCB),B'01000000'                       03S0578
         BNO   @RF00578                                         03S0578
*                             CALL RMVSCHED;/* YES, REMOVE SEND 03S0579
*                                      SCHEDULER                     */
         BAL   @14,RMVSCHED                                     03S0579
*                         IF RSTATE=NOSTATE THEN/* TEST FOR NO STATE
*                                      SET                           */
@RF00578 DS    0H                                               03S0580
@RF00577 LTR   RSTATE,RSTATE                                    03S0580
         BNZ   @RF00580                                         03S0580
*                           DO;     /* NO STATE IS SET               */
*                                                               04S0582
*                             /***************************************/
*                             /*                                     */
*                             /* PROCESS.SENDSCH.SCHED: DETERMINE    */
*                             /* AVAILABILITY OF A MESSAGE TO SEND.  */
*                             /*                                     */
*                             /***************************************/
*                                                               04S0582
*                             IF QCBTSQ=ON×/* TSO QUEUES OR ...      */
*                                 ((QCBINSRC&CLEARL2)=RQCB) THEN/*
*                                      ... NOT INITIATE MODE @YM07819*/
         TM    QCBTSQ(RQCB),B'10000000'                         04S0582
         BO    @RT00582                                         04S0582
         L     @10,QCBINSRC-1(,RQCB)                            04S0582
         LA    @10,0(,@10)                                      04S0582
         N     @10,@CF02212                                     04S0582
         CR    @10,RQCB                                         04S0582
         BNE   @RF00582                                         04S0582
@RT00582 DS    0H                                               04S0583
*                               DO;                             04S0583
*                                 IF QCBHELD=ON THEN/* IS REUS IN
*                                      PROGRESS                      */
         TM    QCBHELD(RQCB),B'00000001'                        04S0584
         BNO   @RF00584                                         04S0584
*                                   CALL RMVSCHED;/* YES, REMOVE SEND
*                                      SCHEDULER                     */
         BAL   @14,RMVSCHED                                     04S0585
*                                 ELSE/* REUS NOT IN PROGRESS        */
*                                   DO;                         04S0586
         B     @RC00584                                         04S0586
@RF00584 DS    0H                                               04S0587
*                                    RFY                        04S0587
*                                      RCOUNT RSTD;             04S0587
*                                    RCOUNT=0;/* INITIALIZE PRIORITY
*                                      INDEX                         */
         SLR   RCOUNT,RCOUNT                                    04S0588
*                                    RPARM=ADDR(IEDQPQCB);/* POINT TO
*                                      FIRST PRIORITY LEVEL QCB      */
         LA    RPARM,40                                         04S0589
         ALR   RPARM,RQCB                                       04S0589
*                                                               05S0590
*                                    /********************************/
*                                    /*                              */
*                                    /* PROCESS.SENDSCH.SCHED.SCANLOO*/
*                                    /* P: DETERMINE EXISTENCE OF    */
*                                    /* FEFO MESSAGE IN PRIORITY QCB.*/
*                                    /*                              */
*                                    /********************************/
*                                                               05S0590
*                                    DO UNTIL RSTATE^=NOSTATE;  05S0590
@DL00590 DS    0H                                               05S0591
*                                     SCBSCHDR=RPARM->QCBFFEFO;/*
*                                      ASSUME FEFO POINTER IN THIS
*                                      PRIORITY LEVEL                */
         SLR   @10,@10                                          05S0591
         ICM   @10,7,QCBFFEFO(RPARM)                            05S0591
         STCM  @10,7,SCBSCHDR(RSCB)                             05S0591
*                                     IF RPARM->QCBFFEFO^=0 THEN/*
*                                      TEST FOR UNSENT FEFO IN THIS
*                                      LEVEL                         */
         SLR   @05,@05                                          05S0592
         CR    @10,@05                                          05S0592
         BE    @RF00592                                         05S0592
*                                      DO;/* UNSENT FEFO IN THIS
*                                      LEVEL                         */
*                                       RSTATE=STSEND;/* REQUEST SEND*/
         LA    RSTATE,5                                         05S0594
*                                       SCBPRI=RCOUNT;/* SET PRIORITY
*                                      INDEX TO QCB                  */
         STC   RCOUNT,SCBPRI(,RSCB)                             05S0595
*                                       QCBPRLVL=RCOUNT;/* SET  05S0596
*                                      HIGHEST MESSAGE PRIORITY      */
         STC   RCOUNT,QCBPRLVL(,RQCB)                           05S0596
*                                       SCBFEFO=0;/* RESET SAVED FEFO
*                                      POINTER                       */
         STCM  @05,7,SCBFEFO(RSCB)                              05S0597
*                                       QCBSDFFO=ON;/* CURRENTLY
*                                      SENDING FEFO MESSAGE          */
         OI    QCBSDFFO(RQCB),B'00000100'                       05S0598
*                                      END;                     05S0599
*                                     ELSE/* NO UNSENT FEFO          */
*                                      DO;                      05S0600
         B     @RC00592                                         05S0600
@RF00592 DS    0H                                               05S0601
*                                       RCOUNT=RCOUNT+1;/* BUMP COUNT*/
         AL    RCOUNT,@CF00060                                  05S0601
*                                       IF RPARM->QCBPRIPQ='00'X THEN
         CLI   QCBPRIPQ(RPARM),X'00'                            05S0602
         BNE   @RF00602                                         05S0602
*                                        /* TEST FOR LAST PRIORITY
*                                      QCB                           */
*                                        DO;/* LAST PRIORITY QCB     */
*                                         QCBPRLVL=0;/* RESET HIGHEST
*                                      MESSAGE PRIORITY              */
         MVI   QCBPRLVL(RQCB),X'00'                             05S0604
*                                         CALL RMVSCHED;/* REMOVE
*                                      SEND SCHEDULER                */
         BAL   @14,RMVSCHED                                     05S0605
*                                        END;                   05S0606
*                                      END;                     05S0607
@RF00602 DS    0H                                               05S0608
*                                     RPARM=RPARM+LENGTH(IEDQPQCB);/*
*                                      POINT TO NEXT PRIORITY QCB    */
@RC00592 AL    RPARM,@CF01549                                   05S0608
*                                    END;                       05S0609
@DE00590 LTR   RSTATE,RSTATE                                    05S0609
         BZ    @DL00590                                         05S0609
*                                    RFY                        04S0610
*                                      RCOUNT UNRSTD;           04S0610
*                                   END;                        04S0611
*                               END;                            04S0612
*                             ELSE                              04S0613
*                               DO;                             04S0613
         B     @RC00582                                         04S0613
@RF00582 DS    0H                                               04S0614
*                                                               05S0614
*                                 /***********************************/
*                                 /*                                 */
*                                 /* PROCESS.SENDSCH.SCHED.INITMODE: */
*                                 /* PROCESS INITIATE MODE.          */
*                                 /*                                 */
*                                 /***********************************/
*                                                               05S0614
*                                 RPARM=QCBINSRC&CLEARL2;/* REMOVE
*                                      PLCB ...              @YM07819*/
         L     RPARM,QCBINSRC-1(,RQCB)                          05S0614
         LA    RPARM,0(,RPARM)                                  05S0614
         N     RPARM,@CF02212                                   05S0614
*                                 QCBINSRC=RPARM->LCBINSRC;/* ...
*                                      FROM INITIATE ...             */
         MVC   QCBINSRC(3,RQCB),LCBINSRC(RPARM)                 05S0615
*                                 QCBDISC=OFF;/* CLEAR INSRCE BIT
*                                                            @YM07819*/
         NI    QCBDISC(RQCB),B'11111110'                        05S0616
*                                 RPARM->LCBINSRC=RLCB;/* ......
*                                      CHAIN                         */
         STCM  RLCB,7,LCBINSRC(RPARM)                           05S0617
*                                 RPARM=RPARM->LCBSCBA;/* GET ADDRESS
*                                      OF SOURCE SCB                 */
         L     @10,LCBSCBA-1(,RPARM)                            05S0618
         LA    @10,0(,@10)                                      05S0618
         LR    RPARM,@10                                        05S0618
*                                 SCBSCHDR=RPARM->SCBCCHDR;/* USE
*                                      CORE QUEUE HEADER             */
         MVC   SCBSCHDR(3,RSCB),SCBCCHDR(RPARM)                 05S0619
*                                 IF QCBREUS=ON×/* REUS DISK QUEUES
*                                      OR ...                        */
*                                     QCBNREUS=ON THEN/* ... NONREUS
*                                      DISK QUEUES                   */
         TM    QCBREUS(RQCB),B'00110000'                        05S0620
         BZ    @RF00620                                         05S0620
*                                   SCBSCHDR=RPARM->SCBDCHDR;/* YES,
*                                      CURRENT HEADER BEING SENT
*                                      EQUALS DISK ADDRESS FROM 05S0621
*                                      SOURCE SCB                    */
         MVC   SCBSCHDR(3,RSCB),SCBDCHDR(RPARM)                 05S0621
*                                 SCBPRI=''B;/* RESET PRIORITY INDEX
*                                      TO QCB                        */
@RF00620 SLR   @10,@10                                          05S0622
         STC   @10,SCBPRI(,RSCB)                                05S0622
*                                 SCBFEFO=0;/* RESET SAVED FEFO 05S0623
*                                      POINTER                       */
         SLR   @10,@10                                          05S0623
         STCM  @10,7,SCBFEFO(RSCB)                              05S0623
*                                 LCBSENDN=ON;/* INDICATE SENDING    */
*                                 LCBINITN=ON;/* INITIATE MODE       */
         OI    LCBSENDN(RLCB),B'00010001'                       05S0625
*                                 QCBSDFFO=ON;/* CURRENTLY SENDING
*                                      FEFO MESSAGE                  */
         OI    QCBSDFFO(RQCB),B'00000100'                       05S0626
*                                 RSTATE=STSEND;/* REQUEST SEND STATE*/
         LA    RSTATE,5                                         05S0627
*                               END;                            04S0628
*                           END;                                03S0629
@RC00582 DS    0H                                               03S0630
*                       END;                                    03S0630
@RF00580 DS    0H                                               03S0631
*                   END;                                        03S0631
@RF00532 DS    0H                                               03S0632
*               END;                                            03S0632
@RF00517 DS    0H                                               03S0633
*             IF RSTATE=STSEND THEN /* TEST FOR SEND STATE           */
@RF00499 C     RSTATE,@CF00162                                  03S0633
         BNE   @RF00633                                         03S0633
*               DO;                 /* SEND STATE                    */
*                                                               04S0635
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.SENDSCH.CHKERLCK: PROCESS ERROR LOCK IF */
*                 /* NECESSARY.                                      */
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0635
*                 IF TRMERLCK=ON THEN/* TEST FOR LOCK SET            */
         TM    TRMERLCK(RTRM),B'00000100'                       04S0635
         BNO   @RF00635                                         04S0635
*                   DO;             /* LOCK IS SET                   */
*                     CALL GETBFR;  /* GET A BUFFER                  */
         BAL   @14,GETBFR                                       04S0637
*                     IF RPRF^=0 THEN/* TEST FOR BUFFER OBTAINED     */
         LTR   RPRF,RPRF                                        04S0638
         BZ    @RF00638                                         04S0638
*                       DO;         /* A BUFFER WAS OBTAINED         */
*                         PRFQCBA=SAVTCNIR;/* QUEUE BUFFER TO CONTROL
*                                      NIR GENERATOR                 */
         L     @10,AVTSAVTP(,RAVT)                              04S0640
         MVC   PRFQCBA(3,RPRF),SAVTCNIR+1(@10)                  04S0640
*                         PRFPRI=PRIASYNC;/* SET PRIORITY            */
         MVI   PRFPRI(RPRF),X'E6'                               04S0641
*                         PRFDEST=LCBTTCIN;/* SET DESTINATION        */
         LH    @10,LCBTTCIN(,RLCB)                              04S0642
         N     @10,@CF02297                                     04S0642
         STH   @10,PRFDEST(,RPRF)                               04S0642
*                         RPARM=RPRF;/* SET ELEMENT TO TPOST         */
         LR    RPARM,RPRF                                       04S0643
*                         SAVEQCB=RQCB;/* SAVE QCB ADDRESS           */
         ST    RQCB,SAVEQCB                                     04S0644
*                         CALL DSPPOSTR;/* TPOST THE ELEMENT         */
         LA    @15,DSPPOSTR(,RDISP)                             04S0645
         BALR  @14,@15                                          04S0645
*                         RQCB=SAVEQCB;/* RESTORE QCB ADDRESS        */
         L     RQCB,SAVEQCB                                     04S0646
*                       END;                                    04S0647
*                   END;                                        04S0648
@RF00638 DS    0H                                               04S0649
*                 IF RSTATE=STSEND THEN/* STILL IN SEND STATE        */
@RF00635 C     RSTATE,@CF00162                                  04S0649
         BNE   @RF00649                                         04S0649
*                   DO;             /* YES                           */
*                                                               05S0651
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS.SENDSCH.CHKERLCK.DISKREAD:          */
*                     /* INITIALIZE FOR DISK READ.                   */
*                     /*                                             */
*                     /***********************************************/
*                                                               05S0651
*                     RSCB=LCBSCBA; /* SET SCB ADDRESS               */
         L     RSCB,LCBSCBA-1(,RLCB)                            05S0651
         LA    RSCB,0(,RSCB)                                    05S0651
*                     SCBSCSEG=SCBSCHDR;/* SET CURRENT SEGMENT BEING
*                                      SENT                          */
         MVC   SCBSCSEG(3,RSCB),SCBSCHDR(RSCB)                  05S0652
*                     SCBUNTCT=0;   /* RESET OFFSET IN DISK RECORD   */
         MVI   SCBUNTCT(RSCB),X'00'                             05S0653
*                     SCBDESTQ=RQCB;/* SET POINTER TO DESTINATION QCB*/
         STCM  RQCB,7,SCBDESTQ(RSCB)                            05S0654
*                     LCBRECAD=0;   /* RESET ADDR OF CURRENT MESSAGE
*                                      BLOCK                         */
         SLR   @10,@10                                          05S0655
         STCM  @10,7,LCBRECAD(RLCB)                             05S0655
*                     LCBRECOF=0;   /* RESET OFFSET INTO CURRENT
*                                      BLOCK                         */
         STH   @10,LCBRECOF(,RLCB)                              05S0656
*                     LCBNEGRP=OFF; /* RESET NEGATIVE RESPONSE TO
*                                      POLLING RECEIVED              */
*                     LCBSNDPR=OFF; /* RESET SEND PRIORITY           */
*                     LCBRESP=OFF;                              05S0659
         NI    LCBNEGRP(RLCB),B'11100110'                       05S0659
*                     IF TRMSNA=ON THEN/* TEST FOR SNA RESOURCE      */
         TM    TRMSNA(RTRM),B'00000010'                         05S0660
         BNO   @RF00660                                         05S0660
*                       DO;         /* SNA RESOURCE                  */
*                         RFY                                   05S0662
*                           RSIB RSTD;                          05S0662
*                         RSIB=TRMSIBPT;/* GET SIB POINTER           */
         SLR   RSIB,RSIB                                        05S0663
         ICM   RSIB,7,TRMSIBPT(RTRM)                            05S0663
*                         IF SIBINDEX=SAVTSCPT THEN/* IF THIS IS THE
*                                      SSCP SIB THEN THIS IS A BIND
*                                      FAILED ERROR CONDITION   05S0664
*                                                            @YM06056*/
         L     @10,AVTSAVTP(,RAVT)                              05S0664
         CLC   SIBINDEX(2,RSIB),SAVTSCPT(@10)                   05S0664
         BNE   @RF00664                                         05S0664
*                           LCBRBCT1=1;/* REQUEST ONLY ONE BUFFER
*                                                            @YM06056*/
         MVI   LCBRBCT1(RLCB),X'01'                             05S0665
*                         ELSE      /* NOT A BIND FAILED ERROR  05S0666
*                                                            @YM06056*/
*                           IF LGBOPACE=0 THEN/* IF NOT PACING THEN
*                                                            @YM06056*/
         B     @RC00664                                         05S0666
@RF00664 L     @10,IEDNLPTR(,RLCB)                              05S0666
         CLI   LGBOPACE(@10),0                                  05S0666
         BNE   @RF00666                                         05S0666
*                             LCBRBCT1=LGBBUFOU&'0F'X;/* REQUEST
*                                      BUFOUT                @YM06056*/
         LA    @09,15                                           05S0667
         SLR   @00,@00                                          05S0667
         IC    @00,LGBBUFOU(,@10)                               05S0667
         NR    @09,@00                                          05S0667
         STC   @09,LCBRBCT1(,RLCB)                              05S0667
*                           ELSE    /* PACING IS BEING PERFORMED
*                                                            @YM06056*/
*                             LCBRBCT1=LGBOPACE-(SIBPACIN&'0F'X);/*
*                                      REQUEST PACING COUNT MINUS N
*                                      COUNT                 @YM06056*/
         B     @RC00666                                         05S0668
@RF00666 L     @10,IEDNLPTR(,RLCB)                              05S0668
         LA    @09,15                                           05S0668
         SLR   @00,@00                                          05S0668
         IC    @00,SIBPACIN(,RSIB)                              05S0668
         NR    @09,@00                                          05S0668
         LCR   @09,@09                                          05S0668
         SLR   @00,@00                                          05S0668
         IC    @00,LGBOPACE(,@10)                               05S0668
         ALR   @09,@00                                          05S0668
         STC   @09,LCBRBCT1(,RLCB)                              05S0668
*                         RFY                                   05S0669
*                           RSIB UNRSTD;                        05S0669
@RC00666 DS    0H                                               05S0669
@RC00664 DS    0H                                               05S0670
*                       END;                                    05S0670
*                     ELSE          /* NOT AN SNA RESOURCE           */
*                       DO;                                     05S0671
         B     @RC00660                                         05S0671
@RF00660 DS    0H                                               05S0672
*                         TRMNLOUT=OFF;/* RESET NULL WRITE      05S0672
*                                      OUTSTANDING                   */
         NI    TRMNLOUT(RTRM),B'11111011'                       05S0672
*                         LCBRBCT1=LGBBUFOU&'00001111'B;/* SET COUNT
*                                      FIELD TO BUFOUT (AND CLEAR
*                                      BUFIN VALUE)                  */
         L     @10,IEDNLPTR(,RLCB)                              05S0673
         LA    @09,15                                           05S0673
         SLR   @05,@05                                          05S0673
         IC    @05,LGBBUFOU(,@10)                               05S0673
         NR    @09,@05                                          05S0673
         STC   @09,LCBRBCT1(,RLCB)                              05S0673
*                       END;                                    05S0674
*                     LCBRBCT2=''B; /* CLEAR DISABLED COUNT FIELD    */
@RC00660 MVI   LCBRBCT2(RLCB),X'00'                             05S0675
*                     IF TRMDIAL=ON&/* CHECK FOR DIAL TERMINAL ...   */
*                         TRMSESSN=OFF THEN/* ... NOT IN SESSION     */
         TM    TRMDIAL(RTRM),B'00001000'                        05S0676
         BNO   @RF00676                                         05S0676
         TM    TRMSESSN(RTRM),B'01000000'                       05S0676
         BNZ   @RF00676                                         05S0676
*                       DO;         /* YES, SET UP TO POST ERB TO
*                                      IEDNKA                        */
*                         CALL GETBFR;/* IEDNKA MUST HAVE A BUFFER
*                                      CHAINED OFF THE ERB           */
         BAL   @14,GETBFR                                       05S0678
*                         IF RPRF^=0 THEN/* IF BUFFER IS AVAILABLE,
*                                      CONTINUE                      */
         LTR   RPRF,RPRF                                        05S0679
         BZ    @RF00679                                         05S0679
*                           DO;                                 05S0680
*                             LCBERBCH=RPRF;/* CHAIN BUFFER FOR 05S0681
*                                      IEDNKA                        */
         STCM  RPRF,7,LCBERBCH(RLCB)                            05S0681
*                             LCBERBQB=SAVTCNIR;/* SET POST QCB 05S0682
*                                      ADDRESS                       */
         L     @10,AVTSAVTP(,RAVT)                              05S0682
         MVC   LCBERBQB(3,RLCB),SAVTCNIR+1(@10)                 05S0682
*                             LCBERBPY=PRIACTIV;/* SET POST PRIORITY */
         MVI   LCBERBPY(RLCB),X'E4'                             05S0683
*                             RSTATE=STTONKA;/* BYPASS TO NIR   05S0684
*                                      GENERATOR                     */
         LA    RSTATE,7                                         05S0684
*                           END;                                05S0685
*                       END;                                    05S0686
*                     ELSE          /* ELSE CONTINUE WITH SEND  05S0687
*                                      PROCESSING                    */
*                       DO;         /* POST ERB TO DISK I/O          */
         B     @RC00676                                         05S0687
@RF00676 DS    0H                                               05S0688
*                         IF LCBERBCH^=0 THEN/* TEST FOR BUFFERS ON
*                                      ERB CHAIN                     */
         L     @10,LCBERBCH-1(,RLCB)                            05S0688
         LA    @10,0(,@10)                                      05S0688
         LTR   @10,@10                                          05S0688
         BZ    @RF00688                                         05S0688
*                           DO;     /* BUFFERS ARE ON ERB CHAIN      */
*                             RPRF=LCBERBCH;/* DELINK BUFFERS ...    */
         LR    RPRF,@10                                         05S0690
*                             LCBERBCH=0;/* ... FROM ERB CHAIN       */
         SLR   @10,@10                                          05S0691
         STCM  @10,7,LCBERBCH(RLCB)                             05S0691
*                             PRFQCBA=ADDR(AVTBFRTB);/* QUEUE TO
*                                      BUFFER RETURN                 */
         LA    @10,AVTBFRTB(,RAVT)                              05S0692
         STCM  @10,7,PRFQCBA(RPRF)                              05S0692
*                             PRFPRI=PRIBFRTB;/* SET PRIORITY        */
         MVI   PRFPRI(RPRF),X'E0'                               05S0693
*                             RPARM=RPRF;/* SET ELEMENT TO TPOST     */
         LR    RPARM,RPRF                                       05S0694
*                             SAVEQCB=RQCB;/* SAVE QCB ADDRESS       */
         ST    RQCB,SAVEQCB                                     05S0695
*                             CALL DSPPOSTR;/* TPOST THE ELEMENT     */
         LA    @15,DSPPOSTR(,RDISP)                             05S0696
         BALR  @14,@15                                          05S0696
*                             RQCB=SAVEQCB;/* RESTORE QCB ADDRESS    */
         L     RQCB,SAVEQCB                                     05S0697
*                           END;                                05S0698
*                         LCBERB=ADDR(AVTDSIOB);/* QUEUE TO DISK I/O */
@RF00688 LA    @10,AVTDSIOB(,RAVT)                              05S0699
         ST    @10,LCBERB(,RLCB)                                05S0699
*                         LCBERBPY=PRIINTRQ;/* SET PRIORITY          */
         MVI   LCBERBPY(RLCB),X'E4'                             05S0700
*                         LCBDLNKN=OFF;/* MARK ERB IN USE    @YM08429*/
         NI    LCBDLNKN(RLCB),B'11111110'                       05S0701
*                         RPARM=ADDR(LCBERB);/* SET ELEMENT TO TPOST */
         LA    RPARM,LCBERB(,RLCB)                              05S0702
*                         CALL DSPPOST;/* RETURN TO DISPATCHER AT
*                                      TPOST ENTRY POINT     @Y17XAIX*/
         LA    @15,DSPPOST(,RDISP)                              05S0703
         BALR  @14,@15                                          05S0703
*                       END;                                    05S0704
*                   END;                                        04S0705
@RC00676 DS    0H                                               04S0706
*               END;                                            03S0706
@RF00649 DS    0H                                               03S0707
*           END;                                                03S0707
@RF00633 DS    0H                                               03S0708
*                                                               04S0708
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.SENDSCH.ANALYSIS: ANALYZE THE STATE VALUE TO    */
*         /* DETERMINE EXIT.                                         */
*         /*                                                         */
*         /***********************************************************/
*                                                               04S0708
*         IF RSTATE=STBYPAS THEN    /* TEST FOR BYPASS STATE         */
@RC00479 C     RSTATE,@CF00060                                  04S0708
         BNE   @RF00708                                         04S0708
*           DO;                     /* BYPASS STATE                  */
*             RPARM=RLCB;           /* SET ELEMENT TO BE PASSED      */
         LR    RPARM,RLCB                                       04S0710
*             RSTCB=ADDR(LCBRSKEY); /* STCB TO BE ACTIVATED          */
         LA    RSTCB,LCBRSKEY(,RLCB)                            04S0711
*             RQCB=RLCB;            /* SET QCB CONTAINING THE STCB   */
         LR    RQCB,RLCB                                        04S0712
*             RETADDR=ADDR(DSPBYPAS);/* SET RETURN TO BYPASS ENTRY OF
*                                      DISPATCHER                    */
         LA    @10,DSPBYPAS(,RDISP)                             04S0713
         ST    @10,RETADDR                                      04S0713
*           END;                                                04S0714
*         ELSE                      /* NOT BYPASS STATE              */
*           IF RSTATE=STERBPT THEN  /* TEST FOR ERB POST STATE       */
         B     @RC00708                                         04S0715
@RF00708 C     RSTATE,@CF00255                                  04S0715
         BNE   @RF00715                                         04S0715
*             DO;                   /* ERB POST STATE                */
*               LCBERBQB=ADDR(AVTBFREB);/* QUEUE TO AVAILABLE BUFFER
*                                      ROUTINE                       */
         LA    @10,AVTBFREB(,RAVT)                              04S0717
         STCM  @10,7,LCBERBQB(RLCB)                             04S0717
*               LCBERBPY=PRIINTRQ;  /* SET PRIORITY                  */
         MVI   LCBERBPY(RLCB),X'E4'                             04S0718
*               LCBRBCT1=ERBPBFRS;  /* SET NUMBER OF BUFFERS    04S0719
*                                      REQUESTED                     */
         MVI   LCBRBCT1(RLCB),X'01'                             04S0719
*               LCBRBCT2=ERBPUNIT;  /* SET NUMBER OF UNITS PER BUFFER*/
         MVI   LCBRBCT2(RLCB),X'01'                             04S0720
*               LCBRCQCB=RLCB;      /* QCB TO WHICH BUFFER WILL BE
*                                      TPOSTED                       */
         ST    RLCB,LCBRCQCB(,RLCB)                             04S0721
*               LCBPRCPG=ON;        /* USE LCBRCQCB AFTER BUFFER IS
*                                      ALLOCATED                     */
         OI    LCBPRCPG(RLCB),B'00000010'                       04S0722
*               RPARM=ADDR(LCBERB); /* ELEMENT TO TPOST              */
         LA    RPARM,LCBERB(,RLCB)                              04S0723
*               CALL DSPPOST;       /* TPOST ENTRY POINT OF THE 04S0724
*                                      DISPATCHER            @Y17XAIX*/
         LA    @15,DSPPOST(,RDISP)                              04S0724
         BALR  @14,@15                                          04S0724
*             END;                                              04S0725
*           ELSE                    /* NOT ERB POST STATE            */
*             IF RSTATE=STTONKA THEN/* IF BYPASS REQUESTED TO IEDNKA */
         B     @RC00715                                         04S0726
@RF00715 C     RSTATE,@CF00581                                  04S0726
         BNE   @RF00726                                         04S0726
*               DO;                 /* BYPASS STATE                  */
*                 RQCB=SAVTCNIR;    /* SET QCB ADDRESS FOR DSPBYPAS  */
         L     @10,AVTSAVTP(,RAVT)                              04S0728
         L     @10,SAVTCNIR(,@10)                               04S0728
         LR    RQCB,@10                                         04S0728
*                 RSTCB=SAVTCNIR->QCBSTCHN;/* SET STCB ADDRESS FOR
*                                      DSPBYPAS                      */
         L     RSTCB,QCBSTCHN-1(,@10)                           04S0729
         LA    RSTCB,0(,RSTCB)                                  04S0729
*                 RPARM=ADDR(LCBERB);/* ELEMENT BEING BYPASSED       */
         LA    RPARM,LCBERB(,RLCB)                              04S0730
*                 RETADDR=ADDR(DSPBYPAS);/* SET RETURN TO BYPASS
*                                      ENTRY OF DISPATCHER           */
         LA    @10,DSPBYPAS(,RDISP)                             04S0731
         ST    @10,RETADDR                                      04S0731
*               END;                                            04S0732
*             ELSE                  /* NOT BYPASS TO IEDNKA STATE    */
*               IF RSTATE=STFRELCB THEN/* IF PLCB DEALLOCATION  04S0733
*                                      REQUESTED                     */
         B     @RC00726                                         04S0733
@RF00726 C     RSTATE,@CF00044                                  04S0733
         BNE   @RF00733                                         04S0733
*                 DO;               /* SET UP TO FREE PLCB AND EXIT  */
*                   RPARM=RLCB;     /* PARAMETER LIST TO IEDIAP07
*                                                            @YM04668*/
         LR    RPARM,RLCB                                       04S0735
*                   CALL IEDIAP07;  /* CALL PLCB DEALLOCATION ROUTINE*/
         L     @10,AVTSAVTP(,RAVT)                              04S0736
         L     @15,SAVTPRTN(,@10)                               04S0736
         BALR  @14,@15                                          04S0736
*                   RETADDR=ADDR(DSPDISP);/* EXIT ADDRESS            */
         LA    @10,DSPDISP(,RDISP)                              04S0737
         ST    @10,RETADDR                                      04S0737
*                 END;                                          04S0738
*               ELSE                /* ELSE NOT PLCB DEALLOCATION
*                                      STATE                         */
*                 IF RSTATE=STEXIT THEN/* TEST FOR EXIT STATE        */
         B     @RC00733                                         04S0739
@RF00733 C     RSTATE,@CF00073                                  04S0739
         BNE   @RF00739                                         04S0739
*                   DO;             /* EXIT STATE                    */
*                     RETADDR=ADDR(DSPDISP);                    04S0741
         LA    @10,DSPDISP(,RDISP)                              04S0741
         ST    @10,RETADDR                                      04S0741
*                   END;                                        04S0742
*       END;                                                    02S0743
@RF00739 DS    0H                                               02S0743
@RC00733 DS    0H                                               02S0743
@RC00726 DS    0H                                               02S0743
@RC00715 DS    0H                                               02S0743
@RC00708 DS    0H                                               02S0744
*                                                               02S0744
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE THAT WAS   */
*   /* ALTERED BY THE MODULE PROCEDURE STATEMENT.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0744
*   RFY                                                         02S0744
*     RRETURN RSTD;                                             02S0744
@RC00451 DS    0H                                               02S0744
@RC00441 DS    0H                                               02S0745
*   RRETURN=RETADDR;                /* SET RETURN ADDRESS            */
         L     RRETURN,RETADDR                                  02S0745
*                                                               02S0746
*   /*****************************************************************/
*   /*                                                               */
*   /* BLDRESET: BUILD A RESET CONDITIONAL PIU IN A BUFFER AND TPOST */
*   /* THE BUFFER TO THE COMMAND ID PROCESSOR.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0746
*BLDRESET:                                                      02S0746
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0746
@EL00001 DS    0H                                               02S0746
@EF00001 DS    0H                                               02S0746
@ER00001 BR    @14                                              02S0746
BLDRESET ST    @14,@SA00002                                     02S0746
*   PRFPIUO=STRTPIU;                /* SET OFFSET TO PIU IN THE 02S0747
*                                      BUFFER UNIT                   */
         LA    @15,1                                            02S0747
         STC   @15,PRFPIUO(,RPRF)                               02S0747
*   PIU=''B;                        /* CLEAR THE PIU                 */
         LA    @10,PRFPIUO(,RPRF)                               02S0748
         ALR   @10,@15                                          02S0748
         XC    PIU(20,@10),PIU(@10)                             02S0748
*   TTHBBIU=ON;                     /* SET BEGIN SEGMENT             */
*   TTHEBIU=ON;                     /* SET END SEGMENT               */
         OI    TTHBBIU(@10),B'00001100'                         02S0750
*   IF QCBPLCBN=ON THEN             /* PLCB ASSIGNED         @YM08413*/
         LR    @15,RQCB                                         02S0751
         SL    @15,@CF00044                                     02S0751
         TM    QCBPLCBN(@15),B'10000000'                        02S0751
         BNO   @RF00751                                         02S0751
*     DO;                           /*                       @YM08413*/
*       RLCB=QCBPLCBA;              /* PLCB ADDRESS          @YM08413*/
         L     RLCB,QCBPLCBA-1(,@15)                            02S0753
         LA    RLCB,0(,RLCB)                                    02S0753
*       TTHDAF=LCBTTCIN;            /* SET DAF FROM LCB TNT OFFSET
*                                                            @YM08413*/
         MVC   TTHDAF(2,@10),LCBTTCIN(RLCB)                     02S0754
*     END;                          /*                       @YM08413*/
*   ELSE                            /*                       @XM05703*/
*     IF QCBWAITC=ON THEN           /* IF CHAIN OF PIU'S, THEN  02S0756
*                                                            @XM05703*/
         B     @RC00751                                         02S0756
@RF00751 LR    @15,RQCB                                         02S0756
         SL    @15,@CF00044                                     02S0756
         TM    QCBWAITC(@15),B'01000000'                        02S0756
         BNO   @RF00756                                         02S0756
*       DO;                         /*                       @XM05703*/
*         RPARM=QCBPLCBA;           /* GET FIRST PIU ADDRESS @XM05703*/
         L     RPARM,QCBPLCBA-1(,@15)                           02S0758
         LA    RPARM,0(,RPARM)                                  02S0758
*         RFY                                                   02S0759
*           IEDQPRF BASED(RPARM);   /*                       @XM05703*/
*         RPARM=ADDR(PRFPIUO)+PRFPIUO;/* POINT TO THE TH     @XM05703*/
         LA    @15,PRFPIUO(,RPARM)                              02S0760
         SLR   @10,@10                                          02S0760
         IC    @10,PRFPIUO(,RPARM)                              02S0760
         ALR   @15,@10                                          02S0760
         LR    RPARM,@15                                        02S0760
*         RFY                                                   02S0761
*           IEDQPRF BASED(RPRF);    /*                       @XM05703*/
*         TTHDAF=RPARM->TTHOAF;     /* GET TNT INDEX FROM PIU OAF
*                                                            @XM05703*/
         LA    @15,PRFPIUO(,RPRF)                               02S0762
         SLR   @10,@10                                          02S0762
         IC    @10,PRFPIUO(,RPRF)                               02S0762
         ALR   @15,@10                                          02S0762
         MVC   TTHDAF(2,@15),TTHOAF(RPARM)                      02S0762
*       END;                        /*                       @XM05703*/
*     ELSE                          /* NO PLCB ASSIGNED      @YM08413*/
*       TTHDAF=QCBTTCIN;            /* SET DESTINATION ADDR FIELD    */
         B     @RC00756                                         02S0764
@RF00756 LA    @15,PRFPIUO(,RPRF)                               02S0764
         SLR   @10,@10                                          02S0764
         IC    @10,PRFPIUO(,RPRF)                               02S0764
         ALR   @15,@10                                          02S0764
         LR    @10,RQCB                                         02S0764
         BCTR  @10,0                                            02S0764
         BCTR  @10,0                                            02S0764
         MVC   TTHDAF(2,@15),QCBTTCIN-6(@10)                    02S0764
*   TTHOAF=SAVTTCPU;                /* SET ORIGIN ADDR FIELD         */
@RC00756 DS    0H                                               02S0765
@RC00751 LA    @15,PRFPIUO(,RPRF)                               02S0765
         SLR   @10,@10                                          02S0765
         IC    @10,PRFPIUO(,RPRF)                               02S0765
         ALR   @15,@10                                          02S0765
         L     @10,AVTSAVTP(,RAVT)                              02S0765
         MVC   TTHOAF(2,@15),SAVTTCPU(@10)                      02S0765
*   TTHDCF=LENGTH(IEDRH)+1+LENGTH(IEDBDU);/* SET DATA COUNT FIELD    */
         LA    @09,10                                           02S0766
         STCM  @09,3,TTHDCF(@15)                                02S0766
*   TRHFI=ON;                       /* SET FORMAT INDICATOR          */
*   TRHBC=ON;                       /* SET BEGIN CHAIN               */
*   TRHEC=ON;                       /* SET END CHAIN                 */
         ALR   @09,@15                                          02S0769
         OI    TRHFI(@09),B'00001011'                           02S0769
*   TRHDR1=ON;                      /* SET DEFINITE RESPONSE 1       */
         OI    TRHDR1(@09),B'10000000'                          02S0770
*   BDUCMND=CD0CTRL;                /* CONTROL COMMAND               */
         AL    @15,@CF01880                                     02S0771
         MVI   BDUCMND(@15),X'08'                               02S0771
*   BDUMODIF=CD0CRC;                /* MODIFIER = RESET CONDITIONAL  */
         MVI   BDUMODIF(@15),X'50'                              02S0772
*   PRFQCBA=SAVTSAO;                /* QUEUE TO COMMAND ID PROCESSOR */
         MVC   PRFQCBA(3,RPRF),SAVTSAO+1(@10)                   02S0773
*   PRFPRI=PRIOUTBD;                /* SET PRIORITY                  */
         MVI   PRFPRI(RPRF),X'E4'                               02S0774
*   PRF2TNTI=ON;                    /* INDICATE PIU'         @YM04627*/
         LR    @15,RPRF                                         02S0775
         AL    @15,@CF02309                                     02S0775
         OI    PRF2TNTI(@15),B'10000000'                        02S0775
*   RPARM=RPRF;                     /* SET ADDR OF ELEMENT TO TPOST  */
         LR    RPARM,RPRF                                       02S0776
*   SAVEQCB=RQCB;                   /* SAVE QCB ADDRESS              */
         ST    RQCB,SAVEQCB                                     02S0777
*   CALL DSPPOSTR;                  /* CALL DISPATCHER TO TPOST 02S0778
*                                      ELEMENT                       */
         LA    @15,DSPPOSTR(,RDISP)                             02S0778
         BALR  @14,@15                                          02S0778
*   RQCB=SAVEQCB;                   /* RESTORE QCB ADDRESS           */
         L     RQCB,SAVEQCB                                     02S0779
*   END BLDRESET;                                               02S0780
@EL00002 DS    0H                                               02S0780
@EF00002 DS    0H                                               02S0780
@ER00002 L     @14,@SA00002                                     02S0780
         BR    @14                                              02S0780
*                                                               02S0781
*   /*****************************************************************/
*   /*                                                               */
*   /* CALLIAP: CALL IEDIAP FOR PLCB ALLOCATION.                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0781
*CALLIAP:                                                       02S0781
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0781
CALLIAP  ST    @14,@SA00003                                     02S0781
*   RFY                                                         02S0782
*     RBRANCH RSTD;                                             02S0782
*   QCBSNDRQ=ON;                    /* REQUEST SEND SCHEDULER        */
*   QCBRCVRQ=ON;                    /* REQUEST RECEIVE SCHEDULER     */
         LR    @10,RQCB                                         02S0784
         AL    @10,@CF02310                                     02S0784
         OI    QCBSNDRQ-4(@10),B'00110000'                      02S0784
*   IF(QCBSTPRI=QCBCNTVL×           /* CINTVL OR ...                 */
*       QCBSTPRI=QCBCLK)&           /* ... CLOCK INDICATED ...       */
*       QCBTSSES=OFF&               /* ... AND NOT TSO SESSION ...   */
*       TRMINPUT=ON&                /* ... AND CAPABLE OF INPUT ...
*                                                            @YM08439*/
*       TRMSNA=OFF THEN             /* ... AND NOT SNA               */
         CLI   QCBSTPRI(RQCB),X'70'                             02S0785
         BE    @GL00018                                         02S0785
         CLI   QCBSTPRI(RQCB),X'80'                             02S0785
         BNE   @RF00785                                         02S0785
@GL00018 TM    QCBTSSES(RQCB),B'10000000'                       02S0785
         BNZ   @RF00785                                         02S0785
         TM    TRMINPUT(RTRM),B'01000000'                       02S0785
         BNO   @RF00785                                         02S0785
         TM    TRMSNA(RTRM),B'00000010'                         02S0785
         BNZ   @RF00785                                         02S0785
*     QCBSCHDL=ON;                  /* YES, REQUEST RECEIVE BEFORE
*                                      SEND                          */
         OI    QCBSCHDL(RQCB),B'00000100'                       02S0786
*   RPARM=RQCB;                     /* SET ADDR OF QCB               */
@RF00785 LR    RPARM,RQCB                                       02S0787
*   TRMINPTP=OFF;                   /* PREVENT DOUBLE POST OF PLCB
*                                                            @YM05700*/
         NI    TRMINPTP(RTRM),B'10111111'                       02S0788
*   CALL IEDIAP;                    /* CALL IEDIAP FOR PLCB     02S0789
*                                      ALLOCATION                    */
         L     @10,AVTSAVTP(,RAVT)                              02S0789
         L     @15,SAVTPREQ(,@10)                               02S0789
         BALR  @14,@15                                          02S0789
*   IF RBRANCH^=0 THEN              /* TEST FOR PLCB ALLOCATED       */
         LTR   RBRANCH,RBRANCH                                  02S0790
         BZ    @RF00790                                         02S0790
*     DO;                           /* PLCB WAS ALLOCATED            */
*       RLCB=RBRANCH;               /* SET PLCB ADDR                 */
         LR    RLCB,RBRANCH                                     02S0792
*       LCBQCBA=RLCB;               /* QUEUE PLCB TO ITSELF          */
         STCM  RLCB,7,LCBQCBA(RLCB)                             02S0793
*       LCBPRI=PRILNFRE;            /* SET PRIORITY                  */
         MVI   LCBPRI(RLCB),X'E0'                               02S0794
*       RPARM=RLCB;                 /* PLCB IS ELEMENT TO TPOST      */
         LR    RPARM,RLCB                                       02S0795
*       SAVEQCB=RQCB;               /* SAVE QCB ADDRESS              */
         ST    RQCB,SAVEQCB                                     02S0796
*       CALL DSPPOSTR;              /* TPOST THE ELEMENT             */
         LA    @15,DSPPOSTR(,RDISP)                             02S0797
         BALR  @14,@15                                          02S0797
*       RQCB=SAVEQCB;               /* RESTORE QCB ADDRESS           */
         L     RQCB,SAVEQCB                                     02S0798
*     END;                                                      02S0799
*   RFY                                                         02S0800
*     RBRANCH UNRSTD;                                           02S0800
*   END CALLIAP;                                                02S0801
@EL00003 DS    0H                                               02S0801
@EF00003 DS    0H                                               02S0801
@ER00003 L     @14,@SA00003                                     02S0801
         BR    @14                                              02S0801
*                                                               02S0802
*   /*****************************************************************/
*   /*                                                               */
*   /* GETBFR: ALLOCATE A BUFFER FROM THE ERB OR BY A CALL TO BUFFER */
*   /* STEAL. IF A BUFFER IS ALLOCATED, RETURN ITS ADDRESS IN RPRF.  */
*   /* OTHERWISE, SET ERB POST STATE (STERBPT) SO THAT A BUFFER WILL */
*   /* BE REQUESTED.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0802
*GETBFR:                                                        02S0802
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0802
GETBFR   ST    @14,@SA00004                                     02S0802
*   RFY                                                         02S0803
*    (RUNIT,                                                    02S0803
*     RBRANCH) RSTD;                                            02S0803
*   IF LCBERBCH^=0 THEN             /* TEST FOR BUFFER ON ERB CHAIN  */
         L     @10,LCBERBCH-1(,RLCB)                            02S0804
         LA    @10,0(,@10)                                      02S0804
         LTR   @10,@10                                          02S0804
         BZ    @RF00804                                         02S0804
*     DO;                           /* BUFFER ON THE CHAIN           */
*       RPRF=LCBERBCH;              /* DELINK BUFFER ...             */
         LR    RPRF,@10                                         02S0806
*       LCBERBCH=0;                 /* ... FROM ERB                  */
         SLR   @10,@10                                          02S0807
         STCM  @10,7,LCBERBCH(RLCB)                             02S0807
*     END;                                                      02S0808
*   ELSE                            /* NO BUFFER ON CHAIN            */
*     DO;                                                       02S0809
         B     @RC00804                                         02S0809
@RF00804 DS    0H                                               02S0810
*       RUNIT=BFRSUNIT;             /* SET NUMBER OF UNITS PER BUFFER*/
         LA    @10,1                                            02S0810
         LR    RUNIT,@10                                        02S0810
*       RPARM=BFRSBFRS;             /* SET NUMBER OF BUFFERS    02S0811
*                                      REQUESTED                     */
         LR    RPARM,@10                                        02S0811
*       CALL IEDQGA02;              /* CALL BUFFER STEAL             */
         L     @15,AVTSTEAL(,RAVT)                              02S0812
         BALR  @14,@15                                          02S0812
*       RPRF=RBRANCH;               /* SAVE BUFFER ADDRESS           */
         LR    RPRF,RBRANCH                                     02S0813
*       IF RBRANCH=0                /* TEST RETURN CODE              */
*         THEN                      /* NO BUFFER AVAILABLE           */
         LTR   RBRANCH,RBRANCH                                  02S0814
         BNZ   @RF00814                                         02S0814
*         RSTATE=STERBPT;           /* REQUEST ERB POST              */
         LA    RSTATE,4                                         02S0815
*     END;                                                      02S0816
*   RFY                                                         02S0817
*    (RUNIT,                                                    02S0817
*     RBRANCH) UNRSTD;                                          02S0817
*   END GETBFR;                                                 02S0818
@EL00004 DS    0H                                               02S0818
@EF00004 DS    0H                                               02S0818
@ER00004 L     @14,@SA00004                                     02S0818
         BR    @14                                              02S0818
*                                                               02S0819
*   /*****************************************************************/
*   /*                                                               */
*   /* LCBSCAN: THIS IS THE ENTRY POINT CALLED BY EXTERNAL ROUTINES  */
*   /* TO DO LCBSCAN PROCESSING. THE BASE IS SET AND THE RETURN      */
*   /* ADDRESS IS SAVED. THE SUBROUTINE LCBSCAN1 IS CALLED FOR THE   */
*   /* LCBSCAN PROCESSING.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0819
*LCBSCAN:                                                       02S0819
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0819
LCBSCAN  DS    0H                                               02S0820
*   RSTATE=RBASE;                   /* SAVE CALLER'S BASE REGISTER
*                                                            @YM06132*/
         LR    RSTATE,RBASE                                     02S0820
*   RBASE=AVTSEND-OFFIAQ;           /* SET BASE REGISTER TO START OF
*                                      CSECT                         */
         L     RBASE,AVTSEND(,RAVT)                             02S0821
         BCTR  RBASE,0                                          02S0821
         BCTR  RBASE,0                                          02S0821
*   BASADDR=RSTATE;                 /* SAVE CALLER'S BASE REGISTER
*                                                            @YM06132*/
         ST    RSTATE,BASADDR                                   02S0822
*   RETADDR=RRETURN;                /* SAVE CALLER'S RETURN REGISTER
*                                                            @YM06132*/
         ST    RRETURN,RETADDR                                  02S0823
*   RSTATE=NOSTATE;                 /* CLEAR STATE REGISTER          */
         SLR   RSTATE,RSTATE                                    02S0824
*   CALL LCBSCAN1;                  /* CALL THE LCBSCAN CODE         */
         BAL   @14,LCBSCAN1                                     02S0825
*   RRETURN=RETADDR;                /* RESTORE CALLER'S RETURN  02S0826
*                                      ADDRESS               @YM06132*/
         L     RRETURN,RETADDR                                  02S0826
*   RBASE=BASADDR;                  /* RESTORE CALLER'S BASE REGISTER
*                                                            @YM06132*/
         L     RBASE,BASADDR                                    02S0827
*   END LCBSCAN;                                                02S0828
@EL00005 DS    0H                                               02S0828
@EF00005 DS    0H                                               02S0828
@ER00005 BR    @14                                              02S0828
*                                                               02S0829
*   /*****************************************************************/
*   /*                                                               */
*   /* LCBSCAN1: DETERMINE IF A SEND IS POSSIBLE AND IF SO INITIATE  */
*   /* SENDING BY REQUESTING NECESSARY RESOURCES. FOR SNA RESOURCES  */
*   /* THIS INCLUDES REQUESTING OF LU-LU SESSIONS.                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0829
*LCBSCAN1:                                                      02S0829
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0829
LCBSCAN1 ST    @14,@SA00006                                     02S0829
*   IF RSTATE=STQCBTSO              /* TEST FOR QCB IN TSO SESSION
*                                      STATE                         */
*     THEN                                                      02S0830
         C     RSTATE,@CF00064                                  02S0830
         BE    @RT00830                                         02S0830
*     ;                             /* QCB IN TSO SESSION STATE => NO
*                                      PROCESSING                    */
*   ELSE                            /* QCB NOT IN TSO SESSION STATE  */
*     DO;                                                       02S0832
*       RSTATE=STEXIT;              /* ASSUME REQUEST FOR EXIT       */
         LA    RSTATE,3                                         02S0833
*       IF QCBHELD=OFF              /* TEST REUS STATE IN THE QCB    */
*         THEN                      /* REUS IS NOT USING THE QCB     */
         TM    QCBHELD(RQCB),B'00000001'                        02S0834
         BNZ   @RF00834                                         02S0834
*         IF QCBREUS=ON×            /* TEST ...                      */
*             QCBNREUS=ON×          /* ... QUEUE ...                 */
*             QCBCORE=ON            /* ... TYPE                      */
*           THEN                    /* NOT TSO ONLY QUEUES           */
         TM    QCBREUS(RQCB),B'01110000'                        02S0835
         BZ    @RF00835                                         02S0835
*           IF QCBTSSES=OFF         /* TEST TSO SESSION STATE IN THE
*                                      QCB                           */
*             THEN                  /* NOT IN TSO SESSION            */
         TM    QCBTSSES(RQCB),B'10000000'                       02S0836
         BNZ   @RF00836                                         02S0836
*             RSTATE=NOSTATE;       /* SET NO STATE => DO NOT EXIT   */
         SLR   RSTATE,RSTATE                                    02S0837
*     END;                                                      02S0838
@RF00836 DS    0H                                               02S0838
@RF00835 DS    0H                                               02S0838
@RF00834 DS    0H                                               02S0839
*   IF RSTATE^=STEXIT THEN          /* TEST FOR 'NO EXIT REQUESTED'  */
@RT00830 C     RSTATE,@CF00073                                  02S0839
         BE    @RF00839                                         02S0839
*     DO;                           /* NO EXIT REQUESTED             */
*                                                               03S0841
*       /*************************************************************/
*       /*                                                           */
*       /* LCBSCAN1.SCHPLCB: FOR SNA WITH NO SESSION, REQUEST A      */
*       /* SESSION. FOR ALL RESOURCES, REQUEST A PLCB IF NONE IS     */
*       /* ASSIGNED.                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0841
*       RPARM=QCBTTCIN;             /* ASSUME QCB CONTAINS TNT INDEX */
         LR    @15,RQCB                                         03S0841
         SL    @15,@CF00044                                     03S0841
         LH    RPARM,QCBTTCIN(,@15)                             03S0841
*       IF QCBPLCBN=ON THEN         /* IS A PLCB ALLOCATED           */
         TM    QCBPLCBN(@15),B'10000000'                        03S0842
         BNO   @RF00842                                         03S0842
*         RPARM=QCBPLCBA->LCBTTCIN; /* YES, GET TNT INDEX FROM THE
*                                      PLCB                          */
         L     @15,QCBPLCBA-1(,@15)                             03S0843
         LH    RPARM,LCBTTCIN(,@15)                             03S0843
         N     RPARM,@CF02297                                   03S0843
*       ELSE                        /*                       @XM05703*/
*         IF QCBWAITC=ON THEN       /* IF CHAIN OF PIU'S, THEN  03S0844
*                                                            @XM05703*/
         B     @RC00842                                         03S0844
@RF00842 LR    @15,RQCB                                         03S0844
         SL    @15,@CF00044                                     03S0844
         TM    QCBWAITC(@15),B'01000000'                        03S0844
         BNO   @RF00844                                         03S0844
*           DO;                     /*                       @XM05703*/
*             RPARM=QCBPLCBA;       /* GET FIRST PIU ADDRESS @XM05703*/
         L     RPARM,QCBPLCBA-1(,@15)                           03S0846
         LA    RPARM,0(,RPARM)                                  03S0846
*             RFY                                               03S0847
*               IEDQPRF BASED(RPARM);/*                      @XM05703*/
*             RPARM=ADDR(PRFPIUO)+PRFPIUO;/* POINT TO THE TH @XM05703*/
         LA    @15,PRFPIUO(,RPARM)                              03S0848
         SLR   @10,@10                                          03S0848
         IC    @10,PRFPIUO(,RPARM)                              03S0848
         ALR   @15,@10                                          03S0848
         LR    RPARM,@15                                        03S0848
*             RPARM=RPARM->TTHOAF;  /* GET TNT INDEX FROM PIU OAF
*                                                            @XM05703*/
         SLR   @15,@15                                          03S0849
         ICM   @15,3,TTHOAF(RPARM)                              03S0849
         LR    RPARM,@15                                        03S0849
*             RFY                                               03S0850
*               IEDQPRF BASED(RPRF);/*                       @XM05703*/
*           END;                    /*                       @XM05703*/
*       CALL IEDQTNT;               /* CALL TNTCODE TO GET THE TERM
*                                      ENTRY ADDR                    */
@RF00844 DS    0H                                               03S0852
@RC00842 L     @15,AVTRNMPT(,RAVT)                              03S0852
         BALR  @14,@15                                          03S0852
*       RTRM=RPARM-LENGTH(IEDNTRM); /* SAVE TERM ENTRY ADDR          */
         LR    RTRM,RPARM                                       03S0853
         SL    RTRM,@CF01880                                    03S0853
*       IF(TRMHELDN=OFF&            /* TEST FOR ...                  */
*           QCBTRMHO=OFF)×          /* ... 'TERMINAL NOT HELD' ...   */
*           QCBSTPRI=QCBCLK×        /* OR CLOCK              @ZM45400*/
*           QCBSTPRI=QCBCNTVL×      /* OR CINTVL             @ZM45400*/
*           QCBTSSES=ON THEN        /* OR IN TSO SESSION     @ZM45400*/
         TM    TRMHELDN(RTRM),B'00000100'                       03S0854
         BNZ   @GL00022                                         03S0854
         TM    QCBTRMHO(RQCB),B'01000000'                       03S0854
         BZ    @RT00854                                         03S0854
@GL00022 CLI   QCBSTPRI(RQCB),X'80'                             03S0854
         BE    @RT00854                                         03S0854
         CLI   QCBSTPRI(RQCB),X'70'                             03S0854
         BE    @RT00854                                         03S0854
         TM    QCBTSSES(RQCB),B'10000000'                       03S0854
         BNO   @RF00854                                         03S0854
@RT00854 DS    0H                                               03S0855
*         DO;                       /* PROCEED WITH SCHEDULING       */
*           IF TRMSNA=ON THEN       /* TEST FOR SNA RESOURCE         */
         TM    TRMSNA(RTRM),B'00000010'                         03S0856
         BNO   @RF00856                                         03S0856
*             DO;                   /* SNA RESOURCE                  */
*               RSTATE=STEXIT;      /* ASSUME EXIT WILL BE NEEDED    */
         LA    RSTATE,3                                         03S0858
*               IF TRMRSACT=ON THEN /* IS RESOURCE ACTIVE            */
         TM    TRMRSACT(RTRM),B'10000000'                       03S0859
         BNO   @RF00859                                         03S0859
*                 DO;                                           03S0860
*                   RFY                                         03S0861
*                     RSIB RSTD;                                03S0861
*                   RSIB=TRMSIBPT;  /* GET SIB POINTER               */
         SLR   RSIB,RSIB                                        03S0862
         ICM   RSIB,7,TRMSIBPT(RTRM)                            03S0862
*                   IF SIBCHAIN^=0& /* TEST FOR FULLY ACTIVE @YM06474*/
*                       SIBDSTAT=SIBDACTV/* ... LU-LU SESSION   03S0863
*                                                            @YM06474*/
*                     THEN          /* THERE IS AN LU-LU SESSION     */
         L     @15,SIBCHAIN(,RSIB)                              03S0863
         LTR   @15,@15                                          03S0863
         BZ    @RF00863                                         03S0863
         TM    SIBDSTAT(RSIB),B'00000011'                       03S0863
         BNO   @RF00863                                         03S0863
*                     RSTATE=NOSTATE;/* SET NO STATE REQUESTED       */
         SLR   RSTATE,RSTATE                                    03S0864
*                   ELSE            /* NO LU-LU SESSION              */
*                     DO;                                       03S0865
         B     @RC00863                                         03S0865
@RF00863 DS    0H                                               03S0866
*                       QCBSNDRQ=ON;/* REQUEST SEND SCHEDULER   03S0866
*                                                            @YM06049*/
         LR    @15,RQCB                                         03S0866
         AL    @15,@CF02310                                     03S0866
         OI    QCBSNDRQ-4(@15),B'00100000'                      03S0866
*                                                               04S0867
*                       /*********************************************/
*                       /*                                           */
*                       /* LCBSCAN1.SCHPLCB.REQSESS: REQUEST AN LU-LU*/
*                       /* SESSION.                                  */
*                       /*                                           */
*                       /*********************************************/
*                                                               04S0867
*                       IF TRMLUIT=ON×/* DOES LU INITIATE SESSIONS OR
*                                      ...                           */
*                           TRMSESRQ=ON×/* ... IS A SESSION REQUESTED
*                                                            @YM07432*/
*                           (SIBCHAIN^=0&SIBSSTAT^=SIBSFINL)/* OR IS
*                                      SIB AVAILABLE FOR NEW SESSION
*                                                            @YM07432*/
*                         THEN                                  04S0867
         TM    TRMLUIT(RTRM),B'01001000'                        04S0867
         BNZ   @RT00867                                         04S0867
         L     @15,SIBCHAIN(,RSIB)                              04S0867
         LTR   @15,@15                                          04S0867
         BZ    @RF00867                                         04S0867
         TM    SIBSSTAT(RSIB),B'00010000'                       04S0867
         BNO   @RT00867                                         04S0867
         TM    SIBSSTAT(RSIB),B'00001100'                       04S0867
         BNZ   @RT00867                                         04S0867
*                         ;         /* YES, NO FURTHER PROCESSING
*                                      REQUIRED                      */
*                       ELSE                                    04S0869
*                         DO;                                   04S0869
@RF00867 DS    0H                                               04S0870
*                           IF QCBDELAY=ON THEN/* TEST FOR QCB IN
*                                      TIME DELAY                    */
         TM    QCBDELAY(RQCB),B'00000010'                       04S0870
         BNO   @RF00870                                         04S0870
*                             DO;   /* QCB IN TIME DELAY             */
*                               RPARM=RQCB;/* SET QCB ADDRESS        */
         LR    RPARM,RQCB                                       04S0872
*                               CALL IEDQHG02;/* CALL TIME DELAY TASK
*                                      REMOVAL ROUTINE               */
         L     @15,AVTHG02(,RAVT)                               04S0873
         BALR  @14,@15                                          04S0873
*                               QCBSLINK=QCBSTCHN;/* RESET LINK FIELD
*                                                            @YM08084*/
         MVC   QCBSLINK(3,RQCB),QCBSTCHN(RQCB)                  04S0874
*                               QCBSTCHN=ADDR(QCBSTVTO);/* INSERT
*                                      SEND SCHEDULER IN STCB CHAIN  */
         LA    @15,QCBSTVTO(,RQCB)                              04S0875
         STCM  @15,7,QCBSTCHN(RQCB)                             04S0875
*                             END;                              04S0876
*                           RFY                                 04S0877
*                             RUNIT RSTD;/* RESTRICT FOR CS LOOP
*                                                            @YM07266*/
@RF00870 DS    0H                                               04S0878
*                           RFY                                 04S0878
*                             RDISP UNRSTD;/* UNRESTRICT FOR CS LOOP
*                                                            @YM07266*/
*                           SAVREG=RDISP;/* SAVE REGISTER 11 @YM07266*/
         ST    RDISP,SAVREG                                     04S0879
*                           TRMSESRQ=ON;/* INDICATE THAT SESSION IS
*                                      REQUESTED                     */
         LA    @11,TRMSESRQ(,RTRM)                              04S0880
         LR    @10,@11                                          04S0880
         LA    @15,3                                            04S0880
         NR    @10,@15                                          04S0880
         LCR   @10,@10                                          04S0880
         ALR   @11,@10                                          04S0880
         L     @15,0(,@11)                                      04S0880
@GL00027 LR    @09,@15                                          04S0880
         O     @09,@CB02313+3(@10)                              04S0880
         CS    @15,@09,0(@11)                                   04S0880
         BNE   @GL00027                                         04S0880
*                           RDISP=SAVREG;/* RESTORE REGISTER 11 04S0881
*                                                            @YM07266*/
         L     RDISP,SAVREG                                     04S0881
*                           RFY                                 04S0882
*                             RDISP RSTD;/*                  @YM07266*/
*                           RFY                                 04S0883
*                             RUNIT UNRSTD;/*                @YM07266*/
*                           QCBELCHN=ADDR(SAVTLUSQ);/* QUEUE TO LUS  */
         L     @15,AVTSAVTP(,RAVT)                              04S0884
         LA    @15,SAVTLUSQ(,@15)                               04S0884
         STCM  @15,7,QCBELCHN(RQCB)                             04S0884
*                           QCBPRI=PRILUSQB;/* SET PRIORITY          */
         MVI   QCBPRI(RQCB),X'E2'                               04S0885
*                           RPARM=RQCB;/* SET ELEMENT TO TPOST       */
         LR    RPARM,RQCB                                       04S0886
*                           SAVEQCB=RQCB;/* SAVE QCB ADDRESS         */
         ST    RQCB,SAVEQCB                                     04S0887
*                           CALL DSPPOSTR;/* TPOST THE ELEMENT       */
         LA    @15,DSPPOSTR(,RDISP)                             04S0888
         BALR  @14,@15                                          04S0888
*                           RQCB=SAVEQCB;/* RESTORE QCB ADDRESS      */
         L     RQCB,SAVEQCB                                     04S0889
*                         END;                                  04S0890
*                     END;                                      03S0891
@RT00867 DS    0H                                               03S0892
*                   RFY                                         03S0892
*                     RSIB UNRSTD;                              03S0892
@RC00863 DS    0H                                               03S0893
*                 END;                                          03S0893
*             END;                                              03S0894
*           ELSE                    /* NOT SNA RESOURCE              */
*             IF TRMSPACT=OFF&      /* IF SUPERIOR RESOURCE INACTIVE
*                                      AND                   @ZM45390*/
*                 QCBTSSES=OFF THEN /* NOT IN TSO SESSION THEN  03S0895
*                                                            @ZM45390*/
         B     @RC00856                                         03S0895
@RF00856 TM    TRMSPACT(RTRM),B'00010000'                       03S0895
         BNZ   @RF00895                                         03S0895
         TM    QCBTSSES(RQCB),B'10000000'                       03S0895
         BNZ   @RF00895                                         03S0895
*               RSTATE=STEXIT;      /* REQUEST EXIT                  */
         LA    RSTATE,3                                         03S0896
*           IF RSTATE^=STEXIT       /* TEST INTERNAL STATE VALUE     */
*             THEN                  /* EXIT IS NOT REQUESTED         */
@RF00895 DS    0H                                               03S0897
@RC00856 C     RSTATE,@CF00073                                  03S0897
         BE    @RF00897                                         03S0897
*             DO;                                               03S0898
*               IF TRMSESSN=OFF&    /* IF NOT IN SESSION AND @YM05685*/
*                   (TRMTYPE=TRMCTERM×/* CTERM OR            @YM05685*/
*                   QCBSTPRI=QCBCALLN) THEN/* CALL IN ONLY TRM THEN
*                                                            @YM05685*/
         TM    TRMSESSN(RTRM),B'01000000'                       03S0899
         BNZ   @RF00899                                         03S0899
         CLI   TRMTYPE(RTRM),X'48'                              03S0899
         BE    @RT00899                                         03S0899
         CLI   QCBSTPRI(RQCB),X'50'                             03S0899
         BNE   @RF00899                                         03S0899
@RT00899 DS    0H                                               03S0900
*                 QCBSNDRQ=ON;      /* INDICATE SS REQUESTED FOR
*                                      LATER PLCB ASSIGNMENT @YM05685*/
         LR    @15,RQCB                                         03S0900
         AL    @15,@CF02310                                     03S0900
         OI    QCBSNDRQ-4(@15),B'00100000'                      03S0900
*               ELSE                                            03S0901
*                 IF QCBPLCBN=ON THEN/* TEST FOR PLCB ALLOCATED      */
         B     @RC00899                                         03S0901
@RF00899 LR    @15,RQCB                                         03S0901
         SL    @15,@CF00044                                     03S0901
         TM    QCBPLCBN(@15),B'10000000'                        03S0901
         BNO   @RF00901                                         03S0901
*                   DO;             /* PLCB IS ALLOCATED - INITIALIZE
*                                      IT                            */
*                                                               04S0903
*                     /***********************************************/
*                     /*                                             */
*                     /* LCBSCAN1.SCHPLCB.INITPLCB: INITIALIZE THE   */
*                     /* PLCB.                                       */
*                     /*                                             */
*                     /***********************************************/
*                                                               04S0903
*                     RLCB=QCBPLCBA;/* GET PLCB ADDRESS              */
         L     RLCB,QCBPLCBA-1(,@15)                            04S0903
         LA    RLCB,0(,RLCB)                                    04S0903
*                     IF QCBTSSES=ON THEN/* TEST FOR TSO SESSION     */
         TM    QCBTSSES(RQCB),B'10000000'                       04S0904
         BNO   @RF00904                                         04S0904
*                       DO;         /* TSO SESSION                   */
*                         RFY                                   04S0906
*                           RSELECT RSTD;                       04S0906
*                         RSELECT=TSOA01;/* SELECT VALUE FOR QCB POST
*                                      ENTRY TO IEDAYJ               */
         LA    RSELECT,1                                        04S0907
*                         CALL IEDAYJ;/* CALL IEDAYJ, TSO SCHEDULER  */
         L     @10,IEDTTPTR(,RAVT)                              04S0908
         L     @15,TSIRNSCH(,@10)                               04S0908
         BALR  @14,@15                                          04S0908
*                         RFY                                   04S0909
*                           RSELECT UNRSTD;                     04S0909
*                       END;                                    04S0910
*                     ELSE          /* ELSE INSERT SEND SCHEDULER IF
*                                      NECESSARY                     */
*                       DO;                                     04S0911
         B     @RC00904                                         04S0911
@RF00904 DS    0H                                               04S0912
*                         IF LCBSTCBA->STCBVTO=DSPSEND/* IS SEND
*                                      SCHEDULER IN THE PLCB         */
*                           THEN                                04S0912
         L     @15,LCBSTCBA-1(,RLCB)                            04S0912
         CLI   STCBVTO(@15),X'22'                               04S0912
         BE    @RT00912                                         04S0912
*                           ;       /* YES, NO PROCESSING            */
*                         ELSE      /* SEND SCHEDULER NOT IN THE PLCB*/
*                           DO;                                 04S0914
*                             RSTCB=RLCB;/* SET PLCB AS THE RECIPIENT
*                                      OF THE STCB - RQCB HAS ADDR OF
*                                      QCB CONTAINING THE STCB NOW   */
         LR    RSTCB,RLCB                                       04S0915
*                             SAVEQCB=RQCB;/* SAVE QCB ADDRESS       */
         ST    RQCB,SAVEQCB                                     04S0916
*                             CALL DSPUNAVR;/* PUT SEND SCHEDULER
*                                      INTO THE PLCB                 */
         LA    @15,DSPUNAVR(,RDISP)                             04S0917
         BALR  @14,@15                                          04S0917
*                             RQCB=SAVEQCB;/* RESTORE QCB ADDRESS    */
         L     RQCB,SAVEQCB                                     04S0918
*                           END;                                04S0919
*                       END;                                    04S0920
@RT00912 DS    0H                                               04S0921
*                     IF LCBFREEN=ON THEN/* TEST FOR LINE FREE       */
@RC00904 TM    LCBFREEN(RLCB),B'00000100'                       04S0921
         BNO   @RF00921                                         04S0921
*                       DO;         /* LINE IS FREE                  */
*                         LCBFREEN=OFF;/* SET LINE NOT FREE          */
*                         LCBSENDN=ON;/* MARK LINE AS SENDING        */
         OI    LCBSENDN(RLCB),B'00000001'                       04S0924
         NI    LCBFREEN(RLCB),B'11111011'                       04S0924
*                         LCBQCBA=RLCB;/* QUEUE PLCB TO ITSELF       */
         STCM  RLCB,7,LCBQCBA(RLCB)                             04S0925
*                         LCBPRI=PRILNFRE;/* SET PRIORITY            */
         MVI   LCBPRI(RLCB),X'E0'                               04S0926
*                         RPARM=RLCB;/* MAKE PLCB THE ELEMENT TO
*                                      TPOST                         */
         LR    RPARM,RLCB                                       04S0927
*                         SAVEQCB=RQCB;/* SAVE QCB ADDRESS           */
         ST    RQCB,SAVEQCB                                     04S0928
*                         CALL DSPPOSTR;/* TPOST THE ELEMENT         */
         LA    @15,DSPPOSTR(,RDISP)                             04S0929
         BALR  @14,@15                                          04S0929
*                         RQCB=SAVEQCB;/* RESTORE QCB ADDRESS        */
         L     RQCB,SAVEQCB                                     04S0930
*                       END;                                    04S0931
*                   END;                                        03S0932
*                 ELSE              /* PLCB NOT ALLOCATED            */
*                   IF QCBDELAY=OFF /* TEST FOR QCB ON TIME DELAY    */
*                     THEN          /* QCB NOT ON TIME DELAY         */
         B     @RC00901                                         03S0933
@RF00901 TM    QCBDELAY(RQCB),B'00000010'                       03S0933
         BNZ   @RF00933                                         03S0933
*                     DO;           /* REQUEST A PLCB                */
*                                                               04S0935
*                       /*********************************************/
*                       /*                                           */
*                       /* LCBSCAN1.SCHPLCB.REQPLCB: REQUEST A PLCB. */
*                       /*                                           */
*                       /*********************************************/
*                                                               04S0935
*                       IF QCBTSSES=ON THEN/* CHECK FOR TSO SESSION
*                                      IN PROGRESS                   */
         TM    QCBTSSES(RQCB),B'10000000'                       04S0935
         BNO   @RF00935                                         04S0935
*                         DO;       /* CALL IEDAYJ IF SO             */
*                           RFY                                 04S0937
*                             RSELECT RSTD;                     04S0937
*                           RSELECT=TSOA01;/* SELECT VALUE FOR QCB
*                                      POST TO IEDAYJ                */
         LA    RSELECT,1                                        04S0938
*                           CALL IEDAYJ;/* CALL IEDAYJ, TSO SCHEDULER*/
         L     @10,IEDTTPTR(,RAVT)                              04S0939
         L     @15,TSIRNSCH(,@10)                               04S0939
         BALR  @14,@15                                          04S0939
*                           RFY                                 04S0940
*                             RSELECT UNRSTD;                   04S0940
*                         END;                                  04S0941
*                       ELSE        /* ELSE NORMAL SEND SCHEDULING   */
*                         DO;                                   04S0942
         B     @RC00935                                         04S0942
@RF00935 DS    0H                                               04S0943
*                           QCBSNDRQ=ON;/* REQUEST SEND SCHEDULER    */
         LR    @15,RQCB                                         04S0943
         SL    @15,@CF00044                                     04S0943
         OI    QCBSNDRQ(@15),B'00100000'                        04S0943
*                           IF QCBRCVRQ=OFF THEN/* TEST FOR NEED TO
*                                      REQUEST PLCB                  */
         TM    QCBRCVRQ(@15),B'00010000'                        04S0944
         BNZ   @RF00944                                         04S0944
*                             DO;   /* NEED TO REQUEST PLCB          */
*                               IF TRMINOUT=ON&/* IS INVITE     04S0946
*                                      OUTSTANDING ...       @YM05724*/
*                                   TRMSNA=OFF THEN/* ... TO PRE-SNA
*                                      RESOURCE              @YM05724*/
         TM    TRMINOUT(RTRM),B'00000001'                       04S0946
         BNO   @RF00946                                         04S0946
         TM    TRMSNA(RTRM),B'00000010'                         04S0946
         BNZ   @RF00946                                         04S0946
*                                 CALL RESETRTN;/* YES, ISSUE RESET  */
         BAL   @14,RESETRTN                                     04S0947
*                               ELSE/* NO INVITE OUTSTANDING         */
*                                 IF TRMRDOUT=ON&/* TEST FOR READ
*                                      OUTSTANDING...        @YM05724*/
*                                     TRMSNA=OFF THEN/* ... TO  04S0948
*                                      PRE-SNA RESOURCE      @YM05724*/
         B     @RC00946                                         04S0948
@RF00946 TM    TRMRDOUT(RTRM),B'00000010'                       04S0948
         BNO   @RF00948                                         04S0948
         TM    TRMSNA(RTRM),B'00000010'                         04S0948
         BNZ   @RF00948                                         04S0948
*                                   DO;/*                    @YM06132*/
*                                    RBRANCH=TRMCHCIN-1;/* GET DCT
*                                      INDEX                 @YM06132*/
         SLR   RBRANCH,RBRANCH                                  04S0950
         IC    RBRANCH,TRMCHCIN(,RTRM)                          04S0950
         BCTR  RBRANCH,0                                        04S0950
*                                    RBRANCH=RBRANCH*AVTDCTLN;/*
*                                      COMPUTE DCT ENTRY OFFSET 04S0951
*                                                            @YM06132*/
         LR    @10,RBRANCH                                      04S0951
         MH    @10,AVTDCTLN(,RAVT)                              04S0951
         LR    RBRANCH,@10                                      04S0951
*                                    RBRANCH=RBRANCH+AVTCSTCS;/* GET
*                                      DCT ENTRY ADDRESS     @YM06132*/
         AL    RBRANCH,AVTCSTCS(,RAVT)                          04S0952
*                                    IF RBRANCH->DCTSTCTL=ON&/* IS
*                                      THIS A ...            @YM06132*/
*                                        TRMDIAL=OFF THEN/* ... 04S0953
*                                      POLLED TERMINAL               */
         TM    DCTSTCTL(RBRANCH),B'00010000'                    04S0953
         BNO   @RF00953                                         04S0953
         TM    TRMDIAL(RTRM),B'00001000'                        04S0953
         BNZ   @RF00953                                         04S0953
*                                     TRMWTNEG=ON;/* YES, INDICATE
*                                      WAITING FOR NEGATIVE POLL
*                                      LIMIT                         */
         OI    TRMWTNEG(RTRM),B'10000000'                       04S0954
*                                    ELSE/* NOT A POLLED TERMINAL    */
*                                     CALL RESETRTN;/* ISSUE RESET   */
         B     @RC00953                                         04S0955
@RF00953 BAL   @14,RESETRTN                                     04S0955
*                                   END;/*                   @YM06132*/
*                                 ELSE/* NO READ OUTSTANDING         */
*                                   IF TRMCONT=OFF THEN/* DO NOT
*                                      REQUEST PLCB IF CONTACT  04S0957
*                                      OUTSTANDING                   */
         B     @RC00948                                         04S0957
@RF00948 TM    TRMCONT(RTRM),B'10000000'                        04S0957
         BNZ   @RF00957                                         04S0957
*                                    CALL CALLIAP;/* REQUEST A PLCB  */
         BAL   @14,CALLIAP                                      04S0958
*                             END;                              04S0959
@RF00957 DS    0H                                               04S0959
@RC00948 DS    0H                                               04S0959
@RC00946 DS    0H                                               04S0960
*                         END;                                  04S0960
@RF00944 DS    0H                                               04S0961
*                     END;                                      03S0961
@RC00935 DS    0H                                               03S0962
*             END;                                              03S0962
@RF00933 DS    0H                                               03S0962
@RC00901 DS    0H                                               03S0962
@RC00899 DS    0H                                               03S0963
*           IF RSTATE=STFRELCB THEN /* IF TSO REQUESTS PLCB     03S0963
*                                      DEALLOCATION                  */
@RF00897 C     RSTATE,@CF00044                                  03S0963
         BNE   @RF00963                                         03S0963
*             DO;                   /* SET UP TO FREE PLCB AND EXIT  */
*               RPARM=RLCB;         /* PARAMETER LIST FOR IEDIAP07
*                                                            @YM04668*/
         LR    RPARM,RLCB                                       03S0965
*               CALL IEDIAP07;      /* ACCESS PLCB DEALLOCATION 03S0966
*                                      ROUTINE                       */
         L     @10,AVTSAVTP(,RAVT)                              03S0966
         L     @15,SAVTPRTN(,@10)                               03S0966
         BALR  @14,@15                                          03S0966
*             END;                                              03S0967
*         END;                                                  03S0968
*     END;                                                      02S0969
*   END LCBSCAN1;                                               02S0970
@EL00006 DS    0H                                               02S0970
@EF00006 DS    0H                                               02S0970
@ER00006 L     @14,@SA00006                                     02S0970
         BR    @14                                              02S0970
*                                                               02S0971
*   /*****************************************************************/
*   /*                                                               */
*   /* RESETRTN: IF A RESET IS NOT ALREADY IN PROGRESS THEN GET A    */
*   /* BUFFER FROM BUFFER STEAL AND REQUEST THAT A RESET PIU BE SENT.*/
*   /* IF A BUFFER IS NOT AVAILABLE, THEN CALL SUBROUTINE CALLIAP.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0971
*RESETRTN:                                                      02S0971
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0971
RESETRTN ST    @14,@SA00007                                     02S0971
*   RFY                                                         02S0972
*    (RUNIT,                                                    02S0972
*     RBRANCH) RSTD;                                            02S0972
*   IF TRMASNXI=OFF THEN            /* IF RESET NOT ALREADY IN  02S0973
*                                      PROGRESS ...                  */
         TM    TRMASNXI(RTRM),B'00010000'                       02S0973
         BNZ   @RF00973                                         02S0973
*     DO;                           /* ... BUILD AND SEND RESET      */
*       RUNIT=BFRSUNIT;             /* SET NUMBER OF UNITS PER BUFFER*/
         LA    @10,1                                            02S0975
         LR    RUNIT,@10                                        02S0975
*       RPARM=BFRSBFRS;             /* SET NUMBER OF BUFFERS    02S0976
*                                      REQUESTED                     */
         LR    RPARM,@10                                        02S0976
*       CALL IEDQGA02;              /* CALL BUFFER STEAL MODULE      */
         L     @15,AVTSTEAL(,RAVT)                              02S0977
         BALR  @14,@15                                          02S0977
*       IF RBRANCH^=0 THEN          /* TEST FOR BUFFER AVAILABLE     */
         LTR   RBRANCH,RBRANCH                                  02S0978
         BZ    @RF00978                                         02S0978
*         DO;                       /* BUFFER WAS AVAILABLE          */
*           RPRF=RBRANCH;           /* SAVE BUFFER ADDRESS           */
         LR    RPRF,RBRANCH                                     02S0980
*           CALL BLDRESET;          /* YES, ISSUE RESET              */
         BAL   @14,BLDRESET                                     02S0981
*           TRMASNXI=ON;            /* INDICATE RESET IN PROGRESS    */
         OI    TRMASNXI(RTRM),B'00010000'                       02S0982
*         END;                                                  02S0983
*       ELSE                        /* BUFFER NOT AVAILABLE          */
*         CALL CALLIAP;             /* REQUEST A PLCB                */
         B     @RC00978                                         02S0984
@RF00978 BAL   @14,CALLIAP                                      02S0984
*     END;                                                      02S0985
*   RFY                                                         02S0986
*    (RUNIT,                                                    02S0986
*     RBRANCH) UNRSTD;                                          02S0986
*   END RESETRTN;                                               02S0987
@EL00007 DS    0H                                               02S0987
@EF00007 DS    0H                                               02S0987
@ER00007 L     @14,@SA00007                                     02S0987
         BR    @14                                              02S0987
*                                                               02S0988
*   /*****************************************************************/
*   /*                                                               */
*   /* RMVSCHED: REMOVE THE SEND SCHEDULER FROM THE PLCB AND INSERT  */
*   /* BY PRIORITY INTO THE DESTINATION QCB.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0988
*RMVSCHED:                                                      02S0988
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0988
RMVSCHED ST    @14,@SA00008                                     02S0988
*   RSTCB=RQCB;                     /* DESTINATION QCB IS TO CONTAIN
*                                      THE SEND SCHEDULER STCB       */
         LR    RSTCB,RQCB                                       02S0989
*   SAVEQCB=RQCB;                   /* SAVE QCB ADDRESS              */
         ST    RQCB,SAVEQCB                                     02S0990
*   RQCB=RLCB;                      /* PLCB CONTAINS THE SEND   02S0991
*                                      SCHEDULER NOW                 */
         LR    RQCB,RLCB                                        02S0991
*   CALL DSPUNAVR;                  /* MOVE SEND SCHEDULER STCB FROM
*                                      PLCB TO THE DESTINATION QCB   */
         LA    @15,DSPUNAVR(,RDISP)                             02S0992
         BALR  @14,@15                                          02S0992
*   RQCB=SAVEQCB;                   /* RESTORE QCB ADDRESS           */
         L     RQCB,SAVEQCB                                     02S0993
*   RSTATE=STBYPAS;                 /* REQUEST BYPASS                */
         LA    RSTATE,1                                         02S0994
*   END RMVSCHED;                                               02S0995
@EL00008 DS    0H                                               02S0995
@EF00008 DS    0H                                               02S0995
@ER00008 L     @14,@SA00008                                     02S0995
         BR    @14                                              02S0995
*   END IEDIAQ                                                  01S0996
*                                                               01S0996
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TDCTD   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TLGBD   )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TRECBD  )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TSTCBD  )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTSID   )                                       */
*/*%INCLUDE SYSLIB  (TSOECDD )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (SENDSCH )                                       */
*/*%INCLUDE SYSUT5  (SETUP   )                                       */
*/*%INCLUDE SYSUT5  (CHKLOCK )                                       */
*/*%INCLUDE SYSUT5  (CHKBYPAS)                                       */
*/*%INCLUDE SYSUT5  (CHKRESET)                                       */
*/*%INCLUDE SYSUT5  (CHKTSO  )                                       */
*/*%INCLUDE SYSUT5  (CHKSEND )                                       */
*/*%INCLUDE SYSUT5  (SCHED   )                                       */
*/*%INCLUDE SYSUT5  (SCANLOOP)                                       */
*/*%INCLUDE SYSUT5  (INITMODE)                                       */
*/*%INCLUDE SYSUT5  (CHKERLCK)                                       */
*/*%INCLUDE SYSUT5  (DISKREAD)                                       */
*/*%INCLUDE SYSUT5  (ANALYSIS)                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (BLDRESET)                                       */
*/*%INCLUDE SYSUT5  (CALLIAP )                                       */
*/*%INCLUDE SYSUT5  (GETBFR  )                                       */
*/*%INCLUDE SYSUT5  (LCBSCAN )                                       */
*/*%INCLUDE SYSUT5  (LCBSCAN1)                                       */
*/*%INCLUDE SYSUT5  (SCHPLCB )                                       */
*/*%INCLUDE SYSUT5  (REQSESS )                                       */
*/*%INCLUDE SYSUT5  (INITPLCB)                                       */
*/*%INCLUDE SYSUT5  (REQPLCB )                                       */
*/*%INCLUDE SYSUT5  (RESETRTN)                                       */
*/*%INCLUDE SYSUT5  (RMVSCHED)                                       */
*                                                               01S0996
*       ;                                                       01S0996
@DATA    DS    0H
         DS    0F
@SA00006 DS    1F
@SA00004 DS    1F
@SA00002 DS    1F
@SA00008 DS    1F
@SA00003 DS    1F
@SA00007 DS    1F
         DS    0F
@CF00060 DC    F'1'
@CF00064 DC    F'2'
@CF00073 DC    F'3'
@CF00255 DC    F'4'
@CF00162 DC    F'5'
@CF00581 DC    F'7'
@CF00044 DC    F'8'
@CF00244 DC    F'12'
@CF01880 DC    F'14'
@CF00174 DC    F'16'
@CF01549 DC    F'28'
@CF02309 DC    F'-8'
@CF02310 DC    F'-4'
@CF02212 DC    XL4'00FFFFFC'
@CF02297 DC    XL4'0000FFFF'
         DS    0D
SAVEQCB  DS    A
RETADDR  DS    A
BASADDR  DS    A
SAVERPRF DS    A
SAVREG   DS    A
@CB02301 DC    B'111111111111111111111111111111011111111111111111111111C
               11'
@CB02313 DC    B'000000000000000000000000000010000000000000000000000000C
               00'
SAVSTAT1 DS    BL1
         ORG   SAVSTAT1
SAVRCLLN DS    BL1
SAVCTLMD EQU   SAVSTAT1+0
SAVOCNI  EQU   SAVSTAT1+0
SAVINITN EQU   SAVSTAT1+0
SAVCONT  EQU   SAVSTAT1+0
SAVFREEN EQU   SAVSTAT1+0
SAVRECVN EQU   SAVSTAT1+0
SAVSENDN EQU   SAVSTAT1+0
         ORG   SAVSTAT1+1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IEDQAPTR EQU   @13
RDISP    EQU   @11
IEDQLPTR EQU   @04
LCBXPTR  EQU   @05
IEDQPPTR EQU   @06
IEDQQPTR EQU   @07
IEDQSPTR EQU   @03
RTRM     EQU   @08
RAVT     EQU   @13
RLCB     EQU   @04
RPRF     EQU   @06
RQCB     EQU   @07
RSCB     EQU   @03
RSIB     EQU   @05
RUNIT    EQU   @00
RSELECT  EQU   @00
RPARM    EQU   @01
RSTATE   EQU   @02
RSTCB    EQU   @03
RCOUNT   EQU   @09
RBASE    EQU   @12
RRETURN  EQU   @14
RBRANCH  EQU   @15
RRETCODE EQU   @15
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
AVTCSTCS EQU   IEDQAVTD+256
AVTREADD EQU   IEDQAVTD+308
AVTBUFSW EQU   IEDQAVTD+312
@NM00004 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+352
AVTOSECB EQU   IEDQAVTD+420
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSEND  EQU   IEDQAVTD+524
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTTSOPT EQU   IEDQAVTD+668
AVTBFREB EQU   IEDQAVTD+708
AVTBFRFG EQU   IEDQAVTD+712
AVTBFRTB EQU   IEDQAVTD+720
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTDSIOB EQU   IEDQAVTD+804
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTBIT1  EQU   IEDQAVTD+978
AVTTSON  EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTBIT2  EQU   IEDQAVTD+979
AVTBIT3  EQU   IEDQAVTD+980
AVTSTEAL EQU   IEDQAVTD+988
AVTDCTLN EQU   IEDQAVTD+1000
AVTBIT4  EQU   IEDQAVTD+1064
@NM00086 EQU   IEDQAVTD+1160
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTPREQ EQU   IEDNSVTD+16
SAVTPRTN EQU   IEDNSVTD+32
SAVTCNIR EQU   IEDNSVTD+56
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSAO  EQU   IEDNSVTD+196
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUCMND  EQU   IEDBDU
BDUMODIF EQU   IEDBDU+1
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDDCT   EQU   0
DCTBYTE1 EQU   IEDDCT+1
DCTBYTE2 EQU   IEDDCT+2
DCTSTCTL EQU   DCTBYTE2
DCTBYTE3 EQU   IEDDCT+3
DCTBYTE4 EQU   IEDDCT+4
DCTBYTE5 EQU   IEDDCT+5
IEDQDISP EQU   0
DSPDISP  EQU   4
DSPBYPAS EQU   20
DSPPOST  EQU   24
DSPPOSTR EQU   28
DSPUNAVR EQU   44
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBQCBA  EQU   LCBRCB+1
LCBPRI   EQU   LCBRCB+4
LCBRSKEY EQU   IEDQLCB+8
LCBSTCBA EQU   IEDQLCB+9
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBRECOF EQU   IEDQLCB+68
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBRCLLN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBSENDN EQU   LCBSTAT1
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBNEGRP EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBRESP  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBRECAD EQU   IEDQLCB+73
LCBERB   EQU   IEDQLCB+76
LCBERBQB EQU   LCBERB+1
LCBERBPY EQU   IEDQLCB+80
LCBERBST EQU   IEDQLCB+84
LCBPRCPG EQU   LCBERBST
LCBDLNKN EQU   LCBERBST
LCBERBCH EQU   IEDQLCB+85
LCBERBCT EQU   IEDQLCB+88
LCBRBCT1 EQU   LCBERBCT
LCBRBCT2 EQU   LCBERBCT+1
LCBTTCIN EQU   IEDQLCB+90
LCBMSGFM EQU   IEDQLCB+92
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBRTRRO EQU   LCBSTAT6
LCBWAITC EQU   LCBTPCD+5
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDNLGB  EQU   0
LGBBUFOU EQU   IEDNLGB+20
LGBPCI   EQU   IEDNLGB+25
LGBBYTE  EQU   IEDNLGB+29
LGBOPACE EQU   IEDNLGB+30
LGBOFLGS EQU   IEDNLGB+48
LGBRESER EQU   IEDNLGB+56
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFTICON EQU   PRFTICC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
PRFLCB   EQU   IEDQPRF+13
@NM00172 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00172
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
PRFDEST  EQU   IEDQPRF+40
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2TNTI EQU   PRF2FLG2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBTSQ   EQU   QCBDSFLG
QCBCORE  EQU   QCBDSFLG
QCBDISK  EQU   QCBDSFLG
QCBNREUS EQU   QCBDISK
QCBREUS  EQU   QCBDISK
QCBHELD  EQU   QCBDSFLG
QCBELCHN EQU   IEDQQCB+1
QCBPRI   EQU   IEDQQCB+4
QCBSTVTO EQU   IEDQQCB+8
QCBSTCHN EQU   IEDQQCB+9
QCBSTPRI EQU   IEDQQCB+12
QCBSLINK EQU   IEDQQCB+13
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBTRMHO EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBINSRC EQU   IEDQQCB+21
@NM00182 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00182+1
QCBPOSTO EQU   QCBTSOF2
QCBTSOF1 EQU   @NM00182+2
QCBDELAY EQU   QCBTSOF1
QCBDISC  EQU   QCBTSOF1
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBPRLVL EQU   QCBPREN
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
QCBTSSES EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
QCBFFEFO EQU   IEDQPQCB+15
QCBPRIPQ EQU   IEDQPQCB+24
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBN EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBPLCBA EQU   IEDNQCB+5
QCBTTCIN EQU   QCBPLCBA+1
IEDQRECB EQU   0
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBDESTQ EQU   IEDQSCB+1
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBPRI   EQU   IEDQSCB+8
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBBFMM  EQU   SCBQTYPE
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBMLMTN EQU   SCBBSCFM
SCBDCHDR EQU   IEDQSCB+33
SCBCCHDR EQU   IEDQSCB+37
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBSCSEG EQU   SCBDNSEG
SCBCLSEG EQU   IEDQSCB+45
SCBSCHDR EQU   SCBCLSEG
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBFEFO  EQU   SCBDCSEG
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBUNTCT EQU   IEDQSCB+80
SCBEND   EQU   IEDQSCB+84
IEDSIBD  EQU   0
SIBCHAIN EQU   IEDSIBD+4
SIBINDEX EQU   IEDSIBD+8
SIBSESSN EQU   IEDSIBD+10
SIBLGOFF EQU   SIBSESSN
SIBSSTAT EQU   SIBSESSN
SIBDSTAT EQU   SIBSESSN
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBSTAT2 EQU   IEDSIBD+17
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBBIND2 EQU   SIBBIND+1
SIBBIND3 EQU   SIBBIND+2
SIBSTAT0 EQU   IEDSIBD+23
IEDQSTCB EQU   0
STCBVTO  EQU   IEDQSTCB
IEDQTNTD EQU   0
IEDQTCDE EQU   IEDQTNTD
IEDQTDCE EQU   IEDQTNTD+46
IEDTNTA  EQU   0
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHFI    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHEC    EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHDR1   EQU   TRHBYTE1
TRHBYTE2 EQU   IEDRH+2
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMNOSND EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMINPTP EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMINPUT EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
TRMCHCIN EQU   IEDQTRM+16
IEDQTSI  EQU   0
TSIFLAG  EQU   IEDQTSI
TSIDYQCB EQU   IEDQTSI+52
TSIDYQFG EQU   TSIDYQCB
TSIRNSCH EQU   IEDQTSI+112
TSITSW   EQU   IEDQTSI+124
TSIGMAIN EQU   TSITSW+16
GMFLAG   EQU   TSIGMAIN
GMCODE   EQU   TSIGMAIN+1
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHBBIU  EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
PIU      EQU   0
IEDIAP   EQU   0
IEDQGA02 EQU   0
IEDQHG02 EQU   0
IEDQTNT  EQU   0
IEDAYJ   EQU   0
IEDIAP07 EQU   0
DSPCHAIN EQU   12
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPWAIT  EQU   16
QCBLDCB  EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   0
TNTFIRST EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00135 EQU   LCBCPA+40
LCBNCPPT EQU   @NM00135+1
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
IEDNLPTR EQU   LCBDCBPT
IEDQNPTR EQU   AVTRNMPT
TRMPRE1  EQU   TRMBYTE4
TRMCONT  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMNCP1  EQU   TRMBYTE4
TRMINOP  EQU   TRMNCP1
TRMPRE   EQU   TRMBYTE3
TRMSTPND EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMINOUT EQU   TRMPRE
TRMNCP   EQU   TRMBYTE3
TRMNCPCL EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLUIT  EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMLINK  EQU   TRMBYTE3
IEDTTPTR EQU   AVTTSOPT
BDUTEXT  EQU   BDUEND
PRFSHDR  EQU   IEDQPRF+42
SCBRGSAV EQU   SCBEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00207 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00206 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMWROUT EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
@NM00205 EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
@NM00143 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00142 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00141 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00140 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00139 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00138 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00137 EQU   @NM00135+4
@NM00136 EQU   @NM00135
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00134 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00133 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00132 EQU   LCBCSWU1
@NM00131 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00130 EQU   LCBRSPIN
TTHTAG2  EQU   TTHTAG+1
@NM00221 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00220 EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
GMDEVCH  EQU   TSIGMAIN+40
GMTSSIZ  EQU   TSIGMAIN+38
GMTSCNT  EQU   TSIGMAIN+36
GMLNSPC  EQU   TSIGMAIN+34
GMTCSPC  EQU   TSIGMAIN+32
GMCRUNT  EQU   TSIGMAIN+28
GMCRBUF  EQU   TSIGMAIN+24
GMTCBUF  EQU   TSIGMAIN+20
GMTSBUF  EQU   TSIGMAIN+16
GMBFRS   EQU   TSIGMAIN+14
GMHBFR   EQU   TSIGMAIN+12
GMBFUNIT EQU   TSIGMAIN+10
GMBFSIZE EQU   TSIGMAIN+8
GMSATCT  EQU   TSIGMAIN+6
GMCARCT  EQU   TSIGMAIN+4
GMLNSZ   EQU   TSIGMAIN+3
GMLNNO   EQU   TSIGMAIN+2
@NM00219 EQU   GMCODE
GMTSO    EQU   GMCODE
GMLINE   EQU   GMCODE
GMTCAM   EQU   GMCODE
@NM00218 EQU   GMCODE
@NM00217 EQU   GMFLAG
GMNUNLCK EQU   GMFLAG
GMFRMAT  EQU   GMFLAG
GMINIT   EQU   GMFLAG
GMENCIN  EQU   GMFLAG
GMENCON  EQU   GMFLAG
@NM00216 EQU   TSITSW
TSIAYO02 EQU   IEDQTSI+120
TSIAYO   EQU   IEDQTSI+116
TSI3705  EQU   IEDQTSI+108
TSI270X  EQU   IEDQTSI+104
TSI3270  EQU   IEDQTSI+100
TSITSDST EQU   IEDQTSI+96
TSIATTEN EQU   IEDQTSI+92
TSICPBC  EQU   IEDQTSI+88
TSICPBI  EQU   IEDQTSI+84
TSIDEST  EQU   IEDQTSI+80
@NM00215 EQU   IEDQTSI+64
TSIDYDLY EQU   IEDQTSI+60
TSIDYLNK EQU   IEDQTSI+57
TSIDYPRI EQU   IEDQTSI+56
@NM00214 EQU   TSIDYQCB+1
@NM00213 EQU   TSIDYQFG
TSIDYQB  EQU   TSIDYQFG
@NM00212 EQU   TSIDYQFG
TSIDYPOS EQU   TSIDYQFG
@NM00211 EQU   TSIDYQFG
TSIHALT  EQU   IEDQTSI+48
TSIMSGEN EQU   IEDQTSI+44
TSITSAP  EQU   IEDQTSI+40
TSITSBQ  EQU   IEDQTSI+36
TSIBUFQ  EQU   IEDQTSI+32
TSISCHED EQU   IEDQTSI+28
TSISIMAT EQU   IEDQTSI+24
TSIHANG  EQU   IEDQTSI+20
TSIEDIT  EQU   IEDQTSI+16
TSISTAE  EQU   IEDQTSI+12
TSINPUT  EQU   IEDQTSI+8
TSILINK  EQU   IEDQTSI+5
TSIPRI   EQU   IEDQTSI+4
TSIELCHN EQU   IEDQTSI+1
@NM00210 EQU   TSIFLAG
TSIQCB   EQU   TSIFLAG
@NM00209 EQU   TSIFLAG
TSIPOST  EQU   TSIFLAG
@NM00208 EQU   TSIFLAG
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00204 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00203 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
@NM00202 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMWRBRK EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMREMB  EQU   TRMBYTE2
@NM00201 EQU   TRHBYTE2
@NM00200 EQU   TRHBYTE2
@NM00199 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00198 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00197 EQU   TRHBYTE1
@NM00196 EQU   TRHBYTE1
@NM00195 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00194 EQU   TRHBYTE1
TRHSDI   EQU   TRHBYTE0
@NM00193 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
TNTTRMAD EQU   IEDTNTA
TNTLEN   EQU   IEDQTNTD+44
TNTMIDEN EQU   IEDQTNTD+41
TNTENLEN EQU   IEDQTNTD+40
TNTSRCHX EQU   IEDQTNTD+38
STCBLINK EQU   IEDQSTCB+5
STCBPRI  EQU   IEDQSTCB+4
STCBTCIN EQU   IEDQSTCB+2
STCBINDX EQU   IEDQSTCB+1
SIBLUTYP EQU   SIBSTAT0
SIBCD    EQU   SIBSTAT0
@NM00192 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBFMODE EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBBRACK EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPEBI  EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBFMPRO EQU   IEDSIBD+19
SIBTSPRO EQU   IEDSIBD+18
@NM00191 EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBTERM  EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBBSTAT EQU   SIBSTAT1
SIBRTRP  EQU   SIBSTAT1
SIBFTERM EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBINBIU EQU   SIBSESSN
SIBSHUTC EQU   SIBSESSN
SIBRUSEG EQU   IEDSIBD
SCBTRANS EQU   IEDQSCB+81
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBCTBND EQU   SCBBLKCT
SCBHBFNO EQU   IEDQSCB+44
SCBBCTR  EQU   SCBCTBSV
SCBDESTL EQU   IEDQSCB+36
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBNOEOT EQU   SCBBSCFM
@NM00190 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00189 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00188 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00187 EQU   SCBBKFCT
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
RECBLINK EQU   IEDQRECB+5
RECBPRI  EQU   IEDQRECB+4
RECBQCBA EQU   IEDQRECB+1
RECBKEY  EQU   IEDQRECB
@NM00186 EQU   QCBPLCBA
@NM00185 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00184 EQU   QCBFHDTZ
@NM00183 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00182
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00181 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00180 EQU   QCBEOLDT
QCBLINK  EQU   IEDQQCB+5
QCBCNTEN EQU   QCBELCHN+2
@NM00179 EQU   QCBELCHN+2
@NM00178 EQU   QCBELCHN
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00177 EQU   IEDPF2+1
@NM00176 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00175 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00174 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00173 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00172+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFTI0   EQU   PRFTIC+1
@NM00171 EQU   PRFTICC
@NM00170 EQU   PRFTICC
@NM00169 EQU   PRFTICC
@NM00168 EQU   PRFTICC
@NM00167 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00166 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
LGBIVLST EQU   IEDNLGB+60
LGBRESV4 EQU   LGBRESER+3
LGBRESV3 EQU   LGBRESER+2
LGBRESV2 EQU   LGBRESER+1
LGBRESV1 EQU   LGBRESER
LGBBUFSI EQU   IEDNLGB+54
@NM00165 EQU   IEDNLGB+53
LGBILCT  EQU   IEDNLGB+52
LGBSCTAD EQU   IEDNLGB+49
@NM00164 EQU   LGBOFLGS
LGBOPEN  EQU   LGBOFLGS
@NM00163 EQU   LGBOFLGS
LGBNAME  EQU   IEDNLGB+40
@NM00162 EQU   IEDNLGB+36
LGBTRANS EQU   IEDNLGB+33
@NM00161 EQU   IEDNLGB+32
@NM00160 EQU   IEDNLGB+31
@NM00159 EQU   LGBBYTE
LGBPACK  EQU   LGBBYTE
LGBBUFMA EQU   IEDNLGB+28
LGBDSORG EQU   IEDNLGB+26
@NM00158 EQU   LGBPCI
@NM00157 EQU   LGBPCI
LGBPCINO EQU   LGBPCI
@NM00156 EQU   LGBPCI
LGBPCIAO EQU   LGBPCI
@NM00155 EQU   LGBPCI
@NM00154 EQU   LGBPCI
@NM00153 EQU   LGBPCI
@NM00152 EQU   IEDNLGB+24
LGBMHA   EQU   IEDNLGB+21
@NM00151 EQU   LGBBUFOU
LGBPREF  EQU   LGBBUFOU
@NM00150 EQU   LGBBUFOU
LGBSUBST EQU   IEDNLGB+18
LGBTYPE  EQU   IEDNLGB+17
@NM00149 EQU   IEDNLGB
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00148 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00147 EQU   LCBXFLAG
@NM00146 EQU   LCBXFLAG
@NM00145 EQU   LCBXFLAG
@NM00144 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00129 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00128 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00127 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
@NM00126 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBCOMPL EQU   LCBDLNKN
LCBERROR EQU   LCBERBST
@NM00125 EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBKY EQU   LCBERB
@NM00124 EQU   LCBTSTSW
@NM00123 EQU   LCBTSTSW
@NM00122 EQU   LCBTSTSW
@NM00121 EQU   LCBTSTSW
@NM00120 EQU   LCBTSTSW
@NM00119 EQU   LCBTSTSW
@NM00118 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBOCWTN EQU   LCBSTAT1
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00117 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00116 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00115 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUE  EQU   LCBCSWUS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00114 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00113 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00112 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00111 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00110 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00109 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00108 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00107 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBLINK  EQU   LCBRCB+5
LCBKEY   EQU   LCBRCB
@NM00106 EQU   DCTBYTE5
DCTL3270 EQU   DCTBYTE5
DCTSCS   EQU   DCTBYTE5
DCTTSPRF EQU   DCTBYTE4
DCTFMPRF EQU   DCTBYTE4
DCT2760  EQU   DCTBYTE3
DCTNOIDL EQU   DCTBYTE3
DCTCONTN EQU   DCTBYTE3
DCTBUFF  EQU   DCTBYTE3
DCTCHECK EQU   DCTBYTE3
DCTENCTL EQU   DCTBYTE3
DCTWTTA  EQU   DCTBYTE3
DCT1050  EQU   DCTBYTE3
DCTAUDIO EQU   DCTBYTE2
DCTLOCAL EQU   DCTBYTE2
DCTCONT  EQU   DCTBYTE2
DCTXMIT  EQU   DCTBYTE2
DCTTWX   EQU   DCTBYTE2
DCTBRDST EQU   DCTBYTE2
DCTBISYN EQU   DCTBYTE2
DCTUMASK EQU   DCTBYTE1
DCTSADEV EQU   DCTBYTE1
DCT3270  EQU   DCTBYTE1
DCT2741  EQU   DCTBYTE1
DCT5041  EQU   DCTBYTE1
DCTATTEN EQU   DCTBYTE1
DCTBREAK EQU   DCTBYTE1
DCTINHIB EQU   DCTBYTE1
DCTBYTE0 EQU   IEDDCT
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00091 EQU   IEDQAVTD+1170
@NM00090 EQU   IEDQAVTD+1169
@NM00089 EQU   IEDQAVTD+1168
@NM00088 EQU   IEDQAVTD+1165
@NM00087 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00085 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00084 EQU   IEDQAVTD+1068
@NM00083 EQU   IEDQAVTD+1065
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00074 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00073 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00072 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTKEYLE EQU   IEDQAVTD+960
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00069 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00068 EQU   IEDQAVTD+878
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00053 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00052 EQU   IEDQAVTD+808
@NM00051 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00050 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00049 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00048 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+724
@NM00040 EQU   IEDQAVTD+716
AVTSELCH EQU   IEDQAVTD+713
AVTBFRTN EQU   AVTBFRFG
AVTTIMQ  EQU   IEDQAVTD+704
@NM00039 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00038 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
AVTMSGS  EQU   IEDQAVTD+657
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00023 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00021 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00015 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTOCGET EQU   IEDQAVTD+320
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+314
@NM00003 EQU   IEDQAVTD+313
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00556 EQU   @RC00534
@RC00536 EQU   @RC00534
@RC00584 EQU   @RC00582
@RF00679 EQU   @RC00676
@RF00790 EQU   @EL00003
@RC00804 EQU   @EL00004
@RF00814 EQU   @EL00004
@RF00859 EQU   @RC00856
@RF00921 EQU   @RC00901
@RC00953 EQU   @RC00948
@RF00839 EQU   @EL00006
@RF00854 EQU   @EL00006
@RF00963 EQU   @EL00006
@RF00973 EQU   @EL00007
@RC00978 EQU   @EL00007
@PB00008 EQU   @EL00001
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEDIAQ,(C'PLS1014',0701,78062)
