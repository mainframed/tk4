         TITLE 'IEDAYQ - TSO TIOC 3270 OUTPUT EDIT ROUTINE'
IEDAYQ   CSECT
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A964000                                                       @G36XRYP
*C175500,183000,201000296500,311000,566500,577000,663000       @G36XRYP
*C703000                                                       @G36XRYP
*D120500                                                       @G36XRYP
*C534500,535500                                                @OY19255
*A736500                                                       @OZ24715
*A586500                                                       @OS79724
*D146500-147000                                                @OZ26971
*A148500                                                       @OZ26971
*C295500                                                       @OY19462
*A655000,656000,664000                                         @OZ26894
*C548500                                                       @OZ27387
*A551000                                                       @OZ27387
*A121500,304500,307000,415500,425000                           @OZ27604
*C304820-304900                                                @OZ28765
*A126000,156000,312000,434500                                  @OZ28219
*A122500,596000                                                @OZ28127
*C591000,593500                                                @OZ28127
*A122500,186000,188500,319500,898500                           @OY19561
*C187000,315000,316000                                         @OY19561
*C616500                                                       @OZ28135
*A183500,970500                                                @OY19692
*A121700,251000,258500,289500,304940,548500                    @OZ28792
*C230000,249500,250500                                         @OZ28792
*A122500,590500                                                @OZ29380
*C932000                                                       @OZ29793
*C606500                                                       @OZ29736
*A779000                                                       @OY20575
*C315090,316060,319650                                         @OY20752
*D121800-121900,251080-251400,258570-258920,548710-548780      @OY20733
*C230000-230320,249500,250500,289600-290000,304950-304970      @OY20733
*A126200,238500,315180,316120,319740,548640,596000             @OY20733
*C606500                                                       @OZ31812
*A608000                                                       @OZ31812
*A315000,316000,319560                                         @OZ31929
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*  MODULE NAME = IEDAYQ           (TCAM,TSO)                   @G36XRYP
*                                                                     *
*  DESCRIPTIVE NAME = TSO TIOC 3270 OUTPUT EDIT ROUTINE               *
*                                                                     *
*  COPYRIGHT = NONE                                                   *
*                                                                     *
*  STATUS = VERSION 10.0                                       @G36XRYP
*                                                                     *
*  FUNCTION = THE TSO TIOC OUTPUT EDIT ROUTINE MOVES DATA FOR A TPUT  *
*             FROM A TIOC BUFFER TO A TCAM BUFFER OR FOR A MSGGEN     *
*             FROM AN AREA POINTED TO BY A MSGGEN PARAMETER LIST      *
*             TO A TCAM BUFFER OR THE SCBMBSSA AREA IN THE STATION-   *
*             CONTROL-BLOCK.  AS THE DATA IS BEING MOVED, IT IS       *
*             TESTED FOR CONTROL CHARACTERS AND INVALID CHARACTERS    *
*             THAT REQUIRE SPECIAL PROCESSING OR DELETION FROM THE    *
*             MESSAGE.  HANDLING OF THESE SPECIAL CHARACTERS IS       *
*             DEPENDENT UPON THE MODE OF THE TPUT BEING PROCESSED.    *
*             LINE CONTROL CHARACTERS ARE ADDED WHEN REQUIRED.  WHEN  *
*             DATA IS EDITTED THAT WILL DISPLAY ON THE NEXT TO LAST   *
*             LINE OF THE SCREEN, A SIMULATED ATTENTION PROMPT IS     *
*             REQUESTED.                                              *
*                                                                     *
*  NOTES = SEE BELOW                                                  *
*                                                                     *
*     DEPENDENCIES = EBCDIC CHARACTER CODE DEPENDENCIES ARE           *
*                           CORRECTABLE BY REASSEMBLY                 *
*                                                                     *
*     RESTRICTIONS = NONE                                             *
*                                                                     *
*     REGISTER-CONVENTIONS = SEE REGISTER EQUATES BELOW               *
*                                                                     *
*     PATCH-LABEL = AYQPATCH                                          *
*                                                                     *
*  MODULE-TYPE = PROCEDURE                                            *
*                                                                     *
*     PROCESSOR = ASSEMBLER F                                         *
*                                                                     *
*     MODULE-SIZE = 5224 DECIMAL BYTES                                *
*                                                                     *
*     ATTRIBUTES = REUSABLE                                           *
*                                                                     *
*  ENTRY-POINT = IEDAYQ                                               *
*                                                                     *
*     PURPOSE = SEE FUNCTION ABOVE                                    *
*                                                                     *
*     LINKAGE = SAMPLE LINKAGE:                                       *
*                   L     R15,AVTTSOPT  POINTER TO TSINPUT QCB        *
*                   L     R15,TSI3270-IEDQTSI(,R15)  POINTR TO IEDAYQ *
*                   BAL   R14,R15  BRANCH-AND-LINK TO IEDAYQ          *
*                                                                     *
*  INPUT = R1 POINTS TO OUTPUT AREA IF ENTRY IS FOR MSGGEN EDIT       *
*          R4 POINTS TO LINE-CONTROL-BLOCK                            *
*          R7 POINTS TO QUEUE-CONTROL-BLOCK                           *
*          R13 POINTS TO AVTSAVE2 IN ADDRESS-VECTOR-TABLE             *
*          R14 POINTS TO RETURN ADDRESS IN CALLING ROUTINE            *
*          R15 POINTS TO ENTRY POINT OF IEDAYQ                        *
*          EDIT-WORK-AREA IN TSINPUT QCB (INITIALIZED BY CALLING      *
*                  ROUTINE)                                           *
*               GMBFUNIT - NUMBER OF UNITS PER TCAM BUFFER            *
*               GMCARCT  - NUMBER OF CHARACTERS DISPLAYED ON LINE     *
*               GMCRBUF  - POINTER TO CURRENT TCAM BUFFER             *
*               GMDEVCH  - TERMINAL DEVICE-CHARACTERISTICS            *
*               GMENCON  - FLAG REQUESTING ENDING-CONTROL INSERTION   *
*               GMINIT   - FLAG INDICATING INITIAL ENTRY FROM IEDAYN  *
*               GMLNNO   - NUMBER OF LINES ON 3270 DISPLAY            *
*               GMLNSZ   - NUMBER OF CHARACTERS PER LINE ON 3270      *
*               GMSATCT  - NUMBER OF LINES DISPLAYED ON 3270          *
*               GMTSBUF  - POINTER TO TIOC BUFFER                     *
*          TIOC BUFFER                                                *
*               BUFFCNTL - FLAG INDICATING CONTROL MODE TPUT          *
*               BUFFEDIT - FLAG INDICATING EDIT MODE TPUT             *
*                  BOTH BUFFEDIT & BUFFCNTL ON INDICATES FULLSCR TPUT *
*                  BOTH BUFFEDIT & BUFFCNTL OFF INDICATES ASIS TPUT   *
*               BUFFHDR  - FLAG INDICATING TIOC HEADER BUFFER         *
*               BUFFLNTH - LENGTH OF DATA IN TIOC BUFFER              *
*               BUFFNLCR - FLAG INDICATING LAST TIOC BUFFER           *
*               BUFFOFST - OFFSET TO FIRST DATA BYTE IN TIOC BUFFER   *
*               BUFFTRLR - POINTER TO NEXT TIOC TRAILER BUFFER        *
*          QUEUE-CONTROL-BLOCK FOR DESTINATION TERMINAL               *
*               QCBDSSMI - FLAG INDICATING 3270 KEYBOARD IS UNLOCKED  *
*               QCBIEND  - FLAG INDICATING SCREEN FORMATTING REQUIRED *
*               QCBTSSES - FLAG INDICATING DISPLAY IS IN TSO SESSION  *
*          LINE-CONTROL-BLOCK FOR DESTINATION TERMINAL                *
*               LCBERBCH - POINTER TO FIRST TCAM BUFFER               *
*               LCBERBPY - PRIORITY WITH WHICH ERB WAS POSTED         *
*               LCBMSGNN - FLAG INDICATING MSGGEN IN PROGRESS         *
*          TCAM BUFFER                                                *
*               PRFTIC   - POINTER TO NEXT UNIT OF TCAM BUFFER        *
*          ADDRESS-VECTOR-TABLE                                       *
*               AVTKEYLE - LENGTH OF TCAM BUFFER UNIT                 *
*               AVTSCBSZ - LENGTH OF STATION-CONTROL-BLOCK            *
*               AVTTSOPT - POINTER TO TSINPUT QCB                     *
*               AVTUMALN - LENGTH OF TCAM BUFFER UNIT MANAGEMENT AREA *
*                                                                     *
*  OUTPUT = R15 CONTAINS RETURN CODE FOR CALLING ROUTINE              *
*                FOR MSGGEN PROCESSING:                               *
*                   HIGH ORDER HALF-WORD - LENGTH OF MSGGEN DATA      *
*                   LOW ORDER HALF-WORD  - ZERO                       *
*                FOR TPUT PROCESSING:                                 *
*                   NEGATIVE VALUE - TCAM BUFFER HAS BEEN FILLED      *
*                   ZERO           - 3270 SCREEN HAS BEEN FILLED      *
*                   POSITIVE VALUE - TPUT HAS BEEN COMPLETELY EDITTED *
*           R0-R14 RESTORED TO ENTRY VALUES                           *
*           TCAM BUFFER CONTAINING EDITTED DATA FROM TIOC BUFFER      *
*                   FOR TPUT OR MSGGEN DATA FOR NCP ATTACHED 3270     *
*                PRFKEY   - CCW COMMAND CODE IF LCBSCRNN IS ON        *
*                PRFLCB   - POINTER TO LINE-CONTROL-BLOCK             *
*                PRFLINK  - POINTER TO NEXT TCAM BUFFER               *
*                PRFNBUNT - NUMBER OF UNITS IN TCAM BUFFER            *
*                PRFNHDRN - FLAG INDICATING NOT TCAM HEADER BUFFER    *
*                PRFNLSTN - FLAG INDICATING NOT LAST TCAM BUFFER      *
*                PRFSIZE  - LENGTH OF DATA IN TCAM BUFFER             *
*                PRFTSMSG - FLAG INDICATING TSO TCAM BUFFER           *
*           STATION-CONTROL-BLOCK CONTAINING EDITTED DATA FROM        *
*                   MSGGEN DATA FOR NON-NCP ATTACHED 3270             *
*           EDIT-WORK-AREA                                            *
*                GMENCIN  - FLAG INDICATING ENDING-CONTROL INSERTED   *
*           LINE-CONTROL-BLOCK FOR DESTINATION TERMINAL               *
*                LCBSCRNN - FLAG REQUESTING SPECIAL CCW COMMAND       *
*           QUEUE-CONTROL-BLOCK FOR DESTINATION TERMINAL              *
*                QCBCARCT - NUMBER OF CHARACTERS DISPLAYED ON LINE    *
*                QCBDEND  - FLAG INDICATING INSERT INC ORDER ONLY     *
*                QCBNL    - FLAGS INDICATING NEW-LINE STARTED         *
*                QCBSATCT - NUMBER OF LINES DISPLAYED ON 3270         *
*                QCBSATRD - FLAG INDICATING 3270 SCREEN FILLED        *
*                                                                     *
*  EXIT-NORMAL = RETURN TO CALLING ROUTINE (IEDAYN OR IEDAYM)         *
*                SEE OUTPUT ABOVE                                     *
*                                                                     *
*  EXIT-ERROR = NONE                                                  *
*                                                                     *
*  EXTERNAL-REFERENCES = SEE BELOW                                    *
*                                                                     *
*     ROUTINES = QTIP (SVC 101 ENTRY CODE 17)                         *
*                                                                     *
*     DATA-AREAS = TIOC BUFFER                                        *
*                  TCAM BUFFER                                        *
*                                                                     *
*     CONTROL-BLOCKS = ADDRESS-VECTOR-TABLE                           *
*                      TSINPUT QUEUE-CONTROL-BLOCK                    *
*                      LINE-CONTROL-BLOCK                             *
*                      TERMINAL DESTINATION QUEUE-CONTROL-BLOCK       *
*                      STATION-CONTROL-BLOCK                          *
*                                                                     *
*  TABLES = CNVTTBL - 3270 BUFFER ADDRESS CONVERSION TABLES           *
*           EDITTBL - TRANSLATE-AND-TEST TABLE FOR EDIT MODE TPUT     *
*           ASISTBL - TRANSLATE-AND-TEST TABLE FOR ASIS MODE TPUT     *
*           FLSCTBL - TRANSLATE-AND-TEST TABLE FOR FULLSCR MODE TPUT  *
*           CNTLTBL - TRANSLATE-AND-TEST TABLE FOR CONTROL MODE TPUT  *
*                                                                     *
*  MACROS = SAVE           - SAVE REGISTERS                           *
*           IEDHJN         - INSERT MODULE IDENTIFIER AND DATE        *
*           QTIP (SVC 101) - UPDATE TIOC BUFFER OFFSET AND LENGTH     *
*           RETURN         - RESTORE REGISTERS AND RETURN             *
*           IKJTIOCB       - DSECT FOR TIOC BUFFER                    *
*           TAVTD          - DSECT FOR ADDRESS-VECTOR-TABLE           *
*           TLCBD          - DSECT FOR LINE-CONTROL-BLOCK             *
*           TPRFD          - DSECT FOR TCAM BUFFER                    *
*           TQCBD          - DSECT FOR QUEUE-CONTROL-BLOCK            *
*           TSCBD          - DSECT FOR STATION-CONTROL-BLOCK          *
*           TTSID          - DSECT FOR TSINPUT QCB                    *
*                                                                     *
*  CHANGE-ACTIVITY = SEE CHANGE ACTIVITY ABOVE                        *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********                 REGISTER EQUATES                    *********
*********                                                     *********
***********************************************************************
         SPACE 2
R0       EQU   0                        REGISTER ZERO
RTABLE   EQU   1                        ADDRESS OF TRT FUNCTION TABLE
R1       EQU   1                        ARGUMENT BYTE ADDRESS FROM TRT
R2       EQU   2                        FUNCTION BYTE FROM TRT
RBUFF    EQU   2                        ADDRESS OF TSO BUFFER
RBASE2   EQU   3                        MODULE BASE ADDRESS
RLCB     EQU   4                        ADDRESS OF LINE CONTROL BLOCK
RTCBUF   EQU   5                        ADDRESS IN TCAM UNIT FOR DATA
RTSBUF   EQU   6                        ADDRESS OF TSO DATA TO EDIT
RQCB     EQU   7                        ADDRESS OF DESTINATION QCB
RWORKE   EQU   8                        EVEN WORK REGISTER
RWORKO   EQU   RWORKE+1                 ODD WORK REGISTER
RCNT     EQU   9                        COUNT OF DATA TO MVC OR TRT
RWORK    EQU   10                       WORK REGISTER
RGMAIN   EQU   11                       ADDRESS OF WORKAREA
RBASE    EQU   12                       MODULE BASE ADDRESS
RAVT     EQU   13                       ADDRESS OF ADDRESS VECTOR TABLE
RLINK    EQU   14                       SUBROUTINE LINKAGE REGISTER
RENTRY   EQU   15                       MODULE ENTRY POINT ADDRESS
RRCODE   EQU   15                       RETURN CODE
R15      EQU   15                       PARAMETER REGISTER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********            EQUATES, MASKS AND DISPLACEMENTS         *********
*********                                                     *********
***********************************************************************
         SPACE 2
ZERO     EQU   0                        EQUATE TO 0
ONE      EQU   1                        EQUATE TO 1
TWO      EQU   2                        EQUATE TO 2
THREE    EQU   3                        EQUATE TO 3
FOUR     EQU   4                        EQUATE TO 4
FIVE     EQU   5                        EQUATE TO 5
SIX      EQU   6                        EQUATE TO 6
SEVEN    EQU   7                        EQUATE TO 7
TWELVE   EQU   12                       EQUATE TO 12
SIXTEEN  EQU   16                       EQUATE TO 16
EIGHTEEN EQU   18                       EQUATE TO 18
TWENTY   EQU   20                       EQUATE TO 20
TWENTY6  EQU   26                       EQUATE TO 26
TWENTY8  EQU   28                       EQUATE TO 28
FORTY8   EQU   48                       EQUATE TO 48
SIXTY4   EQU   64                       EQUATE TO 64
SIXTY8   EQU   68                       EQUATE TO 68
ESC      EQU   X'27'                    ESCAPE CHARACTER
EAU      EQU   X'6F'                    ERASE-ALL-UNPROTECTED CMD
EW       EQU   X'F5'                    ERASE-WRITE COMMAND
SBA      EQU   X'11'                    SET-BUFFER-ADDRESS ORDER
SF       EQU   X'1D'                    START-FIELD ORDER
CR       EQU   X'15'                    CARRIAGE-RETURN
COLON    EQU   X'7A'                    REPLACEMENT CHARACTER
INC      EQU   X'13'                    INSERT-CURSOR ORDER
RESATTR  EQU   X'C8'                    HIGH INTENSITY DISPLAY ATTR
BYPATTR  EQU   X'4C'                    NON-DISPLAY ATTRIBUTE
BYPREST  EQU   X'80'                    BYPASS OR RESTORE CHAR @OZ27604
*                                       IN DATA                @OZ27604
SPACE    EQU   X'40'                    SPACE
UNLOCK   EQU   X'02'                    KEYBOARD RESTORE FLAG
RMDT     EQU   X'01'                    RESET MDT BIT          @OZ29380
UNLWCC   EQU   X'C2'                    KYBD RESTORE WCC       @OY19561
UNLOCK1  EQU   X'82'                    KEYBOARD RESTORE       @OZ28127
MDTFLG   EQU   X'81'                    RESET MDT FLAG         @OZ28127
*QCBNL   EQU   X'30'                    NEW LINE FLAGS
*QCBIEND EQU   X'04'                    SCREEN FORMAT REQUEST
QCBDEND  EQU   X'08'                    MODE OF LAST TPUT
X05      EQU   X'05'                    ERASE-WRITE OP CODE
X0F      EQU   X'0F'                    ERASE-ALL-UNPROTECTED OP CODE
XE4      EQU   X'E4'                    ERB PRIORITY
XFF      EQU   X'FF'                    ALL ONES MASK
INCLAST  EQU   X'40'                    INC LAST IN BFR INDCTR @OZ28219
X7F      EQU   X'7F'                    MID PUT FLAG MASK      @OY20733
* FOUR IS SUBTRACTED FROM THE FOLLOWING RETURN CODES TO PROVIDE
*    THE PROPER VALUES FOR IEDAYN
ENDBUFR  EQU   0                        END-OF-BUFFER RETURN CODE (-4)
ENDSCRN  EQU   4                        END-OF-SCREEN RETURN CODE ( 0)
ENDTPUT  EQU   8                        END-OF-TPUT RETURN CODE   (+4)
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********              ESTABLISH ADDRESSABILITY               *********
*********                                                     *********
***********************************************************************
         SPACE 2
         USING IEDAYQ,RBASE,RBASE2      SET MODULE ADDRESSABILITY
         USING AVTSAVE2,RAVT            SET SAVEAREA ADDRESSABILITY
         USING IEDQQCB,RQCB             SET QCB ADDRESSABILITY
         USING IEDQLCB,RLCB             SET LCB ADDRESSABILITY
         USING IEDQTSI,RGMAIN           SET WORKAREA ADDRESSABILITY
         USING TIOCBUF,RBUFF            SET TSO BUFFER ADDRESSABILITY
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********                 INITIALIZATION                      *********
*********                                                     *********
***********************************************************************
         SPACE 2
         SAVE  (14,12)                  SAVE REGISTERS
         LR    RBASE,RENTRY             SET BASE REGISTER
         LA    RBASE2,4095(,RBASE)      SET SECOND
         LA    RBASE2,1(,RBASE2)           BASE REGISTER
IEDAYQ   IEDHJN AYBSTART
         L     RGMAIN,AVTTSOPT          POINTER TO TSINPUT QCB
         TM    LCBSTAT2,LCBMSGNN        IS THIS MSGGEN ENTRY
         BO    MSGGEN                   YES, PROCESS MSGGEN
         TM    GMFLAG,GMENCON           IS THIS INSERT ENDING-CONTROL
*                                          REQUEST
         BO    ENDCTL                   YES, INSERT ENDING-CONTROL
         TM    GMFLAG,GMINIT            IS THIS FIRST ENTRY FOR
*                                          THIS ERB POST
         BO    NOTEND                   YES, NOT FOR ENDING-CONTROL
         CLI   GMSATCT+ONE,XFF          IS COUNT FOR ERASE     @OZ26971
         BE    ENDCTL                   YES, INSERT END-CNTRL  @OZ26971
         LH    RWORK,GMSATCT            GET LINE NUMBER
         LA    RWORK,ONE(,RWORK)        INCREMENT BY ONE
         EX    RWORK,CLI                IS THIS NEXT TO LAST LINE
         BNH   ENDCTL                   YES, INSERT ENDING-CONTROL
NOTEND   EQU   *
         L     RBUFF,GMTSBUF            POINTER TO TSO BUFFER
         SR    RTSBUF,RTSBUF            CLEAR REGISTER FOR IC
         IC    RTSBUF,BUFFOFST          OFFSET TO DATA IN TSO BUFFER
         AR    RTSBUF,RBUFF             POINTER TO DATA IN TSO BUFFER
         MVC   GMTSSIZ+ONE(ONE),BUFFLNTH SET TSO DATA LENGTH
         MVC   GMTSCNT+ONE(ONE),BUFFLNTH SET TSO DATA LENGTH
         NI    QCBRETCT,XFF-QCBDEND     ASSUME NOT FULLSCR OR CONTROL
         TM    BUFFFL1,BUFFCNTL         IS TPUT FULL SCREEN OR CNTRL
         BNO   CHKINIT                  NO, CHECK FOR INITIAL ENTRY
         OI    QCBRETCT,QCBDEND         SET FULLSCR OR CONTROL MODE
         TM    BUFFFL1,BUFFEDIT         IS IT FULLSCR          @OZ28219
         BNO   CHKINIT                  NO, CONTROL ONLY       @OZ28219
         L     RWORK,LCBSCBA-1          SCB ADDRESS            @OZ28219
         OI    SCBSRCE-IEDQSCB(RWORK),INCLAST  SET NO INC      @OZ28219
CHKINIT  EQU   *
         TM    GMFLAG,GMINIT            IS THIS FIRST ENTRY FOR
*                                          THIS ERB POST
         BO    INITIAL                  YES, INITIAL ENTRY
         CLI   LCBERBPY,XE4             IS ERB PRIORITY 'E4'
         BE    BTWTPUT                  YES, INSERT SUBSEQUENT TPUT
*                                          CONTROL HEADER
         NC    GMCRBUF,GMCRBUF          IS THERE A CURRENT BUFFER
         BNZ   BTWTPUT                  YES, INSERT SUBSEQUENT TPUT
*                                          CONTROL HEADER
INITIAL  EQU   *
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORK,GMLNSZ             DISPLAY SCREEN LINE SIZE
         SH    RWORK,GMCARCT            SUBTRACT CURRENT POSITION
         STH   RWORK,GMLNSPC            SET LINE SPACE AVAILABLE
         MVC   GMCRBUF+ONE(THREE),LCBERBCH POINTER TO FIRST TCAM BUFFER
         MVC   GMCRUNT+ONE(THREE),LCBERBCH POINTER TO FIRST TCAM UNIT
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         USING IEDQPRF,RWORK
         MVI   PRFNBUNT,ONE             SET ONE UNIT BUFFER
         XC    PRFLINK,PRFLINK          CLEAR BUFFER LINK ADDRESS
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST UNIT
         BE    LSTUNT                   YES, UNIT COUNT SET
         L     RWORKE,PRFTIC            POINTER TO NEXT TCAM UNIT
         MVI   PRFNBUNT-IEDQPRF(RWORKE),ZERO UNIT COUNT ZERO
LSTUNT   EQU   *
         LH    RCNT,AVTKEYLE            SPACE AVAILABLE IN TCAM UNIT
         STH   RCNT,PRFSIZE             SET TCAM DATA SIZE
         LA    RCNT,AVTUMALN(,RCNT)     INCREMENT FOR UNIT CNTRL AREA
         CLI   LCBERBPY,XE4             IS ERB PRIORITY 'E4'
         BNE   CHKMID                   NO, CHECK FOR MIDDLE OF TPUT
         NI    PRFSTAT1,PRFNHDRF        SET HEADER BUFFER
         SH    RCNT,HDPRFSZ             REDUCE FOR HEADER PREFIX
         STH   RCNT,GMTCSPC             SET TCAM SPACE AVAILABLE
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********     INSERT BEGINNING CONTROL IN TCAM BUFFER UNIT    *********
*********                                                     *********
***********************************************************************
         SPACE 2
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT TCAM UNIT
         AH    RTCBUF,HDPRFSZ           POINTER TO TCAM DATA AREA
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BO    NOSTX                    YES, DON'T INSERT STX
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BE    NOSTX                    YES, DON'T INSERT STX
         MVC   ZERO(ONE,RTCBUF),CNTRL0  INSERT STX IN TCAM UNIT
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
NOSTX    EQU   *
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS IT ASIS OR FULLSCR MODE
         BM    INSBC1                   NO, INSERT CONTROL SEQUENCE
         BZ    ISASIS                   YES, IS ASIS MODE      @OY19692
         L     RWORK,GMCRBUF            PTR TO CURRENT TCAM BF @OY19692
         OI    PRFSTAT1,PRFFLSCR        SET FULLSCR IN HEADER  @OY19692
ISASIS   EQU   *                                               @OY19692
         CLC   GMTSCNT,HTWO             IS COUNT EQUAL OR GREATER
*                                          THAN TWO
         BL    INSBC1                   NO, ESCAPE,CMD,WCC NOT SUPPLIED
         CLI   ZERO(RTSBUF),ESC         WAS ESCAPE SUPPLIED
         BNE   INSBC1                   NO, INSERT CONTROL HEADER
         OI    GMFLAG,GMNUNLCK          ASSUME NO KEYBOARD RES @OY19561
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BO    LOCESC                   YES, CHECK LOCAL ESC   @OY19561
         CLI   ONE(RTCBUF),EAU          IS CMD ERASE-ALL-UNPR  @OY19561
         BE    MOVBC1                   YES, MOVE SUPPLIED HDR @OY19561
         NI    GMFLAG,XFF-GMNUNLCK      ALLOW KEYBOARD RESTORE @OY19561
         B     MOVBC1                   MOVE SUPPLIED HEADER   @OY19561
LOCESC   EQU   *                                               @OY19561
         MVI   PRFKEY,X0F               ASSUME ERASE-ALL-UNPROTECTED
         CLI   ONE(RTSBUF),EAU          IS COMMAND ERASE-ALL-UNPROTECT
         BE    SETSCR                   YES, REQUEST EAU CCW BE BUILT
         NI    GMFLAG,XFF-GMNUNLCK      ALLOW KEYBOARD RESTORE @OY19561
         CLI   ONE(RTSBUF),EW           IS COMMAND ERASE-WRITE
         BNE   MOVWCC                   NO, MOVE WRITE-CONTROL-CHAR
         MVI   PRFKEY,X05               SET FOR ERASE-WRITE
         DROP  RWORK
SETSCR   EQU   *
         OI    LCBCHAIN,LCBSCRNN        REQUEST SPECIAL COMMAND
MOVWCC   EQU   *
         CLC   GMTSCNT,HTHREE           IS COUNT EQUAL OR GREATER
*                                          THAN THREE
         BL    LOCBC1                   NO, WCC NOT SUPPLIED
         MVC   ZERO(ONE,RTCBUF),TWO(RTSBUF) MOVE WCC TO TCAM UNIT
         NI    ZERO(RTCBUF),XFF-UNLOCK  RESET KEYBOARD RESTORE
         LA    RWORK,THREE              COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         B     UPDBC1                   UPDATE COUNT AND ADDRESS
MOVBC1   EQU   *
         LA    RWORK,ONE                SET COUNT FOR EXECUTED MVC
         CLI   ONE(RTSBUF),EAU          IS COMMAND ERASE-ALL-UNPROTECT
         BE    NOWCC                    YES, NO WRITE-CONTROL-CHAR
         LA    RWORK,TWO                ADJUST MOVE COUNT
NOWCC    EQU   *
         EX    RWORK,MVC                MOVE ESCAPE,CMD,(WCC) TO TCAM
         NI    TWO(RTCBUF),XFF-UNLOCK   RESET KEYBOARD RESTORE
         LA    RWORK,ONE(,RWORK)        SET ACTUAL DATA COUNT
         AR    RTSBUF,RWORK             UPDATE TSO BUFFER ADDRESS
         LH    RCNT,GMTSCNT             DECREMENT
         SR    RCNT,RWORK                  TSO DATA
         STH   RCNT,GMTSCNT                   COUNT
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         B     CHKBC2                   CHECK FOR SET-BUFFER-ADDRESS
INSBC1   EQU   *
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BO    LOCBC1                   YES, INSERT WRITE-CONTROL-CHAR
         MVC   ZERO(TWO,RTCBUF),CNTRL1  INSERT ESC,CMD IN TCAM
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
LOCBC1   EQU   *
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS IT FULLSCR MODE
         BO    LOCWCC                   YES, MOVE WCC TO TCAM
         BM    INSLOC                   EDIT OR CONTROL, INSERT WCC
         CLC   GMTSCNT,HTWO             IS COUNT EQUAL OR GREATER
*                                          THAN TWO
         BL    INSLOC                   NO, INSERT WCC IN TCAM
         CLI   ONE(RTSBUF),SBA          WAS SBA CHARACTER SUPPLIED
         BNE   INSLOC                   NO, INSERT WCC IN TCAM
LOCWCC   EQU   *
         MVC   ZERO(ONE,RTCBUF),ZERO(RTSBUF) MOVE WCC TO TCAM
         NI    ZERO(RTCBUF),XFF-UNLOCK  RESET KEYBOARD RESTORE
         LA    RWORK,ONE                COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         B     UPDBC1                   UPDATE COUNT AND ADDRESS
INSLOC   EQU   *
         MVC   ZERO(ONE,RTCBUF),CNTRL1+TWO INSERT WCC IN TCAM UNIT
UPDBC1   EQU   *
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
CHKBC2   EQU   *
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS IT ASIS OR FULLSCR MODE
         BM    INSBC2                   NO, INSERT CONTROL SEQUENCE
         CLC   GMTSCNT,HTHREE           IS COUNT EQUAL OR GREATER
*                                          THAN THREE
         BL    INSBC2                   NO, NO SET-BUFFER-ADDRESS
         CLI   ZERO(RTSBUF),SBA         WAS SBA SUPPLIED
         BNE   INSBC2                   NO, SBA NOT SUPPLIED
         BAL   RLINK,HDWRBIN            CONVERT CURSOR ADDRESS TO
*                                          BINARY VALUE
         MVC   ZERO(THREE,RTCBUF),ZERO(RTSBUF) MOVE SBA,CUR1,CUR2
         LA    RWORK,THREE              COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         B     UPDBC2                   UPDATE COUNT AND ADDRESS
INSBC2   EQU   *
         BAL   RLINK,BINHDWR            CONVERT BINARY VALUE TO
*                                          CURSOR ADDRESS
         MVC   ZERO(ONE,RTCBUF),CNTRL2  INSERT SBA IN TCAM UNIT
UPDBC2   EQU   *
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
CHKBC3   EQU   *
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS IT ASIS OR FULLSCR MODE
         BNM   CNTBC3                   YES, CHECK FOR SPACE AVAILABLE
         TM    BUFFFL1,BUFFCNTL         IS IT CONTROL MODE
         BO    MOVDATA                  YES, MOVE TSO DATA TO TCAM UNIT
         B     INSBC3                                          @OY20733
MPTOFF   NI    QCBTSOF2,X7F             TURN OFF MID PUT FLAG  @OY20733
         B     MOVDATA                  GO TO MOVE DATA        @OY20733
CNTBC3   EQU   *
         CLC   GMTSCNT,HTWO             IS COUNT EQUAL OR GREATER
*                                          THAN TWO
         BL    INSBC3A                  NO, NO START-FIELD
         CLI   ZERO(RTSBUF),SF          WAS SF SUPPLIED
         BNE   INSBC3A                  NO, SF NOT SUPPLIED
         MVC   ZERO(TWO,RTCBUF),ZERO(RTSBUF) MOVE SF,ATTR TO TCAM
         LA    RWORK,TWO                COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO                DATA COUNT
         B     UPDBC3                   UPDATE COUNT AND ADDRESS
INSBC3A  EQU   *
         CLC   GMTSCNT,HONE             IS COUNT EQUAL OR GREATER
*                                          THAN ONE
         BL    INSBC3                   NO, INSERT SF,ATTR IN TCAM
         CLI   ZERO(RTSBUF),SPACE       WAS CONTROL CHARACTER SUPPLIED
         BL    MOVDATA                  YES, MOVE TSO DATA TO TCAM
INSBC3   EQU   *
         TM    BUFFFL1,BUFFHDR          TSO HEADER ?           @OY20733
         BNO   MPTOFF                   NO, MOVE DATA          @OY20733
         CLI   BUFFOFST,BUFFHDLN        DATA AT START OF BUFFER@OY20733
         BNE   MPTOFF                   NO, MOVE DATA          @OY20733
         MVC   ZERO(TWO,RTCBUF),CNTRL3  INSERT SF,ATTR IN TCAM
UPDBC3   EQU   *
         LA    RWORK,ONE                COUNT OF DATA DISPLAYED
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         B     MOVDATA                  MOVE TSO DATA TO TCAM UNIT
CHKMID   EQU   *
         SH    RCNT,TXPRFSZ             REDUCE FOR TEXT PREFIX
         STH   RCNT,GMTCSPC             SET TCAM SPACE AVAILABLE
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT TCAM UNIT
         AH    RTCBUF,AVTKEYLE          LENGTH OF TCAM UNIT
         LA    RTCBUF,AVTUMALN(,RTCBUF) LENGTH OF UNIT CONTROL AREA
         SH    RTCBUF,GMTCSPC           POINTER TO TCAM DATA AREA
         CLI   LCBFLAG1,ZERO            IS DISPLAY ON 3705
         BNE   CHKHDR                   NO, CHECK FOR TSO HEADER BUFF
         MVC   ZERO(THREE,RTCBUF),CNTRL1 INSERT ESC,CMD,WCC IN TCAM
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
CHKHDR   EQU   *
         TM    BUFFFL1,BUFFHDR          IS THIS TSO HEADER BUFFER
         BNO   MPTOFF                   NO, DON'T INSERT HDR   @OY20733
         CLI   BUFFOFST,BUFFHDLN        IS DATA AT START OF BUFFER
         BNE   MPTOFF                   NO, DON'T INSERT HDR   @OY20733
         B     INSBC4                   YES, INSERT HEADER
BTWTPUT  EQU   *
         USING IEDQPRF,RWORK
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         LH    RCNT,PRFSIZE             GET CURRENT TCAM BUFFER SIZE
         AH    RCNT,GMTCSPC             ADD TCAM SPACE AVAILABLE
         STH   RCNT,PRFSIZE             STORE NEW TCAM BUFFER SIZE
         DROP  RWORK
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT TCAM UNIT
         AH    RTCBUF,AVTKEYLE          LENGTH OF TCAM UNIT
         LA    RTCBUF,AVTUMALN(,RTCBUF) LENGTH OF UNIT CONTROL AREA
         SH    RTCBUF,GMTCSPC           POINTER TO TCAM DATA AREA
         CLC   GMTCSPC,HSEVEN           IS SPACE AVAILABLE IN TCAM
         BNL   INSBC4                   YES, PUT SEQUENCE IN BUFFER
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
INSBC4   EQU   *
         MVC   ZERO(TWO,RTCBUF),CNTRL4  INSERT SF,ATTR IN TCAM UNIT
         LA    RWORK,ONE                COUNT OF DATA DISPLAYED
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         BAL   RLINK,BINHDWR            CONVERT BINARY VALUE TO
*                                          CURSOR ADDRESS
         MVC   ZERO(ONE,RTCBUF),CNTRL2  INSERT SBA IN TCAM UNIT
         MVC   THREE(TWO,RTCBUF),CNTRL5 INSERT SF,ATTR IN TCAM UNIT
         LA    RWORK,ONE                COUNT OF DATA DISPLAYED
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         LA    RWORK,FIVE               COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         B     MOVDATA                  MOVE TSO DATA TO TCAM UNIT
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********      INSERT ENDING CONTROL IN TCAM BUFFER UNIT      *********
*********                                                     *********
***********************************************************************
         SPACE 2
ENDCTL   EQU   *
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORK,GMLNSZ             DISPLAY SCREEN LINE SIZE
         SH    RWORK,GMCARCT            SUBTRACT CURRENT POSITION
         STH   RWORK,GMLNSPC            SET LINE SPACE AVAILABLE
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         LTR   RWORK,RWORK              IS THERE A TCAM BUFFER
         BNZ   SETREG                   YES, INITIALIZE REGISTERS
         MVC   GMCRBUF+ONE(THREE),LCBERBCH POINTER TO FIRST TCAM BUFFER
         MVC   GMCRUNT+ONE(THREE),LCBERBCH POINTER TO FIRST TCAM UNIT
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         USING IEDQPRF,RWORK
         OI    PRFSTAT1,PRFNHDRN        SET NOT HEADER BUFFER
         MVI   PRFNBUNT,ONE             SET ONE UNIT BUFFER
         XC    PRFLINK,PRFLINK          CLEAR BUFFER LINK ADDRESS
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST UNIT
         BE    ENDUNT                   YES, UNIT COUNT SET
         L     RWORKE,PRFTIC            POINTER TO NEXT TCAM UNIT
         MVI   PRFNBUNT-IEDQPRF(RWORKE),ZERO UNIT COUNT ZERO
ENDUNT   EQU   *
         LH    RCNT,AVTKEYLE            SPACE AVAILABLE IN TCAM UNIT
         STH   RCNT,PRFSIZE             SET TCAM DATA SIZE
         SH    RCNT,TXPRFSZ             REDUCE FOR TEXT PREFIX
         LA    RCNT,AVTUMALN(,RCNT)     INCREMENT FOR UNIT CNTRL AREA
         STH   RCNT,GMTCSPC             SET TCAM SPACE AVAILABLE
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT TCAM UNIT
         AH    RTCBUF,TXPRFSZ           POINTER TO TCAM DATA AREA
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BNE   NONCPR                   NO, CHECK TPUT MODE
         CLC   GMTCSPC,HTHREE           IS SPACE AVAILABLE IN TCAM
         BNL   NCPREM                   YES, INSERT SEQUENCE IN TCAM
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
NCPREM   EQU   *
         MVC   ZERO(THREE,RTCBUF),CNTRL1 INSERT ESC,CMD,WCC IN TCAM
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
NONCPR   EQU   *
         TM    QCBRETCT,QCBDEND         WAS MODE FULLSCR OR CONTROL
         BO    CHKEC3                   YES, ONLY INSERT INC ORDER
         TM    QCBTSOF2,QCBMTP          IS THIS SAME TPUT      @OY20733
         BNO   CHKSPC                   NO                     @OY20733
         B     CHKEC4                   YES                    @OY20733
SETREG   EQU   *
         L     RBUFF,GMTSBUF            POINTER TO CURRENT TSO BUFFER
         LH    RCNT,PRFSIZE             GET CURRENT TCAM BUFFER SIZE
         AH    RCNT,GMTCSPC             ADD TCAM SPACE AVAILABLE
         STH   RCNT,PRFSIZE             STORE NEW TCAM BUFFER SIZE
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT TCAM UNIT
         AH    RTCBUF,AVTKEYLE          LENGTH OF TCAM UNIT
         LA    RTCBUF,AVTUMALN(,RTCBUF) LENGTH OF UNIT CONTROL AREA
         SH    RTCBUF,GMTCSPC           POINTER TO TCAM DATA AREA
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS IT FULLSCR MODE
         BO    CHKEC3                   YES, INSERT INC ORDER  @OY19462
         TM    BUFFFL1,BUFFCNTL         IS IT CONTROL MODE
         BO    CHKEC3                   YES, INSERT INC ORDER
         TM    QCBRETCT,QCBDEND         IS INC ONLY TO BE ADDED
         BO    CHKEC3                   YES, INSERT INC ORDER
CHKSPC   EQU   *
         CLC   GMTCSPC,HSIX             IS SPACE AVAILABLE IN TCAM
*                                          FOR LOCAL SEQUENCE
         BL    NOECSPC                  NO, END THIS TCAM BUFFER
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BO    MOVEC1                   YES, INSERT SEQUENCE IN TCAM
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BE    MOVEC1                   YES, INSERT SEQUENCE IN TCAM
         CLC   GMTCSPC,HEIGHT           IS SPACE AVAILABLE IN TCAM
*                                          FOR REMOTE SEQUENCE
         BNL   MOVEC1                   YES, INSERT SEQUENCE IN TCAM
NOECSPC  EQU   *
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
MOVEC1   EQU   *
         L     RWORK,LCBSCBA-1          GET SCB ADDRESS        @OZ27604
         TM    SCBSRCE-IEDQSCB(RWORK),BYPREST BYPASS OR RESTORE@OZ27604
*                                       CHAR IN THE DATA?      @OZ27604
         BZ    SFATTR                   NO BYPASS OR RESTORE   @OZ28765
*                                       IN DATA                @OZ28765
         NI    SCBSRCE-IEDQSCB(RWORK),XFF-BYPREST TURN OFF     @OZ28765
         B     NOSFATTR                 SKIP OVER SF ATTR      @OZ28765
SFATTR   EQU   *                                               @OZ28765
         TM    QCBTSOF2,QCBMTP          IS THIS SAME TPUT      @OY20733
         BNO   NOTMTP                   NO                     @OY20733
         B     NOSFATTR                 YES                    @OY20733
NOTMTP   EQU   *                                               @OY20733
         MVC   ZERO(TWO,RTCBUF),CNTRL6  INSERT SF,ATTR IN TCAM
         LA    RWORK,ONE                COUNT OF DATA DISPLAYED
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
NOSFATTR EQU   *                                               @OZ27604
         BAL   RLINK,BINHDWR            CONVERT BINARY VALUE TO
*                                          CURSOR ADDRESS
         MVC   ZERO(ONE,RTCBUF),CNTRL2  INSERT SBA IN TCAM UNIT
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
CHKEC3   EQU   *
         CLC   GMTCSPC,HONE             IS SPACE AVAILABLE IN TCAM
         BNL   MOVEC3                   YES, INSERT SEQUENCE IN TCAM
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
MOVEC3   EQU   *
         L     RWORK,LCBSCBA-1          SCB ADDRESS            @OZ28219
         TM    SCBSRCE-IEDQSCB(RWORK),INCLAST  WAS INC MOVED   @OZ28219
*                                      FROM TSO BFR (FULLSCR)  @OZ28219
         BO    CHKEC4                YES, DO NOT INSERT ANOTHER@OZ28219
         MVC   ZERO(ONE,RTCBUF),CNTRL7  INSERT INC IN TCAM
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
CHKEC4   EQU   *
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BNO   REMOTE                   NO, 3270 REMOTE        @OY19561
         TM    QCBRETCT,QCBDEND         FULLSCR?               @OZ31929
         BO    ECCOMP                   YES, NO UNLOCK         @OZ31929
         TM    GMFLAG,GMNUNLCK          IS KYBD TO BE RESTORED @OY19561
         BO    ECCOMP                   NO, SEQUENCE COMPLETED @OY19561
         CLI   GMSATCT+ONE,XFF          IS COUNT FOR ERASE     @OY20752
         BE    ECCOMP                   YES, SEQUENCE COMPLETE @OY19561
         TM    QCBTSOF1,QCBTGET         IS TGET REQUESTED      @OY19561
         BNO   ECCOMP                   NO, SEQUENCE COMPLETED @OY19561
         TM    QCBTSOF2,QCBMTP          SAME TPUT              @OY20733
         BO    ECCOMP                   YES, SEQUENCE COMPLETED@OY20733
         L     RWORK,LCBERBCH-ONE       POINTER TO FIRST BUFFR @OY19561
         AH    RWORK,HDPRFSZ            PTR TO DATA AREA       @OY19561
         OI    ZERO(RWORK),UNLOCK       SET RESTORE IN WCC     @OY19561
         OI    QCBTSOF2,QCBDSSMI        SET KYBD UNLOCKED      @OY19561
         B     ECCOMP                   SEQUENCE COMPLETED     @OY19561
REMOTE   EQU   *                                               @OY19561
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BE    REMNCP                   YES, ADD LINE CONTROL  @OY19561
         TM    QCBRETCT,QCBDEND         FULLSCR?               @OZ31929
         BO    NORMEND                  YES, NO UNLOCK         @OZ31929
         TM    GMFLAG,GMNUNLCK          IS KYBD TO BE RESTORED @OY19561
         BO    NORMEND                  NO, ADD NORMAL ENDING  @OY19561
         CLI   GMSATCT+ONE,XFF          IS COUNT FOR ERASE     @OY20752
         BE    NORMEND                  YES, ADD NORMAL ENDING @OY19561
         TM    QCBTSOF1,QCBTGET         IS TGET REQUESTED      @OY19561
         BNO   NORMEND                  NO, ADD NORMAL ENDING  @OY19561
         TM    QCBTSOF2,QCBMTP          SAME TPUT              @OY20733
         BO    NORMEND                  YES, SEQUENCE COMPLETED@OY20733
         CLC   GMTCSPC,HONE             IS SPACE AVAILABLE     @OY19561
         BNL   MOVEC4A                  YES, INSERT SEQUENCE   @OY19561
         BAL   RLINK,ENDBUFF            NO, END TCAM BUFFER    @OY19561
MOVEC4A  EQU   *                                               @OY19561
         MVC   ZERO(ONE,RTCBUF),CNTRL9  INSERT ETB IN TCAM     @OY19561
         LA    RWORK,ONE                COUNT OF DATA MOVED    @OY19561
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT/ADDR @OY19561
         BAL   RLINK,ENDBUFF            END THIS TCAM BUFFER   @OY19561
         MVC   ZERO(SIX,RTCBUF),CNTRLA  INSERT UNLOCK IN TCAM  @OY19561
         OI    QCBTSOF2,QCBDSSMI        SET KYBD UNLOCKED      @OY19561
         LA    RWORK,SIX                COUNT OF DATA MOVED    @OY19561
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT/ADDR @OY19561
         B     ECCOMP                   SEQUENCE COMPLETED     @OY19561
NORMEND  EQU   *                                               @OY19561
         CLC   GMTCSPC,HTWO             IS SPACE AVAILABLE IN TCAM
         BNL   MOVEC4                   YES, INSERT SEQUENCE IN TCAM
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
MOVEC4   EQU   *
         MVC   ZERO(TWO,RTCBUF),CNTRL8  INSERT ETX,EOT IN TCAM
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         B     ECCOMP                   SEQUENCE COMPLETED     @OY19561
REMNCP   EQU   *                                               @OY19561
         TM    QCBRETCT,QCBDEND         FULLSCR?               @OZ31929
         BO    ECCOMP                   YES, NO UNLOCK         @OZ31929
         TM    GMFLAG,GMNUNLCK          IS KYBD TO BE RESTORED @OY19561
         BO    ECCOMP                   NO, SEQUENCE COMPLETED @OY19561
         CLI   GMSATCT+ONE,XFF          IS COUNT FOR ERASE     @OY20752
         BE    ECCOMP                   YES, SEQUENCE COMPLETE @OY19561
         TM    QCBTSOF1,QCBTGET         IS TGET REQUESTED      @OY19561
         BNO   ECCOMP                   NO, SEQUENCE COMPLETED @OY19561
         TM    QCBTSOF2,QCBMTP          SAME TPUT              @OY20733
         BO    ECCOMP                   YES, SEQUENCE COMPLETED@OY20733
         BAL   RLINK,ENDBUFF            END THIS TCAM BUFFER   @OY19561
         LR    RWORK,RTCBUF             PTR TO NEXT DATA BYTE  @OY19561
         BCTR  RWORK,ZERO               POINT TO WCC           @OY19561
         MVI   ZERO(RWORK),UNLWCC       INSERT UNLOCK IN TCAM  @OY19561
         OI    QCBTSOF2,QCBDSSMI        SET KYBD UNLOCKED      @OY19561
ECCOMP   EQU   *
         OI    GMFLAG,GMENCIN           SET ENDING-CONTROL INSERTED
         USING IEDQPRF,RWORK
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         NI    PRFSTAT1,PRFNLSTF        SET LAST BUFFER
         LH    RCNT,PRFSIZE             CURRENT TCAM DATA SIZE
         SH    RCNT,GMTCSPC             REDUCE BY AMOUNT AVAILABLE
         STH   RCNT,PRFSIZE             SET NEW TCAM DATA SIZE
         DROP  RWORK
         B     EXITN                    EXIT TO IEDAYN
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********  CALCULATE AMOUNT OF DATA TO BE MOVED TO TCAM UNIT  *********
*********                                                     *********
***********************************************************************
         SPACE 2
MOVDATA  EQU   *
RESUMOV  EQU   *
         MVI   GMCODE,ZERO              CLEAR TRANSLATE AND TEST
*                                          COMPLETION INDEX
         LH    RCNT,GMTCSPC             AMOUNT OF SPACE IN TCAM UNIT
         CH    RCNT,GMTSCNT             COMPARE TO AMOUNT OF TSO DATA
         BE    TCAMEQ                   TCAM SPACE = TSO DATA
         BL    TCAMLO                   TCAM SPACE < TSO DATA
TCAMHI   EQU   *                        TSO DATA < TCAM SPACE
         LH    RCNT,GMTSCNT             AMOUNT OF TSO DATA
         CH    RCNT,GMLNSPC             COMPARE TO SPACE ON DISP LINE
         BE    COND6                    (LINE SPACE = TSO DATA) <
*                                          TCAM SPACE
         BL    COND3                    (TSO DATA < TCAM SPACE) &
*                                          (TSO DATA < LINE SPACE)
         B     COND7                    LINE SPACE < TSO DATA <
*                                          TCAM SPACE
TCAMEQ   EQU   *                        TCAM SPACE = TSO DATA
         CH    RCNT,GMLNSPC             COMPARE SPACE IN TCAM UNIT TO
*                                          SPACE ON DISPLAY LINE
         BE    COND1                    TCAM SPACE = TSO DATA =
*                                          LINE SPACE
         BL    COND2                    (TCAM SPACE = TSO DATA) <
*                                          LINE SPACE
         B     COND7                    LINE SPACE < (TCAM SPACE =
*                                          TSO DATA)
TCAMLO   EQU   *                        TCAM SPACE < TSO DATA
         CH    RCNT,GMLNSPC             COMPARE SPACE IN TCAM UNIT TO
*                                          SPACE ON DISPLAY LINE
         BE    COND4                    (TCAM SPACE = LINE SPACE) <
*                                          TSO DATA
         BL    COND5                    (TCAM SPACE < LINE SPACE) &
*                                          (TCAM SPACE < TSO DATA)
*        B     COND7                    LINE SPACE < TCAM SPACE <
*                                          TSO DATA
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
         SPACE 2
COND7    EQU   *
         LH    RCNT,GMLNSPC             AMOUNT OF SPACE ON DISP LINE
         OI    GMCODE,GMLINE            SET LINE SPACE SMALLEST
         B     TRANSLAT                 TRANSLATE AND TEST
COND6    EQU   *
         OI    GMCODE,GMLINE+GMTSO      SET LINE SPACE AND TSO DATA
*                                          EQUAL AND SMALLER THAN TCAM
         B     TRANSLAT                 TRANSLATE AND TEST
COND5    EQU   *
         OI    GMCODE,GMTCAM            SET TCAM SPACE SMALLEST
         B     TRANSLAT                 TRANSLATE AND TEST
COND4    EQU   *
         OI    GMCODE,GMTCAM+GMLINE     SET TCAM SPACE AND LINE SPACE
*                                          EQUAL AND SMALLER THAN TSO
         B     TRANSLAT                 TRANSLATE AND TEST
COND3    EQU   *
         OI    GMCODE,GMTSO             SET TSO DATA SMALLEST
         B     TRANSLAT                 TRANSLATE AND TEST
COND2    EQU   *
         OI    GMCODE,GMTCAM+GMTSO      SET TCAM SPACE AND TSO DATA
*                                          EQUAL AND SMALLER THAN LINE
         B     TRANSLAT                 TRANSLATE AND TEST
COND1    EQU   *
         OI    GMCODE,GMTCAM+GMLINE+GMTSO  SET TCAM SPACE, LINE SPACE
*                                          AND TSO DATA EQUAL
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********          TRANSLATION AND TEST ROUTINE               *********
*********                                                     *********
***********************************************************************
         SPACE 2
TRANSLAT EQU   *
         LTR   RCNT,RCNT                ANY DATA TO TRANSLATE
         BZ    NOTRANS                  NO, SKIP TRANSLATE & TEST
         L     RTABLE,EDIT              ASSUME EDIT MODE
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL CHECK MODE OF TPUT
         BZ    ASISTRT                  IT IS ASIS MODE
         BO    FULSCTRT                 EDIT+CONTROL IS FULLSCR
         TM    BUFFFL1,BUFFCNTL         IS IT CONTROL MODE
         BNO   TRANTEST                 NO, MUST BE EDIT MODE
CNTRLTRT EQU   *
         L     RTABLE,CONTROL           IT IS CONTROL MODE
         B     TRANTEST                 TRANSLATE AND TEST
ASISTRT  EQU   *
FULSCTRT EQU   *
         L     RTABLE,ASIS              IT IS ASIS OR FULLSCR MODE
TRANTEST EQU   *
         SR    R2,R2                    CLEAR PARAMETER REGISTER
         BCTR  RCNT,ZERO                DECREMENT FOR EXECUTED TRT
         EX    RCNT,TRT                 EXECUTE TRANSLATE AND TEST
         BZ    TRTCC0                   NO HITS IN TRANSLATED DATA
         LR    R15,R2                   SAVE FUNCTION BYTE
         L     RBUFF,GMTSBUF            POINTER TO CURRENT TSO BUFFER
         LA    RCNT,ZERO(,R1)           ADDRESS OF ARQUMENT BYTE
         SR    RCNT,RTSBUF              DETERMINE AMOUNT OF DATA
*                                          TRANSLATED
         BNP   NOMOVE                   NO DATA TO MOVE
         BCTR  RCNT,ZERO                DECREMENT FOR EXECUTED MOVE
         EX    RCNT,MVC                 MOVE TSO DATA TO TCAM UNIT
         LA    RCNT,ONE(,RCNT)          RESTORE ACTUAL DATA COUNT
NOMOVE   EQU   *
         BAL   RLINK,UPDCNTS            UPDATE DATA COUNTS AND ADDRESS
         SLL   R15,TWO                  MULTIPLY FUNCTION BY FOUR
TRTBTBL  EQU   *
         B     TRTBTBL(R15)             BRANCH TO PROPER ROUTINE
         B     CNVRTCLN                 01 - CONVERT TO COLON
         B     CNVRTRES                 02 - CONVERT TO RESTORE SEQ
         B     CNVRTBYP                 03 - CONVERT TO BYPASS SEQ
         B     NONDISP1                 04 - NON-DISPLAYABLE - 1 CHAR
         B     NONDISP3                 05 - NON-DISPLAYABLE - 3 CHAR
         B     NONDISP4                 06 - NON-DISPLAYABLE - 4 CHAR
         B     SKIPCHAR                 07 - SKIP SENDING 1 CHARACTER
         SPACE 2
TRTCC0   EQU   *
         L     RBUFF,GMTSBUF            POINTER TO CURRENT TSO BUFFER
         EX    RCNT,MVC                 MOVE TSO DATA TO TCAM UNIT
         LA    RCNT,ONE(,RCNT)          RESTORE ACTUAL DATA COUNT
         BAL   RLINK,UPDCNTS            UPDATE DATA COUNTS AND ADDRESS
NOTRANS  EQU   *
         SR    RWORK,RWORK              CLEAR WORK REGISTER
         IC    RWORK,GMCODE             GET INDEX TO PROPER ROUTINE
MOVBTBL  EQU   *
         B     MOVBTBL(RWORK)           BRANCH TO PROPER ROUTINE
         B     ROUT3                    1 - TSO < TCAM,TSO < LINE
         B     ROUT7                    2 - LINE < TCAM,LINE < TSO
         B     ROUT6                    3 - LINE=TSO < TCAM
         B     ROUT5                    4 - TCAM < LINE,TCAM < TSO
         B     ROUT2                    5 - TCAM=TSO < LINE
         B     ROUT4                    6 - TCAM=LINE < TSO
         B     ROUT1                    7 - TCAM=LINE=TSO
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********            CHARACTER CONVERSION ROUTINES            *********
*********                                                     *********
***********************************************************************
         SPACE 2
CNVRTCLN EQU   *                        CONVERT CHARACTER TO COLON
         CLI   ZERO(RTSBUF),CR          IS IT CARRIAGE RETURN
         BNE   NOCR                     NO, REPLACE CHARACTER
         LA    RWORK,ONE                SET REGISTER TO ONE
         CH    RWORK,GMTSCNT            IS THIS LAST CHARACTER
         BNE   NOCR                     NO, REPLACE CHARACTER
         TM    BUFFFL1,BUFFNLCR         IS THIS LAST TSO BUFFER
         BNO   NOCR                     NO, REPLACE CHARACTER
         STH   RWORK,GMLNSPC            GO TO NEW LINE
         B     SKIPCHAR                 SKIP SENDING CHARACTER
NOCR     EQU   *
         MVI   ZERO(RTCBUF),COLON       MOVE COLON TO TCAM BUFFER
         LA    RWORK,ONE                COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         LH    RWORK,GMLNSPC            DECREMENT DISPLAY
         BCTR  RWORK,ZERO                  LINE SPACE
         STH   RWORK,GMLNSPC                  AVAILABLE
         BAL   RLINK,CHKCNTS            CHECK FOR DEPLETED RESOURCES
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
***********************************************************************
         SPACE 2
CNVRTRES EQU   *                        CONVERT TO RESTORE SEQUENCE
         CLC   GMTCSPC,HTWO             IS SPACE AVAILABLE IN TCAM
         BNL   RESOK                    YES, PUT RESTORE IN BUFFER
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
RESOK    EQU   *
         MVI   ZERO(RTCBUF),SF          MOVE IN START-FIELD ORDER
         MVI   ONE(RTCBUF),RESATTR      MOVE IN RESTORE ATTRIBUTE
         L     RWORK,LCBSCBA-1          GET SCB ADDRESS        @OZ27604
         OI    SCBSRCE-IEDQSCB(RWORK),BYPREST  RESTORE FOUND   @OZ27604
         LH    RWORK,GMLNSPC            DECREMENT DISPLAY
         BCTR  RWORK,ZERO                  LINE SPACE
         STH   RWORK,GMLNSPC                  AVAILABLE
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         LA    RWORK,ONE                COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         BAL   RLINK,CHKCNTS            CHECK FOR DEPLETED RESOURCES
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
***********************************************************************
         SPACE 2
CNVRTBYP EQU   *                        CONVERT TO BYPASS SEQUENCE
         CLC   GMTCSPC,HTWO             IS SPACE AVAILABLE IN TCAM
         BNL   BYPOK                    YES, PUT RESTORE IN BUFFER
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
BYPOK    EQU   *
         MVI   ZERO(RTCBUF),SF          MOVE IN START-FIELD ORDER
         MVI   ONE(RTCBUF),BYPATTR      MOVE IN BYPASS ATTRIBUTE
         L     RWORK,LCBSCBA-1          GET SCB ADDRESS        @OZ27604
         OI    SCBSRCE-IEDQSCB(RWORK),BYPREST   BYPASS FOUND   @OZ27604
         LH    RWORK,GMLNSPC            DECREMENT DISPLAY
         BCTR  RWORK,ZERO                  LINE SPACE
         STH   RWORK,GMLNSPC                  AVAILABLE
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         LA    RWORK,ONE                COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         BAL   RLINK,CHKCNTS            CHECK FOR DEPLETED RESOURCES
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
***********************************************************************
         SPACE 2
NONDISP1 EQU   *                        NON-DISPLAYABLE 1 CHAR SEQ
         CLI   ZERO(RTSBUF),INC         IS IT INSERT CURSOR
         BNE   NOINC                    NO, MOVE DATA TO TCAM
         CLC   GMTSCNT,HONE             IS THIS LAST CHARACTER
         BNE   NOINC                    NO, MOVE DATA TO TCAM
         TM    BUFFFL1,BUFFNLCR         IS THIS LAST TSO BUFFER
         BNO   NOINC                    NO, MOVE DATA TO TCAM
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL  FULLSCR?             @OZ28219
         BNO   INCLST                   NO, SET INC REQUIRED   @OZ28219
         L     RWORK,LCBSCBA-1          SCB ADDRESS            @OZ28219
         OI    SCBSRCE-IEDQSCB(RWORK),INCLAST  SET NO INC REQD @OZ28219
         B     NOINC                    MOVE INC TO TCAM BFR   @OZ28219
INCLST   EQU   *                                               @OZ28219
         OI    QCBRETCT,QCBDEND         SET ONLY INC REQUIRED
         B     SKIPCHAR                 SKIP SENDING CHARACTER
NOINC    EQU   *
         MVC   ZERO(ONE,RTCBUF),ZERO(RTSBUF) MOVE DATA TO TCAM
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         LA    RWORK,ONE                COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         BAL   RLINK,CHKCNTS            CHECK FOR DEPLETED RESOURCES
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
***********************************************************************
         SPACE 2
NONDISP3 EQU   *                        NON-DISPLAYABLE 3 CHAR SEQ
         LH    R0,HTHREE                CHARACTER SEQUENCE LENGTH
         B     NONDISPX                 GO TO COMMON ROUTINE
         SPACE 2
***********************************************************************
         SPACE 2
NONDISP4 EQU   *                        NON-DISPLAYABLE 4 CHAR SEQ
         LH    R0,HFOUR                 CHARACTER SEQUENCE LENGTH
         B     NONDISPX                 GO TO COMMON ROUTINE
         SPACE 2
***********************************************************************
         SPACE 2
NONDISPX EQU   *                        NON-DISPLAYABLE 4 CHAR SEQ
         CH    R0,GMTCSPC               IS SPACE AVAILABLE IN TCAM
         BL    NDSPXOK                  YES, PUT SEQUENCE IN BUFFER
         BAL   RLINK,ENDBUFF            NO, END THIS TCAM BUFFER
NDSPXOK  EQU   *
         CH    R0,GMTSCNT               IS COMPLETE SEQUENCE IN BUFFER
         BL    SEQXOK                   YES, CALCULATE NEW CURSOR ADDR
         LH    RCNT,GMTSCNT             COUNT OF REMAINING TSO DATA
         BCTR  RCNT,ZERO                DECREMENT FOR EXECUTED MVC
         EX    RCNT,MVC                 MOVE TSO DATA TO TCAM UNIT
         LA    RCNT,ONE(,RCNT)          RESTORE ACTUAL DATA COUNT
         LR    RWORK,RCNT               COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         LR    RWORK,RCNT               COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TCAM COUNT AND ADDRESS
         SR    RCNT,R0                  CALCULATE AMOUNT OF SEQUENCE
         LPR   RCNT,RCNT                   NOT MOVED TO TCAM UNIT
         LH    RWORK,GMLNSPC            INCREMENT DISPLAY
         AR    RWORK,RCNT                  LINE SPACE
         STH   RWORK,GMLNSPC                  AVAILABLE
         BAL   RLINK,CHKCNTS            CHECK FOR DEPLETED RESOURCES
         B     RESUMOV                  RESUME DATA MOVEMENT
SEQXOK   EQU   *
         BCTR  R0,0                     REDUCE FOR EXECUTED MOVE
         LR    RWORK,R0                 PUT VALUE IN USEABLE REGISTER
         EX    RWORK,MVC                MOVE DATA TO TCAM
         BAL   RLINK,HDWRBIN            CONVERT CURSOR ADDR TO BINARY
         AH    R0,HONE                  RESTORE ACTUAL DATA COUNT
         LR    RWORK,R0                 COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         LR    RWORK,R0                 COUNT OF DATA MOVED FROM TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         BAL   RLINK,CHKCNTS            CHECK FOR DEPLETED RESOURCES
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
***********************************************************************
         SPACE 2
SKIPCHAR EQU   *                        SKIP SENDING ONE CHARACTER
         LA    RWORK,ONE                COUNT OF DATA SKIPPED IN TSO
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         BAL   RLINK,CHKCNTS            CHECK FOR DEPLETED RESOURCES
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********         TRANSLATE AND TEST COMPLETION ROUTINE       *********
*********                                                     *********
***********************************************************************
         SPACE 2
ROUT1    EQU   *
         BAL   RLINK,CNTLINE            COUNT OUTPUT LINE
ROUT2    EQU   *
         BAL   RLINK,NEWUNIT            GET NEW TCAM BUFFER UNIT
ROUT3    EQU   *
         BAL   RLINK,NEWTPUT            GET NEXT TPUT DATA
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
ROUT4    EQU   *
         BAL   RLINK,CNTLINE            COUNT OUTPUT LINE
ROUT5    EQU   *
         BAL   RLINK,NEWUNIT            GET NEW TCAM BUFFER UNIT
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
ROUT6    EQU   *
         BAL   RLINK,CNTLINE            COUNT OUTPUT LINE
         BAL   RLINK,NEWTPUT            GET NEXT TPUT DATA
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
ROUT7    EQU   *
         BAL   RLINK,CNTLINE            COUNT OUTPUT LINE
         B     RESUMOV                  RESUME DATA MOVEMENT
         SPACE 2
***********************************************************************
         SPACE 2
CNTLINE  EQU   *
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS IT FULLSCR MODE
         BO    NOTLAST                  YES, INITIALIZE LINE SPACE
CNTLIN1  EQU   *
         TM    QCBFLAG,QCBTSSES         IN TSO SESSION
         BNOR  RLINK                    NO, RETURN TO CALLER
         CLI   GMSATCT+ONE,XFF          IS LINE COUNT FOR ERASE
         BER   RLINK                    YES, RETURN TO CALLER
         LH    RWORK,GMSATCT            INCREMENT COUNT
         LA    RWORK,ONE(,RWORK)           OF LINES
         STH   RWORK,GMSATCT                  DISPLAYED
         LA    RWORK,ONE(,RWORK)        INCREMENT TO NEXT LINE
         EX    RWORK,CLI                IS NEXT LINE LAST LINE
         BH    NOTLAST                  NO, INITIALIZE LINE SPACE
         MVI   GMSATCT+ONE,XFF          SET LINE COUNT FOR ERASE
         OI    QCBTSOF1,QCBSATRD        REQUEST SIM ATTN READ
         TM    GMFLAG,GMENCON           IS THIS INSERT ENDING-CONTROL
*                                          REQUEST
         BOR   RLINK                    YES, RETURN TO CALLER
         TM    LCBSTAT2,LCBMSGNN        IS THIS FOR MSGGEN
         BOR   RLINK                    YES, RETURN TO CALLER
         LA    RRCODE,ENDSCRN           SET END-OF-SCREEN RETURN CODE
         B     QTIPSZ                   ISSUE QTIP AND SET PRFSIZE
NOTLAST  EQU   *
         MVI   GMLNSPC,ZERO             CLEAR HIGH ORDER BYTE
         MVC   GMLNSPC+ONE(ONE),GMLNSZ  INITIALIZE DISPLAY LINE SPACE
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         SPACE 2
NEWUNIT  EQU   *
         LA    RCNT,ONE                 INITIALIZE UNIT COUNT
         USING IEDQPRF,RWORK
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
UNITLOOP EQU   *
         C     RWORK,GMCRUNT            IS THIS CURRENT TCAM UNIT
         BE    UNITCNT                  YES, UNITS COUNTED
         L     RWORK,PRFTIC             POINTER TO NEXT TCAM UNIT
         LA    RWORK,ZERO(,RWORK)       CLEAR HIGH ORDER BYTE
         LA    RCNT,ONE(,RCNT)          UPDATE UNIT COUNT
         B     UNITLOOP                 LOCATE CURRENT TCAM UNIT
UNITCNT  EQU   *
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST AVAILABLE UNIT
         BE    NOUNIT                   YES, EXIT TO IEDAYN
         CH    RCNT,GMBFUNIT            IS CURRENT UNIT LAST UNIT OF
*                                          A TCAM BUFFER
         BE    NEWBUFF                  YES, START A NEW TCAM BUFFER
         MVC   GMCRUNT+ONE(THREE),PRFTIC+ONE MAKE NEXT UNIT CURRENT
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT UNIT
         LA    RTCBUF,PRFSUNIT-IEDQPRF(,RTCBUF) POINTER TO TCAM DATA
         MVC   GMTCSPC,AVTKEYLE         SET TCAM SPACE AVAILABLE
         L     RWORK,GMCRBUF            POINTER TO START OF BUFFER
         LA    RCNT,ONE(,RCNT)          INCREMENT UNIT COUNT
         STC   RCNT,PRFNBUNT            SET NUMBER OF UNITS IN BUFFER
         LH    RCNT,PRFSIZE             GET CURRENT TCAM DATA SIZE
         AH    RCNT,AVTKEYLE            INCREMENT FOR NEW UNIT
         STH   RCNT,PRFSIZE             SET NEW TCAM DATA SIZE
         L     RWORK,GMCRUNT            POINTER TO CURRENT TCAM UNIT
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST AVAILABLE UNIT
         BER   RLINK                    YES, RETURN TO CALLER
         L     RWORK,PRFTIC             POINTER TO NEXT UNIT
         MVI   PRFNBUNT,ZERO            SET NUMBER OF UNITS TO ZERO
         BR    RLINK                    RETURN TO CALLER
NOUNIT   EQU   *
         L     RWORK,GMCRBUF            POINTER TO LAST TCAM BUFFER
         STC   RCNT,PRFNBUNT            SET NUMBER OF UNITS IN BUFFER
         LA    RRCODE,ENDBUFR           SET END-OF-BUFFER RETURN CODE
         B     QTIPSZ                   ISSUE QTIP AND SET PRFSIZE
NEWBUFF  EQU   *
         MVC   GMCRUNT+ONE(THREE),PRFTIC+ONE MAKE NEXT UNIT CURRENT
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         MVC   PRFLINK,GMCRUNT+ONE      LINK NEW BUFFER TO CURRENT
         MVC   GMCRBUF,GMCRUNT          MAKE NEXT UNIT START OF
*                                          CURRENT TCAM BUFFER
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         XC    PRFSRCE(PRFSHDR-PRFSRCE),PRFSRCE CLEAR PREFIX
         ST    RLCB,PRFLCB-ONE          SET LCB ADDRESS IN BUFFER
         OI    PRFSTAT1,PRFNLSTN+PRFNHDRN SET NOT LAST AND NOT
*                                          HEADER BUFFER
         MVI   PRFNBUNT,ONE             SET ONE UNIT BUFFER
         XC    PRFLINK,PRFLINK          CLEAR BUFFER LINK ADDRESS
         LH    RCNT,AVTKEYLE            SPACE AVAILABLE IN TCAM UNIT
         STH   RCNT,PRFSIZE             SET TCAM DATA SIZE
         SH    RCNT,TXPRFSZ             REDUCE FOR TEXT PREFIX
         LA    RCNT,AVTUMALN(,RCNT)     INCREMENT FOR UNIT CNTRL AREA
         STH   RCNT,GMTCSPC             SET TCAM SPACE AVAILABLE
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT TCAM UNIT
         AH    RTCBUF,TXPRFSZ           POINTER TO TCAM DATA AREA
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST AVAILABLE UNIT
         BE    CHKNCP                   YES, CHECK FOR 3705 TERMINAL
         L     RWORK,PRFTIC             POINTER TO NEXT UNIT
         MVI   PRFNBUNT,ZERO            SET NUMBER OF UNITS TO ZERO
         DROP  RWORK
CHKNCP   EQU   *
         CLI   LCBFLAG1,ZERO            IS DISPLAY ON 3705
         BNER  RLINK                    NO, RETURN TO CALLER
         MVC   ZERO(THREE,RTCBUF),CNTRL1 INSERT ESC,CMD,WCC IN TCAM
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         ST    RLINK,AVTSAVE4+SIXTY8    SAVE LINKAGE REGISTER  @OY19255
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         L     RLINK,AVTSAVE4+SIXTY8    RESTORE LINK REGISTER  @OY19255
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         SPACE 2
NEWTPUT  EQU   *
         ST    RLINK,AVTSAVE4+SIXTY8    SAVE LINKAGE REGISTER
         BAL   RLINK,QTIP               UPDATE TSO BUFFER
         L     RLINK,AVTSAVE4+SIXTY8    RESTORE LINKAGE REGISTER
         L     RWORK,BUFFTRLR-ONE       POINTER TO TRAILER BUFFER
         LA    RWORK,ZERO(,RWORK)       CLEAR HIGH ORDER BYTE
         LTR   RWORK,RWORK              IS THERE A TRAILER BUFFER
         BZ    NOTPUT                   NO, EXIT TO IEDAYN
         ST    RWORK,GMTSBUF            MAKE NEXT BUFFER CURRENT
         LR    RBUFF,RWORK              POINT TO NEW TSO BUFFER
         SR    RTSBUF,RTSBUF            CLEAR REGISTER FOR IC
         IC    RTSBUF,BUFFOFST          GET OFFSET TO TSO DATA
         AR    RTSBUF,RBUFF             POINT TO START OF TSO DATA
         MVI   GMTSCNT,ZERO             CLEAR HIGH ORDER BYTE
         MVC   GMTSCNT+ONE(ONE),BUFFLNTH SET TSO DATA COUNT
         MVC   GMTSSIZ+ONE(ONE),BUFFLNTH SET TOTAL TSO SIZE
         BR    RLINK                    RETURN TO CALLER
NOTPUT   EQU   *
         TM    BUFFFL1,BUFFEDIT         IS IT EDIT MODE
         BNO   SETEND                   NO, SET RETURN CODE
         TM    BUFFFL1,BUFFCNTL         IS IT FULLSCR MODE
         BO    SETFSC                   YES, SET RETURN CODE   @OZ27387
         TM    BUFFFL1,BUFFNLCR         END OF THIS TPUT       @OZ28792
         BO    TPUTOK                   YES, CONTINUE          @OZ28792
         OI    QCBTSOF2,QCBMTP          SET ON MID TPUT FLAG   @OY20733
         B     SETEND                   DO NOT START ON NL     @OZ28792
TPUTOK   EQU   *                        SET IN NEW LINE        @OZ28792
         LA    RWORK,ONE                START NEXT TPUT ON
         STH   RWORK,GMLNSPC               NEW DISPLAY LINE
SETEND   EQU   *
         LA    RRCODE,ENDTPUT           SET END-OF-TPUT RETURN CODE
         B     SETPRF                   SET SIZE OF TCAM DATA
SETFSC   EQU   *                                               @OZ27387
         LA    RRCODE,ENDSCRN           SET END-OF-SCREEN CODE @OZ27387
         B     SETPRF                   SET SIZE OF TCAM DATA  @OZ27387
         SPACE 2
***********************************************************************
         SPACE 2
QTIPSZ   EQU   *
         BAL   RLINK,QTIP               UPDATE TSO BUFFER
SETPRF   EQU   *
         USING IEDQPRF,RWORK
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         LH    RCNT,PRFSIZE             GET CURRENT TCAM DATA SIZE
         SH    RCNT,GMTCSPC             REDUCE BY AMOUNT AVAILABLE
         STH   RCNT,PRFSIZE             SET NEW TCAM DATA SIZE
         DROP  RWORK
         B     EXITN                    EXIT TO IEDAYN
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********             MSGGEN PROCESSING ROUTINE               *********
*********                                                     *********
***********************************************************************
         SPACE 2
MSGGEN   EQU   *
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORK,GMLNSZ             DISPLAY SCREEN LINE SIZE
         CLI   GMCARCT+ONE,XFF          IS CARRIAGE TO BE RETURNED
         BE    MSGSPC                   YES, SET LINE SPACE AVAILABLE
         SH    RWORK,GMCARCT            SUBTRACT CURRENT POSITION
MSGSPC   EQU   *
         STH   RWORK,GMLNSPC            SET LINE SPACE AVAILABLE
         LA    RTCBUF,ZERO(,R1)         POINTER TO TCAM DATA AREA
         L     RTSBUF,GMTSBUF           POINTER TO MSGGEN DATA
         MVC   GMCRUNT,GMCRBUF          POINTER TO FIRST TCAM UNIT
         SR    RCNT,RCNT                CLEAR REGISTER FOR IC
         IC    RCNT,AVTSCBSZ            SIZE OF STATION CONTROL BLOCK
         SH    RCNT,SCBRESR             LENGTH OF UNUSED PORTION OF SCB
         SH    RCNT,HSIX                COUNT OF ENDING CONTROL
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS LOCAL 3270     @G36XRYP
         BO    SCBMSG                   YES, USE SCB FOR MSGGEN
         BCTR  RCNT,0                   REDUCE BY ONE FOR REMOTE 3270
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BNE   SCBMSG                   NO, USE SCB FOR MSGGEN
         L     RCNT,GMCRUNT             POINTER TO CURRENT TCAM UNIT
         AH    RCNT,AVTKEYLE            LENGTH OF TCAM UNIT
         LA    RCNT,AVTUMALN(,RCNT)     LENGTH OF UNIT CONTROL AREA
         SR    RCNT,RTCBUF              SPACE AVAILABLE IN TCAM UNIT
SCBMSG   EQU   *
         STH   RCNT,GMTCSPC             AMOUNT OF SPACE AVAILABLE
         LR    R15,RCNT                 SAVE AMOUNT OF SPACE AVAILABLE
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********         INSERT BEGINNING CONTROL FOR MSGGEN         *********
*********                                                     *********
***********************************************************************
         SPACE 2
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BO    MSGWCC                   YES, INSERT WCC IN TCAM
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BE    MSGESC                   YES, DON'T INSERT STX
         MVC   ZERO(ONE,RTCBUF),CNTRL0  INSERT STX IN TCAM
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
MSGESC   EQU   *
         MVC   ZERO(TWO,RTCBUF),CNTRL1  INSERT ESC,CMD IN TCAM
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
MSGWCC   EQU   *
         MVC   ZERO(ONE,RTCBUF),CNTRL1+TWO INSERT WCC IN TCAM
         LTR   RTSBUF,RTSBUF            IS THIS NEW LINE?      @OS79724
         BNZ   NORESET                  BRANCH NO              @OS79724
         CLI   QCBSATCT,AVTEZERO        IS THIS LINE ZERO?     @OS79724
         BNE   NORESET                  BRANCH NO              @OS79724
         MVI   ZERO(RTCBUF),SPACE       INSERT WCC             @OS79724
NORESET  EQU   *                                               @OS79724
         TM    QCBFLAG,QCBTSSES         IS TSO IN SESSION
         BNO   UNLK                     NO, RESTORE KEYBOARD
         LTR   RTSBUF,RTSBUF            IS ENTRY FOR CARRIAGE RETURN
         BZ    NOUNLK                   YES, DON'T RESTORE KEYBOARD
         TM    QCBTSOF2,QCBDSSMI        IS RESTORE FLAG SET
         BNO   NOUNLK                   NO, DON'T RESTORE KEYBOARD
         CLC   ZERO(TWO,RTSBUF),KYBDRES IS THIS KEYBOARD RESTORE
         BNE   UNLK                     NO, RESTORE KEYBOARD
         CLI   QCBSATCT,ZERO            LINE ZERO (FULLSCR)    @OZ29380
         BNE   RESET                    NO                     @OZ29380
         NI    ZERO(RTCBUF),XFF-RMDT    TURN OFF RESET MDT     @OZ29380
RESET    EQU   *                                               @OZ29380
         OI    ZERO(RTCBUF),UNLOCK1     RESTORE KEYBOARD       @OZ28127
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         B     NODAT                    NO MSGGEN DATA
UNLK     EQU   *
         OI    ZERO(RTCBUF),UNLOCK1     RESTORE KEYBOARD       @OZ28127
NOUNLK   EQU   *
         LA    RWORK,ONE                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         TM    QCBRETCT,QCBIEND         IS SCREEN FORMAT REQUIRED
         BNO   NOFRMAT                  NO, DON'T FORMAT SCREEN
         NI    QCBTSOF2,X7F             TURN OFF MID TPUT FLAG @OY20733
         BCTR  RTCBUF,ZERO              BACKUP TO WCC          @OZ28127
         OI    ZERO(RTCBUF),MDTFLG      RESET MDT              @OZ28127
         LA    RTCBUF,ONE(RTCBUF)       RESTORE BFR PTR        @OZ28127
         ST    RCNT,AVTSAVE4+SIXTY4     SAVE COUNT REGISTER
         SR    RWORKE,RWORKE            CLEAR REGISTER FOR IC
         SR    RWORKO,RWORKO            CLEAR REGISTER FOR IC
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORKE,GMLNSZ            GET DISPLAY SCREEN WIDTH
         IC    RWORKO,GMLNNO            GET DISPLAY SCREEN HEIGHT
         MR    RWORKE,RWORKE            MULTIPLY WIDTH AND HEIGHT
         BCTR  RWORKO,0                 REDUCE RESULT BY ONE
         BAL   RLINK,BINHDWR1           CONVERT BINARY VALUE TO
*                                          CURSOR ADDRESS
         MVC   ZERO(ONE,RTCBUF),CNTRL2  INSERT SBA IN TCAM
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         MVC   ZERO(TWO,RTCBUF),CNTRL6  INSERT SF,ATTR IN TCAM
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
NOFRMAT  EQU   *
         LTR   RTSBUF,RTSBUF            IS ENTRY FOR CARRIAGE RETURN
         BZ    CHKLIN0                  YES, CHECK FOR LINE ZERO
         CLC   ZERO(FOUR,RTSBUF),PROMPT IS THIS SIMATTN PROMPT
         BE    CKLINE                   SEE IF AT END OF SCRN  @OZ31812
         CLI   GMCARCT+ONE,XFF          IS CARRIAGE TO BE RETURNED
         BE    CARZER                   YES, CLEAR CARRIAGE COUNT
         B     NONEWLN                  INSERT SBA ORDER
CKLINE   CLI   GMSATCT+ONE,XFF          IS COUNT FOR ERASE     @OZ31812
         BNE   CARZER                   NO, PROMPT ON NXT LINE @OZ31812
LSTLIN   EQU   *
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORK,GMLNNO             NUMBER OF LINES ON SCREEN
         BCTR  RWORK,0                  REDUCE BY ONE
         STH   RWORK,GMSATCT            SET ON NEXT TO LAST LINE
         B     CARZER                   CLEAR CARRIAGE COUNT
CHKLIN0  EQU   *
         CLI   GMSATCT+ONE,ZERO         IS THIS LINE ZERO
         BE    MSGDAT                   YES, MOVE MSGGEN DATA
         CLI   GMCARCT+ONE,XFF          IS CARRIAGE TO BE RETURNED
         BE    ZERCAR                   YES, CLEAR CARRIAGE COUNT
         CLI   GMCARCT+ONE,ZERO         IS CARRIAGE RETURN NEEDED
         BNE   MSGLINE                  YES, COUNT OUTPUT LINE
         TM    QCBRETCT,QCBIEND         IS SCREEN FORMAT REQUESTED
         BO    NONEWLN                  YES, INSERT SBA ORDER
         NI    QCBRETCT,XFF-QCBNL       RESET NEWLINE FLAGS
         B     MSGCMP                   SEND WCC ONLY          @OZ28135
CARZER   EQU   *
         MVI   GMLNSPC,ZERO             CLEAR HIGH ORDER BYTE
         MVC   GMLNSPC+ONE(ONE),GMLNSZ  INITIALIZE DISPLAY LINE SPACE
         B     NONEWLN                  INSERT SBA ORDER
MSGLINE  EQU   *
         BAL   RLINK,CNTLIN1            COUNT OUTPUT LINE
ZERCAR   EQU   *
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORK,GMLNSZ             GET DISPLAY LINE WIDTH
         LA    RWORK,ONE(,RWORK)        INCREMENT BY ONE
         STH   RWORK,GMLNSPC            SET CARRIAGE POSITION
NONEWLN  EQU   *
         BAL   RLINK,BINHDWR            CONVERT BINARY VALUE TO
*                                          CURSOR ADDRESS
         MVC   ZERO(ONE,RTCBUF),CNTRL2  INSERT SBA IN TCAM
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         TM    QCBFLAG,QCBTSSES         IS TSO IN SESSION
         BNO   MSGDAT                   NO, MOVE MSGGEN DATA TO TCAM
         LTR   RTSBUF,RTSBUF            IS ENTRY FOR CARRIAGE RETURN
         BNZ   MSGSFWR                  NO, INSERT SF,WRATTR
         CLI   GMSATCT+ONE,ZERO         IS THIS LINE ZERO
         BE    NODAT                    YES, NO MSGGEN DATA
         MVC   ZERO(TWO,RTCBUF),CNTRL4  INSERT SF,RDATTR IN TCAM
         LA    RWORK,ONE                COUNT OF DATA DISPLAYED
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         B     NODAT                    NO MSGGEN DATA
MSGSFWR  EQU   *
         MVC   ZERO(TWO,RTCBUF),CNTRL3  INSERT SF,WRATTR IN TCAM
         LA    RWORK,ONE                COUNT OF DATA DISPLAYED
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         LA    RWORK,TWO                COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********       MOVE MSGGEN DATA TO TCAM UNIT OR SCB          *********
*********                                                     *********
***********************************************************************
         SPACE 2
MSGDAT   EQU   *
         LTR   RTSBUF,RTSBUF            IS ENTRY FOR CARRIAGE RETURN
         BZ    NODAT                    YES, NO MSGGEN DATA
         SR    RCNT,RCNT                CLEAR REGISTER FOR IC
         IC    RCNT,ZERO(,RTSBUF)       LENGTH OF MSGGEN DATA
         LR    RWORK,RTSBUF             POINTER TO MSGGEN LENGTH
         AR    RWORK,RCNT               POINTER TO LAST CHARACTER
*                                          OF MSGGEN
         MVC   AVTDOUBL(ONE),ZERO(RWORK) SAVE LAST CHARACTER
         CLI   AVTDOUBL,CR              IS LAST CHAR CARRIAGE-RETURN
         BNE   NOTCR                    NO, COUNT IS CORRECT
         BCTR  RCNT,0                   REDUCE MSGGEN LENGTH BY ONE
NOTCR    EQU   *
         STH   RCNT,GMTSCNT             SET LENGTH OF MSGGEN DATA
         LA    RTSBUF,ONE(,RTSBUF)      POINTER TO ACTUAL DATA
         CH    RCNT,GMTCSPC             COMPARE DATA COUNT TO
*                                          TCAM SPACE
         BL    MSGBUF                   MOVE ENTIRE MSGGEN
         LH    RCNT,GMTCSPC             TRUNCATE MSGGEN TO FIT
MSGBUF   EQU   *
         BCTR  RCNT,0                   REDUCE FOR EXECUTED MOVE
         EX    RCNT,MVC                 MOVE MSGGEN DATA TO TCAM
         LA    RWORK,ONE(,RCNT)         COUNT OF DATA MOVE FROM MSGGEN
         BAL   RLINK,UPDTSO             UPDATE MSGGEN COUNT & ADDRESS
         LA    RWORK,ONE(,RCNT)         COUNT OF DATA MOVED TO TCAM
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         LA    RCNT,ONE(,RCNT)          RESTORE ACTUAL DATA COUNT
LINLP    EQU   *
         CH    RCNT,GMLNSPC             WILL ALL DATA FIT ON ONE LINE
         BNH   LSTCNT                   YES, GO UPDATE LINE SPACE
         LH    RWORK,GMLNSPC            AMOUNT OF DATA FOR ONE LINE
         SR    RCNT,RWORK               REDUCE AMOUNT MOVED BY ONE LINE
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         TM    QCBFLAG,QCBTSSES         IS TSO IN SESSION?     @OZ26894
         BNO   NOSESN1                  NO                     @OZ26894
         TM    QCBTSOF1,QCBSATRD        END OF SCREEN REACHED
         BO    SCREND                   YES, QUIT MOVING DATA
NOSESN1  EQU   *                                               @OZ26894
         MVC   GMLNSPC+ONE(ONE),GMLNSZ  SET LINE SPACE AVAILABLE
         B     LINLP                    COUNT NEXT LINE
SCREND   EQU   *
         SR    RTCBUF,RCNT              ADJUST TCAM DATA POINTER
         LH    RWORK,GMTCSPC            INCREMENT
         AR    RWORK,RCNT                  TCAM SPACE
         STH   RWORK,GMTCSPC                  AVAILABLE
NODAT    EQU   *
         XC    GMTSCNT,GMTSCNT          SET NO MORE DATA TO MOVE
         B     CNTEND                   INSERT ENDING CONTROL
LSTCNT   EQU   *
         LR    RWORK,RCNT               AMOUNT OF DATA ON LAST LINE
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         L     RWORK,GMTSBUF            POINTER TO MSGGEN DATA
         CLC   ZERO(FOUR,RWORK),PROMPT  IS THIS SIMATTN PROMPT
         BE    CNTEND                   YES, PROCESS PROMPT
         TM    QCBFLAG,QCBTSSES         IS TSO IN SESSION      @OZ26894
         BNO   CNTEND                   NO                     @OZ26894
         TM    QCBTSOF1,QCBSATRD        END OF SCREEN REACHED
         BO    SCREND                   YES, ADJUST COUNTS
CNTEND   EQU   *
         LA    RCNT,SIX                 COUNT OF ENDING CONTROL
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BO    SCBEND                   YES, ADD ENDING CONTROL
         LA    RCNT,ONE(,RCNT)          INCREMENT FOR 3270 REMOTE
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BNZ   SCBEND                   NO, ADD ENDING CONTROL
         NC    GMTSCNT,GMTSCNT          HAS ALL DATA BEEN MOVED
         BZ    MSGEND                   YES, ADD ENDING CONTROL
         BAL   RLINK,MSGUNIT            GET NEXT TCAM UNIT
         B     MSGBUF                   MOVE MORE MSGGEN DATA
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********          INSERT ENDING CONTROL FOR MSGGEN           *********
*********                                                     *********
***********************************************************************
         SPACE 2
SCBEND   EQU   *
         AR    R15,RCNT                 CORRECT TOTAL COUNT
         AH    RCNT,GMTCSPC             CALCULATE TCAM SPACE AVAILABLE
         STH   RCNT,GMTCSPC             RESTORE TCAM SPACE AVAILABLE
MSGEND   EQU   *
         LR    RCNT,RTCBUF              SAVE CURRENT TCAM ADDRESS
         LA    RTCBUF,AVTDOUBL+TWO      POINTER TO WORKAREA
         LTR   RTSBUF,RTSBUF            IS ENTRY FOR CARRIAGE RETURN
         BZ    SAVDAT                   YES, SAVE DATA ADDRESS
         TM    QCBTSOF2,QCBDSSMI        IS RESTORE FLAG SET
         BNO   MSGSAV                   NO, SAVE DATA ADDRESS
         CLC   ZERO(TWO,RTSBUF),KYBDRES IS THIS KEYBOARD RESTORE
         BNE   MSGSAV                   NO, SAVE DATA ADDRESS
         B     MSGCMP                   MSGGEN COMPLETE
SAVDAT   EQU   *
         LR    RTSBUF,RTCBUF            SAVE DATA ADDRESS
         LA    RWORK,ONE                COUNT OF ENDING CONTROL
         STH   RWORK,GMTSCNT            SET COUNT OF DATA TO MOVE
         B     MSGINC                   INSERT INC ORDER IN TCAM
MSGSAV   EQU   *
         LR    RTSBUF,RTCBUF            SAVE DATA ADDRESS
         LA    RWORK,FOUR               COUNT OF ENDING CONTROL
         STH   RWORK,GMTSCNT            SET COUNT OF DATA TO MOVE
         TM    QCBFLAG,QCBTSSES         IS TSO IN SESSION
         BNO   CKCRTN                   NO, CHECK FOR CARRIAGE
         LA    RWORK,SIX                COUNT OF ENDING CONTROL
         STH   RWORK,GMTSCNT            SET COUNT OF DATA TO MOVE
         MVC   ZERO(TWO,RTCBUF),CNTRL6  INSERT SF,ATTR IN TCAM
         LA    RWORK,ONE                COUNT OF DATA DISPLAYED
         BAL   RLINK,UPDLINE            UPDATE LINE SPACE AVAILABLE
         LA    RTCBUF,TWO(,RTCBUF)      UPDATE TCAM ADDRESS
CKCRTN   EQU   *
         CLI   AVTDOUBL,CR              IS LAST CHAR CARRIAGE-RETURN
         BNE   NOCRTN                   NO, DO NOT GO TO NEW LINE
         BAL   RLINK,CNTLIN1            COUNT ONE DISPLAY LINE
NOCRTN   EQU   *
         BAL   RLINK,BINHDWR            CONVERT BINARY VALUE TO
*                                          HARDWARE ADDRESS
         MVC   ZERO(ONE,RTCBUF),CNTRL2  INSERT SBA IN TCAM
         LA    RTCBUF,THREE(,RTCBUF)    UPDATE TCAM ADDRESS
MSGINC   EQU   *
         MVC   ZERO(ONE,RTCBUF),CNTRL7  INSERT INC IN TCAM
         LR    RTCBUF,RCNT              RESTORE CURRENT TCAM ADDRESS
         CLC   GMTCSPC,GMTSCNT          IS SPACE AVAILABLE IN TCAM
         BNL   MSGMOV                   YES, MOVE ENDING CONTROL
         LH    RCNT,GMTCSPC             AMOUNT OF SPACE AVAILABLE
         BCTR  RCNT,0                   REDUCE FOR EXECUTED MOVE
         EX    RCNT,MVC                 MOVE ENDING CONTROL TO TCAM
         LA    RWORK,ONE(,RCNT)         RESTORE ACTUAL DATA COUNT
         BAL   RLINK,UPDTSO             UPDATE TSO COUNT AND ADDRESS
         LA    RWORK,ONE(,RCNT)         RESTORE ACTUAL DATA COUNT
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         BAL   RLINK,MSGUNIT            GET NEW TCAM UNIT
MSGMOV   EQU   *
         LH    RCNT,GMTSCNT             AMOUNT OF DATA REMAINING
         BCTR  RCNT,0                   REDUCE FOR EXECUTED MOVE
         EX    RCNT,MVC                 MOVE ENDING CONTROL TO TCAM
         LA    RWORK,ONE(,RCNT)         RESTORE ACTUAL DATA COUNT
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
MSGCMP   EQU   *
         SH    R15,GMTCSPC              TOTAL AMOUNT OF DATA MOVED
         LR    RRCODE,R15               SET RETURN CODE FOR IEDAYM
         TM    GMDEVCH+TWO,DCTLOCAL     IS THIS 3270 LOCAL     @G36XRYP
         BO    EXITM                    EXIT TO IEDAYM
         CLI   LCBFLAG1,ZERO            IS TERMINAL ON 3705
         BE    EXITM                    EXIT TO IEDAYM
         LA    RRCODE,ONE(,R15)         SET RETURN CODE FOR IEDAYM
         MVC   ZERO(ONE,RTCBUF),CNTRL8  INSERT ETX IN TCAM
         B     EXITM                    EXIT TO IEDAYM
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********                        EXIT                         *********
*********                                                     *********
***********************************************************************
         SPACE 2
EXITN    EQU   *
         SR    RCNT,RCNT                CLEAR REGISTER FOR IC
         L     RWORK,LCBERBCH-ONE       POINTER TO FIRST TCAM BUFFER
         USING IEDQPRF,RWORK
NUMUNT   EQU   *
         IC    RCNT,PRFNBUNT            NUMBER OF UNITS IN BUFFER
         LTR   RCNT,RCNT                IS NUMBER OF UNITS ZERO
         BZ    UNUSED                   YES, UNITS NOT USED
NXTUNIT  EQU   *
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST UNIT
         BE    ALLUSD                   YES, ALL UNITS USED
         L     RWORK,PRFTIC             POINTER TO NEXT UNIT
         BCT   RCNT,NXTUNIT             GET NEXT UNIT POINTER
         B     NUMUNT                   GET NUMBER OF UNITS
UNUSED   EQU   *
         LR    R0,RWORK                 SAVE FIRST UNIT ADDRESS
         LA    RCNT,XFF                 INITIALIZE UNUSED UNIT COUNT
CHKLAST  EQU   *
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST AVAILABLE UNIT
         BE    SETUNTS                  YES, SET NUMBER UNUSED UNITS
         L     RWORK,PRFTIC             GET NEXT UNIT
         BCT   RCNT,CHKLAST             CHECK AGAIN
         LR    RCNT,R0                  GET FIRST UNIT OF BFR
         LA    R0,XFF             MAX. NO. OF UNITS
         STC   R0,PRFNBUNT-IEDQPRF(,RCNT) NO. OF UNITS/BFR
         B     UNUSED                   CHECK UNUSED UNITS
SETUNTS  EQU   *
         LR    RWORK,R0                 RESTORE FIRST UNIT ADDRESS
         LR    R0,RCNT                  GET UNIT COUNT
         LA    RCNT,XFF                 GET MAXIMUM NUMBER
         SR    RCNT,R0                  GET NO. OF UNITS-1
         LA    RCNT,ONE(,RCNT)          GET CORRECT NO. OF UNITS
         STC   RCNT,PRFNBUNT            SET NUMBER UNUSED UNITS
         DROP  RWORK
ALLUSD   EQU   *
         SH    RRCODE,HFOUR             ADJUST RETURN CODE
         B     EXITE                    RETURN TO CALLER
EXITM    EQU   *
         NI    QCBRETCT,XFF-QCBIEND     RESET FORMAT REQUEST
         SLL   RRCODE,SIXTEEN           ADJUST RETURN CODE
         B     SETCNTS                  SET LINE AND CARRIAGE COUNT
EXITE    EQU   *
         TM    GMFLAG,GMENCIN           HAS ENDING-CONTROL BEEN
*                                          INSERTED
         BNO   CHKMODE                  NO, CHECK MODE OF TPUT
         TM    QCBRETCT,QCBDEND         WAS TPUT FULLSCR OR ASIS
         BO    NOCNTS                   YES, DO NOT SET COUNTS
         B     SETCNTS                  SET LINE AND CARRIAGE COUNT
CHKMODE  EQU   *
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS THIS FULLSCR MODE
         BO    NOCNTS                   YES, DO NOT SET COUNTS
SETCNTS  EQU   *
         TM    QCBFLAG,QCBTSSES         IS TSO IN SESSION      @OZ24715
         BNO   NOCNTS                   NO, DO NOT SET COUNTS  @OZ24715
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORK,GMLNSZ             GET DISPLAY LINE SIZE
         SH    RWORK,GMLNSPC            SUBTRACT LINE SPACE AVAILABLE
         STC   RWORK,QCBCARCT           SET CARRIAGE POSITION IN QCB
         STH   RWORK,GMCARCT            SAVE CARRIAGE POSITION
         MVC   QCBSATCT(ONE),GMSATCT+ONE SET LINE COUNT IN QCB
NOCNTS   EQU   *
         ST    RRCODE,SIXTEEN(RAVT)     STORE RETURN CODE
         RETURN (14,12)                 RESTORE REGISTERS AND RETURN
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********             BUFFER TERMINATION ROUTINE              *********
*********                                                     *********
***********************************************************************
         SPACE 2
ENDBUFF  EQU   *
         LA    RCNT,ONE                 INITIALZE UNIT COUNT
         USING IEDQPRF,RWORK
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
LOOPUNIT EQU   *
         C     RWORK,GMCRUNT            IS THIS CURRENT TCAM UNIT
         BE    CNTUNIT                  YES, UNITS COUNTED
         L     RWORK,PRFTIC             POINTER TO NEXT TCAM UNIT
         LA    RWORK,ZERO(,RWORK)       CLEAR HIGH ORDER BYTE
         LA    RCNT,ONE(,RCNT)          UPDATE UNIT COUNT
         B     LOOPUNIT                 LOCATE CURRENT TCAM UNIT
CNTUNIT  EQU   *
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST AVAILABLE UNIT
         BE    OUTUNIT                  YES, EXIT TO IEDAYN
         MVC   GMCRUNT+ONE(THREE),PRFTIC+ONE MAKE NEXT UNIT CURRENT
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         STC   RCNT,PRFNBUNT            SET NUMBER OF UNITS IN BUFFER
         LH    RCNT,PRFSIZE             GET CURRENT TCAM DATA SIZE
         SH    RCNT,GMTCSPC             DECREMENT FOR SPACE REMAINING
         STH   RCNT,PRFSIZE             SET NEW TCAM DATA SIZE
         MVC   PRFLINK,GMCRUNT+ONE      LINK NEW BUFFER TO CURRENT
         MVC   GMCRBUF,GMCRUNT          MAKE NEXT UNIT START OF CURRENT
*                                          TCAM BUFFER
         L     RWORK,GMCRBUF            POINTER TO CURRENT TCAM BUFFER
         XC    PRFSRCE(PRFSHDR-PRFSRCE),PRFSRCE CLEAR PREFIX
         ST    RLCB,PRFLCB-ONE          SET LCB ADDRESS IN BUFFER
         OI    PRFSTAT1,PRFNLSTN+PRFNHDRN+PRFTSMSG SET NOT LAST, NOT
*                                          HEADER AND TSO BUFFER
         MVI   PRFNBUNT,ONE             SET ONE UNIT IN BUFFER
         XC    PRFLINK,PRFLINK          CLEAR BUFFER LINK ADDRESS
         LH    RCNT,AVTKEYLE            SPACE AVAILABLE IN TCAM UNIT
         STH   RCNT,PRFSIZE             SET TCAM DATA SIZE
         SH    RCNT,TXPRFSZ             REDUCE FOR TEXT PREFIX
         LA    RCNT,AVTUMALN(,RCNT)     INCREMENT FOR UNIT CNTRL AREA
         STH   RCNT,GMTCSPC             SET TCAM SPACE AVAILABLE
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT TCAM UNIT
         AH    RTCBUF,TXPRFSZ           POINTER TO TCAM DATA AREA
         CLC   PRFTIC+ONE(THREE),INVALTIC IS THIS LAST AVAILABLE UNIT
         BE    NCPCHK                   YES, CHECK FOR 3705 TERMINAL
         L     RWORK,PRFTIC             POINTER TO NEXT UNIT
         MVI   PRFNBUNT,ZERO            SET NUMBER OF UNITS TO ZERO
NCPCHK   EQU   *
         CLI   LCBFLAG1,ZERO            IS DISPLAY ON 3705
         BNER  RLINK                    NO, RETURN TO CALLER
         MVC   ZERO(THREE,RTCBUF),CNTRL1 INSERT ESC,CMD,WCC IN TCAM
         LA    RWORK,THREE              COUNT OF DATA MOVED TO TCAM
         ST    RLINK,AVTSAVE4+SIXTY4    SAVE LINKAGE REGISTER
         BAL   RLINK,UPDTCAM            UPDATE TCAM COUNT AND ADDRESS
         L     RLINK,AVTSAVE4+SIXTY4    RESTORE LINKAGE REGISTER
         BR    RLINK                    RETURN TO CALLER
OUTUNIT  EQU   *
         L     RWORK,GMCRBUF            POINTER TO LAST TCAM BUFFER
         STC   RCNT,PRFNBUNT            SET NUMBER OF UNITS IN BUFFER
         LA    RRCODE,ENDBUFR           SET END-OF-BUFFER RETURN CODE
         DROP  RWORK
         B     QTIPSZ                   ISSUE QTIP AND SET PRFSIZE
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********            TSO BUFFER UPDATE ROUTINE                *********
*********                                                     *********
***********************************************************************
         SPACE 2
QTIP     EQU   *
         STM   RLINK,R1,AVTSAVE4+FORTY8 SAVE REGISTERS
         TM    GMFLAG,GMENCON           IS END CONTROL ON?     @OY20575
         BO    NOQTIP                   QTIP ALREADY ISSUED    @OY20575
         LH    R15,GMTSSIZ              GET TOTAL TSO DATA COUNT
         SH    R15,GMTSCNT              SUBTRACT AMOUNT REMAINING
         BNP   NOQTIP                   RETURN IF NO DATA MOVED
         L     R2,GMTSBUF               POINTER TO CURRENT TSO BUFFER
         SLR   R0,R0                    CLEAR REGISTER         @ZM47671
         IC    R0,BUFFOFST              GET OFFSET TO DATA     @ZM47671
         AR    R0,R15                   ADD LENGTH OF TEXT MOV @ZM47671
         STC   R0,BUFFOFST              RESTORE UPDATED OFFSET@ZM47671
         IC    R0,BUFFLNTH              GET DATA LENGTH        @ZM47671
         SLR   R0,R15                   ADJUST BY AMOUNT MOVED @ZM47671
         STC   R0,BUFFLNTH              STORE UPDATED LENGTH   @ZM47671
NOQTIP   EQU   *
         LM    RLINK,R1,AVTSAVE4+FORTY8 RESTORE REGISTERS
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********                                                     *********
*********                                                     *********
***********************************************************************
         SPACE 2
MSGUNIT  EQU   *
         USING IEDQPRF,RWORK
         L     RWORK,GMCRUNT            POINTER TO CURRENT TCAM UNIT
         MVC   GMCRUNT+ONE(THREE),PRFTIC+ONE MAKE NEXT UNIT CURRENT
         DROP  RWORK
         L     RTCBUF,GMCRUNT           POINTER TO CURRENT UNIT
         LA    RTCBUF,PRFSUNIT-IEDQPRF(RTCBUF) POINTER TO TCAM DATA
         MVC   GMTCSPC,AVTKEYLE         SET TCAM SPACE AVAILABLE
         AH    R15,GMTCSPC              INCREMENT TOTAL SPACE
         LH    RCNT,GMTCSPC             SPACE AVAILABLE IN TCAM
         CH    RCNT,GMTSCNT             COMPARE TO REMAINING DATA COUNT
         BNHR  RLINK                    MOVE REMAINING DATA
         LH    RCNT,GMTSCNT             COUNT OF REMAINING DATA
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********            UPDATE LINE SPACE ROUTINE                *********
*********                                                     *********
***********************************************************************
         SPACE 2
UPDLINE  EQU   *
         ST    RLINK,AVTSAVE4+SIXTY4    SAVE LINKAGE REGISTER
         LNR   RWORK,RWORK              DECREMENT LINE
         AH    RWORK,GMLNSPC               SPACE
         STH   RWORK,GMLNSPC                  AVAILABLE
         LTR   RWORK,RWORK              IS DISPLAY LINE FULL
         BPR   RLINK                    NO, RETURN TO CALLER
         BAL   RLINK,CNTLINE            COUNT OUTPUT LINE
         L     RLINK,AVTSAVE4+SIXTY4    RESTORE LINKAGE REGISTER
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********     UPDATE TSO DATA COUNT AND ADDRESS ROUTINE       *********
*********                                                     *********
***********************************************************************
         SPACE 2
UPDTSO   EQU   *
         AR    RTSBUF,RWORK             UPDATE TSO BUFFER ADDRESS
         LNR   RWORK,RWORK              DECREMENT TSO
         AH    RWORK,GMTSCNT               DATA
         STH   RWORK,GMTSCNT                  COUNT
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********     UPDATE TCAM DATA COUNT AND ADDRESS ROUTINE      *********
*********                                                     *********
***********************************************************************
         SPACE 2
UPDTCAM  EQU   *
         AR    RTCBUF,RWORK             UPDATE TCAM BUFFER ADDRESS
         LNR   RWORK,RWORK              DECREMENT TCAM
         AH    RWORK,GMTCSPC               BUFFER UNIT
         STH   RWORK,GMTCSPC                  SPACE AVAILABLE
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********        DATA COUNT AND ADDRESS UPDATE ROUTINE        *********
*********                                                     *********
***********************************************************************
         SPACE 2
UPDCNTS  EQU   *
         AR    RTSBUF,RCNT              UPDATE TSO BUFFER ADDRESS
         AR    RTCBUF,RCNT              UPDATE TCAM BUFFER ADDRESS
         LH    RWORK,GMTCSPC            DECREMENT TCAM
         SR    RWORK,RCNT                  BUFFER UNIT
         STH   RWORK,GMTCSPC                  SPACE AVAILABLE
         LH    RWORK,GMTSCNT            DECREMENT TSO
         SR    RWORK,RCNT                  DATA
         STH   RWORK,GMTSCNT                  COUNT
         LH    RWORK,GMLNSPC            DECREMENT DISPLAY
         SR    RWORK,RCNT                  LINE SPACE
         STH   RWORK,GMLNSPC                  AVAILABLE
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********           RESOURCE DEPLETION CHECK ROUTINE          *********
*********                                                     *********
***********************************************************************
         SPACE 2
CHKCNTS  EQU   *
         ST    RLINK,AVTSAVE4+SIXTY4    SAVE LINKAGE REGISTER
         SR    RWORK,RWORK              CLEAR REGISTER
         CH    RWORK,GMLNSPC            IS DISPLAY LINE FULL
         BNZ   LINEOK                   NO, CHECK TCAM UNIT SPACE
         BAL   RLINK,CNTLINE            COUNT OUTPUT LINE
LINEOK   EQU   *
         CH    RWORK,GMTCSPC            IS TCAM BUFFER UNIT FULL
         BNZ   TCAMOK                   NO, CHECK TSO DATA COUNT
         BAL   RLINK,NEWUNIT            GET NEW TCAM BUFFER UNIT
TCAMOK   EQU   *
         CH    RWORK,GMTSCNT            HAS ALL TSO DATA BEEN MOVED
         BNZ   DATAOK                   NO, RETURN TO CALLER
         BAL   RLINK,NEWTPUT            GET NEXT TPUT DATA
DATAOK   EQU   *
         L     RLINK,AVTSAVE4+SIXTY4    RESTORE LINKAGE REGISTER
         BR    RLINK
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********       BINARY VALUE TO HARDWARE BUFFER ADDRESS       *********
*********                 CONVERSION ROUTINE                  *********
*********                                                     *********
***********************************************************************
         SPACE 2
BINHDWR  EQU   *
         ST    RCNT,AVTSAVE4+SIXTY4     SAVE COUNT REGISTER
         SR    RWORKE,RWORKE            CLEAR REGISTER FOR IC
         TM    QCBFLAG,QCBTSSES         IS TSO IN SESSION
         BNO   POSZERO                  NO, SET POSITION ZERO
         IC    RWORKE,GMLNSZ            GET DISPLAY SCREEN WIDTH
         LR    RWORK,RWORKE             SAVE WIDTH FOR CALCULATION
         SH    RWORK,GMLNSPC            FIND CURRENT POSITION ON LINE
         LH    RWORKO,GMSATCT           GET LINE COUNT
         CLI   GMSATCT+ONE,XFF          IS COUNT FOR ERASE
         BNE   MULTLIN                  NO, MULTIPLY
         SR    RWORKO,RWORKO            CLEAR REGISTER FOR IC
         IC    RWORKO,GMLNNO            NUMBER OF LINES ON SCREEN
         BCTR  RWORKO,0                 REDUCE BY ONE
POSZERO  EQU   *
         SR    RWORK,RWORK              CURRENT POSITION ON LINE IS 0
MULTLIN  EQU   *
         MR    RWORKE,RWORKE            MULTIPLY WIDTH AND LINE COUNT
BINHDWR1 EQU   *
         LR    RWORKE,RWORKO            PUT SCREEN POSITION IN EVEN REG
         AR    RWORKE,RWORK             ADD LINE POSITION TO SCREEN
*                                          POSITION
         SLL   RWORKE,TWENTY            SPLIT TWELVE BIT
         SRDL  RWORKE,TWENTY6              VALUE INTO
         SRL   RWORKO,TWENTY6                 TWO REGISTERS
         STC   RWORKE,ONE(RTCBUF)       PUT FIRST VALUE IN TCAM BUFFER
         STC   RWORKO,TWO(RTCBUF)       PUT SCND VALUE IN TCAM BUFFER
         L     RWORK,CONVERT            POINTER TO TRANSLATE TABLE
         TR    ONE(TWO,RTCBUF),ZERO(RWORK) TRANSLATE TO HARDWARE FORMAT
         L     RCNT,AVTSAVE4+SIXTY4     RESTORE COUNT REGISTER
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********       HARDWARE BUFFER ADDRESS TO BINARY VALUE       *********
*********                 CONVERSION ROUTINE                  *********
*********                                                     *********
***********************************************************************
         SPACE 2
HDWRBIN  EQU *
         ST    RCNT,AVTSAVE4+SIXTY4     SAVE COUNT REGISTER
         SR    RWORKE,RWORKE            CLEAR REGISTER FOR IC
         SR    RWORKO,RWORKO            CLEAR REGISTER FOR IC
         L     RWORK,CONVERT            POINTER TO TRANSLATE TABLE
         IC    RWORKE,ONE(,RTSBUF)      GET FIRST CURSOR ADDRESS
         IC    RWORKO,TWO(,RTSBUF)      GET SECOND CURSOR ADDRESS
         IC    RWORKE,ZERO(RWORK,RWORKE) VALUE CORRESPONDING TO ADDR 1
         IC    RWORKO,ZERO(RWORK,RWORKO) VALUE CORRESPONDING TO ADDR 2
         SLL   RWORKO,TWENTY6           COMBINE VALUES
         SRDL  RWORKE,TWENTY6              IN REGISTER
         SR    RWORK,RWORK              CLEAR REGISTER FOR IC
         IC    RWORK,GMLNSZ             GET DISPLAY SCREEN WIDTH
         DR    RWORKE,RWORK             DIVIDE VALUE BY WIDTH
         SR    RWORK,RWORKE             CALCULATE DISPLAY LINE
         STH   RWORK,GMLNSPC               SPACE REMAINING
         L     RCNT,AVTSAVE4+SIXTY4     RESTORE COUNT REGISTER
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL IS IT FULLSCR MODE
         BOR   RLINK                    YES, DON'T UPDATE LINE COUNT
         STH   RWORKO,GMSATCT           SET NEW LINE COUNT
         BR    RLINK                    RETURN TO CALLER
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********         CONSTANTS AND EXECUTED INSTRUCTIONS         *********
*********                                                     *********
***********************************************************************
         SPACE 2
CLI      CLI   GMLNNO,0                 COMPARE CURRENT LINE TO
*                                          MAXIMUM LINE NUMBER
MVC      MVC   ZERO(ZERO,RTCBUF),ZERO(RTSBUF) MOVE DATA FROM TSO
*                                          BUFFER TO TCAM UNIT
TRT      TRT   ZERO(ZERO,RTSBUF),ZERO(RTABLE) TRANSLATE AND TEST
*                                          DATA IN TSO BUFFER
ASIS     DC    A(ASISTBL)               TRT TABLE POINTER FOR ASIS
CONTROL  DC    A(CNTLTBL)               TRT TABLE POINTER FOR CONTROL
EDIT     DC    A(EDITTBL)               TRT TABLE POINTER FOR EDIT
FULLSCR  DC    A(FLSCTBL)               TRT TABLE POINTER FOR FULLSCR
CONVERT  DC    A(CNVTTBL)               BUFFER ADDRESS CONVERSION TBL
HONE     DC    H'1'                     CONSTANT OF 1
HTWO     DC    H'2'                     CONSTANT OF 2
HTHREE   DC    H'3'                     CONSTANT OF 3
HFOUR    DC    H'4'                     CONSTANT OF 4
HSIX     DC    H'6'                     CONSTANT OF 6
HSEVEN   DC    H'7'                     CONSTANT OF 7
HEIGHT   DC    H'8'                     CONSTANT OF 8
TXPRFSZ  DC    AL2(PRFSTXT-IEDQPRF)     TEXT PREFIX SIZE
HDPRFSZ  DC    AL2(PRFSHDR-IEDQPRF)     HEADER PREFIX SIZE
SCBRESR  DC    AL2(SCBMBSSA-IEDQSCB)    SIZE OF UNUSED SCB SPACE
CNTRL0   DC    X'02'                    STX
CNTRL1   DC    X'27F1C1'                ESC,CMD,WCC
CNTRL2   DC    X'11'                    SBA
CNTRL3   DC    X'1DC8'                  SF,ATTR
CNTRL4   DC    X'1D40'                  SF,ATTR
CNTRL5   DC    X'1DC8'                  SF,ATTR
CNTRL6   DC    X'1D40'                  SF,ATTR
CNTRL7   DC    X'13'                    INC
CNTRL8   DC    X'0337'                  ETX,EOT
CNTRL9   DC    X'26'                    ETB                    @OY19561
CNTRLA   DC    X'0227F1C20337'         STX,ESC,CMD,WCC,ETX,EOT @OY19561
PROMPT   DC    X'03',C'***'             SIMULATED ATTENTION PROMPT
KYBDRES  DC    X'01',X'C3'              KEYBOARD RESTORE
INVALTIC DC    X'000002'                INVALID TIC ADDRESS
         SPACE 2
AYQPATCH DC    20F'0'                   PATCH AREA
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********          BUFFER ADDRESS CONVERSION TABLES           *********
*********                                                     *********
***********************************************************************
         SPACE 2
CNVTTBL  EQU   *
*              CONVERT BINARY VALUE TO 3270 HARDWARE
*                BUFFER ADDRESS  (X'00'-X'3F')
*              CONVERT 3270 HARDWARE BUFFER ADDRESS
*                TO BINARY VALUE  (X'40'-X'FF')
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F' 0
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F' 1
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F' 2
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F' 3
         DC    X'000000000000000000000A0B0C0D0E0F' 4
         DC    X'100000000000000000001A1B1C1D1E1F' 5
         DC    X'202100000000000000002A2B2C2D2E2F' 6
         DC    X'000000000000000000003A3B3C3D3E3F' 7
         DC    X'00000000000000000000000000000000' 8
         DC    X'00000000000000000000000000000000' 9
         DC    X'00000000000000000000000000000000' A
         DC    X'00000000000000000000000000000000' B
         DC    X'00010203040506070809000000000000' C
         DC    X'00111213141516171819000000000000' D
         DC    X'00002223242526272829000000000000' E
         DC    X'30313233343536373839000000000000' F
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********        TRANSLATE AND TEST TABLE - EDIT MODE         *********
*********                                                     *********
***********************************************************************
         SPACE 2
EDITTBL  EQU   *
*              00 - NO CONVERSION
*              01 - CONVERT TO COLON (:)
*              02 - CONVERT TO CONTROL SEQUENCE ('1DC8')
*              03 - CONVERT TO CONTROL SEQUENCE ('1D4C')
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'00010101010001000000000000010000' 0
         DC    X'00010101020101010000000000010000' 1
         DC    X'00000000030001000000000000010000' 2
         DC    X'00000000000000010000000001010000' 3
         DC    X'00000000000000000000000000000000' 4
         DC    X'00000000000000000000000000000000' 5
         DC    X'00000000000000000000000000000000' 6
         DC    X'00000000000000000000000000000000' 7
         DC    X'00000000000000000000000000000000' 8
         DC    X'00000000000000000000000000000000' 9
         DC    X'00000000000000000000000000000000' A
         DC    X'00000000000000000000000000000000' B
         DC    X'00000000000000000000000000000000' C
         DC    X'00000000000000000000000000000000' D
         DC    X'00000000000000000000000000000000' E
         DC    X'00000000000000000000000000000001' F           @OZ29793
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********     TRANSLATE AND TEST TABLE - ASIS/FULLSCR MODE    *********
*********                                                     *********
***********************************************************************
         SPACE 2
ASISTBL  EQU   *
FLSCTBL  EQU   *
*              00 - NO CONVERSION
*              01 - CONVERT TO COLON (:)
*              02 - CONVERT TO CONTROL SEQUENCE ('1DC8')
*              03 - CONVERT TO CONTROL SEQUENCE ('1D4C')
*              04 - NON-DISPLAYABLE CHARACTER
*              05 - NON-DISPLAYABLE 3 CHARACTER SEQUENCE
*              06 - NON-DISPLAYABLE 4 CHARACTER SEQUENCE
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'00010101010001000000000000010000' 0
         DC    X'00050504020101010000000000040000' 1
         DC    X'00000000030001000000000000010000' 2
         DC    X'00000000000000010000000006010000' 3
         DC    X'00000000000000000000000000000000' 4
         DC    X'00000000000000000000000000000000' 5
         DC    X'00000000000000000000000000000000' 6
         DC    X'00000000000000000000000000000000' 7
         DC    X'00000000000000000000000000000000' 8
         DC    X'00000000000000000000000000000000' 9
         DC    X'00000000000000000000000000000000' A
         DC    X'00000000000000000000000000000000' B
         DC    X'00000000000000000000000000000000' C
         DC    X'00000000000000000000000000000000' D
         DC    X'00000000000000000000000000000000' E
         DC    X'00000000000000000000000000000000' F
         SPACE 2
***********************************************************************
         EJECT
***********************************************************************
*********                                                     *********
*********       TRANSLATE AND TEST TABLE - CONTROL MODE       *********
*********                                                     *********
***********************************************************************
         SPACE 2
CNTLTBL  EQU   *
*              02 - CONVERT TO CONTROL SEQUENCE ('1DC8')
*              03 - CONVERT TO CONTROL SEQUENCE ('1D4C')
*              07 - SKIP SENDING THIS CHARACTER
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'07070707070707070707070707070707'  0
         DC    X'07070707020707070707070707070707'  1
         DC    X'07070707030707070707070707070707'  2
         DC    X'07070707070707070707070707070707'  3
         DC    X'07070707070707070707070707070707'  4
         DC    X'07070707070707070707070707070707'  5
         DC    X'07070707070707070707070707070707'  6
         DC    X'07070707070707070707070707070707'  7
         DC    X'07070707070707070707070707070707'  8
         DC    X'07070707070707070707070707070707'  9
         DC    X'07070707070707070707070707070707'  A
         DC    X'07070707070707070707070707070707'  B
         DC    X'07070707070707070707070707070707'  C
         DC    X'07070707070707070707070707070707'  D
         DC    X'07070707070707070707070707070707'  E
         DC    X'07070707070707070707070707070707'  F
         SPACE 2
***********************************************************************
         EJECT
         IKJTIOCB
         EJECT
         TAVTD
         EJECT
         TDCTD
         EJECT
         TLCBD
         EJECT
         TPRFD
PRFFLSCR EQU   PRFEOFN                  FULLSCR TPUT IN BUFFER @OY19692
         EJECT
         TQCBD
         EJECT
         TSCBD
         EJECT
         TTSID
         END
