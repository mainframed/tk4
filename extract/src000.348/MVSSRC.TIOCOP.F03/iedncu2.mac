         TITLE 'IEDNCU2, STATUS ANALYSIS ROUTINE                       *
                        '
IEDNCU2  CSECT ,                                                01S0001
@PROLOG  DS    0H                                               01S0002
*                                   /*
         USING IEDNCU2,REG15           INFORM THE ASSEMBLER OF THE
*                                      BASE REGISTER TO BE USED FOR
*                                      ADDRESSING CODE
         STM   RCUR,RRETURN,USERREGS   SAVE USER REGS
         LR    RBASE,REG15             ESTABLISH CORRECT BASE
         DROP  REG15
         USING IEDNCU2,RBASE           ESTABLISH NEW/CORRECT BASE
*                                   /*
IEDNCU2   IEDHJN AFTERHJN,HJN           MODULE IDENTIFICATION MACRO
*                                                               02S0754
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT DOES THE PROCESSING THAT IS NECESSARY TO*/
*   /* PREFORM THE FUNCTION OF THE MODULE                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0754
*   RTRM=RPARM;                     /* TRM ADDRESSABILITY    @YM07312*/
         LR    RTRM,RPARM                                       02S0754
*   REG15=4;                        /* SET NON ZERO RETURN CODE 02S0755
*                                      ASSUMPTION                    */
         LA    REG15,4                                          02S0755
*   RSIB=0;                         /* INITIALIZE                    */
         SLR   RSIB,RSIB                                        02S0756
*   IF TRMTYPE=TRMPUNT THEN         /* IF SNA PU AND NOT NCP         */
         CLI   TRMTYPE(RTRM),X'18'                              02S0757
         BNE   @RF00757                                         02S0757
*     DO;                                                       02S0758
*                                                               03S0759
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS.SNAPU: THIS SEGMENT DOES TRM AND SIB ANALYSIS OF A*/
*       /* SNA PU                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0759
*       RFY                                                     03S0759
*         RTH RSTD;                                             03S0759
*       IF TRMSIBPT^=0 THEN         /* ANY SIB                       */
         SLR   @14,@14                                          03S0760
         ICM   @14,7,TRMSIBPT(RTRM)                             03S0760
         LTR   @14,@14                                          03S0760
         BZ    @RF00760                                         03S0760
*         DO;                                                   03S0761
*           RSIB=TRMSIBPT;          /* SET SIB BASE                  */
         LR    RSIB,@14                                         03S0762
*           IF SIBSSTAT=SIBSAPND    /* ACTPU OUTSTANDING OR ...      */
*               ×SIBSSTAT=SIBSRPND THEN/* ... DACTPU OUTSTANDING     */
         TM    SIBSSTAT(RSIB),B'00000100'                       03S0763
         BNO   @GL00001                                         03S0763
         TM    SIBSSTAT(RSIB),B'00011000'                       03S0763
         BZ    @RT00763                                         03S0763
@GL00001 TM    SIBSSTAT(RSIB),B'00001000'                       03S0763
         BNO   @RF00763                                         03S0763
         TM    SIBSSTAT(RSIB),B'00010100'                       03S0763
         BNZ   @RF00763                                         03S0763
@RT00763 DS    0H                                               03S0764
*             DO;                                               03S0764
*               SEARCH=ON;          /* REQUEST A SEARCH OF THE OP CTL
*                                      FID1 REQUEST QUEUES   @YM07310*/
         OI    SEARCH,B'01000000'                               03S0765
*               CALL FID1PERR;                                  03S0766
         BAL   @14,FID1PERR                                     03S0766
*               IF REG15^=0 THEN    /* IF BUFFER AVAILABLE           */
         LTR   REG15,REG15                                      03S0767
         BZ    @RF00767                                         03S0767
*                 DO;                                           03S0768
*                                                               04S0769
*                   /*************************************************/
*                   /*                                               */
*                   /* PROCESS.SNAPU.ACTDACPU: THIS SEGMENT DOES     */
*                   /* FURTHER INITIALIZES THE RESPONSE FOR ACTPU OR */
*                   /* DACTPU                                        */
*                   /*                                               */
*                   /*************************************************/
*                                                               04S0769
*                   TRHRUCAT=TRHSC; /* SET SESSION CONTROL TYPE      */
         OI    TRHRUCAT+10(RTH),B'01100000'                     04S0769
*                   IF SIBSSTAT=SIBSAPND THEN/* ACTPU                */
         TM    SIBSSTAT(RSIB),B'00000100'                       04S0770
         BNO   @RF00770                                         04S0770
         TM    SIBSSTAT(RSIB),B'00011000'                       04S0770
         BNZ   @RF00770                                         04S0770
*                     HEXCODE=CD1ACTPU;/* SET ACTPU CODE             */
         MVI   HEXCODE+17(RTH),X'11'                            04S0771
*                   ELSE                                        04S0772
*                     HEXCODE=CD1DATPU;/* SET DACTPU CODE            */
         B     @RC00770                                         04S0772
@RF00770 MVI   HEXCODE+17(RTH),X'12'                            04S0772
*                 END;                                          03S0773
*             END;                                              03S0774
*         END;                                                  03S0775
*       ELSE                        /* NOT SSCP-PU SESSION           */
*         DO;                                                   03S0776
         B     @RC00760                                         03S0776
@RF00760 DS    0H                                               03S0777
*           IF TRMPCONT=TRMCCSNT    /* CONTACT OUTSTANDING OR ...    */
*               ×TRMPCONT=TRMCAPND  /* ... CONTACTED OUTSTANDING OR
*                                      ...                           */
*               ×TRMPCONT=TRMCRPND THEN/* ... DISCONTACT OUTSTANDING */
         TM    TRMPCONT(RTRM),B'00000001'                       03S0777
         BNO   @GL00003                                         03S0777
         TM    TRMPCONT(RTRM),B'00000110'                       03S0777
         BZ    @RT00777                                         03S0777
@GL00003 TM    TRMPCONT(RTRM),B'00000010'                       03S0777
         BNO   @GL00002                                         03S0777
         TM    TRMPCONT(RTRM),B'00000101'                       03S0777
         BZ    @RT00777                                         03S0777
@GL00002 TM    TRMPCONT(RTRM),B'00000011'                       03S0777
         BNO   @RF00777                                         03S0777
         TM    TRMPCONT(RTRM),B'00000100'                       03S0777
         BNZ   @RF00777                                         03S0777
@RT00777 DS    0H                                               03S0778
*             DO;                                               03S0778
*               IF TRMPCONT^=TRMCAPND THEN/* IF NOT CONTACTED THEN
*                                                            @YM07310*/
         TM    TRMPCONT(RTRM),B'00000010'                       03S0779
         BNO   @RT00779                                         03S0779
         TM    TRMPCONT(RTRM),B'00000101'                       03S0779
         BZ    @RF00779                                         03S0779
@RT00779 DS    0H                                               03S0780
*                 SEARCH=ON;        /* REQUEST SEARCH OF OP CTL FID1
*                                      REQ QUEUES            @YM07310*/
         OI    SEARCH,B'01000000'                               03S0780
*               CALL FID1PERR;                                  03S0781
@RF00779 BAL   @14,FID1PERR                                     03S0781
*               IF REG15^=0 THEN    /* IF BUFFER AVAILABLE           */
         LTR   REG15,REG15                                      03S0782
         BZ    @RF00782                                         03S0782
*                 DO;                                           03S0783
*                                                               04S0784
*                   /*************************************************/
*                   /*                                               */
*                   /* PROCESS.SNAPU.CCD: THIS SEGMENT FURTHER       */
*                   /* INITIALIZES THE RESPONSE FOR CONTACT,         */
*                   /* CONTACTED, OR DISCONTACT                      */
*                   /*                                               */
*                   /*************************************************/
*                                                               04S0784
*                   TRHRUCAT=TRHFMD;/* SET FM DATA TYPE              */
         LA    @14,10                                           04S0784
         ALR   @14,RTH                                          04S0784
         NI    TRHRUCAT(@14),B'10011111'                        04S0784
*                   TTHEFI=OFF;     /* RESET EXPIDITED FLOW          */
         NI    TTHEFI(RTH),B'11111110'                          04S0785
*                   IF TRMPCONT=TRMCAPND THEN/* CONTACTED            */
         TM    TRMPCONT(RTRM),B'00000010'                       04S0786
         BNO   @RF00786                                         04S0786
         TM    TRMPCONT(RTRM),B'00000101'                       04S0786
         BNZ   @RF00786                                         04S0786
*                     DO;                                       04S0787
*                       TRHTYPE=OFF;/* REQUEST                       */
*                       TRHSDI=OFF; /* NO SENSE DATA                 */
         NI    TRHTYPE(@14),B'01111011'                         04S0789
*                       XCTDCODE=CD1XCTD;/* CONTACTED                */
         MVC   XCTDCODE+13(3,RTH),@CB00862                      04S0790
*                       RPARM=CURFAILT;/* FAILING DEVICE TNT INDEX   */
         LH    RPARM,CURFAILT(,RCUR)                            04S0791
*                       CALL IEDIAP04;/*                     @YM07288*/
         L     @09,AVTSAVTP(,RAVT)                              04S0792
         L     @15,SAVTTNTX(,@09)                               04S0792
         BALR  @14,@15                                          04S0792
*                       XCTDADDR=REG15;/* SET NETWORK ADDRESS        */
         LA    @14,13                                           04S0793
         ALR   @14,RTH                                          04S0793
         STCM  REG15,3,XCTDADDR(@14)                            04S0793
*                       XCTDSTAT=FERR;/* ERROR TYPE                  */
         MVI   XCTDSTAT(@14),X'03'                              04S0794
*                       TTHDCF=TTHDCF+1;/* UPDATA DATA COUNT         */
         LA    @14,1                                            04S0795
         SLR   @09,@09                                          04S0795
         ICM   @09,3,TTHDCF(RTH)                                04S0795
         ALR   @14,@09                                          04S0795
         STCM  @14,3,TTHDCF(RTH)                                04S0795
*                     END;                                      04S0796
*                   ELSE            /* CONTACT OR DISCONTACT         */
*                     DO;                                       04S0797
         B     @RC00786                                         04S0797
@RF00786 DS    0H                                               04S0798
*                       IF TRMPCONT=TRMCCSNT THEN/* CONTACT          */
         TM    TRMPCONT(RTRM),B'00000001'                       04S0798
         BNO   @RF00798                                         04S0798
         TM    TRMPCONT(RTRM),B'00000110'                       04S0798
         BNZ   @RF00798                                         04S0798
*                         HEXCDALL=CD1XCON;/* SET CONTACT CODE       */
         MVC   HEXCDALL+17(3,RTH),@CB00860                      04S0799
*                       ELSE                                    04S0800
*                         HEXCDALL=CD1XDSC;/* SET CONTACTED CODE     */
         B     @RC00798                                         04S0800
@RF00798 MVC   HEXCDALL+17(3,RTH),@CB00864                      04S0800
*                       TTHDCF=TTHDCF+2;/* DATA COUNT                */
@RC00798 LA    @14,2                                            04S0801
         SLR   @09,@09                                          04S0801
         ICM   @09,3,TTHDCF(RTH)                                04S0801
         ALR   @14,@09                                          04S0801
         STCM  @14,3,TTHDCF(RTH)                                04S0801
*                     END;                                      04S0802
*                 END;                                          03S0803
@RC00786 DS    0H                                               03S0804
*             END;                                              03S0804
@RF00782 DS    0H                                               03S0805
*         END;                                                  03S0805
@RF00777 DS    0H                                               03S0806
*       RFY                                                     03S0806
*         RTH UNRSTD;                                           03S0806
@RC00760 DS    0H                                               03S0807
*     END;                                                      02S0807
*   ELSE                                                        02S0808
*     IF TRMTYPE=TRMSDLC            /* IF SNA LINK                   */
*         ×TRMTYPE=TRMNSDLC THEN    /* OR PRE-SNA LINE THEN  @YM08536*/
         B     @RC00757                                         02S0808
@RF00757 CLI   TRMTYPE(RTRM),X'21'                              02S0808
         BE    @RT00808                                         02S0808
         CLI   TRMTYPE(RTRM),X'20'                              02S0808
         BNE   @RF00808                                         02S0808
@RT00808 DS    0H                                               02S0809
*       DO;                                                     02S0809
*                                                               03S0810
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.LINK: THIS SEGMENT DOES TRM ANALYSIS OF A SNA   */
*         /* LINK OR A PRE-SNA LINE                          @YM08536*/
*         /*                                                         */
*         /***********************************************************/
*                                                               03S0810
*         RFY                                                   03S0810
*           RTH RSTD;                                           03S0810
*         IF TRMLSTAT=TRMLAPND      /* ACTLINK OUTSTANDING OR ...    */
*             ×TRMLSTAT=TRMLRPND THEN/* ... DACTLINK OUTSTANDING     */
         TM    TRMLSTAT(RTRM),B'00010000'                       03S0811
         BNO   @GL00005                                         03S0811
         TM    TRMLSTAT(RTRM),B'00100000'                       03S0811
         BZ    @RT00811                                         03S0811
@GL00005 TM    TRMLSTAT(RTRM),B'00100000'                       03S0811
         BNO   @RF00811                                         03S0811
         TM    TRMLSTAT(RTRM),B'00010000'                       03S0811
         BNZ   @RF00811                                         03S0811
@RT00811 DS    0H                                               03S0812
*           DO;                                                 03S0812
*             SEARCH=ON;            /* REQUEST A SEARCH OF THE OP CTL
*                                      FID1 REQUEST QUEUES   @YM07310*/
         OI    SEARCH,B'01000000'                               03S0813
*             CALL FID1PERR;                                    03S0814
         BAL   @14,FID1PERR                                     03S0814
*             IF REG15^=0 THEN      /* IF BUFFER AVAILABLE           */
         LTR   REG15,REG15                                      03S0815
         BZ    @RF00815                                         03S0815
*               DO;                                             03S0816
*                                                               04S0817
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.LINK.ACTDACLI: THIS SEGMENT FURTHER     */
*                 /* INITIALIZES THE RESPONSE FOR ACTLINK OR DACTLINK*/
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0817
*                 RPARM=TTHOAF;     /* GET LINE NETWORK ADDRESS 04S0817
*                                                            @YM07715*/
         SLR   RPARM,RPARM                                      04S0817
         ICM   RPARM,3,TTHOAF(RTH)                              04S0817
*                 CALL IEDIAP06;    /* CONVERT NETWORK ADDRESS TO
*                                      3705 LCB ADDRESS      @YM07715*/
         L     @09,AVTSAVTP(,RAVT)                              04S0818
         L     @15,SAVTLCBS(,@09)                               04S0818
         BALR  @14,@15                                          04S0818
*                 RPARM=REG15->LCBTTCIN;/* GET TNT INDEX OF THE NCP
*                                                            @YM07715*/
         LH    RPARM,LCBTTCIN(,REG15)                           04S0819
         N     RPARM,@CF02773                                   04S0819
*                 CALL IEDIAP04;    /* GET NCP NETWORK ADDRESS  04S0820
*                                                            @YM07715*/
         L     @09,AVTSAVTP(,RAVT)                              04S0820
         L     @15,SAVTTNTX(,@09)                               04S0820
         BALR  @14,@15                                          04S0820
*                 TTHOAF=REG15;     /* SET PROPER NETWORK ADDRESS IN
*                                      TH                    @YM07715*/
         STCM  REG15,3,TTHOAF(RTH)                              04S0821
*                 TRHRUCAT=TRHFMD;  /* SET FM DATA TYPE              */
         NI    TRHRUCAT+10(RTH),B'10011111'                     04S0822
*                 TTHEFI=OFF;       /* RESET EXPIDITED FLOW          */
         NI    TTHEFI(RTH),B'11111110'                          04S0823
*                 IF TRMLSTAT=TRMLAPND THEN/* ACTLINK                */
         TM    TRMLSTAT(RTRM),B'00010000'                       04S0824
         BNO   @RF00824                                         04S0824
         TM    TRMLSTAT(RTRM),B'00100000'                       04S0824
         BNZ   @RF00824                                         04S0824
*                   HEXCDALL=CD1XALK;/* SET ACTLINK HEX CODE         */
         MVC   HEXCDALL+17(3,RTH),@CB00856                      04S0825
*                 ELSE                                          04S0826
*                   HEXCDALL=CD1XDLK;/* SET DACTLINK HEX CODE        */
         B     @RC00824                                         04S0826
@RF00824 MVC   HEXCDALL+17(3,RTH),@CB00858                      04S0826
*                 TTHDCF=TTHDCF+2;  /* UPDATE DATA COUNT             */
@RC00824 LA    @14,2                                            04S0827
         SLR   @09,@09                                          04S0827
         ICM   @09,3,TTHDCF(RTH)                                04S0827
         ALR   @14,@09                                          04S0827
         STCM  @14,3,TTHDCF(RTH)                                04S0827
*               END;                                            03S0828
*           END;                                                03S0829
@RF00815 DS    0H                                               03S0830
*         RFY                                                   03S0830
*           RTH UNRSTD;                                         03S0830
@RF00811 DS    0H                                               03S0831
*       END;                                                    02S0831
*     ELSE                                                      02S0832
*       IF TRMTYPE=TRMLNCP THEN     /* IF SNA PU AND NCP             */
         B     @RC00808                                         02S0832
@RF00808 CLI   TRMTYPE(RTRM),X'0F'                              02S0832
         BNE   @RF00832                                         02S0832
*         DO;                                                   02S0833
*                                                               03S0834
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.SNAPUNCP: THIS SEGMENT DOES TRM AND SIB       */
*           /* ANALYSIS OF A SNA NCP PU                              */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0834
*           RFY                                                 03S0834
*             RTH RSTD;                                         03S0834
*           IF TRMSIBPT^=0 THEN     /* IF SIB ASSIGNED               */
         SLR   @14,@14                                          03S0835
         ICM   @14,7,TRMSIBPT(RTRM)                             03S0835
         LTR   @14,@14                                          03S0835
         BZ    @RF00835                                         03S0835
*             DO;                                               03S0836
*               RSIB=TRMSIBPT;      /* SIB BASE                      */
         LR    RSIB,@14                                         03S0837
*               IF(SIBSSTAT=SIBSACTV&SIBDSTAT=SIBDAPND)/* IF SDT OR
*                                      ...                           */
*                   ×SIBSSTAT=SIBSAPND/* ... ACTPU OUTSTANDING OR ...*/
*                   ×SIBSSTAT=SIBSRPND THEN/* ... DACTPU OUTSTANDING */
         TM    SIBSSTAT(RSIB),B'00011100'                       03S0838
         BNO   @GL00007                                         03S0838
         TM    SIBDSTAT(RSIB),B'00000001'                       03S0838
         BNO   @GL00007                                         03S0838
         TM    SIBDSTAT(RSIB),B'00000010'                       03S0838
         BZ    @RT00838                                         03S0838
@GL00007 TM    SIBSSTAT(RSIB),B'00000100'                       03S0838
         BNO   @GL00006                                         03S0838
         TM    SIBSSTAT(RSIB),B'00011000'                       03S0838
         BZ    @RT00838                                         03S0838
@GL00006 TM    SIBSSTAT(RSIB),B'00001000'                       03S0838
         BNO   @RF00838                                         03S0838
         TM    SIBSSTAT(RSIB),B'00010100'                       03S0838
         BNZ   @RF00838                                         03S0838
@RT00838 DS    0H                                               03S0839
*                 DO;                                           03S0839
*                   SEARCH=ON;      /* REQUEST A SEARCH OF THE OP CTL
*                                      FID1 REQUEST QUEUES   @YM07310*/
         OI    SEARCH,B'01000000'                               03S0840
*                   CALL FID1PERR;                              03S0841
         BAL   @14,FID1PERR                                     03S0841
*                   IF REG15^=0 THEN/* IF BUFFER AVAILABLE           */
         LTR   REG15,REG15                                      03S0842
         BZ    @RF00842                                         03S0842
*                     DO;                                       03S0843
*                                                               04S0844
*                       /*********************************************/
*                       /*                                           */
*                       /* PROCESS.SNAPUNCP.DAS: THIS SEGMENT FURTHER*/
*                       /* INITIALIZES THE RESPONSE FOR SDT,ACTPU, OR*/
*                       /* DACTPU                                    */
*                       /*                                           */
*                       /*********************************************/
*                                                               04S0844
*                       TRHRUCAT=TRHSC;/* SET SESSION CONTROL TYPE   */
         OI    TRHRUCAT+10(RTH),B'01100000'                     04S0844
*                       IF SIBSSTAT=SIBSACTV&SIBDSTAT=SIBDAPND THEN/*
*                                      SDT                           */
         TM    SIBSSTAT(RSIB),B'00011100'                       04S0845
         BNO   @RF00845                                         04S0845
         TM    SIBDSTAT(RSIB),B'00000001'                       04S0845
         BNO   @RF00845                                         04S0845
         TM    SIBDSTAT(RSIB),B'00000010'                       04S0845
         BNZ   @RF00845                                         04S0845
*                         HEXCODE=CD1SDT;/* SET START DATA TRAFFIC
*                                      HEX CODE                      */
         MVI   HEXCODE+17(RTH),X'A0'                            04S0846
*                       ELSE                                    04S0847
*                         IF SIBSSTAT=SIBSAPND THEN/* ACTPU          */
         B     @RC00845                                         04S0847
@RF00845 TM    SIBSSTAT(RSIB),B'00000100'                       04S0847
         BNO   @RF00847                                         04S0847
         TM    SIBSSTAT(RSIB),B'00011000'                       04S0847
         BNZ   @RF00847                                         04S0847
*                           HEXCODE=CD1ACTPU;/* SET ACTPU HEX CODE   */
         MVI   HEXCODE+17(RTH),X'11'                            04S0848
*                         ELSE                                  04S0849
*                           HEXCODE=CD1DATPU;/* SET DACTPU HEX CODE  */
         B     @RC00847                                         04S0849
@RF00847 MVI   HEXCODE+17(RTH),X'12'                            04S0849
*                     END;                                      03S0850
@RC00847 DS    0H                                               03S0850
@RC00845 DS    0H                                               03S0851
*                 END;                                          03S0851
@RF00842 DS    0H                                               03S0852
*               RFY                                             03S0852
*                 RTH UNRSTD;                                   03S0852
@RF00838 DS    0H                                               03S0853
*             END;                                              03S0853
*         END;                                                  02S0854
*       ELSE                                                    02S0855
*         IF TRMTYPE=TRMPSNA        /* IF NONSNA WITH ...            */
*             &TRMSPACT=OFF         /* ... SUPERIOR RESOURCE INACTIVE
*                                      ...                   @YM08416*/
*             &TRMOCNI=OFF THEN                                 02S0855
         B     @RC00832                                         02S0855
@RF00832 CLI   TRMTYPE(RTRM),X'4F'                              02S0855
         BNE   @RF00855                                         02S0855
         TM    TRMSPACT(RTRM),B'00110000'                       02S0855
         BZ    @RT00855                                         02S0855
*           ;                       /* ... OR NO STOPTERM IN PROGRESS
*                                      ... DO NOTHING        @YM08416*/
*         ELSE                                                  02S0857
*           DO;                                                 02S0857
@RF00855 DS    0H                                               02S0858
*             IF TRMTYPE=TRMLUNT THEN/* SNA LU                       */
         CLI   TRMTYPE(RTRM),X'30'                              02S0858
         BNE   @RF00858                                         02S0858
*               DO;                                             02S0859
*                                                               03S0860
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.SNALU: THIS SEGMENT DOES TRM AND SIB    */
*                 /* ANALYSIS OF A SNA LU                            */
*                 /*                                                 */
*                 /***************************************************/
*                                                               03S0860
*                 RFY                                           03S0860
*                   RTH RSTD;                                   03S0860
*                 IF TRMSIBPT^=0 THEN/* IF ANY SIB ASSIGNED          */
         SLR   @14,@14                                          03S0861
         ICM   @14,7,TRMSIBPT(RTRM)                             03S0861
         LTR   @14,@14                                          03S0861
         BZ    @RF00861                                         03S0861
*                   DO;                                         03S0862
*                     RSIB=TRMSIBPT;                            03S0863
         LR    RSIB,@14                                         03S0863
*                     IF SIBINDEX^=SAVTSCPT THEN/* LU TO LU SIB      */
         L     @14,AVTSAVTP(,RAVT)                              03S0864
         CLC   SIBINDEX(2,RSIB),SAVTSCPT(@14)                   03S0864
         BE    @RF00864                                         03S0864
*                       DO;                                     03S0865
*                         IF SIBSSTAT=SIBSACTV THEN/* IF SESSION
*                                      ACTIVE                        */
         TM    SIBSSTAT(RSIB),B'00011100'                       03S0866
         BNO   @RF00866                                         03S0866
*                           DO;                                 03S0867
*                             IF SIBDSTAT=SIBDACTV THEN/* DATA TRAFIC
*                                      ACTIVE                        */
         TM    SIBDSTAT(RSIB),B'00000011'                       03S0868
         BNO   @RF00868                                         03S0868
*                               MOREAN=ON;/* REQUEST MORE ANALYSIS
*                                      AND EXIT                      */
         OI    MOREAN,B'10000000'                               03S0869
*                             ELSE                              03S0870
*                               IF(SIBDSTAT=SIBDAPND×/* SDT OR CLEAR
*                                      OUTSTANDING           @YM08991*/
*                                   SIBDSTAT=SIBDRPND)&/* AND NOT
*                                                            @YM08991*/
*                                   CURTERM=OFF THEN/* FORCED   03S0870
*                                      TERMINATE CLEANUP     @YM08991*/
         B     @RC00868                                         03S0870
@RF00868 TM    SIBDSTAT(RSIB),B'00000001'                       03S0870
         BNO   @GL00012                                         03S0870
         TM    SIBDSTAT(RSIB),B'00000010'                       03S0870
         BZ    @GL00011                                         03S0870
@GL00012 TM    SIBDSTAT(RSIB),B'00000010'                       03S0870
         BNO   @RF00870                                         03S0870
         TM    SIBDSTAT(RSIB),B'00000001'                       03S0870
         BNZ   @RF00870                                         03S0870
@GL00011 TM    CURTERM(RCUR),B'00000001'                        03S0870
         BNZ   @RF00870                                         03S0870
*                                 DO;                           03S0871
*                                   CALL FID1PERR;              03S0872
         BAL   @14,FID1PERR                                     03S0872
*                                   IF REG15^=0 THEN/* IF BUFFERS
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      03S0873
         BZ    @RF00873                                         03S0873
*                                    DO;                        03S0874
*                                                               04S0875
*                                     /*******************************/
*                                     /*                             */
*                                     /* PROCESS.SNALU.SDTCLR: THIS  */
*                                     /* SEGMENT FURTHER INITIALIZES */
*                                     /* THE RESPONSE FOR SDT AND    */
*                                     /* CLEAR                       */
*                                     /*                             */
*                                     /*******************************/
*                                                               04S0875
*                                     TRHRUCAT=TRHSC;/* SET SESSION
*                                      CONTROL TYPE                  */
         OI    TRHRUCAT+10(RTH),B'01100000'                     04S0875
*                                     IF SIBDSTAT=SIBDAPND THEN/* SDT*/
         TM    SIBDSTAT(RSIB),B'00000001'                       04S0876
         BNO   @RF00876                                         04S0876
         TM    SIBDSTAT(RSIB),B'00000010'                       04S0876
         BNZ   @RF00876                                         04S0876
*                                      HEXCODE=CD1SDT;/* SET SDT CODE*/
         MVI   HEXCODE+17(RTH),X'A0'                            04S0877
*                                     ELSE                      04S0878
*                                      HEXCODE=CD1CLEAR;/* SET CLEAR
*                                      CODE                          */
         B     @RC00876                                         04S0878
@RF00876 MVI   HEXCODE+17(RTH),X'A1'                            04S0878
*                                    END;                       03S0879
*                                 END;                          03S0880
*                           END;                                03S0881
*                         ELSE                                  03S0882
*                           IF(SIBSSTAT=SIBSAPND×/* BIND OR UNBIND
*                                                            @YM08991*/
*                               SIBSSTAT=SIBSRPND)&/* OUTSTANDING AND
*                                      NOT                   @YM08991*/
*                               CURTERM=OFF THEN/* FORCED TERMINATE
*                                                            @YM08991*/
         B     @RC00866                                         03S0882
@RF00866 TM    SIBSSTAT(RSIB),B'00000100'                       03S0882
         BNO   @GL00014                                         03S0882
         TM    SIBSSTAT(RSIB),B'00011000'                       03S0882
         BZ    @GL00013                                         03S0882
@GL00014 TM    SIBSSTAT(RSIB),B'00001000'                       03S0882
         BNO   @RF00882                                         03S0882
         TM    SIBSSTAT(RSIB),B'00010100'                       03S0882
         BNZ   @RF00882                                         03S0882
@GL00013 TM    CURTERM(RCUR),B'00000001'                        03S0882
         BNZ   @RF00882                                         03S0882
*                             DO;                               03S0883
*                               CALL FID1PERR;                  03S0884
         BAL   @14,FID1PERR                                     03S0884
*                               IF REG15^=0 THEN/* IF BUFFERS   03S0885
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      03S0885
         BZ    @RF00885                                         03S0885
*                                 DO;                           03S0886
*                                                               04S0887
*                                   /*********************************/
*                                   /*                               */
*                                   /* PROCESS.SNALU.BINDUB: THIS    */
*                                   /* SEGMENT FURTHER INITIALIZES   */
*                                   /* THE RESPONSE FOR BIND OR      */
*                                   /* UNBIND                        */
*                                   /*                               */
*                                   /*********************************/
*                                                               04S0887
*                                   TRHRUCAT=TRHSC;/* SET SESSION
*                                      CONTROL TYPE                  */
         OI    TRHRUCAT+10(RTH),B'01100000'                     04S0887
*                                   IF SIBSSTAT=SIBSAPND THEN/* BIND */
         TM    SIBSSTAT(RSIB),B'00000100'                       04S0888
         BNO   @RF00888                                         04S0888
         TM    SIBSSTAT(RSIB),B'00011000'                       04S0888
         BNZ   @RF00888                                         04S0888
*                                    HEXCODE=CD1BIND;/* SET BIND CODE*/
         MVI   HEXCODE+17(RTH),X'31'                            04S0889
*                                   ELSE                        04S0890
*                                    HEXCODE=CD1UBIND;/* SET UNBIND
*                                      CODE                          */
         B     @RC00888                                         04S0890
@RF00888 MVI   HEXCODE+17(RTH),X'32'                            04S0890
*                                 END;                          03S0891
*                             END;                              03S0892
*                       END;                                    03S0893
*                     ELSE          /* NO LU-LU SIB                  */
*                       DO;                                     03S0894
         B     @RC00864                                         03S0894
@RF00864 DS    0H                                               03S0895
*                         IF SIBSSTAT=SIBSAPND/* IF ACTLU OUTSTANDING
*                                      OR ...                        */
*                             ×SIBSSTAT=SIBSRPND THEN/* ... DACTLU
*                                      OUTSTANDING                   */
         TM    SIBSSTAT(RSIB),B'00000100'                       03S0895
         BNO   @GL00015                                         03S0895
         TM    SIBSSTAT(RSIB),B'00011000'                       03S0895
         BZ    @RT00895                                         03S0895
@GL00015 TM    SIBSSTAT(RSIB),B'00001000'                       03S0895
         BNO   @RF00895                                         03S0895
         TM    SIBSSTAT(RSIB),B'00010100'                       03S0895
         BNZ   @RF00895                                         03S0895
@RT00895 DS    0H                                               03S0896
*                           DO;                                 03S0896
*                             SEARCH=ON;/* REQUEST A SEARCH OF THE OP
*                                      CTL FID1 REQUEST QUEUES  03S0897
*                                                            @YM07310*/
         OI    SEARCH,B'01000000'                               03S0897
*                             CALL FID1PERR;                    03S0898
         BAL   @14,FID1PERR                                     03S0898
*                             IF REG15^=0 THEN/* IF BUFFERS AVAILABLE*/
         LTR   REG15,REG15                                      03S0899
         BZ    @RF00899                                         03S0899
*                               DO;                             03S0900
*                                                               04S0901
*                                 /***********************************/
*                                 /*                                 */
*                                 /* PROCESS.SNALU.ACTDACLU: THIS    */
*                                 /* SEGMENT FURTHER INITIALIZES THE */
*                                 /* RESPONSE FOR ACTLU OR DACTLU    */
*                                 /*                                 */
*                                 /***********************************/
*                                                               04S0901
*                                 TRHRUCAT=TRHSC;/* SET SESSION 04S0901
*                                      CONTROL TYPE                  */
         OI    TRHRUCAT+10(RTH),B'01100000'                     04S0901
*                                 IF SIBSSTAT=SIBSAPND THEN/* IF
*                                      ACTLU                         */
         TM    SIBSSTAT(RSIB),B'00000100'                       04S0902
         BNO   @RF00902                                         04S0902
         TM    SIBSSTAT(RSIB),B'00011000'                       04S0902
         BNZ   @RF00902                                         04S0902
*                                   HEXCODE=CD1ACTLU;/* SET ACTLU
*                                      CODE                          */
         MVI   HEXCODE+17(RTH),X'0D'                            04S0903
*                                 ELSE                          04S0904
*                                   HEXCODE=CD1DATLU;/* SET DACTLU
*                                      CODE                          */
         B     @RC00902                                         04S0904
@RF00902 MVI   HEXCODE+17(RTH),X'0E'                            04S0904
*                               END;                            03S0905
@RC00902 DS    0H                                               03S0906
*                           END;                                03S0906
@RF00899 DS    0H                                               03S0907
*                       END;                                    03S0907
@RF00895 DS    0H                                               03S0908
*                   END;                                        03S0908
@RC00864 DS    0H                                               03S0909
*                 RFY                                           03S0909
*                   RTH UNRSTD;                                 03S0909
@RF00861 DS    0H                                               03S0910
*               END;                                            02S0910
*             ELSE                  /* PRESNA                        */
*               MOREAN=ON;          /* REQUEST MORE ANALYSIS         */
         B     @RC00858                                         02S0911
@RF00858 OI    MOREAN,B'10000000'                               02S0911
*             IF MOREAN=ON THEN     /* MORE ANALYSIS REQUESTED       */
@RC00858 TM    MOREAN,B'10000000'                               02S0912
         BNO   @RF00912                                         02S0912
*               DO;                                             02S0913
*                 MOREAN=OFF;       /* RESET SWITCH                  */
         NI    MOREAN,B'01111111'                               02S0914
*                 IF TRMSNA=ON THEN /* IF SNA ...            @YM07731*/
         TM    TRMSNA(RTRM),B'00000010'                         02S0915
         BNO   @RF00915                                         02S0915
*                   RSIB=TRMSIBPT;  /* ... SET SIB ADDRESS           */
         SLR   RSIB,RSIB                                        02S0916
         ICM   RSIB,7,TRMSIBPT(RTRM)                            02S0916
*                                                               03S0917
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.MOREANAL: THIS SEGMENT CONTINUES THE    */
*                 /* PROCESS SEGMENT                                 */
*                 /*                                                 */
*                 /***************************************************/
*                                                               03S0917
*                 IF QCBPLCBN=ON THEN/* PLCB ASSIGNED                */
@RF00915 SLR   @14,@14                                          03S0917
         ICM   @14,7,TRMDESTQ(RTRM)                             03S0917
         SL    @14,@CF00044                                     03S0917
         TM    QCBPLCBN(@14),B'10000000'                        03S0917
         BNO   @RF00917                                         03S0917
*                   DO;                                         03S0918
*                     RLCB=QCBPLCBA;/* PLCB BASE                     */
         L     RLCB,QCBPLCBA-1(,@14)                            03S0919
         LA    RLCB,0(,RLCB)                                    03S0919
*                     IF LCBMSGNN=ON THEN/* MSGGEN                   */
         TM    LCBMSGNN(RLCB),B'01000000'                       03S0920
         BNO   @RF00920                                         03S0920
*                       DO;                                     03S0921
*                                                               04S0922
*                         /*******************************************/
*                         /*                                         */
*                         /* PROCESS.MOREANAL.MSGGEN: THIS SEGMENT   */
*                         /* POSTS THE ERB TO IEDQBD TO CONTINUE     */
*                         /* PROCESSING                              */
*                         /*                                         */
*                         /*******************************************/
*                                                               04S0922
*                         LCBERBQB=SQCBADR;/* QCB                    */
         L     @14,AVTMSGS-1(,RAVT)                             04S0922
         MVC   LCBERBQB(3,RLCB),SQCBADR+1(@14)                  04S0922
*                         LCBERBPY=PRIRCQCB;/* PRIORITY              */
         MVI   LCBERBPY(RLCB),X'E0'                             04S0923
*                         RPARM=ADDR(LCBERB);                   04S0924
         LA    RPARM,LCBERB(,RLCB)                              04S0924
*                         CALL DSPPOSTR;                        04S0925
         LA    @15,DSPPOSTR(,RDISP)                             04S0925
         BALR  @14,@15                                          04S0925
*                       END;                                    03S0926
*                     ELSE                                      03S0927
*                       IF LCBRECVN=ON THEN/* RECEIVING              */
         B     @RC00920                                         03S0927
@RF00920 TM    LCBRECVN(RLCB),B'00000010'                       03S0927
         BNO   @RF00927                                         03S0927
*                         DO;                                   03S0928
*                                                               04S0929
*                           /*****************************************/
*                           /*                                       */
*                           /* PROCESS.MOREANAL.RECEIVE: THIS SEGMENT*/
*                           /* DOES CLEANUP PROCESSING FOR PLCB      */
*                           /* MARKED RECEIVING                      */
*                           /*                                       */
*                           /*****************************************/
*                                                               04S0929
*                           RFY                                 04S0929
*                             RTH RSTD;                         04S0929
*                           IF TRMSNA=ON THEN/* SNA                  */
         TM    TRMSNA(RTRM),B'00000010'                         04S0930
         BNO   @RF00930                                         04S0930
*                             IF SIBINBIU=ON THEN/* SEGMENTING       */
         TM    SIBINBIU(RSIB),B'00100000'                       04S0931
         BNO   @RF00931                                         04S0931
*                               DO;                             04S0932
*                                                               05S0933
*                                 /***********************************/
*                                 /*                                 */
*                                 /* PROCESS.MOREANAL.RECEIVE.COPYSEG*/
*                                 /* : THIS SEGMENT GETS A BUFFER AND*/
*                                 /* COPYS THE FIRST UNIT OF A       */
*                                 /* SEGMENT CHAIN, SETS BEGIN       */
*                                 /* SEGMENT, AND END SEGMENT TO     */
*                                 /* TERMINATE SEGMENTING            */
*                                 /*                                 */
*                                 /***********************************/
*                                                               05S0933
*                                 RFY                           05S0933
*                                   REG00 RSTD;                 05S0933
*                                 CALL GETBUF;                  05S0934
         BAL   @14,GETBUF                                       05S0934
*                                 IF REG15^=0 THEN/* IF BUFFER  05S0935
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      05S0935
         BZ    @RF00935                                         05S0935
*                                   DO;                         05S0936
*                                    RFY                        05S0937
*                                      IEDQPRF BASED(REG15);    05S0937
*                                    PRFQCBA=SAVTIPCQ;/* QCB         */
         L     @14,AVTSAVTP(,RAVT)                              05S0938
         MVC   PRFQCBA(3,REG15),SAVTIPCQ+1(@14)                 05S0938
*                                    PRFPRI=PRIFLDH;/* PRIORITY      */
         MVI   PRFPRI(REG15),X'E4'                              05S0939
*                                    PRFPIUO=PIUOVALU;/* SET    05S0940
*                                      VALUE=X'11'                   */
         LA    @14,17                                           05S0940
         STC   @14,PRFPIUO(,REG15)                              05S0940
*                                    NEWTHRH=OLDTHRH;/* COPY TH AND
*                                      RH                            */
         LA    @09,PRFPIUO(,REG15)                              05S0941
         ALR   @14,@09                                          05S0941
         L     @07,SIBRUSEG(,RSIB)                              05S0941
         SLR   @03,@03                                          05S0941
         IC    @03,PRFPIUO(,@07)                                05S0941
         ALR   @09,@03                                          05S0941
         MVC   NEWTHRH(13,@14),OLDTHRH(@09)                     05S0941
*                                    RTH=PRFPIUO+ADDR(PRFPIUO);/* TTH
*                                      BASE                          */
         LR    RTH,@14                                          05S0942
*                                    REG00=TTHOAF;/* SAVE OAF FOR
*                                      SWAP                          */
         SLR   REG00,REG00                                      05S0943
         ICM   REG00,3,TTHOAF(RTH)                              05S0943
*                                    TTHOAF=TTHDAF;/* MAKE ORIGIN
*                                      DESTINATION                   */
         MVC   TTHOAF(2,RTH),TTHDAF(RTH)                        05S0944
*                                    TTHDAF=REG00;/* MAKE DESTINATION
*                                      ORIGIN                        */
         STCM  REG00,3,TTHDAF(RTH)                              05S0945
*                                    SNSMAJ=SNSPATH;/* SET PATH ERROR
*                                      SENSE                         */
         LA    @14,13                                           05S0946
         ALR   @14,RTH                                          05S0946
         MVI   SNSMAJ(@14),X'80'                                05S0946
*                                    IF CURTERM=ON THEN/* FORCED
*                                      TERMINATE REQ.        @YM08991*/
         TM    CURTERM(RCUR),B'00000001'                        05S0947
         BNO   @RF00947                                         05S0947
*                                     SNSMIN=SNSLUINP;/* YES, SET LU
*                                      INOPERATV             @YM08991*/
         MVI   SNSMIN(@14),X'03'                                05S0948
*                                    ELSE/* NO,              @YM08991*/
*                                     SNSMIN=SNSLNKF;/* SET LINK
*                                      FAILURE SENSE                 */
         B     @RC00947                                         05S0949
@RF00947 MVI   SNSMIN+13(RTH),X'02'                             05S0949
*                                    SNSUSER=0;/* NO USER DATA SENSE */
@RC00947 SLR   @14,@14                                          05S0950
         STCM  @14,3,SNSUSER+13(RTH)                            05S0950
*                                    IF SIBRUSEG->TRHTYPE=ON THEN/*
*                                      IF A REQUEST                  */
         L     @14,SIBRUSEG(,RSIB)                              05S0951
         TM    TRHTYPE(@14),B'10000000'                         05S0951
         BNO   @RF00951                                         05S0951
*                                     DO;/* SET NEGATIVE RESPONSE    */
*                                      TRHDR1=ON;/* SET DEFINITE
*                                      RESPONSE 1                    */
         LA    @14,10                                           05S0953
         ALR   @14,RTH                                          05S0953
         OI    TRHDR1(@14),B'10000000'                          05S0953
*                                      TRHTYPE=ON;/* SET RESPONSE    */
         OI    TRHTYPE(@14),B'10000000'                         05S0954
*                                      TRHER=ON;/* SET EXCEPTION
*                                      RESPONSE                      */
         OI    TRHER(@14),B'00010000'                           05S0955
*                                     END;                      05S0956
*                                    ELSE/* SET EXR                  */
*                                     TRHTYPE=OFF;/* REQUEST         */
         B     @RC00951                                         05S0957
@RF00951 NI    TRHTYPE+10(RTH),B'01111111'                      05S0957
*                                    TRHSDI=ON;/* SENSE DATA INCLUDED*/
@RC00951 DS    0H                                               05S0959
*                                    TRHBC=ON;/* BEGIN CHAIN         */
*                                    TRHEC=ON;/* END CHAIN           */
         OI    TRHSDI+10(RTH),B'00000111'                       05S0960
*                                    TTHBBIU=ON;/* BEGIN SEGMENT     */
*                                    TTHEBIU=ON;/* END SEGMENT       */
         OI    TTHBBIU(RTH),B'00001100'                         05S0962
*                                    PRFTIC=CURPIUPC;/* ADD TO PIU
*                                      FOR PATH CONTROL QUEUE        */
         L     @14,CURPIUPC(,RCUR)                              05S0963
         ST    @14,PRFTIC(,REG15)                               05S0963
*                                    CURPIUPC=REG15;/* SAME          */
         ST    REG15,CURPIUPC(,RCUR)                            05S0964
*                                    RFY                        05S0965
*                                      IEDQPRF BASED(RPRF);     05S0965
*                                   END;                        05S0966
*                                 RFY                           05S0967
*                                   REG00 UNRSTD;               05S0967
@RF00935 DS    0H                                               05S0968
*                               END;                            04S0968
*                             ELSE                              04S0969
*                               IF LCBCHN=LCBINC/* IN CHAIN STATE OR
*                                      ...                           */
*                                   ×LCBCHN=LCBPURG/* ... PURGE CHAIN
*                                      STATE OR ...                  */
*                                   ×(LCBCHN=LCBWMG&TRMINPTP=ON) THEN
         B     @RC00931                                         04S0969
@RF00931 TM    LCBCHN(RLCB),B'00010000'                         04S0969
         BNO   @GL00017                                         04S0969
         TM    LCBCHN(RLCB),B'11100000'                         04S0969
         BZ    @RT00969                                         04S0969
@GL00017 TM    LCBCHN(RLCB),B'00100000'                         04S0969
         BNO   @GL00016                                         04S0969
         TM    LCBCHN(RLCB),B'11010000'                         04S0969
         BZ    @RT00969                                         04S0969
@GL00016 TM    LCBCHN(RLCB),B'00110000'                         04S0969
         BNO   @RF00969                                         04S0969
         TM    LCBCHN(RLCB),B'11000000'                         04S0969
         BNZ   @RF00969                                         04S0969
         TM    TRMINPTP(RTRM),B'01000000'                       04S0969
         BNO   @RF00969                                         04S0969
@RT00969 DS    0H                                               04S0970
*                                   /* ... BETWEEN CHAIN WITH INPUT
*                                      PENDING                       */
*                                 DO;                           04S0970
*                                                               05S0971
*                                   /*********************************/
*                                   /*                               */
*                                   /* PROCESS.MOREANAL.RECEIVE.FID1E*/
*                                   /* XR: THIS SEGMENT BUILDS A FID1*/
*                                   /* EXR RESPONSE                  */
*                                   /*                               */
*                                   /*********************************/
*                                                               05S0971
*                                   CALL FID1PERR;              05S0971
         BAL   @14,FID1PERR                                     05S0971
*                                   IF REG15^=0 THEN/* IF BUFFER
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      05S0972
         BZ    @RF00972                                         05S0972
*                                    DO;                        05S0973
*                                     TRHBC=ON;/* BEGIN CHAIN        */
*                                     TRHEC=ON;/* END CHAIN          */
         LA    @14,10                                           05S0975
         ALR   @14,RTH                                          05S0975
         OI    TRHBC(@14),B'00000011'                           05S0975
*                                     TRHRUCAT=TRHFMD;/* SET FM DATA
*                                      TYPE                          */
         NI    TRHRUCAT(@14),B'10011111'                        05S0976
*                                    END;                       05S0977
*                                 END;                          04S0978
*                               ELSE                            04S0979
*                                 IF LCBCHN=LCBWERAS/* SCREEN   04S0979
*                                      RESPONSE OUTSTANDING OR ...   */
*                                     ×LCBCHN=LCBWSMI THEN/* ...
*                                      WAITING FOR SMI               */
         B     @RC00969                                         04S0979
@RF00969 TM    LCBCHN(RLCB),B'01110000'                         04S0979
         BNO   @GL00019                                         04S0979
         TM    LCBCHN(RLCB),B'10000000'                         04S0979
         BZ    @RT00979                                         04S0979
@GL00019 TM    LCBCHN(RLCB),B'10000000'                         04S0979
         BNO   @RF00979                                         04S0979
         TM    LCBCHN(RLCB),B'01110000'                         04S0979
         BNZ   @RF00979                                         04S0979
@RT00979 DS    0H                                               04S0980
*                                   DO;                         04S0980
*                                    CALL FID1PERR;             04S0981
         BAL   @14,FID1PERR                                     04S0981
*                                    IF REG15^=0 THEN/* IF BUFFER
*                                      ABAILABLE                     */
         LTR   REG15,REG15                                      04S0982
         BZ    @RF00982                                         04S0982
*                                     DO;                       04S0983
*                                                               05S0984
*                                      /******************************/
*                                      /*                            */
*                                      /* STATANAL.MOREANAL.RECEIVE.S*/
*                                      /* ESMI: THIS SEGMENT TALORS  */
*                                      /* THE RESPONSE FOR SCREEN    */
*                                      /* RESPONSE OR SMI            */
*                                      /*                            */
*                                      /******************************/
*                                                               05S0984
*                                      TRHRUCAT=TRHFMD;/* SET FM DATA
*                                      TYPE                          */
         NI    TRHRUCAT+10(RTH),B'10011111'                     05S0984
*                                      TTHEFI=OFF;/* RESET EXPEDITED
*                                      FLOW                          */
         NI    TTHEFI(RTH),B'11111110'                          05S0985
*                                     END;                      04S0986
*                                   END;                        04S0987
*                                 ELSE                          04S0988
*                                   ;                           04S0988
@RF00979 DS    0H                                               04S0989
*                           ELSE                                04S0989
*                             DO;                               04S0989
         B     @RC00930                                         04S0989
@RF00930 DS    0H                                               04S0990
*                                                               05S0990
*                               /*************************************/
*                               /*                                   */
*                               /* PROCESS.MOREANAL.RECEIVE.NONSNA:  */
*                               /* THIS SEGMENT DOES LCB AND SCB     */
*                               /* ANALYSIS FOR NON-SNA DEVICES      */
*                               /*                                   */
*                               /*************************************/
*                                                               05S0990
*                               IF LCBCONT=ON/* MIDDLE OF CHAIN OR
*                                      ...                           */
*                                   ×SCBBFMM=ON THEN/* ... MIDDLE OF
*                                      MESSAGE                       */
         TM    LCBCONT(RLCB),B'00001000'                        05S0990
         BO    @RT00990                                         05S0990
         L     @14,LCBSCBA-1(,RLCB)                             05S0990
         TM    SCBBFMM(@14),B'00000001'                         05S0990
         BNO   @RF00990                                         05S0990
@RT00990 DS    0H                                               05S0991
*                                 DO;                           05S0991
*                                   CALL FID0PERR;              05S0992
         BAL   @14,FID0PERR                                     05S0992
*                                   IF REG15^=0 THEN/* IF BUFFER
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      05S0993
         BZ    @RF00993                                         05S0993
*                                    DO;                        05S0994
*                                     BDUCMND=CD0READ;/* SET READ    */
         LA    @14,14                                           05S0995
         ALR   @14,RTH                                          05S0995
         MVI   BDUCMND(@14),X'01'                               05S0995
*                                     BDUMODIF=CD0RT;/* SET READ
*                                      TRANSMISSION                  */
         MVI   BDUMODIF(@14),X'03'                              05S0996
*                                    END;                       05S0997
*                                 END;                          05S0998
*                               ELSE                            05S0999
*                                 IF SCBLCK1N=ON THEN/* IF LOCK MODE */
         B     @RC00990                                         05S0999
@RF00990 L     @14,LCBSCBA-1(,RLCB)                             05S0999
         TM    SCBLCK1N(@14),B'00100000'                        05S0999
         BNO   @RF00999                                         05S0999
*                                   DO;                         05S1000
*                                                               06S1001
*                                    /********************************/
*                                    /*                              */
*                                    /* PROCESS.MOREANAL.RECEIVE.NONS*/
*                                    /* NA.LOCK: THIS SEGMENT CLEANS */
*                                    /* UP LOCK MODE         @YM06114*/
*                                    /*                              */
*                                    /********************************/
*                                                               06S1001
*                                    IF QCBLKRRN=0 THEN/* LOCK  06S1001
*                                      RELATIVE RECORD NUMBER ZERO
*                                                            @YM06114*/
         SLR   @14,@14                                          06S1001
         ICM   @14,7,TRMDESTQ(RTRM)                             06S1001
         L     @14,QCBLKRRN-1(,@14)                             06S1001
         LA    @14,0(,@14)                                      06S1001
         LTR   @14,@14                                          06S1001
         BNZ   @RF01001                                         06S1001
*                                     DO;/*                  @YM06114*/
*                                      IF TRMINOUT=ON×/* INVITE 06S1003
*                                      OUTSTANDING OR        @YM08094*/
*                                          TRMRDOUT=ON THEN/* READ
*                                      OUTSTANDING THEN      @YM08094*/
         TM    TRMINOUT(RTRM),B'00000011'                       06S1003
         BZ    @RF01003                                         06S1003
*                                       DO;/*                @YM08094*/
*                                        CALL FID0PERR;/* BUILD FID0
*                                      RESPONSE              @YM08094*/
         BAL   @14,FID0PERR                                     06S1005
*                                        IF REG15^=0 THEN/* IF BUFFER
*                                      AVAILABLE             @YM08094*/
         LTR   REG15,REG15                                      06S1006
         BZ    @RF01006                                         06S1006
*                                         DO;/*              @YM08094*/
*                                          CALL IRMNC;/* SET COMMAND
*                                      & MODIFIER            @YM08094*/
         BAL   @14,IRMNC                                        06S1008
*                                          SCBDESTQ=ADDR(AVTBFRTB);/*
*                                      SCBDESTQ TO BFR RTN   @YM08094*/
         L     @14,LCBSCBA-1(,RLCB)                             06S1009
         LA    @09,AVTBFRTB(,RAVT)                              06S1009
         STCM  @09,7,SCBDESTQ(@14)                              06S1009
*                                         END;/*             @YM08094*/
*                                       END;/*               @YM08094*/
*                                      ELSE/*                @YM08094*/
*                                       IF LCBBDFLG=ON THEN/* NOT TO
*                                      BD                    @YM06114*/
         B     @RC01003                                         06S1012
@RF01003 TM    LCBBDFLG(RLCB),B'10000000'                       06S1012
         BNO   @RF01012                                         06S1012
*                                        REG15=1;/* INDICATE NO BFR
*                                      NEEDED                @YM08094*/
         LA    REG15,1                                          06S1013
*                                       ELSE/*               @YM06114*/
*                                        DO;/*               @YM06114*/
         B     @RC01012                                         06S1014
@RF01012 DS    0H                                               06S1015
*                                         LCBQCBA=SQCBADR;/* BD'S QCB
*                                      ADDR                  @YM08094*/
         L     @14,AVTMSGS-1(,RAVT)                             06S1015
         MVC   LCBQCBA(3,RLCB),SQCBADR+1(@14)                   06S1015
*                                         LCBPRI=PRILCB;/* CLEANUP
*                                      PRIORITY              @YM08094*/
         MVI   LCBPRI(RLCB),X'E7'                               06S1016
*                                         LCBRCLLN=ON;/* INDICATE
*                                      BFRS FREED            @YM08094*/
         OI    LCBRCLLN(RLCB),B'10000000'                       06S1017
*                                         RPARM=RLCB;/* ADDRESS OF
*                                      PLCB                  @YM06114*/
         LR    RPARM,RLCB                                       06S1018
*                                         CALL DSPPOSTR;/* POST PLCB
*                                      TO ITSELF             @YM06114*/
         LA    @15,DSPPOSTR(,RDISP)                             06S1019
         BALR  @14,@15                                          06S1019
*                                        END;/*              @YM06114*/
*                                      IF REG15^=0 THEN/* IF BUFFER
*                                      WAS EITHER AVAILABLE OR NOT
*                                      NEEDED THEN           @YM08094*/
@RC01012 DS    0H                                               06S1021
@RC01003 SLR   @14,@14                                          06S1021
         CR    REG15,@14                                        06S1021
         BE    @RF01021                                         06S1021
*                                       DO;/*                @YM08094*/
*                                        LCBINSRC=0;/* RESET @YM06114*/
         STCM  @14,7,LCBINSRC(RLCB)                             06S1023
*                                        SCBLCK1N=OFF;/* RESET LOCK
*                                      MODE                  @YM06114*/
*                                        SCBMSGLN=OFF;/* RESET LOCK
*                                      MODE                  @YM06114*/
         L     @14,LCBSCBA-1(,RLCB)                             06S1025
         NI    SCBLCK1N(@14),B'11010111'                        06S1025
*                                        QCBLKRLN=0;/* ZERO  @YM06114*/
         SLR   @14,@14                                          06S1026
         ICM   @14,7,TRMDESTQ(RTRM)                             06S1026
         MVI   QCBLKRLN(@14),X'00'                              06S1026
*                                       END;/*               @YM08094*/
*                                     END;/*                 @YM06114*/
@RF01021 DS    0H                                               06S1029
*                                   END;                        05S1029
@RF01001 DS    0H                                               05S1030
*                             END;                              04S1030
@RF00999 DS    0H                                               04S1030
@RC00990 DS    0H                                               04S1031
*                           RFY                                 04S1031
*                             RTH UNRSTD;                       04S1031
@RC00930 DS    0H                                               04S1032
*                         END;                                  03S1032
*                       ELSE                                    03S1033
*                         DO;                                   03S1033
         B     @RC00927                                         03S1033
@RF00927 DS    0H                                               03S1034
*                                                               04S1034
*                           /*****************************************/
*                           /*                                       */
*                           /* PROCESS.MOREANAL.SENDING: THIS SEGMENT*/
*                           /* DOES CLEANUP PROCESSING FOR PLCB      */
*                           /* MARKED SENDING                        */
*                           /*                                       */
*                           /*****************************************/
*                                                               04S1034
*                           RFY                                 04S1034
*                             RTH RSTD;                         04S1034
*                           IF LCBDLNKN=OFF/* DISK I/O OR ...        */
*                               ×LCBRCLLN=ON THEN               04S1035
         TM    LCBDLNKN(RLCB),B'00000001'                       04S1035
         BZ    @RT01035                                         04S1035
         TM    LCBRCLLN(RLCB),B'10000000'                       04S1035
         BO    @RT01035                                         04S1035
*                             ;     /* ... RECALL -- DO NOTHING      */
*                           ELSE                                04S1037
*                             IF TRMSNA=ON THEN/* IF SNA             */
         TM    TRMSNA(RTRM),B'00000010'                         04S1037
         BNO   @RF01037                                         04S1037
*                               DO;                             04S1038
*                                                               05S1039
*                                 /***********************************/
*                                 /*                                 */
*                                 /* PROCESS.MOREANAL.SENDING.SNALCBC*/
*                                 /* H: THIS SEGMENT DOES PLCB       */
*                                 /* ANALYSIS FOR SNA DEVICES MARKED */
*                                 /* SENDING                         */
*                                 /*                                 */
*                                 /***********************************/
*                                                               05S1039
*                                 IF LCBCHN=LCBINC/* IN CHAIN STATE
*                                      OR ...                        */
*                                     ×LCBCHN=LCBPURG/* ... PURGE
*                                      CHAIN STATE OR ...            */
*                                     ×LCBCHN=LCBWFMD THEN/* ...
*                                      WAITING FOR RESPONSE TO FM
*                                      DATA                          */
         TM    LCBCHN(RLCB),B'00010000'                         05S1039
         BNO   @GL00023                                         05S1039
         TM    LCBCHN(RLCB),B'11100000'                         05S1039
         BZ    @RT01039                                         05S1039
@GL00023 TM    LCBCHN(RLCB),B'00100000'                         05S1039
         BNO   @GL00022                                         05S1039
         TM    LCBCHN(RLCB),B'11010000'                         05S1039
         BZ    @RT01039                                         05S1039
@GL00022 TM    LCBCHN(RLCB),B'01000000'                         05S1039
         BNO   @RF01039                                         05S1039
         TM    LCBCHN(RLCB),B'10110000'                         05S1039
         BNZ   @RF01039                                         05S1039
@RT01039 DS    0H                                               05S1040
*                                   DO;                         05S1040
*                                    CALL FID1PERR;             05S1041
         BAL   @14,FID1PERR                                     05S1041
*                                    IF REG15^=0 THEN/* BUFFER  05S1042
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      05S1042
         BZ    @RF01042                                         05S1042
*                                     DO;                       05S1043
*                                                               06S1044
*                                      /******************************/
*                                      /*                            */
*                                      /* PROCESS.MOREANAL.SENDING.SN*/
*                                      /* ALCBCH.ICPC: THIS SEGMENT  */
*                                      /* FURTHER INITS FID1 PATH    */
*                                      /* ERROR RESPONSES FOR FM DATA*/
*                                      /*                            */
*                                      /******************************/
*                                                               06S1044
*                                      TRHRUCAT=TRHFMD;/* SET FM DATA
*                                      CATAGORY                      */
         LA    @14,10                                           06S1044
         ALR   @14,RTH                                          06S1044
         NI    TRHRUCAT(@14),B'10011111'                        06S1044
*                                      TTHEFI=OFF;/* RESET EXPIDITED
*                                      FLOW                          */
         NI    TTHEFI(RTH),B'11111110'                          06S1045
*                                      TRHFI=OFF;/* RESET FORMATTED  */
         NI    TRHFI(@14),B'11110111'                           06S1046
*                                     END;                      05S1047
*                                   END;                        05S1048
*                                 ELSE                          05S1049
*                                   IF LCBCHN=LCBWCAN/* WAITING FOR
*                                      CANCEL OR ...                 */
*                                       ×LCBCHN=LCBWBID THEN/* ...
*                                      WAITING FOR BID               */
         B     @RC01039                                         05S1049
@RF01039 TM    LCBCHN(RLCB),B'01010000'                         05S1049
         BNO   @GL00024                                         05S1049
         TM    LCBCHN(RLCB),B'10100000'                         05S1049
         BZ    @RT01049                                         05S1049
@GL00024 TM    LCBCHN(RLCB),B'01100000'                         05S1049
         BNO   @RF01049                                         05S1049
         TM    LCBCHN(RLCB),B'10010000'                         05S1049
         BNZ   @RF01049                                         05S1049
@RT01049 DS    0H                                               05S1050
*                                    DO;                        05S1050
*                                     CALL FID1PERR;            05S1051
         BAL   @14,FID1PERR                                     05S1051
*                                     IF REG15^=0 THEN/* BUFFER 05S1052
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      05S1052
         BZ    @RF01052                                         05S1052
*                                      DO;                      05S1053
*                                                               06S1054
*                                       /*****************************/
*                                       /*                           */
*                                       /* PROCESS.MOREANAL.SENDING.S*/
*                                       /* NALCBCH.CANCBID: THIS     */
*                                       /* SEGMENT FURTHER           */
*                                       /* INITIALIZES RESPONCES FOR */
*                                       /* CANCEL OR BID             */
*                                       /*                           */
*                                       /*****************************/
*                                                               06S1054
*                                       TRHRUCAT=TRHDFC;/* SET  06S1054
*                                      CATAGORY                      */
         NI    TRHRUCAT+10(RTH),B'11011111'                     06S1054
         OI    TRHRUCAT+10(RTH),B'01000000'                     06S1054
*                                       TTHEFI=OFF;/* RESET EXPIDITED
*                                      FLOW                          */
         NI    TTHEFI(RTH),B'11111110'                          06S1055
*                                       HEXCODE=CD1CANCL;/* CANCEL
*                                      HEX CODE                      */
         LA    @14,17                                           06S1056
         ALR   @14,RTH                                          06S1056
         MVI   HEXCODE(@14),X'83'                               06S1056
*                                       IF LCBCHN=LCBWBID THEN/*
*                                      WAITING FOR BID               */
         TM    LCBCHN(RLCB),B'01100000'                         05S1057
         BNO   @RF01057                                         05S1057
         TM    LCBCHN(RLCB),B'10010000'                         05S1057
         BNZ   @RF01057                                         05S1057
*                                        DO;                    05S1058
*                                                               06S1059
*                                         /***************************/
*                                         /*                         */
*                                         /* PROCESS.MOREANAL.SENDING*/
*                                         /* .SNALCBCH.BID: THIS     */
*                                         /* SEGMENT MODIFIES A ERROR*/
*                                         /* RESPONSE TO CANCEL TO BE*/
*                                         /* A ERROR RESPONSE TO BID */
*                                         /*                         */
*                                         /***************************/
*                                                               06S1059
*                                         HEXCODE=CD1BID;/* SET BID
*                                      HEX CODE                      */
         MVI   HEXCODE(@14),X'C8'                               06S1059
*                                        END;                   05S1060
*                                      END;                     05S1061
*                                    END;                       05S1062
*                               END;                            04S1063
*                             ELSE                              04S1064
*                               DO;                             04S1064
         B     @RC01037                                         04S1064
@RF01037 DS    0H                                               04S1065
*                                 CALL FID0PERR;                04S1065
         BAL   @14,FID0PERR                                     04S1065
*                                 IF REG15^=0 THEN/* IF BUFFER  04S1066
*                                      AVAILABLE                     */
         LTR   REG15,REG15                                      04S1066
         BZ    @RF01066                                         04S1066
*                                   DO;                         04S1067
*                                    BDUCMND=CD0WRT;/* SET WRITE     */
         LA    @14,14                                           04S1068
         ALR   @14,RTH                                          04S1068
         MVI   BDUCMND(@14),X'02'                               04S1068
*                                    BDUMODIF=CD0RT;/* READ     04S1069
*                                      TRANSMISSION                  */
         MVI   BDUMODIF(@14),X'03'                              04S1069
*                                   END;                        04S1070
*                               END;                            04S1071
@RF01066 DS    0H                                               04S1072
*                           RFY                                 04S1072
*                             RTH UNRSTD;                       04S1072
@RC01037 DS    0H                                               04S1072
@RT01035 DS    0H                                               04S1073
*                         END;                                  03S1073
*                   END;                                        03S1074
*                 ELSE                                          03S1075
*                   DO;                                         03S1075
         B     @RC00917                                         03S1075
@RF00917 DS    0H                                               03S1076
*                                                               04S1076
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS.MOREANAL.NOPLCB: THIS SEGMENT DOES  */
*                     /* TRM ANALYSIS FOR DEVICE WITHOUT A PLCB      */
*                     /* ASSIGNED                                    */
*                     /*                                             */
*                     /***********************************************/
*                                                               04S1076
*                     RFY                                       04S1076
*                       RTH RSTD;                               04S1076
*                     IF TRMSNA=OFF&/* IF NOT SNA AND ...            */
*                         (TRMINOUT=ON/* ... INVITE OUTSTANDING OR
*                                      ...                           */
*                         ×TRMRDOUT=ON/* ... READ OUTSTANDING OR ... */
*                         ×TRMPREP=ON/* ... TSOMM OUTSTANDING OR ... */
*                         ×TRMNLOUT=ON/* ... NULL WRITE OUTSTANDING
*                                      OR ...                        */
*                         ×(TRMCONT=ON&TRMSESSN=OFF)) THEN/* ...
*                                      CONTACT OUTSTANDING TO A DIAL
*                                      TERMINAL              @YM07784*/
         TM    TRMSNA(RTRM),B'00000010'                         04S1077
         BNZ   @RF01077                                         04S1077
         TM    TRMINOUT(RTRM),B'00000011'                       04S1077
         BNZ   @RT01077                                         04S1077
         TM    TRMPREP(RTRM),B'00000100'                        04S1077
         BO    @RT01077                                         04S1077
         TM    TRMNLOUT(RTRM),B'00000100'                       04S1077
         BO    @RT01077                                         04S1077
         TM    TRMCONT(RTRM),B'10000000'                        04S1077
         BNO   @RF01077                                         04S1077
         TM    TRMSESSN(RTRM),B'01000000'                       04S1077
         BNZ   @RF01077                                         04S1077
@RT01077 DS    0H                                               04S1078
*                       DO;                                     04S1078
*                         CALL FID0PERR;                        04S1079
         BAL   @14,FID0PERR                                     04S1079
*                         IF REG15^=0 THEN/* IF BUFFER AVAILABLE
*                                                            @YM07784*/
         LTR   REG15,REG15                                      04S1080
         BZ    @RF01080                                         04S1080
*                           CALL IRMNC;/* SET COMMAND & MODIFIER
*                                                            @YM08094*/
         BAL   @14,IRMNC                                        04S1081
*                       END;                                    04S1082
@RF01080 DS    0H                                               04S1083
*                     RFY                                       04S1083
*                       RTH UNRSTD;                             04S1083
@RF01077 DS    0H                                               04S1084
*                   END;                                        03S1084
*               END;                                            02S1085
@RC00917 DS    0H                                               02S1086
*           END;                                                02S1086
@RF00912 DS    0H                                               02S1087
*                                                               02S1087
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE THAT WAS   */
*   /* ALTERED BY THE MODULE PROCEDURE STATEMENT. THE CALL TO DSPDISP*/
*   /* IS USED TO EXIT TO THE DISPATCHER                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1087
*   RFY                                                         02S1087
*     RRETURN RSTD;                                             02S1087
@RT00855 DS    0H                                               02S1087
@RC00832 DS    0H                                               02S1087
@RC00808 DS    0H                                               02S1087
@RC00757 DS    0H                                               02S1088
*   RPARM=RTRM;                     /* RESTORE TRM ADDRESS           */
         LR    RPARM,RTRM                                       02S1088
*   GEN REFS(USERREGS) SETS(RRETURN);                           02S1089
*                                     /*
          LM     RCUR,RRETURN,USERREGS   RESTORE USER REGISTERS
*   RFY                                                         02S1090
*     RRETURN UNRSTD;                                           02S1090
*                                                               02S1091
*   /*****************************************************************/
*   /*                                                               */
*   /* GETBUF: THIS SEGMENT CONTAINS THE GETBUF INTERNAL PROCEDURE   */
*   /* WHICH ACQUIRES BUFFERS TO BE USED TO CONTAIN A RESPONSE.      */
*   /* AVAILABLE BUFFER UNITS ARE CHAINED ON CURNEWBF. IF NONE ARE   */
*   /* AVAILABLE, A BUFFER STEAL IS ATTEMPTED. IF NONE ARE AVAILABLE,*/
*   /* R1 IS RETURNED 0 ELSE R1 IS RETURNED WITH THE ADDRESS OF THE  */
*   /* ACQUIRED BUFFER                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1091
*GETBUF:                                                        02S1091
*   PROC OPTIONS(RETREG,SAVE(14));                              02S1091
@EL00001 DS    0H                                               02S1091
@EF00001 DS    0H                                               02S1091
@ER00001 BR    @14                                              02S1091
GETBUF   ST    @14,@SA00002                                     02S1091
*   RFY                                                         02S1092
*     REG00 RSTD;                                               02S1092
*   IF CURNEWBF^=0                  /* IF ANY BUFFERS ARE AVAILABLE
*                                      ...                           */
*       &CURNEWBF^=PRFINTIC THEN    /* ... ON FREE BUFFER QUEUE      */
         L     @14,CURNEWBF(,RCUR)                              02S1093
         LTR   @14,@14                                          02S1093
         BZ    @RF01093                                         02S1093
         C     @14,@CF01794                                     02S1093
         BE    @RF01093                                         02S1093
*     DO;                           /* DEQUEUE THE TOP ONE           */
*       RFY                                                     02S1095
*         IEDQPRF BASED(REG15);                                 02S1095
*       REG15=CURNEWBF;             /* ADDRESS OF BUFFER TO RETURN TO
*                                      CALLER                        */
         LR    REG15,@14                                        02S1096
*       CURNEWBF=PRFTIC;            /* CONTINUE CHAIN                */
         L     @14,PRFTIC(,REG15)                               02S1097
         ST    @14,CURNEWBF(,RCUR)                              02S1097
*       RFY                                                     02S1098
*         IEDQPRF BASED(RPRF);                                  02S1098
*     END;                                                      02S1099
*   ELSE                            /* NO BUFFERS AVAILABLE          */
*     DO;                           /* STEAL ONE                     */
         B     @RC01093                                         02S1100
@RF01093 DS    0H                                               02S1101
*       REG00=1;                    /* ONE BUFFER                    */
         LA    @14,1                                            02S1101
         LR    REG00,@14                                        02S1101
*       RPARM=1;                    /* ONE UNIT                      */
         LR    RPARM,@14                                        02S1102
*       CALL IEDQGA02;                                          02S1103
         L     @15,AVTSTEAL(,RAVT)                              02S1103
         BALR  @14,@15                                          02S1103
*     END;                                                      02S1104
*   IF REG15^=0 THEN                /* IF A BUFFER IS AVAILABLE ...
*                                                            @YM07815*/
@RC01093 LTR   REG15,REG15                                      02S1105
         BZ    @RF01105                                         02S1105
*     DO;                           /* ... INITIALIZE IT TO ZERO
*                                                            @YM07815*/
*       RFY                                                     02S1107
*         IEDQPRF BASED(REG15);                                 02S1107
*       CLEARBUF=''B;               /* CLEAR UNIT                    */
         LR    @14,REG15                                        02S1108
         AL    @14,@CF02779                                     02S1108
         XC    CLEARBUF(64,@14),CLEARBUF(@14)                   02S1108
*       RFY                                                     02S1109
*         IEDQPRF BASED(RPRF);                                  02S1109
*     END;                          /*                       @YM07815*/
*   RFY                                                         02S1111
*     REG00 UNRSTD;                                             02S1111
*   END GETBUF;                                                 02S1112
@EL00002 DS    0H                                               02S1112
@EF00002 DS    0H                                               02S1112
@ER00002 L     @14,@SA00002                                     02S1112
         BR    @14                                              02S1112
*                                                               02S1113
*   /*****************************************************************/
*   /*                                                               */
*   /* FID1PERR: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE WHICH  */
*   /* BUILDS A STANDARD FID1 PATH ERROR RESPONSE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1113
*FID1PERR:                                                      02S1113
*   PROC OPTIONS(RETREG,SAVE(14));                              02S1113
FID1PERR ST    @14,@SA00003                                     02S1113
*   RFY                                                         02S1114
*     RTH RSTD;                                                 02S1114
*   CALL GETBUF;                                                02S1115
         BAL   @14,GETBUF                                       02S1115
*   IF REG15^=0 THEN                /* GOT BUFFER                    */
         SLR   @14,@14                                          02S1116
         CR    REG15,@14                                        02S1116
         BE    @RF01116                                         02S1116
*     DO;                                                       02S1117
*       RPRF=REG15;                 /* BUFFER POINTER                */
         LR    RPRF,REG15                                       02S1118
*       PRFPIUO=PIUOVALU;           /* HEX 11                        */
         LA    @09,17                                           02S1119
         STC   @09,PRFPIUO(,RPRF)                               02S1119
*       RTH=PRFPIUO+ADDR(PRFPIUO);  /* TTH BASE                      */
         LA    RTH,PRFPIUO(,RPRF)                               02S1120
         ALR   @09,RTH                                          02S1120
         LR    RTH,@09                                          02S1120
*       TTHFTYPE=TTHFID1;           /* TH TYPE IS FID1               */
         NI    TTHFTYPE(RTH),B'00011111'                        02S1121
         OI    TTHFTYPE(RTH),B'00010000'                        02S1121
*       TTHBBIU=ON;                 /* SET ONLY SEGMENT INDICATORS
*                                                            @YM07307*/
*       TTHEBIU=ON;                 /*                       @YM07307*/
*       TTHEFI=ON;                  /* EXPIDITED FLOW ON             */
         OI    TTHBBIU(RTH),B'00001101'                         02S1124
*       RPARM=SAVTSCPT;             /* ASSUME SSCP SESSION   @YM07345*/
         L     @09,AVTSAVTP(,RAVT)                              02S1125
         LH    RPARM,SAVTSCPT(,@09)                             02S1125
         N     RPARM,@CF02773                                   02S1125
*       IF RSIB^=0 THEN             /* IF A SIB EXISTS THEN  @YM07345*/
         CR    RSIB,@14                                         02S1126
         BE    @RF01126                                         02S1126
*         RPARM=SIBINDEX;           /* GET TNT INDEX         @YM07288*/
         LH    RPARM,SIBINDEX(,RSIB)                            02S1127
         N     RPARM,@CF02773                                   02S1127
*       CALL IEDIAP04;              /* CONVERT TO NETWORK ADDRESS
*                                                            @YM07288*/
@RF01126 L     @09,AVTSAVTP(,RAVT)                              02S1128
         L     @15,SAVTTNTX(,@09)                               02S1128
         BALR  @14,@15                                          02S1128
*       TTHDAF=REG15;               /* SET DESTINATION       @YM07288*/
         STCM  REG15,3,TTHDAF(RTH)                              02S1129
*       RPARM=CURFAILT;             /* GET TNT INDEX         @YM07288*/
         LH    RPARM,CURFAILT(,RCUR)                            02S1130
*       CALL IEDIAP04;              /* CONVERT TNT INDEX TO NETWORK
*                                      ADDRESS               @YM07288*/
         L     @09,AVTSAVTP(,RAVT)                              02S1131
         L     @15,SAVTTNTX(,@09)                               02S1131
         BALR  @14,@15                                          02S1131
*       TTHOAF=REG15;               /* ORIGIN                @YM07288*/
         STCM  REG15,3,TTHOAF(RTH)                              02S1132
*       TTHDCF=LENGTH(IEDRH)+LENGTH(IEDSNSD)+1;/* ASSUME SMALLEST
*                                      DATA COUNT PLUS ONE DIGIT HEX
*                                      CODE                          */
         MVC   TTHDCF(2,RTH),@CH00044                           02S1133
*       TRHTYPE=ON;                 /* RESPONSE                      */
*       TRHFI=ON;                   /* FORMATTED                     */
*       TRHSDI=ON;                  /* SENSE DATA INCLUDED           */
         LA    @14,10                                           02S1136
         ALR   @14,RTH                                          02S1136
         OI    TRHTYPE(@14),B'10001100'                         02S1136
*       TRHDR1=ON;                  /* DEFINITE RESPONSE             */
         OI    TRHDR1(@14),B'10000000'                          02S1137
*       SNSMAJ=SNSPATH;             /* PATH ERROR                    */
         LA    @14,13                                           02S1138
         ALR   @14,RTH                                          02S1138
         MVI   SNSMAJ(@14),X'80'                                02S1138
*       IF CURTERM=ON THEN          /* FORCED TERMINATE REQ. @YM08991*/
         TM    CURTERM(RCUR),B'00000001'                        02S1139
         BNO   @RF01139                                         02S1139
*         SNSMIN=SNSLUINP;          /* YES, SET LU INOPERATV @YM08991*/
         MVI   SNSMIN(@14),X'03'                                02S1140
*       ELSE                        /* NO, SET ...           @YM08991*/
*         SNSMIN=SNSLNKF;           /* LINK FAILURE                  */
         B     @RC01139                                         02S1141
@RF01139 MVI   SNSMIN+13(RTH),X'02'                             02S1141
*       SNSUSER='0000'X;            /* NO USER DATA                  */
@RC01139 MVC   SNSUSER+13(2,RTH),@CB02653                       02S1142
*       IF SEARCH=ON THEN           /* IF SEARCH OF OP CTL FID1 02S1143
*                                      REQUEST QUEUES IS REQUESTED
*                                      THEN ...              @YM07310*/
         TM    SEARCH,B'01000000'                               02S1143
         BNO   @RF01143                                         02S1143
*         DO;                       /* ... BEGIN SEARCH      @YM07310*/
*           RFY                                                 02S1145
*             ROPCE RSTD;           /*                       @YM07310*/
*           TS(OPCCLNTS);           /* FID1 QUEUES AVAILABLE FOR
*                                      SEARCH                @YM07310*/
         L     @14,AVTOCGET(,RAVT)                              02S1146
         TS    OPCCLNTS(@14)                                    02S1146
*           BC(ZER,QSEARCH);        /* YES, CONTINUE TO SEARCH  02S1147
*                                                            @YM07310*/
         BC    8,QSEARCH                                        02S1147
*           CURNCURE=ON;            /* ELSE REQUEST POST TO OP CTL
*                                      UNTIL QUEUES BECOME AVAILABLE
*                                                            @YM07310*/
         OI    CURNCURE(RCUR),B'00010000'                       02S1148
*QSEARCH:                           /*                       @YM07310*/
*           IF CURNCURE=OFF THEN    /* IF QUEUES AVAILABLE THEN ...
*                                                            @YM07310*/
QSEARCH  TM    CURNCURE(RCUR),B'00010000'                       02S1149
         BNZ   @RF01149                                         02S1149
*             DO;                   /* ... CONTINUE TO SEARCH FID1
*                                      QUEUES                @YM07310*/
*               ROPCE=OPCFMDFC;     /* GET FIRST FID1 REQUEST QUEUE
*                                      TOP ELEMENT           @YM07310*/
         L     @14,AVTOCGET(,RAVT)                              02S1151
         L     ROPCE,OPCFMDFC(,@14)                             02S1151
*               DO WHILE ROPCE^=0&  /* SEARCH UNTIL LAST ELEMENT
*                                      OR...                 @YM07310*/
*                     SEARCH=ON;    /* REQUESTED ELEMENT IS FOUND
*                                                            @YM07310*/
         B     @DE01152                                         02S1152
@DL01152 DS    0H                                               02S1153
*                 IF CURFAILT=OCTRMTBL THEN/* IF A MATCH IS FOUND ...
*                                                            @YM07310*/
         LH    @14,OCTRMTBL(,ROPCE)                             02S1153
         N     @14,@CF02773                                     02S1153
         CH    @14,CURFAILT(,RCUR)                              02S1153
         BNE   @RF01153                                         02S1153
*                   DO;             /* SEARCH IS ENDED       @YM07310*/
*                     TTHSNF=OCSEQ; /* COPY OP CTL SEQUENCE ID  02S1155
*                                                            @YM07310*/
         MVC   TTHSNF(2,RTH),OCSEQ(ROPCE)                       02S1155
*                     SEARCH=OFF;   /* INDICATE SEARCH ENDED @YM07310*/
         NI    SEARCH,B'10111111'                               02S1156
*                   END;            /*                       @YM07310*/
*                 ELSE              /* ELSE NO MATCH WAS FOUND SO ...
*                                                            @YM07696*/
*                   ROPCE=OCLINK;   /* ... UPDATE TO NEXT OPCE  02S1158
*                                                            @YM07696*/
         B     @RC01153                                         02S1158
@RF01153 L     ROPCE,OCLINK(,ROPCE)                             02S1158
*               END;                /*                       @YM07310*/
@RC01153 DS    0H                                               02S1159
@DE01152 LTR   ROPCE,ROPCE                                      02S1159
         BZ    @DC01152                                         02S1159
         TM    SEARCH,B'01000000'                               02S1159
         BO    @DL01152                                         02S1159
@DC01152 DS    0H                                               02S1160
*               ROPCE=OPCSCNC;      /* GET SECOND FID1 REQUEST QUEUE
*                                      TOP ELEMENT           @YM07310*/
         L     @14,AVTOCGET(,RAVT)                              02S1160
         L     ROPCE,OPCSCNC(,@14)                              02S1160
*               DO WHILE ROPCE^=0&  /* SEARCH UNTIL LAST ELEMENT
*                                      OR...                 @YM07310*/
*                     SEARCH=ON;    /* REQUESTED ELEMENT IS FOUND
*                                                            @YM07310*/
         B     @DE01161                                         02S1161
@DL01161 DS    0H                                               02S1162
*                 IF CURFAILT=OCTRMTBL THEN/* IF A MATCH IS FOUND ...
*                                                            @YM07310*/
         LH    @14,OCTRMTBL(,ROPCE)                             02S1162
         N     @14,@CF02773                                     02S1162
         CH    @14,CURFAILT(,RCUR)                              02S1162
         BNE   @RF01162                                         02S1162
*                   DO;             /* SEARCH IS ENDED       @YM07310*/
*                     TTHSNF=OCSEQ; /* COPY OP CTL SEQUENCE ID  02S1164
*                                                            @YM07310*/
         MVC   TTHSNF(2,RTH),OCSEQ(ROPCE)                       02S1164
*                     SEARCH=OFF;   /* INDICATE SEARCH ENDED @YM07310*/
         NI    SEARCH,B'10111111'                               02S1165
*                   END;            /*                       @YM07310*/
*                 ELSE              /* ELSE NO MATCH WAS FOUND SO ...
*                                                            @YM07696*/
*                   ROPCE=OCLINK;   /* ... UPDATE TO NEXT OPCE  02S1167
*                                                            @YM07696*/
         B     @RC01162                                         02S1167
@RF01162 L     ROPCE,OCLINK(,ROPCE)                             02S1167
*               END;                /*                       @YM07310*/
@RC01162 DS    0H                                               02S1168
@DE01161 LTR   ROPCE,ROPCE                                      02S1168
         BZ    @DC01161                                         02S1168
         TM    SEARCH,B'01000000'                               02S1168
         BO    @DL01161                                         02S1168
@DC01161 DS    0H                                               02S1169
*               OPCCLNTS=0;         /* MAKE FID1 QUEUES AVALIABLE
*                                                            @YM07310*/
         L     @14,AVTOCGET(,RAVT)                              02S1169
         MVI   OPCCLNTS(@14),X'00'                              02S1169
*             END;                  /*                       @YM07310*/
*         END;                      /*                       @YM07310*/
@RF01149 DS    0H                                               02S1172
*       IF SEARCH=ON                /* IF NO MATCH FOUND ... @YM07310*/
*           ×CURNCURE=ON THEN       /* OR QUEUES NOT AVAILABLE  02S1172
*                                                            @YM07310*/
@RF01143 TM    SEARCH,B'01000000'                               02S1172
         BO    @RT01172                                         02S1172
         TM    CURNCURE(RCUR),B'00010000'                       02S1172
         BNO   @RF01172                                         02S1172
@RT01172 DS    0H                                               02S1173
*         DO;                       /*                       @YM07310*/
*           SEARCH=OFF;             /* INDICATE SEARCH ENDED @YM07310*/
         NI    SEARCH,B'10111111'                               02S1174
*           PRFTIC=CURNEWBF;        /* ENQUEUE THIS UNIT ON THE FREE
*                                      BFR QUE               @YM07310*/
         L     @14,CURNEWBF(,RCUR)                              02S1175
         ST    @14,PRFTIC(,RPRF)                                02S1175
*           CURNEWBF=RPRF;          /*                       @YM07310*/
         ST    RPRF,CURNEWBF(,RCUR)                             02S1176
*           RPRF=0;                 /*                       @YM07310*/
         SLR   RPRF,RPRF                                        02S1177
*         END;                      /*                       @YM07310*/
*       ELSE                        /* ELSE ENQUEUE ON THE PIU QUEUE
*                                                            @YM07310*/
*         DO;                       /*                       @YM07310*/
         B     @RC01172                                         02S1179
@RF01172 DS    0H                                               02S1180
*           PRFQCBA=SAVTIPCQ;       /* QCB                           */
         L     @14,AVTSAVTP(,RAVT)                              02S1180
         MVC   PRFQCBA(3,RPRF),SAVTIPCQ+1(@14)                  02S1180
*           PRFPRI=PRIFLDH;         /* PRIORITY                      */
         MVI   PRFPRI(RPRF),X'E4'                               02S1181
*           PRFTIC=CURPIUPC;        /* ADD TO ...            @YM07306*/
         L     @14,CURPIUPC(,RCUR)                              02S1182
         ST    @14,PRFTIC(,RPRF)                                02S1182
*           CURPIUPC=RPRF;          /* ... PIU QUEUE         @YM07306*/
         ST    RPRF,CURPIUPC(,RCUR)                             02S1183
*         END;                      /*                       @YM07310*/
*       RFY                                                     02S1185
*         ROPCE UNRSTD;             /*                       @YM07310*/
@RC01172 DS    0H                                               02S1186
*       REG15=RPRF;                 /* RESTORE RETURN CODE   @YM07306*/
         LR    REG15,RPRF                                       02S1186
*     END;                                                      02S1187
*   RFY                                                         02S1188
*     RTH UNRSTD;                                               02S1188
*   END FID1PERR;                                               02S1189
@EL00003 DS    0H                                               02S1189
@EF00003 DS    0H                                               02S1189
@ER00003 L     @14,@SA00003                                     02S1189
         BR    @14                                              02S1189
*                                                               02S1190
*   /*****************************************************************/
*   /*                                                               */
*   /* FID0PERR: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE WHICH  */
*   /* BUILDS A STANDARD FID0 NEGATIVE RESPONSE                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1190
*FID0PERR:                                                      02S1190
*   PROC OPTIONS(RETREG,SAVE(14));                              02S1190
FID0PERR ST    @14,@SA00004                                     02S1190
*   RFY                                                         02S1191
*     RTH RSTD;                                                 02S1191
*   CALL GETBUF;                                                02S1192
         BAL   @14,GETBUF                                       02S1192
*   IF REG15^=0 THEN                /* GOT BUFFER                    */
         LTR   REG15,REG15                                      02S1193
         BZ    @RF01193                                         02S1193
*     DO;                                                       02S1194
*       RPRF=REG15;                 /* BUFFER BASE                   */
         LR    RPRF,REG15                                       02S1195
*       PRFPIUO=PIUOVALU;           /* HEX 11                        */
         LA    @14,17                                           02S1196
         STC   @14,PRFPIUO(,RPRF)                               02S1196
*       RTH=PRFPIUO+ADDR(PRFPIUO);  /* TTH BASE                      */
         LA    RTH,PRFPIUO(,RPRF)                               02S1197
         ALR   @14,RTH                                          02S1197
         LR    RTH,@14                                          02S1197
*       TTHFTYPE=TTHFID0;           /* TH TYPE IS FID0               */
         NI    TTHFTYPE(RTH),B'00001111'                        02S1198
*       TTHBBIU=ON;                 /* SET ONLY SEGMENT INDICATORS
*                                                            @YM07307*/
*       TTHEBIU=ON;                 /*                       @YM07307*/
         OI    TTHBBIU(RTH),B'00001100'                         02S1200
*       RPARM=SAVTSCPT;             /* GET TNT INDEX         @YM07288*/
         L     @14,AVTSAVTP(,RAVT)                              02S1201
         LH    RPARM,SAVTSCPT(,@14)                             02S1201
         N     RPARM,@CF02773                                   02S1201
*       CALL IEDIAP04;              /* CONVERT TO NETWORK ADDRESS
*                                                            @YM07288*/
         L     @15,SAVTTNTX(,@14)                               02S1202
         BALR  @14,@15                                          02S1202
*       TTHDAF=REG15;               /* SSCP IS DESTINATION   @YM07288*/
         STCM  REG15,3,TTHDAF(RTH)                              02S1203
*       RPARM=CURFAILT;             /* GET TNT INDEX         @YM07288*/
         LH    RPARM,CURFAILT(,RCUR)                            02S1204
*       CALL IEDIAP04;              /* CONVERT TO NETWORK ADDRESS
*                                                            @YM07288*/
         L     @09,AVTSAVTP(,RAVT)                              02S1205
         L     @15,SAVTTNTX(,@09)                               02S1205
         BALR  @14,@15                                          02S1205
*       TTHOAF=REG15;               /* ORIGIN                @YM07288*/
         STCM  REG15,3,TTHOAF(RTH)                              02S1206
*       TTHDCF=LENGTH(IEDRH)+1+LENGTH(IEDBDU);/* FID0 DATA COUNT
*                                      FIELD                         */
         LA    @14,10                                           02S1207
         STCM  @14,3,TTHDCF(RTH)                                02S1207
*       IEDRH=TRHFID0;              /* INIT FID0 RH                  */
         ALR   @14,RTH                                          02S1208
         MVC   IEDRH(3,@14),@CB02462                            02S1208
*       TRHTYPE=ON;                 /* INDICATE RESPONSE     @YM07983*/
         OI    TRHTYPE(@14),B'10000000'                         02S1209
*       BDUFNFLG=0;                 /* ALL FLAGS OFF EXCEPT          */
         LA    @14,14                                           02S1210
         ALR   @14,RTH                                          02S1210
         MVI   BDUFNFLG(@14),X'00'                              02S1210
*       BDUSTHDR=ON;                /* START OF HEADER               */
*       BDUFRSTB=ON;                /* FIRST BLOCK                   */
*       BDUNEGAK=ON;                /* NEGATIVE ACK                  */
         OI    BDUSTHDR(@14),B'10010010'                        02S1213
*       BDUERROR=RSPERR;            /* ERROR TYPE                    */
         OI    BDUERROR(@14),B'10000000'                        02S1214
*       BDUPHASE=RSP40;                                         02S1215
         NI    BDUPHASE(@14),B'11011111'                        02S1215
         OI    BDUPHASE(@14),B'01000000'                        02S1215
*       BDURESP=RSPE02;                                         02S1216
         NI    BDURESP(@14),B'11100010'                         02S1216
         OI    BDURESP(@14),B'00000010'                         02S1216
*       PRFQCBA=SAVTIPCQ;           /* QCB                           */
         L     @14,AVTSAVTP(,RAVT)                              02S1217
         MVC   PRFQCBA(3,RPRF),SAVTIPCQ+1(@14)                  02S1217
*       PRFPRI=PRIFLDH;             /* PRIORITY                      */
         MVI   PRFPRI(RPRF),X'E4'                               02S1218
*       PRFTIC=CURPIUPC;            /* ADD TO ...            @YM07306*/
         L     @14,CURPIUPC(,RCUR)                              02S1219
         ST    @14,PRFTIC(,RPRF)                                02S1219
*       CURPIUPC=RPRF;              /* ... PIU QUEUE         @YM07306*/
         ST    RPRF,CURPIUPC(,RCUR)                             02S1220
*       REG15=RPRF;                 /* RESTORE RETURN CODE   @YM07306*/
         LR    REG15,RPRF                                       02S1221
*     END;                                                      02S1222
*   RFY                                                         02S1223
*     RTH UNRSTD;                                               02S1223
*   END FID0PERR;                                               02S1224
@EL00004 DS    0H                                               02S1224
@EF00004 DS    0H                                               02S1224
@ER00004 L     @14,@SA00004                                     02S1224
         BR    @14                                              02S1224
*                                                               02S1225
*   /*****************************************************************/
*   /*                                                               */
*   /* IRMNC: THIS SEGMENT ADDS THE BDU COMMAND AND MODIFIER FOR     */
*   /* INVITE, READ, TSO MONITOR MODE, NULL WRITE, OR CONTACT        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1225
*IRMNC:                                                         02S1225
*   PROC OPTIONS(RETREG,SAVE(14));  /*                       @YM08094*/
IRMNC    ST    @14,12(,@13)                                     02S1225
*   RFY                                                         02S1226
*     RTH RSTD;                     /*                       @YM08094*/
*   IF TRMINOUT=ON THEN             /* INVITE OUTSTANDING            */
         TM    TRMINOUT(RTRM),B'00000001'                       02S1227
         BNO   @RF01227                                         02S1227
*     DO;                                                       02S1228
*       BDUCMND=CD0INV;             /* SET INVITE                    */
         LA    @14,14                                           02S1229
         ALR   @14,RTH                                          02S1229
         MVI   BDUCMND(@14),X'05'                               02S1229
*       BDUMODIF=CD0IT;             /* INVITE TRANSMISSION           */
         MVI   BDUMODIF(@14),X'03'                              02S1230
*     END;                                                      02S1231
*   ELSE                                                        02S1232
*     IF TRMRDOUT=ON THEN           /* READ OUTSTANDING              */
         B     @RC01227                                         02S1232
@RF01227 TM    TRMRDOUT(RTRM),B'00000010'                       02S1232
         BNO   @RF01232                                         02S1232
*       DO;                                                     02S1233
*         BDUCMND=CD0READ;          /* SET READ                      */
         LA    @14,14                                           02S1234
         ALR   @14,RTH                                          02S1234
         MVI   BDUCMND(@14),X'01'                               02S1234
*         BDUMODIF=CD0RT;           /* READ TRANSMISSION             */
         MVI   BDUMODIF(@14),X'03'                              02S1235
*       END;                                                    02S1236
*     ELSE                                                      02S1237
*       IF TRMPREP=ON THEN          /* TSOMM OUTSTANDING             */
         B     @RC01232                                         02S1237
@RF01232 TM    TRMPREP(RTRM),B'00000100'                        02S1237
         BNO   @RF01237                                         02S1237
*         DO;                                                   02S1238
*           BDUCMND=CD0UNSIP;       /* SET UNSOLICITED INPUT COMMAND
*                                                            @YM08002*/
         LA    @14,14                                           02S1239
         ALR   @14,RTH                                          02S1239
         MVI   BDUCMND(@14),X'77'                               02S1239
*           BDUMODIF=0;             /* NO MODIFIER           @YM08002*/
         MVI   BDUMODIF(@14),X'00'                              02S1240
*           BDUSYRSP=RSPHNGUP;      /* SYSTEM RESPONSE IS HANGUP
*                                                            @YM08002*/
         MVI   BDUSYRSP(@14),X'AC'                              02S1241
*           BDUPHASE=RSP60;         /* PHASE 3 RESPONSE      @YM08002*/
         OI    BDUPHASE(@14),B'01100000'                        02S1242
*         END;                                                  02S1243
*       ELSE                                                    02S1244
*         IF TRMNLOUT=ON THEN       /* NULL WRITE OUTSTANDING        */
         B     @RC01237                                         02S1244
@RF01237 TM    TRMNLOUT(RTRM),B'00000100'                       02S1244
         BNO   @RF01244                                         02S1244
*           IF LCBRESP=ON THEN      /* RESPONSE OWED                 */
         TM    LCBRESP(RLCB),B'00000001'                        02S1245
         BNO   @RF01245                                         02S1245
*             DO;                                               02S1246
*               BDUCMND=CD0WRT;     /* SET WRITE                     */
         LA    @14,14                                           02S1247
         ALR   @14,RTH                                          02S1247
         MVI   BDUCMND(@14),X'02'                               02S1247
*               BDUMODIF=CD0WT;     /* WRITE WITH EOT                */
         MVI   BDUMODIF(@14),X'02'                              02S1248
*             END;                                              02S1249
*           ELSE                                                02S1250
*             IF TRMSESSN=ON THEN   /* IF IN SESSION                 */
         B     @RC01245                                         02S1250
@RF01245 TM    TRMSESSN(RTRM),B'01000000'                       02S1250
         BNO   @RF01250                                         02S1250
*               DO;                                             02S1251
*                 BDUCMND=CD0WRT;   /* SET WRITE                     */
         LA    @14,14                                           02S1252
         ALR   @14,RTH                                          02S1252
         MVI   BDUCMND(@14),X'02'                               02S1252
*                 BDUMODIF=CD0W;    /* WRITE NORMAL                  */
         MVI   BDUMODIF(@14),X'00'                              02S1253
*               END;                                            02S1254
*             ELSE                                              02S1255
*               DO;                                             02S1255
         B     @RC01250                                         02S1255
@RF01250 DS    0H                                               02S1256
*                 BDUCMND=CD0CONT;  /* SET CONTACT                   */
         LA    @14,14                                           02S1256
         ALR   @14,RTH                                          02S1256
         MVI   BDUCMND(@14),X'06'                               02S1256
*                 BDUMODIF=CD0C;    /* CONTACT NORMAL                */
         MVI   BDUMODIF(@14),X'00'                              02S1257
*                 BDURESP=RSPE09;   /* SET SESSION NOT STARTED  02S1258
*                                      RESPONSE              @YM09089*/
         NI    BDURESP(@14),B'11101001'                         02S1258
         OI    BDURESP(@14),B'00001001'                         02S1258
*               END;                                            02S1259
*         ELSE                      /* MUST BE CONTACT OUTSTANDING   */
*           DO;                                                 02S1260
         B     @RC01244                                         02S1260
@RF01244 DS    0H                                               02S1261
*             BDUCMND=CD0CONT;      /* SET CONTACT                   */
         LA    @14,14                                           02S1261
         ALR   @14,RTH                                          02S1261
         MVI   BDUCMND(@14),X'06'                               02S1261
*             BDUMODIF=CD0C;        /* CONTACT NORMAL                */
         MVI   BDUMODIF(@14),X'00'                              02S1262
*             BDURESP=RSPE09;       /* SET SESSION NOT STARTED  02S1263
*                                      RESPONSE              @YM09089*/
         NI    BDURESP(@14),B'11101001'                         02S1263
         OI    BDURESP(@14),B'00001001'                         02S1263
*           END;                                                02S1264
*   RFY                                                         02S1265
*     RTH UNRSTD;                   /*                       @YM08094*/
*   END IRMNC;                      /*                       @YM08094*/
@EL00005 DS    0H                                               02S1266
@EF00005 DS    0H                                               02S1266
@ER00005 L     @14,12(,@13)                                     02S1266
         BR    @14                                              02S1266
*   END IEDNCU2                                                 01S1267
*                                                               01S1267
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TCURD   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TRSPD   )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TSIBD   )                                       */
*/*%INCLUDE SYSLIB  (TSNSD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TXCTDD  )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (SNAPU   )                                       */
*/*%INCLUDE SYSUT5  (ACTDACPU)                                       */
*/*%INCLUDE SYSUT5  (CCD     )                                       */
*/*%INCLUDE SYSUT5  (LINK    )                                       */
*/*%INCLUDE SYSUT5  (ACTDACLI)                                       */
*/*%INCLUDE SYSUT5  (SNAPUNCP)                                       */
*/*%INCLUDE SYSUT5  (DAS     )                                       */
*/*%INCLUDE SYSUT5  (SNALU   )                                       */
*/*%INCLUDE SYSUT5  (SDTCLR  )                                       */
*/*%INCLUDE SYSUT5  (BINDUB  )                                       */
*/*%INCLUDE SYSUT5  (ACTDACLU)                                       */
*/*%INCLUDE SYSUT5  (MOREANAL)                                       */
*/*%INCLUDE SYSUT5  (MSGGEN  )                                       */
*/*%INCLUDE SYSUT5  (RECEIVE )                                       */
*/*%INCLUDE SYSUT5  (COPYSEG )                                       */
*/*%INCLUDE SYSUT5  (FID1EXR )                                       */
*/*%INCLUDE SYSUT5  (SESMI   )                                       */
*/*%INCLUDE SYSUT5  (NONSNA  )                                       */
*/*%INCLUDE SYSUT5  (LOCK    )                                       */
*/*%INCLUDE SYSUT5  (SENDING )                                       */
*/*%INCLUDE SYSUT5  (SNALCBCH)                                       */
*/*%INCLUDE SYSUT5  (ICPC    )                                       */
*/*%INCLUDE SYSUT5  (CANCBID )                                       */
*/*%INCLUDE SYSUT5  (BID     )                                       */
*/*%INCLUDE SYSUT5  (NOPLCB  )                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (GETBUF  )                                       */
*/*%INCLUDE SYSUT5  (FID1PERR)                                       */
*/*%INCLUDE SYSUT5  (FID0PERR)                                       */
*/*%INCLUDE SYSUT5  (IRMNC   )                                       */
*                                                               01S1267
*       ;                                                       01S1267
@DATA    DS    0H
         DS    0F
@SA00003 DS    1F
@SA00002 DS    1F
@SA00004 DS    1F
         DS    0F
@CF00044 DC    F'8'
@CH00044 EQU   @CF00044+2
@CF02779 DC    F'-8'
@CF01794 DC    XL4'08000002'
@CF02773 DC    XL4'0000FFFF'
         DS    0D
@CB00856 DC    X'01020A'
@CB00858 DC    X'01020B'
@CB00860 DC    X'010201'
@CB00862 DC    X'010280'
@CB00864 DC    X'010202'
@CB02462 DC    X'0B8000'
@CB02653 DC    X'0000'
@NM00217 DC    X'00'
         ORG   @NM00217
MOREAN   DS    BL1
SEARCH   EQU   @NM00217+0
@NM00218 EQU   @NM00217+0
         ORG   @NM00217+1
         DS    CL3
USERREGS DS    13A
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RCUR     EQU   @02
RDISP    EQU   @11
LCBXPTR  EQU   @05
ROPCE    EQU   @03
RTRM     EQU   @08
RAVT     EQU   @13
RLCB     EQU   @04
RPRF     EQU   @06
RTH      EQU   @10
RSIB     EQU   @05
REG00    EQU   @00
RPARM    EQU   @01
RBASE    EQU   @12
RRETURN  EQU   @14
REG15    EQU   @15
RBRANCH  EQU   @15
REG03    EQU   @03
REG05    EQU   @05
REG09    EQU   @09
REG10    EQU   @10
RQCB     EQU   @07
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
@NM00003 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00003
AVTOCGET EQU   IEDQAVTD+320
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTOSECB EQU   IEDQAVTD+420
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTMSGS  EQU   IEDQAVTD+657
AVTBFRTB EQU   IEDQAVTD+720
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTBIT1  EQU   IEDQAVTD+978
AVTBIT2  EQU   IEDQAVTD+979
AVTBIT3  EQU   IEDQAVTD+980
AVTSTEAL EQU   IEDQAVTD+988
AVTBIT4  EQU   IEDQAVTD+1064
@NM00085 EQU   IEDQAVTD+1160
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTIPCQ EQU   IEDNSVTD+144
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTTNTX EQU   IEDNSVTD+252
SAVTLCBS EQU   IEDNSVTD+260
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUCMND  EQU   IEDBDU
BDUMODIF EQU   IEDBDU+1
BDUFNFLG EQU   IEDBDU+2
BDUSTHDR EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUERROR EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDURESP  EQU   BDUSYRSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDCUREQ EQU   0
CURTOTIN EQU   IEDCUREQ+12
CURFLG2  EQU   IEDCUREQ+14
CURTERM  EQU   CURFLG2
CURFLG3  EQU   IEDCUREQ+15
CURNCURE EQU   CURFLG3
CURFAILT EQU   IEDCUREQ+18
CURNEWBF EQU   IEDCUREQ+24
CURPIUPC EQU   IEDCUREQ+32
IEDQDISP EQU   0
DSPPOSTR EQU   28
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBQCBA  EQU   LCBRCB+1
LCBPRI   EQU   LCBRCB+4
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBBDFLG EQU   LCBLKMDE
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBRCLLN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBSTAT2 EQU   LCBSTATE+1
LCBMSGNN EQU   LCBSTAT2
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBRESP  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBQB EQU   LCBERB+1
LCBERBPY EQU   IEDQLCB+80
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBTTCIN EQU   IEDQLCB+90
LCBMSGFM EQU   IEDQLCB+92
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBCHN   EQU   LCBSTAT6
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
IEDQLPTR EQU   0
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDQOPCE EQU   0
OCLINK   EQU   IEDQOPCE
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
@NM00150 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00150
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCSEQ    EQU   OCTRUNIT+2
OCPARM   EQU   IEDQOPCE+28
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQOPCD EQU   0
OPCAQCTL EQU   IEDQOPCD+180
OPCLDNME EQU   IEDQOPCD+212
OPCSCNC  EQU   IEDQOPCD+264
OPCFMDFC EQU   IEDQOPCD+268
OPCCLNTS EQU   IEDQOPCD+288
OPCSPEC  EQU   IEDQOPCD+300
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
ROPCAVT  EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
@NM00181 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00181
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDQPPTR EQU   0
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00189 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00189+1
QCBTSOF1 EQU   @NM00189+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
IEDQQPTR EQU   0
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBN EQU   QCBSTAT1
QCBPLCBA EQU   IEDNQCB+5
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBDESTQ EQU   IEDQSCB+1
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBBFMM  EQU   SCBQTYPE
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDQSPTR EQU   0
IEDSIBD  EQU   0
SIBRUSEG EQU   IEDSIBD
SIBINDEX EQU   IEDSIBD+8
SIBSESSN EQU   IEDSIBD+10
SIBINBIU EQU   SIBSESSN
SIBSSTAT EQU   SIBSESSN
SIBDSTAT EQU   SIBSESSN
SIBPACIN EQU   IEDSIBD+11
SIBSEQN  EQU   IEDSIBD+12
SIBSTAT1 EQU   IEDSIBD+16
SIBSTAT2 EQU   IEDSIBD+17
SIBBIND  EQU   IEDSIBD+20
SIBBIND1 EQU   SIBBIND
SIBBIND2 EQU   SIBBIND+1
SIBBIND3 EQU   SIBBIND+2
SIBSTAT0 EQU   IEDSIBD+23
IEDSNSD  EQU   0
SNSSYSTM EQU   IEDSNSD
SNSMAJ   EQU   SNSSYSTM
SNSMIN   EQU   SNSSYSTM+1
SNSUSER  EQU   IEDSNSD+2
SNSPTR   EQU   0
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHTYPE  EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHEC    EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHDR1   EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHBYTE2 EQU   IEDRH+2
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSNA   EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
IEDQTRM  EQU   IEDTRM+14
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHFTYPE EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHEFI   EQU   TTHBYTE0
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
IEDXCTDD EQU   0
XCTDCMD  EQU   IEDXCTDD
XCTDCODE EQU   XCTDCMD
XCTDADDR EQU   XCTDCMD+3
XCTDSTAT EQU   XCTDCMD+5
XCTDPTR  EQU   0
SQCBADR  EQU   0
CLEARBUF EQU   0
NEWTHRH  EQU   0
OLDTHRH  EQU   0
IEDQGA02 EQU   0
IEDIAP04 EQU   0
IEDIAP06 EQU   0
HEXCDALL EQU   0
HEXCODE  EQU   HEXCDALL
NETADDR  EQU   HEXCDALL+1
DCBPTR   EQU   0
DSPBYPAS EQU   20
DSPCHAIN EQU   12
DSPDISP  EQU   4
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPOST  EQU   24
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPUNAVR EQU   44
DSPWAIT  EQU   16
IEDQDPTR EQU   0
IEDQTPTR EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00134 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBQEBPL EQU   LCBQNX+4
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
TRMPRE1  EQU   TRMBYTE4
TRMCONT  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNLOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMINOUT EQU   TRMPRE
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMPCONT EQU   TRMPU
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
TRMLSTAT EQU   TRMLINK
BDUTEXT  EQU   BDUEND
OCCIB    EQU   OCREQVAL
PRFSHDR  EQU   IEDQPRF+42
SCBRGSAV EQU   SCBEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00214 EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
@NM00213 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00212 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
OCICINAC EQU   OCICSW
@NM00156 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00155 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00141 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00140 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00139 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00138 EQU   LCBQNX+12
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBSTSAV EQU   LCBQNX+1
@NM00137 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00136 EQU   @NM00134+4
LCBNCPPT EQU   @NM00134+1
@NM00135 EQU   @NM00134
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00133 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00132 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00131 EQU   LCBCSWU1
@NM00130 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00129 EQU   LCBRSPIN
HEXCODE3 EQU   NETADDR+1
HEXCODE2 EQU   NETADDR
XCTDREQ  EQU   XCTDCODE+2
XCTDCONF EQU   XCTDCODE+1
XCTDNETS EQU   XCTDCODE
TTHTAG2  EQU   TTHTAG+1
@NM00216 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHBYTE1 EQU   IEDTH+1
@NM00215 EQU   TTHBYTE0
TRMOPT   EQU   IEDTRM+34
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00211 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00210 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00209 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
@NM00208 EQU   TRHBYTE2
@NM00207 EQU   TRHBYTE2
@NM00206 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00205 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00204 EQU   TRHBYTE1
@NM00203 EQU   TRHBYTE1
@NM00202 EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00201 EQU   TRHBYTE1
@NM00200 EQU   TRHBYTE0
SNSUSR2  EQU   SNSUSER+1
SNSUSR1  EQU   SNSUSER
SIBLUTYP EQU   SIBSTAT0
SIBCD    EQU   SIBSTAT0
@NM00199 EQU   SIBBIND3
SIBCRES  EQU   SIBBIND3
SIBSPKR  EQU   SIBBIND3
SIBRECOV EQU   SIBBIND3
SIBFMODE EQU   SIBBIND3
SIBALT   EQU   SIBBIND2
SIBBTERM EQU   SIBBIND2
SIBBRACK EQU   SIBBIND2
SIBFMUSE EQU   SIBBIND2
SIBSEBI  EQU   SIBBIND2
SIBSCMP  EQU   SIBBIND2
SIBSEXC  EQU   SIBBIND2
SIBSDEF  EQU   SIBBIND2
SIBSRQM  EQU   SIBBIND1
SIBSCHNG EQU   SIBBIND1
SIBPEBI  EQU   SIBBIND1
SIBPCMP  EQU   SIBBIND1
SIBPEXC  EQU   SIBBIND1
SIBPDEF  EQU   SIBBIND1
SIBPRQM  EQU   SIBBIND1
SIBPCHN  EQU   SIBBIND1
SIBFMPRO EQU   IEDSIBD+19
SIBTSPRO EQU   IEDSIBD+18
@NM00198 EQU   SIBSTAT2
SIBDACLU EQU   SIBSTAT2
SIBRDSCN EQU   SIBSTAT2
SIBTERM  EQU   SIBSTAT2
SIBUSS   EQU   SIBSTAT2
SIBBSTAT EQU   SIBSTAT1
SIBRTRP  EQU   SIBSTAT1
SIBFTERM EQU   SIBSTAT1
SIBRQEND EQU   SIBSTAT1
SIBRQSHT EQU   SIBSTAT1
SIBSEQO  EQU   SIBSEQN+2
SIBSEQI  EQU   SIBSEQN
SIBNCNT  EQU   SIBPACIN
SIBMCNT  EQU   SIBPACIN
SIBSHUTC EQU   SIBSESSN
SIBLGOFF EQU   SIBSESSN
SIBCHAIN EQU   IEDSIBD+4
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBSCHDR EQU   SCBCLSEG
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00197 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00196 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00195 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00194 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
QCBTTCIN EQU   QCBPLCBA+1
@NM00193 EQU   QCBPLCBA
@NM00192 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00191 EQU   QCBFHDTZ
@NM00190 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00189
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00188 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00187 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBELCHN EQU   IEDQQCB+1
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00186 EQU   IEDPF2+1
@NM00185 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00184 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00183 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00182 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00181+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFTI0   EQU   PRFTIC+1
@NM00180 EQU   PRFTICC
@NM00179 EQU   PRFTICC
@NM00178 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00177 EQU   PRFTICC
@NM00176 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00175 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
OPCBOTTM EQU   IEDQOPCD+1184
@NM00174 EQU   IEDQOPCD+1100
@NM00173 EQU   IEDQOPCD+948
@NM00172 EQU   IEDQOPCD+940
@NM00171 EQU   IEDQOPCD+380
@NM00170 EQU   OPCPWCOB+9
@NM00169 EQU   OPCPWCOB+8
@NM00168 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00167 EQU   OPCSPEC
@NM00166 EQU   OPCSPEC
@NM00165 EQU   OPCSPEC
@NM00164 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCGETBF EQU   IEDQOPCD+276
OPCNEXT  EQU   IEDQOPCD+272
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00163 EQU   OPCLDNME+5
OPCMODID EQU   OPCLDNME+3
@NM00162 EQU   OPCLDNME
OPCXCTL  EQU   IEDQOPCD+204
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCSAVE  EQU   IEDQOPCD+56
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00161 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCCOPCE EQU   IEDQOPCD+12
OPCAVTPT EQU   IEDQOPCD+8
OPCDOUBL EQU   IEDQOPCD
@NM00160 EQU   OCLDNME+4
@NM00159 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00158 EQU   OCREQFLG
@NM00157 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00154 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCCKDAT1 EQU   OCRSTGTM
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCWTG    EQU   IEDQOPCE+30
OCRESNUM EQU   OCPARM
@NM00153 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00152 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00151 EQU   @NM00150+2
OCCONID  EQU   OCDEST
OCRLN    EQU   IEDQOPCE+15
OCRESP   EQU   OCFLAG
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00149 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00148 EQU   OCRUDEST+1
@NM00147 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00146 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00145 EQU   LCBXFLAG
@NM00144 EQU   LCBXFLAG
@NM00143 EQU   LCBXFLAG
@NM00142 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBATTEL EQU   LCBCCW5
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00128 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00127 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00126 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
@NM00125 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
@NM00124 EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00123 EQU   LCBTSTSW
@NM00122 EQU   LCBTSTSW
@NM00121 EQU   LCBTSTSW
@NM00120 EQU   LCBTSTSW
@NM00119 EQU   LCBTSTSW
@NM00118 EQU   LCBTSTSW
@NM00117 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00116 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
LCBRESTR EQU   LCBRCQCB
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00115 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUE  EQU   LCBCSWUS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00114 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00113 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00112 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00111 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00110 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00109 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00108 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
@NM00107 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBKEY   EQU   LCBRCB
CURTRM   EQU   IEDCUREQ+40
CUROPCE  EQU   IEDCUREQ+36
CURTOTBF EQU   IEDCUREQ+28
CURNXTRC EQU   IEDCUREQ+22
CURTTCIN EQU   IEDCUREQ+20
CURPIUCT EQU   IEDCUREQ+16
@NM00106 EQU   CURFLG3
CURDIAL  EQU   CURFLG3
CURFIRST EQU   CURFLG3
CURTOTEP EQU   CURFLG3
CUREPOST EQU   CURFLG3
CURATTCH EQU   CURFLG2
@NM00105 EQU   CURFLG2
CURENDCH EQU   CURFLG2
CURF1ID  EQU   CURFLG2
CURF1SEQ EQU   CURFLG2
CURF0FIN EQU   CURFLG2
CURSWCH  EQU   CURTOTIN+1
CURFLG1  EQU   CURTOTIN
CURLINK  EQU   IEDCUREQ+8
CURELEM  EQU   IEDCUREQ+5
CURPRI   EQU   IEDCUREQ+4
CURQCB   EQU   IEDCUREQ+1
CURKEY   EQU   IEDCUREQ
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
SAVTBITN EQU   IEDNSVTD+312
@NM00104 EQU   SAVTCKQB+8
@NM00103 EQU   SAVTCKEC+1
@NM00102 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00101 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00100 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00099 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00098 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTRNMP EQU   IEDNSVTD+256
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00097 EQU   IEDNSVTD+148
@NM00096 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00095 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00094 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00093 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00092 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00091 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00090 EQU   IEDQAVTD+1170
@NM00089 EQU   IEDQAVTD+1169
@NM00088 EQU   IEDQAVTD+1168
@NM00087 EQU   IEDQAVTD+1165
@NM00086 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00085
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00084 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00083 EQU   IEDQAVTD+1068
@NM00082 EQU   IEDQAVTD+1065
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00074 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00073 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00072 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00071 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTDCTLN EQU   IEDQAVTD+1000
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00070 EQU   AVTBIT2
@NM00069 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTKEYLE EQU   IEDQAVTD+960
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00068 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00067 EQU   IEDQAVTD+878
@NM00066 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00065 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00052 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00051 EQU   IEDQAVTD+808
AVTDSIOB EQU   IEDQAVTD+804
@NM00050 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00049 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00048 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00047 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00046 EQU   AVTOPCQB+8
@NM00045 EQU   AVTOPCEC+1
@NM00044 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00043 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00042 EQU   AVTCKPEC+1
@NM00041 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00040 EQU   IEDQAVTD+724
@NM00039 EQU   IEDQAVTD+712
AVTBFREB EQU   IEDQAVTD+708
AVTTIMQ  EQU   IEDQAVTD+704
@NM00038 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00037 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTTSOPT EQU   IEDQAVTD+668
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00030 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00029 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00022 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00021 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00020 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00019 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00018 EQU   AVTSAVTP+1
@NM00017 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00016 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTSEND  EQU   IEDQAVTD+524
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00015 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00014 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
@NM00013 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00012 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTRNMPT EQU   IEDQAVTD+352
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+312
AVTREADD EQU   IEDQAVTD+308
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTCSTCS EQU   IEDQAVTD+256
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00763 EQU   @RC00760
@RF00767 EQU   @RC00760
@RC00770 EQU   @RC00760
@RF00835 EQU   @RC00832
@RF00882 EQU   @RC00864
@RC00866 EQU   @RC00864
@RF00885 EQU   @RC00864
@RC00888 EQU   @RC00864
@RC00979 EQU   @RC00930
@RC00969 EQU   @RC00930
@RC00931 EQU   @RC00930
@RF00993 EQU   @RC00990
@RF01006 EQU   @RC01003
@RF01049 EQU   @RC01037
@RC01039 EQU   @RC01037
@RF01052 EQU   @RC01037
@RF01057 EQU   @RC01037
@RC00927 EQU   @RC00917
@RC00920 EQU   @RC00917
@RF01105 EQU   @EL00002
@RF01116 EQU   @EL00003
@RF01193 EQU   @EL00004
@RC01244 EQU   @EL00005
@RC01237 EQU   @EL00005
@RC01232 EQU   @EL00005
@RC01227 EQU   @EL00005
@PB00005 EQU   @EL00001
@RF00870 EQU   @RC00866
@RC00868 EQU   @RC00866
@RF00873 EQU   @RC00866
@RC00876 EQU   @RC00866
@RF00972 EQU   @RC00969
@RF00982 EQU   @RC00979
@RF01042 EQU   @RC01039
@PB00004 EQU   @PB00005
@RC01250 EQU   @RC01244
@RC01245 EQU   @RC01244
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEDNCU2,(C'PLS0416',0701,77119)
