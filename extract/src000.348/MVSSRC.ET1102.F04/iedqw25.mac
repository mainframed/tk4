         TITLE 'IEDQW25, SEND SERVICE MODULE                           *
                        '
IEDQW25  CSECT ,                                                01S0001
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
*                                   /*
IEDQW25 IEDHJN AFTERHJN,HJN           MODULE IDENTIFICATION MACRO
*   RAVT=TOTAVTPT;                  /* SET THE AVT BASE              */
         L     RAVT,TOTAVTPT(,ROLTCB)                           02S0328
*   ROLTWK=ADDR(TOTSERV);           /* SET THE BASE REGISTER TO BE
*                                      USED FOR ADDRESSING AUTOMATIC
*                                      DATA                          */
         LA    ROLTWK,TOTSERV(,ROLTCB)                          02S0329
*   GEN REFS(ROLTWK) NOSETS;                                    02S0330
*                                   /*
      USING @DATD,ROLTWK              INFORM THE ASSEMBLER OF THE
*                                     BASE REGISTER TO BE USED FOR
*                                     ADDRESSING AUTOMATIC DATA*/
*   TOTSAVE1(5:8)=RSAVE;            /* SAVE CALLER SAVE AREA IN 02S0331
*                                      IEDQW25 SAVE AREA             */
         STCM  RSAVE,15,TOTSAVE1+4(ROLTCB)                      02S0331
*   RSAVE=ADDR(TOTSAVE1);           /* SET IEDQW25 SAVE AREA ADDRESS */
         LA    RSAVE,TOTSAVE1(,ROLTCB)                          02S0332
*                                                               02S0333
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT DOES THE PROCESSING THAT IS NECESSARY TO*/
*   /* PERFORM THE FUNCTION OF THE MODULE.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0333
*                                                               03S0333
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.INITIAL: THIS SEGMENT DOES THE INITIAL PROCESSING.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0333
*   DO;                                                         03S0333
*     ERRSW=OFF;                    /* INITIALIZE THE ERROR SWITCH TO
*                                      ZERO                          */
         NI    ERRSW,B'01111111'                                03S0334
*   END;                                                        03S0335
*                                                               03S0336
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.PRIRSEC: THIS SEGMENT DOES THE PRIMARY OR SECONDARY   */
*   /* DEVICE CHECKING                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0336
*   RFY                                                         03S0336
*     RPARM RSTD;                   /* RESTRICT REGISTER 1           */
*   RFY                                                         03S0337
*     RWORK RSTD;                   /* RESTRICT REGISTER 0           */
*   BASRPAR=RPARM;                  /* SAVE SEND PARM ADDRESS        */
         ST    RPARM,BASRPAR(,ROLTCB)                           03S0338
*   RTECB=SENDTCB;                  /* SET UP POINTER TO THE TECB
*                                      FIELD                         */
         L     @11,SENDTCB(,RSEND)                              03S0339
         LR    RTECB,@11                                        03S0339
*   IF SENDTCB=ZERO×TECBSNCT=BZERO×TECBSNOC=BZERO THEN          03S0340
         LTR   @11,@11                                          03S0340
         BZ    @RT00340                                         03S0340
         CLI   TECBSNCT(RTECB),X'00'                            03S0340
         BE    @RT00340                                         03S0340
         CLI   TECBSNOC(RTECB),X'00'                            03S0340
         BNE   @RF00340                                         03S0340
@RT00340 DS    0H                                               03S0341
*     DO;                           /* IS TECB OMITTED OF SENSE 03S0341
*                                      COUNTS ZERO           @YM08477*/
*       RLTCB=ADDR(SENSDFLT);       /* SET UP SENSE DEFAULT ADDRESS
*                                      IN TECB SENSE ADDRESS REGISTER
*                                                            @YM08477*/
         LA    RLTCB,@CB02597                                   03S0342
*     END;                                                      03S0343
*   ELSE                                                        03S0344
*     DO;                                                       03S0344
         B     @RC00340                                         03S0344
@RF00340 DS    0H                                               03S0345
*       IF TECBSNOC<TECBSNCT THEN                               03S0345
         CLC   TECBSNOC(1,RTECB),TECBSNCT(RTECB)                03S0345
         BNL   @RF00345                                         03S0345
*         DO;                       /* IS NUMBER OF SENSE OCCURRED
*                                      LOWER                         */
*           RLTCB=ADDR(TECBFD01)+(TECBSNOC*TECBSNLN)+(TECBFDCT*TECBFDLN
*               );                  /* SET UP POINTER TO THE TECB
*                                      SENSE FIELD           @YM08477*/
         LA    @11,TECBFD01(,RTECB)                             03S0347
         LH    @09,TECBSNLN(,RTECB)                             03S0347
         N     @09,@CF02719                                     03S0347
         SLR   @07,@07                                          03S0347
         IC    @07,TECBSNOC(,RTECB)                             03S0347
         MR    @08,@07                                          03S0347
         ALR   @11,@09                                          03S0347
         SLR   @09,@09                                          03S0347
         IC    @09,TECBFDLN(,RTECB)                             03S0347
         SLR   @07,@07                                          03S0347
         IC    @07,TECBFDCT(,RTECB)                             03S0347
         MR    @08,@07                                          03S0347
         ALR   @11,@09                                          03S0347
         LR    RLTCB,@11                                        03S0347
*         END;                                                  03S0348
*       ELSE                                                    03S0349
*         RLTCB=ADDR(TECBFD01)+(TECBSNCT*TECBSNLN)+(TECBFDCT*TECBFDLN);
         B     @RC00345                                         03S0349
@RF00345 LA    @11,TECBFD01(,RTECB)                             03S0349
         LH    @09,TECBSNLN(,RTECB)                             03S0349
         N     @09,@CF02719                                     03S0349
         SLR   @07,@07                                          03S0349
         IC    @07,TECBSNCT(,RTECB)                             03S0349
         MR    @08,@07                                          03S0349
         ALR   @11,@09                                          03S0349
         SLR   @09,@09                                          03S0349
         IC    @09,TECBFDLN(,RTECB)                             03S0349
         SLR   @07,@07                                          03S0349
         IC    @07,TECBFDCT(,RTECB)                             03S0349
         MR    @08,@07                                          03S0349
         ALR   @11,@09                                          03S0349
         LR    RLTCB,@11                                        03S0349
*                                   /* SET UP POINTER TO THE TECB
*                                      SENSE FIELD           @YM08477*/
*     END;                                                      03S0350
@RC00345 DS    0H                                               03S0351
*   BASRTEC=RLTCB;                  /* SAVE TECB SENSE FIELD POINTER
*                                                            @YM08477*/
@RC00340 ST    RLTCB,BASRTEC(,ROLTCB)                           03S0351
*   IF SENDCDS=ZERO THEN                                        03S0352
         L     @11,SENDCDS(,RSEND)                              03S0352
         LTR   @11,@11                                          03S0352
         BNZ   @RF00352                                         03S0352
*     DO;                           /* CHECK THE CONFIGURATION BYTE
*                                      FOR ZERO                      */
*       RIOB=ADDR(TOTPRIBK);        /* SET UP IOBLOCK BASE POINTER
*                                      FOR PRIMARY DEVICE ENTRY      */
         LA    @11,TOTPRIBK(,ROLTCB)                            03S0354
         LR    RIOB,@11                                         03S0354
*       BASRIOB=ADDR(TOTPRIBK);     /* SAVE THE IOBLOCK BASE POINTER
*                                      FOR THE PRIMARY DEVICE ENTRY  */
         ST    @11,BASRIOB(,ROLTCB)                             03S0355
*       OLTPRSC=ON;                 /* SET TEST DEVICE BIT ON FOR
*                                      PRIMARY DEVICE                */
         OI    OLTPRSC(RIOB),B'00100000'                        03S0356
*     END;                                                      03S0357
*   ELSE                                                        03S0358
*     DO;                                                       03S0358
         B     @RC00352                                         03S0358
@RF00352 DS    0H                                               03S0359
*       RFY                                                     03S0359
*         RCDS RSTD;                /* RESTRICT REGISTER 8           */
*       RCDS=SENDCDS;               /* SETUP CDS ADDRESS             */
         L     RCDS,SENDCDS(,RSEND)                             03S0360
*       IF TOTTNTPR->TESTDSN(1:TOTTTBEL)=LCDSSMNM(1:TOTTTBEL) THEN
         L     @11,TOTTNTPR(,ROLTCB)                            03S0361
         SLR   @09,@09                                          03S0361
         IC    @09,TOTTTBEL(,ROLTCB)                            03S0361
         BCTR  @09,0                                            03S0361
         EX    @09,@SC02721                                     03S0361
         BNE   @RF00361                                         03S0361
*         DO;                       /* IS PRIMARY TNT ENTRY EQUAL TO
*                                      CDS SYMBOLIC NAME             */
*           RIOB=ADDR(TOTPRIBK);    /* SET UP IOBLOCK BASE POINTER
*                                      FOR PRIMARY DEVICE ENTRY      */
         LA    @11,TOTPRIBK(,ROLTCB)                            03S0363
         LR    RIOB,@11                                         03S0363
*           BASRIOB=ADDR(TOTPRIBK); /* SAVE THE IOBLOCK BASE POINTER
*                                      FOR THE PRIMARY DEVICE ENTRY  */
         ST    @11,BASRIOB(,ROLTCB)                             03S0364
*           OLTPRSC=ON;             /* SET TEST DEVICE BIT ON FOR
*                                      PRIMARY DEVICE                */
         OI    OLTPRSC(RIOB),B'00100000'                        03S0365
*         END;                                                  03S0366
*       ELSE                                                    03S0367
*         IF TOTSRTNT->TESTDSN(1:TOTTTBEL)=LCDSSMNM(1:TOTTTBEL) THEN
         B     @RC00361                                         03S0367
@RF00361 L     @11,TOTSRTNT(,ROLTCB)                            03S0367
         SLR   @09,@09                                          03S0367
         IC    @09,TOTTTBEL(,ROLTCB)                            03S0367
         BCTR  @09,0                                            03S0367
         EX    @09,@SC02721                                     03S0367
         BNE   @RF00367                                         03S0367
*           DO;                     /* IS SECONDARY TNT ENTRY EQUAL
*                                      TO CDS SYMBOLIC NAME          */
*             RIOB=ADDR(TOTSCIBK);  /* SET UP THE BASE POINTER FOR
*                                      THE SECONDARY DEVICE ENTRY    */
         LA    @11,TOTSCIBK(,ROLTCB)                            03S0369
         LR    RIOB,@11                                         03S0369
*             BASRIOB=ADDR(TOTSCIBK);/* SAVE THE BASE POINTER FOR THE
*                                      SECONDARY DEVICE ENTRY        */
         ST    @11,BASRIOB(,ROLTCB)                             03S0370
*             OLTPRSC=OFF;          /* SET TEST DEVICE BIT ON FOR
*                                      SECONDARY DEVICE              */
         NI    OLTPRSC(RIOB),B'11011111'                        03S0371
*           END;                                                03S0372
*         ELSE                                                  03S0373
*           DO;                                                 03S0373
         B     @RC00367                                         03S0373
@RF00367 DS    0H                                               03S0374
*             RETCDE=DEVNPRSC;      /* SET RETURN CODE OF 08 IN 03S0374
*                                      REGISTER 15 INDICATING DEVICE
*                                      NOT PRIMARY OR SECONDARY      */
         LA    RETCDE,8                                         03S0374
*             CALL ERREXIT;         /* CALL THE ERROR EXIT SUBROUTINE*/
         BAL   @14,ERREXIT                                      03S0375
*           END;                                                03S0376
*     END;                                                      03S0377
@RC00367 DS    0H                                               03S0377
@RC00361 DS    0H                                               03S0378
*   IF ERRSW=ON THEN                                            03S0378
@RC00352 TM    ERRSW,B'10000000'                                03S0378
         BNO   @RF00378                                         03S0378
*     DO;                           /* TEST ERROR SWITCH TO GET TO
*                                      EXIT                          */
*     END;                                                      03S0380
*   ELSE                                                        03S0381
*     DO;                                                       03S0381
         B     @RC00378                                         03S0381
@RF00378 DS    0H                                               03S0382
*       RIOB=BASRIOB;               /* SET UP IOBLOCK BASE POINTER   */
         L     RIOB,BASRIOB(,ROLTCB)                            03S0382
*       RPARM=OLTTCOFF;             /* GET COUNTERFEIT TNT OFFSET
*                                      (TTCIN)                       */
         LH    RPARM,OLTTCOFF(,RIOB)                            03S0383
         N     RPARM,@CF02719                                   03S0383
*       CALL IEDQTNT;               /* FIND TTE ADDRESS              */
         L     @15,AVTRNMPT(,RAVT)                              03S0384
         BALR  @14,@15                                          03S0384
*       RTRM=RTRM-LENGTH(IEDNTRM);  /* ADJUST TTE BASE               */
         SL    RTRM,@CF00037                                    03S0385
*       BASRTRM=RTRM;               /* SAVE TTE ADDRESS              */
         ST    RTRM,BASRTRM(,ROLTCB)                            03S0386
*       IF TRMPREF=ON&TRMTYPE=TRMLUNT THEN                      03S0387
         TM    TRMPREF(RTRM),B'00010000'                        03S0387
         BNO   @RF00387                                         03S0387
         CLI   TRMTYPE(RTRM),X'30'                              03S0387
         BNE   @RF00387                                         03S0387
*         DO;                       /* IS THIS A 3705 LU RESOURCE    */
*           RDCT=AVTCSTCS+(TRMCHCIN-1)*AVTDCTLN;/* DCT ENTRY ADDRESS */
         SLR   @07,@07                                          03S0389
         IC    @07,TRMCHCIN(,RTRM)                              03S0389
         BCTR  @07,0                                            03S0389
         MH    @07,AVTDCTLN(,RAVT)                              03S0389
         AL    @07,AVTCSTCS(,RAVT)                              03S0389
         LR    RDCT,@07                                         03S0389
*           RSEND=BASRPAR;          /* SET UP THE SEND PARAMETER LIST
*                                      POINTER                       */
         L     RSEND,BASRPAR(,ROLTCB)                           03S0390
*           IF SENDTCB^=ZERO THEN                               03S0391
         L     @11,SENDTCB(,RSEND)                              03S0391
         LTR   @11,@11                                          03S0391
         BZ    @RF00391                                         03S0391
*             DO;                   /* TECB ADDRESS ZERO     @YM08477*/
*               RTECB=SENDTCB;      /* SET UP THE TECB BASE POINTER  */
         LR    RTECB,@11                                        03S0393
*               IF LCDSFBTE=ASCII THEN                          03S0394
         CLI   LCDSFBTE(RCDS),X'80'                             03S0394
         BNE   @RF00394                                         03S0394
*                 LTCBALT=ON;       /* TURN ON THE ASCII BIT IN THE
*                                      TECB                          */
         OI    LTCBALT(RLTCB),B'00001000'                       03S0395
*               ELSE                                            03S0396
*                 LTCBALT=OFF;      /* TURN OFF THE ASCII BIT IN THE
*                                      TECB                          */
         B     @RC00394                                         03S0396
@RF00394 NI    LTCBALT(RLTCB),B'11110111'                       03S0396
*             END;                  /*                       @YM08477*/
*         END;                                                  03S0398
*       ELSE                                                    03S0399
*         DO;                                                   03S0399
         B     @RC00387                                         03S0399
@RF00387 DS    0H                                               03S0400
*           RETCDE=RC0C;            /* SET RETURN CODE OF 0C-TEST
*                                      DEVICE IS NOT A 3770 OR 3270
*                                      TERMINAL                      */
         LA    RETCDE,12                                        03S0400
*           CALL ERREXIT;           /* CALL ERROR EXIT SUBROUTINE    */
         BAL   @14,ERREXIT                                      03S0401
*         END;                                                  03S0402
*     END;                                                      03S0403
@RC00387 DS    0H                                               03S0404
*   RFY                                                         03S0404
*     RCDS UNRSTD;                                              03S0404
@RC00378 DS    0H                                               03S0405
*   RFY                                                         03S0405
*     RPARM UNRSTD;                                             03S0405
*   RFY                                                         03S0406
*     RWORK UNRSTD;                                             03S0406
*   RFY                                                         02S0407
*     RPARM RSTD;                                               02S0407
*   IF ERRSW=ON THEN                                            02S0408
         TM    ERRSW,B'10000000'                                02S0408
         BNO   @RF00408                                         02S0408
*     DO;                           /* IS ERROR EXIT SWITCH OFF 02S0409
*                                                            @YM08534*/
*     END;                          /*                       @YM08534*/
*   ELSE                            /*                       @YM08534*/
*     DO;                                                       02S0411
         B     @RC00408                                         02S0411
@RF00408 DS    0H                                               02S0412
*       RSEND=BASRPAR;              /* SETUP SEND PARM ADDRESS       */
         L     RSEND,BASRPAR(,ROLTCB)                           02S0412
*       IF SENDSTPE=OFF THEN                                    02S0413
         TM    SENDSTPE(RSEND),B'00000010'                      02S0413
         BNZ   @RF00413                                         02S0413
*         DO;                       /* IS THIS A SEND REQUEST        */
*                                                               03S0415
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.SENDREQ: THIS PROCESS BUILDS THE BUFFER AND   */
*           /* POST IT TO THE DESTINATION QCB WHEN A SEND REQUEST IS */
*           /* ISSUED BY THE OLT.                                    */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0415
*           RFY                                                 03S0415
*             RSEND RSTD;                                       03S0415
*           RFY                                                 03S0416
*             RWORK RSTD;                                       03S0416
*           RRESPL=TOTRESPL;        /* SET UP THE ADDRESS OF THE
*                                      RESPL                         */
         L     RRESPL,TOTRESPL(,ROLTCB)                         03S0417
*           RWORK=ADDR(TOTWAWRK);   /* SAVE RETURN ADDRESS           */
         LA    RWORK,TOTWAWRK(,ROLTCB)                          03S0418
*           RPARM=((SENDRLN+AVTHDRSZ+LRHLEN)/AVTKEYLE)+ONE;/*   03S0419
*                                      CALCULATE THE NUMBER OF UNITS
*                                      REQUIRED              @YM09025*/
         LA    @11,33                                           03S0419
         LH    @07,SENDRLN(,RSEND)                              03S0419
         N     @07,@CF02719                                     03S0419
         ALR   @11,@07                                          03S0419
         LR    @08,@11                                          03S0419
         SRDA  @08,32                                           03S0419
         LH    @11,AVTKEYLE(,RAVT)                              03S0419
         DR    @08,@11                                          03S0419
         AL    @09,@CF00062                                     03S0419
         LR    RPARM,@09                                        03S0419
*           RSAVE=ADDR(TOTSAVE6);   /* SET UP IEDQWA SAVE AREA       */
         LA    RSAVE,TOTSAVE6(,ROLTCB)                          03S0420
*           CALL ALLOCBUF;          /* CALL IEDQWA TO REQUEST A 03S0421
*                                      BUFFER                        */
         L     @15,RESABUF(,RRESPL)                             03S0421
         BALR  @14,@15                                          03S0421
*           RSAVE=ADDR(TOTSAVE1);   /* SET UP IEDQW25 SAVE AREA      */
         LA    RSAVE,TOTSAVE1(,ROLTCB)                          03S0422
*           RFY                                                 03S0423
*             RPRF RSTD;                                        03S0423
*           RPRF=RPARM;             /* GET ADDRESS OF BUFFER RETURNED
*                                      BY TCAM                       */
         LR    RPRF,RPARM                                       03S0424
*           BASRPRF=RPRF;           /* SAVE ADDRESS OF BUFFER   03S0425
*                                      RETURNED BY TCAM              */
         ST    RPRF,BASRPRF(,ROLTCB)                            03S0425
*           RLCB=ADDR(TOTWKSPC)-(ADDR(LCBRCQCB)-ADDR(IEDQLCB));/* MAP
*                                      LCB STRUCTURE ON THE WORKSPACE
*                                      IN THE OLTCB                  */
         LA    @11,TOTWKSPC(,ROLTCB)                            03S0426
         LR    @09,@11                                          03S0426
         SL    @09,@CF01567                                     03S0426
         LR    RLCB,@09                                         03S0426
*           BASRLCB=RLCB;           /* SAVE ADDRESS OF THE LCB  03S0427
*                                                            @YM08477*/
         ST    RLCB,BASRLCB(,ROLTCB)                            03S0427
*           RTTCP=ADDR(TOTWKSPC);   /* SET UP TOTE/TCAM BASE POINTER
*                                                            @YM08477*/
         LR    RTTCP,@11                                        03S0428
*           RTRM=BASRTRM;           /* GET POINTER FROM BASE POINTER
*                                      SAVE AREA                     */
         L     RTRM,BASRTRM(,ROLTCB)                            03S0429
*           RSCB=ADDR(TTCSCB);      /* GET ADDRESS BASE FOR SCB FOUND
*                                      IN THE WORKAREA               */
         LA    @09,40                                           03S0430
         LR    RSCB,RTTCP                                       03S0430
         ALR   RSCB,@09                                         03S0430
         LA    @07,TTCSCB(,RSCB)                                03S0430
         LR    RSCB,@07                                         03S0430
*           RFY                                                 03S0431
*             IEDQLCB BASED(RRETURN);/*                      @YM08477*/
*           RRETURN=BASRLCB;        /* SET UP THE LCB ADDRESS   03S0432
*                                                            @YM08477*/
         L     @05,BASRLCB(,ROLTCB)                             03S0432
         LR    RRETURN,@05                                      03S0432
*           LCBSCBA=ADDR(TTCSCB);   /* GET SCB ADDRESS               */
         STCM  @07,7,LCBSCBA(RRETURN)                           03S0433
*           SCBSTATE=BZERO;         /* CLEAR STATUS BYTE             */
         MVI   SCBSTATE(RSCB),X'00'                             03S0434
*           SCBDESTQ=TRMDESTQ;      /* POST MSG TO DUMMY QCB         */
         MVC   SCBDESTQ(3,RSCB),TRMDESTQ(RTRM)                  03S0435
*           PRFLCB=RRETURN;         /* SET LCB ADDRESS TO DUMMY LCB
*                                      IN WORKAREA                   */
         STCM  RRETURN,7,PRFLCB(RPRF)                           03S0436
*           RFY                                                 03S0437
*             IEDQLCB BASED(RLCB);  /*                       @YM08477*/
*           RSEND=BASRPAR;          /* GET BASE POINTER FOR SEND PARM
*                                      LIST                          */
         L     RSEND,BASRPAR(,ROLTCB)                           03S0438
*           RIOB=BASRIOB;           /* GET BASE POINTER FOR THE TEST
*                                      ENTRY                         */
         L     RIOB,BASRIOB(,ROLTCB)                            03S0439
*           PRFDEST=OLTTCOFF;       /* CONTERFEIT TTCIN OF THE  03S0440
*                                      RESOURCE LU                   */
         LH    @07,OLTTCOFF(,RIOB)                              03S0440
         N     @07,@CF02719                                     03S0440
         STH   @07,PRFDEST(,RPRF)                               03S0440
*           PRFSIZE=SENDRLN+AVTHDRSZ+LRHLEN;/* SIZE OF DATA IN THE
*                                      BUFFER EQUAL THE MESSAGE SIZE
*                                      PLUS PREFIX SIZE PLUS RH      */
         LA    @07,33                                           03S0441
         LH    @05,SENDRLN(,RSEND)                              03S0441
         N     @05,@CF02719                                     03S0441
         ALR   @07,@05                                          03S0441
         STH   @07,PRFSIZE(,RPRF)                               03S0441
*           RRESPL=TOTRESPL;        /* PUT THE ADDRESS OF THE RESPL
*                                      IN ITS BASE REGISTER          */
         L     RRESPL,TOTRESPL(,ROLTCB)                         03S0442
*           PRFSRCE=0;                                          03S0443
         SLR   @05,@05                                          03S0443
         STH   @05,PRFSRCE(,RPRF)                               03S0443
*           RFY                                                 03S0444
*             RPRF UNRSTD;                                      03S0444
*           BASNBUNT(4:4)=((SENDRLN+AVTHDRSZ+LRHLEN)/AVTKEYLE)+ONE;/*
*                                      SET UNIT COUNT                */
         LR    @08,@07                                          03S0445
         SRDA  @08,32                                           03S0445
         LH    @07,AVTKEYLE(,RAVT)                              03S0445
         DR    @08,@07                                          03S0445
         AL    @09,@CF00062                                     03S0445
         STC   @09,BASNBUNT+3(,ROLTCB)                          03S0445
*           RFY                                                 03S0446
*             RPRF RSTD;                                        03S0446
*           RPRF=BASRPRF;           /* RESTORE THE ADDRESS OF THE
*                                      BUFFER                        */
         L     @07,BASRPRF(,ROLTCB)                             03S0447
         LR    RPRF,@07                                         03S0447
*           PRFNBUNT=BASNBUNT(4:4); /* SET UNIT COUNT                */
         STC   @09,PRFNBUNT(,RPRF)                              03S0448
*           PRFSTAT1=PRFSTAT1&&PRFSTAT1;/* CLEAR STATUS BYTE         */
         XC    PRFSTAT1(1,RPRF),PRFSTAT1(RPRF)                  03S0449
*           PRFSCAN=PRFSCAN&&PRFSCAN;/* CLEAR SCAN POINTER           */
         LH    @09,PRFSCAN(,RPRF)                               03S0450
         LR    @07,@09                                          03S0450
         XR    @07,@09                                          03S0450
         STH   @07,PRFSCAN(,RPRF)                               03S0450
*           RTTCP=ADDR(TOTWKSPC);   /* SET UP TOTE/TCAM BASE POINTER */
         LR    RTTCP,@11                                        03S0451
*           RSCB=ADDR(TTCSCB);      /* GET ADDRESS OF THE SCB        */
         LA    @11,40                                           03S0452
         ALR   @11,RTTCP                                        03S0452
         LA    RSCB,TTCSCB(,@11)                                03S0452
*           PRFQCBA=SCBDESTQ;       /* SET ADDRESS OF QCB TH WHICH
*                                      BUFFER IS TO BE POSTED        */
         MVC   PRFQCBA(3,RPRF),SCBDESTQ(RSCB)                   03S0453
*           PRFPRI=PRIDESTQ;        /* SET PRIORITY FOR POST TO 03S0454
*                                      DESTINATION QCB               */
         MVI   PRFPRI(RPRF),X'E4'                               03S0454
*           RTRH=ADDR(PRFSHDR);     /* GET THE ADDRESS OF THE RH
*                                      BUFFER POSITION               */
         LA    RTRH,PRFSHDR(,RPRF)                              03S0455
*           IF SENDSTPE=ON THEN                                 03S0456
         TM    SENDSTPE(RSEND),B'00000010'                      03S0456
         BNO   @RF00456                                         03S0456
*             TRHTYPE=ON;           /* SET IF RESPONSE OR REQUEST
*                                      FROM OLT SEND                 */
         OI    TRHTYPE(RTRH),B'10000000'                        03S0457
*           ELSE                                                03S0458
*             TRHTYPE=OFF;                                      03S0458
         B     @RC00456                                         03S0458
@RF00456 NI    TRHTYPE(RTRH),B'01111111'                        03S0458
*           RLTCB=BASRTEC;          /* PUT THE TECB ADDRESS IN ITS
*                                      BASE REGISTER         @YM08477*/
@RC00456 L     RLTCB,BASRTEC(,ROLTCB)                           03S0459
*           IF LTCBFIR=ON×LTCBONLY=ON THEN                      03S0460
         TM    LTCBFIR(RLTCB),B'10010000'                       03S0460
         BZ    @RF00460                                         03S0460
*             TRHBC=ON;             /* BEGIN CHAINING                */
         OI    TRHBC(RTRH),B'00000010'                          03S0461
*           ELSE                                                03S0462
*             TRHBC=OFF;                                        03S0462
         B     @RC00460                                         03S0462
@RF00460 NI    TRHBC(RTRH),B'11111101'                          03S0462
*           IF LTCBLAST=ON×LTCBONLY=ON THEN                     03S0463
@RC00460 TM    LTCBLAST(RLTCB),B'00110000'                      03S0463
         BZ    @RF00463                                         03S0463
*             TRHEC=ON;             /* END CHAINING                  */
         OI    TRHEC(RTRH),B'00000001'                          03S0464
*           ELSE                                                03S0465
*             TRHEC=OFF;                                        03S0465
         B     @RC00463                                         03S0465
@RF00463 NI    TRHEC(RTRH),B'11111110'                          03S0465
*           TRHDR1=ON;              /* DEFENDENT RESPONSE IS ALWAYS
*                                      ON FOR A SEND REQUEST FROM THE
*                                      OLT                           */
@RC00463 DS    0H                                               03S0467
*           TRHDR2=OFF;             /* ALWAYS OFF FOR TCAM           */
         OI    TRHDR1(RTRH),B'10000000'                         03S0467
         NI    TRHDR2(RTRH),B'11011111'                         03S0467
*           IF SENDREX=ON THEN                                  03S0468
         TM    SENDREX(RSEND),B'00010000'                       03S0468
         BNO   @RF00468                                         03S0468
*             TRHER=ON;             /* EXCEPTION RESPONSE            */
         OI    TRHER(RTRH),B'00010000'                          03S0469
*           ELSE                                                03S0470
*             TRHER=OFF;                                        03S0470
         B     @RC00468                                         03S0470
@RF00468 NI    TRHER(RTRH),B'11101111'                          03S0470
*           IF $CTEQTT=OFF&TOTAPTST=OFF THEN/* CT/AP EQU TEST DEVICE
*                                                            @YM08097*/
@RC00468 TM    $CTEQTT(ROLTCB),B'00010000'                      03S0471
         BNZ   @RF00471                                         03S0471
         TM    TOTAPTST(ROLTCB),B'00001000'                     03S0471
         BNZ   @RF00471                                         03S0471
*             DO;                   /*                       @YM08097*/
*               IF SENDBBKT=ON THEN                             03S0473
         TM    SENDBBKT(RSEND),B'10000000'                      03S0473
         BNO   @RF00473                                         03S0473
*                 TRHBB=ON;         /* BEGIN BRACKETS                */
         OI    TRHBB(RTRH),B'10000000'                          03S0474
*               ELSE                                            03S0475
*                 TRHBB=OFF;                                    03S0475
         B     @RC00473                                         03S0475
@RF00473 NI    TRHBB(RTRH),B'01111111'                          03S0475
*               IF SENDEBKT=ON THEN                             03S0476
@RC00473 TM    SENDEBKT(RSEND),B'01000000'                      03S0476
         BNO   @RF00476                                         03S0476
*                 TRHEB=ON;         /* END BRACKETS                  */
         OI    TRHEB(RTRH),B'01000000'                          03S0477
*               ELSE                                            03S0478
*                 TRHEB=OFF;                                    03S0478
         B     @RC00476                                         03S0478
@RF00476 NI    TRHEB(RTRH),B'10111111'                          03S0478
*             END;                  /*                       @YM08097*/
*           ELSE                                                03S0480
*             ;                                                 03S0480
@RF00471 DS    0H                                               03S0481
*           IF SENDCREQ=OFF×SENDCCMD=OFF THEN                   03S0481
@RC00471 TM    SENDCREQ(RSEND),B'11000000'                      03S0481
         BO    @RF00481                                         03S0481
*             TRHCDI=ON;            /* CHANGE DIRECTION REQUEST      */
         OI    TRHCDI(RTRH),B'00100000'                         03S0482
*           ELSE                                                03S0483
*             TRHCDI=OFF;                                       03S0483
         B     @RC00481                                         03S0483
@RF00481 NI    TRHCDI(RTRH),B'11011111'                         03S0483
*           IF SENDCDSL=ON THEN                                 03S0484
@RC00481 TM    SENDCDSL(RSEND),B'00000100'                      03S0484
         BNO   @RF00484                                         03S0484
*             TRHCSI=ON;            /* CODE SELECTION INDICATOR      */
         OI    TRHCSI(RTRH),B'00001000'                         03S0485
*           ELSE                                                03S0486
*             TRHCSI=OFF;                                       03S0486
         B     @RC00484                                         03S0486
@RF00484 NI    TRHCSI(RTRH),B'11110111'                         03S0486
*           RIOB=BASRIOB;           /* GET POINTER FROM BASE POINTER
*                                      SAVE AREA                     */
@RC00484 L     RIOB,BASRIOB(,ROLTCB)                            03S0487
*           IF SENDRFME=ON THEN                                 03S0488
         TM    SENDRFME(RSEND),B'00100000'                      03S0488
         BNO   @RF00488                                         03S0488
*             OLTFME=ON;            /* SAVE ACTUAL RESPONSE FROM SEND
*                                      REQUEST FOR SECONDARY DEVICE  */
         OI    OLTFME(RIOB),B'00000100'                         03S0489
*           ELSE                                                03S0490
*             OLTFME=OFF;                                       03S0490
         B     @RC00488                                         03S0490
@RF00488 NI    OLTFME(RIOB),B'11111011'                         03S0490
*           IF SENDREX=ON THEN                                  03S0491
@RC00488 TM    SENDREX(RSEND),B'00010000'                       03S0491
         BNO   @RF00491                                         03S0491
*             OLTEX=ON;             /* SAVE ACTUAL RESPONSE FROM SEND
*                                      REQUEST FOR SECONDARY DEVICE  */
         OI    OLTEX(RIOB),B'00001000'                          03S0492
*           ELSE                                                03S0493
*             OLTEX=OFF;                                        03S0493
         B     @RC00491                                         03S0493
@RF00491 NI    OLTEX(RIOB),B'11110111'                          03S0493
*           RPLMVP=ADDR(TOTWOWRK);  /* ADDRESSIBILITY TO THE MOVE
*                                      PARAMETER LIST                */
@RC00491 LA    RPLMVP,TOTWOWRK(,ROLTCB)                         03S0494
*           RSAVE=ADDR(TOTSAVE6);   /* SET UP THE POINTER TO THE
*                                      IEDMVBFR SAVE AREA            */
         LA    RSAVE,TOTSAVE6(,ROLTCB)                          03S0495
*           PLMVTU=RPRF;            /* ADDRESS OF TCAM BUFFER THAT
*                                      WILL CONTAIN THE MESSAGE      */
         ST    RPRF,PLMVTU(,RPLMVP)                             03S0496
*           PLMVLNTH=SENDRLN;       /* LENGTH OF DATA TO BE MOVED
*                                                            @YM09025*/
         LH    @11,SENDRLN(,RSEND)                              03S0497
         N     @11,@CF02719                                     03S0497
         STH   @11,PLMVLNTH(,RPLMVP)                            03S0497
*           PLMVTD=ADDR(PRFSHDR)+LRHLEN;/* LOCATION IN THE BUFFER
*                                      WHERE THE DATA IS TO BE MOVED */
         LA    @11,PRFSHDR(,RPRF)                               03S0498
         AL    @11,@CF00068                                     03S0498
         ST    @11,PLMVTD(,RPLMVP)                              03S0498
*           PLMVSU=SENDARA;         /* SOURCE UNIT ADDRESS           */
         L     @11,SENDARA(,RSEND)                              03S0499
         ST    @11,PLMVSU(,RPLMVP)                              03S0499
*           PLMVSD=SENDARA;         /* SOURCE DATA ADDRESS           */
         ST    @11,PLMVSD(,RPLMVP)                              03S0500
*           PLMVFLG1=BZERO;         /* CLEAR FLAGS                   */
         MVI   PLMVFLG1(RPLMVP),X'00'                           03S0501
*           PLMVSCTG=ON;            /* INDICATE THAT THE MESSAGE IS
*                                      IN A CONTIGUOUS AREA          */
         OI    PLMVSCTG(RPLMVP),B'01000000'                     03S0502
*           PLMVFLG2=BZERO;         /* CLEAR FLAG BYTE TWO   @YM08477*/
         MVI   PLMVFLG2(RPLMVP),X'00'                           03S0503
*           RPARM=RPLMVP;           /* REGISTER ONE POINTS TO MOVE
*                                      PARM LIST             @YM08477*/
         LR    RPARM,RPLMVP                                     03S0504
*           CALL IEDMVBFR;          /* GO PUT MESSAGE INTO TCAM 03S0505
*                                      BUFFER                        */
         L     @11,AVTSAVTP(,RAVT)                              03S0505
         L     @15,SAVTMVBF(,@11)                               03S0505
         BALR  @14,@15                                          03S0505
*           RSAVE=ADDR(TOTSAVE1);   /* SET UP POINTER TO THE IEDQW25
*                                      SAVE AREA                     */
         LA    RSAVE,TOTSAVE1(,ROLTCB)                          03S0506
*           RWORK=ADDR(TOTWAWRK);   /* GET ADDRESS OF WORK AREA TO BE
*                                      USED BY POST/WAIT ROUTINE     */
         LA    RWORK,TOTWAWRK(,ROLTCB)                          03S0507
*           RPRF=BASRPRF;           /* SET REGISTER 1 TO BUFFER TO BE
*                                      POSTED                        */
         L     RPRF,BASRPRF(,ROLTCB)                            03S0508
*           GEN(ICM RPARM,8,REQKEY);/* SET ELEMENT KEY IN REGISTER
*                                      ZERO                          */
         ICM RPARM,8,REQKEY
*           PRFLINK=ADDR(TOTWOWRK); /* CHAIN WAITING ELEMENT TO THE
*                                      BUFFER                        */
         LA    @11,TOTWOWRK(,ROLTCB)                            03S0510
         STCM  @11,7,PRFLINK(RPRF)                              03S0510
*           RTTCP=ADDR(TOTWAWRK);   /* SET ADDRESS BASE FOR TCAM/TOTE
*                                      STRUCTURE                     */
         LA    RTTCP,TOTWAWRK(,ROLTCB)                          03S0511
*           REQQCB=ADDR(TTCQCB);    /* SET QCB TO THE QCB USED BY
*                                      IEDQWA                        */
         LA    @11,40                                           03S0512
         ALR   @11,RTTCP                                        03S0512
         ST    @11,REQQCB(,ROLTCB)                              03S0512
*           REQLINK=ZERO;           /* CLEAR LINK FIELD INDICATING
*                                      LAST ELEMENT                  */
         SLR   @11,@11                                          03S0513
         STCM  @11,7,REQLINK(ROLTCB)                            03S0513
*           REQPRI=PRILNSCL;        /* SET PRIORITY TO ONE LEVEL
*                                      LOWER THAN QCB POST TO   03S0514
*                                      DESTINATION QCB       @OX21052*/
         MVI   REQPRI(ROLTCB),X'E3'                             03S0514
*           RTRM=BASRTRM;           /* GET THE TTE POINTER           */
         L     RTRM,BASRTRM(,ROLTCB)                            03S0515
*           TRMTDIFF=ON;            /* TEST DEVICE ID FOR TOTE       */
         L     @11,TRMTDIFF-3(,RTRM)                            03S0516
@GL00005 LR    @09,@11                                          03S0516
         O     @09,@CF02737                                     03S0516
         CS    @11,@09,TRMTDIFF-3(RTRM)                         03S0516
         BNE   @GL00005                                         03S0516
*           RPARM=RPRF;             /* NOW PUT DESTINATION QCB IN
*                                      REGISTER ONE                  */
         LR    RPARM,RPRF                                       03S0517
*           RRESPL=TOTRESPL;        /* SET UP THE ADDRESS OF THE
*                                      RESPL                         */
         L     RRESPL,TOTRESPL(,ROLTCB)                         03S0518
*           CALL POSTWAIT;          /* CALL IEDQWA TO POST OUTPUT
*                                      BUFFER AND REQUEST ELEMENT TO
*                                      TCAM                          */
         L     @15,RESPLRVT(,RRESPL)                            03S0519
         BALR  @14,@15                                          03S0519
*           RETCDE=RCGOOD;          /* GOOD RETURN CODE 00           */
         SLR   RETCDE,RETCDE                                    03S0520
*           TOTRTCOD=RETCDE;        /* SAVE RETURN CODE IN OLTCB     */
         STC   RETCDE,TOTRTCOD(,ROLTCB)                         03S0521
*           RFY                                                 03S0522
*             RPARM UNRSTD;         /* UNRESTRICT REGISTER 1         */
*           RFY                                                 03S0523
*             RWORK UNRSTD;         /* UNRESTRICT REGISTER 10        */
*         END;                                                  02S0524
*       ELSE                                                    02S0525
*         DO;                       /* NO,IT IS A SEND RESPONSE      */
         B     @RC00413                                         02S0525
@RF00413 DS    0H                                               02S0526
*                                                               03S0526
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.SENDREC: THIS PROCESS BUILDS A PIU AND POST IT*/
*           /* TO THE DFOUT MODULE WHEN A SEND RESPONSE IS ISSUED BY */
*           /* THE OLT.                                              */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0526
*           RFY                                                 03S0526
*             RPARM RSTD;           /* RESTRICT REGISTER 1           */
*           RFY                                                 03S0527
*             RWORK RSTD;           /* RESTRICT REGISTER 10          */
*           RWORK=ADDR(TOTWAWRK);   /* SAVE RETURN ADDRESS           */
         LA    RWORK,TOTWAWRK(,ROLTCB)                          03S0528
*           RPARM=ONE;              /* THE NUMBER OF UNITS REQUIRED
*                                      IS 1                  @YM08477*/
         LA    RPARM,1                                          03S0529
*           RSAVE=ADDR(TOTSAVE6);   /* SET UP THE POINTER TO THE
*                                      IEDQWA SAVE AREA              */
         LA    RSAVE,TOTSAVE6(,ROLTCB)                          03S0530
*           RRESPL=TOTRESPL;        /* SET UP THE ADDRESS THE RESPL  */
         L     RRESPL,TOTRESPL(,ROLTCB)                         03S0531
*           CALL ALLOCBUF;          /* CALL IEDQWA TO REQUEST A 03S0532
*                                      BUFFER                        */
         L     @15,RESABUF(,RRESPL)                             03S0532
         BALR  @14,@15                                          03S0532
*           RSAVE=ADDR(TOTSAVE1);   /* SET UP THE POINTER TO THE
*                                      IEDQW25 SAVE AREA             */
         LA    RSAVE,TOTSAVE1(,ROLTCB)                          03S0533
*           RPRF=RPARM;             /* SET UP THE BUFFER ADDRESS     */
         LR    RPRF,RPARM                                       03S0534
*           BASRPRF=RPRF;           /* SAVE THE BUFFER ADDRESS       */
         ST    RPRF,BASRPRF(,ROLTCB)                            03S0535
*           RPIU=ADDR(PRFSUNIT);    /* SET PIU POINTER TO THE START
*                                      OF THE PIU MESSAGE            */
         LA    RPIU,PRFSUNIT(,RPRF)                             03S0536
*           BASRPIU=RPIU;           /* SAVE THE PIU POINTER          */
         ST    RPIU,BASRPIU(,ROLTCB)                            03S0537
*           RTTH=ADDR(PIUTH);       /* SET TH POINTER TO THE START OF
*                                      THE TH INFORMATION            */
         LR    RTTH,RPIU                                        03S0538
*           PRF2TNTI=ON;            /* TTCIN OFFSETS EXIST IN PIU    */
*           PRF2FORM=ON;            /* 2ND WORD IN THIS PREFIX       */
         LR    @11,RPRF                                         03S0540
         SL    @11,@CF00047                                     03S0540
         OI    PRF2TNTI(@11),B'11000000'                        03S0540
*           PRF2SEQP=ADDR(TTHSNF);  /* POINTER TO SEQUENCE NUMBER
*                                      AREA                          */
         LA    @09,TTHSNF(,RTTH)                                03S0541
         ST    @09,PRF2SEQP(,@11)                               03S0541
*           PRFPIUO=ONE;            /* OFFSET TO PIU                 */
         MVI   PRFPIUO(RPRF),X'01'                              03S0542
*           PRFQCBA=SAVTDFCO;       /* SET ADDRESS OF QCB TO WHICH
*                                      THE BUFFER IS TO BE POSTED    */
         L     @11,AVTSAVTP(,RAVT)                              03S0543
         MVC   PRFQCBA(3,RPRF),SAVTDFCO+1(@11)                  03S0543
*           TTHFTYPE=TTHFID1;       /* FID 1                         */
         NI    TTHFTYPE(RTTH),B'00011111'                       03S0544
         OI    TTHFTYPE(RTTH),B'00010000'                       03S0544
*           TTHBBIU=ON;             /* BEGIN SEQMENT                 */
*           TTHEBIU=ON;             /* END SEQMENT                   */
         OI    TTHBBIU(RTTH),B'00001100'                        03S0546
*           RIOB=BASRIOB;           /* GET POINTER FROM BASE POINTER
*                                      SAVE AREA                     */
         L     RIOB,BASRIOB(,ROLTCB)                            03S0547
*           IF OLTEN=ON THEN                                    03S0548
         TM    OLTEN(RIOB),B'00000010'                          03S0548
         BNO   @RF00548                                         03S0548
*             TTHEFI=ON;            /* EXPEDITED/NORMAL INDICATOR    */
         OI    TTHEFI(RTTH),B'00000001'                         03S0549
*           ELSE                                                03S0550
*             TTHEFI=OFF;                                       03S0550
         B     @RC00548                                         03S0550
@RF00548 NI    TTHEFI(RTTH),B'11111110'                         03S0550
*           TTHBYTE1=BZERO;         /* CLEAR TH BYTE ONE             */
@RC00548 MVI   TTHBYTE1(RTTH),X'00'                             03S0551
*           TTHDAF=OLTTCOFF;        /* TTCIN OF LU                   */
         MVC   TTHDAF(2,RTTH),OLTTCOFF(RIOB)                    03S0552
*           RFY                                                 03S0553
*             IEDRESPL BASED(RPARM);/*                       @YM08477*/
*           RPARM=TOTRESPL;         /* SET UP ADDRESS OF RESPL  03S0554
*                                                            @YM08477*/
         L     RPARM,TOTRESPL(,ROLTCB)                          03S0554
*           TTHOAF=RESMHSRC;        /* TTCIN OF THE TOTEMH           */
         MVC   TTHOAF(2,RTTH),RESMHSRC(RPARM)                   03S0555
*           RFY                                                 03S0556
*             IEDRESPL BASED(RRESPL);/*                      @YM08477*/
*           IF OLTPRSC=ON THEN                                  03S0557
         TM    OLTPRSC(RIOB),B'00100000'                        03S0557
         BNO   @RF00557                                         03S0557
*             TTHSNF=TOTPRSEQ;                                  03S0558
         MVC   TTHSNF(2,RTTH),TOTPRSEQ(ROLTCB)                  03S0558
*           ELSE                                                03S0559
*             TTHSNF=TOTSCSEQ;      /* SEQUENCE NUMBER               */
         B     @RC00557                                         03S0559
@RF00557 MVC   TTHSNF(2,RTTH),TOTSCSEQ(ROLTCB)                  03S0559
*           RSEND=BASRPAR;          /* GET THE POINTER TO THE SEND
*                                      PARM LIST                     */
@RC00557 L     RSEND,BASRPAR(,ROLTCB)                           03S0560
*           RPIU=BASRPIU;           /* SET UP THE BUFFER ADDRESS
*                                                            @YM08477*/
         L     RPIU,BASRPIU(,ROLTCB)                            03S0561
*           RTRH=ADDR(PIURH);       /* GET THE ADDRESS OF THE RH
*                                      BUFFER POSITION               */
         LA    RTRH,PIURH(,RPIU)                                03S0562
*           IEDRH=IEDRH&&IEDRH;     /* CLEAR THE RH                  */
         XC    IEDRH(3,RTRH),IEDRH(RTRH)                        03S0563
*           IF SENDSTPE=ON THEN                                 03S0564
         TM    SENDSTPE(RSEND),B'00000010'                      03S0564
         BNO   @RF00564                                         03S0564
*             TRHTYPE=ON;           /* SET IF RESPONSE OR REQUEST
*                                      FROM OLT SEND                 */
         OI    TRHTYPE(RTRH),B'10000000'                        03S0565
*           ELSE                                                03S0566
*             TRHTYPE=OFF;                                      03S0566
         B     @RC00564                                         03S0566
@RF00564 NI    TRHTYPE(RTRH),B'01111111'                        03S0566
*           IF SENDREX=ON THEN                                  03S0567
@RC00564 TM    SENDREX(RSEND),B'00010000'                       03S0567
         BNO   @RF00567                                         03S0567
*             TRHSDI=ON;            /* SET IF SENSE DATA INDICATED
*                                      FROM OLT SEND                 */
         OI    TRHSDI(RTRH),B'00000100'                         03S0568
*           ELSE                                                03S0569
*             TRHSDI=OFF;                                       03S0569
         B     @RC00567                                         03S0569
@RF00567 NI    TRHSDI(RTRH),B'11111011'                         03S0569
*           TRHBC=ON;               /* BEGIN CHAINING                */
@RC00567 DS    0H                                               03S0571
*           TRHEC=ON;               /* END CHAINING                  */
         OI    TRHBC(RTRH),B'00000011'                          03S0571
*           TRHDR1=ON;              /* DEFENDENT RESPONSE IS ALWAYS
*                                      ON FOR A SEND REQUEST FROM THE
*                                      OLT                           */
*           TRHDR2=OFF;             /* ALWAYS OFF FOR TCAM           */
         OI    TRHDR1(RTRH),B'10000000'                         03S0573
         NI    TRHDR2(RTRH),B'11011111'                         03S0573
*           IF SENDREX=ON THEN                                  03S0574
         TM    SENDREX(RSEND),B'00010000'                       03S0574
         BNO   @RF00574                                         03S0574
*             TRHER=ON;             /* EXCEPTION RESPONSE            */
         OI    TRHER(RTRH),B'00010000'                          03S0575
*           ELSE                                                03S0576
*             TRHER=OFF;                                        03S0576
         B     @RC00574                                         03S0576
@RF00574 NI    TRHER(RTRH),B'11101111'                          03S0576
*           RIOB=BASRIOB;           /* GET THE POINTER FROM THE BASE
*                                      POINTER SAVE AREA             */
@RC00574 L     RIOB,BASRIOB(,ROLTCB)                            03S0577
*           IF SENDRFME=ON THEN                                 03S0578
         TM    SENDRFME(RSEND),B'00100000'                      03S0578
         BNO   @RF00578                                         03S0578
*             OLTFME=ON;            /* SAVE ACTUAL RESPONSE FROM SEND
*                                      REQUEST FOR SECONDARY DEVICE  */
         OI    OLTFME(RIOB),B'00000100'                         03S0579
*           ELSE                                                03S0580
*             OLTFME=OFF;                                       03S0580
         B     @RC00578                                         03S0580
@RF00578 NI    OLTFME(RIOB),B'11111011'                         03S0580
*           IF SENDREX=ON THEN                                  03S0581
@RC00578 TM    SENDREX(RSEND),B'00010000'                       03S0581
         BNO   @RF00581                                         03S0581
*             OLTEX=ON;             /* SAVE ACTUAL RESPONSE FROM SEND
*                                      REQUEST FOR SECONDARY DEVICE  */
         OI    OLTEX(RIOB),B'00001000'                          03S0582
*           ELSE                                                03S0583
*             OLTEX=OFF;                                        03S0583
         B     @RC00581                                         03S0583
@RF00581 NI    OLTEX(RIOB),B'11110111'                          03S0583
*           RPIU=BASRPIU;           /* GET THE POINTER TO THE PIU    */
@RC00581 L     RPIU,BASRPIU(,ROLTCB)                            03S0584
*           RTTH=ADDR(PIUTH);       /* ALSO GET THE POINTER TO THE TH*/
         LR    RTTH,RPIU                                        03S0585
*           IF SENDREX=ON THEN                                  03S0586
         TM    SENDREX(RSEND),B'00010000'                       03S0586
         BNO   @RF00586                                         03S0586
*             DO;                   /* IS THIS A NEGATIVE RESPONSE   */
*               RPIU=ADDR(PIURU);   /* POINT PIU TO RU FIELD         */
         LA    @11,PIURU(,RPIU)                                 03S0588
         LR    RPIU,@11                                         03S0588
*               RFY                                             03S0589
*                 LTECB BASED(RPARM);                           03S0589
*               RPARM=BASRTEC;      /* SET UP TECB SENSE ADDRESS
*                                                            @YM08477*/
         L     RPARM,BASRTEC(,ROLTCB)                           03S0590
*               IEDPIU=LTCBSENS;    /* SET THE FOUR BYTES OF SENSE
*                                      INFORMATION IN THE RU         */
         MVI   IEDPIU+4(RPIU),C' '                              03S0591
         MVC   IEDPIU+5(8,RPIU),IEDPIU+4(RPIU)                  03S0591
         MVC   IEDPIU(4,RPIU),LTCBSENS(RPARM)                   03S0591
*               RFY                                             03S0592
*                 LTECB BASED(RLTCB);                           03S0592
*               TTHDCF=LRHLEN+LSENLEN;/* SET DATA COUNT OF SEVEN IN
*                                      TH DATA COUNT DATA            */
         MVC   TTHDCF(2,RTTH),@CH00583                          03S0593
*             END;                                              03S0594
*           ELSE                                                03S0595
*             TTHDCF=LRHLEN;        /* SET DATA COUNT OF THREE IN TH
*                                      DATA COUNT DATA               */
         B     @RC00586                                         03S0595
@RF00586 MVC   TTHDCF(2,RTTH),@CH00068                          03S0595
*           RWORK=ADDR(TOTWAWRK);   /* GET ADDRESS OF WORK AREA TO BE
*                                      USED BY POST/WAIT ROUTINE     */
@RC00586 LA    RWORK,TOTWAWRK(,ROLTCB)                          03S0596
*           RRESPL=TOTRESPL;        /* SET UP THE ADDRESS OF THE
*                                      RESPL                         */
         L     RRESPL,TOTRESPL(,ROLTCB)                         03S0597
*           RPARM=RPRF;             /* SET REGISTER 1 TO BUFFER TO BE
*                                      POSTED                        */
         LR    RPARM,RPRF                                       03S0598
*           CALL POSTWAIT;          /* CALL IEDQWA TO POST OUTPUT
*                                      BUFFER AND REQUEST ELEMENT TO
*                                      TCAM                          */
         L     @15,RESPLRVT(,RRESPL)                            03S0599
         BALR  @14,@15                                          03S0599
*           RETCDE=RCGOOD;          /* GOOD RETURN CODE 00           */
         SLR   RETCDE,RETCDE                                    03S0600
*           TOTRTCOD=RETCDE;        /* SAVE RETURN CODE IN OLTCB     */
         STC   RETCDE,TOTRTCOD(,ROLTCB)                         03S0601
*           RFY                                                 03S0602
*             RPARM UNRSTD;         /* UNRESTRICT REGISTER 1         */
*           RFY                                                 03S0603
*             RPRF UNRSTD;          /* UNRESTRICT REGISTER 8         */
*           RFY                                                 03S0604
*             RWORK UNRSTD;         /* UNRESTRICT REGISTER 10        */
*         END;                                                  02S0605
*     END;                                                      02S0606
@RC00413 DS    0H                                               02S0607
*                                                               03S0607
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE    */
*   /* THAT WAS ALTERED BY THE MODULE PROCEDURE STATEMENT.           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0607
*   RFY                                                         03S0607
*     RWORK RSTD;                                               03S0607
@RC00408 DS    0H                                               03S0608
*   IF $TRACE=ON×$RETMASK^=BZERO THEN                           03S0608
         TM    $TRACE(ROLTCB),B'00000100'                       03S0608
         BO    @RT00608                                         03S0608
         CLI   $RETMASK(ROLTCB),X'00'                           03S0608
         BE    @RF00608                                         03S0608
@RT00608 DS    0H                                               03S0609
*     DO;                           /* WAS TRACE FUNCTION SPECIFIED
*                                      OR A BAD RETURN CODE          */
*       GEN REFS(RSAVE,RBRNCH,RRETURN,TOTRESPL,RESPLM2,ROLTCB,RBASE)
*           NOSETS;                                             03S0610
        L RSAVE,4(RSAVE)        RESTORE R13
        L RRETURN,12(RSAVE)      RESTORE R14
        USING TOTOLTCB,ROLTCB
        L RBRNCH,TOTRESPL      GET RESPL ADDRESS
        DROP ROLTCB
        USING IEDRESPL,RBRNCH    SET RESPL ADDRESSABILITY
        L RBRNCH,RESPLM2       GET TRACE ROUTINE ADDRESS
        LM ROLTCB,RBASE,28(RSAVE) RESTORE REGISTERS
        BR RBRNCH              EXIT TO IEDQWM2
        DROP RBRNCH
*     END;                                                      03S0611
*   ELSE                                                        03S0612
*     DO;                                                       03S0612
         B     @RC00608                                         03S0612
@RF00608 DS    0H                                               03S0613
*       GEN REFS(RSAVE,RBRNCH,RRETURN,RWORK,RBASE,TOTRTCOD) NOSETS;
        L RSAVE,4(RSAVE)        RESTORE R13
        L RRETURN,12(RSAVE)     RESTORE R14
        LM RWORK,RBASE,20(RSAVE) RESTORE REGISTERS
        SLR RETCDE,RETCDE        CLEAR RETURN CODE REGISTER
        IC  RETCDE,TOTRTCOD(,ROLTCB) GET RETURN CODE FROM OLTCB
        BR RRETURN              RETURN TO IEDQWA
*     END;                                                      03S0614
*   RFY                                                         03S0615
*     RWORK UNRSTD;                                             03S0615
*   RFY                                                         02S0616
*     RPARM UNRSTD;                                             02S0616
*                                                               02S0617
*   /*****************************************************************/
*   /*                                                               */
*   /* ERREXIT: THIS ROUTINE SETS UP THE ERROR MODULE ID AND SETS THE*/
*   /* ERROR EXIT SWITCH                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0617
*ERREXIT:                                                       02S0617
*   PROC OPTIONS(RETREG,NOSAVE,NOSAVEAREA);                     02S0617
@EL00001 DS    0H                                               02S0617
@EF00001 DS    0H                                               02S0617
@ER00001 LM    @14,@12,12(@13)                                  02S0617
         BR    @14                                              02S0617
ERREXIT  DS    0H                                               02S0618
*   BASRRET=RRETURN;                /* SAVE RETURN REGISTER          */
         ST    RRETURN,BASRRET(,ROLTCB)                         02S0618
*   ERRSW=ON;                       /* SET ERROR SWITCH TO ONE       */
         OI    ERRSW,B'10000000'                                02S0619
*   TOTRTCOD=RETCDE;                /* PUT RETURN CODE INTO OLTCB    */
         STC   RETCDE,TOTRTCOD(,ROLTCB)                         02S0620
*   RRETURN=BASRRET;                /* SET UP RETURN REGISTER TO
*                                      RETURN                        */
         L     @11,BASRRET(,ROLTCB)                             02S0621
         LR    RRETURN,@11                                      02S0621
*   END ERREXIT;                                                02S0622
@EL00002 DS    0H                                               02S0622
@EF00002 DS    0H                                               02S0622
@ER00002 BR    @14                                              02S0622
*   END IEDQW25                                                 01S0623
*                                                               01S0623
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBINDD  )                                       */
*/*%INCLUDE SYSLIB  (TBNDD   )                                       */
*/*%INCLUDE SYSLIB  (TDCTD   )                                       */
*/*%INCLUDE SYSLIB  (IOBLOCKS)                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (OLTCB   )                                       */
*/*%INCLUDE SYSLIB  (TPIUD   )                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (RESPL   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTTCD   )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (INITIAL )                                       */
*/*%INCLUDE SYSUT5  (PRIRSEC )                                       */
*/*%INCLUDE SYSUT5  (SENDREQ )                                       */
*/*%INCLUDE SYSUT5  (SENDREC )                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (ERREXIT )                                       */
*                                                               01S0623
*       ;                                                       01S0623
@DATA    DS    0H
@CH00583 DC    H'7'
@SC02721 CLC   TESTDSN(0,@11),LCDSSMNM(RCDS)
@DATD    DSECT
         DS    0F
IEDQW25  CSECT
         DS    0F
@CF00062 DC    F'1'
@CF00068 DC    F'3'
@CH00068 EQU   @CF00068+2
@CF00047 DC    F'8'
@CF00037 DC    F'18'
@CF01567 DC    F'56'
@CF02719 DC    XL4'0000FFFF'
@CF02737 DC    BL4'00000000000000000000000000010000'
@DATD    DSECT
         DS    0D
ERRSW    DS    BL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEDQW25  CSECT
         NOPR  ((@ENDDATD-@DATD)/561*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CB02597 DC    X'00000000000000000010800000'
         DS    CL1
PATCH    DC    XL50'0'
REQKEY   DC    X'E0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RBIN     EQU   @03
RBND     EQU   @03
LCBXPTR  EQU   @05
RTRM     EQU   @01
RAVT     EQU   @04
RLCB     EQU   @06
RSCB     EQU   @03
RTTCP    EQU   @06
RDCT     EQU   @06
RPLMVP   EQU   @06
RPRF     EQU   @08
RRESPL   EQU   @06
RIOB     EQU   @03
RPIU     EQU   @03
RTTH     EQU   @06
RTRH     EQU   @06
ROLTCB   EQU   @02
RWORK    EQU   @00
RPARM    EQU   @01
RSEND    EQU   @01
RTECB    EQU   @03
RLTCB    EQU   @03
RSAVT    EQU   @06
RCDS     EQU   @08
ROLTWK   EQU   @10
RBASE    EQU   @12
RSAVE    EQU   @13
RRETURN  EQU   @14
RBRNCH   EQU   @15
RETCDE   EQU   @15
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTCSTCS EQU   IEDQAVTD+328
@NM00003 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTDCTLN EQU   IEDQAVTD+1072
AVTBIT4  EQU   IEDQAVTD+1136
@NM00085 EQU   IEDQAVTD+1232
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTMVBF EQU   IEDNSVTD+160
SAVTDFCO EQU   IEDNSVTD+200
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTNETF EQU   IEDNSVTD+324
SAVTCDRV EQU   IEDNSVTD+332
IEDBIN   EQU   0
BINNAME  EQU   IEDBIN
BINBUD   EQU   0
BINBLD   EQU   0
IEDBNDD  EQU   0
BNDPRIM  EQU   IEDBNDD+4
BNDSECD  EQU   IEDBNDD+5
BNDCOMM1 EQU   IEDBNDD+6
BNDCOMM2 EQU   IEDBNDD+7
BNDSMSRU EQU   IEDBNDD+10
BNDPMSRU EQU   IEDBNDD+11
BNDLUPFL EQU   IEDBNDD+14
BNDPSCH  EQU   IEDBNDD+15
IEDDCT   EQU   0
DCTBYTE1 EQU   IEDDCT+1
DCTBYTE2 EQU   IEDDCT+2
DCTBYTE3 EQU   IEDDCT+3
DCTBYTE4 EQU   IEDDCT+4
DCTBYTE5 EQU   IEDDCT+5
IOBLOCKS EQU   0
OLTTCOFF EQU   IOBLOCKS+6
OLTFLAG1 EQU   IOBLOCKS+26
OLTPRSC  EQU   OLTFLAG1
OLTEX    EQU   OLTFLAG1
OLTFME   EQU   OLTFLAG1
OLTEN    EQU   OLTFLAG1
OLTFLAG2 EQU   IOBLOCKS+46
OLTSN    EQU   IOBLOCKS+48
IOB      EQU   IOBLOCKS+56
IOBECBAD EQU   IOB+4
IOBCSW   EQU   IOB+8
IOBCCWAD EQU   IOB+16
IOBFLG4  EQU   IOB+36
DCB      EQU   IOBLOCKS+100
OLTDEBA  EQU   DCB+44
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
@NM00146 EQU   IEDQLCB+60
LCBINCAM EQU   @NM00146
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBMSGFM EQU   IEDQLCB+92
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBERMSK EQU   LCBOBRCH
LCBNXMOD EQU   LCBERMSK
LCBSTAT7 EQU   LCBNXMOD
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLPTR EQU   0
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
TOTOLTCB EQU   0
$SCTTBLE EQU   TOTOLTCB
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$TRACE   EQU   $OLTFLGS
$TOTFLG1 EQU   $SCTTBLE+38
$CTEQTT  EQU   $TOTFLG1
$RETMASK EQU   $SCTTBLE+70
TOTSAVE1 EQU   TOTOLTCB+120
TOTSAVE2 EQU   TOTOLTCB+192
TOTSAVE5 EQU   TOTOLTCB+408
TOTSAVE6 EQU   TOTOLTCB+480
TOTSRENT EQU   TOTOLTCB+576
TOTCTENT EQU   TOTOLTCB+584
TOTCTFLG EQU   TOTCTENT+22
TOTCTDFL EQU   TOTOLTCB+624
TOTCUTST EQU   TOTOLTCB+628
TOTCUFLG EQU   TOTCUTST
TOTPLIST EQU   TOTOLTCB+664
TOTOECBA EQU   TOTPLIST+12
TOTOFLG  EQU   TOTOECBA
TOTAPENT EQU   TOTOLTCB+736
TOTAPFLG EQU   TOTAPENT+22
TOTAPDFL EQU   TOTOLTCB+767
TOTOLTPL EQU   TOTOLTCB+820
TOTWTORP EQU   TOTOLTCB+832
TOTWTOPL EQU   TOTOLTCB+840
TOTRTCOD EQU   TOTOLTCB+1010
TOTPLNKQ EQU   TOTOLTCB+1012
TOTWKSPC EQU   TOTOLTCB+1024
TOTAVTPT EQU   TOTOLTCB+1172
TOTRESPL EQU   TOTOLTCB+1180
TOTFLG01 EQU   TOTOLTCB+1184
TOTAPTST EQU   TOTFLG01
TOTFLG02 EQU   TOTOLTCB+1185
TOTFLG03 EQU   TOTOLTCB+1186
TOTFLG04 EQU   TOTOLTCB+1187
TOTFLG05 EQU   TOTOLTCB+1188
TOTFLG06 EQU   TOTOLTCB+1189
TOTFLG07 EQU   TOTOLTCB+1190
TOTFLG08 EQU   TOTOLTCB+1191
TOTFLG09 EQU   TOTOLTCB+1192
TOTFLG10 EQU   TOTOLTCB+1193
TOTTTBEL EQU   TOTOLTCB+1194
TOTPRECB EQU   TOTOLTCB+1316
TOTPRIBK EQU   TOTPRECB
TOTPRENT EQU   TOTOLTCB+1320
TOTTNTPR EQU   TOTPRENT+16
TOTPRFLG EQU   TOTPRENT+22
TOTPRSN  EQU   TOTOLTCB+1364
TOTPRSEQ EQU   TOTPRSN+2
TOTPRDCB EQU   TOTOLTCB+1416
TOTSCECB EQU   TOTOLTCB+1488
TOTSCIBK EQU   TOTSCECB
TOTSCENT EQU   TOTOLTCB+1492
TOTSRTNT EQU   TOTSCENT+16
TOTSCFLG EQU   TOTSCENT+22
TOTSCSN  EQU   TOTOLTCB+1536
TOTSCSEQ EQU   TOTSCSN+2
TOTSCDCB EQU   TOTOLTCB+1588
TOTCROLT EQU   TOTOLTCB+1660
TOTTDTBL EQU   TOTOLTCB+1748
@NM00232 EQU   TOTTDTBL
TOTWAWRK EQU   TOTOLTCB+1824
TOTWOWRK EQU   TOTOLTCB+1904
TOTSERV  EQU   TOTOLTCB+2096
OLTCBPTR EQU   0
IEDPIU   EQU   0
PIUTH    EQU   IEDPIU
PIURH    EQU   IEDPIU+10
PIUEND   EQU   IEDPIU+13
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLGS EQU   IEDPLMV+18
PLMVFLG1 EQU   PLMVFLGS
PLMVSCTG EQU   PLMVFLG1
PLMVFLG2 EQU   PLMVFLGS+1
IEDPLMVP EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFTI0   EQU   PRFTIC+1
PRFVTCHK EQU   PRFTI0+2
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
PRFLCB   EQU   IEDQPRF+13
PRFSRCSZ EQU   IEDQPRF+16
PRFSRCE  EQU   PRFSRCSZ
PRFSIZE  EQU   PRFSRCSZ+2
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFLU1TT EQU   PRFXTRA+1
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFLU2TT EQU   PRFNTXT+1
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
PRFDEST  EQU   IEDQPRF+40
IEDQPPTR EQU   0
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
PRF1RULN EQU   PRF1SEQP+2
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2TNTI EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2WD2  EQU   IEDPF2+4
PRF2SEQP EQU   PRF2WD2
IEDRESPL EQU   0
RESOBQCB EQU   IEDRESPL+12
RESFLAGS EQU   IEDRESPL+49
RESQHBL  EQU   IEDRESPL+60
RESPLRVT EQU   IEDRESPL+76
RESABUF  EQU   IEDRESPL+80
RESMHSRC EQU   IEDRESPL+88
RESPLADR EQU   IEDRESPL+96
RESPLAC  EQU   RESPLADR+44
RESPL42  EQU   RESPLADR+56
RESPLM2  EQU   RESPLADR+68
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHTYPE  EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHEC    EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHDR1   EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHBYTE2 EQU   IEDRH+2
TRHBB    EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBDESTQ EQU   IEDQSCB+1
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDQSPTR EQU   0
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHFTYPE EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHEFI   EQU   TTHBYTE0
TTHBYTE1 EQU   IEDTH+1
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMINDEX EQU   IEDNTRM
TRMCOHTG EQU   IEDNTRM+2
TRMBYTE6 EQU   TRMCOHTG
TRMCDF0  EQU   TRMBYTE6
TRMBYTE5 EQU   TRMCOHTG+1
TRMBYTE4 EQU   IEDNTRM+4
TRMBYTE3 EQU   IEDNTRM+5
TRMBYTE2 EQU   IEDNTRM+6
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+7
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+10
TRMNOWCD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+11
TRMLTRAC EQU   TRMSIBPT
TRMRLMCT EQU   IEDNTRM+14
TRMLGBST EQU   TRMRLMCT
TRMTYPE  EQU   IEDNTRM+15
IEDQTRM  EQU   IEDTRM+18
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMRSTRT EQU   TRMDESTQ+2
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMSESCT EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMPLIM  EQU   TLISTEN+1
TRMALTD  EQU   IEDQTRM+8
TRMPRILK EQU   TRMALTD
TRMDEVFL EQU   IEDQTRM+10
TRMADDC  EQU   TRMDEVFL
TRMNCPI  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMSIO   EQU   TRMSTAT
TRMOWNER EQU   TRMSIO
TRMCHCIN EQU   IEDQTRM+16
IEDTTCD  EQU   0
IEDTTCP  EQU   0
IEDTTCPL EQU   0
TTCSVCPL EQU   IEDTTCPL
TTCSVCW1 EQU   TTCSVCPL
TTCSVCW2 EQU   TTCSVCPL+4
IEDTTCFD EQU   0
IEDTTCQB EQU   0
TTCQCB   EQU   IEDTTCQB
TTCSCB   EQU   IEDTTCQB+12
IEDQTNT  EQU   0
IEDMVBFR EQU   0
ALLOCBUF EQU   0
POSTWAIT EQU   0
SENDMAP  EQU   0
SENDTCB  EQU   SENDMAP+4
SENDCDS  EQU   SENDMAP+8
SENDARA  EQU   SENDMAP+12
SENDRLN  EQU   SENDMAP+16
SENDFLG  EQU   SENDMAP+18
SENDBBKT EQU   SENDFLG
SENDEBKT EQU   SENDFLG
SENDRFME EQU   SENDFLG
SENDREX  EQU   SENDFLG
SENDCDSL EQU   SENDFLG
SENDSTPE EQU   SENDFLG
SENDCCMD EQU   SENDFLG+1
SENDCREQ EQU   SENDFLG+1
TESTDSN  EQU   0
TTECB    EQU   0
TECBFDCT EQU   TTECB
TECBFDLN EQU   TTECB+1
TECBSNLN EQU   TTECB+2
TECBSNCT EQU   TTECB+5
TECBSNOC EQU   TTECB+6
TECBFD01 EQU   TTECB+8
LTECB    EQU   0
LTCBSENS EQU   LTECB+3
LTCBRESP EQU   LTECB+7
LTCBRTPE EQU   LTECB+10
LTCBBRCH EQU   LTECB+11
LTCBALT  EQU   LTCBBRCH
LTCBCHN  EQU   LTECB+12
LTCBFIR  EQU   LTCBCHN
LTCBLAST EQU   LTCBCHN
LTCBONLY EQU   LTCBCHN
LCDS     EQU   0
LCDSFBTE EQU   LCDS+5
LCDSSMNM EQU   LCDS+12
SENDBNDA EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBRHSV  EQU   LCBRSPIN+2
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00168 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
PIURU    EQU   PIUEND
@NM00247 EQU   PRFSRCSZ
PRFSHDR  EQU   IEDQPRF+42
TRMDIALQ EQU   TRMPLIM
@NM00277 EQU   TRMSTATE
TRMCDFD0 EQU   TRMBYTE5
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMLU1   EQU   TRMBYTE4
TRMLINK1 EQU   TRMBYTE4
TRMDCONS EQU   TRMLINK1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMTDIFF EQU   TRMLU
TRMCDMGR EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
REQELEM  EQU   TOTWOWRK
REQQCB   EQU   REQELEM
@NM00310 EQU   REQELEM+4
REQPRI   EQU   @NM00310
REQLINK  EQU   @NM00310+1
BASSAVE  EQU   TOTSAVE2
BASNBUNT EQU   BASSAVE
BASRPAR  EQU   BASSAVE+4
BASRIOB  EQU   BASSAVE+8
BASRTRM  EQU   BASSAVE+12
BASRPRF  EQU   BASSAVE+20
BASRPIU  EQU   BASSAVE+24
BASRRET  EQU   BASSAVE+28
BASRTEC  EQU   BASSAVE+32
BASRLCB  EQU   BASSAVE+36
SCBRGSAV EQU   SCBEND
TRMOPT   EQU   IEDQTRM+20
TRMPOOLP EQU   TRMINSEQ
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
BASRBIN  EQU   BASSAVE+16
TRMLDISC EQU   TRMLINK
@NM00294 EQU   TRMLINK
TRMLALOC EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMCDLOG EQU   TRMCDMGR
@NM00293 EQU   TRMCDMGR
@NM00292 EQU   TRMCDMGR
@NM00291 EQU   TRMCDMGR
@NM00290 EQU   TRMCDMGR
@NM00289 EQU   TRMCDMGR
TRMBKDUP EQU   TRMCDMGR
TRMLULOG EQU   TRMLU
@NM00288 EQU   TRMLU
@NM00287 EQU   TRMLU
@NM00286 EQU   TRMLU
@NM00285 EQU   TRMLU
@NM00284 EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
TRMPDOCQ EQU   TRMPU
TRMPULOC EQU   TRMPU
TRMPDNAS EQU   TRMPU
TRMPALOC EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMNCPLK EQU   TRMLINK1
@NM00283 EQU   TRMLINK1
TRMDCONN EQU   TRMDCONS
TRMDCOP  EQU   TRMDCONS
TRMPMARY EQU   TRMLU1
@NM00282 EQU   TRMLU1
@NM00281 EQU   TRMLU1
TRMCDSRQ EQU   TRMLU1
TRMLSCVP EQU   TRMLU1
@NM00280 EQU   TRMLU1
@NM00279 EQU   TRMNCP1
TRMANS   EQU   TRMNCP1
TRMLINOP EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMINERR EQU   TRMCDFD0
TRMLUTM  EQU   TRMCDFD0
TRMLUIT  EQU   TRMCDFD0
TRMLUREQ EQU   TRMCDFD0
TRMCDPRE EQU   TRMCDFD0
TRMWASCD EQU   TRMCDFD0
TRMSRPFG EQU   TRMCDFD0
TRMSESRQ EQU   TRMCDFD0
@NM00278 EQU   @NM00277
TRMENTRY EQU   @NM00277
TRMSRPTR EQU   TRMDIALQ
PRFSVFLG EQU   @NM00247+3
PRFSVFFO EQU   @NM00247
@NM00175 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00174 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00173 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00172 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00171 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00170 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
LCBSIBPT EQU   @NM00168+8
LCBSUSPT EQU   @NM00168+4
LCBNCPPT EQU   @NM00168+1
@NM00169 EQU   @NM00168
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00167 EQU   LCBRSPFG
LCBIMRSP EQU   LCBRSPFG
LCBPRSPO EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00166 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00165 EQU   LCBCSWU1
@NM00164 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBPACRS EQU   LCBRHSV
@NM00163 EQU   LCBRHSV
LCBSNS0  EQU   LCBRSPIN+1
@NM00162 EQU   LCBRSPIN
LCDSFLGS EQU   LCDS+9
LCDSBTEC EQU   LCDS+8
LCDSSTPE EQU   LCDS+7
LCDSCLSS EQU   LCDS+6
LCDSTRMF EQU   LCDS+4
LCDSUNTA EQU   LCDS
LTCBSEQN EQU   LTECB+16
LTCBCTL  EQU   LTECB+13
@NM00309 EQU   LTCBCHN
LTCBMID  EQU   LTCBCHN
@NM00308 EQU   LTCBBRCH
LTCBREQ  EQU   LTCBBRCH
LTCBCMD  EQU   LTCBBRCH
LTCBEB   EQU   LTCBBRCH
LTCBBB   EQU   LTCBBRCH
@NM00307 EQU   LTCBRTPE
LTCBRSP  EQU   LTCBRTPE
@NM00306 EQU   LTCBRTPE
LTCBLORR EQU   LTECB+8
@NM00305 EQU   LTCBRESP
LTCBFME  EQU   LTCBRESP
LTCBEX   EQU   LTCBRESP
@NM00304 EQU   LTCBRESP
LTCBUSER EQU   LTCBSENS+2
LTCBSSMD EQU   LTCBSENS+1
LTCBSYSS EQU   LTCBSENS
@NM00303 EQU   LTECB
TECBEVOC EQU   TTECB+7
TECBFLGS EQU   TTECB+4
@NM00302 EQU   SENDFLG+1
SENDFMHR EQU   SENDFLG
@NM00301 EQU   SENDFLG
@NM00300 EQU   SENDMAP+2
@NM00299 EQU   SENDMAP+1
@NM00298 EQU   SENDMAP
TTCQSTCB EQU   TTCQCB+8
TTCQBECB EQU   TTCQCB+4
TTCQBELC EQU   TTCQCB+1
TTCQBFLG EQU   TTCQCB
@NM00297 EQU   IEDTTCFD
@NM00296 EQU   IEDTTCPL+8
TTCLAST  EQU   TTCSVCW2
TTCFIRST EQU   TTCSVCW1+1
TTCPCODE EQU   TTCSVCW1
@NM00295 EQU   IEDTTCD
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMNADDR EQU   TRMOWNER
@NM00276 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
@NM00275 EQU   TRMNCPI
TRMRNTRM EQU   TRMDEVFL+1
@NM00274 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMSCV   EQU   TRMADDC
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMSTEAL EQU   TRMPRILK
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TRMSESCT
TRMVERIF EQU   TRMRSTRT
@NM00273 EQU   TRMRSTRT
@NM00272 EQU   TRMDESTQ
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+16
TRMPRIME EQU   TRMLGBST
TRMOWNR  EQU   TRMLTRAC+1
TRMGPCNT EQU   TRMLTRAC
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMACDC  EQU   TRMNOWCD
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+8
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
@NM00271 EQU   TRMCDF0
TRMPURGE EQU   TRMCDF0
TRMCDST  EQU   TRMINDEX
TTHTAG2  EQU   TTHTAG+1
@NM00270 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
@NM00269 EQU   TTHBYTE0
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBSCHDR EQU   SCBCLSEG
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00268 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00267 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00266 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBFMM  EQU   SCBQTYPE
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00265 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
@NM00264 EQU   TRHBYTE2
@NM00263 EQU   TRHBYTE2
@NM00262 EQU   TRHBYTE2
@NM00261 EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
TRHQRI   EQU   TRHBYTE1
@NM00260 EQU   TRHBYTE1
@NM00259 EQU   TRHBYTE1
@NM00258 EQU   TRHBYTE1
TRHFI    EQU   TRHBYTE0
@NM00257 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
RESAPDCB EQU   IEDRESPL+180
RESTLIB  EQU   IEDRESPL+176
RESPL33  EQU   RESPLADR+76
RESPL25  EQU   RESPLADR+72
RESPL47  EQU   RESPLADR+64
RESPL44  EQU   RESPLADR+60
RESPL43  EQU   RESPL42
RESPL16  EQU   RESPLADR+52
RESPL41  EQU   RESPLADR+48
RESPL21  EQU   RESPLAC
RESPL36  EQU   RESPLADR+40
RESPL28  EQU   RESPLADR+36
RESPL37  EQU   RESPLADR+32
RESPLP2  EQU   RESPLADR+28
RESPLP1  EQU   RESPLADR+24
RESPL39  EQU   RESPLADR+20
RESPLAA  EQU   RESPLADR+16
RESPL35  EQU   RESPLADR+12
RESPLAJ  EQU   RESPLADR+8
RESPLAB  EQU   RESPLADR+4
RESPLWO  EQU   RESPLADR
RESTOTMH EQU   IEDRESPL+92
RESMHNAT EQU   IEDRESPL+90
RESFBUF  EQU   IEDRESPL+84
RESADDAF EQU   RESQHBL+12
RESADDND EQU   RESQHBL+8
RESREMEL EQU   RESQHBL+4
RESREMFR EQU   RESQHBL
RESTNTPT EQU   IEDRESPL+57
@NM00256 EQU   IEDRESPL+56
RESTRMQ  EQU   IEDRESPL+52
@NM00255 EQU   IEDRESPL+50
@NM00254 EQU   RESFLAGS
RESFIRST EQU   RESFLAGS
RESINIT  EQU   RESFLAGS
RESWBFNC EQU   IEDRESPL+48
RESSMGRA EQU   IEDRESPL+44
RESSTAEA EQU   IEDRESPL+40
RESETXRA EQU   IEDRESPL+36
RESDMTTE EQU   IEDRESPL+33
RESTNTCT EQU   IEDRESPL+32
RESEFQCB EQU   IEDRESPL+28
RESBKAVL EQU   IEDRESPL+26
RESBKTOT EQU   IEDRESPL+24
RESTTLST EQU   IEDRESPL+20
RESOBBKW EQU   RESOBQCB+4
RESOBFWD EQU   RESOBQCB
RESTECB1 EQU   IEDRESPL+8
@NM00253 EQU   IEDRESPL+5
@NM00252 EQU   IEDRESPL+4
RESTECBS EQU   IEDRESPL
@NM00251 EQU   IEDPF2+1
@NM00250 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF1RCDE EQU   PRF1RULN
PRF1TAG2 EQU   PRF1SQID+1
@NM00249 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00248 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFLU2TT
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00246 EQU   PRFSCAN
PRFEOB   EQU   PRFLU1TT
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
@NM00245 EQU   PRFVTCHK
PRFITSET EQU   PRFVTCHK
@NM00244 EQU   PRFVTCHK
@NM00243 EQU   PRFTI0
@NM00242 EQU   PRFTICC
@NM00241 EQU   PRFTICC
@NM00240 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00239 EQU   PRFTICC
@NM00238 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00237 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
PLMVUNCA EQU   IEDPLMV+20
@NM00236 EQU   PLMVFLG1
PLMVTSKP EQU   PLMVFLG1
PLMVSSKP EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
PLMVUNCF EQU   PLMVFLG1
TOTOBEND EQU   TOTOLTCB+2100
@NM00235 EQU   TOTOLTCB+2044
TOTOLTEN EQU   TOTOLTCB+1820
TOTAPNAM EQU   TOTOLTCB+1812
TOTGRABP EQU   TOTOLTCB+1808
TOTWAITI EQU   TOTOLTCB+1800
@NM00234 EQU   TOTOLTCB+1798
TOTTLCNT EQU   TOTOLTCB+1796
TOTECBPT EQU   TOTOLTCB+1792
TOTWECBA EQU   TOTOLTCB+1788
TOTTDEND EQU   TOTOLTCB+1788
@NM00233 EQU   TOTTDTBL+1
TOTTSWPM EQU   @NM00232
TOTTDIAC EQU   @NM00232
TOTTDTHD EQU   @NM00232
TOTTDLST EQU   @NM00232
TOTTDORN EQU   @NM00232
TOTTDGRB EQU   @NM00232
TOTTDLIN EQU   @NM00232
TOTTDTRM EQU   @NM00232
@NM00231 EQU   TOTOLTCB+1710
TOTCONND EQU   TOTOLTCB+1710
TOTCONAP EQU   TOTOLTCB+1709
TOTCONCT EQU   TOTOLTCB+1708
TOTCONTB EQU   TOTOLTCB+1698
TOTOLTTE EQU   TOTOLTCB+1698
TOTOLTTB EQU   TOTOLTCB+1668
TOTTRMND EQU   TOTCROLT
TOTSCDEB EQU   TOTSCDCB+44
@NM00230 EQU   TOTSCDCB
TOTSCIOB EQU   TOTOLTCB+1544
TOTSTECB EQU   TOTOLTCB+1540
@NM00229 EQU   TOTSCSN
@NM00228 EQU   TOTOLTCB+1535
TOTSFLGS EQU   TOTOLTCB+1534
TOTSDTCT EQU   TOTOLTCB+1532
TOTSDTBF EQU   TOTOLTCB+1528
TOTSCBUF EQU   TOTSCENT+32
TOTSCCCW EQU   TOTSCENT+28
TOTSCQCB EQU   TOTSCENT+24
@NM00227 EQU   TOTSCENT+23
@NM00226 EQU   TOTSCFLG
TOTSEXNM EQU   TOTSCFLG
TOTSCFME EQU   TOTSCFLG
TOTSCEX  EQU   TOTSCFLG
TOTSUNRD EQU   TOTSCFLG
TOTSPRSC EQU   TOTSCFLG
TOTSCLU  EQU   TOTSCFLG
TOTSCTAS EQU   TOTSCFLG
TOTSCLEN EQU   TOTSCENT+20
TOTSDTNT EQU   TOTSCENT+12
TOTSCLCB EQU   TOTSCENT+9
TOTSCRLN EQU   TOTSCENT+8
TOTSRSID EQU   TOTSCENT+6
TOTSCOFF EQU   TOTSCENT+4
TOTNCOFF EQU   TOTSCENT+2
TOTSCUCB EQU   TOTSCENT
TOTPRDEB EQU   TOTPRDCB+44
@NM00225 EQU   TOTPRDCB
TOTPRIOB EQU   TOTOLTCB+1372
TOTPTECB EQU   TOTOLTCB+1368
@NM00224 EQU   TOTPRSN
@NM00223 EQU   TOTOLTCB+1363
TOTPFLGS EQU   TOTOLTCB+1362
TOTPDTCT EQU   TOTOLTCB+1360
TOTPDTBF EQU   TOTOLTCB+1356
TOTPRBUF EQU   TOTPRENT+32
TOTPRCCW EQU   TOTPRENT+28
TOTPRQCB EQU   TOTPRENT+24
@NM00222 EQU   TOTPRENT+23
@NM00221 EQU   TOTPRFLG
TOTPEXNM EQU   TOTPRFLG
TOTPRFME EQU   TOTPRFLG
TOTPREX  EQU   TOTPRFLG
TOTPUNRD EQU   TOTPRFLG
TOTPPRSC EQU   TOTPRFLG
TOTPRLU  EQU   TOTPRFLG
TOTPRTAS EQU   TOTPRFLG
TOTPRLEN EQU   TOTPRENT+20
TOTPDTNT EQU   TOTPRENT+12
TOTPRLCB EQU   TOTPRENT+9
TOTPRRLN EQU   TOTPRENT+8
TOTPRSID EQU   TOTPRENT+6
TOTPROFF EQU   TOTPRENT+4
TOTPCOFF EQU   TOTPRENT+2
TOTPRUCB EQU   TOTPRENT
TOTTRMBF EQU   TOTPRIBK
TOTPASS  EQU   TOTOLTCB+1252
TOTEXT   EQU   TOTOLTCB+1196
@NM00220 EQU   TOTOLTCB+1195
TOTOLTRS EQU   TOTFLG10
TOTOLTWT EQU   TOTFLG10
TOTOLTED EQU   TOTFLG10
TOTTNTRQ EQU   TOTFLG10
@NM00219 EQU   TOTFLG10
@NM00218 EQU   TOTFLG10
@NM00217 EQU   TOTFLG10
TOTTERMS EQU   TOTFLG10
TOTMACFT EQU   TOTFLG09
TOTPRECT EQU   TOTFLG09
TOTLNCON EQU   TOTFLG09
TOTNOBRK EQU   TOTFLG09
TOTAPTRM EQU   TOTFLG09
TOTCTCON EQU   TOTFLG09
TOTAPOUT EQU   TOTFLG09
TOTAPCON EQU   TOTFLG09
@NM00216 EQU   TOTFLG08
TOTFMCTL EQU   TOTFLG08
TOTMSSRC EQU   TOTFLG07
TOTMSPRT EQU   TOTFLG07
TOTMSREP EQU   TOTFLG07
TOTMSCEC EQU   TOTFLG07
@NM00215 EQU   TOTFLG07
@NM00214 EQU   TOTFLG07
TOTSECEX EQU   TOTFLG07
TOTPRIEX EQU   TOTFLG07
TOTNPERR EQU   TOTFLG06
TOTOTACT EQU   TOTFLG06
TOTCANCL EQU   TOTFLG06
TOTABEND EQU   TOTFLG06
TOTNCMFG EQU   TOTFLG06
TOTWACAN EQU   TOTFLG06
TOTCBOPN EQU   TOTFLG06
TOTOTERM EQU   TOTFLG06
TOTNDMSG EQU   TOTFLG05
TOTEXIOF EQU   TOTFLG05
TOTTMOUT EQU   TOTFLG05
TOTSRCON EQU   TOTFLG05
TOTSRCE  EQU   TOTFLG05
TOTREPLY EQU   TOTFLG05
TOTCECOM EQU   TOTFLG05
TOTPRINT EQU   TOTFLG05
TOTTTSWT EQU   TOTFLG04
@NM00213 EQU   TOTFLG04
@NM00212 EQU   TOTFLG04
TOTSCCTF EQU   TOTFLG04
TOTPRCTF EQU   TOTFLG04
TOTCLOSE EQU   TOTFLG04
TOTDTCHD EQU   TOTFLG04
TOTNUMDV EQU   TOTFLG04
@NM00211 EQU   TOTFLG03
TOTREPEX EQU   TOTFLG03
TOTTSINC EQU   TOTFLG03
TOTIMNCP EQU   TOTFLG03
TOTOPTER EQU   TOTFLG03
TOTTSTER EQU   TOTFLG03
TOTTDFER EQU   TOTFLG03
TOTAPOER EQU   TOTFLG03
TOTDEVRN EQU   TOTFLG02
TOTCONCU EQU   TOTFLG02
TOTCONMD EQU   TOTFLG02
TOTCHKSZ EQU   TOTFLG02
TOTOLTRQ EQU   TOTFLG02
TOTDEV0X EQU   TOTFLG02
TOTTSST  EQU   TOTFLG02
TOTTTSPE EQU   TOTFLG02
TOTCLNED EQU   TOTFLG01
TOTCLNST EQU   TOTFLG01
TOTPRMPT EQU   TOTFLG01
TOTEXIT  EQU   TOTFLG01
TOTIPLCU EQU   TOTFLG01
TOTCONFG EQU   TOTFLG01
TOTFINAL EQU   TOTFLG01
TOTSTAE  EQU   TOTOLTCB+1176
@NM00210 EQU   TOTOLTCB+1152
TOTWKEND EQU   TOTOLTCB+1152
@NM00209 EQU   TOTOLTCB+1020
TOTPLBKW EQU   TOTPLNKQ+4
TOTPLFWD EQU   TOTPLNKQ
@NM00208 EQU   TOTOLTCB+1011
TOTOLTID EQU   TOTOLTCB+1008
TOTINBUF EQU   TOTWTOPL+88
TOTOTBUF EQU   TOTWTOPL+4
@NM00207 EQU   TOTWTOPL+2
TOTOTCNT EQU   TOTWTOPL+1
@NM00206 EQU   TOTWTOPL
TOTINECB EQU   TOTWTORP+4
TOTINADR EQU   TOTWTORP+1
TOTINCNT EQU   TOTWTORP
TOT#TBLE EQU   TOTOLTPL+8
@NM00205 EQU   TOTOLTPL
TOTCMPCD EQU   TOTOLTCB+816
TOTTCBAD EQU   TOTOLTCB+812
TOTRESSV EQU   TOTOLTCB+808
TOTOTECB EQU   TOTOLTCB+804
TOTOLTMQ EQU   TOTOLTCB+800
TOTPARML EQU   TOTOLTCB+796
TOTPDECB EQU   TOTOLTCB+776
TOTAPDCB EQU   TOTOLTCB+772
@NM00204 EQU   TOTOLTCB+768
@NM00203 EQU   TOTAPDFL
TOTAPIAC EQU   TOTAPDFL
TOTAPHD  EQU   TOTAPDFL
TOTAPLST EQU   TOTAPDFL
TOTAPGP  EQU   TOTAPDFL
@NM00202 EQU   TOTAPDFL
TOTAPLIN EQU   TOTAPDFL
TOTAPTER EQU   TOTAPDFL
TOTAPRNL EQU   TOTAPENT+23
TOTAPEND EQU   TOTAPENT+23
TOTAPSWD EQU   TOTAPFLG
@NM00201 EQU   TOTAPFLG
TOTAPORN EQU   TOTAPFLG
TOTAPASN EQU   TOTAPFLG
TOTAPTLN EQU   TOTAPENT+20
TOTARTNT EQU   TOTAPENT+16
TOTAPTNT EQU   TOTAPENT+12
TOTAPLCB EQU   TOTAPENT+9
TOTAPRLN EQU   TOTAPENT+8
TOTARSID EQU   TOTAPENT+6
TOTAROFF EQU   TOTAPENT+4
TOTAPOFF EQU   TOTAPENT+2
TOTAPUCB EQU   TOTAPENT
TOTUSCOR EQU   TOTOLTCB+732
TOTOPCLN EQU   TOTOLTCB+728
@NM00200 EQU   TOTOLTCB+690
TOTOALTT EQU   TOTOLTCB+688
TOTOLADR EQU   TOTPLIST+16
@NM00199 EQU   TOTOECBA+1
@NM00198 EQU   TOTOFLG
TOTOATTC EQU   TOTOFLG
TOTORTCD EQU   TOTPLIST+11
TOTORLN  EQU   TOTPLIST+10
TOTOELNG EQU   TOTPLIST+9
TOTOVBCD EQU   TOTPLIST+8
TOTOLINK EQU   TOTPLIST+5
TOTOPRI  EQU   TOTPLIST+4
TOTOQCBA EQU   TOTPLIST+1
TOTOKEY  EQU   TOTPLIST
TOTWOOPC EQU   TOTOLTCB+640
TOTCURS4 EQU   TOTCUTST+11
TOTCURS3 EQU   TOTCUTST+10
TOTCURS2 EQU   TOTCUTST+9
TOTCURS1 EQU   TOTCUTST+8
TOTCUSAV EQU   TOTCUTST+4
TOTCUCUU EQU   TOTCUTST+2
TOTCU#AD EQU   TOTCUTST+1
@NM00197 EQU   TOTCUFLG
TOTCUCUP EQU   TOTCUFLG
TOTCUDON EQU   TOTCUFLG
@NM00196 EQU   TOTOLTCB+625
@NM00195 EQU   TOTCTDFL
TOTCTIAC EQU   TOTCTDFL
TOTCTHD  EQU   TOTCTDFL
TOTCTLST EQU   TOTCTDFL
TOTCTGP  EQU   TOTCTDFL
@NM00194 EQU   TOTCTDFL
TOTCTLIN EQU   TOTCTDFL
TOTCTTRM EQU   TOTCTDFL
TOTCTNAM EQU   TOTCTENT+31
TOTCTRNL EQU   TOTCTENT+23
TOTCTEND EQU   TOTCTENT+23
TOTCTSWD EQU   TOTCTFLG
@NM00193 EQU   TOTCTFLG
TOTCTORN EQU   TOTCTFLG
TOTCTASN EQU   TOTCTFLG
TOTCTTLN EQU   TOTCTENT+20
TOTCRTNT EQU   TOTCTENT+16
TOTCTTNT EQU   TOTCTENT+12
TOTCTLCB EQU   TOTCTENT+9
TOTCTRLN EQU   TOTCTENT+8
TOTCRSID EQU   TOTCTENT+6
TOTCROFF EQU   TOTCTENT+4
TOTCTOFF EQU   TOTCTENT+2
TOTCTUCB EQU   TOTCTENT
TOTSRLCB EQU   TOTSRENT+4
@NM00192 EQU   TOTSRENT+2
TOTSROFF EQU   TOTSRENT
TOTMMSPC EQU   TOTOLTCB+572
TOTBKRQD EQU   TOTOLTCB+570
TOTBKASN EQU   TOTOLTCB+568
TOTSVEND EQU   TOTOLTCB+568
TOTWOSV4 EQU   TOTOLTCB+564
TOTWOSV3 EQU   TOTOLTCB+560
TOTWOSV2 EQU   TOTOLTCB+556
TOTWOSV1 EQU   TOTOLTCB+552
@NM00191 EQU   TOTSAVE5+68
TOTOLTEP EQU   TOTSAVE5+64
@NM00190 EQU   TOTSAVE5+48
TOTOLTPT EQU   TOTSAVE5+44
@NM00189 EQU   TOTSAVE5
TOTSAVE4 EQU   TOTOLTCB+336
TOTSAVE3 EQU   TOTOLTCB+264
TOTSMGRT EQU   TOTOLTCB+116
@NM00188 EQU   $SCTTBLE+92
$EXT     EQU   $SCTTBLE+88
$PASS    EQU   $SCTTBLE+84
$TABLE   EQU   $SCTTBLE+80
$MSGIDAC EQU   $SCTTBLE+78
@NM00187 EQU   $SCTTBLE+72
@NM00186 EQU   $SCTTBLE+71
$R249255 EQU   $SCTTBLE+69
$R241248 EQU   $SCTTBLE+68
$R233240 EQU   $SCTTBLE+67
$R225232 EQU   $SCTTBLE+66
$R217224 EQU   $SCTTBLE+65
$R209216 EQU   $SCTTBLE+64
$R201208 EQU   $SCTTBLE+63
$R193200 EQU   $SCTTBLE+62
$R185192 EQU   $SCTTBLE+61
$R177184 EQU   $SCTTBLE+60
$R169176 EQU   $SCTTBLE+59
$R161168 EQU   $SCTTBLE+58
$R153160 EQU   $SCTTBLE+57
$R145152 EQU   $SCTTBLE+56
$R137144 EQU   $SCTTBLE+55
$R129136 EQU   $SCTTBLE+54
$R121128 EQU   $SCTTBLE+53
$R113120 EQU   $SCTTBLE+52
$R105112 EQU   $SCTTBLE+51
$R097104 EQU   $SCTTBLE+50
$R089096 EQU   $SCTTBLE+49
$R081088 EQU   $SCTTBLE+48
$R073080 EQU   $SCTTBLE+47
$R065072 EQU   $SCTTBLE+46
$R057064 EQU   $SCTTBLE+45
$R049056 EQU   $SCTTBLE+44
$R041048 EQU   $SCTTBLE+43
$R033040 EQU   $SCTTBLE+42
$R025032 EQU   $SCTTBLE+41
$R017024 EQU   $SCTTBLE+40
$TOTFLG2 EQU   $SCTTBLE+39
@NM00185 EQU   $TOTFLG1
$TERMSEC EQU   $TOTFLG1
$TDATBLK EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00184 EQU   $SCTTBLE+37
@NM00183 EQU   $OLTFLGS
$LASTSEC EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
$CECCMIN EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$CDS8T19 EQU   $SCTTBLE+20
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
$PATHDEF EQU   $PDEVFLG
$TERMNDX EQU   $PDEVFLG
@NM00182 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
$TSSSYS1 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SPARE1  EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
@NM00181 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00180 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00179 EQU   LCBXFLAG
@NM00178 EQU   LCBXFLAG
@NM00177 EQU   LCBXFLAG
@NM00176 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00161 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00160 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
@NM00159 EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00158 EQU   LCBSTAT5
LCBSUSFG EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
@NM00157 EQU   LCBSTAT7
LCBCDFD0 EQU   LCBSTAT7
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
LCBTTCIN EQU   IEDQLCB+90
@NM00156 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
@NM00155 EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBPY EQU   IEDQLCB+80
LCBERBQB EQU   LCBERB+1
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00154 EQU   LCBTSTSW
@NM00153 EQU   LCBTSTSW
@NM00152 EQU   LCBTSTSW
@NM00151 EQU   LCBTSTSW
@NM00150 EQU   LCBTSTSW
@NM00149 EQU   LCBTSTSW
@NM00148 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRCLLN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
LCBINTBF EQU   LCBINCAM+1
@NM00147 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00145 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00144 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUE  EQU   LCBCSWUS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00143 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00142 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00141 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00140 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00139 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00138 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00137 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
LCBLKDST EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBPRI   EQU   LCBRCB+4
LCBQCBA  EQU   LCBRCB+1
LCBKEY   EQU   LCBRCB
@NM00136 EQU   DCB+70
DCBXENDA EQU   DCB+68
DCBCENDA EQU   DCB+66
DCBSIOA  EQU   DCB+64
DCBPCIA  EQU   DCB+62
DCBEOEA  EQU   DCB+60
@NM00135 EQU   DCB+53
DCBOPTCD EQU   DCB+52
@NM00134 EQU   DCB+49
DCBOFLGS EQU   DCB+48
DCBDEBAD EQU   OLTDEBA+1
DCBIFLGS EQU   OLTDEBA
DCBMACFR EQU   DCB+42
DCBTIOT  EQU   DCB+40
DCBEXLST EQU   DCB+37
DCBRECFM EQU   DCB+36
DCBEODAD EQU   DCB+33
DCBBGFEK EQU   DCB+32
DCBIOBAD EQU   DCB+28
DCBDSORG EQU   DCB+26
DCBBUFL  EQU   DCB+24
DCBBUFCB EQU   DCB+21
DCBBUFNO EQU   DCB+20
DCBDCDEP EQU   DCB
IOBCSWS  EQU   IOB+37
@NM00133 EQU   IOBFLG4
IOBCSWNV EQU   IOBFLG4
IOBATNE  EQU   IOBFLG4
IOBPRI   EQU   IOBFLG4
IOBSEC   EQU   IOBFLG4
IOBCSWV  EQU   IOBFLG4
IOBATTN  EQU   IOBFLG4
IOBWORK  EQU   IOB+33
IOBUCBX  EQU   IOB+32
IOBERRCT EQU   IOB+30
IOBINCR  EQU   IOB+28
IOBRSTAD EQU   IOB+25
IOBREPM  EQU   IOB+24
IOBDCBAD EQU   IOB+20
@NM00132 EQU   IOBCCWAD+1
IOBSIOCD EQU   IOBCCWAD
IOBCSW1  EQU   IOBCSW+1
IOBFLG3  EQU   IOBCSW
@NM00131 EQU   IOBECBAD+1
IOBECBCD EQU   IOBECBAD
IOBSNS   EQU   IOB+2
IOBFLG2  EQU   IOB+1
IOBFLG1  EQU   IOB
TECBADDR EQU   IOBLOCKS+52
OLTSEQ   EQU   OLTSN+2
@NM00130 EQU   OLTSN
@NM00129 EQU   IOBLOCKS+47
@NM00128 EQU   OLTFLAG2
OLTSIOAC EQU   OLTFLAG2
OLTLV3IO EQU   OLTFLAG2
OLTMVDAT EQU   OLTFLAG2
OLTPTIMD EQU   OLTFLAG2
OLTDTCNT EQU   IOBLOCKS+44
OLTDTBUF EQU   IOBLOCKS+40
OLTBUFA  EQU   IOBLOCKS+36
OLTCCWA  EQU   IOBLOCKS+32
OLTQCBA  EQU   IOBLOCKS+28
@NM00127 EQU   IOBLOCKS+27
@NM00126 EQU   OLTFLAG1
OLTUNRD  EQU   OLTFLAG1
@NM00125 EQU   OLTFLAG1
OLTTNTAS EQU   OLTFLAG1
OLTTDLN  EQU   IOBLOCKS+24
OLTRLTNT EQU   IOBLOCKS+20
OLTTCTNT EQU   IOBLOCKS+16
OLTLCBA  EQU   IOBLOCKS+13
OLTTCRLN EQU   IOBLOCKS+12
OLTTRSID EQU   IOBLOCKS+10
OLTTNOFF EQU   IOBLOCKS+8
OLTUCBA  EQU   IOBLOCKS+4
ECBOLT   EQU   IOBLOCKS
@NM00124 EQU   DCTBYTE5
DCTRQDIS EQU   DCTBYTE5
DCTLSCR  EQU   DCTBYTE5
DCTL3270 EQU   DCTBYTE5
DCTSCS   EQU   DCTBYTE5
DCTTSPRF EQU   DCTBYTE4
DCTFMPRF EQU   DCTBYTE4
DCT2760  EQU   DCTBYTE3
DCTNOIDL EQU   DCTBYTE3
DCTCONTN EQU   DCTBYTE3
DCTBUFF  EQU   DCTBYTE3
DCTCHECK EQU   DCTBYTE3
DCTENCTL EQU   DCTBYTE3
DCTWTTA  EQU   DCTBYTE3
DCT1050  EQU   DCTBYTE3
DCTAUDIO EQU   DCTBYTE2
DCTLOCAL EQU   DCTBYTE2
DCTCONT  EQU   DCTBYTE2
DCTXMIT  EQU   DCTBYTE2
DCTSTCTL EQU   DCTBYTE2
DCTTWX   EQU   DCTBYTE2
DCTBRDST EQU   DCTBYTE2
DCTBISYN EQU   DCTBYTE2
DCTUMASK EQU   DCTBYTE1
DCTSADEV EQU   DCTBYTE1
DCT3270  EQU   DCTBYTE1
DCT2741  EQU   DCTBYTE1
DCT5041  EQU   DCTBYTE1
DCTATTEN EQU   DCTBYTE1
DCTBREAK EQU   DCTBYTE1
DCTINHIB EQU   DCTBYTE1
DCTBYTE0 EQU   IEDDCT
BNDUSD   EQU   IEDBNDD+37
BNDUDFL  EQU   IEDBNDD+36
BNDPLUN  EQU   IEDBNDD+28
BNDPLUNL EQU   IEDBNDD+27
BNDCRYP  EQU   IEDBNDD+26
@NM00123 EQU   IEDBNDD+25
BNDSCSZE EQU   BNDPSCH+9
BNDALTCL EQU   BNDPSCH+8
BNDALTRW EQU   BNDPSCH+7
BNDDFCL  EQU   BNDPSCH+6
BNDDFRW  EQU   BNDPSCH+5
@NM00122 EQU   BNDPSCH
BNDLUTYP EQU   BNDLUPFL
BNDPSF   EQU   BNDLUPFL
BNDPRPC  EQU   IEDBNDD+13
BNDPSPC  EQU   IEDBNDD+12
@NM00121 EQU   BNDPMSRU
BNDNMAXP EQU   BNDPMSRU
@NM00120 EQU   BNDSMSRU
BNDNMAX  EQU   BNDSMSRU
BNDSRPC  EQU   IEDBNDD+9
BNDSSPC  EQU   IEDBNDD+8
BNDCRES  EQU   BNDCOMM2
@NM00119 EQU   BNDCOMM2
@NM00118 EQU   BNDCOMM2
@NM00117 EQU   BNDCOMM2
BNDSPKR  EQU   BNDCOMM2
BNDRECOV EQU   BNDCOMM2
BNDFMODE EQU   BNDCOMM2
@NM00116 EQU   BNDCOMM1
@NM00115 EQU   BNDCOMM1
@NM00114 EQU   BNDCOMM1
BNDALT   EQU   BNDCOMM1
BNDBTERM EQU   BNDCOMM1
BNDBRACK EQU   BNDCOMM1
BNDFMUSE EQU   BNDCOMM1
@NM00113 EQU   BNDCOMM1
BNDSEBI  EQU   BNDSECD
BNDSCMP  EQU   BNDSECD
@NM00112 EQU   BNDSECD
@NM00111 EQU   BNDSECD
BNDSEXC  EQU   BNDSECD
BNDSDEF  EQU   BNDSECD
BNDSRQM  EQU   BNDSECD
BNDSCHN  EQU   BNDSECD
BNDPEBI  EQU   BNDPRIM
BNDPCMP  EQU   BNDPRIM
@NM00110 EQU   BNDPRIM
@NM00109 EQU   BNDPRIM
BNDPEXC  EQU   BNDPRIM
BNDPDEF  EQU   BNDPRIM
BNDPRQM  EQU   BNDPRIM
BNDPCHN  EQU   BNDPRIM
BNDTSPRF EQU   IEDBNDD+3
BNDFMPRF EQU   IEDBNDD+2
BNDFORMT EQU   IEDBNDD+1
BNDRUCDE EQU   IEDBNDD
BINLDAT  EQU   BINBLD+1
BINLDATL EQU   BINBLD
BINUDAT  EQU   BINBUD+1
BINUDATL EQU   BINBUD
BINIMAGE EQU   IEDBIN+10
BINLEN   EQU   IEDBIN+8
@NM00108 EQU   BINNAME+1
BINENDCK EQU   BINNAME
SAVTLLCB EQU   IEDNSVTD+380
SAVTSCF0 EQU   IEDNSVTD+376
SAVTLSNY EQU   IEDNSVTD+372
SAVTLSZP EQU   IEDNSVTD+368
SAVTOMSU EQU   IEDNSVTD+364
SAVTGTSB EQU   IEDNSVTD+360
SAVTHIBL EQU   IEDNSVTD+356
SAVTHISY EQU   IEDNSVTD+352
SAVTNAX2 EQU   IEDNSVTD+348
SAVTCDRU EQU   IEDNSVTD+344
SAVTPOLC EQU   IEDNSVTD+342
SAVTPOLM EQU   IEDNSVTD+340
SAVTPOLR EQU   IEDNSVTD+336
SAVTCDRN EQU   SAVTCDRV
SAVTPOLL EQU   IEDNSVTD+328
SAVTPOLN EQU   IEDNSVTD+326
@NM00107 EQU   IEDNSVTD+325
@NM00106 EQU   SAVTNETF
SAVTSDIS EQU   SAVTNETF
SAVTROUT EQU   SAVTNETF
SAVTNETW EQU   SAVTNETF
SAVTDIAL EQU   IEDNSVTD+320
SAVTRQUT EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTSITS  EQU   IEDQAVTD+1264
AVTMSUHI EQU   IEDQAVTD+1260
AVTSITU  EQU   IEDQAVTD+1256
AVTSITP  EQU   IEDQAVTD+1252
AVTPADDR EQU   IEDQAVTD+1248
@NM00091 EQU   IEDQAVTD+1246
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00090 EQU   IEDQAVTD+1242
@NM00089 EQU   IEDQAVTD+1241
@NM00088 EQU   IEDQAVTD+1240
@NM00087 EQU   IEDQAVTD+1237
@NM00086 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00085
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00084 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00083 EQU   IEDQAVTD+1140
@NM00082 EQU   IEDQAVTD+1137
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00074 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00073 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00072 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00071 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00070 EQU   AVTBIT2
@NM00069 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00068 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00067 EQU   IEDQAVTD+950
@NM00066 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00065 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00052 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00051 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00050 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00049 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00048 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00047 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00046 EQU   AVTOPCQB+8
@NM00045 EQU   AVTOPCEC+1
@NM00044 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00043 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00042 EQU   AVTCKPEC+1
@NM00041 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00040 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00039 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00038 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00037 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00030 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00029 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00022 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00021 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00020 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00019 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00018 EQU   AVTSAVTP+1
@NM00017 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00016 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00015 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00014 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00013 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00012 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00391 EQU   @RC00387
@RC00394 EQU   @RC00387
@RC00476 EQU   @RC00471
@PB00002 EQU   @EL00001
@RC00608 EQU   @PB00002
@ENDDATA EQU   *
         END   IEDQW25,(C'PLS0036',0701,78090)
