         TITLE 'IGCM910D - FEROUTER'
IGCM910D CSECT
         SPACE 3
***********************************************************************
*                                                                     *
* MODULE NAME = IGCM910D (TCAM, OPERATOR CONTROL)                     *
*                                                                     *
* DESCRIPTIVE NAME = FEROUTER                                         *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS:  CHANGE LEVEL 10.0                                          *
*                                                                     *
* FUNCTION--  THIS MODULE PROCESSES OPERATOR CONTROL COMMANDS WHICH   *
*   REQUEST LOADING OR DELETING OF A SERVICE AID ROUTINE. IF THE      *
*   COMMAND IS VALID THE SERVICE AID ROUTINE IS LOADED AND GIVEN      *
*   CONTROL. A RESPONSE MESSAGE IS PREPARED AND RETURNED.             *
*                                                                     *
*   THE SPECIFIED SERVICE AID ROUTINE NAME IS LOCATED IN THE          *
*   OCMODNME FIELD IN THE OPERATOR CONTROL ELEMENT (OPCE). THE LOAD   *
*   OR DELETE FUNCTION IS CHECKED FOR IN THE OCSWITCH FIELD.          *
*   IF NEITHER FUNCTION IS FOUND AN ERROR MESSAGE IS PREPARED AND     *
*   CONTROL RETURNED TO IGC0310D (THE ERROR WRITER) TO WRITE OUT THE  *
*   IED102I ERROR MESSAGE.                                            *
*                                                                     *
*   A BLDL IS PERFORMED AGAINST THE SPECIFIED SERVICE AID ROUTINE     *
*   TO DETERMINE WHETHER THE MODULE EXISTS ON SYS1.LINKLIB OR         *
*   JOBLIB/STEPLIB DATA SETS. IF THE MODULE IS NOT LOCATED, CONTROL   *
*   IS GIVEN TO IGC0310D TO DISPLAY THE IED102I ERROR MESSAGE.        *
*                                                                     *
*   IF COMMAND REQUESTS LOADING OF A SERVICE AID, THE NAME IS         *
*   CHECKED FOR IEDQFE10, IEDQFE20, IEDQFE30, OR IEDQFE40. IF NOT     *
*   AVTDTRAP IS TESTED FOR ZERO TO DETERMINE IF ANOTHER SERVICE       *
*   SERVICE AID IS ALREADY LOADED. IF SO, MSG IED548I IS ISSUED.      *
*   OTHERWISE THE LOAD LIST IS CHECKED FOR THE SERVICE AID BEING      *
*   ACTIVE. IF THE ROUTINE IS ALREADY ACTIVE, THE IED103I ERROR       *
*   MESSAGE IS DISPLAYED.                                             *
*                                                                     *
*   IF THE SERVICE AID IS NOT ACTIVE A GETMAIN IS ISSUED TO DETERMINE *
*   IF THERE IS ENOUGH CORE AVAILABLE TO LOAD IT. IF AVAILABLE CORE,  *
*   THE SERVICE AID IS LOADED AND GIVEN CONTROL VIA A SYNCH MACRO.    *
*   UPON RETURN FROM THE SERVICE AID THE RETURN CODE IS CHECKED.      *
*   FOR GOOD INITIALIZATION THE IED105I MESSAGE IS DISPLAYED. RETURN  *
*   FROM THE SERVICE AID WITH A BAD RETURN CODE RESULTS IN IED105I    *
*   ERROR MESSAGE BEING DISPLAYED AND THE DELETION OF THE SERVICE AID *
*   ROUTINE.                                                          *
*                                                                     *
*   IF CORE IS NOT AVAILABLE A TEST IS MADE TO SEE HOW MUCH MORE CORE *
*   IS NEEDED IN ORDER TO LOAD THE SERVICE AID . THE IED125I ERROR    *
*   MESSAGE IS PREPARED TO INFORM THE REQUESTOR.                      *
*                                                                     *
*   IF THE COMMAND REQUESTS A DELETING OF A SERVICE AID THE LOAD      *
*   LIST IS CHECKED FOR THE SERVICE AID BEING ACTIVE. FINDING THE     *
*   SERVICE AID NOT ACTIVE RESULTS IN DISPLAYING THE IED109I ERROR    *
*   MESSAGE. OTHERWISE THE SERVICE AID ROUTINE IS GIVEN CONTROL       *
*   VIA A SYNCH MACRO. IF THE RETURN CODE IS GOOD, THE IED100I        *
*   MESSAGE IS DISPLAYED AND THE ROUTINE IS DELETED. IF THE RETURN    *
*   CODE IS BAD, THE IED109I ERROR MESSAGE IS DISPLAYED.              *
*                                                                     *
* ENTRY POINTS                                                        *
*   'IGCM910D' TO PROCESS DEBUG OPERATOR CONTROL COMMANDS             *
*                                                                     *
* INPUT-- REGISTER 1- ADDRESS OF OPERATOR CONTROL AVT. IN THE OPCAVT  *
*   IS THE ADDRESS OF THE OPCE WHICH CONTAINS THE FOLLOWING INFO.     *
*   OCSWITCH                                                          *
*        X'08' DELETE FUNCTION                                        *
*        X'09' LOAD   FUNCTION                                        *
*   OCMODNME                                                          *
*        NAME OF SERVICE AID TO LOAD OR DELETE                        *
*                                                                     *
* OUTPUT--REGISTER 1 - ADDRESS OF OPERATOR CONTROL AVT                *
*        EXIT TO SERVICE AID VIA SYNCH MACRO                          *
*                                                                     *
* EXTERNAL ROUTINES--                                                 *
*   SERVICE AID ROUTINE.                                              *
*        EXIT TO SERVICE AID-                                         *
*             REGISTER 0 INDICATES LOAD OR DELETE FUNCTION            *
*             REGISTER 15 ENTRY POINT                                 *
*             REGISTER 14 RETURN REGISTER                             *
*        RETURN FROM SERVICE AID-                                     *
*             REGISTER 15 RETURN CODE:                                *
*                  0 = GOOD RETURN                                    *
*                  4 = MULTIPLE REQUEST                               *
*                  8 OR HIGHER NOT DEFINED                            *
*                  NEGITIVE = COMPLIMENT OF ADDRESS WHICH POINTS TO   *
*                             A MESSAGE.                              *
*                                                                     *
* EXITS,NORMAL--COMMAND IS PROCESSED. A RESPONSE MESSAGE IS GENERATED *
*   AND CONTROL IS PASSED TO THE MESSAGE WRITER IGC0710D TO WRITE OUT *
*   THE MESSAGE.                                                      *
*   THE NORMAL EXIT MESSAGES ARE-                                     *
*   IED099I  ROUTINE LOADED                                           *
*   IED100I  ROUTINE DEACTIVATED                                      *
*                                                                     *
* EXITS ERROR--                                                       *
*   ERROR MESSAGES ARE-                                               *
*   IED101I  RESTART IN PROGRESS                                      *
*   IED102I  INVALID OPERAND                                          *
*   IED103I  RTN ALREADY ACTIVE                                       *
*   IED104I  ROUTINE NOT ACTIVE                                       *
*   IED105I  RETURN CODE=0000                                         *
*   IED106I  MULTIPLE REQUEST                                         *
*   IED107I  COMWRITE NOT ACTIVE                                      *
*   IED109I  ROUTINE NOT DELETED                                      *
*   IED125I  0000 BYTES NEEDED                                        *
*   IED548I  SERVICE AID ALREADY LOADED                               *
*                                                                     *
* TABLES/WORK AREAS-- TCAM AVT,OPERATOR CONTROL AVT,OPCE,CVT,TCB,     *
*   OPERATOR CONTROL WORKAREA                                         *
*                                                                     *
* ATTRIBUTES-- SUPERVISOR MODE,DISABLED,TRANSIENT(TYPE 4)             *
*   REENTRANT,REFRESHABLE                                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*        THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING     *
*        HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER          *
*        CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE     *
*        FOR THE NEW DEFINITION.                                      *
*                                                                     *
* NOTES - COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS     *
*        PRIMARILY THROUGH THE OPERATOR CONTROL AVT.                  *
*                                                                     *
*        THIS IS A MODULE RE-WRITE OF IEDQC6 AS OF OS/TCAM LEVEL II   *
* CONTROL CHARACTERS       COMMAND             OPERAND                *
*   ************************************************************      *
*   CONTROL CHARS *************************************************   *
*                 *    * MODIFY *  IDENT,* DEBUG   = * L *  ,NAME *   *
*                 *    *        *        *           *   *        *   *
*                 *    *   F    *        *           * D *        *   *
*                 *************************************************   *
*                                                                     *
*                                                                     *
*      SERVICE AID JOB NAME                                           *
*       ************                                                  *
*       * IEDQFE10 *                                                  *
*       * IEDQFE20 *                                                  *
* NAME= * IEDQFE30 *                                                  *
*       * IEDQFE40 *                                                  *
*       * IEDQFEXX *                                                  *
*       ************                                                  *
*   *******************************************************************
*                                                                     *
* CHANGE ACTIVITY AS FOLLOWS                                          *
*A000000-999999                                                  S99240
*A474060-475860,524400-525600,530100-531300,793000,812100-813100 X02004
*D476000                                                         X02004
*A004000                                                        SA61063
*C006000,008000,572000,584000-590000,628000,752000,796000       SA61063
*D568000                                                        SA61063
*C421000-422000                                                 SA62353
*C614000-616000,630000-638000,710000                            SA68216
*D620000,622000,640000,642000,700000                            SA68216
*A616400-617200,710600,711200,712500-713500,755000              SA68216
*C624000,626000                                                @SA73354
*A199000,338500-338600,343000,362100-363700,752300             @Y17XAXA
*A792100-792600                                                @Y17XAXA
*C050000-050400,340000,342000,358000,360000,368000,370000      @Y17XAXA
*C376000,380000,384000-390000,394000,398000,402000,408000      @Y17XAXA
*C414000,418000,421000-424000,430000,434000,436000,440000      @Y17XAXA
*C456000,458000,464000,474120,474300,474420,475320,475380      @Y17XAXA
*C475740,492000,498000,508000-512000,522000,524400,530100      @Y17XAXA
*C534000,542000,544000,558000,560000,573000,584000,588000      @Y17XAXA
*C598000,604000,608000,614000,616400,628000,630000,634000      @Y17XAXA
*C646000,648000,652000,654000,658000,660000,664000,666000      @Y17XAXA
*C670000,672000,676000,678000,684000,690000,730000             @Y17XAXA
*C734000-752300,756000-774800,792100-792600                    @Y17XAXA
*D772000-774700,790000,793000                                  @Y17XAXA
*                                                                     *
***********************************************************************
         EJECT
*        REGISTER EQUATES
R0       EQU   0
R1       EQU   1                   PARAMETER
ROPC     EQU   2                   OPER CTRL AVT BASE
ROPCE    EQU   3                   BASE REG FOR OPC ELEMENT
RAVT     EQU   4                   AVT BASE
R4       EQU   4                   BRANCHING REGISTER
RWRK5    EQU   5                   WORK REGISTER
RETREG   EQU   6                   LOCAL RETURN REG
RWRK7    EQU   7                   WORK REGISTER
R8       EQU   8                   WORK REGISTER
RBASE    EQU   12                  ROUTINE BASE
R13      EQU   13                  SAVE AREA
R14      EQU   14                  RETURN
R15      EQU   15                  ENTRY POINT
         EJECT
         USING IEDQAVTD,RAVT       AVT BASE REG
         USING IEDQOPCD,ROPC       OPC CTRL AVT BASE
         USING IEDQOPCE,ROPCE      OPC ELEMENT BASE
         USING IGCM910D,RBASE                                  @Y17XAXA
         LR    RBASE,R15           LOAD BASE REGISTER          @Y17XAXA
         SPACE 1                                               @Y17XAXA
IGCM910D IEDHJN SKIPID                                         @Y17XAXA
         LR    ROPC,R1             LOAD OP CTL AVT BASE
         L     ROPCE,OPCCOPCE      GET ADDR OF PASSED ELEMENT
         L     RAVT,OPCAVTPT       GET AVT ADDRESS
         CLC   IEDQFE,OCMODNME     NAME BEGIN WITH 'IEDQFE'    @YM06932
         BNE   ERR102              NO, INVALID OPERAND         @YM06932
         CLC   FE00,OCMODNME+6     NAME LT IEDQFE0X            @YM08398
         BH    SKIPCOMW            YES , SKIP COMWRITE TEST    @YM08398
         TM    AVTCWFL2,AVTCWACT   IS COMWRITE ACTIVE          @Y17XAXA
         BZ    ERR107              NO BRANCH                   @Y17XAXA
SKIPCOMW EQU   *                                               @YM08398
         TM    OPCSPEC,OPCRSTRT    RESTART IN PROGRESS
         BO    ERR101              YES-RETURN                  @Y17XAXA
         CLI   OCSWITCH,OCX08      CHECK FOR DELETE FUNCTION   @Y17XAXA
         BNE   CHKLD               NO
         LA    RETREG,DELETE       YES
         CLC   FE40,OCMODNME+6     IS MODULE IEDQFE40          @YM08398
         BE    CHKFE40             YES , RESET IEDQFE40        @YM08398
         B     SEARCH              NO , SEARCH FOR MODULE      @YM08398
CHKLD    EQU   *
         CLI   OCSWITCH,OCX09      CHECK FOR LOAD FUNCTION     @Y17XAXA
         BNE   ERR102              NO                          @Y17XAXA
         LA    RETREG,LOAD         RETURN POINT FOR LOAD FUNCTION
         CLC   FE40,OCMODNME+6     IS MODULE IEDQFE40          @YM06932
         BNE   NORMAL              BR NO, NORMAL INPUT         @YM06932
CHKFE40  EQU   *                                               @YM08398
         TM    AVTSAVTF,AVTVTMCP                               @ZM47955
         BZ    ERR102                                          @ZM47955
         L     RWRK7,AVTSAVTP      GET SECONDARY AVT ADDRESS   @YM06932
         USING IEDNSVTD,RWRK7                                  @YM06932
         L     RWRK7,SAVTPIUT      PIU TRACE TABLE ADDRESS     @YM06932
         DROP  RWRK7                                           @YM06932
         LA    RWRK7,0(RWRK7)      CLEAR FOR TEST              @YM06932
         LTR   RWRK7,RWRK7         TRACE TABLE EXIST           @YM06932
         BZ    ERR102              BR NO, RETURN MSG IED102I   @YM06932
         CLI   OCSWITCH,OCX09      LOAD FUNCTION               @YM06932
         BNE   DELFE40             BR NO, HANDLE DELETE        @YM06932
         TM    TRACFLGS(RWRK7),TRCOMWRT FE40 ALREADY ACTIVE    @YM06932
         BCR   ONE,RETREG          BR YES, RETURN MSG IED103I  @YM06932
         OI    TRACFLGS(RWRK7),TRCOMWRT SET IEDQFE40 INTERFACE @YM06932
         B     RET099I             RETURN IED099I MESSAGE      @YM06932
DELFE40  EQU   *                                               @YM06932
         TM    TRACFLGS(RWRK7),TRCOMWRT IEDQFE40 INTERFACE IN  @YM06932
         BNO   FOUR(RETREG)        BR NO, RETURN MSG IED104I   @YM06932
         NI    TRACFLGS(RWRK7),AVTEFF-TRCOMWRT RESET IEDQFE40  @YM06932
         B     RET100I             RETURN MESSAGE IED100I      @YM06932
NORMAL   EQU   *                                               @YM06932
         LA    R1,FEXX             SET FOR SCAN                @Y17XAXA
         LA    R4,THREE            SET SCAN FOR THREE MODULES  @YM06932
         USING FEXX,R1             REG 1 INITILIZED TO FEXX    @Y17XAXA
COMPFEXX EQU   *                                               @Y17XAXA
         CLC   FEXX,OCMODNME+6     MODULE IEDQFE10,20, OR 30   @YM06932
         BE    SEARCH              YES , BYPASS TEST           @Y17XAXA
         LA    R1,TWO(,R1)         UPDATE TO NEXT MODULE NAME  @Y17XAXA
         BCT   R4,COMPFEXX         TEST FOR IEDQFE10,20, OR 30 @YM06932
         DROP  R1                                              @YM06151
         L     RAVT,OPCAVTPT       RESTORE AVT PTR             @YM06491
         CLC   AVTDTRAP,AVTFZERO   SERVICE AID ALREADY LOADED  @Y17XAXA
         BE    SEARCH              NO , CONTINUE               @Y17XAXA
         LA    R0,IED548I          SET MSG TO IED548I          @Y17XAXA
         B     ERREXIT             GO WRITE ERROR MSG          @Y17XAXA
SEARCH   EQU   *
         L     RAVT,OPCAVTPT       RESTORE AVT ADDR            @YM06461
         L     R8,OPCOPTLK         GET GETMAIN AND BLDL LIST ADDR
         LA    R14,TEN(,R8)        GET ADDR OF BLDL LIST       @Y17XAXA
         MVC   FOUR(EIGHT,R14),OCMODNME MOVE NAME TO BLDL LIST @Y17XAXA
         SR    R1,R1               LOAD PARAMETER REG1
         LR    R0,R14              LOAD ADDR BLDL LIST IN REG0
         SVC   BLDL                ISSUE SVC                   @Y17XAXA
         LTR   R15,R15             CHECK RETURN CODE FROM BLDL
         BNZ   ERR102              IF CANT FIND OR I/O ERR     @Y17XAXA
         L     R15,CVTPTR          GET CVT ADDRESS
         L     RWRK7,CVTTCBP(,R15) GET ADDR OF                 @Y17XAXA
         L     RWRK7,TCBOLD(RWRK7) ACTIVE TCB                  @Y17XAXA
         L     RWRK7,TCBLLS(RWRK7) AND LOAD LIST               @Y17XAXA
CDELOOP  LTR   RWRK5,RWRK7         END OF LIST                 @Y17XAXA
         BZ    INACTIVE            YES
         TM    VS1SYS(R15),X20     IS THIS A VS1 SYSTEM        @Y17XAXA
         BO    LLSLOOP             IF YES,CHECK LOAD LIST
         L     RWRK5,LLECDEAD(RWRK7) GET CDE ADDR              @Y17XAXA
LLSLOOP  EQU   *
         CLC   MODNAME(EIGHT,RWRK5),FOUR(R14) COMPARE NAME FOR @Y17XAXA
*                                  ROUTINE
         BE    ACTIVE              YES
         L     RWRK7,LLENXT(RWRK7) NO                          @Y17XAXA
         B     CDELOOP             CONTINUE SEARCH
INACTIVE SR    R15,R15             ZERO REG 15
         B     FOUR(RETREG)        RETURN INACTIVE             @Y17XAXA
ACTIVE   EQU   *
         TM    VS1SYS(R15),X20     IS THIS A VS1 SYSTEM        @Y17XAXA
         BZ    ACTIVE1             IF NO,GO GET EPA FROM CDE
         LA    RWRK5,FOUR(,RWRK5)  ELSE INCREMENT TO EPA       @Y17XAXA
*                                  IN VS1 LLE                  @Y17XAXA
ACTIVE1  L     R15,CDEEPAD(,RWRK5) GET EPA                     @Y17XAXA
         BR    RETREG              RETURN ACTIVE
LOAD     EQU   *
         B     ERR103              GO WRITE ERROR MESSAGE      @Y17XAXA
         L     R8,OPCOPTLK         GET ADDR OF BLDL LIST
         LA    R13,TEN(,R8)        GET ADDR OF BLDL AREA       @Y17XAXA
         MVC   ONE(THREE,R8),SIZE(R13) PUT SIZE IN LIST        @Y17XAXA
         LA    R1,OPCDOUBL         GET ADDR OF WHERE TO SAVE ADDR
         ST    R1,FOUR(R8)         PUT IN PARAMETER LIST       @Y17XAXA
         L     R1,OPCOPTLK         LOAD ADDR OF PARAMETER LIST
         GETMAIN ,MF=(E,(1))       GETMAIN MACRO
         LTR   R15,R15             TEST FOR ENOUGH CORE
         BNZ   TESTCORE            BRANCH IF NOT ENOUGH
         L     R1,OPCOPTLK         LOAD SERVICE NAME
         FREEMAIN ,MF=(E,(1))      FREEMAIN GETMAINED CORE
         L     R8,OPCOPTLK         GET ADDR OF BLDL LIST
         MVC   ONE(THREE,R8),REGSAVE NUM OF BYTES NEEDED       @Y17XAXA
         MVI   NINE(R8),XFA        SUBPOOL VALUE               @Y17XAXA
         LR    R1,R8               PUT ADDR OF LIST IN REG1
         GETMAIN   ,MF=(E,(1))
         LA    R0,FOUR(,R13)       ADDR SERVICE NAME           @Y17XAXA
         L     R13,OPCDOUBL        GET ADDR OF SAVEAREA OBTAINED
         LOAD  DE=(0)              LOAD IEDQFE20               @ZM46621
         LR    R15,R0              GET EPA                       X02004
         CLC   FE20,OCMODNME+6     IS IT FE20                  @Y17XAXA
         BNE   SYNCH1              NO BRANCH                     X02004
         USING PGFXPARM,R13                                      X02004
         LR    RWRK5,R0            SAVE EPA                    @Y17XAXA
         LR    R1,R0               SET START ADDRESS           @ZM46621
         LR    R15,R0              GET START ADDRESS           @ZM46621
         A     R15,ZERO(,R1)       CALCULATE END ADDRESS+1     @ZM46621
         XC    PGFXECB,PGFXECB     CLEAR ECB                   @ZM46621
         LA    R0,PGFXECB          ECB ADDRESS                 @ZM46621
         PGFIX R,A=(1),EA=(15),ECB=(0) FIX IEDQFE20            @ZM46621
         LA    R1,PGFXECB          ECB ADDRESS                   X02004
         WAIT  ECB=(R1)                                          X02004
         TM    PGFXECB+THREE,PGFXEROR PAGE FIX ERROR             X02004
         BZ    SYNCH               B IF NO ERROR                 X02004
         L     R8,OPCOPTLK         GET ADDR OF GETMAIN BLDL      X02004
*                                  LIST                          X02004
         LA    R13,TEN(,R8)        GET ADDR OF BLDL LIST       @Y17XAXA
         LA    R0,FOUR(,R13)       INSERT NAME TO DELETE       @Y17XAXA
*                                  REG 0                         X02004
         DELETE DE=(0)             DELETE IEDQFE20             @ZM46621
*                                  NO REAL CORE AVAIL            X02004
         B     TESTCORE            WRITE ERROR MESSAGE           X02004
SYNCH    EQU   *                                                 X02004
         LA    R15,FOUR(,RWRK5)    INC PAST LEN TO GET RTN@Y17XAXA
*                                  EPA                           X02004
SYNCH1   EQU   *                                                 X02004
         SR    R0,R0               INDICATE LOAD FUNCTION
         SYNCH  (15)
         LTR   R15,R15             INITIALIZED OK ?
         BNZ   ERRCODE             NO
RET099I  EQU   *                                               @YM06932
         LA    R0,IED099I          GET MSG NUMBER              @Y17XAXA
DELMSG   EQU   *
         LR    R1,ROPC             ESTABLISH OPCAVT BASE
         MVC   OPCLDNME+THREE(TWO),M1MOD MOVE MODULE ID        @Y17XAXA
         B     OUT                 GO TO NEXT MODULE
DELETE   B     DELACT              ACTIVE-DELETE
         B     ERR104              NOT ACTIVE                  @Y17XAXA
DELACT   EQU   *
         ST    R15,OPCTRMWA        SAVE EPA OF ROUTINE
         LA    R1,OPCDOUBL         GET ADDRESS OF WHERE TO SAVE
*                                  GETMAINED CORE
         ST    R1,FOUR(R8)         PUT IN GETMAIN LIST         @Y17XAXA
         MVC   ONE(THREE,R8),REGSAVE GET NUM OF BYTES NEEDED   @Y17XAXA
         MVI   NINE(R8),XFA        SUBPOOL NUMBER              @Y17XAXA
         LR    R1,R8               PUT ADDR OF LIST IN R1
         GETMAIN  ,MF=(E,(1))
         L     R13,OPCDOUBL        GET ADDR OF GETMAINED CORE
         L     R15,OPCTRMWA        GET SAVED EPA
         LA    R15,ZERO(,R15)      CLEAR HI ORDER BYTE         @Y17XAXA
         LA    R0,TWO55            INDICATE DELETE FUNCTION
         CLC   FE20,OCMODNME+6     IS IT FE20                  @Y17XAXA
         BNE   SYNCH3                                            X02004
         LA    R15,FOUR(,R15)      INCR PAST LENGTH            @Y17XAXA
SYNCH3   EQU   *                                                 X02004
         SYNCH (15)
         LTR   R15,R15             DEACTIVATED OK
         BNZ   ERRCODE             NO
         CLC   FE20,OCMODNME+6     IS IT FE20                  @Y17XAXA
         BNE   BYPASS              NO BYPASS PAGE FREE           X02004
         L     R1,OPCTRMWA         GET EPA                     @ZM46621
         LR    R15,R1              GET START ADDRESS           @ZM46621
         A     R15,ZERO(,R1)       CALCULATE END ADDRESS +1    @ZM46621
         PGFREE R,A=(1),EA=(15)    FREE FIXED CORE             @ZM46621
BYPASS   EQU   *                                                 X02004
         BAL   RETREG,SCRATCH      DELETE MODULE NOT NEEDED
RET100I  EQU   *                                               @YM06932
         LA    R0,IED100I          SET DELETE MESSAGE          @Y17XAXA
         B     DELMSG              SET UP TO WRITE MESSAGE
SCRATCH  EQU   *
         L     R8,OPCOPTLK         GET ADDR OF GETMAIN BLDL LIST
         LA    R13,TEN(,R8)        GET ADDR OF BLDL LIST       @Y17XAXA
         LA    R0,FOUR(,R13)       INSERT MOD NAME TO DEL      @Y17XAXA
*                                  REGISTER 0
         SVC   NINE                ISSUE SVC
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   MODIFY              IF BAD,WRITE ERROR MESSAGE
         BR    RETREG              ELSE GO INITIALIZE
ERRCODE  BNP   USER                USER MESSAGE SUPPLIED
         CH    R15,AVTHA4          RTN CODE EQUAL TO FOUR      @Y17XAXA
         BE    ERR106              YES MULTIPLE REQUEST        @Y17XAXA
         STH   R15,OCLINK+TWO      GENERATE USER
         UNPK  OCELEM+ONE(FIVE),OCLINK+TWO(THREE) COMPLETION
         TR    OCELEM+ONE(FOUR),TRTABLE-TWO40 CODE AND         @Y17XAXA
         L     R13,OPCWORK         GET ADDR OF MSG AREA
         MVC   ZERO(TWO,R13),MSGLEN2                           @Y17XAXA
         MVC   FOUR(FERCMSG,R13),ERRMSGR+ONE  MOVE ERROR TXT   @Y17XAXA
         MVC   MSG25(FOUR,R13),OCELEM+ONE MOVE INTO MESSAGE    @Y17XAXA
         B     EXIT                LEAVE ROUTINE
USER     LCR   R15,R15             RECOMPLIMENT
         LR    R1,R15              GET MSG ADDR IN REG 1
         L     R13,OPCWORK         GET ADDR OF MSG AREA
         MVC   ZERO(TWO,R13),MSGLEN1 MOVE MSG LEN TO OP CTL    @Y17XAXA
         MVC   FOUR(FEMSGLNG,R13),ZERO(R1) MOVE MSG TEXT       @Y17XAXA
         BAL   RETREG,VERDEL       VERIFY DELETION
         B     EXIT                LEAVE ROUTINE
MODIFY   EQU   *
         LA    R0,IED109I          GET MSG NUMBER              @Y17XAXA
         B     ERREXIT             GO WRITE ERROR MESSAGE
VERDEL   EQU   *
         CLI   OCSWITCH,OCX08      DELETE FUNCTION             @Y17XAXA
         BNE   SCRATCH             NO
         B     FOUR(RETREG)        RETURN TO CALLER            @Y17XAXA
TESTCORE EQU   *
         L     R13,OPCOPTLK        GET GETMAIN BLDL LIST ADDRESS
         UNPK  OCELEM(FIVE),SIZE+TEN(FOUR,R13) UNPACK GETMAIN  @Y17XAXA
*                                  SIZE (OBTAINED FROM BLDL     SA68216
*                                  LIST)                        SA68216
         TR    OCELEM(FOUR),TRTABLE-TWO40 TRANSLATE NUMBER OF  @Y17XAXA
*                                  BYTES TO HEX VALUE           SA68216
         L     R4,OPCWORK          GET ADDR OF MSG AREA
         LA    R14,LEN125          GET MESSAGE LENGTH          @SA73354
         STH   R14,ZERO(R4)        PUT LENGTH IN WORKAREA      @Y17XAXA
         MVC   FOUR(LEN125,R4),COREMSG+ONE MOVE MESSAGE        @Y17XAXA
         MVC   OFFSET1+FOUR(FOUR,R4),OCELEM INSERT NUMBER OF   @Y17XAXA
*                                  BYTES INTO MSG               SA68216
         B     EXIT                GO TO NEXT MODULE
ERR101   EQU   *                                               @Y17XAXA
         LA    R0,IED101I          GET MSG NUMBER              @Y17XAXA
         B     ERREXIT             GO WRITE ERROR MESSAGE
ERR102   EQU   *                                               @Y17XAXA
         LA    R0,IED102I          GET MSG NUMBER              @Y17XAXA
         B     ERREXIT             GO WRITE ERROR MESSAGE
ERR103   EQU   *                                               @Y17XAXA
         LA    R0,IED103I          GET MSG NUMBER              @Y17XAXA
         B     ERREXIT             GO WRITE ERROR MESSAGE
ERR104   EQU   *                                               @Y17XAXA
         LA    R0,IED104I          GET MSG NUMBER              @Y17XAXA
         B     ERREXIT             GO WRITE ERROR MESSAGE
ERR106   EQU   *                                               @Y17XAXA
         LA    R0,IED106I          GET MSG NUMBER              @Y17XAXA
         B     ERREXIT             GO WRITE ERROR MESSAGE
ERR107   EQU   *                                               @Y17XAXA
         LA    R0,IED107I          GET MSG NUMBER              @Y17XAXA
ERREXIT  EQU   *
         LR    R1,ROPC             SET UP PARAMETER
         MVC   OPCLDNME+THREE(TWO),ERRORID XCTL TO ERROR WTR   @Y17XAXA
         B     OUT                 LEAVE
EXIT     EQU   *
         MVC   OPCLDNME+THREE(TWO),MSGWRITR XCTL TO IGC0710D   @Y17XAXA
OUT      EQU   *
         LR    R1,ROPC             SET UP PARAMETER REG
         XCTL  SF=(E,OPCXCTL)
         SPACE 3
         SPACE 3
*        MESSAGES
COREMSG  DS    0H
         DC    AL1(ENDMSG-*-1)     LENGTH
         DC    C'IED125I '         MSG NUMBER                   SA68216
NUMBYTES DC    CL4' '              NO. OF BYTES                 SA68216
         DC    C' BYTES NEEDED'    TEXT                         SA68216
ENDMSG   EQU   *
OFFSET1  EQU   NUMBYTES-COREMSG-1  OFFSET TO NUMBYTES IN        SA68216
*                                  ERROR MSG                    SA68216
         SPACE 2
ERRMSGR  DS    0H
         DC    AL1(ENDMSGRR-*-1)   LENGTH
         DC    C'IED105I RETURN CODE=0000' MESSAGE TEXT
ENDMSGRR EQU   *
         SPACE 3
*        EQUATES
TRACFLGS EQU   12                  FLAG BYTE OFFSET            @YM06932
TRCOMWRT EQU   X'08'               COMWRITE INTERFACE ACTIVE   @YM06932
CVTPTR   EQU   X'10'               ADDRESS OF CVT
REGSAVE  DC    X'000048'           NUMBER BYTES NEEDED FOR SAVAREA
VS1SYS   EQU   116                 VS1 INDICATOR               @Y17XAXA
SIZE     EQU   28                  OFFSET IN BLDL LIST TO SIZE
IED099I  EQU   99                  MSG IED099I EQU             @Y17XAXA
IED100I  EQU   100                 MSG IED100I EQU             @Y17XAXA
IED101I  EQU   101                 MSG IED101I EQU             @Y17XAXA
IED102I  EQU   102                 MSG IED102I EQU             @Y17XAXA
IED103I  EQU   103                 MSG IED103I EQU             @Y17XAXA
IED104I  EQU   104                 MSG IED104I EQU             @Y17XAXA
IED106I  EQU   106                 MSG IED106I EQU             @Y17XAXA
IED107I  EQU   107                 MSG IED107I EQU             @Y17XAXA
IED109I  EQU   109                 MSG IED109I EQU             @Y17XAXA
IED548I  EQU   548                 MSG IED548I EQU             @Y17XARA
FEMSGLNG EQU   29                  MESSAGE LENGTH               SA61063
FERCMSG  EQU   24                  MESSAGE LENGTH               SA61063
MSG25    EQU   25                  OFFSET IN MSG FOR RETURN CODE
LEN125   EQU   ENDMSG-COREMSG-1    LENGTH OF MSG 125            SA68216
ZERO     EQU   0                   ZERO  - 0                   @Y17XAXA
ONE      EQU   1                   ONE   - 1                   @Y17XAXA
TWO      EQU   2                   TWO   - 2                   @Y17XAXA
THREE    EQU   3                   THREE - 3                   @Y17XAXA
FOUR     EQU   4                   FOUR  - 4                   @Y17XAXA
FIVE     EQU   5                   FIVE  - 5                   @Y17XAXA
EIGHT    EQU   8                   EIGHT - 8                   @Y17XAXA
NINE     EQU   9                   NINE  - 9                   @Y17XAXA
TEN      EQU   10                  TEN   - 10                  @Y17XAXA
FOURTEEN EQU   14                  FOURTEE- 14                 @YM06932
BLDL     EQU   18                  BLDL SVC 18                 @Y17XAXA
TWO40    EQU   240                 VALUE TWO40
TWO55    EQU   255                 VALUE TWO55
X20      EQU   X'20'               HEX 20
XFA      EQU   X'FA'               HEX FA
CDEEPAD  EQU   X'10'               CDE DISPL TO EP
CVTTCBP  EQU   0                   CVT DISPL-ADDR NEW/OLD POINTERS
TCBOLD   EQU   4                   DISPL  IN NEW/OLD TO OLD TCB
TCBLLS   EQU   X'24'               TCB DISPL TO LOAD LIST POINTER
LLECDEAD EQU   X'04'               LOAD LIST ELEM DISP TO CDE ADDR
MODNAME  EQU   X'08'               CDE DISPL TO MODULE NAME
LLENXT   EQU   X'00'               LOAD LIST ELEM DISP TO NEXT LLE
IEDQFE   DC    CL6'IEDQFE'         CHECK FOR PROPER PREFIX     @YM06932
FE00     DC    C'0'                IEDQFE0X                    @Y17XAXA
FEXX     DS    0CL2                IEDQFEXX                    @Y17XAXA
FE10     DC    C'10'               IEDQFE10                    @Y17XAXA
FE20     DC    C'20'               IEDQFE20                    @Y17XAXA
FE30     DC    C'30'               IEDQFE30                    @Y17XAXA
FE40     DC    C'40'               IEDQFE40                    @Y17XAXA
MSGLEN1  DC    H'29'               LENGTH OF MESSAGE            SA61063
MSGLEN2  DC    H'24'               LENGTH OF MESSAGE            SA61063
MSGWRITR DC    C'07'               ID OF IGC0710D MSG WRITER
ERRORID  DC    C'03'               ID OF IGC0310D ERROR WRITER
M1MOD    DC    C'M1'               MODULE IGCM110D
TRTABLE  EQU   *                   THIS IS THE TRANSLATE TABLE
         DC    C'0123456789ABCDEF' HEX TRANSLATOR
         EJECT
*        MACROS
PGFXPARM DSECT                                                   X02004
PGFXSTRT DS    F                                                 X02004
PGFXEND  DS    F                                                 X02004
PGFXECB  DS    F                                                 X02004
PGFXCODE EQU   X'52'                                             X02004
PGFRCODE EQU   X'20'                                             X02004
PGFXEOL  EQU   X'80'                                             X02004
BYTE0    EQU   8                                                 X02004
PAGEFIX  EQU   113                                               X02004
PAGEFREE EQU   113                                               X02004
PGFXEROR EQU   4                                                 X02004
         EJECT
         TAVTD
         EJECT
         TOPCED
         EJECT
         TOPCAVTD
         END
