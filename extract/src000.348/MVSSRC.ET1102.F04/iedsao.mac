         TITLE 'IEDSAO: STATUS ANALYSIS OUTBOUND                       *
                        '
IEDSAO   CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
         DC    A(0)                START OF QCB
         DC    A(0)
         DC    X'06'               START OF STCB
         DC    AL3(*-1)
         USING *,RBASE
         LR    RBASE,R15           ESTABLISH ADDRESSABILTY
IEDSAO   IEDHJN START,HJN
*                                                                  0477
*/********************************************************************/
*/*                                                                  */
*/*     M A I N     R O U T I N E                                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0477
*   RPRF=RPARM;                     /* PIU BUFFER ADDRESS            */
         LR    RPRF,RPARM                                          0477
*   PIUSTART=ADDR(PRFPIUO)+PRFPIUO; /* ADDRESS OF PIU DATA(TH-RH-RU) */
         LA    PIUSTART,PRFPIUO(,IEDQPPTR)                         0478
         SLR   @09,@09                                             0478
         IC    @09,PRFPIUO(,IEDQPPTR)                              0478
         ALR   PIUSTART,@09                                        0478
*/*                                                                  */
*                                                                  0479
*   RPARM=TTHDAF;                   /* DAF TNT OFFSET VALUE          */
         SLR   RPARM,RPARM                                         0479
         ICM   RPARM,3,TTHDAF(PIUSTART)                            0479
*   CALL IEDQTNT;                   /* GET DAF TERMINAL ENTRY        */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0480
         BALR  @14,@15                                             0480
*   RTRM=RPARM-LENGTH(IEDNTRM);     /* ADJUST PTR TO IEDQTRM         */
         LR    RTRM,RPARM                                          0481
         SL    RTRM,@CF00035                                       0481
*   RQCB=TRMDESTQ;                  /* QCB ADDRESSABILITY            */
         L     RQCB,TRMDESTQ-1(,RTRM)                              0482
         LA    RQCB,0(,RQCB)                                       0482
*   IF(BDUCMND=CD0READ×             /* READ COMMAND OR               */
*       BDUCMND=CD0INV) THEN        /* INVITE COMMAND ?              */
         LA    @09,14                                              0483
         ALR   @09,PIUSTART                                        0483
         CLI   BDUCMND(@09),X'01'                                  0483
         BE    @RT00483                                            0483
         CLI   BDUCMND(@09),X'05'                                  0483
         BNE   @RF00483                                            0483
@RT00483 DS    0H                                                  0484
*     DO;                                                          0484
*       IF TRMASNXI=ON THEN         /* STOPLINE,I IN PROGRESS?       */
         TM    TRMASNXI(RTRM),B'00010000'                          0485
         BNO   @RF00485                                            0485
*         DO;                                                      0486
*           TRMASNXI=OFF;           /* RESET STOPLINE INDICATOR      */
         NI    TRMASNXI(RTRM),B'11101111'                          0487
*           RPARM=TTHOAF;           /* SWAP ...              @YM08042*/
         SLR   RPARM,RPARM                                         0488
         ICM   RPARM,3,TTHOAF(PIUSTART)                            0488
*           TTHOAF=TTHDAF;          /* ... OAF ...           @YM08042*/
         MVC   @TS00001(2),TTHDAF(PIUSTART)                        0489
         MVC   TTHOAF(2,PIUSTART),@TS00001                         0489
*           TTHDAF=RPARM;           /* ... AND DAF           @YM08042*/
         STCM  RPARM,3,TTHDAF(PIUSTART)                            0490
*           TTHDCF=LENGTH(IEDRH)+1+LENGTH(IEDBDU);/* SET MINIMUM   0491
*                                      LENGTH ALLOWABLE      @YM08042*/
         LA    @09,10                                              0491
         STCM  @09,3,TTHDCF(PIUSTART)                              0491
*           TRHTYPE=ON;             /* SET RESPONSE          @YM08042*/
         ALR   @09,PIUSTART                                        0492
         OI    TRHTYPE(@09),B'10000000'                            0492
*           BDUERROR=ON;            /* MAKE THIS BUFFER ...          */
         LA    @09,14                                              0493
         ALR   @09,PIUSTART                                        0493
         OI    BDUERROR(@09),B'10000000'                           0493
*           BDUPHASE=RSP00;         /* LOOK LIKE IT WAS ...          */
         NI    BDUPHASE(@09),B'10011111'                           0494
*           BDURESP=RSPE1E;         /* RESET, THEN POST IT...        */
         NI    BDURESP(@09),B'11111110'                            0495
         OI    BDURESP(@09),B'00011110'                            0495
*           IF PRFPIUO<MINPIUO THEN /* IF PIU OFFSET IS LESS THAN  0496
*                                      MINIMUM               @YM08042*/
         CLI   PRFPIUO(IEDQPPTR),17                                0496
         BNL   @RF00496                                            0496
*             DO;                   /* THEN FORCE MINIMUM PIU OFFSET
*                                                            @YM08042*/
*               PIUSAVE=PIU;        /* SAVE PIU              @YM08042*/
         MVC   PIUSAVE(20),PIU(PIUSTART)                           0498
*               PRFPIUO=MINPIUO;    /* MIN PIU OFFSET        @YM08042*/
         LA    @09,17                                              0499
         STC   @09,PRFPIUO(,IEDQPPTR)                              0499
*               PIUSTART=ADDR(PRFPIUO)+PRFPIUO;/* PIU ADDR   @YM08042*/
         LA    PIUSTART,PRFPIUO(,IEDQPPTR)                         0500
         ALR   PIUSTART,@09                                        0500
*               PIU=PIUSAVE;        /* RESTORE PIU           @YM08042*/
         MVC   PIU(20,PIUSTART),PIUSAVE                            0501
*             END;                  /*                       @YM08042*/
*           PRFQCBA=SAVTSAI;        /* TO INBOUND DEBLOCK WHERE...   */
@RF00496 L     @10,AVTSAVTP(,IEDQAPTR)                             0503
         MVC   PRFQCBA(3,IEDQPPTR),SAVTSAI+1(@10)                  0503
*           PRFPRI=PRIFIDIN;        /* IT WILL BE TREATED AS ...     */
         MVI   PRFPRI(IEDQPPTR),X'E4'                              0504
*           RPARM=RPRF;             /* ANY RESETTED READ/INVITE      */
         LR    RPARM,RPRF                                          0505
*           CALL DSPPOST;                                          0506
         LA    @15,DSPPOST(,RDISP)                                 0506
         BALR  @14,@15                                             0506
*         END;                                                     0507
*       ELSE                                                       0508
*         CALL BYPPCOUT;                                           0508
         B     @RC00485                                            0508
@RF00485 BAL   @14,BYPPCOUT                                        0508
*     END;                                                         0509
*   ELSE                            /* NOT READ COMMAND              */
*     IF BDUCMND=CD0WRT THEN        /* WRITE COMMAND                 */
         B     @RC00483                                            0510
@RF00483 CLI   BDUCMND+14(PIUSTART),X'02'                          0510
         BNE   @RF00510                                            0510
*       CALL WRTPROC;               /* YES PROCESS WRITE COMMAND     */
         BAL   @14,WRTPROC                                         0511
*     ELSE                                                         0512
*       IF BDUCMND=CD0CONT THEN     /* IF THIS IS A CONTACT          */
         B     @RC00510                                            0512
@RF00510 CLI   BDUCMND+14(PIUSTART),X'06'                          0512
         BNE   @RF00512                                            0512
*         DO;                                                      0513
*           IF TRMASNXI=ON THEN     /* AND STOPLINE,I IS IN PROGRESS */
         TM    TRMASNXI(RTRM),B'00010000'                          0514
         BNO   @RF00514                                            0514
*             DO;                                                  0515
*               RLCB=QCBPLCBA;      /* PLCB EXIST FOR SPECOUT CONTACT
*                                                            @ZM48458*/
         LR    @10,IEDQQPTR                                        0516
         AL    @10,@CF02242                                        0516
         L     RLCB,QCBPLCBA-5(,@10)                               0516
         LA    RLCB,0(,RLCB)                                       0516
*               CALL OUTDHPST;      /* SIMULATE NORMAL COMPLETION BY
*                                      POSTING THIS PIU BACK TO    0517
*                                      IEDNKA, THEN EXIT. THE NEXT 0517
*                                      WRITE BUFFER WILL FOLLOW THE
*                                      "ABORT" EXCEPTION PATH IN   0517
*                                      "WRITPROC" SUBROUTINE WHICH 0517
*                                      WILL TERMINATE THIS OPERATION */
         BAL   @14,OUTDHPST                                        0517
*             END;                                                 0518
*         END;                                                     0519
*                                                                  0519
*/*                                                                  */
*                                                                  0520
*       ELSE                        /* IF NOT WRITE, READ OR CONTACT */
*         CALL BYPPCOUT;            /* THEN BYPASS TO IEDPCOUT       */
         B     @RC00512                                            0520
@RF00512 BAL   @14,BYPPCOUT                                        0520
*/********************************************************************/
*/*                                                                  */
*/* END OF MAIN ROUTINE                                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0521
*                                                                  0521
*   /*****************************************************************/
*   /*                                                               */
*   /* ABORT: THIS PROCEDURE IS CALLED WHEN A WRITE OPERATION IS     */
*   /* BEING TERMINATED. IF LCBABRTN IS ON, THE CURRENT BUFFER IS    */
*   /* FREED. ELSE LCBABRTN IS SET ON, A TAGGED RESET IMMEDIATE IS   */
*   /* BUILT IN THE CURRENT BUFFER AND THIS BUFFER IS POSTED TO      */
*   /* IEDPCOUT. ANY FURTHER WRITE BUFFERS WILL FIND LCBABRTN ON AND */
*   /* WILL BE FREED. THE TAGGED RESET ENSURES ALL COMMANDS ARE ENDED*/
*   /* IN THE NCP. WHEN THIS TAGGED RESET RESPONSE IS RECEIVED BY    */
*   /* INBOUND DEBLOCK, IT WILL BE POSTED TO THE MH AS AN ERROR      */
*   /* BUFFER                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0521
*ABORT:                                                            0521
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0521
*                                                                  0521
         B     @PB00002                                            0521
ABORT    DS    0H                                                  0522
*/*                                                                  */
*                                                                  0522
*   IF LCBABRTN=ON THEN             /* IF ALREADY SET FOR TERMINATION*/
         TM    LCBABRTN(IEDQLPTR),B'00000001'                      0522
         BNO   @RF00522                                            0522
*     DO;                                                          0523
*       RPARM=RPRF;                 /* PICKUP POINTER TO BUFFER      */
         LR    RPARM,RPRF                                          0524
*       CALL DISCARD;               /* FREE THE BUFFER               */
         BAL   @14,DISCARD                                         0525
*       CALL DSPDISP;               /* EXIT                          */
         LA    @15,DSPDISP(,RDISP)                                 0526
         BALR  @14,@15                                             0526
*     END;                                                         0527
*   ELSE                                                           0528
*     DO;                                                          0528
         B     @RC00522                                            0528
@RF00522 DS    0H                                                  0529
*       LCBABRTN=ON;                /* INDICATE SUBSEQUENT WRITE BFRS
*                                      WILL BE FREED                 */
         OI    LCBABRTN(IEDQLPTR),B'00000001'                      0529
*       TTHTAG1=0;                  /* PUT A TAG...                  */
         MVI   TTHTAG1(PIUSTART),X'00'                             0530
*       TTHTAG2=TTHRESET;           /* ...IN THIS BUFFER             */
         MVI   TTHTAG2(PIUSTART),X'02'                             0531
*       TTHDCF=LENGTH(PIU0RH)+LENGTH(PIU0PAD)+LENGTH(IEDBDU);/* SET
*                                      DATA CNT                      */
         MVC   TTHDCF(2,PIUSTART),@CH01197                         0532
*       PIU0RH=TRHFID0;             /* SETUP TRH FIELDS              */
         MVC   PIU0RH(3,PIUSTART),@CB01596                         0533
*       PIU0PAD=PIU0PAD0;           /* SETUP PAD CHAR                */
         MVI   PIU0PAD(PIUSTART),X'00'                             0534
*       BDUCMND=CD0CTRL;            /* CONTROL CMND                  */
         LA    @09,14                                              0535
         ALR   @09,PIUSTART                                        0535
         MVI   BDUCMND(@09),X'08'                                  0535
*       BDUMODIF=CD0CRI;            /* RESET IMMEDIATE               */
         MVI   BDUMODIF(@09),X'44'                                 0536
*       IEDBDU(3:6)=IEDBDU(3:6)&&IEDBDU(3:6);/* SET OTHER BDU FIELDS
*                                      TO ZERO                       */
         XC    IEDBDU+2(4,@09),IEDBDU+2(@09)                       0537
*       IF PRFTIC^=PRFINTIC THEN    /* IF BFR HAS MORE THAN ONE UNIT */
         CLC   PRFTIC(4,IEDQPPTR),@CB01307                         0538
         BE    @RF00538                                            0538
*         DO;                                                      0539
*           RPARM=PRFTI0;           /* PICKUP PTR TO NEXT UNIT       */
         L     RPARM,PRFTI0-1(,IEDQPPTR)                           0540
         LA    RPARM,0(,RPARM)                                     0540
*           PRFTIC=PRFINTIC;        /* SET INVALID TIC IN FIRST UNIT */
         MVC   PRFTIC(4,IEDQPPTR),@CB01307                         0541
*           CALL DISCARD;           /* FREE REMAINING UNITS          */
         BAL   @14,DISCARD                                         0542
*         END;                                                     0543
*       SCBTXTTN=ON;                                               0544
@RF00538 L     @10,IEDQSPTR-1(,IEDQLPTR)                           0544
         OI    SCBTXTTN(@10),B'01000000'                           0544
*       CALL BYPPCOUT;                                             0545
         BAL   @14,BYPPCOUT                                        0545
*     END;                                                         0546
*   END ABORT;                                                     0547
@EL00002 DS    0H                                                  0547
@EF00002 DS    0H                                                  0547
@ER00002 BR    @14                                                 0547
@PB00002 DS    0H                                                  0548
*                                                                  0548
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE BYPASSES(THROUGH THE DISPATCHER) TO PATH CONTROL    */
*/* OUTBOUND(IEDPCOUT). IT PASSES THE PIU BUFFER.                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0548
*BYPPCOUT:                                                         0548
*   RQCB=ADDR(IEDPCOUT);            /* IEDPCOUT'S QCB ADDRESS        */
BYPPCOUT L     RQCB,@CV02195                                       0548
*   RSTCB=QCBSTCHN;                 /* IEDPCOUT'S STCB ADDRESS       */
         L     RSTCB,QCBSTCHN-1(,IEDQQPTR)                         0549
         LA    RSTCB,0(,RSTCB)                                     0549
*   RPARM=RPRF;                     /* PIU BUFFER ADDRESS            */
         LR    RPARM,RPRF                                          0550
*   CALL DSPBYPAS;                  /* BYPASS TO PATH CONTROL      0551
*                                      OUTBOUND                      */
         LA    @15,DSPBYPAS(,RDISP)                                0551
         BALR  @14,@15                                             0551
*                                                                  0552
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE DISCARDS ALL THE UNITS IN A PIU BUFFER.  IT POSTS   */
*/* THEM TO BUF  RETURN(IEDQGB).                                     */
*/*       INPUT= REG1 POINTS TO PIU BUFFER TO BE DISCARDED           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0552
*DISCARD:                                                          0552
*   PROC OPTIONS(SAVE(14),RETREG);                                 0552
*                                                                  0552
         B     @PB00003                                            0552
DISCARD  ST    @14,@SA00003                                        0552
*/*                                                                  */
*                                                                  0553
*   RPARM->PRFNBUNT=0;              /* SET NUMBER OF UNITS = 0 (THIS
*                                      MEANS IEDQGB WILL CALCULATE 0553
*                                      THE NUMBER OF UNITS TO BE   0553
*                                      FREED)                        */
         MVI   PRFNBUNT(RPARM),X'00'                               0553
*   RPARM->PRFQCBA=ADDR(AVTBFRTB);  /* ADDR OF BUFFER RETURN QCB     */
         LA    @10,AVTBFRTB(,IEDQAPTR)                             0554
         STCM  @10,7,PRFQCBA(RPARM)                                0554
*   RPARM->PRFPRI=PRIBFRTB;         /* POST PRIORITY                 */
         MVI   PRFPRI(RPARM),X'E0'                                 0555
*   CALL DSPPOSTR;                  /* FREE UNITS                    */
         LA    @15,DSPPOSTR(,RDISP)                                0556
         BALR  @14,@15                                             0556
*/*                                                                  */
*                                                                  0557
*   END DISCARD;                                                   0557
@EL00003 DS    0H                                                  0557
@EF00003 DS    0H                                                  0557
@ER00003 L     @14,@SA00003                                        0557
         BR    @14                                                 0557
*                                                                  0558
*   /*****************************************************************/
*   /*                                                               */
*   /* OUTDHPST: POST PIU TO OUTDH WITHOUT TRANSFORMING TO A TCAM    */
*   /* BUFFER. OUTDH USES THESE RESPONSE ONLY AS A TRIGGER TO DRIVE  */
*   /* OTHER PROCESSING, THUS THEY CAN BE IN PIU FORM.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0558
*OUTDHPST:                                                         0558
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0558
OUTDHPST DS    0H                                                  0559
*   RPARM=RPRF;                     /* ELEMENT ADDR                  */
         LR    RPARM,RPRF                                          0559
*   PRFLCB=RLCB;                    /* LCB ADDR                      */
         STCM  RLCB,7,PRFLCB(IEDQPPTR)                             0560
*   PRFPRI=PRIRESUM;                /* PRIORITY                      */
         MVI   PRFPRI(IEDQPPTR),X'E5'                              0561
*   PRFQCBA=SAVTCNIR;               /* QCB ADDR (IEDNKA)             */
         L     @10,AVTSAVTP(,IEDQAPTR)                             0562
         MVC   PRFQCBA(3,IEDQPPTR),SAVTCNIR+1(@10)                 0562
*   CALL DSPPOST;                   /* POST BUFFER                   */
         LA    @15,DSPPOST(,RDISP)                                 0563
         BALR  @14,@15                                             0563
*   END OUTDHPST;                                                  0564
@EL00004 DS    0H                                                  0564
@EF00004 DS    0H                                                  0564
@ER00004 BR    @14                                                 0564
*                                                                  0565
*   /*****************************************************************/
*   /*                                                               */
*   /* POST PLCB TO IEDQBD TO REDRIVE THE SCHEDULERS                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0565
*POSTPLCB:                                                         0565
*   PROC OPTIONS(SAVE(14),RETREG);                                 0565
*                                                                  0565
POSTPLCB ST    @14,@SA00005                                        0565
*/*                                                                  */
*                                                                  0566
*   RPARM=RLCB;                     /* PARM REG POINTS TO ELEMENT    */
         LR    RPARM,RLCB                                          0566
*   LCBPRI=PRILCB;                  /* PRIORITY OF POST              */
         MVI   LCBPRI(IEDQLPTR),X'E7'                              0567
*   LCBQCBA=AVTMSGS->BDQCB;         /* BD'S QCB ADDRESS              */
         L     @10,AVTMSGS-1(,IEDQAPTR)                            0568
         MVC   LCBQCBA(3,IEDQLPTR),BDQCB+1(@10)                    0568
*   CALL DSPPOSTR;                                                 0569
*                                                                  0569
         LA    @15,DSPPOSTR(,RDISP)                                0569
         BALR  @14,@15                                             0569
*/*                                                                  */
*                                                                  0570
*   END POSTPLCB;                   /* RETURN TO CALLER              */
@EL00005 DS    0H                                                  0570
@EF00005 DS    0H                                                  0570
@ER00005 L     @14,@SA00005                                        0570
         BR    @14                                                 0570
@PB00005 DS    0H                                                  0571
         EJECT
*                                                                  0571
*/********************************************************************/
*/*                                                                  */
*/* THIS ROUTINE PROCESSES WRITE COMMANDS.                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0571
*WRTPROC:                                                          0571
*   RLCB=QCBPLCBA;                  /* PLCB ADDRESSABILITY           */
WRTPROC  LR    @09,IEDQQPTR                                        0571
         AL    @09,@CF02242                                        0571
         L     RLCB,QCBPLCBA-5(,@09)                               0571
         LA    RLCB,0(,RLCB)                                       0571
*/*                                                                  */
*/*IF A WRITE IS IN PROGRESS AT SAME TIME AS STOPLINE,I THE WRITE    */
*/*WILL BE TERMINATED                                                */
*/*                                                                  */
*                                                                  0572
*   IF TRMASNXI=ON THEN             /* HAS RESET IMMEDIATE BEEN    0572
*                                      ISSUED?                       */
         TM    TRMASNXI(RTRM),B'00010000'                          0572
         BNO   @RF00572                                            0572
*     DO;                                                          0573
*       TRMASNXI=OFF;               /* RESET STOPLINE INDICATOR      */
         NI    TRMASNXI(RTRM),B'11101111'                          0574
*       IF LCBMSGNN=ON THEN         /* IF THIS IS A MSGGEN DURING A
*                                      STOP LINE, THE ERB WILL BE  0575
*                                      POSTED TO IEDQBD              */
         TM    LCBMSGNN(IEDQLPTR),B'01000000'                      0575
         BNO   @RF00575                                            0575
*         DO;                                                      0576
*           RPARM=RPRF;                                            0577
         LR    RPARM,RPRF                                          0577
*           CALL DISCARD;           /* FREE THE BUFFER               */
         BAL   @14,DISCARD                                         0578
*           LCBMSGNN=OFF;           /* INDICATE MSGGEN NOT OUT       */
         NI    LCBMSGNN(IEDQLPTR),B'10111111'                      0579
*           PRFPRI=PRIRCQCB;        /* SET PRIORITY FOR ERB POST     */
         MVI   PRFPRI(IEDQPPTR),X'E0'                              0580
*           LCBERBQB=AVTMSGS->BDQCB;/* IEDQBD'S QCB ADDRESS          */
         L     @10,AVTMSGS-1(,IEDQAPTR)                            0581
         MVC   LCBERBQB(3,IEDQLPTR),BDQCB+1(@10)                   0581
*           RPARM=ADDR(LCBERB);     /* POSTED ELEMENT IS ERB         */
         LA    RPARM,LCBERB(,IEDQLPTR)                             0582
*           CALL DSPPOST;                                          0583
         LA    @15,DSPPOST(,RDISP)                                 0583
         BALR  @14,@15                                             0583
*         END;                                                     0584
*       ELSE                                                       0585
*         IF TRMNLOUT=ON THEN       /* IF A NULL WRITE IS IN PROGRESS
*                                      DURING STOPLINE,I             */
         B     @RC00575                                            0585
@RF00575 TM    TRMNLOUT(RTRM),B'00000100'                          0585
         BNO   @RF00585                                            0585
*           DO;                                                    0586
*             IF BDUMODIF=CD0WT THEN/* IF THIS IS A NULL WR TX       */
         CLI   BDUMODIF+14(PIUSTART),X'02'                         0587
         BNE   @RF00587                                            0587
*               DO;                                                0588
*                 LCBRESP=OFF;      /* TURN OFF RESPONSE OWED        */
         NI    LCBRESP(IEDQLPTR),B'11111110'                       0589
*                 RPARM=RPRF;       /* PASS PIU ADDR         @YM08463*/
         LR    RPARM,RPRF                                          0590
*                 CALL DISCARD;     /* FREE PIU              @YM08463*/
         BAL   @14,DISCARD                                         0591
*                 LCBRCLLN=ON;      /* INDICATE BFRS FREED   @YM08463*/
         OI    LCBRCLLN(IEDQLPTR),B'10000000'                      0592
*                 CALL POSTPLCB;    /* POSTPLCB TO IEDQBD            */
         BAL   @14,POSTPLCB                                        0593
*                 CALL DSPDISP;     /* EXIT                          */
         LA    @15,DSPDISP(,RDISP)                                 0594
         BALR  @14,@15                                             0594
*               END;                                               0595
*             ELSE                  /* IF THIS IS A NULL WRITE BLOCK
*                                      FOR SPEC OUT PROCESSING THEN  */
*               DO;                                                0596
         B     @RC00587                                            0596
@RF00587 DS    0H                                                  0597
*                 QCBSDFFO=OFF;     /* TURN OFF SENDING BIT AND    0597
*                                      SIMULATE A GOOD COMPLETION BY
*                                      POSTING PIU BACK TO OUTDH. THE
*                                      NEXT WRITE BUFFER WILL FOLLOW
*                                      THE "ABORT" EXCEPTION PATH IN
*                                      THIS MODULE AND THUS TERMINATE
*                                      THE WRITE                     */
         NI    QCBSDFFO(IEDQQPTR),B'11111011'                      0597
*                 CALL OUTDHPST;                                   0598
         BAL   @14,OUTDHPST                                        0598
*               END;                                               0599
*           END;                                                   0600
*         ELSE                      /*                       @YM08038*/
*           IF TTHTAG2=TTHABORT&    /* IF NULL WRITE TO ABORT      0601
*                                                            @YM08038*/
*               TTHTAG1=0 THEN      /* AN INPUT OPERATION    @YM08038*/
         B     @RC00585                                            0601
@RF00585 CLI   TTHTAG2(PIUSTART),X'04'                             0601
         BNE   @RF00601                                            0601
         CLI   TTHTAG1(PIUSTART),0                                 0601
         BNE   @RF00601                                            0601
*             DO;                   /*                       @YM08038*/
*               LCBUSUE=ON;         /* INDICATE END OF RCV OPERATION
*                                                            @YM08038*/
         OI    LCBUSUE(IEDQLPTR),B'00000001'                       0603
*               CALL OUTDHPST;      /* RETURN RESPONSE TO IEDNKA   0604
*                                                            @YM08038*/
         BAL   @14,OUTDHPST                                        0604
*             END;                  /*                       @YM08038*/
*           ELSE                                                   0606
*             CALL ABORT;           /* THIS SUBROUTINE TERMINATES  0606
*                                      DATA WRITES                   */
         B     @RC00601                                            0606
@RF00601 BAL   @14,ABORT                                           0606
*     END;                                                         0607
*                                                                  0607
*/*                                                                  */
*/*STOPLINE,I IS NOT IN PROGRESS                                     */
*/*                                                                  */
*                                                                  0608
*   ELSE                                                           0608
*     DO;                                                          0608
         B     @RC00572                                            0608
@RF00572 DS    0H                                                  0609
*       IF LCBMSGNN=ON×             /* IF MSGGEN OR          @YM08038*/
*           (TTHTAG2=TTHABORT&      /* NULL WRITE TO ABORT   @YM08038*/
*           TTHTAG1=0) THEN         /* AN INPUT OPERATION THEN     0609
*                                                            @YM08038*/
         TM    LCBMSGNN(IEDQLPTR),B'01000000'                      0609
         BO    @RT00609                                            0609
         CLI   TTHTAG2(PIUSTART),X'04'                             0609
         BNE   @RF00609                                            0609
         CLI   TTHTAG1(PIUSTART),0                                 0609
         BNE   @RF00609                                            0609
@RT00609 DS    0H                                                  0610
*         CALL BYPPCOUT;            /* BYPASS TO PATH CONTROL      0610
*                                      OUTBOUND                      */
         BAL   @14,BYPPCOUT                                        0610
*       ELSE                        /* NOT MSGGEN                    */
*         DO;                                                      0611
         B     @RC00609                                            0611
@RF00609 DS    0H                                                  0612
*           IF LCBABRTN=ON THEN     /* ABORT SEQUENCE                */
         TM    LCBABRTN(IEDQLPTR),B'00000001'                      0612
         BNO   @RF00612                                            0612
*             DO;                   /* YES                           */
*               RPARM=RPRF;         /* PIU BUFFER ADDRESS            */
         LR    RPARM,RPRF                                          0614
*               CALL DISCARD;       /* DISCARD PIU BUFFER            */
         BAL   @14,DISCARD                                         0615
*               CALL DSPDISP;       /* EXIT TO DISPATCHER            */
         LA    @15,DSPDISP(,RDISP)                                 0616
         BALR  @14,@15                                             0616
*             END;                                                 0617
*           ELSE                    /* NOT ABORT SEQUENCE            */
*             CALL BYPPCOUT;        /* BYPASS TO PATH CONTROL      0618
*                                      OUTBOUND                      */
         B     @RC00612                                            0618
@RF00612 BAL   @14,BYPPCOUT                                        0618
*         END;                                                     0619
*     END;                                                         0620
*   END IEDSAO                                                     0621
*                                                                  0621
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TDISPD  )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (TPIU0D  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TRSPD   )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  0621
*       ;                                                          0621
@EL00001 DS    0H                                                  0621
@EF00001 DS    0H                                                  0621
@ER00001 BR    @14                                                 0621
@DATA    DS    0H
@CH01197 DC    H'10'
         DS    0F
@SA00003 DS    1F
@SA00005 DS    1F
         DS    0F
@CF00035 DC    F'18'
@CF02242 DC    F'-4'
@CV02195 DC    V(IEDPCOUT)
         DS    0D
@TS00001 DS    CL2
@CB01307 DC    X'08000002'
@CB01596 DC    X'0B8000'
         DS    CL3
PIUSAVE  DS    CL20
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PIUSTART EQU   @10
IEDQAPTR EQU   @13
RDISP    EQU   @11
IEDQLPTR EQU   @04
LCBXPTR  EQU   @05
IEDQPPTR EQU   @06
IEDQQPTR EQU   @07
RTRM     EQU   @08
RPARM    EQU   @01
REG0     EQU   @00
RSTCB    EQU   @03
RLCB     EQU   @04
RPRF     EQU   @06
RQCB     EQU   @07
RBASE    EQU   @12
RAVT     EQU   @13
R14      EQU   @14
R15      EQU   @15
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
@NM00003 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+352
AVTOSECB EQU   IEDQAVTD+420
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTMSGS  EQU   IEDQAVTD+657
AVTBFRTB EQU   IEDQAVTD+720
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTBIT1  EQU   IEDQAVTD+978
AVTBIT2  EQU   IEDQAVTD+979
AVTBIT3  EQU   IEDQAVTD+980
AVTBIT4  EQU   IEDQAVTD+1064
@NM00085 EQU   IEDQAVTD+1160
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTCNIR EQU   IEDNSVTD+56
SAVTLUSQ EQU   IEDNSVTD+88
SAVTXFMI EQU   IEDNSVTD+132
SAVTSAI  EQU   IEDNSVTD+184
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTNETF EQU   IEDNSVTD+324
SAVTCDRV EQU   IEDNSVTD+332
IEDBDU   EQU   0
BDUCMND  EQU   IEDBDU
BDUMODIF EQU   IEDBDU+1
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUERROR EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDURESP  EQU   BDUSYRSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDQDISP EQU   0
DSPDISP  EQU   4
DSPBYPAS EQU   20
DSPPOST  EQU   24
DSPPOSTR EQU   28
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBQCBA  EQU   LCBRCB+1
LCBPRI   EQU   LCBRCB+4
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBABRTN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBUSUE  EQU   LCBCSWUS
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
@NM00117 EQU   IEDQLCB+60
LCBINCAM EQU   @NM00117
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBRCLLN EQU   LCBSTAT1
LCBSTAT2 EQU   LCBSTATE+1
LCBMSGNN EQU   LCBSTAT2
LCBBEOTN EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBRESP  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBQB EQU   LCBERB+1
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBMSGFM EQU   IEDQLCB+92
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBERMSK EQU   LCBOBRCH
LCBNXMOD EQU   LCBERMSK
LCBSTAT7 EQU   LCBNXMOD
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
IEDPIU0  EQU   0
PIU0TH   EQU   IEDPIU0
PIU0RH   EQU   IEDPIU0+10
PIU0PAD  EQU   IEDPIU0+13
PIU0RU   EQU   IEDPIU0+14
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFTI0   EQU   PRFTIC+1
PRFVTCHK EQU   PRFTI0+2
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
PRFLCB   EQU   IEDQPRF+13
PRFSRCSZ EQU   IEDQPRF+16
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
PRF1RULN EQU   PRF1SEQP+2
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBELCHN EQU   IEDQQCB+1
QCBSTCHN EQU   IEDQQCB+9
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
QCBTSOF2 EQU   QCBINSRC+1
QCBTSOF1 EQU   QCBINSRC+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
QCBSDFFO EQU   QCBFLAG
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHTYPE  EQU   TRHBYTE0
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHDAF   EQU   IEDTH+2
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHTAG2  EQU   TTHTAG+1
TTHDCF   EQU   IEDTH+8
IEDTRM   EQU   0
IEDNTRM  EQU   IEDTRM
TRMINDEX EQU   IEDNTRM
TRMCOHTG EQU   IEDNTRM+2
TRMBYTE6 EQU   TRMCOHTG
TRMCDF0  EQU   TRMBYTE6
TRMBYTE5 EQU   TRMCOHTG+1
TRMBYTE4 EQU   IEDNTRM+4
TRMBYTE3 EQU   IEDNTRM+5
TRMBYTE2 EQU   IEDNTRM+6
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+7
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+10
TRMNOWCD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+11
TRMLTRAC EQU   TRMSIBPT
TRMRLMCT EQU   IEDNTRM+14
TRMLGBST EQU   TRMRLMCT
IEDQTRM  EQU   IEDTRM+18
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMRSTRT EQU   TRMDESTQ+2
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMSESCT EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMPLIM  EQU   TLISTEN+1
TRMALTD  EQU   IEDQTRM+8
TRMPRILK EQU   TRMALTD
TRMDEVFL EQU   IEDQTRM+10
TRMADDC  EQU   TRMDEVFL
TRMNCPI  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMSIO   EQU   TRMSTAT
TRMOWNER EQU   TRMSIO
IEDQTNT  EQU   0
BDQCB    EQU   0
PIU      EQU   0
DSPCHAIN EQU   12
DSPLIFO  EQU   56
DSPLIFOR EQU   60
DSPLIST  EQU   8
DSPPRIO  EQU   48
DSPPRIOR EQU   52
DSPTRACE EQU   64
DSPTSTQ  EQU   32
DSPTSTQR EQU   36
DSPUNAV  EQU   40
DSPUNAVR EQU   44
DSPWAIT  EQU   16
IEDXFMI  EQU   0
QCBLDCB  EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBRHSV  EQU   LCBRSPIN+2
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00139 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
@NM00162 EQU   PRFSRCSZ
@NM00172 EQU   QCBFHDLZ
IEDQSPTR EQU   LCBSCBA
TRMDIALQ EQU   TRMPLIM
@NM00195 EQU   TRMSTATE
TRMCDFD0 EQU   TRMBYTE5
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMLU1   EQU   TRMBYTE4
TRMLINK1 EQU   TRMBYTE4
TRMDCONS EQU   TRMLINK1
TRMPRE   EQU   TRMBYTE3
TRMASNXI EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMCDMGR EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
BDUTEXT  EQU   BDUEND
PRFSHDR  EQU   IEDQPRF+42
SCBRGSAV EQU   SCBEND
TRMOPT   EQU   IEDQTRM+20
TRMPOOLP EQU   TRMINSEQ
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
TRMLDISC EQU   TRMLINK
@NM00212 EQU   TRMLINK
TRMLALOC EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMCDLOG EQU   TRMCDMGR
@NM00211 EQU   TRMCDMGR
@NM00210 EQU   TRMCDMGR
@NM00209 EQU   TRMCDMGR
@NM00208 EQU   TRMCDMGR
@NM00207 EQU   TRMCDMGR
TRMBKDUP EQU   TRMCDMGR
TRMLULOG EQU   TRMLU
@NM00206 EQU   TRMLU
@NM00205 EQU   TRMLU
@NM00204 EQU   TRMLU
TRMTDIFF EQU   TRMLU
@NM00203 EQU   TRMLU
@NM00202 EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
TRMPDOCQ EQU   TRMPU
TRMPULOC EQU   TRMPU
TRMPDNAS EQU   TRMPU
TRMPALOC EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMNCPLK EQU   TRMLINK1
@NM00201 EQU   TRMLINK1
TRMDCONN EQU   TRMDCONS
TRMDCOP  EQU   TRMDCONS
TRMPMARY EQU   TRMLU1
@NM00200 EQU   TRMLU1
@NM00199 EQU   TRMLU1
TRMCDSRQ EQU   TRMLU1
TRMLSCVP EQU   TRMLU1
@NM00198 EQU   TRMLU1
@NM00197 EQU   TRMNCP1
TRMLINOP EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMINERR EQU   TRMCDFD0
TRMLUTM  EQU   TRMCDFD0
TRMLUIT  EQU   TRMCDFD0
TRMLUREQ EQU   TRMCDFD0
TRMCDPRE EQU   TRMCDFD0
TRMWASCD EQU   TRMCDFD0
TRMSRPFG EQU   TRMCDFD0
TRMSESRQ EQU   TRMCDFD0
@NM00196 EQU   @NM00195
TRMENTRY EQU   @NM00195
TRMSRPTR EQU   TRMDIALQ
QCBPFEFO EQU   @NM00172+1
QCBDATFL EQU   @NM00172
PRFSVFLG EQU   @NM00162+3
PRFSVFFO EQU   @NM00162
@NM00146 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00145 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00144 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00143 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00142 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00141 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
LCBSIBPT EQU   @NM00139+8
LCBSUSPT EQU   @NM00139+4
LCBNCPPT EQU   @NM00139+1
@NM00140 EQU   @NM00139
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00138 EQU   LCBRSPFG
LCBIMRSP EQU   LCBRSPFG
LCBPRSPO EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00137 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00136 EQU   LCBCSWU1
@NM00135 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBPACRS EQU   LCBRHSV
@NM00134 EQU   LCBRHSV
LCBSNS0  EQU   LCBRSPIN+1
@NM00133 EQU   LCBRSPIN
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMNADDR EQU   TRMOWNER
@NM00194 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
@NM00193 EQU   TRMNCPI
TRMRNTRM EQU   TRMDEVFL+1
@NM00192 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMSCV   EQU   TRMADDC
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMSTEAL EQU   TRMPRILK
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TRMSESCT
TRMVERIF EQU   TRMRSTRT
@NM00191 EQU   TRMRSTRT
@NM00190 EQU   TRMDESTQ
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+16
TRMTYPE  EQU   IEDNTRM+15
TRMPRIME EQU   TRMLGBST
TRMOWNR  EQU   TRMLTRAC+1
TRMGPCNT EQU   TRMLTRAC
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMACDC  EQU   TRMNOWCD
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+8
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
@NM00189 EQU   TRMCDF0
TRMPURGE EQU   TRMCDF0
TRMCDST  EQU   TRMINDEX
@NM00188 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00187 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBSCHDR EQU   SCBCLSEG
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00186 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00185 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00184 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBFMM  EQU   SCBQTYPE
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00183 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBMACR  EQU   SCBMBHEN
SCBSNDCT EQU   SCBRCVCT
SCBDESTQ EQU   IEDQSCB+1
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
@NM00182 EQU   TRHBYTE2
@NM00181 EQU   TRHBYTE2
@NM00180 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00179 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
TRHQRI   EQU   TRHBYTE1
@NM00178 EQU   TRHBYTE1
@NM00177 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00176 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00175 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
QCBTTCIN EQU   QCBPLCBA+1
@NM00174 EQU   QCBPLCBA
@NM00173 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00171 EQU   QCBFHDTZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   QCBINSRC
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00170 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00169 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00168 EQU   QCBELCHN+2
@NM00167 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00166 EQU   IEDPF2+1
@NM00165 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RCDE EQU   PRF1RULN
PRF1TAG2 EQU   PRF1SQID+1
@NM00164 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00163 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00161 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSIZE  EQU   PRFSRCSZ+2
PRFSRCE  EQU   PRFSRCSZ
@NM00160 EQU   PRFVTCHK
PRFITSET EQU   PRFVTCHK
@NM00159 EQU   PRFVTCHK
@NM00158 EQU   PRFTI0
@NM00157 EQU   PRFTICC
@NM00156 EQU   PRFTICC
@NM00155 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00154 EQU   PRFTICC
@NM00153 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00152 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00151 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00150 EQU   LCBXFLAG
@NM00149 EQU   LCBXFLAG
@NM00148 EQU   LCBXFLAG
@NM00147 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00132 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00131 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
@NM00130 EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00129 EQU   LCBSTAT5
LCBSUSFG EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
@NM00128 EQU   LCBSTAT7
LCBCDFD0 EQU   LCBSTAT7
LCBOLT   EQU   LCBMSGFM
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
LCBTTCIN EQU   IEDQLCB+90
@NM00127 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
@NM00126 EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBPY EQU   IEDQLCB+80
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00125 EQU   LCBTSTSW
@NM00124 EQU   LCBTSTSW
@NM00123 EQU   LCBTSTSW
@NM00122 EQU   LCBTSTSW
@NM00121 EQU   LCBTSTSW
@NM00120 EQU   LCBTSTSW
@NM00119 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBNEGRP EQU   LCBSTAT2
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
LCBINTBF EQU   LCBINCAM+1
@NM00118 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00116 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00115 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00114 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00113 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00112 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00111 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00110 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00109 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00108 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
LCBLKDST EQU   LCBINSRC
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBRSKEY EQU   IEDQLCB+8
LCBLINK  EQU   LCBRCB+5
LCBKEY   EQU   LCBRCB
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
SAVTSCF0 EQU   IEDNSVTD+376
SAVTLSNY EQU   IEDNSVTD+372
SAVTLSZP EQU   IEDNSVTD+368
SAVTOMSU EQU   IEDNSVTD+364
SAVTGTSB EQU   IEDNSVTD+360
SAVTHIBL EQU   IEDNSVTD+356
SAVTHISY EQU   IEDNSVTD+352
SAVTNAX2 EQU   IEDNSVTD+348
SAVTCDRU EQU   IEDNSVTD+344
SAVTPOLC EQU   IEDNSVTD+342
SAVTPOLM EQU   IEDNSVTD+340
SAVTPOLR EQU   IEDNSVTD+336
SAVTCDRN EQU   SAVTCDRV
SAVTPOLL EQU   IEDNSVTD+328
SAVTPOLN EQU   IEDNSVTD+326
@NM00107 EQU   IEDNSVTD+325
@NM00106 EQU   SAVTNETF
SAVTSDIS EQU   SAVTNETF
SAVTROUT EQU   SAVTNETF
SAVTNETW EQU   SAVTNETF
SAVTDIAL EQU   IEDNSVTD+320
SAVTRQUT EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTSITS  EQU   IEDQAVTD+1192
AVTMSUHI EQU   IEDQAVTD+1188
AVTSITU  EQU   IEDQAVTD+1184
AVTSITP  EQU   IEDQAVTD+1180
AVTPADDR EQU   IEDQAVTD+1176
@NM00091 EQU   IEDQAVTD+1174
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00090 EQU   IEDQAVTD+1170
@NM00089 EQU   IEDQAVTD+1169
@NM00088 EQU   IEDQAVTD+1168
@NM00087 EQU   IEDQAVTD+1165
@NM00086 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00085
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00084 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00083 EQU   IEDQAVTD+1068
@NM00082 EQU   IEDQAVTD+1065
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00074 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00073 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00072 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00071 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTDCTLN EQU   IEDQAVTD+1000
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTSTEAL EQU   IEDQAVTD+988
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00070 EQU   AVTBIT2
@NM00069 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTKEYLE EQU   IEDQAVTD+960
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00068 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00067 EQU   IEDQAVTD+878
@NM00066 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00065 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00052 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00051 EQU   IEDQAVTD+808
AVTDSIOB EQU   IEDQAVTD+804
@NM00050 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00049 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00048 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00047 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00046 EQU   AVTOPCQB+8
@NM00045 EQU   AVTOPCEC+1
@NM00044 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00043 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00042 EQU   AVTCKPEC+1
@NM00041 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00040 EQU   IEDQAVTD+724
@NM00039 EQU   IEDQAVTD+712
AVTBFREB EQU   IEDQAVTD+708
AVTTIMQ  EQU   IEDQAVTD+704
@NM00038 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00037 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTTSOPT EQU   IEDQAVTD+668
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00030 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00029 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00022 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00021 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00020 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00019 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00018 EQU   AVTSAVTP+1
@NM00017 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00016 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTSEND  EQU   IEDQAVTD+524
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00015 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00014 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
@NM00013 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00012 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTOCGET EQU   IEDQAVTD+320
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+312
AVTREADD EQU   IEDQAVTD+308
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTCSTCS EQU   IEDQAVTD+256
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00512 EQU   @PB00002
@RC00510 EQU   @PB00002
@RC00483 EQU   @PB00002
@RC00522 EQU   @EL00002
@PB00004 EQU   @PB00005
@RC00572 EQU   @EL00001
@RC00609 EQU   @EL00001
@RC00612 EQU   @EL00001
@RC00485 EQU   @RC00483
@RF00514 EQU   @RC00512
@PB00003 EQU   @PB00004
@RC00601 EQU   @RC00572
@RC00585 EQU   @RC00572
@RC00575 EQU   @RC00572
@RC00587 EQU   @RC00585
@ENDDATA EQU   *
         END   IEDSAO,(C'PLS1818',0701,77307)
