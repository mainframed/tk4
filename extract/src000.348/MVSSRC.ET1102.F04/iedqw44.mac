QW44     TITLE 'IEDQW44 - DIO SERVICE MODULE'                         *
IEDQW44  CSECT                                                        *
*A000000-999999                                                @Y16X5U0
* CHANGE ACTIVITY AS FOLLOWS:                                    S22024
*A272900,354000,366000,661000,783000                           @Y17XAUU
*C691000-715400
* A008200,665400                                               @G36XRUV
* C429000,447000,665460                                        @G36XRUV
*
         SPACE 4                                                      *
****************************************************************
*                                                              *
* MODULE NAME = IEDQW44 (TCAM,TOTE)                            @Y17XAUU
*                                                              * S22024
* DESCRIPTIVE NAME = TOTE DIO MODULE                           * S22024
*                                                              * S22024
* COPYRIGHT = NONE                                             * S22024
*                                                              * S22024
* STATUS --                                                    *
*    VERSION 10.0                                              @Y17XAUU
*                                                              *
* FUNCTIONS --                                                 *
*    THE PURPOSE OF THIS ROUTINE IS TO ISSUE A HIO TO A        *
*    TEST DEVICE/LINE. CONTROL BLOCKS ARE SET UP AND THE       *
*    IOHALT MACRO IS EXECUTED. REGISTERS ARE RESTORED          *
*    AND CONTROL IS RETURNED TO THE UNIT TEST.                 *
*                                                              *
*    AT THE COMPLETION OF THIS ROUTINE ONE OF THE FOLLOWING    *
*    CODES IS PLACED IN REGISTER 15:                           *
*                                                              *
*    X'00' - NORMAL COMPLETION                                 *
*    X'04' - FUNCTION NOT AVAILABLE                            *
*    X'08' - I/O ERROR                                         *
*                                                              *
* PURPOSE -- SEE FUNCTION                                      @Y17XAUU
*                                                              @Y17XAUU
* MODULE TYPE -- PROCEDURE                                     @Y17XAUU
*                                                              @Y17XAUU
* MODULE SIZE -- 2K MAXIMUM                                    @Y17XAUU
*                                                              @Y17XAUU
* LINKAGE -- BALR R14,R15 FROM IEDQWA                          @Y17XAUU
*                                                              @Y17XAUU
* MACROS -- IEDHJN,IEDHALT                                     @Y17XAUU
*                                                              @Y17XAUU
* ENTRY POINTS --                                              *
*    IEDQW44 - CALLED WHEN THE UNIT TEST ISSUES A DIO MACRO.   *
*                                                              *
* INPUT --                                                     *
*    REGISTER 01, 02, 13, 14, 15 CONTAIN THE FOLLOWING VALUES  *
*                                                              *
*    01 - MESSAGE PARAMETER LIST ADDRESS                       *
*    02 - OLTCB BASE POINTER                                   *
*    13 - CALLER'S SAVE AREA ADDRESS                           *
*    14 - CALLER'S RETURN ADDRESS                              *
*    15 - IEDQW44 ENTRY POINT ADDRESS                          *
*                                                              *
* OUTPUT --                                                    *
*    THE RETURN CODE IS PLACED IN THE OLTCB                    *
*                                                              *
* EXTERNAL REFERENCES --                                       *
*    NONE                                                      *
*                                                              *
* EXITS,NORMAL --                                              *
*    RETURN TO CALLER                                          *
*    BR   TO IEDQWM2 TO PROVIDE TRACE FUNCTION                 @Y17XAUU
*                                                              *
* EXITS,ERROR --                                               *
*    RETURN TO CALLER                                          *
*    BR   TO IEDQWM2 TO PROVIDE TRACE FUNCTION                 @Y17XAUU
*                                                              *
* TABLES/WORK AREAS --                                         *
*    OLTCB,TECB,IOB,DCB,ECB                                    *
*                                                              *
* ATTRIBUTES --                                                *
*    ENABLED, PROBLEM PROGRAM MODE, RESIDENT, REENTRANT        @Y17XAUU
*                                                              *
* NOTES -- SEE BELOW                                           @Y17XAUU
*                                                              *
*  DEPENDENCIES -- EBCDIC CHARACTER CODE                       @Y17XAUU
*                                                              @Y17XAUU
*  REGISTERS CONVENTION -- SEE REGISTER ASSIGNMENT             @Y17XAUU
*                                                              @Y17XAUU
*  PATCH LABEL -- PATCH                                        @Y17XAUU
*                                                              @Y17XAUU
*  RESTRICTIONS -- NONE                                        @Y17XAUU
****************************************************************
         EJECT
*
*        E Q U A T E S
*
D0       EQU   0                  DISP OF 0
D1       EQU   1                  DISP OF 1
D2       EQU   2                  DISP OF 2
D3       EQU   3                  DISP OF 3
D4       EQU   4                  DISP OF 4
D5       EQU   5                  DISP OF 5
D6       EQU   6                  DISP OF 6
D7       EQU   7                  DISP OF 7
D8       EQU   8                  DISP OF 8
D9       EQU   9                  DISP OF 9
D10      EQU   10                 DISP OF 10
D11      EQU   11                 DISP OF 11
D12      EQU   12                 DISP OF 12
D13      EQU   13                 DISP OF 13
D14      EQU   14                 DISP OF 14
D15      EQU   15                 DISP OF 15
D16      EQU   16                 DISP OF 16
D20      EQU   20                 DISP OF 20
D24      EQU   24                 DISP OF 24
D28      EQU   28                 DISP OF 28
D32      EQU   32                 DISP OF 32
R0       EQU   0                  REG 0
R1       EQU   1                  REG 1
R2       EQU   2                  REG 2
R3       EQU   3                  REG 3
R4       EQU   4                  REG 4
R5       EQU   5                  REG 5
R6       EQU   6                  REG 6
R7       EQU   7                  REG 7
R8       EQU   8                  REG 8
R9       EQU   9                  REG 9
R10      EQU   10                 REG 10
R11      EQU   11                 REG 11
R12      EQU   12                 REG 12
R13      EQU   13                 REG 13
R14      EQU   14                 REG 14
R15      EQU   15                 REG 15
RTNALL   EQU   X'FF'              TEST ALL BITS FLAG
BADLEV   EQU   X'04'              UNAVAILABLE FUNCTION RETURN CODE
GDLEV    EQU   X'02'              LEVEL OF THIS MODULE
UNSUP    EQU   X'04'              UNSUPPORTED MACRO FUNCTION
BDCOD    EQU   X'08'              DEVICE STOPPED RETURN CODE
CVTADR   EQU   16                 POINTER TO CVT ADDR
PURRB    EQU   X'80'              PURGE DEB FLAG
GDRCOD   EQU   0                  RETURN CODE OF 0
PRIFLG   EQU   X'80'              TEST ON PRIMARY TERMINAL/LINE ?
FOUR     EQU   4                  VALUE OF 4
TWO      EQU   2                  VALUE OF TWO
EIGHT    EQU   8                  VALUE OF EIGHT
X3F      EQU   X'3F'              USED TO CLEAR FLAG
XFF      EQU   X'FF'              MASK FIELD
CC0      EQU   X'00'              CONDITION CODE 0
CC1      EQU   X'01'              CONDITION CODE 1
UCHK     EQU   X'02'              UNIT CHECK
XF0      EQU   X'F0'              MASK FIELD
DISREG2  EQU   28                 DISPLACEMENT TO REG 2        @Y17XAUU
         EJECT
         USING IEDQW44,R15
         SPACE
IEDQW44  IEDHJN STAR44,HJN
         SPACE
         DROP  R15
         SPACE
         SAVE  (14,12)            SAVE CALLER'S REGISTERS
         SPACE
         USING IEDQW44,R4
         USING TOTOLTCB,R2
         USING PLIST,R3
         LR    R3,R1              SET PARAMETER LIST BASE
         SPACE
         LR    R4,R15             SET BASE REGISTER FOR THIS MODULE
         SPACE
         LA    R15,TOTSAVE1       GET MY SAVE AREA ADDRESS
         ST    R15,D8(R13)        SAVE IT IN CALLER'S SAVE AREA
         ST    R13,D4(R15)        SAVE CALLER'S SAVE REG
         LR    R13,R15            SET UP SAVE AREA REG
         SPACE
         CLI   PLMLEV,GDLEV       CORRECT MACRO LEVEL ?
         BE    DI010              YES - CHECK FOR UNSUPPORTED FUNCTIONS
DI005    EQU   *
         LA    R15,BADLEV         SET RETURN CODE
         STC   R15,TOTRTCOD       SAVE RETURN CODE
         L     R13,D4(R13)        RESTORE SAVE AREA ADDR
         L     R14,D12(R13)       RESTORE REG 14
*
         USING RESPL,R5           SET RESPL ADDRESSABILITY     @Y17XAUU
         L     R5,TOTRESPL        GET RESPL ADDRESS            @Y17XAUU
         L     R15,RESPLM2        GET TRACE ROUTINE ADDRESS    @Y17XAUU
         LM    R2,R12,DISREG2(R13) RESTORE REGISTERS           @Y17XAUU
         BR    R15                EXIT TO TRACE ROUTINE        @Y17XAUU
         DROP  R5
*
         SPACE
DI010    EQU   *
         TM    PLOFLG,PLTIO+PLTCH TIO OR TCH REQUESTED ?
         BZ    DI015              NO
*
*        UNSUPPORTED MACRO FUNCTION REQUESTED
*
         OI    TOTFLG09,TOTMACFT  SET UNSUPPORTED MACRO FTN FLAG
         B     DI005              NOTIFY CTL TERMINAL OF ERROR
         SPACE 2
*
DI015    EQU   *
*        BEGIN PROCESSING OF HIO REQUEST
         ST    R1,PLSAVE          SAVE PLIST ADDR
         BAL   R5,CDSFIND         DETERMINE TEST TYPE
         TM    KFLAG,PRIFLG       PRIMARY TEST ?
         BO    DIPRI              YES
         B     DISEC              NO - HIO FOR SECONDARY DEVICE
*
DIPRI    EQU   *    HIO FOR PRIMARY DEVICE
*
         SR    R6,R6              CLEAR REG 6
         ICM   R6,3,TOTPRUCB      GET PRIMARY UCB ADDR         @G36XRUV
         B     DI020              EXIT TO VERIFY UCB CLASS
*
DISEC    EQU   *
*
         SR     R6,R6             CLEAR REG 6
         ICM    R6,3,TOTSCUCB     GET SECONDARY UCB ADDR       @G36XRUV
         SPACE
*
DI020    EQU   *    DETERMINE TEST DEVICE CLASS
*
         USING UCB,R6
         CLI   UCBTBYT3,UCB3COMM  TP CLASS ?
         BNE   DI030              NO - EXIT TO PURGE DEVICE (SVC 16)
         SPACE
         LR    R1,R6              SET UP PARAMETER FOR SVC 33 (IOHALT)
*
         SVC   33                 ISSUE IOHALT TO TEST DEVICE
*
         LTR   R15,R15            WAS DEVICE STOPPED
         BZ    DI025              YES
         CH    R15,INACT          WAS DEVICE ACTIVE
         BE    DI025              NO
*
         LA    R15,BDCOD          SET DEVICE NOT STOPPED RETURN CODE
         B     DI083              EXIT
*
         SPACE
DI025    EQU    *
         SR    R15,R15            CLEAR RETURN CODE REG
         B     DI080              EXIT
         SPACE 2
*
DI030    EQU   *    PURGE TEST DEVICE - NON TP
*
         L     R5,CVTADR          GET CVT ADDR
         USING CVT,R5
         L     R6,CVTTCBP         GET ADDR OF CURRENT TCB POINTER LIST
         L     R6,D4(R6)          GET CURRENT TCB ADDR
         ST    R6,PRGTCB-D1       PUT IN P-LIST
         DROP  R5
*
         L     R5,PLCNFG          GET ADDR OF CONFIGURATION DATA (SEC)
         LA    R5,D0(R5)          CLEAR HIGH ORDER BYTE
         LTR   R5,R5              IS ADDRESS ZERO
         BZ    DI035              YES - GET PRIMARY DEB ADDR
         L     R6,TOTSCDEB        NO - GET SECONDARY DEB ADDR
         B     DI040              CONTINUE PROCESSING
*
DI035    EQU   *
*
         L     R6,TOTPRDEB        GET PRIMARY DEB ADDR
*
DI040    EQU   *
*
         ST    R6,PRGDEB-D1       PUT DEB ADDR IN P-LIST
         SPACE
         MVI   PRGOPT,PURRB       SET OPTION FLAGS
         LA    R1,PRGOPT          GET ADDR OF REQUEST ELEMENT
         SPACE
         SVC   16
         SPACE
         B     DI025              EXIT
         SPACE 2
DI080    EQU   *
         EJECT
PRESULT  EQU   *
         DROP  R3
         USING PLIST,R12
         L     R12,PLSAVE         GET PLIST ADDR
         USING IOBLOCKS,R7
         L     R5,PLTECB          GET TECB ADDR
         NI    IOBFLG4,XFF-IOBCSWNV TURN OFF NOT VALID FLAG
         USING TTECB,R5
         SR    R8,R8                   CLEAR REG
         IC    R8,TECBFDCT             GET NUMBER OF EVENT BLOCKS
         SR    R3,R3                   CLEAR REG
         IC    R3,TECBEVOC             GET NUMBER OF EVENTS OCCURRED
         CR    R3,R8                   COMPARE NUMBER USED WITH NUMBER
*        OF BLOCKS
         BL    NXTENT                  ANY LEFT BRANCH TO FIND NEXT
NONELEFT LA    R3,1(R3)                ADD ONE TO OCCURRED EVENTS
         STC   R3,TECBEVOC             STORE IN TECB
CLEARECB XC    ECBOLT,ECBOLT           CLEAR ECB
         TM    IOBFLG4,IOBCSWNV   NOT VALID SET
         BO    PRESULT            YES BRANCH
         B     DI083              EXIT
***      FIND NEXT AVAILABLE EVENT ENTRY
NXTENT   EQU   *
         SR    R11,R11                 CLEAR REG
         IC    R11,TECBFDLN            GET LENGTH OF FIELD SIXE
         MR    R10,R3                  LENGTH OF ALL USED EVENT BLOCKS
         LA    R11,D8(R11)        ADD LENGTH OF FIXED AREA
         LR    R10,R5                  GET TECB ADDRESS
         AR    R10,R11                 POINT TO FIRST FREE EVENT BLOCK
         IC    R6,IOBSIOCD        GET CC
         SLL   R6,26              CLEAR ALL
         SRL   R6,30              OUT BUT CC
         STC   R6,IOBSIOCD        RETURN TO IOB
         MVC   D0(D1,R10),IOBSIOCD MOVE CC FROM UCB
         OI    D0(R10),XF0        CONVERT TO EBCDIC
         L     R1,OLTUCBA              GET UCB ADDRESS
         SRL   R1,D16             UCB ADDRESS
         USING UCB,R1
         MVC   D2(D2,R10),UCBCHA  MOVE IN I/O ADDR
         CLI   IOBSIOCD,CC0       CONDITION CODE = 0
         BE    ZEROCC             YES BRANCH
         CLI   IOBSIOCD,CC1       CONDITION CODE = 1
         BE    ONECC                   YES BRANCH
***      ASSUME CONDITION CODE 3
NOUSEDEV EQU   *
         LA    R3,D1(R3)          BUMP NUMBER OF USED BLKS
CONTSAVE STC   R3,TECBEVOC             SAVE EVENTS USED COUNT
         B     UNITCKTS                GO CHECK FOR UNIT CHECK
ONECC    EQU   *
         TM    IOBFLG4,IOBCSWV    SECOND CSW VALID
         BZ    MOVECSW            NO BRANCH
         NI    IOBFLG4,XFF-IOBCSWV TURN OFF FLAG
         OI    IOBFLG4,IOBCSWNV   TURN ON NOT VALID
         MVC   D5(D7,R10),IOBCSWS CSW TO TECB
         B     NOUSEDEV           GO INCREMENT EVENT COUNT
MOVECSW  EQU   *
         MVC   D5(D7,R10),IOBCSW1 CSW TO TECB
         B     NOUSEDEV                GO BUMP NUMBER USED EVENTS
ZEROCC   EQU   *
         TM    OLTFLAG2,OLTLV3IO       WAS EXIO LEVEL 3
         BO    LEVEL3                  YES BRANCH
         OI    D0(R10),XFF        CC OF 0
         B     ONECC              GO MOVE CSW
LEVEL3   EQU   *
         LA    R3,D1(R3)          BUMP NUMBER USED EVENT BLOCKS
         CR    R3,R8                   ANY MORE BLOCKS LEFT
         BE    NONELEFT                NO MORE BLOCKS BRANCH
         IC    R11,TECBFDLN            GET FIELD LENGTH
         AR    R10,R11                 POINT TO NEXT FIELD ENTRY
         OI    D0(R10),XFF        SET CC TO ALL ONES
         USING UCB,R1
         MVC   D2(D2,R10),UCBCHA  MOVE IN I/O ADDRESS
         MVC   D5(D7,R10),IOBCSW1 MOVE CSW TO TECB
         B     CONTSAVE                GO SAVE COUNT
UNITCKTS EQU   *
         TM    IOBCSW+D4,UCHK     UNIT CK IN CSW
         BZ    CLEARECB                NO BRANCH
         IC    R11,TECBFDLN            GET EVENT LENGTH
         MR    R10,R8                  GET LENGTH OF ALL EVENT BLOCKS
*                                      IN R11
         LA    R11,D8(R11)        ADD LENGTH OF FIXED AREA
         LR    R10,R5                  GET TECB ADDRESS
         AR    R10,R11                 POINT TO FIRST SENSE BLOCK
***      SENSE FIEND
         IC    R3,TECBSNOC             GET NUMBER OF USED SENSE BLOCKS
         IC    R11,TECBSNCT            GET NUMBER OF SENSE BLOCKS
         CR    R3,R11                  ALL USED?
         BNL   BUMPSNOC                YES BRANCH
         LH    R9,TECBSNLN             GET SIZE OF EACH SENSE FIELD
         MR    R8,R3                   SIZE SENSE FIELD TIMES # USED
         AR    R9,R10                  ADD TO ADDRESS OF FIRST SENSE
***                                    FIELD
         LH    R11,TECBSNLN            GET SIZE OF SENSE FIELD
         MVC   D1(D2,R9),UCBCHA   MOVE IN I/O ADDRESS
         L     R12,SENSELN             SENSE LENGTH COMPUTE
         SR    R11,R12                 FIND LENGTH OF SENSE TO MOVE
         EX    R11,SENSEMOV            GO MOVE SENSE
BUMPSNOC EQU   *
         LA    R3,D1(R3)          BUMP NUMBER USED SNS BLKS
         B     CLEARECB                BRANCH
         EJECT
*
DI083    EQU   *
*
         STC   R15,TOTRTCOD       SAVE RETURN CODE
         L     R13,D4(R13)        GET CALLER'S SAVE AREA ADDR
         L     R14,D12(R13)       RESTORE RETURN ADDR
         TM    $OLTFLGS,$TRACE    TRACE FUNCTION REQUESTED ?
         BO    DI095              YES
         CLI   TOTRTCOD,GDRCOD    ZERO RETURN CODE ?
         BE    DI085              YES
         CLI   $RETMASK,D0        ANY TRACE FLAGS SET          @Y17XAUU
         BNE   DI095              YES
DI085    EQU   *
         LM    R0,R12,D20(R13)    RESTORE CALLER'S REG
         BR    R14                RETURN
         SPACE
DI095    EQU   *
         L     R1,D20(R13)        RESTORE REG 1
         USING RESPL,R5           SET RESPL ADDRESSABILITY     @Y17XAUU
         L     R5,TOTRESPL        GET RESPL ADDRESS            @Y17XAUU
         L     R15,RESPLM2        GET TRACE ROUTINE ADDRESS    @Y17XAUU
         LM    R2,R12,DISREG2(R13) RESTORE REGISTERS           @Y17XAUU
         BR    R15                EXIT TO TRACE ROUTINE        @Y17XAUU
         DROP  R5                                              @Y17XAUU
         EJECT
*        DETERMINE WHETHER TO USE PRIMARY OR SECONDARY UCB
*
CDSFIND  EQU   *
         DROP  R12
         USING PLIST,R3
         STM   R7,R9,SAVE         SAVE REG
         CLC   PLCNFG(FOUR),ZEROADDR IS CDS ADDR EQU TO 0
         BE    CDSPRI             YES - SH0W PRIMARY TEST
*
         L     R7,PLCNFG          GET ADDR OF BASIC CDS INFO
         TM    TOTTDTBL,TOTTDTRM  TEST DEVICE A TERMINAL
         BZ    CDSLINE            NO - TEST IS FOR A LINE
         SR    R8,R8              CLEAR REG 8
         IC    R8,TOTTTBEL        GET LENGTH OF NAME FIELD IN
*                                 TERMNAME TABLE ENTRY
         BCT   R8,CDSLABEL        DECREMENT LENGTH BY 1
CDSLABEL EQU   *
         L     R9,TOTTNTPR        GET TNT ADDR OF PRIMARY DEVICE
*
         EX    R8,COMPARE         COMPARE SYMBOLIC NAME
         BE    CDSPRI             IF THE SAME SHOW PRIMARY
*
         L     R9,TOTSRTNT        GET TNT ADDR
*
         EX    R8,COMPARE         COMPARE SYMBOLIC NAME
         BE    CDSSEC             SECONDARY TEST
*
CDSPRI   EQU   *
         LA    R7,TOTPRIBK        SET UP PRIMARY IOBLOCKS BASE
         OI    KFLAG,PRIFLG       SHOW PRIMARY
         B     CDSEND             EXIT
CDSSEC   EQU   *
         LA    R7,TOTSCIBK        SET UP SECONDARY IOBLOCKS BASE
*
CDSEND   EQU   *
         LM    R8,R9,SAVE+D4      RESTORE REG
         BR    R5                 RETURN
*
CDSLINE  EQU   *
         SLR   R8,R8              CLEAR                        @G36XRUV
         ICM   R8,3,TOTPRUCB      GET PRIMARY UCB ADDR         @G36XRUV
         MVC   UCBAREA,FOUR(R8)   STORE UNIT ADDR
         NI    UCBAREA,X3F        CLEAR HI ORDER HALF BYTE
         CLC   UCBAREA,TWO(R7)    COMPARE UNIT NAMES
         BE    CDSPRI             SHOW PRINARY
         B     CDSSEC             SHOW SECONDARY
         EJECT
         EJECT
*
*        C O N S T A N T S
*
INACT    DC    H'4'               DEVICE INACTIVE
         SPACE
*
*        SVC 33 PARAMETER LIST
*
SENSELN  DC    F'4'               SENSE LENGTH FACTOR          @Y17XAUU
SENSEMOV MVC   3(0,R9),UCBSNS     MOVE UCB SENSE
COMPARE  CLC   D0(D0,R9),D12(R7)  COMPARE NAMES
PATCH    DS    CL150              PATCH AREA
         EJECT
PLIST    DSECT
PLFLG    DS    CL1                CONTROL PROGRAM FLAGS
PLMLEV   DS    AL1                MACRO LEVEL
PLID     DS    CL2                MACRO ID
PLCNFG   DS    A                  ADDR OF CONFIGURATION DATA
PLTECB   DS    A                  TECB ADDRESS
PLOFLG   DS    AL1                OPERATION FLAGS
*
PLHIO    EQU   X'01'              HIO OPERATION
PLTIO    EQU   X'02'              TIO OPERATION
PLTCH    EQU   X'04'              TCH OPERATION
*
         EJECT
IOBLOCKS IOBLOCKS
*
         SPACE 4
UCB      DSECT
         IEFUCBOB
         EJECT
         TTECB
         EJECT
CVT      DSECT
         CVT
         EJECT
RESPL    RESPL                                                 @Y17XAUU
         EJECT
         OLTCB
PRGOPT   DC    AL1(0)             PURGE OPTIONS                @Y17XAUU
PRGDEB   DC    AL3(0)             ADDRESS OF DEB               @Y17XAUU
PRGCOD   DC    AL1(0)             COMPLETION CODE              @Y17XAUU
PRGTCB   DC    AL3(0)             ADDRESS OF TCB               @Y17XAUU
PRGCTR   DC    AL1(0)             QUIESCE COUNT                @Y17XAUU
PRGCHN   DC    AL3(0)             ADDRESS OF FIRST LINK IN CHN @Y17XAUU
PRGFLG   DC    AL1(0)             FLAGS                        @Y17XAUU
PRGQUI   DC    AL3(0)             ADDR OF QUIESCE IO PARM LIST @Y17XAUU
PLSAVE   DC    F'0'               PLIST ADDR SAVE AREA         @Y17XAUU
SAVE     DC    3F'0'              SAVE AREA                    @Y17XAUU
ZEROADDR DC    F'0'               COMPARE FIELD                @Y17XAUU
UCBAREA  DC    H'0'               UCB UNIT NAME                @Y17XAUU
KFLAG    DC    X'00'              CONTROL FLAG                 @Y17XAUU
         END
