         TITLE 'IGCMU10D, MODEM SPEED SELECT                           *
                        '
IGCMU10D CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
*                                                                  0309
*                                                            @Y17XARN*/
         USING *,RBASE                                       @Y17XARN*/
         LR    RBASE,RBRANCH                                 @Y17XARN*/
IGCMU10D IEDHJN AFTERHJN,HJN                                 @Y17XARN*/
*/********************************************************************/
*/* INITIALIZE CONTROL BLOCK REGISTERS.                              */
*/********************************************************************/
*                                                                  0310
*   ROPCAVT=RPARM;                  /* SET BASE FOR OP CTL AVT       */
         LR    ROPCAVT,RPARM                                       0310
*   IEDQAPTR=OPCAVTPT;              /* SET BASE FOR TCAM AVT         */
         L     IEDQAPTR,OPCAVTPT(,ROPCAVT)                         0311
*   ROPCE=OPCCOPCE;                 /* PICK UP ELEMENT POINTER       */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0312
*   RSAVE=ADDR(OPCSAVE);            /* GET SAVE AREA ADDRESS         */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0313
*/********************************************************************/
*/* IF OCRESP FLAG IS SET TO 0, THEN THE ELEMENT IS ASSOCIATED       */
*/* WITH A SPEED SELECT COMMAND WHICH NEEDS OPERAND CHECKING         */
*/* AND A BDU SENT. IF OCRESP IS SET TO 1, THEN THE ELEMENT          */
*/* IS ASSOCIATED WITH A RESPONSE TO A BDU SENT ON A PREVIOUS        */
*/* ENTRY INTO THIS MODULE.                                  @Y17XARN*/
*/********************************************************************/
*                                                                  0314
*   IF OCRESP='1'B THEN             /* DOES ELEMENT POINT TO A     0314
*                                      RESPONSE BDU ?        @Y17XARN*/
         TM    OCRESP(ROPCE),B'00000001'                           0314
         BO    @RT00314                                            0314
*     GOTO PRORESP;                 /* YES, PROCESS THE RESPONSE     */
*   IF RLEN=0 THEN                  /* ANOTHER OPERAND ?             */
         LTR   RLEN,RLEN                                           0316
         BZ    @RT00316                                            0316
*     GOTO CMDINV;                  /* NO, COMMAND INVALID           */
*   OCBACKUP=OPCDOUBL;              /* SAVE LINE OR GROUP NAME       */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0318
*   IF SCANBYTE<'0' THEN            /* IS FIRST SCAN BYTE NUMERIC?   */
         CLI   SCANBYTE(RAPTR),C'0'                                0319
         BL    @RT00319                                            0319
*     GOTO CMDINV;                  /* MUST SPECIFY GRPNAME,RLN      */
*                                                                  0321
*/********************************************************************/
*/* SCAN THE FIRST OPERAND FOR VALID NUMERIC OF ONE TO THREE DIGITS. */
*/* IF THE OPERAND IS A VALID NUMERIC, PUT THE RLN INTO RPARM AND    */
*/* CALL THE 'GRPNAME,RLN' CODE TO FIND THE LINE ENTRY. 'GRPNAME'    */
*/* IS IN OPCDOUBL AT ENTRY.                                         */
*/********************************************************************/
*                                                                  0321
*   RRPTR=RAPTR;                    /* SAVE POINTER TO RLN           */
         LR    RRPTR,RAPTR                                         0321
*   RBYSCN=0;                       /* INITIALIZE BYTES SCANNED TO 0322
*                                      ZERO                          */
         SLR   RBYSCN,RBYSCN                                       0322
*SCAN:                                                             0323
*   IF RLEN^=0 THEN                 /* END OF SCAN ?                 */
SCAN     LTR   RLEN,RLEN                                           0323
         BZ    @RF00323                                            0323
*     DO;                           /* NO, SCAN OPERAND              */
*       IF SCANBYTE=',' THEN        /* SCAN BYTE A COMMA ?           */
         CLI   SCANBYTE(RAPTR),C','                                0325
         BNE   @RF00325                                            0325
*         DO;                       /* YES                           */
*           RLEN=RLEN-1;            /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0327
*           RAPTR=RAPTR+1;          /* INCREMENT PAST COMMA          */
         AL    RAPTR,@CF00053                                      0328
*         END;                                                     0329
*       ELSE                                                       0330
*         IF SCANBYTE>='0'&         /* IS DIGIT A VALID NUMERIC ?    */
*             SCANBYTE<=CNINE THEN                                 0330
         B     @RC00325                                            0330
@RF00325 CLI   SCANBYTE(RAPTR),C'0'                                0330
         BL    @RF00330                                            0330
         CLI   SCANBYTE(RAPTR),C'9'                                0330
         BH    @RF00330                                            0330
*           DO;                     /* YES                           */
*             RBYSCN=RBYSCN+1;      /* INCREMENT BYTES SCANNED       */
         LA    @11,1                                               0332
         ALR   RBYSCN,@11                                          0332
*             RAPTR=RAPTR+1;        /* INCREMENT TO NEXT BYTE        */
         ALR   RAPTR,@11                                           0333
*             RLEN=RLEN-1;          /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0334
*             GOTO SCAN;            /* CONTINUE SCAN                 */
         B     SCAN                                                0335
*           END;                                                   0336
*         ELSE                      /* NO                            */
*           GOTO CMDINV;            /* COMMAND INVALID               */
*     END;                                                         0338
*   ELSE                                                           0339
*     GOTO CMDINV;                  /* INVALID COMMAND               */
*   IF RBYSCN=0×                    /* NO BYTES SCANNED OR           */
*       RBYSCN>AVTHA3 THEN          /* MORE THAN 3 BYTES SCANNED?    */
@RC00323 LTR   RBYSCN,RBYSCN                                       0340
         BZ    @RT00340                                            0340
         CH    RBYSCN,AVTHA3(,IEDQAPTR)                            0340
         BH    @RT00340                                            0340
*     GOTO CMDINV;                  /* YES, COMMAND INVALID          */
*/********************************************************************/
*/* CONVERT RLN FROM EBCDIC TO BINARY AND TEST FOR VALID RLN --      */
*/*               0 < RLN =< 255                                     */
*/********************************************************************/
*                                                                  0342
*   RBYSCN=RBYSCN-1;                /* GET RLN LENGTH LESS 1 FOR   0342
*                                      EXECUTE INSTRUCTION           */
         BCTR  RBYSCN,0                                            0342
*   GEN REFS(RBYSCN,ROPCE) SETS(RPARM) NOEXIT SEQFLOW;             0343
*                                                            @Y17XARN*/
Y@       EX    RBYSCN,MOVE              PUT RLN IN WORK AREA
         EX    RBYSCN,PACK              PACK RLN IN WORK AREA
         XC    OCBACKUP(EQU6,ROPCE),OCBACKUP(ROPCE)
         CVB   RPARM,OCBACKUP(ROPCE)    CONVERT RLN TO BINARY
*   OCRLN=RPARM;                    /* SAVE RLN FOR MESSAGE          */
         STC   RPARM,OCRLN(,ROPCE)                                 0344
*   IF RPARM=0×                     /* RLN=0 OR                      */
*       RPARM>255 THEN              /* RLN GREATER THAN MAXIMUM ?    */
         LTR   RPARM,RPARM                                         0345
         BZ    @RT00345                                            0345
         C     RPARM,@CF01508                                      0345
         BH    @RT00345                                            0345
*     GOTO CMDINV;                  /* YES, COMMAND INVALID          */
*                                                                  0347
*/********************************************************************/
*/* CALL IEDQCA AT ENTRY POINT FOR 'GRPNAME,RLN' LOOKUP. RETURN WILL */
*/* BE THE FOLLOWING:                                                */
*/*                     RRETURN+0 -- SUCCESSFUL                      */
*/*                     RRETURN+4 -- UNSUCCESSFUL                    */
*/* IF UNSUCCESSFUL, ONE OF THE FOLLOWING RETURN CODES WILL BE IN    */
*/* RZERO:                                                           */
*/*                  X'01' - LGB NOT OPEN (NOTOPEN)                  */
*/*                  X'04' - NAME NOT FOUND (NONAME)                 */
*/*                  X'08' - INVALID RLN (INVRLN)                    */
*/*                  X'20' - NOT A 3705 LINE (NOT3705L)              */
*/*                  X'02' - NCP NOT ACTIVE (NCPINACT)       @Y17XARN*/
*/********************************************************************/
*                                                                  0347
*   RBRANCH=OPCDCBLK;               /* GET ADDR OF LOOKUP ROUTINE    */
         L     RBRANCH,OPCDCBLK(,ROPCAVT)                          0347
*   GEN REFS(RRETURN,RBRANCH,SAVELINE) NOSETS FLOWS(SAVELINE);     0348
         BALR  RRETURN,RBRANCH          /*CALL LOOKUP ROUTINE        */
         B     SAVELINE                 /*GOOD RETURN - SAVE LINE    */
*                                       /*ENTRY ADDRESS              */
*   OCBACKUP=OPCDOUBL;              /* MOVE LGBNAME FOR MSG          */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0349
*   IF RZERO=1×                     /* LGB NOT OPEN OR               */
*       RZERO=8 THEN                /* RLN IS INVALID ?              */
         C     RZERO,@CF00053                                      0350
         BE    @RT00350                                            0350
         C     RZERO,@CF00058                                      0350
         BNE   @RF00350                                            0350
@RT00350 DS    0H                                                  0351
*     RMSGNO=17;                    /* SET 'LINE NOT OPEN' MSG       */
         LA    RMSGNO,17                                           0351
*   ELSE                                                           0352
*     IF RZERO=32 THEN              /* LINE NOT ON 3705 ?            */
         B     @RC00350                                            0352
@RF00350 C     RZERO,@CF00080                                      0352
         BNE   @RF00352                                            0352
*       RMSGNO=173;                 /* SET 'NOT 3705 LINE' MSG       */
         LA    RMSGNO,173                                          0353
*     ELSE                                                         0354
*       IF RZERO=NCPINACT THEN      /* NCP NOT ACTIVE ?              */
         B     @RC00352                                            0354
@RF00352 C     RZERO,@CF00059                                      0354
         BNE   @RF00354                                            0354
*         RMSGNO=MSG400;            /* SET 'NCP NOT ACTIVE' MSG      */
         LA    RMSGNO,400                                          0355
*       ELSE                                                       0356
*         RMSGNO=173;               /* ASSUME NONAME - SET 'NAME NOT
*                                      FOUND' MSG            @Y17XARN*/
         B     @RC00354                                            0356
@RF00354 LA    RMSGNO,173                                          0356
*   GOTO WRITE;                     /* WRITE THE MESSAGE             */
         B     WRITE                                               0357
*                                                                  0358
*/********************************************************************/
*/* CHECK LAST OPERAND OF SPEED SELECT COMMAND FOR AN L (LOW)        */
*/* OR AN H (HIGH).                                                  */
*/********************************************************************/
*                                                                  0358
*SAVELINE:                                                         0358
*   RPARM=RZERO;                    /* SAVE LINE ENTRY ADDRESS       */
SAVELINE LR    RPARM,RZERO                                         0358
*   OCBACKUP=OPCDOUBL;              /* MOVE LGBNAME FOR MSG          */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0359
*   IF RLEN=1 THEN                  /* ONE BYTE REMAINING ?          */
         C     RLEN,@CF00053                                       0360
         BNE   @RF00360                                            0360
*     DO;                           /* YES, CHECK IT FOR L OR H      */
*       IF SCANBYTE='L' THEN        /* SWITCH TO LOW SPEED ?         */
         CLI   SCANBYTE(RAPTR),C'L'                                0362
         BNE   @RF00362                                            0362
*         OCWTG(1)='00'X;           /* YES, USE OCWTG AS TEMPORARY 0363
*                                      SWITCH FOR LOW SPEED INDICATOR*/
         MVI   OCWTG(ROPCE),X'00'                                  0363
*       ELSE                                                       0364
*         IF SCANBYTE='H' THEN      /* SWITCH TO HIGH SPEED ?        */
         B     @RC00362                                            0364
@RF00362 CLI   SCANBYTE(RAPTR),C'H'                                0364
         BNE   @RF00364                                            0364
*           OCWTG(1)='01'X;         /* YES, USE OCWTG AS TEMPORARY 0365
*                                      SWITCH FOR HIGH SPEED       0365
*                                      INDICATOR                     */
         MVI   OCWTG(ROPCE),X'01'                                  0365
*         ELSE                      /* NO                            */
*           GOTO CMDINV;            /* COMMAND INVALID               */
*     END;                                                         0367
*   ELSE                                                           0368
*     GOTO CMDINV;                  /* COMMAND INVALID               */
*/********************************************************************/
*/* CHECK LINE ENTRY TO DETERMINE THAT IT IS VALID LINE ENTRY        */
*/* ATTACHED TO A 3705.                                      @Y17XARN*/
*/********************************************************************/
*                                                                  0369
*   IEDQTPTR=RPARM;                 /* SET LINE ENTRY BASE           */
@RC00360 LR    IEDQTPTR,RPARM                                      0369
*   IF TRMPREF='1'B&                /* 3705 RESOURCE?                */
*       TRMTYPE=TRMNSDLC THEN                                      0370
         TM    TRMPREF(IEDQTPTR),B'00010000'                       0370
         BNO   @RF00370                                            0370
         LR    @11,IEDQTPTR                                        0370
         AL    @11,@CF01122                                        0370
         CLI   TRMTYPE-11(@11),X'20'                               0370
         BNE   @RF00370                                            0370
*     DO;                           /* BYSC/SS LINE?                 */
*     END;                          /* YES, CONTINUE                 */
*   ELSE                                                           0373
*     DO;                                                          0373
         B     @RC00370                                            0373
@RF00370 DS    0H                                                  0374
*       RMSGNO=173;                 /* SET 'INVALID ENTRY' MSG       */
         LA    RMSGNO,173                                          0374
*       GOTO WRITE;                 /* WRITE THE MESSAGE             */
         B     WRITE                                               0375
*     END;                                                         0376
*                                                                  0377
*/********************************************************************/
*/* GET BUFFER UNIT INTO WHICH THE SPEED SELECT BDU COMMAND WILL     */
*/* BE BUILT                                                         */
*/********************************************************************/
*                                                                  0377
*   RPARM=1;                        /* GET ONE BUFFER UNIT           */
@RC00370 LA    RPARM,1                                             0377
*   RBRANCH=OPCGETBF;               /* GET ADDRESS OF BUFFER       0378
*                                      ALLOCATION ROUTINE            */
         L     RBRANCH,OPCGETBF(,ROPCAVT)                          0378
*   GEN( BALR RRETURN,RBRANCH );    /* CALL ALLOCATION ROUTINE       */
          BALR RRETURN,RBRANCH
*   OCUNIT=RPARM;                   /* PUT BUFFER UNIT ADDR INTO OPCE*/
         ST    RPARM,OCUNIT(,ROPCE)                                0380
*/********************************************************************/
*/* BUILD PACKED RU FOR SPEED SELECT COMMAND                 @Y17XARN*/
*/********************************************************************/
*                                                                  0381
*   IEDPRUQP=RPARM;                 /* SET UP BUFFER ADDRESSABILITY  */
         LR    IEDPRUQP,RPARM                                      0381
*   PRURH=TRHFID0;                  /* SETUP RH AND TH BYTES         */
         LR    @11,IEDPRUQP                                        0382
         SL    @11,@CF00058                                        0382
         MVC   PRURH(3,@11),@CB01310                               0382
*   PRUFIDN=TTH0BYT0;               /* FOR FID0                      */
         MVI   PRUFIDN(@11),X'0C'                                  0383
*   PRUTTCIN=OCTRMTBL;              /* GET TTCIN FROM OC TERM TABLE  */
         LH    @11,OCTRMTBL(,ROPCE)                                0384
         N     @11,@CF01533                                        0384
         STH   @11,PRUTTCIN(,IEDPRUQP)                             0384
*   PRUDATCT=SPDDATCN;              /* GET DATA COUNT                */
         MVC   PRUDATCT(2,IEDPRUQP),@CH00056                       0385
*   PRUTIC=PRUINTIC;                /* SETUP TIC                     */
         MVC   PRUTIC(4,IEDPRUQP),@CB01221                         0386
*   RUDATA1=CD0CTRL;                /* BDU COMMAND                   */
         MVI   RUDATA1(IEDPRUQP),X'08'                             0387
*   RUDATA2=CD0CCMS;                /* BDU MODIFIER                  */
         MVI   RUDATA2(IEDPRUQP),X'12'                             0388
*   RUDATA7=OCWTG;                  /* SPEED HIGH OR LOW             */
         MVC   RUDATA7(1,IEDPRUQP),OCWTG(ROPCE)                    0389
*/********************************************************************/
*/* SET UP TO CALL PACKED RU DISPATCHER                              */
*/********************************************************************/
*                                                                  0390
*   OCCKDAT1=OCWTG;                 /* SAVE DATA BYTE IN OPCE FOR  0390
*                                      CHECKPOINT                    */
         MVC   OCCKDAT1(1,ROPCE),OCWTG(ROPCE)                      0390
*   OCWTG='MU';                     /* WTG IS THIS MODULE - MU       */
         MVC   OCWTG(2,ROPCE),@CC01516                             0391
*   OCRESP='1'B;                    /* INDICATE RESPONSE FOR NEXT  0392
*                                      ENTRY                         */
         OI    OCRESP(ROPCE),B'00000001'                           0392
*   OPCMODID='02';                  /* SET NEXT LOAD TO PACKED RU  0393
*                                      DISPATCHER            @Y17XARN*/
         MVC   OPCMODID(2,ROPCAVT),@CC01517                        0393
*   RPARM=ROPCAVT;                  /* PASS @OP CTL AVT              */
         LR    RPARM,ROPCAVT                                       0394
*   GEN REFS(OPCXCTL,ROPCAVT);                                     0395
*                                                            @Y17XARN*/
         XCTL  SF=(E,OPCXCTL(ROPCAVT))
*                                   /* XCTL TO BDU DISPATCHER        */
*                                                                  0396
*/********************************************************************/
*/* PROCESS THE RESPONSE BDU FROM THE SPEED SELECT COMMAND.  @Y17XARN*/
*/********************************************************************/
*                                                                  0396
*PRORESP:                                                          0396
*   RFY                                                            0396
*     IEDBDU BASED(RBDU);           /* BASE FOR IEDBDU DSECT         */
PRORESP  DS    0H                                                  0397
*   RBDU=OCUNIT;                    /* SET ADDR OF BUFFER UNIT       */
         L     RBDU,OCUNIT(,ROPCE)                                 0397
*   IF BDUSYRSP='60'X THEN          /* NORMAL COMPLETION ?           */
         CLI   BDUSYRSP(RBDU),X'60'                                0398
         BNE   @RF00398                                            0398
*     RMSGNO=387;                   /* YES, SET MESSAGE FOR NORMAL 0399
*                                      COMPLETION                    */
         LA    RMSGNO,387                                          0399
*   ELSE                                                           0400
*     IF BDUSYRSP='99'X THEN        /* ALREADY AT REQUESTED    SPEED?*/
         B     @RC00398                                            0400
@RF00398 CLI   BDUSYRSP(RBDU),X'99'                                0400
         BNE   @RF00400                                            0400
*       RMSGNO=385;                 /* YES, SET ALREADY MESSAGE      */
         LA    RMSGNO,385                                          0401
*     ELSE                                                         0402
*       IF BDUSYRSP='9F'X&BDUEXRSP='82'X THEN/* MODEM CANNOT CHANGE
*                                      SPEED                         */
         B     @RC00400                                            0402
@RF00400 CLI   BDUSYRSP(RBDU),X'9F'                                0402
         BNE   @RF00402                                            0402
         CLI   BDUEXRSP(RBDU),X'82'                                0402
         BNE   @RF00402                                            0402
*         RMSGNO=386;               /* YES, SET NO SPEED CHANGE    0403
*                                      MESSAGE                       */
         LA    RMSGNO,386                                          0403
*       ELSE                                                       0404
*         RMSGNO=199;               /* NO, SET MESSAGE FOR REQUEST 0404
*                                      NOT HONORED                   */
         B     @RC00402                                            0404
@RF00402 LA    RMSGNO,199                                          0404
*   IF BDUSYRSP='60'X THEN          /* NORMAL MSG TO WRITE ?         */
@RC00402 DS    0H                                                  0405
@RC00400 DS    0H                                                  0405
@RC00398 CLI   BDUSYRSP(RBDU),X'60'                                0405
         BNE   @RF00405                                            0405
*     DO;                           /* SET UP FOR EXIT               */
*       OPCMODID='M3';              /* GOOD MSG WRITE RTN            */
         MVC   OPCMODID(2,ROPCAVT),@CC01525                        0407
*       GO TO WRITE1;               /* EXIT                          */
         B     WRITE1                                              0408
*     END;                                                         0409
*   GOTO WRITE;                     /* WRITE THE MESSAGE             */
         B     WRITE                                               0410
*/********************************************************************/
*/* COMMAND INVALID MESSAGE                                          */
*/********************************************************************/
*                                                                  0411
*CMDINV:                                                           0411
*   RMSGNO=18;                      /* SET 'COMMAND INVALID' MSG     */
CMDINV   LA    RMSGNO,18                                           0411
*/********************************************************************/
*/* CALL THE MESSAGE WRITER MODULE TO WRITE THE MESSAGE              */
*/* SPECIFIED IN RMSGNO.                                             */
*/********************************************************************/
*                                                                  0412
*WRITE:                                                            0412
*   OPCMODID='03';                  /* SET UP TO GO TO THE MSG WRITER
*                                      MODULE                        */
WRITE    MVC   OPCMODID(2,ROPCAVT),@CC01528                        0412
*WRITE1:                                                           0413
*   OCRESP='0'B;                    /* RESET RESPONSE INDICATOR      */
WRITE1   NI    OCRESP(ROPCE),B'11111110'                           0413
*   RPARM=ROPCAVT;                  /* PASS OP CTL AVT               */
         LR    RPARM,ROPCAVT                                       0414
*   GEN REFS(OPCXCTL,ROPCAVT);                                     0415
*                                                            @Y17XARN*/
         XCTL SF=(E,OPCXCTL(ROPCAVT))   /*CALL MSG WRITER            */
*   GEN;                                                           0416
MOVE     MVC   OCBACKUP(EQU0,ROPCE),EQU0(RRPTR)
PACK     PACK  OCBACKUP+EQU6(EQU2,ROPCE),OCBACKUP(EQU0,ROPCE)
EQU0     EQU   0
EQU2     EQU   2
EQU6     EQU   6
*   END IGCMU10D                                                   0417
*                                                                  0417
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  0417
*       ;                                                          0417
@EL00001 DS    0H                                                  0417
@EF00001 DS    0H                                                  0417
@ER00001 BR    @14                                                 0417
@DATA    DS    0H
@CH00056 DC    H'7'
@DATD    DSECT
         DS    0F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IGCMU10D CSECT
         DS    0F
@CF00053 DC    F'1'
@CF00059 DC    F'2'
@CF00058 DC    F'8'
@CF00080 DC    F'32'
@CF01508 DC    F'255'
@CF01122 DC    F'-3'
@CF01533 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IEDQPPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
@DATEND  EQU   *
IGCMU10D CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
         DS    0D
@CC01516 DC    C'MU'
@CC01517 DC    C'02'
@CC01525 DC    C'M3'
@CC01528 DC    C'03'
@CB01221 DC    X'08000002'
@CB01310 DC    X'0B8000'
         DS    CL1
ZAPAREA  DC    XL50'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
RMSGNO   EQU   @00
RZERO    EQU   @00
RPARM    EQU   @01
ROPCAVT  EQU   @02
ROPCE    EQU   @03
IEDQAPTR EQU   @04
RWORKA   EQU   @05
RLEN     EQU   @06
IEDQTPTR EQU   @07
RAPTR    EQU   @07
RRPTR    EQU   @08
RBYSCN   EQU   @09
RBASE    EQU   @12
RSAVE    EQU   @13
RRETURN  EQU   @14
RBRANCH  EQU   @15
IEDPRUQP EQU   @06
RBDU     EQU   @06
SCANBYTE EQU   0
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00003 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTHA3   EQU   IEDQAVTD+1024
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00083 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDQOPCD EQU   0
OPCDOUBL EQU   IEDQOPCD
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCDCBLK EQU   IEDQOPCD+16
OPCSAVE  EQU   IEDQOPCD+56
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCGETBF EQU   IEDQOPCD+276
OPCSPEC  EQU   IEDQOPCD+300
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRESP   EQU   OCFLAG
OCRLN    EQU   IEDQOPCE+15
@NM00118 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00118
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OCCKDAT1 EQU   OCRSTGTM
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
@NM00135 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00135
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
TRMTYPE  EQU   IEDNTRM+11
RUDATA1  EQU   PRUDATA
RUDATA2  EQU   PRUDATA+1
RUDATA7  EQU   PRUDATA+6
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
TRMPRE1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
BDUTEXT  EQU   BDUEND
OCCIB    EQU   OCREQVAL
PRFSHDR  EQU   IEDQPRF+42
TRMOPT   EQU   IEDQTRM+20
*                                      START UNREFERENCED COMPONENTS
@NM00164 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00163 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OCICINAC EQU   OCICSW
@NM00124 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00123 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
TRMSUBST EQU   IEDNTRM+12
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00162 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00161 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00160 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00159 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHOAF   EQU   IEDTH+4
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00158 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
@NM00157 EQU   TRHBYTE2
@NM00156 EQU   TRHBYTE2
@NM00155 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00154 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00153 EQU   TRHBYTE1
@NM00152 EQU   TRHBYTE1
@NM00151 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00150 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00149 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
@NM00148 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00147 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00146 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00145 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00144 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHSDI EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00143 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00142 EQU   PRUTIC
@NM00141 EQU   IEDPRUQD+4
PRF2SEQP EQU   PRF2WD2
@NM00140 EQU   IEDPF2+1
@NM00139 EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00138 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00137 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00136 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00135+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFPIUO  EQU   PRFPLQCB
PRFTI0   EQU   PRFTIC+1
@NM00134 EQU   PRFTICC
@NM00133 EQU   PRFTICC
@NM00132 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00131 EQU   PRFTICC
@NM00130 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00129 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
@NM00128 EQU   OCLDNME+4
@NM00127 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00126 EQU   OCREQFLG
@NM00125 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00122 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00121 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00120 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00119 EQU   @NM00118+2
OCCONID  EQU   OCDEST
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00117 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00116 EQU   OCRUDEST+1
@NM00115 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
OPCBOTTM EQU   IEDQOPCD+1172
@NM00114 EQU   IEDQOPCD+1088
@NM00113 EQU   IEDQOPCD+936
@NM00112 EQU   IEDQOPCD+928
@NM00111 EQU   IEDQOPCD+368
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00110 EQU   OPCSPEC
@NM00109 EQU   OPCSPEC
@NM00108 EQU   OPCSPEC
@NM00107 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
@NM00106 EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00105 EQU   OPCLDNME+5
@NM00104 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00103 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
BDUMODIF EQU   IEDBDU+1
BDUCMND  EQU   IEDBDU
SAVTBITN EQU   IEDNSVTD+312
@NM00102 EQU   SAVTCKQB+8
@NM00101 EQU   SAVTCKEC+1
@NM00100 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00099 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00098 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00097 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00096 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00095 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00094 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00093 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00092 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00091 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00090 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00089 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00088 EQU   IEDQAVTD+1242
@NM00087 EQU   IEDQAVTD+1241
@NM00086 EQU   IEDQAVTD+1240
@NM00085 EQU   IEDQAVTD+1237
@NM00084 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00083
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00082 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00081 EQU   IEDQAVTD+1140
@NM00080 EQU   IEDQAVTD+1137
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
@NM00074 EQU   AVTBIT4
@NM00073 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00072 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00071 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00070 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00069 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00068 EQU   AVTBIT2
@NM00067 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00066 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00065 EQU   IEDQAVTD+950
@NM00064 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00063 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL2
@NM00058 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00050 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00049 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00048 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00047 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00046 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00045 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00037 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00036 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00035 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00020 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTCRDYN EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00018 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00014 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00013 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00012 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTOSECB EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTRNMPT EQU   IEDQAVTD+424
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
*                                      END UNREFERENCED COMPONENTS
@RT00314 EQU   PRORESP
@RT00316 EQU   CMDINV
@RT00319 EQU   CMDINV
@RF00330 EQU   CMDINV
@RC00325 EQU   @RC00323
@RF00323 EQU   CMDINV
@RT00340 EQU   CMDINV
@RT00345 EQU   CMDINV
@RC00354 EQU   WRITE
@RC00352 EQU   WRITE
@RC00350 EQU   WRITE
@RF00364 EQU   CMDINV
@RC00362 EQU   @RC00360
@RF00360 EQU   CMDINV
@RF00405 EQU   WRITE
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IGCMU10D,(C'PLS0412',0701,76364)
