         TITLE 'IGCMV10D - CHNGMODE PROCESSING                         *
                        '
IGCMV10D CSECT ,                                                   0001
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                        /*                  @Y17XZRX*/
*                                        /*                  @Y17XARX
IGCMV10D IEDHJN AFTERHJN,HJN                                   @Y17XARX
*                                                                  0256
*/********************************************************************/
*/* INITIALIZE WORK REGISTERS AND ESTABLISH ADDRESSABILITY FOR       */
*/* CONTROL BLOCKS                                                   */
*/********************************************************************/
*                                                                  0256
*   ROPCAVT=RPARM;                  /* SET BASE FOR OP CNTRL AVT     */
         LR    ROPCAVT,RPARM                                       0256
*   ROPCE=OPCCOPCE;                 /* GET ELEMENT POINTER           */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0257
*   IEDQAPTR=OPCAVTPT;              /* SET BASE FOR TCAM'S AVT       */
         L     IEDQAPTR,OPCAVTPT(,ROPCAVT)                         0258
*   RWORKA=OPCWORK;                 /* ADDR WORK AREA M0 PASSED      */
         L     RWORKA,OPCWORK(,ROPCAVT)                            0259
*   ERRX=OFF;                       /* RESET ERROR FLAG      @Y17XARX*/
         NI    ERRX(ROPCE),B'11101111'                             0260
*   MSGNUM=ZERO;                    /* RESET ERROR NUMBER    @Y17XARX*/
         SLR   @15,@15                                             0261
         STH   @15,MSGNUM(,ROPCE)                                  0261
*   OPCLDNME(4:5)=ERRMOD1;          /* SET EXIT TO ERROR MOD         */
         MVC   OPCLDNME+3(2,ROPCAVT),ERRMOD1                       0262
*   IF OCRESP=OFF THEN              /* TEST FOR NORMAL CMD ENTRY     */
         TM    OCRESP(ROPCE),B'00000001'                           0263
         BNZ   @RF00263                                            0263
*     DO;                           /* PROCESS INPUT COMMAND         */
*       OCBACKUP=OPCDOUBL;          /* SAVE GROUPNAME                */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0265
*       OCGRPSW=OFF;                /* GROUP PROCESS SWITCH RESET  0266
*                                                            @Y17XARX*/
*                                                                  0266
         NI    OCGRPSW(ROPCE),B'11111011'                          0266
*       /*************************************************************/
*       /*                                                           */
*       /* CKCOMND - THIS SUBRTN WILL COMPLETE THE SCANNING OF THE   */
*       /* INPUT COMMAND.IF NO ERROR IS FOUND, THE TERMINAL ENTRY FOR*/
*       /* THE LINE OR THE NEXT LINE IN THE GROUP WILL BE LOCATED AND*/
*       /* EXAMINED.                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0267
*       IF RWORK6>ZERO THEN         /* ANY OPERANDS LEFT TO SCAN     */
         CR    RWORK6,@15                                          0267
         BNH   @RF00267                                            0267
*         DO;                       /* SCAN REST OF COMMAND          */
*           IF FIELDR(1)^='6B'X&FIELDR(1)^='A' THEN/* NOT GROUP=ALL  */
         CLI   FIELDR(RWORK7),X'6B'                                0269
         BE    @RF00269                                            0269
         CLI   FIELDR(RWORK7),C'A'                                 0269
         BE    @RF00269                                            0269
*             IF FIELDR(1)>='F0'X THEN/* IS IT A VALID RLN?          */
         CLI   FIELDR(RWORK7),X'F0'                                0270
         BL    @RF00270                                            0270
*               DO;                 /* SCAN AND CONVERT THE RLN      */
*                 RWORK6=RWORK6-1;  /* TEMP. LOC. FOR SCAN COUNT     */
         BCTR  RWORK6,0                                            0272
*                 RESPECIFY                                        0273
*                   COUNT RSTD;     /*                       @Y17XARX*/
*                 COUNT=1;          /* SET RLN CHARACTER COUNT       */
         LA    COUNT,1                                             0274
*                 COUNTSW='1'B;     /* SET START RLN COUNT SW        */
         OI    COUNTSW(ROPCE),B'00100000'                          0275
*                 DO WHILE(COUNTSW='1'B);/* GET ALL RLN CHARACTERS   */
         B     @DE00276                                            0276
@DL00276 DS    0H                                                  0277
*                   COUNT=COUNT+1;  /* INCR.RLN CHARACTER COUNT      */
         LA    COUNT,1(,COUNT)                                     0277
*                   IF RWORK6=ZERO  /* END OF COMMAND?               */
*                       ×FIELDR(COUNT)='6B'X THEN/* OR END OF RLN  0278
*                                      OPERAND                       */
         LTR   RWORK6,RWORK6                                       0278
         BZ    @RT00278                                            0278
         LR    @11,RWORK7                                          0278
         ALR   @11,COUNT                                           0278
         BCTR  @11,0                                               0278
         CLI   FIELDR(@11),X'6B'                                   0278
         BNE   @RF00278                                            0278
@RT00278 DS    0H                                                  0279
*                     COUNTSW=OFF;  /* FOUND END OF RLN SWITCH-      */
         NI    COUNTSW(ROPCE),B'11011111'                          0279
*                   ELSE            /* CHECK VALIDITY OF OPERAND     */
*                     IF COUNT>3    /* INVALID RLN LENGTH ?          */
*                         ×FIELDR(COUNT)<'F0'X THEN/* RLN=INVALID  0280
*                                      CHAR                          */
         B     @RC00278                                            0280
@RF00278 C     COUNT,@CF00049                                      0280
         BH    @RT00280                                            0280
         LR    @11,RWORK7                                          0280
         ALR   @11,COUNT                                           0280
         BCTR  @11,0                                               0280
         CLI   FIELDR(@11),X'F0'                                   0280
         BNL   @RF00280                                            0280
@RT00280 DS    0H                                                  0281
*                       DO;         /* SET FOR ERROR EXIT            */
*                         MSGNUM=18;/* INVALID OPERAND MSG NUMBER    */
         MVC   MSGNUM(2,ROPCE),@CH00181                            0282
*                         ERRX='1'B;/* SET ERROR SWITCH              */
*                         COUNTSW=OFF;/* SET TO GET OUT OF DO LOOP   */
         OI    ERRX(ROPCE),B'00010000'                             0284
         NI    COUNTSW(ROPCE),B'11011111'                          0284
*                       END;        /* ERROR EXIT                    */
*                   IF RWORK6^=ZERO THEN/* CONTINUE THE SCAN         */
@RF00280 DS    0H                                                  0286
@RC00278 LTR   RWORK6,RWORK6                                       0286
         BZ    @RF00286                                            0286
*                     RWORK6=RWORK6-1;/* DECR. SCAN LENGTH           */
         BCTR  RWORK6,0                                            0287
*                 END;              /* ENDWHILE FOR FINDING RLN      */
@RF00286 DS    0H                                                  0288
@DE00276 TM    COUNTSW(ROPCE),B'00100000'                          0288
         BO    @DL00276                                            0288
*                 IF ERRX=OFF THEN  /* NO ERROR FOUND YET ?          */
         TM    ERRX(ROPCE),B'00010000'                             0289
         BNZ   @RF00289                                            0289
*                   DO;             /* STORE RLN,FIND @TTE           */
*                     OCBACKUP=OCBACKUP&&OCBACKUP;/* CLEAR FOR WORK  */
         XC    OCBACKUP(8,ROPCE),OCBACKUP(ROPCE)                   0291
*                     COUNT=COUNT-1;/* DECR. COUNT FOR MOVE INSTR    */
         BCTR  COUNT,0                                             0292
*                     RESPECIFY                                    0293
*                       I RSTD;     /*                       @Y17XARX*/
*                     DO I=1 TO COUNT;/* STORE RLN FOR CONVERSION    */
         LA    I,1                                                 0294
         B     @DE00294                                            0294
@DL00294 DS    0H                                                  0295
*                       OCBACKUP(8-COUNT+I)=FIELDR(I);/* STORE RLN   */
         LA    @14,8                                               0295
         SLR   @14,COUNT                                           0295
         ALR   @14,I                                               0295
         ALR   @14,ROPCE                                           0295
         LR    @11,RWORK7                                          0295
         ALR   @11,I                                               0295
         BCTR  @11,0                                               0295
         MVC   OCBACKUP-1(1,@14),FIELDR(@11)                       0295
*                     END;          /* RLN IN OCBACKUP LAST WORD     */
         AL    I,@CF00045                                          0296
@DE00294 CR    I,COUNT                                             0296
         BNH   @DL00294                                            0296
*                     RESPECIFY                                    0297
*                       I UNRSTD;   /*                       @Y17XARX*/
*                     PACK(OCBACKUP,OCBACKUP);/* PACK RLN            */
         PACK  OCBACKUP(8,ROPCE),OCBACKUP(8,ROPCE)                 0298
*                     CVB(RWORK9,OCBACKUP);/* CONVERT TO BINARY -RLN */
         CVB   RWORK9,OCBACKUP(,ROPCE)                             0299
*                     OCBACKUP=OPCDOUBL;/* SAVE GROUPNAME            */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0300
*                     IF RWORK9=<ZERO×RWORK9>255 THEN/* IN RANGE     */
         LTR   RWORK9,RWORK9                                       0301
         BNP   @RT00301                                            0301
         C     RWORK9,@CF02008                                     0301
         BNH   @RF00301                                            0301
@RT00301 DS    0H                                                  0302
*                       DO;                                        0302
*                         MSGNUM=18;/* RLN NOT WITHIN RANGE          */
         MVC   MSGNUM(2,ROPCE),@CH00181                            0303
*                         ERRX='1'B;/* SET ERROR BIT                 */
         OI    ERRX(ROPCE),B'00010000'                             0304
*                         GO TO ERREXIT;/* TAKE ERROR EXIT           */
         B     ERREXIT                                             0305
*                       END;                                       0306
*                     ELSE                                         0307
*                       ;                                          0307
@RF00301 DS    0H                                                  0308
*                     RWORK7=RWORK7+COUNT;/* UPDATE SCAN PTR         */
         ALR   RWORK7,COUNT                                        0308
*                     RESPECIFY                                    0309
*                       COUNT UNRSTD;/*                      @Y17XARX*/
*                     IF FIELDR='6B'X THEN/* IF MORE OPERANDS TO   0310
*                                      CHECK                         */
         CLI   FIELDR(RWORK7),X'6B'                                0310
         BNE   @RF00310                                            0310
*                       RWORK7=RWORK7+1;/* UPDATE PTR PASS COMMA     */
         LA    RWORK7,1(,RWORK7)                                   0311
*                     RWORK8=RWORK9;/* PARM TO CALLING RTN           */
@RF00310 LR    RWORK8,RWORK9                                       0312
*                     CALL CALDCBLK;/* LGB,TTE LOOKUP CALLING RTN    */
         BAL   @14,CALDCBLK                                        0313
*                     IF MSGNUM^=ZERO THEN/* ERROR FROM DCBLOCAT?    */
         LH    @15,MSGNUM(,ROPCE)                                  0314
         LTR   @15,@15                                             0314
         BZ    @RF00314                                            0314
*                       ERRX='1'B;  /* SET TO TAKE ERROR EXIT        */
         OI    ERRX(ROPCE),B'00010000'                             0315
*                   END;                                           0316
*               END;                /* END RLN SCAN                  */
*             ELSE                  /* FIRST RLN CHAR INVALID        */
*               DO;                 /* SET UP FOR ERROR EXIT         */
         B     @RC00270                                            0318
@RF00270 DS    0H                                                  0319
*                 MSGNUM=18;        /* INVALID OPERAND MSG NUMBER    */
         MVC   MSGNUM(2,ROPCE),@CH00181                            0319
*                 ERRX='1'B;        /* ERROR EXIT SWITCH SET         */
         OI    ERRX(ROPCE),B'00010000'                             0320
*               END;                /* TAKE ERROR EXIT               */
*           ELSE                    /* NO RLN OPERAND                */
*             IF FIELDR='6B'X×(RWORK6>=3/* 'GRPNAME,' SPECIFIED ?    */
*                 &OPTNALL='ALL') THEN/* GRPNAME=ALL SPECIFIED       */
         B     @RC00269                                            0322
@RF00269 CLI   FIELDR(RWORK7),X'6B'                                0322
         BE    @RT00322                                            0322
         C     RWORK6,@CF00049                                     0322
         BL    @RF00322                                            0322
         CLC   OPTNALL(3,RWORK7),@CC02010                          0322
         BNE   @RF00322                                            0322
@RT00322 DS    0H                                                  0323
*               DO;                 /* GROUP PROCESSING REQUESTED    */
*                 IF FIELDR^='6B'X THEN/* GRPNAME, SPECIFIED         */
         CLI   FIELDR(RWORK7),X'6B'                                0324
         BE    @RF00324                                            0324
*                   DO;             /* YES, UPDATE                   */
*                     RWORK8=3;     /* UPDATE FOR SCAN PTR           */
         LA    RWORK8,3                                            0326
*                     RWORK7=RWORK7+RWORK8;/* UPDATE SCAN PTR        */
         ALR   RWORK7,RWORK8                                       0327
*                     RWORK6=RWORK6-RWORK8;/* UPDATE LENGTH TO SCAN  */
         SLR   RWORK6,RWORK8                                       0328
*                   END;                                           0329
*                 IF RWORK6>ZERO&FIELDR='6B'X THEN/* MORE OPERANDS ? */
@RF00324 LTR   RWORK6,RWORK6                                       0330
         BNP   @RF00330                                            0330
         CLI   FIELDR(RWORK7),X'6B'                                0330
         BNE   @RF00330                                            0330
*                   DO;             /* BUMP PASS COMMA IF THERE      */
*                     RWORK6=RWORK6-1;/* DECR. BYTES TO SCAN         */
         BCTR  RWORK6,0                                            0332
*                     RWORK7=RWORK7+1;/* UPDATE SCAN PTR PASS ','    */
         LA    RWORK7,1(,RWORK7)                                   0333
*                   END;                                           0334
*                 OCGRPSW='1'B;     /* GROUP PROCESS SWITCH SET      */
@RF00330 OI    OCGRPSW(ROPCE),B'00000100'                          0335
*                 RSAVE=ADDR(OPCSAVE);/* SET SAVE AREA PTR   @Y17XARX*/
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0336
*                 CALL TRMOFLOC;    /* GET TTE FOR OPCDOUBL  @Y17XARX*/
         L     @15,OPCTOFLK(,ROPCAVT)                              0337
         BALR  @14,@15                                             0337
*                 GO TO FOUNDTTE;   /* TTE FOUND IN SEARCH   @Y17XARX*/
         B     FOUNDTTE                                            0338
*ERRORTTE:                                                         0339
*                 ERRX='1'B;        /* ERROR EXIT SWITCH SET @Y17XARX*/
ERRORTTE OI    ERRX(ROPCE),B'00010000'                             0339
*                 MSGNUM=18;        /* INVALID OPERAND MSG NUMBER  0340
*                                                            @Y17XARX*/
         MVC   MSGNUM(2,ROPCE),@CH00181                            0340
*FOUNDTTE:                          /*                       @Y17XARX*/
*                 IF ERRX=OFF THEN  /* IF NO ERROR YET       @Y17XARX*/
FOUNDTTE TM    ERRX(ROPCE),B'00010000'                             0341
         BNZ   @RF00341                                            0341
*                   DO;             /*                       @Y17XARX*/
*                     RTERM=RPARM;  /* SET ADDR              @Y17XARX*/
         LR    RTERM,RPARM                                         0343
*                     IF TRMPROC=OFF&TRMPREF='1'B&TRMTYPE=TRMGRP/* IS
*                                      IT GROUP TTE          @Y17XARX*/
*                         &TRMSUBST^=ZERO THEN/* WITH LINES  @Y17XARX*/
         TM    TRMPREF(RTERM),B'00010000'                          0344
         BNO   @RF00344                                            0344
         TM    TRMPROC(RTERM),B'00100000'                          0344
         BNZ   @RF00344                                            0344
         LR    @15,RTERM                                           0344
         SL    @15,@CF02042                                        0344
         CLI   TRMTYPE(@15),X'00'                                  0344
         BNE   @RF00344                                            0344
         LH    @15,TRMSUBST(,@15)                                  0344
         N     @15,@CF02051                                        0344
         LTR   @15,@15                                             0344
         BZ    @RF00344                                            0344
*                       DO;         /* YES                   @Y17XARX*/
*                         RPARM=TRMSUBST;/* GET TTCIN OF FIRST LINE
*                                                            @Y17XARX*/
         LR    RPARM,@15                                           0346
*                         CALL GETNXT;/* GET TTE OF FIRST LINE     0347
*                                                            @Y17XARX*/
         BAL   @14,GETNXT                                          0347
*                       END;        /*                       @Y17XARX*/
*                     ELSE          /* NOT VALID GROUP       @Y17XARX*/
*                       DO;         /*                       @Y17XARX*/
         B     @RC00344                                            0349
@RF00344 DS    0H                                                  0350
*                         ERRX='1'B;/* SET ERROR FLAG        @Y17XARX*/
         OI    ERRX(ROPCE),B'00010000'                             0350
*                         MSGNUM=173;/* SET MSG NUMBER       @Y17XARX*/
         MVC   MSGNUM(2,ROPCE),@CH02015                            0351
*                       END;        /*                       @Y17XARX*/
*                   END;            /*                       @Y17XARX*/
*               END;                /* GROUP PROCESS BEGUN           */
*             ELSE                  /* GRPNAME SPECIFIED INVALID     */
*               DO;                 /* SET TO TAKE ERROR EXIT        */
         B     @RC00322                                            0355
@RF00322 DS    0H                                                  0356
*                 ERRX='1'B;        /* ERROR EXIT SWITCH SET         */
         OI    ERRX(ROPCE),B'00010000'                             0356
*                 MSGNUM=18;        /* INVALID OPERAND MSG NUMBER    */
         MVC   MSGNUM(2,ROPCE),@CH00181                            0357
*               END;                /* TAKE ERROR EXIT               */
*           WRKSAVE2=RTERM;         /* SAVE TTE PTR          @Y17XARX*/
@RC00322 DS    0H                                                  0359
@RC00269 ST    RTERM,WRKSAVE2(,ROPCE)                              0359
*           IF RWORK6>ZERO&ERRX=OFF THEN/* MORE TO SCAN & NO ERROR   */
         LTR   RWORK6,RWORK6                                       0360
         BNP   @RF00360                                            0360
         TM    ERRX(ROPCE),B'00010000'                             0360
         BNZ   @RF00360                                            0360
*             DO;                   /* CHECK FOR OPTIONAL OPERAND    */
*               OPCLDNME(4:5)=ERRMOD2;/* SET UP FOR IGC0B10D EXIT    */
         MVC   OPCLDNME+3(2,ROPCAVT),ERRMOD2                       0362
*               IF RWORK6=4         /* SCAN LENGTH=4 ?               */
*                   &AUTOPTN='AUTO' THEN/* AND OPERAND IS AUTO       */
         C     RWORK6,@CF00054                                     0363
         BNE   @RF00363                                            0363
         CLC   AUTOPTN(4,RWORK7),@CC02016                          0363
         BNE   @RF00363                                            0363
*                 AUTOSW='1'B;      /* SET FOR AUTO DIAL REQUEST     */
         OI    AUTOSW(ROPCE),B'10000000'                           0364
*               ELSE                /* NOT AUTO SPECIFICATION        */
*                 IF RWORK6=6       /* SCAN LENGTH=6                 */
*                     &MANLOPT='MANUAL' THEN/* AND MANUAL IS OPERAND */
         B     @RC00363                                            0365
@RF00363 C     RWORK6,@CF00052                                     0365
         BNE   @RF00365                                            0365
         CLC   MANLOPT(6,RWORK7),@CC02017                          0365
         BNE   @RF00365                                            0365
*                   MANULSW='1'B;   /* SET FOR MANUAL DIAL REQ.      */
         OI    MANULSW(ROPCE),B'01000000'                          0366
*                 ELSE              /* OTHERWISE, INVALID OPERAND    */
*                   DO;                                            0367
         B     @RC00365                                            0367
@RF00365 DS    0H                                                  0368
*                     ERRX='1'B;    /* SET TO TAKE ERROR EXIT        */
         OI    ERRX(ROPCE),B'00010000'                             0368
*                     MSGNUM=433;   /* INVALID OPTION MESSAGE        */
         MVC   MSGNUM(2,ROPCE),@CH02018                            0369
*                   END;            /* TAKE ERROR EXIT               */
*             END;                  /* END OPTIONAL OPERAND CHECK    */
*           ELSE                    /* NOTHING LEFT TO SCAN          */
*             IF ERRX='1'B THEN     /* ERROR SWITCH SET,EXIT         */
         B     @RC00360                                            0372
@RF00360 TM    ERRX(ROPCE),B'00010000'                             0372
         BO    @RT00372                                            0372
*               GO TO ERREXIT;      /* EXIT                          */
*             ELSE                  /* NO ERROR FOUND YET            */
*               MANULSW='1'B;       /* SET UP MANUAL DIAL DEFAULT    */
         OI    MANULSW(ROPCE),B'01000000'                          0374
*         END;                      /* END OPERAND SCAN              */
*       ELSE                        /* NO OPERANDS AFTER GRPNAME     */
*         DO;                       /* SET TO TAKE ERROR EXIT        */
         B     @RC00267                                            0376
@RF00267 DS    0H                                                  0377
*           ERRX='1'B;              /* ERROR EXIT SWITCH SET         */
         OI    ERRX(ROPCE),B'00010000'                             0377
*           MSGNUM=18;              /* INVALID OPERAND MSG NUMBER    */
         MVC   MSGNUM(2,ROPCE),@CH00181                            0378
*         END;                      /* TAKE ERROR EXIT               */
*       IF ERRX=OFF THEN                                           0380
@RC00267 TM    ERRX(ROPCE),B'00010000'                             0380
         BNZ   @RF00380                                            0380
*         DO;                                                      0381
*           RPARM=1;                /* REQUEST ONLY ONE BUFFER       */
         LA    RPARM,1                                             0382
*           RBRNCH=OPCGETBF;        /* ADDR. ALLOCBUF SUBRTN         */
         L     RBRNCH,OPCGETBF(,ROPCAVT)                           0383
*           GEN(BALR  RRETRN,RBRNCH        GET BUFFER FOR BTU BUILD);
         BALR  RRETRN,RBRNCH        GET BUFFER FOR BTU BUILD
*           RPRFIX=RPARM;           /* BUFFER UNIT ADDRESS           */
         LR    RPRFIX,RPARM                                        0385
*           PRUTIC=INVALTIC;        /* SET INVALID TIC FIELD         */
         L     @15,INVALTIC                                        0386
         ST    @15,PRUTIC(,IEDPRUQP)                               0386
*           CALL BUILDCPY;          /* CALL TO BUILD COPY BTU        */
         BAL   @14,BUILDCPY                                        0387
*           IF ERRX=OFF THEN        /* IF NO ERRORS                  */
         TM    ERRX(ROPCE),B'00010000'                             0388
         BZ    @RT00388                                            0388
*             GO TO EXIT1;          /* EXIT: RETURN W/RESPONSE       */
*         END;                                                     0390
*       GO TO ERREXIT;              /* ERRX SWITCH SET TO ONE        */
         B     ERREXIT                                             0391
*     END;                          /* TPOSTED COPY CMD/ EXITED      */
*   ELSE                            /* ENTERED FOR RESPONSE BTU      */
*     DO;                           /* RETURN BTU PROCESSING         */
@RF00263 DS    0H                                                  0394
*       RTERM=WRKSAVE2;             /* RESTORE TTE PTR               */
         L     RTERM,WRKSAVE2(,ROPCE)                              0394
*       RPRFIX=OCUNIT;              /* ADDRESS BUFFER UNIT           */
         L     RPRFIX,OCUNIT(,ROPCE)                               0395
*       IF PRURHSDI=OFF&PRUDATA(5)='60'X THEN/* NO ERROR RESPONSE  0396
*                                                            @Y17XARX*/
         LR    @15,IEDPRUQP                                        0396
         AL    @15,@CF02054                                        0396
         TM    PRURHSDI(@15),B'00000100'                           0396
         BNZ   @RF00396                                            0396
         CLI   PRUDATA+4(IEDPRUQP),X'60'                           0396
         BNE   @RF00396                                            0396
*         IF PRUDATA(2)='05'X THEN  /* RESPONSE FOR COPY SESSION?  0397
*                                                            @Y17XARX*/
         CLI   PRUDATA+1(IEDPRUQP),X'05'                           0397
         BNE   @RF00397                                            0397
*           DO;                     /* CHECK RESP & DEVICE RECORD    */
*                                                                  0398
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK RESPONSE FROM A COPY SESSION INITIATION       */
*             /* COMMAND ISSUE A REPLACE COMMAND,IF NECESSARY.       */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0399
*             IF PRUDATCT>6 THEN    /* IF TEXT IS RTRNED W/BTU     0399
*                                                            @Y17XARX*/
         LA    @15,6                                               0399
         CH    @15,PRUDATCT(,IEDPRUQP)                             0399
         BNL   @RF00399                                            0399
*               DO;                 /* DETERMINE IF REPLACE          */
*                 TXTPTR=ADDR(PRUDATA)+6;/* GET ADDR. LINE INFORMAT'N*/
         LA    TXTPTR,PRUDATA(,IEDPRUQP)                           0401
         ALR   TXTPTR,@15                                          0401
*                 IF AUTOUNIT='1'B THEN/* IS AUTO UNIT AVAILABLE     */
         TM    AUTOUNIT(TXTPTR),B'10000000'                        0402
         BNO   @RF00402                                            0402
*                   IF AUTOSW='1'B THEN/* AUTO DIAL REQUEST?         */
         TM    AUTOSW(ROPCE),B'10000000'                           0403
         BNO   @RF00403                                            0403
*                     IF LINESW=OFF THEN/* LINE NOW IN MANUAL MODE   */
         TM    LINESW(TXTPTR),B'01000000'                          0404
         BNZ   @RF00404                                            0404
*                       LINESW='1'B;/* PLACE LINE IN AUTO MODE       */
         OI    LINESW(TXTPTR),B'01000000'                          0405
*                     ELSE          /* LINE ALREADY IN AUTO DIAL     */
*                       DO;                                        0406
         B     @RC00404                                            0406
@RF00404 DS    0H                                                  0407
*                         MSGNUM=431;/* SET MSG ALREADY AUTO DIAL    */
         MVC   MSGNUM(2,ROPCE),@CH02020                            0407
*                         ERRX='1'B;/* SET TO TAKE ERROR EXIT        */
         OI    ERRX(ROPCE),B'00010000'                             0408
*                       END;        /* SET UP TO SEND MESSAGE        */
*                   ELSE            /* OTHER REQUEST                 */
*                     IF MANULSW='1'B THEN/* MANUAL DIAL MODE      0410
*                                      REQUEST?                      */
         B     @RC00403                                            0410
@RF00403 TM    MANULSW(ROPCE),B'01000000'                          0410
         BNO   @RF00410                                            0410
*                       IF LINESW='1'B THEN/* LINE NOW IN AUTO MODE ?*/
         TM    LINESW(TXTPTR),B'01000000'                          0411
         BNO   @RF00411                                            0411
*                         DO;       /* SEE IF IEDPMD LOADED          */
*                           LINESW=OFF;/* PLACE LINE IN MANUAL DIAL  */
         NI    LINESW(TXTPTR),B'10111111'                          0413
*                           IF SAVTMAND=ZERO THEN/* MAN'L DIAL IN  0414
*                                      CORE                          */
         L     @15,AVTSAVTP(,IEDQAPTR)                             0414
         L     @15,SAVTMAND(,@15)                                  0414
         LTR   @15,@15                                             0414
         BNZ   @RF00414                                            0414
*                             DO;   /* NO, THEN LOAD IT              */
*                               GEN(LOAD  EP=IEDPMD);/* LOAD IEDPMD  */
         LOAD  EP=IEDPMD
*                               SAVTMAND=RZERO;/* PLACE ADDR IN SAVT */
         L     @15,AVTSAVTP(,IEDQAPTR)                             0417
         ST    RZERO,SAVTMAND(,@15)                                0417
*                             END;                                 0418
*                         END;      /* END CHECK FOR MAN'L DIAL      */
*                       ELSE        /* ALREADY IN MANUAL MODE        */
*                         DO;       /* SET UP MSG FOR ALREADY        */
         B     @RC00411                                            0420
@RF00411 DS    0H                                                  0421
*                           MSGNUM=431;/* MANUAL DIAL MODE           */
         MVC   MSGNUM(2,ROPCE),@CH02020                            0421
*                           ERRX='1'B;/* SET TO TAKE ERROR EXIT      */
         OI    ERRX(ROPCE),B'00010000'                             0422
*                         END;                                     0423
*                     ELSE                                         0424
*                       ;           /* NO REQUEST ?                  */
@RF00410 DS    0H                                                  0425
*                 ELSE              /* NO AUTO UNIT,NO CHNGMODE      */
*                   DO;                                            0425
         B     @RC00402                                            0425
@RF00402 DS    0H                                                  0426
*                     MSGNUM=430;   /* ERR MSG FOR NO AUTO UNIT      */
         MVC   MSGNUM(2,ROPCE),@CH02021                            0426
*                     ERRX='1'B;    /* SET TO TAKE ERROR EXIT        */
         OI    ERRX(ROPCE),B'00010000'                             0427
*                   END;                                           0428
*                 IF ERRX=OFF THEN  /* NO ERRORS FOUND               */
@RC00402 TM    ERRX(ROPCE),B'00010000'                             0429
         BNZ   @RF00429                                            0429
*                   DO;             /* ALRIGHT TO REPLACE     SESSION*/
*                     RWORK7=PRUDATCT;/* SAVE BTUCOUNT FOR SEND    0431
*                                                            @Y17XARX*/
         LH    RWORK7,PRUDATCT(,IEDPRUQP)                          0431
*                     CALL BUILDCPY;/* SET UP THE BTU IN BUFFER      */
         BAL   @14,BUILDCPY                                        0432
*                     PRUDATCT=RWORK7;/* RESTORE BTUCOUNT    @Y17XARX*/
         STH   RWORK7,PRUDATCT(,IEDPRUQP)                          0433
*                     PRUDATA(2)='02'X;/* SET FOR REPLACE COMMAND  0434
*                                                            @Y17XARX*/
         MVI   PRUDATA+1(IEDPRUQP),X'02'                           0434
*                     GO TO EXIT1;  /* XCTL TO BTU DISPATCHER        */
         B     EXIT1                                               0435
*                   END;            /* REPLACE CMD ISSUED            */
*                 ELSE              /* NO REPLACE FOR THIS LINE      */
*                   GO TO ERREXIT;  /* SEE IF PROCESSING A GROUP     */
*               END;                /* END/RETURN COPY BTU           */
*             ELSE                                                 0439
*               DO;                                                0439
@RF00399 DS    0H                                                  0440
*                 ERRX='1'B;        /* SET ERROR BIT ON              */
         OI    ERRX(ROPCE),B'00010000'                             0440
*                 MSGNUM=199;       /* SET SYSTEM ERROR              */
         MVC   MSGNUM(2,ROPCE),@CH02023                            0441
*                 GO TO ERREXIT;    /* GO TO ERROR EXIT              */
         B     ERREXIT                                             0442
*               END;                                               0443
*           END;                    /* TPOSTED REPL CMD/ EXITED      */
*         ELSE                      /* NOT RESPONSE TOCOPY CMD       */
*           IF PRUDATA(2)='02'X THEN/* RESPONSE FOR REPLACE CMD?     */
@RF00397 CLI   PRUDATA+1(IEDPRUQP),X'02'                           0445
         BNE   @RF00445                                            0445
*             DO;                   /* DETERMINE IF PROCESSING       */
*                                                                  0446
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK RESPONSE TO REPLACE COMMAND. IF GOOD        */
*               /* RESPONSE, AND NO GROUP IS BEING PROCESSED(OR END  */
*               /* OF GROUP),THEN ISSUE MESSAGE FOR CHNGMODE         */
*               /* COMPLETE. OTHERWISE,GET NEXT RLN TO PROCESS AND   */
*               /* BUILD A COPY COMMAND. IF ERROR RESPONSE,ISSUE     */
*               /* ERROR MESSAGE FIRST.                              */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0447
*               IF OCGRPSW='1'B THEN/* GROUP BEING PROCESSED         */
         TM    OCGRPSW(ROPCE),B'00000100'                          0447
         BNO   @RF00447                                            0447
*                 DO;               /* SEE IF MORE TO COPY   @Y17XARX*/
*                   DO UNTIL(TRMTYPE=TRMGRP);/* TRY TO FIND A LINE 0449
*                                                            @Y17XARX*/
@DL00449 DS    0H                                                  0450
*                     RPARM=TRMCOHTG;/* GET TTCIN OF NXT LINE      0450
*                                                            @Y17XARX*/
         LR    @15,RTERM                                           0450
         AL    @15,@CF02056                                        0450
         LH    RPARM,TRMCOHTG-8(,@15)                              0450
         N     RPARM,@CF02051                                      0450
*                     CALL GETNXT;  /* GET TTE OF NXT LINE   @Y17XARX*/
         BAL   @14,GETNXT                                          0451
*                     IF TRMTYPE=TRMNSDLC THEN/* IF NON-SNA LINE   0452
*                                                            @Y17XARX*/
         LR    @15,RTERM                                           0452
         AL    @15,@CF00513                                        0452
         CLI   TRMTYPE-11(@15),X'20'                               0452
         BNE   @RF00452                                            0452
*                       DO;         /*                       @Y17XARX*/
*                         CALL BUILDCPY;/* BUILD COPY CMMD   @Y17XARX*/
         BAL   @14,BUILDCPY                                        0454
*                         IF ERRX=OFF THEN                         0455
         TM    ERRX(ROPCE),B'00010000'                             0455
         BZ    @RT00455                                            0455
*                           GO TO EXIT1;/* IF NO ERROR, SEND @Y17XARX*/
*                       END;        /*                       @Y17XARX*/
*                   END;            /*                       @Y17XARX*/
@RF00452 DS    0H                                                  0458
@DE00449 LR    @15,RTERM                                           0458
         AL    @15,@CF00513                                        0458
         CLI   TRMTYPE-11(@15),X'00'                               0458
         BNE   @DL00449                                            0458
*                   IF ERRX='1'B THEN/* IF ERROR             @Y17XARX*/
         TM    ERRX(ROPCE),B'00010000'                             0459
         BO    @RT00459                                            0459
*                     GO TO ERREXIT;/* PROCESS ERROR         @Y17XARX*/
*                 END;              /* END SET UP FOR COPYNEW RLN    */
*               OPCLDNME(4:5)=GOODMSGR;/* GOOD EXIT                  */
@RF00447 MVC   OPCLDNME+3(2,ROPCAVT),GOODMSGR                      0462
*               MSGNUM=432;         /* GOOD MSG EXIT CODE            */
         MVC   MSGNUM(2,ROPCE),@CH02024                            0463
*               GO TO EXIT1;        /* EXIT TO MSG MODULE            */
         B     EXIT1                                               0464
*             END;                  /*                               */
*           ELSE                    /* UNSOLICITED BTU RESPONSE      */
*             DO;                   /* ASSUME RETURN FOR GROUP       */
@RF00445 DS    0H                                                  0467
*               MSGNUM=199;         /* ASSUME SYSTEM ERROR           */
         MVC   MSGNUM(2,ROPCE),@CH02023                            0467
*               ERRX='1'B;          /* SET UP FOR ERR EXIT RTN       */
         OI    ERRX(ROPCE),B'00010000'                             0468
*               GO TO ERREXIT;      /* GO TO ERROR PROCESS. RTN      */
         B     ERREXIT                                             0469
*             END;                                                 0470
*       ELSE                        /* SYSTEM ERROR RESPONSE         */
*         DO;                       /* HANDLE ERROR MESSAGE          */
@RF00396 DS    0H                                                  0472
*           MSGNUM=199;             /* ASSUME SYSTEM ERROR           */
         MVC   MSGNUM(2,ROPCE),@CH02023                            0472
*ERREXIT:                                                          0473
*                                                                  0473
*           /*********************************************************/
*           /*                                                       */
*           /* ERREXIT- IF THE ERRX SWITCH IS SET TO ONE, THEN       */
*           /* CONTROL IS PASSED HERE FOR SENDING AN ERROR MESSAGE TO*/
*           /* THE CONSOLE OPERATOR. IF NO GROUP PROCESSING IS TO BE */
*           /* DONE THEN RETURN WILL NOT BE MADE TO THIS RTN FOR     */
*           /* PROCESSING THE CHNGMODE COMMAND. IF THERE IS STILL    */
*           /* GROUP PROCESSING TO BE DONE,DECIDE WHAT IS TO BE DONE */
*           /* AND CALL THE APPROPRIATE RTNS.                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0473
*           ERRX=OFF;               /* SET TO END ERROR PROCESS      */
ERREXIT  NI    ERRX(ROPCE),B'11101111'                             0473
*           OPCLDNME(4:5)=ERRMOD1;  /* SET EXIT TO ERROR MOD @YM06962*/
         MVC   OPCLDNME+3(2,ROPCAVT),ERRMOD1                       0474
*           IF MSGNUM=18×MSGNUM=17×MSGNUM=173/* EXISTING ERROR MSG 0475
*                                      FOR CMD                       */
*               ×MSGNUM=433 THEN    /* INVALID OPTN SPECIFIED        */
         LH    @15,MSGNUM(,ROPCE)                                  0475
         C     @15,@CF00181                                        0475
         BE    @RT00475                                            0475
         C     @15,@CF02026                                        0475
         BE    @RT00475                                            0475
         C     @15,@CF02015                                        0475
         BE    @RT00475                                            0475
         C     @15,@CF02018                                        0475
         BE    @RT00475                                            0475
*             GO TO EXIT1;          /* EXIT TO ERR MOD '03'          */
*           IF OCGRPSW='1'B THEN    /* GROUP PROCESSING ?            */
         TM    OCGRPSW(ROPCE),B'00000100'                          0477
         BNO   @RF00477                                            0477
*             DO UNTIL(TRMTYPE=TRMGRP);/* TRY TO FIND A LINE @Y17XARX*/
@DL00478 DS    0H                                                  0479
*               RPARM=TRMCOHTG;     /* GET TTCIN OF NXT LINE @Y17XARX*/
         LR    @15,RTERM                                           0479
         AL    @15,@CF02056                                        0479
         LH    RPARM,TRMCOHTG-8(,@15)                              0479
         N     RPARM,@CF02051                                      0479
*               CALL GETNXT;        /* GET TTE OF NXT LINE   @Y17XARX*/
         BAL   @14,GETNXT                                          0480
*               IF TRMTYPE=TRMNSDLC THEN/* IF NON-SNA LINE   @Y17XARX*/
         LR    @15,RTERM                                           0481
         AL    @15,@CF00513                                        0481
         CLI   TRMTYPE-11(@15),X'20'                               0481
         BNE   @RF00481                                            0481
*                 DO;               /*                       @Y17XARX*/
*                   CALL BUILDCPY;  /* BUILD COPY CMMD       @Y17XARX*/
         BAL   @14,BUILDCPY                                        0483
*                   IF ERRX=OFF THEN                               0484
         TM    ERRX(ROPCE),B'00010000'                             0484
         BZ    @RT00484                                            0484
*                     GO TO EXIT1;  /* IF NO ERROR, SEND     @Y17XARX*/
*                 END;              /*                       @Y17XARX*/
*             END;                  /*                       @Y17XARX*/
*                                                                  0487
@RF00481 DS    0H                                                  0487
@DE00478 LR    @15,RTERM                                           0487
         AL    @15,@CF00513                                        0487
         CLI   TRMTYPE-11(@15),X'00'                               0487
         BNE   @DL00478                                            0487
*           /*********************************************************/
*           /*                                                       */
*           /* WRITE FINAL MESSAGE                                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0488
*           GO TO EXIT1;                                           0488
         B     EXIT1                                               0488
*         END;                      /* ERROR EXITED                  */
*     END;                          /* END RETURN BTU PROCESSING     */
*                                                                  0491
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL CALL THE DCBLOCAT ROUTINE TO FIND THE LGB   */
*   /* AND TERMINAL ENTRY ADDRESSES. IT ASSUMES R1 CONTAINS THE      */
*   /* RELATIVE LINE NUMBER. ROUTINE PASSES CONTROL TO DCBLOCAT WITH */
*   /* THE FOLLOWING PARAMETERS: R1 = 0 (OPCDOUBL CONTAINS EBCDIC    */
*   /* RLN) R1 = RLN (OPCDOUBL HAS DDNAME) R2 = PTR TO OP CONTROL AVT*/
*   /* R3 = PTR TO OPCE R4 = PTR TO TCAM AVT R13= PTR TO OP CONTROL  */
*   /* SAVE AREA R14= RETURN ADDRESS UPON GOOD RETURN FROM DCBLOCAT, */
*   /* THIS ROUTINE WILL RETURN TO ITS CALLER. UPON ERROR RETURN, THE*/
*   /* ERROR EXIT INDICAT- OR WILL BE SET AND A MSG NUMBER SELECTED  */
*   /* BEFORE RETURNING TO THE CALLER. NORMAL RETURN: R0 = UCB       */
*   /* ADDRESS R1 = DCB ADDRESS OPCE CONTAINS THE RLN IF GROUPNAME,  */
*   /* RLN LOOKUP THEN: R0 = LINE ENTRY ADDRESS R1 = LGB ADDRESS     */
*   /* ABNORMAL RETURN: R0 = RETURN CODE                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0491
*CALDCBLK:                                                         0491
*   WORKSAVE=RRETRN;                /* SAVE RETURN ADDRESS           */
CALDCBLK STCM  RRETRN,7,WORKSAVE(ROPCE)                            0491
*   RBRNCH=OPCDCBLK;                /* DCBLOCAT RTN ADDRESS          */
         L     RBRNCH,OPCDCBLK(,ROPCAVT)                           0492
*   RPARM=RWORK8;                   /* RLN-SPECIFIED/NEXT/DUMMY      */
         LR    RPARM,RWORK8                                        0493
*   GEN(BALR  RRETRN,RBRNCH CALL DCBLOCAT);                        0494
         BALR  RRETRN,RBRNCH CALL DCBLOCAT
*   BC(15,GOODRTRN);                /* RETURN IF NO ERROR FOUND      */
         BC    15,GOODRTRN                                         0495
*BADRTRN:                           /* ERROR RETURN FROM DCBLOCAT    */
*   IF RZERO='20'X                  /* IF ERROR CODE=X'20'           */
*       ×RZERO=4 THEN               /* NAME NOT FOUND                */
BADRTRN  C     RZERO,@CF00411                                      0496
         BE    @RT00496                                            0496
         C     RZERO,@CF00054                                      0496
         BNE   @RF00496                                            0496
@RT00496 DS    0H                                                  0497
*     MSGNUM=173;                   /* MSG FOR INVALID GROUP         */
         MVC   MSGNUM(2,ROPCE),@CH02015                            0497
*   ELSE                            /* NOT INVALID GROUP PROBLEM     */
*     MSGNUM=17;                    /* DCB NOT OPEN MESSAGE          */
         B     @RC00496                                            0498
@RF00496 MVC   MSGNUM(2,ROPCE),@CH02026                            0498
*   RRETRN=WORKSAVE;                /* RESTORE RETURN ADDRESS        */
@RC00496 L     RRETRN,WORKSAVE-1(,ROPCE)                           0499
         LA    RRETRN,0(,RRETRN)                                   0499
*   GEN(BR    RRETRN    RETURN TO CALLER);                         0500
         BR    RRETRN    RETURN TO CALLER
*GOODRTRN:                          /* NO ERROR FROM DCBLOCAT        */
*   RESPECIFY                                                      0501
*     RZERO RESTRICTED;                                            0501
GOODRTRN DS    0H                                                  0502
*   RTERM=RZERO;                    /* ADDR. TTE                     */
         LR    RTERM,RZERO                                         0502
*   RESPECIFY                                                      0503
*     RZERO UNRESTRICTED;                                          0503
*   RRETRN=WORKSAVE;                /* RESTORE RETURN ADDRESS        */
         L     RRETRN,WORKSAVE-1(,ROPCE)                           0504
         LA    RRETRN,0(,RRETRN)                                   0504
*   GEN(BR    RRETRN    RETURN TO CALLER);                         0505
         BR    RRETRN    RETURN TO CALLER
*                                                                  0506
*/********************************************************************/
*/* SET UP FOR ISUING A COPY SESSION INITIATION COMMAND              */
*/********************************************************************/
*                                                                  0506
*BUILDCPY:                                                         0506
*   WORKSAVE=RRETRN;                /* SAVE RETURN ADDRESS           */
BUILDCPY STCM  RRETRN,7,WORKSAVE(ROPCE)                            0506
*   OCUNIT=RPRFIX;                  /* SET UP BUFFER ADDR.FOR 02     */
         ST    RPRFIX,OCUNIT(,ROPCE)                               0507
*   RESPECIFY                                                      0508
*     RZERO RESTRICTED;             /*                       @Y17XARX*/
*   RESPECIFY                                                      0509
*     RPARM RESTRICTED;             /*                       @Y17XARX*/
*   IF TRMTYPE=TRMNSDLC&TRMCOHRT^=ZERO THEN/* IF NON-SNA LINE W NCP
*                                                            @Y17XARX*/
         LR    @15,RTERM                                           0510
         SL    @15,@CF02042                                        0510
         CLI   TRMTYPE(@15),X'20'                                  0510
         BNE   @RF00510                                            0510
         LH    @15,TRMCOHRT(,@15)                                  0510
         N     @15,@CF02051                                        0510
         LTR   @15,@15                                             0510
         BZ    @RF00510                                            0510
*     DO;                           /* YES                   @Y17XARX*/
*       RPARM=RTERM;                /* SET TTE PTR           @Y17XARX*/
         LR    RPARM,RTERM                                         0512
*       RSAVE=ADDR(OPCSAVE);        /* SET SAVE PTR          @Y17XARX*/
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0513
*       CALL COHORTLK;              /* GET NCP TTE           @Y17XARX*/
         L     @15,OPCHORT(,ROPCAVT)                               0514
         BALR  @14,@15                                             0514
*       RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEG PREFIX @YM06961*/
         LA    @15,14                                              0515
         SLR   RPARM,@15                                           0515
*       IF RPARM->TRMINPG='1'B THEN /* NCP IN PROG           @Y17XARX*/
         TM    TRMINPG(RPARM),B'00100000'                          0516
         BNO   @RF00516                                            0516
*         DO;                       /* YES                   @Y17XARX*/
*           RFY                                                    0518
*             IHADCB BASED(RPARM);  /* DCB DSECT             @XM05704*/
*           RPARM=RPARM+LENGTH(IEDNTRM);/* BACK TO TTE DSECT @XM05704*/
         ALR   RPARM,@15                                           0519
*           RPARM=RPARM->TRMDESTQ->QCBDCBAD;/* GET THE DEB ADDR      */
         L     @15,TRMDESTQ-1(,RPARM)                              0520
         L     @15,QCBDCBAD-1(,@15)                                0520
         LA    @15,0(,@15)                                         0520
         LR    RPARM,@15                                           0520
*           RPARM=DCBDEBAD;         /* GET DEB ADDR          @XM05704*/
         L     @15,DCBDEBAD+40(,RPARM)                             0521
         LR    RPARM,@15                                           0521
*           RFY                                                    0522
*             IHADCB BASED;                                        0522
*           RFY                                                    0523
*             IEDQDEB BASED(RPARM);                                0523
*           RPARM=RPARM-(ADDR(DEBNMSUB)-ADDR(IEDQDEB));/* BACKUP     */
         SL    RPARM,@CF01221                                      0524
*           OCBACKUP=''B;           /* CLEAR TO INSERT THE UCB     0525
*                                      ADDRESS                       */
         XC    OCBACKUP(8,ROPCE),OCBACKUP(ROPCE)                   0525
*           OCBACKUP(1:3)=DEBUCBAD->UCBNAME;/* GET UCB ADDR          */
         L     @15,DEBUCBAD-1(,RPARM)                              0526
         MVC   OCBACKUP(3,ROPCE),UCBNAME(@15)                      0526
*           MSGNUM=INPROGM;         /* SET MSG NUMBER        @Y17XARX*/
         MVC   MSGNUM(2,ROPCE),@CH00124                            0527
*           ERRX='1'B;              /* SET ERROR EXIT        @Y17XARX*/
         OI    ERRX(ROPCE),B'00010000'                             0528
*           OCTRMTBL=RZERO;         /* SET NCP TTCIN         @Y17XARX*/
         STH   RZERO,OCTRMTBL(,ROPCE)                              0529
*         END;                      /*                       @Y17XARX*/
*     END;                          /*                       @Y17XARX*/
*   ELSE                            /* TTE NOT CONCECTED TO NCP    0532
*                                                            @Y17XARX*/
*     DO;                           /*                       @Y17XARX*/
         B     @RC00510                                            0532
@RF00510 DS    0H                                                  0533
*       ERRX='1'B;                  /* SET ERROR EXIT        @Y17XARX*/
         OI    ERRX(ROPCE),B'00010000'                             0533
*       IF TRMTYPE=TRMSDLC THEN     /* IF SNA LINE           @Y17XARX*/
         LR    @15,RTERM                                           0534
         AL    @15,@CF00513                                        0534
         CLI   TRMTYPE-11(@15),X'21'                               0534
         BNE   @RF00534                                            0534
*         MSGNUM=18;                /* INVALID OPERAND MESSAGE     0535
*                                                            @Y17XARX*/
         MVC   MSGNUM(2,ROPCE),@CH00181                            0535
*       ELSE                        /* NO HIERARCHY          @Y17XARX*/
*         MSGNUM=NCPNOTA;           /* SET MSG NUMBER        @Y17XARX*/
         B     @RC00534                                            0536
@RF00534 MVC   MSGNUM(2,ROPCE),@CH00126                            0536
*     END;                          /*                       @Y17XARX*/
@RC00534 DS    0H                                                  0538
*   IF ERRX=OFF THEN                /* IF NO ERRORS          @Y17XARX*/
@RC00510 TM    ERRX(ROPCE),B'00010000'                             0538
         BNZ   @RF00538                                            0538
*     DO;                           /*                       @Y17XARX*/
*       RESPECIFY                                                  0540
*         RPARM UNRESTRICTED;       /*                       @Y17XARX*/
*       RESPECIFY                                                  0541
*         RZERO UNRESTRICTED;       /*                       @Y17XARX*/
*       PRURHTH=FID0PRUH;           /* SET UP FID0 RH/TH             */
         L     @01,FID0PRUH                                        0542
         LR    @15,IEDPRUQP                                        0542
         AL    @15,@CF02054                                        0542
         ST    @01,PRURHTH(,@15)                                   0542
*       PRUTTCIN=OCTRMTBL;          /* SET UP DESTINATION            */
         LH    @01,OCTRMTBL(,ROPCE)                                0543
         N     @01,@CF02051                                        0543
         STH   @01,PRUTTCIN(,IEDPRUQP)                             0543
*       PRUDATCT=6;                 /* SET DATA COUNT                */
         MVC   PRUDATCT(2,IEDPRUQP),@CH00052                       0544
*       PRUDATA(1:2)=COPYDSII;      /* SET UP COPY CMMD              */
         MVC   PRUDATA(2,IEDPRUQP),COPYDSII                        0545
*       PRUDATA(3:6)=ZERO;          /* CLEAR FLAGS AND RESP          */
         SLR   @01,@01                                             0546
         STCM  @01,15,PRUDATA+2(IEDPRUQP)                          0546
*       OCACTREQ='1'B;              /* SET NO 02 NCP CHECKS          */
         OI    OCACTREQ(ROPCE),B'00001000'                         0547
*       OPCLDNME(4:5)=BTUDISP;      /* MODULE ID CHARS FOR 02        */
         MVC   OPCLDNME+3(2,ROPCAVT),BTUDISP                       0548
*       OCWTG=MVRTN;                /* THIS RTN IS WHERE TO GO       */
         MVC   OCWTG(2,ROPCE),MVRTN                                0549
*     END;                          /*                       @YM06961*/
*   RRETRN=WORKSAVE;                /* RESTORE RETURN ADDRESS        */
@RF00538 L     RRETRN,WORKSAVE-1(,ROPCE)                           0551
         LA    RRETRN,0(,RRETRN)                                   0551
*   GEN(BR    RRETRN);                                             0552
         BR    RRETRN
*GETNXT:                                                           0553
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);/*                     @Y17XARX*/
         B     @PB00002                                            0553
GETNXT   DS    0H                                                  0554
*   RESPECIFY                                                      0554
*    (ROPCE,                                                       0554
*     RPARM,                                                       0554
*     IEDQAPTR,                                                    0554
*     RTERM) RSTD;                  /*                       @Y17XARR*/
*   WORKSAVE=RRETRN;                /* SAVE RTRN REG         @Y17XARX*/
         STCM  RRETRN,7,WORKSAVE(ROPCE)                            0555
*   OCTRMTBL=RPARM;                 /* SAVE TTCIN            @Y17XARX*/
         STH   RPARM,OCTRMTBL(,ROPCE)                              0556
*   CALL TNTLOOK;                   /* GET TTE               @Y17XARX*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0557
         BALR  @14,@15                                             0557
*   RTERM=RPARM;                    /* SET ADDR OF TTE       @Y17XARX*/
         LR    RTERM,RPARM                                         0558
*   WRKSAVE2=RTERM;                 /* SAVE TTE PTR          @Y17XARX*/
         ST    RTERM,WRKSAVE2(,ROPCE)                              0559
*   OCRLN=TRMDESTQ->QCBRELLN;       /* SAVE RLN NO           @Y17XARR*/
         L     @15,TRMDESTQ-1(,RTERM)                              0560
         IC    @14,QCBRELLN(,@15)                                  0560
         STC   @14,OCRLN(,ROPCE)                                   0560
*   RRETRN=WORKSAVE;                /* RESTORE RTRN REG      @Y17XARX*/
         L     RRETRN,WORKSAVE-1(,ROPCE)                           0561
         LA    RRETRN,0(,RRETRN)                                   0561
*   RETURN;                         /* RETURN                @Y17XARX*/
@EL00002 DS    0H                                                  0562
@EF00002 DS    0H                                                  0562
@ER00002 BR    @14                                                 0562
*   END;                            /*                       @Y17XARX*/
@PB00002 DS    0H                                                  0564
*EXIT1:                                                            0564
*                                                                  0564
*/********************************************************************/
*/* EXIT WILL BE MADE TO ONE OF THE MODULES LISTED BELOW             */
*/*  IGC0210D                                                        */
*/*  IGC0310D                                                        */
*/*  IGC0B10D                                                        */
*/*  IGC0D10D                                                        */
*/********************************************************************/
*                                                                  0564
*   RMSGNO=MSGNUM;                  /* ERROR MSG NO= PARAMETER       */
EXIT1    LH    @15,MSGNUM(,ROPCE)                                  0564
         LR    RMSGNO,@15                                          0564
*   IF MSGNUM=432&OCGRPSW='1'B THEN /* IF GOODMSG AND 'GRPNAME'      */
         C     @15,@CF02024                                        0565
         BNE   @RF00565                                            0565
         TM    OCGRPSW(ROPCE),B'00000100'                          0565
         BNO   @RF00565                                            0565
*     OCRLN='00'X;                  /* SET 'ALL' FOR MSG MODULE      */
         MVI   OCRLN(ROPCE),X'00'                                  0566
*   RPARM=ROPCAVT;                  /* ADDR. OPCAVT AS PARAM         */
@RF00565 LR    RPARM,ROPCAVT                                       0567
*   GEN REFS(OPCXCTL)(XCTL  SF=(E,OPCXCTL(ROPCAVT)));/* XCTL TO NEXT
*                                      OP CNTRL MOD          @Y17XARX*/
         XCTL  SF=(E,OPCXCTL(ROPCAVT))
*   END IGCMV10D                                                   0569
*                                                                  0569
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (TDEBD   )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*                                                                  0569
*       ;                                                          0569
@EL00001 DS    0H                                                  0569
@EF00001 DS    0H                                                  0569
@ER00001 BR    @14                                                 0569
@DATA    DS    0H
@CH02023 DC    H'199'
@CH00124 DC    H'210'
@CH00126 DC    H'400'
@CH02021 DC    H'430'
@CH02020 DC    H'431'
         DS    0F
         DS    0F
@CF00045 DC    F'1'
@CF00049 DC    F'3'
@CF00054 DC    F'4'
@CF00052 DC    F'6'
@CH00052 EQU   @CF00052+2
@CF02042 DC    F'14'
@CF02026 DC    F'17'
@CH02026 EQU   @CF02026+2
@CF00181 DC    F'18'
@CH00181 EQU   @CF00181+2
@CF01221 DC    F'36'
@CF02015 DC    F'173'
@CH02015 EQU   @CF02015+2
@CF02008 DC    F'255'
@CF02024 DC    F'432'
@CH02024 EQU   @CF02024+2
@CF02018 DC    F'433'
@CH02018 EQU   @CF02018+2
@CF02054 DC    F'-8'
@CF02056 DC    F'-6'
@CF00513 DC    F'-3'
@CF02051 DC    XL4'0000FFFF'
@CF00411 DC    XL4'20'
         DS    0D
FID0PRUH DC    XL4'0B80000C'
INVALTIC DC    XL4'08000002'
COPYDSII DC    XL2'0805'
@CC02017 DC    C'MANUAL'
@CC02016 DC    C'AUTO'
@CC02010 DC    C'ALL'
BTUDISP  DC    CL2'02'
ERRMOD1  DC    CL2'03'
ERRMOD2  DC    CL2'0B'
GOODMSGR DC    CL2'0D'
MVRTN    DC    CL2'MV'
ZAPAREA  DC    50X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPARM    EQU   @01
RZERO    EQU   @00
RMSGNO   EQU   @00
ROPCAVT  EQU   @02
ROPCE    EQU   @03
IEDQAPTR EQU   @04
RWORKA   EQU   @05
RWORK6   EQU   @06
RWORK7   EQU   @07
TXTPTR   EQU   @05
IEDQTPTR EQU   @06
IEDPRUQP EQU   @09
RTERM    EQU   @08
RPRFIX   EQU   @09
I        EQU   @15
RWORK8   EQU   @08
RWORK9   EQU   @09
RSAVE    EQU   @13
RRETRN   EQU   @14
RBRNCH   EQU   @15
COUNT    EQU   @10
IEDQPPTR EQU   @06
         ENTRY BUILDCPY
         ENTRY CALDCBLK
FIELDR   EQU   0
DEFNFLD1 EQU   0
RLNOPTN  EQU   DEFNFLD1
OPTNALL  EQU   RLNOPTN
DEFNFLD2 EQU   0
MANLOPT  EQU   DEFNFLD2
AUTOPTN  EQU   MANLOPT
CPYTEXT  EQU   0
AUTOUNIT EQU   CPYTEXT
LINESW   EQU   CPYTEXT
IEDQDPTR EQU   0
IEDQQPTR EQU   0
TRMOFLOC EQU   0
COHORTLK EQU   0
TNTLOOK  EQU   0
IEDQOPCD EQU   0
OPCDOUBL EQU   IEDQOPCD
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCDCBLK EQU   IEDQOPCD+16
OPCTOFLK EQU   IEDQOPCD+24
OPCSAVE  EQU   IEDQOPCD+56
OPCWORK  EQU   IEDQOPCD+140
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCHORT  EQU   IEDQOPCD+256
OPCGETBF EQU   IEDQOPCD+276
OPCSPEC  EQU   IEDQOPCD+300
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRESP   EQU   OCFLAG
OCRLN    EQU   IEDQOPCE+15
@NM00018 EQU   IEDQOPCE+16
OCDEST   EQU   @NM00018
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCACTREQ EQU   OCALSTAT
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
@NM00031 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00031
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00113 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTMAND EQU   IEDNSVTD+228
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IHADCB   EQU   0
IHADCS1A EQU   0
DCBBCKUP EQU   IHADCS1A+8
IHADCS2K EQU   0
DCBDUMPD EQU   IHADCS2K
DCBTRSTA EQU   IHADCS2K+5
DCBDSORG EQU   IHADCS2K+6
DCBDSRG2 EQU   DCBDSORG+1
DCBRNCKD EQU   IHADCS2K+12
DCBEXLST EQU   IHADCS2K+16
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS43 EQU   0
DCBSCTAB EQU   IHADCS43
IEDQDEB  EQU   0
DEBPRF   EQU   IEDQDEB
DEBAPVT  EQU   DEBPRF
DEBNMSUB EQU   IEDQDEB+36
DEBNMEXT EQU   IEDQDEB+52
DEBUCBS  EQU   IEDQDEB+68
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHSDI EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00153 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00153+1
QCBTSOF1 EQU   @NM00153+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBRELLN EQU   IEDQQCB+32
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMPREF  EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMCOHRT EQU   IEDNTRM+4
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
TRMCOHTG EQU   TRMSIBPT+1
TRMTYPE  EQU   IEDNTRM+11
TRMSUBST EQU   IEDNTRM+12
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00167 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
DEBSUBR  EQU   0
LGBRLNCT EQU   0
QCBLDCB  EQU   0
UCBBGN   EQU   0
UCBDCPTR EQU   0
MSGNUM   EQU   OCLINENO
DCBPTR   EQU   QCBDCBAD
DEBUCB   EQU   DEBUCBS
DEBDVMOD EQU   DEBUCB
DEBUCBAD EQU   DEBUCB+1
UCBPTR   EQU   DEBUCBAD
MVWORK   EQU   OCMODNME
SWITCHES EQU   MVWORK
AUTOSW   EQU   SWITCHES
MANULSW  EQU   SWITCHES
COUNTSW  EQU   SWITCHES
ERRX     EQU   SWITCHES
OCGRPSW  EQU   SWITCHES
WORKSAVE EQU   MVWORK+1
WRKSAVE2 EQU   MVWORK+4
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00166 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
OCCIB    EQU   OCREQVAL
TRMOPT   EQU   IEDQTRM+20
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00166
UCBSKPFG EQU   @NM00166
UCBRIPND EQU   @NM00166
UCBRTIAC EQU   @NM00166
UCBRSV79 EQU   @NM00166
UCBRSV78 EQU   @NM00166
UCBRSV77 EQU   @NM00166
UCBOLTEP EQU   @NM00166
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00165 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00163 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00162 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00161 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
OCICINAC EQU   OCICSW
@NM00024 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00023 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
DUMMYSW1 EQU   SWITCHES
DUMMYSW  EQU   SWITCHES
RETRNSW  EQU   SWITCHES
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00167
UCBHALI  EQU   @NM00167
UCBRSV09 EQU   @NM00167
UCBRSV08 EQU   @NM00167
UCBRSV07 EQU   @NM00167
UCBRSV06 EQU   @NM00167
UCBRSV05 EQU   @NM00167
UCBRSV04 EQU   @NM00167
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00164 EQU   UCB
TRMRLMCT EQU   IEDNTRM+10
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00160 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00159 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00158 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
QCBTTCIN EQU   QCBPLCBA+1
@NM00157 EQU   QCBPLCBA
@NM00156 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00155 EQU   QCBFHDTZ
@NM00154 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00153
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00152 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00151 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBELCHN EQU   IEDQQCB+1
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
@NM00150 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00149 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00148 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00147 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00146 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00145 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00144 EQU   PRUTIC
@NM00143 EQU   IEDPRUQD+4
DEBAPPAD EQU   IEDQDEB+65
DEBEXSCL EQU   IEDQDEB+64
DEBDCBAD EQU   IEDQDEB+61
DEBPROTG EQU   IEDQDEB+60
DEBECBAD EQU   IEDQDEB+57
DEBPRIOR EQU   IEDQDEB+56
DEBUSRPG EQU   IEDQDEB+53
DEBSYSPG EQU   IEDQDEB+49
DEBOPATB EQU   IEDQDEB+48
DEBIRBAD EQU   IEDQDEB+45
DEBOFLGS EQU   IEDQDEB+44
DEBDEBAD EQU   IEDQDEB+41
DEBAMLNG EQU   IEDQDEB+40
DEBTCBAD EQU   IEDQDEB+37
@NM00142 EQU   DEBPRF+33
DEBLNGTH EQU   DEBPRF+32
DEBDCBMK EQU   DEBPRF+28
DEBDSCBA EQU   DEBPRF+21
DEBWKARA EQU   DEBPRF+20
DEBXCEA  EQU   DEBAPVT+16
DEBCEA   EQU   DEBAPVT+12
DEBPCIA  EQU   DEBAPVT+8
DEBSIOA  EQU   DEBAPVT+4
DEBEOEA  EQU   DEBAPVT
DCBBUFSI EQU   IHADCS43+6
DCBUNTCT EQU   IHADCS43+5
DCBILCT  EQU   IHADCS43+4
DCBSCTAD EQU   DCBSCTAB+1
@NM00141 EQU   DCBSCTAB
DCBPUTA  EQU   DCBGETA
@NM00140 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00139 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00138 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBEIOBX EQU   DCBEXLST
DCBRNCKA EQU   DCBRNCKD+1
@NM00137 EQU   DCBRNCKD
DCBIOBAD EQU   IHADCS2K+8
DCBDSGTR EQU   DCBDSRG2
@NM00136 EQU   DCBDSRG2
DCBDSRG1 EQU   DCBDSORG
DCBCHNGL EQU   DCBTRSTA
DCBNIDLE EQU   DCBTRSTA
DCBBAKUP EQU   DCBTRSTA
DCBIPLED EQU   DCBTRSTA
DCBRSTRT EQU   DCBTRSTA
DCBINITL EQU   DCBTRSTA
DCBAUTOD EQU   DCBTRSTA
DCBAUTOI EQU   DCBTRSTA
@NM00135 EQU   IHADCS2K+4
DCBDUMPA EQU   DCBDUMPD+1
DCBUNITN EQU   DCBDUMPD
DCBBCKUA EQU   DCBBCKUP+1
@NM00134 EQU   DCBBCKUP
DCBIPLTX EQU   IHADCS1A
@NM00133 EQU   IHADCB
SAVTBITN EQU   IEDNSVTD+312
@NM00132 EQU   SAVTCKQB+8
@NM00131 EQU   SAVTCKEC+1
@NM00130 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00129 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00128 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00127 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00126 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00125 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00124 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00123 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00122 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00121 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00120 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00119 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00118 EQU   IEDQAVTD+1242
@NM00117 EQU   IEDQAVTD+1241
@NM00116 EQU   IEDQAVTD+1240
@NM00115 EQU   IEDQAVTD+1237
@NM00114 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00113
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00112 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00111 EQU   IEDQAVTD+1140
@NM00110 EQU   IEDQAVTD+1137
@NM00109 EQU   AVTBIT4
@NM00108 EQU   AVTBIT4
@NM00107 EQU   AVTBIT4
@NM00106 EQU   AVTBIT4
@NM00105 EQU   AVTBIT4
@NM00104 EQU   AVTBIT4
@NM00103 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00102 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00101 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00100 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00099 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00098 EQU   AVTBIT2
@NM00097 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00096 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00095 EQU   IEDQAVTD+950
@NM00094 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00093 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00092 EQU   AVTCWFL2
@NM00091 EQU   AVTCWFL2
@NM00090 EQU   AVTCWFL2
@NM00089 EQU   AVTCWFL2
@NM00088 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00087 EQU   AVTCWFL1
@NM00086 EQU   AVTCWFL1
@NM00085 EQU   AVTCWFL1
@NM00084 EQU   AVTCWFL1
@NM00083 EQU   AVTCWFL1
@NM00082 EQU   AVTCWFL1
@NM00081 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00080 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00079 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00078 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00077 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00076 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00075 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00074 EQU   AVTOPCQB+8
@NM00073 EQU   AVTOPCEC+1
@NM00072 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00071 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00070 EQU   AVTCKPEC+1
@NM00069 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00068 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00067 EQU   IEDQAVTD+784
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00066 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00065 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00064 EQU   AVTSYSER
@NM00063 EQU   AVTSYSER
@NM00062 EQU   AVTSYSER
@NM00061 EQU   AVTSYSER
@NM00060 EQU   AVTSYSER
@NM00059 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00058 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00057 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00056 EQU   AVTCKBYT
@NM00055 EQU   AVTCKBYT
@NM00054 EQU   AVTCKBYT
@NM00053 EQU   AVTCKBYT
@NM00052 EQU   AVTCKBYT
@NM00051 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00050 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00049 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00048 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00047 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00046 EQU   AVTSAVTP+1
@NM00045 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00044 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00043 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00042 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00041 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00040 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00039 EQU   AVTPKF
@NM00038 EQU   AVTPKF
@NM00037 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00036 EQU   AVTPKF
@NM00035 EQU   AVTPKF
@NM00034 EQU   AVTPKF
@NM00033 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00031+1
@NM00032 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00030 EQU   IEDQAVTD+384
AVTREADD EQU   IEDQAVTD+380
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00029 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
@NM00028 EQU   OCLDNME+4
@NM00027 EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
@NM00026 EQU   OCREQFLG
@NM00025 EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCCKPTWA EQU   OCCKDATA+4
@NM00022 EQU   OCRSTGTM+2
OCCKDAT2 EQU   OCRSTGTM+1
OCCKDAT1 EQU   OCRSTGTM
OCPTRSAV EQU   OCMODNME+4
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
OCNCP    EQU   OCBACKUP+4
OCBUFGOT EQU   OCBACKUP+2
OCBUFNED EQU   OCBACKUP
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
@NM00021 EQU   OCRSID+1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
@NM00020 EQU   OCALSTAT
OCRENTRD EQU   OCALSTAT
OCWTGB   EQU   OCTIOT
@NM00019 EQU   @NM00018+2
OCCONID  EQU   OCDEST
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00017 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00016 EQU   OCRUDEST+1
@NM00015 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
OPCBOTTM EQU   IEDQOPCD+1184
@NM00014 EQU   IEDQOPCD+1100
@NM00013 EQU   IEDQOPCD+948
@NM00012 EQU   IEDQOPCD+940
@NM00011 EQU   IEDQOPCD+380
@NM00010 EQU   OPCPWCOB+9
@NM00009 EQU   OPCPWCOB+8
@NM00008 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00007 EQU   OPCSPEC
@NM00006 EQU   OPCSPEC
@NM00005 EQU   OPCSPEC
@NM00004 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00003 EQU   OPCLDNME+5
OPCMODID EQU   OPCLDNME+3
@NM00002 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
@NM00001 EQU   IEDQOPCD+32
OPCIPLAD EQU   IEDQOPCD+28
OPCOPTLK EQU   IEDQOPCD+20
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00270 EQU   @RC00269
@RF00341 EQU   @RC00322
@RC00344 EQU   @RC00322
@RT00372 EQU   ERREXIT
@RC00360 EQU   @RC00267
@RT00388 EQU   EXIT1
@RF00380 EQU   ERREXIT
@RC00410 EQU   @RC00402
@RC00403 EQU   @RC00402
@RF00429 EQU   ERREXIT
@RT00455 EQU   EXIT1
@RT00459 EQU   ERREXIT
@RT00475 EQU   EXIT1
@RT00484 EQU   EXIT1
@RF00477 EQU   EXIT1
@RF00516 EQU   @RC00510
@RF00289 EQU   @RC00270
@RF00314 EQU   @RC00270
@RC00365 EQU   @RC00360
@RC00363 EQU   @RC00360
@RC00404 EQU   @RC00403
@RC00411 EQU   @RC00410
@RF00414 EQU   @RC00411
@ENDDATA EQU   *
         END   IGCMV10D,(C'PLS1902',0701,77120)
