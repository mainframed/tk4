         TITLE 'IGCI010D - ICHNG ROUTINE'                      @Y17XAR5
IGCI010D CSECT
         SPACE 3
* CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A000000-999999                                                  S99240
*A458000                                                        SA61043
*D324000-326000                                                 SA61043
*D702000-716000,726000,698000                                   SA60006
*A256000                                                         Y05330
*C298000-308000,354000,610000,732000-748000                      Y05330
*D178000,182000,250000-252000,356000-358000,566000,688000,698000,Y05330
*D702000-716000,722000,726000,750000-752000,794000-800000,808000 Y05330
*A224000,272000,348000,426000,426720,428000,459000,754000      @SA71947
*A774000,792000,806000                                         @SA71947
*D194000,288000,370000-398000,434000,438000-440000,466000      @SA71947
*D472000-474000,686000                                         @SA71947
*C294000,344000,349200,364000,426960,462000,696000,828000      @SA71947
*A222000,732000,828000                                         @Y17XARP
*D732000-750000                                                @Y17XARP
*C038000                                                       @Y17XART
*A038000                                                       @Y17XART
*D700000,754000                                                @Y17XART
*C002000,010400,010800,011450,014000,292000,322000,346000,     @Y17XAR5
*C349200,426660,426726,426732,427200,                          @Y17XAR5
*C484000,526000,674000,794100-798500                           @Y17XAR5
*A005227,012000,058000,170000,184000,204000,272070,320000,     @Y17XAR5
*A428400,428600,429100,516000,774000,792000,792700,793300,     @Y17XAR5
*A794000,821000,                                               @Y17XAR5
*D010000,010200,349260-349860,426738-427020,428700-429000,     @Y17XAR5
*D429200-459600,484000,764000,792800-793200,793900,            @Y17XAR5
*D829600-830000                                                @Y17XAR5
*C470000                                                       @OY14092
*C320900                                                       @OX20404
*C470000                                                       @OZ30514
*A266000,459200                                                @OZ29091
         EJECT                                                 @Y17XAR5
***********************************************************************
*                                                                     *
*  MODULE NAME = IGCI010D (TCAM, OPERATOR CONTROL)             @Y17XAR5
*                                                                     *
*  DESCRIPTIVE NAME = ICHNG ROUTINE                            @Y17XAR5
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  VERSION 10.0                                       @Y17XAR5
*                                                                     *
*                                                                     *
* FUNCTION:  IF THE LINE IS ATTACHED TO A 270X OR IS A 3705    @Y17XAR5
*    LINE, THEN THE PURPOSE OF THIS MODULE IS TO DEACTIVATE AN @Y17XAR5
*    INVITATION LIST ENTRY AS REQUESTED BY A PROCESSING PROGRAM.  THE *
*    ROUTINE CHECKS TO SEE IF THE LINE IS STOPPED.  IF SO, THE LINE   *
*    MUST BE STOPPED BEFORE THE FUNCTION CAN BE PERFORMED.  TO STOP   *
*    THE LINE, CONTROL IS TRANSFERRED TO STOPLINE.  THE X'40' BIT IS  *
*    SET IN OCSWITCH TO INDICATE THAT THE LINE IS TO BE RESTARTED.    *
*    UPON ENTERING THIS MODULE AGAIN, THE FUNCTION SHOULD BE PERFORMED*
*    SINCE THE LINE HAS BEEN STOPPED.  THE FIRST WORD OF OCMODNME IS  *
*    USED TO DETERMINE THE TYPE OF ICHANGE TO BE DONE.  THIS MODULE   *
*    WILL ONLY DEACTIVATE AN ENTRY IN THE INVITATION LIST.  IF ALL    *
*    ENTRIES ARE ALREADY ACTIVE, OCSWITCH IS CHECKED TO SEE IF THE    *
*    LINE WILL NEED RESTARTING.  IF SO, THE LCB IS DEQUEUED AND THE   *
*    LINE IS POSTED TO ITSELF AND POSTED TO THE ASYNCRONOUS    @Y17XART
*    READY Q                                                   @Y17XART
*    TO START THE LINE.  OTHERWISE, A COUNT OF THE NUMBER OF ACTIVE   *
*    ENTRIES IS SET UP.  EACH ACTIVE ENTRY IS SWAPPED FROM THE ACTIVE *
*    TO THE INACTIVE SIDE OF THE LIST AND THE ACTIVE COUNT IS         *
*    DECREMENTED.  WHEN ALL ENTRIES ARE INACTIVE, THE NUMBER OF ACTIVE*
*    ENTRIES IS SET TO ZERO, AND OCSWITCH IS CHECKED TO SEE IF THE    *
*    LINE NEEDS TO BE RESTARTED.  IF SO, THE LCB IS DEQUEUED AND THE  *
*    LINE IS STARTED AS ABOVE.  THEN A RETURN CODE IS SET UP FOR THE  *
*    OUTPUT WRITER TO POST THE APPLICATION PROGRAM.  IF THE ICHANGE   *
*    FUNCTION IS EITHER AN ACTIVATE OR MOVE LIST, THEN CONTROL IS     *
*    TRANSFERRED TO THE OTHER ICHANGE MODULE, IGCI110D.               *
*    FOR LINES ATTACHED TO A 3705, THIS MODULE PROCESSES       @Y17XAR5
*    BOTH ACTIVATE AND DEACTIVATE REQUESTS. 3705 ICHNG MOVE    @Y17XAR5
*    COMMANDS ARE SENT TO IGCI210D.                            @Y17XAR5
*                                                                     *
* ENTRY POINTS --                                                     *
*    IGCI010D TO PERFORM THE ICHNG DEACTIVATE FUNCTION FROM AN MPP.   *
*                                                                     *
* INPUT --                                                            *
*    REGISTER 1 - ADDRESS OF OPERATOR CONTROL AVT.  RELEVANT FIELDS   *
*    ARE OPCDOUBL.  THIS FIELD CONTAINS THE DDNAME OR THE UCB ADDRESS.*
*    ANOTHER FIELD IS OPCCOPCE WHICH IS THE ADDRESS OF THE CURRENT    *
*    OPERATOR CONTROL ELEMENT.  RELEVANT FIELDS ARE OCBACKUP.  THIS   *
*    FIELD CONTAINS EITHER A DDNAME OR A UCB ADDRESS.  ANOTHER        *
*    RELEVANT FIELD IS OCSWITCH.  IF THE X'40' BIT IS ON, THE LINE    *
*    SHOULD BE RESTARTED AFTER DEACTIVATING THE TERMINAL.  THE FIRST  *
*    WORD OF OCMODNME IS USED TO DETERMINE THE TYPE OF ICHANGE.       *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER 0 - RETURN CODE VALUES.                                 *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         NONE.                                                       *
*                                                                     *
* EXITS,NORMAL --                                                     *
*         ENTRIES WERE DEACTIVATED AS REQUESTED, X'00' RETURN CODE    *
*         SET.                                                        *
*         ENTRIES HAVE ALREADY BEEN DEACTIVATED, X'00' RETURN CODE    *
*         SET.                                                        *
*                                                                     *
* EXITS,ERROR --                                                      *
*         ENTRIES COULD NOT BE DEACTIVATED, X'04' RETURN CODE SET.    *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    OPERATOR CONTROL AVT, OPERATOR CONTROL ELEMENT, TERMNAME TABLE,  *
*    DCB, TERMINAL ENTRY, QCB, LCB, DEB.                              *
*                                                                     *
* ATTRIBUTES --                                                       *
*    SERIALLY REUSABLE, REFRESHABLE, ENABLED, TRANSIENT,              *
*    SUPERVISOR MODE.                                                 *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS            *
*    EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING         *
*    HAS BEEN ARRANGED SO THAT REDEFINITION OF CHARACTER              *
*    CONSTANTS, BY REASSEMBLY WILL RESULT IN A CORRECT MODULE         *
*    FOR THE NEW DEFINITION.                                          *
*                                                                     *
* NOTES --                                                            *
*    COMMUNICATIONS BETWEEN THE VARIOUS TRANSIENT MODULES IS          *
*    PRIMARILY THROUGH THE OPERATOR CONTROL AVT.                      *
*                                                                     *
*    THIS IS A MODULE RE-WRITE OF IEDQC1 AS OF OS/TCAM LEVEL II       *
***********************************************************************
         EJECT
         SPACE
*                                 E Q U A T E S
         SPACE
RZERO    EQU   0                        PARAMETER REGISTER
RPARM    EQU   1                        PARAMETER REGISTER
ROPCNEW  EQU   1                        PTR TO START/STOP OPCE @Y17XAR5
ROPCAVT  EQU   2                        POINTER TO OP CONTROL AVT
ROPCE    EQU   3                        POINTER TO CURRENT OPCE
RAVT     EQU   4                        TCAM AVT ADDRESS
RRLN     EQU   5                        RELATIVE LINE NUMBER
RLCB     EQU   5                        LCB ADDRESS
RLEVEL   EQU   5                        PTR TO RESOURCE TTE    @Y17XAR5
RENTRY   EQU   6                        CURRENT ENTRY POINTER
RSCB     EQU   6                        SCB BASE
RLCB1    EQU   6                        LCB ADDRESS
RTERM    EQU   6                        TERM ENTRY BASE
         SPACE 1
RUCB     EQU   6                        UCB BASE
RDCB     EQU   7                        DCB BASE
ROFF     EQU   7                        OFFSET TO DDNAME, ADDR, RLN
RWORK    EQU   8                        WORK REGISTER
RSWAP    EQU   8                        TO SWAP LIST ENTRIES
RNEXT    EQU   8                        PTR TO RESOURCE TTE    @Y17XAR5
RWORK1   EQU   9                        WORK REGISTER
RPREFIX  EQU   9                        BUFFER ADDRESS
RLENGTH  EQU   10                       LENGTH OF ENTRY
RDEB     EQU   10                       DEB BASE
RQCB     EQU   11                       QCB ADDRESS
RLIST    EQU   11                       LIST ADDRESS
RBASE    EQU   12                       BASE FOR MODULE
RSAVE    EQU   13                       SAVE AREA ADDRESS
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
CURR     EQU   14                       REGISTER 14            @Y17XARP
RBRNCH   EQU   15                       SUBROUTINE BRANCH ENTRY POINT
RTNT     EQU   15                                              @SA71947
         SPACE 2
EIGHT    EQU   8                        LENGTH OF EIGHT
NAMELEN  EQU   2                        NO. OF NAME CHANGE CHARACTERS
VARINAME EQU   3                        OFFSET TO CHANGE LOAD NAME
FOUR     EQU   4                        OFFSET                   S22024
ONE      EQU   1                        OFFSET                   S22024
THREE    EQU   3                        OFFSET                   S22024
TWO      EQU   2                        OFFSET                   S22024
ANYMOVED EQU   X'01'                    INDICATES ENTRIES MOVED
EOT      EQU   X'80'                    EOT FLAG
ENDACT   EQU   X'FE'                    END OF ACTIVE ENTRIES
SEVEN    EQU   7                        OFFSET                   S22024
ZERO     EQU   0                        OFFSET                   S22024
NINE     EQU   9                        OFFSET                   S22024
AD       EQU   7                        MASK FOR ICM OF ADDRESS  Y05330
RECBLINK EQU   5                        LINK FIELD OFFSET        Y05330
X40      EQU   X'40'                    INDICATES LINE NEEDS RESTARTED
TR       EQU   3                        DISPLACEMENT
ON       EQU   1                        DISPLACEMENT
UCBNM    EQU   13                       DISPLACEMENT             S22024
LCBPRIOR EQU   X'E0'                    PRIORITY FOR LCB
PRISTOP  EQU   X'E8'                    LINE STOPPED PRTY      @OZ29091
NOTCA    EQU   2                        ENTRY NOT FROM CA
SIX      EQU   6                        DISPLACEMENT
SAVEOFF  EQU   0                        DISPLACEMENT OF SAVE AREA
RNDSORG  EQU   X'04'                   DSORG FOR 3705 DCB      @SA71947
BADCMND  EQU   18                       BAD COMMAND RETURN CODE@SA71947
NOTOPEN  EQU   1                        NOT OPEN RETURN CODE   @SA71947
GRPNAME  EQU   45                       OFFSET TO DCB ADDR     @SA71947
OFF18    EQU   X'18'                    OFFSET TO ICHNG ACT COD@SA71947
TRMSNGL  EQU   X'E0'                    MASK TO CHECK TERM ENTR@SA71947
POST     EQU   X'0C'                    POST REQUEST           @SA71947
DONESW   EQU   X'80'                    SWITCH FOR TTE SEARCH  @Y17XAR5
LOOPSW   EQU   X'40'                    SWITCH FOR TTE SEARCH  @Y17XAR5
NOSNA    EQU   36                       ICHNG MOVE INVALID FOR @Y17XAR5
NCPERRCD EQU   28                       NCP ERROR              @Y17XARL
HEXFF    EQU   X'FF'                    TO TURN OFF BITS       @Y17XAR5
*                                       SNA LINES              @Y17XAR5
CVTPTR   EQU    16                      CVT POINTER            @Y17XART
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING DEBNMSUB,RDEB            DEB ADDRESSABILITY
         USING IHADCB,RDCB              DCB ADDRESSABILITY
         USING IEDQQCB,RQCB             QCB ADDRESSABILITY
         SPACE 1
         USING IEDQPRF,RPREFIX          BUFFER ADDRESSABILITY
         USING IEDNTRM,RTERM            TERM ENTRY ADDRESSABILITY
         SPACE 1
         SPACE
         USING *,RBRNCH                                          Y05330
         BAL   RBASE,SKIPID             BYPASS ID / SET BASE     Y05330
         DROP  RBRNCH                   TEMPORARY USING          Y05330
         USING *,RBASE                                           Y05330
         USING IEDQTNTD,RTNT            TNT ADDRESSABILITY     @SA71947
IGCI010D IEDHJN ,                                                Y05330
SKIPID   DS    0H                                                Y05330
*              INITIAL SETUP                                          *
         LR    ROPCAVT,RPARM            SET UP AVT ADDRESSING
         L     RAVT,OPCAVTPT            TCAM AVT ADDRESSING
         L     ROPCE,OPCCOPCE           GET CURRENT ELEMENT POINTER
         LA    RSAVE,OPCSAVE                                   @Y17XAR5
         CLI   OCSWITCH,OCSTPLNC        RET FROM 3705 STOPLINE?@Y17XAR5
         BE    SETMODNM                 YES                    @Y17XAR5
         CLI   OCSWITCH,OCVARON         RET FROM 3705 STARTLINE@Y17XAR5
         BE    RETSTART                 YES                    @Y17XAR5
         CLI   OCSWITCH,AVTEZERO        INITIAL ENTRY?         @Y17XAR5
         BE    INITENT                  YES                    @Y17XAR5
* THIS IS A RETURN FROM 270X STOPLINE                          @Y17XAR5
         L     RDCB,OCPTRSAV            GET DCB ADDRESS        @OX20404
         B     GETLCB                                          @Y17XAR5
INITENT  MVC   OPCDOUBL(EIGHT),OCBACKUP SET DDNAME
         SPACE
         SR    RPARM,RPARM
         IC    RPARM,OCRLN
         L     RBRNCH,OPCDCBLK          GET DCB LOOKUP ADDRESS
         BALR  RRET,RBRNCH              LOOK UP DCB AND UCB ADDRESS
         SPACE
         B     PROCESS                  GOOD RETURN
         SPACE
         B     CKRSTRT                  CHECK FOR RESTART      @SA71947
         EJECT                                                 @Y17XAR5
PROCESS  EQU   *
         TM    DCBDSORG+ONE-IHADCB(RPARM),RNDSORG 3705 DCB     @SA71947
         BO    ERROR18                  YES, ICHNG INVALID     @SA71947
         TM    DCBDSORG-IHADCB(RPARM),AVTE80 IS THIS AN LGB-3705 S22024
         BO    FREE                     YES,BRANCH             @Y17XAR5
         ST    RPARM,OCMODNME+FOUR      SET UP DCB ADDRESS     @SA71947
         LA    RWORK,OPCWAITL           GET FIRST ELEMENT OFF WAIT QUE
GETEND   EQU   *
         ICM   RWORK,AD,ONE(RWORK)      FIRST / NEXT ELEMENT     Y05330
         BZ    FREE                     NONE WAITING
         SPACE
         CLC   GRPNAME(THREE,ROPCE),GRPNAME(RWORK) SAME DCB    @SA71947
         BNE   GETEND                   NO
         SPACE
         SPACE
ENQUEUE  EQU   *
         TM    OCFLAG-IEDQOPCE(RWORK),OCATTACH IS THIS ATTACHED ELEM?
         BNO   ATTACH                   NO
         SPACE
         L     RWORK,FOUR(RWORK)        NO PICK UP NEXT ELEMENT
         B     ENQUEUE                  CHECK TO SEE IF ATTACHED
         SPACE
ATTACH   EQU   *
         ST    ROPCE,FOUR(RWORK)        QUEUE UP NEW ELEMENT
         OI    OCFLAG-IEDQOPCE(RWORK),OCATTACH UNIT IS ATTACHED
         MVC   OCWTG(NAMELEN),ICHNGMOD  SET UP FUNCTION MODULE NAME
         LA    RZERO,NOTCA              SET FOR 00
         MVC   OPCLDNME+VARINAME(NAMELEN),FIRSTLD
         XC    OCLINK+ONE(THREE),OCLINK+ONE CLEAR LINK FIELD   @SA71947
         B     XCTL                     GO TO SEE IF A CMND TO PROCESS
         EJECT                                                   S22024
GO3705   EQU   *                                                 S22024
         CLI   TRMTYPE,TRMSDLC          IS IT A SNA LINE?      @Y17XAR5
         BE    SNAERR                   YES                    @Y17XAR5
         LA    RZERO,NOTCA              SET FOR INITIAL ENTRY  @SA71947
         MVC   OPCLDNME+VARINAME(NAMELEN),ICHNG2 SET NAME - XCTL S22024
         B     XCTL1                    XCTL TO IGCI210D         S22024
         EJECT                                                 @Y17XAR5
FREE     EQU   *
         LR    RDCB,RPARM               DCB ADDRESS            @SA71947
         TM    DCBDSORG,AVTE80          IS THIS AN LGB         @SA71947
         BZ    GETLCB                   NO, BRANCH             @SA71947
         LR    RTERM,RZERO              GET TERM ENTRY ADDRESS @SA71947
         LA    RBRNCH,TRMPRFSZ          NEG PREFIX SIZE        @Y17XAR5
         SR    RTERM,RBRNCH             BACK UP TO NEG PREFIX  @Y17XAR5
         TM    OPCSPEC,OPCRSTRT         RESTART IN PROGRESS    @SA71947
         BO    IC3705                   YES, CHANGE ILIST      @SA71947
         CLI   TRMTYPE,TRMSDLC          IS IT A SNA LINE?      @Y17XAR5
         BE    IC3705                   YES                    @Y17XAR5
         ST    RTERM,OCMODNME           SAVE TERM ENTRY ADDRESS@SA71947
         LA    RPARM,ONE                RPARM = # UNITS NEEDED @Y17XAR5
         L     RBRNCH,OPCGETBF          ADDR OF BUFF REQ RTNE  @Y17XAR5
         BALR  RRET,RBRNCH              CALL ALLOCBUF          @Y17XAR5
* SET UP NEW OPCE FROM OLD - ROPCNEW ADDRESSES STOPLINE OPCE   @Y17XAR5
         MVC   OCTRMTBL-IEDQOPCE(2,ROPCNEW),OCTRMTBL           @Y17XAR5
         MVC   OCBACKUP-IEDQOPCE(8,ROPCNEW),OCBACKUP           @Y17XAR5
         ST    RDCB,OCPTRSAV-IEDQOPCE(,ROPCNEW) SAVE LGB ADDR  @Y17XARL
         MVC   OCOPTCDE-IEDQOPCE(1,ROPCNEW),OCOPTCDE           @Y17XAR5
         MVI   OCSWITCH-IEDQOPCE(ROPCNEW),OCSTPLNC INDICATE    @Y17XAR5
*                                       STOPLINE TYPE          @Y17XAR5
         MVC   OCWTG-IEDQOPCE(2,ROPCNEW),ICHNGMOD INDICATE     @Y17XAR5
*                                       RETURN TO I0           @Y17XAR5
         LA    ROPCE,AVTEZERO(,ROPCE)   CLEAR HIGH ORDER       @Y17XARR
         ST    ROPCE,OCCIB-IEDQOPCE(,ROPCNEW) SAVE OLD OPCE    @Y17XARL
*                                       ADDRESS                @Y17XAR5
         LR    ROPCE,ROPCNEW            STOPLINE OPCE IS       @Y17XAR5
         ST    ROPCE,OPCCOPCE           TEMPORARILY CURR OPCE  @Y17XAR5
         MVC   OPCMODID,STOP05          INDICATE EXIT TO V8    @Y17XAR5
         B     XCTL                                            @Y17XAR5
         EJECT                                                 @Y17XAR5
GETLCB   EQU   *                                               @SA71947
         SR    RRLN,RRLN
         IC    RRLN,OCRLN               SET UP RELATIVE LINE NUMBER
         L     RDEB,DCBDEBAD            DEB ADDRESS
         SPACE
         L     RLCB1,DCBIOBAD           IOB ADDRESS
         SR    RWORK1,RWORK1            CLEAR REG
         IC    RWORK1,DCBEIOBX          GET IOB LENGTH
         LR    RWORK,RRLN               GET RELATIVE LINE NUMBER
         MR    RWORK,RWORK              GET IOB INDEX
         LA    RLCB1,AVTEZERO(RLCB1,RWORK1)  GET CORRECT IOB ADDRESS
         LA    RWORK,LCBFLAG1-IEDQLCB   GET LENGTH OF IOB
         SR    RLCB1,RWORK              START OF LCB
         TM    OPCSPEC,OPCRSTRT         RESTART IN PROGRESS     SA61043
         BO    INVLIST                  YES, BRANCH             SA61043
         CLI   LCBPRI-IEDQLCB(RLCB1),PRISTOP    LINE STOPPED   @OZ29091
         BE    STOPLINE                 YES                    @OZ29091
         CLI   LCBSTAT1-IEDQLCB(RLCB1),AVTEZERO ALREADY STOPPED
         BNE   STOPLINE                 NO, STOP THE LINE      @SA71947
         TM    LCBSTAT2-IEDQLCB(RLCB1),LCBMSGNN MSGEN IN PROGRE@SA71947
         BZ    INVLIST                  NO, PROCESS ILIST      @SA71947
STOPLINE EQU   *                                               @SA71947
         SPACE
         SPACE 1
         MVC   OPCLDNME+VARINAME(NAMELEN),STOPLN
         OI    OCSWITCH,X40+OCX10       SET INTERNAL STOPLINE  @OZ30514
         MVC   OCWTG(TWO),ICHNGMOD      SET RETURN MODULE NAME
         LA    RZERO,ONE                SET FOR INIT ENTRY TO STOPLINE
         B     XCTL                     GO TO STOPLINE
         EJECT                                                 @Y17XAR5
*              DETERMINE WHETHER TO DEACTIVATE,ACTIVATE,OR MOVE       *
INVLIST  EQU   *
         CLC   OCMODNME(THREE),AVTFZERO
         BNE   GOTOICHI                 MOVE LIST RESTART
         SPACE
         CLI   OCMODNME+THREE,ZERO      ACTIVATE OR DEACTIVATE
         BE    GOTOICHI                 ACTIVATE LIST RESTART
         SPACE
         LA    RLIST,DCBINVLI-IHADCB(RDCB) GET INV LIST
         SR    RWORK,RWORK              CLEAR REGISTER
         IC    RWORK,LCBUCBX-IEDQLCB(RLCB1)  GET IOB INDEX
         SLL   RWORK,TWO                MULTIPLY BY FOUR
         AR    RLIST,RWORK              GET TO PROPER LIST ADDRESS
         L     RLIST,AVTEZERO(RLIST)    GET LIST
         LR    RLCB,RLCB1               SAVE ADDRESS OF LCB FOR LATER
         B     DEACTIV                  DEACTIVATE THE TERMINAL
         SPACE 3                                               @Y17XAR5
GOTOICHI EQU   *
         MVC   OPCLDNME+VARINAME(NAMELEN),ICHNG1   SET TO GO TO ICHANGE
         STM   RLCB1,RDCB,SAVEOFF(RSAVE) SAVE REGS FOR I1
         B     XCTL                     LINK TO NEXT MODULE
         EJECT                                                 @Y17XAR5
DEACTIV  EQU   *
         SR    ROFF,ROFF
         STH   ROFF,OCMODNME+SIX        SET UP FIRST ENTRY
         SR    RLENGTH,RLENGTH          INIT REG
         SR    RWORK1,RWORK1            INIT REG
         IC    RLENGTH,TWO(RLIST)       LENGTH OF ENTRY
         LR    RWORK1,RLENGTH
         BCTR  RWORK1,AVTEZERO          DECREMENT FOR EXECUTE
         SPACE
GTENTRY  EQU   *
         LH    ROFF,OCMODNME+SIX        GET COUNT
         CLI   ONE(RLIST),AVTEZERO      ALL ENTRIES INACTIVE
         BE    EXIT                     YES
         SPACE
         LA    ROFF,ONE(ROFF)           INCREMENT BY ONE
         STH   ROFF,OCMODNME+SIX        STORE COUNT
         CLC   OCMODNME+SEVEN(ONE),AVTEZERO(RLIST) OUT OF ENTRIES
         BH    EXIT                     YES
         SPACE
         LA    RENTRY,SEVEN(RLIST)      POINTER TO FIRST ENTRY INDEX
         SR    RRET,RRET                CLEAR
         IC    RRET,ONE(RLIST)          NUMBER OF ACTIVE ENTRIES
         OI    OPCFLAG1,ANYMOVED        SET 'MOVED' INDICATOR
CKNEXT   EQU   *
         AR    RENTRY,RLENGTH           GO TO NEXT ENTRY'S INDEX
         CLC   AVTEZERO(ONE,RENTRY),OCMODNME+SEVEN IS THIS ACTIVE ENTRY
         BE    DACTIV                   YES VALID ENTRY
         SPACE
         BCT   RRET,CKNEXT              IF NOT END OF ACTIVE,GO BACK
         B     GTENTRY                  FINISHED WITH THIS GET NEXT
         SPACE
DACTIV   EQU   *
         LR    RSWAP,RENTRY
         SR    RENTRY,RLENGTH           ENTRY LENGTH-1
         BCT   RRET,SWAPLOOP            SWAP ENTRIES
         B     LOOPOUT                  CHECK FOR EOT
         SPACE
SWAPLOOP EQU   *
         EX    RWORK1,SWAP1             SWAP TWO
         EX    RWORK1,SWAP2             SUCCESSIVE
         EX    RWORK1,SWAP1             ENTRIES
         AR    RENTRY,RLENGTH           GO TO NEXT ENTRY
         AR    RSWAP,RLENGTH            GET TO THIS ENTRY
         BCT   RRET,SWAPLOOP            NOT DONE RETURN
         SPACE
LOOPOUT  EQU   *
         IC    RRET,TWO(RLIST)          GET ENTRY LENGTH
         LA    RBRNCH,ONE
         TM    THREE(RLIST),EOT         IS THIS EOT-FE (BSC)
         BO    SFTEOT                   YES SPECIAL TREATMENT
         SPACE
SFTLOOP  EQU   *
         MVC   ONE(ONE,RSWAP),AVTEZERO(RSWAP) MOVE ONE CHARACTER
         SR    RSWAP,RBRNCH             AT A TIME,STARTING
         BCT   RRET,SFTLOOP             WITH THE LAST CHARACTER
         SPACE
         MVI   ONE(RSWAP),ENDACT
RSETACT  EQU   *
         IC    RRET,ONE(RLIST)          COUNT OF ACTIVE ENTRIES
         SR    RRET,RBRNCH                   ONE LESS
         STC   RRET,ONE(RLIST)          RESET
         B     GTENTRY                  TRY NEXT
         SPACE
SFTEOT   EQU   *
         MVC   OCPARM(TWO),ONE(RSWAP)   SAVE EOT-FE
SFTEOT1  EQU   *
         MVC   TWO(ONE,RSWAP),AVTEZERO(RSWAP) MOVE ONE CHARACTER
         SR    RSWAP,RBRNCH             AT A TIME
         BCT   RRET,SFTEOT1             STARTING WITH LAST CHARACTER
         SPACE
         MVC   ONE(TWO,RSWAP),OCPARM    RESET EOT-FE
         B     RSETACT                  SET ACTIVE COUNT
         EJECT                                                 @Y17XAR5
*              DETERMINE ALL EXIT SITUATIONS                          *
EXIT     EQU   *
         TM    OPCSPEC,OPCRSTRT         RESTART IN PROGRESS
         BO    CKPOINT1                 YES GO TO CHECKPOINT
         SPACE
         LA    RRET,EIGHT(RLIST)        POINTER TO BEGINNING OF LIST
         ST    RRET,LCBINVPT-IEDQLCB-ONE(RLCB) FOR RECEIVE SCHEDULER
         TM    OCSWITCH,X40             SHOULD LINE BE RESTARTED
         BZ    CKSTAIN                  NO, GO CHECKPOINT      @SA71947
         SPACE
*              START LINE BACK                                        *
         MVI   LCBPRI-IEDQLCB(RLCB),LCBPRIOR SET PRIORITY FOR LCB
         OI    LCBSTAT1-IEDQLCB(RLCB),LCBRECVN   SET STATUS FOR START
         ST    RLCB,AVTEZERO(RLCB)      MAKE LCB POINT TO ITSELF
         L     RWORK,CVTPTR             GET CVT ADDR           @Y17XARP
         L     RWORK,AVTCVTPT(RWORK)    GET ADDR OF TCX        @Y17XARP
         USING IEDQTCX,RWORK            ESTABLISH ADDR         @Y17XARP
         L     CURR,TCXREADY            GET ADDR OF CURRENT    @Y17XARP
*                                       ENTRY ON ASYN READY Q  @Y17XARP
NEWCURR  STCM  CURR,SEVEN,LCBLINK-IEDQLCB(RLCB)                @Y17XARP
*                                       LINK NEW ELEM TO CURR  @Y17XARP
         CS    CURR,RLCB,TCXREADY       WAS CURR ELEM UPDATED  @Y17XARP
*                                       ASYNCHRONOUSLY         @Y17XARP
         BNE   NEWCURR                  YES,LINK NEW ELEM TO   @Y17XARP
*                                       CURR ELEM. NO, ASYN    @Y17XARP
*                                       READY QUEUE NOW HAS    @Y17XARP
*                                       NEW ELEM               @Y17XARP
CKSTAIN  EQU   *                                               @SA71947
         SR    RZERO,RZERO              GOOD RETURN CODE       @SA71947
         TM    AVTBIT3,AVTSTAIN         CHECKPOINT THIS
         BZ    OUT                      DONT CHECKPOINT
         SPACE
*              CHECKPOINT THE ELEMENT                                 *
CKPOINT1 EQU   *
         MVC   OPCLDNME+VARINAME(NAMELEN),CHECKPT
         STH   RZERO,OCPARM             SET FOR CHECKPOINT
         MVC   OCWTG(NAMELEN),WRITE     WRITE MODULE SET
         B     XCTL                         GO TO SPECIFIED MODULE
         EJECT                                                 @Y17XARL
NCPERR   EQU   *                                               @Y17XARL
         LR    ROPCNEW,ROPCE            SAVE START/STOP OPCE   @Y17XARL
*                                       ADDRESS                @Y17XARL
         L     ROPCE,OCCIB              RESTORE ORIGINAL OPCE  @Y17XARL
*                                       ADDRESS                @Y17XARL
         ST    ROPCE,OPCCOPCE           RESET CURRENT OPCE PTR @Y17XARL
         ST    ROPCNEW,OCUNIT           CHAIN START/STOP OPCE  @Y17XARL
         LA    RZERO,NCPERRCD           SET NCP ERROR CODE     @Y17XARL
         B     OUT                      EXIT TO IGC0710D       @Y17XARL
         SPACE 1                                               @Y17XARL
SNAERR   EQU   *                                               @Y17XAR5
         LA    RZERO,NOSNA                                     @Y17XAR5
         B     OUT                                             @Y17XAR5
ERROR18  EQU   *                                               @SA71947
         LA    RZERO,BADCMND            SET BAD RETURN         @SA71947
         B     OUT                      AND RETURN             @SA71947
ERROPEN  LA    RZERO,NOTOPEN            SET NOT OPEN           @SA71947
         B     OUT                      AND RETURN             @SA71947
         SPACE
OUT1     EQU   *
         SR    RZERO,RZERO              ZERO RETURN CODE
OUT      EQU   *
         MVC   OPCLDNME+VARINAME(NAMELEN),WRITE  SET MODULE NAME
XCTL     EQU   *
         NI    OPCFLAG1,AVTEZERO        CLEAR FLAGS
XCTL1    EQU   *                                                 S22024
         LR    RPARM,ROPCAVT            PASS AVT ADDRESS
         XCTL  SF=(E,OPCXCTL)           CALL NEXT MODULE
         EJECT                                                 @Y17XAR5
CKRSTRT  EQU   *                                               @SA71947
         LTR   RDCB,RPARM               GET DCB ADDRESS        @SA71947
         BZ    OUT                      BRANCH IF DCB NOT OPEN @SA71947
         TM    DCBDSORG,AVTE80          IS THIS AN LGB         @SA71947
         BZ    OUT                      NO, RETURN             @SA71947
         TM    OPCSPEC,OPCRSTRT         RESTART IN PROGRESS    @SA71947
         BZ    OUT                      NO, DCB NOT OPEN       @SA71947
         LH    RPARM,OCTRMTBL           OFFSET IN TNT TO LINE  @Y17XAR5
*                                       NAME                   @Y17XAR5
         L     RBRNCH,AVTRNMPT                                 @Y17XAR5
         BALR  RRET,RBRNCH              CALL IEDQTNT           @Y17XAR5
         LR    RTERM,RPARM              TERMINAL ADDRESS       @Y17XAR5
         LA    RBRNCH,TRMPRFSZ          BACK UP TO NEG PREFIX  @Y17XAR5
         SR    RTERM,RBRNCH                                    @Y17XAR5
         CLC   OCMODNME(THREE),AVTFZERO ICHNG MOVE             @Y17XARL
         BE    GOTQCB                   NO, BRANCH             @Y17XARL
         MVC   OPCMODID,MODI3           SET ID FOR ICHNG MOVE  @Y17XARL
*                                       RESTART MODULE         @Y17XARL
         B     XCTL                     EXIT TO RESTART MOD    @Y17XARL
         EJECT                                                 @Y17XAR5
SETMODNM EQU   *                                               @SA71947
* ROPCE HAS ADDRESS OF STOPLINE OPCE                           @Y17XAR5
         CLC   OCPARM,CON25             LINE ALREADY STOPPED?  @Y17XAR5
         BE    STOPPED                  YES                    @Y17XAR5
         CLC   OCPARM,CON26             WAS LINE STOPPED       @Y17XARL
         BNE   NCPERR                   NO, BRANCH             @Y17XARL
         MVI   OCSWITCH,OCVARON         STARTLINE NEEDED       @Y17XAR5
*                                       AFTER ICHNG            @Y17XAR5
         B     ORIGOPCE                                        @Y17XAR5
STOPPED  MVI   OCSWITCH,AVTEZERO        STARTLINE NOT NEEDED   @Y17XAR5
*                                       AFTER ICHNG            @Y17XAR5
ORIGOPCE EQU   *                                               @Y17XAR5
* PUT STOPLINE OPCE BACK AT THE TOP OF THE WAIT CHAIN          @Y17XAR5
         MVC   OCLINK,OPCWAITV          LINK STOPLINE OPCE TO  @Y17XAR5
*                                       NEXT OPCE              @Y17XAR5
         ST    ROPCE,OPCWAITV           STOPLINE OPCE IS FIRST @Y17XAR5
* NOW SET ROPCE AND OPCCOPCE TO ORIGINAL OPCE                  @Y17XAR5
         L     ROPCE,OCCIB              RESTORE ADDR OF ORIG   @Y17XARL
         ST    ROPCE,OPCCOPCE           CURR OPCE IS NOW ORIG  @Y17XARL
         L     RTERM,OCMODNME           RESTORE LINE TTE ADDR  @Y17XAR5
         L     RPARM,OCCIB              GET CIB ADDRESS        @SA71947
         MVC   OCMODNME(FOUR),OFF18(RPARM) RESET ICHNG ACT CODE@SA71947
IC3705   EQU   *                                               @SA71947
         CLC   OCMODNME(THREE),AVTFZERO MOVE LIST ICHNG        @SA71947
         BNE   GO3705                   YES,  GO TO NEXT MODULE@SA71947
GOTQCB   EQU   *                                               @SA71947
* RTERM HAS LINES TTE ADDRESS                                  @Y17XAR5
         SR    RBRNCH,RBRNCH            ZERO A WORK REG        @Y17XAR5
         CH    RBRNCH,TRMSUBST          LINES SUBST 0?         @Y17XAR5
         BE    CKSTART                  YES                    @Y17XAR5
* THE 2ND AND 3RD WORDS OF OPCWRKSP ARE USED AS TEMPORARY      @Y17XAR5
* SAVE AREAS FOR REGS RRLN AND RWORK                           @Y17XAR5
         ST    RRLN,OPCWRKSP+4          STORE REGS FOR REUSE   @Y17XAR5
         ST    RWORK,OPCWRKSP+8         AS RLEVEL AND RNEXT    @Y17XAR5
* THE FIRST BYTE OF OPCWRKSP IS USED FOR SWITCHES              @Y17XAR5
         NI    OPCWRKSP,HEXFF-DONESW    TURN DONESW OFF        @Y17XAR5
         LR    RNEXT,RTERM              LINE TTE ADDR          @Y17XARL
NXTTTE   NI    OPCWRKSP,HEXFF-LOOPSW    TURN LOOPSW OFF        @Y17XAR5
         DROP  RTERM                                           @Y17XAR5
         USING IEDNTRM,RNEXT                                   @Y17XAR5
         SR    RBRNCH,RBRNCH            ZERO A WORK REG        @Y17XAR5
         CH    RBRNCH,TRMSUBST          IS NEXT'S SUBST 0?     @Y17XAR5
         BE    HIER                     YES                    @Y17XAR5
         LR    RLEVEL,RNEXT             NO- LEVEL = NEXT       @Y17XAR5
         LH    RPARM,TRMSUBST           GET TNT OFFSET OF NEXT @Y17XARL
*                                       LOWER RESOURCE         @Y17XARL
         OI    OPCWRKSP,LOOPSW          TURN ON LOOPSW         @Y17XAR5
         B     GETNEXT                  GET NEXT RESOURCE      @Y17XARL
         EJECT                                                 @Y17XARL
HIER     CLI   TRMTYPE,TRMLUNT          IS NEXT AN LU?         @Y17XAR5
         BE    PROCLU                   YES                    @Y17XAR5
         CLI   TRMTYPE,TRMPSNA          IS NEXT PRE-SNA?       @Y17XAR5
         BNE   GETCOHRT                 NO                     @Y17XAR5
         TM    OPCSPEC,OPCRSTRT         RESTART?               @YM08178
         BO    SKIPTEST                 DON'T TEST INPUT CAP.  @YM08178
         TM    TRMBYTE0,TRMINPUT        CAPABLE OF INPUT?      @Y17XAR5
         BZ    GETCOHRT                 NO                     @Y17XAR5
SKIPTEST EQU   *                                               @YM08178
         NI    TRMBYTE2,HEXFF-TRMRSACT  TURN OFF ACTIVE FLAG   @Y17XAR5
         CLI   OCMODNME+3,ZERO          ACTIVE ICHNG?          @Y17XAR5
         BNE   GETCOHRT                 NO                     @Y17XAR5
         OI    TRMBYTE2,TRMRSACT        TURN ON ACTIVE FLAG    @Y17XAR5
         B     GETCOHRT                                        @Y17XAR5
PROCLU   NI    TRMLU,HEXFF-TRMLULOG     PREVENT LOGON TO TCAM  @Y17XAR5
         CLI   OCMODNME+3,ZERO          ACTIVE ICHNG?          @Y17XAR5
         BNE   GETCOHRT                 NO                     @Y17XAR5
         OI    TRMLU,TRMLULOG           CAN LOGON TO TCAM      @Y17XAR5
GETCOHRT LH    RPARM,TRMCOHRT           TRMCOHRT OF NEXT       @Y17XAR5
         SPACE 2                                               @Y17XARL
GETNEXT  EQU   *                                               @Y17XARL
         L     RBRNCH,AVTRNMPT                                 @Y17XAR5
         BALR  RRET,RBRNCH              CALL IEDQTNT           @Y17XAR5
         LR    RNEXT,RPARM              SET NEXT TO TTE ADDR   @Y17XAR5
         LA    RBRNCH,TRMPRFSZ          NEG PREFIX SIZE        @Y17XAR5
         SR    RNEXT,RBRNCH             BACK UP TO NEG PREFIX  @Y17XAR5
         SPACE 2                                               @Y17XARL
LOOPTEST EQU   *                                               @Y17XARL
         TM    OPCWRKSP,LOOPSW          NEXT RESOURCE OK       @Y17XARL
         BO    DONETEST                 YES, BRANCH            @Y17XARL
         SPACE 1                                               @Y17XARL
         CR    RNEXT,RLEVEL             DOES NEXT = LEVEL?     @Y17XAR5
         BNE   SETLOOP                  NO, BRANCH             @Y17XARL
         CR    RLEVEL,RTERM             DOES LEVEL = LINE?     @Y17XAR5
         BE    PATHSWON                 YES                    @Y17XAR5
         LA    RPARM,TRMPRFSZ           NEG PREFIX SIZE        @Y17XAR5
         AR    RPARM,RNEXT              PARAM = TTE ADDR       @Y17XAR5
*                                       (OMITTING NEG PREFIX)  @Y17XAR5
         L     RBRNCH,OPCHORT                                  @Y17XAR5
         BALR  RRET,RBRNCH              CALL COHORTLK          @Y17XAR5
         LR    RLEVEL,RPARM             TTE ADDR ON NEXT       @Y17XAR5
*                                       HIGHER RESOURCE        @Y17XAR5
         LA    RBRNCH,TRMPRFSZ          NEG PREF SIZE          @Y17XAR5
         SR    RLEVEL,RBRNCH            BACK UP TO NEG PREFIX  @Y17XAR5
         LH    RPARM,TRMCOHRT                                  @Y17XAR5
         L     RBRNCH,AVTRNMPT          CALL IEDQTNT WITH      @Y17XAR5
         BALR  RRET,RBRNCH              COHORT OF NEXT         @Y17XAR5
         LR    RNEXT,RPARM              TTE ADDR ON NEXT       @Y17XAR5
*                                       HIGHER RESOURCE        @Y17XAR5
         LA    RBRNCH,TRMPRFSZ          NEG PREFIX SIZE        @Y17XAR5
         SR    RNEXT,RBRNCH             BACK UP TO NEG PREFIX  @Y17XAR5
         B     LOOPTEST                                        @Y17XARL
         SPACE 1                                               @Y17XARL
PATHSWON OI    OPCWRKSP,LOOPSW+DONESW   TURN ON PATH SWITCHES  @Y17XAR5
         B     LOOPTEST                 TEST FOR END           @Y17XARL
         SPACE 1                                               @Y17XARL
SETLOOP  OI    OPCWRKSP,LOOPSW          SET LOOPSW             @Y17XARL
         B     LOOPTEST                 TEST FOR END           @Y17XARL
         SPACE 1                                               @Y17XARL
DONETEST EQU   *                                               @Y17XARL
         TM    OPCWRKSP,DONESW          IS DONESW ON?          @Y17XAR5
         BZ    NXTTTE                   NO                     @Y17XAR5
         DROP  RNEXT                                           @Y17XAR5
         USING IEDNTRM,RTERM                                   @Y17XAR5
RESTORE  L     RRLN,OPCWRKSP+4          RESTORE REGS           @Y17XAR5
         L     RWORK,OPCWRKSP+8         SAVED IN OPC WORK AREA @Y17XAR5
CKSTART  CLI   TRMTYPE,TRMSDLC          IS IT A SNA LINE?      @Y17XAR5
         BE    CKSTAIN                  YES                    @Y17XAR5
         TM    OPCSPEC,OPCRSTRT         RESTART IN PROGRESS?   @Y17XAR5
         BO    CKSTAIN                  YES                    @Y17XAR5
* FIND STOPLINE OPCE ON OPCWAITV                               @Y17XAR5
* ROPCNEW WILL REFER TO STOPLINE OPCE                          @Y17XAR5
         SR    RBRNCH,RBRNCH            ZERO WORK REG          @Y17XAR5
         L     ROPCNEW,OPCWAITV         FIRST OPCE ON CHAIN    @Y17XAR5
* OCCIB OF STOPLINE OPCE POINTS TO ORIGINAL OPCE (ADDRESS      @Y17XAR5
*                                       IN ROPCE)              @Y17XAR5
FINDSS   CLM   ROPCE,AD,OCCIB-IEDQOPCE+ONE(ROPCNEW) STOPLINE? @Y17XARR
         BE    GOTIT                    YES                    @Y17XAR5
         LR    RBRNCH,ROPCNEW           SAVE PTR TO PREV OPCE  @Y17XAR5
         LA    RBRNCH,AVTEZERO(,RBRNCH) CLEAR HIORDER BYTE     @Y17XARR
         L     ROPCNEW,OCLINK-IEDQOPCE(,ROPCNEW) NEXT IN CHAIN @Y17XAR5
         B     FINDSS                   CHECK IT               @Y17XAR5
GOTIT    LTR   RBRNCH,RBRNCH            WAS IT FIRST ON CHAIN? @Y17XAR5
         BNZ   UNLINK                   NO                     @Y17XAR5
         MVC   OPCWAITV,OCLINK-IEDQOPCE(ROPCNEW) YES- MAKE     @Y17XAR5
         B     UNCHAIND                 ANCHOR PT TO NEXT OPCE @Y17XAR5
* UNCHAIN STOPLINE OPCE BY MAKING PREV OPCE PT TO NEXT OPCE    @Y17XAR5
UNLINK   MVC   OCLINK-IEDQOPCE(4,RBRNCH),OCLINK-IEDQOPCE(ROPCNEW)
*                                                              @Y17XAR5
UNCHAIND CLI   OCSWITCH-IEDQOPCE(ROPCNEW),OCVARON STARTLINE?   @Y17XAR5
         BNE   NOSTART                  NO- NOT NEEDED         @Y17XAR5
         LR    ROPCE,ROPCNEW            MAKE START/STOP ...    @Y17XARL
         ST    ROPCE,OPCCOPCE           ... THE CURRENT OPCE   @Y17XARL
         MVC   OCPARM,AVTFZERO          YES- SET UP            @Y17XARL
*                                       START/STOP OPCE FOR    @Y17XAR5
*                                       STARTLINE              @Y17XAR5
         NI    OCFLAG,HEXFF-OCRESP      RESET RESPONSE FLAG    @Y17XARL
         MVI   OCALSTAT,ZERO            RESET FLAG BYTE        @Y17XARL
         MVC   OCWTG,ICHNGMOD           SET WHERE TO GO        @Y17XARL
         MVC   OPCMODID,MODVI           EXIT TO STARTLINE      @Y17XAR5
         B     XCTL                                            @Y17XAR5
RETSTART LR    ROPCNEW,ROPCE            ADDR OF START/STOP OPCE@Y17XAR5
         L     ROPCE,OCCIB              GET ADDR OF ORIGINAL   @Y17XARL
*                                       OPCE                   @Y17XAR5
         ST    ROPCE,OPCCOPCE           CURR OPCE              @Y17XAR5
NOSTART  TM    OCFLAG-IEDQOPCE(ROPCNEW),OCATTACH ARE OPCE'S    @Y17XAR5
*                                       ATTACHED?              @Y17XAR5
         BZ    NOTATTCH                 NO                     @Y17XAR5
         MVC   OCELMPTR,OCELMPTR-IEDQOPCE(ROPCNEW) MOVE OPCE'S @Y17XAR5
*                                       TO ICHNG OPCE          @Y17XAR5
         NI    OCFLAG-IEDQOPCE(ROPCNEW),HEXFF-OCATTACH UNATTACH@Y17XAR5
         OI    OCFLAG,OCATTACH          ATTACH- ORIG OPCE      @Y17XAR5
NOTATTCH ST    ROPCNEW,OCUNIT           ADDR (START/STOP OPCE) @Y17XAR5
         B     CKSTAIN                  GO CHECKPOINT ICHNG    @SA71947
         SPACE
SWAP1    XC    ONE(AVTEZERO,RSWAP),ONE(RENTRY) SWAP TWO
SWAP2    XC    ONE(AVTEZERO,RENTRY),ONE(RSWAP) SUCCESSIVE
RNPRFSZ  DC    AL2(IEDQTRM-IEDNTRM)     3705 PREFIX SIZE       @SA71947
ACTLINE  DC    X'089880'                ACTIVATE LINE CODE     @SA71947
CHECKPT  DC    C'06'                    CHECKPOINT MODULE NAME
WRITE    DC    C'07'                    OUTPUT WRITER NAME
ICHNG1   DC    C'I1'                    MOVE OR ACTIVATE LIST
STOPLN   DC    C'V1'                    STOPLINE MODULE
ICHNGMOD DC    C'I0'                    DEACTIVATE LIST
FIRSTLD  DC    C'00'                    FIRST LOAD OF OP CTL
DISABLE  DC    X'00'                    SYSTEM MASK FOR DISABLE  S22024
ICHNG2   DC    C'I2'                    ICHNG FOR 3705           S22024
STOP05   DC    C'V8'                    3705 STOPLINE          @Y17XAR5
CON25    DC    H'25'                    MSG # FOR LINE ALREADY @Y17XAR5
*                                       STOPPED                @Y17XARL
CON26    DC    H'26'                    MSG # FOR LINE STOPPED @Y17XARL
MODVI    DC    C'VI'                    MODULE INDICATOR       @Y17XAR5
MODI3    DC    C'I3'                    MODULE INDICATOR       @Y17XARL
         TITLE 'IGCI010D - DSECTS REFERENCED BY THIS MODULE'
         TAVTD
         EJECT
         DCBD  DSORG=(TX,TR)                                   @SA71947
         EJECT
         TTCXD SVS
         EJECT                                                 @SA71947
         TLGBD                                                 @SA71947
         EJECT                                                 @SA71947
         EJECT
         TDEBD
         EJECT
         TDISPD
         EJECT
          SPACE 1
         EJECT
         TLCBD
         EJECT
         TOPCED
         EJECT
         TOPCAVTD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TQCBD
         EJECT
         TSCBD
         EJECT
         TTNTD
         EJECT
         TTRMD
         END
