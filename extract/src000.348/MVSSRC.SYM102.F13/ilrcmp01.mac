         TITLE 'ILRCMP01, I/O COMPLETION RECOVERY                      *
                        '
ILRCMP01 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ILRCMP01  76.091'                                 0001
         DROP  @15
@PROLOG  BALR  @10,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@10                                         0001
*                                      WORKAREA & RETURN ADDRESS     */
*   DATARG=R0;                      /* SET UP DATA REGISTER          */
         LR    DATARG,R0                                           0110
*   RFY                                                            0111
*     R0 UNRSTD;                    /* RELEASE REG 0                 */
*   GEN( USING @DATD,DATARG);       /* SET UP ADDRESSABILITY TO DATA
*                                      AREA                          */
          USING @DATD,DATARG
*   ADATA=''B;                      /* ZERO DATA AREA                */
         XC    ADATA(200,DATARG),ADATA(DATARG)                     0113
*   SAVERTN=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,SAVERTN                                         0114
*   RFY                                                            0115
*     R14 UNRSTD;                   /* RELEASE REG14                 */
*   RFY                                                            0116
*     ATAPTR RSTD;                  /* RESTRICT ATA POINTER          */
*   ATAPTR=SDWAPARM;                /* SET UP ADDRESS OF ATA         */
         L     ATAPTR,SDWAPARM(,SDWAPTR)                           0117
*   SDWAVRA(1:LENGTH(ATA))=ATA;     /* MOVE ATA TO SDWA              */
         MVC   SDWAVRA(24,SDWAPTR),ATA(ATAPTR)                     0118
*   URAL=LENGTH(ATA);               /* SET LENGTH OF AREA USED       */
         MVI   URAL(SDWAPTR),X'18'                                 0119
*   DO;                             /* SETRP RC(0)RECPARM(MODID)RECOR
*                                      D(YES)FRELOCK(SALLOC)         */
*     RESPECIFY                                                    0121
*      (GPR00P,                                                    0121
*       GPR01P,                                                    0121
*       GPR14P,                                                    0121
*       GPR15P) RSTD;                                              0121
*     GPR01P->SDWARCDE=0;           /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0122
*     GPR01P->SDWARCRD='1'B;        /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0123
*     GPR15P=ADDR(MODID);           /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,MODID                                        0124
*     GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD PARAMETERS */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0125
*     GPR01P->SDWAACF3=GPR01P->SDWAACF3×'00000100'B;/* INITIALIZE  0126
*                                      LOCK FLAGS                    */
         OI    SDWAACF3(GPR01P),B'00000100'                        0126
*     RESPECIFY                                                    0127
*      (GPR00P,                                                    0127
*       GPR01P,                                                    0127
*       GPR14P,                                                    0127
*       GPR15P) UNRSTD;                                            0127
*   END;                            /* INDICATE CONTINUE           0128
*                                      WITHTTERMINATION, RECORD    0128
*                                      MODULE NAMES, INDICATE RECORD
*                                      ERROR, AND FREE SALLOC LOCK,
*                                      IF HELD                       */
*                                                                  0129
*   /*****************************************************************/
*   /*                                                               */
*   /* VALIDITY CHECK IOSB                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0129
*   IF ATAIOSB=ZERO                 /* IOSB CHECKPOINTED?            */
*     THEN                                                         0129
         L     @12,ATAIOSB(,ATAPTR)                                0129
         LTR   @12,@12                                             0129
         BZ    @RT00129                                            0129
*     GOTO EXIT;                    /* NO, RETURN TO RTM             */
*   RFY                                                            0131
*    (R2,                                                          0131
*     R3,                                                          0131
*     R4,                                                          0131
*     R5,                                                          0131
*     R6,                                                          0131
*     R7) RSTD;                     /* REGS 2-7 DESTROYED ACROSS CALL*/
*   RFY                                                            0132
*    (ELEMENT,                                                     0132
*     R14,                                                         0132
*     RETCODE) RSTD;                /* RESTRICT INTERFACE REGS       */
*   ELEMENT=ATAIOSB->IOSUSE;        /* SET UP ADDRESS OF IORB        */
         L     ELEMENT,IOSUSE(,@12)                                0133
*   CALL ILRVIORB;                  /* VALIDITY CHECK IORB-IOSB-SRB  */
         L     @15,@CV02109                                        0134
         BALR  @14,@15                                             0134
*   RFY                                                            0135
*    (ELEMENT,                                                     0135
*     R2,                                                          0135
*     R3,                                                          0135
*     R4,                                                          0135
*     R5,                                                          0135
*     R6,                                                          0135
*     R7) UNRSTD;                   /* RELEASE REGS                  */
*   IF RETCODE^=ZERO                /* VALIDITY CHECK SUCCESSFULLY?  */
*     THEN                                                         0136
         SLR   @12,@12                                             0136
         CR    RETCODE,@12                                         0136
         BE    @RF00136                                            0136
*     DO;                           /* NO, RETURN TO RTM             */
*       ATAIOSB=ZERO;               /* SET UP SO PART MONITOR AND/OR
*                                      SWAP DRIVER WILL BE SCHEDULED */
         ST    @12,ATAIOSB(,ATAPTR)                                0138
*       GOTO EXIT;                  /* GO TO EXIT LOGIC              */
         B     EXIT                                                0139
*     END;                          /* END OF INVALID IOSB           */
*   RFY                                                            0141
*    (R14,                                                         0141
*     RETCODE) UNRSTD;              /* RELEASE REGS                  */
@RF00136 DS    0H                                                  0142
*                                                                  0142
*   /*****************************************************************/
*   /*                                                               */
*   /* IORB-IOSB-SRB VALID - CHECK FOR RECORD ONLY ABEND             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0142
*   RFY                                                            0142
*     IOSBPTR RSTD;                 /* RESTRICT REG                  */
*   IOSBPTR=ATAIOSB;                /* SET UP ADDRESS OF IOSB        */
         L     IOSBPTR,ATAIOSB(,ATAPTR)                            0143
*   IF SYSCODE=RECONLY              /* X'084'- RECORD ONLY ABEND ?   */
*     THEN                                                         0144
         MVC   @TS00001(2),SYSCODE(SDWAPTR)                        0144
         NC    @TS00001(2),@CB02173                                0144
         CLC   @TS00001(2),@CB02175                                0144
         BNE   @RF00144                                            0144
*     DO;                           /* YES, RECORD INFO FROM IOSB IN
*                                      VARIABLE RECORDING AREA       */
*       IF(URAL+LENGTH(RECAREA))<=VRAL/* ENOUGH ROOM IN SDWA TO    0146
*                                      RECORD IOSB FIELDS ?          */
*         THEN                                                     0146
         SLR   @08,@08                                             0146
         IC    @08,URAL(,SDWAPTR)                                  0146
         LA    @15,32                                              0146
         ALR   @15,@08                                             0146
         SLR   @00,@00                                             0146
         ICM   @00,3,VRAL(SDWAPTR)                                 0146
         CR    @15,@00                                             0146
         BH    @RF00146                                            0146
*         DO;                       /* YES, RECORD                   */
*           RFY                                                    0148
*             RECPTR RSTD;          /* RESTRICT REG WHILE RECORDING  */
*           RECPTR=ADDR(SDWAVRA)+URAL;/* POINT TO AVAILABLE AREA IN
*                                      RECORDING AREA                */
         LA    RECPTR,SDWAVRA(,SDWAPTR)                            0149
         ALR   RECPTR,@08                                          0149
*           RECCOD=IOSCOD;          /* RECORD IOS COMPLETION CODE    */
         MVC   RECCOD(1,RECPTR),IOSCOD(IOSBPTR)                    0150
*           RECUCB=RUCBCSW;         /* RECORD UCB ADDRESS AND CSW    */
         MVC   RECUCB(19,RECPTR),RUCBCSW(IOSBPTR)                  0151
*           RECSEEK=IOSEEK;         /* RECORD FULL SEEK ADDRESS      */
         MVC   RECSEEK(8,RECPTR),IOSEEK(IOSBPTR)                   0152
*           RECVST=IOSVST;          /* RECORD STARTING ADDRESS OF  0153
*                                      CHANNEL PROGRAM               */
         MVC   RECVST(4,RECPTR),IOSVST(IOSBPTR)                    0153
*           RFY                                                    0154
*             RECPTR UNRSTD;        /* RELEASE REGISTER              */
*           URAL=URAL+LENGTH(RECAREA);/* UPDATE LENGTH OF USER     0155
*                                      SUPPLIED INFORMATION          */
         STC   @15,URAL(,SDWAPTR)                                  0155
*         END;                      /* END OF RECORDING              */
*       ELSE                                                       0157
*         ;                         /* NO RECORDING IF NOT ENOUGH  0157
*                                      ROOM                          */
@RF00146 DS    0H                                                  0158
*     END;                          /* END FOR RECORD ONLY ABEND     */
*   ELSE                                                           0159
*     ;                             /* FALL INTO COMMON PROCESSING   */
@RF00144 DS    0H                                                  0160
*                                                                  0160
*   /*****************************************************************/
*   /*                                                               */
*   /* VERIFY CHECKPOINTED QUEUES BEFORE STARTING RECOVERY PROCESSING*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0160
*   RFY                                                            0160
*     ASMVTPTR RSTD;                /* RESTRICT REG                  */
*   ASMVTPTR=CVTASMVT;              /* SET UP ASMVT ADDRESS          */
         L     @08,CVTPTR                                          0161
         L     ASMVTPTR,CVTASMVT(,@08)                             0161
*   RFY                                                            0162
*     QWKAREA RSTD;                 /* RESTRICT REG FOR VERIFICATION
*                                      CALLS                         */
*   QWKAREA=ADDR(QVWKAREA);         /* SET UP ADDRESS OF WORKAREA    */
         LA    QWKAREA,QVWKAREA                                    0163
*   RFY                                                            0164
*     SAVEPTR RSTD;                 /* RESTRICT REG FOR CALLS        */
*   SAVEPTR=ADDR(SAVEREGS);         /* SET UP SAVE AREA ADDRESS      */
         LA    SAVEPTR,SAVEREGS                                    0165
*   RFY                                                            0166
*    (QANCHOR,                                                     0166
*     R14,                                                         0166
*     RETCODE) RSTD;                /* RESTRICT INTERFACE REGS       */
*   QANCHOR=ADDR(ATACOMPQ);         /* QUEUE OF AIAS FOR ILRPAGCM    */
         LA    QANCHOR,ATACOMPQ(,ATAPTR)                           0167
*   RFY                                                            0168
*    (R5,                                                          0168
*     R6,                                                          0168
*     R7) RSTD;                     /* REGS 5-7 DESTROYED ACROSS CALL*/
*   CALL ILRVAIAQ;                  /* VALIDITY CHECK QUEUE OF AIAS
*                                      TO BE RETURNED TO ILRPAGCM    */
         L     @15,@CV02111                                        0169
         BALR  @14,@15                                             0169
*   RFY                                                            0170
*    (R5,                                                          0170
*     R6,                                                          0170
*     R7) UNRSTD;                   /* RELEASE REGS                  */
*   RFY                                                            0171
*    (QANCHOR,                                                     0171
*     R14,                                                         0171
*     RETCODE) UNRSTD;              /* RELEASE INTERFACE REGS        */
*   RFY                                                            0172
*    (QVERRTNP) RSTD;               /* RESTRICT REGS                 */
*   IF IORSWAP=ON                   /* SWAP OR PAGE DATA SET ?       */
*     THEN                                                         0173
         L     @05,IORBPTR(,IOSBPTR)                               0173
         TM    IORSWAP(@05),B'00001000'                            0173
         BNO   @RF00173                                            0173
*     DO;                           /* SWAP DATA SET                 */
*       QVERRTNP=ADDR(ILRVSCWQ);    /* SET UP VERIFICATION RTN     0175
*                                      ADDRESS TO SCCW QUEUE       0175
*                                      VERIFICATION RTN              */
         L     QVERRTNP,@CV02112                                   0175
*       AVAILQP=ADDR(SARSCCWQ);     /* SCCWS GO ON SART QUEUE WHEN 0176
*                                      FREE                          */
         L     @05,SARTPTR(,ASMVTPTR)                              0176
         LA    @05,SARSCCWQ(,@05)                                  0176
         ST    @05,AVAILQP                                         0176
*     END;                          /* END OF SPECIAL SWAP CODE      */
*   ELSE                                                           0178
*     DO;                           /* PAGE DATA SET                 */
         B     @RC00173                                            0178
@RF00173 DS    0H                                                  0179
*       QVERRTNP=ADDR(ILRVPCWQ);    /* SET UP VERIFICATION ROUTINE 0179
*                                      ADDRESS TO ADDRESS OF PCCW  0179
*                                      QUEUE VERIFICATION ROUTINE    */
         L     QVERRTNP,@CV02113                                   0179
*       AVAILQP=ADDR(ASMPCCWA);     /* PCCWS GO ON ASMVT QUEUE WHEN
*                                      FREE                          */
         LA    @05,ASMPCCWA(,ASMVTPTR)                             0180
         ST    @05,AVAILQP                                         0180
*     END;                          /* END OF SPECIAL PAGE CODE      */
*   RFY                                                            0182
*     ASMVTPTR UNRSTD;              /* RELEASE REG                   */
@RC00173 DS    0H                                                  0183
*                                                                  0183
*   /*****************************************************************/
*   /*                                                               */
*   /* VERIFY CHECKPOINTED PCCW/SCCW QUEUES                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   RFY                                                            0183
*    (QANCHOR,                                                     0183
*     R14,                                                         0183
*     RETCODE) RSTD;                /* RESTRICT INTERFACE REGS       */
*   QANCHOR=ADDR(ATAPCCWQ);         /* QUEUE OF FREE PCCWS OR SCCWS  */
         LA    QANCHOR,ATAPCCWQ(,ATAPTR)                           0184
*   RFY                                                            0185
*    (R5,                                                          0185
*     R6,                                                          0185
*     R7) RSTD;                     /* REGS 5-7 DESTROYED ACROSS CALL*/
*   CALL QVERRTN;                   /* VALIDITY CHECK QUEUE OF FREE
*                                      PCCWS OR SCCWS                */
         LR    @15,QVERRTNP                                        0186
         BALR  @14,@15                                             0186
*   QANCHOR=ADDR(ATACPCCW);         /* QUEUE OF CURRENT PCCWS OR   0187
*                                      SCCWS                         */
         LA    QANCHOR,ATACPCCW(,ATAPTR)                           0187
*   CALL QVERRTN;                   /* VALIDITY CHECK QUEUE OF     0188
*                                      CURRENT PCCWS OR SCCWS        */
         LR    @15,QVERRTNP                                        0188
         BALR  @14,@15                                             0188
*   QANCHOR=ADDR(IORPCCW);          /* QUEUE REMAINING ON IORB       */
         L     @03,IORBPTR(,IOSBPTR)                               0189
         LA    QANCHOR,IORPCCW(,@03)                               0189
*   CALL QVERRTN;                   /* VALIDITY CHECK QUEUE OF PCCWS
*                                      OR SCCWS ON IORB              */
         LR    @15,QVERRTNP                                        0190
         BALR  @14,@15                                             0190
*   RFY                                                            0191
*    (R5,                                                          0191
*     R6,                                                          0191
*     R7) UNRSTD;                   /* RELEASE REGISTERS             */
*   RFY                                                            0192
*    (QANCHOR,                                                     0192
*     R14,                                                         0192
*     RETCODE) UNRSTD;              /* RELEASE INTERFACE REGISTERS   */
*   RFY                                                            0193
*     SAVEPTR UNRSTD;               /* RELEASE REG                   */
*   RFY                                                            0194
*    (QVERRTNP,                                                    0194
*     QWKAREA) UNRSTD;              /* RELEASE REGS ONLY USED DURING
*                                      QUEUE VERIFICATION            */
*                                                                  0194
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF QUEUE VERIFICATIONS                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0195
*                                                                  0195
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPLETE PROCESSING FOR CURRENT SCCW(S) OR PCCW(S)            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0195
*   IF ATACPCCW^=ZERO               /* CURRENT PCCW/SCCW CHECKPOINTED
*                                      ?                             */
*     THEN                                                         0195
         L     @08,ATACPCCW(,ATAPTR)                               0195
         LTR   @08,@08                                             0195
         BZ    @RF00195                                            0195
*     IF(ATACPCCW=ATAPCCWQ)×        /* CURRENT PCCW/SCCW SAME AS   0196
*                                      PCCW/SCCW ON AVAILABLE QUEUE ?*/
*         (ATACPCCW=IORPCCW)        /* OR CURRENT PCCW/SCCW SAME AS
*                                      PCCW/SCCW ON IORB?            */
*       THEN                                                       0196
         C     @08,ATAPCCWQ(,ATAPTR)                               0196
         BE    @RT00196                                            0196
         L     @15,IORBPTR(,IOSBPTR)                               0196
         C     @08,IORPCCW(,@15)                                   0196
         BNE   @RF00196                                            0196
@RT00196 DS    0H                                                  0197
*       ATACPCCW=ZERO;              /* DO NOT PROCESS CURRENT      0197
*                                      PCCW/SCCW, CANNOT CHANCE    0197
*                                      PROCESSING A PCCW OR SCCW   0197
*                                      TWICE                         */
         SLR   @08,@08                                             0197
         ST    @08,ATACPCCW(,ATAPTR)                               0197
*     ELSE                                                         0198
*       DO;                         /* CURRENT PCCW/SCCW NOT ON TWO
*                                      QUEUES                        */
         B     @RC00196                                            0198
@RF00196 DS    0H                                                  0199
*         IF(IORPCCW^=ZERO)         /* SHOULD CHAIN FIELD IN CURRENT
*                                      SCCW/PCCW BE ZEROED - CHECK TO
*                                      SEE IF MAINLINE WAS IN THE  0199
*                                      PROCESS OF TAKING THE       0199
*                                      PCCW/SCCW OFF THE IORB        */
*           THEN                                                   0199
         SLR   @08,@08                                             0199
         L     @15,IORBPTR(,IOSBPTR)                               0199
         C     @08,IORPCCW(,@15)                                   0199
         BE    @RF00199                                            0199
*           ATACPCCW->PCCWPCCW=ZERO;/* YES, ZERO CHAIN FIELD OF    0200
*                                      PCCW/SCCW                     */
         L     @15,ATACPCCW(,ATAPTR)                               0200
         ST    @08,PCCWPCCW(,@15)                                  0200
*         IF(ATACPCCW->PCCWAIA)=ATACOMPQ/* CHECK IF AIA IS ON TWO  0201
*                                      QUEUES ?                      */
*           THEN                                                   0201
@RF00199 L     @08,ATACPCCW(,ATAPTR)                               0201
         CLC   PCCWAIA(4,@08),ATACOMPQ(ATAPTR)                     0201
         BNE   @RF00201                                            0201
*           ATACPCCW->PCCWAIA=ZERO; /* YES, ZERO CURRENT AIA ADDRESS */
         SLR   @00,@00                                             0202
         ST    @00,PCCWAIA(,@08)                                   0202
*         DO WHILE ATACPCCW^=ZERO;  /* LOOP THROUGH POSSIBLE CHAIN OF
*                                      PCCW/SCCWS TO PUT AIAS ON   0203
*                                      COMPLETION QUEUE AND        0203
*                                      PCCWS/SCCWS ON AVAILABLE QUEUE*/
@RF00201 B     @DE00203                                            0203
@DL00203 DS    0H                                                  0204
*           IF ATACPCCW->PCCWAIA^=ZERO/* AIA POINTER STILL IN      0204
*                                      PCCW/SCCW ?                   */
*             THEN                                                 0204
         L     @08,ATACPCCW(,ATAPTR)                               0204
         L     @08,PCCWAIA(,@08)                                   0204
         LTR   @08,@08                                             0204
         BZ    @RF00204                                            0204
*             DO;                   /* YES, PROCESS AIA              */
*               RFY                                                0206
*                (ELEMENT,                                         0206
*                 R14,                                             0206
*                 RETCODE) RSTD;    /* RESTRICT INTERFACE REGS       */
*               ELEMENT=ATACPCCW->PCCWAIA;/* SET UP ADDRESS OF AIA   */
         LR    ELEMENT,@08                                         0207
*               RFY                                                0208
*                (R2,                                              0208
*                 R3,                                              0208
*                 R4,                                              0208
*                 R5,                                              0208
*                 R6,                                              0208
*                 R7) RSTD;         /* REGS 2-7 DESTROYED ACROSS CALL*/
*               CALL ILRVAIA;       /* VALIDITY CHECK AIA            */
         L     @15,@CV02110                                        0209
         BALR  @14,@15                                             0209
*               RFY                                                0210
*                (R2,                                              0210
*                 R3,                                              0210
*                 R4,                                              0210
*                 R5,                                              0210
*                 R6,                                              0210
*                 R7) UNRSTD;       /* RELEASE REGS                  */
*               IF RETCODE=ZERO     /* AIA VALID?                    */
*                 THEN                                             0211
         LTR   RETCODE,RETCODE                                     0211
         BNZ   @RF00211                                            0211
*                 DO;               /* YES, MARK AIA RETRY           */
*                                                                  0212
*                   /*************************************************/
*                   /*                                               */
*                   /* AIA SHOULD NOT HAVE ANY OTHER ERROR FLAGS ON, */
*                   /* AIAIORTY WILL CAUSE AIA TO BE REPROCESSED     */
*                   /* THROUGH ASM                                   */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0213
*                   AIAPTR=ELEMENT; /* SET UP AIA POINTER            */
         LR    AIAPTR,ELEMENT                                      0213
*                   AIAIORTY=ON;    /* MARK AIA FOR RETRY            */
         OI    AIAIORTY(AIAPTR),B'00100000'                        0214
*                   AIANXAIA=ATACOMPQ;/* CHAIN AIA TO COMPLETION   0215
*                                      QUEUE                         */
         MVC   AIANXAIA(4,AIAPTR),ATACOMPQ(ATAPTR)                 0215
*                   ATACOMPQ=AIAPTR;/* PUT AIA ON TOP OF COMPLETION
*                                      QUEUE                         */
         ST    AIAPTR,ATACOMPQ(,ATAPTR)                            0216
*                 END;              /* END OF PROCESSING AIA         */
*               RFY                                                0218
*                (ELEMENT,                                         0218
*                 R14,                                             0218
*                 RETCODE) UNRSTD;  /* RELEASE REGS                  */
@RF00211 DS    0H                                                  0219
*             END;                  /* END OF AIA POINTER IN       0219
*                                      PCCW/SCCW                     */
*           ATACPCCW->PCCWAIA=ZERO; /* ZERO AIA POINTER IN SCCW/PCCW
*                                      BEFORE PUTTING SCCW/PCCW ON 0220
*                                      AVAILABLE QUEUE               */
@RF00204 L     @08,ATACPCCW(,ATAPTR)                               0220
         SLR   @03,@03                                             0220
         ST    @03,PCCWAIA(,@08)                                   0220
*           PCCWPTR=ATACPCCW->PCCWPCCW;/* SAVE POINTER TO NEXT     0221
*                                      PCCW/SCCW                     */
         L     PCCWPTR,PCCWPCCW(,@08)                              0221
*           ATACPCCW->PCCWPCCW=ATAPCCWQ;/* CHAIN PCCW/SCCW TO      0222
*                                      AVAILABLE QUEUE               */
         MVC   PCCWPCCW(4,@08),ATAPCCWQ(ATAPTR)                    0222
*           ATAPCCWQ=ATACPCCW;      /* MAKE PCCW/SCCW FIRST ON     0223
*                                      AVAILABLE QUEUE               */
         ST    @08,ATAPCCWQ(,ATAPTR)                               0223
*           ATACPCCW=PCCWPTR;       /* SET UP TO PROCESS THE NEXT  0224
*                                      PCCW OR SCCW                  */
         ST    PCCWPTR,ATACPCCW(,ATAPTR)                           0224
*         END;                      /* END OF LOOP TO PROCESS CURRENT
*                                      QUEUE OF SCCWS/PCCWS          */
@DE00203 ICM   @08,15,ATACPCCW(ATAPTR)                             0225
         BNZ   @DL00203                                            0225
*       END;                        /* END OF PROCESSING CURRENT   0226
*                                      SCCW(S) OR PCCW(S)            */
*                                                                  0227
*   /*****************************************************************/
*   /*                                                               */
*   /* REMOVE QUEUED AIAS FROM ATA AND PUT ON PART ERROR QUEUE       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0227
*   RFY                                                            0227
*     ASMVTPTR RSTD;                /* RESTRICT REG                  */
@RC00196 DS    0H                                                  0227
@RF00195 DS    0H                                                  0228
*   ASMVTPTR=CVTASMVT;              /* SET UP ADDRESS OF ASMVT       */
         L     @08,CVTPTR                                          0228
         L     ASMVTPTR,CVTASMVT(,@08)                             0228
*   RFY                                                            0229
*    (COMPV,                                                       0229
*     REPLV) RSTD;                  /* RESTRICT REGS FOR C & S       */
*   IF ATACOMPQ^=ZERO               /* ANY AIAS FOR ILRPAGCM ?       */
*     THEN                                                         0230
         L     @08,ATACOMPQ(,ATAPTR)                               0230
         LTR   @08,@08                                             0230
         BZ    @RF00230                                            0230
*     DO;                           /* YES, PUT AIAS ON PART ERROR 0231
*                                      QUEUE                         */
*       REPLV=ATACOMPQ;             /* MAKE INTERNAL ATA QUEUE OF  0232
*                                      AIAS FIRST ON PART ERROR QUEUE*/
         LR    REPLV,@08                                           0232
*       LASTPTR=ATACOMPQ;           /* SET UP TO FIND LAST AIA       */
         LR    LASTPTR,@08                                         0233
*       DO WHILE(LASTPTR->AIANXAIA)^=ZERO;                         0234
         B     @DE00234                                            0234
@DL00234 DS    0H                                                  0235
*         LASTPTR=LASTPTR->AIANXAIA;/* CHECK NEXT AIA FOR LAST       */
         L     LASTPTR,AIANXAIA(,LASTPTR)                          0235
*       END;                        /* LASTPTR WILL POINT TO LAST AIA
*                                      ON QUEUE                      */
@DE00234 ICM   @08,15,AIANXAIA(LASTPTR)                            0236
         BNZ   @DL00234                                            0236
*       COMPV=PARTAIAE;             /* PICK UP FIRST AIA ON PARTAIAE */
         L     @08,PARTPTR(,ASMVTPTR)                              0237
         L     COMPV,PARTAIAE(,@08)                                0237
*ERRORQ:                                                           0238
*       ;                           /* RETRY POINT FOR C & S         */
ERRORQ   DS    0H                                                  0239
*       LASTPTR->AIANXAIA=COMPV;    /* CHAIN THIS QUEUE TO QUEUE   0239
*                                      ALREADY ON PART ERROR QUEUE   */
         ST    COMPV,AIANXAIA(,LASTPTR)                            0239
*       CS(COMPV,REPLV,PARTAIAE);   /* PUT AIAS ON ERROR QUEUE       */
         L     @04,PARTPTR(,ASMVTPTR)                              0240
         CS    COMPV,@05,PARTAIAE(@04)                             0240
*       BC(NE,ERRORQ);              /* IF C & S FAILS, RETRY AGAIN   */
         BC    7,ERRORQ                                            0241
*       SCHFLG=ON;                  /* INDICATE SCHEDULE PART MONITOR*/
         OI    SCHFLG,B'10000000'                                  0242
*     END;                          /* END OF PROCESSING FOR ATACOMPQ*/
*                                                                  0244
*   /*****************************************************************/
*   /*                                                               */
*   /* REMOVE AVAILABLE PCCWS/SCCWS AND PUT ON APPROPRIATE QUEUE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0244
*   IF ATAPCCWQ^=ZERO               /* ANY AVAILABLE PCCWS/SCCWS ?   */
*     THEN                                                         0244
@RF00230 L     @08,ATAPCCWQ(,ATAPTR)                               0244
         LTR   @08,@08                                             0244
         BZ    @RF00244                                            0244
*     DO;                           /* YES, PUT ON APPROPRIATE QUEUE */
*       REPLV=ATAPCCWQ;             /* MAKE QUEUE OF PCCWS/SCCWS IN
*                                      ATA FIRST ON APPROPRIATE QUEUE*/
         LR    REPLV,@08                                           0246
*       LASTPTR=ATAPCCWQ;           /* SET UP TO FIND LAST SCCW/PCCW */
         LR    LASTPTR,@08                                         0247
*       DO WHILE(LASTPTR->PCCWPCCW)^=ZERO;/* FIND LAST               */
         B     @DE00248                                            0248
@DL00248 DS    0H                                                  0249
*         LASTPTR=LASTPTR->PCCWPCCW;/* CHECK NEXT FOR LAST           */
         L     LASTPTR,PCCWPCCW(,LASTPTR)                          0249
*       END;                        /* LASTPTR WILL POINT TO LAST  0250
*                                      PCCW/SCCW                     */
@DE00248 ICM   @08,15,PCCWPCCW(LASTPTR)                            0250
         BNZ   @DL00248                                            0250
*       COMPV=AVAILQ;               /* GET FIRST SCCW/PCCW ON      0251
*                                      AVAILABLE Q                   */
         L     @08,AVAILQP                                         0251
         L     COMPV,AVAILQ(,@08)                                  0251
*AVAIL:                                                            0252
*       ;                           /* RETRY POINT FOR C & S         */
AVAIL    DS    0H                                                  0253
*       LASTPTR->PCCWPCCW=COMPV;    /* CHAIN AVAILABLE QUEUE TO QUEUE
*                                      OF SCCWS/PCCWS IN ATA         */
         ST    COMPV,PCCWPCCW(,LASTPTR)                            0253
*       CS(COMPV,REPLV,AVAILQ);     /* PUT ELEMENTS ON QUEUE         */
         L     @04,AVAILQP                                         0254
         CS    COMPV,@05,AVAILQ(@04)                               0254
*       BC(NE,AVAIL);               /* RETRY IF C & S UNSUCCESSFUL   */
         BC    7,AVAIL                                             0255
*     END;                          /* END OF PROCESSING ATAPCCWQ    */
*   RFY                                                            0257
*    (COMPV,                                                       0257
*     REPLV) UNRSTD;                /* RELEASE REGS                  */
*                                                                  0257
@RF00244 DS    0H                                                  0258
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF QUEUE PROCESSING                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0258
*                                                                  0258
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF SECOND ENTRY TO DIE- MUST FREE IORB              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0258
*   IF ATAMODID=ATAMCMPD            /* DIE ENTRY POINT?              */
*       &IOSDIESE=ON                /* AND SECOND ENTRY?             */
*     THEN                                                         0258
         CLI   ATAMODID(ATAPTR),9                                  0258
         BNE   @RF00258                                            0258
         TM    IOSDIESE(IOSBPTR),B'10000000'                       0258
         BNO   @RF00258                                            0258
*     DO;                           /* YES, MUST DO SPECIAL        0259
*                                      PROCESSING                    */
*       IORFUSE=OFF;                /* MAKE IORB AVAILABLE           */
         L     @08,IORBPTR(,IOSBPTR)                               0260
         NI    IORFUSE(@08),B'01111111'                            0260
*       ATAIOSB=ZERO;               /* MAKE IOSB ADDRESS ZERO SO THAT
*                                      CHKSCH WILL SCHEDULE PART   0261
*                                      MONITOR AND SWAP DRIVER       */
         SLR   @08,@08                                             0261
         ST    @08,ATAIOSB(,ATAPTR)                                0261
*     END;                          /* END OF SPECIAL PROCESSING FOR
*                                      SECOND ENTRY TO THE DIE       */
*                                                                  0263
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE ILRCMP IF TERMINATION ROUTINE WAS IN CONTROL AT TIME */
*   /* OF ERROR                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0263
*   ELSE                                                           0263
*     IF ATAMODID=ATAMCMP           /* ILRCMP IN CONTROL AT ERROR    */
*       THEN                                                       0263
         B     @RC00258                                            0263
@RF00258 CLI   ATAMODID(ATAPTR),12                                 0263
         BNE   @RF00263                                            0263
*       DO;                         /* YES, SCHEDULE CMP WITH 45 CODE*/
*         RFY                                                      0265
*          (PARMPTR,                                               0265
*           R14,                                                   0265
*           R15) RSTD;              /* RESTRICT INTERFACE REGS       */
*         IOSCOD=IOSABNC;           /* SET X'45' CODE IN IOSB        */
         MVI   IOSCOD(IOSBPTR),X'45'                               0266
*         PARMPTR=IOSSRB;           /* SET UP SRB FOR SCHEDULE       */
         L     PARMPTR,IOSSRB(,IOSBPTR)                            0267
*         PARMPTR->SRBEP=ASMPCMP;   /* SET UP ADDRESS OF CMP         */
         MVC   SRBEP(4,PARMPTR),ASMPCMP(ASMVTPTR)                  0268
*         GEN(SCHEDULE SRB=(1),SCOPE=GLOBAL)                       0269
*         REFS(CVTGSMQ,SRBFLNK,SRBSECT);/* SCHEDULE ILRCMP           */
         SCHEDULE SRB=(1),SCOPE=GLOBAL
*         RFY                                                      0270
*          (PARMPTR,                                               0270
*           R14,                                                   0270
*           R15) UNRSTD;            /* RELEASE REGS                  */
*       END;                        /* END OF PROCESSING IF IN ILRCMP*/
*                                                                  0272
*   /*****************************************************************/
*   /*                                                               */
*   /* MAKE ONE LAST ATTEMPT TO ISSUE ERROR MESSAGE IF ABEND OCCURRED*/
*   /* DURING BAD PACK PROCESSING                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*     ELSE                                                         0272
*       IF ATABADPK=ON              /* IN BADPACK PROCESSING IN    0272
*                                      ILRCMPAE                      */
*         THEN                                                     0272
         B     @RC00263                                            0272
@RF00263 TM    ATABADPK(ATAPTR),B'00100000'                        0272
         BNO   @RF00272                                            0272
*         DO;                       /* YES, TRY TO COMPLETE ISSUING
*                                      OF MSG                        */
*           PSARTE=IORPARTE;        /* SET UP ADDRESS OF PART ENTRY
*                                      OR SART ENTRY                 */
         L     @08,IORBPTR(,IOSBPTR)                               0274
         MVC   PSARTE(4),IORPARTE(@08)                             0274
*           IF IORSWAP=ON           /* SWAP REQUEST?                 */
*             THEN                                                 0275
         TM    IORSWAP(@08),B'00001000'                            0275
         BNO   @RF00275                                            0275
*             MSGTYPE=SWAP;         /* SET SWAP INDICATOR            */
         MVC   MSGTYPE(2),@CH00043                                 0276
*           RFY                                                    0277
*            (R11,                                                 0277
*             R12,                                                 0277
*             R13,                                                 0277
*             R14) RSTD;            /* REGS 11-14 DESTROYED ACROSS 0277
*                                      SETLOCK OBTAIN SALLOC LOCK -
*                                      LOCK WILL BE FREED BY RTM WHEN
*                                      CONTROL IS RETURNED. LOCK MAY
*                                      ALREADY BE HELD               */
@RF00275 DS    0H                                                  0278
*           GENERATE DEFS(OBTSALC) REFS(PSALITA);                  0278
OBTSALC SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,                       **
               RELATED=(PAGE/SWAP,ILRCMP01(RELSALC))
*           RFY                                                    0279
*            (R11,                                                 0279
*             R12,                                                 0279
*             R13,                                                 0279
*             R14) UNRSTD;          /* RELEASE REGS                  */
*           ATAPTR=SDWAPARM;        /* RESTORE ATA ADDRESS           */
         L     ATAPTR,SDWAPARM(,SDWAPTR)                           0280
*           IOSBPTR=ATAIOSB;        /* RESTORE IOSB ADDRESS          */
         L     IOSBPTR,ATAIOSB(,ATAPTR)                            0281
*           PAREDSBD=ON;            /* UNCONDITIONALLY TURN ON DATA
*                                      SET BAD FLAG- WILL PREVENT  0282
*                                      ERROR MSG FROM BEING ISSUED 0282
*                                      AGAIN                         */
         L     @08,IORBPTR(,IOSBPTR)                               0282
         L     @08,PAREPTR(,@08)                                   0282
         OI    PAREDSBD(@08),B'01000000'                           0282
*           RFY                                                    0283
*            (SAVEPTR,                                             0283
*             PARMPTR) RSTD;        /* RESTRICT PARM REGS            */
*           SAVEPTR=ADDR(SAVEREGS); /* SET UP SAVE AREA PTR          */
         LA    SAVEPTR,SAVEREGS                                    0284
*           PARMPTR=ADDR(MSGLIST);  /* PARAMETER LIST                */
         LA    PARMPTR,MSGLIST                                     0285
*           CALL ILRMSG00;          /* CALL ASM MESSAGE ROUTINE      */
         L     @15,@CV02108                                        0286
         BALR  @14,@15                                             0286
*           RFY                                                    0287
*            (SAVEPTR,                                             0287
*             PARMPTR) UNRSTD;      /* RELEASE REGS                  */
*         END;                      /* END OF BAD PACK PROCESSING    */
*EXIT:                                                             0289
*   ;                               /* EXIT PROCESSING FOR ILRCMP01  */
*                                                                  0289
@RF00272 DS    0H                                                  0289
@RC00263 DS    0H                                                  0289
@RC00258 DS    0H                                                  0289
EXIT     DS    0H                                                  0290
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE PART MONITOR IF SCHEDULE FLAG SET, OR IOSB NOT       */
*   /* CHECKPOINTED, OR IOSB NOT VALID. THIS SPECIAL SCHEDULE IS     */
*   /* NECESSARY IN ORDER TO INSURE THAT THE I/O SUBSYSTEM AND SWAP  */
*   /* DRIVER CONTINUE TO PROCESS EVEN IF WE LOSE THE IOSB BEING     */
*   /* PROCESSED. THE IOS FRR WILL NOT SCHEDULE POST STATUS IF AN    */
*   /* ERROR OCCURS DURING THE SECOND ENTRY TO THE DIE OR THE        */
*   /* TERMINATION ROUTINE.                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0290
*   RFY                                                            0290
*     ASMVTPTR RSTD;                /* RESTRICT REG                  */
*   ASMVTPTR=CVTASMVT;              /* SET UP ADDRESS OF ASMVT       */
         L     @08,CVTPTR                                          0291
         L     ASMVTPTR,CVTASMVT(,@08)                             0291
*   IF ATAIOSB=ZERO                 /* IOSB NOT CHECKPOINTED OR    0292
*                                      INVALID,                      */
*     THEN                                                         0292
         SLR   @08,@08                                             0292
         C     @08,ATAIOSB(,ATAPTR)                                0292
         BNE   @RF00292                                            0292
*     DO;                           /* YES, SPECIAL-CASE TRY TO    0293
*                                      SCHEDULE PART MONITOR AND SWAP
*                                      DRIVER TO KEEP THEM GOING     */
*       SCHFLG=ON;                  /* INDICATE SCHEDULE PART MONITOR*/
         OI    SCHFLG,B'10000000'                                  0294
*       IF SARUSE^=ZERO             /* SWAP DATA SETS BEING USED?    */
*         THEN                                                     0295
         L     @02,SARTPTR(,ASMVTPTR)                              0295
         C     @08,SARUSE(,@02)                                    0295
         BE    @RF00295                                            0295
*         DO;                       /* YES, TRY TO SCHEDULE SWAP DRV */
*           RFY                                                    0297
*            (COMPV,                                               0297
*             REPLV) RSTD;          /* RESTRICT REGS                 */
*           IF SARSRBCT=NOSCHED     /* SWAP DRIVER ALREADY SCHEDULED?*/
*             THEN                                                 0298
         C     @08,SARSRBCT(,@02)                                  0298
         BNE   @RF00298                                            0298
*             DO;                   /* NO, TRY TO SCHEDULE           */
*               COMPV=NOSCHED;      /* SRB COUNT SHOULD BE ZERO      */
         SLR   COMPV,COMPV                                         0300
*               REPLV=SCHED;        /* IF NOT SCHEDULED, SET COUNT TO
*                                      ONE TO INDICATE IT IS       0301
*                                      SCHEDULED                     */
         LA    REPLV,1                                             0301
*               CS(COMPV,REPLV,SARSRBCT);/* TRY TO SET SRB SCHEDULED
*                                      COUNT                         */
         CS    COMPV,@05,SARSRBCT(@02)                             0302
*               BC(NE,SWPSCHED);    /* DO NOT SCHEDULE IF ALREADY  0303
*                                      SCHEDULED                     */
         BC    7,SWPSCHED                                          0303
*               RFY                                                0304
*                (PARMPTR,                                         0304
*                 R14,                                             0304
*                 R15) RSTD;        /* RESTRICT INTERFACE REGS       */
*               PARMPTR=SARSRBP;    /* GET ADDRESS OF SWAP DRIVER SRB*/
         L     @08,SARTPTR(,ASMVTPTR)                              0305
         L     PARMPTR,SARSRBP(,@08)                               0305
*               GEN(SCHEDULE SRB=(1),SCOPE=GLOBAL)                 0306
*               REFS(CVTGSMQ,SRBFLNK,SRBSECT,CVTMAP,CVTPTR);/*     0306
*                                      SCHEDULE SWAP DRIVER          */
         SCHEDULE SRB=(1),SCOPE=GLOBAL
*               RFY                                                0307
*                (PARMPTR,                                         0307
*                 R14,                                             0307
*                 R15) UNRSTD;      /* RELEASE REGS                  */
*             END;                  /* END OF SWAP DRIVER SCHEDULE   */
*SWPSCHED:                                                         0309
*           ;                       /* LABEL FOR UNSUCCESSFUL ATTEMPT
*                                      TO SCHEDULE SWAP DRIVER       */
@RF00298 DS    0H                                                  0309
SWPSCHED DS    0H                                                  0310
*           RFY                                                    0310
*            (COMPV,                                               0310
*             REPLV) UNRSTD;        /* RELEASE REGS                  */
*         END;                      /* END OF PROCESSING FOR SWAP  0311
*                                      DATA SETS                     */
*     END;                          /* END FOR PROCESSING FOR IOSB 0312
*                                      NOT CHECKPOINTED              */
@RF00295 DS    0H                                                  0313
*                                                                  0313
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE PART MONITOR IF INDICATED- SCHFLG WILL BE ON IF AIAS */
*   /* HAVE BEEN ADDED TO THE PARTAIAE QUEUE OR IF THE IOSB PTR WAS  */
*   /* ZERO                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0313
*   IF SCHFLG=ON                    /* PART MONITOR TO BE SCHEDULED? */
*     THEN                                                         0313
@RF00292 TM    SCHFLG,B'10000000'                                  0313
         BNO   @RF00313                                            0313
*     DO;                           /* YES, SCHEDULE PART MONITOR    */
*       RFY                                                        0315
*        (COMPV,                                                   0315
*         REPLV) RSTD;              /* RESTRICT REGS                 */
*       IF ASMSRBCT=NOSCHED         /* PART MONITOR ALREADY        0316
*                                      SCHEDULED?                    */
*         THEN                                                     0316
         ICM   @08,15,ASMSRBCT(ASMVTPTR)                           0316
         BNZ   @RF00316                                            0316
*         DO;                       /* NO, TRY TO SCHEDULE           */
*           COMPV=NOSCHED;          /* SRB COUNT SHOULD BE ZERO      */
         SLR   COMPV,COMPV                                         0318
*           REPLV=SCHED;            /* IF NOT SCHEDULED, SET COUNT TO
*                                      ONE TO INDICATE IT IS       0319
*                                      SCHEDULED                     */
         LA    REPLV,1                                             0319
*           CS(COMPV,REPLV,ASMSRBCT);/* TRY TO SET SRB SCHEDULED   0320
*                                      COUNT                         */
         CS    COMPV,@05,ASMSRBCT(ASMVTPTR)                        0320
*           BC(NE,NOTSCHED);        /* DO NOT SCHEDULE IF ALREADY  0321
*                                      SCHEDULED                     */
         BC    7,NOTSCHED                                          0321
*           RFY                                                    0322
*            (PARMPTR,                                             0322
*             R14,                                                 0322
*             R15) RSTD;            /* RESTRICT INTERFACE REGS       */
*           PARMPTR=ASMPSRB;        /* GET ADDRESS OF PART MONITOR 0323
*                                      SRB                           */
         L     PARMPTR,ASMPSRB(,ASMVTPTR)                          0323
*           GEN(SCHEDULE SRB=(1),SCOPE=GLOBAL)                     0324
*           REFS(CVTGSMQ,SRBFLNK,SRBSECT,CVTMAP,CVTPTR);/* SCHEDULE
*                                      PART MONITOR                  */
         SCHEDULE SRB=(1),SCOPE=GLOBAL
*           RFY                                                    0325
*            (PARMPTR,                                             0325
*             R14,                                                 0325
*             R15) UNRSTD;          /* RELEASE REGS                  */
*         END;                      /* END FOR SCHEDULING PART     0326
*                                      MONITOR                       */
*NOTSCHED:                                                         0327
*       ;                           /* LABEL FOR UNSUCCESSFUL ATTEMPT
*                                      TO SCHEDULE PART MONITOR      */
@RF00316 DS    0H                                                  0327
NOTSCHED DS    0H                                                  0328
*       RFY                                                        0328
*        (COMPV,                                                   0328
*         REPLV) UNRSTD;            /* RELEASE REGS                  */
*     END;                          /* END FOR PART MONITOR TO BE  0329
*                                      SCHEDULED                     */
*   RFY                                                            0330
*     ASMVTPTR UNRSTD;              /* RELEASE REG                   */
@RF00313 DS    0H                                                  0331
*   RFY                                                            0331
*     R14 RSTD;                                                    0331
*   R14=SAVERTN;                    /* RESTORE RETURN ADDRESS        */
         L     R14,SAVERTN                                         0332
*   RETURN;                         /* RETURN TO RTM                 */
@EL00001 DS    0H                                                  0333
@EF00001 DS    0H                                                  0333
@ER00001 BR    @14                                                 0333
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0334
*     GPR01P PTR(31) REG(1),                                       0334
*     GPR14P PTR(31) REG(14),                                      0334
*     GPR15P PTR(31) REG(15);                                      0334
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0335
*     I031F FIXED(31) BASED,                                       0335
*     I031P PTR(31) BASED,                                         0335
*     I015F FIXED(15) BASED,                                       0335
*     I015P PTR(15) BASED,                                         0335
*     I008P PTR(8) BASED,                                          0335
*     I001C CHAR(1) BASED;          /* USED FOR PLS MACROS           */
*   END ILRCMP01                    /* END OF MODULE - RETURN TO RTM */
*                                                                  0336
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ILRAIA  )                                       */
*/*%INCLUDE SYSLIB  (ILRASMVT)                                       */
*/*%INCLUDE SYSLIB  (ILRATA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (ILRIORB )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (ILRPART )                                       */
*/*%INCLUDE SYSLIB  (ILRPCCW )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (ILRSART )                                       */
*/*%INCLUDE SYSLIB  (ILRSCCW )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*                                                                  0336
*       ;                                                          0336
@DATA    DS    0H
@CH00043 DC    H'1'
@DATD    DSECT
         DS    0F
ILRCMP01 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
AVAILQP  DS    A
SAVERTN  DS    A
@TS00001 DS    CL2
         DS    CL2
SAVEREGS DS    CL72
QVWKAREA DS    CL92
SCHFLG   DS    BL1
         DS    CL3
MSGLIST  DS    CL8
         ORG   MSGLIST
MSGID    DS    FL2
MSGTYPE  DS    FL2
PSARTE   DS    AL4
         ORG   MSGLIST+8
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ILRCMP01 CSECT
         NOPR  ((@ENDDATD-@DATD)/201*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02108 DC    V(ILRMSG00)
@CV02109 DC    V(ILRVIORB)
@CV02110 DC    V(ILRVAIA)
@CV02111 DC    V(ILRVAIAQ)
@CV02112 DC    V(ILRVSCWQ)
@CV02113 DC    V(ILRVPCWQ)
         DS    0D
@CB02173 DC    B'1111111111110000'
@CB02175 DC    B'0000100001000000'
MODID    DS    CL24
         ORG   MODID
MODNAME  DC    CL8'ILRCMP  '
CSCTNAME DC    CL8'ILRCMP  '
RECVNAME DC    CL8'ILRCMP01'
         ORG   MODID+24
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
LASTPTR  EQU   @02
PCCWPTR  EQU   @02
AIAPTR   EQU   @02
ASMVTPTR EQU   @03
ATAPTR   EQU   @11
IOSBPTR  EQU   @12
SDWAPTR  EQU   @01
R0       EQU   @00
ELEMENT  EQU   @00
QANCHOR  EQU   @00
PARMPTR  EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
QVERRTNP EQU   @04
R5       EQU   @05
REPLV    EQU   @05
R6       EQU   @06
COMPV    EQU   @06
RECPTR   EQU   @06
R7       EQU   @07
QWKAREA  EQU   @08
DATARG   EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
SAVEPTR  EQU   @13
R14      EQU   @14
R15      EQU   @15
RETCODE  EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
R1       EQU   @01
R8       EQU   @08
R9       EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
AIA      EQU   0
AIAFLG1  EQU   AIA+9
AIAFLG2  EQU   AIA+10
AIAIORTY EQU   AIAFLG2
AIAFLG3  EQU   AIA+11
AIANXAIA EQU   AIA+12
AIAID    EQU   AIA+16
AIALPID  EQU   AIAID
AIALGID  EQU   AIALPID
AIALSID  EQU   AIALGID
AIASSID  EQU   AIALSID+1
AIARPN   EQU   AIALPID+4
AIALSID2 EQU   AIARPN
AIALPMEP EQU   AIALSID2
AIAGRPSZ EQU   AIA+24
AIALGE   EQU   AIAGRPSZ
ASMVT    EQU   0
ASMFLAG1 EQU   ASMVT
ASMFLAG2 EQU   ASMVT+1
ASMSART  EQU   ASMVT+4
ASMPART  EQU   ASMVT+8
ASMSTAGQ EQU   ASMVT+32
ASMPCCWQ EQU   ASMVT+64
ASMPCCWA EQU   ASMPCCWQ
ASMSRBCT EQU   ASMVT+84
ASMPSRB  EQU   ASMVT+88
ASMLSAI  EQU   ASMVT+144
ASMGOSQS EQU   ASMVT+152
ASMPCMP  EQU   ASMVT+240
ASMWKSA1 EQU   ASMVT+368
ASMWKSA2 EQU   ASMVT+448
ASMWKSA3 EQU   ASMVT+528
ASMWKSA4 EQU   ASMVT+608
ASMWKSA5 EQU   ASMVT+688
ASMPOOLS EQU   0
ASMCPAVQ EQU   ASMPOOLS+8
ASMCPRSQ EQU   ASMPOOLS+16
ATA      EQU   0
ATAMODID EQU   ATA
ATASFLGS EQU   ATA+1
ATARFLGS EQU   ATA+4
ATABADPK EQU   ATARFLGS
ATARCRSN EQU   ATA+6
ATACLEAR EQU   ATA+8
ATAIOSB  EQU   ATACLEAR
ATAPCCWQ EQU   ATACLEAR+4
ATACOMPQ EQU   ATACLEAR+8
ATACPCCW EQU   ATACLEAR+12
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IORB     EQU   0
IORFLGS  EQU   IORB+3
IORFUSE  EQU   IORFLGS
IORSWAP  EQU   IORFLGS
IORAPND  EQU   IORFLGS
IORPCCW  EQU   IORB+8
IORPARTE EQU   IORB+32
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSDIESE EQU   IOSFLB
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSCOD   EQU   IOSB+13
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00012 EQU   IOSB+20
IOSCC    EQU   @NM00012
IOSCSW   EQU   @NM00012+1
IOSTATUS EQU   IOSCSW+3
IOSSRB   EQU   IOSB+28
IOSUSE   EQU   IOSB+32
IOSIPIB  EQU   IOSB+44
IOSDIE   EQU   IOSB+68
IOSDIEFG EQU   IOSDIE
IOSVST   EQU   IOSB+76
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEK   EQU   IOSB+92
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
PART     EQU   0
PARTHDR  EQU   PART
PARTAIAE EQU   PARTHDR+12
PARTTPAR EQU   PARTHDR+24
PARTCOMQ EQU   PARTHDR+48
PARTSPLQ EQU   PARTHDR+56
PARTDUPQ EQU   PARTHDR+64
PARTLOCQ EQU   PARTHDR+72
PARTENT  EQU   0
PARELKUP EQU   PARTENT+4
PARELKFL EQU   PARELKUP
PARETYPE EQU   PARTENT+8
PAREFLG1 EQU   PARTENT+9
PAREDSBD EQU   PAREFLG1
PCCW     EQU   0
PCCWFLGS EQU   PCCW+2
PCCWPCCW EQU   PCCW+4
PCCWAIA  EQU   PCCW+8
PCCWCHHR EQU   PCCW+16
PCCWSEEK EQU   PCCW+24
PCCWSSEC EQU   PCCW+32
PCCWSRCH EQU   PCCW+40
PCCWTIC  EQU   PCCW+48
PCCWRW   EQU   PCCW+56
PCCWNOP  EQU   PCCW+64
SART     EQU   0
SARTHDR  EQU   SART
SARUSE   EQU   SARTHDR+8
SARSCCWQ EQU   SARTHDR+32
SARWAITQ EQU   SARTHDR+40
SARSRBP  EQU   SARTHDR+48
SARSRBCT EQU   SARTHDR+52
SARTE    EQU   0
SREFLG   EQU   SARTE+9
SAREPTR  EQU   0
SCCW     EQU   0
SCCWHDR  EQU   SCCW
SCCWFLAG EQU   SCCWHDR+2
SCCWSARG EQU   SCCWHDR+16
SCCWSRH  EQU   SCCWSARG+3
SCCWCCHH EQU   SCCWSRH
SCCWCCW  EQU   SCCW+88
SCCWSEEK EQU   SCCWCCW
SCCWSSEC EQU   SCCWCCW+8
SCCWSLOT EQU   SCCWCCW+16
SCCWSRCH EQU   SCCWSLOT
SCCWTIC  EQU   SCCWSLOT+8
SCCWRW   EQU   SCCWSLOT+16
SCCWLTIC EQU   SCCWCCW+304
SCCWPTR  EQU   0
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWAVRAL EQU   SDWARA
SDWADPVA EQU   SDWARA+2
SDWAURAL EQU   SDWARA+3
SDWAVRA  EQU   SDWARA+4
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBFLNK  EQU   SRB+4
SRBFLC   EQU   SRB+12
SRBEP    EQU   SRB+20
SRBPTR   EQU   0
QVERRTN  EQU   0
AVAILQ   EQU   0
RECAREA  EQU   0
RECCOD   EQU   RECAREA
RECUCB   EQU   RECAREA+1
RECSEEK  EQU   RECAREA+20
RECVST   EQU   RECAREA+28
ADATA    EQU   0
I256C    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
ASM1WKSV EQU   ASMWKSA1
ASM1RGSV EQU   ASM1WKSV
ASM1WRKA EQU   ASM1WKSV+60
ASM2WKSV EQU   ASMWKSA2
ASM2WRKA EQU   ASM2WKSV+52
ASM2FLGS EQU   ASM2WRKA+12
ASM3WKSV EQU   ASMWKSA3
ASM4WKSV EQU   ASMWKSA4
ASM4RGSV EQU   ASM4WKSV
ASM5WKSV EQU   ASMWKSA5
ASM5RGSV EQU   ASM5WKSV
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTGSMQ  EQU   CVTS01+264
CVTASMVT EQU   CVTS01+356
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IORBPTR  EQU   IOSUSE
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
PARTPTR  EQU   ASMPART
PAREPTR  EQU   IORPARTE
PSARSVTE EQU   PSARSVT
SARTPTR  EQU   ASMSART
SYSCODE  EQU   SDWACMPC
URAL     EQU   SDWAURAL
VRAL     EQU   SDWAVRAL
RUCBCSW  EQU   IOSUCB
FLC      EQU   PSA
SCCWSK   EQU   SCCWSARG
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00017 EQU   IOSPCISC+4
@NM00016 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00015 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
ASM5FLGS EQU   ASM5WKSV+64
ASM5AIA  EQU   ASM5WKSV+60
ASM5GCTR EQU   ASM5WKSV+56
ASM5SR14 EQU   ASM5WKSV+52
@NM00006 EQU   ASM5RGSV+4
ASM5RG2  EQU   ASM5RGSV
@NM00005 EQU   ASM4RGSV+4
ASM4RG2  EQU   ASM4RGSV
ASM3SR13 EQU   ASM3WKSV+28
ASM3R14B EQU   ASM3WKSV+24
ASM3R14A EQU   ASM3WKSV+20
ASM3GRPA EQU   ASM3WKSV+16
ASM3TMPA EQU   ASM3WKSV+12
ASM3PIOP EQU   ASM3WKSV+8
ASM3GENQ EQU   ASM3WKSV+4
ASM3SWPQ EQU   ASM3WKSV
ASM2SR14 EQU   ASM2WRKA+16
@NM00004 EQU   ASM2WRKA+13
ASM2WFLG EQU   ASM2FLGS
ASM2RFLG EQU   ASM2FLGS
ASM2DUPQ EQU   ASM2WRKA+8
ASM2CAQ  EQU   ASM2WRKA+4
ASM2PAQ  EQU   ASM2WRKA
ASM2RGSV EQU   ASM2WKSV
ASM1NXTA EQU   ASM1WRKA+4
ASM1ASCB EQU   ASM1WRKA
ASM1RG15 EQU   ASM1RGSV+56
@NM00003 EQU   ASM1RGSV+4
ASM1RG1  EQU   ASM1RGSV
@NM00109 EQU   SRB+40
@NM00108 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBRMTR  EQU   SRB+24
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBID    EQU   SRB
@NM00107 EQU   SDWA+512
@NM00106 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
@NM00105 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00104 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00103 EQU   SDWADDAT+3
@NM00102 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00101 EQU   SDWADDAT+1
@NM00100 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00099 EQU   SDWADUMP+2
@NM00098 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00097 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00096 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00095 EQU   SDWAACF3
@NM00094 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00093 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00092 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00091 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00090 EQU   SDWA+239
@NM00089 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00088 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00087 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00086 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00085 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00084 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00083 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00082 EQU   SDWAINC2
@NM00081 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00080 EQU   SDWAILC2
@NM00079 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00078 EQU   SDWANXT2
@NM00077 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00076 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00075 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00074 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00073 EQU   SDWAINC1
@NM00072 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00071 EQU   SDWAILC1
@NM00070 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00069 EQU   SDWANXT1
@NM00068 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00067 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00066 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00065 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00064 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00063 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00062 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00061 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00060 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
@NM00059 EQU   SCCWLTIC+4
SCCWLTAD EQU   SCCWLTIC+1
SCCWLTOP EQU   SCCWLTIC
SCCWRWCT EQU   SCCWRW+6
@NM00058 EQU   SCCWRW+5
SCCWRWFL EQU   SCCWRW+4
SCCWRWAD EQU   SCCWRW+1
SCCWRWOP EQU   SCCWRW
@NM00057 EQU   SCCWTIC+4
SCCWTIAD EQU   SCCWTIC+1
SCCWTIOP EQU   SCCWTIC
SCCWSRCT EQU   SCCWSRCH+6
@NM00056 EQU   SCCWSRCH+5
SCCWSRFL EQU   SCCWSRCH+4
SCCWSRAD EQU   SCCWSRCH+1
SCCWSROP EQU   SCCWSRCH
SCCWFLCT EQU   SCCWSSEC+4
SCCWSSAD EQU   SCCWSSEC+1
SCCWSSOP EQU   SCCWSSEC
SCCWFGCT EQU   SCCWSEEK+4
SCCWSKAD EQU   SCCWSEEK+1
SCCWSKOP EQU   SCCWSEEK
SCCWSVOA EQU   SCCWHDR+84
SCCWLCCW EQU   SCCWHDR+80
SCCWRSV1 EQU   SCCWSARG+63
SCCWR    EQU   SCCWSRH+4
SCCWHH   EQU   SCCWCCHH+2
SCCWCC   EQU   SCCWCCHH
SCCWBB   EQU   SCCWSARG+1
SCCWM    EQU   SCCWSARG
SCCWIORB EQU   SCCWHDR+12
SCCWAIA  EQU   SCCWHDR+8
SCCWSCCW EQU   SCCWHDR+4
@NM00055 EQU   SCCWHDR+3
@NM00054 EQU   SCCWFLAG
SCCWERR  EQU   SCCWFLAG
SCCWSECT EQU   SCCWHDR+1
SCCWID   EQU   SCCWHDR
SREUCB   EQU   SARTE+44
SREEDB   EQU   SARTE+40
SRESDCTE EQU   SARTE+36
SRESAT   EQU   SARTE+32
SREIORB  EQU   SARTE+28
SRERRCNT EQU   SARTE+24
SREAVLSL EQU   SARTE+20
SRETOTSL EQU   SARTE+16
SRESCCW  EQU   SARTE+12
SRENN    EQU   SARTE+10
@NM00053 EQU   SREFLG
SREFIXED EQU   SREFLG
SREDRIVE EQU   SREFLG
SREDSBD  EQU   SREFLG
SRENUSE  EQU   SREFLG
@NM00052 EQU   SARTE+8
SRELOCK  EQU   SARTE+4
SRENEXT  EQU   SARTE
SARENTS  EQU   SART+80
@NM00051 EQU   SARTHDR+60
SARSETSZ EQU   SARTHDR+56
SARWAITL EQU   SARWAITQ+4
SARWAITF EQU   SARWAITQ
SARSETCT EQU   SARTHDR+36
SARSDCT  EQU   SARTHDR+28
SARDSNL  EQU   SARTHDR+24
SARMOVNX EQU   SARTHDR+20
SARFXDNX EQU   SARTHDR+16
@NM00050 EQU   SARTHDR+12
SARSIZE  EQU   SARTHDR+4
SARID    EQU   SARTHDR
@NM00025 EQU   PCCW+72
PCCWNCT  EQU   PCCWNOP+6
PCCWNFG  EQU   PCCWNOP+4
PCCWNAD  EQU   PCCWNOP+1
PCCWN    EQU   PCCWNOP
PCCWCNT  EQU   PCCWRW+6
PCCWRWFG EQU   PCCWRW+4
PCCWADDR EQU   PCCWRW+1
PCCWRDWT EQU   PCCWRW
PCCWTCT  EQU   PCCWTIC+6
PCCWTFG  EQU   PCCWTIC+4
PCCWTAD  EQU   PCCWTIC+1
PCCWT    EQU   PCCWTIC
PCCWSICT EQU   PCCWSRCH+6
PCCWSIFG EQU   PCCWSRCH+4
PCCWSIAD EQU   PCCWSRCH+1
PCCWSIDE EQU   PCCWSRCH
PCCWSSCT EQU   PCCWSSEC+6
PCCWSSFG EQU   PCCWSSEC+4
PCCWSSAD EQU   PCCWSSEC+1
PCCWSS   EQU   PCCWSSEC
PCCWSKCT EQU   PCCWSEEK+6
PCCWSKFG EQU   PCCWSEEK+4
PCCWSKAD EQU   PCCWSEEK+1
PCCWSK   EQU   PCCWSEEK
PCCWR    EQU   PCCWCHHR+7
PCCWHH   EQU   PCCWCHHR+5
PCCWCC   EQU   PCCWCHHR+3
PCCWBB   EQU   PCCWCHHR+1
PCCWM    EQU   PCCWCHHR
PCCWIORB EQU   PCCW+12
@NM00024 EQU   PCCW+3
@NM00023 EQU   PCCWFLGS
PCCWFERR EQU   PCCWFLGS
PCCWSECT EQU   PCCW+1
PCCWID   EQU   PCCW
@NM00022 EQU   PARTENT+62
PARELCYL EQU   PARTENT+60
PARERQTM EQU   PARTENT+56
PAREWTQE EQU   PARTENT+52
PARENODE EQU   PARTENT+48
PAREUCBP EQU   PARTENT+44
PAREEDBP EQU   PARTENT+40
PAREPCTP EQU   PARTENT+36
PAREPATP EQU   PARTENT+32
PAREIORB EQU   PARTENT+28
PARERRCT EQU   PARTENT+24
PARESLTA EQU   PARTENT+20
PARESZSL EQU   PARTENT+16
PAREIOEQ EQU   PARTENT+12
PARENN   EQU   PARTENT+10
@NM00021 EQU   PAREFLG1
PAREINCP EQU   PAREFLG1
PARENUSE EQU   PAREFLG1
@NM00020 EQU   PARETYPE
PARELOCL EQU   PARETYPE
PAREDPLX EQU   PARETYPE
PARECOMM EQU   PARETYPE
PAREPLPA EQU   PARETYPE
PARECPCT EQU   PARELKUP+2
PAREIORN EQU   PARELKUP+1
@NM00019 EQU   PARELKFL
PAREFSIP EQU   PARELKFL
PAREPARE EQU   PARTENT
PARTENTS EQU   PART+80
PARTLOCL EQU   PARTLOCQ+4
PARTLOCF EQU   PARTLOCQ
PARTDUPL EQU   PARTDUPQ+4
PARTDUPF EQU   PARTDUPQ
PARTSPLL EQU   PARTSPLQ+4
PARTSPLF EQU   PARTSPLQ
PARTCOML EQU   PARTCOMQ+4
PARTCOMF EQU   PARTCOMQ
PARTLOCK EQU   PARTHDR+44
PARTLKUP EQU   PARTHDR+40
@NM00018 EQU   PARTHDR+34
PARTLCNT EQU   PARTHDR+32
PARTPCTQ EQU   PARTHDR+28
PARTDSNL EQU   PARTTPAR
PARTCIR2 EQU   PARTHDR+20
PARTCIR1 EQU   PARTHDR+16
PARTEUSE EQU   PARTHDR+8
PARTSIZE EQU   PARTHDR+4
PARTIDEN EQU   PARTHDR
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00014 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00013 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSRST   EQU   IOSB+72
IOSNOTRS EQU   IOSDIEFG
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00011 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
@NM00010 EQU   IORB+40
IORRSV   EQU   IORB+36
IORTSMP  EQU   IORB+24
IORERR   EQU   IORB+20
IORSAVE  EQU   IORB+16
IORIOSB  EQU   IORB+12
IORSCCW  EQU   IORPCCW
IORIORB  EQU   IORB+4
IORFAE   EQU   IORAPND
IORFNE   EQU   IORAPND
IORFDI   EQU   IORAPND
@NM00009 EQU   IORFLGS
IORFRPS  EQU   IORFLGS
IORRQSZ  EQU   IORB+2
IORNUM   EQU   IORB+1
IORID    EQU   IORB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00008 EQU   CVTFIX+248
@NM00007 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ATARCODE EQU   ATA+7
ATARCRF8 EQU   ATARCRSN
ATARCRF7 EQU   ATARCRSN
ATARCRF6 EQU   ATARCRSN
ATARCRF5 EQU   ATARCRSN
ATARCRF4 EQU   ATARCRSN
ATARCRF3 EQU   ATARCRSN
ATARCRF2 EQU   ATARCRSN
ATARCRF1 EQU   ATARCRSN
ATARSV2  EQU   ATARFLGS
ATASCCWP EQU   ATARFLGS
ATASGNST EQU   ATARFLGS
ATARSV1  EQU   ATASFLGS+1
ATASRT   EQU   ATASFLGS+1
ATASWPDR EQU   ATASFLGS+1
ATATRPAG EQU   ATASFLGS+1
ATASWAP  EQU   ATASFLGS+1
ATAPAGCM EQU   ATASFLGS
ATAPAGIO EQU   ATASFLGS
ATAPOS   EQU   ATASFLGS
ATAPCOMP EQU   ATASFLGS
ATAVIOCM EQU   ATASFLGS
ATASCOMP EQU   ATASFLGS
ATASLSQA EQU   ATASFLGS
ATAQIOE  EQU   ATASFLGS
ASMCPRES EQU   ASMCPRSQ+4
ASMCPTAK EQU   ASMCPRSQ
ASMCPCNT EQU   ASMCPAVQ+4
ASMCPAVL EQU   ASMCPAVQ
ASMCPEXT EQU   ASMPOOLS+6
ASMCPSIZ EQU   ASMPOOLS+4
ASMCPID  EQU   ASMPOOLS
ASMRSV12 EQU   ASMVT+1000
ASMSAVE  EQU   ASMVT+928
ASMWKSA7 EQU   ASMVT+848
ASMWKSA6 EQU   ASMVT+768
ASMACEPC EQU   ASMVT+344
ASMSWKPC EQU   ASMVT+328
ASMBWKPC EQU   ASMVT+312
ASMIOEPC EQU   ASMVT+296
ASMRSV10 EQU   ASMVT+280
ASMPVACE EQU   ASMVT+276
ASMPIOFR EQU   ASMVT+272
ASMPVACQ EQU   ASMVT+268
ASMPMSGS EQU   ASMVT+264
ASMPMSG0 EQU   ASMVT+260
ASMPFRLG EQU   ASMVT+256
ASMPRLG  EQU   ASMVT+252
ASMPACT  EQU   ASMVT+248
ASMPSAV  EQU   ASMVT+244
ASMPCMPA EQU   ASMVT+236
ASMPCMPN EQU   ASMVT+232
ASMPCMPD EQU   ASMVT+228
ASMPEX   EQU   ASMVT+224
ASMVRMTR EQU   ASMVT+220
ASMPSRBC EQU   ASMVT+216
ASMPSRMT EQU   ASMVT+212
ASMPSWPD EQU   ASMVT+208
ASMPTM   EQU   ASMVT+204
ASMPFRSW EQU   ASMVT+200
ASMPFRSL EQU   ASMVT+196
ASMPQIOE EQU   ASMVT+192
ASMRSV8  EQU   ASMVT+184
ASMTASCB EQU   ASMVT+180
ASMRLGWQ EQU   ASMVT+176
ASMRLGRQ EQU   ASMVT+172
ASMTMECB EQU   ASMVT+168
ASMTCBPT EQU   ASMVT+164
ASMREQCT EQU   ASMVT+160
ASMGOSWK EQU   ASMGOSQS+4
ASMGOSWT EQU   ASMGOSQS
ASMLSAIH EQU   ASMLSAI+4
ASMLSAIL EQU   ASMLSAI
ASMCINV  EQU   ASMVT+140
ASMSTGXA EQU   ASMVT+136
ASMLGVT  EQU   ASMVT+132
ASMSLOTV EQU   ASMVT+128
ASMERRS  EQU   ASMVT+124
ASMNVSC  EQU   ASMVT+120
ASMVSC   EQU   ASMVT+116
ASMSLOTS EQU   ASMVT+112
ASMBKSLT EQU   ASMVT+108
ASMRSV7  EQU   ASMVT+92
ASMIOCNT EQU   ASMVT+80
ASMBURST EQU   ASMVT+76
ASMPCCWN EQU   ASMVT+72
ASMPCCWC EQU   ASMPCCWQ+4
ASMRSV6  EQU   ASMVT+48
ASMIORQC EQU   ASMVT+44
ASMIORQR EQU   ASMVT+40
ASMSTAGL EQU   ASMSTAGQ+4
ASMSTAGF EQU   ASMSTAGQ
ASMRSV5  EQU   ASMVT+28
ASMMSGBF EQU   ASMVT+24
ASMEREC  EQU   ASMVT+20
ASMTRPAG EQU   ASMVT+16
ASMGOS   EQU   ASMVT+12
ASMRSV4  EQU   ASMVT+2
ASMWARM  EQU   ASMFLAG2
ASMQUICK EQU   ASMFLAG2
ASMNOTPT EQU   ASMFLAG2
ASMNOTMR EQU   ASMFLAG2
ASMNOSAV EQU   ASMFLAG2
ASMCALLQ EQU   ASMFLAG2
ASMPLPAS EQU   ASMFLAG1
ASMCOMMF EQU   ASMFLAG1
ASMPLPAF EQU   ASMFLAG1
ASMNODPX EQU   ASMFLAG1
ASMRSV1  EQU   ASMFLAG1
ASMNOLCL EQU   ASMFLAG1
ASMNOCWQ EQU   ASMFLAG1
ASMDUPLX EQU   ASMFLAG1
AIADPXCT EQU   AIALGE
AIACEPTR EQU   AIALPMEP
AIASLOT  EQU   AIASSID+1
@NM00002 EQU   AIASSID
@NM00001 EQU   AIALSID
AIARCSN  EQU   AIANXAIA+2
AIACYL   EQU   AIANXAIA
AIARSV9  EQU   AIAFLG3
AIARSV8  EQU   AIAFLG3
AIARSV7  EQU   AIAFLG3
AIALPMEC EQU   AIAFLG3
AIARSV6  EQU   AIAFLG3
AIATRPSP EQU   AIAFLG3
AIAPRINO EQU   AIAFLG3
AIARSV5  EQU   AIAFLG3
AIABADID EQU   AIAFLG2
AIAERROR EQU   AIAFLG2
AIASECER EQU   AIAFLG2
AIAPRIER EQU   AIAFLG2
AIARSV4  EQU   AIAFLG2
AIATERMR EQU   AIAFLG2
AIAFRAUX EQU   AIAFLG2
AIARSV1  EQU   AIAFLG1
AIASWPFX EQU   AIAFLG1
AIAPAGDS EQU   AIAFLG1
AIALSQA  EQU   AIAFLG1
AIADUPLX EQU   AIAFLG1
AIAVIO   EQU   AIAFLG1
AIAPRIV  EQU   AIAFLG1
AIAWRITE EQU   AIAFLG1
AIAOP    EQU   AIA+8
AIABQPA  EQU   AIA+4
AIAFQPA  EQU   AIA
@NM00049 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00048 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00047 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00046 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00045 EQU   FLCFSA
@NM00044 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00043 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00042 EQU   FLCIOA
@NM00041 EQU   FLCMCLA+15
@NM00040 EQU   FLCMCLA+14
@NM00039 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00038 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00037 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00036 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00035 EQU   FLCPER
@NM00034 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00033 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00032 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00031 EQU   FLCPIILC
@NM00030 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00029 EQU   FLCSVILC
@NM00028 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00027 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00026 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00129 EQU   EXIT
@ENDDATA EQU   *
         END   ILRCMP01,(C'PLS0910',0701,76091)
