 TITLE 'IFBSVC76 - IGC0007F - SVC 76 LOGREC RECORDER'
* /* START OF SPECIFICATIONS*******************************************
*                                                                     *
*01* MODULE-NAME - IGC0007F                                           *
*                                                                     *
*01* DESCRIPTIVE-NAME - 1.IFBSTAT 2.SYS1.LOGREC RECORDER              *
*                                                                     *
*01* COPYRIGHT -N/A                                                   *
*                                                                     *
*01* STATUS - VERSION 000 MODULE SUPPORT CODE Y02021                  *
*                                                                     *
*01* CHANGE-ACTIVITY - MODULE REPLACED COMPLETELY                     *
*                                                                     *
*02*     A - ALL NEW LINES ADDED                                      *
*                                                                     *
*02*     D - ALL PREVIOUS LINES DELETED                               *
*                                                                     *
*02*     C - NO LINES CHANGED                                         *
*                                                                     *
*                                                                     *
*01* FUNCTION - THE SYS1.LOGREC RECORDER IS THE SVC ROUTINE IFBSTAT,  *
*               INVOKED BY ISSUING SVC76. ITS FUNCTION PROVIDES A     *
*               METHOD OF RECORDING TO THE SYS1.LOGREC DATA SET.      *
*                                                                     *
* FUNCTION 1 - RECORD PREFORMATTED RECORD.                            *
*                                                                     *
*                                                                     *
* FUNCTION 2 - THIS PROVIDES A METHOD WHEREBY THE INTERNAL            *
*              STATISTICAL DATA, MAINTAINED BY THE IOS ERROR          *
*              ROUTINES, CAN BE RECORDED ON THE SYS1.LOGREC DATA SET. *
*                                                                     *
*                A.ALL STATISTICAL DATA WILL BE RECORDED ON           *
*                  THE SYS1.LOGREC DATA SET, IF THE INPUT PARA-       *
*                  METER  IS 0 (HALT - END OF DAY),OR 4(IFCEREPO)     *
*                                                                     *
*                B.EXTRACTING CVTILK2 FROM THE CVT YIELDS A LIST OF   *
*                  UCB POINTERS. EACH UCB IS ACCESSED, AND ITS        *
*                  UCBSTI FIELD MULTIPLIED BY TEN AND ADDED TO THE    *
*                  CONTENTS OF THE CVTSTB FIELD IN THE CVT. THE       *
*                  EIGHT BYTES AT THE CALCULATED FIELD ARE CHECKED    *
*                  FOR ZERO. A ZERO FIELD CAUSES NO FURTHER ACTION    *
*                  TO BE TAKEN FOR THIS STATISTICAL FIELD. A NON ZERO *
*                  FIELD IS SAVED IN GOTTEN CORE AND THE              *
*                  STATISTICAL COUNTER IS CLEARED.                    *
*                                                                     *
*                C.A. SHORT OBR RECORD IS FORMATTED TO INCLUDE THE    *
*                  STATISTICAL DATA AREA.                             *
*                                                                     *
*                D.THE SHORT OBR RECORD IS THEN WRITTEN TO THE SYS1.  *
*                  LOGREC DATA SET.  THIS PROCESS IS                  *
*                  REPEATED EACH TIME A STATISTICAL FIELD IS FOUND    *
*                  TO BE NON ZERO.                                    *
*                                                                     *
*               E.FUNCTION 3 WILL BE GIVEN CONTROL IN LINE IF IT      *
*                  IS TO BE PERFORMED. IF FUNCTION 3 IS NOT TO BE     *
*                  PERFORMED THEN EXIT IS MADE VIA REGISTER 14.       *
*                                                                     *
* FUNCTION 3 - THIS FUNCTION CAN BE EITHER EXCLUSIVE OF FUNCTION 2    *
*              IF THE INPUT PARAMETER IS 8 (IPL - VIA MASTER          *
*              SCHEDULER),OR IN ADDITION TO FUNCT. 2 IF THE INPUT     *
*              PARAMETER IS 0 (HALT - END OF DAY).                    *
*                                                                     *
*              TO CONTINUE THE IPL OR EOD RECORD PROCESSING           *
*              WHEN IT WAS DETERMINED THAT SUCH A                     *
*              RECORD WAS TO BE PLACED ON SYS1.LOGREC.                *
*                                                                     *
*                A.VIA A WTOR,INFORMATION IS GATHERED FROM            *
*                  THE OPERATOR TO ASSIST IN FORMULATING AN           *
*                  IPL RECORD. IF AN EOD IS THE TYPE REQUIRED         *
*                  CONSTRUCTION OF THE RECORD IS PERFORMED            *
*                  WITHOUT THE AID OF THE OPERATOR. THE               *
*                  OPERATOR'S REPLY TO THE SYSTEM IS CHECKED          *
*                  AND IF FOUND TO BE INVALID A MESSAGE IS            *
*                  ISSUED TO THAT EFFECT, AND THE INITIAL WTOR        *
*                  IS REISSUED.                                       *
*                                                                     *
*                B.AFTER CONSTRUCTION OF THE RECORD(EOD OR IPL)       *
*                  IS COMPLETED, CONTROL IS PASSED TO FUNCTION 1      *
*                  FOR RECORDING OF THE RECORD.                       *
*                  OF THE RECORD.                                     *
*                                                                     *
*01* NOTES -                                                          *
*                                                                     *
*02*     CHARACTER-CODE DEPENDENCIES - MUST BE REASSEMBLED IF MODE    *
*        CHANGED FROM EBCDIC.                                         *
*                                                                     *
*02*     DEPENDENCIES - N/A                                           *
*                                                                     *
*02*     RESTRICTIONS - NONE                                          *
*                                                                     *
*02*     REGISTER-CONVENTIONS - ALL REGISTERS EQUATED TO SYMBOLS      *
*        SEE REG EQUATES AT FRONT OF LISTING                          *
*        R0, R1 INPUT PARAMETER REGISTERS                             *
*        REG.2   CVT POINTER REG.                                     *
*        REG.3   BASE REG.                                            *
*        REG.4-13 WORK REGS.                                          *
*        REG.14  RETURN REG.                                          *
*        REG.15  RETURN CODE REG.                                     *
*                                                                     *
*02*     PATCH-LABEL - PTCHAREA, 10 WORDS RESERVED FOR PTCHAREA       *
*                                                                     *
*01* MODULE-TYPE - PROCEDURE,  TRANSIENT SVC                          *
*                                                                     *
*02*     PROCESSOR - ASSEMBLER XF                                     *
*                                                                     *
*02*     MODULE-SIZE - 1 PAGEABLE MODULE                              *
*                                                                     *
*02*     ATTRIBUTES - PROTECT KEY ZERO, REENTRANT                     *
*                                                                     *
*01* ENTRY-POINT - IGC0007F                                           *
*                                                                     *
*02*     PURPOSE - TO RECORD TO SYS1.LOGREC DATA SET                  *
*                                                                     *
*02*     PURPOSE - TO WRITE MESSAGES TO OPERATOR.                     *
*                                                                     *
*02*     LINKAGE - INVOKED BY ISSUING SVC 76.                         *
*                                                                     *
*02*     INPUT - PREFORMATTED SYS1.LOGREC RECORDING                   *
*        REG.0 - TWOS COMPLEMENT OF NUMBER OF BYTES TO BE RECORDED    *
*        REG.1 - ADDRESS OF DATA TO BE RECORDED                       *
*                                                                     *
*        INPUT - SYS1.LOGREC RECORDINGS FORMATTED BY SVC76            *
*              REGISTER 0= 0 - ENTRY IS VIA HALT END OF DAY           *
*              REGISTER 0= 4 - ENTRY IS VIA IFCEREPO UTILITY          *
*              REGISTER 0= 8 - ENTRY IS VIA MASTER SCHEDULER(IPL)     *
*              REGISTER 0= C - ENTRY IS FOR OUTAGE                    *
*                                                                     *
*02*     OUTPUT - INPUT TO SYS1.LOGREC DATA SET                       *
*                                                                     *
*02*     OUTPUT - MESSAGES TO OPERATOR  HH-HOUR, MM-MINUTE, SS-SECOND *
*        IFB030I SYS1.LOGREC I/O ACCESS ERROR,HH.MM.SS                *
*        IFB040I SYS1.LOGREC AREA IS FULL,HH.MM.SS                    *
*        IFB050I SYS1.LOGREC FORMAT ERROR,HH.MM.SS                    *
*        IFB060E SYS1.LOGREC NEAR FULL                                *
*                                                                     *
*02*     EXIT-NORMAL - (1) INSTRUCTION FOLLOWING THE SVC CALL         *
*        REG.15 - ZERO                                                *
*                                                                     *
*02*     EXIT-ERROR - (1) INSTRUCTION FOLLOWING THE SVC CALL          *
*        REG.15 - EIGHT   - CORE NOT AVAILABLE (NO RECORDING ATTEMPTED)
*        REG.15 - TWELVE - NO SPACE AVAILABLE (NORECORDING ATTEMPTED) *
*                        - RECORD OVERRIDE SWITCH SET            Y02021
*        REG.15 - SIXTEEN - PERM I/O ERROR                            *
*                         - FORMAT ERROR (HEADER RECORD)              *
*                                                                     *
*01* EXTERNAL-REFERENCES -                                            *
*                                                                     *
*02*     ROUTINES - SVC 00,SVC 07                                     *
*02*     ROUTINES - SVC 35                                            *
*                                                                     *
*02*     DATA-SETS - SYS1.LOGREC                                      *
*                                                                     *
*02*     DATA-AREAS - INPUT DATA AREA,CVT,LOGDCB,WORK AREA            *
*02*     DATA-AREAS - WORK AREA AQUIRED BY LOGREC RECORDER            *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*              CVTILK2 - ADDRESS OF THE TWO BYTE UCB POINTERS         *
*              CVTSTB - BASE ADDRESS VALUE OF STATISTICAL DATA        *
*              STATAB - ONE BYTE STATISTICAL DATA AREA INDEX IN UCB   *
*              CVTPTR - ADDRESS OF CVT                                *
*                                                                     *
*01* TABLES/WORK AREAS - 380 BYTES OBTAINED FROM SP-245 BY RECORDER   *
* TABLES/WORK AREAS -                                                 *
*              CVT, UCB'S, SER DCB, STATAB                            *
*                                                                     *
*                                                                     *
*01* MACROS - GETMAIN,ENQ,DEQ,FREEMAIN,WAIT                           *
*01* MACROS - TIME,FREEMAIN                                           *
*                                                                     *
**** END OF SPECIFICATIONS *********************************/
       EJECT
*                        HEADER  RECORD  AREA                         *
*       ***************************************************************
*       *              *                                *     HIGH    *
*  +0   *  F F F F     *          LOW EXTENT            *   EXTENT    *
*       *              *            (CCHH)              *      (CC)   *
*       ***************************************************************
*       * HIGH EXTENT  *       *         RECORD ENTRY AREA ADDRESS    *
*  +8   *   (CONT.)    * SPARE *                (BBCCHHR)             *
*       *    (HH)      *       *                                      *
*       ***************************************************************
*       *  REC. ENTRY  *  REMAINING     *  TOTAL BYTES  *  ADDRESS OF *
*  +16  * AREA ADDR.   *   BYTES ON     *      ON       *  LAST RECORD*
*       *    (CONT.)   *     TRACK      *    TRACK      *    WRITTEN  *
*       ***************************************************************
*       *           ADDRESS OF LAST RECORD       * TRACKS      * EARLY*
*  +24  *                WRITTEN (CONT.)         *    PER      * WARN.*
*       *                                        * CYLINDER    *  CNT.*
*       ***************************************************************
*       * EARLY * DEV- *     EARLY WARNING              * EARLY*  CK. *
*  +32  * WARN. *  ICE *               MESSAGE TRACK    * WARN.* BYTE *
*       * CNT.  * CODE *                                * SWT. * (FF) *
*       ***************************************************************
         EJECT
*                        OBR RECORD - SHORT FORM              *
*     *********************************************************
*     * REC  * OP   *                           * REC  *      *
* +0  * TYPE * SYS  *         SWITCHES          * CNT  *SPARE *
*     *      *      *                           *      *      *
*     *********************************************************
*     *                           *                           *
* +8  *           DATE            *         TIME              *
*     *                           *                           *
*     *********************************************************
*     *      *      CPU           *   MODEL     *    MAX      *
* +16 * RSVD *      SERIAL        *   NUMBER    *    MCEL     *
*     *      *      NUMBER        *             *    LENGTH   *
*     *********************************************************
*     *                           *       *                   *
* +24 *        DEVICE TYPE        *  SOR  *        CUA        *
*     *                           * COUNT *                   *
*     *********************************************************
*     *                                                       *
* +32 *               STATISTICAL  DATA  AREA   (10 BYTES)    *
*     *                                                       *
*     *********************************************************
*     *               *                                       *
* +40 *               *       (20 BYTES)                      *
*     *               *                                       *
*     *********************************************************
*     *                           *
* +48 *                           *
*     *                           *
*     *****************************
         EJECT
*                             IPL RECORD FORMAT
*     *********************************************************
*     * REC  * OP   *                           * REC  *      *
* +0  * TYPE * SYS  *         SWITCHES          * CNT  *SPARE *
*     *      *      *                           *      *      *
*     *********************************************************
*     *                           *                           *
* +8  *           DATE            *         TIME              *
*     *                           *                           *
*     *********************************************************
*     *      *      CPU           *   MODEL     *    MAX      *
* +16 * RSVD *      SERIAL        *   NUMBER    *    MCEL     *
*     *      *      NUMBER        *             *    LENGTH   *
*     *********************************************************
*     *SUB-   *  CHANNEL UNIT      *   REASON     *  CHANNEL  *
* +24 *SYSTEM *   ADDRESS OF       *    FOR       *    MAP    *
*     *  ID   *  FAILING DEVICE    *    IPL       *           *
*     *********************************************************
*     *                                                       *
* +32 *            CHANNEL    TYPE    ASSIGNMENT              *
*     *                                                       *
*     *********************************************************
*     *                            *                          *
* +40 *        HIGHEST  ADDRESS    *      EXPANSION  BYTES    *
*     *             AT  IPL        *                          *
*     *********************************************************
*     *                                                       *
* +48 *                       TIME STAMP                      *
*     *                                                       *
*     *********************************************************
         EJECT
*                             EOD RECORD FORMAT
*     *********************************************************
*     * REC  * OP   *                           * REC  *      *
* +0  * TYPE * SYS  *         SWITCHES          * CNT  *SPARE *
*     *      *      *                           *      *      *
*     *********************************************************
*     *                           *                           *
* +8  *           DATE            *         TIME              *
*     *                           *                           *
*     *********************************************************
*     *      *      CPU           *   MODEL     *    MAX      *
* +16 * RSVD *      SERIAL        *   NUMBER    *    MCEL     *
*     *      *      NUMBER        *             *    LENGTH   *
*     *********************************************************
         EJECT
*
**       THE FOLLOWING ARE REGISTER EQUATES                          **
*
ZEROREG  EQU   0                       REGISTER 0  USED IN ADDR'BILITY
R0PARM   EQU   0                       REGISTER 0
R1PARM   EQU   1                       REGISTER 1
R1LINK   EQU   1                       REGISTER 1
R2CVTBAS EQU   2                       REGISTER 2
R2WRKBAS EQU   2                       REGISTER  2 ADDR OF GOTTEN CORE
R3CBASE  EQU   3                       REGISTER 3 CSECT BASE
R4WORK   EQU   4                       REGISTER 4
R5WORK   EQU   5                       REGISTER 5
R6WORK   EQU   6                       REGISTER 6
R6LINK   EQU   6                       REGISTER  6 INTERNAL LINKAGE
R7WORK   EQU   7                       REGISTER 7
R8WORK   EQU   8                       REGISTER 8
R9WORK   EQU   9                       REGISTER 9
R9LINK   EQU   9                       REGISTER  9 INTERNAL LINKAGE
R9LOGBAS EQU   9                       REGISTER 9 LOG DSECT BASE
R10SIZE  EQU   10                      REGISTER 10 RECORD SIZE
R10WORK  EQU   10                       REGISTER 10 WORK REG     Y02021
R11CNTRL EQU   11                      REGISTER 11 CONTROL BCT LOOPS
R11RECAD EQU   11                      REGISTER 11 RECORD ADDR
R12WORK  EQU   12                      REGISTER 12 WORK REG
R12MSGCD EQU   12                      REGISTER 12 CODE PASSED TO MSG
R13RETAD EQU   13                      REGISTER 13 RETURN ADDR
R14RETRN EQU   14                      REGISTER 14 RETURN TO CALLER
R14UCBPT EQU   14                      REGISTER 14 TEMP  UCB POINTER
R15CODE  EQU   15                      REGISTER 15 CONDITION CODE
*
**       THE FOLLOWING ARE DISPLACEMENT AND LENGTH EQUATES           **
*
ZERO     EQU   0                       DIS OF ZERO
FRSTWRD  EQU   0                       FIRST FULL WORD IN A TABLE
SECDWRD  EQU   4                       SECOND FULL WORD IN A TABLE
THRDWRD  EQU   8                       THIRD  FULL WORD IN A TABLE
FORTHWRD EQU   12                      FOURTH FULL WORD IN A TABLE
RBEXSAVE EQU   96                      DIS TO SVRB EXTENSION
IOBECBPT EQU   4                       DIS TO ADDR OF ECB IN THE IOB
IOBSTART EQU   16                      DIS TO ADDR OF CHAN PGM IN IOB
IOBDCBPT EQU   20                      DIS TO ADDR OF DCB IN THE IOB
DCBDEBAD EQU   44                      DIS TO ADDR OF DEB IN THE DCB
DCBFLAG  EQU   48                      DIS TO SPECIAL FLD IN LOG DCB
EODCB    EQU   60                      DIS TO EXTENSION OF LOGREC DCB
DEBUCBAD EQU   32                      DIS TO UCB ADDR IN DEB
DEBBCH   EQU   36                      DIS TO BBCCHH OF BEGINNING OF
*                                       LOGREC DATA SET IN DEB
UCBUNTYP EQU   19                      DIS TO UNIT TYPE IN UCB
OPSYSVS  EQU   1                       DIS TO SYS REL # IN RECORD
         EJECT
ONE      EQU   1                       LENGTH OF ONE
TWO      EQU   2                       LENGTH OF 2
THREE    EQU   3                        LENGTH OF 3            @YM6452P
FOUR     EQU   4                       LENGTH OF 4
FIVE     EQU   5                        COUNT OF FIVE          @YM2951P
SIXTEEN  EQU   16                       LENGTH OF SIXTEEN        YM5198
ECBLEN   EQU   4                       LENGTH OF ECB
EIGHT    EQU   8                       LENGTH OF 8 BITS
GETTABLN EQU   16                      LENGTH OF GETMAIN TABLE
WCFLDLEN EQU   256                     LENGTH OF LOG DSECT
CHANPGLN EQU   56                      LENGTH OF CHANNEL PROGRAM
KEYDTALN EQU   3                       LENGTH OF KEYLEN & DATALEN FLDS
CCHH     EQU   4                       LENGTH OF CCHH    FIELD
CCHHR    EQU   5                       LENGTH OF CCHHR FIELD
BBCCHH   EQU   6                       LENGTH OF BBCCHH  FIELD
BBCCHHR  EQU   7                       LENGTH OF BBCCHHR FIELD
NAMELN   EQU   8                       LENGTH OF MODULE NAME
XCTLLST  EQU   16                      LENGTH OF XCTL LIST AREA
SUBPLNM  EQU   245                     SUBPOOL VALUE
HH       EQU   2                       LENGTH OF UNPACKED HOURS
MM       EQU   2                       LENGTH OF UNPACKED MINUTES
PACKTIME EQU   4                       LENGTH OF PACKED TIME - HHMMSSTH
UNPKTIME EQU   7                       LENGTH OF UNPACKED TIME -HHMMSST
HHMMSS   EQU   8                       LENGTH OF FORMATED TIME-HH.MM.SS
MSG1LEN  EQU   63                      LENGTH OF I/O ERROR MESSZ08973JW
MSG2LEN  EQU   49                      LENGTH OF LOG FULL MSG
MSG5LEN  EQU   49                      LENGTH OF FORMAT ERROR MSG
MSG6LEN  EQU   37                      LENGTH OF EARLY WARNING MSG
HDR      EQU   32                       LENGTH OF SHORT RE HDR   X03127
C8       EQU   8                                               @YL02021
C10      EQU   10                                              @YL02021
C28      EQU   28                       ENQ LIST COUNT         @YM6451P
C40      EQU   40                                              @YL02021
REC2     EQU   2                                               @YL02021
C4       EQU   4                                               @YL02021
L40      EQU   40                       LENGTH OF OUTAGE REC   @YL02021
C12      EQU   X'0C'                                           @YL02021
OUTFLAG  EQU   X'80'                                           @YL02021
OUTTYPE  EQU   X'83'                                           @YL02021
X80      EQU   X'80'                                           @YL02021
         EJECT
INCRDIS  EQU   3                       DIS TO REFRESH NUM IN CVTRELNM
RELLN    EQU   2                       LENGTH OF THE RELEASE NUMBER
WORD     EQU   4                       LENGTH OF A FULL WORD
TABENTRY EQU   3                       LENGTH OF 1 ENTRY IN THE VALID
*                                       SUB SYS ID TABLE
REPLYLEN EQU   5                       LENGTH OF REPLY FROM WTOR
REASONLN EQU   2                       LENGTH OF REASON PORTION OF REPY
IDLEN    EQU   2                       LENGTH OF SUB SYS ID IN REPLY
CHASTBLN EQU   8                       LENGTH OF CHANNEL ASSIGNMENT TAB
EODSIZE  EQU   24                      LENGTH OF AN EOD RECORD
IPLSIZE  EQU   56                                              @YL02021
ERRMSGLN EQU   40                      LENGTH OF THE INVALID REPLY MSG
IMSGSIZE EQU   54                      LENGTH OF WTOR MSG
ELEVEN   EQU   11                                               YM4105P
ONE24    EQU   124                      ADDITIONAL GETMAIN       YM5198
GETLNGTH EQU   380                      GETMAIN SIZE             YM5198
STORSIZE EQU   256                     LENGTH OF GOTTEN CORE     Y02021
NXTSTATA EQU   2                       DIS TO ADDR OF NEXT STAT TAB
*                                       SECTION
NXTUCBAD EQU   2                       DIS TO THE ADDR OF THE NEXT UCB
UCBFL5   EQU   1                       DIS TO FLAG BYTE IN UCB
SRTESTAT EQU   3                       DIS TO STATUS BYTE IN UCB
UCBSTI   EQU   9                       DIS TO INCREMENT IN UCB WHICH,
*                                       WHEN MULTI. BY 10 BECOMES INDEX
*                                       INTO STAT TAB FOR THAT DEVICE.
UCBNAME  EQU   12                      DIS TO WORD CONTAINING CUA IN
*                                       EBCDIC IN THE UCB
UCBTYP   EQU   16                      DIS TO DEVICE TYPE FIELD IN UCB
UCBDEVCL EQU   18                      DIS TO DEVICE CLASS IN UCB
DEVTPE   EQU   2                       LENGTH OF DEVICE TYPE FLD IN UCB
WORKLEN  EQU   8                       LENGTH OF WORK AREA
SDRDATA  EQU   8                       LENGTH OF COUNTERS IN A 10 BYTE
*                                       STAT TAB
SDRLEN   EQU   10                      LENGTH OF NORMAL STAT FIELD
NEWSDRDT EQU   18                      LENGTH OF STAT COUNTERS IN A
*                                       20 BYTE STAT FLD
NEWSDRLN EQU   20                      LENGTH OF A 20 BYTE STAT FIELD
BLDLST   EQU   18                      LENGTH OF BLDL LIST
RECLNW10 EQU   42                      LENGTH OF RECORD WITH A 10 BYTE
*                                       STAT FIELD
RECLNW20 EQU   52                      LENGTH OF RECORD WITH A 20 BYTE
*                                       STAT FIELD
         SPACE
**       THE FOLLOWING EQUATES ARE FOR CCW COMMANDS                  **
*
*
WRTDATA  EQU   X'05'                   WRITE DATA COMMAND CODE
READ     EQU   X'06'                   READ DATA COMM CODE
TRANCHAN EQU   X'08'                   TRANSFER IN CHANNEL COMM CODE
WRTCTKYD EQU   X'1D'                   WRITE COUNT,KEY,&DATA COMMAND
SRCHID   EQU   X'31'                   SEARCH ON ID EQUAL  COMM CODE
RECZERO  EQU   0                       SEEK ADDR OF ZERO
RECRDONE EQU   X'01'                   FIRST RECORD ON THE TRACK
LSTREC   EQU   X'FF'                   LAST RECORD ON THE TRACK
         EJECT
*
**       THE FOLLOWING EQUATES ARE FOR BIT AND MASK POSITIONS        **
*
EXTDCB   EQU   X'01'                   TEST BIT FOR EXTENDED DCB
WRTEWMSG EQU   X'01'                   BIT IN FLAGS TO WRITE EARLY WRN
IOERR    EQU   X'02'                   BIT TO SIGNIFY AN IO ACCESS ERR
BADHDR   EQU   X'04'                   BIT TO SIGNIFY HDR REC IS INVALD
EOEXTFLG EQU   X'08'                   BIT TO SIGNIFY LOGREC IS FULL
SUPINCLN EQU   X'20'                   'SILI' BIT IN CCW TO SUPRESS
*                                       INCORRECT LENGTH
VS2IND   EQU   X'80'                    VS2 RELEASE INDICATOR    Y02021
AOSFLG   EQU   X'40'                   INDICATE AOS IN REL NO.
EOFFLG   EQU   X'80'                   FLAG TO SIGNIFY THAT THE RECORD
*                                       WRITTEN IS NOT ON THE LAST TRK
*                                       OF THE DATA SET.
EWMSGISU EQU   X'80'                   BIT IN HDR TO SIGNIFY THAT THE
*                                       EARLY WARNING MSG HAS BEEN ISUD
IOBFLAG1 EQU   X'42'                   FLAGS IN IOB TO SIGNIFY COMM
*                                       CHANING AND UNRELATED RECORDS
IOBSENS1 EQU   2                        LOCATION OF SENSE BYTES
IOBSTAT1 EQU   12                       LOCATION OF STATUS BYTE
GOODHDR  EQU   X'FF'                   CONTENTS OF CHK BYT IN A GOOD HD
*
TIMEBIT  EQU   X'08'                   BIT IN RECORD TO SIGNIFY THAT
*                                       THE TIME MACRO WAS USED
IPLTYPE     EQU   X'50'                IPL RECORD TYPE
EODREC   EQU   X'80'                   EOD RECORD TYPE
OFF      EQU   X'00'                   USED TO CLEAR A BYTE
OFFENQ   EQU   X'FD'                    TURN ENQ IND OFF        YM6767P
SDR20BYT EQU   X'01'                   BIT IN STAT TO SIGNIFY THAT THIS
*                                       IS A 20 BYTE STAT TAB
UCBNEWST EQU   X'10'                   BIT IN UCB FLAG BYTE TO SIGNIFY
*                                       A NEW TYPE STATISTICS TABLE
EODSHORT EQU   X'A0'                   BITS IN UNIT CHECK RECORD TO
*                                       SIGNIFY A SHORT REC & SDR DUMP
NOCLR    EQU   X'80'                   BIT IN STAT TO SIGNIFY NOT TO
*                                       CLEAR THE OPTION BYTE(BYTE TWO)
ONLINE   EQU   X'80'                   BIT IN UCB STATUS BYTE FOR ONLIN
OBRREC   EQU   X'30'                   UNIT CHECK - OBR RECORD TYPE
NUMARC   EQU   X'F0'                   BITS TO SIGNIFY A NUMERIC DIGIT
CLRUNIT  EQU   X'F0'                   BITS TO CLEAR UNIT ADDR FROM REC
HEX13    EQU   X'13'                    MCH RE TYPE            @YM2951P
FOX      EQU   X'0F'                                            YM4105P
HEX14    EQU   X'14'                                           @YM2953P
         EJECT
**       THE FOLLOWING EQUATES ARE FOR CONDITION CODE SETTINGS       **
*
EXTENTNG EQU   X'42'                   ECB COMP CODE - NOT WITHIN EXTNT
INTCEPT  EQU   X'44'                   ECB COMP CODE - INTERCEPT
NORMAL   EQU   X'7F'                   ECB COMP CODE - NORMAL COMPLETON
WILLFIT  EQU   1                       RESULT OF SUBT WAS NOT ZERO
NOTLST   EQU   1                       REC WRITTEN WAS NOT ON LAST TRK
RUNNING  EQU   1                       CONDITION IF OBR IS RUNNING
EODS     EQU   4                       AN END OF LOGREC DATA SET COND
UNEQUAL  EQU   7                       AN UNEQUAL COMPARE
EQUAL    EQU   8                       BRANCH IF CONDITION IS EQUAL
STRNOTAV EQU   8                       COND CODE FOR STOR NOT AVAIL
ZEROLENG EQU   8
LOGFULL  EQU   0                       CODE TO MSG MOD FOR LOGREC FULL
LOGFORER EQU   4                       CODE TO MSG MOD FOR HDR REC INCR
LOGIOERR EQU   8                       CODE TO MSG MOD FOR LOGREC IO ER
LOGNRFUL EQU   12                      CODE TO MSG MOD FOR EARLY WARN
EXCP     EQU   0                       EXCP SVC NUM
GETMAIN  EQU   4                       GETMAIN SVC NUM
XCTLNO7  EQU   7                       XCTL SVC NUM
DEQUEUE  EQU   48                      DEQUEUE SVC NUM
ENQUEUE  EQU   56                      ENQUEUE SVC NUM
         EJECT
         SPACE
LOGRECFL EQU   12                      LOG FULL CONDITION CODE
IOERROR  EQU   16                      I/O ERROR CONDITION CODE
         SPACE
WTO      EQU   35                      WRITE TO OPERATOR SVC NUM
         SPACE
NXTOFF   EQU   1                       NUMBER ADDED TO STAT OFFSET TO
*                                       GET TO NEXT STAT TAB
CUANUM   EQU   3                       NUMBER OF DIGITS IN A CUA
DEVNUM   EQU   8                       NUMBER OF BFRD LOG DEVS @G30HIMD
SDRREC   EQU   4                       INPUT PARM FROM EREP
IPLREC   EQU   8                       INPUT PARM FROM SCHED FOR IPL RC
UNITS    EQU   8                       MAXIMUM NUM OF ADDRESSABLE
*                                       DRIVES ON A BANK OF 2314'S
ASPNPARM EQU   51                      PARM PASSED TO SVC91 FOR AN
*                                       ASPEN TAPE DEVICE        PT0878
EODPARM  EQU   32                      PARM PASSED TO LOAD 3(IFBSTAT1)
*                                       FOR EOD SERVICE.
IPLPARM  EQU   56                      PARM PASSED TO LOAD 3(IFBSTAT1)
*                                       FOR IPL SERVICE.
NXTSDRST EQU   256                     NUM OF BYTES IN A STAT TAB SECT
MAKBIN   EQU   9                       ADDED TO LOW ORDER 4 BITS OF AN
*                                       ALFABETIC DIGIT OF A CUA TO
*                                       MAKE A BINARY REPRESENTATION OF
*                                       THAT DIGIT.  EX. IF 9 IS ADDED
*                                       TO C1(A) IT WILL MAKE CA. THE
*                                       BINARY 'A' IS USED FOR THE
*                                       EBCDIC 'C1'.
TOEND    EQU   20                      NUM OF BITS TO MOVE A CUA FROM
*                                       THE HIGH TO THE LOW ORDER BITS
*                                       OF A REGISTER.
MINUS    EQU   4                       A MINUS CONDITION
BLDL     EQU   18                      BLDL SVC NUM
IFBSTAT  EQU   76                      LOGREC RECORDER SVC NUM
VOLSTAT  EQU   91                      READ BUFFERED LOG SVC NUM
         EJECT
U        EQU   C'U'                    DEFAULT REPLY FOR IPL MSG
DOT      EQU   C'.'                    CHARACTER TO SEPERATE HH,MM,SS
BLANK    EQU   C' '                    BLANK CHARACTER
REASONUM EQU   13                      NUM OF POSSIBLE REASON CODES
IDNUM    EQU   14                      NUM OF POSSIBLE SUB SYS ID'S
WTOR     EQU   35                      WRITE TO OPERATR W/REPLY SVC NUM
         EJECT
*
IGC0007F CSECT
         USING LOGDSECT,R9LOGBAS
LOGDSECT DSECT
WCFIELD  DS    CL2                 UNUSED
CTFIELD  DS    CL10               RECORD ENTRY TP ERROR
CTFLDID  EQU   CTFIELD            COUNT FIELD ID-CCHHR
CTFLD4D  EQU   CTFIELD+4
CTFLDKEY EQU   CTFIELD+5          COUNT FIELD KEY LENGTH
CTFLDDL  EQU   CTFIELD+6          COUNT FIELD DATA LENGTH
         DS    0H
BUFFAREA DS    CL10               27 PLANT CNTRL MPXOR
RECSIZE  EQU   BUFFAREA           SIZE OF RECORD
         DS    0D
CCWAREA  DS    CL56                CHANNEL PROGRAM
MSGAREA  EQU   CCWAREA
XCTL     EQU   CCWAREA
CCW8     EQU   CCWAREA+8
XCTLNAME EQU   XCTL+8                  NAME FIELD IN XCTL LIST
CCW16    EQU   CCWAREA+16
CCW24    EQU   CCWAREA+24
CCW32    EQU   CCWAREA+32
CCW40    EQU   CCWAREA+40
CCW44    EQU   CCWAREA+44
CCW48    EQU   CCWAREA+48
CCW54    EQU   CCWAREA+54
EWMTIME  EQU   MSGAREA+34              TIME PORTION OF EARLY WARNIG MSG
FULLTIME EQU   MSGAREA+37              TIME PORTION OF LOG FULL MSG
FORMTIME EQU   MSGAREA+37              TIME PORTION OF FORMAT ERR MSG
SENSBYT1 EQU   MSGAREA+41               SNS CHAR 1             @YM6452P
SENSBYT2 EQU   MSGAREA+42               SNS CHAR 2             @YM6452P
SENSBYT3 EQU   MSGAREA+43               SNS CHAR 3             @YM6452P
SENSBYT4 EQU   MSGAREA+44               SNS CHAR 4             @YM6452P
STATBYT1 EQU   MSGAREA+46               STATUS CHAR 1          @YM6452P
STATBYT2 EQU   MSGAREA+47               STATUS CHAR 2          @YM6452P
STATBYT3 EQU   MSGAREA+48               STATUS CHAR 3          @YM6452P
STATBYT4 EQU   MSGAREA+49               STATUS CHAR 4          @YM6452P
IOERTIME EQU   MSGAREA+51               TIME PORTION OF I/O ERR
         SPACE
         DS    CL5                      SPARE                  @YM6452P
         DS    0D
TPRIOB   DS    CL32                IOB FLAG
TIMEAREA EQU   TPRIOB                  WORK AREA FOR CONVERTING TIME
UNPKHH   EQU   TIMEAREA+3              UNPACKED HOURS - HH
UNPKMM   EQU   TIMEAREA+5              UNPACKED MINUTES - MM
UNPKSS   EQU   TIMEAREA+7              UNPACKED SECONDS - SS
UNPKTEN  EQU   TIMEAREA+9              UNPACKED TENTHS OF A SECOND - T
UNPKHUN  EQU   TIMEAREA+10             UNPACKED HUNDREDS OF A SECOND -H
FORHH    EQU   TIMEAREA+1              FORMATTED HOURS - HH
FRSTDOT  EQU   TIMEAREA+3              FIRST DELIMETER - AFTER HH
FORMM    EQU   TIMEAREA+4              FORMATTED MINUTES - MM
SECDOT   EQU   TIMEAREA+6              SECOND DELIMETER - AFTER MM
FORSS    EQU   TIMEAREA+7              FORMATTED SECONDS - SS
         SPACE
EXCPSEEK DS    CL8                SEEK ADDRESS FOR EXCP OF HD REC
SAVETIME EQU   EXCPSEEK                SAVE TIME AFTER TIME MACRO INST
EXCPSEK1 EQU   EXCPSEEK+1
EXCPSEK3 EQU   EXCPSEEK+3
EXCPSEK7 EQU   EXCPSEEK+7
INPUPARM DS    1H                       RECORD TYPE            @YM6451P
         DS    1H                       SPARE                  @YM6451P
SEEKADR  DS    CL7                BBCCHHR USED FOR RD/WR
SEEKADR2 EQU   SEEKADR+2
SEEKADR6 EQU   SEEKADR+6
FLAGS    DS    CL1                INTERNAL 27 PLANT CTRL MPXOR
HDRREC   DS    CL40                     HEADER RECORD
HDRID    EQU   HDRREC+0
LOWLIMIT EQU   HDRREC+2
UPLIMIT  EQU   HDRREC+6
TMESTMP  EQU   HDRREC+8                 OUTAGE TIME STAMP      @YM6451P
SPARE    EQU   HDRREC+10
RESTART  EQU   HDRREC+11
BYTSREM  EQU   HDRREC+18
TRKCAP   EQU   HDRREC+20
LASTTTR  EQU   HDRREC+22
LASTTR2  EQU   HDRREC+24
LASTTR4  EQU   HDRREC+26
LASTTR6  EQU   HDRREC+28
TRKSPER  EQU   HDRREC+29
TRKSPER1 EQU   HDRREC+30
EWMCNT   EQU   HDRREC+31
EWMTRK   EQU   HDRREC+34
EWMSW    EQU   HDRREC+38
SFTYBYTS EQU   HDRREC+39
         DS    0F
TPRECB   DS    CL4                 ECB FLAG
         DS    0D
SAVEREGS DS    CL48                     REGISTER SAVE AREA     @YM2951P
         DS    3F                       SPARE                  @YM6451P
RETURNAD DS    1F                       SAVE R14 AREA            Y02021
SHORTRTN DS    1F                       SHORT RE RETURN ADDR   @YM2953P
INTSW    DS    CL1                      INTERNAL SWITCH        @YM2951P
SHTSW    EQU   X'01'                    SHORT RE INDICATOR     @YM2951P
ENQIND   EQU   X'02'                    ENQUEUE IND FOR STAE     YM5198
SHTCLR   EQU   X'FE'                    CLEAR SHORT RE IND     @YM2951P
         ORG   WCFIELD                                           Y02021
CCWAREA2 DS    3D                       TO HOLD RECORD CCW'S
CONVERT  EQU   CCWAREA2                 AREA TO ISSUE CVB FROM
WTOAREA  EQU   CCWAREA2                 WTO MESSAGE AREA
WTOREPLY EQU   CCWAREA2                 TO HOLD REPLY OF WTOR
SUBIDRPL EQU   WTOREPLY+3              SUB-SYSTEM ID PORTION OF REPLY
WTORAREA EQU   CCWAREA2+8               WTOR MESSAGE AREA
WTORLGTH EQU   WTORAREA                 LENGTH OF WTOR REPLY
WTORADDR EQU   WTORAREA                 ADDR OF WTOR REPLY BUFFER
WTORECB  EQU   WTORAREA+4               ADDR OF WTOR ECB
WTORMESS EQU   WTORAREA+8               BASIC STRUCTURE OF WTOR
         DS    1D                       ALIGNMENT
WRTCCW   DS    4D                       WRITE CHANNEL COMMAND WORDS
         DS    1D                       ALIGNMENT
         SPACE
         ORG   WCFIELD+296                                     @YM2953P
RECORD   DS    8D                                              @YM2953P
CLASRC   EQU   RECORD
OPSYS    EQU   RECORD+1
SW1      EQU   RECORD+2
SW2      EQU   RECORD+3
INCREL   EQU   RECORD+5
DATE     EQU   RECORD+8
TIME     EQU   RECORD+12
CPUSER   EQU   RECORD+16
CPUSER1  EQU   RECORD+17
CPUMODEL EQU   RECORD+20
CPUID    EQU   RECORD+20
SUBSYSID EQU   RECORD+24
DEVTYP   EQU   RECORD+24
REASON   EQU   RECORD+28
SDRCNT   EQU   RECORD+28
CHANMAP  EQU   RECORD+30
CUA      EQU   RECORD+30
UCUA     EQU   RECORD+31
CHANASSN EQU   RECORD+32
SDR      EQU   RECORD+32
HIGHADDR EQU   RECORD+40
SPARE2   EQU   RECORD+44                                       @YL02021
OUTAGE   EQU   RECORD+48                                       @YL02021
OUTSAVE  EQU   RECORD+56                OUTAGE SAVE AREA         YM5198
STAELIST DS    CL16                     STAE LIST SAVE AREA      YM5198
ESTAPARM DS    CL4                      REG SAVE AREA FOR STAE   YM5198
         SPACE
WORKECB  EQU   RECORD                                           YM2958P
         ORG   WCFIELD+120                                     @YM2953P
EXSTAT   DS    6F                       ADDITIONAL STAT AREA     Y02021
         ORG   SHORTRTN+4                                      @YM2953P
         DS    0D                                              @YM2953P
WORKIOB  DS    2F                       WORK AREA              @YM6451P
ENQLSTDS DS    1F                       ENQ LIST AREA          @YM6451P
QPTR     DS    1F                       QNAME POINTER          @YM6451P
RPTR     DS    1F                       RNAME POINTER          @YM6451P
QNM      DS    2F                       QNAME AREA             @YM6451P
RNM      DS    2F                       RNAME AREA             @YM6451P
         EJECT
         USING CVTMAP,R2CVTBAS                                   Y02021
         CVT   DSECT=YES                                       @YM2951P
         EJECT
IGC0007F CSECT
         EJECT
*******************************************************************
***********************************************************************
*                                                                     *
*                                                                 *
****           LOGREC RECORDER SECTION                          YM2952P
*                                                                     *
*                                                                 *
*                                                                 *
***********************************************************************
*******************************************************************
         BALR  R3CBASE,ZEROREG         SET UP BASE REGISTER
         USING *,R3CBASE
         USING PGMCKENT,R5WORK          ESTAE BASE              YM6801P
WRTREC   L     R2CVTBAS,CVTPTR         LOAD CVT POINTER          Y02021
XWRKA    LR    R11RECAD,R1PARM         SAVE ADDR OF RECORD
         LR    R10SIZE,R0PARM          SAVE SIZE OF RECORD
*                                      NOTE: REG 5 HAS ADDR OF SVRB
*                                            UPON ENTRY TO SVC 76
         LA    R5WORK,RBEXSAVE(R5WORK) ADDR OF SVRB EXTENSION
         MVC   ZERO(GETTABLN,R5WORK),MAINTAB  MOVE GETMAIN TAB TO SVRB
         LR    R1PARM,R5WORK                  ADDR OF GETMAIN TABLE
         LA    R5WORK,FORTHWRD(R5WORK)        ADDR OF GOTTEN CORE
         ST    R5WORK,SECDWRD(R1PARM)         STORE IN TABLE
         LR    R5WORK,R1PARM                  RESTORE REG 5
         SVC   GETMAIN                        ISSUE SVC TO GET CORE
         LTR   R15CODE,R15CODE         CHK FOR SUCCESSFUL GETMAIN
         BZ    STGAVAIL                 YES,CONTINUE RECORDING
         LA    R15CODE,STRNOTAV        NO, SET CONDITION CODE
         BR    R14RETRN                RETURN TO CALLER
STGAVAIL L     R9LOGBAS,FORTHWRD(R5WORK)      SET BASE OF WORK STG
         XC    WCFIELD(WCFLDLEN),WCFIELD      CLEAR GOTTEN STORAGE
         XC    WCFIELD+STORSIZE(ONE24),WCFIELD+STORSIZE  CLEAR @YM6451P
         ST    R14RETRN,RETURNAD        SAVE RETURN ADDRESS      Y02021
         MVC   STAELIST(SIXTEEN),ESTALIST    GET LIST TO MAIN    YM5198
         LA    R5WORK,ESTAPARM          GET PARAM LIST ADDR      YM5198
         STM   R9LOGBAS,R9LOGBAS,ESTAPARM    SAVE GETMAIN PTR    YM5198
         LA    R1PARM,STAELIST          GET STAE LIST ADDR       YM5198
         L     R6WORK,PGMCKADD          GET ESTAE RTN ADDR       YM5198
         ESTAE (6),PARAM=(5),MF=(E,(1))                          YM5198
         LR    R0PARM,R10SIZE           GET RECORD SIZE          Y02021
         LR    R1PARM,R11RECAD          GET RECORD ADDR          Y02021
         LTR   R0PARM,R0PARM           TEST REG 0 FOR A MINUS
         BNM   STATUP                   NO-GO TO STAT UPDATE RTN Y02021
         SPACE 1                                               @YM2953P
*     SAVE R14 IN CASE ENTRY IS FOR A SHORT RE FROM THIS MODULE
*     INPUTS FOR SHORT OBR ARE R0 AND R1 AT THIS POINT         @YM6451P
         SPACE 1                                               @YM2953P
WRTSTAT  ST    R14RETRN,SHORTRTN        SAVE SHORT RETURN ADDR @YM2953P
         LPR   R0PARM,R0PARM            SET RE SIZE POSITIVE   @YM2953P
         LR    R10SIZE,R0PARM           GET RECORD SIZE        @YM2951P
*     GET POINTER IN R11 IN CASE OF SHORT OBR                  @YM2953P
         SPACE 1                                               @YM2953P
         LR    R11RECAD,R1PARM          GET RECORD ADDR IN REG 11
         TM    TWO(R11RECAD),TIMEBIT    TEST FOR TIME MACRO     YM4105P
         BZ    NOTIME                   NO-BRANCH AROUND        YM4105P
         OI    ELEVEN(R11RECAD),FOX     YES-PUT X'0F' IN DATE   YM4105P
NOTIME   EQU   *                                                YM4105P
         EJECT
***********************************************************************
*     THIS CODE RESOLVES ADCONS IN GETMAIN AREA AND ISSUES ENQ        *
***********************************************************************
         LA    R1PARM,ENQLSTDS          ADDR OF FIRST WORD      YM3795P
         MVC   ENQLSTDS(C28),NQCON      MOVE ENQ TO GETMAIN    @YM6451P
         LA    R8WORK,QNM               GET ADDR OF QNAME      @YM6451P
         ST    R8WORK,QPTR              POINTER IN LIST        @YM6451P
         LA    R8WORK,RNM               GET ADDR OF RNAME      @YM6451P
         ST    R8WORK,RPTR              POINTER TO LIST        @YM6451P
         SVC   ENQUEUE                       ISSUE ENQUEUE
         OI    INTSW,ENQIND             ENQUEUE INDICATED        YM5198
*
*     THIS CODE RESOLVES ABSOLUTE MEMORY ADDRESS REFERENCES
*     WHICH WILL NOT BE RESOLVED BY THE LOADER.
*
         MVC   CCWAREA(CHANPGLN),HDRCCW MOVE CHANNEL PROGRAM
         LA    R8WORK,CCWAREA          FETCH ADR OF 1ST CCW IN CHAIN
         ST    R8WORK,CCW8             STORE ADR OF 1ST CCW IN CHAIN
         MVI   CCW8,TRANCHAN           SET COMMAND CODE IN CCW
         LA    R8WORK,SEEKADR2         RESOLVE SEEK ADDR
         ST    R8WORK,CCWAREA          STORE BACK FIRST CCW
         MVI   CCWAREA,SRCHID          SET COMMAND CODE IN CCW
         LA    R8WORK,HDRREC           RESOLVE HEADER RECD ADDR
         ST    R8WORK,CCW16            STORE HEADER RECD ADDR
         MVI   CCW16,READ              SET COMMAND CODE IN CCW
         EJECT
*           PROGRAM  SETUP TO FETCH HEADER RECORD
*
         L     R5WORK,CVTDCB           LOAD ADDR OF LOGREC DCB
         ST    R5WORK,TPRIOB+IOBDCBPT  STORE DCB ADDR IN IOB
         L     R5WORK,DCBDEBAD(R5WORK) LOAD ADDR OF LOGREC DEB
         MVC   SEEKADR(BBCCHH),DEBBCH(R5WORK) MOVE BBCCHH FROM DEB
         MVI   SEEKADR6,RECRDONE       SET SEARCH FIELD ID TO ONE
*                                       FOR REWRITE OF RECORD
         LA    R6WORK,TPRECB           LOAD ECB ADDR
         ST    R6WORK,TPRIOB+IOBECBPT  STORE ECB ADDR IN IOB
         LA    R6WORK,CCWAREA          LOAD ADDR OF CCW'S
         ST    R6WORK,TPRIOB+IOBSTART  STORE ADDR OF CHANNEL PGM IN IOB
         MVI   TPRIOB,IOBFLAG1         SET FLAG1 FIELD IN IOB
         MVC   EXCPSEK1(BBCCHH),SEEKADR PLACE SEEK ADDR FOLLOWING IOB
         C     R10SIZE,OUTIND           Q/ IS IT OUTAGE REC    @YL02021
         BE    OUTROUT                  YES--BR                @YL02021
         BAL   R5WORK,ERR3B            GET HEADER RECORD
         CLI   SFTYBYTS,GOODHDR        COMPARE CHECK BYTE IN HDR TO
*                                       SEE IF THIS IS A VALID HDR REC
         BC    UNEQUAL,ERROR2          BRANCH IF NOT A GOOD HEADER REC
*
***      ROUTINE TO PICK UP BUFFER & SET UP RECORD       *****
*
         STH   R10SIZE,CCW54           STORE COUNT IN CCW
         STH   R10SIZE,CTFLDDL         SAVE RECORD SIZE
         ST    R11RECAD,CCW48          RECORD ADDR TO CCW
         EJECT
*
*
*****  ROUTINE TO DETERMINE IF ENOUGH BYTES REMAINING ON TRACK
*
         L     R5WORK,CVTDCB           LOAD ADDR OF LOGREC DCB
         L     R5WORK,DCBDEBAD(R5WORK) LOAD ADDR OF LOGREC DEB
         L     R6WORK,DEBUCBAD(R5WORK) LOAD ADDR OF LOGREC UCB FROM DEB
         SLR   R7WORK,R7WORK           CLEAR REGISTER
         IC    R7WORK,UCBUNTYP(R6WORK) EXTRACT UNIT TYPE FROM UCB
         SLL   R7WORK,ONE              MULTI. UNIT TYPE BY 2 FOR INDEX
         LH    R5WORK,SUBCONST(R7WORK) LOAD SUB CONST FOR LOGREC DEVICE
         SR    R1LINK,R1LINK            CLEAR R1               @YM8213P
         ICM   R1LINK,THREE,CTFLDDL     GET SIZE OF RECORD     @YM8213P
         AR    R5WORK,R1LINK           ADD SIZE TO CONSTANT
         CLC   UPLIMIT(CCHH),LASTTR2    LAST TRACK?             YA04218
         BNE   CAPTRK                   BR IF NOT EQUAL         YA04218
         CLI   UCBUNTYP(R6WORK),UNEQUAL  2305-II                YA04218
         BC    UNEQUAL,CAPTRK           BR IF NO                YA04218
         AH    R5WORK,SUBCONST(R7WORK)  ADD SUBTR               YA04218
         LA    R5WORK,ONE(R5WORK)            CONST              YA04218
CAPTRK   EQU   *                                                YA04218
         CH    R5WORK,TRKCAP            LENGTH EXCEED CAPACITY?
         LA    R8WORK,LOGRECFL          SET UP CODE            @YM6451P
         BH    RTRN                     YES-RETURN             @YM7630P
         MVC   EXCPSEK7(ONE),LASTTR6    SET ID IN IOB SEEK FIELD
TPR50    LH    R6WORK,BYTSREM          NO OF BYTES REMAINING ON TRACK
         SLR   R6WORK,R5WORK           SUBTRACT BYTES NEEDED FOR THIS
*                                       RECORD FROM BYTES REMAINING
         BC    WILLFIT,TPR53           BR IF REC WILL FIT ON TRACK
*
*        CODE TO CHECK IF THERE IS ANOTHER TRACK AVAIL ON THIS CYLINDER
*
         LH    R6WORK,LASTTR4          LOAD LAST USED HEAD POSITION
         AL    R6WORK,CONST1           ADD ONE TO HEAD POSITION
         SLR   R7WORK,R7WORK           CLEAR REGISTER
         IC    R7WORK,TRKSPER          INSERT FIRST BYT OF TRKS PER CYL
         SLL   R7WORK,EIGHT            SHIFT LEFT ONE BYTE
         IC    R7WORK,TRKSPER1         INSERT 2ND BYTE OF TRKS PER CYL
         CLR   R7WORK,R6WORK           COMP HD CT TO TRACKS PER CYL
         BL    TPR52                    BR IF END OF CYLINDER
*
*        CODE TO START WRITTING ON NEW TRACK
*
TPR51    STH   R6WORK,LASTTR4          UPDATE HEAD CT IN HEADER REC
         MVI   EXCPSEK7,RECZERO        SET SEEK FIELD IN IOB TO ZERO
         MVI   LASTTR6,RECZERO         SET LAST REC ENTRY ID TO ZERO
         MVC   BYTSREM(TWO),TRKCAP      SET REMG BYTES ON TRK TO MAX
         B     TPR50                    REPEAT
*
*        CODE TO START WRITTING ON A NEW CYLINDER
*
TPR52    SLR   R6WORK,R6WORK           CLEAR REG.(NEW TRACK NUM.)
         LH    R7WORK,LASTTR2          LOAD LAST USED CYLINDER POSITION
         AL    R7WORK,CONST1           ADD ONE TO UPDATE CYL COUNT
         STH   R7WORK,LASTTR2          STORE UPDATED CYLINDER COUNT
         B     TPR51                    REPEAT
         EJECT
*
*        CODE TO CHECK AND UPDATE HEADER RECORD
*
TPR53    STH   R6WORK,BYTSREM          UPDATE BYTES REMG COUNT IN HDR
         CLC   UPLIMIT(CCHH),LASTTR2   COMP CCHH WITH LST CCHH IN DS
         BC    EODS,ERROR1             CURRENT CCHH IS ABOVE EXTENT
         BC    EQUAL,HERE               BR-DONT SET HD SWITCH READ
         MVI   FLAGS,EOFFLG            SET FLAG FOR NOT LAST TRACK
HERE     SLR   R5WORK,R5WORK           CLEAR REGISTER
         IC    R5WORK,LASTTR6          LOAD ID OF LAST ID WRITTEN
         AL    R5WORK,CONST1           ADD ONE TO ID
         STC   R5WORK,LASTTR6          UPDATE LAST ID WRITTEN IN HDR
         MVC   CTFLDID(CCHHR),LASTTR2  SET UP COUNT FIELD ID FOR REC
*
***    THIS CODE RESOLVES ABSOLUTE MEMORY ADDRESS REFERENCES
*          WHICH WILL NOT BE RESOLVED BY THE LOADER
*
         LA    R1LINK,CCW24            RESOLVE ADDR OF 1ST WRT CCW
         ST    R1LINK,CCW32            STORE ADDR
         MVI   CCW32,TRANCHAN          RESTORE COMMAND CODE
         LA    R1LINK,EXCPSEK3         RESOLVE SEEK ADDR IN CCW
         ST    R1LINK,CCW24            STORE ADDR
         MVI   CCW24,SRCHID            RESTORE COMMAND CODE
         LA    R1LINK,CTFIELD          RESOLVE ADDR OF CCHHR,KEY,AND
*                                       DATA LENGTH AREA
         ST    R1LINK,CCW40            STORE ADDR
         MVI   CCW40,WRTCTKYD          RESTORE COMMAND CODE
*
****   ROUTINE TO SETUP AND WRITE THE COMPLETED RECORD ENTRY
*
         LA    R5WORK,CCW24            ADDR OF 1ST CCW IN WRITE CHAIN
         ST    R5WORK,TPRIOB+IOBSTART STORE CHAN PGM ADDR IN IOB
         MVC   EXCPSEK1(BBCCHH),LASTTTR PLACE SEEK ADDR FOLLOWING IOB
         BAL   R5WORK,ERR3B            BRANCH TO EXCP TO WRITE RECORD
         EJECT
*                                                                     *
****   ROUTINE TO SETUP AND WRITE AN END OF FILE IF THIS IS THE    ****
****     FIRST RECORD WRITTEN OR THIS RECORD WAS WRITTEN ON THE    ****
****     LAST TRACK OF THE LOGREC DATA SET                         ****
*                                                                     *
         TM    FLAGS,EOFFLG            WAS RECORD WRITTEN ON LAST TRACK
         BC    NOTLST,SWITCH           BRANCH IF RECORD WAS NOT WRITTEN
*                                       ON THE LAST TRK(HEAD SWTNG REQ)
         MVC   EXCPSEK1(BBCCHHR),LASTTTR  MOVE SEEK ADDR TO IOB
         MVI   CTFLD4D,LSTREC          SET SEARCH ID TO END OF LAST TRK
         B     WRTEOF        ...   BR TO TERMINATION
SWITCH   CLC   EXCPSEK1(BBCCHHR),RESTART  IS THIS THE FIRST RECORD
*                                          WRITTEN ON LOGREC
         BNE   EWMSG                    NO- EOF HAS BEEN WRITTEN
         XC    EXCPSEK3(CCHHR),EXCPSEK3  Y E S  CLEAR SEEK ADDR
         MVC   EXCPSEK3(CCHH),UPLIMIT  MOVE THE LAST CCHH OF THE LOGREC
*                                       DATA SET TO THE IOB SEEK FLD
         MVI   CTFLD4D,RECRDONE        SET ID TO BEGINNING OF TRACK
WRTEOF   MVC   CTFLDID(CCHH),EXCPSEK3  MOVE CCHH TO EOF RECORD
         XC    CTFLDKEY(KEYDTALN),CTFLDKEY  CLEAR RECORD COUNT FIELD
         MVI   CCW44,SUPINCLN          RESTORE 'SILI' BIT IN CCW
         BAL   R5WORK,ERR3B            BRANCH TO  EXCP TO WRITE EOF
         EJECT
*****  ROUTINE TO WRITE HEADER RECORD BACK TO SYS RES
*
EWMSG    CLI   ZERO(R11RECAD),HEX13     TEST FOR MCH RECORD    @YM2951P
         BNE   EWMSGA                   NO-BRANCH AROUND       @YM2951P
         TM    FIVE(R11RECAD),GOODHDR   TEST FOR CLOBBER BIT   @YM2951P
         LA    R15CODE,LOGRECFL         SET RETURN CODE          Y02021
         BNZ   RTRN                     YES-RETURN               Y02021
EWMSGA   TM    EWMSW,EWMSGISU           TEST FOR MSG           @YM2951P
         BO    BYEWM                    YES-BYPASS CK FOR EWM
         CLC   LASTTR2(CCHH),EWMTRK    CK IF 90% TRK HAS BEEN REACHED
         BL    BYEWM                    NO-BYPASS
         BH    WMSG                    TRK EXCEEDED GO WRT MSG
         CLC   BYTSREM(TWO),EWMCNT      CK 90% BYTE COUNT REACHED
         BH    BYEWM                    NO-BYPASS
WMSG     OI    EWMSW,EWMSGISU          SET EWM ISSUED SWITCH IN HDR
         OI    FLAGS,WRTEWMSG          SET EWM NEEDED SWITCH IN FLAGS
BYEWM    DS    0C
         MVI   CCW16,WRTDATA           CMD CODE FOR REWRITE OF HDR
         LA    R5WORK,CCWAREA          RESOLVE CCW ADDR'S
         ST    R5WORK,TPRIOB+IOBSTART  STORE CCW ADDR IN IOB
         MVC   EXCPSEK1(BBCCHHR),SEEKADR  PLACE SEEK ADDR FOLLOWING IOB
         BAL   R5WORK,ERR3B            BRANCH TO EXCP TO REWRITE HDR
         SR    R15CODE,R15CODE         SET ZERO CONDITION CODE
RTRN     LA    R1PARM,ENQLSTDS          ADDR OF FIRST WORD     @YM2951P
         SVC   DEQUEUE                       ISSUE DEQUEUE
         NI    INTSW,OFFENQ             TURN OFF ENQ IND        YM6767P
*
****   THE FOLLOWING TESTS AND BRANCHES ARE FOR EXITS REQUIRING
****     A MESSAGE TO BE WRITTEN TO THE OPERATOR CONSOLE.
*
         TM    FLAGS,EOEXTFLG          TEST FOR END OF DATA SET ERROR
         BO    ERROR1A                 BR TO SET CODE FOR ERROR MSG
         TM    FLAGS,BADHDR            TEST FOR BAD HDR REC ERROR
         BO    ERROR2A                 BR TO SET CODE FOR ERROR MSG
         TM    FLAGS,IOERR             TEST FOR AN IO ERROR
         BO    ERROR4A                 BR TO SET CODE FOR ERROR MSG
         TM    FLAGS,WRTEWMSG          TEST FOR EWM SWITCH
         BO    MSGEW                   BR TO SET CODE FOR WARNING MSG
         TM    INTSW,SHTSW              TEST FOR SHORT RE      @YM2951P
         BZ    EXIT                     NO-BRANCH              @YM2951P
         NI    INTSW,SHTCLR             YES-CLE AR SWITCH      @YM2951P
         L     R14RETRN,SHORTRTN        GET SHORT RETURN ADDR  @YM2953P
         BR    R14RETRN                 GO CHECK FOR MORE      @YM2951P
EXIT     EQU   *                                                 Y02021
OUT      SR    R8WORK,R8WORK            CLEAR CODE REG           Y02021
RTRNM    ESTAE 0                                               @ZA06003
         LR    R1PARM,R9LOGBAS                                 @ZA06003
         L     R14RETRN,RETURNAD        GET RETURN POINTER       Y02021
         FREEMAIN  R,LV=GETLNGTH,SP=SUBPLNM,A=(1)              @YM2953P
         LR    R15CODE,R8WORK           GET RETURN CODE          Y02021
         BR    R14RETRN                RETURN TO CALLER
         EJECT
*
****       EXCP AND CHECK COMPLETION  CODE IN ECB        ****
*
ERR3B    XC    TPRECB(ECBLEN),TPRECB   CLEAR ECB
         LA    R1LINK,TPRIOB           LOAD ADDR OF IOB
         SVC   EXCP                     SUPERVISOR CALL TO EXCP
         WAIT  ONE,ECB=TPRECB
         CLI   TPRECB,INTCEPT           COMP COMPLETION CODE IN ECB
         BC    EQUAL,ERR3B             BR TO TRY EXCP AGAIN
         CLI   TPRECB,NORMAL            COMPARE COMPLETION CODE IN ECB
         BCR   EQUAL,R5WORK            RETURN  IF COMPLETED OK
         CLI   TPRECB,EXTENTNG          COMP COMPLETION CODE IN ECB
         BC    EQUAL,ERROR1            BR IF NOT WITHIN EXTENT
         B     ERROR4                   BRANCH I/O FAILURE
*
***    THE FOLLOWING CODE SETS CONDITION CODES FOR THE MESSAGE MODULE
*
ERROR1A  LA    R12MSGCD,LOGFULL        SET REG 12 TO MSG CODE
         B     EXITMSG                  EXIT TO MESSAGE MODULE
ERROR2A  LA    R12MSGCD,LOGFORER       SET REG 12 TO MSG CODE
         B     EXITMSG                  EXIT TO MESSAGE MODULE
ERROR4A  LA    R12MSGCD,LOGIOERR       SET REG 12 TO MSG CODE
         B     EXITMSG                  EXIT TO MESSAGE MODULE
MSGEW    LA    R12MSGCD,LOGNRFUL       SET REG 12 TO MSG CODE
EXITMSG  L     R13RETAD,RETURNAD        GET RETURN ADDR IN 13  @YM2951P
         B     MESS                     BRANCH TO MSG FUNCTION   Y02021
*    SET UP FOR MESSAGE                                        @YM6451P
ERROR1   OI    FLAGS,EOEXTFLG          SET FLAG FOR END OF EXTENT ERROR
         B     RTRN                    BR TO DEQ
ERROR2   OI    FLAGS,BADHDR            SET FLAG FOR INCORRECT HDR REC
         B     RTRN                    BR TO DEQ
ERROR4   OI    FLAGS,IOERR             SET FLAG FOR AN IO ERROR
         B     RTRN                    BR TO DEQ
*
OUTROUT  MVI   SEEKADR6,TWO             SET TO WRITE 2ND REC   @YL02021
         MVC   HDRREC(L40),ZERO(R11RECAD) SET TO WRITE OUTAGE  @YL02021
         B     BYEWM                    BR TO WRITE RECORD     @YL02021
         EJECT
***********************************************************************
*                                                                     *
****           STATISTICS UPDATE SECTION                        YM2952P
*                                                                     *
***********************************************************************
         SPACE 2
STATUP   LR    R7WORK,R0PARM            INPUT PARM TO REG 7      Y02021
         SPACE 1
*****    SAVE  INPUT  PARAMETER  AND  TEST  SAME
*                                      NOTE: REGISTER 7 HAS THE INPUT
*                                            PARAMETER PASSED FROM
*                                            IFBSTAT UPON ENTRY.
         STH   R7WORK,INPUPARM         SAVE INPUT PARAMETER
         LTR   R7WORK,R7WORK           TEST SIGN OF INPUT PARM
         BZ    SVC76                    ENTRY WAS FOR EOD SERVICE
         CLI   INPUPARM+ONE,SDRREC     TEST IF INPUT PARM IS 4
         BE    SVC76                    ENTRY WAS FOR SDR SERVICE
         CLI   INPUPARM+ONE,IPLREC     TEST IF INPUT PARM IS 8
         BE    WTIPLEOD                 ENTRY FOR  RDE SERVICE
         CLI   INPUPARM+ONE,C12         Q/IS REQUEST FOR OUTAGE
         BE    OUTFLG                   BR TO TURN ON FLAG     @YL02021
         B     EXIT                     EXIT INPUT PARM IS WRONG
         SPACE 1
         SPACE 1
*      LOAD FIRST UCB ADDRESS FROM THE UCB ADDRESS LIST PORTION
*        OF THE UCB LOOKUP TABLE
         SPACE
SVC76    L     R4WORK,CVTILK2          LOAD ADDR OF TWO BYTE UCB PTRS
         EJECT
*****    TEST  ALL  MAIN  STORAGE  STAT  TABLES  FOR  ZERO
         SR    R5WORK,R5WORK        CLEAR REGISTER
         SPACE 1
STATLKUP ICM   R5WORK,X'3',ZERO(R4WORK) LOAD ADDR OF UCB       @ZM0949I
         LA    R4WORK,NXTUCBAD(R4WORK) UPDATE UCB ADDRESS POINTER
         BZ    STATLKUP                 BRANCH-UCB ADDR IS ZERO
         CLM   R5WORK,X'3',FOXES   TEST FOR END OF UCB ADDR LIST
         BE    WTIPLEOD             YES,BRANCH
         XR    R6WORK,R6WORK           CLEAR REGISTER
         L     R8WORK,HEX14(R5WORK)     GET UCB EXTENSION PTR  @YM5028P
         IC    R6WORK,ONE(R8WORK)       GET STATAB INDEX       @YM5028P
         SPACE
         CLC   TYASPN(DEVTPE),UCBDEVCL(R5WORK) TEST FOR ASPEN    YM3420
         BNE   TESTOAK             NO, CHK. MSS                @ZA04252
         LA    R1PARM,ASPNPARM         SET PARM FOR SVC91        PT0878
         B     ISNEWDEV                BRANCH TO READ BUF LOG    PT0878
TESTOAK  CLC   SS1(DEVTPE),UCBDEVCL(R5WORK) TEST FOR OAK       @ZA04252
         BNE   MERLZ               NO, CHK. MERLIN-ZEUS        @ZA04252
         SR    R1PARM,R1PARM       CLEAR REG 1                 @ZA04252
         ICM   R1PARM,X'3',FOXES   LOAD CODE FOR SS1           @ZA04252
         B     ISNEWDEV            GO FOR BUFFERED LOG         @ZA04252
MERLZ    LA    R10WORK,DEVNUM           NUM OF BUF LOG DEVICES   Y02021
         LA    R8WORK,NEWDEVTB         LOAD ADDR OF DEVICE TABLE
CHECKNEW CLC   ZERO(DEVTPE,R8WORK),UCBDEVCL(R5WORK)   IS THIS A BUFFERD
*                                                      LOG DEVICE
         BE    ISNEWDEV                YES BRANCH TO READ BUF LOG
         LA    R8WORK,DEVTPE(R8WORK)   LOAD ADDR OF NXT DEV TYPE CODE
         BCT   R10WORK,CHECKNEW         BRANCH IF MORE           Y02021
ALSOSDR  EQU   *                                               @SKINNER
         SPACE
         LTR   R6WORK,R6WORK            TEST FOR ZERO STATAB     YM3420
         BZ    STATLKUP                 YES-GET NEXT             YM3420
         L     R7WORK,CVTSTB           LOAD ADDR OF STAT TABS
LOOP1    CLM   R5WORK,X'3',ZERO(R7WORK)   IS DEVICE IN THIS SEC OF
*                                       STAT TAB'S
         BL    LOOP3                    OK-BRANCH                YM3420
         LA    R7WORK,NXTSTATA(R7WORK) LOAD ADDR OF THE FIRST UCB IN
*                                       THE NEXT STAT TAB SECTION
         LA    R6WORK,NXTSDRST(R6WORK) BUMP STAT TAB OFFSET PAST THIS
*                                       SECTION
         B     LOOP1                    LOOP TO CHECK THIS SECT.
         EJECT
ISNEWDEV TM    SRTESTAT(R5WORK),ONLINE IS THIS DEVICE ONLINE
         BZ    STATLKUP                NO, GO LOOK AT NEXT UCB
         LNR   R0PARM,R5WORK           PREPARE TO PASS ADDRESS OF
*                                       UCB TO SVC91
         SVC   VOLSTAT                 ISSUE VOLUME STATUS SVC
         SR    R1PARM,R1PARM           CLEAR SVC91 PARM
         CLC   UCBDEVCL(TWO,R5WORK),UR3800                     @SKINNER
         BE    ALSOSDR                                         @SKINNER
         B     STATLKUP                BRANCH TO CONTINUE STAT LOOKUP
         SPACE
LOOP3    MH    R6WORK,MULTICON          MULTIPLY BY TEN        @YM6451P
         AL    R6WORK,CVTSTB           ADD ADDR OF STAT TABS TO OFFSET
         TM    UCBFL5(R5WORK),UCBNEWST TEST FOR NEW TYPE STAT
         BO    NEWSTAT                  BR-NEWSTAT
         NC    ZERO(SDRDATA,R6WORK),ZERO(R6WORK) CHK FOR ZERO STAT FLD
         BNZ   STATMOVE                 BR-STAT FIELD NOT ZERO
*
         B     STATLKUP                 GO CHECK FOR MORE      @YM2953P
         SPACE
NEWSTAT  IC    R8WORK,ZERO(R6WORK)      GET FLAGS BYTE           X03127
         N     R8WORK,MASK              SAVE LOW ORDER COUNT     X03127
         MH    R8WORK,MULTICON          MULTIPLY BY 10           X03127
         AH    R8WORK,MULTICON          ADD 10                   X03127
         LR    R12WORK,R8WORK           SAVE COUNT               X03127
         BCTR  R8WORK,ZERO              REDUCE COUNT BY 1        X03127
         TM    ZERO(R6WORK),NOCLR       TEST CLEAR OPTION BYTE   X03127
         BO    NEWSTAT1                 ONE-DO NOT TEST BYTE 1   X03127
         NC    ONE(ONE,R6WORK),ONE(R6WORK)   CHECK FOR STAT CNT  X03127
         BNZ   NEWSTAT2                 YES-GO COMPLETE RE       X03127
NEWSTAT1 BCTR  R8WORK,ZERO              DECREMENT COUNT          X03127
         BCTR  R8WORK,ZERO              DECREMENT COUNT          X03127
         EX    R8WORK,TSTSTAT           TEST FOR ANY COUNT       X03127
         BZ    STATLKUP                 ZERO-CHECK NEXT STAT     Y02021
         LA    R8WORK,TWO(R8WORK)       BUMP COUNT TWO           X03127
NEWSTAT2 EX    R8WORK,MOVESTAT          MOVE STATS TO RE         X03127
         BCTR  R8WORK,ZERO              DECREMENT COUNT          X03127
         BCTR  R8WORK,ZERO              DECREMENT COUNT          X03127
         EX    R8WORK,CLRSTAT           CLEAR STAT ENTRY         X03127
         STC   R12WORK,SDRCNT           STORE CNT IN RECORD      X03127
         B     EODOBR                   GO COMPLETE              X03127
         SPACE
CLRSTAT  XC    TWO(ZERO,R6WORK),TWO(R6WORK)  CLEAR STATS         X03127
         SPACE
MOVESTAT MVC   SDR(ZERO),ZERO(R6WORK)   MOVE STATS TO RECORD     X03127
         SPACE
TSTSTAT  NC    TWO(ZERO,R6WORK),TWO(R6WORK)  TEST STATS          X03127
         SPACE
         EJECT
STATMOVE MVC   SDR(SDRLEN),ZERO(R6WORK) MOVE STAT COUNTERS TO RECORD
         XC    ZERO(SDRDATA,R6WORK),ZERO(R6WORK) CLR STAT COUNTERS
CNTSDR   MVI   SDRCNT,SDRLEN           SET SDR COUNT IN RECORD TO 10
EODOBR   TM    ZERO(R6WORK),NOCLR      TEST CLEAR OPTION BIT
         BO    NCLROPT                  NO-BYPASS CLR OPT BYTE
         MVI   ONE(R6WORK),OFF         CLEAR OPTION BYTE
NCLROPT  DS    0C
*****    CONSTRUCT OBR/EOD RECORD
         MVI   CLASRC,OBRREC           SET RECORD TYPE - CLASS & SOURCE
         OI    SW2,EODSHORT            SET SWITCH FIELD IN RECORD
         L     R12WORK,CVTPTR          LOAD CVT POINTER
         SH    R12WORK,CONST4          SUBTRACT TO POINT TO REL NUM
         PACK  WORKIOB(WORKLEN),ZERO(RELLN,R12WORK)  PACK RELEASE NUM
         CVB   R12WORK,WORKIOB         CONVERT REL # TO BINARY
         STC   R12WORK,OPSYS           STORE SYS REL NUM IN RECORD
         OI    OPSYS,VS2IND             INDICATE VS2           @YM6451P
         TIME  DEC                     GET TIME
         ST    R0PARM,TIME             STORE CURRENT TIME IN RECORD
         ST    R1PARM,DATE              GET DATE IN RECORD     @YM6451P
         OI    SW1,TIMEBIT              SET TIME MACRO USED    @YM6451P
         STIDP CPUSER                  STORE CPU ID IN RECORD
         MVC   DEVTYP(WORD),UCBTYP(R5WORK)  MOVE DEV TYP FLD TO RECORD
*
*      THE FOLLOWING ROUTINE EXTRACTS THE EBCDIC CUA FROM THE
*        UCB,CONVERTS IT TO BINARY, AND STORES IT IN THE RECORD
*
         LA    R11CNTRL,CUANUM         LOAD NUM OF DIGITS IN A CUA
         L     R6WORK,UCBNAME(R5WORK)   LOAD PRI CUA             Y02021
LABL1    STC   R6WORK,WORKIOB           STORE LOW ORDER BYTE     Y02021
         TM    WORKIOB,NUMARC          IS DIGIT NUMERIC
         BO    LABL2                   YES- USE LOW 4 BITS
         LA    R6WORK,MAKBIN(R6WORK)    NO-ADD 9 TO LOW ORDER   YM2952P
LABL2    SRDL  R6WORK,FOUR              SHIFT BIN DIG TO REG 7   Y02021
         SRL   R6WORK,FOUR              SHIFT OUT SIGN           Y02021
         BCT   R11CNTRL,LABL1          BRANCH IF THERE ARE MORE DIGITS
         SRL   R7WORK,TOEND             SHIFT CUA TO LOW ORDER   Y02021
         STH   R7WORK,CUA               STORE CUA IN RECORD      Y02021
         OI    INTSW,SHTSW              SET SHORT SWITCH       @YM2951P
         SPACE 1
         SR    R1PARM,R1PARM            CLEAR PARM REG           X03127
         IC    R1PARM,SDRCNT            GET STAT LENGTH          X03127
         LA    R0PARM,HDR(R1PARM)       GET RECORD COUNT         X03127
RECSET   LA    R1PARM,RECORD           LOAD ADDRESS OF RECORD
         LNR   R0PARM,R0PARM           LOAD NEG LENGTH OF RECORD
         STM   R4WORK,R15CODE,SAVEREGS  SAVE REGISTERS         @YM2951P
         BAL   R14RETRN,WRTSTAT         GO WRITE RECORD          Y02021
         LM    R4WORK,R15CODE,SAVEREGS  RESTORE REGISTERS      @YM2951P
         B     STATLKUP                 CHECK NEXT STAT          Y02021
         SPACE 2
WTIPLEOD CLI   INPUPARM+ONE,SDRREC      TEST IF INPUT PARM IS 4
         BE    EXIT                     EXIT INPUT WAS FROM EREP
         BH    FIFTY                    BR INPUT PARM IS 8 (IPL)
         MVI   INPUPARM+ONE,EODPARM    SET PARM FOR EOD SERVICE
         B     MAKEREC                  GO RECORD RECORD         Y02021
OUTFLG   OI    INPUPARM,OUTFLAG         TURN ON OUTAGE FLAG    @YL02021
         MVI   INPUPARM+ONE,EODPARM     SET PARM FOR EOD SERVICE
         XC    RECORD(C40),RECORD       CLEAR REC AREA FOR OUTAGE
         B     MAKEREC                  GO RECORD              @YL02021
FIFTY    MVI   INPUPARM+ONE,IPLPARM    SET PARM FOR IPL SERVICE
*                                                              @YM6451P
*****    TEST FOR IPL OR EOD                                   @YM6451P
*                                                              @YM6451P
IPLEOD   CLI   INPUPARM+ONE,EODPARM     IS ENTRY FOR EOD         Y02021
         BE    MAKEREC                 YES - BRANCH
         BAL   R6WORK,RDOUTREC          READ OUTAGE REC & SAVE TIME
         MVC   WRTCCW(BLDLST),RDELST    MOVE BLDL LIST           Y02021
         LA    R0PARM,WRTCCW           LOAD ADDR OF BLDL LIST
         L     R1PARM,CVTLINK          LOAD ADDR OF LINKLIB DCB
         SVC   BLDL                    ISSUE BLDL TO SEE IF 'RDE'
*                                       IS IN THE SYSTEM
         LTR   R15CODE,R15CODE         IS MODULE PRESENT
         BZ    REISSUE                  YES-GO PUT OUT MESSAGE   Y02021
         SR    R5WORK,R5WORK            CLEAR REG 5            @YM6451P
         B     REPLYOK                  GO CONSTRUCT IPL RECORD
*****    PERFORM  INFORMATION  GATHERING  ROUTINE  FOR  RECORD
         SPACE
REISSUE  MVC   WTORMESS(IMSGSIZE),INFOMSG        MOVE MESSAGE
         LA    R4WORK,WTOREPLY         LOAD ADDR OF REPLY AREA
         ST    R4WORK,WTORADDR         STORE ADDR IN WTOR STRUCTURE
         MVI   WTORLGTH,REPLYLEN       STORE LENGTH OF REPLY
         LA    R4WORK,WORKECB          LOAD ADDR OF ECB
         ST    R4WORK,WTORECB          STORE ADDR IN WTOR STRUCTURE
         XC    WORKECB,WORKECB         CLEAR ECB
         LA    R1PARM,WTORAREA         LOAD ADDR OF WTOR STRUCTURE
         SVC   WTOR                     WRITE OPERATOR WITH REPLY
         WAIT  ONE,ECB=WORKECB         WAIT FOR WTOR COMPLETION
         SPACE
         LA    R11CNTRL,REASONUM       SET UP FOR LOOP CONTROL
         LA    R5WORK,REPLYNM          LOAD ADDR OF REASON CODE TABLE
RECHECK1 CLC   WTOREPLY(REASONLN),ZERO(R5WORK)   IS THIS A VALID REPLY
         BE    SECONDHF                YES - CHECK 2ND HALF OF REPLY
         LA    R5WORK,REASONLN(R5WORK) BUMP POINTER TO NEXT VALID REPLY
         BCT   R11CNTRL,RECHECK1       BRANCH IF THERE ARE MORE
         CLI   WTOREPLY,U               DID OPERATOR REPLY 'U'
         BNE   INFORM                        NO--INFORM OPERATOR
         XC    RECORD(IPLSIZE),RECORD  YES - CLEAR RECORD AREA
         MVC   REASON(REASONLN),DEFAULT MOVE DEFAULT CODE TO RECORD
         B     CONSTHDR                      BR TO CONSTRUCT HEADER
         SPACE
*****    INFORM  OPERATOR  AND  REISSUE  WTOR  ROUTINE
INFORM   MVC   WTOAREA(ERRMSGLN),ERRMSG3         MOVE IN ERROR MESSAGE
         LA    R1PARM,WTOAREA          LOAD ADDR OF MESSAGE
         SVC   WTO                      WRITE TO OPERATOR
         B     REISSUE                  BR-TO REISSUE WTOR
         EJECT
SECONDHF LA    R11CNTRL,IDNUM          SET UP FOR LOOP CONTROL
         LA    R5WORK,REPLY00          LOAD ADDR OF VALID SUB ID TABLE
RECHECK2 CLC   SUBIDRPL(IDLEN),ZERO(R5WORK)      IS THIS A VALID REPLY
         BE    REPLYOK                  BR-TWO VALID REPLIES
         LA    R5WORK,TABENTRY(R5WORK) BUMP POINTER TO NEXT VALID SUBID
         BCT   R11CNTRL,RECHECK2       BRANCH IF THERE ARE MORE
         B     INFORM                   BR-NO MATCH ON 2ND HALF
         SPACE
*****    CONSTRUCT IPL OR EOD RECORD FOR SYS1.LOGREC
REPLYOK  XC    RECORD(IPLSIZE),RECORD  CLEAR RECORD AREA
         MVC   REASON(REASONLN),WTOREPLY MOVE IPL REASON TO RECORD
         MVC   SUBSYSID(ONE),IDLEN(R5WORK)       MOVE SUB ID TO RECORD
         B     CONSTHDR                 BR.TO CONSTRUCT HEADER
RDOUTREC MVC   CCWAREA(CHANPGLN),HDRCCW      MOVE CHAN PROGRAM @YL02021
         LA    R8WORK,CCWAREA                ADDR OF 1ST       @YL02021
         ST    R8WORK,CCW8                     CCW IN CHAIN    @YL02021
         MVI   CCW8,TRANCHAN                 SET COMMAND CODE IN CCW
         LA    R8WORK,SEEKADR2               RESOLVE SEEK ADDR @YL02021
         ST    R8WORK,CCWAREA                STORE IN 1ST CCW  @YL02021
         MVI   CCWAREA,SRCHID                SET COMMAND CODE  @YL02021
         LA    R8WORK,HDRREC                 HDR REC ADDR      @YL02021
         ST    R8WORK,CCW16                   TO CCW           @YL02021
         MVI   CCW16,READ                    SET READ OP       @YL02021
         L     R8WORK,CVTDCB                 ADDR OF SER DCB   @YL02021
         ST    R8WORK,TPRIOB+IOBDCBPT         TO IOB           @YL02021
         L     R8WORK,DCBDEBAD(R8WORK)       ADDR OF DEB       @YL02021
         MVC   SEEKADR(BBCCHH),DEBBCH(R8WORK) MOVE BBCCHH FROM DEB
         MVI   SEEKADR6,REC2                 SET SRCH ID TO 2  @YL02021
         LA    R8WORK,TPRECB                 ECB ADDR          @YL02021
         ST    R8WORK,TPRIOB+IOBECBPT         TO IOB           @YL02021
         LA    R8WORK,CCWAREA           ADDR OF CCW'S          @YL02021
         ST    R8WORK,TPRIOB+IOBSTART    TO IOB                @YL02021
         MVI   TPRIOB,IOBFLAG1          SET FLAG1 FIELD IN IOB @YL02021
         MVC   EXCPSEK1(BBCCHH),SEEKADR  SET SEEK ADDR         @YL02021
READREC  XC    TPRECB(ECBLEN),TPRECB    CLEAR ECB              @YL02021
         LA    R1LINK,TPRIOB            ADDR OF IOB            @YL02021
         SVC   EXCP                     EXCP                   @YL02021
         WAIT  ONE,ECB=TPRECB           WAIT                   @YL02021
         CLI   TPRECB,INTCEPT           Q/ INTERCEPT           @YL02021
         BE    READREC                  YES -READ AGAIN        @YL02021
         CLI    TPRECB,NORMAL           Q/ READ OK             @YL02021
         BE    MOVETIME                 YES                    @YL02021
         BR    R6WORK                   RETURN                 @YL02021
MOVETIME MVC   OUTSAVE(C8),TMESTMP      SAVE OUTAGE INFO       @YM6451P
         BR    R6WORK                   RETURN                 @YL02021
         EJECT
MAKEREC  XC    RECORD(EODSIZE),RECORD  CLEAR RECORD AREA
         SPACE
CONSTHDR STIDP CPUSER                  STORE CPU ID & MODEL IN RECORD
         SPACE
         LR    R4WORK,R2CVTBAS         LOAD ADDR OF CVT
         SH    R4WORK,CONST4           SUBTRACT TO FIND REL # ADDR
         MVC   INCREL(ONE),INCRDIS(R4WORK)       MOVE INCREMENTAL REL
*                                                 NUMBER TO RECORD
         PACK  CONVERT,ZERO(RELLN,R4WORK)        PACK REL NUM
         CVB   R4WORK,CONVERT          CONVERT REL NUM TO BINARY
         XC    CONVERT(EIGHT),CONVERT   CLEAR WORK AREA         YM2955P
         STC   R4WORK,OPSYS            STORE REL NUM IN RECORD
         OI    OPSYS,VS2IND             INDICATE VS2           @YM6451P
         SPACE
         TIME  DEC                     ISSUE TIME MACRO
         ST    R0PARM,TIME             STORE TIME OF DAY IN RECORD
         ST    R1PARM,DATE             STORE DATE IN RECORD
         OI    SW1,TIMEBIT             SET TIME MACRO USED SWITCH
         SPACE
         CLI   INPUPARM+ONE,EODPARM    IS THIS AN EOD RECORD
         BE    PREPARE                  BR-EOD IS HEADER ONLY REC
         MVC   HIGHADDR(WORD),CVTMZ00            MOVE HIGHEST STOR ADD
         SPACE
         L     R4WORK,CVTDCB            GET ADDR OF LOGREC DCB   Y02021
         SH    R4WORK,CONST8           SUB TO PTR TO CHAN ASSN TAB ADDR
         L     R4WORK,ZERO(R4WORK)     LOAD ADDR OF CHAN ASSIGNMENT TAB
         MVC   CHANASSN(CHASTBLN),ZERO(R4WORK)   MOVE CHANNEL ASSIGNMNT
*                                                 TABLE TO RECORD
         MVC   OUTAGE(C8),OUTSAVE       FETCH OUTAGE           @YM6451P
OUTON    OI    SW2,OUTFLAG              TURN ON OUTAGE IND     @YM6452P
         SPACE
         OI    CLASRC,IPLTYPE          SET RECORD TYPE - CLASS & SOUR
         LA    R0PARM,IPLSIZE          LOAD RECORD LENGTH
         B     IPL                     BRANCH TO ISSUE SVC76
         SPACE
PREPARE  OI    CLASRC,EODREC           SET RECORD TYPE - CLASS & SOURCE
         LA    R0PARM,EODSIZE          LOAD RECORD LENGTH
         SPACE
IPL      LA    R1PARM,RECORD           LOAD ADDR OF RECORD
         TM    INPUPARM,X80                  Q/ REQ TO WRITE OUTAGE
         BO    OUTAGEWT                      YES- BR           @YL02021
LOADNEG  LNR   R0PARM,R0PARM                 LOAD NEG(-) LENGTH
         B     WRTSTAT                  GO WRITE RECORD          Y02021
OUTAGEWT L     R0PARM,OUTIND            INDICATE OUTAGE        @YM6451P
         MVI   CLASRC,OUTTYPE                INDICATE OUTAGE REQUEST
         B     LOADNEG                       BR TO WRITE       @YL02021
OUTIND   DC    F'1'                                            @YL02021
         EJECT
***********************************************************************
*                                                                     *
****           MESSAGE SECTION                                  YM2952P
*                                                                     *
***********************************************************************
MESS     LR    R14RETRN,R13RETAD       LOAD RETURN ADDRESS
         TM    CVTOPTA,CVTNIP          IS NIP IN PROCESS
         BO    OUT                     YES - NO WTO'S - RETURN
         LA    R5WORK,INDEX(R12MSGCD)  SET UP REG FOR BRACH TABLE ENTRY
         BR    R5WORK                  BRANCH INTO BRANCH TABLE
         SPACE
INDEX    B     ERROR1M                  ERROR
         B     ERROR2M                   MSG
         B     ERROR4M                    BRANCH
         B     MSGEWM                      TABLE
*
*
GETIME   TIME DEC                            GET TIME
         SPACE
         ST    R0PARM,SAVETIME         SAVE TIME
         UNPK  UNPKHH(UNPKTIME),SAVETIME(PACKTIME)    UNPACK THE TIME
         SPACE
         MVC   FORHH(HH),UNPKHH        MOVE HOURS - HH
         MVI   FRSTDOT,DOT             INSERT DELIMETER AFTER HH
         SPACE
         MVC   FORMM(MM),UNPKMM        MOVE MINUTES - MM
         MVI   SECDOT,DOT              INSERT DELIMETER AFTER MM
*                                      SECONDS ARE ALREADY IN POSITION
         MVI   UNPKTEN,BLANK           BLANK OUT TENTHS OF A SECOND
         BR    R6LINK                  RETURN TO CALLING ROUTINE
*
*
ERROR1M  MVC   MSGAREA(MSG2LEN),ERRMSG2 MOVE LOG FULL MSG
         BAL   R6LINK,GETIME           BRANCH TO GET TIME
         MVC   FULLTIME(HHMMSS),FORHH  MOVE TIME TO MSG
         LA    R1PARM,MSGAREA          LOAD ADDR OF MSG
         SVC   WTO                     ISSUE WRITE TO OPERATOR
         LA    R8WORK,LOGRECFL         SAVE LOG FULL COND CODE
         B     RTRNM                   BRANCH TO FREEMAIN AND RETURN
         SPACE 2
ERROR2M  MVC   MSGAREA(MSG5LEN),ERRMSG5          MOVE FORMAT ERR MSG
         BAL   R6LINK,GETIME           BRANCH TO GET TIME
         MVC   FORMTIME(HHMMSS),FORHH  MOVE TIME TO MSG
         B     ERREXIT1                BRANCH TO WTO
         SPACE 2
ERROR4M  MVC   MSGAREA(MSG1LEN),ERRMSG1          MOVE I/O ERR MSG
         SR    R5WORK,R5WORK            CLEAR R5               @YM6452P
         LH    R5WORK,TPRIOB+IOBSENS1   LOAD SENSE BYTES       @YM6452P
         SLL   R5WORK,FOUR              SHIFT LEFT 4 BITS      @YM6452P
         STC   R5WORK,SENSBYT3          STORE CHAR             @YM6452P
         SRL   R5WORK,EIGHT             SHIFT OUT END CHAR     @YM6452P
         STC   R5WORK,SENSBYT2          STORE CHAR             @YM6452P
         SRL   R5WORK,EIGHT             SHIFT OUT END CHAR     @YM6452P
         STC   R5WORK,SENSBYT1          STORE CHAR             @YM6452P
         OI    SENSBYT3,FOX             PUT IN 'F'             @YM6452P
         UNPK  SENSBYT1(FOUR),SENSBYT1(THREE) CHG SENSE TO NOS.
         TR    SENSBYT1(FOUR),CONVT     CHANGE NOS. TO CHARS   @YM6452P
         LH    R5WORK,TPRIOB+IOBSTAT1   LOAD STATUS BYTES      @YM6452P
         SLL   R5WORK,FOUR              SHIFT LEFT 4 BITS      @YM6452P
         STC   R5WORK,STATBYT3          STORE CHAR             @YM6452P
         SRL   R5WORK,EIGHT             SHIFT OUT END CHAR     @YM6452P
         STC   R5WORK,STATBYT2          STORE                  @YM6452P
         SRL   R5WORK,EIGHT             SHIFT OUT END CHAR     @YM6452P
         STC   R5WORK,STATBYT1          STORE                  @YM6452P
         OI    STATBYT3,FOX             PUT IN 'F'             @YM6452P
         UNPK  STATBYT1(FOUR),STATBYT1(THREE) CHG STATUS TO NOS
         TR    STATBYT1(FOUR),CONVT     CHANGE TO CHAR         @YM6452P
         BAL   R6LINK,GETIME           BRANCH TO GET TIME
         MVC   IOERTIME(HHMMSS),FORHH  MOVE TIME TO MSG
         SPACE
ERREXIT1 LA    R1PARM,MSGAREA          LOAD ADDRESS OF MSG
         SVC   WTO                     ISSUE WRITE TO OPERATOR
         LA    R8WORK,IOERROR          SAVE I/O ERR COND CODE
         B     RTRNM                   BRANCH TO FREEMAIN AND RETURN
         SPACE 2
MSGEWM   MVC   MSGAREA(MSG6LEN),ERRMSG6          MOVE EARLY WARNING MSG
         LA    R1PARM,MSGAREA          LOAD ADDRESS OF MSG
         SVC   WTO                     ISSUE WRITE TO OPERATOR
         SPACE 1                                               @YM2953P
*    CLEAR WRTEWMSG FLAG TO PREVENT DUP MSG IN CASE OF SHORT RE
         SPACE 1                                               @YM2953P
         NI    FLAGS,SHTCLR             CLEAR WRTEWMSG FLAG    @YM2953P
         TM    INTSW,SHTSW              TEST FOR SHORT RE      @YM2953P
         BZ    OUT                      NO-RETURN TO CALLER    @YM2953P
         NI    INTSW,SHTCLR             CLEAR SHORT RE INDICATOR
         L     R14RETRN,SHORTRTN        GET SHORT RE RETURN ADDR
         BR    R14RETRN                 GO CHECK FOR MORE      @YM2953P
         EJECT
*
*****     CONSTANTS AND CCW'S
*
*
HDRCCW   CCW   49,0,X'40',5        SEARCH ON ID
TIC      CCW   8,0,X'40',1         TRANSFER IN CHANNEL
TIC2     CCW   6,0,X'00',40             READ HDR RECORD
         SPACE 2
WTCCW    CCW   49,0,X'40',5        SEARCH ON ID EQUAL
         CCW   8,0,X'40',1         TRANSFER IN CHANNEL
         CCW   29,0,X'80',8             WRT CKD 8 BYTES DATA CHAINED
         CCW   29,0,X'20',0        TO RECORD ENTRY
         DS    0F
CONST1   DC    XL4'1'                   CONSTANT OF ONE
SUBCONST DC    XL2'10'                  TABLE OF SUBTRACTION CONSTANTS
         DC    AL2(085)                 2311    SUBTRACT CONSTANT
         DC    AL2(133)                 2301    SUBTRACT CONSTANT
         DC    AL2(108)                 2303    SUBTRACT CONSTANT
         DC    AL2(085)                 2302    SUBTRACT CONSTANT
         DC    AL2(107)                 2321    SUBTRACT CONSTANT
         DC    AL2(432)                 2305-I  SUBTRACT CONSTANT
         DC    AL2(198)                 2305-II SUBTRACT CONSTANT
         DC    AL2(122)                 2314    SUBTRACT CONSTANT
         DC    AL2(135)                 3330    SUBTRACT CONSTANT
         DC    AL2(167)                3340    SUBTRACT CONST   XL03130
         DC    AL2(183)            3350 SUBTRACT CONST         @Z40RIVS
         DC    AL2(000)                DUMMY   SUBTRACT CONST   XL03145
         DC    AL2(135)                3330-1  SUBTRACT CONST   XL03145
NQCON     DC    X'C0084000'
         DC    2F'0'                    POINTER AREA           @YM6451P
RESID    DC    CL8'LOGREC  '
LOGREC   DC    CL8'RECORDER'
MAINTAB  DC    F'380'                   GETMAIN LENGTH           YM5198
         DC    F'0'                          ADDR OF ADDR LIST
         DC    X'20'                         E C MODE
         DC    X'F5'                         SUBPOOL VALUE  245
         DC    F'0'                          ADDR OF GOTTEN CORE
         SPACE 1
         DS    0F
MULTICON DC    H'10'                   CONSTANT WHICH IS MULTIPLIED
*                                       TO OFFSET TO BECOME INDEX TO
*                                       STAT TABS
FOXES    DC    X'FFFF'                                         @ZA04259
MASK     DC    F'15'                                             X03127
CONST4   DC    H'4'                    CONSTANT OF FOUR
         SPACE
*      THE FOLLOWING TABLE CONTAINS THE DEVICE TYPE CODES FOR THOSE
*        DEVICES HAVING BUFFERED LOGS
         SPACE
NEWDEVTB DC    X'2006'                 ZEUS MOD 1 2305-1 DEVICE
         DC    X'2007'                 ZEUS MOD 2 2305-2 DEVICE
         DC    X'2009'                 MERLIN     3330   DEVICE
         DC    X'200A'                 WINCHESTER 3340   DEVICE XL03130
         DC    X'200B'             3350 DEVICE                 @Z40RIVS
         DC    X'200D'                 ICEBERG   3330-11 DEVICE XL03145
         DC    X'0819'                 MOHAWK-3895             @G30HIMD
UR3800   DC    X'080E'                                         @SKINNER
         SPACE 1                                               @YM2953P
SS1      DC    X'0842'             MSS                         @ZA04252
         SPACE
TYASPN   DC    X'8003'                 ASPEN   3420/3410 DEVICE  PT0878
         SPACE
RECNO    DC    X'080706050403020100'    2314 PHYS CONV TABLR
RDELST   DC    H'1'
         DC    H'14'
         DC    CL8'IFCRDE03'
         DC    XL6'00'
         SPACE
         SPACE
*****    LIST  MESSAGES  TO  OPERATOR
ERRMSG3  DC    AL2(MSGEND3-*)
         DC    B'1000000000000000'      MCSFLAG FIELD
         DC    C'IFB020I INVALID REPLY TO IFB010D'
MSGEND3  EQU   *
         DC    B'0001000000000000'      DESCRIPTOR CODE
         DC    B'0100000000000000'      ROUTING CODE
INFOMSG  DC    AL2(MSGEND4-*)
         DC    B'1000000000000000'      MCSFLAG FIELD
         DC    C'IFB010D ENTER ''IPL REASON,SUBSYSTEM ID'' '
         DC    C'OR ''U'''
MSGEND4  EQU   *
         DC    B'0100000000000000'      DESCRIPTOR CODE
         DC    B'1000000000000000'      ROUTING CODE
         EJECT
* THE FOLLOWING IS A MATRIX OF VALID WTOR REASON REPLIES
REPLYNM  DC    C'NM'                    NORMAL
REPLYUN  DC    C'UN'                    UNKNOWN
REPLYIE  DC    C'IE'                    IBM HDW OR TYPE1 CODE
REPLYIM  DC    C'IM'                    SAME AS IE ACTION TAKEN
REPLYOP  DC    C'OP'                    OPERATIONAL PROBLEM
REPLYEN  DC    C'EN'                    ENVIRONMENTAL
REPLYCE  DC    C'CE'                    CE/SE HAS SYSTEM CONTROL
REPLYUP  DC    C'UP'                    USER PROGRAM
REPLYPP  DC    C'ME'                    MEDIA
         DC    X'0000000000000000'      RESERVED FOR MORE REASONS
         SPACE 2
* THE FOLLOWING IS A MATRIX OF VALID WTOR SUBSYSTEM ID  REPLIES
REPLY00  DC    C'00'                    NOT KNOWN
         DC    X'00'
REPLY10  DC    C'10'                    PROCESSOR SUBSYSTEM
         DC    X'10'
REPLY20  DC    C'20'                    DASD
         DC    X'20'
REPLY30  DC    C'30'                    DISK
         DC    X'30'
REPLY40  DC    C'40'                    TAPE
         DC    X'40'
REPLY50  DC    C'50'                    CARD MACHINE/PRINTER
         DC    X'50'
REPLY51  DC    C'51'                              AUX CARD MACH/PRINTER
         DC    X'51'
REPLY52  DC    C'52'                    PRINTER
         DC    X'52'
REPLY60  DC    C'60'                    DRUM
         DC    X'60'
REPLY70  DC    C'70'                    TELEPROCESSING
         DC    X'70'
REPLY80  DC    C'80'                    GRAPHICS
         DC    X'80'
REPLY90  DC    C'90'                    IBM PROGRAM
         DC    X'90'
REPLY91  DC    C'91'                    IBM PROGRAMING PRODUCT
         DC    X'91'
REPLY92  DC    C'92'
         DC    X'92'
         DC    X'000000000000000000'
         SPACE
DEFAULT  DC    C'DF'
         EJECT
CONST8   DC    H'8'                    CONSTANT OF 8
         SPACE
         SPACE
*
*
****     LIST MESSAGES TO OPERATOR     ****
*
ERRMSG1  DC    AL2(MSGEND1-*)
         DC    B'1000000000000000'      MCSFLAG FIELD
         DC    C'IFB030I SYS1.LOGREC I/O ACCESS '              @YM6452P
         DC    C'ERROR,SENS,STAT,HH.MM.SS'                     @YM6452P
MSGEND1  EQU   *
         DC    B'0001000000000000'      DESCRIPTOR CODE
         DC    B'1000000000000000'      ROUTING CODE
         SPACE
ERRMSG2  DC    AL2(MSGEND2-*)
         DC    B'1000000000000000'      MCSFLAG FIELD
         DC    C'IFB040I SYS1.LOGREC AREA IS FULL,HH.MM.SS'
MSGEND2  EQU   *
         DC    B'0001000000000000'      DESCRIPTOR CODE
         DC    B'1000000000000000'      ROUTING CODE
         SPACE
ERRMSG5  DC    AL2(MSGEND5-*)
         DC    B'1000000000000000'      MCSFLAG FIELD
         DC    C'IFB050I SYS1.LOGREC FORMAT ERROR,HH.MM.SS'
MSGEND5  EQU   *
         DC    B'0001000000000000'      DESCRIPTOR CODE
         DC    B'1000000000000000'      ROUTING CODE
         SPACE
ERRMSG6  DC    AL2(MSGEND6-*)
         DC    B'1000000000000000'      MCSFLAG FIELD
         DC    C'IFB060E SYS1.LOGREC NEAR FULL'
MSGEND6  EQU   *
         DC    B'0010000000000000'      DESCRIPTOR CODE
         DC    B'1000000000000000'      ROUTINE CODE
CONVT    EQU   *-C'0'                   CONVERSION TABLE ORIGIN
         DC    C'0123456789ABCDEF'      CONVERSION TABLE       @YM6452P
         EJECT
ESTALIST ESTAE MF=L                                              YM5198
PGMCKADD DC    A(PGMCKENT)              ESTAE ENTRY POINT        YM5198
*                                                              @YM6451P
*                                                              @YM6451P
****     KEEP THIS THE LAST CODE IN MODULE                     @YM6451P
*                                                              @YM6451P
*                                                              @YM6451P
****     STAE EXIT ROUTINE TO DEQUEUE AND FREE MAIN            @YM6451P
*                                                              @YM6451P
*                                                              @YM6451P
PGMCKENT LR    R5WORK,R15CODE           SET BASE                YM6801P
         C     R0PARM,STAETEST          TEST FOR WORK AREA      YM6801P
         BE    GETREGS                  NO-USE REG 2             YM5198
         L     R2CVTBAS,ZERO(R1PARM)    GET POINTER IN 2         YM5198
GETREGS  LM    R9LOGBAS,R9LOGBAS,ZERO(R2CVTBAS)   GET REGISTER   YM5198
         TM    INTSW,ENQIND             TEST FOR ENQUEUE         YM5198
         BZ    NOENQ                    NO-DO NOT DEQUEUE        YM5198
         LA    R1PARM,ENQLSTDS          ADDR OF ENQ LIST         YM5198
         SVC   DEQUEUE                  ISSUE DEQUEUE            YM5198
NOENQ    LR    R1PARM,R9LOGBAS          GET PTR TO WORK AREA     YM5198
         FREEMAIN  R,LV=GETLNGTH,SP=SUBPLNM,A=(1)                YM5198
         BR    R14RETRN                 RETURN TO RTM            YM5198
         SPACE 1                                               @YM6451P
STAETEST DC    A(12)                    STAE STORAGE TEST        YM5198
PTCHAREA DC    12F'0'                  PATCH AREA
         SPACE
         END
