         TITLE 'ISTRACCA - RAS ADD PROCEDURE'
* 5735-RC2 COPYRIGHT IBM CORP 1977
* LICENSED MATERIAL - PROGRAM PROPERTY OF IBM
* REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083
ISTRACCA CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'ISTRACCA  80.232'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         PRINT OFF
         PRINT ON
*   ISTQAPTR=CCAVPQAB;              /* OBTAIN QAB PTR FROM PLIST     */
         L     ISTQAPTR,CCAVPQAB(,CCARPLST)                        0024
*   PFXPTR=CCAVCBAD;                /* OBTAIN CB PTR FROM PLIST      */
         L     PFXPTR,CCAVCBAD(,CCARPLST)                          0025
*   RFY                                                            0026
*     CCARPLST UNRSTD;                                             0026
*   IF QABCT=0                      /* IF Q IS EMPTY                 */
*/* QUEUE EMPTY CASE                                                 */
*                                                                  0027
*     THEN                                                         0027
         LH    @07,QABCT(,ISTQAPTR)                                0027
         LTR   @07,@07                                             0027
         BNZ   @RF00027                                            0027
*     DO;                           /* ADD CB AS ONLY CB OF Q        */
*       QABFIRST=PFXPTR;            /* QABFIRST PTRS TO INPUT CB     */
         ST    PFXPTR,QABFIRST(,ISTQAPTR)                          0029
*       QABLAST=PFXPTR;             /* QABLAST PTRS TO INPUT CB      */
         ST    PFXPTR,QABLAST(,ISTQAPTR)                           0030
*       CCARBKAD=PFXPTR+QABBCKDS;   /* GET CB BCKPTR LOC             */
         LR    CCARBKAD,PFXPTR                                     0031
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0031
*       CCAVBCKP=ISTQAPTR;          /* CB BCKPTR PTS TO QAB          */
         STCM  ISTQAPTR,15,CCAVBCKP(CCARBKAD)                      0032
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET CB FWDPTR LOC             */
         LR    CCARFWAD,PFXPTR                                     0033
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0033
*       CCAVFWDP=ISTQAPTR;          /* CB FWDPTR PTS TO QAB          */
         STCM  ISTQAPTR,15,CCAVFWDP(CCARFWAD)                      0034
*     END;                                                         0035
*   ELSE                                                           0036
*CCALQNEM:                                                         0036
*     DO;                                                          0036
         B     @RC00027                                            0036
@RF00027 DS    0H                                                  0036
CCALQNEM DS    0H                                                  0037
*       IF QABFIFO='1'B             /* Q ATTRIBUTE =FIFO ?           */
*/* FIFO QUEUE CASE                                                  */
*                                                                  0037
*         THEN                                                     0037
         TM    QABFIFO(ISTQAPTR),B'00010000'                       0037
         BNO   @RF00037                                            0037
*         CCARPVCB=QABLAST;         /* SET PREVIOUS CB=LAST Q ELM    */
         L     CCARPVCB,QABLAST(,ISTQAPTR)                         0038
*       ELSE                                                       0039
*         IF QABLIFO='1'B           /* Q ATTRIBUTE =LIFO ?           */
*/* LIFO QUEUE CASE                                                  */
*                                                                  0039
*           THEN                                                   0039
         B     @RC00037                                            0039
@RF00037 TM    QABLIFO(ISTQAPTR),B'00100000'                       0039
         BNO   @RF00039                                            0039
*           CCARPVCB=ISTQAPTR;      /* SET PREVIOUS CB=QAB           */
         LR    CCARPVCB,ISTQAPTR                                   0040
*/* PRIORITY QUEUE CASE                                              */
*                                                                  0041
*         ELSE                                                     0041
*CCALPRTQ:                                                         0041
*           DO;                                                    0041
         B     @RC00039                                            0041
@RF00039 DS    0H                                                  0041
CCALPRTQ DS    0H                                                  0042
*             CCARQELM=QABFIRST;    /* GET FIRST CB                  */
*                                                                  0042
         L     CCARQELM,QABFIRST(,ISTQAPTR)                        0042
*             /*******************************************************/
*             /*                                                     */
*             /* IS INPUT CB PRIORITY GTER EXISTING PRIORITY         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0043
*             RFY                                                  0043
*               PTYDSREG RSTD;                                     0043
*CCALLOOP:                                                         0044
*             PTYDSREG=QABPTYDS+1;                                 0044
CCALLOOP LA    PTYDSREG,1                                          0044
         AH    PTYDSREG,QABPTYDS(,ISTQAPTR)                        0044
*             IF CCAVCBPA(PTYDSREG)>CCAVCBPB(PTYDSREG) THEN        0045
         LR    @09,PFXPTR                                          0045
         ALR   @09,PTYDSREG                                        0045
         BCTR  @09,0                                               0045
         LR    @07,CCARQELM                                        0045
         ALR   @07,PTYDSREG                                        0045
         BCTR  @07,0                                               0045
         CLC   CCAVCBPA(1,@09),CCAVCBPB(@07)                       0045
         BNH   @RF00045                                            0045
*               DO;                                                0046
*                 CCARBKAD=CCARQELM+QABBCKDS;/* GET BCKPTR LOC OF CB
*                                      COMPARED                      */
         LR    CCARBKAD,CCARQELM                                   0047
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0047
*                 CCARPVCB=CCAVBCKP;/* SET PREVIOUS CB=BACKPTR IN CB
*                                      COMPARED                      */
         ICM   CCARPVCB,15,CCAVBCKP(CCARBKAD)                      0048
*               END;                                               0049
*             ELSE                                                 0050
*               DO;                                                0050
         B     @RC00045                                            0050
@RF00045 DS    0H                                                  0051
*                 CCARFWAD=CCARQELM+QABFWDDS;/* GET FWD PTR LOC OF Q
*                                      ELEMENT                       */
*                                                                  0051
         LR    CCARFWAD,CCARQELM                                   0051
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0051
*                 /***************************************************/
*                 /*                                                 */
*                 /* END OF Q IF FWDPTR OF Q ELM=QAB ADDR            */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0052
*                 IF CCAVFWDP=ISTQAPTR/* END OF Q?                   */
*                   THEN                                           0052
         ICM   @09,15,CCAVFWDP(CCARFWAD)                           0052
         CR    ISTQAPTR,@09                                        0052
         BNE   @RF00052                                            0052
*                   CCARPVCB=CCARQELM;/* YES,PVCB=Q ELM              */
*                 ELSE                                             0054
*                   DO;                                            0054
         B     @RC00052                                            0054
@RF00052 DS    0H                                                  0055
*                     CCARQELM=CCAVFWDP;/* GET NEXT CB               */
         ICM   CCARQELM,15,CCAVFWDP(CCARFWAD)                      0055
*                     GOTO CCALLOOP;/* LOOP TO SEARCH Q              */
         B     CCALLOOP                                            0056
*                   END;                                           0057
*               END;                                               0058
@RC00052 DS    0H                                                  0059
*           END CCALPRTQ;           /* END OF PRTY CASE              */
@RC00045 DS    0H                                                  0060
*       CALL CCAPADCB;              /* CALL CHAIN CB ROUTINE         */
@RC00039 DS    0H                                                  0060
@RC00037 BAL   @14,CCAPADCB                                        0060
*     END CCALQNEM;                                                0061
*   QABCT=QABCT+1;                  /* INCREMENT COUNT IN QAB        */
@RC00027 LA    @09,1                                               0062
         AH    @09,QABCT(,ISTQAPTR)                                0062
         STH   @09,QABCT(,ISTQAPTR)                                0062
*   RETURN CODE(0);                 /* SET RC FOR SUCCESSFUL ADD     */
         SLR   @15,@15                                             0063
         L     @14,12(,@13)                                        0063
         LM    @00,@12,20(@13)                                     0063
         BR    @14                                                 0063
*CCAPADCB:                                                         0064
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0064
*                                                                  0064
CCAPADCB DS    0H                                                  0065
*/*                                                                  */
*/*  FUNCTION : THIS SUBROUTINE CHAINS A CONTROL BLOCK TO THE QUEUE  */
*/*                                                                  */
*/*  INPUT : R2 - POINTER TO QAB                                     */
*/*          R3 - POINTER TO CONTROL BLOCK TO BE ADDED(INPUT CB)     */
*/*          R4 - POINTER TO PREVIOUS CONTROL BLOCK                  */
*/*                                                                  */
*/*  OUTPUT : NONE                                                   */
*/*                                                                  */
*                                                                  0065
*   CCARBKAD=PFXPTR+QABBCKDS;       /* GET BCKPTR LOC OF INPUT CB    */
         LR    CCARBKAD,PFXPTR                                     0065
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0065
*   CCAVBCKP=CCARPVCB;              /* SET INPUT CB BCKPTR=PREVCB    */
         STCM  CCARPVCB,15,CCAVBCKP(CCARBKAD)                      0066
*/* IF FORWARD PTR OF PREVIOUS CB=QAB PTR,THEN PREVIOUS CB IS LAST   */
*/* CONTROL BLOCK OF QUEUE. INPUT CB IS TO BE ADDED AT BOTTOM OF Q   */
*                                                                  0067
*   CCARFWAD=CCARPVCB+QABFWDDS;     /* GET FWDPTR IN PREVIOUS CB     */
         LR    CCARFWAD,CCARPVCB                                   0067
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0067
*   IF CCAVFWDP=ISTQAPTR            /* PREVCB FWDPTR=QAB ADDR?       */
*     THEN                                                         0068
         ICM   @09,15,CCAVFWDP(CCARFWAD)                           0068
         CR    ISTQAPTR,@09                                        0068
         BNE   @RF00068                                            0068
*     QABLAST=PFXPTR;               /* YES,ADD CB AS LAST ELM        */
         ST    PFXPTR,QABLAST(,ISTQAPTR)                           0069
*   ELSE                            /* NO,IT IS NOT FIFO             */
*     DO;                                                          0070
         B     @RC00068                                            0070
@RF00068 DS    0H                                                  0071
*       CCARNXCB=CCAVFWDP;          /* NEXTCB PTR=PREVCB FWDPTR      */
         ICM   CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0071
*       CCARBKAD=CCARNXCB+QABBCKDS; /* GET NEXT CB BCKPTR LOC        */
         LR    CCARBKAD,CCARNXCB                                   0072
         AH    CCARBKAD,QABBCKDS(,ISTQAPTR)                        0072
*       CCAVBCKP=PFXPTR;            /* NEXTCB BCKPTR=INPUT CBAD      */
         STCM  PFXPTR,15,CCAVBCKP(CCARBKAD)                        0073
*     END;                                                         0074
*                                                                  0074
*/* IF PREVCB IS QAB,THEN INPUT CB IS TO BE ADDED ON TOP OF THE Q    */
*                                                                  0075
*   IF CCARPVCB=ISTQAPTR            /* PREVIOUS CB=QAB ?             */
*     THEN                          /* YES,ADD CB AS 1ST BK OF Q     */
@RC00068 CR    CCARPVCB,ISTQAPTR                                   0075
         BNE   @RF00075                                            0075
*     DO;                                                          0076
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET INPUT CB FWDPTR LOC       */
         LR    CCARFWAD,PFXPTR                                     0077
         AH    CCARFWAD,QABFWDDS(,ISTQAPTR)                        0077
*       CCAVFWDP=QABFIRST;          /* SET FWD PTR OF INPUT CB       */
         MVC   CCAVFWDP(4,CCARFWAD),QABFIRST(ISTQAPTR)             0078
*       QABFIRST=PFXPTR;            /* QABFIRST PTS TO INPUT CB      */
         ST    PFXPTR,QABFIRST(,ISTQAPTR)                          0079
*     END;                                                         0080
*   ELSE                            /* CB IS NOT ADDED ON TOP OF Q   */
*     DO;                                                          0081
         B     @RC00075                                            0081
@RF00075 DS    0H                                                  0082
*       CCARFWAD=CCARPVCB+QABFWDDS; /* GET PREVCB FWDPTR LOC         */
         LH    @09,QABFWDDS(,ISTQAPTR)                             0082
         LR    CCARFWAD,CCARPVCB                                   0082
         ALR   CCARFWAD,@09                                        0082
*       CCARNXCB=CCAVFWDP;          /* NEXT CB=PREVCB FWDPTR         */
         ICM   CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0083
*       CCAVFWDP=PFXPTR;            /* PREVCB FWD PTR=INPUT CB       */
         STCM  PFXPTR,15,CCAVFWDP(CCARFWAD)                        0084
*       CCARFWAD=PFXPTR+QABFWDDS;   /* GET INPUT CB FWDPTR LOC       */
         ALR   @09,PFXPTR                                          0085
         LR    CCARFWAD,@09                                        0085
*       CCAVFWDP=CCARNXCB;          /* NEW CB FWDPTR PTRS TO NEXT    */
         STCM  CCARNXCB,15,CCAVFWDP(CCARFWAD)                      0086
*     END;                          /* CB                            */
*   END CCAPADCB;                   /* END OF SUBROUTINE ADDCB       */
@EL00002 DS    0H                                                  0088
@EF00002 DS    0H                                                  0088
@ER00002 BR    @14                                                 0088
*   DO;                             /* TPEPILOG                      */
*     GEN(PRINT OFF);                                              0090
         PRINT OFF
*     GEN(PRINT ON);                                               0091
         PRINT ON
*   END;                            /* TPEPILOG                      */
*   END ISTRACCA;                   /* END OF ADD PROCEDURE          */
@EL00001 DS    0H                                                  0093
@EF00001 DS    0H                                                  0093
@ER00001 LM    @14,@12,12(@13)                                     0093
         BR    @14                                                 0093
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTRACCA CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTRACCA CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CCARPLST EQU   @01
ISTQAPTR EQU   @02
PFXPTR   EQU   @03
CCARPVCB EQU   @04
CCARQELM EQU   @04
PTYDSREG EQU   @08
CCARBKAD EQU   @06
CCARFWAD EQU   @06
CCARNXCB EQU   @05
ISTPFX   EQU   0
PFXID    EQU   ISTPFX
ISTQAB   EQU   0
QABCT    EQU   ISTQAB+4
QABFIRST EQU   ISTQAB+8
QABLAST  EQU   ISTQAB+12
QABATTR  EQU   ISTQAB+16
QABATTR2 EQU   QABATTR+1
QABLIFO  EQU   QABATTR2
QABFIFO  EQU   QABATTR2
QABPTYDS EQU   ISTQAB+18
QABFWDDS EQU   ISTQAB+20
QABBCKDS EQU   ISTQAB+22
CCAVPLST EQU   0
CCAVPQAB EQU   CCAVPLST
CCAVCBAD EQU   CCAVPLST+4
CCAVCBPA EQU   0
CCAVCBPB EQU   0
CCAVFWDP EQU   0
CCAVBCKP EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00006 EQU   QABATTR2
@NM00005 EQU   QABATTR2
@NM00004 EQU   QABATTR2
@NM00003 EQU   QABATTR2
QABPRTY  EQU   QABATTR2
@NM00002 EQU   QABATTR2
QABATTR1 EQU   QABATTR
@NM00001 EQU   ISTQAB+6
QABID    EQU   ISTQAB
PFXBCK   EQU   ISTPFX+12
PFXFWD   EQU   ISTPFX+8
PFXLNG   EQU   ISTPFX+5
PFXPRTY  EQU   ISTPFX+4
PFXCBID  EQU   PFXID
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00075 EQU   @EL00002
@ENDDATA EQU   *
         END   ISTRACCA,(C'PLS2123',0702,80232)
