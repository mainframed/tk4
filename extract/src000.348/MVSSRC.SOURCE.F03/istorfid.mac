         TITLE 'SMS SET TASKID ROUTINE - ISTORAID(OS/VS1), ISTORFID(OS/*
               VS2)'
ISTORFID CSECT ,                                                   0001
@PROLOG  BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
         PRINT OFF
         PRINT ON
*          R4BUFPX=R2BUFPTR-8;       /* BACK UP BUFF PTR TO PREFIX   */
         LR    R4BUFPX,R2BUFPTR                                    0022
         SL    R4BUFPX,@CF00047                                    0022
*          R5TASKID=R0MASK & ADDRMASK;                             0023
         LR    R5TASKID,R0MASK                                     0023
         N     R5TASKID,@CF00091                                   0023
*          DO WHILE(R4BUFPX^=0);     /* LOOP TILL END OF BUFF CAHIN  */
         B     @DE00024                                            0024
@DL00024 DS    0H                                                  0025
*                                    /* SET TASKID IN PREFIX         */
*            BFPTSKID=(BFPTSKID & HIGHBYTE) × R5TASKID;            0025
         L     @15,BFPTSKID(,R4BUFPX)                              0025
         N     @15,@CF00089                                        0025
         OR    @15,R5TASKID                                        0025
         ST    @15,BFPTSKID(,R4BUFPX)                              0025
*            R6NXCHN=BFPNXCHN;                                     0026
         L     R6NXCHN,BFPNXCHN(,R4BUFPX)                          0026
*            IF BFPCBID=ON ×         /* THIS A CBID BUFF OR AT       */
*               R6NXCHN=0            /*     END OF BUFFER CHAIN      */
*            THEN                    /* YES */                     0027
         TM    BFPCBID(R4BUFPX),B'10000000'                        0027
         BO    @RT00027                                            0027
         LTR   R6NXCHN,R6NXCHN                                     0027
         BNZ   @RF00027                                            0027
@RT00027 DS    0H                                                  0028
*              R4BUFPX=0;            /* TERMINATE DO WHILE LOOP      */
         SLR   R4BUFPX,R4BUFPX                                     0028
*            ELSE                    /* NO  */                     0029
*              R4BUFPX=R6NXCHN-8;    /* POINT TO NEXT PREFIX AREA    */
         B     @RC00027                                            0029
@RF00027 LR    R4BUFPX,R6NXCHN                                     0029
         SL    R4BUFPX,@CF00047                                    0029
*          END;                                                    0030
@RC00027 DS    0H                                                  0030
@DE00024 LTR   R4BUFPX,R4BUFPX                                     0030
         BNZ   @DL00024                                            0030
*          RETURN;                                                 0031
*                                                                  0031
@EL00001 DS    0H                                                  0031
@EF00001 DS    0H                                                  0031
@ER00001 BR    @14                                                 0031
* GEN(DC C'END ISTORFID  80.241');                                 0032
*                                                                  0032
         DC C'END ISTORFID  80.241'
*           DO; /* TPEPILOG   */                                   0033
*                                                                  0034
*           GEN (PRINT OFF);                                       0034
         PRINT OFF
*           GEN (PRINT ON);                                        0035
         PRINT ON
*           END;/* TPEPILOG */                                     0036
*          END ISTORFID;                                           0037
         B     @EL00001                                            0037
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTORFID CSECT
         DS    0F
@CF00047 DC    F'8'
@CF00089 DC    XL4'FF000000'
@CF00091 DC    XL4'00FFFFFF'
@DATD    DSECT
         DS    0D
BFPFXPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTORFID CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0MASK   EQU   @00
R1       EQU   @01
R2BUFPTR EQU   @02
R3       EQU   @03
R4BUFPX  EQU   @04
R5TASKID EQU   @05
R6NXCHN  EQU   @06
R9BASE   EQU   @09
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
ISTBFPFX EQU   0
BFPTSKID EQU   ISTBFPFX
BFPFLAG  EQU   BFPTSKID
BFPPSTID EQU   BFPTSKID+1
BFPPCBA  EQU   ISTBFPFX+4
BFPCBID  EQU   BFPPCBA
BFPBPCB  EQU   BFPPCBA+1
BFPNXCHN EQU   ISTBFPFX+8
BFPDATA  EQU   ISTBFPFX+16
BFPREGSA EQU   BFPDATA
BFPR5SA  EQU   BFPREGSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
BFPRDSA  EQU   BFPREGSA+32
BFPRCSA  EQU   BFPREGSA+28
BFPRBSA  EQU   BFPREGSA+24
BFPRASA  EQU   BFPREGSA+20
BFPR9SA  EQU   BFPREGSA+16
BFPR8SA  EQU   BFPREGSA+12
BFPR7SA  EQU   BFPREGSA+8
BFPR6SA  EQU   BFPREGSA+4
BFPPMDSB EQU   BFPR5SA
BFPPMCHN EQU   BFPR5SA
BFPPMCLR EQU   BFPR5SA
BFPUSED  EQU   ISTBFPFX+14
BFPSIZE  EQU   ISTBFPFX+12
BFPPXB   EQU   BFPBPCB
@NM00002 EQU   BFPPCBA
BFPEXT   EQU   BFPPCBA
BFPTIK   EQU   BFPPSTID+2
@NM00001 EQU   BFPPSTID
BFPCBXNO EQU   BFPFLAG
BFPALLOC EQU   BFPFLAG
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ISTORFID,(C'PLS2250',0702,80241)
