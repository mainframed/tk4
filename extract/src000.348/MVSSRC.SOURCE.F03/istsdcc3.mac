         TITLE 'ISTSDCC3-  MHR'
ISTSDCC3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSDCC3  80.232'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         PRINT OFF
         PRINT ON
         USING @DATD,DATREG
*   DATREG=ADDR(MLCMHDAT);                                         0037
         LA    DATREG,MLCMHDAT(,MLCAPTR)                           0037
*   SCANPTR=PARMR;                                                 0038
         LR    SCANPTR,PARMR                                       0038
*   PARMSAVE=PARMR;                 /* SAVE PARM REG                 */
         LR    PARMSAVE,PARMR                                      0039
*   TABLEPTR=TABPTR;                                               0040
         LR    TABLEPTR,TABPTR                                     0040
*   MLCNAME=BLANK;                  /* BLANK MLCNAME                 */
         MVI   MLCNAME+1(MLCAPTR),C' '                             0041
         MVC   MLCNAME+2(6,MLCAPTR),MLCNAME+1(MLCAPTR)             0041
         MVI   MLCNAME(MLCAPTR),C' '                               0041
*   MLCMACRO=BLANK;                 /* BLANK MLCMACRO                */
         MVI   MLCMACRO+1(MLCAPTR),C' '                            0042
         MVC   MLCMACRO+2(6,MLCAPTR),MLCMACRO+1(MLCAPTR)           0042
         MVI   MLCMACRO(MLCAPTR),C' '                              0042
*   NAMELEN=0;                      /* SET CTR TO 0                  */
         SLR   NAMELEN,NAMELEN                                     0043
*/********************************************************************/
*/* IF THERE IS NO NAME ON THE MACRO SET UP THE MLCNAME AS BLANKS    */
*/* OTHERWISE MOVE IN THE NAME FROM THE MACRO. HTIS NAME WILL BE USED*/
*/* TO TELL THAT THIS MACRO CAUSED AN ERROR IF ONE IS DETECTED       */
*/********************************************************************/
*                                                                  0044
*   IF CHARCOMP^=BLANK THEN         /* 1ST BUFFER CHAR A BLANK?      */
         CLI   CHARCOMP(SCANPTR),C' '                              0044
         BE    @RF00044                                            0044
*     DO;                                                          0045
*       DO WHILE CHARCOMP^=BLANK;   /* NO,FIND BLANK & COUNT CHAR    */
         B     @DE00046                                            0046
@DL00046 DS    0H                                                  0047
*         NAMELEN=NAMELEN+1;        /* COUNT CHARACTERS              */
         LA    @08,1                                               0047
         ALR   NAMELEN,@08                                         0047
*         SCANPTR=SCANPTR+1;        /* STEP UP PTR                   */
         ALR   SCANPTR,@08                                         0048
*       END;                                                       0049
@DE00046 CLI   CHARCOMP(SCANPTR),C' '                              0049
         BNE   @DL00046                                            0049
*       SCANPTR=PARMSAVE;           /* RESTORE POINTER               */
         LR    SCANPTR,PARMSAVE                                    0050
*       IF NAMELEN<=8 THEN          /* NAME LONGER THAN 8            */
         CH    NAMELEN,@CH00044                                    0051
         BH    @RF00051                                            0051
*         DO;                                                      0052
*           MLCNAME(1:NAMELEN)=TEXTBUF(1:NAMELEN);/* MOVE IN NAME    */
         LR    @07,NAMELEN                                         0053
         BCTR  @07,0                                               0053
         EX    @07,@SM00222                                        0053
*           PARMSAVE=PARMR;         /* SAVE REGS 1 & 2 OVER TRT      */
         LR    PARMSAVE,PARMR                                      0054
*           TWOSAVE=R2;                                            0055
         LR    TWOSAVE,R2                                          0055
*           PARMR=0;                /* SET REGS 1 & 2 TO 0           */
         SLR   PARMR,PARMR                                         0056
*           R2=0;                                                  0057
         SLR   R2,R2                                               0057
*           TRT(CHARCOMP,TTABLE1);  /* TRT FIRST CHARACTER           */
         TRT   CHARCOMP(1,SCANPTR),TTABLE1                         0058
*           IF PARMR=0 THEN         /* FIRST CHAR VALID?             */
         LTR   PARMR,PARMR                                         0059
         BNZ   @RF00059                                            0059
*             DO;                                                  0060
*               SCANPTR=SCANPTR+1;  /* YES, ADVANCE PTR              */
         AH    SCANPTR,@CH00063                                    0061
*               TRT(TEXTBUF,TTABLE2);/* TRT REST OF NAME             */
         TRT   TEXTBUF(256,SCANPTR),TTABLE2                        0062
*               IF R2^=1 THEN       /* TRT STOPPED BY BLANK?         */
         CH    R2,@CH00063                                         0063
         BE    @RF00063                                            0063
*                 DO;                                              0064
*                   RCSAVE=8;       /* NO, ERROR CONDITION           */
         LA    RCSAVE,8                                            0065
*                 END;                                             0066
*               ELSE                /* R2 = 1, GO ON                 */
*                 RCSAVE=0;         /* INDICATE NO ERROR             */
         B     @RC00063                                            0067
@RF00063 SLR   RCSAVE,RCSAVE                                       0067
*             END;                                                 0068
*           ELSE                                                   0069
*             RCSAVE=8;             /* PARMR NOT = 0                 */
         B     @RC00059                                            0069
@RF00059 LA    RCSAVE,8                                            0069
*         END;                                                     0070
*       ELSE                        /* NAME > 8                      */
*         DO;                                                      0071
         B     @RC00051                                            0071
@RF00051 DS    0H                                                  0072
*           MLCNAME(1:8)=TEXTBUF(1:8);/* MOVE IN 1ST 8 CHAR          */
         MVC   MLCNAME(8,MLCAPTR),TEXTBUF(SCANPTR)                 0072
*           RCSAVE=8;               /* ERROR CONDITION               */
         LA    RCSAVE,8                                            0073
*         END;                                                     0074
*     END;                                                         0075
*   ELSE                            /* FIRST CHAR WAS BLANK          */
*     DO;                                                          0076
         B     @RC00044                                            0076
@RF00044 DS    0H                                                  0077
*       RCSAVE=0;                   /* SIGNIFY NO ERROR              */
         SLR   RCSAVE,RCSAVE                                       0077
*     END;                                                         0078
*   IF RCSAVE=0 THEN                                               0079
@RC00044 LTR   RCSAVE,RCSAVE                                       0079
         BNZ   @RF00079                                            0079
*     DO;                                                          0080
*                                                                  0080
*/********************************************************************/
*/* NOW SCAN THE INPUT FOR A MACRO NAME.  WHEN IT IS FOUND BEGIN A   */
*/* SCAN OF THE MACRO NAME TABLE AND COMPARE THE NAME OF THE MACRO   */
*/* THAT IS ON THE INPUT TO THE NAME IN THE TABLE IF THE NAMES ARE   */
*/* NOT THE SAME CONTINUE. IF THE NAME IS FOUND THEN PICK UP THE     */
*/* ADDRESS OF THE ROUTINE ASSOCIATED WITH THE MACRO AND PUT IT IN   */
*/* R0 TO RETURN TO THE CALLER                                       */
*/********************************************************************/
*                                                                  0081
*       SCANPTR=PARMSAVE+NAMELEN+1; /* RESET PTR                     */
         LR    SCANPTR,PARMSAVE                                    0081
         ALR   SCANPTR,NAMELEN                                     0081
         AH    SCANPTR,@CH00063                                    0081
*       IF CHARCOMP^=BLANK THEN                                    0082
         CLI   CHARCOMP(SCANPTR),C' '                              0082
         BE    @RF00082                                            0082
*         DO;                                                      0083
*           MACLEN=0;               /* ZERO OUT CTR                  */
         SLR   MACLEN,MACLEN                                       0084
*           DO WHILE CHARCOMP^=BLANK;/* SCAN FOR BLANKS              */
         B     @DE00085                                            0085
@DL00085 DS    0H                                                  0086
*             MACLEN=MACLEN+1;      /* KEEP COUNT OF CHAR            */
         LA    @10,1                                               0086
         ALR   MACLEN,@10                                          0086
*             SCANPTR=SCANPTR+1;    /* ADVANCE PTR                   */
         ALR   SCANPTR,@10                                         0087
*           END;                                                   0088
@DE00085 CLI   CHARCOMP(SCANPTR),C' '                              0088
         BNE   @DL00085                                            0088
*           BACKPTR=SCANPTR-MACLEN; /* GET PTR TO MACRO IN TEXT      */
         LR    BACKPTR,SCANPTR                                     0089
         SLR   BACKPTR,MACLEN                                      0089
*           IF MACLEN<=EIGHT THEN   /* MACNAME > 8?                  */
         CH    MACLEN,@CH00044                                     0090
         BH    @RF00090                                            0090
*             DO;                                                  0091
*               MLCMACRO(1:MACLEN)=MACOP(1:MACLEN);/* MOVE IN MACRO  */
         LR    @07,MACLEN                                          0092
         BCTR  @07,0                                               0092
         EX    @07,@SM00224                                        0092
*               ENTCOUNT=COUNT;     /* PUT # OF ENTRIES IN CTR       */
         SLR   ENTCOUNT,ENTCOUNT                                   0093
         ICM   ENTCOUNT,3,COUNT(TABLEPTR)                          0093
*               MHTEPTR=TABLEPTR+4; /* SET PTR TO FIRST ENTRY        */
         LA    @07,4                                               0094
         LR    MHTEPTR,TABLEPTR                                    0094
         ALR   MHTEPTR,@07                                         0094
*               RCSAVE=4;           /* INDICATE ERROR DO TABLE SEARCH*/
         LR    RCSAVE,@07                                          0095
*               DO WHILE ENTCOUNT^=0&RCSAVE=4;                     0096
         B     @DE00096                                            0096
@DL00096 DS    0H                                                  0097
*                 IF MLCMACRO=MHTMACRO THEN                        0097
         CLC   MLCMACRO(8,MLCAPTR),MHTMACRO(MHTEPTR)               0097
         BNE   @RF00097                                            0097
*                   DO;                                            0098
*                     TABPTR=MHTVALUE;/* PUT PTR TO MACRO IN R0      */
         L     TABPTR,MHTVALUE(,MHTEPTR)                           0099
*                     RCSAVE=0;     /* INDICATE NO ERROR             */
         SLR   RCSAVE,RCSAVE                                       0100
*                   END;                                           0101
*                 ELSE              /* MLCMACRO^=MHTMACRO,GO ON      */
*                   DO;                                            0102
         B     @RC00097                                            0102
@RF00097 DS    0H                                                  0103
*                     ENTCOUNT=ENTCOUNT-1;/* STEP DOWN CTR           */
         BCTR  ENTCOUNT,0                                          0103
*                     MHTEPTR=MHTEPTR+12;/* STEP UP PTR              */
         AH    MHTEPTR,@CH00194                                    0104
*                   END;                                           0105
*               END;                                               0106
@RC00097 DS    0H                                                  0106
@DE00096 LTR   ENTCOUNT,ENTCOUNT                                   0106
         BZ    @DC00096                                            0106
         CH    RCSAVE,@CH00065                                     0106
         BE    @DL00096                                            0106
@DC00096 DS    0H                                                  0107
*             END;                                                 0107
*           ELSE                    /* MACLEN > 8                    */
*             DO;                                                  0108
         B     @RC00090                                            0108
@RF00090 DS    0H                                                  0109
*               MLCMACRO(1:8)=MACOP(1:8);/* MOVE IN FIRST 8 CHAR     */
         MVC   MLCMACRO(8,MLCAPTR),MACOP(BACKPTR)                  0109
*               RCSAVE=4;           /* ERROR CONDITION               */
         LA    RCSAVE,4                                            0110
*             END;                                                 0111
*         END;                                                     0112
*       ELSE                        /* CHARCOMP = BLANK              */
*         RCSAVE=4;                 /* INDICATE ERROR                */
         B     @RC00082                                            0113
@RF00082 LA    RCSAVE,4                                            0113
*     END;                                                         0114
*   ELSE                                                           0115
*     ;                             /* RCSAVE ^= 0                   */
@RF00079 DS    0H                                                  0116
*   PARMR=SCANPTR+1;                /* SET REG 1 FOR RETURN          */
@RC00079 LA    PARMR,1                                             0116
         ALR   PARMR,SCANPTR                                       0116
*   SVR15=RCSAVE;                   /* REG 15 IN USERS SAVE AREA     */
         ST    RCSAVE,SVR15(,SAVREG)                               0117
*   SVR0=TABPTR;                    /* REG 0 IN USERS SAVE AREA      */
         ST    TABPTR,SVR0(,SAVREG)                                0118
*   SVR1=PARMR;                     /* REG 1 IN USERS SAVE AREA      */
         ST    PARMR,SVR1(,SAVREG)                                 0119
*   DO;                             /* TPEPILOG                      */
*     GEN(PRINT OFF);                                              0121
         PRINT OFF
*     GEN(PRINT ON);                                               0122
         PRINT ON
*   END;                            /* TPEPILOG                      */
*   END ISTSDCC3;                                                  0124
@EL00001 DS    0H                                                  0124
@EF00001 DS    0H                                                  0124
@ER00001 LM    @14,@12,12(@13)                                     0124
         BR    @14                                                 0124
@DATA    DS    0H
@CH00063 DC    H'1'
@CH00065 DC    H'4'
@CH00044 DC    H'8'
@CH00194 DC    H'12'
@SM00222 MVC   MLCNAME(0,MLCAPTR),TEXTBUF(SCANPTR)
@SM00224 MVC   MLCMACRO(0,MLCAPTR),MACOP(BACKPTR)
@DATD    DSECT
         DS    0F
ISTSDCC3 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTSDCC3 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
TTABLE1  DS    CL256
         ORG   TTABLE1
TTAB1    DC    91CL1'X'
         DC    X'00'
         DC    31CL1'X'
         DC    2X'00'
         DC    68CL1'X'
         DC    9X'00'
         DC    7CL1'X'
         DC    9X'00'
         DC    8CL1'X'
         DC    8X'00'
         DC    22CL1'X'
         ORG   TTABLE1+256
TTABLE2  DS    CL256
         ORG   TTABLE2
TTAB2    DC    64CL1'X'
         DC    X'01'
         DC    26CL1'X'
         DC    X'00'
         DC    31CL1'X'
         DC    2X'00'
         DC    68CL1'X'
         DC    9X'00'
         DC    7CL1'X'
         DC    9X'00'
         DC    8CL1'X'
         DC    8X'00'
         DC    6CL1'X'
         DC    10X'00'
         DC    6CL1'x'
         ORG   TTABLE2+256
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTCOUNT EQU   @10
MHTEPTR  EQU   @09
BACKPTR  EQU   @09
MACLEN   EQU   @08
RCSAVE   EQU   @08
TWOSAVE  EQU   @08
PARMSAVE EQU   @10
NAMELEN  EQU   @09
SAVREG   EQU   @13
SCANPTR  EQU   @04
TABLEPTR EQU   @06
PARMR    EQU   @01
MLCAPTR  EQU   @05
R2       EQU   @02
TABPTR   EQU   @00
DATREG   EQU   @11
ISTTPMPL EQU   0
ISTMLCA  EQU   0
MLCSKDCB EQU   ISTMLCA+12
MLCFLAGS EQU   ISTMLCA+16
MLCERBF  EQU   ISTMLCA+28
MLCERBF1 EQU   MLCERBF
MLCERBF2 EQU   MLCERBF+8
MLCNAME  EQU   MLCERBF2
MLCMACRO EQU   MLCERBF2+8
MLCERBF3 EQU   MLCERBF+32
MLCPTRS  EQU   ISTMLCA+96
MLCDAT4  EQU   ISTMLCA+596
MLCADSAV EQU   ISTMLCA+652
MLCADDAT EQU   ISTMLCA+724
MLCMHDAT EQU   ISTMLCA+908
MLCWRK1  EQU   ISTMLCA+964
MLCWRK2  EQU   ISTMLCA+1220
MLCOCPRM EQU   MLCWRK2
MLCWRK3  EQU   ISTMLCA+1284
MLCRDPRM EQU   MLCWRK3
MLCWRK4  EQU   ISTMLCA+1348
MLCTPMSG EQU   MLCWRK4
MLCDECB2 EQU   MLCTPMSG+32
MLCAMAP  EQU   ISTMLCA+1412
SVAREA   EQU   0
SVR15    EQU   SVAREA+16
SVR0     EQU   SVAREA+20
SVR1     EQU   SVAREA+24
CHARCOMP EQU   0
TEXTBUF  EQU   0
MACOP    EQU   0
HEADER   EQU   0
COUNT    EQU   HEADER
TABENTRY EQU   0
MHTMACRO EQU   TABENTRY
MHTVALUE EQU   TABENTRY+8
MACCHAR  EQU   0
MACTAB   EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00004 EQU   HEADER+2
SVR12    EQU   SVAREA+68
SVR11    EQU   SVAREA+64
SVR10    EQU   SVAREA+60
SVR9     EQU   SVAREA+56
SVR8     EQU   SVAREA+52
SVR7     EQU   SVAREA+48
SVR6     EQU   SVAREA+44
SVR5     EQU   SVAREA+40
SVR4     EQU   SVAREA+36
SVR3     EQU   SVAREA+32
SVR2     EQU   SVAREA+28
SVR14    EQU   SVAREA+12
SVLSA    EQU   SVAREA+8
SVHSA    EQU   SVAREA+4
SVRSVD   EQU   SVAREA
@NM00003 EQU   ISTMLCA+1431
MLCBITMP EQU   MLCAMAP
MLCSTOWL EQU   MLCDECB2
MLCDECB1 EQU   MLCTPMSG
MLCLDPRM EQU   MLCRDPRM
MLCACPRM EQU   MLCOCPRM
MLCDCB   EQU   MLCWRK1
MLCERDAT EQU   ISTMLCA+852
MLCERSAV EQU   ISTMLCA+780
MLCARDAT EQU   MLCADDAT
MLCARSAV EQU   MLCADSAV
MLCDATRM EQU   MLCDAT4+27
MLCHDRTP EQU   MLCDAT4+26
MLCENTLN EQU   MLCDAT4+24
MLCRLGTH EQU   MLCDAT4+20
MLCKWKTB EQU   MLCDAT4+16
MLCKWDPT EQU   MLCDAT4+12
MLCTBLPT EQU   MLCDAT4+8
MLCRCSAV EQU   MLCDAT4+4
MLCSAV   EQU   MLCDAT4
MLCSAV4  EQU   ISTMLCA+524
MLCDAT3  EQU   ISTMLCA+468
MLCSAV3  EQU   ISTMLCA+396
MLCDAT2  EQU   ISTMLCA+340
MLCSAV2  EQU   ISTMLCA+268
MLCDAT1  EQU   ISTMLCA+212
MLCSAV1  EQU   ISTMLCA+140
@NM00002 EQU   ISTMLCA+136
MLCNCSPL EQU   MLCPTRS+36
MLCLENT  EQU   MLCPTRS+32
MLCPTR7  EQU   MLCPTRS+28
MLCPTR6  EQU   MLCPTRS+24
MLCPTR5  EQU   MLCPTRS+20
MLCPTR4  EQU   MLCPTRS+16
MLCPTR3  EQU   MLCPTRS+12
MLCPTR2  EQU   MLCPTRS+8
MLCPTR1  EQU   MLCPTRS+4
MLCPTR0  EQU   MLCPTRS
MLCGETSZ EQU   ISTMLCA+92
MLCFIII  EQU   MLCERBF3+8
MLCCNFG2 EQU   MLCERBF3
MLCFII   EQU   MLCERBF2+16
MLCCONFG EQU   MLCERBF1
MLCKWD   EQU   ISTMLCA+24
MLCENT   EQU   ISTMLCA+20
@NM00001 EQU   MLCFLAGS
MLCSSCFM EQU   MLCFLAGS
MLCPRE   EQU   MLCFLAGS
MLCDREOF EQU   MLCFLAGS
MLCINT   EQU   MLCFLAGS
MLCVLCON EQU   MLCSKDCB
MLCSKEL  EQU   ISTMLCA+8
MLCRPH   EQU   ISTMLCA+4
MLCSECCA EQU   ISTMLCA
TPMPLMOD EQU   ISTTPMPL+28
TPMPLTLN EQU   ISTTPMPL+26
TPMPLRLN EQU   ISTTPMPL+24
TPMPLTPT EQU   ISTTPMPL+20
TPMPLCID EQU   ISTTPMPL+16
TPMPLTXT EQU   ISTTPMPL+12
TPMPLRNF EQU   ISTTPMPL+8
TPMPLRBA EQU   ISTTPMPL+4
TPMPLMID EQU   ISTTPMPL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00051 EQU   @RC00044
@RC00082 EQU   @RC00079
@RC00059 EQU   @RC00051
@RC00090 EQU   @RC00082
@RC00063 EQU   @RC00059
@ENDDATA EQU   *
         END   ISTSDCC3,(C'PLS2156',0702,80232)
