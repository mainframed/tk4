         TITLE 'SCB RESOURCE MANAGER'
IEAVTSBP CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEAVTSBP  78.081'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*                                      MANAGEMENT (ASM) SRB DRIVEN 0077
*                                      I/O ROUTINES WORK/SAVE AREA 0077
*                                      (512 BYTES) (MDC305)  @Z40WP9A*/
*   IF TCBPTR^=0                    /* CHECK FOR TCB PTR IMPUT IN  0078
*                                      REG4                          */
*     THEN                                                         0078
         LTR   TCBPTR,TCBPTR                                       0078
         BZ    @RF00078                                            0078
*     DO;                                                          0079
*                                                                  0079
*       /*************************************************************/
*       /*                                                           */
*       /* THE SCB RESOURCE MANAGER INPUT POINTERS (IN R0 AND R1) ARE*/
*       /* SAVED IN 'OLDRB'(R6) AND 'NEWRB'(R5) RESPECIFELY. SETFRR  */
*       /* IS ISSUED TO PROVIDE A RECOVERY ENVIRONMENT. THE FRR      */
*       /* PARAMETER LIST IS INITIALIZED WITH THE RETRY CODE, REQUEST*/
*       /* BLOCK POINTERS (OR ZERO), THE TCB PTR AND REGISTER SAVE   */
*       /* AREA POINTER . CHECK INPUT PARAMETERS AND SET INDICATORS  */
*       /* ACCORDINGLY.                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0080
*       RESPECIFY                                                  0080
*        (R0,                                                      0080
*         R1,                                                      0080
*         R13) RESTRICTED;                                         0080
*       OLDRB=R0;                   /* OLDRB WILL HOLD INPUT FROM R0
*                                      WHICH IS POSSIBLY THE OLD RB
*                                      PTR IF ENTRY WAS FOR XCTL OR
*                                      RB TYPE PURGE                 */
         LR    OLDRB,R0                                            0081
*       NEWRB=R1;                   /* SAVE POSSIBLE NEW RB PTR      */
         LR    NEWRB,R1                                            0082
*       RESPECIFY                                                  0083
*        (R0,                                                      0083
*         R1) UNRESTRICTED;                                        0083
*       RESPECIFY                                                  0084
*         R8 RESTRICTED;                                           0084
*       R8=ADDR(TRRMFRR);           /* ADDRESS OF FRR                */
         LA    R8,TRRMFRR                                          0085
*       GEN REFS(PSACSTK,FRRSCURR,FRRSLAST,PSALSFCC,FRRSELEN,FRRSFRRA,
*           FRRSPARM,FRRSEMP,FRRSCURR)                             0086
*           (SETFRR  A,FRRAD=(8),PARMAD=(3),WRKREGS=(1,2),CLEAR=N);
         SETFRR  A,FRRAD=(8),PARMAD=(3),WRKREGS=(1,2),CLEAR=N
*       RESPECIFY                                                  0087
*         R8 UNRESTRICTED;                                         0087
*       RETRYIND='00'X;             /* ASSUME TCB PURGE      @Z40FPXA*/
         MVI   RETRYIND(FRRPRMPT),X'00'                            0088
*       VALIDLST='00'X;             /* LIST NOT FILLED IN YET      0089
*                                                            @Z40FPXA*/
         MVI   VALIDLST(FRRPRMPT),X'00'                            0089
*       IF OLDRB^=0 THEN                                           0090
         SLR   @11,@11                                             0090
         CR    OLDRB,@11                                           0090
         BE    @RF00090                                            0090
*         DO;                                                      0091
*           IF NEWRB=0 THEN                                        0092
         CR    NEWRB,@11                                           0092
         BNE   @RF00092                                            0092
*             DO;                                                  0093
*               RETRYIND='10'X;                                    0094
         MVI   RETRYIND(FRRPRMPT),X'10'                            0094
*             END;                                                 0095
*           ELSE                                                   0096
*             DO;                                                  0096
         B     @RC00092                                            0096
@RF00092 DS    0H                                                  0097
*               RETRYIND='20'X;                                    0097
         MVI   RETRYIND(FRRPRMPT),X'20'                            0097
*             END;                                                 0098
*         END;                                                     0099
@RC00092 DS    0H                                                  0100
*       RBOLDPTR=OLDRB;             /* SAVE INPUT OLD RB PTR         */
@RF00090 ST    OLDRB,RBOLDPTR(,FRRPRMPT)                           0100
*       RBNEWPTR=NEWRB;             /* SAVE INPUT NEW RB PTR         */
         ST    NEWRB,RBNEWPTR(,FRRPRMPT)                           0101
*       PTRTCB=TCBPTR;              /* SAVE INPUT TCB PTR            */
         ST    TCBPTR,PTRTCB(,FRRPRMPT)                            0102
*       SAVEPTR=R13;                /* SAVE REG SAVE AREA PTR        */
         ST    R13,SAVEPTR(,FRRPRMPT)                              0103
*       VALIDLST='0F'X;             /* INDICATE PARM LIST IS       0104
*                                      INITIALIZED                   */
         MVI   VALIDLST(FRRPRMPT),X'0F'                            0104
*       RESPECIFY                                                  0105
*         R13 UNRESTRICTED;                                        0105
*       ENDSCB=0;                   /* CLEAR INDICATOR FOR END OF  0106
*                                      SCB'S                         */
         SLR   ENDSCB,ENDSCB                                       0106
*       RBSAVE=OLDRB;               /* SAVE RB PTR FOR TURNING OFF RB
*                                      OWNS SCB BIT IF NECESSARY     */
*                                                                  0107
         LR    RBSAVE,OLDRB                                        0107
*       /*************************************************************/
*       /*                                                           */
*       /* MODIFY INPUT REGS TO HANDLE BOTH TYPES OF TCB PURGE (I.E. */
*       /* EXIT ON LAST REQUEST BLOCK AND FAILURE ON ATTACH. CHECK   */
*       /* FOR OWNERSHIP OF SRB'S --- HANDLE TRANSFER OF ELIGIBLE    */
*       /* SRB'S IF XCTL TYPE ENTRY --- OTHERWISE HANDLE SCB PURGE   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0108
*       IF OLDRB=0×(NEWRB=0&OLDRB->RBLINKB=TCBPTR)/*          @YM4975
*                                      IF ATTACH FAILURE OR LAST RB
*                                      EXIT                          */
*         THEN                                                     0108
         SLR   @11,@11                                             0108
         CR    OLDRB,@11                                           0108
         BE    @RT00108                                            0108
         CR    NEWRB,@11                                           0108
         BNE   @RF00108                                            0108
         L     @11,RBLINKB-1(,OLDRB)                               0108
         LA    @11,0(,@11)                                         0108
         CR    TCBPTR,@11                                          0108
         BNE   @RF00108                                            0108
@RT00108 DS    0H                                                  0109
*         DO;                                                      0109
*           ENDSCB=1;               /* SET INCICATION OF TCB PURGE   */
         LA    ENDSCB,1                                            0110
*           RETRYIND='00'X;         /* INDICATE TCB PURGE FOR FRR    */
         MVI   RETRYIND(FRRPRMPT),X'00'                            0111
*           RESPECIFY                                              0112
*             FRRPRMPT UNRESTRICTED;                               0112
*                                                                  0112
*           /*********************************************************/
*           /*                                                       */
*           /* COMBINATION OF OLDRB AND NEWRB BOTH EQUAL ZERO WILL   */
*           /* CAUSE TCB TYPE PURGE PATH TO BE TAKEN                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0113
*           OLDRB=0;                                               0113
         SLR   OLDRB,OLDRB                                         0113
*           NEWRB=0;                                               0114
         SLR   NEWRB,NEWRB                                         0114
*         END;                                                     0115
*       SCBPTR=TCBSTABB;            /* SET PTR TO BEGINNING OF CHAIN */
@RF00108 L     SCBPTR,TCBSTABB-1(,TCBPTR)                          0116
         LA    SCBPTR,0(,SCBPTR)                                   0116
*       PREVSCB=SCBPTR;             /* SAVE FOR RE-CHAINING          */
         LR    PREVSCB,SCBPTR                                      0117
*       DO WHILE(SCBPTR^=0&(OLDRB=0×SCBOWNRA=OLDRB));/* PROCESS ONLY
*                                      IF THERE ARE SCB'S TO PROCESS */
         B     @DE00118                                            0118
@DL00118 DS    0H                                                  0119
*         IF SCBXCTL2='1'B&NEWRB^=0 /* CHECK FOR XCTL TYPE ENTRY   0119
*                                      ELIGIBLE SCB'S FOR TRANSFER   */
*           THEN                                                   0119
         TM    SCBXCTL2(SCBPTR),B'01000000'                        0119
         BNO   @RF00119                                            0119
         SLR   @11,@11                                             0119
         CR    NEWRB,@11                                           0119
         BE    @RF00119                                            0119
*           DO;                                                    0120
*             PREVSCB=SCBPTR;       /* SAVE PTR FOR RECHAINING       */
         LR    PREVSCB,SCBPTR                                      0121
*             SCBOWNRA=NEWRB;       /* TRANSFER OWNERSHIP            */
         STCM  NEWRB,7,SCBOWNRA(SCBPTR)                            0122
*             EVAL(OLDRB-LENGTH(RBPREFIX))->RBSCB='0'B;/* TURN OFF RB
*                                      OWNS SCB FLAG IN OLD RB       */
         LA    @08,64                                              0123
         LR    @07,OLDRB                                           0123
         SLR   @07,@08                                             0123
         NI    RBSCB(@07),B'11111101'                              0123
*             SCBPTR=SCBCHAIN;      /* UPDATE SCB CHAIN POINTER      */
         L     SCBPTR,SCBCHAIN(,SCBPTR)                            0124
*             EVAL(NEWRB-LENGTH(RBPREFIX))->RBSCB='1'B;/* INDICATE 0125
*                                      NEWRB NOW OWNS THE TRANSFERRED
*                                      SCB                           */
         LCR   @08,@08                                             0125
         ALR   @08,NEWRB                                           0125
         OI    RBSCB(@08),B'00000010'                              0125
*             IF OLDRB=NEWRB&OLDRB^=0/* CHECK FOR SVRB ISSUING XCTL  */
*               THEN                                               0126
         CR    OLDRB,NEWRB                                         0126
         BNE   @RF00126                                            0126
         CR    OLDRB,@11                                           0126
         BE    @RF00126                                            0126
*               DO;                                                0127
*                 RBSAVE=0;         /* TO PREVENT TURNING OFF RBSCB
*                                      IN SVRB WHICH IS BEING RE-USED
*                                      BY XCTL                       */
         SLR   RBSAVE,RBSAVE                                       0128
*               END;                                               0129
*           END;                                                   0130
*         ELSE                      /* NOT AN XCTL TYPE ENTRY        */
*           DO;                                                    0131
         B     @RC00119                                            0131
@RF00119 DS    0H                                                  0132
*             IF SCBPTR=TCBSTABB    /* IS THIS THE TOP SCB ?         */
*               THEN                                               0132
         L     @11,TCBSTABB-1(,TCBPTR)                             0132
         LA    @11,0(,@11)                                         0132
         CR    SCBPTR,@11                                          0132
         BNE   @RF00132                                            0132
*               DO;                                                0133
*                 TCBSTABB=SCBCHAIN;/* CHANGE SCB CHAIN PTR IN TCB TO
*                                      EFFECTIVELY DELETE TOP SCB  0134
*                                      FROM CHAIN                    */
         MVC   TCBSTABB(3,TCBPTR),SCBCHAIN+1(SCBPTR)               0134
*               END;                                               0135
*             ELSE                  /* NOT TOP SCB ON QUEUE          */
*               DO;                                                0136
         B     @RC00132                                            0136
@RF00132 DS    0H                                                  0137
*                 PREVSCB->SCBCHAIN=SCBCHAIN;/* TO DELETE THIS SCB 0137
*                                      (WHICH IS NOT THE TOP)      0137
*                                      RE-CHAIN FROM PREVIOUS SCB TO
*                                      NEXT.                         */
         L     @11,SCBCHAIN(,SCBPTR)                               0137
         ST    @11,SCBCHAIN(,PREVSCB)                              0137
*               END;                                               0138
*             DO;                                                  0139
*                                                                  0139
@RC00132 DS    0H                                                  0140
*               /*****************************************************/
*               /*                                                   */
*               /* IF THE SCB WAS ACQUIRED VIA BRANCH ENTRY TO SVC   */
*               /* 60, THEN THE SCB CORE WAS ACQUIRED ALONG WITH THE */
*               /* RB IN THE SAME GETMAIN REQUEST. IN THIS CASE THE  */
*               /* SCB WILL BE ZEROED BUT NOT FREED. IF THE SCB WAS  */
*               /* CREATED BY THE NORMAL SVC ENTRY TO SVC 60 THEN THE*/
*               /* CORE WILL BE FREED                                */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0140
*               RESPECIFY                                          0140
*                (R7,                                              0140
*                 R0,                                              0140
*                 R8) RESTRICTED;   /*                       @ZA11838*/
*               IF SCBBRNTR='1'B    /* CHECK FOR BRANCH ENTRY SCB    */
*                 THEN                                             0141
         TM    SCBBRNTR(SCBPTR),B'00000100'                        0141
         BNO   @RF00141                                            0141
*                 DO;                                              0142
*                   R7=SCBPTR;      /* SAVE SCB PTR                  */
         LR    R7,SCBPTR                                           0143
*                   SCBPTR=SCBCHAIN;/* UPDATE SCB PTR REGISTER TO  0144
*                                      POINT TO NEXT SCB             */
         L     SCBPTR,SCBCHAIN(,SCBPTR)                            0144
*/* THE SCB MAY BE USED AGAIN, LEAVE THE RB OWNR AND ID FLDS @Z40FPXH*/
*                                                                  0145
*                   R7->SCB(1:13)=''B;/* CLEAR THE SCB       @Z40FPXH*/
         XC    SCB(13,R7),SCB(R7)                                  0145
*                 END;                                             0146
*               ELSE                /* SCB CREATED BY SVC ENTRY      */
*                                                                  0147
*                 /***************************************************/
*                 /*                                                 */
*                 /* SCB WAS OBTAINED IN GETMAINED STORAGE. PLACE    */
*                 /* SCB'S ON FREE SCB QUE                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0147
*                 DO;               /*                       @Z30EPXH*/
         B     @RC00141                                            0147
@RF00141 DS    0H                                                  0148
*                   R7=WSALSTAE;    /* ADDRESS OF SVC60 WORK/SAVE  0148
*                                      AREA                  @Z30EPXH*/
         L     @11,ASCBPTR                                         0148
         L     @01,ASXBPTR(,@11)                                   0148
         L     @01,ASXBSPSA(,@01)                                  0148
         L     R7,WSALSTAE(,@01)                                   0148
*                   R0=SCBCHAIN;    /* NEXT SCB POINTER      @Z30EPXH*/
         L     R0,SCBCHAIN(,SCBPTR)                                0149
*ADDCELL:                                                          0150
*                   R8=FREESCBQ;    /* TOP OF FREE CELL QUEUE      0150
*                                                            @Z40FPXA*/
ADDCELL  L     R8,FREESCBQ(,R7)                                    0150
*                   SCBCHAIN=R8;    /* MAINTAIN CELL CHAIN   @Z40FPXA*/
         ST    R8,SCBCHAIN(,SCBPTR)                                0151
*                   RFY                                            0152
*                     R11 RSTD;     /*                       @ZA11838*/
*                   R11=SCBPTR;     /* SAVE SCB ADDRESS      @Z40FPXA
*                                                            @ZA11838*/
         LR    R11,SCBPTR                                          0153
*                   CS(R8,R11,FREESCBQ);/* ADD CELL TO CHAIN @Z40FPXA
*                                                            @ZA11838*/
         CS    R8,@11,FREESCBQ(R7)                                 0154
*                   BC(7,ADDCELL);  /* RETRY IF ADD FAILED   @Z40FPXA*/
         BC    7,ADDCELL                                           0155
*                   RFY                                            0156
*                     R11 UNRSTD;   /*                       @ZA11838*/
*                   SCBPTR=R0;      /* RESTORE SCB POINTER   @Z30EPXH*/
         LR    SCBPTR,R0                                           0157
*                 END;              /*                       @Z30EPXH*/
*               RESPECIFY                                          0159
*                (R7,                                              0159
*                 R0,                                              0159
*                 R8) UNRESTRICTED; /*                       @ZA11838*/
@RC00141 DS    0H                                                  0160
*             END;                                                 0160
*           END;                                                   0161
*       END;                                                       0162
@RC00119 DS    0H                                                  0162
@DE00118 SLR   @11,@11                                             0162
         CR    SCBPTR,@11                                          0162
         BE    @DC00118                                            0162
         CR    OLDRB,@11                                           0162
         BE    @DL00118                                            0162
         L     @11,SCBOWNRA-1(,SCBPTR)                             0162
         LA    @11,0(,@11)                                         0162
         CR    OLDRB,@11                                           0162
         BE    @DL00118                                            0162
@DC00118 DS    0H                                                  0163
*       IF RBSAVE^=0                /* RB INDICATE 'OWN AN SCB' ?    */
*         THEN                      /* YES                           */
         LTR   RBSAVE,RBSAVE                                       0163
         BZ    @RF00163                                            0163
*         DO;                                                      0164
*           EVAL(RBSAVE-LENGTH(RBPREFIX))->RBSCB='0'B;/* SHOW RB HAS
*                                      NO SCB                        */
         LR    @11,RBSAVE                                          0165
         SL    @11,@CF00097                                        0165
         NI    RBSCB(@11),B'11111101'                              0165
*         END;                                                     0166
*       IF ENDSCB^=0                /* TCB TYPE PURGE                */
*         THEN                      /* YES                           */
@RF00163 SLR   @11,@11                                             0167
         CR    ENDSCB,@11                                          0167
         BE    @RF00167                                            0167
*         DO;                                                      0168
*           TCBSTABB=0;             /* SHOW TCB HAS NO SCB'S         */
         STCM  @11,7,TCBSTABB(TCBPTR)                              0169
*         END;                                                     0170
*       GEN SETS(R9,R3);                                           0171
@RF00167 DS    0H                                                  0171
     SETFRR D,WRKREGS=(9,3)       DELETE THIS FRR FORM STACK
*       RESPECIFY                                                  0172
*         RCODE RESTRICTED;                                        0172
*       RCODE=0;                    /* SET GOOD RETURN CODE          */
         SLR   RCODE,RCODE                                         0173
*     END;                                                         0174
*   ELSE                                                           0175
*     DO;                                                          0175
         B     @RC00078                                            0175
@RF00078 DS    0H                                                  0176
*       RESPECIFY                                                  0176
*         RCODE RESTRICTED;                                        0176
*       RCODE=4;                    /* SET FAILURE CODE -- BAD INPUT */
         LA    RCODE,4                                             0177
*     END;                                                         0178
*   RETURN CODE(RCODE);                                            0179
@RC00078 L     @14,12(,@13)                                        0179
         LM    @00,@12,20(@13)                                     0179
         BR    @14                                                 0179
*   RESPECIFY                                                      0180
*     RCODE UNRESTRICTED;                                          0180
*                                                                  0180
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE SDWAFMID IS NON ZERO, A MEMORY SWITCH HAS OCCURRED AND */
*   /* NO PROCESSING WILL BE ATTEMPTED. OTHERWISE, THE SCB CHAIN IS  */
*   /* TERMINATED AT THE TCB IF A LAST RB EXIT OR TCB TYPE (SCB)     */
*   /* PURGE HAS BEEN REQUESTED OR COMPLETION CODE IS SYSTEM '0C4'.  */
*   /* THE '0C4' INDICATES A PAGE OR SEGMENT EXCEPTION FROM          */
*   /* REFERENCING THE SCB QUEUE, THEREFORE THE QUEUE IS ZEROED.     */
*   /* (PROGRAM MANAGEMENT AND EXIT REFERENCE TCB AND RB ADDRESSES   */
*   /* BEFORE GIVING CONTROL TO THIS FUNCTION--AND ---- IF THE       */
*   /* PROBLEM WAS A BED KEY, THE RECOVERY WOULD NOT HAVE BEEN ABLE  */
*   /* TO SET UP--- THEREFORE, ANY '0C4' IS ASSUMED TO BE A BAD SCB  */
*   /* ADDRESS. TO PREVENT THE FRR FROM FAILING FROM THE SAME ERROR, */
*   /* THE SCB QUEUE IS TERMINATED.) IF STORAGE ERRORS HAVE          */
*   /* OCCURRED,THE SCB QUEUE IS TERMINATED IF ANY SCB IS LOCATED    */
*   /* WITHIN THE RANGE OF ERROR. IF NO STORAGE ERRORS HAVE OCCURED  */
*   /* AND THE RETRY CODE IS '10'X, SCBS OWNED BY THE OLDRB ARE      */
*   /* DELETED FROM THE SCB CHAIN. IF THE RETRY CODE IS '20'X, SCBS  */
*   /* OWNED BY BOTH NEW AND OLD RB'S ARE DELETED. REGISTERS 0-14 ARE*/
*   /* RESTORED IN THE SDWA FROM THE SAVE AREA OF THE CALLER & THE   */
*   /* FRR IS DELETED FROM THE STACK BEFORE GOING TO RETRY           */
*   /* PROCESSING. RETRY SETS REG 15 TO '04'X AND BRANCHES ON REG 14.*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0181
*TRRMFRR:                                                          0181
*   GEN;                                                           0181
TRRMFRR  DS    0H                                                  0181
   BALR 7,0
    USING *,7
*   RESPECIFY                                                      0182
*    (ENDSCB,                                                      0182
*     PREVSCB,                                                     0182
*     FRRPRMPT,                                                    0182
*     RBSAVE) UNRESTRICTED;                                        0182
*   RESPECIFY                                                      0183
*    (SDWAPTR,                                                     0183
*     R13,                                                         0183
*     R14) RESTRICTED;                                             0183
*   RESPECIFY                                                      0184
*     FRRPARM BASED(SDWAPARM);      /* BASE FRR PARM LIST ON PTR IN
*                                      THE SDWA                      */
*   SDWAMODN='IEAVTSBP';            /* MODULE INVOLVED IN ERROR      */
         MVC   SDWAMODN(8,SDWAPTR),@CC02642                        0185
*   SDWACSCT='IEAVTSBP';            /* CSECT INVOLVED IN ERROR       */
         MVC   SDWACSCT(8,SDWAPTR),@CC02642                        0186
*   SDWAREXN='IEAVTSBP';            /* NAME OF RECOVERY ROUTINE      */
         MVC   SDWAREXN(8,SDWAPTR),@CC02642                        0187
*   IF SDWAFMID^=0×VALIDLST^='0F'X  /* CHECK FOR MEMORY SWITCH OR  0188
*                                      INCOMPLETE FRR PARM LIST      */
*     THEN                          /* GET OUT - NOTHING CAN BE DONE */
         LH    @15,SDWAFMID(,SDWAPTR)                              0188
         N     @15,@CF02674                                        0188
         LTR   @15,@15                                             0188
         BNZ   @RT00188                                            0188
         L     @15,SDWAPARM(,SDWAPTR)                              0188
         CLI   VALIDLST(@15),X'0F'                                 0188
         BE    @RF00188                                            0188
@RT00188 DS    0H                                                  0189
*     DO;                                                          0189
*       DO;                         /* SETRP RC(0)                   */
*         RESPECIFY                                                0191
*          (GPR00P,                                                0191
*           GPR01P,                                                0191
*           GPR14P,                                                0191
*           GPR15P) RSTD;                                          0191
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0192
*         RESPECIFY                                                0193
*          (GPR00P,                                                0193
*           GPR01P,                                                0193
*           GPR14P,                                                0193
*           GPR15P) UNRSTD;                                        0193
*       END;                        /* SET INDICATOR TO TASK RECOVERY
*                                      TO PERCOLATE                  */
*       GOTO R14->OUT;              /* NO PROCESSING CAN BE DONE     */
         BR    R14                                                 0195
*     END;                                                         0196
*   TCBPTR=PTRTCB;                                                 0197
@RF00188 L     @15,SDWAPARM(,SDWAPTR)                              0197
         L     TCBPTR,PTRTCB(,@15)                                 0197
*   SCBPTR=TCBSTABB;                /* INITIALIZE SCB QUEUE PTR      */
         L     SCBPTR,TCBSTABB-1(,TCBPTR)                          0198
         LA    SCBPTR,0(,SCBPTR)                                   0198
*   IF RETRYIND='00'X×              /* TCB PURGE REQUESTED ? OR      */
*       SDWACMPC='0C4000'X          /* PAGE OR SEGMENT EXCEPTION ? 0199
*                                                            @YM04280*/
*     THEN                          /* YES                           */
         CLI   RETRYIND(@15),X'00'                                 0199
         BE    @RT00199                                            0199
         CLC   SDWACMPC(3,SDWAPTR),@CB02647                        0199
         BNE   @RF00199                                            0199
@RT00199 DS    0H                                                  0200
*     DO;                                                          0200
*       TCBSTABB=0;                 /* TERMINATE SCB QUEUE PTR IN TCB*/
         SLR   @15,@15                                             0201
         STCM  @15,7,TCBSTABB(TCBPTR)                              0201
*     END;                                                         0202
*   ELSE                            /* ANY STORAGE CHECKS ?          */
*     DO;                                                          0203
         B     @RC00199                                            0203
@RF00199 DS    0H                                                  0204
*       IF SDWASKYF^='0'B×SDWASCK^='0'B/* STOR. KEY OR DATA FAILURE ?*/
*         THEN                      /* YES                           */
         TM    SDWASKYF(SDWAPTR),B'10010000'                       0204
         BZ    @RF00204                                            0204
*         DO;                                                      0205
*           IF SDWASRVL='1'B        /* VALID ADDRESSES OF STORAGE  0206
*                                      ERROR AVAILIBLE ?             */
*             THEN                  /* YES                           */
         TM    SDWASRVL(SDWAPTR),B'10000000'                       0206
         BNO   @RF00206                                            0206
*             DO;                                                  0207
*               DO WHILE(SCBPTR^=0);/* CHECK ALL SCB'S ON QUEUE      */
*                                                                  0208
         B     @DE00208                                            0208
@DL00208 DS    0H                                                  0209
*                 /***************************************************/
*                 /*                                                 */
*                 /* SEE IF ANY SCB'S ARE WITHIN THE RANGE OF STORAGE*/
*                 /* ERROR                                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0209
*                 IF(SCBPTR>=SDWASCKB&SCBPTR<=SDWASCKE)×(SCBPTR+(LENGTH
*                     (SCB)-1)>=SDWASCKB&SCBPTR+(LENGTH(SCB)-1)<=  0209
*                     SDWASCKE) THEN/* YES                           */
         C     SCBPTR,SDWASCKB(,SDWAPTR)                           0209
         BL    @GL00009                                            0209
         C     SCBPTR,SDWASCKE(,SDWAPTR)                           0209
         BNH   @RT00209                                            0209
@GL00009 LA    @15,19                                              0209
         ALR   @15,SCBPTR                                          0209
         C     @15,SDWASCKB(,SDWAPTR)                              0209
         BL    @RF00209                                            0209
         C     @15,SDWASCKE(,SDWAPTR)                              0209
         BH    @RF00209                                            0209
@RT00209 DS    0H                                                  0210
*                   DO;                                            0210
*                     TCBSTABB=0;   /* TERMINATE SCB QUEUE BY ZEROING
*                                      PTR IN TCB                    */
         SLR   @15,@15                                             0211
         STCM  @15,7,TCBSTABB(TCBPTR)                              0211
*                     SCBPTR=0;     /* ZERO BASE PTR FOR SCB         */
         SLR   SCBPTR,SCBPTR                                       0212
*                   END;                                           0213
*                 ELSE                                             0214
*                   DO;                                            0214
         B     @RC00209                                            0214
@RF00209 DS    0H                                                  0215
*                     SCBPTR=SCBCHAIN;                             0215
         L     SCBPTR,SCBCHAIN(,SCBPTR)                            0215
*                   END;                                           0216
*               END;                                               0217
@RC00209 DS    0H                                                  0217
@DE00208 LTR   SCBPTR,SCBPTR                                       0217
         BNZ   @DL00208                                            0217
*             END;                                                 0218
*           ELSE                    /* ENCOUNTERED STORAGE CHECK BUT
*                                      NO VALID ADDRESS OF ERROR   0219
*                                      AVAILIBLE                     */
*             DO;                                                  0219
         B     @RC00206                                            0219
@RF00206 DS    0H                                                  0220
*               TCBSTABB=0;         /* TERMINATE SCB QUEUE BY ZEROING
*                                      QUEUE PTR IN TCB              */
         SLR   @15,@15                                             0220
         STCM  @15,7,TCBSTABB(TCBPTR)                              0220
*             END;                                                 0221
*         END;                                                     0222
@RC00206 DS    0H                                                  0223
*     END;                                                         0223
*                                                                  0223
@RF00204 DS    0H                                                  0224
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS FOR THE REMAINING TYPE ENTRY CONDITIONS (RB OR XCTL   */
*   /* TYPE)                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0224
*   SCBPTR=TCBSTABB;                /* REINITIALIZE SCBPTR TO      0224
*                                      BEGINNING OF SCB QUEUE        */
@RC00199 L     SCBPTR,TCBSTABB-1(,TCBPTR)                          0224
         LA    SCBPTR,0(,SCBPTR)                                   0224
*   IF SCBPTR^=0                    /* ANY SCB'S ?                   */
*     THEN                                                         0225
         LTR   SCBPTR,SCBPTR                                       0225
         BZ    @RF00225                                            0225
*     DO;                                                          0226
*       OLDRB=RBOLDPTR;             /* RETRIEVE POSSIBLE PTR TO OLDRB*/
         L     @15,SDWAPARM(,SDWAPTR)                              0227
         L     OLDRB,RBOLDPTR(,@15)                                0227
*       NEWRB=RBNEWPTR;             /* RETRIEVE POSSIBLE PTR TO NEWRB*/
         L     NEWRB,RBNEWPTR(,@15)                                0228
*       IF RETRYIND='10'X           /* RB TYPE PURGE                 */
*         THEN                                                     0229
         CLI   RETRYIND(@15),X'10'                                 0229
         BNE   @RF00229                                            0229
*         DO WHILE(SCBPTR^=0&SCBOWNRA=OLDRB);                      0230
         B     @DE00230                                            0230
@DL00230 DS    0H                                                  0231
*           TCBSTABB=SCBCHAIN;      /* DELETE THIS SCB FROM CHAIN    */
         L     @15,SCBCHAIN(,SCBPTR)                               0231
         STCM  @15,7,TCBSTABB(TCBPTR)                              0231
*           SCBPTR=SCBCHAIN;        /* POINT TO NEXT SCB             */
         LR    SCBPTR,@15                                          0232
*         END;                                                     0233
@DE00230 LTR   SCBPTR,SCBPTR                                       0233
         BZ    @DC00230                                            0233
         L     @15,SCBOWNRA-1(,SCBPTR)                             0233
         LA    @15,0(,@15)                                         0233
         CR    OLDRB,@15                                           0233
         BE    @DL00230                                            0233
@DC00230 DS    0H                                                  0234
*       ELSE                                                       0234
*         DO WHILE(SCBPTR^=0&(SCBOWNRA=OLDRB×SCBOWNRA=NEWRB));     0234
         B     @RC00229                                            0234
@RF00229 B     @DE00234                                            0234
@DL00234 DS    0H                                                  0235
*           TCBSTABB=SCBCHAIN;      /* DELETE THIS SCB FROM CHAIN    */
         L     @15,SCBCHAIN(,SCBPTR)                               0235
         STCM  @15,7,TCBSTABB(TCBPTR)                              0235
*           SCBPTR=SCBCHAIN;        /* POINT TO NEXT SCB             */
         LR    SCBPTR,@15                                          0236
*         END;                                                     0237
@DE00234 LTR   SCBPTR,SCBPTR                                       0237
         BZ    @DC00234                                            0237
         L     @15,SCBOWNRA-1(,SCBPTR)                             0237
         LA    @15,0(,@15)                                         0237
         CR    @15,OLDRB                                           0237
         BE    @DL00234                                            0237
         CR    @15,NEWRB                                           0237
         BE    @DL00234                                            0237
@DC00234 DS    0H                                                  0238
*     END;                                                         0238
*                                                                  0238
@RC00229 DS    0H                                                  0239
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE REGISTERS IN SDWA FROM SAVE AREA                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0239
*   RESPECIFY                                                      0239
*     R13 RESTRICTED;                                              0239
@RF00225 DS    0H                                                  0240
*   R13=SAVEPTR;                    /* RETREIVE SAVE AREA PTR        */
         L     @15,SDWAPARM(,SDWAPTR)                              0240
         L     R13,SAVEPTR(,@15)                                   0240
*   RESPECIFY                                                      0241
*     R9 RESTRICTED;                                               0241
*   R9=ADDR(SDWASRSV);              /* POINT TO SAVE AREA IN SDWA    */
         LA    R9,SDWASRSV(,SDWAPTR)                               0242
*   GEN REFS(R9,R13,R3);                                           0243
  MVC 56(4,R9),12(R13)             /*  RESTORE R14                   */
  ST  R13,52(R9)              /*  RESTORE R13             @ZA06227*/
  MVC    0(52,R9),20(R13)          /*  RESTORE R0-R12                */
     SETFRR D,WRKREGS=(9,3)
*   DO;                             /* SETRP RETADDR(TRMRETRY)RETREGS
*                                      (YES)RC(4)                    */
*     RESPECIFY                                                    0245
*      (GPR00P,                                                    0245
*       GPR01P,                                                    0245
*       GPR14P,                                                    0245
*       GPR15P) RSTD;                                              0245
*     GPR01P->SDWARCDE=4;           /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0246
*     GPR01P->SDWARTYA=ADDR(TRMRETRY);/* SAVE RETRY ADDRESS          */
         LA    @11,TRMRETRY                                        0247
         ST    @11,SDWARTYA(,GPR01P)                               0247
*     GPR01P->SDWAUPRG='1'B;        /* TURN ON RETREGS INDICATOR     */
         OI    SDWAUPRG(GPR01P),B'00001000'                        0248
*     RESPECIFY                                                    0249
*      (GPR00P,                                                    0249
*       GPR01P,                                                    0249
*       GPR14P,                                                    0249
*       GPR15P) UNRSTD;                                            0249
*   END;                            /* GO RETRY                      */
*   GOTO R14->OUT;                                                 0251
         BR    R14                                                 0251
*TRMRETRY:                                                         0252
*   RESPECIFY                                                      0252
*     RCODE RESTRICTED;                                            0252
TRMRETRY DS    0H                                                  0253
*   RCODE=4;                        /* INDICATE FAILURE              */
         LA    RCODE,4                                             0253
*   GOTO R14->OUT;                  /* RETURN TO CALLER              */
         BR    R14                                                 0254
*   RESPECIFY                                                      0255
*     RCODE UNRESTRICTED;                                          0255
*ESTAEFRR:                                                         0256
*   GEN(BALR  8,0);                 /* ESTABLISH ADDRESSABILITY    0256
*                                                            @Z40FPXA*/
ESTAEFRR BALR  8,0
*   GEN(USING *,8);                 /* BASE REGISTER                 */
         USING *,8
*   RFY                                                            0258
*    (R8,                                                          0258
*     R9,                                                          0258
*     R14) RSTD;                                                   0258
*                                                                  0258
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS RECOVERY ROUTINE FOR ESTAE PROCESSOR, SCAN SCB QUEUE, */
*   /* AND FREESCB QUEUE AND TRUNCATE IF ANY ERRORS ARE FOUND IN     */
*   /* QUEUE                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0259
*   SDWACSCT='IEAVTSBP';            /* CSECT NAME            @Z40FPXA*/
         MVC   SDWACSCT(8,SDWAPTR),@CC02642                        0259
*   SDWAREXN='ESTAEFRR';            /* RECOVERY NAME         @Z40FPXA*/
         MVC   SDWAREXN(8,SDWAPTR),@CC02652                        0260
*   SDWAMODN='IGC00060';            /* MODULE NAME           @Z40FPXA*/
*                                                                  0261
         MVC   SDWAMODN(8,SDWAPTR),@CC02653                        0261
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET SUPER BITS, AND ESTAE IN PROGRESS INDICATORS    @Z40FPXA*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0262
*   PSAESTA='0'B;                   /* RESET SUPER BIT       @Z40FPXA*/
         NI    PSAESTA,B'11110111'                                 0262
*   TCBPTR=PSATOLD;                 /* PICK UP TCB POINTER           */
         L     TCBPTR,PSATOLD                                      0263
*   R9=TCBSTAWA;                    /* SAVE ADDRESS OF STA0 WORK AREA
*                                                            @Z40FPXA*/
         L     R9,TCBSTAWA(,TCBPTR)                                0264
*   IF TCBSTAFX='1'B THEN           /* ALLOW FOR             @ZA24347*/
         TM    TCBSTAFX(TCBPTR),B'01000000'                        0265
         BNO   @RF00265                                            0265
*     DO;                           /* ASYNCRONOUS           @ZA24347*/
*       TCBFX='0'B;                 /* INTERRUPTS.           @ZA24347*/
         NI    TCBFX(TCBPTR),B'11111110'                           0267
*       TCBSTAFX='0'B;              /*                       @ZA24347*/
         NI    TCBSTAFX(TCBPTR),B'10111111'                        0268
*     END;                          /*                       @ZA24347*/
*   ELSE                                                           0270
*     ;                             /*                       @ZA24347*/
@RF00265 DS    0H                                                  0271
*   TCBSTAWA=0;                     /* CLEAR FLAG            @Z40FPXA*/
         SLR   @15,@15                                             0271
         ST    @15,TCBSTAWA(,TCBPTR)                               0271
*   SDWAGR09=R9;                    /* WORK REG FOR RETRY    @Z40FPXA*/
         ST    R9,SDWAGR09(,SDWAPTR)                               0272
*   R6=0;                           /* CLEAR WORK REGISTER   @Z40FPXA*/
         SLR   R6,R6                                               0273
*   SCBPTR=TCBSTABB;                /* POINT TO TOP OF SCB QUEUE   0274
*                                                            @Z40FPXA*/
*                                                                  0274
         L     SCBPTR,TCBSTABB-1(,TCBPTR)                          0274
         LA    SCBPTR,0(,SCBPTR)                                   0274
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN TCB SCB QUEUE, AND VERIFY ALL ADDRESS ARE VALID          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0275
*   DO WHILE(SCBPTR^=0);            /* SCAN TO END OF QUEUE  @Z40FPXA*/
         B     @DE00275                                            0275
@DL00275 DS    0H                                                  0276
*     GEN(LRA R0,0(SCBPTR));        /* VERIFY VALID ADDRESS  @Z40FPXA*/
         LRA R0,0(SCBPTR)
*     BC(7,BADADD1);                /* EXIT IF INVALID ADDRESS     0277
*                                                            @Z40FPXA*/
*                                                                  0277
         BC    7,BADADD1                                           0277
*     /***************************************************************/
*     /*                                                             */
*     /* INSURE THAT BLOCK POINTED TO IS AN SCB                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0278
*     IF SCBID^='BD'X THEN          /* IS BLOCK AN SCB?      @Z40FPXA*/
         CLI   SCBID(SCBPTR),X'BD'                                 0278
         BNE   @RT00278                                            0278
*       GOTO BADADD1;               /* NO... TRUNCATE QUEUE  @Z40FPXA*/
*     R6=SCBPTR;                    /* SAVE LAST SCB ADDRESS @Z40FPXA*/
         LR    R6,SCBPTR                                           0280
*     SCBPTR=SCBCHAIN;              /* ADDRESS OF NEXT SCB   @Z40FPXA*/
         L     SCBPTR,SCBCHAIN(,SCBPTR)                            0281
*   END;                            /* END OF SCAN LOOP      @Z40FPXA*/
*                                                                  0282
@DE00275 LTR   SCBPTR,SCBPTR                                       0282
         BNZ   @DL00275                                            0282
*   /*****************************************************************/
*   /*                                                               */
*   /* CONTROL REACHES HERE EITHER BECAUSE OF END OF QUEUE OR BAD    */
*   /* ADDRESS/SCB IN QUEUE                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0283
*BADADD1:                                                          0283
*   IF SCBPTR^=0 THEN               /* IF NOT ZERO, ERROR FOUND    0283
*                                                            @Z40FPXA*/
BADADD1  SLR   @15,@15                                             0283
         CR    SCBPTR,@15                                          0283
         BE    @RF00283                                            0283
*     IF R6=0 THEN                  /* FIRST SCB BAD?        @Z40FPXA*/
         CR    R6,@15                                              0284
         BNE   @RF00284                                            0284
*       TCBSTABB=0;                 /* TRUNCATE QUEUE AT TCB @Z40FPXA*/
         STCM  @15,7,TCBSTABB(TCBPTR)                              0285
*     ELSE                                                         0286
*       R6->SCBCHAIN=0;             /* TRUNCATE QUEUE AT LAST SCB  0286
*                                                            @Z40FPXA*/
*                                                                  0286
         B     @RC00284                                            0286
@RF00284 SLR   @15,@15                                             0286
         ST    @15,SCBCHAIN(,R6)                                   0286
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN FREE SCB QUEUE TO INSURE QUEUE IS INTACT                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0287
*   RFY                                                            0287
*    (R7) RSTD;                     /* RESTRICT REGISTER     @Z40FPXA
*                                                            @ZA11838*/
@RC00284 DS    0H                                                  0287
@RF00283 DS    0H                                                  0288
*   R7=WSALSTAE;                    /* POINT TO FREE QUEUE   @Z40FPXA*/
         L     @15,ASCBPTR                                         0288
         L     @15,ASXBPTR(,@15)                                   0288
         L     @15,ASXBSPSA(,@15)                                  0288
         L     R7,WSALSTAE(,@15)                                   0288
*   SCBPTR=FREESCBQ;                /* POINT TO TOP OF FREE CELL   0289
*                                      QUEUE                 @Z40FPXA*/
         L     SCBPTR,FREESCBQ(,R7)                                0289
*   R6=0;                           /* CLEAR WORK REGISTER   @Z40FPXA*/
         SLR   R6,R6                                               0290
*   DO WHILE(SCBPTR^=0);            /* SCAN TO END OF QUEUE  @Z40FPXA*/
         B     @DE00291                                            0291
@DL00291 DS    0H                                                  0292
*     GEN(LRA  R0,0(SCBPTR));       /* CHECK FOR VALID ADDRESS     0292
*                                                            @Z40FPXA*/
         LRA  R0,0(SCBPTR)
*     BC(7,BADADD2);                /* EXIT IF INVALID ADDRESS     0293
*                                                            @Z40FPXA*/
         BC    7,BADADD2                                           0293
*     R6=SCBPTR;                    /* SAVE LAST GOOD CELL ADDRESS 0294
*                                                            @Z40FPXA*/
         LR    R6,SCBPTR                                           0294
*     SCBPTR=SCBCHAIN;              /* PICK UP NEXT CELL ADDRESS   0295
*                                                            @Z40FPXA*/
         L     SCBPTR,SCBCHAIN(,SCBPTR)                            0295
*   END;                            /* END OF QUEUE SEARCH   @Z40FPXA*/
@DE00291 LTR   SCBPTR,SCBPTR                                       0296
         BNZ   @DL00291                                            0296
*BADADD2:                                                          0297
*   IF SCBPTR^=0 THEN               /* IF NON ZERO A ERROR WAS FOUND
*                                                            @Z40FPXA*/
BADADD2  SLR   @15,@15                                             0297
         CR    SCBPTR,@15                                          0297
         BE    @RF00297                                            0297
*     IF R6^=0 THEN                 /* FIRST CELL IN ERROR?  @Z40FPXA*/
         CR    R6,@15                                              0298
         BE    @RF00298                                            0298
*       FREESCBQ=0;                 /* TRUNCATE FREE CELL QUEUE AT 0299
*                                      TOP                   @Z40FPXA*/
         ST    @15,FREESCBQ(,R7)                                   0299
*     ELSE                                                         0300
*       R6->SCBCHAIN=0;             /* TRUNCATE AT LAST VALID CELL 0300
*                                                            @Z40FPXA*/
*                                                                  0300
         B     @RC00298                                            0300
@RF00298 SLR   @15,@15                                             0300
         ST    @15,SCBCHAIN(,R6)                                   0300
*   /*****************************************************************/
*   /*                                                               */
*   /* BOTH SCB CELL CHAINS HAVE BEEN VERIFIED, RETURN TO STA0'S     */
*   /* CALLER WITH RETURN CODE 16 INDICATING UNEXPECTED ERROR        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0301
*   RETCOD=16;                      /* SET ERROR RETURN CODE         */
@RC00298 DS    0H                                                  0301
@RF00297 MVI   RETCOD(R9),X'10'                                    0301
*   SDWARTYA=ADDR(ESTARETY);        /* RETRY ADDRESS         @Z40FPXA*/
         LA    @15,ESTARETY                                        0302
         ST    @15,SDWARTYA(,SDWAPTR)                              0302
*   SDWARCDE=4;                     /* INDICATE RETRY TO RTM @Z40FPXA*/
         MVI   SDWARCDE(SDWAPTR),X'04'                             0303
*   GEN(SETFRR D,WRKREGS=(R2,R3));  /* DELETE FRR            @Z40FPXA*/
         SETFRR D,WRKREGS=(R2,R3)
*   GEN(BR   R14);                  /* RETURN TO RTM WITH RETRY CODE
*                                                            @Z40FPXA*/
         BR   R14
*                                                                  0306
*   /*****************************************************************/
*   /*                                                               */
*   /* RETRY POINT FROM ESTAE FRR. ROUTINE WILL ENABLE THE CURRENT   */
*   /* PSW, AND BRANCH TO THE ESTAE RETRY POINT                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0306
*ESTARETY:                          /* ESTAE RETRY POINT             */
*   GENERATE;                                                      0306
ESTARETY DS    0H                                                  0306
        ENTRY  ESTARETY              ENTRY POINT FOR RETRY
        USING  *,15                  ADDRESSABILITY
        STOSM  SBPBYTE,X'07'         ENABLE FOR RETURN TO CALLER
        L      R14,FLCCVT            CVT POINTER
        L      R14,CVTSV60-CVT(R14)  ADDRESS OF ESTAE BRANCH ENTRY PT
        SL     R14,FOURCON           RETRY POINT IS 4 BEFORE ENTRY
        LR     R15,R14               COPY INTO REG 15
        BR     R15                   ENTER ESTAE FOR RETURN TO CALLER
        DS     0F
FOURCON DC    F'4'                   CONSTANT FOR DECREMENTING PTR
SBPBYTE DC    X'00'
*                                                                  0307
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTAECHK ROUTINE IS ENTERED FROM IEAVTRTM TO DETERMINE IF THE */
*   /* CURRENT ERROR OCCURED WHILE THE ESTAE SERVICE ROUTINE WAS IN  */
*   /* CONTROL, IF SO A FRR IS ADDED TO THE CURRENT STACK, AND A     */
*   /* SUPER BIT IS SET TO INSURE THAT ESTAE'S FRR WILL GAIN CONTROL */
*   /* FIRST                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0307
*ESTAECHK:                          /* CHECK IF ESTAE WAS IN CONTROL
*                                                            @Z40FPXA*/
*   GENERATE;                                                      0307
ESTAECHK DS    0H                                                  0307
*                     /* GET ADDRESSABILITY TO SAVE AREA @Z40FPXA*/
      ENTRY ESTAECHK
      L     R15,PSALCCAV-PSA          ADDRESS OF MY LCCA
      L     R15,LCCACPUS-LCCA(R15)    CPU RELATED SAVE AREA
      L     R15,WSACRRSA-WSAC(R15)    REFRESH SAVE AREA
      STM   R0,R14,0(R15)             SAVE REGISTERS
      BALR  R8,0                      SET UP BASE REG
*   GEN REFS(PSALCCAV,PSA,LCCACPUS,LCCA,WSACRRSA,WSAC,CVTSV60,CVT) 0308
*       (USING  *,8);               /* SET UP ADDRESSABILITY @Z40FPXA*/
         USING  *,8
*   RFY                                                            0309
*    (R8,                                                          0309
*     R15) RSTD;                                                   0309
*                                                                  0309
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF ESTAE SERVICE ROUTINE WAS IN CONTROL AT TIME OF      */
*   /* ERROR,                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0310
*   IF PSATOLD^=0&PSATOLD->TCBSTAWA^=0 THEN/* ESTAE IN CONTROL?      */
         L     @11,PSATOLD                                         0310
         SLR   @03,@03                                             0310
         CR    @11,@03                                             0310
         BE    @RF00310                                            0310
         C     @03,TCBSTAWA(,@11)                                  0310
         BE    @RF00310                                            0310
*     DO;                           /* SET UP FRR FOR ESTAE RECOVERY
*                                                            @Z40FPXA*/
*       GEN(SETFRR A,FRRAD=ESTFRR,WRKREGS=(13,14));/* SET UP FRR   0312
*                                                            @Z40FPXA*/
         SETFRR A,FRRAD=ESTFRR,WRKREGS=(13,14)
*       PSAESTA='1'B;               /* SET SUPER BIT         @Z40FPXA*/
         OI    PSAESTA,B'00001000'                                 0313
*     END;                                                         0314
*   GENERATE;                                                      0315
@RF00310 DS    0H                                                  0315
*             /* RELOAD REGS AND RETURN TO CALLER */
       LM   R0,R14,0(R15)
       BR   R14
ESTFRR DC   A(ESTAEFRR)
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0316
*     GPR01P PTR(31) REG(1),                                       0316
*     GPR14P PTR(31) REG(14),                                      0316
*     GPR15P PTR(31) REG(15);                                      0316
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0317
*     I031F FIXED(31) BASED,                                       0317
*     I031P PTR(31) BASED,                                         0317
*     I015F FIXED(15) BASED,                                       0317
*     I015P PTR(15) BASED,                                         0317
*     I008P PTR(8) BASED,                                          0317
*     I001C CHAR(1) BASED;                                         0317
*   END IEAVTSBP                                                   0318
*                                                                  0318
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (TRMSPEC )                                       */
*/*%INCLUDE SYSUT5  (TRMDCL  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHASCB  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSUT5  (TRMSETUP)                                       */
*/*%INCLUDE SYSUT5  (TRMPROCS)                                       */
*/*%INCLUDE SYSUT5  (TRMFREE )                                       */
*/*%INCLUDE SYSUT5  (TRRMFRR )                                       */
*/*%INCLUDE SYSUT5  (ESTAEFRR)                                       */
*                                                                  0318
*       ;                                                          0318
@EL00001 DS    0H                                                  0318
@EF00001 DS    0H                                                  0318
@ER00001 LM    @14,@12,12(@13)                                     0318
         BR    @14                                                 0318
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IEAVTSBP CSECT
         DS    0F
@CF00097 DC    F'64'
@CF02674 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEAVTSBP CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC02642 DC    C'IEAVTSBP'
@CC02652 DC    C'ESTAEFRR'
@CC02653 DC    C'IGC00060'
@CB02647 DC    X'0C4000'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
SDWAPTR  EQU   @01
ENDSCB   EQU   @02
R3       EQU   @03
PREVSCB  EQU   @03
FRRPRMPT EQU   @03
TCBPTR   EQU   @04
NEWRB    EQU   @05
OLDRB    EQU   @06
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
RBSAVE   EQU   @09
SCBPTR   EQU   @10
R11      EQU   @11
R14      EQU   @14
R15      EQU   @15
R13      EQU   @13
RCODE    EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
R2       EQU   @02
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSAESTA  EQU   PSASUP3
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
OUT      EQU   0
RBSECPTR EQU   0
FRRSPTR  EQU   0
FRREPTR  EQU   0
FRRPARM  EQU   0
RETRYIND EQU   FRRPARM
RBOLDPTR EQU   FRRPARM+4
RBNEWPTR EQU   FRRPARM+8
PTRTCB   EQU   FRRPARM+12
SAVEPTR  EQU   FRRPARM+16
VALIDLST EQU   FRRPARM+20
@NM00001 EQU   0
FREESCBQ EQU   @NM00001+108
@NM00003 EQU   0
RETCOD   EQU   @NM00003+12
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWAGR09 EQU   SDWAGRSV+36
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWASCKB EQU   SDWASTCK
SDWASCKE EQU   SDWASTCK+4
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWASRVL EQU   SDWAMCHS
SDWAMCHD EQU   SDWAMCHI+1
SDWASKYF EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAFMID EQU   SDWA+236
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWAUPRG EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFX    EQU   TCBFLGS1
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBSTABB EQU   TCBSTAB+1
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBSTAWA EQU   TCB+252
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBSTAFX EQU   TCBESTRM
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
SCB      EQU   0
SCBCHAIN EQU   SCB
SCBPARM  EQU   SCB+8
SCBFLGS1 EQU   SCBPARM
SCBIOPRC EQU   SCBFLGS1
SCBOWNR  EQU   SCB+12
SCBFLGS2 EQU   SCBOWNR
SCBXCTL2 EQU   SCBFLGS2
SCBOWNRA EQU   SCBOWNR+1
SCBDATA  EQU   SCB+16
SCBFLGS3 EQU   SCBDATA
SCBBRNTR EQU   SCBFLGS3
SCBID    EQU   SCBDATA+2
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBSCB    EQU   RBFLAGS1
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00077 EQU   RBSECT+10
@NM00078 EQU   @NM00077
RBTRSVRB EQU   @NM00078
@NM00080 EQU   @NM00077+1
RBETXR   EQU   @NM00080
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00087 EQU   RBSECT+28
@NM00088 EQU   @NM00087
IRBEND   EQU   RBSECT+96
@NM00091 EQU   RBSECT+96
RBRSV138 EQU   @NM00091+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
WSAL     EQU   0
WSALSTAE EQU   WSAL+44
WSAG     EQU   0
WSAC     EQU   0
WSACRRSA EQU   WSAC+48
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
CVTPTR   EQU   FLCCVT
ASCBPTR  EQU   PSAAOLD
ASXBPTR  EQU   ASCBASXB
LCCAPTR  EQU   PSALCCAV
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSV60  EQU   CVTS01+228
CVTSPSA  EQU   CVTS01+336
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00092 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBCDSAVE EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGGMFM EQU   WSAG+4
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALSDMP EQU   WSAL+12
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
@NM00118 EQU   FRRSFLGS+1
@NM00117 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00091+8
PRBEND   EQU   @NM00091+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00091+6
RBRSV136 EQU   @NM00091+4
RBRSV135 EQU   @NM00091
@NM00090 EQU   RBSECT+32
@NM00089 EQU   @NM00087+1
RBSCF    EQU   @NM00088
RBPGMQ1  EQU   RBPGMQ+1
@NM00086 EQU   RBPGMQ
@NM00085 EQU   RBSECT+16
@NM00084 EQU   @NM00080
@NM00083 EQU   @NM00080
RBIQETP  EQU   @NM00080
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00080
@NM00082 EQU   @NM00080
@NM00081 EQU   @NM00080
RBPMSVRB EQU   @NM00078
RBATNXIT EQU   @NM00078
@NM00079 EQU   @NM00078
RBWAITP  EQU   @NM00078
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00078
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00076 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00075 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00074 EQU   RBOPSWB2
@NM00073 EQU   XRBPSW
@NM00072 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00071 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00070 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00069 EQU   XSTAB1
@NM00068 EQU   RBBASIC+8
@NM00067 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00066 EQU   RBPRFX
SCBRSVRE EQU   SCBDATA+3
SCBPKEY  EQU   SCBDATA+1
@NM00065 EQU   SCBFLGS3
SCBTERMO EQU   SCBFLGS3
SCBPRNTR EQU   SCBFLGS3
SCBCNCEL EQU   SCBFLGS3
SCBRECRD EQU   SCBFLGS3
SCBTERMI EQU   SCBFLGS3
@NM00064 EQU   SCBFLGS3
SCBSUPER EQU   SCBFLGS2
SCBKEY0  EQU   SCBFLGS2
@NM00063 EQU   SCBFLGS2
@NM00062 EQU   SCBFLGS2
SCBINUSE EQU   SCBFLGS2
@NM00061 EQU   SCBFLGS2
@NM00060 EQU   SCBFLGS2
SCBPARMA EQU   SCBPARM+1
SCBHALT  EQU   SCBIOPRC
SCBNOIOP EQU   SCBIOPRC
SCBASYNC EQU   SCBFLGS1
@NM00059 EQU   SCBFLGS1
SCBESTAE EQU   SCBFLGS1
SCBDUMMY EQU   SCBFLGS1
SCBSTAR  EQU   SCBFLGS1
SCBSTAI  EQU   SCBFLGS1
SCBEXIT  EQU   SCB+4
@NM00058 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00057 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00056 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00055 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00054 EQU   CVTFIX+248
@NM00053 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
@NM00052 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00051 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00050 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00049 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00048 EQU   SDWADDAT+3
@NM00047 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00046 EQU   SDWADDAT+1
@NM00045 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00044 EQU   SDWADUMP+2
@NM00043 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00042 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
@NM00041 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00040 EQU   SDWAACF3
@NM00039 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
@NM00038 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00037 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00036 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00035 EQU   SDWA+239
@NM00034 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
@NM00033 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00032 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00031 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00030 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00029 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
@NM00028 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00027 EQU   SDWAINC2
@NM00026 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00025 EQU   SDWAILC2
@NM00024 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00023 EQU   SDWANXT2
@NM00022 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00021 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00020 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00019 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00018 EQU   SDWAINC1
@NM00017 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00016 EQU   SDWAILC1
@NM00015 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00014 EQU   SDWANXT1
@NM00013 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00012 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00011 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00010 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00009 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00008 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00007 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00006 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00005 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00004 EQU   @NM00003
@NM00002 EQU   @NM00001
EXTRA1   EQU   FRRPARM+21
EXTRA    EQU   FRRPARM+1
@NM00116 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00115 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00114 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00113 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00112 EQU   FLCFSA
@NM00111 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00110 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00109 EQU   FLCIOA
@NM00108 EQU   FLCMCLA+15
@NM00107 EQU   FLCMCLA+14
@NM00106 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00105 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00104 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00103 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00102 EQU   FLCPER
@NM00101 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00100 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00099 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00098 EQU   FLCPIILC
@NM00097 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00096 EQU   FLCSVILC
@NM00095 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00094 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00093 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00126 EQU   @RC00119
@RT00278 EQU   BADADD1
@ENDDATA EQU   *
         END   IEAVTSBP,(C'PLS1318',0800,78081)
