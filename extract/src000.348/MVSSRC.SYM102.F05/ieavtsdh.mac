         TITLE 'IEAVTSDH-SVC DUMP DATA SET INITIALIZATION              *
                        '
IEAVTSDH CSECT ,                                                   0001
@MAINENT BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEAVTSDH  77.343'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*   ERRBASE1=R9;                    /* SAVE BASE REGISTER FOR      0184
*                                      RECOVERY                      */
         ST    R9,ERRBASE1(,R3)                                    0184
*   SVCDMPNM=CSECTNAM;              /* SAVE MODULE NAME FOR RECOVERY */
         MVC   SVCDMPNM(8,R7),@CC04757                             0185
*   RFY                                                            0186
*     SDUMP BASED(SDWSDPL);         /* PARMLIST ADDR IN SDUMP WORK 0186
*                                                            @G33VPHD*/
*                                                                  0186
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SYSMDUMP IS REQUESTED, BSAM I/O IS USED. NO I/O INIT NEEDS */
*   /* TO BE PERFORMED FOR SYSMDUMP REQUESTS                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0187
*   IF SDUABEND='0'B THEN           /* IF THIS IS NOT A SYSMDUMP   0187
*                                      REQUEST                       */
         L     @12,SDWSDPL(,R7)                                    0187
         TM    SDUABEND(@12),B'01000000'                           0187
         BNZ   @RF00187                                            0187
*     DO;                           /* SELECT A DUMP DATA SET AND  0188
*                                      INITIALIZE I/O CONTROL BLOCKS */
*       SDSMBUFF=ADDR(SDBUFFER);    /* GET ADDRESS OF 4104 BYTE    0189
*                                      OUTPUT BUFFER FOR PRDMP RECORD
*                                      ADDRESSING            @ZM45089*/
         LA    @08,SDBUFFER(,R7)                                   0189
         ST    @08,SDSMBUFF(,R7)                                   0189
*/********************************************************************/
*/*   THIS SEGMENT INITIALIZES FOR I/O.  IF THE CALLER DID NOT       */
*/*   SUPPLY A DATASET, ONE IS SELECTED FROM THE SYS1.DUMP           */
*/*   DATASETS.  THE IOB AND CCW ARE INITIALIED TO REFLECT THE       */
*/*   DEVICE (DASD OR TAPE).  INPUT: SDUMP PARM LIST, SYS1.DUMP      */
*/*   DATASET TABLE IN RTMCT. OUTPUT: INITIALIZED I/O CONTROL        */
*/*   BLOCKS INCLUDING A DUMP DATASET FOR THIS DUMP                  */
*/*   INCLUDED BY: TOP SEGMENT                                       */
*/********************************************************************/
*                                                                  0190
*       RFY                                                        0190
*         IOBSTDRD BASED(ADDR(SDIOB));                             0190
*       RFY                                                        0191
*         IHADCB BASED(IOBDCBPB);                                  0191
*       RFY                                                        0192
*         DEBBASIC BASED(DCBDEBA);                                 0192
*       RFY                                                        0193
*         DEBDASD BASED(ADDR(DEBBASND));                           0193
*       RFY                                                        0194
*         UCBOB BASED(DEBSUCBA);                                   0194
*       RFY                                                        0195
*         ECB BASED(ADDR(SDECB));                                  0195
*       CCWCHAIN=CCWCHAIN&&CCWCHAIN;/* CLEAR CCW CHAIN TO ZERO       */
         XC    CCWCHAIN(24,R7),CCWCHAIN(R7)                        0196
*       SDECB=NULL;                 /* CLEAR ECB TO ZEROES           */
         SLR   @08,@08                                             0197
         ST    @08,SDECB(,R7)                                      0197
*       SDIOB=SDIOB&&SDIOB;         /* CLEAR IOB TO ZEROES           */
         XC    SDIOB(40,R7),SDIOB(R7)                              0198
*       IOBECBPB=ADDR(SDECB);       /* PUT ECB ADDRESS INTO IOB      */
         LA    @08,4                                               0199
         ALR   @08,R7                                              0199
         STCM  R7,7,IOBECBPB(@08)                                  0199
*       IOBSTRTB=ADDR(CCWCHAIN);    /* START ADDRESS OF CCW          */
         LA    @06,CCWCHAIN(,R7)                                   0200
         STCM  @06,7,IOBSTRTB(@08)                                 0200
*       IOBUNREL='1'B;              /* I/O REQUEST IS UNRELATED TO 0201
*                                      ANY OTHER I/O REQUESTS        */
*                                                                  0201
         OI    IOBUNREL(@08),B'00000010'                           0201
*       /*************************************************************/
*       /*                                                           */
*       /* SYSMDUMP REQUESTS WILL ALWAYS HAVE THE DCB OPERAND        */
*       /* SPECIFIED AND WILL NOT MODIFY THE RTCT                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0202
*       IF SDUDCB='1'B THEN         /* IF CALLER SUPPLIED A DATASET  */
         TM    SDUDCB(@12),B'10000000'                             0202
         BNO   @RF00202                                            0202
*         DO;                       /* USE IT                        */
*           IOBDCBPB=SDUDCBAD;      /* CHAIN I/O CNTRL BLOCKS        */
         MVC   IOBDCBPB(3,@08),SDUDCBAD+1(@12)                     0204
*         END;                                                     0205
*       ELSE                                                       0206
*         DO;                                                      0206
         B     @RC00202                                            0206
@RF00202 DS    0H                                                  0207
*           RFY                                                    0207
*             R10 RSTD;                                            0207
*                                                                  0207
*           /*********************************************************/
*           /*                                                       */
*           /* SEARCH FOR UNUSED DUMP DATA SET TO USE FOR THIS DUMP  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0208
*           DCL                                                    0208
*             1 * DEF(DSTINDEX) PTR(31),/* DIVIDE DSTINDEX INTO TWO
*                                      PARTS TO AVOID HAVING TO    0208
*                                      CHANGE THE WORK AREA  @G33VPHE*/
*              2 DSCNT PTR(16),     /*                       @G33VPHE*/
*              2 DSINDEX PTR(16);   /*                       @G33VPHE*/
*           DSCNT=0;                /*                       @G33VPHE*/
         SLR   @12,@12                                             0209
         STH   @12,DSCNT(,R7)                                      0209
*           DSINDEX=0;              /*                       @G33VPHE*/
         STH   @12,DSINDEX(,R7)                                    0210
*           DO R10=1 TO DIM(RTCTSDDS) WHILE(RTCTDSNM(R10)^=0&DSCNT<2);
         LA    R10,1                                               0211
@DL00211 LR    @12,R10                                             0211
         MH    @12,@CH02075                                        0211
         L     @11,CVTPTR                                          0211
         L     @11,CVTRTMCT(,@11)                                  0211
         L     @08,RTCTDSNM-13(@12,@11)                            0211
         LA    @08,0(,@08)                                         0211
         LTR   @08,@08                                             0211
         BZ    @DC00211                                            0211
         LH    @08,DSCNT(,R7)                                      0211
         N     @08,@CF04940                                        0211
         C     @08,@CF00073                                        0211
         BNL   @DC00211                                            0211
*                                   /* LOOK FOR 2 UNUSED DUMP DATA 0212
*                                      SETS                  @G33VPHE*/
*             IF RTCTDSUS(R10)='0'B /* IS THIS DS UNUSED     @G33VPHE*/
*               THEN                                               0212
         ALR   @12,@11                                             0212
         TM    RTCTDSUS-12(@12),B'01000000'                        0212
         BNZ   @RF00212                                            0212
*               DO;                 /* YES                   @G33VPHE*/
*                 IF RTCTDETP(R10)='0'B/* TAPE OR DA?        @ZM45060*/
*                   THEN            /* TAPE                  @ZM45060*/
         LR    @12,R10                                             0214
         MH    @12,@CH02075                                        0214
         ALR   @11,@12                                             0214
         TM    RTCTDETP-12(@11),B'00100000'                        0214
         BNZ   @RF00214                                            0214
*                   DSCNT=DSCNT+2;  /* COUNT TAPES AS ENOUGH FOR ALL
*                                      NEEDS                 @ZM45060*/
         AL    @08,@CF00073                                        0215
         STH   @08,DSCNT(,R7)                                      0215
*                 ELSE              /* DASD                  @ZM45060*/
*                   DSCNT=DSCNT+1;  /* COUNT DASD AS ONLY GOOD FOR 0216
*                                      ONE DUMP              @G33VPHE*/
         B     @RC00214                                            0216
@RF00214 LA    @12,1                                               0216
         LH    @11,DSCNT(,R7)                                      0216
         N     @11,@CF04940                                        0216
         ALR   @12,@11                                             0216
         STH   @12,DSCNT(,R7)                                      0216
*                 IF DSINDEX=0      /* HAS A DS BEEN CHOSEN TO BE  0217
*                                      USED                  @G33VPHE*/
*                   THEN            /* NO, NONE CHOSEN SO FAR      0217
*                                                            @G33VPHE*/
@RC00214 LH    @12,DSINDEX(,R7)                                    0217
         N     @12,@CF04940                                        0217
         LTR   @12,@12                                             0217
         BNZ   @RF00217                                            0217
*                   DSINDEX=R10;    /* CHOOSE THIS DS AS THE ONE TO
*                                      BE USED FOR THIS DUMP @G33VPHE*/
         STH   R10,DSINDEX(,R7)                                    0218
*               END;                /*                       @G33VPHE*/
@RF00217 DS    0H                                                  0220
*           END;                    /*                       @G33VPHE*/
@RF00212 AL    R10,@CF00061                                        0220
         C     R10,@CF02144                                        0220
         BNH   @DL00211                                            0220
@DC00211 DS    0H                                                  0221
*           IF DSCNT<2              /* WILL THERE BE AN UNUSED DUMP
*                                      DS LEFT AFTER THIS DUMP?    0221
*                                                            @G33VPHE*/
*             THEN                  /* NO EITHER THERE ARE NO UNSED
*                                      DS OR THIS DUMP WILL USE THE
*                                      LAST ONE              @G33VPHE*/
         CLC   DSCNT(2,R7),@CH00073                                0221
         BNL   @RF00221                                            0221
*             DO;                   /* SO LOOK THROUGH THE USED DS 0222
*                                      FOR ONES THAT HAVE BECOME   0222
*                                      AVAILABLE             @G33VPHE*/
*/* ******************************************************************/
*/*    THIS SEGMENT WILL CHECK EACH SYS1.DUMP DATASET AFTER ALL OF   */
*/*    THE ALLOCATED DATA SETS HAVE BEEN USED. IF THE DATA SET IS ON */
*/*    TAPE IT IS ALWAYS CONSIDERED EMPTY AND CAN BE USED. IF THE    */
*/*    DATA SET IS ON DASD, THE FIRST RECORD IS READ. IF THE READ IS */
*/*    UNSUCCESSFUL (ECBCC NOT '7F') AND THE UNIT EXCEPTION FLAG     */
*/*    IS ON IN THE CSW, THE DATASET IS CONSIDERED EMPTY AND CAN     */
*/*    BE USED.  IF ALL ALLOCATED DUMP DATA SETS ARE FULL THE DUMP   */
*/*    TERMINATES WITH RETURN CODE 8.  ALSO MESSAGE IEA994A IS       */
*/*    WRITTEN TO THE OPERATOR IF A SIMILAR MESSAGE IS NOT ALREADY   */
*/*    OUTSTANDING.  IF A DUMP DATA SET IS FOUND AND AN IEA994A      */
*/*    MESSAGE IS OUTSTANDING IT IS DELETED                          */
*/*                                                                  */
*/*    INPUT: DUMP DATA SET TABLE IN RTCT,I/O CONTROL BLOCKS,WTO LIST*/
*/*                                                                  */
*/*    OUTPUT: EMPTY USABLE DATASET, RETURN CODE IS NULL OR RETURN   */
*/*            CODE IS NODUMP IF ALL DEFINED DATASETS ARE FULL.      */
*/*                                                                  */
*/*    INCLUDED BY: SDFILE                                           */
*/* ******************************************************************/
*                                                                  0223
*               IOBCMDCH='1'B;      /* COMMAND CHAINNING             */
         LA    @12,4                                               0223
         ALR   @12,R7                                              0223
         OI    IOBCMDCH(@12),B'01000000'                           0223
*               IOBM=NULLCHAR;      /* RELATIVE EXTENT NUMBER IS 0   */
         MVI   IOBM(@12),X'00'                                     0224
*               IOBR=ONE;           /* FIRST RECORD                  */
         MVI   IOBR(@12),X'01'                                     0225
*               CMDCODE1=SEARCHID;  /* SEARCH IDENTIFIER EQUAL       */
         MVI   CMDCODE1(R7),X'31'                                  0226
*               DATAADR1=ADDR(IOBCC);/* ADDRESS OF CCHHR IN IOB      */
         LA    @12,IOBCC(,@12)                                     0227
         STCM  @12,7,DATAADR1(R7)                                  0227
*               CMDC1='1'B;         /* COMMAND CHAINNING             */
         OI    CMDC1(R7),B'01000000'                               0228
*               BYTECNT1=LENCCHHR;  /* BYTE COUNT IS LEN OF CCHHR    */
         MVC   BYTECNT1(2,R7),@CH00798                             0229
*               CMDCODE2=TIC;       /* TRANSFER IN CHANNEL           */
         MVI   CMDCODE2(R7),X'08'                                  0230
*               DATAADR2=ADDR(CCW1);/* ADDRESS OF SEARCH ID EQ CCW   */
         LA    @12,CCW1(,R7)                                       0231
         STCM  @12,7,DATAADR2(R7)                                  0231
*               CMDCODE3=DRDATA;    /* READ DASD DATA RECORD         */
         MVI   CMDCODE3(R7),X'06'                                  0232
*               DATAADR3=NULL;      /* ZERO DATA ADDR, NO DATA XFER  */
         SLR   @12,@12                                             0233
         STCM  @12,7,DATAADR3(R7)                                  0233
*               SLI3='1'B;          /* SUPPRESS INCORRECT LEN IND    */
*               SKIP3='1'B;         /* SUPPRESS DATA TRANSFER        */
         OI    SLI3(R7),B'00110000'                                0235
*               BYTECNT3=DDRCDLEN;  /* LENGTH OF DASD DATA RECORD    */
         MVC   BYTECNT3(2,R7),@CH04737                             0236
*               DO R10=1 TO DIM(RTCTSDDS) WHILE(RTCTDSNM(R10)^=0);/*
*                                      GO THROUGH ALL THE DEFINED  0237
*                                      DUMP DATA SETS        @G33VPHE*/
         LA    R10,1                                               0237
@DL00237 LR    @12,R10                                             0237
         MH    @12,@CH02075                                        0237
         L     @11,CVTPTR                                          0237
         L     @11,CVTRTMCT(,@11)                                  0237
         L     @08,RTCTDSNM-13(@12,@11)                            0237
         LA    @08,0(,@08)                                         0237
         LTR   @08,@08                                             0237
         BZ    @DC00237                                            0237
*                 IF RTCTDSUS(R10)='1'B/* IS THIS DS MARKED AS USED
*                                                            @G33VPHE*/
*                   THEN            /* YES                   @G33VPHE*/
         ALR   @12,@11                                             0238
         TM    RTCTDSUS-12(@12),B'01000000'                        0238
         BNO   @RF00238                                            0238
*                   IF RTCTDETP(R10)='0'B/* IS IT A TAPE OR DA DS  0239
*                                                            @G33VPHE*/
*                     THEN                                         0239
         LR    @12,R10                                             0239
         MH    @12,@CH02075                                        0239
         ALR   @12,@11                                             0239
         TM    RTCTDETP-12(@12),B'00100000'                        0239
         BNZ   @RF00239                                            0239
*                     DO;           /* TAPE                  @G33VPHE*/
*                       RTCTDSUS(R10)='0'B;/* MARK IT UNUSED SINCE 0241
*                                      TAPES ARE ALWAYS AVAILABLE FOR
*                                      USE                   @G33VPHE*/
         LR    @12,R10                                             0241
         MH    @12,@CH02075                                        0241
         ALR   @11,@12                                             0241
         NI    RTCTDSUS-12(@11),B'10111111'                        0241
*                       DSCNT=DSCNT+2;/* INCR THE COUNT OF USABLE  0242
*                                      DUMP DS BY 2 BECAUSE A TAPE 0242
*                                      BEING ALWAYS AVAILABLE CAN  0242
*                                      HANDLE MORE THAN ONE DUMP EVEN
*                                      IF IT IS THE LAST DS LEFT   0242
*                                                            @G33VPHE*/
         LA    @12,2                                               0242
         LH    @11,DSCNT(,R7)                                      0242
         N     @11,@CF04940                                        0242
         ALR   @12,@11                                             0242
         STH   @12,DSCNT(,R7)                                      0242
*                       IF DSINDEX=0/* HAS A DS BEEN CHOSEN TO BE  0243
*                                      USED                  @G33VPHE*/
*                         THEN      /* NO, NONE CHOSEN SO FAR      0243
*                                                            @G33VPHE*/
         LH    @12,DSINDEX(,R7)                                    0243
         N     @12,@CF04940                                        0243
         LTR   @12,@12                                             0243
         BNZ   @RF00243                                            0243
*                         DSINDEX=R10;/* CHOOSE THIS DS AS THE ONE TO
*                                      BE USED FOR THIS DUMP @G33VPHE*/
         STH   R10,DSINDEX(,R7)                                    0244
*                     END;          /*                       @G33VPHE*/
*                   ELSE                                           0246
*                     DO;           /* THI S IS A DASD DATA SET    0246
*                                                            @G33VPHE*/
         B     @RC00239                                            0246
@RF00239 DS    0H                                                  0247
*                       SDECB=NULL; /* CLEAR ECB TO ZEROES           */
         SLR   @12,@12                                             0247
         ST    @12,SDECB(,R7)                                      0247
*                       IOBCSW=IOBCSW&&IOBCSW;/* CLEAR OLD CSW     0248
*                                      INFORMATION                   */
         XC    IOBCSW+4(7,R7),IOBCSW+4(R7)                         0248
*FUL06:                                                            0249
*                       IOBDCBPB=ADDR(RTCTDCB(R10))-DADCBLEN;/* DCB
*                                      ADDRESS                       */
FUL06    LA    @12,4                                               0249
         ALR   @12,R7                                              0249
         LR    @11,R10                                             0249
         MH    @11,@CH02075                                        0249
         L     @08,CVTPTR                                          0249
         L     @08,CVTRTMCT(,@08)                                  0249
         LA    @11,RTCTDCB-12(@11,@08)                             0249
         SL    @11,@CF03622                                        0249
         STCM  @11,7,IOBDCBPB(@12)                                 0249
*                       IOBBB=DEBBINUM;/* BIN NUMBER FROM DEB        */
         LA    @08,32                                              0250
         L     @11,DCBDEBA+39(,@11)                                0250
         LA    @11,0(,@11)                                         0250
         ALR   @08,@11                                             0250
         MVC   IOBBB(2,@12),DEBBINUM(@08)                          0250
*                       IOBCC=DEBSTRCC;/* START CLY NUMBER FROM DEB  */
         MVC   IOBCC(2,@12),DEBSTRCC(@08)                          0251
*                       IOBHH=DEBSTRHH;/* START HEAD NUMBER FROM DEB */
         MVC   IOBHH(2,@12),DEBSTRHH(@08)                          0252
*                       IOBR=ONE;   /* READ FIRST RECORD             */
         MVI   IOBR(@12),X'01'                                     0253
*                       R1=ADDR(SDIOB);/* ADDRESS OF IOB FOR EXCP    */
         LA    R1,SDIOB(,R7)                                       0254
*                       GEN(EXCP  (R1));/* READ FIRST RCD IN DASD DS */
         EXCP  (R1)
*                       R1=ADDR(SDECB);/* ADDRESS OF ECB FOR WAIT    */
         LR    R1,R7                                               0256
*                       GEN(WAIT  1,ECB=(R1));/* WAIT FOR READ TO  0257
*                                      COMPLETE                      */
         WAIT  1,ECB=(R1)
*FUL08:                                                            0258
*                       IF ECBCC^='7F'X&/* IF I/O UNSUCCESSFUL AND   */
*                           CHANCCHK='0'B&/* NOT ATTENTION AND       */
*                           INTFCCHK='0'B&/* NOT INTERACE CONTROL CHK
*                                      AND                           */
*                           CHANDCHK='0'B&/* NOT CHANNEL DATA CHECK
*                                      AND                           */
*                           UNITCHK='0'B&/* NOT UNIT CHECK AND       */
*                           CHAINCHK='0'B&/* NOT CHAINNING CHECK AND */
*                           PROGMCHK='0'B&/* NOT PROGRAM CHECK AND   */
*                           PROTCHK='0'B&/* NOT PROTECTION CHECK AND */
*                           UNTEXCEP='1'B/* IS UNIT EXCEPTION THEN   */
*                         THEN                                     0258
FUL08    CLI   ECBCC(R7),X'7F'                                     0258
         BE    @RF00258                                            0258
         LA    @12,4                                               0258
         ALR   @12,R7                                              0258
         TM    CHANCCHK(@12),B'00001110'                           0258
         BNZ   @RF00258                                            0258
         TM    UNITCHK(@12),B'00000010'                            0258
         BNZ   @RF00258                                            0258
         TM    CHAINCHK(@12),B'00110001'                           0258
         BNZ   @RF00258                                            0258
         TM    UNTEXCEP(@12),B'00000001'                           0258
         BNO   @RF00258                                            0258
*                         DO;       /* DASD DATASET IS AVAILABLE   0259
*                                      (EMPTY)               @G33VPHE*/
*                           RTCTDSUS(R10)='0'B;/* SO MARK IT AS    0260
*                                      UNUSED AGAIN          @G33VPHE*/
         LR    @12,R10                                             0260
         MH    @12,@CH02075                                        0260
         L     @11,CVTPTR                                          0260
         L     @11,CVTRTMCT(,@11)                                  0260
         ALR   @11,@12                                             0260
         NI    RTCTDSUS-12(@11),B'10111111'                        0260
*                           DSCNT=DSCNT+1;/* INCR THE COUNT OF USABLE
*                                      DUMP DS               @G33VPHE*/
         LA    @12,1                                               0261
         LH    @11,DSCNT(,R7)                                      0261
         N     @11,@CF04940                                        0261
         ALR   @12,@11                                             0261
         STH   @12,DSCNT(,R7)                                      0261
*                           IF DSINDEX=0/* HAS A DS BEEN CHOSEN TO BE
*                                      USED                  @G33VPHE*/
*                             THEN  /* NO, NONE CHOSEN SO FAR      0262
*                                                            @G33VPHE*/
         LH    @12,DSINDEX(,R7)                                    0262
         N     @12,@CF04940                                        0262
         LTR   @12,@12                                             0262
         BNZ   @RF00262                                            0262
*                             DSINDEX=R10;/* CHOOSE THIS DS AS THE 0263
*                                      ONE TO BE USED FOR THIS DUMP
*                                                            @G33VPHE*/
         STH   R10,DSINDEX(,R7)                                    0263
*                         END;      /*                       @G33VPHE*/
@RF00262 DS    0H                                                  0265
*                     END;                                         0265
@RF00258 DS    0H                                                  0266
*               END;                /* OF THE LOOP TO CHECK        0266
*                                      AVAILABLITY OF THE DS @G33VPHE*/
@RC00239 DS    0H                                                  0266
@RF00238 AL    R10,@CF00061                                        0266
         C     R10,@CF02144                                        0266
         BNH   @DL00237                                            0266
@DC00237 DS    0H                                                  0267
*               SDECB=NULL;         /* CLEAR ECB TO ZEROES           */
         SLR   @12,@12                                             0267
         ST    @12,SDECB(,R7)                                      0267
*               IOBCSW=IOBCSW&&IOBCSW;/* CLEAR OLD CSW INFORMATION   */
         LA    @11,4                                               0268
         ALR   @11,R7                                              0268
         XC    IOBCSW(7,@11),IOBCSW(@11)                           0268
*               CCWCHAIN=CCWCHAIN&&CCWCHAIN;/* CLEAR CCW CHAIN TO  0269
*                                      ZEROES                        */
         XC    CCWCHAIN(24,R7),CCWCHAIN(R7)                        0269
*               IOBDCBPB=NULL;      /* SET DCB ADDR TO 0             */
         STCM  @12,7,IOBDCBPB(@11)                                 0270
*             END;                  /* END OF LOOKING FOR DS THAT  0271
*                                      HAVE BECOME AVAILABLE @G33VPHE*/
*           IF DSCNT=0              /* ARE ALL ALLOCATED SYS1.DUMP DS
*                                      ARE FULL              @G33VPHE*/
*             THEN                  /* GG33VPHE                      */
@RF00221 LH    @12,DSCNT(,R7)                                      0272
         N     @12,@CF04940                                        0272
         LTR   @12,@12                                             0272
         BNZ   @RF00272                                            0272
*             DO;                   /*                       @G33VPHE*/
*               ERRENDMP='1'B;      /* INDICATE TERMINAL ERROR     0274
*                                                            @G33VPHE*/
         OI    ERRENDMP(R3),B'01000000'                            0274
*               SDRETCOD=NODUMP;    /* RETURN CODE INDICATES NODUMP
*                                                            @G33VPHE*/
*                                                                  0275
         MVC   SDRETCOD(4,R7),@CF00059                             0275
*               /*****************************************************/
*               /*                                                   */
*               /* ISSUE MESSAGE IEA994A TO OPERATOR IF ALL DUMP DATA*/
*               /* SETS ARE FULL                                     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0276
*               IF SVC994ID=NULL THEN/* IS AN IEA994A MESSAGE      0276
*                                      OUTSTANDING                   */
         L     @12,SVC994ID(,R7)                                   0276
         LTR   @12,@12                                             0276
         BNZ   @RF00276                                            0276
*                 DO;               /* NO SO ISSUE MESSAGE IEA994A   */
*                   GEN;                                           0278
*                                 /*ISSUE MESSAGE IEA994A TO OPERATOR*/
         WTO   'IEA994A ALL SYS1.DUMP DATA SETS ARE FULL AND NO SVC DUMX
               PS CAN BE TAKEN',ROUTCDE=2,DESC=2
*                   SVC994ID=R1&HIGHBYT0;/* SAVE 24 BIT MESSAGE ID   */
         LR    @12,R1                                              0279
         N     @12,@CF04715                                        0279
         ST    @12,SVC994ID(,R7)                                   0279
*                 END;              /* END OF ISSUE MESSAGE IEA994A  */
*             END;                  /* END OF ALL SYS1.DUMP DATA SETS
*                                      ARE FULL                      */
*           ELSE                                                   0282
*             DO;                   /* NOT ALL DUMP DATA SETS ARE  0282
*                                      FULL                          */
*                                                                  0282
         B     @RC00272                                            0282
@RF00272 DS    0H                                                  0283
*               /*****************************************************/
*               /*                                                   */
*               /* IF ALL DUMP DATA SETS ARE NOT FULL DELETE ANY     */
*               /* OUTSTANDING IEA994A MESSAGE                       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0283
*               IF SVC994ID^=NULL THEN/* IF AN IEA994A MESSAGE IS  0283
*                                      OUTSTANDING                   */
         L     @12,SVC994ID(,R7)                                   0283
         LTR   @12,@12                                             0283
         BZ    @RF00283                                            0283
*                 DO;               /* PROCEED TO DOM OR DELETE THE
*                                      MESSAGE                       */
*                   R1=SVC994ID;    /* PUT MESSAGE ID IN REG 1 FOR 0285
*                                      DOM                           */
         LR    R1,@12                                              0285
*                   GEN(DOM   MSG=(R1));/* DELETE OUTSTANDING IEA994A
*                                      MESSAGE                       */
         DOM   MSG=(R1)
*                   SVC994ID=NULL;  /* ZERO SAVED MESSAGE IF NONE  0287
*                                      OUTSTANDING                   */
         SLR   @12,@12                                             0287
         ST    @12,SVC994ID(,R7)                                   0287
*                 END;              /* END IEA994A MESSAGE IS      0288
*                                      OUTSTANDING                   */
*                                                                  0288
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP TO USE THE CHOSEN DS               @G33VPHE*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0289
*               RTCTDSUS(DSINDEX)='1'B;/*                    @G33VPHE*/
@RF00283 LA    @12,12                                              0289
         LH    @05,DSINDEX(,R7)                                    0289
         N     @05,@CF04940                                        0289
         MR    @04,@12                                             0289
         L     @11,CVTPTR                                          0289
         L     @11,CVTRTMCT(,@11)                                  0289
         ALR   @05,@11                                             0289
         OI    RTCTDSUS-12(@05),B'01000000'                        0289
*               IF RTCTDETP(DSINDEX)='0'B/*                  @G33VPHE*/
*                 THEN                                             0290
         LH    @08,DSINDEX(,R7)                                    0290
         N     @08,@CF04940                                        0290
         MH    @08,@CH02075                                        0290
         ALR   @08,@11                                             0290
         TM    RTCTDETP-12(@08),B'00100000'                        0290
         BNZ   @RF00290                                            0290
*                 DO;               /*                       @G33VPHE*/
*                   IOBDCBPB=ADDR(RTCTTDCB)-TADCBLEN;/*      @ZA28385*/
         LA    @08,RTCTTDCB(,@11)                                  0292
         SLR   @08,@12                                             0292
         STCM  @08,7,IOBDCBPB+4(R7)                                0292
*                   DCBDEBA=RTCTDCB(DSINDEX);/*              @ZA28385*/
         LH    @12,DSINDEX(,R7)                                    0293
         N     @12,@CF04940                                        0293
         MH    @12,@CH02075                                        0293
         L     @12,RTCTDCB-12(@12,@11)                             0293
         STCM  @12,7,DCBDEBA+40(@08)                               0293
*                   RTCTTDCB(1)=0;  /*                       @G33VPHE*/
         SLR   @12,@12                                             0294
         ST    @12,RTCTTDCB(,@11)                                  0294
*                 END;              /*                       @G33VPHE*/
*               ELSE                /*                       @G33VPHE*/
*                 IOBDCBPB=ADDR(RTCTDCB(DSINDEX))-DADCBLEN;/*      0296
*                                                            @G33VPHE*/
         B     @RC00290                                            0296
@RF00290 LH    @12,DSINDEX(,R7)                                    0296
         N     @12,@CF04940                                        0296
         MH    @12,@CH02075                                        0296
         L     @11,CVTPTR                                          0296
         L     @11,CVTRTMCT(,@11)                                  0296
         LA    @12,RTCTDCB-12(@12,@11)                             0296
         SL    @12,@CF03622                                        0296
         STCM  @12,7,IOBDCBPB+4(R7)                                0296
*               IF DSCNT=1          /* IS THIS THE LAST EMPTY DATASET
*                                                            @G33VPHE*/
*                 THEN              /* YES IT IS THE LAST EMPTY    0297
*                                                            @G33VPHE*/
@RC00290 CLC   DSCNT(2,R7),@CH00061                                0297
         BNE   @RF00297                                            0297
*                 FLGFLAST='1'B;    /* REQUEST WTO MSG IEA994E BE  0298
*                                      ISSUED                @G33VPHE*/
         OI    FLGFLAST(R7),B'00100000'                            0298
*             END;                  /* END NOT ALL ALLOCATED DUMP  0299
*                                      DATA SETS FULL                */
@RF00297 DS    0H                                                  0300
*           DSCNT=0;                /*                       @G33VPHE*/
@RC00272 SLR   @12,@12                                             0300
         STH   @12,DSCNT(,R7)                                      0300
*         END;                                                     0301
*       RFY                                                        0302
*         R10 UNRSTD;               /*                       @G33VPHE*/
*                                                                  0302
@RC00202 DS    0H                                                  0303
*       /*************************************************************/
*       /*                                                           */
*       /* IF A DUMP DATA SET WAS FOUND INITIALIZE IT                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0303
*       IF ERRENDMP='0'B THEN       /* IF A DATASET WAS FOUND,       */
         TM    ERRENDMP(R3),B'01000000'                            0303
         BNZ   @RF00303                                            0303
*         DO;                       /* INITIALIZE I/O CNTRL BLOCKS   */
*           IF UCB3TAPE='1'B THEN   /* IF DATASET ON TAPE,           */
         LA    @12,4                                               0305
         ALR   @12,R7                                              0305
         L     @08,IOBDCBPB-1(,@12)                                0305
         L     @08,DCBDEBA+39(,@08)                                0305
         L     @08,DEBSUCBA(,@08)                                  0305
         TM    UCB3TAPE(@08),B'10000000'                           0305
         BNO   @RF00305                                            0305
*             DO;                                                  0306
*               IOBINCAM=BLKCNT1;   /* INCREMENT BLK COUNT BY 1      */
         MVC   IOBINCAM(2,@12),@CH00061                            0307
*               CMDCODE1=TWDATA;    /* CMD CODE-WRITE TAPE DATA RCD  */
         MVI   CMDCODE1(R7),X'01'                                  0308
*               SLI1='1'B;          /* SUPPRESS INCORRECT LEN IND    */
         OI    SLI1(R7),B'00100000'                                0309
*               DATAADR1=ADDR(PRDKEY1);/* ADDR OF START OF TAPE RCD  */
         MVC   DATAADR1(3,R7),SDSMBUFF+1(R7)                       0310
*               BYTECNT1=TDRCDLEN;  /* LENGTH OF TAPE DATA RECORD    */
         MVC   BYTECNT1(2,R7),@CH04628                             0311
*             END;                                                 0312
*           ELSE                    /* IF DATASET ON DASD,           */
*             DO;                                                  0313
         B     @RC00305                                            0313
@RF00305 DS    0H                                                  0314
*               IOBCMDCH='1'B;      /* COMMAND CHAINNING             */
         LA    @12,4                                               0314
         ALR   @12,R7                                              0314
         OI    IOBCMDCH(@12),B'01000000'                           0314
*               IOBM=NULLCHAR;      /* RELATIVE EXTENT NUMBER IS 0   */
         MVI   IOBM(@12),X'00'                                     0315
*               IOBBB=DEBBINUM;     /* BIN NUMBER FROM DEB           */
         L     @08,IOBDCBPB-1(,@12)                                0316
         L     @08,DCBDEBA+39(,@08)                                0316
         LA    @08,0(,@08)                                         0316
         LA    @06,32                                              0316
         ALR   @06,@08                                             0316
         MVC   IOBBB(2,@12),DEBBINUM(@06)                          0316
*               IOBCC=DEBSTRCC;     /* START CYL NUMBER FROM DEB     */
         MVC   IOBCC(2,@12),DEBSTRCC(@06)                          0317
*               IOBHH=DEBSTRHH;     /* START HEAD NUMBER FROM DEB    */
         MVC   IOBHH(2,@12),DEBSTRHH(@06)                          0318
*               IOBR=NULLCHAR;      /* FIRST RECORD TO BE WRITTEN    */
         MVI   IOBR(@12),X'00'                                     0319
*               RCDCC=IOBCC;        /* COUNT FIELD CYL - CYL         */
         MVC   RCDCC(2,R7),IOBCC(@12)                              0320
*               RCDHH=IOBHH;        /* COUNT FIELD HEAD - HEAD       */
         MVC   RCDHH(2,R7),IOBHH(@12)                              0321
*               RECORDNO=NULLCHAR;  /* COUNT FIELD - RECORD ZERO     */
         MVI   RECORDNO(R7),X'00'                                  0322
*               CMDCODE1=SEARCHID;  /* CMD CODE-SEARCH ID EQUAL      */
         MVI   CMDCODE1(R7),X'31'                                  0323
*               DATAADR1=ADDR(IOBCC);/* ADDR OF CCHHR IN IOB         */
         LA    @12,IOBCC(,@12)                                     0324
         STCM  @12,7,DATAADR1(R7)                                  0324
*               CMDC1='1'B;         /* FLAGS IS COMMAND CHAIN        */
         OI    CMDC1(R7),B'01000000'                               0325
*               BYTECNT1=LENCCHHR;  /* BYTE COUNT IS LEN OF CCHHR    */
         MVC   BYTECNT1(2,R7),@CH00798                             0326
*               CMDCODE2=TIC;       /* CMD CODE-TRANSFER IN CHANNEL  */
         MVI   CMDCODE2(R7),X'08'                                  0327
*               DATAADR2=ADDR(CCW1);/* DATA ADDR-ADDR OF SEARCH CCW  */
         LA    @12,CCW1(,R7)                                       0328
         STCM  @12,7,DATAADR2(R7)                                  0328
*               CMDCODE3=DWDATA;    /* CMD CODE-WRITE DASD DATA RCD  */
         MVI   CMDCODE3(R7),X'1D'                                  0329
*               DATAADR3=ADDR(SDOUTBUF);/* ADDR OF START OF DASD RCD */
         LA    @12,SDOUTBUF(,R7)                                   0330
         STCM  @12,7,DATAADR3(R7)                                  0330
*               BYTECNT3=DDRCDLEN;  /* LENGTH OF DASD DATA RECORD    */
         MVC   BYTECNT3(2,R7),@CH04737                             0331
*               KEYLEN=NULLCHAR;    /* KEY LENGTH 0, NO KEYS         */
         MVI   KEYLEN(R7),X'00'                                    0332
*               DATALEN=DADATALN;   /* DATA LENTH IN DATA RECORD     */
*                                                                  0333
         MVC   DATALEN(2,R7),@CH04628                              0333
*               /*****************************************************/
*               /*                                                   */
*               /* MATCH THE DASD WITH ITS CORRESPONDING ENTRY IN THE*/
*               /* DATABLE TO REFLECT MAXIMUM RECORDS PER TRACK AND  */
*               /* MAXIMUM TRACKS PER CYLINDER FOR THE TYPE DASD THAT*/
*               /* THE DUMP DATASET IS ON                            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0334
*               IF UCBTBYT4=DA23051 THEN/* 2305-1, 06                */
         L     @12,DEBSUCBA(,@08)                                  0334
         CLI   UCBTBYT4(@12),X'06'                                 0334
         BNE   @RF00334                                            0334
*                 DACHARAD=ADDR(DEVTYP06);                         0335
         LA    @12,DEVTYP06                                        0335
         ST    @12,DACHARAD(,R7)                                   0335
*               ELSE                                               0336
*                 IF UCBTBYT4=DA23052 THEN/* 2305-2, 07              */
         B     @RC00334                                            0336
@RF00334 L     @12,IOBDCBPB+3(,R7)                                 0336
         L     @12,DCBDEBA+39(,@12)                                0336
         L     @12,DEBSUCBA(,@12)                                  0336
         CLI   UCBTBYT4(@12),X'07'                                 0336
         BNE   @RF00336                                            0336
*                   DACHARAD=ADDR(DEVTYP07);                       0337
         LA    @12,DEVTYP07                                        0337
         ST    @12,DACHARAD(,R7)                                   0337
*                 ELSE                                             0338
*                   IF UCBTBYT4=DA2314 THEN/* 2314/2319, 08          */
         B     @RC00336                                            0338
@RF00336 L     @12,IOBDCBPB+3(,R7)                                 0338
         L     @12,DCBDEBA+39(,@12)                                0338
         L     @12,DEBSUCBA(,@12)                                  0338
         CLI   UCBTBYT4(@12),X'08'                                 0338
         BNE   @RF00338                                            0338
*                     DACHARAD=ADDR(DEVTYP08);                     0339
         LA    @12,DEVTYP08                                        0339
         ST    @12,DACHARAD(,R7)                                   0339
*                   ELSE                                           0340
*                     IF UCBTBYT4=DA3330A THEN/* 3330-A, 09          */
         B     @RC00338                                            0340
@RF00338 L     @12,IOBDCBPB+3(,R7)                                 0340
         L     @12,DCBDEBA+39(,@12)                                0340
         L     @12,DEBSUCBA(,@12)                                  0340
         CLI   UCBTBYT4(@12),X'09'                                 0340
         BNE   @RF00340                                            0340
*                       DACHARAD=ADDR(DEVTYP09);                   0341
         LA    @12,DEVTYP09                                        0341
         ST    @12,DACHARAD(,R7)                                   0341
*                     ELSE                                         0342
*                       IF UCBTBYT4=DA3330C THEN/* 3330-C, 0D      0342
*                                                            @ZA02355*/
         B     @RC00340                                            0342
@RF00340 L     @12,IOBDCBPB+3(,R7)                                 0342
         L     @12,DCBDEBA+39(,@12)                                0342
         L     @12,DEBSUCBA(,@12)                                  0342
         CLI   UCBTBYT4(@12),X'0D'                                 0342
         BNE   @RF00342                                            0342
*                         DACHARAD=ADDR(DEVTYP0D);/*         @ZA02355*/
         LA    @12,DEVTYP0D                                        0343
         ST    @12,DACHARAD(,R7)                                   0343
*                       ELSE                                       0344
*                         IF UCBTBYT4=DA3340 THEN/* 3340, 0A @ZA02355*/
         B     @RC00342                                            0344
@RF00342 L     @12,IOBDCBPB+3(,R7)                                 0344
         L     @12,DCBDEBA+39(,@12)                                0344
         L     @12,DEBSUCBA(,@12)                                  0344
         CLI   UCBTBYT4(@12),X'0A'                                 0344
         BNE   @RF00344                                            0344
*                           DACHARAD=ADDR(DEVTYP0A);/*       @ZA02355*/
         LA    @12,DEVTYP0A                                        0345
         ST    @12,DACHARAD(,R7)                                   0345
*                         ELSE                                     0346
*                           IF UCBTBYT4=DA3350 THEN/* 3350, 0B     0346
*                                                            @Z40RSTA*/
         B     @RC00344                                            0346
@RF00344 L     @12,IOBDCBPB+3(,R7)                                 0346
         L     @12,DCBDEBA+39(,@12)                                0346
         L     @12,DEBSUCBA(,@12)                                  0346
         CLI   UCBTBYT4(@12),X'0B'                                 0346
         BNE   @RF00346                                            0346
*                             DACHARAD=ADDR(DEVTYP0B);/*     @Z40RSTA*/
         LA    @12,DEVTYP0B                                        0347
         ST    @12,DACHARAD(,R7)                                   0347
*                           ELSE                                   0348
*                             GEN(ABEND X'C0D',,,SYSTEM);/* *ERROR** */
         B     @RC00346                                            0348
@RF00346 DS    0H                                                  0348
         ABEND X'C0D',,,SYSTEM
*             END;                                                 0349
@RC00346 DS    0H                                                  0349
@RC00344 DS    0H                                                  0349
@RC00342 DS    0H                                                  0349
@RC00340 DS    0H                                                  0349
@RC00338 DS    0H                                                  0349
@RC00336 DS    0H                                                  0349
@RC00334 DS    0H                                                  0350
*         END;                                                     0350
@RC00305 DS    0H                                                  0351
*     END;                          /* END OF SELECT A DUMP DATA SET */
@RF00303 DS    0H                                                  0352
*                                                                  0352
*   /*****************************************************************/
*   /*                                                               */
*   /* IF DUMP DATA SET FOUND AND THE 4K BUFFER IS REQUESTED PUT THE */
*   /* 4K BUFFER ON THE DUMP DATA SET FIRST                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0352
*   ERRRETRY=ADDR(RTYTOHDR);        /* RETRY ADDR FOR 4K BUF @ZA28381*/
@RF00187 LA    @12,RTYTOHDR                                        0352
         ST    @12,ERRRETRY(,R3)                                   0352
*   IF ERRENDMP='0'B&               /* IF A DUMP DATA SET IS       0353
*                                      AVAILABLE                     */
*       SDUBUF='1'B THEN            /* AND THE 4K BUFFER REQUESTED   */
         TM    ERRENDMP(R3),B'01000000'                            0353
         BNZ   @RF00353                                            0353
         L     @12,SDWSDPL(,R7)                                    0353
         TM    SDUBUF(@12),B'01000000'                             0353
         BNO   @RF00353                                            0353
*     DO;                           /* DUMP SDUMP 4K BUFFER          */
*       RFY                                                        0355
*        (R10,                                                     0355
*         R11,                                                     0355
*         R4,                                                      0355
*         R5) RSTD;                                                0355
*       R10=ADDR(PRDDATA);          /* GET OUTPUT BUFFER ADDR FOR  0356
*                                      MOVE                          */
         L     @12,SDSMBUFF(,R7)                                   0356
         LA    R10,PRDDATA(,@12)                                   0356
*       R11=FOURK;                  /* LENGHT OF DATA                */
         L     @08,@CF04666                                        0357
         LR    R11,@08                                             0357
*       R4=CVTSDBF&HIGHBIT0;        /* 4K SQA BUFFER ADDR FOR MOVE 0358
*                                      FROM                          */
         L     @06,CVTPTR                                          0358
         L     R4,CVTSDBF(,@06)                                    0358
         N     R4,@CF04713                                         0358
*       PRDASID=COMNASID;           /* PUT COMMON AREA FFFF ASID IN
*                                      HEADER OF RECORD              */
         MVC   PRDASID(2,@12),@CB04700                             0359
*       PRDADDR=R4;                 /* DATA ADDRESS INTO DUMP RECORD */
         ST    R4,PRDADDR(,@12)                                    0360
*       R5=FOURK;                   /* LENGTH OF DATA                */
         LR    R5,@08                                              0361
*       GEN(MVCL   R10,R4);         /* MOVE SQA BUFFER TO OUTPUT   0362
*                                      BUFFER                        */
         MVCL   R10,R4
*       R10=ADDR(PRDKEY1);          /* ADDRESS OF STORAGE KEY SLOT   */
         L     @12,SDSMBUFF(,R7)                                   0363
         LR    R10,@12                                             0363
*       R11=ADDR(PRDKEY2);          /* ADDRESS OF SECOND STORAGE KEY */
         LA    R11,PRDKEY2(,@12)                                   0364
*       R4=CVTSDBF&HIGHBIT0;        /* ADDRESS OF FIRST 2K OF DATA   */
         L     @12,CVTPTR                                          0365
         L     R4,CVTSDBF(,@12)                                    0365
         N     R4,@CF04713                                         0365
*       R5=R4+TWOK;                 /* ADDRESS OF SECOND 2K OF DATA  */
         LA    R5,2048                                             0366
         ALR   R5,R4                                               0366
*       GEN;                                                       0367
         LRA   R4,0(R4)       REAL ADDRESS OF 1SR 2K OF DATA
         ISK   R4,R4        STORAGE KEY OF FIRST 2K OF DATA
         STC   R4,0(R10)     STORAGE KEY INTO DATA RECORD
         LRA   R5,0(R5)     REAL ADDR OF SECOND 2K OF DATA
         ISK   R5,R5        STORAGE KEY OF SECOND 2K OF DATA
         STC   R5,0(R11)     STORAGE KEY INTO DATA RECORD
*       RFY                                                        0368
*        (R10,                                                     0368
*         R11,                                                     0368
*         R4,                                                      0368
*         R5) UNRSTD;                                              0368
*       R13=ADDR(SDWRGSV2);         /* GET SAVEAREA ADDRESS  @G33VPHD*/
         LA    R13,SDWRGSV2(,R7)                                   0369
*       CALL IEAVTSDP;              /* WRITE OUT DATA RECORD         */
         L     @15,@CV04762                                        0370
         BALR  @14,@15                                             0370
*       ERRBASE1=R9;                /* RESTORE BASE REGISTER FOR   0371
*                                      RECOVERY                      */
         ST    R9,ERRBASE1(,R3)                                    0371
*       SVCDMPNM=CSECTNAM;          /* RESTORE CSECT NAME FOR      0372
*                                      RECOVERY                      */
         MVC   SVCDMPNM(8,R7),@CC04757                             0372
*       IF ERRENDMP='1'B THEN       /* IF ERR OR WRITING BUFFER      */
         TM    ERRENDMP(R3),B'01000000'                            0373
         BNO   @RF00373                                            0373
*         SDRETCOD=NODUMP;          /* INDICATE NO DUMP TAKEN        */
         MVC   SDRETCOD(4,R7),@CF00059                             0374
*       ELSE                                                       0375
*         ERRCDOUT='1'B;            /* INDICATE AT LEAST 1 RECORD  0375
*                                      DUMPED                        */
         B     @RC00373                                            0375
@RF00373 OI    ERRCDOUT(R3),B'00000001'                            0375
*     END;                                                         0376
@RC00373 DS    0H                                                  0377
*RTYTOHDR:                          /*                       @ZA28381*/
*   ERRRETRY=ADDR(RTYEND10);        /* IF ERROR HERE, GET OUT      0377
*                                                            @ZA28381*/
@RF00353 DS    0H                                                  0377
RTYTOHDR LA    @12,RTYEND10                                        0377
         ST    @12,ERRRETRY(,R3)                                   0377
*   IF ERRENDMP='0'B THEN           /* IF NO ERRORS FOUND SO FAR     */
         TM    ERRENDMP(R3),B'01000000'                            0378
         BNZ   @RF00378                                            0378
*     DO;                                                          0379
*                                                                  0379
*/********************************************************************/
*/*   THIS SEQMENT BUILDS THE HEADER RECORD (FOR AMDPRDMP) IN        */
*/*   THE OUTPUT BUFFER AND CALLS IEAVTSDP TO WRITE IT OUT.          */
*/*                                                                  */
*/*   INPUT: USER DATA, POINTED TO FROM SDUMP PARAMETER LIST         */
*/*                                                                  */
*/*   OUTPUT: HEADER RECORD WRITTEN TO DUMP DATASET OR NODUMP        */
*/*           RETURN CODE.                                           */
*/*                                                                  */
*/*   INCLUDED BY: TOP SEGMENT                                       */
*/********************************************************************/
*                                                                  0380
*       PRDHDRID=PRDHDR;            /* IDENTIFY HEADER RECORD        */
         L     @12,SDSMBUFF(,R7)                                   0380
         MVI   PRDHDRID(@12),X'FF'                                 0380
*       PRDRECID=PRDHDR;            /* RECORD IDENTIFIR IS HEADERID  */
         MVI   PRDRECID(@12),X'FF'                                 0381
*       PRDASID=ASCBASID;           /* ASID OF ADDR SPACE DUMPING    */
         L     @08,ASCBPTR                                         0382
         MVC   PRDASID(2,@12),ASCBASID(@08)                        0382
*       RFY                                                        0383
*         TCB BASED(PSATOLD);       /* CURRENT TCB ADDR IN PSA       */
*       RFY                                                        0384
*         RBSECT BASED(TCBRBP);     /* ADDR OF SVC DUMP RB           */
*       RFY                                                        0385
*         RBPRFX BASED(TCBRBP-64);                                 0385
*       RFY                                                        0386
*         RBBASIC BASED(TCBRBP);                                   0386
*       RFY                                                        0387
*         RBPREFIX BASED(TCBRBP-64);                               0387
*       IF ERRCSDT='1'B THEN        /* IF MODULE IEAVTSDT WAS CALLER */
         TM    ERRCSDT(R3),B'00010000'                             0388
         BNO   @RF00388                                            0388
*         PRDMODNM=SDTNAME;         /* PUT IEAVTSDT NAME IN HEADER   */
         MVC   PRDMODNM(8,@12),@CC04702                            0389
*       ELSE                                                       0390
*         IF SDUABEND='1'B THEN     /* SYSMDUMP CALLER               */
         B     @RC00388                                            0390
@RF00388 L     @12,SDWSDPL(,R7)                                    0390
         TM    SDUABEND(@12),B'01000000'                           0390
         BNO   @RF00390                                            0390
*           PRDMODNM=SYSMNAME;      /* YES... PUT SYSMDUMP NAME IN 0391
*                                      HEADER                        */
         L     @12,SDSMBUFF(,R7)                                   0391
         MVC   PRDMODNM(8,@12),@CC04761                            0391
*         ELSE                                                     0392
*           IF RBLINKB->RBCDE1=NULL THEN/* IF CALLER DOES NOT HAVE A
*                                      CDE OR LPDE                   */
         B     @RC00390                                            0392
@RF00390 L     @12,PSATOLD                                         0392
         L     @12,TCBRBP(,@12)                                    0392
         L     @12,RBLINKB-1(,@12)                                 0392
         L     @12,RBCDE1-1(,@12)                                  0392
         LA    @12,0(,@12)                                         0392
         LTR   @12,@12                                             0392
         BNZ   @RF00392                                            0392
*             PRDMODNM=SVCDNAME;    /* CALLERS NAME IN HEADER        */
         L     @12,SDSMBUFF(,R7)                                   0393
         MVC   PRDMODNM(8,@12),@CC04759                            0393
*           ELSE                                                   0394
*             IF RBLINKB->RBTRSVRB='0'B THEN/* IF CALLER HAS A CDE 0394
*                                      GET HIS NAME FROM THE CDE     */
         B     @RC00392                                            0394
@RF00392 L     @12,PSATOLD                                         0394
         L     @12,TCBRBP(,@12)                                    0394
         L     @12,RBLINKB-1(,@12)                                 0394
         LA    @12,0(,@12)                                         0394
         TM    RBTRSVRB(@12),B'00010000'                           0394
         BNZ   @RF00394                                            0394
*               PRDMODNM=RBLINKB->RBCDE1->CDNAME;/* GET NAME OF    0395
*                                      CALLER FROM CDE               */
         L     @08,SDSMBUFF(,R7)                                   0395
         L     @12,RBCDE1-1(,@12)                                  0395
         MVC   PRDMODNM(8,@08),CDNAME(@12)                         0395
*             ELSE                                                 0396
*               PRDMODNM=RBLINKB->RBCDE1->LPDENAME;/* OBTAIN CALLER
*                                      NAME FROM LPDE                */
         B     @RC00394                                            0396
@RF00394 L     @12,SDSMBUFF(,R7)                                   0396
         L     @08,PSATOLD                                         0396
         L     @08,TCBRBP(,@08)                                    0396
         L     @08,RBLINKB-1(,@08)                                 0396
         L     @08,RBCDE1-1(,@08)                                  0396
         MVC   PRDMODNM(8,@12),LPDENAME(@08)                       0396
*       PRDPSW=RBLINKB->RBOPSW;     /* CALLERS PSW                   */
@RC00394 DS    0H                                                  0397
@RC00392 DS    0H                                                  0397
@RC00390 DS    0H                                                  0397
@RC00388 L     @12,SDSMBUFF(,R7)                                   0397
         L     @08,PSATOLD                                         0397
         L     @08,TCBRBP(,@08)                                    0397
         L     @06,RBLINKB-1(,@08)                                 0397
         MVC   PRDPSW(8,@12),RBOPSW(@06)                           0397
*       PRDGPR=RBGRSAVE;            /* CALLERS REGISTERS INTO HDR    */
         MVC   PRDGPR(64,@12),RBGRSAVE(@08)                        0398
*       RFY                                                        0399
*        (TCB,                                                     0399
*         RBSECT,                                                  0399
*         RBPRFX,                                                  0399
*         RBBASIC,                                                 0399
*         RBPREFIX) BASED;                                         0399
*       RFY                                                        0400
*        (R10,                                                     0400
*         R11) RSTD;                                               0400
*       R10=ADDR(PRDFPR);           /* FLT PT REG FIELD IN HDR RCD   */
         LA    R10,PRDFPR(,@12)                                    0401
*       R11=ADDR(PRDCR);            /* CNTRL REG FIELD IN HDR RCD    */
         LA    R11,PRDCR(,@12)                                     0402
*       GEN;                                                       0403
*                                      /*FLT PT, CNTRL REGS INTO HDR */
         STD   0,0(R10)              FLOAT POINT REG 0 INTO HEADER
         STD   2,8(R10)              FLOAT POINT REG 2 INTO HEADER
         STD   4,16(R10)             FLOAT POINT REG 4 INTO HEADER
         STD   6,24(R10)             FLOAT POINT REG 6 INTO HEADER
         STCTL 0,15,0(R11)           CONTROL REGISTERS INTO HEADER
*       R10=ADDR(PRDTODVL);         /* ADDR TO STORE CLOCK INTO      */
         L     R10,SDSMBUFF(,R7)                                   0404
         LA    R10,PRDTODVL(,R10)                                  0404
*       GEN(STCK  0(R10));          /* TIME OF DAY CLOCK VALUE       */
         STCK  0(R10)
*       LCLTODVL=LCLTODVL+CVTTZ;    /* ADD ADJUSTMENT FOR LOCAL TIME
*                                                            @YM07273*/
         L     @12,SDSMBUFF(,R7)                                   0406
         L     @08,LCLTODVL(,@12)                                  0406
         L     @06,CVTPTR                                          0406
         AL    @08,CVTTZ(,@06)                                     0406
         ST    @08,LCLTODVL(,@12)                                  0406
*       RFY                                                        0407
*        (R10,                                                     0407
*         R11) UNRSTD;                                             0407
*       PRDTITLE=' ';               /* CLEAR TITLE TO BLANKS         */
         MVI   PRDTITLE+1(@12),C' '                                0408
         MVC   PRDTITLE+2(98,@12),PRDTITLE+1(@12)                  0408
         MVI   PRDTITLE(@12),C' '                                  0408
*       ERRRETRY=ADDR(RTYHDR50);    /* NEXT RETRY LOCATION ADDRESS   */
         LA    @08,RTYHDR50                                        0409
         ST    @08,ERRRETRY(,R3)                                   0409
*       IF SDUHDR='1'B THEN         /* IF USER DATA SUPPLIED         */
         L     @08,SDWSDPL(,R7)                                    0410
         TM    SDUHDR(@08),B'00010000'                             0410
         BNO   @RF00410                                            0410
*         PRDTITLE(1:SDUHDRLN)=     /* TITLE IS CALLER SUPPLIED      */
*             SDUSERDA(1:SDUHDRLN); /* USER DATA                     */
         L     @08,SDUHDRAD(,@08)                                  0411
         SLR   @06,@06                                             0411
         IC    @06,SDUHDRLN(,@08)                                  0411
         BCTR  @06,0                                               0411
         EX    @06,@SM04945                                        0411
*RTYHDR50:                                                         0412
*       ERRRETRY=ADDR(RTYEND10);    /* NEXT RETRY LOCATION ADDRESS   */
@RF00410 DS    0H                                                  0412
RTYHDR50 LA    @12,RTYEND10                                        0412
         ST    @12,ERRRETRY(,R3)                                   0412
*       PRDCVT=FLCCVT;              /* ADDRESS OF CVT                */
         L     @12,SDSMBUFF(,R7)                                   0413
         L     @08,FLCCVT                                          0413
         ST    @08,PRDCVT(,@12)                                    0413
*       IF SDUNEW='0'B THEN         /* IF OLD PARAMETER LIST         */
         L     @08,SDWSDPL(,R7)                                    0414
         TM    SDUNEW(@08),B'00100000'                             0414
         BNZ   @RF00414                                            0414
*         SDPRDLST(1:24)=SDUMP(1:24);/* MOVE OLD PARM LIST TO HEADER */
         MVC   SDPRDLST(24,@12),SDUMP(@08)                         0415
*       ELSE                                                       0416
*         SDPRDLST=SDUMP;           /* MOVE NEW PARM LIST TO HEADER  */
         B     @RC00414                                            0416
@RF00414 L     @12,SDSMBUFF(,R7)                                   0416
         L     @08,SDWSDPL(,R7)                                    0416
         MVC   SDPRDLST(40,@12),SDUMP(@08)                         0416
*       SDPRDOPT=SVCDOPTS;          /* PUT SDATA OPTIONS USED INTO 0417
*                                      AMDPRDMP HEADER RECORD        */
@RC00414 L     @12,SDSMBUFF(,R7)                                   0417
         MVC   SDPRDOPT(2,@12),SVCDOPTS(R7)                        0417
*                                                                  0418
*/********************************************************************/
*/*  THIS SEGMENT MOVES THE ERRORID FIELD IN THE RTCT INTO THE       */
*/*  PRINT DUMP HEADER RECORD.  IF THIS IS A SCHEDULED DUMP          */
*/*  REQUEST, THE THE ERROR ID HAS ALREADY BEEN PLACED IN THE        */
*/*  RTCT BY IEAVTSDX. OTHERWISE,                            @ZA19201*/
*/*  IF TCBRTM2 ='1' B AND THE CURRENT TCB CONTAINS A POINTER        */
*/*  TO RTM2WA, THEN THE ERRORID IS MOVED FROM RTM2WA TO             */
*/*  THE RTCT.  IF NEITHER OF THE ABOVE IS TRUE, THEN                */
*/*  ERRORID IN THE RTCT  ZEROED. THE CONTENTS OF ERRORID IS         */
*/*  MOVED TO THE HEADER RECORD.                                     */
*/*                                                                  */
*/*  INPUT: SDWORK, DUMP OPTIONS                                     */
*/*         SVC 51 SVRB                                              */
*/*                                                                  */
*/*  OUTPUT: PRDERRID CONTAINS ERRORID OR ZEROES.                    */
*/*                                                                  */
*/*  INCLUDED BY: SDHDR                                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0418
*       IF RTCTSDSH=ON THEN         /* IF THIS WAS A SCHEDULED DUMP
*                                      REQUEST THEN IEAVTSDX HAS   0418
*                                      ALREADY PUT THE ERRORID IN THE
*                                      RTCT                  @ZA19201*/
         L     @08,CVTPTR                                          0418
         L     @08,CVTRTMCT(,@08)                                  0418
         TM    RTCTSDSH(@08),B'00100000'                           0418
         BNO   @RF00418                                            0418
*         PRDERRID=ERRORID;         /* MOVE ERRORID OR ZEROS TO THE
*                                      HEADER RECORD         @G17EP5W*/
         MVC   PRDERRID(10,@12),ERRORID(@08)                       0419
*       ELSE                        /* OTHERWISE, SEE IF AN  @G17EP5W*/
*         DO;                       /* ERRORID EXISTS        @G17EP5W*/
         B     @RC00418                                            0420
@RF00418 DS    0H                                                  0421
*           RFY                                                    0421
*             TCB BASED(PSATOLD);   /* ADDRESSABILITY TO TCB @G17EP5W*/
*           RFY                                                    0422
*             RTM2WA BASED(TCBRTWA);/* RTM2WA ADDRESSABILTY  @G17EP5W*/
*           IF PSATOLD^=NULL THEN   /* IF CURRENT TCB PTR VALID    0423
*                                                            @G33SPHD*/
         L     @12,PSATOLD                                         0423
         SLR   @08,@08                                             0423
         CR    @12,@08                                             0423
         BE    @RF00423                                            0423
*             DO;                   /* CHECK FOR SYSMDUMP AND ERRORID
*                                                            @G33SPHD*/
*               IF SDUABEND=ON THEN /* IF THIS A SYSMDUMP ENTRY    0425
*                                                            @G33SPHD*/
         L     @06,SDWSDPL(,R7)                                    0425
         TM    SDUABEND(@06),B'01000000'                           0425
         BNO   @RF00425                                            0425
*                 DO;               /* GET ERRORID BUT DONT TOUCH  0426
*                                      RTCT                  @G33SPHD*/
*                   IF(TCBRTM2=ON)& /* IF RTM2 WAS ENTERED AND     0427
*                                                            @G33SPHD*/
*                       (TCBRTWA^=NULL)&/* RTM2WA POINTER VALID    0427
*                                                            @G33SPHD*/
*                       (RTM2ERFL=ON) THEN/* AND ERRORID GENERATED 0427
*                                                            @G33SPHD*/
         TM    TCBRTM2(@12),B'00001000'                            0427
         BNO   @RF00427                                            0427
         L     @12,TCBRTWA(,@12)                                   0427
         CR    @12,@08                                             0427
         BE    @RF00427                                            0427
         TM    RTM2ERFL(@12),B'00000001'                           0427
         BNO   @RF00427                                            0427
*                     PRDERRID=RTM2ERID;/* MOVE ERRORID TO HEADER  0428
*                                                            @G33SPHD*/
         L     @08,SDSMBUFF(,R7)                                   0428
         MVC   PRDERRID(10,@08),RTM2ERID(@12)                      0428
*                   ELSE                                           0429
*                     PRDERRID=''B; /* NO ERRORID ZERO HEADER      0429
*                                                            @G33VPHD*/
         B     @RC00427                                            0429
@RF00427 L     @12,SDSMBUFF(,R7)                                   0429
         XC    PRDERRID(10,@12),PRDERRID(@12)                      0429
*                 END;              /* END OF SYSMDUMP REQUEST     0430
*                                                            @G33SPHD*/
*               ELSE                                               0431
*                 DO;               /* NOT A SYSMDUMP REQUEST      0431
*                                                            @G33SPHD*/
         B     @RC00425                                            0431
@RF00425 DS    0H                                                  0432
*                   IF(TCBRTM2=ON)& /* IF RTM2 WAS ENTERED   @G33SPHD*/
*                       (TCBRTWA^=NULL)&/* RTM2WA PTR VALID  @G33SPHD*/
*                       (RTM2ERFL=ON) THEN/* AND ERRORID EXISTS    0432
*                                                            @G33SPHD*/
         L     @12,PSATOLD                                         0432
         TM    TCBRTM2(@12),B'00001000'                            0432
         BNO   @RF00432                                            0432
         L     @12,TCBRTWA(,@12)                                   0432
         LTR   @12,@12                                             0432
         BZ    @RF00432                                            0432
         TM    RTM2ERFL(@12),B'00000001'                           0432
         BNO   @RF00432                                            0432
*                     ERRORID=RTM2ERID;/* MOVE ERRORID TO RTCT     0433
*                                                            @G33SPHD*/
         L     @08,CVTPTR                                          0433
         L     @08,CVTRTMCT(,@08)                                  0433
         MVC   ERRORID(10,@08),RTM2ERID(@12)                       0433
*                   ELSE                                           0434
*                     ERRORID=''B;  /* ZERO ERRORID IN RTCT  @G33SPHD*/
         B     @RC00432                                            0434
@RF00432 L     @12,CVTPTR                                          0434
         L     @12,CVTRTMCT(,@12)                                  0434
         XC    ERRORID(10,@12),ERRORID(@12)                        0434
*                   PRDERRID=ERRORID;/* MOVE ERRORID TO HEADER     0435
*                                                            @G33SPHD*/
@RC00432 L     @12,SDSMBUFF(,R7)                                   0435
         L     @08,CVTPTR                                          0435
         L     @08,CVTRTMCT(,@08)                                  0435
         MVC   PRDERRID(10,@12),ERRORID(@08)                       0435
*                 END;              /* END OF NOT A SYSMDUMP REQUEST
*                                                            @G33SPHD*/
*               RFY                                                0437
*                (TCB,                                             0437
*                 RTM2WA) BASED;    /*                       @G33SPHD*/
@RC00425 DS    0H                                                  0438
*             END;                  /* END OF CURRENT TCB PTR VALID
*                                                            @G33SPHD*/
*         END;                      /* END CHECK FOR ERRORID @G17EP5W*/
@RF00423 DS    0H                                                  0440
*       R13=ADDR(SDWRGSV2);         /* GET ADDRESS OF SAVE AREA    0440
*                                                            @G33VPHD*/
@RC00418 LA    R13,SDWRGSV2(,R7)                                   0440
*       CALL IEAVTSDP;              /* WRITE OUT HEADER RECORD       */
         L     @15,@CV04762                                        0441
         BALR  @14,@15                                             0441
*       ERRBASE1=R9;                /* RESTORE BASE REGISTER FOR   0442
*                                      RECOVERY                      */
         ST    R9,ERRBASE1(,R3)                                    0442
*       SVCDMPNM=CSECTNAM;          /* RESTORE CSECT NAME FOR      0443
*                                      RECOVERY                      */
         MVC   SVCDMPNM(8,R7),@CC04757                             0443
*RTYEND10:                                                         0444
*       ERRRETRY=ADDR(RTYENDMP);    /* GET NEXT RETRY LOCATION ADDR  */
RTYEND10 LA    @12,RTYENDMP                                        0444
         ST    @12,ERRRETRY(,R3)                                   0444
*     END;                          /* END OF BUILD HEADER RECORD    */
*   IF ERRENDMP='0'B THEN           /* IF STILL NO ERRORS            */
@RF00378 TM    ERRENDMP(R3),B'01000000'                            0446
         BNZ   @RF00446                                            0446
*     DO;                           /* INITIALIZE ADDRESS RANGE TABLE
*                                      AND INCLUDE AREAS FOR AMDPRDMP*/
*                                                                  0448
*/* ******************************************************************/
*/*   FUNCTION:                                                      */
*/*      THIS SEGMENT INITIALIZES THE ADDRESS RANGE TABLE IN THE     */
*/*      SDUMP 4K BUFFER OR THE SQA AREA PASSED AS A PARAMETER IF    */
*/*      THIS IS A SYSMDUMP REQUEST. THIS SEGMENT ALSO MOVES THE     */
*/*      ADDRESSES OF AREAS CRUCIAL TO AMDPRDMP TO THE ADDRESS RANGE */
*/*      TABLE                                                       */
*/*                                                                  */
*/*   INPUT: SDUMP PARAMETER LIST, CVT, ASCB, ASVT, UCBS             */
*/*                                                                  */
*/*   OUTPUT: ADDRESS RANGE TABLE, POINTERS IN SDUMP WORK AREA       */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0448
*       IF SDUABEND='1'B THEN       /* IF THIS IS A SYSMDUMP REQUEST
*                                                            @G33SPHD*/
         L     @12,SDWSDPL(,R7)                                    0448
         TM    SDUABEND(@12),B'01000000'                           0448
         BNO   @RF00448                                            0448
*         RANGEPTR=SDUSYSMS;        /* RANGE TABLE IS BUILD IN SQA 0449
*                                      BUFFER PASSED IN PARAMETER  0449
*                                      LIST BY SYSMDUMP      @G33SPHD*/
         L     @12,SDUSYSMS(,@12)                                  0449
         ST    @12,RANGEPTR(,R7)                                   0449
*       ELSE                                                       0450
*         RANGEPTR=CVTSDBF&HIGHBIT0;/* IF NOT A SYSMDUMP REQUEST   0450
*                                      RANGE TABLE IS BUILT IN THE 0450
*                                      SDUMP 4K SQA BUFFER   @G33SPHD*/
         B     @RC00448                                            0450
@RF00448 L     @12,CVTPTR                                          0450
         L     @12,CVTSDBF(,@12)                                   0450
         N     @12,@CF04713                                        0450
         ST    @12,RANGEPTR(,R7)                                   0450
*       RFY                                                        0451
*         STORANGE BASED(RANGEPTR); /* MAP ADDRESS RANGES IN TABLE   */
@RC00448 DS    0H                                                  0452
*       STARTADR=NULL;              /* FIRST ADDRESS RANGE IS EMPTY  */
         SLR   @12,@12                                             0452
         L     @08,RANGEPTR(,R7)                                   0452
         ST    @12,STARTADR(,@08)                                  0452
*       ENDADDR=NULL;               /* START ADDRESS 1ST RANGE IS  0453
*                                      ZERO                          */
         ST    @12,ENDADDR(,@08)                                   0453
*       LASTRNGE='1'B;              /* END ADDRESS IS NULL FIRST   0454
*                                      RANGE                         */
         OI    LASTRNGE(@08),B'10000000'                           0454
*       ENDADRNT=RANGEPTR+FOURK-LEN1ADRN;/* CALCULATE END OF ADDRESS
*                                      RANGE TABLE                   */
         LR    @12,@08                                             0455
         SL    @12,@CF04932                                        0455
         ST    @12,ENDADRNT(,R7)                                   0455
*       RANGEPTR=RANGEPTR+LEN1ADRN; /* MOVE POINTER TO FIRST ADDRESS
*                                      RANGE                         */
         AL    @08,@CF00059                                        0456
         ST    @08,RANGEPTR(,R7)                                   0456
*       GLOBADDR=RANGEPTR;          /* INDICATE BEGINNING OF GLOBAL
*                                      PART OF TABLE                 */
         ST    @08,GLOBADDR(,R7)                                   0457
*       STARTADR=FLCCVT&HIGHBIT0;   /* GET BEGINNING ADDRESS OF CVT  */
         L     @12,FLCCVT                                          0458
         N     @12,@CF04713                                        0458
         ST    @12,STARTADR(,@08)                                  0458
*       ENDADDR=STARTADR+FOURK;     /* ENDING ADDRESS OF CVT TO    0459
*                                      INCLUDE ALL OF THE CVT      0459
*                                                            @ZA08131*/
         AL    @12,@CF04666                                        0459
         ST    @12,ENDADDR(,@08)                                   0459
*       CALL SDADDADR;              /* ADD RANGE TO THE ADDRESS RANGE
*                                      TABLE                         */
         BAL   @14,SDADDADR                                        0460
*       STARTADR=CVTABEND&HIGHBIT0; /* GET SCVT BEGINNING ADDR     0461
*                                                            @ZA11872*/
         L     @12,RANGEPTR(,R7)                                   0461
         L     @08,CVTPTR                                          0461
         L     @08,CVTABEND(,@08)                                  0461
         N     @08,@CF04713                                        0461
         ST    @08,STARTADR(,@12)                                  0461
*       ENDADDR=STARTADR+FOURK;     /* GET SCVT ENDING ADDRESS     0462
*                                                            @ZA11872*/
         AL    @08,@CF04666                                        0462
         ST    @08,ENDADDR(,@12)                                   0462
*       CALL SDADDADR;              /* ADD SCVT TO RANGE TABLE     0463
*                                                            @ZA11872*/
         BAL   @14,SDADDADR                                        0463
*       STARTADR=ADDR(ASVTBEGN)&HIGHBIT0;/* BEGINNING ADDRESS OF ASVT*/
         L     @12,RANGEPTR(,R7)                                   0464
         L     @08,CVTPTR                                          0464
         L     @08,ASVTPTR(,@08)                                   0464
         LA    @06,ASVTBEGN(,@08)                                  0464
         N     @06,@CF04713                                        0464
         ST    @06,STARTADR(,@12)                                  0464
*       ENDADDR=STARTADR+(ADDR(ASVTENTY)-ADDR(ASVTBEGN))+(4*ASVTMAXU);
         AL    @06,@CF00801                                        0465
         L     @08,ASVTMAXU(,@08)                                  0465
         SLA   @08,2                                               0465
         ALR   @06,@08                                             0465
         ST    @06,ENDADDR(,@12)                                   0465
*                                   /* CALCULATE ASVT ENDING ADDRESS */
*       CALL SDADDADR;              /* ADD ASVT ADDRESSES TO RANGE 0466
*                                      TABLE                         */
         BAL   @14,SDADDADR                                        0466
*       IF SDUABEND='0'B THEN       /* IF THIS IS NOT A SYSMDUMP   0467
*                                      REQUEST                       */
         L     @12,SDWSDPL(,R7)                                    0467
         TM    SDUABEND(@12),B'01000000'                           0467
         BNZ   @RF00467                                            0467
*         DO RTCTINDX=ONE TO RTCTSDNA;/* DUMP ASCB FOR ALL REQUESTED
*                                      ADDRESS                 SPACES*/
         LA    @12,1                                               0468
         B     @DE00468                                            0468
@DL00468 DS    0H                                                  0469
*           STARTADR=ASVTENTY(RTCTSDAS(RTCTINDX))&HIGHBIT0;/* GET  0469
*                                      START ADDRESS OF ASCB THIS  0469
*                                      ADDRESS SPACE                 */
         L     @12,RANGEPTR(,R7)                                   0469
         L     @08,CVTPTR                                          0469
         L     @06,CVTRTMCT(,@08)                                  0469
         SLR   @02,@02                                             0469
         IC    @02,RTCTINDX(,@06)                                  0469
         SLA   @02,2                                               0469
         ALR   @06,@02                                             0469
         SLR   @02,@02                                             0469
         ICM   @02,3,RTCTSDAS-4(@06)                               0469
         SLA   @02,2                                               0469
         L     @08,ASVTPTR(,@08)                                   0469
         L     @08,ASVTENTY-4(@02,@08)                             0469
         N     @08,@CF04713                                        0469
         ST    @08,STARTADR(,@12)                                  0469
*           ENDADDR=STARTADR+LENGTH(ASCB);/* GET ENDING ASCB ADDRESS */
         AL    @08,@CF04933                                        0470
         ST    @08,ENDADDR(,@12)                                   0470
*           CALL SDADDADR;          /* ADD THIS ASCB ADDRESS TO RANGE
*                                      TABLE                         */
         BAL   @14,SDADDADR                                        0471
*         END;                      /* END DUMP ALL REQUESTED ASCB'S */
         L     @08,CVTPTR                                          0472
         L     @08,CVTRTMCT(,@08)                                  0472
         LA    @12,1                                               0472
         SLR   @06,@06                                             0472
         IC    @06,RTCTINDX(,@08)                                  0472
         ALR   @12,@06                                             0472
@DE00468 L     @08,CVTPTR                                          0472
         L     @08,CVTRTMCT(,@08)                                  0472
         STC   @12,RTCTINDX(,@08)                                  0472
         L     @08,CVTPTR                                          0472
         L     @08,CVTRTMCT(,@08)                                  0472
         SLR   @06,@06                                             0472
         IC    @06,RTCTSDNA(,@08)                                  0472
         CR    @12,@06                                             0472
         BNH   @DL00468                                            0472
*       ELSE                                                       0473
*         DO;                       /* THIS IS A SYSMDUMP REQUEST    */
         B     @RC00467                                            0473
@RF00467 DS    0H                                                  0474
*           STARTADR=PSAAOLD&HIGHBIT0;/* ASCB ADDRESS IS IN PSA      */
         L     @12,RANGEPTR(,R7)                                   0474
         L     @08,PSAAOLD                                         0474
         N     @08,@CF04713                                        0474
         ST    @08,STARTADR(,@12)                                  0474
*           ENDADDR=STARTADR+LENGTH(ASCB);/* GET ENDING ASCB ADDRESS */
         AL    @08,@CF04933                                        0475
         ST    @08,ENDADDR(,@12)                                   0475
*           CALL SDADDADR;          /* ADD ASCB RANGE TO RANGE TABLE */
         BAL   @14,SDADDADR                                        0476
*         END;                      /* END OF THIS IS A SYSMDUMP   0477
*                                      REQUEST                       */
*       STARTADR=CVTSDBF&HIGHBIT0;  /* GET BEGINNING ADDR RANGE TABLE*/
@RC00467 L     @12,RANGEPTR(,R7)                                   0478
         L     @08,CVTPTR                                          0478
         L     @08,CVTSDBF(,@08)                                   0478
         N     @08,@CF04713                                        0478
         ST    @08,STARTADR(,@12)                                  0478
*       ENDADDR=STARTADR+FOURK;     /* GET ENDING ADDR RANGE TABLE   */
         AL    @08,@CF04666                                        0479
         ST    @08,ENDADDR(,@12)                                   0479
*       CALL SDADDADR;              /* ADD RANGE TABLE ADDRESS TO  0480
*                                      RANGE TABLE                   */
         BAL   @14,SDADDADR                                        0480
*       STARTADR=CVTGDA&HIGHBIT0;   /* GET BEGINNING GDA ADDRESS     */
         L     @12,RANGEPTR(,R7)                                   0481
         L     @08,CVTPTR                                          0481
         L     @08,CVTGDA(,@08)                                    0481
         N     @08,@CF04713                                        0481
         ST    @08,STARTADR(,@12)                                  0481
*       ENDADDR=STARTADR+LENGTH(GDA);/* GET GDA END ADDRESS          */
         AL    @08,@CF01111                                        0482
         ST    @08,ENDADDR(,@12)                                   0482
*       CALL SDADDADR;              /* ADDR GDA AREA TO RANGE TABLE  */
         BAL   @14,SDADDADR                                        0483
*       STARTADR=FOURK;             /* GET BEGINNING ADDRESS UCB   0484
*                                      DEFAULT AREA          @ZM45046*/
         L     @12,RANGEPTR(,R7)                                   0484
         MVC   STARTADR(4,@12),@CF04666                            0484
*       ENDADDR=CVTIXAVL->IOCATTBL; /* END ADDRESS UCB DEFAULT AREA
*                                                            @ZM45046*/
         L     @08,CVTPTR                                          0485
         L     @08,CVTIXAVL(,@08)                                  0485
         L     @08,IOCATTBL(,@08)                                  0485
         ST    @08,ENDADDR(,@12)                                   0485
*       CALL SDADDADR;              /* ADD UCB DEFAULT AREA TO RANGE
*                                      TABLE                 @ZM45046*/
         BAL   @14,SDADDADR                                        0486
*RTYENDMP:                                                         0487
*       IF ERRENDMP='1'B THEN       /* IF ERROR WRITING HDR RCD    0487
*                                                            @ZA28381*/
RTYENDMP TM    ERRENDMP(R3),B'01000000'                            0487
         BNO   @RF00487                                            0487
*         SDRETCOD=NODUMP;          /* INDICATE NO DUMP TAKEN        */
         MVC   SDRETCOD(4,R7),@CF00059                             0488
*       ELSE                                                       0489
*         ;                                                        0489
@RF00487 DS    0H                                                  0490
*     END;                                                         0490
*   R13=ADDR(SDWRGSV1);             /* RESTORE SAVE AREA ADDRESS     */
@RF00446 LA    R13,SDWRGSV1(,R7)                                   0491
*   RETURN;                                                        0492
@EL00001 DS    0H                                                  0492
@EF00001 DS    0H                                                  0492
@ER00001 LM    @14,@12,12(@13)                                     0492
         BR    @14                                                 0492
*                                                                  0493
*/********************************************************************/
*/*   THIS SEGMENT WILL ADD AN ADDRESS RANGE TO THE ADDRESS RANGE    */
*/*   TABLE.  THE ADDRESSES TO BE ADDED ARE IN STARTADR AND          */
*/*   ENDADDR (IN THE ADDRESS RANGE TABLE).  IF THEIR IS ROOM IN     */
*/*   THE ADDRESS RANGE TABLE, THE START ADDRESS WILL BE ROUNDED     */
*/*   DOWN TO A 4K BOUNDARY AND THE END ADDRESS WILL BE ROUNDED UP   */
*/*   TO A 4K BOUNDARY.  IF THEIR IS NO MORE ROOM IN THE ADDRESS     */
*/*   RANGE TABLE, A RETURN CODE OF PARTDUMP WILL BE STORED IN       */
*/*   SDRETCOD.  IF THE START ADDRESS IS GREATER THAN THE END        */
*/*   ADDRESS A C0D ABEND WILL BE ISSUED.                            */
*/*                                                                  */
*/*   INPUT: RANGEPTR CONTAINS ADDRESS OF NEXT AVAILABLE SLOT IN     */
*/*      ADDRESS RANGE TABLE, ENDADRNT CONTAINS ADDRESS OF LAST SLOT */
*/*       IN ADDRESS RANGE TABLE, STARTADR CONTAINS BEG ADDRESS OF   */
*/*      RANGE, ENDADDR CONTAINS END ADDRESS OF RANGE                */
*/*                                                                  */
*/*   OUTPUT: RANGE ADDED TO ADDRESS RANGE TABLE, RANGEPTR           */
*/*      CONTAINS ADDRESS OF NEXT AVAILABLE SLOT OR RETURN CODE OF   */
*/*       PARTDUMP OR C0D ABEND                                      */
*/*                                                                  */
*/*   CALLED BY: SDALLPSA,USERNGES,SDSPQE,SDGLOBAL,LPACDE,SDNUC,     */
*/*   LPALPDE,SDLOCAL                                                */
*/********************************************************************/
*                                                                  0493
*SDADDADR:                                                         0493
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0493
SDADDADR DS    0H                                                  0494
*   RFY                                                            0494
*    (R10,                                                         0494
*     R11,                                                         0494
*     R4,                                                          0494
*     R5) RSTD;                                                    0494
*   ADDADRWA=R10;                   /* SAVE WORK REGISTER            */
         ST    R10,ADDADRWA(,R7)                                   0495
*   ADDADRWB=R11;                   /* SAVE WORK REGISTER            */
         ST    R11,ADDADRWB(,R7)                                   0496
*   ADDADRWC=R4;                    /* SAVE WORK REGISTER            */
         ST    R4,ADDADRWC(,R7)                                    0497
*   ADDADRWD=R5;                    /* SAVE WORK REGISTER            */
         ST    R5,ADDADRWD(,R7)                                    0498
*   RFY                                                            0499
*    (R10,                                                         0499
*     R11,                                                         0499
*     R4,                                                          0499
*     R5) UNRSTD;                                                  0499
*   IF RANGEPTR<(ENDADRNT-LEN1ADRN) THEN/* IF RNGE TABLE NOT FULL    */
         L     @12,RANGEPTR(,R7)                                   0500
         L     @08,ENDADRNT(,R7)                                   0500
         SL    @08,@CF00059                                        0500
         CR    @12,@08                                             0500
         BNL   @RF00500                                            0500
*     DO;                                                          0501
*       STARTADR=STARTADR&FOURKBDY; /* ROUND START ADDR DOWN-4K BDY  */
         L     @08,@CF04711                                        0502
         L     @06,STARTADR(,@12)                                  0502
         NR    @06,@08                                             0502
         ST    @06,STARTADR(,@12)                                  0502
*       ENDADDR=ENDADDR&HIGHBIT0;   /* END ADDRESS IS AN ADDRESS     */
         L     @06,ENDADDR(,@12)                                   0503
         N     @06,@CF04713                                        0503
         ST    @06,ENDADDR(,@12)                                   0503
*       IF(ENDADDR//FOURK)^=NULL THEN/* IF END ADDR NOT ON 4K BDY,   */
         LR    @04,@06                                             0504
         SRDA  @04,32                                              0504
         D     @04,@CF04666                                        0504
         LTR   @04,@04                                             0504
         BZ    @RF00504                                            0504
*         ENDADDR=(ENDADDR+FOURK)&FOURKBDY;/* ROUND UP TO 4K BDY     */
         AL    @06,@CF04666                                        0505
         NR    @06,@08                                             0505
         ST    @06,ENDADDR(,@12)                                   0505
*       ELSE                                                       0506
*         ;                                                        0506
@RF00504 DS    0H                                                  0507
*       IF STARTADR>ENDADDR THEN    /* ERROR IF START > END          */
         L     @12,RANGEPTR(,R7)                                   0507
         CLC   STARTADR(4,@12),ENDADDR(@12)                        0507
         BNH   @RF00507                                            0507
*         GEN(ABEND X'C0D',DUMP,,SYSTEM);                          0508
         ABEND X'C0D',DUMP,,SYSTEM
*       ELSE                                                       0509
*         RANGEPTR=RANGEPTR+LEN1ADRN;/* ADDR OF NEXT SLOT IN TAB     */
         B     @RC00507                                            0509
@RF00507 LA    @12,8                                               0509
         AL    @12,RANGEPTR(,R7)                                   0509
         ST    @12,RANGEPTR(,R7)                                   0509
*     END;                                                         0510
*   ELSE                            /* IF ADDRESS RANGE TABLE FULL,  */
*     DO;                                                          0511
         B     @RC00500                                            0511
@RF00500 DS    0H                                                  0512
*       FLGRTFUL='1'B;              /* IND ADDRESS RANGE TABLE FULL  */
         OI    FLGRTFUL(R7),B'10000000'                            0512
*       RTCTSDPR=PARTDUMP;          /* GIVE PERMANENT PARTIAL DUMP 0513
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0513
         L     @12,CVTRTMCT(,@12)                                  0513
         MVI   RTCTSDPR(@12),X'04'                                 0513
*     END;                                                         0514
*   RFY                                                            0515
*    (R10,                                                         0515
*     R11,                                                         0515
*     R4,                                                          0515
*     R5) RSTD;                                                    0515
@RC00500 DS    0H                                                  0516
*   R10=ADDADRWA;                   /* RESTORE WORK REGISTER         */
         L     R10,ADDADRWA(,R7)                                   0516
*   R11=ADDADRWB;                   /* RESTORE WORK REGISTER         */
         L     R11,ADDADRWB(,R7)                                   0517
*   R4=ADDADRWC;                    /* RESTORE WORK REGISTER         */
         L     R4,ADDADRWC(,R7)                                    0518
*   R5=ADDADRWD;                    /* RESTORE WORK REGISTER         */
         L     R5,ADDADRWD(,R7)                                    0519
*   RFY                                                            0520
*    (R10,                                                         0520
*     R11,                                                         0520
*     R4,                                                          0520
*     R5) UNRSTD;                                                  0520
*   END SDADDADR;                                                  0521
@EL00002 DS    0H                                                  0521
@EF00002 DS    0H                                                  0521
@ER00002 BR    @14                                                 0521
*   DCL                                                            0522
*     PATCHLOC FIXED(31) STATIC;                                   0522
*   GEN DATA DEFS(PATCHLOC);                                       0523
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0524
*     I031F FIXED(31) BASED,                                       0524
*     I031P PTR(31) BASED,                                         0524
*     I015F FIXED(15) BASED,                                       0524
*     I015P PTR(15) BASED,                                         0524
*     I008P PTR(8) BASED,                                          0524
*     I001C CHAR(1) BASED;                                         0524
*   END IEAVTSDH                                                   0525
*                                                                  0525
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (SDHSPEC )                                       */
*/*%INCLUDE SYSLIB  (SDHDCL  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IHASDUMP)                                       */
*/*%INCLUDE SYSLIB  (IHARTM2A)                                       */
*/*%INCLUDE SYSLIB  (IHASNP  )                                       */
*/*%INCLUDE SYSLIB  (IHARMPL )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHALPDE )                                       */
*/*%INCLUDE SYSLIB  (IHACDE  )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHALCCAT)                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IHAGDA  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOCM)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWRK)                                       */
*/*%INCLUDE SYSLIB  (AMDDATA )                                       */
*/*%INCLUDE SYSLIB  (SDFILE  )                                       */
*/*%INCLUDE SYSLIB  (SDFULL  )                                       */
*/*%INCLUDE SYSLIB  (SDHDR   )                                       */
*/*%INCLUDE SYSLIB  (ERRORID )                                       */
*/*%INCLUDE SYSLIB  (SDHGLOBL)                                       */
*/*%INCLUDE SYSLIB  (SDADDADR)                                       */
*                                                                  0525
*       ;                                                          0525
         B     @EL00001                                            0525
@DATA    DS    0H
@CH00798 DC    H'5'
@CH02075 DC    H'12'
@CH04628 DC    H'4104'
@CH04737 DC    H'4112'
@SM04945 MVC   PRDTITLE(0,@12),SDUSERDA(@08)
@DATD    DSECT
         DS    0F
IEAVTSDH CSECT
         DS    0F
@CF00061 DC    F'1'
@CH00061 EQU   @CF00061+2
@CF00073 DC    F'2'
@CH00073 EQU   @CF00073+2
@CF00059 DC    F'8'
@CF02144 DC    F'10'
@CF00801 DC    F'16'
@CF03622 DC    F'44'
@CF01111 DC    F'64'
@CF04933 DC    F'208'
@CF04666 DC    F'4096'
@CF04932 DC    F'-4088'
@CF04711 DC    XL4'7FFFF000'
@CF04713 DC    XL4'7FFFFFFF'
@CF04715 DC    XL4'00FFFFFF'
@CF04940 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IEAVTSDH CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV04762 DC    V(IEAVTSDP)
         DS    0D
@CC04702 DC    C'IEAVTSDT'
@CC04757 DC    C'IEAVTSDH'
@CC04759 DC    C'SVCDUMP '
@CC04761 DC    C'SYSMDUMP'
@CB04700 DC    X'FFFF'
DATABLE  DS    CL14
         ORG   DATABLE
DEVTYP06 DS    CL2
         ORG   DEVTYP06
T06RPT   DC    AL1(3)
T06TPC   DC    AL1(8)
         ORG   DATABLE+2
DEVTYP07 DS    CL2
         ORG   DEVTYP07
T07RPT   DC    AL1(3)
T07TPC   DC    AL1(8)
         ORG   DATABLE+4
DEVTYP08 DS    CL2
         ORG   DEVTYP08
T08RPT   DC    AL1(1)
T08TPC   DC    AL1(20)
         ORG   DATABLE+6
DEVTYP09 DS    CL2
         ORG   DEVTYP09
T09RPT   DC    AL1(3)
T09TPC   DC    AL1(19)
         ORG   DATABLE+8
DEVTYP0A DS    CL2
         ORG   DEVTYP0A
T0ARPT   DC    AL1(1)
T0ATPC   DC    AL1(12)
         ORG   DATABLE+10
DEVTYP0B DS    CL2
         ORG   DEVTYP0B
T0BRPT   DC    AL1(4)
T0BTPC   DC    AL1(30)
         ORG   DATABLE+12
DEVTYP0D DS    CL2
         ORG   DEVTYP0D
T0DRPT   DC    AL1(3)
T0DTPC   DC    AL1(19)
         ORG   DATABLE+14
IEAVTSDH CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
@ENDDATD EQU   *
IEAVTSDH CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R1       EQU   @01
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R7       EQU   @07
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R0       EQU   @00
R12      EQU   @12
R14      EQU   @14
R15      EQU   @15
R2       EQU   @02
R6       EQU   @06
R8       EQU   @08
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
FLCTRACE EQU   PSA+84
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIXAVL EQU   CVTMAP+124
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTABEND EQU   CVTMAP+200
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTTZ    EQU   CVTMAP+304
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBPRPTR EQU   0
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCMDCH EQU   IOBFLAG1
IOBCYCCK EQU   IOBFLAG1
IOBUNREL EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBECBPB EQU   IOBECBPT+1
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCNC   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTBYT EQU   IOBIOCSW+3
IOBUSTAT EQU   IOBSTBYT
IOBCSTAT EQU   IOBSTBYT+1
IOBSTART EQU   IOBSTDRD+16
IOBSTRTB EQU   IOBSTART+1
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBDCBPB EQU   IOBDCBPT+1
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
IOBSTPTR EQU   0
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCBPTR   EQU   0
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBRTWA  EQU   TCB+224
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBRTM2  EQU   TCBFBYT1
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
RBPRFX   EQU   0
RBSECPTR EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00018 EQU   RBSECT+10
@NM00019 EQU   @NM00018
RBTRSVRB EQU   @NM00019
@NM00021 EQU   @NM00018+1
RBETXR   EQU   @NM00021
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00028 EQU   RBSECT+28
@NM00029 EQU   @NM00028
IRBEND   EQU   RBSECT+96
@NM00032 EQU   RBSECT+96
RBRSV138 EQU   @NM00032+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBPTR   EQU   0
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBBINUM EQU   DEBDASD+4
DEBSTRCC EQU   DEBDASD+6
DEBSTRHH EQU   DEBDASD+8
DEBDAPTR EQU   0
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBEXPTR EQU   0
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEBSBPTR EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
ECB      EQU   0
ECBRB    EQU   ECB
ECBEVTB  EQU   ECBRB
ECBEXTB  EQU   ECBEVTB
ECBCC    EQU   ECBEXTB
ECBCCCNT EQU   ECBEXTB+1
ECBRBA   EQU   ECBCCCNT
ECBEVTBA EQU   ECBRBA
ECBEXTBA EQU   ECBEVTBA
ECBBYTE3 EQU   ECBEXTBA+2
ECBEXTND EQU   ECBBYTE3
ECBPTR   EQU   0
SCVTSECT EQU   0
RTCT     EQU   0
RTCTPLIB EQU   RTCT+4
RTCTSAP  EQU   RTCTPLIB
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSAP3 EQU   RTCTSAP+2
RTCTSUP  EQU   RTCTPLIB+4
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSUP3 EQU   RTCTSUP+2
RTCTSYD  EQU   RTCTPLIB+8
RTCTSY01 EQU   RTCTSYD
RTCTSDDS EQU   RTCT+36
RTCTDSNM EQU   RTCTSDDS
RTCTFLG  EQU   RTCTSDDS+3
RTCTDSUS EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTDCB  EQU   RTCTSDDS+4
RTCTSDPL EQU   RTCT+156
RTCTRFLG EQU   RTCT+176
RTCTTDCB EQU   RTCT+184
RTCTERID EQU   RTCT+224
RTCTOPT  EQU   RTCT+236
RTCTASO  EQU   RTCT+252
RTCTASO1 EQU   RTCTASO
RTCTASO2 EQU   RTCTASO+1
RTCTSDI  EQU   RTCT+254
RTCTSDNA EQU   RTCTSDI
RTCTINDX EQU   RTCTSDI+1
RTCTSDPR EQU   RTCTSDI+2
RTCTSDF  EQU   RTCT+264
RTCTSDF1 EQU   RTCTSDF
RTCTSDSH EQU   RTCTSDF1
RTCTSDF2 EQU   RTCTSDF+1
RTCTSDF3 EQU   RTCT+268
RTCTSDAS EQU   RTCTSDF3
RTCTSDF4 EQU   RTCTSDF3+2
RTCTMOPT EQU   0
RTCTMSAO EQU   RTCTMOPT
RTCTSASD EQU   RTCTMSAO
RTCTSAO1 EQU   RTCTSASD
RTCTSAO2 EQU   RTCTSASD+1
RTCTSAPD EQU   RTCTMSAO+2
RTCTSAO3 EQU   RTCTSAPD
RTCTSAO4 EQU   RTCTSAPD+1
RTCTSAMG EQU   RTCTSAO4
RTCTMSUO EQU   RTCTMOPT+4
RTCTSUSD EQU   RTCTMSUO
RTCTSUO1 EQU   RTCTSUSD
RTCTSUO2 EQU   RTCTSUSD+1
RTCTSUPD EQU   RTCTMSUO+2
RTCTSUO3 EQU   RTCTSUPD
RTCTSUO4 EQU   RTCTSUPD+1
RTCTSUMG EQU   RTCTSUO4
RTCTMSYO EQU   RTCTMOPT+8
RTCTSD01 EQU   RTCTMSYO
RTCTSD04 EQU   RTCTMSYO+3
RTCTSMMG EQU   RTCTSD04
RTCTMSDO EQU   RTCTMOPT+12
RTCTSDOD EQU   RTCTMSDO
RTCTSDO1 EQU   RTCTSDOD
RTCTSDO2 EQU   RTCTSDOD+1
RTCTSDO3 EQU   RTCTMSDO+2
RTCTSDO4 EQU   RTCTMSDO+3
RTCTSDMG EQU   RTCTSDO4
UCB      EQU   0
UCBPTR   EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3TAPE EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00085 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
IHADCB   EQU   0
DCBPTR   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
DCBDEBA  EQU   DCBDEBAD+1
IHADCS28 EQU   0
DCBOPTCD EQU   IHADCS28
DCBOPTZ  EQU   DCBOPTCD
WSAL     EQU   0
WSAG     EQU   0
WSAC     EQU   0
SDUMP    EQU   0
SDUFLAG0 EQU   SDUMP
SDUDCB   EQU   SDUFLAG0
SDUBUF   EQU   SDUFLAG0
SDUHDR   EQU   SDUFLAG0
SDUFLAG1 EQU   SDUMP+1
SDUABEND EQU   SDUFLAG1
SDUNEW   EQU   SDUFLAG1
SDUSDAT1 EQU   SDUMP+2
SDUSDAT2 EQU   SDUMP+3
SDUDCBAD EQU   SDUMP+4
SDUHDRAD EQU   SDUMP+12
SDUMASID EQU   SDUMP+20
SDUSYSMS EQU   SDUMP+32
SDUMPPTR EQU   0
SNPPARMS EQU   0
SNPFLAG  EQU   SNPPARMS+1
SNPSDATA EQU   SNPPARMS+4
SNPSDAT0 EQU   SNPSDATA
SNPSDAT1 EQU   SNPSDATA+1
SNPPDATA EQU   SNPPARMS+6
RMPL     EQU   0
RMPLFLG1 EQU   RMPL
RTM2WA   EQU   0
RTM2DESC EQU   RTM2WA
RTM2RT2D EQU   RTM2DESC+8
RTM2CODE EQU   RTM2WA+28
RTM2CCF  EQU   RTM2CODE
RTM2PGCY EQU   RTM2WA+60
RTM2TRRY EQU   RTM2PGCY
RTM2EEDR EQU   RTM2TRRY
RTM2EREG EQU   RTM2EEDR
RTM2APSW EQU   RTM2EEDR+64
RTM2EPSW EQU   RTM2APSW
RTM2EMK1 EQU   RTM2EPSW
RTM2MWP1 EQU   RTM2EPSW+1
RTM2INT1 EQU   RTM2EPSW+2
RTM2NXT1 EQU   RTM2EPSW+4
RTM2AEC1 EQU   RTM2APSW+8
RTM2ILC1 EQU   RTM2AEC1+1
RTM2INC1 EQU   RTM2AEC1+2
RTM2ICD1 EQU   RTM2INC1+1
RTM2EEDH EQU   RTM2TRRY+92
RTM2STCK EQU   RTM2EEDH
RTM2MCHI EQU   RTM2EEDH+8
RTM2MCHS EQU   RTM2MCHI
RTM2MCHD EQU   RTM2MCHI+1
RTM2RSR1 EQU   RTM2EEDH+12
RTM2RSR2 EQU   RTM2EEDH+13
RTM2FLGS EQU   RTM2TRRY+120
RTM2ERRA EQU   RTM2FLGS
RTM2ERRB EQU   RTM2FLGS+1
RTM2ERRC EQU   RTM2FLGS+2
RTM2ERRD EQU   RTM2FLGS+3
RTM2ERFL EQU   RTM2ERRD
RTM2CVER EQU   RTM2WA+186
RTM2TRRC EQU   RTM2CVER
RTM2IOFS EQU   RTM2TRRC
RTM2IOBP EQU   RTM2TRRC+2
RTM2SCBS EQU   RTM2TRRC+14
RTM2RTCD EQU   RTM2TRRC+26
RTM2SPLL EQU   RTM2RTCD+4
RTM2PARQ EQU   RTM2TRRC+46
RTM2CTL1 EQU   RTM2CVER+50
RTM2CMKA EQU   RTM2CTL1
RTM2MWPA EQU   RTM2CTL1+1
RTM2PMKA EQU   RTM2CTL1+4
RTM2CTL2 EQU   RTM2CVER+58
RTM2CMKP EQU   RTM2CTL2
RTM2MWPP EQU   RTM2CTL2+1
RTM2PMKP EQU   RTM2CTL2+4
RTM2SNAP EQU   RTM2CVER+66
RTM2SPRM EQU   RTM2SNAP+4
RTM2DPSL EQU   RTM2SNAP+24
RTM2FRM1 EQU   RTM2DPSL
RTM2TO1  EQU   RTM2DPSL+4
RTM2FRM2 EQU   RTM2DPSL+8
RTM2TO2  EQU   RTM2DPSL+12
RTM2FRM3 EQU   RTM2DPSL+16
RTM2TO3  EQU   RTM2DPSL+20
RTM2FRM4 EQU   RTM2DPSL+24
RTM2TO4  EQU   RTM2DPSL+28
RTM2SECB EQU   RTM2CVER+138
RTM2ECBA EQU   RTM2SECB
RTM2SFRG EQU   RTM2CVER+186
RTM2SCTL EQU   RTM2CVER+259
RTM2CCTL EQU   RTM2SCTL
RTM2ABDR EQU   RTM2SCTL+4
RTM2ABID EQU   RTM2ABDR
RTM2ABND EQU   RTM2ABDR+1
RTM2RCTL EQU   RTM2SCTL+6
RTM2INTF EQU   RTM2CVER+266
RTM2CTLR EQU   RTM2INTF
RTM2TSKT EQU   RTM2INTF+2
RTM2ABDP EQU   RTM2INTF+4
RTM2ASIR EQU   RTM2INTF+5
RTM2FLX  EQU   RTM2INTF+6
RTM2FLX1 EQU   RTM2FLX
RTM2FLX2 EQU   RTM2FLX+1
RTM2RECL EQU   RTM2CVER+274
RTM2DCTL EQU   RTM2RECL+12
RTM2ECTL EQU   RTM2RECL+13
RTM2TRYR EQU   RTM2RECL+16
RTM2TRF1 EQU   RTM2TRYR
RTM2TRF2 EQU   RTM2TRYR+2
RTM2RECH EQU   RTM2CVER+294
RTM2RRG  EQU   RTM2CVER+314
RTM2CRG  EQU   RTM2CVER+378
RTM2RMIN EQU   RTM2WA+708
RTM2RMPL EQU   RTM2RMIN+4
RTM2RMWA EQU   RTM2RMIN+28
RTM2ERID EQU   RTM2WA+872
RTM2ENSN EQU   RTM2WA+884
RTM2SNLN EQU   RTM2ENSN
RTM2RYRG EQU   RTM2WA+904
RTM2PTR  EQU   0
STORAGE  EQU   0
STORFRM  EQU   STORAGE
STORTO   EQU   STORAGE+4
LPDE     EQU   0
LPDENAME EQU   LPDE+8
LPDEATTR EQU   LPDE+28
LPDEATT2 EQU   LPDE+29
LPDEMJNM EQU   LPDE+32
LPDEPTR  EQU   0
CDENTRY  EQU   0
CDNAME   EQU   CDENTRY+8
CDATTR   EQU   CDENTRY+28
CDATTR2  EQU   CDENTRY+29
CDENTPTR EQU   0
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
LCCAVT   EQU   0
ASVT     EQU   0
ASVTBEGN EQU   ASVT+512
ASVTMAXU EQU   ASVT+516
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
GDA      EQU   0
GVSMFLAG EQU   GDA
GDAFLAGS EQU   GVSMFLAG
VRPOSTQ  EQU   GDA+32
VRWAITQ  EQU   GDA+40
IOCOM    EQU   0
IOCATTBL EQU   IOCOM+68
IOCOMPTR EQU   0
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPLPTR   EQU   0
WPL      EQU   0
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
SDWORK   EQU   0
SDCNTRL  EQU   SDWORK
SDECB    EQU   SDCNTRL
SDIOB    EQU   SDCNTRL+4
DACHARAD EQU   SDCNTRL+60
GLOBADDR EQU   SDCNTRL+72
RANGEPTR EQU   SDCNTRL+76
ENDADRNT EQU   SDCNTRL+80
SDWSDPL  EQU   SDCNTRL+96
SVCDOPTS EQU   SDCNTRL+100
SVCDOPT1 EQU   SVCDOPTS
SVCDOPT2 EQU   SVCDOPTS+1
FLAGSONE EQU   SDCNTRL+102
FLGRTFUL EQU   FLAGSONE
FLGFLAST EQU   FLAGSONE
SVCDMPNM EQU   SDCNTRL+128
ADDADRWA EQU   SDCNTRL+196
ADDADRWB EQU   SDCNTRL+200
ADDADRWC EQU   SDCNTRL+204
ADDADRWD EQU   SDCNTRL+208
SDRETCOD EQU   SDCNTRL+212
SDWRGSV1 EQU   SDCNTRL+216
SDWRGSV2 EQU   SDCNTRL+288
DSTINDEX EQU   SDCNTRL+360
CVRT11   EQU   SDCNTRL+368
CVRT1    EQU   CVRT11+4
CVRT2    EQU   SDCNTRL+376
SDCVRT4  EQU   CVRT2+2
SVC994ID EQU   SDCNTRL+384
SVCNAME  EQU   SDCNTRL+392
SVCNM1T5 EQU   SVCNAME
SVCNM6T8 EQU   SVCNAME+5
SVCNM7T8 EQU   SVCNM6T8+1
CCWCHAIN EQU   SDCNTRL+400
CCW1     EQU   CCWCHAIN
CMDCODE1 EQU   CCW1
DATAADR1 EQU   CCW1+1
FLAGS1   EQU   CCW1+4
CMDC1    EQU   FLAGS1
SLI1     EQU   FLAGS1
BYTECNT1 EQU   CCW1+6
CCW2     EQU   CCWCHAIN+8
CMDCODE2 EQU   CCW2
DATAADR2 EQU   CCW2+1
FLAGS2   EQU   CCW2+4
CCW3     EQU   CCWCHAIN+16
CMDCODE3 EQU   CCW3
DATAADR3 EQU   CCW3+1
FLAGS3   EQU   CCW3+4
SLI3     EQU   FLAGS3
SKIP3    EQU   FLAGS3
BYTECNT3 EQU   CCW3+6
SDSMBUFF EQU   SDCNTRL+424
SDOUTBUF EQU   SDWORK+432
RCDCCHH  EQU   SDOUTBUF
RCDCC    EQU   RCDCCHH
RCDHH    EQU   RCDCCHH+2
RECORDNO EQU   SDOUTBUF+4
KEYLEN   EQU   SDOUTBUF+5
DATALEN  EQU   SDOUTBUF+6
SDBUFFER EQU   SDWORK+440
PRDINPUT EQU   0
PRDHDRID EQU   PRDINPUT
PRDRECID EQU   PRDINPUT+1
PRDASID  EQU   PRDINPUT+2
PRDMODNM EQU   PRDINPUT+4
PRDTODVL EQU   PRDINPUT+12
PRDTITLE EQU   PRDINPUT+20
PRDREGS  EQU   PRDINPUT+120
PRDFPR   EQU   PRDREGS
PRDGPR   EQU   PRDREGS+32
PRDCR    EQU   PRDREGS+96
PRDPSW   EQU   PRDREGS+160
PRDCVT   EQU   PRDINPUT+288
PRDERRID EQU   PRDINPUT+324
PRDINPTR EQU   0
DEVTYPE  EQU   0
ERRWORK  EQU   0
ERRFLGS1 EQU   ERRWORK
ERRFLGS2 EQU   ERRWORK+1
ERRENDMP EQU   ERRFLGS2
ERRCDOUT EQU   ERRFLGS2
ERRADDR  EQU   ERRWORK+4
ERRBASE1 EQU   ERRWORK+12
ERRFLAG3 EQU   ERRWORK+16
ERRCSDT  EQU   ERRFLAG3
STORANGE EQU   0
STARTADR EQU   STORANGE
ENDADDR  EQU   STORANGE+4
LASTRNGE EQU   ENDADDR
TRTPTRS  EQU   0
TRTCURR  EQU   TRTPTRS
TRTENTY  EQU   0
@NM00202 EQU   TRTENTY+20
USERDATA EQU   0
SDUHDRLN EQU   USERDATA
SDUSERDA EQU   USERDATA+1
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
SNAPPTR  EQU   0
UCBBGN   EQU   0
UCBDCPTR EQU   0
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASVT  EQU   CVTS01+208
CVTGDA   EQU   CVTS01+212
CVTRTMCT EQU   CVTS01+224
CVTSDBF  EQU   CVTS01+240
CVTSPSA  EQU   CVTS01+336
CVTLCCAT EQU   CVTS01+420
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBPRTOV EQU   IOBNFLG1
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBM     EQU   IOBSEEK
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBR     EQU   IOBSEEK+7
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBCDE1   EQU   RBCDE+1
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
SCVTSPTR EQU   CVTABEND
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00084 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
PSARSVTE EQU   PSARSVT
LCCAPTR  EQU   PSALCCAV
ASVTPTR  EQU   CVTASVT
GDAPTR   EQU   CVTGDA
ASCBPTR  EQU   PSAAOLD
ASXBPTR  EQU   ASCBASXB
PRDFLC   EQU   PRDFPR
@NM00191 EQU   PRDHDRID
PRDKEY1  EQU   @NM00191
PRDKEY2  EQU   @NM00191+1
PRDADDR  EQU   @NM00191+4
PRDDATA  EQU   @NM00191+8
@NM00193 EQU   PRDHDRID
PRDFLAGS EQU   @NM00193+2
ERRRETRY EQU   ERRADDR
CSWSTATS EQU   IOBSTBYT
UNITSTAT EQU   CSWSTATS
UNITCHK  EQU   UNITSTAT
UNTEXCEP EQU   UNITSTAT
CHANSTAT EQU   CSWSTATS+1
PROGMCHK EQU   CHANSTAT
PROTCHK  EQU   CHANSTAT
CHANDCHK EQU   CHANSTAT
CHANCCHK EQU   CHANSTAT
INTFCCHK EQU   CHANSTAT
CHAINCHK EQU   CHANSTAT
ERRORID  EQU   RTCTERID
SDPRDHDR EQU   PRDCVT
SDPRDLST EQU   SDPRDHDR+4
SDPRDOPT EQU   SDPRDHDR+44
DCBDADDR EQU   DCBFDAD
LCLTODVL EQU   PRDTODVL
@NM00206 EQU   DSTINDEX
DSCNT    EQU   @NM00206
DSINDEX  EQU   @NM00206+2
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DCBRCDNO EQU   DCBDADDR+7
@NM00205 EQU   DCBDADDR
@NM00204 EQU   SDPRDHDR+46
@NM00203 EQU   SDPRDHDR
ERRTIME  EQU   ERRORID+8
ERRASID  EQU   ERRORID+4
ERRCPUID EQU   ERRORID+2
ERRSEQ#  EQU   ERRORID
INCORLEN EQU   CHANSTAT
PGMCNINT EQU   CHANSTAT
DEVEND   EQU   UNITSTAT
CHANNEND EQU   UNITSTAT
BUSY     EQU   UNITSTAT
CNUNTEND EQU   UNITSTAT
STATMOD  EQU   UNITSTAT
ATTENTON EQU   UNITSTAT
@NM00199 EQU   @NM00193+8
PRDCPUAD EQU   @NM00193+6
@NM00198 EQU   @NM00193+4
@NM00197 EQU   @NM00193+3
@NM00196 EQU   PRDFLAGS
PRDGPRVL EQU   PRDFLAGS
PRDSSINV EQU   PRDFLAGS
PRDUNIPR EQU   PRDFLAGS
@NM00195 EQU   @NM00193+1
@NM00194 EQU   @NM00193
@NM00192 EQU   @NM00191+2
@NM00190 EQU   PRDFLC+12
PRDCAW   EQU   PRDFLC+8
PRDCSW   EQU   PRDFLC
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00084
UCBSKPFG EQU   @NM00084
UCBRIPND EQU   @NM00084
UCBRTIAC EQU   @NM00084
UCBRSV79 EQU   @NM00084
UCBRSV78 EQU   @NM00084
UCBRSV77 EQU   @NM00084
UCBOLTEP EQU   @NM00084
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00083 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00033 EQU   RBSQE
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBSEGMT EQU   IOBPRTOV
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CURRSTOP EQU   @NM00202
@NM00201 EQU   TRTENTY
TRTEND   EQU   TRTPTRS+8
TRTBEG   EQU   TRTPTRS+4
ERRBASE2 EQU   ERRWORK+20
@NM00200 EQU   ERRWORK+17
ERRSDENQ EQU   ERRFLAG3
ERRENDSW EQU   ERRFLAG3
ERRNOTRM EQU   ERRFLAG3
ERRWKADR EQU   ERRWORK+8
ERRRUBSW EQU   ERRWORK+2
ERRNORCD EQU   ERRFLGS2
ERRCUDMP EQU   ERRFLGS2
ERRCMSLK EQU   ERRFLGS2
ERRWKFIX EQU   ERRFLGS2
ERRSDFIX EQU   ERRFLGS2
ERRINIO  EQU   ERRFLGS2
ERRSLOCK EQU   ERRFLGS1
ERRLLOCK EQU   ERRFLGS1
ERRGTFGO EQU   ERRFLGS1
ERRTCBND EQU   ERRFLGS1
ERRBFBIT EQU   ERRFLGS1
ERRSDBIT EQU   ERRFLGS1
ERRESTAE EQU   ERRFLGS1
ERRFRR   EQU   ERRFLGS1
MAXTPERC EQU   DEVTYPE+1
MAXRPERT EQU   DEVTYPE
@NM00189 EQU   PRDINPUT+382
@NM00188 EQU   PRDINPUT+334
@NM00187 EQU   PRDINPUT+292
SDSMDECB EQU   SDCNTRL+428
@NM00186 EQU   CCW3+5
PCI3     EQU   FLAGS3
CC3      EQU   FLAGS3
CD3      EQU   FLAGS3
BYTECNT2 EQU   CCW2+6
@NM00185 EQU   CCW2+5
PCI2     EQU   FLAGS2
SKIP2    EQU   FLAGS2
SLI2     EQU   FLAGS2
CC2      EQU   FLAGS2
CD2      EQU   FLAGS2
@NM00184 EQU   CCW1+5
PCI1     EQU   FLAGS1
SKIP1    EQU   FLAGS1
CD1      EQU   FLAGS1
SVCNM8   EQU   SVCNM7T8+1
SVCNM7   EQU   SVCNM7T8
SVCNM6   EQU   SVCNM6T8
SVCNM1T4 EQU   SVCNM1T5
@NM00183 EQU   SDCNTRL+388
CVRT2SGN EQU   SDCVRT4+5
@NM00182 EQU   SDCVRT4
@NM00181 EQU   CVRT2
SDCVRT1  EQU   CVRT1+2
@NM00180 EQU   CVRT1
@NM00179 EQU   CVRT11
CHCNT    EQU   SDCNTRL+366
TIMCNT   EQU   SDCNTRL+364
USEEND   EQU   SDCNTRL+192
USESTART EQU   SDCNTRL+188
SPQEADDR EQU   SDCNTRL+184
USERRETA EQU   SDCNTRL+180
PGFRRETA EQU   SDCNTRL+176
SPQERETA EQU   SDCNTRL+172
@NM00178 EQU   SDCNTRL+171
SDWKEY   EQU   SDCNTRL+170
AFFNSAV  EQU   SDCNTRL+168
FREERETA EQU   SDCNTRL+164
LPDERETA EQU   SDCNTRL+160
CDERETA  EQU   SDCNTRL+156
DISPRETA EQU   SDCNTRL+152
SDIORETA EQU   SDCNTRL+148
SVCDLPST EQU   SDCNTRL+136
ERRORWK  EQU   SDCNTRL+104
FLAGSTWO EQU   SDCNTRL+103
SDWPAGOT EQU   FLAGSONE
FLGTAPEE EQU   FLAGSONE
SVCDNSQA EQU   SVCDOPT2
SVCDNAPA EQU   SVCDOPT2
SVCDNSMD EQU   SVCDOPT2
SVCDSMDP EQU   SVCDOPT2
SVCDSWA  EQU   SVCDOPT2
SVCDCSA  EQU   SVCDOPT2
SVCDTRT  EQU   SVCDOPT1
SVCDLPA  EQU   SVCDOPT1
SVCDRGN  EQU   SVCDOPT1
SVCDLSQA EQU   SVCDOPT1
SVCDSQA  EQU   SVCDOPT1
SVCDNUC  EQU   SVCDOPT1
SVCDPSA  EQU   SVCDOPT1
SVCDAPSA EQU   SVCDOPT1
SDSRBBAS EQU   SDCNTRL+92
SDSRBADR EQU   SDCNTRL+88
SVCDSRBA EQU   SDCNTRL+84
LOCALADR EQU   SDCNTRL+68
NUCADDR  EQU   SDCNTRL+64
LSTESTAE EQU   SDCNTRL+44
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLMLLEN EQU   WPLML+1
WPLML0   EQU   WPLML
WPLLINES EQU   WPLLS01+3
WPLAREA  EQU   WPLLS01+2
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTB EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00177 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFA EQU   WPLMCSF1
WPLLGH   EQU   WPL
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
IOCOEND  EQU   IOCOM+128
IOCPATCH EQU   IOCOM+124
IOCUCBBM EQU   IOCOM+120
IOCQCNT  EQU   IOCOM+116
IOCIOSDQ EQU   IOCOM+112
IOCIOSEQ EQU   IOCOM+108
IOCSVCF  EQU   IOCOM+104
IOCTCCW  EQU   IOCOM+100
IOCRSVTB EQU   IOCOM+96
IOCMFCNT EQU   IOCOM+92
IOCMFHK  EQU   IOCOM+88
IOCGENA  EQU   IOCOM+84
IOCCCH   EQU   IOCOM+80
IOCASYNQ EQU   IOCOM+76
IOCLCHTB EQU   IOCOM+72
IOCOMEX  EQU   IOCOM+64
IOCSYNCH EQU   IOCOM+56
IOCCATLK EQU   IOCOM+48
IOCPRGID EQU   IOCOM+44
IOCIOSCP EQU   IOCOM+40
IOCORMGT EQU   IOCOM+36
IOCVOID  EQU   IOCOM+32
IOCSTIO  EQU   IOCOM+28
IOCSCOMP EQU   IOCOM+24
IOCHD160 EQU   IOCOM+20
IOCINT   EQU   IOCOM+16
IOCCTBL  EQU   IOCOM+12
IOCHIO   EQU   IOCOM+8
IOCPST   EQU   IOCOM+4
IOCPGCT  EQU   IOCOM+2
IOCVOICT EQU   IOCOM
GBLCELCT EQU   GDA+60
GLBLCELL EQU   GDA+56
CSASPQEP EQU   GDA+52
PFSTCPAB EQU   GDA+48
VRWLEL   EQU   VRWAITQ+4
VRWFEL   EQU   VRWAITQ
VRPLEL   EQU   VRPOSTQ+4
VRPFEL   EQU   VRPOSTQ
SQASPLFT EQU   GDA+28
SQASPQEP EQU   GDA+24
PASIZE   EQU   GDA+20
PASTRT   EQU   GDA+16
VRPQEP   EQU   GDA+12
CSAPQEP  EQU   GDA+8
VRDREG   EQU   GDA+4
RESV     EQU   GVSMFLAG+1
@NM00176 EQU   GDAFLAGS
WAITQUE  EQU   GDAFLAGS
SQATHRS2 EQU   GDAFLAGS
SQATHRS1 EQU   GDAFLAGS
GDAFLAG2 EQU   GDAFLAGS
NIPFOURK EQU   GDAFLAGS
GDAFLAG1 EQU   GDAFLAGS
ASVTEND  EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTASVT EQU   ASVT+512
@NM00175 EQU   ASVT
LCCAT00P EQU   LCCAVT
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
CDATTR3  EQU   CDENTRY+30
CDAUTH   EQU   CDATTR2
CDSYSLIB EQU   CDATTR2
CDOLY    EQU   CDATTR2
@NM00174 EQU   CDATTR2
CDRLC    EQU   CDATTR2
CDXLE    EQU   CDATTR2
CDREL    EQU   CDATTR2
CDSPZ    EQU   CDATTR2
CDNLR    EQU   CDATTR
CDJPA    EQU   CDATTR
CDMIN    EQU   CDATTR
CDNFN    EQU   CDATTR
CDSER    EQU   CDATTR
CDREN    EQU   CDATTR
CDNIC    EQU   CDATTR
CDNIP    EQU   CDATTR
@NM00173 EQU   CDENTRY+26
CDUSE    EQU   CDENTRY+24
CDXLMJP  EQU   CDENTRY+20
CDENTPT  EQU   CDENTRY+16
CDRRBP   EQU   CDENTRY+4
CDCHAIN  EQU   CDENTRY
LPDEXTAD EQU   LPDEMJNM+4
LPDEXTLN EQU   LPDEMJNM
LPDEATT3 EQU   LPDE+30
LPDEAUTH EQU   LPDEATT2
LPDESYSL EQU   LPDEATT2
@NM00172 EQU   LPDEATT2
@NM00171 EQU   LPDEATT2
LPDERLC  EQU   LPDEATT2
LPDEXLE  EQU   LPDEATT2
@NM00170 EQU   LPDEATT2
LPDENLR  EQU   LPDEATTR
@NM00169 EQU   LPDEATTR
LPDEMIN  EQU   LPDEATTR
@NM00168 EQU   LPDEATTR
LPDESER  EQU   LPDEATTR
LPDEREN  EQU   LPDEATTR
@NM00167 EQU   LPDEATTR
LPDENIP  EQU   LPDEATTR
@NM00166 EQU   LPDE+26
LPDEUSE  EQU   LPDE+24
LPDEXLP  EQU   LPDE+20
LPDENTP  EQU   LPDE+16
LPDERBP  EQU   LPDE+4
LPDECHN  EQU   LPDE
STORBTO  EQU   STORTO
STORB    EQU   STORFRM
RTM2TECB EQU   RTM2RYRG+64
RTM2RYRS EQU   RTM2RYRG
RTM2TRLS EQU   RTM2ENSN+16
RTM2TRFS EQU   RTM2ENSN+12
RTM2TRCU EQU   RTM2ENSN+8
RTM2TRTB EQU   RTM2ENSN+4
RTM2TRLN EQU   RTM2SNLN
@NM00141 EQU   RTM2WA+882
RTM2ERTM EQU   RTM2ERID+6
RTM2ERAS EQU   RTM2ERID+4
RTM2CPUI EQU   RTM2ERID+2
RTM2SEQ# EQU   RTM2ERID
RTM2RMSA EQU   RTM2RMIN+92
RTM2RMWS EQU   RTM2RMWA
RTM2RMPS EQU   RTM2RMIN
RTM2TRSA EQU   RTM2CVER+450
RTM2CREG EQU   RTM2CRG
RTM2RREG EQU   RTM2RRG
RTM2RBRG EQU   RTM2CVER+313
RTM2WARG EQU   RTM2CVER+312
@NM00140 EQU   RTM2CVER+310
RTM2CTRA EQU   RTM2RECH+12
RTM2STRA EQU   RTM2RECH+8
RTM2SKRA EQU   RTM2RECH+4
RTM2TRRA EQU   RTM2RECH
@NM00139 EQU   RTM2TRYR+3
@NM00138 EQU   RTM2TRF2
RTM2GMR  EQU   RTM2TRF2
RTM2PPR  EQU   RTM2TRF2
RTM2IOR  EQU   RTM2TRF2
RTM2AS3R EQU   RTM2TRF1+1
RTM2AS2R EQU   RTM2TRF1+1
RTM2AS1R EQU   RTM2TRF1+1
RTM2XFLG EQU   RTM2TRF1+1
RTM2XABD EQU   RTM2TRF1+1
RTM2XIP  EQU   RTM2TRF1+1
RTM2RTYS EQU   RTM2TRF1+1
RTM2RCD  EQU   RTM2TRF1+1
RTM2FMS  EQU   RTM2TRF1
RTM2VLDY EQU   RTM2TRF1
RTM2HOOK EQU   RTM2TRF1
RTM2PPS  EQU   RTM2TRF1
RTM2GMS  EQU   RTM2TRF1
RTM2IORS EQU   RTM2TRF1
RTM2IOHS EQU   RTM2TRF1
RTM2IOQS EQU   RTM2TRF1
RTM2TMER EQU   RTM2RECL+14
RTM2EQMN EQU   RTM2ECTL
RTM2EDEQ EQU   RTM2ECTL
RTM2EFRM EQU   RTM2ECTL
RTM2ECLS EQU   RTM2ECTL
RTM2ESNP EQU   RTM2ECTL
RTM2EOPN EQU   RTM2ECTL
RTM2EGET EQU   RTM2ECTL
RTM2EENQ EQU   RTM2ECTL
RTM2DFTK EQU   RTM2DCTL
RTM2DDEQ EQU   RTM2DCTL
RTM2DFRM EQU   RTM2DCTL
RTM2DCLS EQU   RTM2DCTL
RTM2DSNP EQU   RTM2DCTL
RTM2DOPN EQU   RTM2DCTL
RTM2DGET EQU   RTM2DCTL
RTM2DENQ EQU   RTM2DCTL
RTM2SCTX EQU   RTM2RECL+8
RTM2SCTR EQU   RTM2RECL+4
RTM2SCTC EQU   RTM2RECL
@NM00137 EQU   RTM2FLX2
RTM2CERX EQU   RTM2FLX2
RTM2RCRX EQU   RTM2FLX2
RTM2RTRX EQU   RTM2FLX1
RTM2LTX  EQU   RTM2FLX1
RTM2PRX  EQU   RTM2FLX1
RTM2CVX  EQU   RTM2FLX1
RTM2DWX  EQU   RTM2FLX1
RTM2ABX  EQU   RTM2FLX1
RTM2EOTX EQU   RTM2FLX1
RTM2MTX  EQU   RTM2FLX1
@NM00136 EQU   RTM2ASIR
RTM2UPRG EQU   RTM2ASIR
RTM2TRME EQU   RTM2ASIR
@NM00135 EQU   RTM2ABDP
RTM2SMDP EQU   RTM2ABDP
RTM2DMP1 EQU   RTM2ABDP
RTM2MEMT EQU   RTM2INTF+3
@NM00134 EQU   RTM2TSKT
RTM2PURG EQU   RTM2TSKT
@NM00133 EQU   RTM2INTF+1
@NM00132 EQU   RTM2CTLR
RTM2WRAP EQU   RTM2CTLR
RTM2TMEM EQU   RTM2CTLR
RTM2RETR EQU   RTM2CTLR
RTM2RECR EQU   RTM2CTLR
@NM00131 EQU   RTM2RCTL
RTM2JPAQ EQU   RTM2RCTL
RTM2LPAQ EQU   RTM2RCTL
RTM2BFTL EQU   RTM2RCTL
RTM2TRSW EQU   RTM2RCTL
RTM2WANA EQU   RTM2RCTL
RTM2WAIN EQU   RTM2RCTL
RTM2STA2 EQU   RTM2RCTL
RTM2STAT EQU   RTM2ABND
RTM2NDMP EQU   RTM2ABND
@NM00130 EQU   RTM2ABID
RTM2OERR EQU   RTM2ABID
RTM2SAV2 EQU   RTM2ABID
RTM2SAVE EQU   RTM2ABID
RTM2REG  EQU   RTM2ABID
RTM2PSW  EQU   RTM2ABID
RTM2ENQ  EQU   RTM2ABID
RTM2CB   EQU   RTM2ABID
RTM2MCTL EQU   RTM2SCTL+3
RTM2TCTL EQU   RTM2SCTL+2
@NM00129 EQU   RTM2CCTL+1
RTM2NODP EQU   RTM2CCTL+1
RTM2RGEB EQU   RTM2CCTL+1
RTM2DEND EQU   RTM2CCTL+1
RTM2RSCN EQU   RTM2CCTL+1
RTM2CONT EQU   RTM2CCTL
RTM2SLIP EQU   RTM2CCTL
RTM2HEED EQU   RTM2CCTL
RTM2REED EQU   RTM2CCTL
RTM2ISPC EQU   RTM2CCTL
RTM2SQS  EQU   RTM2CCTL
RTM2CNCL EQU   RTM2CCTL
RTM2STPT EQU   RTM2CCTL
RTM2PKEY EQU   RTM2CVER+258
RTM2SFSA EQU   RTM2SFRG
RTM2PRWA EQU   RTM2CVER+182
RTM2PREV EQU   RTM2CVER+178
RTM2SPWA EQU   RTM2CVER+174
RTM2DCBA EQU   RTM2CVER+170
RTM2ECBS EQU   RTM2SECB+16
RTM2LECB EQU   RTM2ECBA
RTM2DTCB EQU   RTM2SNAP+68
RTM2SNCC EQU   RTM2SNAP+64
RTM2DD   EQU   RTM2SNAP+56
RTM2LTO4 EQU   RTM2TO4
RTM2LFR4 EQU   RTM2FRM4
RTM2LTO3 EQU   RTM2TO3
RTM2LFR3 EQU   RTM2FRM3
RTM2LTO2 EQU   RTM2TO2
RTM2LFR2 EQU   RTM2FRM2
RTM2LTO1 EQU   RTM2TO1
RTM2LFR1 EQU   RTM2FRM1
RTM2DPLA EQU   RTM2SNAP
RTM2NXTP EQU   RTM2CTL2+5
RTM2SGP  EQU   RTM2PMKP
RTM2EUP  EQU   RTM2PMKP
RTM2DOP  EQU   RTM2PMKP
RTM2FPP  EQU   RTM2PMKP
RTM2CCP  EQU   RTM2PMKP
RTM2ILP  EQU   RTM2PMKP
RTM2INTP EQU   RTM2CTL2+2
RTM2SPVP EQU   RTM2MWPP
RTM2WATP EQU   RTM2MWPP
RTM2MCKP EQU   RTM2MWPP
@NM00128 EQU   RTM2MWPP
RTM2KEYP EQU   RTM2MWPP
RTM2EXTP EQU   RTM2CMKP
RTM2IOP  EQU   RTM2CMKP
RTM2NXTA EQU   RTM2CTL1+5
RTM2SGA  EQU   RTM2PMKA
RTM2EUA  EQU   RTM2PMKA
RTM2DOA  EQU   RTM2PMKA
RTM2FPA  EQU   RTM2PMKA
RTM2CCA  EQU   RTM2PMKA
RTM2ILA  EQU   RTM2PMKA
RTM2INTA EQU   RTM2CTL1+2
RTM2SPVA EQU   RTM2MWPA
RTM2WATA EQU   RTM2MWPA
RTM2MCKA EQU   RTM2MWPA
@NM00127 EQU   RTM2MWPA
RTM2KEYA EQU   RTM2MWPA
RTM2EXTA EQU   RTM2CMKA
RTM2IOA  EQU   RTM2CMKA
@NM00126 EQU   RTM2PARQ+1
RTM2RCDE EQU   RTM2PARQ
RTM2RYRB EQU   RTM2TRRC+42
RTM2RTYA EQU   RTM2TRRC+38
RTM2COMP EQU   RTM2TRRC+34
RTM2SIZE EQU   RTM2SPLL+1
RTM2SUBP EQU   RTM2SPLL
RTM2RTCA EQU   RTM2RTCD
RTM2SCBO EQU   RTM2SCBS+8
RTM2SCBN EQU   RTM2SCBS+4
RTM2SCBC EQU   RTM2SCBS
RTM2STAR EQU   RTM2TRRC+10
RTM2RBST EQU   RTM2TRRC+6
RTM2FIOB EQU   RTM2IOBP+1
@NM00125 EQU   RTM2IOBP
@NM00124 EQU   RTM2TRRC+1
@NM00123 EQU   RTM2IOFS
RTM2NIOP EQU   RTM2IOFS
RTM2NOIO EQU   RTM2IOFS
RTM2IOHT EQU   RTM2IOFS
RTM2IOQR EQU   RTM2IOFS
RTM2FMID EQU   RTM2TRRY+124
RTM2MCIV EQU   RTM2ERRD
RTM2RPIV EQU   RTM2ERRD
RTM2MABD EQU   RTM2ERRD
RTM2CTS  EQU   RTM2ERRD
RTM2STAE EQU   RTM2ERRD
RTM2NRBE EQU   RTM2ERRD
RTM2CLUP EQU   RTM2ERRD
@NM00122 EQU   RTM2ERRC
RTM2EAS  EQU   RTM2ERRC
RTM2PERC EQU   RTM2ERRC
RTM2IRB  EQU   RTM2ERRC
RTM2STAI EQU   RTM2ERRC
RTM2STAF EQU   RTM2ERRC
RTM2SRBM EQU   RTM2ERRB
RTM2LDIS EQU   RTM2ERRB
RTM2ENRB EQU   RTM2ERRB
RTM2TYP1 EQU   RTM2ERRB
@NM00121 EQU   RTM2ERRB
RTM2PGIO EQU   RTM2ERRA
RTM2TEXC EQU   RTM2ERRA
RTM2SVCE EQU   RTM2ERRA
RTM2ABTM EQU   RTM2ERRA
RTM2SVCD EQU   RTM2ERRA
RTM2RKEY EQU   RTM2ERRA
RTM2PCHK EQU   RTM2ERRA
RTM2MCHK EQU   RTM2ERRA
RTM2TIME EQU   RTM2EEDH+20
RTM2RFSA EQU   RTM2EEDH+16
@NM00120 EQU   RTM2EEDH+14
RTM2VEQR EQU   RTM2RSR2
RTM2PGFX EQU   RTM2RSR2
RTM2FLSQ EQU   RTM2RSR2
RTM2FSQA EQU   RTM2RSR2
RTM2NUCL EQU   RTM2RSR2
RTM2SPER EQU   RTM2RSR2
RTM2INTC EQU   RTM2RSR2
RTM2OFLN EQU   RTM2RSR2
RTM2CHNG EQU   RTM2RSR1
RTM2MSER EQU   RTM2RSR1
@NM00119 EQU   RTM2RSR1
RTM2CPID EQU   RTM2EEDH+10
RTM2TERR EQU   RTM2MCHD
RTM2SOFT EQU   RTM2MCHD
RTM2INSF EQU   RTM2MCHD
RTM2ACR  EQU   RTM2MCHD
RTM2SCK  EQU   RTM2MCHD
RTM2PSWU EQU   RTM2MCHD
RTM2REGU EQU   RTM2MCHD
RTM2SKYF EQU   RTM2MCHD
@NM00118 EQU   RTM2MCHS
RTM2RSRF EQU   RTM2MCHS
RTM2RSRC EQU   RTM2MCHS
RTM2INVP EQU   RTM2MCHS
RTM2TSVL EQU   RTM2MCHS
RTM2RCDF EQU   RTM2MCHS
RTM2SRVL EQU   RTM2MCHS
RTM2SCKE EQU   RTM2STCK+4
RTM2SCKB EQU   RTM2STCK
RTM2ABEP EQU   RTM2TRRY+88
RTM2ABNM EQU   RTM2TRRY+80
RTM2TRAN EQU   RTM2AEC1+4
RTM2IPC1 EQU   RTM2ICD1
RTM2IMC1 EQU   RTM2ICD1
RTM2IPR1 EQU   RTM2ICD1
@NM00117 EQU   RTM2INC1
@NM00116 EQU   RTM2ILC1
RTM2IL1  EQU   RTM2ILC1
@NM00115 EQU   RTM2ILC1
@NM00114 EQU   RTM2AEC1
RTM2ADD1 EQU   RTM2NXT1+1
@NM00113 EQU   RTM2NXT1
@NM00112 EQU   RTM2EPSW+3
RTM2SGN1 EQU   RTM2INT1
RTM2EXP1 EQU   RTM2INT1
RTM2DEC1 EQU   RTM2INT1
RTM2FPO1 EQU   RTM2INT1
RTM2CC1  EQU   RTM2INT1
@NM00111 EQU   RTM2INT1
RTM2PGM1 EQU   RTM2MWP1
RTM2WAT1 EQU   RTM2MWP1
RTM2MCK1 EQU   RTM2MWP1
RTM2ECT1 EQU   RTM2MWP1
RTM2KEY1 EQU   RTM2MWP1
RTM2EXT1 EQU   RTM2EMK1
RTM2AIO1 EQU   RTM2EMK1
RTM2TRM1 EQU   RTM2EMK1
RTM2EAM1 EQU   RTM2EMK1
@NM00110 EQU   RTM2EMK1
RTM2PER1 EQU   RTM2EMK1
@NM00109 EQU   RTM2EMK1
RTM2ER15 EQU   RTM2EREG+60
RTM2ER14 EQU   RTM2EREG+56
RTM2ER13 EQU   RTM2EREG+52
RTM2ER12 EQU   RTM2EREG+48
RTM2ER11 EQU   RTM2EREG+44
RTM2ER10 EQU   RTM2EREG+40
RTM2ER9  EQU   RTM2EREG+36
RTM2ER8  EQU   RTM2EREG+32
RTM2ER7  EQU   RTM2EREG+28
RTM2ER6  EQU   RTM2EREG+24
RTM2ER5  EQU   RTM2EREG+20
RTM2ER4  EQU   RTM2EREG+16
RTM2ER3  EQU   RTM2EREG+12
RTM2ER2  EQU   RTM2EREG+8
RTM2ER1  EQU   RTM2EREG+4
RTM2ER0  EQU   RTM2EREG
RTM2CT   EQU   RTM2WA+56
RTM2VRBT EQU   RTM2WA+52
RTM2TCBT EQU   RTM2WA+48
RTM2SFWA EQU   RTM2WA+32
RTM2CC   EQU   RTM2CODE+1
@NM00108 EQU   RTM2CCF
RTM2EOT  EQU   RTM2CCF
RTM2EOM  EQU   RTM2CCF
RTM2R0DP EQU   RTM2CCF
RTM2STEP EQU   RTM2CCF
RTM2DREQ EQU   RTM2CCF
RTM2ASC  EQU   RTM2WA+24
RTM2VRBC EQU   RTM2WA+20
RTM2TCBC EQU   RTM2WA+16
RTM2CVT  EQU   RTM2WA+12
RTM2LGTH EQU   RTM2RT2D+1
RTM2SPID EQU   RTM2RT2D
RTM2ADDR EQU   RTM2DESC+4
RTM2ID   EQU   RTM2DESC
RMPLDCBL EQU   RMPL+20
RMPLRMWA EQU   RMPL+16
RMPLRBPA EQU   RMPL+12
RMPLTCBA EQU   RMPL+8
RMPLASCB EQU   RMPL+4
RMPLASID EQU   RMPL+2
RMPLFLG2 EQU   RMPL+1
@NM00107 EQU   RMPLFLG1
RMPLWT1M EQU   RMPLFLG1
RMPLJST  EQU   RMPLFLG1
RMPLRCOV EQU   RMPLFLG1
RMPLIPUF EQU   RMPLFLG1
RMPLRBPP EQU   RMPLFLG1
RMPLTERM EQU   RMPLFLG1
RMPLTYPE EQU   RMPLFLG1
SNPHDRA  EQU   SNPPARMS+20
SNPSTOR  EQU   SNPPARMS+16
SNPTCBA  EQU   SNPPARMS+12
SNPDCB   EQU   SNPPARMS+8
@NM00106 EQU   SNPPARMS+7
@NM00105 EQU   SNPPDATA
SNPSPLS  EQU   SNPPDATA
SNPPSW   EQU   SNPPDATA
SNPJPA   EQU   SNPPDATA
SNPLPA   EQU   SNPPDATA
SNPREGS  EQU   SNPPDATA
SNPSAVE2 EQU   SNPPDATA
SNPSAVE  EQU   SNPPDATA
@NM00104 EQU   SNPSDAT1
SNPERR   EQU   SNPSDAT1
SNPIO    EQU   SNPSDAT1
SNPDM    EQU   SNPSDAT0
SNPQCB   EQU   SNPSDAT0
SNPCB    EQU   SNPSDAT0
SNPTRT   EQU   SNPSDAT0
SNPSWA   EQU   SNPSDAT0
SNPLSQA  EQU   SNPSDAT0
SNPSQA   EQU   SNPSDAT0
SNPNUC   EQU   SNPSDAT0
@NM00103 EQU   SNPPARMS+2
SNPHDR   EQU   SNPFLAG
SNPSLIST EQU   SNPFLAG
SNPTCB   EQU   SNPFLAG
SNPID    EQU   SNPFLAG
SNPABEND EQU   SNPFLAG
SNPVS2EN EQU   SNPFLAG
SNPVS2   EQU   SNPFLAG
SNPSNAP  EQU   SNPFLAG
SNPIDENT EQU   SNPPARMS
SDUSYSMC EQU   SDUMP+36
SDUSUMLP EQU   SDUMP+28
SDUASIDP EQU   SDUMP+24
SDUTASID EQU   SDUMASID+2
SDUCASID EQU   SDUMASID
SDUECBAD EQU   SDUMP+16
SDUSTORA EQU   SDUMP+8
@NM00102 EQU   SDUSDAT2
SDUNASQA EQU   SDUSDAT2
SDUNAPSA EQU   SDUSDAT2
SDUNSMDP EQU   SDUSDAT2
SDUSMDMP EQU   SDUSDAT2
SDUSWA   EQU   SDUSDAT2
SDUCSA   EQU   SDUSDAT2
SDUTRT   EQU   SDUSDAT1
SDULPA   EQU   SDUSDAT1
SDURGN   EQU   SDUSDAT1
SDULSQA  EQU   SDUSDAT1
SDUSQA   EQU   SDUSDAT1
SDUNUC   EQU   SDUSDAT1
SDUPSA   EQU   SDUSDAT1
SDUALPSA EQU   SDUSDAT1
@NM00101 EQU   SDUFLAG1
SDUSLIP  EQU   SDUFLAG1
SDUSULST EQU   SDUFLAG1
SDUASLST EQU   SDUFLAG1
DUMPTYPE EQU   SDUFLAG1
SDUBRANH EQU   SDUFLAG0
SDUQUIET EQU   SDUFLAG0
SDUASID  EQU   SDUFLAG0
SDUECB   EQU   SDUFLAG0
SDUSTOR  EQU   SDUFLAG0
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGGMFM EQU   WSAG+4
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALSDMP EQU   WSAL+12
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
@NM00100 EQU   IHADCS28+1
@NM00099 EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
@NM00098 EQU   DCBOPTCD
@NM00097 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00096 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00095 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00094 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00093 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00092 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00091 EQU   DCBDSRG1
@NM00090 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00089 EQU   IHADCS01+5
@NM00088 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00087 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00086 EQU   IHADCB
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00085
UCBHALI  EQU   @NM00085
UCBRSV09 EQU   @NM00085
UCBRSV08 EQU   @NM00085
UCBRSV07 EQU   @NM00085
UCBRSV06 EQU   @NM00085
UCBRSV05 EQU   @NM00085
UCBRSV04 EQU   @NM00085
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00082 EQU   UCB
RTCTISVC EQU   RTCTSDO4
RTCTSDOV EQU   RTCTSDMG
@NM00081 EQU   RTCTSDO4
@NM00080 EQU   RTCTSDO3
RTCTSDPH EQU   RTCTSDO3
RTCTSDPG EQU   RTCTSDO3
@NM00079 EQU   RTCTSDO2
RTCTSDPD EQU   RTCTSDO2
RTCTSDPC EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTISYM EQU   RTCTSD04
RTCTSMOV EQU   RTCTSMMG
@NM00078 EQU   RTCTSD04
RTCTSD03 EQU   RTCTMSYO+2
RTCTSD02 EQU   RTCTMSYO+1
RTCTSDS7 EQU   RTCTSD01
RTCTSDS6 EQU   RTCTSD01
RTCTSDS5 EQU   RTCTSD01
RTCTSDS4 EQU   RTCTSD01
RTCTSDS3 EQU   RTCTSD01
RTCTSDS2 EQU   RTCTSD01
RTCTSDS1 EQU   RTCTSD01
RTCTSDS0 EQU   RTCTSD01
RTCTISYU EQU   RTCTSUO4
RTCTSUOV EQU   RTCTSUMG
@NM00077 EQU   RTCTSUO4
RTCTSYDF EQU   RTCTSUO3
RTCTSYDE EQU   RTCTSUO3
RTCTSYDD EQU   RTCTSUO3
RTCTSYDC EQU   RTCTSUO3
RTCTSYDB EQU   RTCTSUO3
RTCTSYDA EQU   RTCTSUO3
RTCTSYD9 EQU   RTCTSUO3
RTCTSYD8 EQU   RTCTSUO3
@NM00076 EQU   RTCTSUO2
RTCTSYDH EQU   RTCTSUO2
RTCTSYDG EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTISAB EQU   RTCTSAO4
RTCTSAOV EQU   RTCTSAMG
@NM00075 EQU   RTCTSAO4
RTCTSADF EQU   RTCTSAO3
RTCTSADE EQU   RTCTSAO3
RTCTSADD EQU   RTCTSAO3
RTCTSADC EQU   RTCTSAO3
RTCTSADB EQU   RTCTSAO3
RTCTSADA EQU   RTCTSAO3
RTCTSAD9 EQU   RTCTSAO3
RTCTSAD8 EQU   RTCTSAO3
@NM00074 EQU   RTCTSAO2
RTCTSADH EQU   RTCTSAO2
RTCTSADG EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTZZZ5 EQU   RTCT+340
RTCTZZZ4 EQU   RTCT+336
RTCTMRMQ EQU   RTCT+332
RTCTSDF5 EQU   RTCTSDF3+3
RTCTSDDO EQU   RTCTSDF4
RTCTSDEN EQU   RTCTSDF4
RTCTSDEQ EQU   RTCTSDF4
RTCTSDTR EQU   RTCTSDF4
RTCTSDRM EQU   RTCTSDF4
RTCTSDAN EQU   RTCTSDF4
RTCTSDNC EQU   RTCTSDF4
RTCTSDSS EQU   RTCTSDF4
RTCTZZZ3 EQU   RTCT+266
RTCTSDFX EQU   RTCTSDF2
RTCTSDRW EQU   RTCTSDF2
RTCTSDSL EQU   RTCTSDF2
RTCTSDWF EQU   RTCTSDF2
RTCTSDLA EQU   RTCTSDF2
RTCTSDDI EQU   RTCTSDF2
RTCTSDTQ EQU   RTCTSDF2
RTCTSDMR EQU   RTCTSDF2
RTCTSDSC EQU   RTCTSDF1
RTCTSDRS EQU   RTCTSDF1
RTCTSDSD EQU   RTCTSDF1
RTCTSDEP EQU   RTCTSDF1
RTCTSDMA EQU   RTCTSDF1
RTCTSDND EQU   RTCTSDF1
RTCTSDNO EQU   RTCTSDF1
RTCTZZZ2 EQU   RTCT+257
@NM00073 EQU   RTCTASO2
RTCTASNQ EQU   RTCTASO2
RTCTASNA EQU   RTCTASO2
RTCTASNS EQU   RTCTASO2
RTCTASSU EQU   RTCTASO2
RTCTASSW EQU   RTCTASO2
RTCTASCS EQU   RTCTASO2
RTCTASTR EQU   RTCTASO1
RTCTASLP EQU   RTCTASO1
RTCTASRG EQU   RTCTASO1
RTCTASLS EQU   RTCTASO1
RTCTASSQ EQU   RTCTASO1
RTCTASNU EQU   RTCTASO1
RTCTASPS EQU   RTCTASO1
RTCTASAL EQU   RTCTASO1
RTCTSDO  EQU   RTCTOPT+12
RTCTSYO  EQU   RTCTOPT+8
RTCTSUO  EQU   RTCTOPT+4
RTCTSAO  EQU   RTCTOPT
RTCTXXX2 EQU   RTCT+234
RTCTETIM EQU   RTCTERID+6
RTCTEASD EQU   RTCTERID+4
RTCTECPU EQU   RTCTERID+2
RTCTESEQ EQU   RTCTERID
RTCTSDWK EQU   RTCT+220
RTCTSDSW EQU   RTCT+180
RTCTSEQ# EQU   RTCT+178
RTCTXXX1 EQU   RTCT+177
@NM00072 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDIP EQU   RTCTSDPL
RTCTDEV  EQU   RTCTSDDS+8
@NM00071 EQU   RTCTFLG
RTCTDSST EQU   RTCTFLG
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTSDID EQU   RTCT+18
RTCTYYY1 EQU   RTCT+16
RTCTSY04 EQU   RTCTSYD+3
RTCTSY03 EQU   RTCTSYD+2
RTCTSY02 EQU   RTCTSYD+1
RTCTSYM7 EQU   RTCTSY01
RTCTSYM6 EQU   RTCTSY01
RTCTSYM5 EQU   RTCTSY01
RTCTSYM4 EQU   RTCTSY01
RTCTSYM3 EQU   RTCTSY01
RTCTSYM2 EQU   RTCTSY01
RTCTSYM1 EQU   RTCTSY01
RTCTSYM0 EQU   RTCTSY01
RTCTSUP4 EQU   RTCTSUP+3
RTCTSUDF EQU   RTCTSUP3
RTCTSUDE EQU   RTCTSUP3
RTCTSUDD EQU   RTCTSUP3
RTCTSUDC EQU   RTCTSUP3
RTCTSUDB EQU   RTCTSUP3
RTCTSUDA EQU   RTCTSUP3
RTCTSUD9 EQU   RTCTSUP3
RTCTSUD8 EQU   RTCTSUP3
@NM00070 EQU   RTCTSUP2
RTCTSUDH EQU   RTCTSUP2
RTCTSUDG EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSAP4 EQU   RTCTSAP+3
RTCTSABF EQU   RTCTSAP3
RTCTSABE EQU   RTCTSAP3
RTCTSABD EQU   RTCTSAP3
RTCTSABC EQU   RTCTSAP3
RTCTSABB EQU   RTCTSAP3
RTCTSABA EQU   RTCTSAP3
RTCTSAB9 EQU   RTCTSAP3
RTCTSAB8 EQU   RTCTSAP3
@NM00069 EQU   RTCTSAP2
RTCTSABH EQU   RTCTSAP2
RTCTSABG EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
@NM00068 EQU   SCVTSECT+180
@NM00067 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00066 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00065 EQU   SCVTSECT+160
@NM00064 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
SCVTSTAT EQU   SCVTSECT+148
@NM00063 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00062 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00061 EQU   SCVTSECT+128
@NM00060 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00059 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00058 EQU   SCVTSECT+108
@NM00057 EQU   SCVTSECT+104
@NM00056 EQU   SCVTSECT+100
@NM00055 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00054 EQU   SCVTSECT+88
@NM00053 EQU   SCVTSECT+84
@NM00052 EQU   SCVTSECT+80
@NM00051 EQU   SCVTSECT+76
@NM00050 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00049 EQU   SCVTSECT+56
@NM00048 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00047 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00046 EQU   SCVTSECT+32
SCVTRMBR EQU   SCVTSECT+28
@NM00045 EQU   SCVTSECT+24
@NM00044 EQU   SCVTSECT+20
@NM00043 EQU   SCVTSECT+16
@NM00042 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
ECBEVNT  EQU   ECBEXTND
@NM00041 EQU   ECBEXTND
@NM00040 EQU   ECBBYTE3
@NM00039 EQU   ECBEXTBA
@NM00038 EQU   ECBCC
ECBPOSTB EQU   ECBCC
ECBWAITB EQU   ECBCC
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00037 EQU   DEBACS08+12
@NM00036 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00035 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00034 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00032+8
PRBEND   EQU   @NM00032+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00032+6
RBRSV136 EQU   @NM00032+4
RBRSV135 EQU   @NM00032
@NM00031 EQU   RBSECT+32
@NM00030 EQU   @NM00028+1
RBSCF    EQU   @NM00029
RBPGMQ1  EQU   RBPGMQ+1
@NM00027 EQU   RBPGMQ
@NM00026 EQU   RBSECT+16
@NM00025 EQU   @NM00021
@NM00024 EQU   @NM00021
RBIQETP  EQU   @NM00021
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00021
@NM00023 EQU   @NM00021
@NM00022 EQU   @NM00021
RBPMSVRB EQU   @NM00019
RBATNXIT EQU   @NM00019
@NM00020 EQU   @NM00019
RBWAITP  EQU   @NM00019
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00019
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00017 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00016 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00015 EQU   RBOPSWB2
@NM00014 EQU   XRBPSW
@NM00013 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00012 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00011 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00010 EQU   XSTAB1
@NM00009 EQU   RBBASIC+8
@NM00008 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00007 EQU   RBPRFX
@NM00006 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00005 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00004 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00003 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSIOCC EQU   IOBSTART
IOBCSB7  EQU   IOBCSTAT
IOBCSB6  EQU   IOBCSTAT
IOBCSB5  EQU   IOBCSTAT
IOBCSB4  EQU   IOBCSTAT
IOBCSB3  EQU   IOBCSTAT
IOBCSB2  EQU   IOBCSTAT
IOBCSB1  EQU   IOBCSTAT
IOBCSB0  EQU   IOBCSTAT
IOBUSB7  EQU   IOBUSTAT
IOBUSB6  EQU   IOBUSTAT
IOBUSB5  EQU   IOBUSTAT
IOBUSB4  EQU   IOBUSTAT
IOBUSB3  EQU   IOBUSTAT
IOBUSB2  EQU   IOBUSTAT
IOBUSB1  EQU   IOBUSTAT
IOBUSB0  EQU   IOBUSTAT
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBJAM   EQU   IOBICL
IOBMSG   EQU   IOBFL3
IOBSDR   EQU   IOBCNC
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBCC EQU   IOBECBPT
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBIOERR EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00165 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00164 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00163 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00162 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00161 EQU   FLCFSA
@NM00160 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00159 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00158 EQU   FLCIOA
@NM00157 EQU   FLCMCLA+15
@NM00156 EQU   FLCMCLA+14
@NM00155 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00154 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00153 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00152 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00151 EQU   FLCPER
@NM00150 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00149 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00148 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00147 EQU   FLCPIILC
@NM00146 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00145 EQU   FLCSVILC
@NM00144 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00143 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00142 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00243 EQU   @RC00239
@RF00276 EQU   @RC00272
@RC00427 EQU   @RC00425
@RC00507 EQU   @RC00500
@ENDDATA EQU   *
         END   IEAVTSDH,(C'PLS1254',0701,77343)
