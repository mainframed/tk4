IEECVETK CSECT
         TITLE 'IEECVETK IGC5K07B TIMER-INTERPRETER'
***********************************************************************
*
*  STATUS    CHANGE LEVEL 1 VS2 RELEASE 2
*
*   APARS FIXED ZA02835
*
*  FUNCTION    THE PURPOSE OF THIS ROUTINE IS TO RESOLVE THE DIFFERENT
*            TIME INTERVALS AT WHICH ROLL MAY HAVE BEEN CHOSEN FOR THE
*            DIFFERENT DISPLAY CONSOLES.  THIS ROUTINE THUS GAINS
*            CONTROL FROM THE OPTIONS ROUTINE TO DETERMINE THE PROPER
*            TIME INTERVAL.  THIS ROUTINE ALSO GAINS CONTROL WHENEVER
*            THE TIMER HAS ELAPSED, TO FIND OUT AND INDICATE TO THE
*            PROCESSOR WHICH, IF ANY, OF THE DISPLAYS ARE READY TO BE
*            ROLLED.
*
*  ENTRY POINT    CONTROL IS PASSED ONLY THROUGH THE CSECT LABEL,
*               IEECVETK.  THE FIRST EXECUTABLE INSTRUCTION IS LABELED
*               START.
*
*  INPUT    THE VALUES IN TWO HALF-WORDS IN EACH DCM.
*
*  OUTPUT    THE ABOVE VALUES, PLUS AN ADDITIONAL ONE IN THE BASE DCM.
*
* EXTERNAL REFERENCES NONE
*
*  EXITS - NORMAL  IEECVETH OR P OR R DEVICE-DEPENDENT IO
*                  IEECVET1 PROCESSOR ROUTINE
*                  IEECVET2 DISPLAY 1
*                  IEECVETD MESSAGE 1
*                  IEECVETE MESSAGE 2
*                  IEECVETG OPEN-CLOSE
*                  THE PARTICULAR EXIT THIS ROUTINE MAKES, GENERALLY
*                  DEPENDS UPON BITS PREVIOUSLY SET BY OTHER ROUTINES.
*       - ERROR    NONE
*
* TABLES/WORK AREAS DISPLAY CONTROL MODULE (CONTAINED IN DSECT)
*
* ATTRIBUTES   REFRESHABLE, PRIVILEGED, TYPE 4 SVC
*
* NOTES        THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A
*              PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL
*              CHARACTER SET.
*
***********************************************************************
         EJECT
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
XFBRANCH EQU   15                  BRANCH EXIT ADDRESS
XERTRN   EQU   14                  BALR RETURN ADDRESS
XFQUOTEN EQU   15                  ODD WORK REG FOR DIVIDEND
XEREMAIN EQU   14                  EVEN WORK REG FOR DIVIDEND
XDBDCM   EQU   13                  BASE DCM BASE REGISTER
XCPBASE  EQU   12                  PROGRAM BASE REGISTER
XBTDCM   EQU   11                  PAGEABLE DCM BASE REGISTER
XARDCM   EQU   10                  RESIDENT DCM BASE REGISTER
X9UCM    EQU   9                   UCM BASE REGISTER
X8UCME   EQU   8                   UCM ENTRY BASE
X7UCMLST EQU   7                   LAST UCM ENTRY FOR BXLE
X6UCMESZ EQU   6                   UCM ENTRY LENGTH FOR BXLE
X5ZERO   EQU   0                   FOR SETTING FIELDS TO ZERO
X4WORK   EQU   4                   TEMPORARY WORK REGISTER
X3LGCD   EQU   3                   LATEST G.C.D
X2NGCD   EQU   2                   NEW G.C.D
X1PARM   EQU   1                   CXSA ADDRESS
         EJECT
***********************************************************************
*        PROGRAM INITIALIZATION                                       *
***********************************************************************
         BALR  XCPBASE,N0          LOAD PROGRAM BASE REGISTER
         USING *,XCPBASE           ESTABLISH PROG ADDRESSABILITY
         USING UCMLIST,X8UCME      ESTABLISH UCMENTRY ADDRESSABILITY
         USING CXSA,X1PARM         ESTABLISH CXSA ADDRESSABILITY
         USING UCM,X9UCM           ESTABLISH UCM ADDRESSABILITY
         USING DCMTSRT,XARDCM      ESTABLISH R DCM ADDRESSABILITY
         USING DCMSTRT,XBTDCM      ESTABLISH DCM ADDRESS
         B     BEGIN               BYPASS PATCH AREA        JE @ZA02835
ICATCH   DC    CL8'IEECVETK'       MODULE NAME              JE @ZA02835
         DC    CL8'&SYSDATE'       DATE LAST ASSEMBLY       JE @ZA02835
         DC    XL2'5056'           JULIAN DATE LAST CHANGE  JE @ZA02835
         DC    S(*)                                         JE @ZA02835
         DC    CL52'ZAPS'          PATCH AREA               JE @ZA02835
BEGIN    DS    0H                                           JE @ZA02835
         L     X8UCME,CSAUCM       UCM ENTRY BASE
         L     X9UCM,CSACTLM       ADDRESS UCM BASE
         L     XARDCM,UCMXB        RESIDENT DCM BASE
         L     XBTDCM,DCMADTRN     PAGEABLE DCM BASE
         L     XDBDCM,DCMSUBAD     ADDRESS IEECSUB
         USING SUB,XDBDCM          TEMPORARY BASE FOR SUB CTL BLOCK
         L     XDBDCM,SUBPBASE     ADDRESS BASE DCM
         USING DCMSTMR,XDBDCM      ESTABLISH BASE DCM ADDRESSABILITY
         MVC   DCMTRACE(DCMTRLEN),DCMTRAC2 SHIFT OLD TRACE ENTRIES
         MVI   DCMTREN1,ID1        PUT CSECT ID INTO
         MVI   DCMTREN2,ID2        NEW TRACE ENTRY
         L     XFBRANCH,CSAXC      ADDRESS FREELOCK SUBROUTINE
         BALR  XERTRN,XFBRANCH     RELEASE LOCKS
         SR    X5ZERO,X5ZERO       REG OF ZEROS
         LH    X2NGCD,DCMIVGCD     NEW GCD EQUALS OLD GCD
         TM    DCMTIMES,DCMOPTTI   ENTRY FROM OPTIONS ROUTINE
         BZ    ROUND               NO, DO NOT COMPUTE NEW GCD
         OI    DCMIND,DCMENTOP     IND THAT ENTRY FROM OPTIONS RTN
         TM    DCMTIMES,DCMOCTTI   IS DEVICE TO BE CLOSED
         BZ    NEW                 NO  BRANCH
         MVI   DCMDEL,CHARY        CANCEL ROLL MODE
         MVI   CSACODE,CSACLOSE    RESET CLOSE CODE
NEW      SR    X3LGCD,X3LGCD       ZERO OUT LGCD REGISTER
         CLI   DCMDEL,CHARR        IS MODE NOW R OR RD
         BE    IN                  YES, GO MOVE IN INTERVAL
         ST    X5ZERO,DCMINTVL     ZERO OUT COUNTERS
         B     ROUND               BRANCH
IN       MVC   DCMINTVL(N2),DCMRTME     MOVE IN INTVL OF THIS DCM
         EJECT
***********************************************************************
*        LOOP FOR SEARCHING OF DCMS                                   *
***********************************************************************
ROUND    L     X8UCME,UCMVEA       ADDRESS FIRST UCM ENTRY
         LM    X6UCMESZ,X7UCMLST,UCMVEZ INCREMENT AND LIMIT BXLE REGS
         ST    XARDCM,DCMSVDCM     SAVE CURRENT DCM POINTER
LOOP1    TM    UCMATR,UCMUF        IS DEVICE ACTIVE
         BZ    BX1                 NO, GET NEXT
         TM    UCMDISP,UCMDISPC    IS THIS A GRAPHICS CONSOLE
         BZ    BX1                 NO GET NEXT ONE
         L     XARDCM,UCMXB        GET RDCM ADDRESS
         L     XBTDCM,DCMADTRN     GET TDCM ADDRESS         JE @ZA02835
         CLI   DCMDEL,CHARR        CONSOLE IN ROLL MODE     JE @ZA02835
         BNE   BX1                 NO, DON'T BOTHER WITH IT JE @ZA02835
         CH    X5ZERO,DCMINTVL    IS INTERVAL ZERO
         BE    BX1                 YES, GET NEXT
         TM    DCMIND,DCMSWCH      FIRST PASS THRU BXLE LOOP
         BO    SET                 NO, IGNORE NEXT TEST
         TM    DCMIND,DCMENTOP     ENTRY FROM OPTIONS ROUTINE
         BZ    SET                 NO, BRANCH
         B     MATH                YES, BRANCH
BX1      BXLE  X8UCME,X6UCMESZ,LOOP1   GO GET NEXT ONE
         L     XARDCM,DCMSVDCM     RESTORE CURRENT R DCM POINTER
         L     XBTDCM,DCMADTRN     RESTORE CURRENT T DCM POINTER
         TM    DCMIND,DCMSWCH      FIRST PASS THRU BXLE LOOP
         BO    NOTOP               NO, IGNORE NEXT TEST
         TM    DCMIND,DCMENTOP     ENTRY FROM OPTIONS ROUTINE
         BZ    NOTOP               NO, BRANCH
         OI    DCMIND,DCMSWCH      SET ON FIRST PASS FLAG
         EJECT
***********************************************************************
*        PROCESSING AFTER FIRST EXIT FROM LOOP                        *
***********************************************************************
OPTIONS  LR    X2NGCD,X3LGCD       SAVE NEW GCD
         TM    DCMTIMES,DCMTIMER   TIMER ELAPSED BIT ON
         BO    ROUND               YES, BRANCH
         TM    DCMIND,DCMTMRST     STIMER RUNNING BIT ON
         BZ    FULL                NO, LOOK FOR FULL SCREENS
         L     X4WORK,UCMPXA       POINT TO COMM TASK TCB     MH Y02137
         L     X4WORK,N120(X4WORK) GET TQE POINTER
         LTR   X4WORK,X4WORK       VALID ADDRESS              MH Y02137
         BZ    FULL                 NO, RESTART TIMER         MH Y02137
         TM    N0(X4WORK),ONQUE    IS ELEMENT ON QUEUE
         BO    FULL                NO, STIMER NOT ACTIVE
         STH   X2NGCD,DCMNEXTT     STORE GCD FOR NEXT STIMER
         OI    DCMINTI,DCMTMRCH    INDICATE INTERVAL CHANGE
         B     EXIT                DEPART
FULL     STH   X5ZERO,DCMIVGCD     SET GCD TO ZERO
         B     ROUND               SEE IF ANY SCREEN IS FULL
*
*        OPTIONS ENTRY PROCESSING
MATH     LH    XFQUOTEN,DCMINTVL   EXAMINE THIS DCMS INTERVAL
         LTR   X3LGCD,X3LGCD       IS THIS THE FIRST SO FAR
         BNZ   COMP                NO, COMPARE LAST 2 FOUND
         ST    X8UCME,DCMUAD       THIS IS ONLY ONE SO FAR
         LR    X3LGCD,XFQUOTEN     ITS INTERVAL IS THE LATEST GCD
         B     BX1                 LOOK FOR ANOTHER
COMP     CR    X3LGCD,XFQUOTEN     LATEST EQUAL THIS INTERVAL
         BE    BX1                 YES, NO CHANGE POSSIBLE
         BL    DIV                 LATEST IS SMALLER, READY TO GO
         ST    X8UCME,DCMUAD       SMALLEST INTERVAL SO FAR
         LR    XEREMAIN,XFQUOTEN   START REG SWAP
DIVAGAIN LR    XFQUOTEN,X3LGCD     LARGER NUMBER IS DIVIDEND
         LR    X3LGCD,XEREMAIN     SMALLER IS DIVISOR
DIV      SR    XEREMAIN,XEREMAIN   CLEAR EVEN REGISTER
         DR    XEREMAIN,X3LGCD     DIVIDE TO GET REMAINDER
         LTR   XEREMAIN,XEREMAIN   ANY REMAINDER
         BZ    BX1                 NO, LAST REMAINDER IS LGCD
         B     DIVAGAIN            YES, SEE IF IT IS THE LAST
         EJECT
***********************************************************************
*        PROCESSING AFTER SECOND EXIT FROM LOOP                       *
***********************************************************************
NOTOP    TM    DCMINTI,DCMTMRCH    HAS INTERVAL CHANGED
         BZ    STME                NO, BRANCH
         LH    X2NGCD,DCMNEXTT     PICK UP NEW TIME
         NI    DCMINTI,N255-DCMTMRCH    SET OFF INDICATOR
STME     STH   X2NGCD,DCMIVGCD     STORE NEW GCD
         MH    X2NGCD,HWC          CONVERT TO UNITS OF 0.01 SECONDS
         ST    X2NGCD,DCMSTMR      STORE FOR STIMER MACRO
         TM    DCMINTI,DCM1FULL    ARE ANY SCREENS FULL
         BZ    EXIT                NO, DEPART
         TM    DCMINTI,DCMDYRL     HAS AN STIMER BIT BEEN SET
         BO    EXIT                YES, DEPART
         OI    DCMIND,DCMTMRST     SET ON STIMER RUNNING BIT
         STIMER  REAL,DCMSTART,BINTVL=DCMSTMR
         B     EXIT                DEPART
         SPACE 2
*
*        PROCESSING SECOND SCANNING OF LOOP
*
SET      TM    DCMR2FLG,DCMRXSFL   IS SCREEN FULL
         BO    UPD                 YES, UPDATE COUNTER
         CLI   DCMTOPDS,N0         IS DISPLAY ON SCREEN
         BE    ZAP                 NO, ZERO OUT COUNTER
         TM    DCMR2FLG,DCMRXUNV   IS UNVIEWABLE MSG DISPLAYED
         BO    UPD                 YES, UPDATE COUNTER
ZAP      STH   X5ZERO,DCMTMCTR     ZERO OUT TIME COUNTER
         B     BX1                 RETURN TO LOOP
UPD      OI    DCMINTI,DCM1FULL    SET ON ONE FULL SCREEN BIT
         LH    X4WORK,DCMIVGCD     GET CURRENT GCD
         AH    X4WORK,DCMTMCTR     ADD IT TO TIME COUNTER
         CH    X4WORK,DCMINTVL     DOES TOTAL EQUAL INTERVAL
         BNL   GO                  YES, TRY TO POST
         STH   X4WORK,DCMTMCTR     STORE UPDATED COUNTER VALUE
         B     BX1                 RETURN TO LOOP
GO       TM    DCMINTI,DCMDYRL     STIMER BIT ON IN ANY DCM YET
         BO    ZER                 YES, CONTINUE
         OI    DCMINTI,DCMDYRL     SET ON ONE READY TO ROLL
         OI    DCMR2FLG,DCMRXTMR   SET STIMER BIT ON IN DCM
ZER      OI    DCMR2FLG,DCMRXRLL   TURN ROLL BIT ON
         STH   X5ZERO,DCMTMCTR     ZERO OUT TIME COUNTER
         C     XARDCM,DCMSVDCM     IS THIS DCM IN CONTROL
         BE    BX1                 YES, RETURN TO LOOP
         TM    DCMR2FLG,DCMRXDEL   IS DELETION PENDING
         BO    BX1                 YES, RETURN TO LOOP
         TM    UCMSTS,UCMBF        BUSY BIT ON
         BO    BX1                 YES, RETURN TO LOOP
         CLI   UCMECB,X80          IS DEVICE WAITING
         BE    POST                YES, POST IT
         CLI   UCMECB,X00          IS DEVICE READY
         BNE   BX1                 NO, RETURN TO LOOP
POST     POST  UCMECB,255          POST UCME WITH CODE 255
         B     BX1                 RETURN TO LOOP
         EJECT
***********************************************************************
*        DETERMINE WHERE TO GO AND TRANSFER CONTROL VIA BR 15         *
***********************************************************************
EXIT     NI    DCMINTI,N255-DCM1FULL-DCMDYRL SET OFF FLAGS
         NI    DCMIND,N255-DCMSWCH-DCMENTOP  SET OFF FLAGS
         L     XFBRANCH,DCMNPROC   LOAD THE ADDRESS OF PROC 1
         TM    DCMTIMES,DCMOPTTI   ENTRY FROM OPTIONS ROUTINE
         BZ    XCTL                NO, EXIT TO IEECVET1
         TM    DCMTIMES,DCMOCTTI   IS DEVICE TO BE CLOSED
         BO    SHUT                YES, ARRANGE FOR IT
         TM    DCMOPTST,DCMOPRLL   IS ROLL MODE IN EFFECT
         BO    LABEL               YES, BRANCH
         TM    DCMR2FLG,DCMRXSFL   IS SCREEN FULL
         BZ    LABEL               NO, BRANCH
         NI    DCMIOCM2,N255-DCMBLWRR   NOT WRITE RIGHT HALF WARNING
         OI    DCMCMSG1,DCMMSGWT   TURN ON MESSAGE WAITING BIT
LABEL    TM    DCMTIMES,DCMOTTMM   MSG MOD BIT SET
         BZ    IO                  NO, EXIT TO I/O ROUTINE
         TM    DCMCMSG2,DCMASYRT+DCMASYCD    ASY ERROR CONDITION
         BM    MSG2                GO TO MSG MOD TWO
         L     XFBRANCH,DCMNMSG1   LOAD MESSAGE 1 ADDRESS
         B     XCTL                EXIT TO IEECVETD
MSG2     L     XFBRANCH,DCMNMSG2   LOAD MESSAGE 2 ADDRESS
         B     XCTL                EXIT TO IEECVETE
SHUT     L     XFBRANCH,DCMNOPCL   LOAD OPEN/CLOSE ADDRESS
         B     XCTL                EXIT TO IEECVETG
IO       L     XFBRANCH,DCMIORTN   LOAD IO ROUTINE ADDRESS
*                                  FOR EXIT TO IEECVET(H,P,R, OR U)
XCTL     NI    DCMTIMES,N255-DCMTIMER-DCMOPTTI-DCMOTTMM-DCMOCTTI-DCMRMT*
               TI                  SET OFF ALL TIMER FLAGS
         NI    DCMR2FLG,N255-DCMRXTIM   SET OFF TIMER ELAPSED FLAG
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS
         BR    XFBRANCH            EXIT ADDRESS ALREADY SET
         EJECT
***********************************************************************
*        PROGRAM EQUATES AND CONSTANTS                                *
***********************************************************************
ID1      EQU   C'E'                1ST CHARACTER OF CSECT ID
ID2      EQU   C'K'                2ND CHARACTER OF CSECT ID
N0       EQU   0                   NUMBER
N1       EQU   1                   NUMBER
N2       EQU   2                   NUMBER
N3       EQU   3                   NUMBER
N4       EQU   4                   NUMBER
N16      EQU   16                  CVT POINTER ADDRESS           S21003
N120     EQU   120                 DISPLACEMENT OF TCBTME        S21003
N255     EQU   255                 NUMBER
X00      EQU   X'00'               NUMBER
X80      EQU   X'80'               NUMBER
BLANK    EQU   C' '                NUMBER
CHARA    EQU   C'A'                NUMBER
CHARR    EQU   C'R'                NUMBER
CHARY    EQU   C'Y'                NUMBER
HF0      EQU   X'F0'               NUMBER
ONQUE    EQU   X'80'               TIMER ELEMENT NOT ON QUEUE    S21003
         SPACE 4
HWC      DC    H'100'              VALUE
***********************************************************************
*        FLOW CHART STATEMENTS                                        *
***********************************************************************
*/*IEECVETK: CHART */
*/*%A: E (,%B) ENTRY POINT */
*/*%B: P (,%C) PROGRAM INITIALIZATION */
*/*%C: D (YES,FINISH,NO,%D) ENTRY FROM ROLL ROUTINE */
*/*%D: D (YES,%E,NO,ROUND) ENTRY FROM OPTIONS ROUTINE */
*/*%E: D (YES,%F,NO,NEW) IS DEVICE TO BE CLOSED */
*/*%F: P (,NEW) CANCEL ROLL MODE */
*/*NEW: D (YES,IN,NO,%G) IS MODE NOW R OR RD */
*/*%G: P (,ROUND) ZERO OUT COUNTERS */
*/*IN: P (,ROUND) MOVE IN INTERVAL OF THIS DCM */
*/*ROUND: P (,LOOP1) INIT FOR SCAN */
*/*LOOP1: D (YES,%H,NO,BX1) IS DEVICE ACTIVE AND GRAPHIC */
*/*%H: D (YES,BX1,NO,%I) IS INTERVAL ZERO */
*/*%I: D (YES,%J,NO,SET) FIRST PASS THRU LOOP */
*/*%J: D (YES,MATH,NO,SET) ENTRY FROM OPTIONS ROUTINE */
*/*BX1: D (MORE,LOOP1,DONE,%K) EXECUTE BXLE */
*/*%K: D (YES,%L,NO,NOTOP) FIRST PASS THRU LOOP */
*/*%L: D (YES,OPTIONS,NO,NOTOP) ENTRY FROM OPTIONS ROUTINE */
*/*OPTIONS: D (YES,ROUND,NO,%M) TIMER ELAPSED FLAG ON */
*/*%M: D (YES,%N,NO,FULL) TIMER RUNNING FLAG ON */
*/*%N: P (,EXIT) SAVE GCD FOR NEXT TIMER */
*/*FULL: P (,ROUND) SET GCD TO ZERO */
*/*MATH: D (YES,%O,NO,COMP) THIS VALUE GT INTERVAL */
*/*%O: P (,COMP) LOAD GREATER INTERVAL */
*/*COMP: D (YES,BX1,NO,%P) LATEST GCD EQ INTERVAL */
*/*%P: D (YES,%Q,NO,FIG) IS LATEST GCD ZERO */
*/*%Q: P (,BX1) MOVE IN THIS INTERVAL */
*/*FIG: P (,BX1) COMPUTE AND SAVE NEW GCD */
*/*NOTOP: D (YES,%R,NO,STME) HAS INTERVAL CHANGED */
*/*%R: P (,STME) PICK UP NEW TIME */
*/*STME: D (YES,%S,NO,EXIT) ARE ANY SCREENS FULL */
*/*%S: D (YES,EXIT,NO,%T) HAS STIMER FLAG BEEN SET */
*/*%T: P (,EXIT) ISSUE TIMER MACRO */
*/*SET: D (YES,UPD,NO,%U) IS SCREEN FULL */
*/*%U: D (YES,%V,NO,ZAP) IS DISPLAY ON SCREEN */
*/*%V: D (YES,UPD,NO,ZAP) IS UNVIEW. MSG. DISP. */
*/*ZAP: P (,BX1) ZERO OUT TIME COUNTER */
*/*UPD: D (YES,GO,NO,BX1) DOES TOTAL EQ INTERVAL */
*/*GO: D (YES,%W,NO,NOTDCM) IS THIS DCM IN CORE */
*/*%W: P (,NOTDCM) IND THAT DCM IS IN CORE */
*/*NOTDCM: D (YES,NOTCORE,NO,%X) STIMER ON IN ANY DCM YET */
*/*%X: P (,NOTCORE) SET ON DCM TIMER FLAGS */
*/*NOTCORE: D (YES,%Y,NO,BX1) ATTEMPT TO POST */
*/*%Y: D (YES,POST,NO,BX1) IS POST POSSIBLE */
*/*POST: P (,BX1) POST CONSOLE FOR ROLL */
*/*FINISH: P (,ZIP) COMPUTE AND MOVE WQE COUNT TO DCM */
*/*ZIP: D (YES,IO,NO,%Z) WARNING MESSAGE REQUIRED */
*/*%Z: P (,XCTL) SET OFF FULL SCREEN FLAG */
*/*EXIT: D (YES,%AA,NO,XCTL) ENTRY FROM OPTIONS ROUTINE */
*/*%AA: D (YES,SHUT,NO,%BB) IS DEVICE TO BE CLOSED */
*/*%BB: D (YES,LABEL,NO,%CC) IS ROLL MODE IN EFFECT */
*/*%CC: D (YES,%DD,NO,LABEL) IS SCREEN FULL */
*/*%DD: P (,LABEL) SET ON MESSAGE WAITING FLAG */
*/*LABEL: D (YES,%EE,NO,IO) MSG MODULE FLAG SET */
*/*%EE: D (YES,MSG2,NO,%FF) ASY. ERROR CONDITION */
*/*%FF: P (,XCTL) INIT FOR MSG ONE EXIT */
*/*MSG2: P (,XCTL) INIT FOR MSG TWO EXIT */
*/*SHUT: P (,XCTL) INIT FOR OPEN/CLOSE EXIT */
*/*IO: P (,XCTL) INIT FOR I/O MODULE EXIT */
*/*XCTL: R XCTL TO PROPER DIDOCS MODULE */
*/*IEECVETK: END */
         EJECT
***********************************************************************
*        PROGRAM DSECTS                                               *
***********************************************************************
         IHACTM  CXSA
         EJECT
         IHAPSA
         EJECT
         CVT    DSECT=YES
         EJECT
         IEECUCM  FORMAT=NEW
         EJECT
         IEERDCM
         EJECT
         IEETDCM
         EJECT
SUB      DSECT
         IEECSUB  Y,Y,N,N,Y,Y
         END
