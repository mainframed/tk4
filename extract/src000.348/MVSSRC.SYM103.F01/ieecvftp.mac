IEECVFTP CSECT
*A 118600,125100                                              MB YM2416
*    THIS ROUTINE WAS CREATED FOR STATUS DISPLAY SUPPORT, LINE ITEM
*    21002, OS RELEASE 21.
         TITLE 'IEECVFTP - K E,D AND PT A COMMANDS'
***********************************************************************
*                                                                     *
* STATUS                                                              *
*    CHANGE LEVEL=0                                                   *
*                                                                     *
* APARS FIXED --- ZA14992                                             *
*                                                                     *
* FUNCTION                                                            *
*    TO HANDLE CONTROL (K) COMMANDS AFFECTING OUT-OF-LINE STATUS      *
*    DISPLAYS. ( K E,D AND PM A.)                                     *
*    TO INDICATE IN THE SSCT THAT ALL LINES BELOW A DISPLAY HAVE      *
*    BEEN APPROPRIATELY BLANKED.                                      *
*                                                                     *
* ENTRY POINT                                                         *
*    IEECVFTP (CSECT NAME)                                            *
*                                                                     *
* INPUT                                                               *
*    REG 1 POINTS TO CXSA WHICH POINTS TO DCM  WHICH CONTAINS INDI-   *
*    CATORS.                                                          *
*    K COMMAND PARAMETER LIST POINTED TO IN THE DCM                   *
*    DCMADOPN POINTS TO OPERAND(S) IN PARAMETER LIST                  *
*                                                                     *
* OUTPUT                                                              *
*    BIT SETTINGS IN DCM AND SACB FOR OTHER ROUTINES TO ANALYZE AND   *
*    BLANKED DISPLAY OR WRITE UNVIEABLE MESSAGES TO SCREEN            *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*                                                                     *
* EXITS,NORMAL                                                        *
*    I/O RTN    (DEVICE-DEPENDENT) TO ERASE A STATUS DISPLAY          *
*    OR BLANK OUT MESSAGE AREAS BETWEEN  OR BELOW STATUS DISPLAYS.    *
*                                                                     *
* EXITS,ERROR                                                         *
*    TO PROCCESOR 1 UPON INCORRECT COMMAND INPUT                      *
*                                                                     *
* ATTRIBUTES                                                          *
*    REFRESHABLE, PRIVILEGED, TYPE 4 SVC                              *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*    UCM, DCM,CXSA, WQE, SACB                                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*    REGISTERS
*
********************************************************************
X1PARM   EQU   1
XERTRN   EQU   14
XFBRANCH EQU   15
XF       EQU   15                  WORK REG
X14      EQU   14                  RETURN REG
RETURN   EQU   14                  RETURN REG
XD       EQU   13                  WORK REG
SACBPT   EQU   13                  SACB BASE REG
XC       EQU   12                  THIS RTN'S BASE REG
XB       EQU   11                  CXSA BASE REG
XA       EQU   10                  UCM BASE REG
X9       EQU   9                   TRANSIENT DCM BASE REG
XRDCM    EQU   8                   RESIDENT DCM BASE REG
LIST     EQU   7                   UCMLIST BASE REG
X6       EQU   6                   WORK REG
PARMREG  EQU   2                   PARAMETER LIST BASE REG
WQEBASE  EQU   4                   WQE BASE REG
OUTQREG  EQU   1                   POINTER TO CONSOLE OUTPUT           X
                                        QUEUE ENTRY
X5       EQU   5                   WORK REG
X4       EQU   4                   WORK REG
X3       EQU   3                   WORK REG
X1       EQU   1                   WORK REG
X0       EQU   0                   WORK REG
         EJECT
********************************************************************
*     EQUATES
********************************************************************
ID1      EQU   C'F'                1ST CHARACTER OF CSECT ID
ID2      EQU   C'P'                2ND CHARACTER OF CSECT ID
HEXTWO   EQU   X'02'               NO LONGER NEEDED BIT IN SUB Q
VALIDOFF EQU   255-1               VALID ENTRY BIT MASK-TO TURN OFF
TOPCHAIN EQU   X'10'               USE TOP MINOR ON CHAIN
E2       EQU   X'E2'
ZERO     EQU   X'00'
BLANK    EQU   X'40'
N0       EQU   0
N1       EQU   1
N2       EQU   2
N3       EQU   3
N4       EQU   4
N8       EQU   8
NA       EQU   10
NB       EQU   11                  FIELD INCREMENT
NC       EQU   12                  FIELD INCREMENT
ND       EQU   13                  FIELD INCREMENT
N255     EQU   255
NOMORE   EQU   8
NOTTOPSW EQU   X'01'               NOT TOP DISPLAY SWITCH FLAG BIT
ONLYONE  EQU   X'02'               WORK ON 1 DISPLAY AREA ONLY
         EJECT
********************************************************************
*
*    ESTABLISH ADDRESSABILITY
*
********************************************************************
         SPACE 2
         BALR  XC,N0               ESTABLISH ROUTINE'S
         USING *,XC                BASE REGISTER
         B     BEGIN               BRANCH AROUND PATCH AREA
ICATCH   DC    CL8'IEECVFTP'      EYECATCHER AND FIELD MAINTENANCE
         DC    CL8'&SYSDATE',CL56' ' DATE AND PATCH AREA       Y02958
BEGIN    EQU   *                   END OF PATCH AREA
         LR    XB,X1               ESTABLISH CXSA
         USING CXSA,XB             ADDRESSABILITY
         L     XA,CSACTLM          ESTABLISH UCM ADDRESS
         USING UCM,XA              ADDRESSABILITY
         L     LIST,CSAUCM         LOAD UCM ENTRY ADDRESS
         USING UCMLIST,LIST        ESTABLISH UCM ENTRY  ADDRESSABILITY
         L     XRDCM,UCMXB            GET POINTER TO RESIDENT DCM
         USING DCMTSRT,XRDCM          ESTABLISH RDCM BASE REG
         L     X9,DCMADTRN        LOAD TRANSIENT DCM PT
         USING DCMSTRT,X9           ESTABLISH TDCM BASE REG
         USING WMNM,WQEBASE        BASE WQE'S
         USING DCMACB,SACBPT       SACB BASE REG
         USING KPARM,PARMREG       ESTABLISH PARAMETER BASE REG
         MVC   DCMTRACE(DCMTRLEN),DCMTRAC2 SHIFT OLD TRACE ENTRIES
         MVI   DCMTREN1,ID1        PUT CSECT ID INTO
         MVI   DCMTREN2,ID2        NEW TRACE ENTRY
         L     XFBRANCH,CSAXB      ADDRESS GETLOCK SUBROUTINE
         LR    X1PARM,XB           PASS CXSA ADDRESS IN REG 1
         BALR  XERTRN,XFBRANCH     OBTAIN LOCKS
*
         EJECT
***********************************************************************
*    TEST IF BLANKING IS IN PROCESS
*
********************************************************************
         TM    DCMCOM2,DCMCMIN5    Q. RETURN  FROM I/O COMPLETE
         BO    BLANKRTN            YES-MORE BLANKING WORK TO DO
         SR    X0,X0               CLEAR REG
         ST    X0,DCMDSAV+NC       INIT. SWITCH FIELDS TO 0
*
         TM    DCMCOM2,DCMCBLNK    N0--IS BLANKING FUNCTION REQUIRED
         BO    START               YES-GO CHECK WHAT'S TO BE BLANKED
********************************************************************
*
*    ANALYZE COMMAND
         SPACE 2
         L     PARMREG,DCMADOPN    LOAD PT TO OPERAND(S)
         SH    PARMREG,FOUR        DECREMENT POINTER BY FOUR
SACBINIT EQU   *
         L     SACBPT,DCMADSDS         LOAD SACB POINTER FROM RDCM
         MVC   DCMDSAV(N4),DCMWTINT INIT. PT TO INSTRUCTION LINE
IDLOOP   EQU   *
         LTR   SACBPT,SACBPT       IS IT A VALID ADDR
         BZ    ERROR               NO--GO BACK TO PROCESSOR 1
         CLC   KAID(N1),DCMAID    ARE AREA ID'S EQUAL
         BE    FOUNDID            YES-
         TM    DCMAFLG1,DCMADISP   IS A DISPLAY IN AREA
         BNO   SKIPSAVE            NO - DONT SAVE THIS PT
         SR    X3,X3               CLEAR REG
         IC    X3,DCMATOP          GET TOP LINE NO.
         BCTR  X3,N0               DECREMENT BY 1
         MH    X3,DCMCORLN         MULTIPLY BY LENGTH OF LINE
         A     X3,DCMASCRN         ADD START OF SCREEN IMAGE BUFF. ADDR
         ST    X3,DCMDSAV      SAVE ADDR OF SCREEN IMAGE BUFF. TOP LINE
         MVC   DCMDSAV+ND(N1),DCMAID SAVE NEXT LOWER AREA ID FOR LATER
SKIPSAVE EQU   *
         L     XD,N0(XD)          LOAD POINTER TO NEXT SACB
         B     IDLOOP
*
FOUNDID  EQU   *
         MVC   DCMLINEN(N1),DCMATOP SAVE TOP LINE NO. FOR I/O RTN
*
********************************************************************
*
         TM    KFLGS,KPT           IS PT BIT ON
         BO    PMARTN              YES-
         CLC   KOPN(N4),KED        IS COMMAND K E,D
         BE    KEDRTN              YES-GO ERASE DISPLAY
*
********************************************************************
*
*    IF NONE OF ABOVE, IT IS AN ERROR THAT SHOULD NEVER HAPPEN.
*    GO BACK TO PROCESSOR 1 SO THAT IT CAN CONTINUE PROCESSING
*    WITHOUT CAUSING POSSIBLE SYSTEM FAILURE.
ERROR    EQU   *
         L     XFBRANCH,DCMNPROC   LOAD PROC 1 ADDRESS
         B     XCTL            EXIT TO IEECVET1
*
PMARTN   EQU   *
*    PM A LOGIC FREES THE DYNAMIC DISPLAY AREA BY PROCESSING
*    AS FOR K E,D,
*    EXCEPT TO TURN SCREEN FULL BIT OFF IN THE DCM.
         NI    DCMR2FLG,N255-DCMRXSFL  TURN OFF SCREEN FULL BIT
         TM    DCMAFLG1,DCMADISP   Q.DISPLAY IN AREA
         BO    KEDRTN              YES,GO ERASE DISPLAY
*     IF THERE IS NO DISPLAY IN THE AREA, THE PM COMMAND
*     MUST HAVE BEEN ISSUED BEFORE THE FIRST DISPLAY WAS BUILT
         XC    DCMAROW(DCMCLRLN),DCMAROW     CLEAN UP SACB ONLY
         B     ERROR               GO TO PROCESSOR 1
         EJECT
KEDRTN   EQU   *
*    ON A K E,D COMMAND--THE MAJOR AND MINOR WQE'S ARE FREED FROM THIS
*    CONSOLE'S OUTPUT QUEUE.
*    THE MODULE THEN XCTL'S TO  THE BLANKING RTN TO ERASE THE
*    DISPLAY FROM THE SCREEN IF IT IS NOT THE TOP DISPLAY.
*    IF IT IS THE TOP DISPLAY, THIS MODULE XCTL'S TO THE I/O RTN
*    TO WRITE OUT ANY MESSAGES THAT ARE UNDER THE DISPLAY, AND/ OR
*    TO BLANK THE DISPLAY LINES VISIBLE ON THE SCREEN.
*
         L     OUTQREG,DCMAMJWQ    GET POINTER TO OUTPUT Q ENTRY
         USING CQE,OUTQREG         CONSOLE Q ADDRESSABILITY  Y02958
         TM    DCMAFLG2,DCMAMJFR   IS MAJOR FREED
         BO    ERASING             YES - SKIP FREEING
         TM    DCMAFLG1,DCMADEND   IS END OF DISPLAY ON SCREEN
         BO    FREEMAJ            YES, MINORS ALREADY FREED
         BAL   X14,FINDNEXT        GET POINTER TO NEXT MINOR
         LTR   WQEBASE,WQEBASE     ANY MORE MINORS
         BZ    FREEMAJ             NO, GO FREE MAJOR
         SPACE
*    DECREMENT USE COUNTS OF ALL MINORS NOT OUTPUT
FREEMIN  EQU   *
         SR    X5,X5               CLEAR REG
         IC    X5,WMNMUC1          GET USE COUNT FROM MINOR
         BCTR  X5,N0               DECREMENT USE COUNT BY 1
         STC   X5,WMNMUC1          STORE NEW USE COUNT
         L     WQEBASE,WMNMNX1-N1  GET ADDRESS OF NEXT MINOR
         LA    WQEBASE,N0(WQEBASE) CLEAR HIGH ORDER BYTE
         LTR   WQEBASE,WQEBASE     ANY MORE MINORS ON Q
         BNZ   FREEMIN             YES, BRANCH TO CONTINUE             X
                                        DECREMENTING USE COUNTS
         SPACE
FREEMAJ  EQU   *
         OI    CQEFLAG,CQEAVAIL  SET NO LONGER NEEDED BIT IN    Y02958 X
                                        SUBQ ELEMENT FLAG BYTE
         NI    CQEFLAG,N255-CQEENTR  TURN VALID ENTRY BIT OFF   Y02958
         OI    UCMSTS,UCMTB        SET DEQUEUE BIT ON IN UCME
********************************************************************
         EJECT
ERASING  EQU   *
         NI    DCMCOM3,N255-DCMCMIN7    TURN OFF INT 7 BLANK FLAG
         SR    X3,X3               CLEAR REG
         IC    X3,DCMLINEN         LOAD LINE NO.
*    REG 3 NOW HAS TOP ROW LINE NUMBER
         BCTR  X3,N0               SUBTR. 1 FOR 1-BASE TABLE
         STC   X3,DCMDSAV+NB       SAVE TOP LINE NO.
         A     X3,DCMADSEC         ADD START OF SSCT ADDR TO ROW NUMBER
         LR    X6,X3               SAVE SSCT ADDRESS FOR NEXT LOOP
         LH    X5,DCMALN           PICK UP SACB LENGTH
         LR    X4,X5               SAVE IT FOR LATER
         STH   X4,DCMDSAV+N8       SAVE TOTAL LINE COUNT FOR BLANKING
         CLC   DCMTOPDS(N1),DCMAID IS THIS TOP DISPLAY
         BE    LOOP             YES - DON'T SET FLAG BIT ON
         MVI   DCMDSAV+NC,NOTTOPSW SET SWITCH FLAG BIT ON
*                                    IF NOT TOP DISPLAY
LOOP     EQU   *
         TM    N0(X3),DCMSECST     Q. END OF SSCT OR BLANKED LINE
         BO    CHECKIT1            YES-
         TM    DCMDSAV+NC,NOTTOPSW THIS TOP DISPLAY
         BNO   NOTTP               YES - ZERO OUT SCCT CONTROL BYTE
         MVI   N0(X3),DCMSECBL     TURN ON BLANKED BIT INTO SSCT BYTE
         B     BMP                 SKIP AROUND
NOTTP    EQU   *
         MVI   N0(X3),ZERO         NO-TURN OFF DISPLAY BITS IN SSCT
BMP      EQU   *
         LA    X3,N1(X3)           BUMP SSCT POINTER
         BCT   X5,LOOP         DECREMENT LENGTH COUNTER
CHECKIT1 EQU   *
         XC    DCMAROW(DCMCLRLN),DCMAROW CLEAR AREA WITH ZEROS
         SPACE 2
*    ALL SSCT INDICATORS FOR THIS DISPLAY HAVE BEEN RESET,
*    PRIME ALL TABLE POINTERS FOR MESSAGE COUNTING RTN.
         SR    X3,X3               CLEAR REG
         IC    X3,DCMDSAV+NB       LOAD TOP LINE NO. OF DISP.
         LR    XF,X3               LOAD DISPLACEMENT NUMBER
         MH    XF,DCMCORLN         GET START ADDR IN MSG AREA
         A     XF,DCMASCRN         ADD START OF MSG AREA ADDR
         MH    X3,DCMSCTCN         DOUBLE THE NUMBER
         A     X3,DCMAMTAB         ADD ADDR OF SCT TABLE
         TM    DCMDSAV+NC,NOTTOPSW THIS TOP DISPLAY
         BO    NOTTOP             NO - DON'T CHANGE AREA ID OR WTBUF
* NOTE: IF NOT THE TOP DISPLAY, IT WILL BE BLANKED 3 LINES AT A TIME
*
********************************************************************
         EJECT
         L     SACBPT,DCMDSAV      RESTORE PT TO PREVIOUS BLOCK
         CL    SACBPT,DCMWTINT      DOES A PREVIOUS BLOCK EXIST
         BE    SWTEST              NO -
         MVC   DCMTOPDS(N1),DCMDSAV+ND MOVEAREA ID BELOW THIS ONE
         B     NOSTDISP
SWTEST   EQU   *
         MVI   DCMTOPDS,ZERO       REINIT BYTE TO SAY NO DISPLAYS
* NOTE: IF NO DISPLAY EXISTS, THE ADDRESS OF THE INSTRUCTION LINE IS PT
NOSTDISP EQU   *
         ST    SACBPT,DCMWTBUF     UPDATE TO REFLECT NEW STATUS ADDR
* NOTE: REG 6 CONTAINS ADDRESS OF TOP SSCT LINE OF DISPLAY
* NOTE2: REGS 0 AND 5 CONTAIN ZEROS
LOOP2    EQU   *
         TM    N0(X3),DCMMSGIN    Q. MSG IN LINE
         BO    OUTX               YES COUNT
         AH    X0,ONE              ADD 1 TO BLANK LINE COUNT
         B     OUTBLK              ADD TO PTS
OUTX     EQU   *
         LA    X5,N1(X5)          BUMP REAL-MSG COUNTER
         AH    XF,DCMCORLN         BUMP MSG AREA POINTER
OUTBLK   EQU   *
         LA    X3,N2(X3)          BUMP SCT POINTER
         LA    X6,N1(X6)           BUMP SSCT POINTER
         TM    N0(X3),DCMMSGST    Q. END OF SCT TABLE
         BO    OUT                STOP COUNT
         BCT   X4,LOOP2            DECREMENT LINE COUNTER
         TM    DCMDSAV+NC,ONLYONE  WORK ON ONE AREA ONLY
         BO    OUT                 YES - DONT SEARCH MSGS FURTHER
         TM    N0(X6),E2     DISPLAY LINE
         BNZ   OUT                STOP COUNTING
         MVI   N0(X6),ZERO         CLEAN SSCT BYTE
         LH    X4,ONE              PRIME REG
         B     LOOP2               NO - CONT. TO ADD TO COUNTER
OUT      EQU   *
         LR    X4,X0               PRIME BLANK LINE COUNTER
         AR    X0,X5               TOTAL LINE NUMBER FOR I/O AND SAVE
         LTR   X4,X4               ANY BLANKING TO DO
         BZ    OUT2              NO - DO INLINE MSGS ONLY
         LR    X5,XF               LOAD ADDR OF MSG AREA SAVED ABOVE
         LR    X6,X3               SET UP NEW SCT POINTER
         SR    X6,X4               DECREMENT SCT POINTER TO FIRST LINE
         SR    X6,X4               DECREMENT AGAIN FOR SECOND BYTE
         LR    X3,X4               PRIME LOOP CONTROL REG
LOOPBLNK EQU   *
         LH    X4,ONE              PRIME LINE COUNTER WITH ONE
         BAL   XF,BLANKET         BLANK AREA
         NI    N0(X6),N255-DCMMSGJK TURN OFF JUNK LINE BIT
         LA    X6,N2(X6)           BUMP SCT POINTER
         AH    X5,DCMCORLN         BUMP MESSAGE AREA POINTER
         BCT   X3,LOOPBLNK       DECREMENT COUNT AND LOOP IF NOT ZERO
OUT2     EQU   *
         TM    DCMDSAV+NC,NOTTOPSW Q. WORKING ON TOP DISPLAY  MF
         BO    BYT                 NOT TOP DISPLAY - BRANCH   MF
*                                       AROUND RESETTING      MF
*                                       WARNING LINE          MF
         TM    N0(X6),DCMMSGIN     WAS A MESSAGE FOLLOWING IN MSG AREA
         BO    BYT                 YES - DON'T RESET WARNING LINE
         TM    DCMR2FLG,DCMRXUNV   Q. IS UNVIEW. MSG ON SCREEN
         BNO   BYT            NO - SKIP
         TM    DCMR2FLG,DCMRXSFL   YES - IS SCREEN FULL BIT ON
         BO    BYT            YES - SKIP
         OI    DCMIOCM2,DCMBLWRR   BLANK RIT HALF OF WRN. LINE BIT ON
         OI    DCMIOCM1,DCMWRWRN   TURN ON WRITE WRN. LINE
BYT      EQU   *
         MH    X0,DCMCORLN        MULT. COUNT BY NO. OF BYTES/LINE
         STH   X0,DCMBYTCT        SAVE FOR IO  RTN
OUT3     EQU   *
         OI    DCMIOCM1,DCMWRPAR   INDICATE WRITE PARTIAL MSG AREA
         B     IOEXIT             GO WRITE MSGS AND/OR BLANK LINES
*
********************************************************************
         EJECT
********************************************************************
COMPREG  EQU   *
         MVC   DCMLINEN(N1),DCMDSAV+NA MOVE TOP LINE NO.
         CH    X4,THREE            Q. MORE THAN 3 LINES TO BLANK
         BH    SAVECNT             YES-
         LTR   X4,X4               ANY LINES TO BLANK
         BZ    ERROR                YES - END PROCESS
         XC    DCMDSAV+N8(N2),DCMDSAV+N8  SET COUNTER TO NO LINES
CONTCNT  EQU   *
         LR    X3,X4               SAVE NO. OF LINES
         MH    X4,DCMCORLN         MULT. LINES BY LENGTH
         STH   X4,DCMBYTCT         SAVE BYTE COUNT FOR I/O RTN
         LH    X4,ONE              DO FIRST LINE OF BLANKS
         L     X5,DCMAINS          SET POINTER TO INSTRUCTION LINE
         BAL   XF,BLANKET          GO BLANK WRITE AREA
         LR    X4,X3               RESTORE LINE COUNT
         BCTR  X4,N0           DECREMENT FOR THE ONE JUST DONE
         LTR   X4,X4               ANY MORE TO BLANK
         BNP   IODISP2             NO - STOP PROCESS OF BLANKING
         L     X5,DCMAENTR         LOAD ENTRY AREA
         BAL   XF,BLANKET          GO BLANK WRITE AREA
         B     IODISP2             GO TO I/O RTN TO WRITE OUT LINES
BLANKET  EQU   *
         MH    X4,DCMLGNTH         MULT. LINE CNT BY LINE LENGTH
         MVI   N0(X5),BLANK        MOVE A BLANK CHAR
         SH    X4,TWO              DECREMENT BY 2
         EX    X4,BLANKWRT         SPREAD BLANKS THROUGHOUT LINE
         BR    XF
SAVECNT  EQU   *
         OI    DCMCOM2,DCMCMIN5    INDICATE RETURN TO THIS RTN
         SH    X4,THREE           DECREMENT LINE COUNT BY 3
         STH   X4,DCMDSAV+N8       SAVE LINE COUNT STILL TO BE DONE
         LH    X4,THREE            PRIME LINE COUNT
         SR    X3,X3               CLEAR REG
         IC    X3,DCMDSAV+NA       LOAD LINE NO.
         AR    X3,X4               BUMP LINE NO. COUNT BY 3
         STC   X3,DCMDSAV+NA       SAVE FOR LATER
         B     CONTCNT             GO BLANK LINES
*
********************************************************************
         EJECT
* NOTE: IF NOT TOP DISPLAY K E,D'D, THEN JUST BLANK IT
*     IF THERE ARE NO MESSAGES IN THE MESSAGE AREA UNDER THE
*     DISPLAY, BLANKING WILL BE DONE USING THE MESSAGE AREA AND
*     A PARTIAL WRITE.  ELSE, LINES WILL BE BLANKED USING THE INSTR-
*     UCTION LINE AND ENTRY AREA, DOING I/O 3 LINES AT A TIME.
NOTTOP   EQU   *
         OI    DCMDSAV+NC,ONLYONE  TURN ON ONE AREA SWITCH
         TM    N0(X3),DCMMSGIN    Q. MSG IN LINE
         BNO   LOOP2              NO- GO BLANK FROM MSG AREA
         MVC   DCMDSAV+NA(N1),DCMLINEN SAVE TOP LINE NUMBER
         XC    DCMDSAV(N4),DCMDSAV SET WORD INDICATING BLANK ONLY
BLANKRTN EQU   *
         NI    DCMCOM2,N255-DCMCMIN5 TURN BIT OFF
         SR    X4,X4               CLEAR REG
         LH    X4,DCMDSAV+N8       PICK UP LINES STILL TO BLANK
         B     COMPREG
*
*
********************************************************************
         EJECT
FINDNEXT EQU   *
*FIND NEXT MINOR TO BE OUTPUT SO THAT FREEING WILL START THERE
         TM    CQEFLAG,CQEATTOP  SHOULD MINOR SEARCH BEGIN       Y02958X
                                        AT TOP OF CHAIN
         BO    GETFIRST            YES, BRANCH TO GET FIRST MINOR
         L     WQEBASE,DCMAMIN     GET MINOR POINTER SAVED
         TM    DCMAFLG2,DCMALMIN   Q. LAST MINOR OUTPUT SAVED
         BO    GETNEXT             YES, BRANCH TO GET NEXT MINOR
         LTR   WQEBASE,WQEBASE     Q. ZERO POINTER SAVED
         BZ    MINPTR0             YES, BRANCH TO HANDLE
         BR    X14                 RETURN WITH POINTER SAVED TO        X
                                        NEXT MINOR
         DROP  WQEBASE
         USING WMJM,WQEBASE         BASE WQE
         SPACE
MINPTR0  EQU   *
         L     WQEBASE,CQEWQE GET POINTER TO MAJOR WQE         Y02958
         TM    WMJMMLW,WMJMMLWH    Q. NULL MINOR ON QUEUE
         BNO   GETFIRST            NO, GET POINTER TO FIRST            X
                                        MINOR
         SR    WQEBASE,WQEBASE     INDICATE NO MINOR WAITING TO        X
                                        BE OUTPUT
         BR    X14                 RETURN
         SPACE
GETFIRST EQU   *
         L     WQEBASE,CQEWQE GET POINTER TO MAJOR               Y02958
         L     WQEBASE,WMJMMIN     GET POINTER TO FIRST MINOR
         NI    CQEFLAG,N255-CQEATTOP TURN OFF TOP OF CHAIN       Y02958X
                                        FLAG
         NI    DCMAFLG2,N255-DCMALMIN TURN OFF LAST MINOR FLAG @ZA14992
         XC    DCMAMIN(X4),DCMAMIN  ZERO MINOR PTR IN SACB     @ZA14992
         BR    X14                 RETURN
         SPACE
GETNEXT  EQU   *
* FIRST CHECK TO SEE IF LAST MINOR OUTPUT IS STILL ON QUEUE
         L     WQEBASE,CQEWQE GET POINTER TO MAJOR             Y02958
         L     WQEBASE,WMJMMIN     GET POINTER TO FIRST MINOR
LOOKNEXT EQU   *
         LA    WQEBASE,N0(WQEBASE) CLEAR HIGH ORDER BYTE
         LTR   WQEBASE,WQEBASE     END OF MINOR QUEUE
         BNZ   CHKEQ               NO, BRANCH TO SEE IF EQUAL TO       X
                                        LAST OUTPUT
** 1 LINE OF CODE MOVED FM HERE TO 4 INST AFTER LABEL GETFIRST @ZA14992
         B     GETFIRST            GET POINTER TO FIRST MINOR ON       X
                                        QUEUE SINCE LAST MINOR         X
                                        OUTPUT IS NO LONGER ON Q
CHKEQ    EQU   *
         C     WQEBASE,DCMAMIN     MINOR POINTER EQUAL TO              X
                                        POINTER TO LAST MINOR          X
                                        OUTPUT
         BE    LASTONQ             YES, LAST OUTPUT IS ON QUEUE
         L     WQEBASE,WMNMNX1-N1  NO, LOOK AT
         B     LOOKNEXT                 NEXT MINOR ON QUEUE
* LAST MINOR OUTPUT IS STILL ON QUEUE - CONTINUE FROM THERE
LASTONQ  EQU   *
         L     WQEBASE,WMNMNX1-N1  GET CHAIN FIELD OF LAST             X
                                        MINOR OUTPUT
         LA    WQEBASE,N0(WQEBASE) CLEAR HIGH ORDER BYTE
         LTR   WQEBASE,WQEBASE     Q. ANY MORE MINORS
         BCR   NOMORE,X14          NO, RETURN
         NI    DCMAFLG2,N255-DCMALMIN TURN OFF LAST MINOR FLAG
         BR    X14                 RETURN
         EJECT
********************************************************************
START    EQU   *
         L     XFBRANCH,DCMNINT7   LOAD INTERFACE 7 ADDRESS
         B     XCTL                EXIT TO IEECVFTT
*
IODISP2  EQU   *
         OI    DCMIOCM2,DCMWINFD   INDICATE WRITE DISPLAY
IOEXIT   EQU   *
         L     XFBRANCH,DCMIORTN   LOAD IO ROUTINE ADDRESS
*                                  FOR EXIT TO IEECVET(H,P,R, OR U)
*
XCTL     EQU   *
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS
         BR    XFBRANCH            EXIT ADDRESS ALREADY SET
*
********************************************************************
*
BLANKWRT MVC   N1(N0,X5),N0(X5) EXEC. FOR BLANKING WRITE AREA
*
********************************************************************
ONE      DC    H'1'                CONSTANT
TWO      DC    H'2'                CONSTANT
THREE    DC    H'3'                CONSTANT
FOUR     DC    H'4'                CONSTANT
KED      DC    C'E,D '             CONSTANT FOR K E,D
*
********************************************************************
         EJECT
********************************************************************
*
*    ALL DSECTS FOLLOW THIS POINT
*
********************************************************************
         IEETDCM
         EJECT
         IHACTM  CXSA
         EJECT
         IHACTM  CQE
         EJECT
         IEECUCM FORMAT=NEW
         EJECT
         IEERDCM
KPARM    DSECT
         IEECVMAP KPARAM
         EJECT
         IHAWQE  DSECT=YES
***********************************************************************
         END
