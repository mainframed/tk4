IEECVFTT CSECT
*C081000,084500,114000                                        MH Y01565
*D107000,107500,137000-142000                                 MH Y01565
* C 080500-081000,084000-084500,093500-094000                 MB YM6838
*    THIS ROUTINE WAS CREATED FOR STATUS DISPLAY SUPPORT, LINE ITEM
*    21002, OS RELEASE 21.
         TITLE 'IEECVFTT - STATUS DISPLAY BLANKING FUNCTION'
***********************************************************************
*                                                                     *
* STATUS                                                              *
*    CHANGE LEVEL=0                                                   *
*                                                                     *
* APARS FIXED ZA10060                                                 *
*                                                                     *
* FUNCTION                                                            *
*    TO OVERLAY WITH BLANKS ANY MESSAGE THAT IS BELOW  OR             *
*    BETWEEN  A   DISPLAY.                                            *
*    TO INDICATE IN THE SSCT THAT ALL LINES BELOW A DISPLAY HAVE      *
*    BEEN APPROPRIATELY BLANKED.                                      *
*                                                                     *
* ENTRY POINT                                                         *
*    IEECVFTT (CSECT NAME)                                            *
*                                                                     *
* INPUT                                                               *
*    REG 1 POINTS TO CXSA WHICH POINTS TO DCM  WHICH CONTAINS INDI-   *
*    CATORS.                                                          *
*    K COMMAND PARAMETER LIST POINTED TO IN THE DCM                   *
*    DCMADOPN POINTS TO OPERAND(S) IN PARAMETER LIST                  *
*                                                                     *
* OUTPUT                                                              *
*    BIT SETTINGS IN DCM AND SACB FOR OTHER ROUTINES TO ANALYZE       *
*    BLANKED SCREEN AREAS BELOW OR BETWEEN DISPLAYS                   *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*    SVC 34                                                           *
*                                                                     *
* EXITS,NORMAL                                                        *
*    I/O RTN    (DEVICE-DEPENDENT)                                    *
*    TO BLANK OUT MESSAGE AREAS BETWEEN  OR BELOW STATUS DISPLAYS.    *
*                                                                     *
* EXITS,ERROR                                                         *
*    TO PROCCESOR 1 UPON INCORRECT COMMAND INPUT                      *
*                                                                     *
* ATTRIBUTES                                                          *
*    REFRESHABLE, PRIVILEGED, TYPE 4 SVC                              *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*    UCM, DCM,CXSA, WQE, SACB                                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
*/*IEECVFTT: CHART */
*/* E IEECVFTT */
*/*	BASES: P (,TSTBIT1) ESTABLISH ADDESSABILITY */
*/*TSTBIT1: D (YES,BLANKRTN,NO,TSTBIT2) RETURN FROM I/O COMPLETE */
*/*TSTBIT2: D (YES,START,NO,ERROR) BLANKING FUNCTION REQUESTED */
*/*ERROR: P (,XCTL) MOVE IN PROCESSOR 1 NAME */
*/*START: P (,VIEWABLE) TURN BLANKING FUNCTION BIT OFF */
*/*VIEWABLE: P (,DISPLAY) FIND TOP DISPLAY'S FIRST LINE */
*/*DISPLAY: P (,DISPLAY2) FIND FIRST LINE BELOW TOP DISPLAY */
*/*DISPLAY2: P (,BLANKIT2) FIND ZERO SSCT BYTE */
*/* BLANKIT2: D (YES,BLANKIO,NO,SKIPBLNK) LINE ALREADY BLANKED */
*/*SKIPBLNK: D (YES,BLANKIO,NO,TSTMSGIN) END OF SSCT */
*/*TSTMSGIN: D (YES,BLNKONLY,NO,	BLNK1) IS A MSG UNDERNEATH */
*/*	BLNK1: P (,BLNKONLY) BUMP BLANK LINE COUNTER */
*/*BLNKONLY: P (,	SKP01) SET BLANK INDIC ON IN SSCT */
*/*	SKP01: D (YES,BLANKIO,NO,BLANKIT2) DISPLAY LINE */
*/*BLANKIO: P (,COMPREG) SAVE TABLE POINTERS */
*/*COMPREG: D (YES,SAVECNT,NO,	CMP1) MORE THAN 3 LINES TO BLANK */
*/*	CMP1: D (YES,CONTCNT,NO,FINISHED) ANY LINES TO BLANK */
*/*CONTCNT: P (,IODISP2) BLANK ENTRY AREA AND INSTR. LINE */
*/* E BLANKET */
*/*	B1: P (,	B2) BLANK A LINE */
*/*	B2: R RETURN TO CALLER */
*/*SAVECNT: P (,CONTCNT) SAVE LINE COUNT MINUS 3 FOR NEXT ROUND */
*/*BLANKRTN: P (,COMPREG) TURN DCMCMIN5 OFF; GET LINE COUNT TO BLANK
*/**/
*/*IODISP2: P (,IOEXIT) INDICATE TO I/O TO WRITE DISPLAY */
*/*IOEXIT: P (,XCTL) MOVE IN I/O NAME */
*/*XCTL: R RETURN */
*/*IEECVFTT: END */
        EJECT
***********************************************************************
*    REGISTERS
*
********************************************************************
X1PARM   EQU   1
XERTRN   EQU   14
XFBRANCH EQU   15
XF       EQU   15                  WORK REG
X14      EQU   14                  RETURN REG
RETURN   EQU   14                  RETURN REG
XD       EQU   13                  WORK REG
SACBPT   EQU   13                  SACB BASE REG
XC       EQU   12                  THIS RTN'S BASE REG
XB       EQU   11                  CXSA BASE REG
XA       EQU   10                  UCM BASE REG
X9       EQU   9                   TRANSIENT DCM BASE REG
XRDCM    EQU   8                   RESIDENT DCM BASE REG
LIST     EQU   7                   UCMLIST BASE REG
X6       EQU   6                   WORK REG
X5       EQU   5                   WORK REG
X4       EQU   4                   WORK REG
X3       EQU   3                   WORK REG
X2       EQU   2                   WORK REG
X1       EQU   1                   WORK REG
X0       EQU   0                   WORK REG
         EJECT
********************************************************************
*     EQUATES
********************************************************************
ID1      EQU   C'F'                1ST CHARACTER OF CSECT ID
ID2      EQU   C'T'                2ND CHARACTER OF CSECT ID
E2       EQU   X'E2'               NUMBER
ZERO     EQU   X'00'               NUMBER
C0       EQU   X'C0'               NUMBER
BLANK    EQU   X'40'               NUMBER
N0       EQU   0                   NUMBER
N1       EQU   1                   NUMBER
N2       EQU   2                   NUMBER
N3       EQU   3                   NUMBER
N4       EQU   4                   NUMBER
NC       EQU   12                  NUMBER
NE       EQU   14                  NUMBER
N255     EQU   255                 NUMBER
EIGHT    EQU   X'80'               CONTROL LINE OF DISPLAY
         EJECT
********************************************************************
*
*    ESTABLISH ADDRESSABILITY
*
********************************************************************
         SPACE 2
         BALR  XC,N0               ESTABLISH ROUTINE'S
         USING *,XC                BASE REGISTER
         B     BEGIN               BRANCH AROUND PATCH AREA
ICATCH   DC    CL8'IEECVFTT'      EYECATCHER AND FIELD MAINTENANCE
         DC    CL8'&SYSDATE',CL56' ' DATE AND PATCH AREA       Y02958
BEGIN    EQU   *                   END OF PATCH AREA
         LR    XB,X1               ESTABLISH CXSA
         USING CXSA,XB             ADDRESSABILITY
         L     XA,CSACTLM          ESTABLISH UCM ADDRESS
         USING UCM,XA              ADDRESSIBILITY
         L     LIST,CSAUCM         LOAD UCM ENTRY ADDRESS
         USING UCMLIST,LIST        ESTABLISH UCM ENTRY  ADDRESSABILITY
         L     XRDCM,UCMXB         GET POINTER TO RESIDENT DCM
         USING DCMTSRT,XRDCM          ESTABLISH R DCM ADDRESSABILITY
         L     X9,DCMADTRN         LOAD TRANSIENT DCM PT
         USING DCMSTRT,X9         ESTABLISH TDCM BASE REG
         MVC   DCMTRACE(DCMTRLEN),DCMTRAC2 SHIFT OLD TRACE ENTRIES
         MVI   DCMTREN1,ID1        PUT CSECT ID INTO
         MVI   DCMTREN2,ID2        NEW TRACE ENTRY
         L     XFBRANCH,CSAXC      ADDRESS FREELOCK SUBROUTINE
         LR    X1PARM,XB           PASS CXSA ADDRESS IN REG 1
         BALR  XERTRN,XFBRANCH     RELEASE LOCKS
***********************************************************************
*    TEST IF BLANKING IS IN PROCESS
********************************************************************
         TM    DCMCOM3,DCMCMIN7    Q. RETURN  FROM I/O COMPLETE
         BO    BLANKRTN            YES-MORE BLANKING WORK TO DO
         TM    DCMCOM2,DCMCBLNK    N0--IS BLANKING FUNCTION REQUIRED
         BO    START               YES-GO CHECK WHAT'S TO BE BLANKED
********************************************************************
*    IF NONE OF ABOVE, IT IS AN ERROR THAT SHOULD NEVER HAPPEN.
*    GO BACK TO PROCESSOR 1 SO THAT IT CAN CONTINUE PROCESSING
*    WITHOUT CAUSING POSSIBLE SYSTEM FAILURE.
********************************************************************
ERROR    EQU   *
         L     XFBRANCH,DCMNPROC       LOAD PROC 1 ADDRESS
         B     XCTL                    EXIT TO IEECVET1
START    EQU   *
         NI    DCMCOM2,N255-DCMCBLNK TURN OFF BLANKING FUNCTION BIT
         SR    X0,X0               CLEAR REG
         L     X3,DCMADSEC         LOAD SSCT ADDR
         L     X4,DCMAMTAB         LOAD SCT POINTER
********************************************************************
*    THE FOLLOWING CODE SKIPS VIEWABLE MSGS
********************************************************************
VIEWABLE EQU   *
         TM    N0(X3),EIGHT       DOES THE LINE CONTAIN A DISPLAY
         BO    DISPLAY             YES-
         C     X4,DCMADDRL         END OF SCREEN              MB YM6838
         BH    ERROR               YES, NOTHING TO DO         MB YM6838
         LA    X3,N1(X3)           NO--BUMP SSCT POINTER
         LA    X4,N2(X4)           BUMP SCT POINTER
         B     VIEWABLE
********************************************************************
*    THE FOLLOWING CODE SKIPS THE FIRST DISPLAY
********************************************************************
DISPCNT  EQU   *
         C     X4,DCMADDRL         END OF SCREEN              MB YM6838
         BH    ERROR               YES, NOTHING TO DO         MB YM6838
DISPLAY  EQU   *
         LA    X3,N1(X3)          BUMP SSCT TABLE POINTER
         LA    X4,N2(X4)           BUMP SCT POINTER
         EJECT
DISPLAY2 EQU   *
         CLI   N0(X3),ZERO        Q. IS THERE A DISPLAY IN THIS LINE
*                                 OR IS THE LINE ALREADY BLANKED
         BNE   DISPCNT             YES-
BLANKIT1 EQU   *
         SR    X0,X0               CLEAR REG
         LR    X2,X3               PRIME BLANKING STOP ADDR REG
BLANKIT2 EQU   *
         TM    N0(X3),DCMSECBL     WAS THIS LINE ALREADY BLANKED
         BO    BLANKIO            YES-DON'T COUNT IT
         C     X4,DCMADDRL         END OF SCREEN              MB YM6838
         BNH   TSTMSGIN            NO, SEE IF MSG UNDERNEATH  MB YM6838
         LR    X3,X2               RESET TO SSCT STOP BLANKING ADDR
         B     BLANKIO2            YES -
TSTMSGIN EQU   *
         TM    N0(X4),DCMMSGIN     IS A MSG LINE UNDERNEATH
         BNO   BLNKONLY           NO - STOP BLANK LINE COUNT
         AH    X0,ONE              BUMP COUNTER
         LA    X2,N1(X3)           BUMP BLANKING STOP ADDR
BLNKONLY EQU   *
         OI    N0(X3),DCMSECBL     SET BLANK LINE INDIC. ON IN SSCT
SKIPBLNK EQU   *
         LA    X3,N1(X3)           BUMP SSCT POINTER
         LA    X4,N2(X4)           BUMP SCT POINTER
         TM    N0(X3),E2           DOES THIS LINE HAVE A DISPLAY IN IT
         BZ    BLANKIT2            NO--INCLUDE IT IN THE BLANKING COUNT
         LR    X3,X2               RESET SSCT PT TO STOP BLANK ADDR
         BCTR  X3,N0               DECR. BY ONE FOR FALLING THRU
*                                  NEXT INSTRUCTION
BLANKIO  EQU   *
         LA    X3,N1(X3)           BUMP PT BY ONE FOR ALGORITHM FOLLOWS
BLANKIO2 EQU   *
         S     X3,DCMADSEC         ISOLATE SSCT LINE NO.
         LA    X3,N1(X3)           BUMP BY 1 FOR 0 BASE
         SR    X3,X0               SUBTR. COUNT TO BLANK
         STC   X3,DCMDSAV+NE       SAVE FOR LATER              @ZA10060
         LR    X4,X0               LOAD BLANK LINE COUNT
COMPREG  EQU   *
         MVC   DCMLINEN(N1),DCMDSAV+NE MOVE TOP LINE NO.       @ZA10060
         CH    X4,THREE            Q. MORE THAN 3 LINES TO BLANK
         BH    SAVECNT             YES-
         LTR   X4,X4               ANY LINES TO BLANK
         BNP   START           NO--THEN JOB IS FINISHED       MH Y01565
         XC    DCMDSAV+NC(N2),DCMDSAV+NC  SET CNTR TO NO LINES @ZA10060
CONTCNT  EQU   *
         LR    X3,X4               SAVE NO. OF LINES
         MH    X4,DCMCORLN         MULT. LINES BY LENGTH
         STH   X4,DCMBYTCT         SAVE BYTE COUNT FOR I/O RTN
         LH    X4,ONE              DO FIRST LINE OF BLANKS
         L     X5,DCMAINS          SET POINTER TO INSTRUCTION LINE
         BAL   XF,BLANKET          GO BLANK WRITE AREA
         LR    X4,X3               RESTORE LINE COUNT
         BCTR  X4,N0               DECREMENT FOR THE ONE JUST DONE
         LTR   X4,X4               ANY MORE TO BLANK
         BNP   IODISP2             NO - STOP PROCESS OF BLANKING
         L     X5,DCMAENTR         LOAD ENTRY AREA
         BAL   XF,BLANKET          GO BLANK WRITE AREA
         B     IODISP2             GO TO I/O RTN TO WRITE OUT LINES
BLANKET  EQU   *
         MH    X4,DCMLGNTH         MULT. LINE CNT BY LINE LENGTH
         MVI   N0(X5),BLANK        MOVE A BLANK CHAR
         SH    X4,TWO              DECREMENT BY 2
         EX    X4,BLANKWRT         SPREAD BLANKS THROUGHOUT LINE
         BR    XF
SAVECNT  EQU   *
         OI    DCMCOM3,DCMCMIN7    INDICATE RETURN TO THIS RTN
         SH    X4,THREE            DECREMENT LINE COUNT BY 3
         STH   X4,DCMDSAV+NC       SAVE LINE CNT TO BE DONE    @ZA10060
         LH    X4,THREE            PRIME LINE COUNT
         SR    X3,X3               CLEAR REG
         IC    X3,DCMDSAV+NE       LOAD LINE NO.               @ZA10060
         AR    X3,X4               BUMP LINE NO. COUNT BY 3
         STC   X3,DCMDSAV+NE       SAVE FOR LATER              @ZA10060
         B     CONTCNT             GO BLANK LINES
BLANKRTN EQU   *
         NI    DCMCOM3,N255-DCMCMIN7 TURN BIT OFF
         SR    X4,X4               CLEAR REG
         LH    X4,DCMDSAV+NC       PICK UP LINES TO BLANK      @ZA10060
         B     COMPREG
IODISP2  EQU   *
         OI    DCMIOCM2,DCMWINFD   INDICATE WRITE DISPLAY
IOEXIT   EQU   *
         L     XFBRANCH,DCMIORTN   LOAD IO ROUTINE ADDRESS
*                                  FOR EXIT TO IEECVET(H,P,R, OR U)
XCTL     EQU   *
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS
         BR    XFBRANCH            EXIT ADDRESS ALREADY SET
BLANKWRT MVC   N1(N0,X5),N0(X5) EXEC. FOR BLANKING WRITE AREA
********************************************************************
ONE      DC    H'1'                CONSTANT
TWO      DC    H'2'
THREE    DC    H'3'
FOUR     DC    H'4'
********************************************************************
         EJECT
********************************************************************
*
*    ALL DSECTS FOLLOW THIS POINT
*
********************************************************************
         IHACTM  CXSA
         EJECT
         IEECUCM  FORMAT=NEW
         EJECT
         IEERDCM
         EJECT
         IEETDCM
***********************************************************************
         END
