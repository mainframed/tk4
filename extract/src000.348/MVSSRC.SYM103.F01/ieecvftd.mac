IEECVFTD CSECT
         SPACE 2
*    THIS ROUTINE WAS CREATED FOR PROGRAM FUNCTION KEY (PFK) SUPPORT, *
*    LINE ITEM 21003, OS RELEASE 21.                                  *
         TITLE 'IEECVFTD MESSAGE 3 - PFK SUPPORT MESSAGES'
***********************************************************************
*
* STATUS                                                              *
*    CHANGE LEVEL 0                                                   *
* FUNCTION                                                            *
*    TO PLACE ERROR MESSAGES OR INFORMATIONAL MESSAGES INTO THE       *
*    INSTRUCTION.                                                     *
* ENTRY POINT                                                         *
*    IEECVFTD  (CSECT)                                                *
* INPUT                                                               *
*    BIT SETTINGS IN DCMCMSG4                                         *
*    TO INDICATE WHICH MESSAGE MUST BE MOVED INTO THE DCM             *
* OUTPUT                                                              *
*    INDICATIONS TO I/O ROUTINE OF WHAT TO WRITE                      *
* EXTERNAL REFERENCES                                                 *
*    NONE                                                             *
* EXITS,NORMAL                                                        *
*    IEECVETH OR P OR R DEVICE DEPENDENT I/O                          *
* EXITS,ERROR                                                         *
*    NONE                                                             *
* TABLES/WORK AREAS                                                   *
*    DISPLAY CONTROL MODULE (CONTAINED IN DSECT)                      *
* ATTRIBUTES                                                          *
*    REFRESHABLE, PRIVILEGED, TYPE 4 SVC                              *
* NOTES                                                               *
*    THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A PARTICULAR   *
*    INTERNAL PRESENTATION OF THE EXTERNAL CHARACTER SET.             *
*                                                                     *
***********************************************************************
         EJECT
*    REGISTER EQUATES
*
X1PARM   EQU   1
XERTRN   EQU   14
XFBRANCH EQU   15
MYBASE   EQU   12                  THIS MODULE'S BASE REG
CXSABASE EQU   11                  CXSA BASE REG
PARM     EQU   1                   PARAMETER LIST POINTER
RETURN   EQU   14                  RETURN REG
UCMEBASE EQU   13                  UCME BASE REG
DCMBASE  EQU   10                  DCM BASE REG
UCMBASE  EQU   9                   UCM BASE REG
X2       EQU   2                   WORK REG
X3       EQU   3                   WORK REG
XWORK    EQU   4                   WORK REG
XWORK1   EQU   5                   WORK REG
X6       EQU   6                   WORK REG
X7       EQU   7                   WORK REG
X8       EQU   8                   WORK REG
XE       EQU   14
CODEREG  EQU   15                  RETURN CODE REG
*
***********************************************************************
*    EQUATES
*
ID1      EQU   C'F'                1ST CHARACTER OF CSECT ID
ID2      EQU   C'D'                2ND CHARACTER OF CSECT ID
N0       EQU   0                   FIELD DISPLACEMENT
N1       EQU   1                   FIELD DISPLACEMENT
N2       EQU   2                   FIELD DISPLACEMENT
N3       EQU   3                   FIELD DISPLACEMENT
N4       EQU   4                   FIELD DISPLACEMENT
N6       EQU   6                   FIELD DISPLACEMENT
N15      EQU   15                  FIELD DISPLACEMENT
N21      EQU   21                  FIELD DISPLACEMENT
N25      EQU   25                  FIELD DISPLACEMENT
N35      EQU   35                  FIELD DISPLACEMENT
N37      EQU   37                  FIELD DISPLACEMENT
N46      EQU   46                  FIELD DISPLACEMENT
N59      EQU   59                  FIELD DISPLACEMENT
N255     EQU   255                 USED TO TURN BITS OFF WITH
*
BLANK    EQU   C' '                BLANK CHAR.
F0       EQU   X'F0'               BITS TO FIX SIGN OF CONVERTED NO.
***********************************************************************
         EJECT
*/*IEECVFTD: CHART */
*/*IEECVFTD: E MESSAGE MOD 3 */
*/* P ESTABLISH ADDRESSABILITY */
*/* P DETERMINE TYPE OF MESSAGE TO BE DISPLAYED */
*/* D (NO,,YES,IGNORE) LAST INTRPT IGNORED MSG ? */
*/* D (NO,,YES,NOTSUP) PFK NN NOT SUPPORTED MSG ? */
*/* D (NO,,YES,NOTDEF) PFK NN NOT DEFINED MSG ? */
*/* D (NO,,YES,NOALLOC) PFK NOT ALLOC MSG ? */
*/*IOEXIT: P INDICATE SOUND ALARM */
*/* P SET EXIT TO PROPER I/O ROUTINE */
*/*EXIT: R XCTL TO NEXT LOAD */
*/*IGNORE: S BLINST RTN: GO BLANK INSTRUCTION LINE */
*/* P (,INSTWRIT) PUT ERROR MSG IN INSTRUCTION LINE */
*/*NOTSUP: S BLINST RTN: GO BLANK INSTRUCTION LINE */
*/* P (,CNVRTPFK) PUT ERROR MSG IN INSTRUCTION LINE */
*/*NOTDEF: S BLINST RTN:GO BLANK INSTRUCTION LINE */
*/* P (,CNVRTPFK) PUT ERROR MSG IN INSTRUCTION LINE */
*/*NOALLOC: S BLINST RTN: GO BLANK INSTRUCTION LINE */
*/* P PUT ERROR MSG IN INSTRUCTION LINE */
*/*INSTWRIT: P INDICATE WRITE INSTRUCTION LINE */
*/* D (NO,IOEXIT,YES,) DOES DEVICE HAVE LITE PEN ? */
*/* P PUT 'ENTER - CANCEL MSG IN INSTR LINE */
*/* P (,IOEXIT) INDICATE ERROR MSG IN INSTR LINE */
*/*CNVRTPFK: P CONVERT PFK NUMBER FOR PRINT */
*/* P (,INSTWRIT) PUT NUMBER INTO MSG */
*/*BLINST: E BLINST RTN */
*/* P BLANK INSTRUCTION LINE IN DCM */
*/* R BR 14 */
*/*IEECVFTD: END */
         EJECT
*    ESTABLISH ADDRESSABILITY
*
         BALR  MYBASE,N0           ESTABLISH PROGRAM ADDRESSABILITY
         USING *,MYBASE
         B     BEGIN               BRANCH AROUND PATCH AREA
ICATCH   DC    CL72'IEECVFTD'      EYECATCHER AND FIELD MAINTENANCE
BEGIN    EQU   *                   END OF PATCH AREA
*
         LR    CXSABASE,PARM       ESTABLISH CXSA BASE REG
         USING CXSA,CXSABASE
         L     UCMEBASE,CSAUCM     ESTABLISH UCM ENTRY BASE REG
         USING UCMLIST,UCMEBASE
         L     DCMBASE,UCMXB       LOAD RDCM PT
         L     DCMBASE,N0(DCMBASE) LOAD TDCM PT
         USING DCMSTRT,DCMBASE    ESTABLISH T DCM BASE REG
         L     UCMBASE,CSACTLM     LOAD UCM POINTER
         USING UCM,UCMBASE         ESTABLISH UCM BASE REG
         MVC   DCMTRACE(DCMTRLEN),DCMTRAC2 SHIFT OLD TRACE ENTRIES
         MVI   DCMTREN1,ID1        PUT CSECT ID INTO
         MVI   DCMTREN2,ID2        NEW TRACE ENTRY
         L     XFBRANCH,CSAXC      ADDRESS FREELOCK SUBROUTINE
         LR    X1PARM,CXSABASE     PASS CXSA ADDRESS IN REG 1
         BALR  XERTRN,XFBRANCH     RELEASE LOCKS
*
         L     X2,DCMAINS          LOAD ADDR OF INSTRUCTION LINE
*
*    TEST FOR TYPE OF MESSAGE TO BE MOVED INTO INSTRUCTION LINE
*
         TM    DCMCMSG4,DCMPFKIP   LAST INTERRUPT IGNORED MSG
         BO    IGNORE              YES-
         TM    DCMCMSG4,DCMPFKNA   PFJ NN NOT SUPPORTED(WRONG KEY)
         BO    NOTSUP              YES-
         TM    DCMCMSG4,DCMPFKND   PFK NN NOT DEFINED MSG
         BO    NOTDEF              YES-
         TM    DCMCMSG4,DCMPFKNO   PFK NOT ALLOCATED MSG
         BO    NOALLOC             YES-
*    NONE OF ABOVE, GO TO I/O ROUTINE
*
IOEXIT   EQU   *
         OI    DCMIOCM1,DCMSOUND   TURN ON SOUND ALARM BIT
         L     XFBRANCH,DCMIORTN       LOAD IO ROUTINE ADDRESS
         L     X1PARM,DCMCXSVE         RESTORE CXSA ADDRESS
         BR    XFBRANCH                EXIT TO IEECVET(H,P,R, OR U)
*
IGNORE   EQU   *
         NI    DCMCMSG4,N255-DCMPFKIP TURN BIT OFF
         BAL   XE,BLINST           BLANK INSTRUCTION LINE
         MVC   N0(N46,X2),IGNORMSG MOVE IN ERROR MESSAGE
         B     INSTWRIT            EXIT TO I/O RTN
         EJECT
NOTSUP   EQU   *
         NI    DCMCMSG4,N255-DCMPFKNA TURN BIT OFF
         BAL   XE,BLINST           BLANK INSTRUCTION LINE
         MVC   N0(N37,X2),SUPPORT  MOVE IN ERROR MESSAGE
         B     CNVRTPFK            GO CONVERT PFK NO.
*
NOTDEF   EQU   *
         NI    DCMCMSG4,N255-DCMPFKND TURN BIT OFF
         BAL   XE,BLINST           BLANK INSTRUCTION LINE
         MVC   N0(N35,X2),DEFINE   MOVE IN ERROR MESSAGE
         B     CNVRTPFK            GO CONVERT PFK NO.
*
NOALLOC  EQU   *
         NI    DCMCMSG4,N255-DCMPFKNO TURN BIT OFF
         BAL   XE,BLINST           BLANK INSTRUCTION LINE
         MVC   N0(N25,X2),NOALMSG  MOVE IN ERROR MESSAGE
*
INSTWRIT EQU   *
         OI    DCMIOCM1,DCMWRINS   INDICATE WRITE INSTRUCTION LINE
         TM    DCMIOUNQ,DCMW2250   Q. IS DEVICE A LIGHT PEN DEVICE
         BNO   EXITWRIT            NO--EXIT
         MVC   N59(N15,X2),ENCN    YES-MOVE ENTER-CANCEL MSG INTO LINE
         NI    DCMIOUNQ,N255-DCMINNOR TURN OFF NORMAL LINE BIT
         OI    DCMIOUNQ,DCMINERR   INDICATE ERROR MSG IN INST. LINE
EXITWRIT EQU   *
         B     IOEXIT              EXIT TO I/O RTN
*
CNVRTPFK EQU   *
         SR    XWORK,XWORK         CLEAR REG
         IC    XWORK,DCMPFKNM      LOAD PFK NO.
         CVD   XWORK,DCMPACK       CONVERT PFK NO. TO DECIMAL
         UNPK  DCMPACK(N3),DCMPACK+N6(N2) UNPACK NO.
         OI    DCMPACK+N2,F0       FIX SIGN
         MVC   N21(N2,X2),DCMPACK+N1  MOVE EBCDIC CONVERTED PFK NO.
*
         B     INSTWRIT
BLINST   EQU   *
         LR    XWORK1,X2           LOAD ADDR OF INSTRUCTION LINE
         LH    XWORK,DCMLGNTH      GET LENGTH OF A LINE
         BCTR  XWORK,N0            SUBTRACT 2
         BCTR  XWORK,N0              FROM LENGTH OF MOVE
         MVI   N0(XWORK1),BLANK    BLANK 1ST CHAR
         EX    XWORK,BLANKIT       PROPAGATE BLANKS
         BR    XE
*
         EJECT
*
BLANKIT  MVC   N1(N0,XWORK1),N0(XWORK1) USED FOR BLANKING
*
*    CONSTANTS
SUPPORT  DC    C'IEE721I SELECTED PFK NN NOT SUPPORTED' 37 CHARS
DEFINE   DC    C'IEE722I SELECTED PFK NN NOT DEFINED' 35 CHARS
IGNORMSG DC    C'IEE723I PFK IN PROCESS. LAST INTERRUPT IGNORED' 46 C
NOALMSG  DC    C'IEE720I NO PFK ALLOCATION' 25 CHARS
ENCN     DC    C'*ENTER**CANCEL*' 15 CHARS
         EJECT
*    ALL DSECTS FOLLOW THIS POINT
*
*
         IEERDCM
         EJECT
         IEETDCM
         EJECT
         IEECUCM FORMAT=NEW
         EJECT
         IHACTM  CXSA
*
***********************************************************************
         END
