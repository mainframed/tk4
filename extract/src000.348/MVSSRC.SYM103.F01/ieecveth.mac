IEECVETH CSECT
*C192460                                                      MH YM2592
*A191700                                                      MH Y01563
*C 193405                                                    ME SA52709
*A057100-057200                                              MC SA51393
         TITLE 'IEECVETH IGC5H07B MODEL 168 CONSOLE IO'
*                                                                     *
* STATUS       CHANGE LEVEL=0                                         *
*                                                                     *
* FUNCTION     ANALYZE COMMUNICATIONS BYTES AND PERFORM REQUESTED     *
*              I/O. RETURN INDICATION THAT I/O IS IN PROGRESS         *
*                                                                     *
* INPUT        BITS SET IN DISPLAY CONTROL MODULE                     *
*                                                                     *
* OUTPUT       I/O OPERATION PERFORMED                                *
*                                                                     *
* EXTERNAL REFERENCES NONE
*
* EXITS - NORMAL IEECVET1 PROCESSOR ROUTINE, AFTER IO IS INITIATED
*                IEECVETF LIGHT PEN-CURSOR
*       - ERROR  NONE
*
* TABLES/WORK AREAS DISPLAY CONTROL MODULE (CONTAINED IN DSECT)
*
* ATTRIBUTES   REFRESHABLE, PRIVILEGED, TYPE 4 SVC
*
* NOTES        THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A
*              PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL
*              CHARACTER SET.
*                                                                     *
         EJECT
**                                                                   **
*              INITIALIZE PROGRAM                                     *
**                                                                   **
         BALR  PBASE,N0            SET UP
         USING *,PBASE             ADDRESSABILITY
         B     ICATCH              BRANCH AROUND EYECATCHER      S21003
         DC    C'   MODULE IGC5H07B, FICHE IEECVETH  ' EYECATCHERS21003
ZAPAREA  DC    12C'ZAP'     AND RESERVED FOR FIELD MODIFICATIONS S21003
ICATCH   LR    PXSA,PARM           SAVE CXSA ADDRESS             S21003
         USING CXSA,PXSA           DECLARE CXSA ADDRESS
         L     UCMENTRY,CSAUCM     GET UCM ENTRY ADDRESS
         USING UCMLIST,UCMENTRY    DECLARE UCMENTRY BASE
         L     RDCMBASE,UCMXB      GET DCM POINTER               S21003
         USING DCMTSRT,RDCMBASE
         L     DCMBASE,DCMADTRN    LOAD T DCM BASE               S21003
         USING DCMSTRT,DCMBASE       DECLARE DCM BASE
         L     UCMBASE,CSACTLM     GET UCM POINTER
         USING UCM,UCMBASE         DECLARE UCM BASE
         MVC   DCMTRACE(DCMTRLEN),DCMTRAC2 SHIFT OLD TRACE ENTRIES
         MVI   DCMTREN1,ID1        PUT CSECT ID INTO
         MVI   DCMTREN2,ID2        NEW TRACE ENTRY
         L     XFBRANCH,CSAXC      ADDRESS FREELOCK SUBROUTINE
         LR    X1PARM,PXSA         PASS CXSA ADDRESS IN REG 1
         BALR  XERTRN,XFBRANCH     RELEASE LOCKS
         L     X8,DCMADCHP         POINT TO CHANNEL PROGRAM
         XC    N0(N104,X8),N0(X8)  CLEAR CHANNEL PROGRAM AREA
         EJECT
**                                                                   **
*                   TEST REASON FOR MODULE ENTRY                      *
**                                                                   **
         TM    DCMR3FLG,DCMSTSWT   IS STATUS SWITCH BIT ON       S21003
         BNO   RMI                  NO, TEST NEXT FUNCTION       S21003
         NI    DCMR3FLG,X'FF'-DCMSTSWT   YES, TURN IT OFF        S21003
         L     XFBRANCH,DCMNCLN    LOAD CLEANUP ROUTINE ADDRESS
         B     EXIT2               EXIT TO IEECVFTG
         SPACE 3                                                 S21003
RMI      TM    DCMIOCM1,DCMDORMI   ENTRY FOR RMI                 S21003
         BO    PERFRMI             YES PERFORM RMI
         B     OUTPTMSG            NO WRITE MUST BE DONE
         EJECT
**                                                                   **
*                     EXIT PROCEEDURE                                 *
**                                                                   **
EXIT     EQU   *
         L     XFBRANCH,DCMNPROC   LOAD PROC 1 ADDRESS
*                                  FOR EXIT TO IEECVET1
         MVI   DCMIOCM1,N0         ZERO IO BYTE 1
         MVC   DCMIOCM1+N1(N2),DCMIOCM1 ZERO IO BYTES 2 AND 3
EXIT2    EQU   *
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS
         BR    XFBRANCH            EXIT ADDRESS ALREADY SET
         EJECT
**                                                                   **
*                   SET UP FOR RMI, RMI, INSERT CURS,SET BUF,READ     *
**                                                                   **
PERFRMI  EQU   *
         NI    DCMIOCM1,N255-DCMDORMI TURN OFF BIT TO INDICATE RMI
         OI    DCMCOM1,DCMCOMRM    INDICATE RMI HAS BEEN PERFORMED
         LA    WORK,DCMDSAV        POINT TO RMI READ AREA
         ST    WORK,DCMCHPGM       PUT ADDRESS IN CHANNEL PROGRAM
         MVI   DCMCHPGM,RMICODE    PUT RMI CODE INTO CHANNEL PROG
         MVI   DCMCHPGM+N4,CHAIN   CHAIN THIS CCW
         MVI   DCMCHPGM+N7,N3      PUT BYTE COUNT IN
         LA    WORK,DCMBAENT       GET INSERT CURSOR ADDRESS
         ST    WORK,DCMCHPGM+N8    PUT IT INTO CCW CHAIN
         MVI   DCMCHPGM+N8,INSERT  PUT INSERT CURSOR COMMAND CODE INCCW
         MVI   DCMCHPGM+N12,CHAIN  CHAIN CCWS
         MVI   DCMCHPGM+N15,N2     PUT BYTE COUNT IN
         ST    WORK,DCMCHPGM+N16   PUT ENTRY AREA BUF ADDR INTO SET BUF
         MVI   DCMCHPGM+N16,SETBUF PUT SET BUF CODE INTO CCW
         MVI   DCMCHPGM+N20,CHAIN  CHAIN CCWS
         MVI   DCMCHPGM+N23,N2     PUT BYTE COUNT IN
         LA    WORK,DCMENTRY       POINT TO ENTRY AREA
         ST    WORK,DCMCHPGM+N24   SAVE IT IN READ CCW
         MVI   DCMCHPGM+N24,READ   PUT READ CODE INTO CCW
         MVI   DCMCHPGM+N28,STOP   PUT END OF CHAIN INTO CCW
         MVI   DCMCHPGM+N31,READLGNH PUT LENGTH OF READ INTO CCW
         B     EXCP                EXECUTE CHANNEL PROGRAM
         EJECT
**                                                                   **
*              SET UP TO EXECUTE CHANNEL PROGRAM                      *
**                                                                   **
EXCP1    EQU   *
         C     CPGMREG,DCMADCHP    HAVE CCW'S BEEN BUILT     MC SA51393
         BE    EXIT                NO, BRANCH TO EXIT        MC SA51393
         SH    CPGMREG,EIGHT
         MVI   N4(CPGMREG),STOP    STOP CCW DHAIN
EXCP     EQU   *
         L     XFBRANCH,CSAXB      ADDRESS GETLOCK SUBR       JE YM8371
         LR    X1PARM,PXSA         PASS CXSA ADDRESS IN REG 1 JE YM8371
         BALR  XERTRN,XFBRANCH     OBTAIN LOCKS              JE YM8371
         XC    UCMECB,UCMECB         CLEAR ECB
         OI    UCMSTS,UCMBF        TURN ON  BUSY BIT
         L     WORK,UCMDCB         GET DCB ADDRESS
         L     WORK,N28(WORK)      GET IOB ADDRESS
         L     XFBRANCH,CSAXC      ADDRESS FREELOCK SUBR      JE YM8371
         LR    X1PARM,PXSA         PASS CXSA ADDRESS IN REG 1 JE YM8371
         BALR  XERTRN,XFBRANCH     RELEASE LOCKS              JE YM8371
         EXCP  (WORK)              INITIATE IO
         B     EXIT                EXIT FROM RTN
         EJECT
**                                                                   **
*                        OUTPUT MESSAGES - TEST FOR TYPE              *
**                                                                   **
OUTPTMSG EQU   *
         TM    DCMIOCM2,DCMERASE   ERASE SCREEN
         BO    DOERASE             YES EXIT
         TM    DCMIOCM2,DCMWINFD   WRITE INFORMATIONAL DISPLAY
         BO    WRITEID             YES WRITE INFO DISP
FULLWRIT EQU   *
         TM    DCMIOCM1,DCMWRMSG   WRITE FULL MSG AREA
         BO    WRITEFUL            YES DO IT
         TM    DCMIOCM1,DCMWRPAR   WRITE PARTIAL MSG AREA
         BO    WRITEPAR            YES BUILD CCWS
RITEREST EQU   *
         TM    DCMCMSG1,DCMMSGWT   MESSAGE WAITING
         BO    WRTMSGWT            YES WRITE IT TO WARNING LINE
BLNKINST EQU   *
         TM    DCMIOCM2,DCMINSSH   BLANK INSTRUCTION LINE
         BO    BLINS               YES BLANK IT
WRINS    EQU   *
         TM    DCMIOCM1,DCMWRINS   WRITE INSTRUCTION LINE
         BO    INSLWRIT            YES WRITE IT
WRENT    EQU   *
         TM    DCMIOCM1,DCMWRENT   WRITE ENTRY AREA
         BO    ENTRWRIT            YES WRITE IT
WRITWARN EQU   *
         TM    DCMIOCM1,DCMWRWRN   WRITE WARNING LINE
         BO    WARNWRIT            DO IT
INSERTC  EQU   *
         TM    DCMIOCM1,DCMINSC    INSERT CURSOR
         BO    BUILDINS            YES BUILD CCWS
SOUNDALM EQU   *
         TM    DCMIOCM1,DCMSOUND   SOUND ALARM
         BO    BUILDSND            YES BUILD CCWS
TESTBLNK EQU   *
         TM    DCMIOCM2,DCMBLENT   BLANK ENTRY AREA
         BO    ENTRYBNK            YES DO IT
LEFTWARN EQU   *
         TM    DCMIOCM2,DCMBLWRL   BLANK LEFT HALF WARNING LINE
         BO    BLANKLFT            YES DO IT
RITEWARN EQU   *
         TM    DCMIOCM2,DCMBLWRR   BLANK RIGHT HALF WARNING LINE
         BO    BLNKRIGT            YES DO IT
         B     EXCP1               INITIATE I/O
         EJECT
**                                                                   **
*                   BUILD ERASE DISPLAY CCW                           *
**                                                                   **
DOERASE  EQU   *                                                     **
         MVI   N0(X8),ERASE        MOVE ERASE COMMAND CODE IN
         MVI   N4(X8),STOP         MOVE IN STOP BIT
         MVI   N7(X8),N2           MOVE IN BYTE COUNT
         NI    DCMIOCM2,N255-DCMERASE TURN OFF ERASE BIT
         TM    DCMIOCM2,DCMWRASY   WRITE ASYN ERROR MESSAGE
         BNO   EXCP                NO DO IO
         MVI   N4(X8),CHAIN        CHAIN ERASE TO WRITE
         SR    WORK,WORK           ZERO REG
         STH   WORK,DCMBADLN       CLEAR BUFFER ADDRESS POINTER
         MVI   DCMBADLN,X14        STORE LINE POINTER
         LA    X8,N8(X8)             UP CHANNEL PGM POINTER
         LA    POINT,DCMBADLN      PRIME PARAMETER REG
         BAL   RETURN,BUILDSET     BUILD SET BUFFER CCW
         L     HOLD,DCMAENTR       POINT TO ENTRY AREA
         LH    WORK,DCMCORLN       LENGTH OF ONE LINE            S21003
         SLL   WORK,N1             DOUBLE IT
         BAL   RETURN,BUILDWRT     BUILD WRITE CCW
         NI    DCMIOCM1,N255-DCMWRASY   TURN OFF ASYN ERROR BIT
         NI    DCMIOCM2,N255-DCMBLENT  TURN OFF BLANK ENTRY AREA BIT
         LA    WORK,DCMBADLN       POINT TO ADDRESS INSERT CURSOR
         ST    WORK,N0(X8)         SAVE IT IN CHANNEL PROGRAM
         MVI   N0(X8),INSERT       PUT INSERT CURSOR CC IN
         MVI   N4(X8),CHAIN        CHAIN CCWS
         MVI   N7(X8),N2           TWO BYTES TRANSFERRED
         LA    X8,N8(X8)           UP CCW POINTER
         B     BUILDSND            BUILD SOUND ALARM CCW
         EJECT
**                                                                   **
*              THIS CODING WRITES THE INFORMATIONAL DISPLAY           *
WRITEID  EQU   *
         SR    WORK,WORK           CLEAR WORK REG
         STH   WORK,DCMBADLN       CLEAR BUFFER ADDRESS AREA
         IC    WORK,DCMLINEN       GET LINE NUMBER TO WRITE FROM
         BCTR  WORK,N0             DECREMENT BY ONE
         STC   WORK,DCMBADLN       HOLD IT IN BUFFER ADDRESS AREA
         LA    POINT,DCMBADLN      POINT TO BUFFER ADDRESS AREA
         BAL   RETURN,BUILDSET     BUILD SET BUFFER CCW
         LH    WORK,DCMBYTCT       GET LENGTH OF WRITE
         LA    HOLD,DCMINSTR       GET START OF WRITE
         BAL   RETURN,BUILDWRT     BUILD WRITE CCW
         NI    DCMIOCM2,N255-DCMWINFD TURN OFF INFO DISP BITS
         B     FULLWRIT            SEE IF MORE IO TO DO
         EJECT
**                                                                   **
*              WRITE FULL OR PARTIAL MESSAGE AREA                     *
**                                                                   **
WRITEFUL EQU   *
         NI    DCMIOCM1,N255-DCMWRMSG TURN OFF FULL WRITE BIT
         CLC   DCMWTBUF(N4),DCMASCRN   WILL LENGTH BE ZERO    MG A48089
         BE    RITEREST            YES, SEE WHAT ELSE TO DO   MG A48089
         LA    POINT,DCMBAM1       GET POINTER TO SCREEN IMAGE BUFFER
         BAL   RETURN,BUILDSET     BUILD SET BUFFER CCW
         L     WORK,DCMWTBUF       POINT TO START OF INFO DISP IF ANY
         L     HOLD,DCMASCRN       POINT TO START OF MESSAGE AREA
         SR    WORK,HOLD           GET WRITE LENGTH
         BAL   RETURN,BUILDWRT     BUILD WRITE CCWS
         B     RITEREST            SEE IF ANYTHING ELSE TO BR WRITTEN
WRITEPAR EQU   *
         NI    DCMIOCM1,N255-DCMWRPAR TURN OFF PARTIAL WRITE FLAG
         SR    WORK,WORK           CLEAR WORK REG
         STH   WORK,DCMBADLN       CLEAR BUFFER ADDRESS REG
         IC    WORK,DCMLINEN       GET LINE NO
         BCTR  WORK,N0             DECREMENT BY ONE
         STC   WORK,DCMBADLN       SAVE IT IN BUFFER ADDR WORD
         LA    POINT,DCMBADLN      GET POINTER IN REG
         BAL   RETURN,BUILDSET     GO BUILD SET BUFFER CCW
         L     HOLD,DCMASCRN       POINT TO START OF MSG AREA
         MH    WORK,DCMCORLN       GET INDEX                     S21003
         AR    HOLD,WORK           POINT TO LINE TO WRITE FROM
         LH    WORK,DCMBYTCT       GET WRITE LENGTH
         BAL   RETURN,BUILDWRT     BUILD WRITE CCW
         B     RITEREST            SEE IF ANYTHING ELSE TO BR WRITTEN
         EJECT
**                                                                   **
*                   WRITE WARNING LINE                                *
**                                                                   **
WARNWRIT EQU   *
         NI    DCMIOCM1,N255-DCMWRWRN TURN OFF BIT
         LA    POINT,DCMBAWRN      WARNING LINE BUFFER ADDRESS
         BAL   RETURN,BUILDSET     BUILD SET BUFFER CCW
         LA    HOLD,DCMWARN        WARNING LINE
         LH    WORK,DCMCORLN       LENGTH-1 LINE                 S21003
         BAL   RETURN,BUILDWRT     BUILD WRITE CCW
         B     INSERTC             SEE IF INSERT CURSOR
         EJECT
**                                                                   **
*                  BUILD WRITE INSTRUCTION LINE CCW'S                 *
**                                                                   **
INSLWRIT EQU   *
         NI    DCMIOCM1,N255-DCMWRINS TURN OFF INS LINE WRITE BIT
         LA    POINT,DCMBAINS      POINT TO BUFFER ADDRESS INS LINE
         BAL   RETURN,BUILDSET     BUILD SET BUF CCW
         LA    HOLD,DCMBLNK1       POINT TO BLANK LINE
         LH    WORK,DCMCORLN       GET LENGTH OF ONE LINE        S21003
         SLL   WORK,N1             DOUBLE LENGTH
         BAL   RETURN,BUILDWRT     BUILD WRITE SCREEN CCW
         B     WRENT               SEE IF ENTRY AREA IS TO BE WRITTEN
         EJECT
**                                                                   **
*                   BUILD WRITE ENTRY AREA CCW                        *
**                                                                   **
ENTRWRIT EQU   *
         NI    DCMIOCM1,N255-DCMWRENT TURN OFF WRITE ENTRY AREA BIT
         LA    POINT,DCMBAENT      POINT TO ENTRY AREA BUFFER ADDRESS
         BAL   RETURN,BUILDSET     BUILD
         LA    HOLD,DCMENTRY       ADDRESS OF ENTRY AREA
         LH    WORK,DCMCORLN       GET LENGTH OF ONE LINE        S21003
         SLL   WORK,N1             DOUBLE LENGTH
         BAL   RETURN,BUILDWRT     BUILD WRITE CCW
         B     WRITWARN            SEE IF WRITE WARNING LINE
         EJECT
**                                                                   **
*                   INSERT CURSOR                                     *
**                                                                   **
BUILDINS EQU   *
         NI    DCMIOCM1,N255-DCMINSC  TURN OFF BIT
         SR    WORK,WORK           CLEAR WORK REG
         IC    WORK,DCMCULNO       GET LINE NUMBER
         BCTR  WORK,N0             DECREMENT IT BY ONE
         IC    HOLD,DCMBAENT       GET ENTRY AREA BUFFER ADDRESS
         AR    HOLD,WORK           GET RIGHT LINE
         STC   HOLD,DCMBAINC       HOLD IN BUFFER
         IC    WORK,DCMPOSCU       GET CHARACTER POSITION
         BCTR  WORK,N0             DECREMENT BY ONE
         STC   WORK,DCMBAINC+N1    HOLD IN BUFFER
         LA    POINT,DCMBAINC      GET ADDRESS OF BUFFER ADDRESS
         ST    POINT,N0(CPGMREG)   HOLD IN CCW
         MVI   N0(CPGMREG),INSERT  PUT OP CODE IN
         MVI   N4(CPGMREG),CHAIN   CHAIN CCWS
         MVI   N7(CPGMREG),N2      DATA BYTES
         LA    CPGMREG,N8(CPGMREG) KICK UP CHAN PROG PTR
         B     SOUNDALM            GO SOUND ALARM MAYBE
         EJECT
**                                                                   **
*                   SOUND ALARM                                       *
**                                                                   **
BUILDSND EQU   *
         NI    DCMIOCM1,N255-DCMSOUND  TURN OFF BIT
         MVI   N0(CPGMREG),SOUND   PUT OP CODE INTO CCW
         MVI   N4(CPGMREG),STOP    STOP CHAIN SOUND ALARM MUST BE LAST
*        IN CHAIN
         MVI   N7(CPGMREG),N2      DATA BYTES
         LA    X8,N8(X8)           KICK UP CHANNEL PROGRAM POINTER
         B     TESTBLNK            SEE IF ANY THING IS TO BE BLANKED
         EJECT
**                                                                   **
*                   BUILD SET BUFFER CCW                              *
**                                                                   **
BUILDSET EQU   *
         ST    POINT,N0(CPGMREG)   PUT BUFF ADD POINTER INTO CCW
         MVI   N0(CPGMREG),SETBUF  PUT COMMAND CODE INTO CCW
         MVI   N4(CPGMREG),CHAIN   CHAIN CCWS
         MVI   N7(CPGMREG),N2      PUT BYTE COUNT IN
         LA    CPGMREG,N8(CPGMREG) UPDATE CCW COUNTER
         BR    RETURN              RETURN TO CALLER
         EJECT
**                                                                   **
*                   WRITE CCW BUILD SUBROUTINE                        *
**                                                                   **
BUILDWRT EQU   *
         ST    HOLD,N0(CPGMREG)    SAVE WRITE FROM ADDRESS
         MVI   N0(CPGMREG),WRITE   PUT OP CODE IN CCW
         MVI   N4(CPGMREG),CHAIN   CHAIN CCWS
         STH   WORK,N6(CPGMREG)    PUT BYTE COUNT IN
         LA    CPGMREG,N8(CPGMREG) KICK CCW COUNTER
         BR    RETURN              RETURN
         EJECT
**                                                                   **
*         THE FOLLOWING CODE INITIALIZES AND SHIFTS THE INS LINE      *
**                                                                   **
WRTMSGWT EQU   *
         NI    DCMCMSG1,N255-DCMMSGWT  TURN OFF BIT MSG WAITING
         MVI   DCMWARN+N40,BLANK   PUT BLANK IN SECOND HALF OF WARNING
         MVC   DCMWARN+N41(N39),DCMWARN+N40 PROPAGATE IT
         NI    DCMIOCM2,N255-DCMBLWRR TURN OFF BLANK WARNING LINE BIT
         MVC   DCMWARN+N57(N23),WAITMSG MOVE IN MESSAGE WAITING MSG
         OI    DCMIOCM1,DCMWRWRN+DCMSOUND   WARNING AND ALARM MG  M1072
         B     BLNKINST            CHECK FOR MORE WORK
         EJECT
**                                                                   **
*              BLANK ENTRY AREA                                       *
**                                                                   **
ENTRYBNK EQU   *
         NI    DCMIOCM2,N255-DCMBLENT TURN OFF BIT
         MVI   DCMENTRY,BLANK      PUT BLANK IN ENTRY AREA
         MVC   DCMENTRY+N1(N159),DCMENTRY  PROPAGATE IT
         B     LEFTWARN
BLINS    EQU   *
         MVI   DCMINSTR,BLANK      PUT BLANK IN INSTRUVTION LINE
         MVC   DCMINSTR+N1(N79),DCMINSTR PROPAGATE IT
         NI    DCMIOCM2,N255-DCMINSSH  TURN OFF BLANK INS BIT
         OI    DCMIOCM1,DCMWRINS   TURN ON WRITE INS LINE BIT
         B     WRINS               GO BUILD WRITE INS LINE CCWS
         EJECT
**                                                                   **
*              BLANK WARNING LINE LEFT SIDE                           *
**                                                                   **
BLANKLFT EQU   *
         NI    DCMIOCM2,N255-DCMBLWRL TURN OFF BIT
         MVI   DCMWARN,BLANK       PUT BLANK IN WARNING LINE
         MVC   DCMWARN+N1(N39),DCMWARN PROPAGATE IT
         B     RITEWARN
         EJECT
**                                                                   **
*              BLANK WARNING LINE RIGHT SIDE                          *
**                                                                   **
BLNKRIGT EQU   *
         NI    DCMIOCM2,N255-DCMBLWRR TURN OFF BIT
         MVI   DCMWARN+N40,BLANK   PUT BLANK INTO RIGHT SIDE WARN LINE
         MVC   DCMWARN+N41(N39),DCMWARN+N40 PROPAGATE IT
         NI    DCMR2FLG,N255-DCMRXUNV  TURN OFF UNVIEWABLE    MG  M1072
         NI    DCMCOM3,X'FF'-DCMOLUNV   MSG DISPLAYED FLAG    MH Y01563
         B     EXCP1               DO IO
         EJECT
**                                                                   **
*                        REGISTER EQUATES                             *
**                                                                   **
X1PARM   EQU   1
XFBRANCH EQU   15
XERTRN   EQU   14
ZERO     EQU   0                   UNUSED
PARM     EQU   1                   HOLDS XSA ADDRESS
RDCMBASE EQU   4                   RESIDENT DCM BASE REG      MH YM2592
X2       EQU   2                   REG EQUATE
X3       EQU   3                   REG EQUATE
FIND     EQU   4                   SCRATCH PAD
HOLD     EQU   5                   SCRATCH PAD
POINT    EQU   6                   SCRATCH PAD
WORK     EQU   7                   SCRATCH PAD
X8       EQU   8                   REG EQUATE
CPGMREG  EQU   8                   POINTS TO CHANNEL PROGRAM
UCMBASE  EQU   9                   UCM BASE
DCMBASE  EQU   10                  DCM BASE
PBASE    EQU   11                  BASE
PXSA     EQU   12                  CXSA ADDRESS
UCMENTRY EQU   13                  UCMENTRY BASE
RETURN   EQU   14                  RETURN REG
XCTLREG  EQU   15                  XCTL PARM REG
         EJECT
**                                                                   **
*              MISC  EQUATES                                          *
**                                                                   **
ID1      EQU   C'E'                1ST CHARACTER OF CSECT ID
ID2      EQU   C'H'                2ND CHARACTER OF CSECT ID
N0       EQU   0                   NUMBER
N1       EQU   1                   NUMBER
N2       EQU   2                   NUMBER
N3       EQU   3                   NUMBER
N4       EQU   4                   NUMBER
N6       EQU   6                   NUMBER
N7       EQU   7                   NUMBER
N8       EQU   8                   NUMBER
N15      EQU   15                  NUMBER
N16      EQU   16                  NUMBER
N12      EQU   12                  NUMBER
N20      EQU   20                  NUMBER
N23      EQU   23                  NUMBER
N24      EQU   24                  NUMBER
N27      EQU   27                  NUMBER
N28      EQU   28                  NUMBER
N31      EQU   31                  NUMBER
N39      EQU   39                  NUMBER
N40      EQU   40                  NUMBER
N41      EQU   41                  NUMBER
N57      EQU   57                  NUMBER
N79      EQU   79                  NUMBER
N104     EQU   104                 NUMBER
N159     EQU   159                 NUMBER
N255     EQU   255                 NUMBER
STOP     EQU   X'20'               END OF CCW CHAIN
CHAIN    EQU   X'60'               CHAIN CCWS
READLGNH EQU   160                READ LENGTH FOR ENTRY AREA ME SA52709
BLANK    EQU   C' '                BLANK
X14      EQU   14                  NUMBER
         EJECT
**                                                                   **
*                   COMMAND CODE EQUATES                              *
**                                                                   **
RMICODE  EQU   X'0E'               RMI CODE
SETBUF   EQU   X'27'               SET BUFFER ADDRESS
READ     EQU   X'06'               READ
SOUND    EQU   X'0B'               SOUND ALARM
INSERT   EQU   X'0F'               INSERT CURSOR
WRITE    EQU   X'01'               WRITE
ERASE    EQU   X'07'               ERASE
         SPACE 4
EIGHT    DC    H'8'                CONSTANT
WAITMSG  DC    C'IEE159E MESSAGE WAITING'   MESSAGE
         EJECT
         IHACTM  CXSA
         EJECT
         IEECUCM  FORMAT=NEW
         EJECT
         IEERDCM
         EJECT                                                   S21003
DCMSTRT  DSECT
         IEECDCM DEVICE=A
         END
