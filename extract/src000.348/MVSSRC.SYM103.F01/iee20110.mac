         TITLE 'IEE20110  UNIT STATUS ONE, PART OF SVC 110'
IEE20110 CSECT
***********************************************************************
*                                                                     *
* STATUS                                                              *
*    CHANGE LEVEL=0 VS 2 RELEASE 3
*        APARS FIXED ZA02348
*                                                                     *
* FUNCTION                                                            *
*    GET CORE FOR WORKAREA                                            *
*    SYNTAX CHECK COMMAND                                             *
*    ESTABLISH COMMAND REQUIREMENTS                                   *
*    FIND STARTING UCB                                                *
*                                                                     *
* ENTRY POINTS                                                        *
*         IEE20110                                                    *
*                                                                     *
* INPUT                                                               *
*    REG 2 CONTAINS THE CSCB ADDRESS WHICH CONTAINS THE COMMAND       *
*                                                                     *
* OUTPUT                                                              *
*    NONE                                                             *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*         SVC 10   (GETMAIN)                                          *
*                                                                     *
* EXITS,NORMAL                                                        *
*         IEE23110 TO FIND MORE UCB'S                                 *
*                                                                     *
* EXITS,ERROR                                                         *
*         IEE22110 TO ISSUE ERROR MESSAGES                            *
*                                                                     *
* TABLES/WORKAREAS                                                    *
*    CSCB                                                             *
*    XSA                                                              *
*    WORKAREA                                                         *
*    CVT                                                              *
*    UCB                                                              *
*                                                                     *
* ATTRIBUTES                                                          *
*    TYPE IV SVC, PRIVILEGED, RE-ENTRANT                         A36790
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*    NONE                                                             *
*                                                                     *
* NOTES                                                               *
*    NONE                                                             *
*                                                                     *
***********************************************************************
         EJECT
*/*IEE20110: CHART */
*/* E IEE20110 */
*/* P ESTABLISH ADDRESSABILITY */
*/* S GETMAIN SVC 10:GET WORKAREA SP=255, LENGTH=136 */
*/* P PREPARE WORK AREA */
*/*START: D (NO,,YES,UCOM) COMMAND = 'U,' ? */
*/* D (NO,,YES,ALLDEFLT) COMMAND = 'UBLANK' ? */
*/*ERROR1: P (,ERRWRITE) INDICATE INVALID OPERAND */
*/*ALLDEFLT: P INDICATE DISPLAY ALL DEVICE TYPES */
*/* P (,SCANSET) INDICATE DISPLAY ALL DEVICE STATUS */
*/*UCOM: P POINT TO FIRST OPERAND (DEVICE TYPE) */
*/* D (NO,,YES,DEFALL1) IS IT DEFAULTED (=',') */
*/* P POINT TO DEVICE TYPE TABLE */
*/* S SCAN RTN:BAL TO FIND DEVICE TYPE */
*/* D (NO,,YES,UCOM1) ANY MORE OPERANDS ? */
*/* D (NO,ERROR1,YES,) BLANK DELIMITING COMMAND ? */
*/* P INDICATE USE THE DEFAULT STATUS */
*/* P (,ENDCOMM) SET NUMBER OF DEVICES TO 100 */
*/*DEFALL1: P INDICATE ALL DEVICE TYPES TO BE DISPLAYED */
*/*UCOM1: D (NO,,YES,STATDEF) DEVICE STATUS DEFAULTED ? */
*/* P POINT TO STATUS TABLE */
*/* S SCAN RTN:GO FIND STATUS WANTED */
*/* D (NO,,YES,UCOM2) ANY MORE OPERANDS */
*/* D (NO,ERROR1,YES,) BLANK DELIMIT COMMAND ? */
*/* P (,ENDCOMM) SET NUMBER OF DEVICES TO 100 */
*/*STATDEF: P INDICATE STATUS DEFAULT TO ALL */
*/*UCOM2: D (NO,UCOM2A,YES,) DEVICE ADDRESS DEFAULTED */
*/* P (,UCOM3) REMEMBER THAT FACT */
*/*UCOM2A: D (NO,ERROR1,YES,) ADDRESS A HEX NUMBER ? */
*/* D (NO,,YES,UCOM3) ANY MORE OPERANDS ? */
*/* D (NO,ERROR1,YES,) COMMAND TERMINATED BY BLANK */
*/* P (,ENDCOMM) SET NUMBER OF DEVICES TO 100 */
*/*UCOM3: D (NO,,YES,ERROR1) IS NEXT OPERAND A BLANK */
*/* P PREPARE TO CHECK FOR VALID NUMBER */
*/* P POINT TO FIRST CHARACTER IN NUMBER */
*/*LOOPER: D (NO,CHKBLANK,YES,) IS CHARACTER A NUMBER ? */
*/* D (NO,CHKBLANK,YES,LOOPER) MORE CHARACTERS TO CHECK ? */
*/*CHKBLANK: D (NO,ERROR1,YES,) IS CHARACTER A BLANK ? */
*/* P CONVERT NUMBER TO BINARY */
*/* D (NO,,YES,ERROR1) IS NUMBER = 0 ? */
*/* P INDICATE LINE DEFAULT NOT TAKEN */
*/*ENDCOMM: D (NO,SCANSET,YES,) REQUEST FOR ONE DEVICE ? */
*/* P INDICATE THAT FACT */
*/* P SET UP FOR SEVEN UNITS PER LINE */
*/*SCANSET: D (NO,,YES,SCANSET0) OFFLINE DISPLAY ? */
*/* P SET UP FOR 2 UNITS PER LINE */
*/*SCANSET0: P GET DEVICE ADDRESS FROM COMMAND */
*/*SCANSET1: P POINT TO LOOK UP TABLE */
*/* S SCAN1 RTN:GO FIND DEVICE IN TABLE */
*/* D (NO,,YES,SCANEXIT) DEVICE FOUND ? */
*/* D (NO,SCAN3,YES,) SINGLE DEVICE REQUEST */
*/* D (NO,,YES,SCAN3) NUMBER DEFAULTED TO 100 */
*/* P (,ERRWRIT1) INDICATE ERROR */
*/*SCAN3: P POINT TO UCB ADDRESS TABLE */
*/*SCAN3A: P GET A UCB ADDRESS */
*/* D (NO,SCAN3C,YES,SCANEXI2) END OF TABLE ? */
*/*SCAN3B: P (,SCAN3A) GO TO NEXT UCB ADDRESS */
*/*SCAN3C: S COMPSET:CHANGE ADDRESS TO BINARY */
*/* D (NO,SCAN3B,YES,) NEW ADDR OVER LAST ADDR ? */
*/* D (NO,,YES,SCAN3E) ANY PREVIOUS LOW ? */
*/*SCAN3D: P (,SCAN3B) SET NEW LOW */
*/*SCAN3E: S COMPSET:CHANGE ADDRESSES FOR COMPARE */
*/* D (NO,SCAN3B,YES,SCAN3D) NEW ADDR LESS THAN OLD LOW ? */
*/* E SCAN1 */
*/*SCAN1: P GET A UCB ADDRESS */
*/* D (NO,SCAN1B,YES,SCAN1C) END OF TABLE ? */
*/*SCAN1A: P (,SCAN1) BUMP TO NEXT ADDRESS */
*/*SCAN1B: D (NO,SCAN1A,YES,SCAN1D) THIS THE UCB SEARCHED FOR ? */
*/*SCAN1C: P INDICATE UCB NOT FOUND */
*/*SCAN1D: R BR 14 */
*/*COMPSET: E COMPSET */
*/*COMPSET1: P PREPARE FOR LOOP */
*/*COMPSET2: D (NO,,YES,COMPSET5) NUMBER 0 TO 9 ? */
*/* D (NO,ERROR1,YES,) LETTER A TO F ? */
*/* D (NO,,YES,ERROR1) DIGIT GREATER THAN 'F' ? */
*/* P ADD NINE (9) TO DIGIT AND SAVE ?*/
*/*COMPSET3: P POINT TO NEXT DIGIT */
*/* D (NO,COMPSET2,YES,) LAST DIGIT DONE? */
*/* D (NO,COMPSET4,YES,) FIRST TIME THRU ? */
*/* D (NO,,YES,SCANEXI4) THIS ADDR OUT OF SYSTEM ? */
*/* P INDICATE NOT FIRST TIME THRU */
*/* P (,COMPSET1) POINT TO ADDRESS IN UCB */
*/*COMPSET4: P SAVE CONVERTED ADDRESSES */
*/* R BR 14 */
*/*COMPSET5: P (,COMPSET3) GET THE DIGIT */
*/* E SCAN */
*/*SCAN: P GET PARAMETER LENGTH */
*/* D (NO,,YES,ERROR1) END OF TABLE ? */
*/* D (NO,,YES,HIT) THIS THE OPERAND ? */
*/* P (,SCAN) GO TO NEXT ENTRY IN TABLE */
*/*HIT: P GO TO NEXT OPERAND IN COMMAND */
*/* R BR 14 */
*/*SCANEXI2: D (NO,,YES,SCANEXI3) ADDR IN COMMAND HIGHER THAN SYSTEM ?
*/**/
*/*SCANEXI4: P (,ERRWRIT1) INDICATE ERROR MSG TO BE WRITTEN */
*/*ERRWRITE:  P HOLD 'FROM' CONSOLE ID */
*/*ERRWRIT1: P (,XCTL) PREPARE FOR XCTL TO IGC22110 */
*/*SCANEXI3: P HOLD UCB POINTER */
*/*SCANEXIT: P SET FIRST ENTRY FLAG FOR UNIT 2 */
*/* P SET XCTL TO IGC23110 */
*/*XCTL: P SET UP XCTL PARM LIST */
*/* R NEXT LOAD */
*/*IEE20110: END */
         EJECT
         BALR  R10,R0
         USING *,R10
         B     ICATCH              BRANCH AROUND EYECATCHER   MB YM1902
         DC    C'01 MODULE IGC20110, FICHE IEE20110  '        MB YM1902
         DC    XL2'4211'           JULIAN DATE LAST CHANGE
         DC    CL8'&SYSDATE'       DATE OF LAST ASSEMBLY
         DC    S(*)                BASE/DISPL OF PATCH AREA
ZAPAREA  DC    12C'ZAP'  RESERVED FOR FIELD MODIFICATION      MB YM1902
ICATCH   EQU   *                                              MB YM1902
         LR    R11,R2
         USING CSCB,R11
         SPACE 2
***********************************************************************
*                                                                     *
*     OBTAIN WORKAREA AND INITIALIZE                                  *
*                                                                     *
***********************************************************************
         LA    R1,SPN              SUBPOOL NUMBER
         SLL   R1,HIGH             SET IN HIGH ORDER BYTE
         LA    R0,WAL              WORKAREA LENGTH
         OR    R0,R1               COMBINE IN REG 0
         GETMAIN R,LV=(0)          OBTAIN WORKAREA CORE
         LR    R12,R1              SAVE CORE POINTER
         USING WORKAREA,R12
         XC    WORKAREA(WAL),WORKAREA   ZERO OUT WORKAREA
         MVI   UNIT1,NUMERIC       SET DEFAULT ADDRESS (UNIT2) AND
         MVC   UNIT1+ONE(L11),UNIT1     INITIALIZE OTHERS
         LA    R15,ADCVT           POINT TO CVT ADDRESS
         L     R15,ZERO(R15)       GET CVT ADDRESS
         USING CVT,R15
         STM   R13,R14,SWORD      SAVE REGS FOR MFT RETURN
         MVC   HOLD2+L2(L1),CHUCMP  SAVE ROUTINE FROM ID
         MVC   HOLD2+L3(L1),CHCNID   SAVE ROUTE TO ID
         MVC   IDFLD(L1),CHARID    SAVE CONSOLE AREA ID
         MVI   PACKWORD,NUMERIC    SET TO C'0' FOR
         MVC   PACKWORD+L1(L3),PACKWORD   PACKING OPERATIONS
         MVI   TEXT,BLANK          BLANK TEXT AREA
         MVC   TEXT+L1(L71),TEXT   PROPAGATE BLANKS
         SPACE 2
***********************************************************************
*                                                                     *
*     OBTAIN COMMAND INPUT FROM CSCB AND CHECK SYNTAX                 *
*                                                                     *
***********************************************************************
START    EQU   *
         LA    R3,CHBUF+ONE        ADDRESS OF SECOND CHARACTER. IT IS
*                                  ASSUMED THAT THE FIRST IS A 'U'
         CLI   ZERO(R3),COMMA      U,
         BE    UCOM                YES
         CLI   ZERO(R3),BLANK      U BLANK
         BE    ALLDEFLT            YES SET ON DEFAULT SWITCHES
ERROR1   EQU   *
         MVI   FLAG4,MSG3          INVALID OPERAND
         B     ERRWRITE            ISSUE MESSAGE
ERROR2   DS    0H                                           JE @ZA02348
         MVI   FLAG4,MSG3          INVALID OPERAND MSG      JE @ZA02348
         B     ERRWRIT1            ISSUE MSG, CONSOLE ID IN FROMID
*                                                           JE @ZA02348
ALLDEFLT EQU   *
         OI    FLAG1,ALLTYPE       INDICATE DISPLAY ALL TYPES
         OI    FLAG2,ALLS          INDICATE DISPLAY ANL STATUS
         MVI   NODEVICS+ONE,NODEVDEF MOVE IN DEFAULT VALUE
         B     SCANSET             SET UP FOR UCB SCAN
UCOM     EQU   *
         LA    R3,ONE(R3)          BUMP PAST POINTER
         CLI   ZERO(R3),COMMA      FIRST VALUE DEFAULTED
         BE    DEFALL1             YES HANDLE ALL
         LA    R2,TYPELIST         POINT TO CORRECT LIST
         LA    R6,FLAG1            POINT TO CORRECT FLAG BYTE
         BAL   R14,SCAN            FIND PARAMETER
         CLI   ZERO(R3),COMMA      MORE PARAMETERS
         BE    UCOM1               YES HANDLE
         CLI   ZERO(R3),BLANK      BLANK DELIMIT COMMAND
         BNE   ERROR1              NO ERROR
         OI    FLAG2,ALLS          INDICATE STATUS DEFAULT
         MVI   NODEVICS+ONE,NODEVDEF SET NUMBER DEFAULT
         B     ENDCOMM             CHECK DIDOCS
DEFALL1  EQU   *
         OI    FLAG1,ALLTYPE       INDICATE ALL TYPES TO BE DISPLAYED
UCOM1    EQU   *
         LA    R3,ONE(R3)          BUMP PAST COMMA
         CLI   ZERO(R3),COMMA      STATUS DEFAULT
         BE    STATDEF             YES HANDLE
         LA    R2,STATPARM         POINT TO CORRECT LIST
         LA    R6,FLAG2            POINT TO CORRECT FLAG BYTE
         BAL   R14,SCAN            FIND OPERAND
         CLI   ZERO(R3),COMMA      MORE OF COMMAND
         BE    UCOM2               YES HANDLE
         CLI   ZERO(R3),BLANK      BLANK DELINEATE COMMAND
         BNE   ERROR1              NO ERROR
         MVI   NODEVICS+ONE,NODEVDEF INDICATE DEFAULT VALUE
         B     ENDCOMM             CHECK FOR DIDOCS
STATDEF  EQU   *
         OI    FLAG2,ALLS          INDICATE STATUS DEFAULT TO ALL
UCOM2    EQU   *
         LA    R3,ONE(R3)          KICK PAST COMMA
         CLI   ZERO(R3),COMMA      DEVICE ADDRESS DEFAULTED
         BNE   UCOM2A              NO, CHECK ADDRESS
         OI    FLAG3,DEVDEF        YES, REMEMBER
         B     UCOM3               CHECK NEXT OPERAND
UCOM2A   EQU   *
         CLI   ZERO(R3),BLANK      SHOULD BE A HEX NUMBER
         BE    ERROR1              IS NOT, ERROR CONDITION
         MVC   UNIT2+ONE(L3),ZERO(R3)   MOVE ADDRESS INTO WORK AREA
         LA    R3,L3(R3)           POINT PAST ADDRESS
         CLI   ZERO(R3),COMMA      MORE OPERANDS
         BE    UCOM3               YES HANDLE
         CLI   ZERO(R3),BLANK      IS COMMAND STOPPED BY A BLANK
         BNE   ERROR1              NO ERROR MSG
         MVI   NODEVICS+1,NODEVDEF      SET NO. DEVICES TO 100
         B     ENDCOMM             YES END OF COMMAND
UCOM3    EQU   *
         LA    R3,ONE(R3)          BUMP PAST COMMA
         CLI   ZERO(R3),BLANK      IS THIS CHARACTER A BLANK
         BE    ERROR1              YES THIS MUST BE A NUMBER-ERROR MSG
         LR    R2,R3               SAVE CHAR POINTER IN COMMAND
         SR    R6,R6               CLEAR REG
         LH    R5,FOUR            GET BYTE STOP              @Z30AAJE
LOOPER   EQU   *
         TM    ZERO(R2),NUMERIC     IS THIS CHARACTER A NUMBER
         BNO   CHKBLANK            NO SEE IF BLANK DELIMITS COMMAND
         LA    R2,ONE(R2)          POINT TO NEXT CHARACTER
         LA    R6,ONE(R6)          UP COUNT
         BCT   R5,LOOPER           CHECK FOUR NUMBERS        @Z30AAJE
CHKBLANK EQU   *
         CLI   ZERO(R2),BLANK      BLANK CHARACTER
         BNE   ERROR1              NO ERROR MSG
*                                  NUMBER IS VALID. THE FOLLOWING CODE
*                                  CONVERTS IT TO BINARY.
         LA    R4,PACKWORD         POINT TO MOVE PLACE
         BCTR  R6,R0               DECREMENT LENGTH BY ONE
         AR    R5,R4               POINT TO CORRECT MOVE POINT
         EX    R6,MOVE             MOVE NUMBER
         PACK  CVBWORD(L4),PACKWORD(L4)   PACK EBCDIC TO HEX
         XC    PACKWORD(L4),PACKWORD    ZERO OUT FIRST WORD
         LR    R5,R6               SAVE LENGTH
         CVB   R6,PACKWORD         CONVERT TO HEX WITHOUT SIGN
         LTR   R6,R6               IS NUMBER ZERO
         BZ    ERROR1              YES ERROR
         OI    FLAG5,NODEF         LINE DEFAULT NOT TAKEN
         STH   R6,NODEVICS         SAVE IN WORKAREA
ENDCOMM  EQU   *
         CLI   NODEVICS+L1,L1      SINGLE REQUEST
         BNE   SCANSET             NO
         OI    FLAG2,SINGLE        YES, INDICATE SINGLE SEARCH
         SPACE 2
***********************************************************************
*                                                                     *
*     SET UP FOR SCAN TO PRODUCE DISPLAY LINES                        *
*                                                                     *
***********************************************************************
SCANSET  EQU   *
         XC    WORKING(L104),WORKING    ZERO OUT CSCB WORK AREA
         MVC   FROMID(L1),HOLD2+L2   SAVE FROM ID
         XC    HOLD2(L3),HOLD2     ZERO OUT MLWTO NUMBER
         MVI   DEVNOLN+ONE,LONGLINE    SEVEN UNITS PER LINE
         TM    FLAG2,OFFLNS        OFFLINE DISPLAY
         BO    SCANSET0            YES
         MVI   DEVNOLN+ONE,REGLINE    TWO UNITS PER LINE
SCANSET0 EQU   *
         USING UCB,R9
         L     R8,CVTILK2          POINT TO LOOK UP TABLE
SCAN1    EQU   *                                              MG YM3885
         SR    R9,R9               CLEAR REGISTER             JE YM6838
         ICM   R9,3,ZERO(R8)       GET ADDRESS                JE YM6838
         BZ    SCAN1A              BRANCH IF ADDR NULL        JE YM6838
         CLM   R9,3,FOXFOX         END OF UCB TABLE            @Z30AAJE
         BE    SCAN3               YES                        JE YM6838
         B     SCAN1B                                          @Z30AAJE
SCAN1A   EQU   *                                              MG YM3885
         LA    R8,L2(R8)           BUMP TO NEXT ADDRESS       MG YM3885
         B     SCAN1               LOOK AT IT                 MG YM3885
SCAN1B   EQU   *                                              MG YM3885
         N     R9,FOXAND           CLEAR TOP HALF OF REG      MG YM3885
         LA    R13,UNIT2+ONE       POINT TO DEV ADDR          MG YM3885
         BAL   R14,COMPSET         CONVERT EBCDIC TO HEX      MG YM3885
         STC   R5,UNITADDA         STORE CONVERTED ADDRESS    MH Y02139
         NI    UNITADDA,ZEROFOX    ZERO SUBCHANNEL PORTION    MH Y02139
         MVC   UNITADDB(L1),UCBUA  STORE HEX ADDRESS          MH Y02139
         NI    UNITADDB,ZEROFOX    ZERO SUBCHANNEL PORTION    MH Y02139
         CLC   UNITADDA(L1),UNITADDB    COMPARE ADDRESS       MH Y02139
         BNE   SCAN1A              NOT EQUAL, NOT BASE UCB    MG YM3885
         CLC   UNIT2+L1(L3),UCBNAME   RIGHT UCB               MG YM3885
         BE    SCANEXIT            YES                        MG YM3885
         B     SCAN1A              NO, FIND ANOTHER           MG YM3885
**********************************************************************
*         THIS CODE IS USED AS A SUBROUTINE TO FIND THE NEXT
*         HIGHEST DEVICE ADDRESS THAT EXISTS IN THE SYSTEM
***********************************************************************
SCAN3    EQU   *
         L     R8,CVTILK2          UCB ADDR LIST
SCAN3A   EQU   *
         SR    R9,R9               CLEAR REGISTER             JE YM6838
         ICM   R9,3,ZERO(R8)         GET UCB ADDR             JE YM6838
         BZ    SCAN3B              BRANCH IF ADDR NULL        JE YM6838
         CLM   R9,3,FOXFOX         END OF UCB TABLE            @Z30AAJE
         BE    SCANEXI2            YES                        JE YM6838
         B     SCAN3C              GO LOOK AT UCB              @Z30AAJE
SCAN3B   EQU   *
         LA    R8,L2(R8)           BUMP TO NEXT ADDR
         B     SCAN3A              TRY NEXT
SCAN3C   EQU   *
         N     R9,FOXAND           CLEAR TOP HALF OF REGISTER
         LA    R13,UNIT2+ONE       WHICH ADDRESS TO COMPARE
         BAL   R14,COMPSET         CHANGE ADDRESSES FOR COMPARE
         STC   R5,UNITADDA         STORE CONVERTED ADDRESS    MH Y02139
         NI    UNITADDA,ZEROFOX    ZERO SUBCHANNEL PORTION    MH Y02139
         MVC   UNITADDB(L1),UCBUA  STORE HEX ADDRESS          MH Y02139
         NI    UNITADDB,ZEROFOX    ZERO SUBCHANNEL PORTION    MH Y02139
         CLC   UNITADDA(L1),UNITADDB    COMPARE ADDRESS       MH Y02139
         BNE   SCAN3B              NOT EQUAL, NOT BASE UCB    MG YM3885
         CLR   R4,R5               NEW ADDRESS GREATER
         BH    SCAN3B              NO
         CLI   UNIT3,NUMERIC       ANY PREVIOUS LOW
         BNE   SCAN3E              YES
         MVI   UNIT3,ZERO          CLEAR FLAG FROM FIRST BYTE
SCAN3D   EQU   *
         MVC   UNIT3+ONE(L3),UCBNAME    NEW LOW ABOVE ORIGINAL ADDRESS
         LR    R0,R9              SHIFT UCB POINTER
         B     SCAN3B              GET ANOTHER
SCAN3E   EQU   *
         LA    R13,UNIT3+ONE       WHICH ADDRESS TO COMPARE
         BAL   R14,COMPSET         CHANGE ADDRESSES FOR COMPARE
         CLR   R4,R5               NEW ADDR LESS THAN OLD LOW
         BNH   SCAN3B              NO
         B     SCAN3D              YES, SAVE IT
***********************************************************************
* THE FOLLOWING CODE CONVERTS EBCDIC REPRESENTATION OF HEX UNIT       *
* ADDRESSES INTO BINARY NUMBERS THAT CAN BE USED IN A COMPARE LOGICAL *
* REGISTER STATEMENT FOLLOWED BY A BRANCH HIGH, LOW OR EQUAL.         *
* ON ENTRY R13 POINTS TO EITHER UNIT1, UNIT2 OR UNIT3. THE CONVERTED  *
* ADDRESS FROM THIS LOCATION IS PLACED IN R4.                         *
* THE OTHER ADDRESS ALWAYS COMES FROM THE UCBNAME FIELD OF THE UCB    *
* POINTED TO BY R9. THIS CONVERTED ADDRESS IS PLACED IN R5.           *
* THE CONTENTS OF R1 THROUGH R5 ARE DESTROYED.                        *
* RETURN IS VIA A BR R14.                                             *
* IF ANY ADDRESS IS FOUND WHICH IS NOT A VALID HEX NUMBER (0-9,A-F),  *
* AN ERROR CONDITION EXISTS AND CONTROL IS PASSED TO ERROR1.          *
***********************************************************************
COMPSET  EQU   *
         SR    R3,R3               CLEAR REGISTER
COMPSET1 EQU   *
         SR    R1,R1               CLEAR REGISTER
         LA    R1,L3(R1)           BCT LOOP CONTROL
         SR    R2,R2               CLEAR WORK REGISTER
COMPSET2 EQU   *
         TM    ZERO(R13),NUMERIC   HEX NUMERAL (0-9)
         BO    COMPSET5            YES
         TM    ZERO(R13),CMASK     HEX DIGIT (A-F)
         BNO   ERROR2              NEITHER, ERROR CONDITION
*                                                           JE @ZA02348
         CLI   ZERO(R13),C6        DIGIT CANNOT BE GREATER THAN HEX F
         BH    ERROR2              IT IS, THEREFORE ERROR CONDITION
*                                                           JE @ZA02348
         IC    R3,ZERO(R13)        OBTAIN DIGIT
         LA    R3,L9(R3)           ADD NINE
COMPSET3 EQU   *
         SLL   R3,L28              SHIFT TO
         SLDL  R2,L4               LOW ORDER OF R2
         SR    R3,R3               CLEAR REG
         LA    R13,ONE(R13)        POINT TO NEXT DIGIT
         BCT   R1,COMPSET2         CONVERT NEXT DIGIT
         TM    FLAG2,R13UCBNM      FIRST PASS
         BO    COMPSET4            NO
         CH    R2,HIADDR           THE HIGHEST SYSTEM ADDRESS IS BFF,
*                                  AS OF RELEASE 19
         BH    SCANEXI4            ADDRESS IS HIGHER, ERROR
         OI    FLAG2,R13UCBNM      TURN ON FLAG
         LR    R4,R2               SAVE CONVERTED ADDRESS
         LA    R13,UCBNAME         POINT TO ADDRESS IN UCB
         B     COMPSET1                 CONVERT IT
COMPSET4 EQU   *
         LR    R5,R2                    SAVE CONVERTED ADDRESS
         NI    FLAG2,L255-R13UCBNM      TURN OFF BIT
         BR    R14                      RETURN TO CALLER
COMPSET5 EQU   *
         IC    R3,ZERO(R13)        OBTAIN DIGIT
         B     COMPSET3            ISOLATE NUMBER
         SPACE 2
***********************************************************************
*  THE FOLLOWING CODE COMPARES A PARAMETER TO A LIST OF VALID         *
*  PARAMETERS.  IF NOT FOUND EXIT IS TO LABEL 'ERROR1'.  IF FOUND,    *
*  THE MASK IN THE TABLE ENTRY IS USED TO SET BIT(S) IN THE           *
*  APPROPRIATE FLAG FIELD  AND THE PARAMETER POINTER IS UPDATED TO    *
*  POINT TO THE ADDRESS OF THE CHARACTER FOLLOWING THE PARAMETER.     *
*                                                                     *
*  UPON ENTRY REGS MUST BE PRIMED AS FOLLOWS:                         *
*  R3= POINTER TO PARAM TO BE VALIDITY CHECKED                        *
*  R2= POINTER TO CORRECT TABLE OF VALID PARAMETERS                   *
*  R6= POINTER TO FLAG FIELD TO BE OR'ED                              *
*  R4= RETURN ADDRESS                                                 *
*  R2 AND R5 ARE DESTROYED, R3 IS UPDATED AS ABOVE                    *
***********************************************************************
SCAN     EQU   *
         SR    R5,R5               CLEAR REG FOR PARAMETER LENGTH
         IC    R5,ZERO(R2)         GET PARAMETER LENGTH
         LTR   R5,R5               TEST FOR END OF TABLE (LENGTH=0)
         BZ    ERROR1              END OF TABLE - PARAM NOT VALID
         EX    R5,COMPR            EXECUTE COMPARE OF PARM
         BE    HIT                 FOUND GOOD PARAMETER - SET FLAG
         LA    R5,L3(R5)           GO TO NEXT
         AR    R2,R5               ENTRY IN PARAMETER TABLE
         B     SCAN                LOOP TO TEST NEXT ENTRY
HIT      EQU   *
         OC    ZERO(L1,R6),L1(R2)  OR MASK INTO CORRECT FLAGS (R6)
         LA    R5,L1(R5)           CORRECT LENGTH OF PARAMETER
         AR    R3,R5               BUMP COMMAND PTR PAST FOUND PARAM
         BR    R14                 RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*        EXITS TO UNIT4 OR UNIT3 FOR ERROR                            *
*                                                                     *
***********************************************************************
SCANEXI2 EQU   *
         CLI   UNIT3,NUMERIC       IF UNIT3 HAS NEVER BEEN CHANGED THEN
         BNE   SCANEXI3            ADDRESS IN COMMAND IS HIGHER THAN
*                                  HIGHEST SYSTEM ADDRESS.
SCANEXI4 EQU   *
         MVI   FLAG4,MSG1         ERROR MESSAGE
         B     ERRWRIT1           ID ALREADY IN FROMID
ERRWRITE EQU   *
         MVC   FROMID(L1),HOLD2+L2   STORE FROM CONSOLE ID
ERRWRIT1 EQU   *
         MVC   XAX(L8),XCTLNAME   PUT IN NAME FOR XCTL
         MVI   XAX+L4,F2          NAME FOR ERROR XCTL
         B     XCTL                EXIT TO IEEUNIT3
SCANEXI3 EQU   *
         LR    R9,R0              SHIFT UCB POINTER BACK
SCANEXIT EQU   *
         OI    FLAG5,INITUNT2      FIRST ENTRY FOR UNIT2
         OI    FLAG5,INITENT       TELL IEEUNIT4 ABOUT IEEUNIT1 ENTRY
         MVC   XAX(L8),XCTLNAME   PUT IN NAME FOR XCTL
XCTL     EQU   *
         ST    R12,XAL             SAVE WORKAREA ADDRESS
         STH   R9,SWORD+L8
         SR    R4,R4               CREATE ZEROS
         ST    R4,XAD              NO DCB PTR
         LA    R4,XAX              POINTER TO XCTL NAME
         ST    R4,XAP              POINTER TO XCTL NAME
         LA    R15,XSA             POINT TO PARA LIST
         XCTL  SF=(E,(R15))        TRANSFER CONTROL
         EJECT
***********************************************************************
*                                                                     *
*     EQUATES                                                         *
*                                                                     *
***********************************************************************
R0       EQU   0                   GENERAL REGISTER NOTATION
R1       EQU   1                   *                       *
R2       EQU   2                   *                       *
R3       EQU   3                   *                       *
R4       EQU   4                   *                       *
R5       EQU   5                   *                       *
R6       EQU   6                   *                       *
R7       EQU   7                   *                       *
R8       EQU   8                   *                       *
R9       EQU   9                   *                       *
R10      EQU   10                  *                       *
R11      EQU   11                  *                       *
R12      EQU   12                  *                       *
R13      EQU   13                  *                       *
R14      EQU   14                  *                       *
R15      EQU   15                  *                       *
*                                  THE FOLLOWING STATEMENTS DEFINE
*                                  LENGTHS AND NUMBERS USED IN THIS
*                                  SUPPORT.
L1       EQU   1                   *             *         *
L2       EQU   2                   *             *         *
L3       EQU   3                   *             *         *
L4       EQU   4                   *             *         *
L5       EQU   5                   *             *         *
L7       EQU   7                   *             *         *
L8       EQU   8                   *             *         *
L9       EQU   9                   *             *         *
L24      EQU   24                  *             *         *     A36165
L11      EQU   11                  *             *         *
L12      EQU   12                  *             *         *
L28      EQU   28                  *             *         *
L32      EQU   32                  *             *         *
L71      EQU   71                  *             *         *
L104     EQU   104                 *             *         *
L255     EQU   255                 *             *         *
ZERO     EQU   0                   *             *         *
ONE      EQU   1                   *             *         *
ADCVT    EQU   16                  LOCATION OF CVT ADDRESS
HIGH     EQU   24                  USED FOR REGISTER SHIFTING
CMASK    EQU   X'C0'               CHARACTER ZONE
SPN      EQU   X'FF'               SUBPOOL NUMBER 255
XFF      EQU   X'FF'               END OF UCB TABLE INDICATOR JE YM6838
TWENT    EQU   X'20'               MFT MASK
F1       EQU   C'1'                UNIT STATUS TWO NAME, IGC21110
F2       EQU   C'2'                UNIT STATUS THREE NAME, IGC22110
BLANK    EQU   C' '                BLANK DELIMETER
COMMA    EQU   C','                FOR SYNTAX CHECK
NUMERIC  EQU   C'0'                FIRST EBCDIC NUMERAL
REGLINE  EQU   X'02'               TWO UNITS PER LINE
LONGLINE EQU   X'07'               SEVEN UNITS PER LINE
C6       EQU   C'F'                HIGHEST ADDRESS DIGIT, HEX F
ZEROFOX  EQU   X'0F'               MASK TO ZERO SUBCHANNEL    MH Y02139
         SPACE 3
***********************************************************************
*                                                                     *
*     EXECUTED STATEMENTS                                             *
*                                                                     *
***********************************************************************
         DS    0H                  FORCE HALF WORD BOUNDRY
MOVE     EQU   *
         MVC   ZERO(R0,R5),ZERO(R3)  EXECUTED MOVE FOR CVB
COMPR    EQU   *
         CLC   ZERO(ZERO,R3),L2(R2)     USED BY SCAN ROUTINE
COMPUNIT EQU   *                                              MG YM3885
         CLI   UCBUA,ZERO          COMP DEV ADDR LESS CHANNEL MG YM3885
         EJECT
***********************************************************************
*                                                                     *
*     CONSTANTS                                                       *
*                                                                     *
***********************************************************************
         DS    0F
FOXAND   DC    XL4'0000FFFF'       USED TO AND REGISTERS
HIADDR   DC    H'3071'             HIGHEST POSSIBLE ADDRESS, HEX BFF
FOUR     DC    H'4'                LOOP COUNT NUMBER         @Z30AAJE
FOXFOX   DC    XL2'FFFF'           END OF UCB TABLE INDICATOR  @Z30AAJE
XCTLNAME DC    C'IGC23110'        STANDARD XCTL NAME
         SPACE 1
STATPARM EQU   *                   TABLE OF STATUS OPERANDS
         DC    AL1(ON2-ON1-ONE)    LENGTH OF ENTRY LESS ONE
         DC    AL1(ONLINS)         ONLINE DEVICES MASK
ON1      EQU   *
         DC    C'ONLINE'           OPERAND
*
ON2      EQU   *
         DC    AL1(OFF2-OFF1-ONE)      LENGTH OF WORD LESS ONE
         DC    AL1(OFFLNS)         OFFLINE DEVICES MASK
OFF1     EQU   *
         DC    C'OFFLINE'          OPERAND
OFF2     EQU   *
*
         DC    AL1(ALL4-ALL3-ONE)   LENGTH OF ENTRY LESS ONE
         DC    AL1(ALLS)           ALL STATUS MASK
ALL3     EQU   *
         DC    C'ALL'              OPERAND
ALL4     EQU   *
         DC    AL1(0)              END OF TABLE
         SPACE 1
TYPELIST EQU   *                   TABLE OF DEVICE TYPE OPERANDS
         DC    AL1(ALL2-ALL1-1)    LENGTH OF PARAMETER MINUS ONE
         DC    AL1(ALLTYPE)        ALLDEVICE TYPES MASK
ALL1     EQU   *
         DC    C'ALL'              PARAMETER
ALL2     EQU   *
*
         DC    AL1(TP2-TP1-ONE)    LENGTH OF ENTRY LESS ONE
         DC    AL1(TPTYPE)         TELEPROCESSING DEVICES MASK
TP1      EQU   *
         DC    C'TP'               OPERAND
TP2      EQU   *
*
         DC    AL1(GRPH2-GRPH1-ONE)   LENGTH OF ENTRY LESS ONE
         DC    AL1(GRTYPE)         GRAPHIC DEVICES MASK
GRPH1    EQU   *
         DC    C'GRAPHIC'          OPERAND
GRPH2    EQU   *
*
         DC    AL1(DA2-DA1-ONE)    LENGTH OF ENTRY LESS ONE
         DC    AL1(DATYPE)         DIRECT ACCESS DEVICE TYPE MASK
DA1      EQU   *
         DC    C'DASD'             OPERAND
DA2      EQU   *
*
         DC    AL1(TA2-TA1-ONE)    LENGTH OF ENTRY LESS ONE
         DC    AL1(TATYPE)         TAPE DEVICE TYPE MASK
TA1      EQU   *
         DC    C'TAPE'             OPERAND
TA2      EQU   *
*
         DC    AL1(UR2-UR1-ONE)    LENGTH OF ENTRY LESS ONE
         DC    AL1(URTYPE)         UNIT RECORD DEVICE TYPE MASK
UR1      EQU   *
         DC    C'UR'               OPERAND
UR2      EQU   *
         DC    AL1(0)              END OF TABLE
*
*
         EJECT
***********************************************************************
*                                                                     *
*     DSECTS                                                          *
*                                                                     *
***********************************************************************
CSCB     DSECT
         IEECHAIN
         ORG   CHAIN+L32
         IEEXSA
         ORG   XSA+L24                                           A36165
         DS    0F
WORKING  DS    5F                  WORKING STORAGE
DEVNOLN  EQU   WORKING+L8          NUMBER OF DEVICES PER LINE
DEVSPRE  EQU   DEVNOLN+L2          NUMBER OF DEVICES DISPLAYED
LASTUCB  EQU   DEVSPRE+L3          STARTING UCB ADDRESS/BIN NUMBER
FROMID   EQU   LASTUCB+L4          REQUESTING CONSOLE ID
SAVE     DS    21F                 SAVE AREA BETWEEN MODULES
UNITADDA DS    C                   DEVICE ADDRESS FROM EBCDIC MH Y02139
UNITADDB DS    C                   DEVICE ADDRESS FROM HEX    MH Y02139
         ORG   SAVE+L12
PACKWORD DS    F                   USED BY SYNTAX CHECKER
CVBWORD  DS    F                   FOR PACKING AND CONVERTING
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
CVT      DSECT
         CVT
         EJECT
WORKAREA DSECT
         SPACE 2
         DS    0D
UCBADDRA DS    7H                  STORAGE FOR UCB ADDRESSES
UCBADDRB DS    H                   FOUND BY UNIT4
SWORD    DS    3F                  SAVE AREA ACROSS MODULES
UNIT1    DS    F                   HOLD ADDRESS ONE
UNIT2    DS    F                   HOLD ADDRESS TWO
UNIT3    DS    F                   HOLD ADDRESS THREE
         SPACE 4
FLAG2    DC    X'00'               COMMUNICATIONS BYTE
ONLINS   EQU   128                 DISPLAY ONLINE DEVICES
OFFLNS   EQU   64                  DISPLAY OFFLINE DEVICES
ALLS     EQU   32                  DISPLAY OFFLINE + ONLINE DEVICES
SUFEXIST EQU   16                  REQUESTING CONSOLE IS A CRT DEVICE
SINGLE   EQU   8                   SINGLE DEVICE REQUEST
COREGOT  EQU   4                   CORE GOTTEN FOR REGION
OPEN22   EQU   2                   OPEN FLAG
R13UCBNM EQU   1                   FLAG FOR COMPSET ROUTINE
         SPACE 2
FLAG3    DC    X'00'               COMMUNICATIONS FLAGS
U2       EQU   128                TELL UNIT2 ENTRY FOR SCAN OF CDES
UNIT3RET EQU   64                  IEE22110 RETURNING TO IEE21110
OPEN332  EQU   32                  OPEN FLAG
DEVDEF   EQU   16                  DEVICE ADDRESS DEFAULTED
HEADOUTF EQU   8                   HEADING AND LABELS ARE OUT
OPEN34   EQU   4                   OPEN FLAG
OPEN32   EQU   2                   OPEN FLAG
OPEN31   EQU   1                   OPEN FLAG
         SPACE 2
*  FLAG4 BYTE IS USED FOR COMMUNICATIONS BETWEEN IEEUNIT3 AND THE
*  OTHER  D UNIT  MODULES.
FLAG4    DC    XL1'00'             COMMUNICATIONS BYTE
EXITBIT  EQU   X'00'               RETURN TO CALLER           MD
MSG1     EQU   X'04'               ISSUE MESSAGE MSG1A        MD
MSG3     EQU   X'08'               ISSUE MESSAGE MSG3A        MD
MSG4     EQU   X'0C'               ISSUE MESSAGE MSG4A        MD
         SPACE 2
FLAG5    DC    XL1'00'
NODEF    EQU   X'80'               LINE DEFAULT NOT TAKEN
INITENT  EQU   X'40'               INITIAL ENTRY TO UNIT STATUS FOUR
INITUNT2 EQU   X'20'               INITIAL ENTRY TO UNIT STATUS TWO
CRTMSG2  EQU   X'10'               MSG2 WITH HEADINGS FOR DIDOCS
UN4BINLT EQU   X'08'               LASTBIN FLAG FOR UNIT4
DISPBIT  EQU   X'04'               VALID ADDRESS FOUND
DISPEND  EQU   X'02'               END OF FRAME AND DISPLAY
OPEN51   EQU   X'01'               OPEN FLAG
         SPACE 2
         DS    0F                  FORCE FULL WORD FOR WTO
WTOSET   DS    XL1                 ZERO
TEXTLEN  DS    XL1                 OUTPUT LENGTH
LENGTH   EQU   76                  FULL LINE
MCSONE   DS    XL1                 MCS FLAGS PART ONE
SETONE   EQU   X'E1'                QUEUE BY ID, ROUTINE + DESCRIPTOR
*                                  CODES EXIST, COMMAND RESPONSE, QUEUE
*                                  BY ID ONLY.
MCSTWO   DS    XL1                 MCS FLAGS PART TWO
SETTWO   EQU   X'40'               MLWTO
         SPACE 1
MSGT     DS    0C                  BEGIN TEXT LINE
TEXT     DS    XL72                TEXT FIELD
         ORG   TEXT
TITLEID  DS    XL8                 MESSAGE ID
TITLEDGH DS    XL3                 HOURS.
TITLEDGM DS    XL3                 MINUTES.
TITLEDGS DS    XL2                 SECONDS
TITLENM  DS    XL11                DISPLAY NAME
         ORG   TEXT
UCBN1    DS    XL5                 UNIT ADDRESS
MODL1    DS    XL5                 DEVICE TYPE
USTAT1   DS    XL1                 STATUS (O,A,S,C,OFFLINE)
USTAT2   DS    XL4                 STATUS (-BSY,-MTP,-NRD)
USTAT3   DS    XL3                 STATUS (-R)
VOLID1   DS    XL7                 VOLUME SERIAL NUMBER
VOST1A   DS    XL4                 VOLUME STATE (PUB,PRIV,STRG)
VOST1B   DS    XL6                 VOLUME STATE (-REMOV,-RSDNT,-RSERV)
         ORG   TEXT+72            ORG FOR WTO TAIL
         SPACE 2
DESCODE  DS    XL2                 DESCRIPTOR CODES
RTECODE  DS    XL2                 ROUTING CODES
TYPEFLAG DS    XL2                 MESSAGE TYPES
AID      DS    XL1                AREA ID FIELD
LNUM     DS    XL1                NUMBER OF LINES
         SPACE 2
HOLD2    DS    F                   MLWTO ID/CONSOLE ID FOR WTO
NODEVICS DS    H                   NUMBER OF UNITS REQUESTED
NODEVDEF EQU   100                 DEFAULT
         SPACE 4
*  FLAG1 BYTE IS SET BY IEEUNIT1 TO REFLECT THE DEVICE TYPE(S)
*  REQUESTED BY THE D U  COMMAND.  THE BITS SET CORRESPOND TO THE BIT
*  SETTINGS IN BYTE 3 OF THE UCBTYP FIELD.
         SPACE 2
FLAG1    DC    X'00'               FLAG1 FIELD
TATYPE   EQU   UCB3TAPE           TAPE DEVICES
TPTYPE   EQU   UCB3COMM           TELECOMMUNICATIONS DEVICES
DATYPE   EQU   UCB3DACC           DIRECT ACCESS DEVICES
GRTYPE   EQU   UCB3DISP            GRAPHIC DISPLAY DEVICES
URTYPE   EQU   UCB3UREC+UCB3CHAR        UNIT RECORD + CHAR RDR DEVICES
ALLTYPE  EQU   TATYPE+TPTYPE+DATYPE+GRTYPE+URTYPE     ALLDEVICE TYPES
         SPACE 2
IDFLD    DS    XL1                AREA ID SAVE AREA
WEND     EQU   *                   END OF WORK AREA
WAL      EQU   WEND-WORKAREA       LENGTH OF WORK AREA
         END
