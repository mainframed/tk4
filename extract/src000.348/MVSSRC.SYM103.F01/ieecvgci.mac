* /* START OF SPECIFICATIONS ******************************************
*
*01*  MODULE-NAME = IEECVGCI
*
*01*  DESCRIPTIVE-NAME = GRAPHIC CONSOLES INITIALIZATION ROUTINE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = VS/2 MVS 3033 PROCESSOR SUPPORT (SCP)           @G51AK02
*
*          APARS FIXED ZA02819,ZA04664,ZA17730,ZA18574
* A 100100-100800, 529400-529800                               @ZA18574
*01*  FUNCTION = OPEN THE SYS1.DCMLIB DATA SET, READ PFK DEFINITIONS
*     INTO THE NUCLEUS PFK AREA, AND IF A GRAPHIC CONSOLE WAS USED
*     DURING NIP, MARK THAT CONSOLE'S RESIDENT DCM ACCORDINGLY FOR THE
*     DIDOCS DISPLAY ROUTINES.
*
*01*  NOTES =
*
*02*    CHARACTER-CODE-DEPENDENCIES = NONE
*
*02*    DEPENDENCIES = NONE
*
*02*    RESTRICTIONS = NONE
*
*02*    REGISTER-CONVENTIONS = SEE REGISTER EQUATES
*
*02*    PATCH-LABEL = ZAPAREA                                  @ZA18574
*
*01*  MODULE-TYPE = MODULE
*
*02*    PROCESSOR = ASSEMF-370R
*
*02*    MODULE-SIZE = X'592' BYTES
*
*02*    ATTRIBUTES = REUSABLE
*
*01*  ENTRY-POINT = IEECVGCI
*
*02*    PURPOSE = THIS IS THE ONLY ENTRY POINT TO PERFORM ALL FUNCTIONS
*
*02*    LINKAGE = LINKED TO BY IEEVIPL DURING COMMUNICATIONS TASK
*       INITIALIZATION
*
*02*    INPUT = REGISTER 1 ADDRESSES THE TIOT
*       SEE ALSO CONTROL BLOCKS USAGE
*
*02*    OUTPUT = OPEN DCB FOR SYS1.DCMLIB, AND INITIALIZED PFK AREAS IN
*       THE NUCLEUS.
*
*02*    EXIT-NORMAL = IEEVIPL VIA BR 14.
*
*02*    EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES = NONE
*
*02*    ROUTINES = NONE
*
*02*    DATA-SETS = SYS1.DCMLIB
*
*02*    DATA-AREA = IEEPFKEY, IN THE NUCLEUS
*
*02*    CONTROL-BLOCKS = DCB,TIOT,RDCM,TDCM
*
*01*  TABLES = NONE
*
*01*  MACROS = EXECUTABLE - OPEN,GETMAIN,FREEMAIN,LOCATE,EXCP,WAIT
*              MAPPING - IEECUDX CONSOLE I/O CONTROL BLOCKS
*                        IEECUCM UCM DSECT
*                        IEERDCM RESIDENT DCM DSECT
*                        IEECSUB DIDOCS STORAGE UTILIZATION BLOCK
*                        IEETDCM TRANSIENT DCM DSECT           @ZA18574
*
*01*  CHANGE ACTIVITY = ZA02819,ZA04664,ZA17730,ZA24414,ZA18574@G51AK02
*
**** END OF SPECIFICATIONS *******************************************/
         TITLE 'IEECVGCI - GRAPHIC CONSOLES INITIALIZATION'
IEECVGCI CSECT
* A (EXPON) APPROX 371500 - NUCLEUS OVERLAY                    @ZA24414
* A (ICATCH) APPROX 100000 - EQUIP. CHECK                      @ZA18574
* A (SEARCH) APPROX 152700                                     @G51AK02
* A (N3036) APPROX 464700                                      @G51AK02
* A (TLOAD) APPROX 125000                                      @ZA18574
* A (SDSYES) APPROX 160000                                     @ZA18574
         EJECT
***********************************************************************
*        PROGRAM INITIALIZATION                                       *
***********************************************************************
*************************************************************
START    STM   R14,R12,N12(R13)    SAVE REGISTERS
         BALR  RBASE,N0            ESTABLISH PROGRAM
         USING *,RBASE             ADDRESSABILITY
         B     ICATCH              BRANCH AROUND EYECATCHER
         DC    C'00 MODULE IEECVGCI, FICHE IEECVGCI  ' EYECATCHER AND
         DC    XL2'4211'           JULIAN DATE LAST CHANGE
         DC    CL8'&SYSDATE'       DATE OF LAST ASSEMBLY
         DC    S(*)                BASE/DISPL OF PATCH AREA
ZAPAREA  DC    12C'ZAP'            RESERVED FOR FIELD MODIFICATION
ICATCH   LA    R12,SAVEAREA        LOAD SAVE AREA POINTER
         ST    R12,N8(R13)         SAVE IN CALLERS AREA
         ST    R13,SAVEAREA+N4     SAVE POINTER TO CALLERS SAVE AREA
         LR    R13,R12             LOAD SAVE AREA POINTER
         ST    RA,ADRDSAB          SAVE DCMLIB DSAB ADDR      MB Y02958
         L     RCVT,CVTPTR         LOAD CVT ADDRESS
         USING CVT,RCVT            ESTABLISH ADDRESSABILITY
         L     RUCM,CVTCUCB        LOAD UCM ADDRESS
         USING UCM,RUCM            UCM BASE
         L     RSUB,CVTIXAVL       GET IOCOM ADDRESS           @ZA18574
         USING IOCOM,RSUB                                      @ZA18574
         L     RSUB,IOCATTBL       GET ATTEN TABLE ADDR        @ZA18574
         DROP  RSUB                                            @ZA18574
         USING ATB,RSUB                                        @ZA18574
         LA    RSUB,N8(RSUB)       GET SECOND ENTRY            @ZA18574
         OI    ATBFLA,ATBITF       TURN ON INTERCEPT BIT       @ZA18574
         DROP  RSUB                                            @ZA18574
         SR    RSUB,RSUB           ZERO SUB BASE REGISTER
         DROP  RCVT                DROB ADDRESSABILITY
         SPACE 3
*************************************************************
GETCONS  LM    RENTRY,RLAST,UCMVEA LOAD BXLE REGISTERS
         USING UCMLIST,RENTRY      UCMENTRY BASE
         SPACE 3
*************************************************************
LOOPA    TM    UCMDISP,UCMDISPC    GRAPHICS CONSOLE
         BZ    NEXTCON             NO, BRANCH
         SPACE 3
*************************************************************
         L     RUCB,UCMUCB         GET UCB ADDRESS
         LTR   RUCB,RUCB           VALID UCB ADDRESS
         BZ    BADCON              NO, INACTIVATE CONSOLE
         USING UCBBLK,RUCB         ESTABLISH ADDRESSABILITY
         L     RRDCM,UCMXB         LOAD R DCM BASE
         LTR   RRDCM,RRDCM         VALID RDCM ADDRESS         MB Y02958
         BZ    BADCON              NO, INACTIVE CONSOLE       MB Y02958
         USING DCMTSRT,RRDCM       R DCM BASE                  @ZA18574
         EJECT
*************************************************************
TLOAD    L     RTDCM,DCMADTRN      LOAD T DCM ADDRESS
         USING DCMSTRT,RTDCM       ESTABLISH ADDRESSABILITY    @ZA18574
         LTR   RTDCM,RTDCM         IS ADDRESS VALID
         BNZ   GOODADDR            YES, BRANCH
         SPACE 2
*************************************************************
BADCON   MVI   UCMATR,N0           ZERO CONSOLE SUPPORT FLAGS
         MVI   UCMSTS,N0           ZERO WORK FLAGS            MB YM6335
         B     NEXTCON             GET NEXT CONSOLE
         SPACE 2
*************************************************************
GOODADDR L     RA,DCMADPFK         LOAD POINTER TO PFK AREA
         LTR   RA,RA               VALID ADDRESS
         BZ    SEARCH              NO, BRANCH
         SPACE 2
*************************************************************
         L     RSUB,DCMSUBAD       LOAD SUB BASE REGISTER
         USING SUB,RSUB            SUB BASE
         SPACE 3
*************************************************************
SEARCH   CLI   UCBTBYT4,N2260      IS CONSOLE A 2260
         BE    SDYES               YES, BRANCH
         CLI   UCBTBYT4,N3158      IS THIS A 3158 CONSOLE      @ZA17730
         BE    SDYES               YES, BRANCH                 @ZA17730
         CLI   UCBTBYT4,N3036      IS CONSOLE A 3036           @G51AK02
         BE    SDYES               YES, BRANCH                 @G51AK02
         CLI   UCBTBYT4,N3277      IS CONSOLE A 3277
         BNE   SDNO                NO, BRANCH
         TM    UCBTBYT1,MOD1       IS 3277 A MOD ONE
         BNO   SDYES               NO, BRANCH
SDNO     OI    DCMDEVTY,DCMTY50    NOT USABLE FOR SD
         B     SDSYES              BRANCH
SDYES    OI    DCMDEVTY,DCMTY60    IS USABLE FOR SD
SDSYES   MVC   DCMLEN(N2),DCMSTRT       SAVE DCM LENGTH        @ZA18574
         MVC   DCMRMSAL(N2),DCMMSGAL    SAVE NUMBER MSG LINES
         SPACE 2
*************************************************************
NIPTEST  L     RB,DCMMSGSV         POINT TO GETMAIN AREA
         LTR   RB,RB               THIS CONSOLE USED BY NIP?
         BZ    NEXTCON             NO, BRANCH
         OI    DCMRFLGS,DCMNIPP    IND DCM USED BY NIP
         EJECT
*************************************************************
         L     RA,N4(RB)           POINT TO FIRST SAVED MESSAGE
         LA    RX,N8               LOAD BCT COUNT
         LH    RY,DCMLGNTH         LOAD LINE LENGTH
         BCTR  RY,N0               DECREMENT FOR EXECUTE MOVE
         L     RZ,DCMASCRN         DCM MESSAGE AREA
LOOPER   EX    RY,MOVER            MOVE IN MESSAGE
         AH    RA,DCMLGNTH         BUMP FROM POINTER          MB YM2531
         AH    RZ,DCMCORLN         BUMP TO POINTER
         BCT   RX,LOOPER           LOOP FOR MORE
         L     RA,N16(RB)          POINT TO SAVED SCT'S
         L     RZ,DCMAMTAB         DCM SCT POINTER
         MVC   N0(N16,RZ),N0(RA)   RESTORE SAVED SCT'S
         LA    P0,N255             LOAD SUBPOOL VALUE         MB YM2531
         SLL   P0,N24              SHIFT TO HI-ORDER BYTE     MB YM2531
         L     P1,DCMMSGSV         POINT TO GETMAIN AREA      MB YM2531
         L     R2,N20(P1)          POINT TO LAST SCT          MB YM2531
         LA    R2,N3(R2)           POINT JUST BEYOND STOPPER  MB YM2531
         SR    R2,P1               COMPUTE LENGTH FOR FREEING MB YM2531
         OR    P0,R2               SUBPOOL AND LENGTH IN REG  MB YM2531
         FREEMAIN  R,LV=(0),A=(1)                             MB YM2531
         SPACE 3
*************************************************************
NEXTCON  BXLE  RENTRY,RLEN,LOOPA   GET NEXT ENTRY
         DROP  RTDCM               DROP T DCM ADDRESSABILITY
         SPACE 3
*************************************************************
         LTR   RSUB,RSUB           ANY PFK'S IN SYSTEM
         BNZ   LOCATE              YES, BRANCH
         SPACE 3
*************************************************************
RETURN   L     R13,SAVEAREA+N4     LOAD CALLERS SAVE AREA
         LM    14,12,12(13)        RESTORE REGISTERS
         BR    14                  RETURN TO CALLER
         EJECT
***********************************************************************
*        EXECUTE A LOCATE TO DETERMINE IF SYS1.DCMLIB IS PRESENT      *
*        AND IF SO, WHERE. ATTEMPT OPEN.                              *
***********************************************************************
*************************************************************
LOCATE   L     RDCB,SUBBLK         LOAD CONTROL BLOCK BASE
         USING SUBDCB,RDCB         CONTROL BLOCK ADDRESSABILITY
         LOCATE  INDAB
         LTR    R15,R15            WAS LIBRARY MOUNTED
         BNZ   ERROR1              NO,  BRANCH
         SPACE 3
*************************************************************
OPEN     MVC   SUBVOL(N6),SYSVOL   STORE VOLID IN JFCB
         L     RCVT,CVTPTR         LOAD CVT BASE
         USING CVT,RCVT            ESTABLISH ADDRESSABILITY
         SPACE 3
*************************************************************
         L     RX,CVTILK2          GET UCB                    MC  M2522
LOOP     DS    0H                                              @Z30AAJE
         SR    RY,RY               CLEAR REGISTER              @Z30AAJE
         ICM   RY,3,N0(RX)           ADDRESS                   @Z30AAJE
         BZ    BUMP                NULL ENTRY GET NEXT         @Z30AAJE
         CLM   RY,3,TABEND           REACHED END OF TABLE      @Z30AAJE
         BE    ERROR1              YES, BRANCH TO ERROR       MC  M1984
         CLC   N28(N6,RY),SUBVOL   VOLID SAME AS IN TIOT      MB Y02958
         BE    FOUND               YES, UCB FOR DCMLIB FOUND  MB Y02958
BUMP     LA    RX,N2(RX)           GET NEXT UCB ADDRESS       MB Y02958
         B     LOOP                CHECK FOR END OF UCBS      MB Y02958
FOUND    EQU   *
         L     RC,ADRDSAB          LOCATE DSAB FOR DCMLIB     MB Y02958
         USING DSAB,RC             DSAB ADDRESSABILITY        MB Y02958
         L     RC,DSABTIOT         TIOT ENTRY FOR DCMLIB      MB Y02958
         USING TIOENTRY,RC         TIOT ENTRY ADDRESSABILITY  MB Y02958
         STCM  RY,N7,TIOEFSRT      POINT TIOT ENTRY TO UCB    MB Y02958
         L     RB,UCMPXA           COMM TASK TCB              MB Y02958
         USING TCB,RB              TCB ADDRESSABILITY         MB Y02958
         MVC   COMTIOT,TCBTIO      COMM TASK TIOT             MB Y02958
         L     RC,TCBJSCB          COMM TASK JSCB             MB Y02958
         USING IEZJSCB,RC          JSCB ADDRESSABILITY        MB Y02958
         MVC   COMQDB(N4),JSCDSABQ COMM TASK DSAB QUEUE       MB Y02958
         L     RB,CVTTCBP          CURRENT TCB POINTER        MB Y02958
         L     RB,N0(RB)           MASTER TCB ADDRESS         MB Y02958
         L     RC,TCBJSCB          MASTER JSCB ADDRESS        MB Y02958
         MVC   MSTRTIOT,TCBTIO     SAVE MASTER TIOT ADDRESS   MB Y02958
         MVC   TCBTIO,COMTIOT      SET COMM TASK TIOT         MB Y02958
         MVC   MSTRQDB,JSCDSABQ    SAVE MASTER DSAB QDB       MB Y02958
         MVC   JSCDSABQ,COMQDB     SET COMM TASK QDB FOR OPEN MB Y02958
         SPACE 3
*************************************************************
         LA    RA,PNXLST           SET UP DCB EXLST           MB Y02958
         STCM  RA,N7,N37(RDCB)     LEAVE HI BYTE ALONE        MB Y02958
         SPACE 3
*************************************************************
         MVC   CVTDATE(N4),DATE    PUT DATE INTO CVT
         OI    JSCBSWT1,JSCBPASS                              MB Y02958
         OI    PNJEF,STOPPER       LAST ENTRY                 MB YM3194
         SPACE 3
*************************************************************
         OPEN  ((RDCB),INOUT),TYPE=J,MF=(E,PNJEF)
         MVC   TCBTIO,MSTRTIOT     RESTORE TIOT ADDRESS       MB Y02958
         MVC   JSCDSABQ,MSTRQDB    RESTORE DSAB QDB           MB Y02958
         NI    JSCBSWT1,N255-JSCBPASS REINSTATE PASSWORD CHECKING
         DROP  RC                  DROP JSCB ADDRESSABILITY   MB Y02958
         DROP  RB                  DROP TCB ADDRESSABILITY    MB Y02958
         SPACE 3
*************************************************************
OPENOK   TM    N48(RDCB),OFLAG     IS DCB OPEN
         BZ    ERROR1              NO, BRANCH
         EJECT
***********************************************************************
*        READ IN COPY OF PFK DEFINITIONS FROM SYS1.DCMLIB             *
***********************************************************************
*************************************************************
         L     P1,SUBBLK           LOAD DCB ADDRESS
         BLDL  (1),LIST            ISSUE BLDL FOR PFK MEMBER
         LTR   R15,R15             WAS IT FOUND
         BNZ   ERROR2              NO, BRANCH
         SPACE 3
*************************************************************
         LA    RA,SUBECB           GET ECB ADDRESS
         ST    RA,IOB+N4           STORE IT IN IOB
         L     R2,SUBPFKAD         LOAD PFK AREA POINTER
         L     RX,N0(R2)           POINT TO DEFINATIONS
         ST    RX,DEFSAVE          SAVE DEFINATION POINTER
         LA    R2,N4(R2)           POINT TO ELEMENT
         MVC   LENGTH(N2),N0(RX)   MOVE LENGTH TO CCW
         MVI   TYPE,NE             SET CCW READ CODE
         MVC   DATA(N3),SUBPFKAD+N1    STORE DATA ADDR IN CCW
         SPACE 3
*************************************************************
TEE      STM   R14,R12,SAVEAREA+N12    SAVE REGISTERS
         L     P0,TTR              GET RELATIVE TTR
         L     P1,SUBBLK           GET DCB ADDRESS
         L     P1,N44(P1)          GET DEB ADDRESS
         LA    R2,SEEK             WHERE TO PUT CONVERSION
         L     R15,CVTPCNVT        GET POINTER TO CONVERT ROUTINE
         BALR  R14,R15             BRANCH TO CONVERT ROUTINE
         LM    R14,R12,SAVEAREA+N12     RESTORE REGISTERS
         SPACE 3
*************************************************************
         LA    P1,IOB              LOAD IOB ADDRESS
         SVC   0                   ISSUE EXCP
         WAIT  ECB=SUBECB          WAIT FOR I/O COMPLETE
         SPACE 3
*************************************************************
         TM    IOBSEN,IOBNR        WAS RECORD FOUND
         BO    NOREC               NO, BRANCH
         SPACE 3
*************************************************************
         CLI   SUBECB,GOODIO       WAS I/O GOOD
         BNE   ERROR2              NO, BRANCH
         SPACE 3
*************************************************************
         MVI   SUBECB,N0           CLEAR ECB
         TM    SUBDAIO,SUBEXP      CONTROL RECORD EXPECTED
         BZ    EXPON               NO, BRANCH
         SPACE 3
*************************************************************
         L     RA,TYPE             LOAD DATA ADDRESS
         LA    RA,N0(RA)           CLEAR HIGH BYTE
         TM    N0(RA),CONTROL      CONTROL RECORD
         BZ    BUMPER              NO, BRANCH
         SPACE 3
*************************************************************
         NI    SUBDAIO,N255-SUBEXP SET OFF EXPECT FLAG
         SPACE 3
*************************************************************
BUMPER   IC    RA,TTR+N2           GET R OF TTR
         LA    RA,N1(RA)           BUMP BY ONE
         STC   RA,TTR+N2           STORE UPDATED VALUE
         B     TEE                 BRANCH
         EJECT
*************************************************************
NOREC    LH    RA,TTR              GET TT OF TTR
         LA    RA,N1(RA)           BUMP BY ONE
         STH   RA,TTR              STORE UPDATED VALUE
         MVI   TTR+N2,N1           SET R OF TTR TO ONE
         B     TEE                 BRANCH
         SPACE 3
*************************************************************
EXPON    MVC   N2(N8,R2),SEEK      MOVE TTR TO ELEMENT
         LH    RA,RESCNT           LOAD RESIDUAL COUNT
         LH    RX,LENGTH           LOAD CCW COUNT
         N     RX,MASK1            CLEAR UNWANTED BITS      JE @ZA02819
         N     RA,MASK1            CLEAR UNWANTED BITS         @ZA24414
         SR    RX,RA               COMPUTE LENGTH READ
         STH   RX,N0(R2)           STORE IN ELEMENT
         SPACE 3
*************************************************************
         LTR   RA,RA               IS RESIDUAL COUNT ZERO
         BNZ   COMPUT              NO, BRANCH
         SPACE 3
*************************************************************
         OI    N0(R2),STOPPER      SET ELEMENT STOPPER
         OI    SUBFLGS,SUBPKLIB    IND PFKS ARE SUPPORTED
         L     R2,SUBPFKAD         LOAD PFK AREA ADDRESS
         L     RX,DEFSAVE          LOAD SAVED POINTER
         ST    RX,N0(R2)           RESTORE DEFINATION POINTER
         B     RETURN              EXIT
         SPACE 3
*************************************************************
COMPUT   STH   RA,LENGTH           STORE NEW LENGTH IN CCW
         L     RA,TYPE             LOAD DATA ADDRESS
         AR    RA,RX               ADD LENGTH READ
         ST    RA,TYPE             STORE UPDATED DATA ADDRESS
         LA    R2,N10(R2)          UPDATE ELEMENT POINTER
         OI    SUBDAIO,SUBEXP      SET ON EXPECT FLAG
         B     BUMPER              BRANCH
         EJECT
*************************************************************
ERROR1   WTO   'IEE933I DCMLIB OPEN FAILED',ROUTCDE=(1)
         B     RETURN              EXIT
         SPACE 3
*************************************************************
ERROR2   WTO   'IEE934I PFK UPDATE FAILED',ROUTCDE=(1)
         B     RETURN              EXIT
         SPACE 3
*************************************************************
         EJECT
***********************************************************************
*        REGISTER EQUATES                                             *
***********************************************************************
P0       EQU   0                   REGISTER
P1       EQU   1                   PARAMETER REGISTER
RA       EQU   1                   WORK REGISTER
R2       EQU   2                   REGISTER
RB       EQU   2                   WORK REGISTER
RENTRY   EQU   3                   UCMENTRY BASE
RC       EQU   3                   WORK REG                   MB Y02958
RLEN     EQU   4                   ENTRY LENGTH FOR BXLE
RLAST    EQU   5                   LAST ENTRY FOR BXLE
RBASE    EQU   6                   PROGRAM BASE
RUCB     EQU   7                   UCB POINTER
RDCB     EQU   8                   CONTROL BLOCK BASE
RRDCM    EQU   9                   R DCM BASE
RCVT     EQU   10                  CVT BASE REGISTER
RTDCM    EQU   10                  T DCM BASE
RSUB     EQU   11                  SUB BASE
RUCM     EQU   12                  UCM BASE
R12      EQU   12                  WORK REGISTER
R13      EQU   13                  SAVE AREA POINTER
RZ       EQU   13                  WORK REGISTER
RX       EQU   14                  WORK REGISTER
RY       EQU   15                  WORK REGISTER
         EJECT
***********************************************************************
*        MISC PROGRAM EQUATES                                         *
***********************************************************************
N0       EQU   0                   NUMBER
N1       EQU   1                   NUMBER
N2       EQU   2                   NUMBER
N3       EQU   3                   NUMBER
N4       EQU   4                   NUMBER
N6       EQU   6                   NUMBER
N7       EQU   7                   NUMBER                     MB Y02958
N8       EQU   8                   NUMBER
N10      EQU   10                  NUMBER
N12      EQU   12                  NUMBER
N16      EQU   16                  NUMBER
N20      EQU   20                  NUMBER                     MB YM2531
N24      EQU   24                  NUMBER                     MB YM2531
N28      EQU   28                  NUMBER
N37      EQU   37                  NUMBER                     MB Y02958
N44      EQU   44                  NUMBER
N48      EQU   48                  NUMBER
N64      EQU   64                  NUMBER
N148     EQU   148                 DEB MOVE LENGTH
N255     EQU   255                 NUMBER
OFLAG    EQU   X'10'               NUMBER
UCMPT    EQU   100                 DISPLACEMENT OF UCM ADDR IN CVT
N2260    EQU   X'03'               2260 DEVICE TYPE
N3277    EQU   X'09'               3277 DEVICE BYTE
N3158    EQU   X'0C'               3158 DEVICE TYPE FLAG       @ZA17730
N3036    EQU   X'0D'               3036 DEVICE TYPE FLAG       @G51AK02
MOD1     EQU   X'01'               3277 MODEL ONE FLAG
NE       EQU   X'0E'               READ CODE
CONTROL  EQU   X'01'               CONTROL RECORD IDENTIFIER
STOPPER  EQU   X'80'               ELEMENT STOPPER
GOODIO   EQU   X'7F'               GOOD I/O INDICATION
         EJECT
***********************************************************************
*        MISC PROGRAM CONSTANTS                                       *
***********************************************************************
         CNOP  2,4
LIST     DC    H'1'
         DC    H'22'
         DC    C'IEE'
         DC    CL5'PFKEY'                                     MB Y02958
         DC    XL6'0'
TTR      DC    XL8'0'
SAVEAREA DS    18F                 REGISTER SAVE AREA
INDAB    CAMLST  NAME,AB,,LOCAREA
AB       DC    CL44'SYS1.DCMLIB'
LOCAREA  DS    0D
         DS    6C
SYSVOL   DS    253C
NEEDED   DS    6C
DEFSAVE  DS    F                   PFK DEFINITION POINTER     MB Y02958
COMTIOT  DS    F                   ADDRESS COMM TASK TCB      MB Y02958
COMQDB   DS    F                   COMM TASK DSAB QDB ADDRESS MB Y02958
MSTRTIOT DS    F                   MASTER TIOT ADDRESS        MB Y02958
MSTRQDB  DS    F                   MASTER DSAB QDB ADDRESS    MB Y02958
ADRDSAB  DS    F                   DSAB FOR DCMLIB            MB Y02958
DATE     DC    X'0099366F'         DATE IN PACKED DECIMAL
SUBECB   DC    F'0'                SPECIAL ECB FOR PFK READ
MASK1    DC    XL4'0000FFFF'                                JE @ZA04664
TABNULL  DC    H'0'                UCB TABLE NULL ENTRY       MC  M1984
TABEND   DC    X'FFFF'             UCB TABLE END INDICATOR     @Z30AAJE
MOVER    MVC   N0(N0,RZ),N0(RA)    RESTORE NIPS MESSAGES
         EJECT
***********************************************************************
*        PROGRAM DSECT AREA                                           *
***********************************************************************
         CVT        DSECT=YES
         EJECT
UCBBLK   DSECT
         IEFUCBOB
         EJECT
         IEFTIOT1
         EJECT
         IHADSAB
         EJECT
         IEZJSCB
         EJECT
         IKJTCB
         EJECT
         IEECUCM  FORMAT=NEW
         EJECT
         IHAPSA
         EJECT
         IEERDCM
         EJECT
         IEETDCM
         EJECT
SUB      DSECT
         IEECSUB Y,Y,N,N,Y,Y
         EJECT
         IECDIOCM                                              @ZA18574
         EJECT
         IECDATB                                               @ZA18574
         END
