         TITLE 'IEE40110  IGC40110   DISPLAY PFK'
IEE40110 CSECT
* /* START OF SPECIFICATIONS ****
*02*  PROCESSOR = ASSEMBLER;
**** END OF SPECIFICATIONS ***/
         EJECT
* STATUS
*    CHANGE LEVEL 0
*    CREATED FOR RELEASE 21, LINE ITEM S21003.
*
* APARS FIXED ZA14044
*
* FUNCTION
*    THIS ROUTINE PROVIDES A DISPLAY SHOWING THE CURRENT DEFINITIONS
*    OF ALL PFKS WHICH WERE ALLOCATED AT SYSGEN IN RESPONSE TO AN
*    OPERATOR COMMAND OF 'D PFK'
*
* ENTRY POINTS
*         IEE40110 FOR ALL FUNCTIONS
*         ENTERED FROM IGC00110 (IEE00110).
*
* OPERATION
*    IF THE PFK AREA DOES NOT EXIST AN INFORMATION MESSAGE IS SENT
*    TO THE OPERATOR.  IF THE AREA DOES EXIST THE KEYS ARE
*    EXAMINED ONE AT A TIME, FORMATTED AND WRITTEN TO THE SCREEN
*    USING THE MULTIPLE LINE FACILITY OF WTO.
*
* INPUT
*    A CSCB CONTAINING THE OPERATOR COMMAND (WHICH IS NOT SCANNED,
*    BUT IS OVERLAYED AND USED AS A WORKAREA) AND THE PFK AREA
*    POINTED TO BY THE RESIDENT DCM.
*
* OUTPUT
*    MESSAGE IEE724I WHICH CONSISTS OF UP TO 26 LINES OF PFK
*    DEFINITIONS.
*    MESSAGE IEE720I IF THE DEVICE HAS NO PFKS ALLOCATED.
*    MESSAGE IEE921I IF MCS IS NOT IN THE SYSTEM.
*
* EXTERNAL REFERENCES
*         MACROS USED: TIME, WTO, XCTL.
*
* EXITS, NORMAL
*         IGC00110 VIA XCTL WHEN WORK IS COMPLETE.
*
* EXITS, ERROR
*         NONE.
*
* TABLES/WORK AREAS
*    THE CSCB POINTED TO BY REGISTER 2. (SEE DSECT AT END OF
*    LISTING).  THE PFK AREA POINTED TO BY THE RESIDENT DCM
*    FOR THE REQUESTING CONSOLE.
*
* ATTRIBUTES
*    REFRESHABLE, PRIVILEGED, TYPE 4 SVC.
*
* CHARACTER CODE DEPENDENCY
*    THE EQUATE 'ZONE' MUST REFLECT THE ZONE OF DECIMAL DIGITS.
*
* NOTES
*    THE FOLLOWING FLAG BITS ARE USED:
*       THE ACTION COLUMN INDICATES WHETHER THE BIT IS TURNED ON, OFF
*       OR JUST TESTED BY THIS MODULE.
*
*         NAME         ACTION                 FUNCTION
*       UCMMODE
*        UCMMCS      TEST          MCS IS IN SYSTEM
*       PFK AREA
*        DCMPFKCN    TEST          KEY IS CONVERSATIONAL MODE
*        DCMPFKDF    TEST          KEY IS DEFINED
*        DCMPFKKY    TEST          KEY IS A LIST OF KEYS
*
***********************************************************************
  EJECT
*          REGISTER EQUATES
CLOCK    EQU   0                   VALUE RETURNED BY TIME MACRO
WTOPT    EQU   0                   POINTER TO WTO TEXT
PARM1    EQU   1                   XSA POINTER ON ENTRY
WTOIDOUT EQU   1                   MLWTO ID FROM SVC 34
CSCB     EQU   2                   POINTER TO CSCB
UCMBASE  EQU   3                   UCM BASE REGISTER (TEMPORARY)
DCMBASE  EQU   3                   DCM BASE REGISTER
RET      EQU   3                   SUBROUTINE RETURN REGISTER
POINT    EQU   4                   CHAINING POINTER (VARIABLE)
BACKSCAN EQU   4                   USED TO FIND LAST TEXT CHAR
WORK5    EQU   5                   WORK REGISTER
APFK     EQU   6                   POINTER TO PFK AREA
INSCAN   EQU   7                   SCANS LIST OF KEYS IN AREA
ID       EQU   8                   CONSOLE ID
COUNT    EQU   9                   LOOP CONTROL
OUTSCAN  EQU   10                  OUTPUT PTR FOR LIST OF KEYS
XSAREG   EQU   11                  XSA BASE REGISTER
PROGBASE EQU   12                  PROGRAM BASE REGISTER
SAVEAREA EQU   13                  PTR TO MAINLINE SAVE AREA
RETURN   EQU   14                  RETURN REGISTER
ENTRY    EQU   15                  ENTRY POINT REGISTER
COMPARE  EQU   15                  COMPARE REG FOR LINE LENGTH
         EJECT
         BALR  PROGBASE,N0         SET BASE ADDRESS
         USING *,PROGBASE          AND TELL ASSEMBLER
         USING CSCBSECT,CSCB
* NOTE  CSCB ADDRESS WAS PASSED IN REG 2
         B     ICATCH              BRANCH AROUND EYECATCHER
         DC    C'   MODULE IGC40110, FICHE IEE40110  '   EYECATCHER AND
ZAPAREA  DC    12C'ZAP'               RESERVED FOR FIELD MODIFICATIONS
ICATCH   LR    XSAREG,PARM1        SAVE XSA POINTER
         USING PSXA,XSAREG
* NOTE  XSA ADDRESS WAS PASSED IN REG 1
         STM   SAVEAREA,WTOIDOUT,CSCBSAVE    SAVE REGS
         NI    FLAGS,N0            ZERO FLAG BYTE
         SR    WORK5,WORK5         CLEAR WORK
         SR    ID,ID                  REGISTERS
         SPACE 5
*****************************************************************
         L     POINT,CVTADDR       GET CVT POINTER
         USING CVTDSECT,POINT
         L     POINT,CVTCUCB       GET UCM POINTER
         DROP  POINT
         IC    ID,CHUCMP           GET CONSOLE ID
         LR    WORK5,ID
         LR    WTOPT,ID            POINT WTO TO CONSOLE
         BCTR  WORK5,N0            SUBTRACT ONE FOR LATER MULTIPLY
         USING UCM,POINT
         MVC   PREFIX,HEADER       MOVE PREFIX INTO WORKAREA
         MVI   LINTYPE,NONE        SET UP FOR STANDARD WTO
         EJECT
*****************************************************************
         LM    UCMBASE,POINT,UCMVEA YES, GET ENTRY AND LENGTH POINTERS
         DROP  POINT
         MR    POINT,POINT         INDEX TO CORRECT CONSOLE
* NOTE  THIS MULTIPLIES POINT (LENGTH) BY WORK5 (ID) TO
*       OBTAIN INDEX IN WORK5.
         AR    UCMBASE,WORK5       PLUS ENTRY EQUAL UCM ENTRY
         USING UCMLIST,UCMBASE
         SPACE 5
*****************************************************************
         NC    UCMXB,UCMXB         IS THIS A GRAPHICS CONSOLE
         BZ    MSG1                 NO, ISSUE MESSAGE
         SPACE 5
*****************************************************************
         L     DCMBASE,UCMXB        YES, LOAD RESIDENT DCM POINTER
         DROP  UCMBASE
         USING RESDCM,DCMBASE
         L     APFK,DCMADPFK       POINT TO PFK AREA
         LTR   APFK,APFK           ARE ANY KEYS ALLOCATED
         BZ    MSG1                 NO, ISSUE MESSAGE
         DROP  DCMBASE
         SH    APFK,PFKLGTH        BACK UP 1 PSEUDO AREA
         MVC   TEXT(L'MSGID),MSGID MOVE IN MESSAGE ID
         EJECT
*****************************************************************
         TIME  DEC                 GET TIME
* NOTE  TIME RETURNED IN REG 0 AS PACKED DECIMAL
         SPACE 5
*****************************************************************
         ST    CLOCK,TEXT+N8       STORE PACKED DECIMAL TIME
         UNPK  TEXT+N10(N7),TEXT+N8(N4) UNPACK IT
         MVI   TEXT+N16,BLANK      BLANK FRACTIONAL SECONDS
         MVC   TEXT+N9(N4),TEXT+N10     SHIFT HOURS LEFT
         MVC   TEXT+N8(N2),TEXT+N9 SHIFT MINUTES LEFT
         MVI   TEXT+N10,PERIOD     ADD IN
         MVI   TEXT+N13,PERIOD        PUNCTUATION
         MVC   TEXT+N19(L'CONTROL),CONTROL    MOVE IN CONTROL LINE TEXT
         MVI   LINTYPE,CTRLINE     SET LINE TYPE FLAG
         LR    WTOPT,ID            REFRESH ID POINTER
         SPACE 5
*****************************************************************
         BAL   RET,SUBROUT         GO TO WRITE THE CONTROL LINE
         SPACE 5
*****************************************************************
         MVC   TEXT(L'TITLE),TITLE MOVE IN TITLE LINE
         MVI   LINTYPE,TITLINE       SET LINE TYPE FLAG
         SPACE 5
*****************************************************************
LOOP     CLI   PFKLGN(APFK),STOPPER     IS NEXT KEY A STOPPER
* NOTE  IT CANNOT BE ON FIRST PASS
         BE    ENDFLAG              YES, GO TO MARK LAST LINE
         SPACE 5
*****************************************************************
         BAL   RET,SUBROUT         WRITE NEXT LINE
         MVI   LINTYPE,DATA        SET LINE TYPE TO DATA LINE
         SPACE 5
*****************************************************************
         LA    APFK,PFKLGN(APFK)   POINT TO NEXT KEY
         SPACE 5
*****************************************************************
         SR    WORK5,WORK5         CLEAR REGISTER
         IC    WORK5,N0(APFK)      GET KEY NUMBER
         CVD   WORK5,PACK          CONVERT TO DECIMAL
         UNPK  PACK,CVBIN          UNPACK IT
         OI    PACK+N3,ZONE        INSERT EBCDIC ZONE
         MVC   TEXT+N2(N2),PACK+N2 MOVE KEY NUMBER TO LINE
         SPACE 5
*****************************************************************
         TM    N1(APFK),DCMPFKDF   IS KEY DEFINED
         BNO   NOTDEF               NO, MOVE IN MESSAGE
         EJECT
*****************************************************************
         TM    N1(APFK),DCMPFKCN   IS KEY CONVERSATIONAL
         BO    CONVERS              YES, GO TO INDICATE SO
         SPACE 5
*****************************************************************
         MVC   TEXT+N7(L'NO),NO     NO, INDICATE SO
         B     TESTYPE             GO SEE IF KEY IS A LIST
         SPACE 5
*****************************************************************
CONVERS  MVC   TEXT+N7(L'YES),YES  INDICATE CONV MODE
         SPACE 5
*****************************************************************
TESTYPE  TM    N1(APFK),DCMPFKKY   IS THIS A LIST OF KEYS
         BO    KEYLIST              YES, GO TO FORMAT IT
         SPACE 5
*****************************************************************
TEXTCOM  EQU   *
         CLC   TEXT+N13(PFKLIN/2),PFKLIN/2+N2(APFK)
*                                  IS SECOND HALF LINE BLANK
         MVC   TEXT+N13(PFKLIN/2),N2(APFK) MOVE FIRST 1/2 LINE ANYWAY
         EJECT
*****************************************************************
         BE    LOOP                 YES, GET NEXT KEY
         SPACE 5
*****************************************************************
         BAL   RET,SUBROUT         GO TO WRITE LINE
         SPACE 5
*****************************************************************
         MVC   TEXT+N13(PFKLIN/2),PFKLIN/2+N2(APFK)   MOVE IN 2ND LINE
         B     LOOP                GO TO NEXT TEST
         SPACE 5
*****************************************************************
KEYLIST  EQU   *
         LA    INSCAN,N2(APFK)     POINT TO FIRST KEY IN LIST
         SR    COUNT,COUNT         CLEAR LOOP CONTROL REG
         LA    COUNT,TEXT+PFKLIN/2+N10    SET COUNT FOR END OF LINE
         SPACE 5
*****************************************************************
SECLINE  LA    OUTSCAN,TEXT+N13    POINT TO TEXT AREA OF LINE
         EJECT
*****************************************************************
NEXTKEY  SR    WORK5,WORK5         CLEAR REGISTER
         IC    WORK5,N0(INSCAN)    GET KEY NUMBER
         CVD   WORK5,PACK          CONVERT TO DECIMAL
         UNPK  PACK,CVBIN          UNPACK IT
         OI    PACK+N3,ZONE        ADD EBCDIC ZONE
         CLI   PACK+N2,ZERO        IS FIRST DIGIT ZERO
         BE    ONEDIG               YES, SKIP FIRST DIGIT
         MVC   N0(N1,OUTSCAN),PACK+N2   MOVE FIRST DIGIT
         LA    OUTSCAN,N1(OUTSCAN) BUMP OUTPUT POINTER
ONEDIG   EQU   *
         MVC   N0(N1,OUTSCAN),PACK+N3   MOVE SECOND DIGIT
         MVI   N1(OUTSCAN),COMMA   MOVE IN COMMA
         LA    OUTSCAN,N2(OUTSCAN) BUMP OUTPUT POINTER
         LA    INSCAN,N2(INSCAN)   BUMP INPUT POINTER
         SPACE 5
*****************************************************************
ENDLIST  CLI   N0(INSCAN),STOPLIST IS THIS END OF LIST
         BE    CLEARCOM             YES, GO ON TO NEXT KEY
         SPACE 5
*****************************************************************
         CR    COUNT,OUTSCAN       IS THIS END OF DISPLAY LINE
         BNL   NEXTKEY              NO, GET NEXT KEY
         SPACE 5
*****************************************************************
         BAL   RET,SUBROUT          YES, WRITE THIS LINE OUT
         B     SECLINE             GO TO FORMAT SECOND LINE
         EJECT
*****************************************************************
CLEARCOM EQU   *
         SH    OUTSCAN,H1          POINT TO LAST COMMA
         MVI   N0(OUTSCAN),BLANK   BLANK IT OUT
         B     LOOP                GO ON TO NEXT KEY
         SPACE 5
*****************************************************************
NOTDEF   EQU   *
         MVC   TEXT+N14(L'UNDEF),UNDEF   MOVE IN UNDEFINED MESSAGE
         B     LOOP                GO ON TO NEXT KEY
         EJECT
***********SUBROUTINE TO WRITE EACH LINE ************
*****************************************************************
SUBROUT  LA    BACKSCAN,SUFF       PT TO END OF TEXT
         BCTR  BACKSCAN,N0         POINT TO LAST CHARACTER
X        CLI   N0(BACKSCAN),BLANK  IS IT BLANK
         BNE   NONBLANK             NO, MARK LOCATION
* NOTE  THE FOLLOWING INSTRUCTION DOES NOT PROVIDE LOOP CONTROL
         BCT   BACKSCAN,X           YES, POINT TO NEXT CHAR
         SPACE 5
*****************************************************************
NONBLANK MVC   N1(L'SUFFIX,BACKSCAN),SUFFIX  MOVE IN SUFFIX FLAGS
         SPACE 5
*****************************************************************
         TM    FLAGS,FLAGA         IS THIS A REGULAR WTO
         BNO   MLWTO                NO, DON'T CHANGE PREFIX
         SPACE 5
*****************************************************************
         MVC   PREFIX+N2(N2),ORDWTO      YES, ALTER PREFIX
         SPACE 5
*****************************************************************
MLWTO    MVC   N5(N1,BACKSCAN),LINTYPE  MARK LINE TYPE AS REQUIRED
         EJECT
*****************************************************************
         LA    COMPARE,PREFIX      PT TO START OF PARAMETER LIST
         SR    BACKSCAN,COMPARE   DETERMINE TOTAL LENGTH MINUS ONE
         LA    BACKSCAN,N1(BACKSCAN)    ADD ONE FOR TRUE LENGTH
         STC   BACKSCAN,PREFIX+N1  STORE IN HEADER
         SPACE 5
*****************************************************************
         WTO   MF=(E,PREFIX)
         LTR   ENTRY,ENTRY         TEST RETURN CODE           MC YM3872
         BNZ   EXIT                DISPLAY CANCELLED, EXIT    MC YM3872
* NOTE  WTO MESG ID IS RETURNED IN REG 1, BUT MUST BE PASSED
*          BACK WITH CONSOLE ID IN REG 0
         SPACE 5
*****************************************************************
         LR    WTOPT,WTOIDOUT      MOVE WTO ID FOR NEXT LINE
         SLL   WTOPT,N8            ALIGN WTO ID IN REG
         IC    WTOPT,CHUCMP        INSERT CONSOLE ID
         SPACE 5
*****************************************************************
         MVI   TEXT,BLANK          BLANK THE
         MVC   TEXT+N1(N70),TEXT      TEXT AREA
         SPACE 5
*****************************************************************
         BR    RET                 RETURN TO CALLER
*************END OF SUBROUTINE*****************
         EJECT
*****************************************************************
ENDFLAG  EQU   *
         MVI   LINTYPE,DTEND       SET LINE TYPE TO DATA-END
         SPACE 5
*****************************************************************
         BAL   RET,SUBROUT         GO TO WRITE LINE
         SPACE 5
*****************************************************************
EXIT     LM    SAVEAREA,WTOIDOUT,CSCBSAVE    RETORE SAVED REGS
         MVI   XAX+N3,ZERO         POINT TO FIRST LOAD OF SVC 110
         XCTL  SF=(E,(XSAREG))     RETURN TO IT TO FREE CSCB AND EXIT
         SPACE 5
*****************************************************************
SETA     OI    FLAGS,FLAGA         INDICATE NORMAL WTO
         BAL   RET,SUBROUT         GO TO WRITE LINE
         B     EXIT                RETURN TO CALLER
         EJECT
*****************************************************************
MSG1     EQU   *
         MVC   TEXT(L'NALLOC),NALLOC    MOVE IN MESSAGE
         B     SETA                SET NORMAL LINE FLAG
         EJECT
*************      CONSTANTS
CONTROL  DC    C'PFK DEFINITION'   CONTROL LINE TEXT
HEADER   DC    X'0000E140'         LINE LENGTH AND MCS FLAGS
H1       DC    H'1'                ONE
MSGID    DC    C'IEE724I'          MESSAGE IDENTIFIER
NALLOC   DC    C'IEE720I NO PFK ALLOCATION'
NO       DC    C'NO'               KEY NOT CONVERSATIONAL MODE
ORDWTO   DC    X'6100'             FLAGS FOR STANDARD WTO
PFKLGTH  DC    H'110'              LENGTH OF PFK AREA
SUFFIX   DC    X'098000000000E901' MLWTO CONTROL
TITLE    DC    C' KEY#  CONV   DEFINITION...' TITLE TEXT       @ZA14044
UNDEF    DC    C'NOT DEFINED'      KEY IS NOT DEFINED
YES      DC    C'YES'              KEY IS CONVERSATIONAL MODE
         EJECT
***********      EQUATES
BLANK    EQU   C' '                BLANK CHARACTER
COMMA    EQU   C','                COMMA CHARACTER
CTRLINE  EQU   X'80'               CONTROL LINE TYPE FLAG
CVTADDR  EQU   16                  CVT POINTER ADDRESS
DATA     EQU   X'20'               DATA LINE TYPE FLAG
DTEND    EQU   X'30'               DATA-END LINE TYPE FLAG
MVCLN    EQU   256                 LENGTH OF EACH MOVE TO COPY PFK AREA
NONE     EQU   X'00'               NULL LINE TYPE
N0       EQU   0                   NUMBER
N1       EQU   1                   NUMBER
N2       EQU   2                   NUMBER
N3       EQU   3                   NUMBER
N4       EQU   4                   NUMBER
N5       EQU   5                   NUMBER
N6       EQU   6                   NUMBER
N7       EQU   7                   NUMBER
N8       EQU   8                   NUMBER
N9       EQU   9                   NUMBER
N10      EQU   10                  NUMBER
N11      EQU   11                  NUMBER
N12      EQU   12                  NUMBER
N13      EQU   13                  NUMBER
N14      EQU   14                  NUMBER
N15      EQU   15                  NUMBER
N16      EQU   16                  NUMBER
N19      EQU   19                  NUMBER
N70      EQU   70                  NUMBER
ONEBYTE  EQU   8                   NUMBER OF BITS IN BYTE
PERIOD   EQU   C'.'                PERIOD CHARACTER
PFKLGN   EQU   110                 LENGTH OF PFK AREA
PFKLIN   EQU   PFKLGN-2            LENGTH OF PFK TEXT
STOPLIST EQU   X'61'               STOPPER FOR LIST OF KEYS
STOPPER  EQU   X'64'               FLAG TO SHOW END OF LIST OF KEYS
TITLINE  EQU   X'40'               TITLE LINE TYPE FLAG
ZERO     EQU   C'0'                CHARACTER ZERO
ZONE     EQU   X'F0'               EBCDIC ZONE
DCMPFKDF EQU   X'80'                KEY HAS BEEN DEFINED
DCMPFKCN EQU   X'20'                KEY IS CONVERSATIONAL
DCMPFKKY EQU   X'08'                KEY IS A LIST OF KEYS
         TITLE 'IEE40110  IGC40110  DISPLAY PFK  CXSA'
PSXA     DSECT
         IEEXSA
         TITLE 'IEE40110  IGC40110   DISPLAY PFK   COMMUNICATIONS VECTO*
               R TABLE'
CVTDSECT DSECT
         CVT
         TITLE 'IEE40110  IGC40110   DISPLAY PFK   RESIDENT DISPLAY CON*
               TROL MODULE'
RESDCM   DSECT
         IEECRDCM
         TITLE 'IEE40110  IGC40110   DISPLAY PFK   TRANSIENT DISPLAY CO*
               NTROL MODULE'
DCMSECT  DSECT
         IEECDCM
         TITLE 'IEE40110  IGC40110   DISPLAY PFK   UNIT CONTROL MODULE'
         IEECUCM FORMAT=NEW
         TITLE 'IEE40110  IGC40110   DISPLAY PFK   CSCB (USED AS WORKSP*
               ACE)'
CSCBSECT DSECT
         IEECHAIN
* NOTE  THE FOLLOWING PORTION SHOWS HOW THIS MODULE MAKES USE
*       OF THE CSCB AS A WORK AREA.
         ORG   CHBUF               START MODULE WORKAREA ON D/W
FLAGS    DC    X'00'               NOT USED
FLAGA    EQU   X'80'               USE REGULAR WTO
LINTYPE  DC    X'00'               LINE TYPE
OP       DS    14C                 INCOMING COMMAND OPERAND
PREFIX   DC    X'00000000'         WTO LINE LENGTH AND MCS FLAGS
TEXT     DC    71C' '              TEXT OF OUTPUT LINE
SUFF     DC    X'000000000000'     MLWTO CONTROL AREA
         DS    3C                  UNUSED
CSCBSAVE DS    5F                  REGISTER SAVE AREA
         ORG   CHPEND              ALIGN TO D/W PAST CONSOLE ID
PACK     DC    F'0'                AREA TO PLACE NUMBER FOR PACKING
CVBIN    DC    F'0'                AREA FOR CONVERSION TO BINARY
         END   IEE40110
