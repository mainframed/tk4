         TITLE 'IEECVETW -ALIAS IGC5W07B- 3284/6 I/O '
IEECVETW CSECT
* A 077500-077700,366100                                       MB M2523
* C 155000,310400,421000                                       MB M2523
* A 164500,164520,165900,166000                               JE YM8416
* STATUS
*
*    VS2 RELEASE 2
*
*    APARS FIXED ZA00539,ZA08139
*
* FUNCTION
*    THIS IS A DEVICE DEPENDENT ROUTINE TO PERMORM THE REQUESTED I/O IN
*    PROPER SCREEN FORMAT.
*
* ENTRY POINTS
*         IEECVETW FOR ALL FUNCTIONS
*
* OPERATION
*
* INPUT
*
* OUTPUT
*    WRITING OF TEXT IN OUTPUT WQES.
*
* EXTERNAL REFERENCES
*         NONE.
*
* EXITS, NORMAL
*
* EXITS, ERROR
*         NONE.
*
* TABLES/WORK AREAS
*
* ATTRIBUTES
*    REFRESHABLE, PRIVILEGED, TYPE 4 SVC.
*
* CHARACTER CODE DEPENDENCY
*    NONE.
*
* NOTES
*    THE FOLLOWING FLAG BITS ARE USED:
*       THE ACTION COLUMN INDICATES WHETHER THE BIT IS TURNED ON, OFF
*       OR JUST TESTED BY THIS MODULE.
*
*         NAME         ACTION                 FUNCTION
         EJECT
**************REGISTER EQUATES*******************
*
R0PARM   EQU   0                   GETMAIN-FREEMAIN PARAMETER MB
R1PARM   EQU   1                   PARAMETER REGISTER
R2CXSA   EQU   2                   CXSA BASE REGISTER
R3WORK   EQU   3                   WORK REGISTER
R3WQE    EQU   3                   WQE POINTER
R4CCW    EQU   4                   CCW POINTER
R5WQETXT EQU   5                   WQE TEXT POINTER
R6WORK   EQU   6                   WORK REGISTER
R6LENGTH EQU   6                   LENGTH OF TEXT
R7WORK   EQU   7                   WORK REGISTER
R7TCB    EQU   7                   TCB POINTER
R8RTRN   EQU   8                   RETURN REG FOR SUBROUTINES
R8WORK   EQU   8                   WORK REGISTER
R9DCB    EQU   9                   DCB BASE REGISTER
RAUCM    EQU   10                  UCM BASE REGISTER
RBUCME   EQU   11                  UCM ENTRY BASE REGISTER
RCBASE   EQU   12                  PROGRAM BASE REGISTER
RDMAJOR  EQU   13                  POINTER TO MAJOR WQE
RDQUEUE  EQU   13                  OUTPUT QUEUE POINTER
RERTRN   EQU   14                  MAIN LINE RETURN REGISTER
RFWORK   EQU   15                  WORK REGISTER
         EJECT
         ENTRY IGC5W07B            ALIAS NAME FOR IEECVETW
IGC5W07B EQU   *                   ONLY ENTRY POINT
         BALR  RCBASE,0            SET UP BASE REGISTER
         USING ETWBASE,RCBASE      AND TELL ASSEMBLER
ETWBASE  B     BEGIN               BRANCH AROUND EYECATCHER   MB Y02958
ICATCH   DC    C'IEECVETW, ALIAS IGC5W07B'                    MB Y02958
         DC    C'&SYSDATE',CL40' '                            MB Y02958
BEGIN    LR    R2CXSA,R1PARM       SAVE CXSA POINTER          MB Y02958
         USING CXSA,R2CXSA
         ST    RERTRN,CSAXA        SAVE RETURN ADDRESS        MB Y02958
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDRESS
         BZ    NOESTAE             IF NONE, SKIP SETUP
         USING PARMLIST,R6WORK     PARMLIST ADDRESSABILITY
         LA    R7WORK,ETWRTY       GET ETW'S ADDRESS
         C     R7WORK,PARMRTAD     IS OUR RETRY ALREADY IN LIST        *
                                                             JE @YM8452
         BE    NOESTAE             YES, BYPASS SETUP         JE @YM8452
         MVC   CSAXB(8),RELEASED   SET UP LOCKING SBRTN      JE @YM8452
         MVC   CSANAME(8),PARMRTAD SAVE RETRY ADDRESSES
         ST    R7WORK,PARMRTAD     SET IT UP
         DROP  R6WORK
NOESTAE  EQU   *
         L     RBUCME,CSAUCM       POINT TO UCM ENTRY
         USING UCMLIST,RBUCME
         L     RAUCM,CSACTLM       SET UCM BASE
         USING UCM,RAUCM
         L     R9DCB,UCMDCB        POINT TO DCB (IF PRESENT)
         USING IHADCB,R9DCB                                   MB Y02958
         LA    RFWORK,GETLOCK      ADDRESS GETLOCK SUROUTINE  MB Y02958
         LR    R1PARM,R2CXSA       PASS CXSA
         BALR  RERTRN,RFWORK       OBTAIN LOCKS AND INITIALIZE ADCONS
         SPACE 5
TESTCLOS TM    UCMSTS,UCMCF        CLOSE REQUEST?
         BZ    TESTOPEN             NO, TEST FOR OPEN
         TM    UCMSTS,UCMPF        IS OUTPUT PENDING
         BNO   CLOSE                NO, GO AHEAD AND CLOSE
*                                   YES, HANDLE OUTPUT FIRST
TESTOPEN TM    UCMSTS,UCMTA        OPEN REQUEST?
         BO    OPEN                 YES, GO DO IT
TESTBUSY EQU   *
         TM    UCMSTS,UCMBF        IS DEVICE BUSY
         BNO   TESTOUT               NO, CHECK FOR OUTPUT
TESTIO   TM    UCMECB,GOODIO       WAS I/O SUCCESFUL
         BZ    EXIT                NOT EVEN COMPLETE YET
         BNO   SWITCHEX            NO, SWITCH CONSOLES
ENDIO    XC    UCMECB,UCMECB       YES, CLEAR ECB
         NI    UCMSTS,X'FF'-UCMBF  TURN OFF BUSY FLAG
         SPACE 5
PMFWQE   EQU   *
         L     RDQUEUE,UCMWLAST    GET POINTER TO LAST OUTPUT
*                                       QUEUE ENTRY SERVICED
         USING CQE,RDQUEUE         BASE FOR CONSOLE Q ENTRY   MB Y02958
         LTR   RDQUEUE,RDQUEUE     HAS K C,D,ID ALLOWED
*                                  A PURGE TO BE DONE
         BZ    PMFWQEND            YES, RESTORE FOR WTO
         TM    CQEFLAG,CQEMAJOR    MLWTO                      MB Y02958
         BNO   PMFWQEN1            NO
         TM    UCMSTS,UCMTC        HAS THIS MLWTO BEEN CANCELLED
         BNO   PMF1                YES, REDUCE USE COUNT
         USING WQE,R3WQE
         L     R3WQE,CQEWQE        GET BUFFER POINTER         MB Y02958
         LA    R3WQE,0(R3WQE)      BUFFER POINTED TO BY R3WQE IS
*                        THE MAJOR WHICH MAY OR MAY NOT HAVE JUST
*                        BEEN WRITTEN.
*                        UCMMLAST POINTS TO THE MINOR HALF
*                        CONTAINING THE LINE JUST WRITTEN, IF
*                        ADDRESS EXISTS.
         NC    UCMMLAST(N4),UCMMLAST   MINOR JUST WRITTEN
         BNZ   PMF1                      YES
PMF0     EQU   *
         TM    WMJMLTYP,WMJMLTYD   END INDICATOR IN MAJOR
         BO    PMFWQEND            YES, PURGE
         TM    WMJMMLW,WMJMMLWH    ANY MINORS EXIST
         BO    MRETURN             NO, RETURN
         NI    CQEFLAG,X'FF'-CQEATTOP TURN OFF FLAG           MB Y02958
         MVC   UCMMLAST(N4),WMJMMIN   NEXT LINE TO BE WRITTEN
         B     PMLW3               WRITE LINE
PMF1     EQU   *
         L     R3WQE,UCMMLAST      PT TO HALF WITH WRITTEN LN
         SR    R6WORK,R6WORK       CLEAR REGISTER
         IC    R6WORK,WMNMUC1      GET USE COUNT
         BCTR  R6WORK,0            REDUCE BY ONE
         STC   R6WORK,WMNMUC1      STORE COUNT
         TM    UCMSTS,UCMTC        MLWTO CANCELLED
         BNO   PMFWQEND            YES, PURGE
         LTR   R6WORK,R6WORK       IS COUNT ZERO
         BNZ   PMF2                 NO
         L     RFWORK,0(RDQUEUE)   POINT TO MAJOR
         OI    N4(RFWORK),WMJMMLWG TELL DEQ TO CHECK THIS CHAIN
         OI    UCMSTS,UCMTB        TELL DEQ TO CHECK MY QUEUE
PMF2     EQU   *
         TM    WMNMLT1,WMNMLT1D    END INDICATOR IN THIS LINE
         BO    PMFWQEND            YES, PURGE
PMF3     EQU   *
         L     R3WQE,WMNMNX1-1     BASE FOR NEXT MINOR        MB  M2184
         LA    R3WQE,0(R3WQE)      IGNORE USE COUNT           MB  M2523
         LTR   R3WQE,R3WQE         NEXT LINE EXIST            MB  M2184
         BZ    MRETURN             NO, RETURN                 MB  M2184
         NC    WMNMLT1,WMNMLT1     THIS MINOR BUILT YET       MB  M2184
         BZ    MRETURN             NO,RETURN                  MB  M2184
         ST    R3WQE,UCMMLAST      NEXT LINE TO WRITE         MB  M2184
         B     PMLW3               WRITE LINE
PMF4     EQU   *
         L     R3WQE,UCMMLAST      ADDRESS LAST MINOR
         LTR   R3WQE,R3WQE         WAS LAST WRITE A MAJOR
         BNZ   PMF3                NO GET NEXT LINE POINTER
PMF5     EQU   *
         L     RDQUEUE,UCMWLAST    POINT TO ENTRY
PMF6     EQU   *
         L     R3WQE,CQEWQE        GET MAJOR POINTER          MB Y02958
         LA    R3WQE,0(R3WQE)      CLEAR OUT FLAGS
         B     PMF0                WORK WITH MAJOR
MRETURN  EQU   *
         OI    UCMSDS5,UCMSDS5A    WAITING FOR MORE LINES
         NI    UCMSTS,X'FF'-UCMPF  LOCK OUT OTHER OUTPUT
         B     EXIT                RETURN TO MCS
COMEBACK EQU   *
         NI    UCMSDS5,X'FF'-UCMSDS5A   NO LONGER WAITING
         L     RDQUEUE,UCMWLAST    POINT TO MAJOR ENTRY
         TM    CQEFLAG,CQEATTOP    START AT TOP OF CHAIN      MB Y02958
         BNO   PMF4                NO, PROCEED NORMALLY
         NI    CQEFLAG,X'FF'-CQEATTOP TURN OFF START-AT-TOP
         B     PMF6                START AT TOP
HCOPY    EQU   *        TEST FOR HARDCOPYING PURGED MESSAGES  MB Y02958
         TM    CQEFLAG,CQEMLQHC    QUEUED FOR HARDCOPY        MB Y02958
         BNO   PMFWQEND            NO, TREAT AS IO COMPLETE   MB Y02958
         TM    WQEXA,WQEQFHC       ISSUES FOR HARDCOPY        MB Y02958
         BNO   PMFWQEND            NO, TREAT AS IO COMPLETE   MB Y02958
         TM    WQEAVAIL,WQEBUFC    ALREADY GONE OUT           MB Y02958
         BO    FOUNDML             YES, TEST FOR MLWTO        MB Y02958
PMFWQEND EQU   *
         NI    UCMSTS,X'FF'-UCMTC  NO LONGER WORKING
PMFWQEN1 EQU   *
         OI    CQEFLAG,CQEAVAIL    FLAG AS NO LONGER NEEDED   MB Y02958
         NI    CQEFLAG,X'FF'-CQEENTR AND NOT A VALID ENTRY    MB Y02958
         OI    UCMSTS,UCMTB        INDICATE DEQUEUE NEEDED
TESTOUT  TM    UCMSTS,UCMPF        IS OUTPUT PENDING
         BZ    EXIT                NO, RETURN TO MCS
NXTLINE  TM    UCMSTS,UCMTC        IS MLWTO IN PROGRESS
         BO    COMEBACK
         SPACE 5
PMOUTPUT EQU   *
         L     RDQUEUE,UCMWLAST    GET PTR TO LAST WQE PTR
         LTR   RDQUEUE,RDQUEUE     IS THERE ANY
         BNE   TESTLAST                 YES GO TEST IT
         L     RDQUEUE,UCMOUTQ     TRY THE OUTPUT QUEUE PTR
TEST0    LTR   RDQUEUE,RDQUEUE     IS ANYTHING THERE
         BZ    ENDOFQ               NO, NO MORE QUEUE
TESTLAST TM    CQEFLAG,CQEENTR     IS THIS A VALID ENTRY      MB Y02958
         BO    FOUND                   YES
         TM    CQEFLAG,CQEEOB      IS THIS LINK OR END OF QUEUE  Y02958
         BO    LINK                    LINK
         BM    ENDOFQ                  END OF Q
         LA    RDQUEUE,N4(RDQUEUE) LOOK AT NEXT ENTRY
         B     TESTLAST            CHECK FOR LAST ENTRY
ENDOFQ   EQU   *
         NI    UCMSTS,X'FF'-UCMPF  TURN OFF OUTPUT FLAG
         B     TESTCLOS            RETURN CHECKING FOR CLOSE
LINK     L     RDQUEUE,CQEWQE      GET PTR TO NEXT BLOCK      MB Y02958
         B     TESTLAST            TEST NEXT WQE POINTER
FOUND    EQU   *
         LA    RDQUEUE,0(RDQUEUE)  ZERO HIGH ORDER BYTE
         ST    RDQUEUE,UCMWLAST    UPDATE LAST POINTER
         L     R3WQE,CQEWQE        GET WQE POINTER            MB Y02958
         TM    WQEXA,WQEPURGE      IS THIS WQE PURGED
         BO    HCOPY               YES, CHECK FOR HARDCOPY    MB Y02958
         OI    WQEAVAIL,WQEBUFC    READY FOR HARDCOPY         MB Y02958
FOUNDML  EQU   *                   CHECK FOR MLWTO            MB Y02958
         TM    CQEFLAG,CQEMAJOR    MLWTO                      MB Y02958
         BNO   NOTMLW              NO, ADJUST LENGTH          MB Y02958
         OI    UCMSTS,UCMTC        NOW WORKING ON MLWTO
         XC    UCMMLAST(N4),UCMMLAST   ZERO MINOR PTR
NOTMLW   EQU   *
         LH    R6LENGTH,WMJMTXTL   TEXT LENGTH IN WQE         MB Y02958
         LA    R6LENGTH,WQETXT(R6LENGTH) END OF TEXT TO WRITE MB Y02958
         LA    R5WQETXT,WQERR      LOCATE HARDCOPY TEXT       MB Y02958
         TM    CQEFLAG,CQEMLQHC    HARDCOPY FORMAT            MB Y02958
         BO    FOUND1              SET UP CCW                 MB Y02958
         LA    R5WQETXT,WQETXT     LOCATE NORMAL TEXT         MB Y02958
         TM    UCMDISP2,UCMDISPI+UCMDISPJ TEXT MODIFIED       MB Y02958
         BZ    FOUND1              NO, SET UP CCW             MB Y02958
         LA    R5WQETXT,WQETS      LOCATE TIME STAMP          MB Y02958
         TM    UCMDISP2,UCMDISPI   WRITE FROM TIME STAMP      MB Y02958
         BO    FOUND1              YES, SET UP CCW            MB Y02958
         LA    R5WQETXT,WQEJOBNM   LOCATE JOBNAME             MB Y02958
FOUND1   ST    R5WQETXT,DMCWRITE   POINT CCW TO TEXT          MB Y02958
         SR    R6LENGTH,R5WQETXT   GET LENGTH TO WRITE        MB Y02958
         STH   R6LENGTH,DMCWNBR    INSERT BYTE COUNT
         SR    R7WORK,R7WORK       STORE ZEROS
         ST    R7WORK,UCMECB       INTO THE ECB
         OI    UCMSTS,UCMBF        INDICATE CONSOLE BUSY
         L     RFWORK,CSAXC        ADDRESS FREELOCK SUBROUTNE MB Y02958
         LR    R1PARM,R2CXSA       PASS CXSA ADDRESS          MB Y02958
         BALR  RERTRN,RFWORK       RELEASE LOCKS FOR EXCP     MB Y02958
         EXCP  DMIOB               GET THE IO STARTED         MB Y02958
         L     RERTRN,CSAXA                                   MB Y02958
         BR    RERTRN              DONE FOR NOW
         SPACE 5
PMLW3    EQU   *
         L     RDQUEUE,UCMWLAST    GET LIST POINTER
         L     R3WQE,UCMMLAST      MINOR HALF TO BE WRITTEN
         SR    R6LENGTH,R6LENGTH   CLEAR LENGTH REG
         IC    R6LENGTH,WMNMTL1    GET TEXT LENGTH
         LTR   R6LENGTH,R6LENGTH   ZERO LENGTH, NULL LINE
         BZ    PMFWQE              YES, HANDLE AS I/O COMPLETE
         LA    R5WQETXT,WMNMTXT1   POINT TO REGULAR TEXT
         AR    R6LENGTH,R5WQETXT   END OF TEXT TO WRITE       MB Y02958
         TM    CQEFLAG,CQEMLQHC    HARDCOPY CONSOLE MESSAGE   MB Y02958
         BNO   FOUND1              NO, WRITE LINE             MB Y02958
         LA    R5WQETXT,WMNMHCT1   POINT TO TEXT
         B     FOUND1              WRITE LINE
OPEN     EQU   *
         L     R6WORK,UCMUCB       GET UCB ADDRESS
         USING UCBOB,R6WORK
         TM    UCBSTAT,UCBALOC     IS DEVICE IN ALLOCATION
         BO    EXIT                YES RETURN
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDRESS
         BZ    OPNO                IF NONE, SKIP SETUP
         USING PARMLIST,R6WORK     PARMLIST ADDRESSABILITY
         OI    PARMFTPT,UCMTA      INDICATE OPENING
         DROP  R6WORK
OPNO     EQU   *
         L     RFWORK,CSAXC      ADDRESS FREELOCK SUBROUTINE
         LR    R1PARM,R2CXSA     CXSA ADDRESS IN REG 1
         BALR  RERTRN,RFWORK     RELEASE LOCKS FOR SVC'S
       GETMAIN R,SP=255,LV=DMCORE
         LR    R9DCB,R1PARM
         ST    R9DCB,UCMDCB        STORE DCB ADDRESS IN UCM
         USING IHADCB,R9DCB
         MVC   IHADCB(DMCORE),DMDCB
*                                      RELOCATE POINTERS.
         MVI   DMCREAD,0            *** GRAPHICS BYTE
         EJECT
         GETMAIN R,SP=255,LV=PNCORE
         LR    R8WORK,R1PARM       BASE OPEN BLOCKS.
         USING PNOPEND,R8WORK
         XC    PNOPEND(PNCORE),PNOPEND
         SR    R1PARM,R1PARM       CLEAR FOR IC INSTRUCTION
         IC    R1PARM,UCMID        GET CONSOLE I.D. IN BINARY
         CVD   R1PARM,PNWORKD      CONVERT TO PACKED DECIMAL
         UNPK  PNWORKD(N5),PNWORKH4(N3)
         MVC   DCBDDNAM(L'BASENAM),BASENAM CONSTANT PART OF DDNAME
         MVC   DCBDDNAM+L'BASENAM(N3),PNWORKD REST OF NAME
         MVC   JFCBDSNM(L'PNDSN),PNDSN
         MVC   JFCBDSNM+8(36),JFCBDSNM+7
         OI    JFCBTSDM,JFCTTR+JFCNWRIT+JFCNDSCB+JFCNDCB+JFCPAT
         LA    R7WORK,JFCB
         STCM  R7WORK,M7,PNXLST+N1
         OI    PNXLST,LASTNTRY+EXITJFCB
         LA    R7WORK,PNXLST
         STCM  R7WORK,M7,DCBEXLST+N1
         EJECT
         OPEN  ((R9DCB),INOUT),TYPE=J,MF=(E,PNJEF)
         LR    R1PARM,R8WORK       OPEN BLOCKS PTR.
         FREEMAIN R,SP=255,LV=PNCORE,A=(1)
         DROP  R8WORK
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDRESS
         BZ    OPENRCVR            IF NONE, SKIP SETUP
         USING PARMLIST,R6WORK     PARMLIST ADDRESSABILITY
         NI    PARMFTPT,N255-UCMTA      INDICATE OPENED
         DROP  R6WORK
OPENRCVR EQU   *
         XC    DCBEXLST+N1(N3),DCBEXLST+N1
         L     RFWORK,CSAXB      ADDRESS GETLOCK SUBROUTINE
         LR    R1PARM,R2CXSA       PASS CXSA ADDRESS IN REG 1
         BALR  RERTRN,RFWORK       OBTAIN LOCKS TO RESET UCM
         L     R6WORK,UCMUCB       POINT TO UCB
         USING UCBOB,R6WORK
         L     R6WORK,UCBEXTPT     BASE UCB EXTENSION
         USING UCBCMEXT,R6WORK
         MVC   DMXATI(N1),UCBATI   SAVE ATTN INDEX
         MVI   UCBATI,0            ZERO ATTENTION INDEX FOR PRINTER
         MVI   DCBIFLGS,0          USE STD ERP
         OI    UCMATR,UCMUF        TURN ON ACTIVE BIT
         NI    UCMSTS,N255-UCMTA   TURN OFF OPEN PENDING
         LA    R3WORK,DMIOB        PUT IOB POINTER
         ST    R3WORK,DCBIOBAD     IN DCB
         LA    R3WORK,UCMECB       PUT ECB POINTER
         ST    R3WORK,DMIECBP      IN IOB
         LA    R3WORK,DMCTRA       PUT CCW AREA POINTER
         ST    R3WORK,DMICPA       IN IOB
         ST    R9DCB,DMIDCB        PUT DCB POINTER IN IOB
         MVI   DMXEM,EMCHAR        END-OF-MESSAGE CHARACTER
         MVI   DMXWCC,WCCHAR       WRITE-CONTROL CHARACTER
         MVC   DMCTRA(N8),MODELCCW INITIALIZE THE ENTIRE
         MVC   DMCWRITE(N16),DMCTRA CCW AREA
         LA    R3WORK,DMXWCC       LOCATE WRITE CONTROL CHAR
         STCM  R3WORK,M7,DMCTRA+N1 WRITE-CTL-CHAR CCW BUILT
         LA    R3WORK,DMXEM        ADDRESS END OF MSG CHAR
         STCM  R3WORK,M7,DMCNOP+N1 IN LAST CCW
         MVI   DMCNOP+N4,0         KILL CHAINING
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFULL
         BNO   SWITCHEX            NO,CALL CONSOLE SWITCH
         B     TESTBUSY            SEE IF OUTPUT IS READY
         SPACE 5
CLOSE    EQU   *
         LTR   R9DCB,R9DCB         IS A DCB PRESENT
         BZ    ENDCLS              NO, EXIT
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDRESS
         BZ    CLSNO               IF NONE, SKIP SETUP
         USING PARMLIST,R6WORK     PARMLIST ADDRESSABILITY
         OI    PARMFTPT,UCMCF      INDICATE CLOSING
         DROP  R6WORK
CLSNO    EQU   *
         L     R6WORK,UCMUCB       GET UCB ADDRESS
         USING UCBOB,R6WORK
         L     R6WORK,UCBEXTPT            BASE UCB EXTENSION
         USING UCBCMEXT,R6WORK
         MVC   UCBATI,DMXATI  RESTORE ATTENTION TABLE INDEX
         DROP  R6WORK
         MVI   DMX4,DMX4C          INDICATE END OF REMOTE PARMLIST
         L     RFWORK,CSAXC        ADDRESS FREELOCK SUBROUTINE
         LR    R1PARM,R2CXSA       CXSA ADDRESS IN REG 1
         BALR  RERTRN,RFWORK       RELEASE LOCKS FOR SVC'S
         LA    R1PARM,DMX4
         CLOSE   ((R9DCB)),MF=(E,(1))
         LR    R1PARM,R9DCB
         FREEMAIN R,SP=255,LV=DMCORE,A=(1)
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDR          JE YM6718
         BZ    ENDCLS              NOT TEHER, BYPASS          JE YM6718
         NI    PARMFTPT-PARMLIST,XFF-UCMCF TURN OFF CLOSE PENDJE YM6718
ENDCLS   EQU   *
         L     RFWORK,CSAXB      ADDRESS GETLOCK SUBROUTINE
         LR    R1PARM,R2CXSA       PASS CXSA ADDRESS IN REG 1
         BALR  RERTRN,RFWORK     OBTAIN LOCKS TO RESET UCM
         XC    UCMECB,UCMECB           CLEAR ECB.
         XC    UCMDCB,UCMDCB           CLEAR DCB PTR.
         NI    UCMSTS,N255-UCMBF-UCMCF  NOT BUSY, CLOSED
         L     RERTRN,CSAXA            RESTORE RETURN REG.
         L     R6WORK,UCMUCB           GET TO ASSOCIATED UCB
         USING UCBOB,R6WORK
         LR    R3WORK,R2CXSA       SAVE CSA PTR SINCE NIL MACRO        *
                                   CLOBBERS GPR 2             JE YM8416
         TM    UCBSTAT,UCBCHGS
         BZ    DEVSTAT
*
*  WARNING --- NIL MACRO CLOBBERS GPRS 0, 1, 2                JE YM8416
*
         NIL   UCBSTAT,N255-UCBONLI-UCBCHGS-UCBALOC-UCBSYSR-UCBDADI,REF*
               =UCBOB
         B     CONTINUE
DEVSTAT  NIL   UCBSTAT,N255-UCBALOC-UCBSYSR-UCBDADI,REF=UCBOB
CONTINUE NI    UCMATR,N255-UCMAT04-UCMUF
         LR    R2CXSA,R3WORK       RESTORE CSA PTR SINCE NIL MACRO     *
                                   CLOBBERS GPR 2             JE YM8416
EXIT     EQU   *
         L     RERTRN,CSAXA        RESTORE RETURN ADDRESS
         LR    R1PARM,R2CXSA       CXSA ADDRESS IN REG 1
         L     RFWORK,CSAXC        ADDRESS FREELOCK ROUTINE
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDR          JE YM6718
         BZ    EXIT1               NOT TEHER                  JE YM6718
         USING PARMLIST,R6WORK
         MVC   PARMRTAD(8),CSANAME RESTORE FIELD              JE YM6718
EXIT1    MVC   CSANAME(8),UCMNAME  MODULE NAME                JE YM6718
         BR    RFWORK              RELEASE LOCKS AND EXIT
SWITCHEX EQU   *
         MVI   CSACODE,0           INDICATE CONSOLE SWITCH
OPENSWCH EQU   *         CALL TO SWITCH AFTER OPEN
         LR    R1PARM,R2CXSA       PASS CXSA IN REG 1
         L     RFWORK,CSAXC        ADDRESS FREELOCK SUBROUTINE
         BALR  RERTRN,RFWORK       RELEASE LOCKS
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDR          JE YM6718
         BZ    SWCHNO              NOT THERE                  JE YM6718
         MVC   PARMRTAD(8),CSANAME RESTORE FILED              JE YM6718
SWCHNO   MVC   CSANAME(8),UCMNAME  MODULE NAME                JE YM6718
         MVC   CSANAME+N3(N2),PMXTRNL ADJUST NAME IN CXSA
         L     RERTRN,CSAXA        RESTORE RETURN ADDRESS
         L     RFWORK,UCMSWCH      SWITCH ENTRY POINT
         BR    RFWORK              CALL CONSOLE SWITCH
         EJECT
*
*        IEECVETW ESTAE RECOVERY ROUTINE
*
ETWRTY   DS    0D
         BALR  RFWORK,0            SET BASE                   JE YM6718
         USING *,RFWORK                                       JE YM6718
         L     RCBASE,ETWAD        GET REAL BASE              JE YM6718
         USING ETWBASE,RCBASE      TELL ASSEMBLER             JE YM6718
         DROP  RFWORK
         USING PSA,0               ADDRESS LOW CORE           JE YM6718
         L     RFWORK,PSATOLD      GET TCB ADDRESS            JE YM6718
         DROP  0
         USING TCB,RFWORK                                     JE YM6718
         L     RFWORK,TCBRBP       MY SVRB ADDR               JE YM6718
         USING RBSECT,RFWORK
         LA    R2CXSA,RBEXSAVE     RESOTRE CXSA ADDR        JE @ZA00539
         DROP  RFWORK
         L     RBUCME,CSAUCM       RESTORE UCME ADDR          JE YM6718
         L     RAUCM,CSACTLM       RESTORE UCM BASE           JE YM6718
         L     R9DCB,UCMDCB        RESTORE DCB BASE           JE YM6718
         ICM   R6WORK,MF,CSANPTR   GET PARMLIST ADDR          JE YM6718
         BZ    SWITCHEX            NOT THER GET OUT           JE YM6718
         USING PARMLIST,R6WORK
*
         TM    PARMFTPT,UCMTA      OPEN PENDING               JE YM6718
         BNO   TRYCLOSE            NO, TEST CLOSE             JE YM6718
         MVI   PARMFTPT,0          CLEAR FOOTPRINTS           JE YM6718
         LTR   R9DCB,R9DCB         ANY DCB THERE              JE YM6718
         BZ    SWITCHEX            NO, SWITCH CONSOLES        JE YM6718
         B     OPENRCVR            YES, CONTINUE OPEN         JE YM6718
*
TRYCLOSE TM    PARMFTPT,UCMTC      CLOSE PENDING              JE YM6718
         BNO   TRYBUSY             NO, TEST FOR EXCP          JE YM6718
         MVI   PARMFTPT,0          CLEAR FOOTPRINTS           JE YM6718
         B     ENDCLS              GO CLEANUP CLOSE           JE YM6718
*
TRYBUSY  TM    UCMSTS,UCMBF       EXCP IN PROCESS             JE YM6718
         BNO   SWITCH              NO, SWITCH CONSOLES         @ZA08139
         NI    UCMSTS,XFF-UCMBF    TURN OFF BUSY              JE YM6718
         NI    UCMDEVC,XFF-UCMDEVE TURN OFF I/O COMPLETE     JE @YM8452
SWITCH   B     SWITCHEX            SWITCH CONSOLES             @ZA08139
*
***********************************************************************
*
*      FIVE LINES OF CODE DELETED HERE TO FORCE IEECVETW TO    @ZA08139
*      SWITCH CONSOLES AFTER ANY ERROR CONDITION THAT          @ZA08139
*      PREVIOUSLY CAUSED RETURN TO IEAVVCTR WITHOUT CLEANING   @ZA08139
*      UP THE ERROR CONDITION.
***********************************************************************
         EJECT
*
*        OBTAIN LOCKS SUBROUTINE
*
GETLOCK  EQU   *
         USING *,RFWORK          SUBROUTINE ADDRESSABILITY BASED ON
*                                  ENTRY REGISTER
         DROP  R2CXSA              DROP OLD CXSA BASE
         USING CXSA,R1PARM         REG 1 ADDRESSES THE CXSA AS
*                                  AN INPUT PARAMETER
         STM   11,14,CSAXB         SAVE REGS OVER SETLOCK CALL
GETLOCL  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(WQE,IEECVETW(FREELOCL))
GETCMS   SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          *
               RELATED=(UCM,IEECVETW(FREECMS))
         L     RAUCM,CSACTLM       GET UCM                    JE YM6718
         L     11,UCMFRRAD         GET FRR ADDR               JE YM6718
         USING PSA,0
GETFRR   SETFRR A,FRRAD=(11),PARMAD=(13),WRKREGS=(12,13),              *
               RELATED=(CMSLOCK,IEECVETW(FREEFRR))            JE YM6718
         ST    13,CSADCBP                                     JE YM6718
         USING PARMLIST,13
         ICM   12,15,CSANPTR       GET ESTAE PARMLIST PTR    JE @YM8452
         BZ    FRRA                NOT THERE                 JE @YM8452
         MVC   PARMLIST(PARMSIZE),0(12) COPY ESTAE PARMLIST TO         *
                                   FRR PARMLIST              JE @YM8452
FRRA     MVC   PARMID,SVC72ID                                 JE YM6718
         LM    11,14,CSAXB         RESTORE REGS AFTER SETLOCK
GETEXIT  MVC   CSAXB(N8),OBTAINED  RESET SUBROUTINE ADDRESSES
         LR    RFWORK,RERTRN     COPY EXIT ADDRESS
         BR    RERTRN              EXIT FROM GETLOCK SUBROUTINE
         SPACE 5
*
*        RELEASE LOCKS SUBROUTINE
*
FREELOCK EQU   *
         USING *,RFWORK          SUBROUTINE ADDRESSABILITY BASED ON
*                                  ENTRY REGISTER
         USING CXSA,R1PARM         REG 1 ADDRESSES THE CXSA AS
*                                  AN INPUT PARAMETER
         STM   11,14,CSAXB         SAVE REGS OVER SETLOCK CALL
FREEFRR  SETFRR D,WRKREGS=(12,13),RELATED=(CMSLOCK,IEECVETW(GETFRR))
*                                                             JE YM6718
         XC    CSADCBP,CSADCBP     CLEAR                      JE YM6718
FREECMS  SETLOCK RELEASE,TYPE=CMS,                                     *
               RELATED=(UCM,IEECVETW(GETCMS))
FREELOCL SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(WQE,IEECVETW(GETLOCL))
         LM    11,14,CSAXB         RESTORE REGS AFTER SETLOCK
FREEXIT  MVC   CSAXB(N8),RELEASED  RESET SUBROUTINE ADDRESSES
NOOPLOCK LR    RFWORK,RERTRN     COPY EXIT ADDRESS
         BR    RERTRN              EXIT FROM FREELOCK SUBROUTINE
         SPACE 5
*
*   CONSTANTS
*
RELEASED DC    A(GETLOCK)
OBTAINED DC    A(NOOPLOCK)
         DC    A(FREELOCK)
         EJECT
**************** CONSTANTS *******************
MODELCCW CCW   ERWRIT,0,CHAINDT,N1
BASENAM  DC    C'IEAVM'            CONSTANT PART OF CONSOLE DDNAME
PMXTRNL  DC    CL2'04'             EXTERNAL PROCESSOR NAME.
PNDSN    DC    C'CONSOLE '         DSNAME FOR JFCB
SVC72ID  DC    CL4'VCTR'        SVC 72 ID                     JE YM6718
ETWAD    DC    A(ETWBASE)
         EJECT
**************** EQUATES *********************
EMCHAR   EQU   X'19'               END-OF-MESSAGE CHARACTER
WCCHAR   EQU   X'C8'               WRITE-CONTROL CHARACTER
CHAINDT  EQU   X'80'               CHAIN DATA FLAG
COUNT    EQU   7                   DISP TO COUNT FIELD IN CCW
ERWRIT   EQU   X'05'               ERASE-WRITE CCW CODE
FLAGS    EQU   4                   DISP TO FLAG FIELD IN CCW
FOURMULT EQU   2                   MULTIPLY BY FOUR
GOODIO   EQU   X'7F'               POST CODE FROM IOS
IOCOMP   EQU   X'40'               POST CODE FROM IOS
NEXT     EQU   16                  DISP TO NEXT VARIABLE CCW
NOTHING  EQU   X'00'               NULL
N1       EQU   1                   NUMBER
N2       EQU   2                   NUMBER
N3       EQU   3                   NUMBER
N4       EQU   4                   NUMBER
N5       EQU   5                   NUMBER
N8       EQU   8                   NUMBER
N11      EQU   11                  NUMBER
N12      EQU   12                  NUMBER
N16      EQU   16                  NUMBER
N20      EQU   20                  NUMBER
N24      EQU   24                  NUMBER
N120     EQU   120                 NUMBER
N128     EQU   128                 NUMBER
N255     EQU   255
M7       EQU   7                   STORE CHARACTER MASK       MB Y02958
MF       EQU   15                  INSERT CHARACTER MASK
XFF      EQU   X'FF'
         TITLE 'IEECVETW     DATA CONTROL BLOCKS'
         IEEUCDX
DMXATI   EQU   DMX+1               FOR SAVING UCBATI
DMXEM    EQU   DMX+2               END OF MESSAGE CHARACTER
DMXWCC   EQU   DMX+3               WRITE CONTROL CHARACTER
         TITLE 'IEECVETW                   OPEN-JFCB'
*                       DEFINITION OF DYNAMIC CORE FOR CONSOLE OPEN,
PNOPEND  DSECT
JFCB     DS    0D
         IEFJFCBN ,
*                            OPENJ E-FORM SLOT.
PNJEF    DC    X'80'              LAST ENTRY.
         DC    AL3(0)             DCB PTR.
         SPACE
*                            OPENJ JFCB EXLST PTR.
LASTNTRY EQU   X'80'               LAST ENTRY
EXITJFCB EQU   X'07'               JFCB CODE
PNXLST   DC    X'87'              LAST ENTRY AND JFCB 07 CODE.
         DC    AL3(0)                   JFCB PTR. DCBEXLST PTS HERE.
PNWORKD  DC    D'0'                DOUBLE WORD FOR CVD
         ORG   PNWORKD+6
PNWORKH4 DC    H'0'                LAST HALFWORD
PNWORKX  DC    X'0'                EXTRA BYTE FOR UNPK
PNCORE   EQU   *-PNOPEND            DYNAMIC CORE REQIREMENT.
         TITLE 'IEECVETW                OPEN/CLOSE   UCB'
UCBD     DSECT
         IEFUCBOB
         TITLE 'IEECVETW               CONSOLE QUEUE ENTRY'
         IHACTM  CQE
         TITLE 'IEECVETW               ESTAE RECOVERY WORKAREA'
         IHACTM  FTPT
         TITLE 'IEECVETW          COMM TASK EXTENDED SAVE AREA'
         IHACTM  CXSA
         TITLE 'IEECVETW                  FRR MAPPING'
         IHAFRRS
         TITLE 'IEECVETW                  WQE'
         IHAWQE  DSECT=YES
         TITLE 'IEECVETW                  UCM'
         IEECUCM  FORMAT=NEW
         TITLE 'IEECVETW            PREFIXED SAVE AREA'
         IHAPSA
         EJECT
         IKJTCB
         EJECT
         IHARB   DSECT=YES
          END
