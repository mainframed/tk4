IEAIPL   START 0
*0236020860                                                        INSS
*0236022000-025500                                                 1985
*0236149400-150000,153800,157200                                   0542
         ORG IEAIPL
         TITLE   'IEAIPL-IPL(INITIAL PROGRAM LOAD)'
*                                                                     *
*TITLE IEAIPL  - IPL (INITIAL PROGRAM LOAD)                           *
*                                                                     *
* STATUS: 10-24-74                                                    *
*                                                                     *
*FUNCTION/OPERATION-   THE IPL PROGRAM INITIALIZES THE REGISTERS AND  *
*    CORE STORAGE AND LOADS THE RESIDENT NUCLEUS OF THE OPERATING     *
*    SYSTEM INTO CORE STORAGE.                                        *
*                                                                     *
*ENTRY POINTS-   IPL IS ENTERED ONLY THROUGH THE PSW WHICH IS LOADED  *
*    INTO LOCATION ZERO FROM THE SYSTEM RESIDENCE DEVICE BY THE IPL   *
*    HARDWARE CIRCUITRY WHICH INCLUDES THE EXECUTION OF THE IPL CCW'S *
*    AND THE IPL BOOTSTRAP.                                           *
*                                                                     *
*INPUT-     DIRECT ACCESS DEVICE CONTAINING IPL AND THE OPERATING     *
*    SYSTEM DATA SET.                                                 *
*           OPERATOR MAY STOP IPL PROGRAM ON AN ADDRESS COMPARE AND   *
*    THEN KEY IN A HEX CHARACTER TO CREATE A NON-STANDARD NUCLEUS NAME*
*           OPERATOR MAY STOP IPL PROGRAM ON AN ADDRESS COMPARE AND000B
*    THEN KEY IN A HEX CHARACTER TO LIMIT THE APPARENT MACHINE SIZE000B
*                                                                     *
*OUTPUT-  N/A    (NUCLEUS LOADED FROM DASD)                           *
*                                                                     *
*EXTERNAL ROUTINES-   N/A                                             *
*                                                                     *
*EXITS-NORMAL-    IPL BRANCHES TO THE NUCLEUS INITIALIZATION PROGRAM  *
*    (NIP) WHICH HAS BEEN LOADED BY IPL ALONG WITH THE REST OF THE    *
*    NUCLEUS CONTROL SECTIONS.  THE FINAL INITIALIZATION OF THE       *
*    SPECIFIC NUCLEUS LOADED IS DONE BY THE NIP PROGRAM.              *
*                                                                     *
*EXITS  -ERROR-    ERROR CONDITIONS RESULT IN A WAIT PSW BEING LOADED *
*    WITH THE FOLLOWING ERROR CODES STORED IN THE ADDRESS FIELD OF THE*
*    PSW FOR DISPLAY IN THE CONSOLE LIGHTS-                           *
*  ERROR CODE-  1  (0001)    I/O IS NOT OPERATIONAL.                  *
*               2  (0010)    I/O OPERATION IS NOT INITIATED. CSW IS   *
*                            STORED BUT UNIT IS NOT BUSY.             *
*               3  (0011)    I/O OPERATION IS NOT INITIATED. CSW IS   *
*                            NOT STORED AND THE CHANNEL IS NOT BUSY.  *
*               4  (0100)    CHANNEL IS NOT BUSY AND CSW IS NOT STORED*
*               5  (0101)    UNIT CHECK CONDITION IS INDICATED.       *
*               6  (0110)    ANY OF THE FOLLOWING CONDITIONS -        *
*                              PROGRAM CHECK                          *
*                              CHANNEL DATA CHECK                     *
*                              CHANNEL CONTROL CHECK                  *
*                              CHANNEL CHAINING CHECK                 *
*                              INTERFACE CONTROL CHECK                *
*               C  (1100)    SYS1.NUCLEUS DATASET IS NOT IN SCTR   AOS2
*                            (SCATTER) FORMAT.                     AOS2
*               E  (1110)    SYS1.NUCLEUS DATASET DSCB OR THE      AOS2
*                            IEANUC0X MEMBER NOT FOUND ON THE      AOS2
*                            IPL VOLUME.                           AOS2
*              18  (00011000) AVAILABLE SPACE FOR RLD RCDS HAS BEEN000B
*                            EXCEEDED.                                *
*              19  (00011001) UNEXPECTED PGM CHK INTERRUPT, IPL    000B
*                            CONTAMINATED.                            *
*                                                                     *
*TABLES/WORK AREA-   IPL READS THE TRANSLATION TABLE AND THE SCATTER  *
*    LIST DIRECTLY BEHIND THE END OF THE IPL PROGRAM.                 *
*          IPL THEN BUILDS 3 TABLES EACH EQUAL IN SIZE TO THE SIZE OF *
*    THE SCATTER LIST. THESE TABLES FOLLOW DIRECTLY AFTER THE SCATTER *
*    LIST AND ARE RESPECTIVELY THE SIZE TABLE, ADDRESS TABLE, AND THE *
*    RELOCATION FACTOR TABLE (RLF).  THESE TABLES ARE NECESSARY TO    *
*    RELOCATE THE ADDRESS CONSTANTS IN THE NUCLEUS IPL LOADS.         *
*          A 256 BYTE BUFFER (IEABUFER) IS INCLUDED WITHIN THE IPL    *
*    PROGRAM INTO WHICH THE CONTROL RECORDS ARE READ FROM THE SYSTEM  *
*    RESIDENCE DEVICE.                                                *
*                                                                     *
*ATTRIBUTES-   PRIVILEGED, DISABLED, READ ONLY.                       *
*                                                                     *
***********************************************************************
         EJECT
**                                                            ***
*   THE FOLLOWING ARE REG EQUATES USED BY THIS ROUTINE          *
**                                                            ***
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
***                                                           ***
*   THE FOLLOWING ARE LO CORE ABSOLUTE ADDRESS EQUATES          *
***                                                           ***
CAW      EQU   72
CSW      EQU   64
***                                                           ***
*   THE FOLLOWING ARE MISCELLANOUS EQUATES                      *
***                                                           ***
Q0       EQU   0
Q1       EQU   1
Q2       EQU   2
Q3       EQU   3
Q4       EQU   4
Q5       EQU   5
Q6       EQU   6
Q7       EQU   7
Q8       EQU   8
Q11      EQU   11                                                  AOS2
Q12      EQU   12
Q13      EQU   13
Q15      EQU   15                                               ZA01035
Q16      EQU   16
Q17      EQU   17
Q18      EQU   18
Q20      EQU   20
Q24      EQU   24
X40      EQU   X'40'
ECFCNTOP EQU   X'10'               MASK FOR CCW COUNT OP CODE
ECFDTACK EQU   X'08'               MASKS DATA CHK BIT IN SENSE
ECFTIC   EQU   X'08'               RESETS TIC CCW COMMAND
CCWSKIP  EQU   X'10'               MASKS CCW SKIP BIT
CCWDATCN EQU   X'80'               MASKS DATA CHN BIT IN CCW
SNSZEUSA EQU   X'35'               ZEUS-A SENSE BYTE ID
SNSZEUSC EQU   X'34'               ZEUS-C SENSE BYTE ID
         SPACE 2
READATA  EQU   X'06'                   READ DATA CCW COMMAND       AOS2
SCTRFMT  EQU   X'04'                   SCATTER FORMAT DSCB FLAG    AOS2
         SPACE 2
HIGH     EQU   30                                             BI A44954
INCR     EQU   256                                            BI A44954
ZERO     EQU   16                                             BI A44954
         EJECT
*  ****************    LOWER CORE    **********************************
*
*   LOW CORE IS CLEARED EXCEPT FOR IPL INITIAL PSW AND PC HANDLER.
*
         DC    X'00000000'             IPL PSW DISABLED,SUPV MODE
         DC    AL4(START)              LOC OF 1ST EXECUTABLE INSTRUCT
         DC    X'F100'                 LOCATIONS 8 AND 9           AOS2
         DC    47X'0000'               ZERO LOWER CORE             AOS2
         DC X'00000000'    PC NEW PSW ONLY ONE USED BY IPL
         DC AL4(IEAINT)     PCI HANDLER FOR IPL PRELUDE
         DC 2X'0000000000000000'   ZERO REST OF LOWER CORE
*   *********   IPL PRELUDE   *********
*                                                                     *
*  IPL PRELUDE CLEARS REGISTERS AND MAIN STORAGE, DETERMINES MACHINE
*  SIZE, SETS STORAGE KEYS TO SUPERVISOR'S KEY, AND DETERMINES NUCLEUS
*  LOADED.  ALL PC INTERRUPTS GO TO IEAINT TO THEN BRANCH RELATIVE TO
*  REGISTER 10 WHICH IS PRESET TO HANDLE THE NEXT EXPECTED PC INTERRUPT
*
START    BALR  15,0  FIRST EXEC INSTR IPL, WHERE MACH SHOULD BE STOPPED
         USING *,15
IEASTAR1 LM    R0,RE,ZERO             CLEAR GP REG            BI A44954
         LA 10,IEAPCRET               RETURN AFTER FIRST PC
************** NUCLEUS SELECTION, LIMITATION OF CORE SIZE *********000B
*
*   OPERATOR CAN SELECT AN ALTERNATE NUCLEUS TO BE LOADED BY IPL
*   1.  SET ADDR COMP SW TO STOP AT LOC 80 HEX WHICH IS FIRST
*  EXECUTABLE INSTRUCTION IN IPL PROGRAM, THEN START IPL.
*   2. WHEN MACHINE STOPS, OPERATOR STORES INTO LOC 8 A HEX CHARACTER
*  THAT WILL BE APPENDED TO THE STANDARD ROOT OF THE NUCLEUS NAME WHICH
*  IS ASSEMBLED IN IPL AT IEANUCY.
*   3.  ADDRESS COMPARE SWITCHES ARE RESET AND IPL PROGRAM STARTED .
*   4.  AFTER STOP THE CONTENTS OF LOC 8 ARE  MOVED TO IEANUC AND THEN
*  A COMPARE IS MADE TO SEE IF IEANUC IS STILL ZERO.  IF SO, THE
*  PREASSEMBLED NUCLEUS NAME IS USED, OTHERWISE , THE KEYED IN SUFFIX
*  IS ADDED TO IEANUCY AND THE IPL PROGRAM SEARCHES FOR A NUCLEUS WITH
*  THE NEW NAME.
*                                                                  000B
*******************************************************************000B
*                                                                  000B
*   OPERATOR CAN LIMIT APPARENT MACHINE SIZE BY THE FOLLOWING      000B
*  PROCEDURE:                                                      000B
*   1.  SET ADDRESS COMP SW TO STOP AT LOC 80 HEX WHICH IS FIRST   000B
*  EXECUTABLE INSTRUCTION IN IPL PROGRAM. LOAD IPL PROGRAM.        000B
*   2.  WHEN MACHINE STOPS, OPERATOR STORES INTO LOC 9 A HEX CHAR- 000B
*  ACTER. THE ACCEPTABLE HEX CHARACTERS AND THE CORRESPONDING      9715
*  MACHINE SIZES ARE LISTED BELOW.                                 9715
*    X'A7' - 192K,X'A8' - 384K,                                    INSS
*    X'C6' - 64K, X'C7' - 128K, X'C8' - 256K, X'C9' - 512K,        000B
*    X'D0' - 768K, X'D1' - 1024K                                   9715
*   3.  ADDRESS COMPARE SWITCHES ARE RESET AND IPL PROGRAM         000B
*  RESTARTED.                                                      000B
*   4.  IPL WILL ZERO CORE ONLY UP TO THE SPECIFIED LIMIT. STORAGE 000B
*  ADDRESSES ABOVE THIS LIMIT ARE NOT RECOGNIZED BY THE OPERATING  000B
*  SYSTEM.                                                         000B
*
*******************************************************************000B
         MVC   IEANUCNO(Q1),Q8         CREATE NUCLEUS NAME         AOS2
         CLI   9,X'00'          TEST FOR STORAGE LIMIT SET         000B
         BE    IEAMAINR                                            000B
         TM    9,X'A0'             TEST FOR INTERMEDIATE SIZE      INSS
         BNO   IEANHSZ1            NO, BRANCH W/ R9,= 0            INSS
         LA    9,512               YES, R9 = X'200' INCREMENT      INSS
IEANHSZ1 LA    9,1024(9)           R9 = X'400' + POSS. INCREMENT   INSS
         CLI   9,C'I'           TEST FOR CHARACTER ABOVE 'I'       000B
         BC    13,IEAFRST       NO USE NUMBER AS IS                000B
         LA    2,9              R 2 = INCREMENT 9                  000B
IEAFRST  NI    9,X'0F'                                             000B
         BC    7,IEANHSZ2          BRANCH IF LOC 9 IS NOT ZERO     9715
         LA    9,512(9)            R9 = X'600' (INTERMEDIATE SIZE) 9715
IEANHSZ2 IC 1,9                    R1 = CHARACTER FROM LOC 9       9715
         AR    1,2              ADD INCREMENT IF ANY               000B
         SLL   R9,Q0(R1)               FIND LIMITED CORE SIZE      AOS2
         ST    9,IEAMAXC        SAVE LIMITED CORE SIZE             000B
         MVI   IEALCSMX+1,X'F0'    SET NOOP TO BRANCH         BI A44954
IEAMAINR LD    0,IEABUFER                                          000B
         LDR 2,0                        PCI IF MACHINE HAS NO FP REGS
         LDR 4,0
         LDR 6,0
IEAPCRET EQU   *                                              BI A44954
         LA    R8,INCR           INCREMENT FOR LOOP           BI A44954
         LA    RA,IEAMXLOC       RESET PC RETURN              BI A44954
         SR    R9,R8             BXLE COMPARAND               BI A44954
IEALCSMX NOP   IEAZRLP2          BRANCH IF CORE LIMIT SET     BI A44954
         L     R9,IEAMAXC        SET BXLE COMPARAND TO 16MEG    YM02634
         BCTR  R9,0              DECREMENT FOR 24 BIT ADDR      YM02634
IEAZRLP2 MVC   IPLEND(INCR),0    VALIDATE                     BI A44954
         XC    IPLEND(INCR),IPLEND CLEAR                      BI A44954
         LA    R4,IPLEND+INCR    NEXT SEGMENT OF CORE         BI A44954
IEAZRLP3 MVC   0(INCR,R4),IPLEND VALIDATE AND CLEAR           BI A44954
         BCR   8,0               FORCES EXECUTION ON MOD91    BI A44954
         BXLE  R4,R8,IEAZRLP3    UPDATE TO ADDRESS            BI A44954
IEAMXLOC ST    R4,IEAMAXC        SAVE MACHINE SIZE            BI A44954
         XR    R2,R2
         LA 10,IEAPCKEY               LOAD FOR PC ON STORAGE KEY
         SR 3,3                       SUPERVISOR KEY OF ZERO
         LA 4,2048                    STORAGE BLOCK NUMBER (1 IN BIT 20
IEAKYLP  SSK 3,2                      SET STORAGE KEY
         AR 2,4
         CL    R2,IEA16MEG            MAXIMUM CORE REACHED YET? YM02634
         BL    IEAKYLP                NO, KEEP LOOPING          YM02634
         SPACE 5
******************* NUCLEUS LOCATION ROUTINE **************************
*                                                                     *
*  LOCATES THE NUCLEUS ON THE SYSTEM RESIDENCE DEVICE BY READING THE
* STANDARD VOLUME LABEL TO FIND THE VTOC AND THEN SEARCHING THRU THE
* VTOC DSCB'S UNTIL IT FINDS THE ONE REFERING TO THE NAME OF THE
* NUCLEUS. THE PODS DIRECTORY IS THEN READ AND THE NUCLEUS WITH THE
* DESIRED NAME IS SEARCHED FOR. WHEN FOUND, THE FIRST RECORD IS THE
* TRANSLATION TABLE AND SCATTER LIST AND THIS IS READ BEHIND THE IPL
* PROGRAM.  THE SIZE OF THE RECORD MAY EXCEED 1020 BYTES IN WHICH CASE,
* MORE THAN ONE READ MUST BE ISSUED.
*                                                                     *
IEAPCKEY MVC 108(4),IEAPCFP       UNEXPECTED PC INTERRUPT SIMPLY FIXED
         LH 10,2               SYS RES ADDR STORED BY IPL HARDWARE
*CLEAR PENDING IO CONDITIONS
IEAIOTST TIO   0(10)                    TEST IO
         BC    1,IEAERR1                IO NOT OPERATIONAL,ERROR1
         BC    2,IEAIOTST               CHANNEL BUSY, TEST IO
*READ STD VOLUME LABEL
         MVC   IEASKADR(6),IEAOTRCK     SEEK ADDR=ZERO CYL,ZERO TRACK
         MVC   IEASRADR(5),IEAREC3      SRCH ADDR=RECORD3 OF ZERO TRACK
         MVC   72(4),IEALBLST           MOVE CHNL PROG ADDR INTO CAW
         BAL   5,IEASTRIO               READ STD VOL LABEL INTO BUFFER
         USING IPLDATA,R7              R7 = BASE FOR IPLDATA DSECT AOS2
         LA    R7,IPLDATDS             BASE PNTS TO IPLDATDS AREA  AOS2
         MVC   IPLDVSER(Q6),IEABUFER+4  MOVE VOL SER TO IPLDATA    AOS2
         MVC   IPLDVTOC(Q5),IEABUFER+11 MOVE VTOC ADDR TO IPLDATA  AOS2
         MVC   IPLDNUCM(Q1),IEANUCNO    NUC MEMBER ID TO IPLDATA   AOS2
*READ VTOC DSCB DATA
         MVC   IEASKADR+2(4),IEABUFER+11  CCHH OF VTOC  INTO SEEK ADDR
         MVC   IEASRADR(5),IEABUFER+11    CCHHR OF VTOC INTO SRCH ADDR
         MVC   72(4),IEAVTLST           MOVE CHNL PROG ADDR INTO CAW
         BAL   5,IEASTRIO               READ VTOC DSCB DATA INTO BUFFER
         TM    IEABUFER+27,X'04'        TEST FOR 2301 DEV TYPE
         BC    8,IETRAKER               NOT 2301 - GET TRPCYL
         MVI   IEADRUM,X'FF'            INDICATE 2301
         MVC   IEADEVSZ(4),IEADRMLM    SET TRPCYL TO 200           AOS2
         B     IEANOTPC                BRANCH AROUND SAVE          AOS2
IETRAKER MVC   IEADEVSZ(4),IEABUFER+18 SAVE TRKS PER CYL, NO. OF CYLS
IEANOTPC MVI   IEASRADR+4,X'01'         SEARCH FOR REC ONE OF VTOC
*READ NUCLEUS POD SET DSCB DATA
         MVC   72(4),IEADSLST           MOVE CHNL PROG ADDR INTO CAW
         OI    IEAFLGS1,DSCBSRCH       INDICATE NUCLEUS DSCB SRCH  AOS2
         BAL   R5,IEASTRIO             READ NUCLEUS DSCB DATA      AOS2
         XI    IEAFLGS1,DSCBSRCH       END OF DSCB SEARCH          AOS2
         MVC   IPLDNUCS(Q8),IEANUCSE   MOVE START AND END CCHH OF  AOS2
*                                      SYS1.NUCLEUS TO IPLDATA     AOS2
         DROP  R7                      DROP IPLDATA DSECT BASE     AOS2
*READ NUCLEUS PO DIRECTORY
         MVC   IEANUCDS(4),IEABUFER+63  SAVE CCHH OF NUCL POD SET
         MVC   IEASKADR+2(4),IEABUFER+63  CCHH OF NUCL POD INTO SEEKADR
         MVC   IEASRADR(4),IEABUFER+63  CCHH OF NUC INTO SEEKADR
         MVI   IEASRADR+4,X'01'         RECORD ONE
         MVC   72(4),IEAPDLST           MOVE CHNL PROG ADDR INTO CAW
         BAL   5,IEASTRIO               READ NUCL POD REC INTO BUFFER
         SPACE 2
***********************************************************************
*                                                                     *
*        SEARCH FOR THE NUCLEUS MEMBER ENTRY AND THE IEAVNIPM         *
*        MODULE ENTRY (INDICATION OF MODULAR NIP) WITHIN THE          *
*        PDS DIRECTORY BLOCKS.                                        *
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R7,IEABUFER             LOAD IEABUFER START ADDRESS AOS2
IEACOMP2 LA    RD,Q2(R7)               CNT REG(RD)=ENTRIES' START  AOS2
         LH    R8,Q0(R7)               NUMBER OF BYTES IN BLOCK    AOS2
         AR    R7,R8                   LOAD BLOCK END ADDRESS      AOS2
*                                                                  AOS2
*        SEARCH THROUGH BLOCK FOR NUCLEUS OR IEAVNIPM ENTRY        AOS2
*                                                                  AOS2
IEACOMPR CLC   Q0(Q8,RD),IEANUCY       NAME FIELD = IEANUCY ?      AOS2
         BE    IEAPROCD                YES, PROCEED                AOS2
         LA    RD,Q11(RD)              SET COUNT REG TO HWORD CNT  AOS2
         IC    R8,Q0(RD)               R8 = HALFWORD COUNT         AOS2
         LA    R9,X'1F'                R9 = MASK BITS              AOS2
         NR    R9,R8                   MASK OFF TOP THREE BITS     AOS2
         AR    R9,R9                   FIND BYTE COUNT IN VAR FLD  AOS2
         LA    RD,Q1(RD)               COUNT REG = COUNT + 1       AOS2
         AR    RD,R9                   COUNT REG -> NEXT NAME FLD  AOS2
         CR    RD,R7                   AT RECORD END ?             AOS2
         BL    IEACOMPR                NO, CONTINUE SEARCH         AOS2
         TM    IEAFLGS1,NIPMSRCH       NUCLEUS OR IEAVNIPM SRCH?   AOS2
         BNO   ERRNUC                  NUCLEUS NOT FOUND - WAIT    AOS2
         TM    IEAFLGS1,NEWBLK         SEARCHING NEW BLOCK ?       AOS2
         BO    IEANONPM                YES, END IEAVNIPM SEARCH    AOS2
         OI    IEAFLGS1,NEWBLK         NO, FIND NEW BLOCK          AOS2
         ST    R7,IEARDCOM             READ INTO END OF BUFER      AOS2
         MVI   IEARDCOM,READATA        RESET READ COMMAND          AOS2
         BAL   R5,IEASTRIO             FIND A NEW BLOCK            AOS2
         B     IEACOMP2                SEARCH FOR IEAVNIPM         AOS2
*                                                                  AOS2
*        SEARCH SUCCESSFUL - IF FOR NUCLEUS, SEARCH FOR IEAVNIPM.  AOS2
*              IF FOR IEAVNIPM, CONTINUE                           AOS2
*                                                                  AOS2
IEAPROCD TM    IEAFLGS1,NIPMSRCH       FOUND IEAVNIPM ?            AOS2
         BO    IEAPRCD1                YES, CONTINUE               AOS2
         OI    IEAFLGS1,NIPMSRCH       NO, LOOK FOR IT NOW         AOS2
         MVC   IEANUCY+Q3(Q5),VNIPM    SET NEW SEARCH NAME         AOS2
         ST    RD,IEATMP13             STORE NUCLEUS ENTRY PTR     AOS2
         B     IEACOMPR                SEARCH FOR IEAVNIPM         AOS2
IEAPRCD1 OI    IEAFLGS1,MODNIP         INDICATE MODULAR NIP        AOS2
IEANONPM L     RD,IEATMP13             RESTORE NUCLEUS POINTER     AOS2
         TM    Q20(RD),SCTRFMT         TEST SCATTER FORMAT FLAG    AOS2
         BNO   ERRSCTR                 NOT IN SCTR - LOAD WAIT     AOS2
         MVC   IEANUCY(Q8),Q0(RD)      RESTORE NUCLEUS NAME        AOS2
         LA    R7,IEABUFER             LOAD BUFER BEGINNING        AOS2
         ST    R7,IEARDCOM             RESTORE CCW DATA ADDRESS    AOS2
         MVI   IEARDCOM,READATA        RESTORE READ COMMAND        AOS2
*        CONTINUE                                                  AOS2
*READ TRANSLATION TABLE AND SCATTER LIST BEHIND IPL PROGRAM
         LH    7,16(13)                 REG7=TT OF TRANSL TABLE RECORD
*CONVERT TT ADDRESS INTO CCHH ADDRESS
         LA 11,IEARET1
IEACOMLP TM    IEADRUM,X'FF'            TEST FOR 2301 DEVICE
         BC    1,IEADRMR                YES DO NOT CONVERT TRPCYL
         LH    6,IEATRPCL               NO GET TRKS PER CYL
         LH    9,IEANUCDS+2
         AR    9,7                      REG9=HH OF POD SET+TT OF TRTAB
         SR    8,8                      CLEAR REG 8
         DR    8,6                      REG8=HH OF TRTAB, REG9=CC
         LH    7,IEANUCDS               REG7=CC OF POD SET
         AR    7,9                      REG7=CC OF TRTAB
*CONSTRUCT CCW FOR READING TRANSLATION TABLE AND SCATTER LIST
         STH   7,IEASKADR+2             STORE CC OF TRTAB INTO SEEKADDR
         STH   8,IEASKADR+4             STORE HH OF TRTAB INTO SEEKADDR
         B     IEAIEARD                 BRANCH AROUND DRUM CODE
IEADRMR  LH    9,IEANUCDS+2             GET TTR OF NUCLEUS
         AR    9,7                      ADD REL TTR TO ABSL TTR
         SR    8,8                      CLEAR REG 8
         STH   8,IEASKADR+2             SET CC TO ZERO
         STH   9,IEASKADR+4             SET SEEK HH
IEAIEARD MVC   IEASRADR(4),IEASKADR+2   SET SEARCH CC HH
         BR 11                   RETURN FROM COMMON ROUTINE
         SPACE 2
IEARET1  MVC   IEASRADR+4(1),18(13)
         MVC   IEATRTSZ(2),35(13)       STORE TRTAB SIZE AT IEATRTSZ
         LH 7,IEATRTSZ                  SIZE OF TRANSLATION TABLE
         MVC IEASCLSZ(2),33(13)         SCATTER LIST SIZE
         LH 8,IEASCLSZ                  LOAD REG 8 WITH SC LIST SIZE
         TM    21(13),X'40'             USE TEXT ORIGIN       BI A43037
         BO    IEANOR                   NO, BRANCH            BI A43037
         MVC IEATXTOR+1(3),30(13)       ORIGIN OF FIRST TXT REC
IEANOR   EQU   *                                              BI A43037
         MVC IEAESDID(2),37(13)         ESDID OF FIRST TXT REC
         MVC IEARLD1+1(3),22(13)        NUMBER OF CONTIG BYTES IN NUC
         LR 2,7
         AR 2,8                         TT + SC LIST SIZE
         SLL 8,2                        FOUR TIMES SC LIST SIZE
         AR 7,8                         TT + SC LIST+ 3 TABLES
         ST 7,IEATSLSZ                  SAVE TT + 4 X SC LIST SIZE
         LA 5,1020                      MAX RECORD SIZE
         CR 2,5
         BH IEAUGH                      TT + SC GREATER THAN 1 REC 1020
         LA 2,4(2)                      INCLUDE 4 BYTE HEADER REC
         STH 2,IEATRTRD+6               STORE COUNT TO READ IN CW
         B IEATXT1                      GO TO READ TT IN ONE REC
IEAUGH   LA 6,IEAIPLND                  TOP OF IPL
         LR 7,2                         ACTUAL COUNT TT + SC
         AR 2,6                         IPL + TT+ SC ADDRESS
         SR 6,6
         DR 6,5                         7 HAS 1020 COUNT, 6 HAS REMAIND
         LA 8,1024
         MVI IEATRTRD+4,X'60'           SILI AND CHAIN ON
IEARDAGN SR 2,8                         LOC FOR NEXT REC READ
         STH   2,R2COUNT           SAVE COUNT
         STH 2,IEATRTRD+2               TARGET ADDRESS IN CW
         MVC   72(4),IEATRLST      RESET CAW AFTR POSSIB SENSE
*                                                                  0542
***  THE FOLLOWING THREE INSTRUCTIONS MUST REMAIN CONTIGUOUS       0542
*                                                                  0542
         OI    IEARREC1,X'02'    INDICATE MULTI-TRACKING REQ
         BAL 5,IEASTRIO
         MVC IEASRADR(5),IEAST          NEW RECORD ID
         SPACE 2
         LH    2,R2COUNT           REST COUNT AFTR POS SENSE
         LA 8,1020
         BCT  7,IEARDAGN                MORE BLOCKS OF 1020
         CR 7,6                         CHECK IF ANY RESIDUE
         BE IEATXTR1                    ALL RECORDS READ
         LA 3,IEATRTBH
         STH 3,IEATRTRD+2               READ LAST RECORD
         LA 6,4(6)
         STH 6,IEATRTRD+6               STORE REMAINDER AS CCW COUNT
         MVI IEATRTRD+4,X'20'           TURN OFF CHAIN BIT
IEATXT1  MVC   72(4),IEATRLST           SET CHAN PROG ADDR     PTM731
         BAL   5,IEASTRIO               READ TRTAB BEHIND IPL  PTM731
IEATXTR1 LH 7,12(13)                    TT OF FIRST TXT REC
*CONVERT TT ADDRESS INTO CCHH ADDRESS
         BAL 11,IEACOMLP         ENTER COMMON ROUTINE FOR CCHH TEXT RC
*CONSTRUCT CCW FOR READING FIRST TEXT RECORD
         MVC   IEASRADR+4(1),14(13)     STORE R  OF TXTRC INTO SRCHADDR
         MVC IEATXTRD+6(2),25(13)       MOVE TXT REC SIZE INTO CCW
         SPACE 5
*************** CONTROL SECTION DATA ORGANISATION ROUTINE *************
*                                                                     *
* ARRANGES THE OUT OF ORDER CONTROL SECTIONS BY RELATING THE REFERENCES
* IN THE TRANSLATION TABLE (ESDID) TO THE ENTRIES IN THE SCATTER LIST
* (ASSEMBLED ORIGIN).  THREE CONTROL TABLES ARE BUILT TO AIDE IN
* OBTAINING THE PROPER RELOCATION CONSTANTS AND LOAD ADDRESS.
*   CONTROL SECTION WITH ESDID OF 1 IS ASSUMED TO BE NIP AND THE FIRST
*  NUCLEUS CONTROL SECTION IS LOADED AT 0.
*          1. SIZE OF EACH CONTROL SECTION                   -SIZTABLE*
*          2. ADDRESS AT WHICH EACH CONTROL SECTION IS LOADED-ADRTABLE*
*          3. RELOCATION FACTOR FOR EACH CONTROL SECTION     -RLFTABLE*
*                                                                     *
         L 12,IEATRTAB                  TRANSLATION TABLE ADDRESS
         LR 1,12
         LH 13,IEATRTSZ                 SIZE OF TRANSLATION TABLE
         AR 12,13                       TT ADR + SIZE GIVES SC LIST ADR
         ST 12,IEASCATL                 SCATTER LIST ADDRESS
         LR 2,12                        REG 2 HAS START OF SCATTR LIST
         LH 13,IEASCLSZ                 SCATTER LIST SIZE
         AR 12,13
         ST 12,IEASIZTB                 SIZE TABLE ADDR
         AR 12,13
         ST 12,IEAADRTB                 ADDRESS TABLE LOC.
         AR 12,13
         ST 12,IEARLFTB                 RELOCATION CONSTANT TABLE ADDR.
         AR 12,13
         ST 12,IEAIPLTP                 TOP OF IPL TABLES (RLF LAST 1)
         L 4,IEASIZTB                   REG 4 HAS START OF SIZE TABLE
         SRL 13,2                       DIVIDE SC LST BY 4 FOR CS COUNT
         BCTR 13,0                      FIRST SC LST ENTRY DUMMY OF 0
         ST 13,IEACSCNT                 STORE TOTAL NUMBER OF CS
IEAHOOP  LA 2,4(2)                      SCATTER LIST POINTER
         LA 4,4(4)                      SIZE TABLE POINTER
         L 11,0(2)                      OBTAIN CS ADDRESS FROM SCATTER
         L 12,4(2)                      ADDRESS ABOVE IN SCATTER LIST
         SR 12,11                       SUBTRACT ORIGIN OF PREVIOUS ONE
         ST 12,0(4)                     STORE CS SIZE IN SIZE TABLE
         BCT 13,IEAHOOP                 TEST IF ALL CS PROCESSED
         L     12,IEARLD1
         LA    13,7
         AR    12,13
         OR    12,13
         XR    12,13
         SR    12,11
           ST    12,0(4)
         L 1,IEAADRTB
         L 13,IEACSCNT                  CONTROL SECTION COUNT
         SLL 13,1                       DOUBLE SIZE FOR RLF TABLE TOO
         LA 13,1(13)                    ALLOW FOR DUMMY RLF ENTRY
IEAAGN   LA 1,4(1)                      SKIP FIRST ENTRY IN SC LIST
         MVI 0(1),X'70'                 FLAG AS ADDR NOT STORED SLOT
         BCT 13,IEAAGN                  SET REST OF TABLE AS NOT STORED
         L  1,IEATRTAB                  TRANSLATION TABLE ADDRESS
         L  4,IEASIZTB
         L  5,IEAADRTB                  YES- BUILD ADDRESS TABLE
         L 7,IEARLD1                    TOP OF NUCLEUS
         LH 13,IEATRTSZ                 TRANSLATION TABLE SIZE
         SRL 13,1                       DIVIDE BY 2
         BCTR 13,0                      SKIP DUMMY FIRST ENTRY
         LA 1,2(1)                      POINT TO NEXT TT ENTRY
         LH 9,0(1)                      GET NEXT TT ENTRY
         SLL   9,2                      MULT BY 4 TO REFERENCE TABLE
         L     3,0(9,4)                 GET SIZE OF ENTRY
         SR    7,3                      SIZE NUC MINUS SIZE NIP
         LA    6,7                      R6 = 7
         AR    7,6                      ROUND LOWEST ADDR NOT IN
         OR    7,6                      THE NUCLEUS TO A DOUBLE
         XR    7,6                      WORD BOUNDARY
         ST    7,IEANUCND               SAVE THIS ADDR FOR NIP
         LA    6,IEARELSZ               R6 = SIZE OF IPL'S LISTS
         A     6,IEATSLSZ               ADD THE SIZE OF LISTS
         SPACE 2
         TM    IEAFLGS1,MODNIP         TEST FOR MODULAR NIP        AOS2
         BNO   IEANOMOD                NO, RELOCATE HIGH           AOS2
         ST    R7,Q0(R9,R5)            YES, STORE ADDRESS OF NIP   AOS2
         LA    R8,Q0(R7,R3)            R8 = END OF NIP             AOS2
         LA    R2,Q7                   ROUND THIS VALUE            AOS2
         AR    R8,R2                   UP TO THE NEXT DOUBLE WORD  AOS2
         OR    R8,R2                   BOUNDRY FOR START           AOS2
         XR    R8,R2                   OF RELOCATED IPL            AOS2
         ST    R8,IEAIPLOC             STORE RELOCATED IPL START   AOS2
         L     R7,IEATSLSZ             LOAD SIZE OF TABLES         AOS2
         LA    R7,IEARELSZ(R7,R8)      IPLEND = NIPEND + IPL SIZE  AOS2
         L     R8,IEAMAXC              LOAD CORE SIZE              AOS2
         B     IEATOPNC                BRANCH TO FIND FREE SIZE    AOS2
         SPACE 1
IEANOMOD L     8,IEAMAXC           R 8 HAS SIZE OF CORE
         C     8,IEA256K           TEST FOR CORE LESS THAN 256K    MP65
         BL    IEATOPCR            YES, USE CORE SIZE FOR RELOC    MP65
         BH    IEAC512K            GREATER THAN 256K-CHECK 512K  A26272
         L     R8,IEA252K          EQ. TO 256K LOAD NIP AT 252K  A26272
         B     IEATOPCR            GO TO CONTINUE LOADING        A26272
IEAC512K C     R8,IEA512K          IS CORE 512 OR MORE           A26272
         BL    IEATOPCR            NO,GO USE THE MAX CORE SIZE   A26272
         L     R8,IEA508K          YES, USE 508K AS THE MAX CORE A26272
IEATOPCR SR    8,6                 R 8 HAS DESTINATION OF IPL      MP65
         SRL   8,3                 ROUND THE ADDR DOWN TO A DBL WORD
         SLL   8,3                 THIS ADDR WILL BE USED TO MOVE IPL
         ST    8,IEAIPLOC          SAVE THIS ADDR FOR LATER
         SR    8,3                 DECREASE ADDR BY THE SIZE OF NIP
         SRL   8,3                 ROUND THIS ADDR DOWN
         SLL   8,3                 TO A DBL WORD BOUNDARY ALSO
         ST    8,0(9,5)            SET THIS ADDR OF NIP IN THE TABLE
IEATOPNC ST    7,0(4)              SAVE RLD AREA ADDR IN THE TABLE
         ST    7,IEARLD1           SAVE RLD AREA ADDR FOR RLD WORK
         SR    8,7                 R 8 HAS SIZE OF FREE CORE
         ST    8,IEASZRL1          SAVE ADDR FOR LATER
         BCTR  13,0                ALREADY PROCESSED 1 CS (NIP)
         SR    7,7                 SECOND CS LOADED AT 0
         LA    1,2(1)
         LH    9,0(1)
         SLL   9,2                  MULT BY 4 TO REFERENCE TABLE
         ST    7,0(9,5)             STORE ZERO ENTRY FOR CS1
         LA    8,2                  PROCESSED 2 CSECTS NIP AND CS1
IEASTOL1 L     3,0(9,4)             SIZE LAST ENTRY PROCESSED
         AR    7,3                  PLACE FOR NEXT ENTRY
         C     8,IEACSCNT
         BE    IEAGOON                ALL CSECTS PROCESSED
IEADEC   BCT   13,IEAUP1
         B     IEAGOON
IEAUP1   LA    1,2(1)                 NEXT TT ENTRY
         LH    9,0(1)
         SLL   9,2                    MULT BY 4 TO REFERENCE TABLE
         LH    2,0(9,5)               PICK UP FLAG FROM ADDRESS TABLE
         SRL   2,8                    CLEAR ANY ADDRESS BITS
         SLL    2,8
         CH    2,IEAFLAG              TEST IF ADDRESS STORED
         BC    4,IEADEC               YES SKIP THIS TT ENTRY
         ST    7,0(9,5)               NO STORE ADDRESS FOR THIS ENTRY
         LA    8,1(8)                 ADD 1 TO TOTAL CSECTS PROCESSED
         B     IEASTOL1
*
*   ADDRESS TABLE COMPLETELY BUILT, NOW BUILD RLF TABLE
*
IEAGOON  ST    7,IEATPNUC              TOP OF LAST CS LOADED
         L     1,IEATRTAB              TRANSLATION TABLE ADDRESS
         L     3,IEARLFTB
         MVI   0(3),X'00'              DO NOT FLAG FIRST RLF ENTRY
         L     4,IEASCATL              ADDRESS OF SCATTER LIST
         L     5,IEAADRTB              YES- BUILD RELOC FACTOR TABLE
         SR    8,8
         LH    13,IEATRTSZ             NUMBER OF ENTRIES IN TT
         SRL   13,1                    DIVIDE BY 2
         BCTR  13,0                    SKIP DUMMY FIRST ENTRY
IEACOOP  LA    1,2(1)
         LH    9,0(1)                  FIRST ENTRY
         SLL   9,2                     MULT BY 4 TO REFERENCE TABLE
         LH    2,0(9,3)                PICK UP RLF TABLE FLAG
         SRL   2,8
         SLL   2,8                   CLEAR ANY ADDRESS BITS
         CH    2,IEAFLAG             TEST IF RLF STORED FOR THIS CS
         BC    4,IEADOWN             YES
         L     7,0(9,5)              PICK CORRESP ADDR FROM ADDR TAB
         L     11,0(9,4)           ORIGIN FROM SCATTER LIST       P4082
         SR    7,11                RELOC FACTOR LOAD-ASSEM ADDR   P4082
         ST    7,0(9,3)               STORE IN RLF TABLE
         LA    8,1(8)                 UP CSECT COUNT
         C     8,IEACSCNT             ALL CSECTS PROCESSED
         BE    IEAADDRS               YES ADDRESS AND RLF TABLES DONE
IEADOWN  BCT   13,IEACOOP             GO ON TO NEXT TT ENTRY
         B     IEAADDRS               GO TO RELOCATE IPL
*
*CONSTANTS- NUCLEUS LOCATION ROUTINE
IEALBLST DC    A(IEALBLSK)            LOCATE-READ STANDARD VOLUME LABEL
IEAVTLST DC    A(IEAVTCSK)            LOCATE-READ VTOC CCW CHAIN
IEADSLST DC    A(IEADSTSK)            LOCATE-READ DATA SET DSCB CCW CHN
IEAPDLST DC    A(IEAPODSK)            LOCATE-READ PODS CCW CHAIN
         DS    0D
IEALBLSK DC    X'07'                    CONTROL SEEK REC 3, CYL 0, TR 0
         DC    AL3(IEASKADR)            DATA ADDRESS
         DC    X'4000'                  CC ON,SILI OFF
         DC    X'0006'                  6 BYTE COUNT
IEALBLSR DC    X'31'                    SEARCH EQUAL ID STNDR VOL LABEL
         DC    AL3(IEASRADR)            D A
         DC    X'4000'                  CC ON,SILI OFF
         DC    X'0005'                  5 BYTE COUNT
         DC    X'08'                    TIC
         DC    AL3(IEALBLSR)            DATA ADDR
         DC    X'00000000'              NO FLAG OR COUNT FOR TIC
         DC    X'06'                    READ DATA STANDARD VOLUME LABEL
         DC    AL3(IEABUFER)            INTO BUFER
         DC    X'2000'                  CC OFF,SILI ON
         DC    XL2'50'                  80 BYTE COUNT
IEAVTCSK DC    X'07'                    CONTROL SEEK
         DC    AL3(IEASKADR)            D A
         DC    X'4000'                  CC ON, SILI OFF
         DC    X'0006'                  6 BYTE COUNT
IEAVTCSR DC    X'31'                    SEARCH EQUAL ID  VTOC
         DC    AL3(IEASRADR)            D A
         DC    X'4000'                  CC ON, SILI OFF
         DC    X'0005'                  5 BYTE COUNT
         DC    X'08'                    TIC
         DC    AL3(IEAVTCSR)            D A
         DC    X'00000000'              NO FLAG OR COUNT FOR TIC
         DC    X'06'                    READ DATA  VTOC
         DC    AL3(IEABUFER)            INTO BUFER
         DC    X'2000'                  CC OFF. SILI ON
         DC    XL2'60'                  96 BYTE COUNT
IEADSTSK DC    X'07'                    CONTROL SEEK
         DC    AL3(IEASKADR)            D A
         DC    X'4000'                  CC ON,SILI OFF
         DC    X'0006'                  6 BYTE COUNT
IEASYNC  DC    X'31'                 *SEARCH FOR RECORD ONE
         DC    AL3(IEASRADR)
         DC    X'4000'
         DC    X'0005'
         DC    X'08'
         DC    AL3(IEASYNC)
         DC    X'00000000'
IEADSTSR DC    X'A9'
         DC    AL3(IEADSNAM)            D A
         DC    X'6000'                  CC ON. SILI ON
         DC    X'002C'                  44 BYTE KEY
         DC    X'08'                    TIC
         DC    AL3(IEADSTSR)            D A
         DC    X'00000000'              NO FLAG OR COUNT FOR TIC
         DC    X'06'                    READ DATA  DATA SET DSCB
         DC    AL3(IEABUFER)            INTO BUFER
         DC    X'2000'                  CC OFF, SILI ON
         DC    XL2'60'                  96 BYTE COUNT
IEAPODSK DC    X'07'                    CONTROL SEEK
         DC    AL3(IEASKADR)            D A
         DC    X'4000'                  CC ON, SILI OFF
         DC    X'0006'                  6 BYTE COUNT
IEAPODSR DC    X'31'                    SEARCH EQUAL ID. PODS DIRECTORY
         DC    AL3(IEASRADR)
         DC    X'4000'                  CC ON,SILI OFF
         DC    X'0005'                  5 BYTE COUNT
         DC    X'08'                    TIC
         DC    AL3(IEAPODSR)            D A
         DC    X'00000000'              NO FLAG OR COUNT FOR TIC
IEARECSR DC    X'69'                    SEARCH HI EQUAL KEY PODS
         DC    AL3(IEANUCY)             D A
         DC    X'6000'                  CC ON SILI OON
         DC    X'0008'                  8 BYTE KEY
         DC    X'08'                    TIC
         DC    AL3(IEARECSR)            D A
         DC    X'00000000'              NO FLAG OR COUNT FOR TIC
IEARDCOM DC    X'06'                    READ DATA PODS
         DC    AL3(IEABUFER)            INTO BUFER
         DC    X'2000'                  CC OFF SILI ON
         DC    X'0100'                  256 BYTE COUNT
         DS    0D
IEADSNAM DC    CL22'SYS1.NUCLEUS'          DATA SET NAME VTOC DSCB KEY
         DC    CL22' '
         DS    0D
IEAOTRCK DC    X'000000000000'          ZERO CYL, ZERO TRACK
         DS    0D
IEAREC3  DC    X'0000000003'            REC3 ON ZERO CYL,ZERO TRACK
         DS    0D
R2COUNT  DS    1F
         DS    0D
IEANUCDS DS    F                        4 BYTE AREA TO STORE CCHH OF DS
*  ******  IPL INITIALIZATION PROGRAM RELOCATION ROUTINE  ******
*    MOVES PART OF THE IPL PROGRAM TO UPPER CORE AND ADDS A RELOCATION
*    CONSTANT TO ADDRESS CONSTANTS. AFTER RELOCATION, THE IPL      MP65
*    PROGRAM WILL END AT 252K OR AT THE ACTUAL TOP OF CORE IF THE  MP65
*    MACHINE SIZE IS LESS THAN 256K.                               MP65
*
IEAADDRS LA    11,4                 ADDRESS CONSTANTS OF 4 BYTES EACH
         LA    3,IEACNTSZ           SIZE OF CONSTANT TABLE
         LA    5,IPLDATDS           START OF RELOCATABLE IPL CODE
         LA    6,IEACONST           RETURN FROM GENERAL ROUTINE
         LA    7,IEARELSZ           SIZE OF IPL TO BE RELOCATED
         A     7,IEATSLSZ           ADD SIZE OF TT AND SCATTER LIST
         L     9,IEAIPLOC           R 9 HAS ADDR  OF HI CORE FOR IPL
         LA    14,IEASNCAW          START OF CONSTANT TABLE
IEARLOC  L     4,0(14)              CONSTANT TO BE RELOCATED
         SR    4,5                  RELOC RELATIVE TO START OF RELOC
         AR    4,9
         ST    4,0(14)              STORE BACK UPDATED ADDRESS CONSTANT
         AR    14,11                     INCREMENT THRU TABLE BY 4 OR 8
         SR    3,11                      DECREMENT COUNT
         CL    3,IEAZERO                 CHECK FOR END
         BC    2,IEARLOC                 NOT END.. CONTINUE
         BR    6                         END OF RELOCATE CONST. ROUTINE
IEACONST LA    3,IEACCWSZ                SIZE OF CCW TABLE
         LA    11,8                      LOAD TABLE INCREMENT
         LA    14,IEACCWST               START OF CCW RELOC. TABLE
         BAL   6,IEARLOC        GO RELOCATE CCW'S
         LR    4,9              R 4 = PNTR TO RELOCATED IPL CODE   000B
         LR    2,9              R 2 = PNTR TO RELOCATED IPL CODE   000B
         LA    3,256            R 3 = X'100'                       000B
         LA    6,255            R 6 = X'FF' FOR 256 MOVE           000B
IEAINTST CR    7,3              TEST FOR LESS THAN 256 BYTES       000B
         BC    11,IEAMVBLD      EQUAL OR MORE THAN 256             000B
         LTR   7,7              TEST FOR ALL MOVED                 000B
         BC    8,IEAEVEN        YES STOP MOVE                      000B
         BCTR  7,0              DECREMENT PARTIAL BLOCK FOR MOVE   000B
         LR    6,7              R 6 = LAST PORTION TO MOVE         000B
         MVI   IEAEVENR+1,X'F0' SET NOP TO BRANCH NEXT TIME        000B
IEAMVBLD EX    6,FRMTOIEA       MOVE IPL CODE                      000B
IEAEVENR BC    0,IEAEVEN        NOP UNTIL LAST PORTION             000B
         AR    5,3              INCREMENT FROM PNTR BY 256         000B
         AR    2,3              INCREMENT TO PNTR BY 256           000B
         SR    7,3              DECREMENT LEFT TO MOVE COUNT BY 256000B
         B     IEAINTST         MOVE IPL CODE                      000B
FRMTOIEA MVC   0(0,2),0(5)                                         000B
IEAEVEN  EQU   *                                                   000B
         LA    5,IEASTARL        AREA BELOW RELOC. IPL CODE
         SR    9,5               RELOCATION CONSTANT FOR IPL
         LR    15,9              LOAD BASE REG FOR NEW IPL LOC
         LA    R4,Q20(R4)        BRANCH PAST IPLDATA AREA          AOS2
         BR    4                 ENTER RELOCATED IPL (IEALOAD RELOCTD)
********************** NUCLEUS LOAD ROUTINE ***************************
*                                                                     *
*SCATTER LOADS THE NUCLEUS INTO MAIN STORAGE. BUILDS A TABLE OF RLD   *
*ITEMS IN MAIN STORAGE AT THE TOP OF THE NUCLEUS.                     *
*   CODE FROM HERE TO TOP OF IPL + TRANSLATION TABLE AND SCATTER LIST *
*  SIZE TABLE, ADDRESS TABLE AND RLF TABLE IS RELOCATED TO THE TOP OF *
*  CORE TO PREVENT IPL BEING OVERLAID BY THE NUCLEUS.                 *
*                                                                     *
         DS 0D
IPLDATDS DS    XL20                    STORAGE FOR IPLDATA         AOS2
         SPACE 2
IEALOAD  L     3,IEARLFTB               REG3= RLFTABLE ADDR
         SLR   6,6
         L     7,IEAIPLTP                TOP OF IPL TABLES BEFORE RELOC
         LA    9,128
         SR    7,9
         LA    5,256                      LOAD 256 CONSTANT
         DR    6,5                        BLOCKS OF 256 TO CLEAR
         LA    7,1(7)                     CLEAR 256 FOR REMAINDER
         MVI   0(9),X'00'                 CLEAR FIRST BYTE AT 128
IEACLEAR MVC   1(256,9),0(9)              CLEAR TO TOP OF EXECUTED PART
         LA    9,256(9)
         BCT   7,IEACLEAR
         L     12,IEASIZTB                  SIZE TABLE ADDRESS
         L     6,IEATRTAB
         L     8,IEAADRTB
         L     14,IEASCATL                 SCATTER LIST START
         SLR   13,13
         LH    4,IEAESDID                  ESD OF FIRST TXT REC
         SLL   4,1                        REFERENCE TT
         LH    4,0(4,6)
         SLL   4,2                        GET INDEX FOR TABLE
         L     9,0(4,3)                     LOAD RELOCATION FACTOR
         A     9,IEATXTOR                   ORIGIN OF FIRST TXT REC
         MVI   IEABUFER,X'00'             BE SURE FLAGS ARE CLEARED
         B     IEARD1                       ENTER MAIN ROUTINE
IEACMESD L     3,IEARLFTB               RLFTABLE ADDRESS        PTM6273
         LH    7,IEABUFER+14
         STH   7,IEATRTRD+6
         LH    4,IEABUFER+6             REG4=RLD INFO BYTES IN RLD REC
         LH    4,IEABUFER+16(4)         REG4=ESDID
         L     6,IEATRTAB               LOAD ADDRESS OF TRANS TABLE
         LR    7,4
         SLL   4,1
         LH    4,0(4,6)                 GET TT POINTER
         SLL   4,2                      MULTIPLY(ESDID-1) BY 4
IEAREPLC L     4,0(4,3)                 RELOCATION FACTOR FOR CS
         L     9,IEABUFER+8             ASSEMBLED ORG OF REC
         AR    9,4                      ADD RELOCATION CONSTANT
IEARD1   ST    9,IEATXTRD               STORE ADDRESS CONSTANT IN CW
         MVI   IEATXTRD,X'06'           RESTORE READ COMD
         MVI   IEATXTRD+4,X'60'         INSURE CHAIN AND SILI BITS ON
         MVC   72(4),IEATXLST           MOVE CHNL PROG ADDRESS TO CAW
*                                                                  0542
***  THE FOLLOWING THREE INSTRUCTIONS MUST REMAIN CONTIGUOUS       0542
*                                                                  0542
         OI    IEARREC1,X'02'    INDICATE MULTI-TRACKING REQ       0542
         BAL   5,IEASTRIO              READ A TXT RECORD
         MVC   IEASRADR(5),IEAST       ID OF NEXT RECORD IN SRCH COMD
         SPACE 2
         TM    IEABUFER,X'0C'           LAST REC BIT ON IN CCW REC
         BC    1,IEARELOC               YES,STORE SIZE OF RLD TABLES
IEARDRC2 MVC   72(4),IEABFLST           MOVE CHNL PROG ADDR IN CCW
*                                                                  0542
***  THE FOLLOWING THREE INSTRUCTIONS MUST REMAIN CONTIGUOUS       0542
*                                                                  0542
         OI    IEARREC1,X'02'    INDICATE MULTI-TRACKING REQ       0542
         BAL   5,IEASTRIO               READ REC INTO BUFFER
         MVC   IEASRADR(5),IEAST        ID OF NEXT RECORD IN SRCH COMD
         SPACE 2
         TM    IEABUFER,X'03'           RLD WITH CCW PRESENT IN REC
         BC    1,IEATYP1                YES,SET TYPE 1
         TM    IEABUFER,X'02'           RLD PRESENT IN REC
         BC    1,IEATYP0                YES,SET TYPE=0
         B     IEACMESD                 BRANCH TO COMPARE ESDID
IEATYP0  MVI   IEATYP,X'00'             SET TYPE=0
         B     IEABLDRL                 BRANCH TO BUILD RLD TABLE
IEATYP1  MVI   IEATYP,X'01'             SET TYPE=1
IEABLDRL LH    13,IEABUFER+6            REG13=NO OF RLD INFO BYTES R
         LA    14,IEABUFER+16           REG14=ADDR OF RLD INFO BYTES
         L     1,IEASZRL1               RLD SPACE
         SR    1,13                     SPACE USED BY THIS RLD
         C     1,IEAZERO                TEST IF ROOM IN RLD AREA
         BC    4,IEAERR8                RLD AREA EXCEEDED
         ST    1,IEASZRL1               REMAINING ROOM FOR RLD
         L     6,IEARLD1                PLACE FOR RLDS
         EX    13,IEAMVRL1              MOVE RLD BYTES FROM BUFFER
IEAMVRL1 MVC   0(0,6),0(14)             INTO RLD TABLE 1
         AR    6,13                     PART OF AREA USED
         ST    6,IEARLD1                REMAINING RLD AREA
         TM    IEATYP,X'01'             TYPE=1{
         BC    1,IEACMESD               YES BRANCH TO COMPARE ESDID
         TM    IEABUFER,X'0C'           LAST REC BIT ON IN CCW REC
         BC    1,IEARELOC               YES,STORE SIZE OF RLD TABLES
         B     IEARDRC2                 NO,READ ANOTHER RECORDIN BUFFER
******************* SCATTER LOAD RELOCATION ROUTINE *******************
*                                                                     *
*PROCESSES THE RLD ITEMS IN THE RLD TABLE AND RELOCATES THE LOAD      *
*CONSTANTS WITHIN THE NUCLEUS TEXT READ INTO MAIN STORAGE.            *
*                                                                     *
IEATYPE  C     13,IEAZERO               TEST IF ALL THROUGH
         BL    IEAOUTCD                 YES LEAVE ROUTINE
         TM    RLDFLAG,X'01'            TEST NEXT RLD ENTRY
         BC    1,IEATTRLD               R,P OMITTED IN NEXT RLD
         B     IEATRLRP                 R,P PRESENT IN NXT RLD
IEARELOC L     13,IEARLD1               TOP OF RLD AREA
         L     1,IEATRTAB               REG1= ADDR OF TRANS TABLE
         L     4,IEARLFTB               REG4= ADDR OF RLFTABLE ADDR
         L     3,IEASIZTB               START OF RLD AREA TOP NUCLEUS
         L     3,0(3)
         SR    13,3                     SIZE OF RLD AREA USED
         SRL   13,2                     REG13=ITEM COUNT1
IEATRLRP SLR   5,5                      CLEAR REG 5
         LH    5,0(3)                   R POINTER ESD
         SLL   5,1                      REFERENCE TT
         LH    5,0(5,1)                 GET TT POINTER
         SLL   5,2                      FOR RLFTABLE
         L     2,0(5,4)                 REG 2=RELOCATION FACTOR R
         LH    5,2(3)                   REG5=CONTENTS OF P POINTER
         SLL   5,1                      REFERENCE TRANS TABLE
         LH    5,0(5,1)                 GET TRANS TABLE POINTER
         SLL   5,2                      FOR RLFTABLE
         L     14,0(5,4)                REG14=RELOCATION FACTOR P
         LA    3,4(3)                   SET C=C+4
         BCTR  13,0                     REDUCE ITEM COUNT
IEATTRLD CLI   0(3),X'20'               RELOCATION REQUIRED
         BNL   IEANEXT                  NO GO ON TO NEXT ITEM
         L     5,0(3)                   REG5=FLAG+RLD ADDR
         LA    5,0(5)                   REG5=RLD ADDR
         AR    5,14                     ADD P RELOC FACTOR TO RLD ADDR
         NI    0(3),X'0F'               CLEAR UNWANTED FLAGS
         SLR   6,6                      CLEAR REG 6
         IC    6,0(3)                   REG6=FLAG BYTE
         SRL   6,2                      REG6=LENGTH OF LOAD CONSTANT
         MVC   IEAFULWD(4),IEAZERO      CLEAR FULL WORD
         LA    7,IEAFULWD+3             REG7=ADDR OF IEAFULWD+3
         SR    7,6                      REG7=BYTE ALIGNMENT IN FULWD
         EX    6,IEAMOVE                MOVE LOAD CONSTANT
IEAMOVE  MVC   0(1,7),0(5)              FROM LOAD ADDRESS TO FULL WORD
         L     8,IEAFULWD               REG 8=LOAD CONSTANT
         TM    0(3),X'02'              TEST FOR NEG. RELOCATION    8468
         BNO   POSRELOC                NOT NEGATIVE                8468
         SR    8,2                 NEGATIVE,SUBTRACT RELOC FACTOR  8468
         B     BYPOSRLC            BYPASS POSITIVE RELOCATION      8468
POSRELOC AR    8,2                 ADD RELOC FAC TO LOAD CONSTANT  8468
BYPOSRLC ST    8,IEAFULWD          IEAFULWD = MODIFIED LOAD CONSTNT8468
         EX    6,IEARPLCE               REPLACE LOAD CONSTANT
IEARPLCE MVC   0(1,5),0(7)              IN TEXT
IEANEXT  MVC   RLDFLAG(1),0(3)          SAVE FLAG BYTE
         LA    3,4(3)                  RLD COUNT C=C+4
         BCT   13,IEATYPE               ON ITEM COUNT,BRANCH TO IEATYPE
*****************  LAST STEP IN IPL PROGRAM  **************************
*
* ***  TRANSFER OF CONTROL FROM IPL TO NIP VIA A BRANCH TO CONSTANT
**  ADDRESS IN LOWER CORE WHERE A PSW IS LOADED GIVING CONTROL TO NIP.
*
*   ***  NOTE  ***       ***  NOTE  ***       ***  NOTE  ***
*   THE IPL-NIP INTERFACE CONSISTS OF THE FOLLOWING REGISTER
*   SETTINGS.  PROPER NUCLEUS INITIALIZATION IS DEPENDENT ON
*   SOME OR ALL OF THESE REGISTER VALUES, DEPENDING ON WHICH
*   VERSION OF NIP HAS BEEN LOADED.   THE FUNCTION OF ANY OF
*   THE BELOW LISTED REGISTERS IN THE IPL-NIP INTERFACE MUST
*   NOT BE ALTERED WITHOUT THE CONSENT OF NIP MAINTAINENCE.
*
*  REGISTER 1  - ADDRESS OF IEANUCOX TRANSLATION TABLE.
*  REGISTER 3  - ADDRESS OF NUCLEUS/IPL VOLUME DATA AREA (IPLDATA).
*  REGISTER 4  - ADDRESS OF NUCLEUS CSECT SIZE TABLE (SIZTABLE).
*  REGISTER 6  - REAL PROCESSOR STORAGE SIZE.
*  REGISTER 7  - ADDRESS OF THE END OF THE RESIDENT NUCLEUS.
*  REGISTER 8  - ADDRESS OF NUCLUES CSECT ADDRESS TABLE (ADRTABLE).
*  REGISTER 9  - THE NUMBER OF NUCLEUS CSECTS.
*  REGISTER 10 - DEVICE ADDRESS OF THE IPL VOLUME.
*
IEAOUTCD L     6,IEAMAXC                R6 = SIZE OF CORE
         L     7,IEANUCND               PASS LOW CORE BOUNDARY IN REG 7
         L     4,IEASIZTB               R4 = ADDR OF SIZE TABLE    000C
         L     8,IEAADRTB               R8 = ADDR OF ADDRESS TABLE 000C
         LA    4,4(4)                   SET ADDR, SIZE TABLE PTRS  000C
         LA    8,4(8)                   PAST DUMMY FIRST ENTRY     000C
         L     9,IEACSCNT               R9 = NO. ENTRIES PER TABLE 000C
         LA    R3,IPLDATDS              R3 = ADDR OF IPLDATA       AOS2
         LA    5,X'16C'                LOCATION WHERE NIP PSW LOADED
         BR    5                       IPL IS ALL DONE
***************************** IO ROUTINE ******************************
*                                                                     *
* THIS IS A COMMON I/O ROUTINE USED BY THE ROUTINES WHICH LOCATE AND  *
*   LOAD THE NUCLEUS. IT CONTAINS SUBROUTINES TO HANDLE CYLINDER AND  *
*   HEAD SWITCHING, AND DEFECTIVE AND ALTERNATE TRACKS.               *
*                                                                     *
***********************************************************************
*
* THE FOLLOWING INITIATES THE I/O REQUEST, AND IF THE CSW IS STORED,
*   ANALYZES THE STATUS BYTES. IF THE OPERATION IS SUCCESSFUL, CONTROL
*   RETURNS TO THE MAIN LINE; ON UNIT CHECK, THE SENSE SUBROUTINE IS
*   BRANCHED TO; AND ON ANY OTHER CHECK, THE MACHINE IS PUT IN WAIT
*   STATE.
*
IEASTRIO SIO   0(10)                    START IO
         BC    8,IEATSTIO               IO OP INITIATED,TEST IO
         BC    4,ERRSIO2           I/O OP NOT INITIATED;CSW STORED
         BC    2,IEASTRIO               CHANNEL BUSY,START IO
         B     ERRSIO3             CHN NOT BUSY,CSW NOT STORED
IEATSTIO TIO   0(10)                    TEST IO
         BC    2,IEATSTIO               CHANNEL BUSY,TEST IO
         BC    4,CSWTEST           CSW STORED; TEST STATUS
         B     ERRTIO              NEITHER OF ABOVE
CSWTEST  TM    68,X'02'            TEST FOR UNIT CHECK
         BC    1,SENSE
         TM    69,X'2F'                 TEST FOR OTHER CHECKS
         BC    7,ERRCSW            UNRECOVERABLE ERROR
         TM    68,X'04'                 TEST FOR DEVICE END
         BCR   1,5                 RETURN TO CALLER
         B     IEATSTIO                 NONE OF ABOVE CONDITIONS,TESTIO
*
* SENSE SUBROUTINE-ISSUES SENSE COMMAND TO SYSRES. TESTS FOR THE VALID
*   CONDITIONS OF TRACK CONDITION CHECK, FILE MASK VIOLATION, OR END
*   OF CYLINDER. IF NONE OF THESE, AN ERROR CONDITION EXISTS.
*
SENSE    EQU   *
         BC    0,ERRSNS            ERROR IF UNIT CHK ON SENSE      3800
         MVI   SENSE+1,X'F0'       MAKE THE BC AN UNCONDITIONAL BRANCH
         ST    13,IEAFULWD             PROTECT REGISTER 13         4841
         MVC   CSWCAW(Q12),CSW     SAVE CSW AND CAW
         L     2,64                GET ADDR OF LAST CCW
         LA    1,8                   BY SUBTRACTING 8 FROM THE CSW
         SLR   2,1                   TO POINT TO THE COMMAND
         LR    1,5                 SAVE REG5 (RETURN REG) OVER BAL
         XC    SENSESAV(Q24),SENSESAV ZERO SENSE DATA AREA
         MVC   72(4),IEASNCAW      PLACE PTR TO SENSE CMD IN CAW
         BAL   5,IEASTRIO          ISSUE SENSE
         MVI   SENSE+1,X'00'       RESET BC FOR NO BRANCH
* THE FOLLOWING STATEMENTS TEST THE SENSE BITS
         CLC   IEASKADR+2(2),IEADEVSZ  CHECK FOR BAD ADDR          AOS2
         BL    SNSPRCD                 GOOD ADDR, TEST SENSE BITS  AOS2
         TM    IEAFLGS1,DSCBSRCH       ON A NUCLEUS SEARCH ?       AOS2
         BO    ERRNUC                  YES, LOAD WAIT '0E'         AOS2
         B     ERRUCK                  NO, LOAD UNIT CHK WAIT      AOS2
SNSPRCD  TM    SENSESAV,X'02'      TRK CONDITION CHECK
         BC    1,TRKCCK
         LA    8,INITRTRY     LOAD BR ADDR FOR RETURN FROM EOTRACK 0542
         TM    SENSESAV+1,X'04'    FILE MASK VIOLATION-EOTRK
         BC    1,EOTRACK
         TM    SENSESAV+1,X'20'    END OF CYLINDER
         BC    1,UPCYL
         TM    SENSESAV,ECFDTACK   TEST FOR DATA CHECK
         BZ    ERRUCK              IF NO-LOAD WAIT
***                                                           ***
*     THIS ROUTINE CORRECTS DATA CHECKS ON 3330/2305 DEV        *
*     SEVERAL ASSUMPTIONS HAVE BEEN MADE IN ECF CODING.         *
*     THEY ARE:                                                 *
*            1.  NO CCWS ARE DATA CHAINED.                      *
*            2.  NO READ CCW IS FOLLOWED BY A 'TIC'.            *
***                                                           ***
         OC    SENSESAV+Q7(Q17),SENSESAV+Q7 IS IT 3330/2305 DEV
         BE    ERRUCK              NO-LOAD WAIT
         XC    SENSDISP(Q5),SENSDISP CLEAR SEC SENSE AREA
         OC    SENSDISP(Q5),SENSESAV+Q18 IS THERE DATA TO CONVT ZA01035
         BE    ECFRESIO            NO-REALGN READ HEAD AND EXIT
         LA    R5,Q8               GET LGN OF CCW
         TM    Q4(R2),CCWSKIP      IS SKIP BIT ON IN CCW
         BO    ECFRESIO            YES-REALGN READ HEAD AND SIO
         CLI   SENSESAV+Q7,SNSZEUSA IS IT 2305 MOD1
         BE    ECFNOMER            YES-USE CCW INFO FOR ERR LOC
         CLI   SENSESAV+Q7,SNSZEUSC IS IT 2305 MOD2
         BE    ECFNOMER            YES-USE CCW INFO FOR ERR LOC
         MVC   SENSEWRK(3),SENSESAV+Q15 MOVE RESTART BYTE COUNT ZA01035
         L     RD,SENSEWRK      LOAD RESTART BYTE COUNT ZA01035
         B     ECFMERFX            BR TO CONTINUE ERROR LOCATE
ECFNOMER LH    R5,CSWCAW+Q6        GET RESID COUNT (2305)
         LH    RD,Q6(R2)           GET LGN OF READ FROM FAIL CCW
         SLR   RD,R5               ADJUST ACTUAL READ LGN
ECFMERFX L     R3,Q0(R2)           GET DATA ADDRESS
         LA    R3,Q0(R3)           CLEAR OP CODE
         ALR   RD,R3               ADD READ CT TO START OF DATA
         LH    R5,SENSDISP         GET DISP TO ERROR AREA
         SLR   RD,R5               FIND BAD AREA
         CLR   RD,R3               IS ERROR IN THIS DATA AREA
         BL    ERRUCK              NO- CANT RECOVER
         CLI   SENSESAV+Q7,SNSZEUSA  IS THIS A 2305 MOD1
         BNE   ECFNOZA            NO FIX 3 CONTIG BYTES
         XC    Q0(Q1,RD),SENSOVLY    FIX BYTE ONE   *
         XC    Q2(Q1,RD),SENSOVLY+Q1 FIX BYTE TWO   * ON 2305 MOD1
         XC    Q4(Q1,RD),SENSOVLY+Q2 FIX BYTE THREE *
         B     ECFIXMER            BR AROUND MERLIN FIX
ECFNOZA  XC    Q0(Q3,RD),SENSOVLY  FIX BAD AREA FOR 3330 OR 2305 MOD2
ECFIXMER EQU   *
ECFRESIO EQU   *
         TM    Q4(R2),X40          IS CHAIN ON IN FAILING CCW
         BZ    NOMTRET             NO TAKE NO I/O EXIT
         MVC   ECFTICCW+Q1(Q3),CSWCAW+Q1  PUT TIC ADDR IN CCW
         MVI   ECFTICCW,ECFTIC     RESTOR TIC CMD
         MVC   TIC(Q8),ECFSRC      CHNG RETRY TIC TO SRCH W/CHAIN
         MVC   CAW(Q4),ECFRESTR    SET RESTART CAW
         TM    Q8(R2),ECFCNTOP     IS USER CCW AT RESTRT A COUNT
         BO    ECFNOCNT            YES--DONT USE DUMMY COUNT CCW
         MVC   ECFTICRD(Q4),ECFDMYRD SET DMY RD COUNT IN CHAIN
         B     ECFRSEXT            LEAVE RESTART RTN
ECFNOCNT MVC   ECFTICRD(Q4),ECFTICCW TIC TO USER,NO RD COUNT
ECFRSEXT EQU   *
         B     INITRY25            REST REGS 1 AND 13 AND SIO
*
* ON A TRACK CONDITION CHECK, THE HOME ADDRESS AND RECORD 0 ARE READ.
*   THE ID OF RECORD 0 IS USED AS THE NEXT SEEK ARGUMENT, AND THE FLAG
*   BYTE OF HOME ADDRESS IS USED TO ROUTE CONTROL.
*
TRKCCK   EQU   *
         MVI   SENSE+1,X'F0'       ANY UNIT CHK IN TCC CHAIN IS ERROR;
*                                    IF SENSE REENTERED,BRANCH TO ERRTN
         MVC   72(4),TRKCKCAW      MOVE TO CAW A PTR TO TCC CMD CHAIN
         BAL   5,IEASTRIO          READ HA INTO BUF,R0 INTO IEASKADR+2
         MVI   SENSE+1,X'00'       TURN OFF BRANCH TO ERROR ROUTINE
         TM    HABUFER,X'02'       TEST IF ON DEFECTIVE TRACK
         BC    1,INITRYDT     YES-TEST FURTHER
         LA    8,INITRTRY     LOAD BR ADDR FOR RETURN FROM EOTRACK 0542
*                              ROUTINE                             0542
*
* END OF TRACK ROUTINE UPDATES THE HH PORTION OF THE SEEK AND SEARCH
*   ARGUMENTS BY 1.
*
EOTRACK  EQU   *
         LH    13,IEASKADR+4       GET HH PORTION OF SEEK ARGUMENT
         LA    13,1(13)            UPDATE BY 1
         CH    13,IEATRPCL         COMPARE TO MAX NO. OF TRKS PER CYL
         BE    UPCYL
         STH   13,IEASKADR+4       STORE NEW HH IN SEEK ARGUMENT
         STH   13,IEASRADR+2         AND SEARCH ARGUMENT
         BR    8
*
* THE FOLLOWING IS A COMMON SUBROUTINE USED TO SET UP THE COMMAND CHAIN
*   TO SEEK TO THE NEW TRACK AND TIC TO THE COMMAND WHICH CAUSED THE
*   UNIT CHECK.
*
INITRTRY EQU   *
         MVI   IEASRADR+4,X'01'    INSURE SEARCH FOR REC 1 ON NEW TRK
INITRY2  ST    2,TIC                                               0542
         MVI   TIC,X'08'           TIC COMMAND
         MVC   72(4),RETRYCAW      MOVE TO CAW PTR TO RETRY CCW CHAIN
INITRY25 EQU   *                   ENTRY PT FROM ECF TO RESTART
         LR    5,1                 RESET REG FOR RETURN FROM I/O RTN
         L     13,IEAFULWD             RESTORE REGISTER 13         4841
         B     IEASTRIO
INITRYDT TM    IEARREC1,X'02' *  IS THERE M-T?                     0542
         BNO   INITRY2           NO--TAKE NORM RETURN              0542
         ST    2,TIC             RESTORE TIC COMMAND AND           0542
         MVI   TIC,X'08'         CCW ADDR                          0542
         MVC   72(4),RETRYCAW    RE-ENTER CCW CHAIN CAUSING U-CHK  0542
         BAL   5,IEASTRIO        START I/O                         0542
         CLC   IEASRADR(4),IEAST   IS NEXT COUNT ON SAME TRK       0542
         BE    NOMTRET       YES-RETURN TO CALLER                  0542
         MVC   IEASKADR+2(4),IEASRADR RESTORE DEF TRK ADDR         0542
         BAL   8,EOTRACK      UPDATE TRK ADDR BY ONE               0542
         MVI   IEASRADR+4,X'01' INSURE READ OF REC ONE ON NXT TRK  0542
         LA    1,6(1)              SET RET ADR TO BYPAS INLIN TRK  0542
*                              UPDATE INSTRUCTION                  0542
NOMTRET  LR    5,1               RESTORE ORIG CALLERS RET ADDR     0542
         L     13,IEAFULWD                                         0542
         NI    IEARREC1,X'FD'    TURN OFF M-T SWIT IF ON           0542
MTRET    BR    R5                  RET IS TO CALLER OR IF M-T    A51251
*                        RETURN IS PAST INLINE RESTORE OF SRADDR   0542
*
* END OF CYLINDER ROUTINE UPDATES THE CYLINDER PORTION BY 1, AND
*   ZEROS THE TRACK PORTION OF THE SEEK AND SEARCH ARGUMENTS.
*
UPCYL    EQU   *
         SR    13,13
         STH   13,IEASKADR+4       STORE 0 IN HH PART OF SEEK ARG
         STH   13,IEASRADR+2       STORE 0 IN HH PART OF SEARCH ARG
         LH    13,IEASKADR+2       GET CURRENT CC ARGUMENT
         LA    13,1(13)            UPDATE BY 1
         STH   13,IEASKADR+2       STORE NEW CC IN SEEK ARG
         STH   13,IEASRADR         STORE NEW CC IN SEARCH ARG
         BR    8                                                   0542
*
* FOLLOWING ARE THE VARIOUS ERROR ROUTINES WHICH CAUSE A WAIT STATE
*   WITH AN ERROR CODE.
*
IEAERR1  MVI   IEAERR,X'01'        I/O NOT OPERATIONAL
         LPSW  IEAWAIT
         SPACE
ERRSIO2  TM    68,X'30'            TEST FOR CU BUSY OR CU END      3800
         BC    7,IEASTRIO          IF EITHER, RESTART I/O          3800
*    IF THE I/O OPERATION WAS NOT INITIATED DUE TO SOME CAUSE      3800
*    OTHER THAN CONTROL UNIT BUSY OR CONTROL UNIT END, THE CSW     3800
*    WAS STORED IN ERROR                                           3800
         MVI   IEAERR,X'02'        CSW STORED IN ERROR             3800
         LPSW  IEAWAIT
         SPACE
ERRSIO3  MVI   IEAERR,X'03'        I/O NOT INITIATED
         LPSW  IEAWAIT
         SPACE
ERRTIO   MVI   IEAERR,X'04'        ERROR ON TIO
         LPSW  IEAWAIT
         SPACE
IEAERR8  MVI   IEAERR,X'18'             EXCEEDED CORE AVAIL FOR RLD000B
         LPSW  IEAWAIT
         SPACE
PGMCHK   MVI   IEAERR,X'19'             UNEXPECTED PGM CHECK       000B
         LPSW  IEAWAIT
         SPACE
ERRCSW   EQU   *                   PGM CHECK OR CATASTROPHIC ERROR
         MVI   IEAERR,X'06'        INDICATE UNDEFINED CHECK
         LPSW  IEAWAIT
         SPACE
ERRUCK   EQU   *                   UNIT CHK OTHER THAN TCC,EOT,EOCYL
         ST    2,76                SAVE PTR TO CCW CAUSING UNIT CHK
         MVC   84(4),SENSESAV      MOVE 4 SNSE BYTES TO AREA IN S/A DMP
         MVI   IEAERR,X'05'        INDICATE UNIT CHECK
         LPSW  IEAWAIT
         SPACE
ERRSNS   EQU   *                   UNIT CHECK ON SENSE COMMAND     3800
         MVI   IEAERR,X'17'        INDICATE WAIT CODE              3800
         LPSW  IEAWAIT                                             3800
         SPACE 1                                                   3800
ERRNUC   MVI   IEAERR,X'0E'            NUCLEUS DSCB OR IEANUC0X    AOS2
         LPSW  IEAWAIT                 MEMBER NO FOUND             AOS2
         SPACE 1
ERRSCTR  MVI   IEAERR,X'0C'            NUCLEUS NOT IN SCTR FORMAT  AOS2
         LPSW  IEAWAIT                                             AOS2
         SPACE 1
         DS    0D
IEAWAIT  DC    X'00020000'          DISABLED WITH WAIT FLAG ON
IEAERRX  DC    X'00000000'          I/O ERROR STOP
         SPACE 1
IEAINT   BR 10                        RETURN FROM PC INTERRUPT  YM02634
         SPACE 1
*  ********************************************************************
*  **  THE ORDER OF THE FOLLOWING ADDRESS CONSTANTS FROM IEASNCAW TO
*   IEACCWND MUST NOT BE ALTERED WITHOUT THE CONSENT OF THE IPL
*  MAINTAINER AS IT WILL IMPACT THE SELF RELOCATION OF IPL.
*  ********************************************************************
         SPACE 1
*CONSTANTS- IO ROUTINE
IEASNCAW DC    A(IEASNCCW)
TRKCKCAW DC    A(TRKCKCCW)
RETRYCAW DC    A(RETRYCCW)
ECFRESTR EQU   RETRYCAW            ECF RESTART CCW CHAIN ADDR
IEAPCFP  DC    A(PGMCHK)
*CONSTANTS- NUCLEUS LOAD ROUTINE
IEABFLST DC    A(IEABUFSR)
IEATRLST DC    A(IEATRTSK)                 SEEK COMD
*CONSTANTS- CONTROL SECTION DATA ORGANIZATION ROUTINE
IEATRTAB DC    A(IEAIPLND)                 START OF TRANSLATION TABLE
IEASCATL DS    F                           START OF SCATTER LIST
IEASIZTB DS    F                        AREA TO STORE SIZTABLE ADDRESS
IEAADRTB DS    F                        AREA TO STORE ADRTABLE ADDRESS
IEARLFTB DS    F                        AREA TO STORE RLFTABLE ADDRESS
IEACNTND DS    F                        END   OF 4 BYTE LOAD CONT TABLE
IEANUCND DS    F                        PNTR TO END OF NUCLEUS
IEAIPLOC DS    F                        PNTR TO IPL RELOC ADDR
*CONSTANTS- IPL RELOCATION PROGRAM                                 MP65
         DS    0F
IEA256K  DC    X'00040000'  HIGH SPEED CORE MULTIPLE (1 BOX) = 256KMP65
IEA252K  DC    X'0003F000' 256-4K = 1 BOX LESS POSSIBLE MP65 PREFIXMP65
IEA512K  DC    X'00080000'       CORE SIZE OF 512K               A26272
IEA508K  DC    X'0007F000'       512K-4K FOR POSSIBLE MP PREFIX  A26272
         SPACE 1
IEACCWST DS    0D                      START OF CCW TABLE
IEABUFSR DC    X'07'                   SEEK
         DC    AL3(IEASKADR)           LOC OF SEEK ADDRESS
         DC    X'4000'                 COMMAND CHAIN FLAG
         DC    H'6'                    LENGTH
         DC    X'1F'                   SET FILE MASK
         DC    AL3(IEAMASK)            INHIBIT WRITES AND SEEKS
         DC    X'4000'                 COMMAND CHAIN FLAG
         DC    H'1'                    LENGTH OF FILE MASK
IEASRID  DC    X'31'                   SEARCH EQUAL ID
         DC    AL3(IEASRADR)           DA
         DC    X'4000'                 CC ON,SILI OFF
         DC    X'0005'                 5 BYTE COUNT
         DC    X'08'                   TIC
         DC    AL3(IEASRID)            ADDR OF TIC'ED TO CCW
         DC    X'00000000'             NO FLAGS OR COUNT ON TIC
         DC    X'06'                   READ DATA
         DC    AL3(IEABUFER)           INTO BUFFER
         DC    X'6000'                 SILI AND CHAIN ON
         DC    H'260'                  MAX COUNT 260
         DC    X'92'                   READ COUNT MULTI TRACK
         DC    AL3(IEAST)
         DC    X'2000'                 SILI FLAG
         DC    H'8'                    LENGTH
         SPACE 1
IEASNCCW DC    X'04'                SENSE COMD
         DC    AL3(SENSESAV)        ADDRESS OF SENSE BUFFER
         DC    X'2000'              SILI
         DC    H'24'                   LARGEST DASD SENSE LENGTH
         SPACE 1
IEATRTSK DC    X'07'                   SEEK FIRST TR TBL THEN TXT RECS
         DC    AL3(IEASKADR)           LOC OF SEEK ADDR
         DC    X'4000'                 COMMAND CHAIN FLAG
         DC    H'6'                    LENGTH
         DC    X'1F'                       SET FILE MASK
         DC    AL3(IEAMASK)                INHIBIT WRITES AND SEEKS
         DC    X'4000'                     COMMAND CHAIN
         DC    H'1'                        LENGTH
IEATRTSR DC    X'31'                       SEARCH EQUAL ID
         DC    AL3(IEASRADR)
         DC    X'4000'
         DC    H'5'
         DC    X'08'                       TIC
         DC    AL3(IEATRTSR)
         DC    X'00000000'                 NO FLAGS OR COUNT ON TIC
IEATRTRD DC    X'06'                       READ DATA
         DC    AL3(IEATRTBH)               TT/SC LIST FIRST READ
         DC    X'2000'
         DC    H'1024'
IEARDCNT DC    X'92'                       READ COUNT MULTI TRACK
         DC    AL3(IEAST)
         DC    X'2000'
         DC    H'8'
         SPACE 1
TRKCKCCW DC    X'07'               SEEK
         DC    AL3(IEASKADR)
         DC    X'40000006'
         DC    X'1A'               READ HOME ADDRESS
         DC    AL3(HABUFER)
         DC    X'40000005'
         DC    X'16'               READ RECORD 0
         DC    AL3(IEASKADR+2)       INTO THE SEEK ARGUMENT
         DC    X'00000004'
         SPACE
RETRYCCW DC    X'07'               SEEK
         DC    AL3(IEASKADR)
         DC    X'40000006'
         DC    X'1F'               SET FILE MASK
         DC    AL3(IEAMASK)
         DC    X'40000001'
         DC    X'1A'               READ HOME ADDRESS
         DC    AL3(IEASKADR+1)
         DC    X'50000005'         SUPPRESS DATA TRANSFER
TIC      DC    2F'0'
         DC    X'08'          TIC BACK TO ECFSRC
         DC    AL3(TIC)        TILL RECORD FOUND
         DC    F'0'
ECFTICRD DC    2F'0'               HOLDS 'ECFTICCW' IF RESTART
*                                   ON COUNT OR 'ECFTICRD' IF
*                                     FOR NON-COUNT RESTART
ECFTICCW DC    2F'0'          TIC FILLED BY ECF RTN TO USERS CHAN
ECFDMYRD DC    X'12'          DUMMY READ COUNT TO ALIGN HEAD TO
         DC    AL3(IEABUFER)   COUNT FIELD FOLLOWING RECORD
         DC    X'7000'         WITH BAD DATA-CMD CHAIN,SKIP,SILI
         DC    H'1'            BITS ARE ON
ECFSRC   DC    X'31'          THIS SEEK CCW WILL OVERLAY CCW
         DC    AL3(IEASRADR)   LABELED 'TIC' TO FINISH ECF CCW
         DC    X'4000'         CHAIN 'TIC' IS DYNMACLY RESTORED
         DC    H'5'
IEACCWND DS    0D                       END OF CCW TABLE
         SPACE 1
*CONSTANTS- SCATTER LOAD RELOCATION ROUTINE
IEANUCY  DC    C'IEANUC01'             MEMBER NAME STANDARD NUCLEUS
VNIPM    DC    C'VNIPM'                CHANGES ABOVE MEMBER NAME   AOS2
IEAMASK  DC    X'58'                       INHIBIT WRITES AND SEEKS
HABUFER  DS    5X'00'
RLDFLAG  DC    X'00'
IEATMP13 DS    F                       STORAGE FOR R13(COUNT REG)  AOS2
         DS    0D
IEASKADR DS    3H            SEEK ADDRESS  BBCCHH
         DC    X'0100'
         DS    0D
IEASRADR DC    5X'00'        SEARCH ADDRESS   CCHHR
         DS    0D
IEAST    DS    2F                          STORE RECORD ID
IEAFULWD DS    F
IEAZERO  DC    X'00000000'
IEARREC1 DC    X'00'             SWITCH USED TO TEST MULTITRK OPT  0542
IEAFLGS1 DC    X'00'                   FLAG BYTE FOR AOS2 CHANGES  AOS2
MODNIP   EQU   X'80'                   BIT 1 - 1 FOR MODULAR NIP   AOS2
NIPMSRCH EQU   X'40'                   BIT 2 - 1 FOR IEAVNIPM SRCH AOS2
NEWBLK   EQU   X'20'                   BIT 3 - 1 FOR 2ND BLOCK RD  AOS2
DSCBSRCH EQU   X'10'                   BIT 4 - 1 FOR NUC.DSCB SRCH AOS2
         SPACE 1
*CONSTANTS- COMMON TO IPL LOADER ROUTINES
IEATSLSZ DS    F                        4 BYTE AREA TO STOR TRL+5XSCLST
IEATXTOR DC X'00000000'                 ORIGIN OF FIRST TXT REC
IEACSCNT DS F                           NUMBER OF CS IN NUCLEUS
IEAIPLTP DS F                           TOP OF IPL TABLES BEFORE RELOC
IEATPNUC DS F                           LOCATION ABOVE ORDERED CS
IEASZLST DS F                           ESDID OF LAST ORDERED CS
IEARLD1  DC X'00000000'          STARTING ADDR. OF LARGEST AREA FOR RLD
IEASZRL1 DS F                    SIZE LARGEST RLD AREA
*CONSTANTS- IPL PRELUDE
IEANUC   DC X'00000000'               WHERE OP KEYS IN NUCLEUS SUFFIX
IEAMAXC DC    X'01000000'               MAXIMUM MACHINE SIZE       000B
IEA16MEG DC    X'01000000'               MAXIMUM MACHINE SIZE   YM02634
CSWCAW   DS    3F                  SAVE AREA FOR CSW + CAW USED
*                                   IN SENSE RTN
SENSESAV DS    12H                 AREA TO HOLD SENSE DATA
SENSDISP DS    H                   ECF DISPLACEMENT DATA
SENSOVLY DS    2H                  ECF CORRECTION DATA
SENSEWRK DC    A(0)                RESTART BYTE COUNT  ZA01035
         DC    C'V006'                     IPL ID
IEATYP   DC    X'00'
         DS    0H
IEAFLAG  DC    X'7000'                    FLAG BYTE
IEAESDID DS    H                           ESDID OF FIRST TXT REC
IEATRTSZ DS    H                        2BYTE AREA TO STOR TRL TABLE SZ
IEASCLSZ DS    H                        2 BYTE AREA TO STOR SCLST SIZE
IEADEVSZ DC    X'FFFF'                  2 BYTES FOR NO. OF CYLS    AOS2
IEATRPCL DC    X'FFFF'                  2 BYTE AREA TO STOR TRACKS/CYL
IEACTLSC DS    H
IEADRUM  DC    X'00'                   FLAG FOR 2301 DRUM          AOS2
IEADRMLM DC    X'000100C8'             CYLS & TRK/CYL FOR DRUM     AOS2
         DS    0D
IEABUFER EQU   *
*   THE NEXT TWO INSTRUCTIONS ROUND IPL TEXT UP TO A          BI A44954
*   256 BYTE BOUNDARY.  "IPLEND" MUST NOT HAVE A VALUE        BI A44954
*   GREATER THAN X'E00' DUE TO 2311 RESTRICTIONS.             BI A44954
L        EQU   (IEABUFER-IEAIPL+255)/256*256-(IEABUFER-IEAIPL)   A44954
         DC    XL(L)'00'                                      BI A44954
IPLEND   EQU   *                 ROUNDED END OF IPL TEXT      BI A44954
IEATRTBH EQU IEABUFER+264               ALLOW FOR TT HEADER
IEAIPLND EQU IEABUFER+268               ASSUME TOP OF IPL
IEAERR   EQU IEAERRX+3                  ERROR STOP SIGNAL
IEASTARL EQU IPLDATDS-IEASTAR1    AREA BELOW RELOCATABLE SECTION OF IPL
IEARELSZ EQU   IEAIPLND-IPLDATDS        SIZE OF IPL TO BE RELOCATED
IEACNTSZ EQU IEACNTND-IEASNCAW       SIZE OF 4 BYTE CON TABLE
IEACCWSZ EQU   IEACCWND-IEACCWST        SIZE OF CCW TABLE
IEATXTRD EQU IEATRTRD                   TEXT READ AND TT READ SAME CCWS
IEATXLST EQU IEATRLST
IEANUCNO EQU   IEANUCY+7               LAST BYTE OF IEANUCY        AOS2
IEANUCSE EQU   IEABUFER+63             NUCLEUS START AND END CCHH  AOS2
         IEAPXNIP IPLDATA=MAP          IPLDATA DSECT               AOS2
         END START
