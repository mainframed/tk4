         TITLE 'IEAVFP -- FINDPAGE'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVFP
*
*02*     CSECT-NAME = IEAVFP
*
*01*  DESCRIPTIVE-NAME = FINDPAGE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = CHANGE LEVEL 000
*
*01*  FUNCTION = FINDPAGE IS A SUBROUTINE OF RSM (REAL STORAGE
*     MANAGEMENT) WHICH IS GIVEN A VIRTUAL ADDRESS AS INPUT. THIS
*     MODULE RETURNS THE VIRTUAL ADDRESSES OF THE PAGE AND EXTERNAL
*     PAGE TABLE ENTRIES CORRESPONDING TO THE INPUT ADDRESS PROVIDED
*     THE INPUT VIRTUAL ADDRESS IS CONTAINED IN A VALID SEGMENT OF
*     VIRTUAL STORAGE.
*
*02*     OPERATION = THIS MODULE MAKES ITS FOOTPRINT IN THE RSM RCA FOR
*        RECOVERY PURPOSES WHEN CALLED AT ENTRY POINT IEAVFP2
*
*01*   NOTES =
*
*02*     DEPENDENCIES = FOR ENTRY POINT IEAVFP1 THE LOCAL LOCK MUST BE
*        HELD. FOR ENTRY POINT IEAVFP2 THE SALLOC LOCK MUST BE HELD.
*        THIS MODULE IS INTENDED FOR USE ONLY IN VS2 RELEASE 2 AND WILL
*        RUN ON ANY VS2 RELEASE 2 HARDWARE/SOFTWARE CONFIGURATION.
*
*03*        CHARACTER-CODE-DEPENDENCIES = NONE
*
*02*     RESTRICTIONS = THIS PROGRAM RUNS IN SUPERVISOR MODE ONLY.
*
*02*     REGISTER-CONVENTIONS = REGISTER 12 IS THE BASE REG.  REGISTERS
*        2 AND 3 WILL ALWAYS CONTAIN THE RSM HEADER ADDRESS AND THE PVT
*        ADDRESS RESPECTIVELY.
*
*02*     PATCH-LABEL = NONE
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER-370R
*
*02*     MODULE-SIZE = 300 BYTES
*
*02*     ATTRIBUTES = NUCLEUS, ZERO PROTECT KEY, REENTERABLE,
*        REFRESHABLE, SUPERVISOR MODE
*
*01*  ENTRY-POINT = IEAVFP1
*
*02*     PURPOSE = THIS ENTRY POINT IS USED BY NON-RSM ROUTINES WHEN
*        THEY WISH TO KNOW THE PGTE, XPTE ADDRESSES FOR A VIRTUAL
*        ADDRESS.
*
*02*     LINKAGE = BALR
*
*02*     INPUT =
*          LOCKS: LOCAL LOCK MUST BE HELD
*          R0: IRRELEVANT
*          R1: VIRTUAL ADDRESS
*          R2-R13: IRRELEVANT
*          R14: RETURN ADDRESS
*          R15: IRRELEVANT
*
*02*     OUTPUT = NO STREAM OR LIST OUTPUT
*
*02*     REGISTERS-SAVED = 2, 3, 10-14
*
*02*     REGISTERS-RESTORED = 2, 3, 10-14
*
*01*  EXIT-NORMAL =
*
*02*     CONDITIONS = THE PGTE, XPTE ADDRESSES HAVE BEEN SUCCESSFULLY
*        CALCULATED.
*
*02*     OUTPUT =
*          LOCKS: SAME AS AT ENTRY
*          R0: VIRTUAL ADDRESS OF PGTE
*          R1: VIRTUAL ADDRESS OF XPTE
*          R3-R14: UNCHANGED
*          R15: RETURN CODE
*
*02*     RETURN-CODES = 0 - SUCCESSFULL ADDRESS CALCULATIONS
*
*01*  EXIT-ERROR =
*
*02*     CONDITIONS = SUCCESSFULL ADDRESS CALCULATION WAS PROHIBITED
*        EITHER BECAUSE THE INPUT VIRTUAL ADDRESS RESIDES IN AN INVALID
*        SEGMENT FOR WHICH THERE IS NO PGT/XPT OR AN INTERNAL RSM ERROR
*        OCCURRED.
*
*02*     OUTPUT =
*          LOCKS: SAME AS AT ENTRY
*          R0-R1: UNPREDICTABLE
*          R3-R14: UNCHANGED
*          R15: RETURN CODE
*
*02*     RETURN-CODES =
*          4 - THE INPUT VIRTUAL ADDRESS RESIDES IN AN INVALID SEGMENT
*          8 - AN INTERNAL RSM ERROR WAS DETECTED
*
*01*  ENTRY-POINT = IEAVFP2
*
*02*     PURPOSE = THIS ENTRY POINT IS USED ONLY BY OTHER RSM ROUTINES
*        DESIRING PGTE, XPTE ADDRESSES CORRESPONDING TO A VIRTUAL
*        ADDRESS.
*
*02*     LINKAGE = BALR
*
*02*     INPUT =
*          LOCKS: SALLOC LOCK MUST BE HELD
*          R0: IRRELEVANT
*          R1: VIRTUAL ADDRESS
*          R2: RSM HEADER ADDRESS
*          R3: PVT ADDRESS
*          R4-R13: IRRELEVANT
*          R14: RETURN ADDRESS
*          R15: IRRELEVANT
*
*02*     OUTPUT = NO STREAM OR LIST OUTPUT
*
*02*     REGISTERS-SAVED = 10-14
*
*02*     REGISTERS-RESTORED = 10-14
*
*01*  EXIT-NORMAL =
*
*02*     CONDITIONS = THE PGTE,XPTE ADDRESSES HAVE BEEN SUCCESSFULLY
*        CALCULATED.
*
*02*     OUTPUT =
*          LOCKS: SAME AS AT ENTRY
*          R0: VIRTUAL ADDRESS OF PGTE
*          R1: VIRTUAL ADDRESS OF XPTE
*          R2-R14: UNCHANGED
*          R15: RETURN CODE
*
*02*     RETURN-CODES = 0 - SUCCESSFULL ADDRESS CALCULATIONS
*
*01*  EXIT-ERROR =
*
*02*     CONDITIONS = SUCCESSFULL ADDRESS CALCULATION WAS PROHIBITED
*        EITHER BCAUSE THE INPUT VIRTUAL ADDRESS RESIDES IN AN INVALID
*        SEGMENT FOR WHICH THERE IS NO PGT/XPT OR AN INTERNAL RSM ERROR
*        OCCURRED.
*
*02*     OUTPUT =
*          LOCKS: SAME AS AT ENTRY
*          R0-R1: UNPREDICTABLE
*          R2-R14: UNCHANGED
*          R15: RETURN CODE
*
*02*     RETURN-CODES =
*          4 - THE INPUT VIRTUAL ADDRESS RESIDES IN AN INVALID SEGMENT
*          8 - AN INTERNAL RSM ERROR WAS DETECTED
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES =
*          TRANSLATE REAL TO VIRTUAL (IEAVTRV)
*              TO GET THE VIRTUAL ADDRESS OF THE PAGE TABLE FROM THE
*              REAL ADDRESS OBTAINED FROM A SEGMENT TABLE ENTRY.
*
*02*     DATA-AREAS =
*          LOCAL WORK SAVE AREA - USED BY IEAVFP1 ENTRY TO SAVE
*               REGISTERS
*          WORK SAVE AREA IN PVT ASSIGNED TO FINDPAGE -
*               USED BY IEAVFP2 ENTRY TO SAVE REGISTERS
*
*02*     CONTROL-BLOCKS =
*          CVT      R
*          ASCB     R
*          ASXB     R
*          WSAL     R
*          PVT      R/W
*          RSMHD    R
*          SGTE     R
*
*01*  TABLES = NONE
*
*01*  MACROS =
*      EXECUTABLE MACROS
*          MODID
*      MAPPING MACROS
*          IHAPSA
*          CVT
*          IHAASCB
*          IHAASXB
*          IHAWSAVT
*          IHAPVT
*          IHARSMHD
*          IHASGTE
*
*02*    SERIALIZATION = NO LOCKS OR ENQ RESOURCES ARE OBTAINED OR
*       RELEASED BY THIS MODULE.
*
*01*  CHANGE-ACTIVITY = Y02752, Y02753
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = NONE
*
**** END OF SPECIFICATIONS ***/
          EJECT
***********************************************************************
*                                                                     *
*        FINDPAGE                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
IEAVFP   CSECT                         CSECT FOR FINDPAGE
*A000000-999999                                                  Y02752
         MODID BRANCH=NO
         ENTRY IEAVFP1,IEAVFP2         ENTRY POINT DECLARATION
         EJECT
***********************************************************************
*                                                                     *
*        EQUATES FOR REGISTERS AND CONSTANTS                          *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                       REGISTER 0
R1       EQU   1                       REGISTER 1
R2       EQU   2                       REGISTER 2
R3       EQU   3                       REGISTER 3
R9       EQU   9                       REGISTER 9
R10      EQU   10                      REGISTER 10
R11      EQU   11                      REGISTER 11
R12      EQU   12                      REGISTER 12
R13      EQU   13                      REGISTER 13
R14      EQU   14                      REGISTER 14
R15      EQU   15                      REGISTER 15
FOUR     EQU   4                       A RETURN CODE
EIGHT    EQU   8                       A RETURN CODE
SEGEXCP  EQU   5                       MASK BIT POSITION FOR BAD SEG
*                                      OR BAD TRANSLATION
PGTBLLEN EQU   32                      LENGTH OF A PAGE TABLE
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE NON-RSM ENTRY POINT. THE LOCAL LOCK MUST BE      *
*        HELD BY THE CALLER.  REGISTER 1 CONTAINS THE VSA FOR WHICH   *
*        THE PGTE ADDRESS IS DESIRED.  REGISTER 14 MUST CONTAIN THE   *
*        RETURN ADDRESS.  UPON RETURN REGISTER 0 WILL CONTAIN THE     *
*        PGTE ADDRESS, REGISTER 1 WILL CONTAIN THE XPTE ADDRESS, AND  *
*        REGISTER 15 WILL CONTAIN THE RETURN CODE.                    *
*                                                                     *
***********************************************************************
         USING PSA,0                   PSA ALWAYS ADDRESSABLE
IEAVFP1  L     R15,PSAAOLD             ACQUIRE CURRENT ASCB ADDRESS
         USING ASCB,R15                TELL ASSEMBLER ASCB ADDRESSABLE
         L     R15,ASCBASXB            ACQUIRE ASXB ADDRESS
         USING ASXB,R15                TELL ASSEMBLER ASXB ADDRESSABLE
         L     R15,ASXBSPSA            ACQUIRE SAVE/WORK VECTOR ADDR'S
         USING WSAL,R15                TELL ASSEMBLER SPSA ADDRESSABLE
         L     R15,WSALRSM             ACQUIRE ADDRESS OF RSM'S AREA
         STM   R2,R3,0(R15)            SAVE USERS REGISTERS
         STM   R9,R14,8(R15)           SAVE USERS REGISTERS
         LR    R13,R15                 SAVE POINTER TO SAVE AREA
         DROP  R15                     R15 IS BEING LOST
         L     R9,FLCCVT               GET CVT POINTER
         USING CVT,R9                  TELL ASSEMBLER WE HAVE IT
         L     R3,CVTPVTP              GET PVT POINTER
         USING PVT,R3                  TELL ASSEMBLER WE NOW HAVE PVT
         L     R2,PSAAOLD              GET CURRENT ASCB ADDRESS
         USING ASCB,R2                 TELL ASSEMBLER R2 HAS ASCB ADDR
         L     R2,ASCBRSM              GET POINTER TO THE RSM HEADER
         USING RSMHD,R2                TELL ASSEMBLER ABOUT IT
         BALR  R12,0                   SET UP A BASE REGISTER
DIFFEREN LA    R12,RSMADDRY-DIFFEREN(R12) MAKE IT LOOK AS IF WE CAME
*                                         IN AT SECOND ENTRY POINT
         USING RSMADDRY,R12            TELL ASSEMBLER WE'RE ADDRESSABLE
*                                      FROM THERE
         BAL   R11,MAINLINE            CALL FINDPAGE MAINLINE
         LM    R2,R3,0(R13)            RESTORE USERS REGISTERS
         LM    R9,R14,8(R13)           RESTORE USERS REGISTERS
         BR    R14                     RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE RSM ENTRY POINT. TO ENTER HERE THE SALLOC MUST   *
*        BE HELD BY THE CALLER. REGISTER 2 MUST POINT TO THE RSM      *
*        HEADER AND REGISTER 3 MUST POINT TO THE PVT.                 *
*        THE OTHER INPUTS AND OUTPUTS ARE AS ABOVE.                   *
*                                                                     *
***********************************************************************
IEAVFP2  STM   R9,R14,PVTWSA14         SAVE USED REGISTERS
         BALR  R12,0                   SET UP ADDRESSABILITY
RSMADDRY DS    0H
         L     R9,FLCCVT               GET CVT ADDR FOR MAINLINE
         BAL   R11,MAINLINE            CALL MAINLINE ROUTINE
         LM    R9,R14,PVTWSA14         RESTORE DESTROYED REGISTERS
         BR    R14                     RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        THE SETUP FOR RSM AND NON-RSM CALLERS HAS BEEN DONE.         *
*        THIS IS THE CODE WHICH ACTUALLY FINDS THE PAGE TABLE ENTRY   *
*                                                                     *
***********************************************************************
MAINLINE LRA   R0,0(R1)                SET COND CODE TO SEE IF SEGMENT?
         BC    SEGEXCP,RC4             INVALID SEGMENT ENTRY. ERROR
         SRL   R1,11                   MOVE 2*PAGE NUMBER TO LOW BITS
         L     R15,RSMVSTO             GET SEGMENT TABLE ADDRESS
         LR    R10,R1                  SAVE 2*PAGE NUMBER FOR LATER
         SRL   R1,3                    NOW MOVE SEGMENT NUMBER * 4 TO  *
                                       CORRECT BITS
         N     R1,MASK1                GET RID OF GARBAGE BITS
         AR    R1,R15                  POINT TO SGTE
         USING SGTSTE,R1               TELL ASSEMBLER WE POINT TO SGTE
         L     R1,SGTSTE               GET SGTE INTO REGISTER
         N     R1,MASK2                GET RID OF ALL BITS NOT PART OF *
                                       PAGE TABLE ADDRESS
***********************************************************************
*                                                                     *
*        WE NOW HAVE THE REAL ADDRESS OF THE PAGE TABLE.              *
*        TRANSLATE REAL TO VIRTUAL WILL BE CALLED TO CONVERT          *
*        THIS ADDRESS TO A VSA THUS GIVING THE VSA OF THE PAGE        *
*        TABLE.  REG 1 CONTAINS BOTH THE INPUT AND OUTPUT.            *
*                                                                     *
***********************************************************************
         L     R15,CVTPTRV             GET ENTRY POINT OF TRV
         BALR  R14,R15                 CALL IT TO CONVERT TO VSA
         LTR   R15,R15                 GOOD RETURN CODE?
         BNZ   RC8                     NO... ERROR
         N     R10,MASK3               GET RID OF EXTRA BITS IN PAGE #
         LA    R0,0(R1,R10)            ADDRESS OF PGTE INTO REG 0
         SPACE
*   THE NEXT FOUR INSTRUCTIONS MULTIPLY THE (PAGE NUMBER*2) BY 6 TO
*   GET 12*PAGE NUMBER WHICH IS SAME AS XPTLEN*PAGE NUMBER.
*   NOTE THIS CODE IS DEPENDENT ON THE LENGTH OF THE XPTE NOT CHANGING.
*   NOTE ALSO THAT THESE INSTRUCTIONS ARE FASTER THAN A MULTIPLY.
         ALR   R10,R10                 2 TIMES (PAGE NUMBER*2)
         LR    R14,R10
         ALR   R10,R10                 4 TIMES (PAGE NUMBER*2)
         ALR   R10,R14                 6 TIMES (PAGE NUMBER*2)
         LA    R1,PGTBLLEN(R1,R10)     XPTE ADDRESS INTO R1
         BR    R11                     RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*      ERROR EXITS ARE MADE FROM THIS POINT EITHER BECAUSE THE INPUT  *
*   VIRTUAL PAGE WAS IN AN INVALID SEGMENT OR BECAUSE TRANSLATE REAL  *
*   TO VIRTUAL RETURNED A BAD RETURN CODE INDICATING AN INTERNAL RSM  *
*   PROBLEM.                                                          *
*                                                                     *
***********************************************************************
         SPACE
RC4      LA    R15,FOUR                SGTE INVALID ERROR CODE
         BR    R11                     RETURN TO CALLER
         SPACE
RC8      LA    R15,EIGHT               BAD RETURN CODE FROM TRV-BAD ERR
         BR    R11                     RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS USED BY FINDPAGE                                   *
*                                                                     *
***********************************************************************
         SPACE
         DS    0F
MASK1    DC    XL4'000003FC'           SEGMENT ENTRY BITS * 4
MASK2    DC    XL4'00FFFFF8'           PAGE TABLE ADDRESS BITS
MASK3    DC    XL4'0000001E'           PAGE NUMBER BITS * 2
         EJECT
***********************************************************************
*                                                                     *
*        MAPPING MACROS USED BY FINDPAGE ARE FOLLOWING                *
*                                                                     *
***********************************************************************
         SPACE 3
         CVT   DSECT=YES,LIST=NO
         EJECT
         IHAPVT
         EJECT
         IHARSMHD
         EJECT
         IHASGTE
         EJECT
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         IHAPSA
         EJECT
         IHAWSAVT
         EJECT
*/*IEAVFP1: CHART */
*/* HEADER
*/* SECTION: 3.1.15.9.17.3                               IEAVFP--IEA
*/*VFP1 E. P.                                 MODULE DESCRIPTION
*/* CONTR:   J.W. MEHL
*/*                                                09/27/73
*/* MGR:     J.E.NICHOLS
*/*                                                 PAGE #  */
*/*IEAVFP1: E ENTRY TO FINDPAGE */
*/*         P SAVE USER REGS IN LOCAL SAVE AREA */
*/*         L OBTAIN PVT AND RSM HEADER ADDRESSES */
*/*         S MAINLINE:FIND PAGE TABLE ADDRESSES */
*/*         P RESTORE NON-OUTPUT REGISTERS */
*/*         R RETURN TO CALLER */
*/*IEAVFP1: END */
*/*IEAVFP2: CHART */
*/* HEADER
*/* SECTION: 3.1.15.9.17.3                               IEAVFP--IEA
*/*VFP2 E. P.                                 MODULE DESCRIPTION
*/* CONTR:   J.W. MEHL
*/*                                                09/27/73
*/* MGR:     J.E.NICHOLS
*/*                                                 PAGE #  */
*/*IEAVFP2: E ENTRY TO FINDPAGE FROM RSM */
*/*         P SAVE USERS REGISTERS IN RSMS GLOBAL SAVEAREA */
*/*         S MAINLINE:PERFORM FIND A PAGE FUNCTION */
*/*         P RESTORE NON-OUTPUT REGISTERS */
*/*         R RETURN TO CALLER */
*/*IEAVFP2: END */
*/*IEAVFP:  CHART */
*/* HEADER
*/* SECTION: 3.1.15.9.17.3                                  IEAVFP--
*/*MAINLINE                                   MODULE DESCRIPTION
*/* CONTR:   J.W. MEHL
*/*                                                09/27/73
*/* MGR:     J.E.NICHOLS
*/*                                                 PAGE #  */
*/*IEAVFP:  E ENTRY TO MAINLINE CODE */
*/*         D (YES,,NO,%A1) IS THE PAGE TABLE AVAILABLE? */
*/*         P DERIVE THE VIRTUAL SGTE ADDR */
*/*         N SEGMENT NUMBER * 4 + VIRTUAL SEGMENT TABLE ORIGIN */
*/*         P ACQUIRE REAL ADDRESS OF PTO FROM SGTE */
*/*         S IEAPTRV:CONVERT PTO TO VIRTUAL ADDR */
*/*         D (YES,,NO,%A2) RETURN CODE = 0? */
*/*         P DERIVE ADDR OF PAGE TABLE ENTRY IN R0 */
*/*         N VIRTUAL PAGE TABLE ORIGIN + 2 * PAGE NUMBER */
*/*         P DERIVE ADDR OF XPTE IN R1 */
*/*         N LENGTH OF XPTE * PAGE NUMBER + PAGE TABLE ORIGIN +
*/*PAGE TABLE LENGTH */
*/*         P RETURN CODE = 0 */
*/*%A3:     R RETURN TO CALLER */
*/*%A1:     P (,%A3) RETURN CODE = 4 */
*/*%A2:     P (,%A3) RETURN CODE = 8 */
*/*IEAVFP:  END */
         END
