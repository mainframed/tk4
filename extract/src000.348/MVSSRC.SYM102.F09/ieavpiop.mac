         TITLE 'IEAVPIOP: PAGE I/O POST                                *
                        '
IEAVPIOP CSECT
         USING *,R15
         MODID
IEAVPIO2 DS    0H
         ENTRY IEAVPIO2
         L     R15,CVTPTR         GET CVT ADDRESS            @Z40WPYD
         L     R15,CVTPVTP(R15)   GET PVT ADDRESS            @Z40WPYD
         STM   R1,R14,PVTWSA10+12(R15) SAVE CALLERS REGS     @Z40WPYD
         DROP  R15
BASE1    BALR  BASEREG,0          GET BASE REG VALUE
         USING BASE1+2,BASEREG
*   PVTPTR=CVTPVTP;                 /* GET ADDRESS OF PVT            */
         L     @15,CVTPTR                                          0080
         L     PVTPTR,CVTPVTP(,@15)                                0080
*   R13=ADDR(PVTWSA10);             /* ADDRESS SAVE AREA WITH REG 13
*                                                            @Z40WPYD*/
*                                                                  0081
         LA    R13,PVTWSA10(,PVTPTR)                               0081
*   /*****************************************************************/
*   /*                                                               */
*   /* SET FRR                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0082
*DOFRR:                                                            0082
*   GENERATE NODEFS REFS(R3,PVTPRCV,PSACSTK,FRRSCURR,FRRSLAST,FRRSELEN,
*       FRRSENTR,FRRSFRRA,FRRSPARM) SETS(R4,R5,R8) NOFLOWS;        0082
DOFRR    DS    0H                                                  0082
       SETFRR A,FRRAD=PVTPRCV(R3),PARMAD=(R8),WRKREGS=(R4,R5),        **
               RELATED=(RSM,IEAVPIOP(RETNASM))
*   RCACSECT=RCACPOST;              /* SET CSECT ID FOR PIOP         */
         MVI   RCACSECT(RCAPTR),X'13'                              0083
*   RCAPIOP='1'B;                   /* SET MODULE ENTERED BIT        */
         OI    RCAPIOP(RCAPTR),B'00000001'                         0084
*   PVTPRCA=R8;                     /* STORE ADDRESS OF RCA          */
         ST    R8,PVTPRCA(,PVTPTR)                                 0085
*   RCARETAD=ADDR(ENTFRR);          /* SET ADDRESS TO WHICH THE FRR
*                                      WILL GIVE CONTROL             */
         LA    @15,ENTFRR                                          0086
         ST    @15,RCARETAD(,RCAPTR)                               0086
*                                                                  0087
*/********************************************************************/
*/* THIS SECTION WILL PROCESS ONE AIA AT A TIME UNTIL ALL AIA'S      */
*/* ON THE AIA CHAIN HAVE BEEN PROCESSED. THIS ROUTINE WILL          */
*/* CALCULATE THE ADDRESS OF THE PCB FOR THE AIA.                    */
*/* IT WILL THEN CHECK THE INPUT PCB TO INSURE IT WAS NOT            */
*/* ALREADY PROCESSED. IF IT WAS PREVIOUSLY MARKED COMPLETE, THIS    */
*/* IS AN ERROR SITUATION, THEREFORE THE ERROR IS RECORDED. IF       */
*/* THE PCB WAS NOT ALREADY PROCESSED THIS ROUTINE WILL DETERMINE IF */
*/* I/O COMPLETED SUCCESSFULLY. IF IT DID NOT OR THERE IS AN ERROR   */
*/* IN THE AIA FLAGS, SET THE I/O ERROR FLAG ON IN THE QUEUED PCB.   */
*/* IF THERE IS AN ERROR IN THE AIA FLAGS OR THERE WAS AN LPID       */
*/* ERROR, RECORD THE ERROR AND ASSUME THERE WAS A NORMAL            */
*/* I/O ERROR.                                                       */
*/********************************************************************/
*                                                                  0087
*MOREAIAS:                                                         0087
*   R4=AIAPTR-(LENGTH(PCB)-LENGTH(AIA));/* GET ADDRESS OF PCB      0087
*                                                            @Z40WPYD*/
MOREAIAS LR    R4,AIAPTR                                           0087
         SL    R4,@CF01878                                         0087
*   NXTAIAAD=AIANXAIA;              /* SAVE ADDRESS OF NEXT AIA      */
         L     @15,AIANXAIA(,AIAPTR)                               0088
         ST    @15,NXTAIAAD(,R13)                                  0088
*   IF PCBIOCMP='1'B THEN           /* WAS THE I/O ALREADY MARKED  0089
*                                      COMPLETE              @Z40WPYD*/
         TM    PCBIOCMP(PCBPTR),B'00000001'                        0089
         BNO   @RF00089                                            0089
*     DO;                           /* YES - PROCESS ERROR   @Z40WPYD*/
*       RCARCRD='1D'X;              /* INDICATE DUPLICATE PCB      0091
*                                                            @Z40WPYD*/
         MVI   RCARCRD(RCAPTR),X'1D'                               0091
*       CALL DOABEND;               /* RECORD THE ERROR      @Z40WPYD*/
         BAL   @14,DOABEND                                         0092
*       GOTO NEXTAIA;               /* PROCESS NEXT AIA      @Z40WPYD*/
         B     NEXTAIA                                             0093
*     END;                          /* END DUPLICATE AIA     @Z40WPYD*/
*   ELSE                                                           0095
*     ;                             /* NO - PROCESS THE AIA  @Z40WPYD*/
@RF00089 DS    0H                                                  0096
*   PCBIOCMP='1'B;                  /* SET I/O COMP ON IN PCB        */
*                                                                  0096
         OI    PCBIOCMP(PCBPTR),B'00000001'                        0096
*   /*****************************************************************/
*   /*                                                               */
*   /* WHEN THE PCB TRACE IS ACTIVE, THE BRANCH INSTRUCTION BELOW    */
*   /* MUST BE ZAPPED TO A NOP                               @Z40WPYD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0097
*TRACEZO1:                                                         0097
*   GENERATE REFS(PCBPTR) SETS(R8);                                0097
TRACEZO1 DS    0H                                                  0097
         B     TRACEZO1+16
         L     R7,64(PCBPTR)
*   R7=R7+MYID;                                                    0098
         AL    R7,@CF01725                                         0098
*   GENERATE;                                                      0099
         ST    R7,64(PCBPTR)
*   IF AIAPRIER='1'B×AIAERROR='1'B×AIABADID='1'B×AIATERMR='1'B THEN
         TM    AIAPRIER(AIAPTR),B'01001011'                        0100
         BZ    @RF00100                                            0100
*     DO;                           /* AN ERROR OCCURRED     @Z40WPYD*/
*       IF AIAPRIER='1'B×AIAERROR='1'B×AIABADID='1'B THEN/* IF ERROR
*                                      IS OTHER THAN AN ASID PURGE 0102
*                                                            @Z40WPYD*/
         TM    AIAPRIER(AIAPTR),B'00001011'                        0102
         BZ    @RF00102                                            0102
*         DO;                       /* PROCESS ERROR         @Z40WPYD*/
*           PCBIOERR='1'B;          /* INDICATE AN ERROR OCCURRED ON
*                                      A PAGING OPERATION            */
*                                                                  0104
         OI    PCBIOERR(PCBPTR),B'00100000'                        0104
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE IF IT IS A SOFTWARE ERROR. IF IT IS THE     */
*           /* ERROR MUST BE RECORDED                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0105
*           IF AIAERROR='1'B×AIABADID='1'B×(AIAPRIER='1'B&PCBIOI='1'B)
*             THEN                                                 0105
*                                                                  0105
         TM    AIAERROR(AIAPTR),B'00000011'                        0105
         BNZ   @RT00105                                            0105
         TM    AIAPRIER(AIAPTR),B'00001000'                        0105
         BNO   @RF00105                                            0105
         TM    PCBIOI(PCBPTR),B'00000010'                          0105
         BNO   @RF00105                                            0105
@RT00105 DS    0H                                                  0106
*             /*******************************************************/
*             /*                                                     */
*             /* SOFTWARE OR PAGEOUT HARDWARE ERROR OCCUR    @Z40WPYD*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0106
*             DO;                   /* YES - SECOND ERROR    @Z40WPYD*/
*               CURRTAIA=AIAPTR;    /* SAVE THE CURRENT AIAPTR ACROSS
*                                      COD                   @Z40WPYD*/
         ST    AIAPTR,CURRTAIA(,R13)                               0107
*               RCARCRD='1E'X;      /* INDICATE SOFTWARE ERROR     0108
*                                                            @Z40WPYD*/
         MVI   RCARCRD(RCAPTR),X'1E'                               0108
*               CALL DOABEND;       /* RECORD THE ERROR              */
         BAL   @14,DOABEND                                         0109
*               AIAPTR=CURRTAIA;    /* RESTORE THE AIA POINTER     0110
*                                                            @Z40WPYD*/
         L     AIAPTR,CURRTAIA(,R13)                               0110
*             END;                  /* END ERROR PROCESSING  @Z40WPYD*/
*           ELSE                                                   0112
*             ;                     /* NOT SOFTWARE ERROR    @Z40WPYD*/
@RF00105 DS    0H                                                  0113
*         END;                      /* END OF ERROR PROCESSING     0113
*                                                            @Z40WPYD*/
*       ELSE                                                       0114
*         ;                         /* ASID PURGE (AIATERMR=1) AND NO
*                                      ERROR INDICATORS SET  @Z40WPYD*/
@RF00102 DS    0H                                                  0115
*       IF AIAWRITE='1'B&AIALSQA='1'B THEN/* IF SWAPOUT OF AN LSQA 0115
*                                      PAGE THEN FORCE ERROR       0115
*                                      PROCESSING IN POUTPROC      0115
*                                                            @Z40WPYD*/
         TM    AIAWRITE(AIAPTR),B'10001000'                        0115
         BNO   @RF00115                                            0115
*         PCBIOERR='1'B;            /* INDICATE ERROR        @Z40WPYD*/
         OI    PCBIOERR(PCBPTR),B'00100000'                        0116
*       ELSE                                                       0117
*         ;                                                        0117
@RF00115 DS    0H                                                  0118
*     END;                                                         0118
*                                                                  0118
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY COMPLETION INFORMATION INTO ALL PCBS RELATED TO A PAGE IN*/
*   /* PCB.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0119
*   R5=PCBRLPA;                     /* GET RELATED POINTER           */
@RF00100 L     R5,PCBRLPA-1(,PCBPTR)                               0119
         LA    R5,0(,R5)                                           0119
*   DO WHILE(R5^=0);                                               0120
         B     @DE00120                                            0120
@DL00120 DS    0H                                                  0121
*     R5->PCBIOCMP='1'B;            /* I/O COMPLETE FLAG ON IN     0121
*                                      RELATED                       */
*                                                                  0121
         OI    PCBIOCMP(R5),B'00000001'                            0121
*     /***************************************************************/
*     /*                                                             */
*     /* IF QUEUED PCB IS PAGE OUT DO NOT TURN ON I/O ERROR FLAG IN  */
*     /* RELATED AS PAGE OUT MAY BE CHANGED TO PAGE IN AND IOCP      */
*     /* SHOULD NOT SEE IT AS AN I/O ERROR.                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0122
*     IF R4->PCBIOERR='1'B&R4->PCBIOI='0'B THEN                    0122
         TM    PCBIOERR(R4),B'00100000'                            0122
         BNO   @RF00122                                            0122
         TM    PCBIOI(R4),B'00000010'                              0122
         BNZ   @RF00122                                            0122
*       R5->PCBIOERR='1'B;          /* SET I/O ERROR FLAG ON IN    0123
*                                      RELATED IF ON IN QUEUED       */
         OI    PCBIOERR(R5),B'00100000'                            0123
*     R5=R5->PCBRLPA;               /* GET ADDR OF NEXT RLT          */
@RF00122 L     @15,PCBRLPA-1(,R5)                                  0124
         LA    @15,0(,@15)                                         0124
         LR    R5,@15                                              0124
*   END;                                                           0125
*                                                                  0125
@DE00120 LTR   R5,R5                                               0125
         BNZ   @DL00120                                            0125
*   /*****************************************************************/
*   /*                                                               */
*   /* LOAD R6 WITH THE PFTE ADDRESS AND DETERMINE WHAT KIND OF PCB  */
*   /* IT IS. CALL THE APPROPRIATE PROCESSOR.                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0126
*   R6=PVTPFTP+PCBRBN;              /* GET ADDRESS OF PFTE FOR THIS
*                                      QUEUED PCB AND ALL ITS RELATED
*                                      PCB'S                         */
         LH    R6,PCBRBN(,PCBPTR)                                  0126
         N     R6,@CF01890                                         0126
         AL    R6,PVTPFTP(,PVTPTR)                                 0126
*   IF PCBIOI='1'B THEN             /* IS PCB A PAGE OUT PCB         */
         TM    PCBIOI(PCBPTR),B'00000010'                          0127
         BNO   @RF00127                                            0127
*     CALL POUTPROC;                /* PROCESS PAGE OUT PCB          */
         BAL   @14,POUTPROC                                        0128
*   ELSE                            /* IT IS A PAGE IN               */
*     IF PCBSWPS1='1'B THEN         /* IS IT A STAGE 1 SWAP          */
         B     @RC00127                                            0129
@RF00127 TM    PCBSWPS1(PCBPTR),B'00100000'                        0129
         BNO   @RF00129                                            0129
*       CALL STAG1PRC;              /* PROCESS STAGE 1 SWAP IN PCB   */
         BAL   @14,STAG1PRC                                        0130
*     ELSE                          /* IT IS NOT STAGE 1             */
*       CALL PINPROC;               /* PROCESS PAGE IN PCB           */
*                                                                  0131
         B     @RC00129                                            0131
@RF00129 BAL   @14,PINPROC                                         0131
*   /*****************************************************************/
*   /*                                                               */
*   /* IS THERE ANOTHER AIA ON THE AIA CHAIN                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0132
*NEXTAIA:                                                          0132
*   R1=NXTAIAAD;                    /* GET ADDRESS OF NEXT AIA       */
@RC00129 DS    0H                                                  0132
@RC00127 DS    0H                                                  0132
NEXTAIA  L     R1,NXTAIAAD(,R13)                                   0132
*   IF R1^=0 THEN                   /* IS THERE ANOTHER AIA          */
         LTR   R1,R1                                               0133
         BNZ   @RT00133                                            0133
*     GO TO MOREAIAS;               /* GO DO ANOTHER AIA             */
*                                                                  0134
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE THE FRR                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0135
*RETNASM:                                                          0135
*   GENERATE NODEFS REFS(PSACSTK,FRRSCURR,FRRSEMP,FRRSELEN,FRRS) SETS(
*       R4,R5) NOFLOWS;                                            0135
*                                                                  0135
RETNASM  DS    0H                                                  0135
         SETFRR D,WRKREGS=(R4,R5),RELATED=(RSM,IEAVPIOP(DOFRR))
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE REGISTERS AND RETURN TO CALLER OF IEAVPIOP            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*   GENERATE NODEFS REFS(R13,R14,PVTWSA10,PVTPTR) NOSETS NOFLOWS   0136
*       NOSEQFLOW EXIT;                                            0136
         LM    R1,R14,PVTWSA10+12(PVTPTR) RESTORE CALLER'S REGS
         BR    R14                RETURN TO CALLER
*                                                                  0137
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS LOCATION RECEIVES CONTROL FROM THE FUNCTIONAL RECOVERY   */
*   /* ROUTINE (FRR) IN THE EVENT THAT A PROGRAM INTERRUPT OCCURS    */
*   /* WHILE THE FRR THAT IEAVPIOP SET IS IN EFFECT. INPUT IS ALL    */
*   /* REGISTERS RESTORED TO THEIR VALUE AT THE TIME OF THE INTERRUPT*/
*   /* EXCEPT R0 CONTAINS RCAPARM0, R1 CONTAINS RCAPARM1 AND R3 HAS  */
*   /* BEEN SET TO THE ADDRESS OF THE PVT.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0137
*ENTFRR:                                                           0137
*   ;                                                              0137
ENTFRR   DS    0H                                                  0138
*   GENERATE CODE DEFS(BASE3) REFS(BASEREG,R9) SETS(BASEREG,R9) NOFLOWS
*       ;                                                          0138
BASE3    BALR  BASEREG,0             REGENERATE THE
         LA    R9,BASE3-BASE1        BASE REGISTER
         SR    BASEREG,R9            FOR IEAVPIOP
*   R8=PVTPRCA;                     /* PUT THE RCA ADDRESS WHERE THE
*                                      EXIT CODE REQUIRES IT         */
         L     R8,PVTPRCA(,PVTPTR)                                 0139
*   GO TO RETNASM;                  /* GO FREE THE FRR, AND EXIT TO
*                                      ASM. WORK REMAINING ON THE AIA
*                                      CHAIN IS NOT PROCESSED.     0140
*                                                            @Z40WPYD*/
         B     RETNASM                                             0140
*                                                                  0141
*/********************************************************************/
*/*     BRANCH ENTRY POINT (IEAVOPBR) TO MODULE IEAVPIOP             */
*/*                                                                  */
*/* THIS ENTRY POINT IS FOR THE PURPOSE OF CALLING THE               */
*/* IEAVIOCP SCHEDULE SUBROUTINE OF IEAVPIOP.                        */
*/********************************************************************/
*                                                                  0141
*   GENERATE DEFS(IEAVOPBR,BASE2) REFS(PVTPTR) SETS(PVTWSA9,BASEREG,R13
*       ) NOFLOWS;                                                 0141
         ENTRY IEAVOPBR
IEAVOPBR DS    0H
         USING PVT,PVTPTR
         STM   R0,R15,PVTWSA9      SAVE CALLERS REGISTERS
         LA    R13,PVTWSA9              GET SAVE AREA ADDRESS
         DROP  PVTPTR
BASE2    BALR  BASEREG,0               GET CURRENT LOCATION
         LA    R9,BASE2-BASE1          GET AMOUNT TO ADJUST BY
         SR    BASEREG,R9              ADJUST BASE REG VALUE
*   R8=PVTPRCA;                     /* GET RCA ADDRESS WHERE PIOCPSCH
*                                      EXPECTS IT                    */
         L     R8,PVTPRCA(,PVTPTR)                                 0142
*   RCAOPBR='1'B;                   /* SET MODULE ENTERED BIT        */
         OI    RCAOPBR(RCAPTR),B'00001000'                         0143
*/********************************************************************/
*                                                                  0144
*   CALL PIOCPSCH;                  /* CALL SCHEDULE SUBROUTINE      */
         BAL   @14,PIOCPSCH                                        0144
*/********************************************************************/
*                                                                  0145
*   RCAOPBR='0'B;                   /* RESET ENTRY POINT BIT         */
*                                                                  0145
         NI    RCAOPBR(RCAPTR),B'11110111'                         0145
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE CALLER                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0146
*SCHRTN:                                                           0146
*   GENERATE NODEFS REFS(PVTWSA9,PVTPTR,R14) NOSETS NOFLOWS EXIT   0146
*       NOSEQFLOW;                                                 0146
SCHRTN   DS    0H                                                  0146
        USING PVT,PVTPTR
        LM    R0,R15,PVTWSA9
        BR    R14                    RETURN TO CALLER
        DROP  PVTPTR
*                                                                  0147
*/********************************************************************/
*/*                                                                  */
*/*                      PAGE IN PROCESSOR                           */
*/*                                                                  */
*/* THIS ROUTINE RECEIVES CONTROL FROM THE MAINLINE WHEN I/O HAS     */
*/* COMPLETED FOR A PAGE IN PCB. THE PCB MAY BE FOR THE COMMON AREA  */
*/* OR THE PRIVATE AREA AND MAY OR MAY NOT HAVE  PAGE IN PCB'S       */
*/* RELATED TO IT.                                                   */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/* R0-R2        WORK REGISTERS                                      */
*/* R3           PVT ADDRESS                                         */
*/* R4           ADDRESS OF A QUEUED INPUT PCB                       */
*/* R5           IGNORED                                             */
*/* R6           PFTE ADDRESS                                        */
*/* R7           WORK REGISTER                                       */
*/* R8           RCA ADDRESS                                         */
*/* R9           WORK                                                */
*/* R10          BASE REGISTER                                       */
*/* R11-R12      WORK REGISTERS                                      */
*/* R13          ADDRESS OF MAINLINE SAVE AREA                       */
*/* R14          RETURN ADDRESS                                      */
*/* R15          WORK REGISTER                                       */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0147
*PINPROC:                                                          0147
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0147
PINPROC  DS    0H                                                  0148
*   RTNLEV1=R14;                    /* SAVE RETURN ADDRESS           */
*                                                                  0148
         ST    R14,RTNLEV1(,PVTPTR)                                0148
*   /*****************************************************************/
*   /*                                                               */
*   /* WAS THERE AN I/O ERROR ON THE PAGE IN                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0149
*   IF PCBIOERR='0'B THEN                                          0149
         TM    PCBIOERR(PCBPTR),B'00100000'                        0149
         BNZ   @RF00149                                            0149
*NOERRLP:                                                          0150
*     DO;                           /* BEGIN COMMON AREA PCB LOOP    */
NOERRLP  DS    0H                                                  0151
*       IF PCBCQN=PCBCIOQN THEN     /* IS PCB ON COMMON Q            */
         CLI   PCBCQN(PCBPTR),32                                   0151
         BNE   @RF00151                                            0151
*         DO;                                                      0152
*COMMONCB:                                                         0153
*           IF PCBRLPA^=0 THEN      /* ARE THERE RELATEDS            */
COMMONCB L     @15,PCBRLPA-1(,PCBPTR)                              0153
         LA    @15,0(,@15)                                         0153
         LTR   @15,@15                                             0153
         BZ    @RF00153                                            0153
*             CALL CARLTDPR;        /* DO COMMON AREA RELATED PCBS   */
*                                                                  0154
         BAL   @14,CARLTDPR                                        0154
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE FRAME WAS NOT VALIDATED AS A RESULT OF ONE OF  */
*           /* THE RELATED PCBS REQUIRING USE OF THE FRAME, DOES THE */
*           /* QUEUED PCB REQUIRE USE OF THE FRAME. IF IT DOES,      */
*           /* VALIDATE THE FRAME. IF IT DOES NOT FREE THE FRAME.    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0155
*           PFTPCBSI='0'B;          /* TURN OFF PCB DEFINED FLAG     */
@RF00153 NI    PFTPCBSI(PFTEPTR),B'11110111'                       0155
*           IF PGTPVM='1'B THEN     /* DETERMINE WHAT TO DO WITH THE
*                                      REAL FRAME                    */
         L     @15,PTEPTR-1(,PCBPTR)                               0156
         TM    PGTPVM(@15),B'00001000'                             0156
         BNO   @RF00156                                            0156
*             IF PCBFREAL='1'B THEN /* IS FRAME TO BE FREED          */
         TM    PCBFREAL(PCBPTR),B'10000000'                        0157
         BNO   @RF00157                                            0157
*               CALL FREEFRA;       /* FRAME TO FRONT OF AFQ, PCB  0158
*                                      DEFINED BIT GETS TURNED OFF 0158
*                                      TWICE ON THIS PATH            */
         BAL   @14,FREEFRA                                         0158
*             ELSE                  /* DO NOT FREE FRAME             */
*               CALL VALIT;         /* VALIDATE REAL FRAME           */
*                                                                  0159
         B     @RC00157                                            0159
@RF00157 BAL   @14,VALIT                                           0159
*           /*********************************************************/
*           /*                                                       */
*           /* THE DISPOSITION OF THE REAL FRAME HAS BEEN DETERMINED,*/
*           /* NOW DETERMINE THE DISPOSITION OF THE QUEUED PCB       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0160
*CKRES:                                                            0160
*           IF PCBRESET='0'B THEN                                  0160
@RC00157 DS    0H                                                  0160
@RF00156 DS    0H                                                  0160
CKRES    TM    PCBRESET(PCBPTR),B'00010000'                        0160
         BNZ   @RF00160                                            0160
*             DO;                   /* IF THERE IS A ROOT AND THE  0161
*                                      ROOT COUNT DOES NOT GO TO ZERO
*                                      DECREMENT THE ROOT COUNT AND
*                                      FREE THE PCB, IF THE COUNT  0161
*                                      DOES GO TO ZERO SCHEDULE IOCP */
*               IF PCBROOT='1'B THEN/* IS THERE A ROOT               */
         TM    PCBROOT(PCBPTR),B'00000100'                         0162
         BNO   @RF00162                                            0162
*                 DO;                                              0163
*                   IF PCBRCNT-1=0 THEN/* DID COUNT GO TO ZERO       */
         L     @15,PCBRPTR-1(,PCBPTR)                              0164
         LA    @15,0(,@15)                                         0164
         LH    @12,PCBRCNT(,@15)                                   0164
         BCTR  @12,0                                               0164
         LTR   @12,@12                                             0164
         BZ    @RT00164                                            0164
*                     GO TO FREALOFF;/* ROOT COUNT WENT TO ZERO, CAN
*                                      NOT CALL ROOT EXIT FROM PIOP
*                                      SO SCHEDULE IOCP              */
*                   PCBRCNT=PCBRCNT-1;/* DECREMENT ROOT COUNT        */
         STH   @12,PCBRCNT(,@15)                                   0166
*                 END;                                             0167
*               GO TO FREEACB;      /* GO FREE PCB AS NO FUTHER    0168
*                                      NOTIFICATION IS REQUIRED.     */
         B     FREEACB                                             0168
*             END;                                                 0169
*                                                                  0169
*           /*********************************************************/
*           /*                                                       */
*           /* IOCP MUST BE SCHEDULED FOR THE QUEUED PCB EITHER TO   */
*           /* CALL RESET OR TO CALL ROOT EXIT ROUTINE. VBN MUST BE  */
*           /* ZERO AND FREAL MUST BE OFF BECAUSE PCB DEFINED BIT IS */
*           /* OFF AND DISPOSITION OF FRAME HAS ALREADY BEEN         */
*           /* DETERMINED AND WE WOULD NOT WANT GFA TO RELATE ANY PCB*/
*           /* TO THIS PCB BEFORE IOCP HAS A CHANCE TO DISPOSE OF IT.*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0170
*FREALOFF:                                                         0170
*           PCBVBN=0;               /* ZERO VBN TO LEAVE PCB ON QUEUE*/
@RF00160 DS    0H                                                  0170
FREALOFF SLR   @15,@15                                             0170
         STH   @15,PCBVBN(,PCBPTR)                                 0170
*           PCBFREAL='0'B;          /* FREAL MUST BE OFF WHEN IOCP 0171
*                                      SEES PCB                      */
         NI    PCBFREAL(PCBPTR),B'01111111'                        0171
*           GO TO SCHEDCP;          /* SCHEDULE IOCP FOR QUEUED PCB  */
         B     SCHEDCP                                             0172
*         END;                      /* END OF COMMON AREA PCB LOOP   */
*       ELSE                        /* PCB IS ON LOCAL Q             */
*         DO;                                                      0174
*                                                                  0174
@RF00151 DS    0H                                                  0175
*           /*********************************************************/
*           /*                                                       */
*           /* PCB IS NOT ON COMMON QUEUE. IF IEAVTERM WAS CALLED TO */
*           /* TERMINATE THIS ADDRESS SPACE THERE WILL BE NO PCB'S   */
*           /* RELATED TO THIS PRIVATE AREA PCB. IF THE PAGE IN WAS  */
*           /* CANCELED (FREAL =1) AND NO NOTIFICATION IS TO BE DONE */
*           /* AND THERE ARE NO RELATEDS WE CAN DISPOSE OF THE QUEUED*/
*           /* PCB AND THE REAL FRAME.                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0175
*NOPARLT:                                                          0175
*           IF PCBRESET='1'B×PCBFREAL='0'B×PCBROOT='1'B×PCBRLPA^=0 THEN
NOPARLT  TM    PCBRESET(PCBPTR),B'00010000'                        0175
         BNZ   @RT00175                                            0175
         TM    PCBFREAL(PCBPTR),B'10000000'                        0175
         BNO   @RT00175                                            0175
         TM    PCBROOT(PCBPTR),B'00000100'                         0175
         BO    @RT00175                                            0175
         L     @15,PCBRLPA-1(,PCBPTR)                              0175
         LA    @15,0(,@15)                                         0175
         LTR   @15,@15                                             0175
         BNZ   @RT00175                                            0175
*             GO TO SCHEDCP;        /* SCHEDULE IEAVIOCP             */
*           CALL FREEFRA;           /* FREE A FRAME ON THE LOCAL   0177
*                                      FRAME QUEUE                   */
         BAL   @14,FREEFRA                                         0177
*           GO TO FREEACB;          /* FREE THE PCB                  */
         B     FREEACB                                             0178
*         END;                      /* END OF NO I/O ERROR AND LOCAL
*                                      QUEUE LOOP                    */
*     END NOERRLP;                  /* END OF NO I/O ERROR LOOP      */
*                                                                  0181
*   /*****************************************************************/
*   /*                                                               */
*   /* AN I/O ERROR OCCURED ON A PAGE IN PCB. THE ERROR RELATED      */
*   /* PROCESSOR IS CALLED TO PROCESS ANY RELATED PCB'S. IF ANY      */
*   /* COMMON AREA PCBS FOR ZERO TCB PGFIXES ARE FOUND, THEY ARE     */
*   /* MOVED TO THE END OF THE RELATED CHAIN AND ERRLTDPR RETURNS THE*/
*   /* ADDRESS OF THE PCB JUST PRECEDING THIS TYPE OF PCB ON THE     */
*   /* RELATED CHAIN. IF THE QUEUED PCB REQUIRES NO NOTIFICATION AND */
*   /* THERE ARE NO RELATEDS LEFT, FREE THE FRAME AND THE PCB. IF    */
*   /* THERE ARE RELATEDS, OR ANY NOTIFICATION IS REQUIRED SCHEDULE  */
*   /* IOCP FOR EITHER THE QUEUED OR RELATED PCB. IF THE QUEUED PCB  */
*   /* IS FOR A ZERO TCB PGFIX REQUEST IN THE COMMON AREA AND THE    */
*   /* FIRST RELATED PCB IS NOT FOR THIS TYPE OF REQUEST, IT IS      */
*   /* DEQUEUED AND PLACED AFTER THE PCB RETURNED BY ERRLTDPR IN THE */
*   /* RELATED CHAIN AND THE FIRST RELATED PCB ENQUEUED TO THE COMMON*/
*   /* I/O QUEUE.                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0181
*   RESPECIFY                                                      0181
*     R7 RESTRICTED;                /* THIS IS RETURN REG PARM       */
@RF00149 DS    0H                                                  0182
*   CALL ERRLTDPR;                  /* GET ANY RELATEDS PROCESSED    */
         BAL   @14,ERRLTDPR                                        0182
*   IF PCBRESET='0'B THEN           /* IS RESET TO BE DONE           */
         TM    PCBRESET(PCBPTR),B'00010000'                        0183
         BNZ   @RF00183                                            0183
*     DO;                                                          0184
*       IF PCBROOT='0'B THEN        /* IS THERE A ROOT               */
         TM    PCBROOT(PCBPTR),B'00000100'                         0185
         BNZ   @RF00185                                            0185
*         DO;                       /* NO NOTIFICATION IS REQUIRED BY
*                                      THE QUEUED PCB, SO FREE IT  0186
*                                      AFTER ENQUEUING ANY RELATEDS  */
*           IF PCBRLPA=0 THEN       /* ARE THERE ANY RELATED PCBS    */
         L     @15,PCBRLPA-1(,PCBPTR)                              0187
         LA    @15,0(,@15)                                         0187
         LTR   @15,@15                                             0187
         BNZ   @RF00187                                            0187
*             DO;                   /* NO RELATEDS, SO FREE FRAME    */
*               PFTPGID=0;          /* PREVENT RECLAIM               */
         SLR   @15,@15                                             0189
         ST    @15,PFTPGID(,PFTEPTR)                               0189
*               CALL FREEFRA;       /* SUBRTN. DOES THE WORK         */
         BAL   @14,FREEFRA                                         0190
*             END;                                                 0191
*           ELSE                    /* THERE ARE RELATEDS            */
*             DO;                   /* ENQUEUE FIRST RELATED PCB AND
*                                      SCHEDULE IOCP.                */
         B     @RC00187                                            0192
@RF00187 DS    0H                                                  0193
*               PCBVBN=0;           /* QUEUED PCBVBN IS ZERO SO DON'T
*                                      VIOLATE RSM RULE OF VBN'S     */
         SLR   @15,@15                                             0193
         STH   @15,PCBVBN(,PCBPTR)                                 0193
*               R1=PCBRLPA;                                        0194
         L     R1,PCBRLPA-1(,PCBPTR)                               0194
         LA    R1,0(,R1)                                           0194
*               R0=PCBCQN;          /* PCB GOES TO SAME Q AS QUEUED  */
         SLR   R0,R0                                               0195
         IC    R0,PCBCQN(,PCBPTR)                                  0195
*               R2=R1->PCBASCB->ASCBRSM;/* SET R2 WITH RSMHD ADDR    */
         L     @15,PCBASCB(,R1)                                    0196
         L     R2,ASCBRSM(,@15)                                    0196
*               CALL IEAVPCB;       /* CALL PCB MANAGER              */
         L     @15,PVTPCB(,PVTPTR)                                 0197
         BALR  @14,@15                                             0197
*               CALL PIOCPSCH;      /* SCHEDULE SRB FOR IEAVIOCP     */
         BAL   @14,PIOCPSCH                                        0198
*             END;                                                 0199
*                                                                  0199
*           /*********************************************************/
*           /*                                                       */
*           /* FREE THE QUEUED PCB AND RETURN TO MAINLINE            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0200
*FREEACB:                                                          0200
*           R2=ASCBRSM;             /* GET RSMHD ADDRESS             */
@RC00187 DS    0H                                                  0200
FREEACB  L     @15,ASCBPTR(,PCBPTR)                                0200
         L     R2,ASCBRSM(,@15)                                    0200
*           R0=PCBFREQN;            /* SEND PCB TO FREE QUEUE        */
         LA    R0,16                                               0201
*           R1=R4;                  /* SET ADDR OF PCB               */
         LR    R1,R4                                               0202
*           CALL IEAVPCB;           /* PCB TO FREE QUQUE             */
         L     @15,PVTPCB(,PVTPTR)                                 0203
         BALR  @14,@15                                             0203
*           GOTO RTNMAIN;           /* EXIT TO THE CALLER            */
         B     RTNMAIN                                             0204
*         END;                                                     0205
*                                                                  0205
*       /*************************************************************/
*       /*                                                           */
*       /* IF QUEUED PCB HAS A ROOT, ALL OF THE FOLLOWING CONDITIONS */
*       /* MUST BE MET OR THE QUEUED PCB IS LEFT ON THE Q AND        */
*       /* IEAVIOCP SCHEDULED FOR IT                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0206
*       ELSE                                                       0206
*         DO;                                                      0206
@RF00185 DS    0H                                                  0207
*           IF PCBCQN=PCBCIOQN&PCBRLPA^=0&PCBFXC^=0&PCBRTCBA=0&R4^=R7
*             THEN                  /* ALL CONDITIONS MET, SO REMOVE
*                                      PCB FROM Q AND INSERT IN    0207
*                                      RELATED CHAIN AFTER LAST NON
*                                      ZERO-TCB PGFIX PCB            */
         CLI   PCBCQN(PCBPTR),32                                   0207
         BNE   @RF00207                                            0207
         L     @15,PCBRLPA-1(,PCBPTR)                              0207
         LA    @15,0(,@15)                                         0207
         LTR   @15,@15                                             0207
         BZ    @RF00207                                            0207
         CLI   PCBFXC(PCBPTR),0                                    0207
         BE    @RF00207                                            0207
         L     @15,PCBRPTR-1(,PCBPTR)                              0207
         L     @15,PCBRTCBA-1(,@15)                                0207
         LA    @15,0(,@15)                                         0207
         LTR   @15,@15                                             0207
         BNZ   @RF00207                                            0207
         CR    R4,R7                                               0207
         BE    @RF00207                                            0207
*             DO;                                                  0208
*               R1=R4;                                             0209
         LR    R1,R4                                               0209
*               R0=PCBDEQN;                                        0210
         LA    R0,255                                              0210
*               R2=ASCBRSM;                                        0211
         L     @15,ASCBPTR(,PCBPTR)                                0211
         L     R2,ASCBRSM(,@15)                                    0211
*               CALL IEAVPCB;       /* PCB MANAGER CALLED WITH     0212
*                                      CORRECT RSMHD ADDR IN REG 2   */
         L     @15,PVTPCB(,PVTPTR)                                 0212
         BALR  @14,@15                                             0212
*               R1=PCBRLPA;         /* SAVE ADDR OF FIRST RELATED PCB*/
         L     R1,PCBRLPA-1(,PCBPTR)                               0213
         LA    R1,0(,R1)                                           0213
*               PCBRLPA=R7->PCBRLPA;/* INSERT PCB IN RELATED CHAIN   */
         MVC   PCBRLPA(3,PCBPTR),PCBRLPA(R7)                       0214
*               R7->PCBRLPA=R4;                                    0215
         STCM  R4,7,PCBRLPA(R7)                                    0215
*               RESPECIFY                                          0216
*                 R7 UNRESTRICTED;  /* DON'T NEED REG 7 ANYMORE      */
*               R0=PCBCIOQN;        /* SET INPUT PARM FOR COMMON Q   */
         LA    R0,32                                               0217
*               R2=R1->PCBASCB->ASCBRSM;/* GET RIGHT RSMHD ADDR      */
         L     @15,PCBASCB(,R1)                                    0218
         L     R2,ASCBRSM(,@15)                                    0218
*               CALL IEAVPCB;       /* ENQ FIRST RELATED TO COMMON Q */
         L     @15,PVTPCB(,PVTPTR)                                 0219
         BALR  @14,@15                                             0219
*               GOTO SCHEDCPA;      /* GET IOCP SCHEDULED FOR PCB    */
         B     SCHEDCPA                                            0220
*             END;                                                 0221
*           ELSE                                                   0222
*             ;                     /* IF CONDITIONS ARE NOT MET,  0222
*                                      SCHEDULE IOCP FOR QUEUED PCB  */
@RF00207 DS    0H                                                  0223
*         END;                      /* END ROOT = 1 PROCESSING       */
*     END;                          /* END RESET = 0 PROCESSING      */
*   ELSE                                                           0225
*     ;                             /* IF RESET = 1, SCHEDULE IOCP 0225
*                                      FOR THE QUEUED PCB.           */
*                                                                  0225
@RF00183 DS    0H                                                  0226
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE IOCP AND RETURN TO MAINLINE                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0226
*SCHEDCP:                                                          0226
*   R1=R4;                          /* ADDRESS OF THE PCB TO SCHEDULE
*                                      FOR                           */
SCHEDCP  LR    R1,R4                                               0226
*SCHEDCPA:                                                         0227
*   CALL PIOCPSCH;                  /* GET IOCP SCHEDULED            */
SCHEDCPA BAL   @14,PIOCPSCH                                        0227
*RTNMAIN:                                                          0228
*   R14=RTNLEV1;                    /* GET SAVED RETURN ADDRESS      */
RTNMAIN  L     R14,RTNLEV1(,PVTPTR)                                0228
*   END PINPROC;                                                   0229
@EL00002 DS    0H                                                  0229
@EF00002 DS    0H                                                  0229
@ER00002 BR    @14                                                 0229
*                                                                  0230
*/********************************************************************/
*/*                                                                  */
*/*            COMMON AREA RELATED PCB PROCESSOR                     */
*/*                                                                  */
*/* THIS ROUTINE WILL PROCESS ALL RELATED PCB'S RELATED TO A COMMON  */
*/* AREA PCB. THE REAL FRAME MUST BE GOOD IN STORAGE AS IT MAY BE    */
*/* VALIDATED. ALL PCB'S WILL BE REMOVED FROM THE RELATED CHAIN.     */
*/* RELATED PCB'S WHICH REQUIRE NO NOTIFICATION TO BE DONE, (RESET = */
*/* 0 AND NO ROOT) WILL BE FREED. RELATED PCB'S WHICH REQUIRE        */
*/* NOTIFICATION WILL HAVE THE VBN AND RELATED POINTER SET TO ZERO   */
*/* AND THE FREAL FLAG SET TO OFF. THEY WILL BE ENQUED TO THE        */
*/* COMMON I/O ACTIVE QUEUE AND IOCP WILL BE SCHEDULED TO PROCESS    */
*/* THEM.                                                            */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0-R2         WORK REGISTERS                                    */
*/*  R3            PVT                                               */
*/*  R4            ADDRESS OF A QUEDED PCB ON THE COMMON I/O ACTIVE  */
*/*                QUEUE WITH PCB'S RELATED TO IT                    */
*/*  R5            WORK REGISTER                                     */
*/*  R6            PFTE ADDRESS                                      */
*/*  R7            WORK REGISTERS                                    */
*/*  R8            RCA ADDRESS                                       */
*/*  R9            WORK REGISTER                                     */
*/*  R10           CODE REG                                          */
*/*  R11-R12       WORK REG                                          */
*/*  R13           ADDRESS OF MAINLINE SAVE AREA                     */
*/*  R14           RETURN ADDRESS                                    */
*/*  R15           WORK REG                                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0230
*CARLTDPR:                                                         0230
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0230
CARLTDPR DS    0H                                                  0231
*   RTNLEV2=R14;                    /* SAVE RETURN ADDRESS           */
*                                                                  0231
         ST    R14,RTNLEV2(,PVTPTR)                                0231
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR THIS ROUTINE THE PCB IS BASED ON R5. DO THIS ROUTINE AS   */
*   /* LONG AS RELATED POINTER IN QUEUED PCB IS NOT ZERO             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0232
*   R5=PCBRLPA;                     /* INITIALIZE LOOP POINTER       */
         L     R5,PCBRLPA-1(,PCBPTR)                               0232
         LA    R5,0(,R5)                                           0232
*   DO WHILE(R5^=0);                /* DO WHILE QUEUED PCB'S RELATED
*                                      POINTER IS NOT ZERO           */
         B     @DE00233                                            0233
@DL00233 DS    0H                                                  0234
*     RFY                                                          0234
*       PCB BASED(R5);                                             0234
*                                                                  0234
*     /***************************************************************/
*     /*                                                             */
*     /* IF FREAL FLAG IS NOT ON VALIDATE FRAME, IF IT IS NOT ALREADY*/
*     /* VALID. IF RESET IS TO BE DONE REMOVE PCB FROM RELATED CHAIN */
*     /* AND ENQ IF TO COMMON I/O ACTIVE QUEUE, ZERO ITS VBN AND     */
*     /* FREAL FLAG AND SCHEDULE IOCP TO DO RESET.                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0235
*     IF PCBFREAL='0'B&PGTPVM='1'B THEN                            0235
         TM    PCBFREAL(R5),B'10000000'                            0235
         BNZ   @RF00235                                            0235
         L     @15,PTEPTR-1(,R5)                                   0235
         TM    PGTPVM(@15),B'00001000'                             0235
         BNO   @RF00235                                            0235
*       DO;                                                        0236
*         RFY                                                      0237
*          (R12) RSTD;                                             0237
*         R12=R4;                   /* SAVE R4                       */
         LR    R12,R4                                              0238
*         R4=R5;                    /* PCB ADDR FOR VALIT            */
         LR    R4,R5                                               0239
*         CALL VALIT;               /* VALIDATE FRAME                */
         BAL   @14,VALIT                                           0240
*         R4=R12;                   /* RESTORE R4                    */
         LR    R4,R12                                              0241
*         RFY                                                      0242
*          (R12) UNRSTD;                                           0242
*       END;                                                       0243
*     IF PCBRESET='1'B THEN         /* IS RESET TO BE DONE           */
@RF00235 TM    PCBRESET(R5),B'00010000'                            0244
         BO    @RT00244                                            0244
*       GO TO REMOVE;               /* REMOVE PCB FROM RELATED CHAIN */
*                                                                  0245
*     /***************************************************************/
*     /*                                                             */
*     /* IF THERE IS A ROOT PCB AND IT IS STAGE 1 DECREMENT RT COUNT */
*     /* AND CALL ROOT EXIT IF COUNT IS ZERO. IF ROOT IS NOT STAGE 1 */
*     /* IT IS A FIX/LOAD ROOT. FIX LOAD ROOT EXIT CAN NOT BE CALLED */
*     /* FROM PIOP AS PIOP IS NOT IN THE CORRECT ADDRESS SPACE. (NEED*/
*     /* THE LL TO POST USER) SCHEDULE IOCP TO CALL ROOT EXIT ROUTINE*/
*     /* IF COUNT GOES TO ZERO. IF CT DOES NOT GO TO ZERO DECREMENT  */
*     /* COUNT AND FREE PCB                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0246
*     IF PCBROOT='1'B THEN                                         0246
         TM    PCBROOT(R5),B'00000100'                             0246
         BNO   @RF00246                                            0246
*       DO;                                                        0247
*         IF PCBSWPS1='1'B THEN     /* IS PCB FOR STAGE 1 SWAP IN    */
         TM    PCBSWPS1(R5),B'00100000'                            0248
         BNO   @RF00248                                            0248
*           DO;                                                    0249
*             RFY                                                  0250
*              (R7) RSTD;                                          0250
*             R7=R5;                /* ADDRESS OF PCB FOR DOAROOT    */
         LR    R7,R5                                               0251
*             CALL DOAROOT;         /* DO STAGE 1 ROOT               */
         BAL   @14,DOAROOT                                         0252
*             RFY                                                  0253
*              (R7) UNRSTD;                                        0253
*             GO TO FREERLT;        /* GO FREE THE RELATED PCB       */
         B     FREERLT                                             0254
*           END;                                                   0255
*         IF PCBRCNT-1=0 THEN       /* IS ROOT COUNT ABOUT TO GO TO
*                                      ZERO                          */
@RF00248 L     @15,PCBRPTR-1(,R5)                                  0256
         LA    @15,0(,@15)                                         0256
         LH    @12,PCBRCNT(,@15)                                   0256
         BCTR  @12,0                                               0256
         LTR   @12,@12                                             0256
         BZ    @RT00256                                            0256
*           GO TO REMOVE;           /* REMOVE PCB FROM RELATED CHAIN */
*         PCBRCNT=PCBRCNT-1;        /* DECREMENT ROOT COUNT          */
         STH   @12,PCBRCNT(,@15)                                   0258
*       END;                                                       0259
*                                                                  0259
*     /***************************************************************/
*     /*                                                             */
*     /* FREE A RELATED PCB                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0260
*FREERLT:                                                          0260
*     R4->PCBRLPA=R5->PCBRLPA;      /* MOVE POINTER TO NEXT RELATED
*                                      PCB INTO THE QUEUED PCB       */
@RF00246 DS    0H                                                  0260
FREERLT  MVC   PCBRLPA(3,R4),PCBRLPA(R5)                           0260
*     R0=PCBFREQN;                  /* THIS RELATED PCB GOES TO THE
*                                      FREE Q                        */
         LA    R0,16                                               0261
*     PCBFQPA=0;                    /* ASSURE FORWARD PTR IS ZERO    */
         SLR   @15,@15                                             0262
         STCM  @15,7,PCBFQPA(R5)                                   0262
*     GO TO MOVRLTP;                /* GO FREE PCB                   */
*                                                                  0263
         B     MOVRLTP                                             0263
*     /***************************************************************/
*     /*                                                             */
*     /* RELATED PCB IS TO GO TO I/O ACTIVE Q AND IOCP IS TO BE      */
*     /* SCHEDULED TO PROCESS IT.                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0264
*REMOVE:                                                           0264
*     R4->PCBRLPA=R5->PCBRLPA;      /* ADDRESS OF NEXT RELATED PCB 0264
*                                      INTO QUEUED PCB               */
REMOVE   MVC   PCBRLPA(3,R4),PCBRLPA(R5)                           0264
*     PCBVBN=0;                     /* STILL VBN = 0 SO NO PCBS WILL
*                                      BE RELATED TO THIS PCB        */
         SLR   @15,@15                                             0265
         STH   @15,PCBVBN(,R5)                                     0265
*     PCBFREAL='0'B;                                               0266
         NI    PCBFREAL(R5),B'01111111'                            0266
*     PCBRLPA=0;                    /* ZERO RELATED PTR BEFORE CALL
*                                      TO SCHEDULE AS RELATED CHAIN
*                                      WILL BE COMPLETLY BROKEN UP   */
         STCM  @15,7,PCBRLPA(R5)                                   0267
*     R1=R5;                        /* ADDRESS OF PCB                */
         LR    R1,R5                                               0268
*     CALL PIOCPSCH;                /* SCHEDULE CP FOR PCB TO BE   0269
*                                      ENQUED                        */
         BAL   @14,PIOCPSCH                                        0269
*     R0=PCBCIOQN;                  /* SEND PCB TO COMMON I/O Q      */
*                                                                  0270
         LA    R0,32                                               0270
*     /***************************************************************/
*     /*                                                             */
*     /* MOVE RELATED PCB TO QUEUE ALREADY SET IN R0                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0271
*MOVRLTP:                                                          0271
*     R1=R5;                        /* ADDRESS OF PCB                */
MOVRLTP  LR    R1,R5                                               0271
*     R2=ASCBRSM;                   /* SET RSMHD ADDRESS IN R2       */
         L     @15,ASCBPTR(,R5)                                    0272
         L     R2,ASCBRSM(,@15)                                    0272
*     PCBRLPA=0;                    /* SET RELATED PTR TO ZERO       */
         SLR   @15,@15                                             0273
         STCM  @15,7,PCBRLPA(R5)                                   0273
*     CALL IEAVPCB;                 /* MOVE PCB                      */
*                                                                  0274
         L     @15,PVTPCB(,PVTPTR)                                 0274
         BALR  @14,@15                                             0274
*     /***************************************************************/
*     /*                                                             */
*     /* IS THERE ANOTHER RELATED PCB                                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0275
*     RFY                                                          0275
*       PCB BASED(R4);              /* SET BASE OF PCB BACK TO     0275
*                                      REGISTER 4 SO WE CAN DO THE 0275
*                                      INCREMENTING AT THE END OF THE
*                                      LOOP.                         */
*     R5=PCBRLPA;                   /* ADJUST LOOP CONTROL VARIABLE  */
         L     R5,PCBRLPA-1(,R4)                                   0276
         LA    R5,0(,R5)                                           0276
*   END;                                                           0277
@DE00233 LTR   R5,R5                                               0277
         BNZ   @DL00233                                            0277
*   R14=RTNLEV2;                    /* GET RETURN ADDRESS            */
         L     R14,RTNLEV2(,PVTPTR)                                0278
*   END CARLTDPR;                                                  0279
@EL00003 DS    0H                                                  0279
@EF00003 DS    0H                                                  0279
@ER00003 BR    @14                                                 0279
*                                                                  0280
*/********************************************************************/
*/*                                                                  */
*/*          PAGE OUT PCB PROCESSOR                                  */
*/*                                                                  */
*/* THIS ROUTINE RECEIVES CONTROL FROM THE MAINLINE WHEN I/O HAS     */
*/* COMPLETED FOR A PAGE OUT PCB. THE PCB MAY BE FOR THE COMMON AREA */
*/* OR THE PRIVATE AREA AND MAY OR MAY NOT HAVE  PAGE IN PCB'S       */
*/* RELATED TO IT.                                                   */
*/*                                                                  */
*/* THIS ROUTINE HANDLES ORDINARY PAGE OUT PCB'S (NO RELATEDS AND    */
*/* NO I/O ERROR) BY FREEING THE REAL FRAME AND THE PCB. IF THE PAGE */
*/* OUT SUFFERED AN I/O ERROR OR THE PCB FREAL FLAG IN THE PCB IS    */
*/* OFF, THEN THE REAL FRAME IS KEPT. IF THE VBN IS COMMON AREA      */
*/* THE FRAME IS VALIDATED BY PIOP AND THE PCB IS FREEDED.           */
*/* IF THE VBN IS PRIVATE AREA THE PCB IS CHANGED TO A PAGE IN       */
*/* PCB AND IOCP SCHEDULED TO PROCESS IT                             */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0-R2         WORK REGISTERS                                    */
*/*  R3            PVT ADDRESS                                       */
*/*  R4            ADDRESS OF A QUEUED PCB WITH A PAGE OUT FLAG ON   */
*/*  R5            WORK REGISTER                                     */
*/*  R6            PFTE ADDRESS                                      */
*/*  R7            WORK REGISTER                                     */
*/*  R8            RCA ADDRESS                                       */
*/*  R9            WORK REGISTER                                     */
*/*  R10           CODE REGISTER                                     */
*/*  R11-R12       WORK REG                                          */
*/*  R13           ADDRESS OF MAINLINE SAVE AREA                     */
*/*  R14           RETURN ADDR                                       */
*/*  R15           WORK REG                                          */
*/********************************************************************/
*                                                                  0280
*POUTPROC:                                                         0280
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0280
POUTPROC DS    0H                                                  0281
*   RTNLEV1=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,RTNLEV1(,PVTPTR)                                0281
*   IF PCBSUPRS='1'B THEN           /* IS FRMAE PROCESSING SUPPRESSED*/
         TM    PCBSUPRS(R4),B'00001000'                            0282
         BO    @RT00282                                            0282
*     GOTO FREEQDD;                 /* IF FRAME PROCESSING HAS     0283
*                                      ALREADY BEEN DONE, JUST FREE
*                                      THE PCB               @YM01687*/
*                                                                  0283
*   /*****************************************************************/
*   /*                                                               */
*   /* FRAME PROCESSING IS SUPPRESSED BY GFA WHEN IT DETERMINES THAT */
*   /* A PAGEOUT IS IN PROCESS FOR A PAGEIN REQUEST. IN THIS CASE THE*/
*   /* PCBVBN AND PCBFREAL ARE ZEROED. THE PCBSUPRS IS SET TO TELL   */
*   /* PIOP NOT TO ZERO PFTPCBSI SO FRAME IS USED FOR PAGEIN REQUEST.*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0284
*   IF PCBIOERR='1'B THEN                                          0284
         TM    PCBIOERR(R4),B'00100000'                            0284
         BNO   @RF00284                                            0284
*     DO;                                                          0285
*                                                                  0285
*       /*************************************************************/
*       /*                                                           */
*       /* IS IT A SWAPOUT PCB                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0286
*       IF PCBSWPOT='1'B THEN                                      0286
         TM    PCBSWPOT(R4),B'10000000'                            0286
         BNO   @RF00286                                            0286
*         DO;                                                      0287
*                                                                  0287
*           /*********************************************************/
*           /*                                                       */
*           /* AN I/O ERROR OCCURED TO A SWAP OUT PCB. THE PCB AND   */
*           /* THE FRAME ARE FREED. THE QUEUED PCB CAN NOT HAVE      */
*           /* RELATED PCB'S AS THE ADDRESS SPACE WAS STOPPED PRIOR  */
*           /* TO SWAP OUT.                                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0288
*           IF PCBVBN=(PVTLCSA-10) THEN/* IF SWAPOUT, AND THIS IS THE
*                                      LSQA PAGE CONTAINING THE    0288
*                                      SEGMENT TABLE FOR THIS ADDRESS
*                                      SPACE THEN            @Z40WPYD*/
         LH    @15,PVTLCSA(,PVTPTR)                                0288
         N     @15,@CF01890                                        0288
         SL    @15,@CF00032                                        0288
         LH    @12,PCBVBN(,R4)                                     0288
         N     @12,@CF01890                                        0288
         CR    @15,@12                                             0288
         BNE   @RF00288                                            0288
*             DO;                   /* MUST PURGE THE TLB'S AS THIS
*                                      IS NORMALLY DONE IN IEAVSWPC.
*                                      THE PTLB MUST BE DONE AS THE
*                                      REAL FRAME CONTAINING THE   0289
*                                      SEGMENT TABLE AND UNDERGOING
*                                      TERMINATION COULD BE        0289
*                                      REASSIGNED FOR A NEW MEMORY 0289
*                                      THAT IS BEING CREATED. SINCE
*                                      THE STO ENTRIES HAVE NOT BEEN
*                                      PURGED, THE NEWLY CREATED   0289
*                                      ADDRESS SPACE, WHEN         0289
*                                      DISPATCHED, WOULD RECEIVE THE
*                                      OLD ADDRESS SPACES STO ENTRY
*                                      AND EVENTUALLY ADDRESS      0289
*                                      NON-EXISTANT DATA     @Z40WPYD*/
*               R1=0;               /* TELL IEAVINV TO PTLB. PVTPTR
*                                      IS ALREADY SETUP      @Z40WPYD*/
         SLR   R1,R1                                               0290
*               CALL IEAVINV;       /* PURGE THE TLB'S       @Z40WPYD*/
         L     @15,@CV01726                                        0291
         BALR  @14,@15                                             0291
*             END;                  /* END OF SWAPOUT PTLB   @Z40WPYD*/
*           ELSE                                                   0293
*             ;                     /* NO PTLB REQUIRED      @Z40WPYD*/
@RF00288 DS    0H                                                  0294
*           CALL FREEFRA;           /* FREE FRAME WHICH SUFFERED I/O
*                                      ERROR ON SWAP OUT             */
         BAL   @14,FREEFRA                                         0294
*           R0=PCBFREQN;            /* PCB GOES TO FREE QUEUE        */
         LA    R0,16                                               0295
*           R1=R4;                  /* ADDR OF PCB                   */
         LR    R1,R4                                               0296
*           R2=ASCBRSM;             /* GET RSMHDR ADDRESS            */
         L     @15,ASCBPTR(,R4)                                    0297
         L     R2,ASCBRSM(,@15)                                    0297
*           CALL IEAVPCB;           /* MOVE PCB TO FREE Q            */
         L     @15,PVTPCB(,PVTPTR)                                 0298
         BALR  @14,@15                                             0298
*           R14=RTNLEV1;            /* GET RETURN ADDRESS            */
         L     R14,RTNLEV1(,PVTPTR)                                0299
*           RETURN;                 /* RETURN TO CALLER              */
@EL00004 DS    0H                                                  0300
@EF00004 DS    0H                                                  0300
@ER00004 BR    @14                                                 0300
*         END;                                                     0301
*                                                                  0301
*       /*************************************************************/
*       /*                                                           */
*       /* AN I/O ERROR OCCURED TO A NON-SWAP OUT PCB, SAVE THE REAL */
*       /* FRAME FOR NORMAL PAGE-OUTS AND PAGE-OUTS OF A VIO         */
*       /* IRREGULAR FRAME. PURGED PAGE-OUTS AND VIO MOVE-OUT WITH   */
*       /* FRAME DISCONNECTION HAVE VBN'S OF ZERO, THE PFTIRRG FLAG  */
*       /* OFF AND PCBFREAL FLAG ON. THESE FRAMES WILL NOT BE SAVED  */
*       /* AS A RESULT OF AN I/O ERROR.                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0302
*       IF PCBVBN^=0×PFTIRRG='1'B THEN                             0302
@RF00286 LH    @15,PCBVBN(,R4)                                     0302
         N     @15,@CF01890                                        0302
         LTR   @15,@15                                             0302
         BNZ   @RT00302                                            0302
         TM    PFTIRRG(PFTEPTR),B'00010000'                        0302
         BNO   @RF00302                                            0302
@RT00302 DS    0H                                                  0303
*         PCBFREAL='0'B;            /* TURN FREAL FLAG OFF SO FRAME
*                                      WILL BE SAVED                 */
         NI    PCBFREAL(R4),B'01111111'                            0303
*     END;                                                         0304
@RF00302 DS    0H                                                  0305
*                                                                  0305
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESSING CONTINUES HERE AS IF NO I/O ERROR HAS OCCURED. IF  */
*   /* THERE ARE ANY RELATED PCB'S ON THE QUEUED PAGE OUT PCB FIRST  */
*   /* DETERMINE IF IT IS THE COMMON QUEUE.                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0305
*   IF PCBRLPA^=0 THEN                                             0305
@RF00284 L     @15,PCBRLPA-1(,R4)                                  0305
         LA    @15,0(,@15)                                         0305
         LTR   @15,@15                                             0305
         BZ    @RF00305                                            0305
*     DO;                                                          0306
*                                                                  0306
*       /*************************************************************/
*       /*                                                           */
*       /* THERE ARE RELATED PCB'S. IF THE QUEUED PCB IS ON THE LOCAL*/
*       /* QUEUE, AND THE FREAL FLAG IS ON, REMOVE THE RELATED CHAIN */
*       /* FROM THE QUEUED PCB, ENQ IT TO LOCAL I/O ACTIVE QUEUE,    */
*       /* SCHEDULE IOCP AND FREE THE QUEUED PCB. IF THE FREAL FLAG  */
*       /* IS OFF CHANGE PCB TO A PAGE IN PCB AND SCHEDULE IOCP.     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0307
*       IF PCBCQN=PCBLIOQN THEN                                    0307
         CLI   PCBCQN(R4),136                                      0307
         BNE   @RF00307                                            0307
*         DO;                                                      0308
*           IF PCBFREAL='1'B THEN   /* IS FRAME TO BE FREED          */
         TM    PCBFREAL(R4),B'10000000'                            0309
         BNO   @RF00309                                            0309
*             DO;                                                  0310
*               R1=PCBRLPA;         /* GET RELATED ADDRESS           */
         LR    R1,@15                                              0311
*               PCBRLPA=0;          /* ZERO RELATED PTR OF QUEUED    */
         SLR   @15,@15                                             0312
         STCM  @15,7,PCBRLPA(R4)                                   0312
*               R0=PCBLIOQN;        /* RELTD TO LOCAL I/O ACT Q      */
         LA    R0,136                                              0313
*               R2=ASCBRSM;                                        0314
         L     @15,ASCBPTR(,R4)                                    0314
         L     R2,ASCBRSM(,@15)                                    0314
*               CALL IEAVPCB;       /* ENQ RELATED CHAIN TO LOCAL Q,
*                                      PCB MANAGER DOES NOT DESTROY
*                                      R1                            */
         L     @15,PVTPCB(,PVTPTR)                                 0315
         BALR  @14,@15                                             0315
*               CALL PIOCPSCH;      /* SCHEDULE FOR NEWLY QUEUE PCB  */
         BAL   @14,PIOCPSCH                                        0316
*               GO TO FREEQDD;      /* GO FREE QUEUED PCB            */
         B     FREEQDD                                             0317
*             END;                                                 0318
*           GO TO CPWORK;           /* CHANGE PCB TO A PAGE IN PCB 0319
*                                      WITH ERROR FLAG OFF AND     0319
*                                      SCHEDULE IOCP FOR THE QUEUED
*                                      PCB. AN I/O ERROR OCCURRED TO
*                                      A NON-SWAPOUT PCB OR A PGOUT
*                                      KEEPREL OPTION WAS SPECIFIED
*                                                            @Z40WPYD*/
         B     CPWORK                                              0319
*         END;                                                     0320
*                                                                  0320
*       /*************************************************************/
*       /*                                                           */
*       /* DO COMMON AREA RELATED PCB'S. THESE ARE PAGE IN PCB'S     */
*       /* RELATED TO A PAGE OUT PCB. IF THE REAL FRAME IS NOT       */
*       /* VALIDATED FOR ONE OF THE RELATED PCB'S, DETERMINE IF IT   */
*       /* SHOULD BE VALIDATED FOR THE QUEUED PCB. IF NO, GO         */
*       /* DECREMENT THE FRAME COUNT AND FREE THE FRAME AND THE PCB. */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0321
*       CALL CARLTDPR;              /* PROCESS COMMON AREA RELATEDS  */
@RF00307 BAL   @14,CARLTDPR                                        0321
*       IF PGTPVM='1'B THEN         /* IS PGTE INVALID               */
         L     @15,PTEPTR-1(,R4)                                   0322
         TM    PGTPVM(@15),B'00001000'                             0322
         BNO   @RF00322                                            0322
*         DO;                                                      0323
*           IF PCBFREAL='1'B THEN   /* IS FRAME TO BE FREE           */
         TM    PCBFREAL(R4),B'10000000'                            0324
         BO    @RT00324                                            0324
*             GO TO DECFRAME;       /* DECREMENT FRAME COUNT AND FREE
*                                      FRAME                         */
*           CALL VALIT;             /* VALIDATE FRAME, SET REF AND 0326
*                                      CHANGE BITS                   */
         BAL   @14,VALIT                                           0326
*         END;                                                     0327
*       GO TO AFTERVAL;             /* THE FRAME HAS BEEN VALIDATED,
*                                      PCB DEFINED OFF AND FREE    0328
*                                      QUEUED PCB                    */
         B     AFTERVAL                                            0328
*     END;                                                         0329
*                                                                  0330
*   /*****************************************************************/
*   /*                                                               */
*   /* THERE ARE NO RELATED PCB'S ON THE PAGE OUT PCB. DETERMINE IF  */
*   /* REAL FRAME IS TO BE KEPT. IF YES, AND PCB IS COMMON AREA,     */
*   /* VALIDATE THE REAL FRAME. IF PCB IS FOR THE PRIVATE AREA CHANGE*/
*   /* PCB TO A PAGE IN AND SCHEDULE IEAVIOCP.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0330
*   IF PCBFREAL='0'B THEN                                          0330
@RF00305 TM    PCBFREAL(R4),B'10000000'                            0330
         BNZ   @RF00330                                            0330
*     DO;                                                          0331
*                                                                  0331
*       /*************************************************************/
*       /*                                                           */
*       /* IF PCBVBN IS ZERO PAGE MUST NOT BE VALIDATED. A VIO MOVE  */
*       /* OUT OF AN IRREGULAR FRAME WILL HAVE A VBN OF ZERO AND THE */
*       /* FREAL FLAG OFF. THE FRAME WILL NEITHER BE VALIDATED NOR   */
*       /* FREED.                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0332
*       IF PCBVBN=0 THEN                                           0332
         LH    @15,PCBVBN(,R4)                                     0332
         N     @15,@CF01890                                        0332
         LTR   @15,@15                                             0332
         BZ    @RT00332                                            0332
*         GO TO AFTERVAL;           /* PCB DEFINED OFF AND FREE PCB  */
*                                                                  0333
*       /*************************************************************/
*       /*                                                           */
*       /* IS PCB ON COMMON QUEUE, IF YES, VALIDATE IT, SET PCB      */
*       /* DEFINED OFF AND FREE PCB.                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0334
*       IF PCBCQN=PCBCIOQN THEN                                    0334
         CLI   PCBCQN(R4),32                                       0334
         BNE   @RF00334                                            0334
*         DO;                                                      0335
*           CALL VALIT;             /* GO VALIDATE FRAME             */
         BAL   @14,VALIT                                           0336
*           GO TO AFTERVAL;         /* PCB DEFND OFF,FREE PCB        */
         B     AFTERVAL                                            0337
*         END;                                                     0338
*       GO TO CPWORK;               /* CHANGE PCB TO A PAGE IN PCB 0339
*                                      ERROR FLAG OFF                */
         B     CPWORK                                              0339
*     END;                                                         0340
*                                                                  0340
*   /*****************************************************************/
*   /*                                                               */
*   /* QUEUED PCB IS PAGE OUT AND FRAME IS TO BE FREED. ROOT         */
*   /* PROCESSING IS NOT REQUIRED SINCE TO REACH THIS POINT PCB MUST */
*   /* REPRESENT A NORMAL PGOUT OR A PRIVATE AREA SWAPOUT PAGE.      */
*   /*                                                       @Z40WPYD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0341
*DECFRAME:                                                         0341
*                                                                  0341
*   /*****************************************************************/
*   /*                                                               */
*   /* REAL FRAME IS TO BE FREED SET UP PARAMATERS FOR CALL TO       */
*   /* IEAVPFTE AND DETERMINE WHICH END OF THE AFQ THE REAL FRAME    */
*   /* GOES ON. IF FRAME WAS SWAP OUT, INCREMENT PAGE SWAPPED OUT    */
*   /* COUNT.                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0341
*   PFTPCBSI='0'B;                  /* PCB DEFINED OFF               */
@RF00330 DS    0H                                                  0341
DECFRAME NI    PFTPCBSI(PFTEPTR),B'11110111'                       0341
*   TQID=PFTAFQN;                   /* SET PARAMETERS TO CALL PFTE   */
         MVI   TQID(R13),X'00'                                     0342
*   FRAMERBN=PCBRBN;                                               0343
         LH    @15,PCBRBN(,R4)                                     0343
         N     @15,@CF01890                                        0343
         STH   @15,FRAMERBN(,R13)                                  0343
*   R1=PCBASCB;                     /* GET ASCB ADDR FOR PFTE CALL   */
         L     R1,PCBASCB(,R4)                                     0344
*   R2=R1->ASCBRSM;                                                0345
         L     R2,ASCBRSM(,R1)                                     0345
*   FLAGPFTE=BACKFLG;               /* FRAME TO END OF AFQ           */
         MVI   FLAGPFTE(R13),X'00'                                 0346
*   IF PCBSWPOT='1'B THEN           /* IS PCB FOR A SWAP-OUT         */
         TM    PCBSWPOT(R4),B'10000000'                            0347
         BNO   @RF00347                                            0347
*     DO;                                                          0348
*       GO TO FREPFT;               /* GO FREE PFTE                  */
         B     FREPFT                                              0349
*     END;                                                         0350
*   IF PCBVBN=0&PFTIRRG='0'B THEN   /* FRAME TO FRONT OF AFQ IF THIS
*                                      PAGE OUT WAS CANCELED BY AN 0351
*                                      ASID PURGE                    */
@RF00347 LH    @15,PCBVBN(,R4)                                     0351
         N     @15,@CF01890                                        0351
         LTR   @15,@15                                             0351
         BNZ   @RF00351                                            0351
         TM    PFTIRRG(PFTEPTR),B'00010000'                        0351
         BNZ   @RF00351                                            0351
*     FLAGPFTE=FRONTFLG;                                           0352
         MVI   FLAGPFTE(R13),X'80'                                 0352
*FREPFT:                                                           0353
*   R0=WORK2;                       /* GET PARAMATERS FOR PFTE       */
@RF00351 DS    0H                                                  0353
FREPFT   L     R0,WORK2(,R13)                                      0353
*   CALL IEAVPFTE;                  /* FREE PFTE                     */
         L     @15,PVTPFTE(,PVTPTR)                                0354
         BALR  @14,@15                                             0354
*   GO TO FREEQDD;                  /* SKIP PCB DEFINE OFF           */
*                                                                  0355
         B     FREEQDD                                             0355
*   /*****************************************************************/
*   /*                                                               */
*   /* TURN PCB DEFINED BIT OFF IF FRAME WAS VALIDATED AND FREE THE  */
*   /* QUEUED PCB                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0356
*AFTERVAL:                                                         0356
*   PFTPCBSI='0'B;                  /* PCB DEFINED OFF               */
AFTERVAL NI    PFTPCBSI(PFTEPTR),B'11110111'                       0356
*FREEQDD:                                                          0357
*   R0=PCBFREQN;                    /* PCB TO FREE QUEUE             */
FREEQDD  LA    R0,16                                               0357
*   R1=R4;                          /* PCB ADDRESS                   */
         LR    R1,R4                                               0358
*   R2=ASCBRSM;                     /* GET RSMHDR ADDRESS            */
         L     @15,ASCBPTR(,R4)                                    0359
         L     R2,ASCBRSM(,@15)                                    0359
*   CALL IEAVPCB;                   /* QUEUED PCB TO FREE Q          */
         L     @15,PVTPCB(,PVTPTR)                                 0360
         BALR  @14,@15                                             0360
*POUTRTN:                                                          0361
*   R14=RTNLEV1;                    /* RESTORE RETURN ADDRESS        */
POUTRTN  L     R14,RTNLEV1(,PVTPTR)                                0361
*   RETURN;                         /* RETURN TO MAINLINE            */
*                                                                  0362
         B     @EL00004                                            0362
*   /*****************************************************************/
*   /*                                                               */
*   /* CHANGE PCB TO A PAGE IN PCB AND SCHEDULE IOCP FOR THE QUEUED  */
*   /* PCB AND RETURN ENTERED HERE WHEN AN I/O ERROR HAS OCCURRED TO */
*   /* A NON-SWAPOUT PCB OR A PGOUT WITH THE KEEP REAL OPTION HAS    */
*   /* BEEN SPECIFIED                                        @Z40WPYD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0363
*CPWORK:                                                           0363
*   R1=R4;                          /* PUT PCB ADDRESS WHERE PIOCPSCH
*                                      EXPECTS TO FIND IT            */
CPWORK   LR    R1,R4                                               0363
*   PCBIOI='0'B;                    /* CHANGE PCB TO PAGE IN         */
         NI    PCBIOI(R4),B'11111101'                              0364
*   PCBIOERR='0'B;                  /* I/O ERROR FLAG OFF IN QUEUED  */
         NI    PCBIOERR(R4),B'11011111'                            0365
*   CALL PIOCPSCH;                  /* GO SCHEDULE IEAVIOCP          */
         BAL   @14,PIOCPSCH                                        0366
*   R14=RTNLEV1;                    /* GET RETURN ADDRESS            */
         L     R14,RTNLEV1(,PVTPTR)                                0367
*   END POUTPROC;                                                  0368
         B     @EL00004                                            0368
*                                                                  0369
*/********************************************************************/
*/*                                                                  */
*/*           STAGE 1 SWAP IN PCB PROCESSOR                          */
*/*                                                                  */
*/* THIS PROCESSOR HANDLES PAGE IN PCB'S WITH THE STAGE 1 FLAG ON    */
*/* AND WITH OR WITHOUT RELATEDS.                                    */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0-R2        WORK REGISTERS                                     */
*/*  R3           PVT ADDRESS                                        */
*/*  R4           ADDRESS OF A QUEUED PCB WITH STAGE 1 FLAG ON       */
*/*               NOTE THAT THE  ASCB PTR IS OBTAINED FROM           */
*/*               THE  INPUT PCB                                     */
*/*  R5           WORK REGISTER                                      */
*/*  R6           PFTE ADDRESS                                       */
*/*  R7           WORK REGISTER                                      */
*/*  R8           RCA ADDRESS                                        */
*/*  R9           WORK REGISTER                                      */
*/*  R10          CODE REG                                           */
*/*  R11-R12      WORK REG                                           */
*/*  R13          ADDRESS OF MAINLINE SAVE AREA                      */
*/*  R14          RETURN ADDRESS                                     */
*/*  R15          WORK REG                                           */
*/********************************************************************/
*                                                                  0369
*STAG1PRC:                                                         0369
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0369
STAG1PRC DS    0H                                                  0370
*   RTNLEV1=R14;                                                   0370
*                                                                  0370
         ST    R14,RTNLEV1(,PVTPTR)                                0370
*   /*****************************************************************/
*   /*                                                               */
*   /* IF AN I/O ERROR OCCURED SET ROOT FAIL BIT                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0371
*   IF PCBIOERR='1'B THEN                                          0371
         TM    PCBIOERR(R4),B'00100000'                            0371
         BNO   @RF00371                                            0371
*     DO;                                                          0372
*       IF PCBSWPLS='1'B THEN       /* LSQA SWAPIN           @Z40WPYD*/
         TM    PCBSWPLS(R4),B'00010000'                            0373
         BNO   @RF00373                                            0373
*         ASCBRSM->RSMFAIL='1'B;    /* INDICATE LSQA NOT VALID     0374
*                                                            @Z40WPYD*/
         L     @15,ASCBPTR(,R4)                                    0374
         L     @15,ASCBRSM(,@15)                                   0374
         OI    RSMFAIL(@15),B'00000010'                            0374
*       ELSE                                                       0375
*         ;                         /* STAGE1 FIXED PAGE     @Z40WPYD*/
@RF00373 DS    0H                                                  0376
*       PCBRFAIL='1'B;              /* SET ROOT FAIL BIT             */
*       PCBRPB='1'B;                /* SET SPECIAL FLAG ON           */
         L     @15,PCBRPTR-1(,R4)                                  0377
         OI    PCBRFAIL(@15),B'00101000'                           0377
*     END;                                                         0378
*   IF PCBSWPIN='1'B THEN           /* PCB IS A STAGE 1 SWAP IN OF 0379
*                                      LSQA OR PRIVATE AREA FIXED  0379
*                                      PAGE. REMOVE PCB FROM I/O   0379
*                                      ACTIVE Q AND ENQ IT TO THE  0379
*                                      ROOT PCB                      */
@RF00371 TM    PCBSWPIN(R4),B'01000000'                            0379
         BNO   @RF00379                                            0379
*     DO;                                                          0380
*       PFTPCBSI='0'B;              /* TURN OFF PCB DEFINE BIT       */
         NI    PFTPCBSI(PFTEPTR),B'11110111'                       0381
*       R0=PCBDEQN;                 /* SET TO QUEUE ID               */
         LA    R0,255                                              0382
*       R1=R4;                      /* SET ADDR OF PCB WHERE IEAVPCB
*                                      EXPECTS IT                    */
         LR    R1,R4                                               0383
*       R2=ASCBRSM;                 /* GET HEADER ADDRESS            */
         L     @15,ASCBPTR(,R4)                                    0384
         L     R2,ASCBRSM(,@15)                                    0384
*       CALL IEAVPCB;               /* DEQ PCB                       */
         L     @15,PVTPCB(,PVTPTR)                                 0385
         BALR  @14,@15                                             0385
*       PCBBQPA=PCBRWRK2;           /* COPY OLD LAST PTR             */
         L     @15,PCBRPTR-1(,R4)                                  0386
         LA    @15,0(,@15)                                         0386
         L     @12,PCBRWRK2(,@15)                                  0386
         ST    @12,PCBBQPA(,R4)                                    0386
*       PCBRWRK2=R4;                /* PUT NEW PCB ON END            */
         ST    R4,PCBRWRK2(,@15)                                   0387
*       IF PCBBQPA=0 THEN           /* ANY PCBS ON QUEUE             */
         LTR   @12,@12                                             0388
         BNZ   @RF00388                                            0388
*         PCBRWRK1=R4;              /* FIRST AND ONLY ONE ON Q       */
         ST    R4,PCBRWRK1(,@15)                                   0389
*       ELSE                        /* PCBS ALREADY ON QUEUE         */
*         PCBBQPA->PCBFQPA=R4;      /* UPDATE FORWARD PTR OF PREVIOUS
*                                      LAST PCB ON QUEUE             */
         B     @RC00388                                            0390
@RF00388 L     @15,PCBBQPA(,R4)                                    0390
         STCM  R4,7,PCBFQPA(@15)                                   0390
*       RFY                                                        0391
*        (R7) RSTD;                                                0391
@RC00388 DS    0H                                                  0392
*       R7=R4;                      /* ADDRESS OF PCB FOR DOAROOT    */
         LR    R7,R4                                               0392
*       CALL DOAROOT;               /* DO ROOT PROCESSING            */
         BAL   @14,DOAROOT                                         0393
*       RFY                                                        0394
*        (R7) UNRSTD;                                              0394
*       R14=RTNLEV1;                                               0395
         L     R14,RTNLEV1(,PVTPTR)                                0395
*       RETURN;                     /* RETURN TO CALLER              */
@EL00005 DS    0H                                                  0396
@EF00005 DS    0H                                                  0396
@ER00005 BR    @14                                                 0396
*     END;                          /* END OF PCBSWPIN FLAG TEST     */
*                                                                  0398
*   /*****************************************************************/
*   /*                                                               */
*   /* PCB IS COMMON AREA SWAP IN. IF NO I/O ERROR OCCURED, AND      */
*   /* PAGING OPERATION WAS NOT PURGED, VALIDATE FRAME               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0398
*   IF PCBIOERR='0'B&PCBFREAL='0'B THEN                            0398
@RF00379 TM    PCBIOERR(R4),B'10100000'                            0398
         BNZ   @RF00398                                            0398
*     CALL VALIT;                   /* IF NO I/O ERR VALIDATE FRAME
*                                      AND SET PROTECT KEY           */
*                                                                  0399
         BAL   @14,VALIT                                           0399
*   /*****************************************************************/
*   /*                                                               */
*   /* THE ONLY ROOT THAT CAN BE CALLED AT THIS POINT IS THE SWAP IN */
*   /* ROOT EXIT AND A STAGE 1 PCB MUST HAVE A ROOT.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0400
*   RFY                                                            0400
*    (R7) RSTD;                                                    0400
@RF00398 DS    0H                                                  0401
*   R7=R4;                          /* ADDRESS OF PCB FOR DOAROOT    */
         LR    R7,R4                                               0401
*   CALL DOAROOT;                   /* THE ROOT FAIL BIT IS ALREADY
*                                      SET IF AN I/O ERROR OCCURED   */
         BAL   @14,DOAROOT                                         0402
*   RFY                                                            0403
*    (R7) UNRSTD;                                                  0403
*                                                                  0403
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THERE ARE RELATED PCB'S THEY WILL BE FOR ADDRESS SPACES    */
*   /* OTHER THEN THE ONE BEING SWAPPED IN. IF NO I/O ERROR OCCURED  */
*   /* CALL COMMON AREA RELATED PROCESSOR. IF AN I/O ERROR OCCURED,  */
*   /* CALL ERROR RELATED PROCESSOR AND PASS ANY RELATED PCB's that  */
*   /* remain after this call to iocp.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0404
*   IF PCBRLPA^=0 THEN                                             0404
         L     @15,PCBRLPA-1(,R4)                                  0404
         LA    @15,0(,@15)                                         0404
         LTR   @15,@15                                             0404
         BZ    @RF00404                                            0404
*     DO;                                                          0405
*       IF PCBIOERR='1'B THEN       /* IF AN I/O ERROR OCCURED, PUT
*                                      THE RELATED CHAIN ON THE    0406
*                                      COMMON I/O ACTIVE QUEUE AND 0406
*                                      SCHEDULE IOCP IF NOTIFICATION
*                                      IS REQUIRED FOR ANY RELATED 0406
*                                      PCBS.                         */
         TM    PCBIOERR(R4),B'00100000'                            0406
         BNO   @RF00406                                            0406
*         DO;                                                      0407
*           CALL ERRLTDPR;          /* PROCESS THE RELATED PCBS      */
         BAL   @14,ERRLTDPR                                        0408
*           IF PCBRLPA^=0 THEN      /* ANY RELATEDS LEFT             */
         L     @15,PCBRLPA-1(,R4)                                  0409
         LA    @15,0(,@15)                                         0409
         LTR   @15,@15                                             0409
         BZ    @RF00409                                            0409
*             DO;                   /* PROCESS ANY REMAINING RELATEDS*/
*               R1=PCBRLPA;         /* GET ADDRESS OF FIRST PCB ON 0411
*                                      RELATED CHAIN                 */
         LR    R1,@15                                              0411
*               R0=PCBCIOQN;        /* TO COMMON I/O ACTIVE QUEUE    */
         LA    R0,32                                               0412
*               R2=R1->PCBASCB->ASCBRSM;/* GET RSMHD ADDR            */
         L     @15,PCBASCB(,R1)                                    0413
         L     R2,ASCBRSM(,@15)                                    0413
*               CALL IEAVPCB;       /* R1 IS NOT DESTROYED BY THIS 0414
*                                      CALL TO PCB MANAGER           */
         L     @15,PVTPCB(,PVTPTR)                                 0414
         BALR  @14,@15                                             0414
*               CALL PIOCPSCH;      /* SCHEDULE IOCP FOR NEWLY ENQUED
*                                      PCB                           */
         BAL   @14,PIOCPSCH                                        0415
*               GO TO NOSWINRL;     /* GO FREE PCB                   */
         B     NOSWINRL                                            0416
*             END;                                                 0417
*           ELSE                                                   0418
*             ;                     /* ALL RELATEDS PROCESSED        */
@RF00409 DS    0H                                                  0419
*         END;                                                     0419
*                                                                  0419
*       /*************************************************************/
*       /*                                                           */
*       /* FRAME IS ALREADY VALID, DETERMINE DISPOSITION OF ALL      */
*       /* COMMON AREA RELATED PCB'S                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0420
*       ELSE                                                       0420
*         CALL CARLTDPR;            /* DO COMMON AREA RELATED PCB'S  */
         B     @RC00406                                            0420
@RF00406 BAL   @14,CARLTDPR                                        0420
*     END;                                                         0421
*                                                                  0421
@RC00406 DS    0H                                                  0422
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THERE WAS NO I/O ERROR AND THE PAGING OPERATION WAS NOT    */
*   /* INTERCEPTED, THE FRAME WAS VALIDATED AND PCB DEFINED SHOULD BE*/
*   /* TURNED OFF. IF THERE WAS AN I/O ERROR OR THE PAGING OPERATION */
*   /* WAS PURGED, PCB DEFINED SHOULD BE TURNED OFF, THE FRAME FREED */
*   /* AND THE FRAME COUNT DECREMENTED. IN ADDITION, THE ASID, VBN   */
*   /* FIELDS IN THE PFTE ARE ZEROED TO PREVENT RECLAIM.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0422
*   IF PCBIOERR='1'B THEN           /* WAS THERE AN I/O ERROR        */
@RF00404 TM    PCBIOERR(R4),B'00100000'                            0422
         BNO   @RF00422                                            0422
*     PFTPGID=0;                    /* PREVENT RECLAIM               */
         SLR   @15,@15                                             0423
         ST    @15,PFTPGID(,PFTEPTR)                               0423
*   ELSE                                                           0424
*     IF PCBFREAL='0'B×PGTPVM='0'B THEN/* PCB DEFINED OFF, PAGE VALID*/
         B     @RC00422                                            0424
@RF00422 TM    PCBFREAL(R4),B'10000000'                            0424
         BZ    @RT00424                                            0424
         L     @15,PTEPTR-1(,R4)                                   0424
         TM    PGTPVM(@15),B'00001000'                             0424
         BNZ   @RF00424                                            0424
@RT00424 DS    0H                                                  0425
*       DO;                                                        0425
*         PFTPCBSI='0'B;                                           0426
         NI    PFTPCBSI(PFTEPTR),B'11110111'                       0426
*         GOTO NOSWINRL;            /* GO FREE INPUT PCB             */
         B     NOSWINRL                                            0427
*       END;                                                       0428
*   CALL FREEFRA;                   /* FREE THE FRAME FOR I/O ERROR
*                                      OR INTERCEPTED CASES          */
@RF00424 DS    0H                                                  0429
@RC00422 BAL   @14,FREEFRA                                         0429
*NOSWINRL:                                                         0430
*   R0=PCBFREQN;                    /* PCB TO FREE QUEUE             */
NOSWINRL LA    R0,16                                               0430
*   R2=ASCBRSM;                     /* GET HEADER ADDRESS JUST IN  0431
*                                      CASE                          */
         L     @15,ASCBPTR(,R4)                                    0431
         L     R2,ASCBRSM(,@15)                                    0431
*   R1=R4;                          /* ADDR OF QUEUED PCB            */
         LR    R1,R4                                               0432
*   CALL IEAVPCB;                   /* MOVE PCB FO FREE Q            */
         L     @15,PVTPCB(,PVTPTR)                                 0433
         BALR  @14,@15                                             0433
*   R14=RTNLEV1;                    /* GET RETURN ADDRESS            */
         L     R14,RTNLEV1(,PVTPTR)                                0434
*   END STAG1PRC;                                                  0435
         B     @EL00005                                            0435
*                                                                  0436
*/********************************************************************/
*/* PROCEDURE TO SET PROTECTION KEY, REF AND CHANGE BITS AND TO      */
*/* VALIDATE PAGE TABLE ENTRY                                        */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0-R2         WORK REGISTERS                                    */
*/*  R3            PVTADDR                                           */
*/*  R4            ADDRESS OF A PCB                                  */
*/*  R5            NOT USED                                          */
*/*  R6            NOT USED                                          */
*/*  R7            WORK REGISTERS                                    */
*/*  R8            RCA ADDRESS                                       */
*/*  R9            WORK REGISTER                                     */
*/*  R10           CODE REG                                          */
*/*  R11           WORK REG                                          */
*/*  R12           NOT USED                                          */
*/*  R13           ADDRESS OF MAINLINE SAVE AREA                     */
*/*  R14           RETURN ADDRESS                                    */
*/*  R15           WORK REG                                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0436
*VALIT:                                                            0436
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0436
VALIT    DS    0H                                                  0437
*   RFY                                                            0437
*    (R11) RSTD;                                                   0437
*   R11=PCBXPTA;                    /* GET ADDRESS OF XPTE           */
         L     R11,PCBXPTA-1(,R4)                                  0438
         LA    R11,0(,R11)                                         0438
*   R0=R11->XPTPROT;                /* GET PROTECT KEY, REFERENCE AND
*                                      CHANGE BITS ASSUMED TO BE OFF */
         SLR   R0,R0                                               0439
         IC    R0,XPTPROT(,R11)                                    0439
*   R1=PCBRBN;                                                     0440
         LH    R1,PCBRBN(,R4)                                      0440
         N     R1,@CF01890                                         0440
*   GEN(SLL R1,8);                  /* MOVE RBN TO CORRECT POSITION
*                                      TO BE AN ADDRESS              */
         SLL R1,8
*   GEN(SSK R0,R1);                 /* SET KEY FOR FIRST 2K          */
         SSK R0,R1
*   GEN(LA R1,2048(R1));            /* SET TO SECOND 2K              */
         LA R1,2048(R1)
*   GEN(SSK R0,R1);                 /* SET KEY FOR SECOND 2K         */
         SSK R0,R1
*   R11=PCBPGTA;                    /* GET PGTE ADDRESS              */
         L     R11,PCBPGTA-1(,R4)                                  0445
         LA    R11,0(,R11)                                         0445
*   R11->PGTPVM='0'B;               /* VALIDATE FRAME                */
         NI    PGTPVM(R11),B'11110111'                             0446
*   RFY                                                            0447
*    (R11) UNRSTD;                                                 0447
*   END VALIT;                                                     0448
@EL00006 DS    0H                                                  0448
@EF00006 DS    0H                                                  0448
@ER00006 BR    @14                                                 0448
*                                                                  0449
*/********************************************************************/
*/*                                                                  */
*/*   SUBROUTINE TO DO ROOT PCB PROCESSING                           */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0-R2        WORK REGISTERS                                     */
*/*  R3           PVTADDR                                            */
*/*  R4-R6        NOT USED                                           */
*/*  R7           ADDRESS OF PCB WITH A ROOT                         */
*/*  R8           RCA ADDRESS                                        */
*/*  R9           WORK REGISTER                                      */
*/*  R10          CODE REG                                           */
*/*  R11-R12      IGNORED                                            */
*/*  R13          MAINLINE SAVEAREA                                  */
*/*  R14          RETURN ADDRESS                                     */
*/*  R15          WORK REG                                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0449
*DOAROOT:                                                          0449
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0449
DOAROOT  DS    0H                                                  0450
*   RFY                                                            0450
*    (R7,                                                          0450
*     R9) RSTD;                                                    0450
*   RFY                                                            0451
*     PCB BASED(R7);                /* CHANGE BASE FOR THIS ROUTINE  */
*   PCBRCNT=PCBRCNT-1;              /* DECREMENT ROOT COUNT          */
         L     @15,PCBRPTR-1(,R7)                                  0452
         LA    @15,0(,@15)                                         0452
         LH    @12,PCBRCNT(,@15)                                   0452
         BCTR  @12,0                                               0452
         STH   @12,PCBRCNT(,@15)                                   0452
*   IF PCBRCNT=0 THEN               /* IS ROOT COUNT ZERO            */
         LTR   @12,@12                                             0453
         BNZ   @RF00453                                            0453
*     DO;                                                          0454
*       R1=PCBRTPA;                 /* ADDRESS OF ROOT FOR ROOT EXIT */
         L     R1,PCBRTPA-1(,R7)                                   0455
         LA    R1,0(,R1)                                           0455
*       R2=ASCBRSM;                 /* GET PROPER RSMHD ADDR         */
         L     @12,ASCBPTR(,R7)                                    0456
         L     R2,ASCBRSM(,@12)                                    0456
*       R9=R14;                     /* SAVE R14                      */
         LR    R9,R14                                              0457
*       CALL ROOTEXIT;              /* CALL ROOT EXIT ROUTINE        */
         L     @15,PCBRGOTO(,@15)                                  0458
         BALR  @14,@15                                             0458
*       R14=R9;                     /* RESTORE R14                   */
         LR    R14,R9                                              0459
*       RCACSECT=RCACPOST;          /* RESET CSECT ID AFTER CALL TO
*                                      ROOT EXIT ROUTINE             */
         MVI   RCACSECT(RCAPTR),X'13'                              0460
*     END;                                                         0461
*   RFY                                                            0462
*     PCB BASED(R4);                /* RESTORE BASE TO NORMAL        */
*   RFY                                                            0463
*    (R7,                                                          0463
*     R9) UNRSTD;                                                  0463
*   END DOAROOT;                                                   0464
@EL00007 DS    0H                                                  0464
@EF00007 DS    0H                                                  0464
@ER00007 BR    @14                                                 0464
*                                                                  0465
*/********************************************************************/
*/* PROCEDURE TO FREE A FRAME ON A FRAME QUEUE, SET PCB DEFINED      */
*/* OFF.  PLACE THE FRAME ON THE FRONT OF THE AFQ.                   */
*/*                                                                  */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0-R2               WORK REGISTERS                              */
*/*  R3                  PVT ADDRESS                                 */
*/*  R4                  ADDRESS OF A PCB                            */
*/*  R5                  NOT USED                                    */
*/*  R6                  PFTE ADDRESS                                */
*/*  R7                  WORK REGISTER                               */
*/*  R8                  RCA ADDRESS                                 */
*/*  R9                  WORK REGISTER                               */
*/*  R10                 BASE REGISTER                               */
*/*  R11-R12             WORK REGISTER                               */
*/*  R13                 ADDRESS OF MAINLINE SAVE AREA               */
*/*  R14                 RETURN ADDRESS                              */
*/*  R15                 WORK REGISTER                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  0465
*FREEFRA:                                                          0465
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0465
FREEFRA  DS    0H                                                  0466
*   PFTPCBSI='0'B;                  /* PCB DEFINED OFF               */
         NI    PFTPCBSI(PFTEPTR),B'11110111'                       0466
*   FRAMERBN=PCBRBN;                /* RBN OF FRAME TO FREE          */
         LH    @15,PCBRBN(,R4)                                     0467
         N     @15,@CF01890                                        0467
         STH   @15,FRAMERBN(,R13)                                  0467
*   FLAGPFTE=FRONTFLG;              /* FRAME TO FRONT OF AFQ         */
         MVI   FLAGPFTE(R13),X'80'                                 0468
*   TQID=PFTAFQN;                   /* FRAME TO AFQ                  */
         MVI   TQID(R13),X'00'                                     0469
*   R0=WORK2;                       /* LOAD PARAMETERS INTO R0       */
         L     R0,WORK2(,R13)                                      0470
*   R2=ASCBRSM;                     /* GET RSMHDR ADDRESS OF WHERE 0471
*                                      FRAME LIVES, NOT NECESSARY IF
*                                      FRAME IS ON COMMON Q          */
         L     @15,ASCBPTR(,R4)                                    0471
         L     R2,ASCBRSM(,@15)                                    0471
*   RFY                                                            0472
*    (R11) RSTD;                                                   0472
*   R11=R14;                        /* SAVE RETURN ADDRESS           */
         LR    R11,R14                                             0473
*   CALL IEAVPFTE;                  /* FREE THE FRAME                */
         L     @15,PVTPFTE(,PVTPTR)                                0474
         BALR  @14,@15                                             0474
*   R14=R11;                        /* RESTORE RETURN ADDRESS        */
         LR    R14,R11                                             0475
*   RFY                                                            0476
*    (R11) UNRSTD;                                                 0476
*   END FREEFRA;                                                   0477
@EL00008 DS    0H                                                  0477
@EF00008 DS    0H                                                  0477
@ER00008 BR    @14                                                 0477
*                                                                  0478
*/********************************************************************/
*/*    ROUTINE TO CALL ABEND                                         */
*/*                                                                  */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0            WORK                                              */
*/*  R1            DESTROYED                                         */
*/*  R2            NOT USED                                          */
*/*  R3-R7         NOT USED                                          */
*/*  R8            RCA ADDRESS                                       */
*/*  R9            NOT USED                                          */
*/*  R10           CODE REG                                          */
*/*  R11-R12       NOT USED                                          */
*/*  R13           ADDRESS OF MAINLINE SAVE AREA                     */
*/*  R14           RETURN ADDRESS                                    */
*/*  R15           NOT USED                                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0478
*DOABEND:                                                          0478
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0478
DOABEND  DS    0H                                                  0479
*   RCAPARM1=PCBPTR;                /* SAVE ADDRESS OF PCB/AIA IN  0479
*                                      ERROR                 @Z40WPYD*/
         ST    PCBPTR,RCAPARM1(,RCAPTR)                            0479
*   GENERATE NODEFS SETS(R1) NOREFS NOFLOWS;                       0480
    ABEND X'C0D',,,SYSTEM
*   END DOABEND;                                                   0481
@EL00009 DS    0H                                                  0481
@EF00009 DS    0H                                                  0481
@ER00009 BR    @14                                                 0481
*                                                                  0482
*/********************************************************************/
*/*                                                                  */
*/*    ROUTINE TO SCHEDULE IEAVIOCP IN THE CORRECT ADDRESS SPACE     */
*/*    AND WITH THE CORRECT REQUEST FOR THE LOCAL LOCK FOR THE       */
*/*    INPUT PAGE IN PCB AND ANY PCB'S RELATED TO IT.                */
*/*                                                                  */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0            WORK REG                                          */
*/*  R1            ADDRESS OF A PCB WITH OR WITHOUT RELATEDS         */
*/*                (R1 IS DESTROYED)                                 */
*/*  R2            WORK REG                                          */
*/*  R3            PVT ADDRESS                                       */
*/*  R4            NOT USED                                          */
*/*  R5            NOT USED                                          */
*/*  R6            NOT USED                                          */
*/*  R7            WORK REGISTER                                     */
*/*  R8            RCA ADDRESS                                       */
*/*  R9            WORK REGISTER                                     */
*/*  R10           CODE REG                                          */
*/*  R11-R12       WORK REGS                                         */
*/*  R13           ADDRESS OF CALLERS SAVE AREA                      */
*/*  R14           RETURN ADDRESS                                    */
*/*  R15           WORK REG                                          */
*/********************************************************************/
*                                                                  0482
*PIOCPSCH:                                                         0482
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0482
PIOCPSCH DS    0H                                                  0483
*   R2=R1->PCBASCB->ASCBRSM;        /* GET HEADER ADDRESS            */
         L     @15,PCBASCB(,R1)                                    0483
         L     R2,ASCBRSM(,@15)                                    0483
*   IF RSMIOCPU='1'B&RSMIOCPC='1'B THEN/* IS IEAVIOCP ALREADY      0484
*                                      SCHEDULED BOTH TO REQUEST THE
*                                      LOCAL LOCK AND TO NOT REQUEST
*                                      THE LOCAL LOCK                */
         TM    RSMIOCPU(RSMHDPTR),B'11000000'                      0484
         BO    @RT00484                                            0484
*     RETURN;                       /* RETURN TO THE CALLER          */
*   RFY                                                            0486
*    (R7,                                                          0486
*     R12) RSTD;                                                   0486
*   R12=0;                          /* WHEN R12 IS ZERO NO REQ OF  0487
*                                      LOCAL LOCK BY IEAVIOCP IS   0487
*                                      DESIRED                       */
         SLR   R12,R12                                             0487
*   R7=R1;                          /* INITIALIZE R7 FOR SCAN OF   0488
*                                      PCB'S                         */
*                                                                  0488
         LR    R7,R1                                               0488
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LL IS HELD, PCB MUST BE FOR A PAGE FAULT                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0489
*CKLLHLD:                                                          0489
*   IF R7->PCBLLHLD='1'B THEN                                      0489
CKLLHLD  TM    PCBLLHLD(R7),B'00010000'                            0489
         BNO   @RF00489                                            0489
*     DO;                           /* IF ONE PCB HOLDS LL DO NOT  0490
*                                      REQUEST IT                    */
*       IF RSMIOCPC='0'B THEN       /* IS IOCP SCHEDULED TO NOT REQ
*                                      LL                            */
         TM    RSMIOCPC(RSMHDPTR),B'01000000'                      0491
         BNZ   @RF00491                                            0491
*         DO;                                                      0492
*           R12=0;                  /* SET TO NOT REQUEST LL         */
         SLR   R12,R12                                             0493
*           GO TO SCHSRB;           /* GO SCHEDULE SRB               */
         B     SCHSRB                                              0494
*         END;                                                     0495
*       ELSE                        /* IF LOCAL LOCK IS HELD AND IOCP
*                                      IS ALREADY SCHEDULED TO     0496
*                                      REQUEST THE LOCK RETURN TO THE
*                                      CALLER                        */
*         RETURN;                   /* RETURN TO CALLER              */
*     END;                                                         0497
*   ELSE                            /* LOCAL LOCK WAS NOT HELD       */
*     DO;                                                          0498
*                                                                  0498
@RF00489 DS    0H                                                  0499
*       /*************************************************************/
*       /*                                                           */
*       /* IS THERE A ROOT. IF THERE IS, IT MUST BE EITHER A FIX/LOAD*/
*       /* ROOT OR A SWAP IN ROOT. SWAP OUT PCB'S, WHICH ALSO HAVE   */
*       /* THE ROOT FLAG ON, CAN NOT BE IN A RELATED POSITION.       */
*       /* SCHEDULE AN UNCONDITIONAL REQUEST FOR THE LOCAL LOCK FOR A*/
*       /* FIXED/LOAD ROOT.                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0499
*       IF R7->PCBROOT='1'B&R7->PCBSWPS1='0'B THEN                 0499
         TM    PCBROOT(R7),B'00000100'                             0499
         BNO   @RF00499                                            0499
         TM    PCBSWPS1(R7),B'00100000'                            0499
         BNZ   @RF00499                                            0499
*         R12=1;                                                   0500
*                                                                  0500
         LA    R12,1                                               0500
*       /*************************************************************/
*       /*                                                           */
*       /* IF PCB IS FOR A PAGE FAULT WHICH IS NOT FOR AN SRB, IT    */
*       /* MUST BE FOR A TCB                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0501
*       ELSE                                                       0501
*         IF R7->PCBRESET='1'B&R7->PCBSRBMD='0'B THEN/* IS IT A PAGE
*                                      FAULT BY A TCB                */
         B     @RC00499                                            0501
@RF00499 TM    PCBRESET(R7),B'00010000'                            0501
         BNO   @RF00501                                            0501
         TM    PCBSRBMD(R7),B'00100000'                            0501
         BNZ   @RF00501                                            0501
*           R12=1;                  /* AN UNCOND REQ OF THE LL IS  0502
*                                      DESIRED FOR UNLOCKED TCB      */
         LA    R12,1                                               0502
*     END;                                                         0503
@RF00501 DS    0H                                                  0503
@RC00499 DS    0H                                                  0504
*   R7=R7->PCBRLPA;                 /* INITIALIZE LOOP VARIABLE      */
         L     @15,PCBRLPA-1(,R7)                                  0504
         LA    @15,0(,@15)                                         0504
         LR    R7,@15                                              0504
*   DO WHILE(R7^=0);                                               0505
         B     @DE00505                                            0505
@DL00505 DS    0H                                                  0506
*     IF R1->PCBASCB=R7->PCBASCB THEN/* IS PCB FOR THIS ASCB         */
         CLC   PCBASCB(4,R1),PCBASCB(R7)                           0506
         BE    @RT00506                                            0506
*       GO TO CKLLHLD;              /* SET TO NEXT RELATED           */
*     R7=R7->PCBRLPA;               /* UPDATE LOOP VARIABLE          */
         L     @15,PCBRLPA-1(,R7)                                  0508
         LA    @15,0(,@15)                                         0508
         LR    R7,@15                                              0508
*   END;                                                           0509
*                                                                  0509
@DE00505 LTR   R7,R7                                               0509
         BNZ   @DL00505                                            0509
*   /*****************************************************************/
*   /*                                                               */
*   /* ARRIVE HERE WHEN ALL RELATED PCB'S HAVE BEEN PROCESSED.       */
*   /* DETERMINE HOW IEAVIOCP IS TO REQUEST THE LOCAL LOCK.          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0510
*ENRLT:                                                            0510
*   IF R12=0 THEN                                                  0510
ENRLT    LTR   R12,R12                                             0510
         BNZ   @RF00510                                            0510
*     DO;                                                          0511
*                                                                  0511
*       /*************************************************************/
*       /*                                                           */
*       /* IF IOCP IS ALREADY SCHED TO NOT REQ LL, RETURN            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0512
*       IF RSMIOCPC='1'B THEN                                      0512
         TM    RSMIOCPC(RSMHDPTR),B'01000000'                      0512
         BO    @RT00512                                            0512
*         RETURN;                   /* RETURN TO CALLER              */
*     END;                                                         0514
*   ELSE                                                           0515
*                                                                  0515
*     /***************************************************************/
*     /*                                                             */
*     /* IF IOCP IS ALREADY SCHED TO REQ LL UNCOND, RETURN           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0515
*     IF RSMIOCPU='1'B THEN                                        0515
         B     @RC00510                                            0515
@RF00510 TM    RSMIOCPU(RSMHDPTR),B'10000000'                      0515
         BO    @RT00515                                            0515
*       RETURN;                     /* RETURN TO THE CALLER          */
*                                                                  0516
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUIRE AN SRB AND INITIALIZE IT TO SCHEDULE IEAVIOCP         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0517
*SCHSRB:                                                           0517
*   R0=PVTSRBID;                    /* GET CELL POOL ID FOR GETCELL  */
@RC00510 DS    0H                                                  0517
SCHSRB   L     R0,PVTSRBID(,PVTPTR)                                0517
*   R7=R13;                         /* SAVE R13 IN R7 OVER GETCELL   */
         LR    R7,R13                                              0518
*   RFY                                                            0519
*    (R9,                                                          0519
*     R11,                                                         0519
*     R15) RSTD;                                                   0519
*   R11=R1->PCBASCB;                /* GET ASCB ADDR FOR SRB         */
         L     R11,PCBASCB(,R1)                                    0520
*   R9=R14;                         /* SAVE R14 OVER GETCELL AND   0521
*                                      INITSRB RTN                   */
         LR    R9,R14                                              0521
*   R13=ADDR(PVTSAVE);              /* GET ADDR OF SAVE AREA         */
         LA    R13,PVTSAVE(,PVTPTR)                                0522
*   GENERATE REFS(CVTGETCL,R0,R13,CVTPTR) SETS(R1,R14,R15);        0523
      GETCELL CPID=(0),BRANCH=YES,SAVE=YES
*   R13=R7;                         /* RESTORE R13                   */
         LR    R13,R7                                              0524
*   RESPECIFY                                                      0525
*    (R7) UNRESTRICTED;             /*                       @Z30GNYC*/
*   IF R15^=0 THEN                  /* DID GETCELL FAIL              */
         SLR   @07,@07                                             0526
         CR    R15,@07                                             0526
         BE    @RF00526                                            0526
*     DO;                                                          0527
*       RESPECIFY                                                  0528
*        (R15) UNRESTRICTED;        /*                       @Z30GNYC*/
*       IF R12^=0 THEN              /* SHOULD IEAVIOCP BE SCHED TO 0529
*                                      REQUEST THE LOCAL LOCK      0529
*                                                            @Z30GNYC*/
         CR    R12,@07                                             0529
         BE    @RF00529                                            0529
*         RSMCPNU='1'B;             /* YES - INDICATE SO     @Z30GNYC*/
         OI    RSMCPNU(RSMHDPTR),B'00010000'                       0530
*       ELSE                        /* NO                    @Z30GNYC*/
*         RSMCPNC='1'B;             /* INDICT SCHED WITHOUT LL     0531
*                                                            @Z30GNYC*/
         B     @RC00529                                            0531
@RF00529 OI    RSMCPNC(RSMHDPTR),B'00001000'                       0531
*       IF PVTSRBIU='0'B THEN       /* REPLENISH SRB IN USE  @Z30GNYC*/
@RC00529 TM    PVTSRBIU(PVTPTR),B'00100000'                        0532
         BNZ   @RF00532                                            0532
*         DO;                       /* NO - SETUP FOR IEAVREP1     0533
*                                                            @Z30GNYC*/
*                                                                  0533
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP PARAMETERS FOR INITSRB                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0534
*           RESPECIFY                                              0534
*            (R0) RESTRICTED;                                      0534
*           PVTSRBIU='1'B;          /* INDICATE SRB IN USE   @Z30GNYC*/
         OI    PVTSRBIU(PVTPTR),B'00100000'                        0535
*           SRBPTR=ADDR(PVTRSRB);   /* SET ADDRESS OF SRB    @Z30GNYC*/
         LA    SRBPTR,PVTRSRB(,PVTPTR)                             0536
*           R11=CVTASVT->ASVTENTY(1);/* MASTER'S ADDR SPACE  @Z40WPYD*/
         L     @15,CVTPTR                                          0537
         L     @15,CVTASVT(,@15)                                   0537
         L     R11,ASVTENTY(,@15)                                  0537
*           R0=ADDR(IEAVREP1);      /* ADDR OF SRB REPLNSH RTN     0538
*                                                            @Z30GNYC*/
         L     R0,@CV01757                                         0538
         LR    @15,R0                                              0538
         LR    R0,@15                                              0538
*           CALL INITSRB;           /* INIT AND SCHED THE SRB      0539
*                                                            @Z30GNYC*/
         BAL   @14,INITSRB                                         0539
*         END;                      /* END OF PARAMETER INIT @Z30GNYC*/
*       ELSE                                                       0541
*         ;                         /* REPLENISH ALREADY SCHED     0541
*                                                            @Z30GNYC*/
@RF00532 DS    0H                                                  0542
*       R14=R9;                     /* RESTORE RETURN ADDR   @Z30GNYC*/
         LR    R14,R9                                              0542
*       RETURN;                     /* RETURN TO CALLER      @Z30GNYC*/
@EL00010 DS    0H                                                  0543
@EF00010 DS    0H                                                  0543
@ER00010 BR    @14                                                 0543
*     END;                                                         0544
*   ELSE                                                           0545
*     ;                             /* GETCELL SUCCESSFUL    @Z30GNYC*/
@RF00526 DS    0H                                                  0546
*/*   SETUP PARAMETERS FOR INITSRB                                   */
*                                                                  0546
*   R0=PVTPIOCP;                    /* SET ADDR OF IEAVPIOP  @Z30GNYC*/
         L     R0,PVTPIOCP(,PVTPTR)                                0546
*   CALL INITSRB;                   /* INIT AND SCHED THE SRB      0547
*                                                            @Z30GNYC*/
         BAL   @14,INITSRB                                         0547
*/*   INDICATE HOW IEAVIOCP WAS SCHEDULED                            */
*                                                                  0548
*   IF R12=0 THEN                                                  0548
         LTR   R12,R12                                             0548
         BNZ   @RF00548                                            0548
*     RSMIOCPC='1'B;                /* IOCP WAS SCHED NOT TO REQ LL  */
         OI    RSMIOCPC(RSMHDPTR),B'01000000'                      0549
*   ELSE                                                           0550
*     RSMIOCPU='1'B;                /* IOCP WAS SCHED TO REQ LL      */
         B     @RC00548                                            0550
@RF00548 OI    RSMIOCPU(RSMHDPTR),B'10000000'                      0550
*   R14=R9;                         /* RESTORE RETURN ADDRESS      0551
*                                                            @Z30GNYC*/
@RC00548 LR    R14,R9                                              0551
*   RETURN;                         /* RETURN TO CALLER      @Z30GNYC*/
         B     @EL00010                                            0552
*   END PIOCPSCH;                                                  0553
         B     @EL00010                                            0553
*   RFY                                                            0554
*    (R7,                                                          0554
*     R11,                                                         0554
*     R12) UNRSTD;                  /*                       @Z30GNYC*/
*                                                                  0555
*/********************************************************************/
*/* THE I/O ERROR RELATED PROCESSOR GETS CONTROL FROM EITHER THE     */
*/* PINPROC OR STAG1PRC SUBROUTINES. THE FOLLOWING IS DONE TO THE    */
*/* RELATED CHAIN OF A QUEUED PCB.                                   */
*/*     1)  PCB'S WITHOUT RESET OR ROOT FLAGS SET ARE REMOVED FROM   */
*/*         THE CHAIN AND FREED.                                     */
*/*     2)  PCB'S FOR ZERO-TCB PGFIX REQUESTS ARE SORTED TO THE END  */
*/*         OF THE RELATED CHAIN BECAUSE THEY MIGHT BE FOR A SWAPPED */
*/*         OUT ADDRESS SPACE.                                       */
*/*     3)  PCB'S WITH RESET OR ROOT FLAGS SET ARE LEFT AS RELATED.  */
*/*                                                                  */
*/* INPUT                                                            */
*/*                                                                  */
*/*  R0-R2         WORK REGISTERS                                    */
*/*  R3            PVTADDR                                           */
*/*  R4            ADDRESS OF A PCB                                  */
*/*  R5-R6         IGNORED                                           */
*/*  R7            WORK REGISTER - CURRENT RELATED PTR               */
*/*  R8            RCA ADDRESS                                       */
*/*  R9            WORK REGISTER - SAVE REG FOR ZERO-TCB PCBS        */
*/*  R10           CODE REG                                          */
*/*  R11           WORK REG                                          */
*/*  R12           NOT USED                                          */
*/*  R13           ADDRESS OF MAINLINE SAVE AREA                     */
*/*  R14           RETURN ADDRESS                                    */
*/*  R15           WORK REG                                          */
*/*                                                                  */
*/* OUTPUT                                                           */
*/*                                                                  */
*/*  R7            ADDR OF PCB PRECEDING FIRST ZERO-TCB PCB IN CHAIN */
*/*                                                                  */
*/********************************************************************/
*                                                                  0555
*ERRLTDPR:                                                         0555
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0555
ERRLTDPR DS    0H                                                  0556
*   RTNLEV2=R14;                    /* SAVE RETURN ADDRESS           */
         ST    R14,RTNLEV2(,PVTPTR)                                0556
*   WORK2=R4;                       /* SAVE ADDR OF QUEUED PCB       */
         ST    R4,WORK2(,R13)                                      0557
*   RESPECIFY                                                      0558
*    (R7,                                                          0558
*     R9) RESTRICTED;               /* THESE WILL BE WORK REGS       */
*   R9=0;                           /* SET ZERO-TCB PCB PTR TO ZERO  */
         SLR   R9,R9                                               0559
*   R7=PCBRLPA;                     /* GET ADDR OF FIRST RELATED     */
         L     R7,PCBRLPA-1(,R4)                                   0560
         LA    R7,0(,R7)                                           0560
*   RESPECIFY                                                      0561
*     PCB BASED(R7);                /* NEW BASE REG FOR PCB          */
*   DO WHILE R7^=0;                 /* EACH RELATED PCB WILL BE    0562
*                                      PROCESSED ONCE                */
         B     @DE00562                                            0562
@DL00562 DS    0H                                                  0563
*     IF PCBRESET='0'B THEN         /* IS PCB FOR A PAGE FAULT       */
         TM    PCBRESET(R7),B'00010000'                            0563
         BNZ   @RF00563                                            0563
*       DO;                                                        0564
*         IF PCBROOT='0'B THEN      /* DOES PCB HAVE A ROOT          */
         TM    PCBROOT(R7),B'00000100'                             0565
         BNZ   @RF00565                                            0565
*           DO;                     /* IF NO NOTIFICATION IS       0566
*                                      REQUIRED, REMOVE PCB FROM   0566
*                                      CHAIN AND FREE                */
*             R4->PCBRLPA=PCBRLPA;                                 0567
         MVC   PCBRLPA(3,R4),PCBRLPA(R7)                           0567
*             R1=R7;                                               0568
         LR    R1,R7                                               0568
*             R0=PCBFREQN;                                         0569
         LA    R0,16                                               0569
*             R2=ASCBRSM;           /* SET PROPER RSMHD ADDR         */
         L     @15,ASCBPTR(,R7)                                    0570
         L     R2,ASCBRSM(,@15)                                    0570
*             CALL IEAVPCB;         /* SEND PCB TO FREE Q            */
         L     @15,PVTPCB(,PVTPTR)                                 0571
         BALR  @14,@15                                             0571
*           END;                                                   0572
*                                                                  0572
*         /***********************************************************/
*         /*                                                         */
*         /* IF THE PCB HAS A ROOT, ALL OF THE FOLLOWING CONDITIONS  */
*         /* ARE MET, THE PCB IS REMOVED FROM THE RELATED CHAIN AND  */
*         /* SAVED UNTIL ALL RELATED PCBS HAVE BEEN PROCESSED. THIS  */
*         /* TYPE OF PCB IS ONE FOR A COMMON AREA PAGE ASKED TO BE   */
*         /* PGFIXED WITH A ZERO TCB ADDRESS. THEY ARE NOT QUIESCED  */
*         /* BY SWAP-OUT, SO THEY ARE PUT ON THE END OF THE RELATED  */
*         /* CHAIN SO THAT ANY OTHER ROUTINES WAITING ON THE FAILING */
*         /* I/O MAY KNOW ABOUT THE FAILURE WITHOUT THE OTHER ADDRESS*/
*         /* SPACE BEING SWAPPED IN                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0573
*         ELSE                                                     0573
*           DO;                                                    0573
         B     @RC00565                                            0573
@RF00565 DS    0H                                                  0574
*             IF PCBSWPS1='0'B&PCBVBN>=PVTLCSA&PCBFXC^=0&PCBRTCBA=0
*               THEN                /* IS IT A ZERO TCB FIX PCB      */
         TM    PCBSWPS1(R7),B'00100000'                            0574
         BNZ   @RF00574                                            0574
         CLC   PCBVBN(2,R7),PVTLCSA(PVTPTR)                        0574
         BL    @RF00574                                            0574
         CLI   PCBFXC(R7),0                                        0574
         BE    @RF00574                                            0574
         L     @15,PCBRPTR-1(,R7)                                  0574
         L     @15,PCBRTCBA-1(,@15)                                0574
         LA    @15,0(,@15)                                         0574
         LTR   @15,@15                                             0574
         BNZ   @RF00574                                            0574
*               DO;                                                0575
*                 R4->PCBRLPA=PCBRLPA;                             0576
         MVC   PCBRLPA(3,R4),PCBRLPA(R7)                           0576
*                 IF R9=0 THEN      /* IS QUEUE EMPTY                */
         SLR   @15,@15                                             0577
         CR    R9,@15                                              0577
         BNE   @RF00577                                            0577
*                   DO;                                            0578
*                     R9=R7;        /* THIS IS FIRST SPECIAL PCB     */
         LR    R9,R7                                               0579
*                     PCBRLPA=0;                                   0580
         STCM  @15,7,PCBRLPA(R7)                                   0580
*                   END;                                           0581
*                 ELSE              /* NOT THE FIRST PCB             */
*                   DO;             /* ANOTHER SPECIAL PCB EXISTS, 0582
*                                      ADD NEW ONE TO RELATED CHAIN  */
         B     @RC00577                                            0582
@RF00577 DS    0H                                                  0583
*                     PCBRLPA=R9->PCBRLPA;                         0583
         MVC   PCBRLPA(3,R7),PCBRLPA(R9)                           0583
*                     R9->PCBRLPA=R7;                              0584
         STCM  R7,7,PCBRLPA(R9)                                    0584
*                   END;                                           0585
*               END;                                               0586
*             ELSE                  /* NOT A SPECIAL PCB             */
*               R4=R7;              /* PCB BEING KEPT, UPDATE BASE 0587
*                                      PCB ADDR TO THIS PCB ADDR     */
         B     @RC00574                                            0587
@RF00574 LR    R4,R7                                               0587
*           END;                                                   0588
*       END;                        /* END RESET = 0 PROCESSING      */
*     ELSE                          /* PCB IS FOR PAGE FAULT         */
*       R4=R7;                      /* PCB BEING KEPT, UPDATE BASE 0590
*                                      PCB ADDR TO THIS PCB ADDR     */
         B     @RC00563                                            0590
@RF00563 LR    R4,R7                                               0590
*     R7=R4->PCBRLPA;               /* GET ADDR OF NEXT PCB ON THE 0591
*                                      RELATED CHAIN                 */
@RC00563 L     R7,PCBRLPA-1(,R4)                                   0591
         LA    R7,0(,R7)                                           0591
*   END;                            /* END DO WHILE                  */
@DE00562 LTR   R7,R7                                               0592
         BNZ   @DL00562                                            0592
*   R4->PCBRLPA=R9;                 /* R4 POINTS TO LAST PCB ON THE
*                                      RELATED CHAIN OR THE QUEUED 0593
*                                      PCB. ADD ANY SPECIAL PCBS TO
*                                      THE RELATED CHAIN.            */
         STCM  R9,7,PCBRLPA(R4)                                    0593
*   R7=R4;                          /* SAVE ADDR OF LAST NORMAL PCB  */
         LR    R7,R4                                               0594
*   RESPECIFY                                                      0595
*    (R7,                                                          0595
*     R9) UNRESTRICTED;             /* WORK REGS NO LONGER NEEDED    */
*   RESPECIFY                                                      0596
*     PCB BASED(R4);                /* R4 IS AGAIN PCB BASE REG      */
*   R4=WORK2;                       /* RESTORE ADDR OF QUEUED PCB    */
         L     R4,WORK2(,R13)                                      0597
*   R14=RTNLEV2;                    /* RESTORE RETURN ADDR           */
         L     R14,RTNLEV2(,PVTPTR)                                0598
*   END ERRLTDPR;                   /* END INTERNAL PROCEDURE        */
@EL00011 DS    0H                                                  0599
@EF00011 DS    0H                                                  0599
@ER00011 BR    @14                                                 0599
*INITSRB:                                                          0600
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Z30GNYC*/
INITSRB  DS    0H                                                  0601
*   RESPECIFY                                                      0601
*    (R1,                                                          0601
*     R0,                                                          0601
*     R11,                                                         0601
*     R12) RESTRICTED;              /*                       @Z30GNYC*/
*/****************************************************************** */
*/*                                                                  */
*/*  SUBROUTINE - INITSRB                                            */
*/*                                                                  */
*/*  FUNCTION - INITIALIZE AND SCHEDULE AN SRB FOR CALLER            */
*/*                                                                  */
*/*  INPUT -    R1: ADDRESS OF THE SRB                               */
*/*             R0: ENTRY POINT OF ROUTINE TO BE SCHEDULE'D          */
*/*             R11: ADDRESS SPACE THE SRB SHOULD BE SCHEDULE'D TO   */
*/*             R12: VALUE FOR SRBPARM                               */
*/*                                                                  */
*/*  OUTPUT -   SRB INITIALIZE AND SCHEDULE'D AS REQUESTED           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0602
*   SRB=SRB&&SRB;                   /* CLEAR SRB                     */
         XC    SRB(44,SRBPTR),SRB(SRBPTR)                          0602
*   SRBASCB=R11;                    /* ADDRESS SPACE SRB IS TO RUN IN
*                                                            @Z30GNYC*/
         ST    R11,SRBASCB(,SRBPTR)                                0603
*   SRBEP=R0;                       /* SRB ENTRY POINT       @Z30GNYC*/
         ST    R0,SRBEP(,SRBPTR)                                   0604
*   SRBPASID=R11->ASCBASID;         /* GET ASID FOR SRB              */
         LH    @15,ASCBASID(,R11)                                  0605
         N     @15,@CF01890                                        0605
         STH   @15,SRBPASID(,SRBPTR)                               0605
*   SRBID='SRB ';                   /* SET ID                        */
         MVC   SRBID(4,SRBPTR),@CC01877                            0606
*   SRBPRIOR=4;                     /* SET PRIORITY                  */
         MVI   SRBPRIOR(SRBPTR),X'04'                              0607
*   SRBPARM=R12;                    /* SET PARM, 0 FOR NO LL REQ, 1
*                                      FOR LL REQ UNCOND             */
         ST    R12,SRBPARM(,SRBPTR)                                0608
*   SRBRMTR=PVTPSRBP;               /* PURGE ROUTINE ENTRY POINT     */
*                                                                  0609
         L     @15,PVTPSRBP(,PVTPTR)                               0609
         ST    @15,SRBRMTR(,SRBPTR)                                0609
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE SRB                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0610
*   GENERATE NODEFS REFS(R1,CVTGSMQ,SRBFLNK) SETS(R0,R15) NOFLOWS; 0610
          SCHEDULE SRB=(1),SCOPE=LOCAL
*   RESPECIFY                                                      0611
*    (R11,                                                         0611
*     R12) UNRESTRICTED;            /*                       @Z30GNYC*/
*   RETURN;                         /* RETURN TO CALLER      @Z30GNYC*/
@EL00012 DS    0H                                                  0612
@EF00012 DS    0H                                                  0612
@ER00012 BR    @14                                                 0612
*   END INITSRB;                    /* END OF SUBROUTINE     @Z30GNYC*/
*   END IEAVPIOP                    /* END THE EXTERNAL PROCEDURE    */
*                                                                  0614
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ILRAIA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAPCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPCBR )                                       */
*/*%INCLUDE SYSLIB  (IHAPFTE )                                       */
*/*%INCLUDE SYSLIB  (IHAPGTE )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHARCA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IHARSMHD)                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAXPTE )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  0614
*       ;                                                          0614
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IEAVPIOP CSECT
         DS    0F
@CF00032 DC    F'10'
@CF01878 DC    F'36'
@CF01725 DC    XL4'00000100'
@CF01890 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVPIOP CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01726 DC    V(IEAVINV)
@CV01757 DC    V(IEAVREP1)
         DS    0D
@CC01877 DC    C'SRB '
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
AIAPTR   EQU   @01
PCBPTR   EQU   @04
PFTEPTR  EQU   @06
PVTPTR   EQU   @03
RCAPTR   EQU   @08
RSMHDPTR EQU   @02
SRBPTR   EQU   @01
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
BASEREG  EQU   @10
R10      EQU   @10
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
AIA      EQU   0
AIAFLG1  EQU   AIA+9
AIAWRITE EQU   AIAFLG1
AIALSQA  EQU   AIAFLG1
AIAFLG2  EQU   AIA+10
AIATERMR EQU   AIAFLG2
AIAPRIER EQU   AIAFLG2
AIAERROR EQU   AIAFLG2
AIABADID EQU   AIAFLG2
AIAFLG3  EQU   AIA+11
AIANXAIA EQU   AIA+12
AIAID    EQU   AIA+16
AIALPID  EQU   AIAID
AIALGID  EQU   AIALPID
AIALSID  EQU   AIALGID
AIASSID  EQU   AIALSID+1
AIARPN   EQU   AIALPID+4
AIALSID2 EQU   AIARPN
AIALPMEP EQU   AIALSID2
AIAGRPSZ EQU   AIA+24
AIALGE   EQU   AIAGRPSZ
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
FRREPTR  EQU   0
PCB      EQU   0
PCBFQP   EQU   PCB
PCBCQN   EQU   PCBFQP
PCBFQPA  EQU   PCBFQP+1
PCBBQP   EQU   PCB+4
PCBBQPA  EQU   PCBBQP
PCBRTP   EQU   PCB+8
PCBFL1   EQU   PCBRTP
PCBSRBMD EQU   PCBFL1
PCBLLHLD EQU   PCBFL1
PCBROOT  EQU   PCBFL1
PCBIOI   EQU   PCBFL1
PCBIOCMP EQU   PCBFL1
PCBRTPA  EQU   PCBRTP+1
PCBRLP   EQU   PCB+12
PCBFXC   EQU   PCBRLP
PCBRLPA  EQU   PCBRLP+1
PCBXPT   EQU   PCB+16
PCBFL2   EQU   PCBXPT
PCBFREAL EQU   PCBFL2
PCBIOERR EQU   PCBFL2
PCBRESET EQU   PCBFL2
PCBSUPRS EQU   PCBFL2
PCBXPTA  EQU   PCBXPT+1
PCBPGT   EQU   PCB+20
PCBFL3   EQU   PCBPGT
PCBSWPOT EQU   PCBFL3
PCBSWPIN EQU   PCBFL3
PCBSWPS1 EQU   PCBFL3
PCBSWPLS EQU   PCBFL3
PCBPGTA  EQU   PCBPGT+1
PCBRBN   EQU   PCB+24
PCBVBN   EQU   PCB+26
PCBBLOCK EQU   PCB+28
PCBSRB   EQU   PCBBLOCK
PCBRB    EQU   PCBSRB
PCBASCB  EQU   PCB+32
PCBR     EQU   0
PCBRTCB  EQU   PCBR
PCBRFLAG EQU   PCBRTCB
PCBRPB   EQU   PCBRFLAG
PCBRFAIL EQU   PCBRFLAG
PCBRTCBA EQU   PCBRTCB+1
PCBRGOTO EQU   PCBR+4
PCBRCNT  EQU   PCBR+16
PCBRWRK1 EQU   PCBR+20
PCBRWRK2 EQU   PCBR+24
PFTE     EQU   0
PFTPGID  EQU   PFTE
PFTQPTRS EQU   PFTE+4
PFTFLAG1 EQU   PFTE+12
PFTPCBSI EQU   PFTFLAG1
PFTFLAG2 EQU   PFTE+13
PFTIRRG  EQU   PFTFLAG2
PGTPTE   EQU   0
PGTRSA   EQU   PGTPTE
PGTBITS  EQU   PGTRSA+1
PGTPVM   EQU   PGTBITS
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTSRBIU EQU   PVTFLAG1
PVTPFTP  EQU   PVT+12
PVTLCSA  EQU   PVT+26
PVTPRCA  EQU   PVT+52
PVTSRBID EQU   PVT+68
PVTPIOCP EQU   PVT+96
PVTPCB   EQU   PVT+104
PVTPFTE  EQU   PVT+108
PVTPRCV  EQU   PVT+156
PVTPSRBP EQU   PVT+188
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
PVTWSA9  EQU   PVTWSAX+592
PVTWSA10 EQU   PVTWSAX+672
PVTSAVE  EQU   PVTWSAX+1328
PVTRSRB  EQU   PVT+1776
RCA      EQU   0
RCAPARM1 EQU   RCA+4
RCACSECT EQU   RCA+9
RCAFLAGS EQU   RCA+10
RCARCRD  EQU   RCA+11
RCANAMES EQU   RCA+12
RCANAME1 EQU   RCANAMES
RCANAME2 EQU   RCANAMES+1
RCAPIOP  EQU   RCANAME2
RCANAME3 EQU   RCANAMES+2
RCANAME4 EQU   RCANAMES+3
RCANAME5 EQU   RCANAMES+4
RCAOPBR  EQU   RCANAME5
RCANAME6 EQU   RCANAMES+5
RCARETAD EQU   RCA+20
ASVT     EQU   0
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
ASVTPTR  EQU   0
RSMHD    EQU   0
RSMFLG1  EQU   RSMHD+12
RSMIOCPU EQU   RSMFLG1
RSMIOCPC EQU   RSMFLG1
RSMCPNU  EQU   RSMFLG1
RSMCPNC  EQU   RSMFLG1
RSMFAIL  EQU   RSMFLG1
RSMQS    EQU   RSMHD+20
RSMLFQ   EQU   RSMQS
RSMLSQA  EQU   RSMQS+4
RSMLIOQ  EQU   RSMQS+8
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBID    EQU   SRB
SRBFLNK  EQU   SRB+4
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBPASID EQU   SRBFLC+2
SRBEP    EQU   SRB+20
SRBRMTR  EQU   SRB+24
SRBPARM  EQU   SRB+28
SRBPRIOR EQU   SRB+37
XPTE     EQU   0
XPTPROT  EQU   XPTE
XPTFLAGS EQU   XPTE+2
XPTFLAG2 EQU   XPTE+3
XPTLPID  EQU   XPTE+4
XPTLGN   EQU   XPTLPID
XPTLPN   EQU   XPTLPID+4
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IEAVPCB  EQU   0
IEAVPFTE EQU   0
ROOTEXIT EQU   0
REGSAVER EQU   0
WORK2    EQU   REGSAVER
FLGATQID EQU   WORK2
FLAGPFTE EQU   FLGATQID
TQID     EQU   FLGATQID+1
FRAMERBN EQU   WORK2+2
NXTAIAAD EQU   REGSAVER+68
CURRTAIA EQU   REGSAVER+72
PGTEND   EQU   0
ASCBPTR  EQU   PCBASCB
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FRRSPTR  EQU   PSACSTK
PCBRPTR  EQU   PCBRTPA
PTEPTR   EQU   PCBPGTA
XPTEPTR  EQU   PCBXPTA
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTGETCL EQU   CVTS01+144
CVTASVT  EQU   CVTS01+208
CVTGSMQ  EQU   CVTS01+264
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RTNLEV1  EQU   PVTWSA9+72
RTNLEV2  EQU   PVTWSA9+76
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
RES2     EQU   REGSAVER+76
SAVER14  EQU   REGSAVER+64
SAVER13  EQU   REGSAVER+60
SAVER12  EQU   REGSAVER+56
SAVER11  EQU   REGSAVER+52
SAVER10  EQU   REGSAVER+48
SAVER9   EQU   REGSAVER+44
SAVER8   EQU   REGSAVER+40
SAVER7   EQU   REGSAVER+36
SAVER6   EQU   REGSAVER+32
SAVER5   EQU   REGSAVER+28
SAVER4   EQU   REGSAVER+24
SAVER3   EQU   REGSAVER+20
SAVER2   EQU   REGSAVER+16
SAVER1   EQU   REGSAVER+12
@NM00051 EQU   REGSAVER+8
@NM00050 EQU   REGSAVER+4
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00049 EQU   CVTFIX+248
@NM00048 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
XPTLSID2 EQU   XPTLPN
XPTLSID  EQU   XPTLGN
@NM00047 EQU   XPTFLAG2
XPTIOERR EQU   XPTFLAG2
XPTPOINP EQU   XPTFLAG2
XPTRES1  EQU   XPTFLAG2
XPTVALID EQU   XPTFLAG2
XPTRSV4  EQU   XPTFLAGS
XPTDEFER EQU   XPTFLAGS
XPTRES2  EQU   XPTFLAGS
XPTVIO   EQU   XPTFLAGS
XPTCKF   EQU   XPTFLAGS
XPTXAV   EQU   XPTFLAGS
XPTVIOLP EQU   XPTFLAGS
XPTRSV1  EQU   XPTE+1
@NM00046 EQU   SRB+40
@NM00045 EQU   SRB+38
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPTCB  EQU   SRBFLC+4
SRBCPAFF EQU   SRBFLC
RSMASMHD EQU   RSMHD+40
RSMFOEQ  EQU   RSMHD+36
RSMLIOQL EQU   RSMLIOQ+4
RSMLIOQF EQU   RSMLIOQ
RSMLSQAL EQU   RSMLSQA+2
RSMLSQAF EQU   RSMLSQA
RSMLFQL  EQU   RSMLFQ+2
RSMLFQF  EQU   RSMLFQ
RSMRSV2  EQU   RSMHD+16
RSMCNTFX EQU   RSMHD+14
RSMRSV1  EQU   RSMHD+13
@NM00044 EQU   RSMFLG1
RSMGFADD EQU   RSMFLG1
RSMGFAD  EQU   RSMFLG1
RSMASCB  EQU   RSMHD+8
RSMSPCT  EQU   RSMHD+4
RSMVSTO  EQU   RSMHD
ASVTEND  EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTMAXU EQU   ASVT+516
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00043 EQU   ASVT
RCARES9  EQU   RCA+19
@NM00042 EQU   RCA+18
RCAPIOI  EQU   RCA+18
RCANAME7 EQU   RCANAMES+6
RCAREP1  EQU   RCANAME6
RCAPSIF  EQU   RCANAME6
RCAPSIX  EQU   RCANAME6
RCAVEQRP EQU   RCANAME6
RCARCFC  EQU   RCANAME6
RCACSGB  EQU   RCANAME6
RCAFXL   EQU   RCANAME6
RCAPS113 EQU   RCANAME6
RCAFREE  EQU   RCANAME5
RCARFR2  EQU   RCANAME5
RCACPBR  EQU   RCANAME5
RCASORT  EQU   RCANAME5
RCASIRT  EQU   RCANAME5
RCARELV  EQU   RCANAME5
RCARELF  EQU   RCANAME5
RCAGFAD  EQU   RCANAME4
RCAVEQRI EQU   RCANAME4
RCAVEQRF EQU   RCANAME4
RCAVEQRC EQU   RCANAME4
RCATERM  EQU   RCANAME4
RCASQA   EQU   RCANAME4
RCASWIN  EQU   RCANAME4
RCASOUT  EQU   RCANAME4
RCARFR   EQU   RCANAME3
RCARELS  EQU   RCANAME3
RCARCFI  EQU   RCANAME3
RCARCF   EQU   RCANAME3
RCAPSII  EQU   RCANAME3
RCAPSIB  EQU   RCANAME3
RCAPS112 EQU   RCANAME3
RCAPIX   EQU   RCANAME3
RCASWPC  EQU   RCANAME2
RCASWPP  EQU   RCANAME2
RCAPFTE  EQU   RCANAME2
RCAPCB   EQU   RCANAME2
RCAOUT   EQU   RCANAME2
RCAITAS  EQU   RCANAME2
RCAIOCP  EQU   RCANAME2
RCAINV   EQU   RCANAME1
RCAGFA   EQU   RCANAME1
RCAFXLD  EQU   RCANAME1
RCAVEQR  EQU   RCANAME1
RCADSEG  EQU   RCANAME1
RCADLAS  EQU   RCANAME1
RCACSEG  EQU   RCANAME1
RCAVAMSI EQU   RCANAME1
@NM00041 EQU   RCAFLAGS
RCAQS    EQU   RCAFLAGS
RCAPSIER EQU   RCAFLAGS
RCAABEND EQU   RCAFLAGS
RCALL    EQU   RCAFLAGS
RCASAL   EQU   RCAFLAGS
RCARES7  EQU   RCA+8
RCAPARM0 EQU   RCA
PVTEND   EQU   PVT+1840
PVTSPARE EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTCIOQL EQU   PVTQS+36
PVTCIOQF EQU   PVTQS+32
PVTGFADL EQU   PVTQS+28
PVTGFADF EQU   PVTQS+24
PVTFPCBL EQU   PVTQS+20
PVTFPCBF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTREP2  EQU   PVT+100
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTREUS  EQU   PVT+48
PVTRESV4 EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
PVTFLAG2 EQU   PVT+1
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTRESV1 EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
PGTPAM   EQU   PGTBITS
@NM00016 EQU   PGTBITS
@NM00015 EQU   PGTBITS
@NM00014 EQU   PGTBITS
@NM00013 EQU   PGTBITS
@NM00012 EQU   PGTBITS
@NM00011 EQU   PGTBITS
PGTREAL  EQU   PGTRSA
PFTUIC   EQU   PFTE+15
PFTQNDX  EQU   PFTE+14
@NM00010 EQU   PFTFLAG2
@NM00009 EQU   PFTFLAG2
PFTPREF  EQU   PFTFLAG2
PFTSTEAL EQU   PFTFLAG2
PFTVR    EQU   PFTFLAG2
PFTOFFLN EQU   PFTFLAG2
PFTDFRLS EQU   PFTFLAG2
PFTOFINT EQU   PFTFLAG1
PFTVRALC EQU   PFTFLAG1
PFTBADPG EQU   PFTFLAG1
PFTLNGFX EQU   PFTFLAG1
PFTLSQA  EQU   PFTFLAG1
PFTVRINT EQU   PFTFLAG1
PFTONAVQ EQU   PFTFLAG1
PFTRSV1  EQU   PFTE+10
PFTFXCT  EQU   PFTE+8
PFTBQPTR EQU   PFTQPTRS+2
PFTFQPTR EQU   PFTQPTRS
PFTVBN   EQU   PFTPGID+2
PFTASID  EQU   PFTPGID
PCBRWRKB EQU   PCBR+60
PCBRWRKA EQU   PCBR+56
PCBRWRK9 EQU   PCBR+52
PCBRWRK8 EQU   PCBR+48
PCBRWRK7 EQU   PCBR+44
PCBRWRK6 EQU   PCBR+40
PCBRWRK5 EQU   PCBR+36
PCBRWRK4 EQU   PCBR+32
PCBRWRK3 EQU   PCBR+28
PCBRRSV1 EQU   PCBR+18
PCBRASCB EQU   PCBR+12
PCBRECB  EQU   PCBR+8
PCBRPOF  EQU   PCBRFLAG
PCBRFECB EQU   PCBRFLAG
PCBRLOAD EQU   PCBRFLAG
PCBRFPCB EQU   PCBRFLAG
PCBRETRY EQU   PCBRFLAG
PCBRINT  EQU   PCBRFLAG
PCBEND   EQU   PCB+64
PCBAIA   EQU   PCB+36
PCBSPCTE EQU   PCBRB
PCBSWPS2 EQU   PCBFL3
@NM00008 EQU   PCBFL3
PCBNOREC EQU   PCBFL3
PCBDFRLS EQU   PCBFL3
@NM00007 EQU   PCBFL2
@NM00006 EQU   PCBFL2
PCBVIO   EQU   PCBFL2
PCBGFAD  EQU   PCBFL2
PCBLFR   EQU   PCBFL1
PCBPEX   EQU   PCBFL1
@NM00005 EQU   PCBFL1
@NM00004 EQU   FRRSFLGS+1
@NM00003 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
AIADPXCT EQU   AIALGE
AIACEPTR EQU   AIALPMEP
AIASLOT  EQU   AIASSID+1
@NM00002 EQU   AIASSID
@NM00001 EQU   AIALSID
AIARCSN  EQU   AIANXAIA+2
AIACYL   EQU   AIANXAIA
AIARSV9  EQU   AIAFLG3
AIARSV8  EQU   AIAFLG3
AIARSV7  EQU   AIAFLG3
AIALPMEC EQU   AIAFLG3
AIARSV6  EQU   AIAFLG3
AIATRPSP EQU   AIAFLG3
AIAPRINO EQU   AIAFLG3
AIARSV5  EQU   AIAFLG3
AIASECER EQU   AIAFLG2
AIARSV4  EQU   AIAFLG2
AIAIORTY EQU   AIAFLG2
AIAFRAUX EQU   AIAFLG2
AIARSV1  EQU   AIAFLG1
AIASWPFX EQU   AIAFLG1
AIAPAGDS EQU   AIAFLG1
AIADUPLX EQU   AIAFLG1
AIAVIO   EQU   AIAFLG1
AIAPRIV  EQU   AIAFLG1
AIAOP    EQU   AIA+8
AIABQPA  EQU   AIA+4
AIAFQPA  EQU   AIA
@NM00040 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00039 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00038 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00037 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00036 EQU   FLCFSA
@NM00035 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00034 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00033 EQU   FLCIOA
@NM00032 EQU   FLCMCLA+15
@NM00031 EQU   FLCMCLA+14
@NM00030 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00029 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00028 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00027 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00026 EQU   FLCPER
@NM00025 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00024 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00023 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00022 EQU   FLCPIILC
@NM00021 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00020 EQU   FLCSVILC
@NM00019 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00018 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00017 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00133 EQU   MOREAIAS
@RT00164 EQU   FREALOFF
@RF00162 EQU   FREEACB
@RT00175 EQU   SCHEDCP
@RT00244 EQU   REMOVE
@RT00256 EQU   REMOVE
@RT00282 EQU   FREEQDD
@RF00309 EQU   CPWORK
@RT00324 EQU   DECFRAME
@RF00322 EQU   AFTERVAL
@RT00332 EQU   AFTERVAL
@RF00334 EQU   CPWORK
@RF00453 EQU   @EL00007
@RT00484 EQU   @EL00010
@RF00491 EQU   @EL00010
@RT00506 EQU   CKLLHLD
@RT00512 EQU   @EL00010
@RT00515 EQU   @EL00010
@RC00565 EQU   @RC00563
@RC00574 EQU   @RC00563
@RC00577 EQU   @RC00574
@ENDDATA EQU   *
         END   IEAVPIOP,(C'PLS1652',0701,76086)
