         TITLE '****IEAVFREE----PAGE FREE ROUTINE****                  *
                        '
IEAVFREE CSECT
         USING *,15
         MODID BR=NO
IEAVFRE2 DS    0H
         ENTRY IEAVFRE2
*   CIWWRK4=FIXBASE;                /* SAVE BASE REG FOR PGFIX       */
         ST    FIXBASE,CIWWRK4(,CIWAPTR)                           0036
*   GENERATE;                                                      0037
        BALR    BASEREG,0
        USING   *,BASEREG
*   CIWRETRN=RRETURN;               /* SAVE RETURN REG               */
         ST    RRETURN,CIWRETRN(,CIWAPTR)                          0038
*   RCAFREE='1'B;                   /* SET CSECT INFO IN RCA         */
         L     @06,RCAPTR(,PVTPTR)                                 0039
         OI    RCAFREE(@06),B'00000001'                            0039
*   RCACSECT=RCACPGFR;                                             0040
         MVI   RCACSECT(@06),X'15'                                 0040
*   CIWCURPG=ZERO;                  /* CLEAR WORK AREAS              */
         SLR   @06,@06                                             0041
         ST    @06,CIWCURPG(,CIWAPTR)                              0041
*   CIWLSTPG=ZERO;                                                 0042
*                                                                  0042
         ST    @06,CIWLSTPG(,CIWAPTR)                              0042
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS LOOP CONTROLS THE PROCESSING OF MULTIPLE VSL ENTRIES     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0043
*VSLLOOP:                                                          0043
*   IF CIWEND1A^>CIWSTRTA THEN      /* CHECK FOR ADDRESS WRAPAROUND  */
VSLLOOP  CLC   CIWEND1A(3,CIWAPTR),CIWSTRTA(CIWAPTR)               0043
         BNH   @RT00043                                            0043
*     GOTO NORC16;                  /* IF PAGFIX IS CALLER AND     0044
*                                      CIWCUVSL= CIWWRK1, NO R.C.16  */
*   XOFFF=ANDMASK;                  /* PUT AND VALUE IN REG          */
         L     XOFFF,@CF01598                                      0045
*   LASTPAGE=CIWEND1-1;             /* GET TOP @ OF LAST PAGE IN   0046
*                                      CURRENT VSL                   */
         L     LASTPAGE,CIWEND1(,CIWAPTR)                          0046
         BCTR  LASTPAGE,0                                          0046
*   LASTPAGE=LASTPAGE&XOFFF;        /* ZERO HIGH ORDER BYTE AND ROUND
*                                      @ TO PAGE BDY                 */
         NR    LASTPAGE,XOFFF                                      0047
*   CIWLSTPG=LASTPAGE;              /* STORE @ LAST PAGE IN CIWA     */
         ST    LASTPAGE,CIWLSTPG(,CIWAPTR)                         0048
*   TESTADDR=CIWSTRTA&XOFFF;        /* START @ IN CURRENT VSL ENTRY,
*                                      ROUNDED TO A PAGE BOUNDARY    */
         L     TESTADDR,CIWSTRTA-1(,CIWAPTR)                       0049
         LA    TESTADDR,0(,TESTADDR)                               0049
         NR    TESTADDR,XOFFF                                      0049
*   CIWCURPG=TESTADDR;                                             0050
         ST    TESTADDR,CIWCURPG(,CIWAPTR)                         0050
*                                                                  0051
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS LOOP PROCESSES ALL THE PAGES ENCOMPASSED BY CURRENT VSL. */
*   /* THEN, FOR LIST REQUESTS, THE VSLLOOP PROVIDES THE NEXT VSL TO */
*   /* BE PROCESSED.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0051
*   DO WHILE(CIWCURPG^>CIWLSTPG);                                  0051
         B     @DE00051                                            0051
@DL00051 DS    0H                                                  0052
*     IF CIWFIXC='1'B THEN          /* IF PGFIX IS CALLER, SPECIAL 0052
*                                      PROCESSING IS NECESSARY       */
         TM    CIWFIXC(CIWAPTR),B'00000010'                        0052
         BNO   @RF00052                                            0052
*       DO;                                                        0053
*                                                                  0053
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK TO SEE IF PGFREE HAS REACHED THE POINT WHERE PGFIX*/
*         /* PROCESSING WAS TERMINATED. IF SO, NO MORE PROCESSING    */
*         /* REQUIRED.                                               */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0054
*         IF CIWCUVSL=CIWWRK1 THEN                                 0054
         CLC   CIWCUVSL(4,CIWAPTR),CIWWRK1(CIWAPTR)                0054
         BNE   @RF00054                                            0054
*           IF CIWWRK2=ZERO×CIWCURPG=CIWWRK2 THEN                  0055
         L     @06,CIWWRK2(,CIWAPTR)                               0055
         LTR   @06,@06                                             0055
         BZ    @RT00055                                            0055
         C     @06,CIWCURPG(,CIWAPTR)                              0055
         BE    @RT00055                                            0055
*             GOTO FRERETRN;        /* GO TO EXIT PROCESSING         */
*         CURPG=CIWCURPG;           /* IF PGFIX TERM PT. HAS NOT BEEN
*                                      REACHED, SEE IF THE PAGE IS IN
*                                      REAL STORAGE                  */
@RF00054 L     CURPG,CIWCURPG(,CIWAPTR)                            0057
*         GENERATE(LRA   RBN,0(CURPG));                            0058
         LRA   RBN,0(CURPG)
*         BC(7,PAGELOOP);           /* IF PAGE NOT IN STORAGE, PGFIX
*                                      HAS PERFORMED NECESSARY     0059
*                                      CLEAN-UP. GET NEXT PAGE       */
         BC    7,PAGELOOP                                          0059
*       END;                                                       0060
*     ELSE                          /* OTHERWISE:                    */
*       DO;                         /* IF PGFIX IS NOT CALLER AND  0061
*                                      PAGE NOT IN STORAGE, GO TO  0061
*                                      PURGE PROCESSING              */
         B     @RC00052                                            0061
@RF00052 DS    0H                                                  0062
*         CURPG=CIWCURPG;                                          0062
         L     CURPG,CIWCURPG(,CIWAPTR)                            0062
*         GENERATE(LRA   RBN,0(CURPG));                            0063
         LRA   RBN,0(CURPG)
*         BC(8,INSTG);                                             0064
         BC    8,INSTG                                             0064
*         BC(2,PAGELOOP);                                          0065
         BC    2,PAGELOOP                                          0065
*         CIWRETC=RC4;              /* IF CURRENT PAGE IN INVALID  0066
*                                      SEGM ENT, TAKE ERROR EXIT     */
         MVI   CIWRETC(CIWAPTR),X'04'                              0066
*         GOTO FREERROR;            /* ERROR PROCESSING              */
         B     FREERROR                                            0067
*       END;                                                       0068
*                                                                  0069
*     /***************************************************************/
*     /*                                                             */
*     /* IN-STORAGE PROCESSING -- IF PAGE IS IN NUCLEUS, SQA, LSQA,  */
*     /* OR V=R ALLOCATED, IT IS NOT PROCESSED. OTHERWISE, PROCESS   */
*     /* THE PAGE.                                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0069
*INSTG:                                                            0069
*     IF VBN^<PVTLPRIV THEN                                        0069
@RC00052 DS    0H                                                  0069
INSTG    CLC   VBN(2,CIWAPTR),PVTLPRIV(PVTPTR)                     0069
         BL    @RF00069                                            0069
*       DO;                         /* IF PAGE IS NOT IN NUCLEUS,    */
*         GENERATE;                                                0071
                    SRL RBN,8
*         PFTEPTR=RBN+PVTPFTP;                                     0072
         LR    PFTEPTR,RBN                                         0072
         AL    PFTEPTR,PVTPFTP(,PVTPTR)                            0072
*         IF PFTLSQA='0'B&PFTVRALC='0'B THEN/* IF NOT IN SQA OR LSQA,*/
         TM    PFTLSQA(PFTEPTR),B'00100010'                        0073
         BNZ   @RF00073                                            0073
*           DO;                                                    0074
*             IF CIWTCB^=ZERO THEN  /* IF INPUT TCB EXISTS,          */
         L     @06,CIWTCB(,CIWAPTR)                                0075
         LTR   @06,@06                                             0075
         BZ    @RF00075                                            0075
*               DO;                 /* FOEDEL IS CALLED TO DECREMENT
*                                      FIX COUNT IN AN FOE           */
*                 PARMREG1=VBN;                                    0077
         SLR   PARMREG1,PARMREG1                                   0077
         ICM   PARMREG1,3,VBN(CIWAPTR)                             0077
*                 CALL FOEDEL;      /* PROCESS FOE'S                 */
         L     @15,@CV01631                                        0078
         BALR  @14,@15                                             0078
*                 IF FOEDELRC^=ZERO THEN/* R.C. = 0?                 */
         LTR   FOEDELRC,FOEDELRC                                   0079
         BNZ   @RT00079                                            0079
*                   GOTO PAGELOOP;  /* GO ON TO NEXT PAGE IF NOT     */
*               END;                                               0081
*             ELSE                  /* ELSE IF INPUT TCB EXISTS      */
*               IF PFTFXCT=0 THEN   /* IF FIX COUNT ALREADY IS 0,  0082
*                                      IGNORE THIS PAGE              */
         B     @RC00075                                            0082
@RF00075 LH    @06,PFTFXCT(,PFTEPTR)                               0082
         LTR   @06,@06                                             0082
         BZ    @RT00082                                            0082
*                 GOTO PAGELOOP;    /* PICK UP NEXT PAGE             */
*             IF CIWFIXC='1'B THEN  /* DECREMENT FIX COUNT IN PFTE 0084
*                                      UNLESS CALLER IS PGFIX,       */
@RC00075 TM    CIWFIXC(CIWAPTR),B'00000010'                        0084
         BNO   @RF00084                                            0084
*               IF PFTVR='1'B THEN  /* PFTE IS V=R,                  */
         TM    PFTVR(PFTEPTR),B'00100000'                          0085
         BNO   @RF00085                                            0085
*                 IF PFTFXCT=0 THEN /* AND FIX COUNT IS ALREADY ZERO */
         LH    @06,PFTFXCT(,PFTEPTR)                               0086
         LTR   @06,@06                                             0086
         BZ    @RT00086                                            0086
*                   GOTO PAGELOOP;  /* IF ABOVE CONDITIONS ARE MET,
*                                      PROCESS NEXT PAGE             */
*DECRFIX:                                                          0088
*             PFTFXCT=PFTFXCT-1;    /* DECR. COUNT                   */
@RF00085 DS    0H                                                  0088
@RF00084 DS    0H                                                  0088
DECRFIX  LH    @06,PFTFXCT(,PFTEPTR)                               0088
         BCTR  @06,0                                               0088
         STH   @06,PFTFXCT(,PFTEPTR)                               0088
*             IF PFTFXCT=0 THEN     /* IF COUNT=0,                   */
         LTR   @06,@06                                             0089
         BNZ   @RF00089                                            0089
*               DO;                                                0090
*                 IF PFTQNDX<PFTLFQN THEN/* TEST TO DETERMINE IF THE
*                                      PFTE IS ON A LOCAL OR GLOBAL Q
*                                                            @YA01572*/
         CLI   PFTQNDX(PFTEPTR),X'80'                              0091
         BNL   @RF00091                                            0091
*                   PVTCOMFX=PVTCOMFX-1;/* GLOBAL DECREMENT PVTCOMFX
*                                                            @YA01572*/
         LH    @06,PVTCOMFX(,PVTPTR)                               0092
         BCTR  @06,0                                               0092
         STH   @06,PVTCOMFX(,PVTPTR)                               0092
*                 ELSE                                             0093
*                   RSMCNTFX=RSMCNTFX-1;/* LOCAL DECREMENT RSMCNTFX
*                                                            @YA01572*/
         B     @RC00091                                            0093
@RF00091 LH    @06,RSMCNTFX(,RSMHDPTR)                             0093
         BCTR  @06,0                                               0093
         STH   @06,RSMCNTFX(,RSMHDPTR)                             0093
*                 PVTCNTFX=PVTCNTFX-1;/* DECREMENT SYSTEM COUNT    0094
*                                                            @YA01572*/
@RC00091 LH    @06,PVTCNTFX(,PVTPTR)                               0094
         BCTR  @06,0                                               0094
         STH   @06,PVTCNTFX(,PVTPTR)                               0094
*                 PFTVRPLT='0'B;    /* RESET V=R POLLUTE FLAG      0095
*                                                            @ZA31128*/
         NI    PFTVRPLT(PFTEPTR),B'11101111'                       0095
*                 IF PFTDFRLS='1'B THEN/* IF DEFERRED RELEASE      0096
*                                      INDICATED, GO TO IEAVRELF     */
         TM    PFTDFRLS(PFTEPTR),B'10000000'                       0096
         BNO   @RF00096                                            0096
*                   DO;                                            0097
*                     PARMREG1=CIWCURPG;/* VIRT UAL @ OF PAGE TO   0098
*                                      RELEASE                       */
         L     PARMREG1,CIWCURPG(,CIWAPTR)                         0098
*                     CALL RELSPROC;/* DO DEFERRED RELEASE           */
         BAL   @14,RELSPROC                                        0099
*                   END;                                           0100
*                 ELSE                                             0101
*                   DO;             /* DEFERRED RELEASE WAS NOT    0101
*                                      INDICATED                     */
         B     @RC00096                                            0101
@RF00096 DS    0H                                                  0102
*                     IF PFTVRINT='1'B×PFTOFINT='1'B THEN/* HAS FRAME
*                                      BEEN INTERCEPTED      @ZA10767*/
         TM    PFTVRINT(PFTEPTR),B'01000001'                       0102
         BZ    @RF00102                                            0102
*                       DO;                                        0103
*                         CIWWRK5=BASEREG;/* SAVE BASE REGISTER    0104
*                                                            @ZA10767*/
         ST    BASEREG,CIWWRK5(,CIWAPTR)                           0104
*                         PARMREG0=0;/* ZERO REGISTER 0      @ZA10767*/
         SLR   PARMREG0,PARMREG0                                   0105
*                         IF PFTASID='FFFF'X THEN                  0106
         CLC   PFTASID(2,PFTEPTR),@CH01650                         0106
         BNE   @RF00106                                            0106
*                           PARMREG1=PVTCFQF;/* SET UP COMMON AREA 0107
*                                      QUEUE INDEX           @ZA10767*/
         LH    PARMREG1,PVTCFQF(,PVTPTR)                           0107
         N     PARMREG1,@CF01677                                   0107
*                         ELSE                                     0108
*                           PARMREG1=RSMLFQF;/* SET UP LOCAL FRAME 0108
*                                      QUEUE INDEX           @ZA10767*/
         B     @RC00106                                            0108
@RF00106 LH    PARMREG1,RSMLFQF(,RSMHDPTR)                         0108
         N     PARMREG1,@CF01677                                   0108
*                         PFTSTEAL='1'B;/* INDICATE FRAME IS ELIGIBLE
*                                      FOR STEAL             @ZA10767*/
@RC00106 OI    PFTSTEAL(PFTEPTR),B'00001000'                       0109
*                         CALL IEAVRFRA;/* HAVE THE STEAL ROUTINE TO
*                                      SEND THE FRAME TO THE AFQ OR
*                                      DO A PAGE-OUT, IF CHANGED   0110
*                                                            @ZA10767*/
         L     @15,@CV01630                                        0110
         BALR  @14,@15                                             0110
*                         CIWAPTR=PVTPCIWA;/* RESTORE CIWAPTR      0111
*                                                            @ZA10767*/
         L     CIWAPTR,PVTPCIWA(,PVTPTR)                           0111
*                         BASEREG=CIWWRK5;/* RESTORE BASE REG      0112
*                                                            @ZA10767*/
         L     BASEREG,CIWWRK5(,CIWAPTR)                           0112
*                       END;                                       0113
*                   END;                                           0114
@RF00102 DS    0H                                                  0115
*               END;                                               0115
@RC00096 DS    0H                                                  0116
*           END;                                                   0116
@RF00089 DS    0H                                                  0117
*       END;                                                       0117
@RF00073 DS    0H                                                  0118
*PAGELOOP:                                                         0118
*     CIWCURPG=CIWCURPG+PAGESZ;     /* GET NEXT PAGE TO BE PROCESSED
*                                      IN CURRENT VSL                */
@RF00069 DS    0H                                                  0118
PAGELOOP L     @06,@CF01600                                        0118
         AL    @06,CIWCURPG(,CIWAPTR)                              0118
         ST    @06,CIWCURPG(,CIWAPTR)                              0118
*   END;                            /* END LOOP OF PAGE PROCESSING   */
@DE00051 CLC   CIWCURPG(4,CIWAPTR),CIWLSTPG(CIWAPTR)               0119
         BNH   @DL00051                                            0119
*                                                                  0120
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THIS IS A LIST REQUEST, GO TO NEXTVSL TO GET THE NEXT VSL  */
*   /* TO BE PROCESSED.                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0120
*   IF CIWINVSL^=ZERO THEN                                         0120
         L     @06,CIWINVSL(,CIWAPTR)                              0120
         LTR   @06,@06                                             0120
         BZ    @RF00120                                            0120
*     DO;                                                          0121
*       CALL NEXTVSL;               /* GET NEXT VSL TO PROCESS       */
         L     @15,@CV01629                                        0122
         BALR  @14,@15                                             0122
*       IF NVSLRC=ZERO THEN         /* IF RETURN CODE = 0            */
         LTR   NVSLRC,NVSLRC                                       0123
         BZ    @RT00123                                            0123
*         GOTO VSLLOOP;             /* PROCESS NEW VSL               */
*       IF NVSLRC^=RC8 THEN         /* IF NEXTVSL FINDS AN INVALID 0125
*                                      VSL,                          */
         C     NVSLRC,@CF00036                                     0125
         BE    @RF00125                                            0125
*NORC16:                                                           0126
*         IF CIWFIXC='0'B×CIWWRK1^=CIWCUVSL THEN/* RETURN CODE OF 16
*                                      TO CALLER (IF CALLER IS     0126
*                                      PAGEFIX AND CIWWRK1=CIWCUVSL
*                                      DON'T RETURN 16 TO PAGEFIX)   */
NORC16   TM    CIWFIXC(CIWAPTR),B'00000010'                        0126
         BZ    @RT00126                                            0126
         CLC   CIWWRK1(4,CIWAPTR),CIWCUVSL(CIWAPTR)                0126
         BE    @RF00126                                            0126
@RT00126 DS    0H                                                  0127
*           DO;                                                    0127
*             CIWRETC=RC16;                                        0128
         MVI   CIWRETC(CIWAPTR),X'10'                              0128
*             GOTO FREERROR;        /* ERROR RETURN PROCESSING       */
         B     FREERROR                                            0129
*           END;                                                   0130
*     END;                                                         0131
@RF00126 DS    0H                                                  0131
@RF00125 DS    0H                                                  0132
*                                                                  0132
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE START OF PURGE PROCESSING THAT IS DONE ONLY IF THE*/
*   /* PGFREE REQUESTOR SPECIFIED A NON-ZERO ECB ADDRESS             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0132
*   IF CIWECB^=0 THEN               /* IF INPUT ECB EXISTS           */
@RF00120 L     @06,CIWECB(,CIWAPTR)                                0132
         LTR   @06,@06                                             0132
         BZ    @RF00132                                            0132
*     IF CIWFIXC='0'B THEN          /* AN PGFIX IS NOT THE CALLER,   */
         TM    CIWFIXC(CIWAPTR),B'00000010'                        0133
         BNZ   @RF00133                                            0133
*       DO;                                                        0134
*         STOPSRCH='0'B;            /* SET STOP SEARCH FLAG OFF      */
         NI    STOPSRCH(CIWAPTR),B'01111111'                       0135
*         PCBPTR=PVTGFADF;          /* 1ST PCB ON GFA DEFER Q        */
         L     PCBPTR,PVTGFADF(,PVTPTR)                            0136
*         QBITS=PCBDEFRN;           /* SET UP QUEUE INDICATOR        */
*                                                                  0137
         MVI   QBITS(CIWAPTR),X'18'                                0137
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS GFA DEFER QUEUE, COMMON AND LOCAL I/O QUEUES TO */
*         /* FIND PCB'S ASSOCIATED WITH THIS PGFREE REQUEST. NOTE:   */
*         /* THE QUEUE SEARCHING METHOD OF THIS MODULE HAS THE       */
*         /* DEPENDENCY THAT ANYONE ZEROING A PCBVBN WITHOUT         */
*         /* VALIDATING THE PAGE ASSOCIATED WITH THE PCB MUST CLEAN  */
*         /* UP PFTE FIX COUNTS AND FOE'S FOR THE PCB IF IT HAS A    */
*         /* NON-ZERO FIX COUNT.                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0138
*PCBLOOP:                                                          0138
*         IF PCBPTR=ZERO THEN       /* IF NO MORE PCBS               */
PCBLOOP  LTR   PCBPTR,PCBPTR                                       0138
         BNZ   @RF00138                                            0138
*           IF QBITS=PCBCIOQN THEN  /* IF CIOQ JUST PROCESSED        */
         CLI   QBITS(CIWAPTR),32                                   0139
         BNE   @RF00139                                            0139
*             DO;                                                  0140
*               PCBPTR=RSMLIOQF;    /* 1ST PCB ON LIOQ               */
         L     PCBPTR,RSMLIOQF(,RSMHDPTR)                          0141
*               QBITS=PCBLIOQN;     /* SET UP Q INDICATOR            */
         MVI   QBITS(CIWAPTR),X'88'                                0142
*               GOTO PCBLOOP;       /* TEST ADDR OF FIRST PCB ON Q   */
         B     PCBLOOP                                             0143
*             END;                                                 0144
*           ELSE                    /* IF CIOQ NOT JUST PROCESSED  0145
*                                      THEN                          */
*             IF QBITS^=PCBLIOQN THEN/* IF GFA Q WAS JUST PROCESSED  */
@RF00139 CLI   QBITS(CIWAPTR),136                                  0145
         BE    @RF00145                                            0145
*               DO;                                                0146
*                 PCBPTR=PVTCIOQF;  /* 1ST PCB ON CIOQ               */
         L     PCBPTR,PVTCIOQF(,PVTPTR)                            0147
*                 QBITS=PCBCIOQN;   /* SET UP Q INDICATOR            */
         MVI   QBITS(CIWAPTR),X'20'                                0148
*                 GOTO PCBLOOP;     /* TEST ADDR OF FIRST PCB ON Q   */
         B     PCBLOOP                                             0149
*               END;                                               0150
*             ELSE                  /* IF NOT GFA QUEUE,             */
*               GOTO FRERETRN;      /* GO TO EXIT PROCESSING         */
*         CURRPCB=PCBPTR;           /* SAVE CURRENT PCB @            */
@RF00138 LR    CURRPCB,PCBPTR                                      0152
*                                                                  0153
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK PCB TO SEE IF PCB IS THE ONE TO PROCESS. SEARCH   */
*         /* INCLUDES ANY AND ALL RELATED PCBS.                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0153
*ASCBTEST:                                                         0153
*         IF PCBASCB=PSAAOLD THEN   /* FOR COMMON AREA PAGES, PCBASCB
*                                      MUST = CURRENT ASCB           */
ASCBTEST CLC   PCBASCB(4,PCBPTR),PSAAOLD                           0153
         BNE   @RF00153                                            0153
*           DO;                                                    0154
*             IF PCBROOT='1'B THEN  /* PCB TO BE PROCESSED MUST HAVE
*                                      A ROOT                        */
         TM    PCBROOT(PCBPTR),B'00000100'                         0155
         BNO   @RF00155                                            0155
*               DO;                                                0156
*                 IF PCBRLOAD='0'B THEN/* PCB ROOT MUST NOT BE FOR A
*                                      PGLOAD REQUEST                */
         L     @06,PCBRPTR-1(,PCBPTR)                              0157
         LA    @06,0(,@06)                                         0157
         TM    PCBRLOAD(@06),B'00000100'                           0157
         BNZ   @RF00157                                            0157
*                   IF PCBRECB=CIWECB THEN/* ECB @ IN ROOT MUST =  0158
*                                      INPUT ECB                     */
         CLC   PCBRECB(4,@06),CIWECB(CIWAPTR)                      0158
         BNE   @RF00158                                            0158
*                     DO;                                          0159
*                                                                  0159
*                       /*********************************************/
*                       /*                                           */
*                       /* IF ALL OF ABOVE TESTS ARE SATISFIED,      */
*                       /* PROCESS THE FOUND PCB                     */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0160
*                       PCBRINT='1'B;/* SET INTERCEPT FLAG IN ROOT TO
*                                      PREVENT POSTING OF ECB        */
*                                                                  0160
         OI    PCBRINT(@06),B'10000000'                            0160
*                       /*********************************************/
*                       /*                                           */
*                       /* CALL FOEDEL FOR FIXED PAGES TO FIND AND   */
*                       /* REMOVE ANY FOE'S                          */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0161
*                       IF PCBVBN^=0 THEN/* IF VBN DOESN'T = 0       */
         LH    @06,PCBVBN(,PCBPTR)                                 0161
         N     @06,@CF01677                                        0161
         LTR   @06,@06                                             0161
         BZ    @RF00161                                            0161
*                         IF CIWTCB^=0 THEN/* AND INPUT TCB NON-ZERO,*/
         L     @06,CIWTCB(,CIWAPTR)                                0162
         LTR   @06,@06                                             0162
         BZ    @RF00162                                            0162
*                           DO;     /* PROCESS ANY FOE'S             */
*                             RFY                                  0164
*                               SVPCBFXC RSTD;                     0164
*                             SVPCBFXC=PCBFXC;                     0165
         SLR   SVPCBFXC,SVPCBFXC                                   0165
         IC    SVPCBFXC,PCBFXC(,PCBPTR)                            0165
*FIXCHCK:                                                          0166
*                             IF PCBFXC^=0 THEN/* IF FIX COUNT ^= 0
*                                      YET                           */
FIXCHCK  CLI   PCBFXC(PCBPTR),0                                    0166
         BE    @RF00166                                            0166
*                               DO;                                0167
*                                 PARMREG1=PCBVBN;                 0168
         LH    PARMREG1,PCBVBN(,PCBPTR)                            0168
         N     PARMREG1,@CF01677                                   0168
*                                 CALL FOEDEL;/* DELETE FOE'S        */
         L     @15,@CV01631                                        0169
         BALR  @14,@15                                             0169
*                                 PCBFXC=PCBFXC-1;/* DECREMENT PCB 0170
*                                      FIX COUNT                     */
         SLR   @06,@06                                             0170
         IC    @06,PCBFXC(,PCBPTR)                                 0170
         BCTR  @06,0                                               0170
         STC   @06,PCBFXC(,PCBPTR)                                 0170
*                                 GOTO FIXCHCK;/* CONTINUE TIL FIXCT
*                                      = 0                           */
         B     FIXCHCK                                             0171
*                               END;                               0172
*                             ELSE                                 0173
*                               ;   /* IF FIX CT=0, DONE             */
@RF00166 DS    0H                                                  0174
*                           END;                                   0174
*                         ELSE                                     0175
*                           ;       /* IF NO INPUT TCB,              */
@RF00162 DS    0H                                                  0176
*                       ELSE                                       0176
*                         ;         /* OR PCBVBN=0, DONE             */
@RF00161 DS    0H                                                  0177
*                                                                  0177
*                       /*********************************************/
*                       /*                                           */
*                       /* PROCESS GFA DEFER QUEUE PCB               */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0177
*                       IF QBITS=PCBDEFRN THEN/* IF GFA DEFER Q BEING
*                                      PROCESSED                     */
         CLI   QBITS(CIWAPTR),24                                   0177
         BNE   @RF00177                                            0177
*                         DO;                                      0178
*                           PCBRCNT=PCBRCNT-1;/* DECREMENT ROOT COUNT*/
         L     @06,PCBRPTR-1(,PCBPTR)                              0179
         LA    @06,0(,@06)                                         0179
         LH    @15,PCBRCNT(,@06)                                   0179
         BCTR  @15,0                                               0179
         STH   @15,PCBRCNT(,@06)                                   0179
*                           IF PCBRCNT^=0 THEN/* IF PCB COUNT D ID 0180
*                                      NOT GO TO 0, RETURN FOUND PCB
*                                      TO FREE Q                     */
         LTR   @15,@15                                             0180
         BZ    @RF00180                                            0180
*                             DO;                                  0181
*DEQPCB:                                                           0182
*                               IF PCBPTR=CURRPCB THEN/* IF FOUNDPCB
*                                      = SAVED PCB, THEN FOUND PCB IS
*                                      A QUEUED PCB                  */
DEQPCB   CR    PCBPTR,CURRPCB                                      0182
         BNE   @RF00182                                            0182
*                                 IF PCBRLPA^=0 THEN/* IF QUEUED PCB
*                                      HAS A RELATED PCB:            */
         L     @06,PCBRLPA-1(,PCBPTR)                              0183
         LA    @06,0(,@06)                                         0183
         LTR   @06,@06                                             0183
         BZ    @RF00183                                            0183
*                                   DO;                            0184
*                                    PCBVBN=0;/* SET VBN OF QUEUED 0185
*                                      PCB TO 0                      */
         SLR   @15,@15                                             0185
         STH   @15,PCBVBN(,PCBPTR)                                 0185
*                                    PCBRLPA->PCBFQP=UNQ;/* SET    0186
*                                      FIELDS IN RELATED PCB FOR PCB
*                                      MANAGER                       */
         MVC   PCBFQP(4,@06),UNQ                                   0186
*                                    PARMREG1=PCBRLPA;             0187
         LR    PARMREG1,@06                                        0187
*                                    PARMREG0=PCBDEFRN;            0188
         LA    PARMREG0,24                                         0188
*                                    CALL IEAVPCB;/* QUEUE RELATED 0189
*                                      PCB TO GFA DEFER Q            */
         L     @15,PVTPCB(,PVTPTR)                                 0189
         BALR  @14,@15                                             0189
*                                   END;                           0190
*                                 ELSE                             0191
*                                   ;/* NO RELATED PCB               */
@RF00183 DS    0H                                                  0192
*                               ELSE/* IF FOUND PCB DOES NOT = QUEUED
*                                      PCB:                          */
*                                 DO;                              0192
         B     @RC00182                                            0192
@RF00182 DS    0H                                                  0193
*                                   RFY                            0193
*                                     SAVEDPCB RSTD;               0193
*                                   SAVEDPCB=CURRPCB;              0194
         LR    SAVEDPCB,CURRPCB                                    0194
*TESTREL:                                                          0195
*                                   IF CURRPCB->PCBRLPA=PCBPTR THEN/*
*                                      IF THIS RELATED PCB IS FOUND
*                                      PCB                           */
TESTREL  L     @06,PCBRLPA-1(,CURRPCB)                             0195
         LA    @06,0(,@06)                                         0195
         CR    PCBPTR,@06                                          0195
         BNE   @RF00195                                            0195
*                                    DO;/* SET UP FOUND PCB AS NOT 0196
*                                      QUEUED                        */
*                                     CURRPCB->PCBRLPA=PCBRLPA;    0197
         MVC   PCBRLPA(3,CURRPCB),PCBRLPA(PCBPTR)                  0197
*                                     PCBFQP=UNQ;                  0198
         MVC   PCBFQP(4,PCBPTR),UNQ                                0198
*                                    END;                          0199
*                                   ELSE/* IF NOT FOUND PCB YET,     */
*                                    DO;                           0200
         B     @RC00195                                            0200
@RF00195 DS    0H                                                  0201
*                                     CURRPCB=CURRPCB->PCBRLPA;    0201
         L     @06,PCBRLPA-1(,CURRPCB)                             0201
         LA    @06,0(,@06)                                         0201
         LR    CURRPCB,@06                                         0201
*                                     GOTO TESTREL;/* KEEP SEARCHING
*                                      RELATED PCBS FOR FOUND PCB    */
         B     TESTREL                                             0202
*                                    END;                          0203
*                                   CURRPCB=SAVEDPCB;              0204
@RC00195 LR    CURRPCB,SAVEDPCB                                    0204
*                                   RFY                            0205
*                                     SAVEDPCB UNRSTD;             0205
*                                 END;                             0206
*                               PARMREG1=PCBPTR;                   0207
@RC00182 LR    PARMREG1,PCBPTR                                     0207
*                               PARMREG0=PCBFREQN;                 0208
         LA    PARMREG0,16                                         0208
*                               PCBPTR=CURRPCB->PCBFQPA;           0209
         L     PCBPTR,PCBFQPA-1(,CURRPCB)                          0209
         LA    PCBPTR,0(,PCBPTR)                                   0209
*                               CALL IEAVPCB;/* GO TO PCB MGR TO SEND
*                                      FOUND PCB TO FREE Q           */
         L     @15,PVTPCB(,PVTPTR)                                 0210
         BALR  @14,@15                                             0210
*                               IF STOPSRCH='0'B THEN/* IF NO      0211
*                                      INDICATION TO STOP,           */
         TM    STOPSRCH(CIWAPTR),B'10000000'                       0211
         BZ    @RT00211                                            0211
*                                 GOTO PCBLOOP;/* REPEAT LOOP        */
*                               GOTO FRERETRN;/* OTHERWISE, RETURN 0213
*                                      PROCESSING                    */
         B     FRERETRN                                            0213
*                             END;                                 0214
*                                                                  0215
*                           /*****************************************/
*                           /*                                       */
*                           /* IF PCB COUNT IN ROOT = 0, FREE THE ECB*/
*                           /* IF NECESSARY AND RETURN ROOT PCB TO   */
*                           /* FREE QUEUE                            */
*                           /*                                       */
*                           /*****************************************/
*                                                                  0215
*                           ELSE                                   0215
*                             DO;   /* IF INPUT ECB EXISTS, IS IN  0215
*                                      STORAGE, IS NOT IN NUCLEUS, 0215
*                                      SQA OR LSQA, IS NOT V=R     0215
*                                      ALLOCATED--- FREE IT          */
@RF00180 DS    0H                                                  0216
*                               STOPSRCH='1'B;                     0216
         OI    STOPSRCH(CIWAPTR),B'10000000'                       0216
*                               IF PCBRFECB='1'B THEN/* FREE THE ECB
*                                      IF 'FREE ECB' FLAG IS ON      */
         L     @06,PCBRPTR-1(,PCBPTR)                              0217
         TM    PCBRFECB(@06),B'00000010'                           0217
         BNO   @RF00217                                            0217
*                                 DO;                              0218
*                                   ECBPTR=CIWECB;                 0219
         L     ECBPTR,CIWECB(,CIWAPTR)                             0219
*                                   GENERATE;                      0220
                        LRA   ECBPTR,0(ECBPTR)
*                                   BC(7,FREEROOT);                0221
         BC    7,FREEROOT                                          0221
*                                   IF ECBVBN^<PVTLPRIV THEN/* ENSURE
*                                      THAT IT IS NOT IN NUCLEUS     */
         CLC   ECBVBN(2,CIWAPTR),PVTLPRIV(PVTPTR)                  0222
         BL    @RF00222                                            0222
*                                    DO;                           0223
*                                     GENERATE;                    0224
                                                 SRL ECBPTR,12
                                                 SLL ECBPTR,4
*                                     PFTEPTR=ECBPTR+PVTPFTP;      0225
         LR    PFTEPTR,ECBPTR                                      0225
         AL    PFTEPTR,PVTPFTP(,PVTPTR)                            0225
*                                     IF PFTLSQA='0'B&PFTVRALC='0'B
*                                      THEN/* ENSURE NOT IN SQA,   0226
*                                      LSQA, OR V=R                  */
         TM    PFTLSQA(PFTEPTR),B'00100010'                        0226
         BNZ   @RF00226                                            0226
*                                      IF PFTFXCT^=0 THEN/* FIX COUNT
*                                      MUST NOT BE 0 ALREADY         */
         SLR   @06,@06                                             0227
         LH    @15,PFTFXCT(,PFTEPTR)                               0227
         CR    @15,@06                                             0227
         BE    @RF00227                                            0227
*                                       DO;                        0228
*                                        PFTFXCT=PFTFXCT-1;/*      0229
*                                      DECREMENT FIX COUNT           */
         BCTR  @15,0                                               0229
         STH   @15,PFTFXCT(,PFTEPTR)                               0229
*                                        IF PFTFXCT=0 THEN/* IF FIX
*                                      COUNT = 0, RESET LONG FIX FLAG*/
         CR    @15,@06                                             0230
         BNE   @RF00230                                            0230
*                                         DO;                      0231
*                                          IF PFTQNDX<PFTLFQN THEN/*
*                                      TEST TO DETERMINE IF PFTE ON
*                                      LOCAL OR GLOBAL Q     @YA01572*/
         CLI   PFTQNDX(PFTEPTR),X'80'                              0232
         BNL   @RF00232                                            0232
*                                           PVTCOMFX=PVTCOMFX-1;/* 0233
*                                      GLOBAL DECREMENT PVTCOMFX   0233
*                                                            @YA01572*/
         LH    @06,PVTCOMFX(,PVTPTR)                               0233
         BCTR  @06,0                                               0233
         STH   @06,PVTCOMFX(,PVTPTR)                               0233
*                                          ELSE                    0234
*                                           RSMCNTFX=RSMCNTFX-1;/* 0234
*                                      LOCAL Q, DECREMENT RSMCNTFX 0234
*                                                            @YA01572*/
         B     @RC00232                                            0234
@RF00232 LH    @06,RSMCNTFX(,RSMHDPTR)                             0234
         BCTR  @06,0                                               0234
         STH   @06,RSMCNTFX(,RSMHDPTR)                             0234
*                                          PVTCNTFX=PVTCNTFX-1;/*  0235
*                                      DECREMENT SYSTEM COUNT      0235
*                                                            @YA01572*/
@RC00232 LH    @15,PVTCNTFX(,PVTPTR)                               0235
         BCTR  @15,0                                               0235
         STH   @15,PVTCNTFX(,PVTPTR)                               0235
*                                          PFTLNGFX='0'B;          0236
         SLR   PFTLNGFX,PFTLNGFX                                   0236
*                                          IF PFTDFRLS='1'B THEN/* IF
*                                      DEFERRED RELEASE INDICATED, 0237
*                                      CALL IEAVRELF                 */
         TM    PFTDFRLS(PFTEPTR),B'10000000'                       0237
         BNO   @RF00237                                            0237
*                                           DO;                    0238
*                                            PARMREG1=CIWECB;/*    0239
*                                      VIRTUAL @ OF PAGE TO RELEASE  */
         L     PARMREG1,CIWECB(,CIWAPTR)                           0239
*                                            CALL RELSPROC;        0240
         BAL   @14,RELSPROC                                        0240
*                                           END;                   0241
*                                         END;                     0242
@RF00237 DS    0H                                                  0243
*                                       END;                       0243
@RF00230 DS    0H                                                  0244
*                                    END;                          0244
@RF00227 DS    0H                                                  0244
@RF00226 DS    0H                                                  0245
*                                 END;                             0245
*                                                                  0245
@RF00222 DS    0H                                                  0246
*                               /*************************************/
*                               /*                                   */
*                               /* CALL IEAVPCB TO RETURN ROOT PCB TO*/
*                               /* FREE QUEUE                        */
*                               /*                                   */
*                               /*************************************/
*                                                                  0246
*FREEROOT:                                                         0246
*                               PCBRPTR->PCBFQP=UNQ;/* MAKE ROOT PCB
*                                      LOOK LIKE A REGULAR PCB       */
@RF00217 DS    0H                                                  0246
FREEROOT L     @06,PCBRPTR-1(,PCBPTR)                              0246
         LA    @06,0(,@06)                                         0246
         MVC   PCBFQP(4,@06),UNQ                                   0246
*                               PARMREG1=PCBRPTR;                  0247
         LR    PARMREG1,@06                                        0247
*                               PARMREG0=PCBFREQN;                 0248
         LA    PARMREG0,16                                         0248
*                               CALL IEAVPCB;/* SEND ROOT PCB TO FREE
*                                      Q                             */
         L     @15,PVTPCB(,PVTPTR)                                 0249
         BALR  @14,@15                                             0249
*                               GOTO DEQPCB;/* DEQUEUE THE PCB       */
         B     DEQPCB                                              0250
*                             END;                                 0251
*                         END;                                     0252
*                                                                  0253
*                       /*********************************************/
*                       /*                                           */
*                       /* PROCESS I/O ACTIVE QUEUE PCB              */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0253
*                       ELSE        /* I/O QUEUE BEING PROCESSED     */
*                         DO;                                      0253
@RF00177 DS    0H                                                  0254
*                           IF PCBVBN^=0 THEN/* IF PCBVBN HASN'T BEEN
*                                      ZEROED                        */
         LH    @06,PCBVBN(,PCBPTR)                                 0254
         N     @06,@CF01677                                        0254
         LTR   @06,@06                                             0254
         BZ    @RF00254                                            0254
*                             DO;                                  0255
*                               PFTEPTR=PCBRBN+PVTPFTP;/* GET      0256
*                                      ASSOCIATED PFTE               */
         LH    PFTEPTR,PCBRBN(,PCBPTR)                             0256
         N     PFTEPTR,@CF01677                                    0256
         AL    PFTEPTR,PVTPFTP(,PVTPTR)                            0256
*                               PFTFXCT=PFTFXCT-SVPCBFXC;/* DECREMENT
*                                      PFTE FIX COUNT                */
         LH    @06,PFTFXCT(,PFTEPTR)                               0257
         SLR   @06,SVPCBFXC                                        0257
         STH   @06,PFTFXCT(,PFTEPTR)                               0257
*                               RFY                                0258
*                                 SVPCBFXC UNRSTD;                 0258
*                               IF PFTFXCT=0 THEN/* IF PFTE FIX CT 0259
*                                      WENT TO 0                     */
         LTR   @06,@06                                             0259
         BNZ   @RF00259                                            0259
*                                 DO;                              0260
*                                   IF PFTQNDX<PFTLFQN THEN/* TEST TO
*                                      DETERMINE IF PFTE ON LOCAL OR
*                                      GLOBAL Q              @YA01572*/
         CLI   PFTQNDX(PFTEPTR),X'80'                              0261
         BNL   @RF00261                                            0261
*                                    PVTCOMFX=PVTCOMFX-1;/* GLOBAL 0262
*                                      DECREMENT PVTCOMFX    @YA01572*/
         LH    @06,PVTCOMFX(,PVTPTR)                               0262
         BCTR  @06,0                                               0262
         STH   @06,PVTCOMFX(,PVTPTR)                               0262
*                                   ELSE                           0263
*                                    RSMCNTFX=RSMCNTFX-1;/* LOCAL Q
*                                      DECREMENT RSMCNTFX    @YA01572*/
         B     @RC00261                                            0263
@RF00261 LH    @06,RSMCNTFX(,RSMHDPTR)                             0263
         BCTR  @06,0                                               0263
         STH   @06,RSMCNTFX(,RSMHDPTR)                             0263
*                                   PVTCNTFX=PVTCNTFX-1;/* DECREMENT
*                                      SYSTEM COUNT          @YA01572*/
@RC00261 LH    @06,PVTCNTFX(,PVTPTR)                               0264
         BCTR  @06,0                                               0264
         STH   @06,PVTCNTFX(,PVTPTR)                               0264
*                                   PFTVRPLT='0'B;/* RESET V=R     0265
*                                      POLLUTE FLAG          @ZA31128*/
         NI    PFTVRPLT(PFTEPTR),B'11101111'                       0265
*                                   IF PFTDFRLS='1'B THEN/* DEFERRED
*                                      RELEASE INDICATED?            */
         TM    PFTDFRLS(PFTEPTR),B'10000000'                       0266
         BNO   @RF00266                                            0266
*                                    DO;                           0267
*                                     PARMREG1=CIWCURPG;           0268
         L     PARMREG1,CIWCURPG(,CIWAPTR)                         0268
*                                     CALL RELSPROC;/* EXECUTE     0269
*                                      DEFERRED RELEASE              */
         BAL   @14,RELSPROC                                        0269
*                                    END;                          0270
*                                 END;                             0271
*                             END;                                 0272
*                           GOTO NEXTPCB;/* GET NEXT PCB             */
         B     NEXTPCB                                             0273
*                         END;                                     0274
*                     END;                                         0275
*               END;                                               0276
*           END;                                                   0277
*         ELSE                                                     0278
*           ;                       /* PCBASCB NOT = CURRENT ASCB    */
@RF00153 DS    0H                                                  0279
*         PCBPTR=PCBRLPA;           /* GET RELATED PCB PTR           */
@RC00153 L     @06,PCBRLPA-1(,PCBPTR)                              0279
         LA    @06,0(,@06)                                         0279
         LR    PCBPTR,@06                                          0279
*         IF PCBPTR^=ZERO THEN      /* DOES RELEATED PCB EXIST       */
         LTR   PCBPTR,PCBPTR                                       0280
         BNZ   @RT00280                                            0280
*           GOTO ASCBTEST;          /* IF SO, GO TEST IT             */
*NEXTPCB:                           /* GET ADDR OF NEXT PCB ON Q     */
*         PCBPTR=CURRPCB->PCBFQPA;                                 0282
NEXTPCB  L     PCBPTR,PCBFQPA-1(,CURRPCB)                          0282
         LA    PCBPTR,0(,PCBPTR)                                   0282
*         GOTO PCBLOOP;             /* GO PROCESS PCB                */
         B     PCBLOOP                                             0283
*       END;                                                       0284
*                                                                  0285
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE EXIT CODE FOR NORMAL OR ERROR EXIT                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0285
*FRERETRN:                                                         0285
*   CIWRETC=RC0;                    /* NORMAL RETURN                 */
@RF00133 DS    0H                                                  0285
@RF00132 DS    0H                                                  0285
FRERETRN MVI   CIWRETC(CIWAPTR),X'00'                              0285
*FREERROR:                                                         0286
*   IF CIWRETC=RC4 THEN             /* IF ERROR RETURN AND           */
FREERROR CLI   CIWRETC(CIWAPTR),4                                  0286
         BNE   @RF00286                                            0286
*     IF CIWINVSL^=ZERO THEN        /* REQUEST NOT REGISTER FORM,    */
         L     @06,CIWINVSL(,CIWAPTR)                              0287
         LTR   @06,@06                                             0287
         BZ    @RF00287                                            0287
*       DO;                                                        0288
*         CIWIERR='1'B;             /* SET ERROR FLAG IN CURRENT VSL
*                                      ENTRY                         */
         OI    CIWIERR(CIWAPTR),B'00010000'                        0289
*         CIWCUVSL->VSL=CIWVSL;     /* STORE PROCESSED VSL OVER    0290
*                                      CALLERS COPY          @ZA26282*/
         L     @06,CIWCUVSL(,CIWAPTR)                              0290
         MVC   VSL(8,@06),CIWVSL(CIWAPTR)                          0290
*       END;                                                       0291
*     ELSE                                                         0292
*       ;                           /* REQUEST IN REG. FORM          */
@RF00287 DS    0H                                                  0293
*   ELSE                                                           0293
*     ;                             /* NON-ERROR RETURN              */
@RF00286 DS    0H                                                  0294
*   RCAFREE='0'B;                   /* RESET FRR FOOTPRINT           */
         L     @06,RCAPTR(,PVTPTR)                                 0294
         NI    RCAFREE(@06),B'11111110'                            0294
*   FIXBASE=CIWWRK4;                /* RESTORE PGFIX BASE            */
         L     FIXBASE,CIWWRK4(,CIWAPTR)                           0295
*   RRETURN=CIWRETRN;               /* RETURN REGISTER               */
         L     RRETURN,CIWRETRN(,CIWAPTR)                          0296
*   GOTO RRETURN;                   /* RETURN TO CALLER              */
         BR    RRETURN                                             0297
*                                                                  0298
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE PROCEDURE TO EXECUTE A DEFERRED RELEASE           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0298
*RELSPROC:                                                         0298
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0298
RELSPROC DS    0H                                                  0299
*   CIWWRK5=RRETURN;                /* SAVE RETURN REGISTER          */
         ST    RRETURN,CIWWRK5(,CIWAPTR)                           0299
*   CALL IEAVRELF;                  /* EXECUTE DEFERRED RELEASE      */
         L     @15,PVTPRELF(,PVTPTR)                               0300
         BALR  @14,@15                                             0300
*   RCACSECT=RCACPGFR;              /* RESET RCA INFORMATION         */
         L     @06,RCAPTR(,PVTPTR)                                 0301
         MVI   RCACSECT(@06),X'15'                                 0301
*   IF RELSRC^=ZERO THEN            /* IF ERROR IN RELEASE,          */
         LTR   RELSRC,RELSRC                                       0302
         BZ    @RF00302                                            0302
*     DO;                           /* RECORD INTERNAL RSM ERROR AND
*                                      CONTINUE                      */
*       RCARCRD='0F'X;                                             0304
         MVI   RCARCRD(@06),X'0F'                                  0304
*       GENERATE(ABEND   X'C0D',,,SYSTEM);                         0305
         ABEND   X'C0D',,,SYSTEM
*     END;                                                         0306
*   RRETURN=CIWWRK5;                /* RESTORE RETURN REGISTER       */
@RF00302 L     RRETURN,CIWWRK5(,CIWAPTR)                           0307
*   END RELSPROC;                                                  0308
@EL00002 DS    0H                                                  0308
@EF00002 DS    0H                                                  0308
@ER00002 BR    @14                                                 0308
*   END IEAVFREE                                                   0309
*                                                                  0309
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHARCA  )                                       */
*/*%INCLUDE SYSLIB  (IHAPCBR )                                       */
*/*%INCLUDE SYSLIB  (IHAPCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPGTE )                                       */
*/*%INCLUDE SYSLIB  (IHAXPTE )                                       */
*/*%INCLUDE SYSLIB  (IHAPFTE )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IEACIWA )                                       */
*/*%INCLUDE SYSLIB  (IHARSMHD)                                       */
*/*%INCLUDE SYSLIB  (IHAVSL  )                                       */
*/*%INCLUDE SYSLIB  (FREEMAIN)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  0309
*       ;                                                          0309
@DATA    DS    0H
@CH01650 DC    XL2'FFFF'
@DATD    DSECT
         DS    0F
IEAVFREE CSECT
         DS    0F
@CF00036 DC    F'8'
@CF01600 DC    F'4096'
@CF01598 DC    XL4'00FFF000'
@CF01677 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEAVFREE CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01629 DC    V(NEXTVSL)
@CV01630 DC    V(IEAVRFRA)
@CV01631 DC    V(FOEDEL)
         DS    0D
UNQ      DS    CL4
         ORG   UNQ
@NM00055 DC    X'FF'
@NM00056 DC    AL3(0)
         ORG   UNQ+4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PFTLNGFX EQU   @06
PCBPTR   EQU   @05
PTEPTR   EQU   @08
XPTEPTR  EQU   @12
PFTEPTR  EQU   @08
PVTPTR   EQU   @03
CIWAPTR  EQU   @04
RSMHDPTR EQU   @02
VSLPTR   EQU   @09
PARMREG0 EQU   @00
SVPCBFXC EQU   @00
XOFFF    EQU   @00
SAVEDPCB EQU   @01
PARMREG1 EQU   @01
LASTPAGE EQU   @07
TESTADDR EQU   @07
CURPG    EQU   @07
RBN      EQU   @07
ECBPTR   EQU   @07
FIXBASE  EQU   @09
BASEREG  EQU   @09
RCAADD   EQU   @10
LEN      EQU   @11
CURRPCB  EQU   @12
RRETURN  EQU   @14
NVSLRC   EQU   @15
FOEDELRC EQU   @15
RELSRC   EQU   @15
CIWASAV  EQU   @13
FINDPGRC EQU   @15
PSAREG   EQU   @07
REG6     EQU   @06
RGFAQ    EQU   @07
RIOACT   EQU   @08
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
RCA      EQU   0
RCANAME7 EQU   RCA+8
RCACSECT EQU   RCA+9
RCAFLAGS EQU   RCA+10
RCARCRD  EQU   RCA+11
RCANAMES EQU   RCA+12
RCANAME1 EQU   RCANAMES
RCANAME2 EQU   RCANAMES+1
RCANAME3 EQU   RCANAMES+2
RCANAME4 EQU   RCANAMES+3
RCANAME5 EQU   RCANAMES+4
RCAFREE  EQU   RCANAME5
RCANAME6 EQU   RCANAMES+5
PCBR     EQU   0
PCBRTCB  EQU   PCBR
PCBRFLAG EQU   PCBRTCB
PCBRINT  EQU   PCBRFLAG
PCBRLOAD EQU   PCBRFLAG
PCBRFECB EQU   PCBRFLAG
PCBRECB  EQU   PCBR+8
PCBRCNT  EQU   PCBR+16
PCB      EQU   0
PCBFQP   EQU   PCB
PCBFQPA  EQU   PCBFQP+1
PCBBQP   EQU   PCB+4
PCBRTP   EQU   PCB+8
PCBFL1   EQU   PCBRTP
PCBROOT  EQU   PCBFL1
PCBRTPA  EQU   PCBRTP+1
PCBRLP   EQU   PCB+12
PCBFXC   EQU   PCBRLP
PCBRLPA  EQU   PCBRLP+1
PCBXPT   EQU   PCB+16
PCBFL2   EQU   PCBXPT
PCBPGT   EQU   PCB+20
PCBFL3   EQU   PCBPGT
PCBRBN   EQU   PCB+24
PCBVBN   EQU   PCB+26
PCBBLOCK EQU   PCB+28
PCBSRB   EQU   PCBBLOCK
PCBRB    EQU   PCBSRB
PCBASCB  EQU   PCB+32
PGTPTE   EQU   0
PGTRSA   EQU   PGTPTE
PGTBITS  EQU   PGTRSA+1
XPTE     EQU   0
XPTFLAGS EQU   XPTE+2
XPTFLAG2 EQU   XPTE+3
XPTLPID  EQU   XPTE+4
XPTLGN   EQU   XPTLPID
XPTLPN   EQU   XPTLPID+4
PFTE     EQU   0
PFTPGID  EQU   PFTE
PFTASID  EQU   PFTPGID
PFTQPTRS EQU   PFTE+4
PFTFXCT  EQU   PFTE+8
PFTFLAGS EQU   PFTE+12
PFTFLAG1 EQU   PFTFLAGS
PFTVRINT EQU   PFTFLAG1
PFTLSQA  EQU   PFTFLAG1
PFTVRPLT EQU   PFTFLAG1
PFTVRALC EQU   PFTFLAG1
PFTOFINT EQU   PFTFLAG1
PFTFLAG2 EQU   PFTFLAGS+1
PFTDFRLS EQU   PFTFLAG2
PFTVR    EQU   PFTFLAG2
PFTSTEAL EQU   PFTFLAG2
PFTQNDX  EQU   PFTE+14
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTFLAG2 EQU   PVT+1
PVTPFTP  EQU   PVT+12
PVTLPRIV EQU   PVT+24
PVTPRCA  EQU   PVT+52
PVTPCIWA EQU   PVT+64
PVTPCB   EQU   PVT+104
PVTPFP2  EQU   PVT+116
PVTPRELF EQU   PVT+216
PVTQS    EQU   PVT+304
PVTCFQF  EQU   PVTQS+8
PVTWSAX  EQU   PVT+344
PVTCNTFX EQU   PVT+1830
PVTCOMFX EQU   PVT+1834
PVTPCBQS EQU   PVT+1852
PVTGFADF EQU   PVTPCBQS+24
PVTCIOQF EQU   PVTPCBQS+32
CIWA     EQU   0
CIWFLG1  EQU   CIWA
CIWFIXC  EQU   CIWFLG1
CIWOPFL1 EQU   CIWA+2
CIWOPFL2 EQU   CIWA+3
CIWRETC  EQU   CIWA+4
CIWINVSL EQU   CIWA+8
CIWCUVSL EQU   CIWA+12
CIWVSL   EQU   CIWA+16
CIWSTRT  EQU   CIWVSL
CIWIFLG1 EQU   CIWSTRT
CIWSTRTA EQU   CIWSTRT+1
CIWEND1  EQU   CIWVSL+4
CIWIFLG2 EQU   CIWEND1
CIWIERR  EQU   CIWIFLG2
CIWEND1A EQU   CIWEND1+1
CIWTCB   EQU   CIWA+24
CIWECB   EQU   CIWA+28
CIWCURPG EQU   CIWA+32
CIWLSTPG EQU   CIWA+36
CIWRETRN EQU   CIWA+40
CIWWRK1  EQU   CIWA+44
CIWWRK2  EQU   CIWA+48
CIWWRK4  EQU   CIWA+56
CIWWRK5  EQU   CIWA+60
RSMHD    EQU   0
RSMFLG1  EQU   RSMHD+12
RSMCNTFX EQU   RSMHD+14
RSMQS    EQU   RSMHD+20
RSMLFQ   EQU   RSMQS
RSMLFQF  EQU   RSMLFQ
RSMLSQA  EQU   RSMQS+4
RSMLIOQ  EQU   RSMQS+8
RSMLIOQF EQU   RSMLIOQ
VSL      EQU   0
VSLSTRT  EQU   VSL
VSLFLAG1 EQU   VSLSTRT
VSLEND   EQU   VSL+4
VSLFLAG2 EQU   VSLEND
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IEAVPCB  EQU   0
IEAVRELF EQU   0
IEAVPFP2 EQU   0
PGTEND   EQU   0
PSARSVTE EQU   PSARSVT
RCAPTR   EQU   PVTPRCA
PCBRPTR  EQU   PCBRTPA
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
VBNS     EQU   CIWCURPG
VBN      EQU   VBNS+1
EVBN     EQU   CIWECB
ECBVBN   EQU   EVBN+1
WORKAREA EQU   CIWWRK4
QBITS    EQU   WORKAREA
FREEFLGS EQU   WORKAREA+1
STOPSRCH EQU   FREEFLGS
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
H        EQU   EVBN+3
F        EQU   EVBN
D        EQU   VBNS+3
C        EQU   VBNS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00054 EQU   CVTFIX+248
@NM00053 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
VSLEND1A EQU   VSLEND+1
VSLEXTRS EQU   VSLFLAG2
VSLKEPRL EQU   VSLFLAG2
VSLPGOUT EQU   VSLFLAG2
VSLRSV3  EQU   VSLFLAG2
VSLERR   EQU   VSLFLAG2
VSLRAO   EQU   VSLFLAG2
VSLNULL  EQU   VSLFLAG2
VSLAST   EQU   VSLFLAG2
VSLSTRTA EQU   VSLSTRT+1
VSLRSV2  EQU   VSLFLAG1
VSLONG   EQU   VSLFLAG1
VSLRSV1  EQU   VSLFLAG1
VSLRLS   EQU   VSLFLAG1
VSLOAD   EQU   VSLFLAG1
VSLFREE  EQU   VSLFLAG1
VSLFIX   EQU   VSLFLAG1
VSLCONT  EQU   VSLFLAG1
RSMASMHD EQU   RSMHD+40
RSMFOEQ  EQU   RSMHD+36
RSMLIOQL EQU   RSMLIOQ+4
RSMLSQAL EQU   RSMLSQA+2
RSMLSQAF EQU   RSMLSQA
RSMLFQL  EQU   RSMLFQ+2
RSMRSV2  EQU   RSMHD+16
RSMRSV1  EQU   RSMHD+13
@NM00052 EQU   RSMFLG1
RSMFAIL  EQU   RSMFLG1
RSMGFADD EQU   RSMFLG1
RSMCPNC  EQU   RSMFLG1
RSMCPNU  EQU   RSMFLG1
RSMGFAD  EQU   RSMFLG1
RSMIOCPC EQU   RSMFLG1
RSMIOCPU EQU   RSMFLG1
RSMASCB  EQU   RSMHD+8
RSMSPCT  EQU   RSMHD+4
RSMVSTO  EQU   RSMHD
CIWWRK3  EQU   CIWA+52
@NM00051 EQU   CIWIFLG2
CIWIKPRL EQU   CIWIFLG2
CIWIOUT  EQU   CIWIFLG2
@NM00050 EQU   CIWIFLG2
CIWIRAO  EQU   CIWIFLG2
CIWINULL EQU   CIWIFLG2
CIWILAST EQU   CIWIFLG2
@NM00049 EQU   CIWIFLG1
CIWILONG EQU   CIWIFLG1
@NM00048 EQU   CIWIFLG1
CIWIRLS  EQU   CIWIFLG1
CIWILOAD EQU   CIWIFLG1
CIWIFREE EQU   CIWIFLG1
CIWIFIX  EQU   CIWIFLG1
CIWICONT EQU   CIWIFLG1
@NM00047 EQU   CIWA+7
CIWKEY   EQU   CIWA+6
CIWSAVRC EQU   CIWA+5
CIWEXTRS EQU   CIWOPFL2
CIWKEPRL EQU   CIWOPFL2
CIWPGOUT EQU   CIWOPFL2
@NM00046 EQU   CIWOPFL2
CIWERR   EQU   CIWOPFL2
CIWRAO   EQU   CIWOPFL2
CIWNULL  EQU   CIWOPFL2
CIWLAST  EQU   CIWOPFL2
@NM00045 EQU   CIWOPFL1
CIWLONG  EQU   CIWOPFL1
@NM00044 EQU   CIWOPFL1
CIWRLS   EQU   CIWOPFL1
CIWLOAD  EQU   CIWOPFL1
CIWFREE  EQU   CIWOPFL1
CIWFIX   EQU   CIWOPFL1
CIWCONT  EQU   CIWOPFL1
CIWFLG2  EQU   CIWA+1
CIWNOPST EQU   CIWFLG1
CIWOUTKR EQU   CIWFLG1
CIWBRIN  EQU   CIWFLG1
CIWBREX  EQU   CIWFLG1
@NM00043 EQU   CIWFLG1
CIWSVC3  EQU   CIWFLG1
CIWSVC2  EQU   CIWFLG1
PVTEND   EQU   PVT+1944
PVTTASID EQU   PVT+1942
PVTXXXXX EQU   PVT+1940
PVTMVCLC EQU   PVT+1936
PVTVCONS EQU   PVT+1896
PVTPRSB  EQU   PVT+1892
PVTCIOQL EQU   PVTPCBQS+36
PVTGFADL EQU   PVTPCBQS+28
PVTFPCBL EQU   PVTPCBQS+20
PVTFPCBF EQU   PVTPCBQS+16
PVTPCBQR EQU   PVTPCBQS
PVTLPAFX EQU   PVT+1850
PVTLSQAF EQU   PVT+1848
PVTLPAR  EQU   PVT+1844
PVTLPAI  EQU   PVT+1840
PVTLPAFC EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTSQAFX EQU   PVT+1832
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTPFTQR EQU   PVTQS+20
PVTRSBQL EQU   PVTQS+18
PVTRSBQF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTREUS  EQU   PVT+48
PVTSQNPC EQU   PVT+47
PVTSQVRC EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
@NM00042 EQU   PVTFLAG2
PVTRSMGM EQU   PVTFLAG2
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTAPREF EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
PFTUIC   EQU   PFTE+15
@NM00041 EQU   PFTFLAG2
@NM00040 EQU   PFTFLAG2
PFTPREF  EQU   PFTFLAG2
PFTIRRG  EQU   PFTFLAG2
PFTOFFLN EQU   PFTFLAG2
PFTBADPG EQU   PFTFLAG1
PFTPCBSI EQU   PFTFLAG1
PFTONAVQ EQU   PFTFLAG1
PFTRSV1  EQU   PFTE+10
PFTBQPTR EQU   PFTQPTRS+2
PFTFQPTR EQU   PFTQPTRS
PFTVBN   EQU   PFTPGID+2
XPTLSID2 EQU   XPTLPN
XPTLSID  EQU   XPTLGN
@NM00039 EQU   XPTFLAG2
XPTIOERR EQU   XPTFLAG2
XPTPOINP EQU   XPTFLAG2
XPTRES1  EQU   XPTFLAG2
XPTVALID EQU   XPTFLAG2
XPTRSV4  EQU   XPTFLAGS
XPTDEFER EQU   XPTFLAGS
XPTRES2  EQU   XPTFLAGS
XPTVIO   EQU   XPTFLAGS
@NM00038 EQU   XPTFLAGS
XPTCKF   EQU   XPTFLAGS
XPTXAV   EQU   XPTFLAGS
XPTVIOLP EQU   XPTFLAGS
XPTRSV1  EQU   XPTE+1
XPTPROT  EQU   XPTE
PGTPAM   EQU   PGTBITS
@NM00037 EQU   PGTBITS
@NM00036 EQU   PGTBITS
PGTPVM   EQU   PGTBITS
@NM00035 EQU   PGTBITS
@NM00034 EQU   PGTBITS
@NM00033 EQU   PGTBITS
@NM00032 EQU   PGTBITS
PGTREAL  EQU   PGTRSA
PCBEND   EQU   PCB+64
PCBAIA   EQU   PCB+36
PCBSPCTE EQU   PCBRB
PCBPGTA  EQU   PCBPGT+1
PCBSWPS2 EQU   PCBFL3
@NM00031 EQU   PCBFL3
PCBNOREC EQU   PCBFL3
PCBDFRLS EQU   PCBFL3
PCBSWPLS EQU   PCBFL3
PCBSWPS1 EQU   PCBFL3
PCBSWPIN EQU   PCBFL3
PCBSWPOT EQU   PCBFL3
PCBXPTA  EQU   PCBXPT+1
@NM00030 EQU   PCBFL2
@NM00029 EQU   PCBFL2
PCBVIO   EQU   PCBFL2
PCBSUPRS EQU   PCBFL2
PCBRESET EQU   PCBFL2
PCBIOERR EQU   PCBFL2
PCBGFAD  EQU   PCBFL2
PCBFREAL EQU   PCBFL2
PCBIOCMP EQU   PCBFL1
PCBIOI   EQU   PCBFL1
PCBLFR   EQU   PCBFL1
PCBLLHLD EQU   PCBFL1
PCBSRBMD EQU   PCBFL1
PCBPEX   EQU   PCBFL1
@NM00028 EQU   PCBFL1
PCBBQPA  EQU   PCBBQP
PCBCQN   EQU   PCBFQP
PCBRWRKB EQU   PCBR+60
PCBRWRKA EQU   PCBR+56
PCBRWRK9 EQU   PCBR+52
PCBRWRK8 EQU   PCBR+48
PCBRWRK7 EQU   PCBR+44
PCBRWRK6 EQU   PCBR+40
PCBRWRK5 EQU   PCBR+36
PCBRWRK4 EQU   PCBR+32
PCBRWRK3 EQU   PCBR+28
PCBRWRK2 EQU   PCBR+24
PCBRWRK1 EQU   PCBR+20
PCBRRSV1 EQU   PCBR+18
PCBRASCB EQU   PCBR+12
PCBRGOTO EQU   PCBR+4
PCBRTCBA EQU   PCBRTCB+1
PCBRPOF  EQU   PCBRFLAG
PCBRFAIL EQU   PCBRFLAG
PCBRFPCB EQU   PCBRFLAG
PCBRPB   EQU   PCBRFLAG
PCBRETRY EQU   PCBRFLAG
RCARETAD EQU   RCA+20
RCATASID EQU   RCA+18
RCAREP1  EQU   RCANAME6
RCAPSIF  EQU   RCANAME6
RCAPSIX  EQU   RCANAME6
RCAVEQRP EQU   RCANAME6
RCARCFC  EQU   RCANAME6
RCACSGB  EQU   RCANAME6
RCAFXL   EQU   RCANAME6
RCAPS113 EQU   RCANAME6
RCARFR2  EQU   RCANAME5
RCACPBR  EQU   RCANAME5
RCAOPBR  EQU   RCANAME5
RCASORT  EQU   RCANAME5
RCASIRT  EQU   RCANAME5
RCARELV  EQU   RCANAME5
RCARELF  EQU   RCANAME5
RCAGFAD  EQU   RCANAME4
RCAVEQRI EQU   RCANAME4
RCAVEQRF EQU   RCANAME4
RCAVEQRC EQU   RCANAME4
RCATERM  EQU   RCANAME4
RCASQA   EQU   RCANAME4
RCASWIN  EQU   RCANAME4
RCASOUT  EQU   RCANAME4
RCARFR   EQU   RCANAME3
RCARELS  EQU   RCANAME3
RCARCFI  EQU   RCANAME3
RCARCF   EQU   RCANAME3
RCAPSII  EQU   RCANAME3
RCAPSIB  EQU   RCANAME3
RCAPS112 EQU   RCANAME3
RCAPIX   EQU   RCANAME3
RCAPIOP  EQU   RCANAME2
RCASWPC  EQU   RCANAME2
RCASWPP  EQU   RCANAME2
RCAPFTE  EQU   RCANAME2
RCAPCB   EQU   RCANAME2
RCAOUT   EQU   RCANAME2
RCAITAS  EQU   RCANAME2
RCAIOCP  EQU   RCANAME2
RCAINV   EQU   RCANAME1
RCAGFA   EQU   RCANAME1
RCAFXLD  EQU   RCANAME1
RCAVEQR  EQU   RCANAME1
RCADSEG  EQU   RCANAME1
RCADLAS  EQU   RCANAME1
RCACSEG  EQU   RCANAME1
RCAVAMSI EQU   RCANAME1
@NM00027 EQU   RCAFLAGS
RCADISP  EQU   RCAFLAGS
@NM00026 EQU   RCAFLAGS
RCAQS    EQU   RCAFLAGS
RCAPSIER EQU   RCAFLAGS
RCAABEND EQU   RCAFLAGS
RCALL    EQU   RCAFLAGS
RCASAL   EQU   RCAFLAGS
@NM00025 EQU   RCANAME7
RCAPRSS  EQU   RCANAME7
RCAPRSR  EQU   RCANAME7
RCAPRSB  EQU   RCANAME7
RCAPSIY  EQU   RCANAME7
RCAPIOI  EQU   RCANAME7
RCAPARM1 EQU   RCA+4
RCAPARM0 EQU   RCA
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00043 EQU   NORC16
@RT00055 EQU   FRERETRN
@RT00079 EQU   PAGELOOP
@RT00082 EQU   PAGELOOP
@RT00086 EQU   PAGELOOP
@RT00123 EQU   VSLLOOP
@RF00145 EQU   FRERETRN
@RT00211 EQU   PCBLOOP
@RF00254 EQU   NEXTPCB
@RF00259 EQU   NEXTPCB
@RF00266 EQU   NEXTPCB
@RF00155 EQU   @RC00153
@RF00158 EQU   @RC00153
@RF00157 EQU   @RC00153
@RT00280 EQU   ASCBTEST
@ENDDATA EQU   *
         END   IEAVFREE,(C'PLS1235',0701,78164)
