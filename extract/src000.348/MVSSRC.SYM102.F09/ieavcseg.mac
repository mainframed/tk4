         TITLE 'IEAVCSEG: CREATE SEGMENT                               *
                        '
IEAVCSEG CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IEAVCSEG  76.087'                                 0001
IEAVCSE2 DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00078-IEAVCSE2)
         ENTRY IEAVCSE2
IEAVCSGB DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00087-IEAVCSGB)
         ENTRY IEAVCSGB
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
*                                                                  0078
*/********************************************************************/
*/* THIS ENTRY POINT (IEAVCSEG) IS TO BE USED BY CALLERS OF CREATE   */
*/* WHO ARE EXTERNAL TO REAL STORAGE MANAGEMENT. FIRST THE RSM       */
*/* INTERNAL REGISTER CONVENTIONS ARE ESTABLISHED, AN THE RSM        */
*/* FUNCTIONAL RECOVERY ROUTINE IS ESTABLISHED. NEXT THE RECOVERY    */
*/* COMMUNICATIONS AREA IS INITIALIZED FOR THIS MODULE. THE ADDRESS  */
*/* OF THE RCA CANNOT BE PLACED IN THE PVT BECAUSE CREATE DOES NOT   */
*/* HOLD THE SALLOC LOCK.                                            */
*/********************************************************************/
*                                                                  0078
*IEAVCSE2:                                                         0078
*   ENTRY;                                                         0078
@EP00078 DS    0H                                                  0079
*   PVTPTR=CVTPVTP;                 /* GET ADDRESS OF PVT            */
         L     @12,CVTPTR                                          0079
         L     PVTPTR,CVTPVTP(,@12)                                0079
*   RSMHDPTR=PSAAOLD->ASCBRSM;      /* GET RSMHEADER ADDRESS         */
         L     @12,PSAAOLD                                         0080
         L     RSMHDPTR,ASCBRSM(,@12)                              0080
*   RESPECIFY                                                      0081
*    (R4,                                                          0081
*     R5) RESTRICTED;                                              0081
*                                                                  0081
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE FRR                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0082
*GETFRR:                                                           0082
*   GENERATE NODEFS REFS(R3,R13,PVTPRCV,PSACSTK,FRRSCURR,FRRSLAST, 0082
*       FRRSELEN,FRRSENTR,FRRSFRRA,FRRSPARM) SETS(CHAINBK,R4,R5)   0082
*       NOFLOWS;                                                   0082
GETFRR   DS    0H                                                  0082
    SETFRR A,FRRAD=PVTPRCV(R3),PARMAD=CHAINBK(,R13),WRKREGS=(R4,R5),  xx
               RELATED=(RSM,IEAVCSEG(FREEFRR))
*   RESPECIFY                                                      0083
*    (R4,                                                          0083
*     R5) UNRESTRICTED;                                            0083
*   RCACSEG='1'B;                   /* SET CSEG ENTERED FLAG         */
         L     @12,RCAPTR(,R13)                                    0084
         OI    RCACSEG(@12),B'01000000'                            0084
*   ENTCSEG='1'B;                   /* SET HOW ENTERED FLAG          */
         OI    ENTCSEG(R13),B'00100000'                            0085
*   GO TO CKGMAREA;                 /* GO CHECK REQUEST              */
*                                                                  0086
         B     CKGMAREA                                            0086
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ENTRY POINT (IEAVCSGB) IS TO BE USED BY CALLERS OF CREATE*/
*   /* WHO ARE INTERNAL TO REAL STORAGE MANAGEMENT. THE RSM          */
*   /* FUNCTIONAL RECOVERY ROUTINE HAS ALREADY BEEN ESTABLISHED, SO  */
*   /* CREATE NEED ONLY SET ITS CSECT ID AND MODULE ENTERED BIT IN   */
*   /* THE RECOVERY COMMUNICATIONS AREA.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0087
*IEAVCSGB:                                                         0087
*   ENTRY;                                                         0087
@EP00087 DS    0H                                                  0088
*   CHAINBK=PVTPRCA;                /* PUT ADDRESS OF RCA WHERE    0088
*                                      CREATE EXPECTS TO FIND IT     */
         MVC   CHAINBK(4,R13),PVTPRCA(PVTPTR)                      0088
*   RCACSGB='1'B;                   /* SET CSGB ENTERED BIT          */
         L     @12,RCAPTR(,R13)                                    0089
         OI    RCACSGB(@12),B'00100000'                            0089
*   ENTCSEG='0'B;                   /* SET HOW ENTERED FLAG          */
         NI    ENTCSEG(R13),B'11011111'                            0090
*                                                                  0091
*/********************************************************************/
*/* ALL PARAMATERS OF THE REQUEST ARE CHECKED FOR VALIDITY PRIOR TO  */
*/* ALTERING ANY CONTROL BLOCKS. IF THE GETMAINED AREA PASSED AS AN  */
*/* INPUT PARAMETER IS NOT ON A DOUBLE WORD BOUNDARY, OR IF THE      */
*/* NUMBER OF SEGMENTS TO BE CREATED IS NULL, THEN RETURN IS MADE    */
*/* TO THE CALLER WITH A RETURN CODE OF 4. IF A SEGMENT TO           */
*/* BE CREATED HAS ALREADY BEEN CREATED (IS ALREADY VALID) A         */
*/* RETURN CODE OF 8 IS RETURNED TO THE CALLER. IT IS THEN           */
*/* DETERMINED IF SPCT PROCESSING IS REQUIRED. SPCT PROCESSING WILL  */
*/* NOT BE DONE IF XPT PROCESSING IS NOT REQUESTED. SPCT PROCESSING  */
*/* WILL BE DONE FOR PRIVATE AREA SEGMENTS OF SWAPPABLE ADDRESS      */
*/* SPACES                                                           */
*/********************************************************************/
*                                                                  0091
*CKGMAREA:                                                         0091
*   RCACSECT=RCACREAT;              /* SET CSECT ID                  */
CKGMAREA L     @12,RCAPTR(,R13)                                    0091
         MVI   RCACSECT(@12),X'0A'                                 0091
*   IF DWBBITS^='000'B THEN                                        0092
         TM    DWBBITS(R13),B'00000111'                            0092
         BNZ   @RT00092                                            0092
*     GO TO RETURN4;                /* GETMAINED AREA FOR PAGE TABLE
*                                      MUST BE ON A DOUBLE WORD    0093
*                                      BOUNDARY                      */
*   IF NSEGS=0 THEN                 /* TEST IF NULL CREATE           */
         CLI   NSEGS(R13),0                                        0094
         BE    @RT00094                                            0094
*     GO TO RETURN4;                /* GIVE RETURN CODE OF 4 AND   0095
*                                      PREPARE TO RETURN TO CALLER   */
*   IF(FIRSTSEG+NSEGS)>256 THEN     /* IS LAST SEGMENT TO BE CREATED
*                                      BEYOND END OF SEG TABLE       */
         SLR   @12,@12                                             0096
         IC    @12,FIRSTSEG(,R13)                                  0096
         SLR   @08,@08                                             0096
         IC    @08,NSEGS(,R13)                                     0096
         ALR   @08,@12                                             0096
         CH    @08,@CH01633                                        0096
         BH    @RT00096                                            0096
*     GO TO RETURN4;                /* GIVE RETURN CODE OF 4 AND   0097
*                                      PREAPRE TO RETURN TO CALLER   */
*                                                                  0097
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE VALIDITY BIT OF EACH SEGMENT TABLE ENTRY OF EACH    */
*   /* SEGMENT TO BE CREATED. IF A SEGMENT TO BE CREATED IS VALID, DO*/
*   /* NOT CREATE ANY SEGMENTS BUT RETURN TO THE CALLER WITH A RETURN*/
*   /* CODE OF 8 AND THE VALID SEGMENT SEGID IN REGISTER 0.          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0098
*   RESPECIFY                                                      0098
*    (STEPTR,                                                      0098
*     R6) RESTRICTED;                                              0098
*   SEGID=FIRSTSEG;                 /* SEGMENT ID OF SEGMENT BEING 0099
*                                      TESTED FOR VALIDITY           */
         STC   @12,SEGID(,R13)                                     0099
*   R6=RSMVSTO+LENGTH(SGTSTE)*(FIRSTSEG+NSEGS-1);/* TO VALUE FOR DO
*                                      LOOP                          */
         L     @10,RSMVSTO(,RSMHDPTR)                              0100
         BCTR  @08,0                                               0100
         SLA   @08,2                                               0100
         ALR   @08,@10                                             0100
         LR    R6,@08                                              0100
*   DO STEPTR=RSMVSTO+LENGTH(SGTSTE)*FIRSTSEG BY LENGTH(SGTSTE) TO R6;
         SLA   @12,2                                               0101
         ALR   @10,@12                                             0101
         LR    STEPTR,@10                                          0101
         B     @DE00101                                            0101
@DL00101 DS    0H                                                  0102
*     IF SGTPAM='0'B THEN           /* CHECK VALIDY BIT              */
         TM    SGTPAM(STEPTR),B'00000001'                          0102
         BNZ   @RF00102                                            0102
*       DO;                         /* SEGMENT IS VALID              */
*         INPUTR0=SEGID;            /* SEGID OF VALID SEGMENT        */
         SLR   @12,@12                                             0104
         IC    @12,SEGID(,R13)                                     0104
         ST    @12,INPUTR0(,R13)                                   0104
*RTN8:                                                             0105
*         OUTPUT15=8;               /* SET A RETURN CODE OF 8        */
RTN8     MVC   OUTPUT15(4,R13),@CF00035                            0105
*         GO TO FREEFRR;            /* DELETE FRR & RETURN TO CALLER */
         B     FREEFRR                                             0106
*       END;                                                       0107
*     ELSE                          /* SEGMENT IS NOT VALID          */
*       SEGID=SEGID+1;              /* INCREMENT SEGID IN STEP WITH
*                                      SEGMENT POINTER               */
@RF00102 LA    @12,1                                               0108
         SLR   @10,@10                                             0108
         IC    @10,SEGID(,R13)                                     0108
         ALR   @12,@10                                             0108
         STC   @12,SEGID(,R13)                                     0108
*   END;                                                           0109
         AH    STEPTR,@CH00043                                     0109
@DE00101 CR    STEPTR,R6                                           0109
         BNH   @DL00101                                            0109
*   RESPECIFY                                                      0110
*    (STEPTR,                                                      0110
*     R6) UNRESTRICTED;                                            0110
*                                                                  0110
*   /*****************************************************************/
*   /*                                                               */
*   /* IF BYPASS XPT OPTION REQUESTED SPCT PROCESSING WILL NOT BE    */
*   /* DONE. THEREFORE ONLY SGTE'S AND PAGE TABLES WILL BE CREATED.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0111
*   DOSPCT='0'B;                    /* INITIALIZE FLAG INDICATING  0111
*                                      SPCT PROCESSING IS NOT TO BE
*                                      DONE                          */
         NI    DOSPCT(R13),B'10111111'                             0111
*   IF PASSXPT='1'B THEN            /* TEST BY-PASS XPT OPTION       */
         TM    PASSXPT(R13),B'01000000'                            0112
         BO    @RT00112                                            0112
*     GO TO INITPGT;                /* GO INITIALIZE PAGE TABLES, NO
*                                      SPCT PROCESSING IS TO BE DONE */
*                                                                  0113
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SPCT ADDRESS IS ZERO, THE ADDRESS SPACE IS NOT SWAPABLE AND*/
*   /* SPCT PROCESSING CAN BE SKIPED. IF THE SPCT ADDRESS IS NOT ZERO*/
*   /* AND THE SEGMENT IS NOT VALID IT IS ASSUMED TO BE A PRIVATE    */
*   /* AREA SEGMENT FOR WHICH AN ENTRY IS TO BE MADE IN THE SPCT.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0114
*CKRSMHD:                                                          0114
*   IF RSMSPCT=0 THEN               /* PREPARE TO INITIALIZE       0114
*                                      SGTE,PGT,ETC                  */
CKRSMHD  L     @12,RSMSPCT(,RSMHDPTR)                              0114
         LTR   @12,@12                                             0114
         BZ    @RT00114                                            0114
*     GO TO INITPGT;                /* BRANCH TO INITIALIZATION    0115
*                                      PROCESS                       */
*                                                                  0116
*/********************************************************************/
*/* PRIVATE AREA SEGMENTS ARE TO BE CREATED FOR A SWAPABLE ADDRESS   */
*/* SPACE. THE VSA OF EACH PAGE TABLE CREATED IS TO BE STORED ALONG  */
*/* WITH THE SEGMENT ID IN THE SPCT.  FIRST IT IS DETERMINED IF      */
*/* THERE IS ENOUGH SPACE IN THE SPCT FOR THESE ENTRIES.  IF NOT,    */
*/* A LARGER SPCT IS ACQUIRED AND ALL THE OLD SPCT IS MOVED TO THE   */
*/* NEW SPCT AND THE OLD SPCT IS FREEDED. TO GET A LARGER SPCT       */
*/* GETMAIN MUST BE CALLED. TO CALL GETMAIN THE SALLOC LOCK MUST BE  */
*/* HELD.                                                            */
*/********************************************************************/
*                                                                  0116
*   DOSPCT='1'B;                    /* SET FLAG TO INDICATE SPCT   0116
*                                      PROCESSING IS TO BE DONE      */
         OI    DOSPCT(R13),B'01000000'                             0116
*   IF SPCTNSEG>=(SPCTSSEG+NSEGS) THEN/* IS THERE ENOUGH SPACE IN THE
*                                      SPCT FOR THE SEGMENT ENTRIES
*                                      TO BE CREATED                 */
         SLR   @08,@08                                             0117
         IC    @08,SPCTSSEG(,@12)                                  0117
         SLR   @15,@15                                             0117
         IC    @15,NSEGS(,R13)                                     0117
         ALR   @08,@15                                             0117
         SLR   @15,@15                                             0117
         IC    @15,SPCTNSEG(,@12)                                  0117
         CR    @08,@15                                             0117
         BNH   @RT00117                                            0117
*     GO TO INITPGT;                /* SPACE OK                      */
*                                                                  0118
*   /*****************************************************************/
*   /*                                                               */
*   /* REQUEST SALLOC LOCK SO YOU CAN CALL GETMAIN AT GLBRANCH ENTRY */
*   /* POINT                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0119
*   LOCKHELD='0'B;                  /* INITIALIZE LOCK HELD FLAG     */
         NI    LOCKHELD(R13),B'01111111'                           0119
*   RESPECIFY                                                      0120
*    (R10,                                                         0120
*     R11,                                                         0120
*     R12,                                                         0120
*     R14) RESTRICTED;                                             0120
*   R10=R13;                        /* SAVE R13 VALUE OVER SETLOCK   */
*                                                                  0121
         LR    R10,R13                                             0121
*   /*****************************************************************/
*   /*                                                               */
*   /* SETLOCK ROUTINE, OBTAIN SALLOC LOCK                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0122
*GETLOCK:                                                          0122
*   GENERATE NODEFS REFS(PSALITA,FLC) SETS(R11,R12,R13,R14) NOFLOWS;
GETLOCK  DS    0H                                                  0122
    SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,                           **
               RELATED=(RES,IEAVCSEG(FREELOK1),IEAVCSEG(FREELOK2))
*   RESPECIFY                                                      0123
*    (R11,                                                         0123
*     R12,                                                         0123
*     R14) UNRESTRICTED;                                           0123
*   IF R13^=0 THEN                  /* IF RETURN CODE IS NOT ZERO  0124
*                                      ASSUME IT IS 4 AND LOCK IS  0124
*                                      HELD BY MY CPU AND WAS      0124
*                                      OBTAINED BY MY CALLER         */
         LTR   R13,R13                                             0124
         BZ    @RF00124                                            0124
*     DO;                                                          0125
*       R13=R10;                    /* RESTORE R13                   */
         LR    R13,R10                                             0126
*       GO TO CALCSIZE;             /* LOCK IS HELD BY MY CPU,     0127
*                                      THEREFORE GETMAIN CAN BE    0127
*                                      CALLED                        */
         B     CALCSIZE                                            0127
*     END;                                                         0128
*   R13=R10;                        /* RESOTRE R13                   */
@RF00124 LR    R13,R10                                             0129
*   RESPECIFY                                                      0130
*    (R10) UNRESTRICTED;                                           0130
*   RCASAL='1'B;                    /* SET SALLOC HELD IND IN RCA    */
         L     @12,RCAPTR(,R13)                                    0131
         OI    RCASAL(@12),B'10000000'                             0131
*   LOCKHELD='1'B;                  /* SET LOCK HELD FLAG SO LOCK  0132
*                                      WILL BE FREEDED LATER         */
         OI    LOCKHELD(R13),B'10000000'                           0132
*                                                                  0133
*/********************************************************************/
*/* CALCULATE SIZE OF SPCT NEEDED TO HOLD ALL OF THE OLD SPCT PLUS   */
*/* THE SEGMENT ENTRIES FOR THE SEGMENTS ABOUT TO BE CREATED.        */
*/* THE SPCT IS EXPANDED IN INCREMENTS OF NUMEXTEN SEGMENT ENTRIES   */
*/* CALCULATE THE NUMBER OF BYTES NEEDED AND CALL GETMAIN. IF        */
*/* GETMAIN FAILS, NO SEGMENTS CAN BE CREATED. THE SALLOC LOCK       */
*/* MUST BE FREEDED BY CREATE IF CREATE ACQUIRED IT.                 */
*/********************************************************************/
*                                                                  0133
*   RESPECIFY                                                      0133
*    (R0,                                                          0133
*     R1,                                                          0133
*     R4,                                                          0133
*     R5,                                                          0133
*     R6,                                                          0133
*     NEXPAND,                                                     0133
*     R14,                                                         0133
*     R15) RESTRICTED;                                             0133
*CALCSIZE:                                                         0134
*   NEXPAND=(NSEGS-1-(SPCTNSEG-SPCTSSEG))/NUMEXTEN+1;/* CALCULATE  0134
*                                      NUMBER OF FIXED SIZE ADDITIONS
*                                      NEEDED                        */
CALCSIZE SLR   @10,@10                                             0134
         IC    @10,NSEGS(,R13)                                     0134
         BCTR  @10,0                                               0134
         L     @12,RSMSPCT(,RSMHDPTR)                              0134
         SLR   NEXPAND,NEXPAND                                     0134
         IC    NEXPAND,SPCTNSEG(,@12)                              0134
         SLR   @08,@08                                             0134
         IC    @08,SPCTSSEG(,@12)                                  0134
         SLR   NEXPAND,@08                                         0134
         SLR   @10,NEXPAND                                         0134
         SRDA  @10,32                                              0134
         D     @10,@CF00126                                        0134
         AH    @11,@CH00066                                        0134
         LR    NEXPAND,@11                                         0134
*   R0=SPCTSIZE+(NEXPAND*NUMEXTEN*LENGTH(SPCTSEGE));/* GET SIZE OF 0135
*                                      NEW SPCT IN BYTES FOR GETMAIN */
         LR    R0,NEXPAND                                          0135
         MH    R0,@CH00122                                         0135
         AH    R0,SPCTSIZE(,@12)                                   0135
*   R1=0;                           /* ADDRESS OF GETMAINED AREA IS
*                                      RETURNED IN R1                */
         SLR   R1,R1                                               0136
*   R5=R3;                          /* SAVE R3 OVER GETMAIN          */
         LR    R5,R3                                               0137
*   R6=R0;                          /* SAVE R0 OVER GETMAIN          */
*                                                                  0138
         LR    R6,R0                                               0138
*   /*****************************************************************/
*   /*                                                               */
*   /* GET SQA FOR A NEW SPCT. THE RECOVERY COMMUNICATIONS AREA      */
*   /* ADDRESS MUST BE SAVED BY CREATE BECAUSE IT IS POSSIBLE GETMAIN*/
*   /* MAY CALL LSQA ALLOCATION WHO WILL SETFRR AND WIPE OUT THE     */
*   /* ADDRESS IN PVTPRCA.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*GETM:                                                             0139
*   GENERATE NODEFS REFS(CVTPTR,CVTSPSA,CVTMAP,CVTGLMN,WSAGGMFM,WSAG,R0
*       ) SETS(R1,R3,R4,R14,R15) NOFLOWS;                          0139
GETM     DS    0H                                                  0139
   GETMAIN RC,LV=(0),SP=245,BRANCH=(YES,GLOBAL),KEY=0
*   R3=R5;                          /* RESTORE R3                    */
         LR    R3,R5                                               0140
*   R0=R6;                          /* RESTORE R6                    */
         LR    R0,R6                                               0141
*   RESPECIFY                                                      0142
*    (R0,                                                          0142
*     R4,                                                          0142
*     R5,                                                          0142
*     R6,                                                          0142
*     R14) UNRESTRICTED;                                           0142
*   IF R15=0                        /* WAS GETMAIN SUCCESSFUL        */
*     THEN                          /* PREPARE TO MOVE OLD SPCT      */
         LTR   R15,R15                                             0143
         BZ    @RT00143                                            0143
*     GO TO MOVESPCT;               /* GO MOVE SPCT                  */
*                                                                  0144
*   /*****************************************************************/
*   /*                                                               */
*   /* RECORD ERROR THAT GETMAIN FAILED NO SEGMENTS WILL BE CREATED. */
*   /* GIVE CALLER CODE OF 4.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*   RCARCRD='05'X;                  /* RECORD GETMAIN FAILURE        */
         L     @14,RCAPTR(,R13)                                    0145
         MVI   RCARCRD(@14),X'05'                                  0145
*   GENERATE NODEFS REFS(R1) SETS(R1) NOFLOWS;                     0146
    ABEND X'C0D',,,SYSTEM
*   RESPECIFY                                                      0147
*    (R1,                                                          0147
*     R15) UNRESTRICTED;                                           0147
*                                                                  0147
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN WAS NOT SUCCESSFUL, CANNOT OBTAIN LAGER SPCT SO CANNOT*/
*   /* HONOR CREATE SEGMENT REQUEST. IF THE SALLOC LOCK WAS ACQUIRED */
*   /* TO CALL GETMAIN IT MUST BE RELEASED PRIOR TO RETURN           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*   IF LOCKHELD='0'B THEN                                          0148
         TM    LOCKHELD(R13),B'10000000'                           0148
         BZ    @RT00148                                            0148
*     GO TO RETURN4;                /* GO GIVE RETURN CODE OF 4      */
*   RESPECIFY                                                      0150
*    (R10,                                                         0150
*     R11,                                                         0150
*     R12,                                                         0150
*     R14) RESTRICTED;                                             0150
*   R10=R13;                        /* SAVE R13 IN R10 OVER SETLOCK  */
*                                                                  0151
         LR    R10,R13                                             0151
*   /*****************************************************************/
*   /*                                                               */
*   /* SETLOCK ROUTINE -- SALLOC RELEASE                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0152
*FREELOK1:                                                         0152
*   GENERATE NODEFS REFS(PSALITA,FLC) SETS(R11,R12,R13,R14) NOFLOWS;
FREELOK1 DS    0H                                                  0152
  SETLOCK RELEASE,TYPE=SALLOC,RELATED=(RESOURCE,IEAVCSEG(GETLOCK))
*   RESPECIFY                                                      0153
*    (R11,                                                         0153
*     R12,                                                         0153
*     R14) UNRESTRICTED;                                           0153
*   IF R13^=0 THEN                  /* TEST SETLOCK'S RETURN CODE    */
         LTR   R13,R13                                             0154
         BZ    @RF00154                                            0154
*     DO;                                                          0155
*       R13=R10;                    /* RESTORE R13 VALUE             */
         LR    R13,R10                                             0156
*       RCARCRD='06'X;              /* RECORD ERROR, AN ATTEMPT WAS
*                                      MADE TO RELEASE A LOCK WHICH
*                                      WAS NOT HELD                  */
*                                                                  0157
         L     @12,RCAPTR(,R13)                                    0157
         MVI   RCARCRD(@12),X'06'                                  0157
*       /*************************************************************/
*       /*                                                           */
*       /* RECORD ERROR THAT LOCK WAS NOT RELEASED SUCCESSFULLY. NO  */
*       /* SEGMENTS WILL BE CREATED. GIVE CALLER A RETURN CODE OF 4. */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0158
*       GENERATE NODEFS REFS(R1) SETS(R1) NOFLOWS;                 0158
            ABEND X'C0D',,,SYSTEM
*       GO TO RETURN4;              /* GIVE CALLER RETURN CODE OF 4  */
         B     RETURN4                                             0159
*     END;                                                         0160
*   R13=R10;                        /* RESTORE R13                   */
@RF00154 LR    R13,R10                                             0161
*   RESPECIFY                                                      0162
*    (R10) UNRESTRICTED;                                           0162
*   RCASAL='0'B;                    /* REMOVE INDICATION OF HOLDING
*                                      SALLOC LOCK                   */
*                                                                  0163
         L     @12,RCAPTR(,R13)                                    0163
         NI    RCASAL(@12),B'01111111'                             0163
*   /*****************************************************************/
*   /*                                                               */
*   /* CAN NOT CONTINUE, NOTIFY CALLER REQUEST NOT SATISFIED         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0164
*RETURN4:                                                          0164
*   OUTPUT15=4;                     /* SET RETURN CODE TO 4          */
RETURN4  MVC   OUTPUT15(4,R13),@CF00043                            0164
*   GO TO FREEFRR;                  /* PREPARE TO DELETE FRR, RETURN */
         B     FREEFRR                                             0165
*                                                                  0166
*/********************************************************************/
*/* GETMAIN WAS SUCCESSFUL, MOVE OLD SPCT TO NEW SPCT                */
*/* AND FREEMAIN OLD SPCT. AFTER FREEMAIN THE SALLOC LOCK MUST BE    */
*/* RELEASED BY CREATE IF CREATE ACQUIRED IT.                        */
*/********************************************************************/
*                                                                  0166
*   RESPECIFY                                                      0166
*    (R0,                                                          0166
*     SPCTPTR1,                                                    0166
*     R4) RESTRICTED;               /* R1 CONTAINS ADD OF AREA FOR 0166
*                                      NEW SPCT                      */
*MOVESPCT:                                                         0167
*   R4=RSMSPCT;                     /* SET POINTER FOR OLD SPCT      */
MOVESPCT L     R4,RSMSPCT(,RSMHDPTR)                               0167
*   RSMSPCT=SPCTPTR1;               /* RSMHEADER NOW POINTS TO THE 0168
*                                      NEW SPCT                      */
         ST    SPCTPTR1,RSMSPCT(,RSMHDPTR)                         0168
*   SPCTPTR1->SPCT=R4->SPCT;        /* MOVE NON VARIABLE PORTION OF
*                                      SPCT FROM OLD SPCT TO NEW SPCT*/
         MVC   SPCT(72,SPCTPTR1),SPCT(R4)                          0169
*   SPCTPTR1->SPCTSIZE=R0;          /* SET SIZE OF NEW SPCT INTO NEW
*                                      SPCT                          */
         STH   R0,SPCTSIZE(,SPCTPTR1)                              0170
*   SPCTPTR1->SPCTNSEG=R4->SPCTNSEG+(NEXPAND*NUMEXTEN);/* UPDATE   0171
*                                      NUMBER OF ALLOWABLE SEGMENT 0171
*                                      ENTRIES                       */
         LR    @12,NEXPAND                                         0171
         SLA   @12,4                                               0171
         SLR   @08,@08                                             0171
         IC    @08,SPCTNSEG(,R4)                                   0171
         ALR   @12,@08                                             0171
         STC   @12,SPCTNSEG(,SPCTPTR1)                             0171
*   RESPECIFY                                                      0172
*    (NEXPAND) UNRESTRICTED;                                       0172
*                                                                  0172
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE SEGMENT ENTRIES TO THE NEW SPCT                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*   R0=R4;                          /* SAVE ADD OF OLD SPCT          */
         LR    R0,R4                                               0173
*   RESPECIFY                                                      0174
*    (R5,                                                          0174
*     R6,                                                          0174
*     R7) RESTRICTED;               /* REGISTERS FOR MVCL            */
*   R5=(R4->SPCTSSEG)*LENGTH(SPCTSEGE);/* GET LENGTH OF FIELD TO BE
*                                      MOVED                         */
         SLR   R5,R5                                               0175
         IC    R5,SPCTSSEG(,R4)                                    0175
         MH    R5,@CH00084                                         0175
*   R7=R5;                          /* COPY LENGTH, NO PADDING       */
         LR    R7,R5                                               0176
*   R4=ADDR(R4->SPCTSEGS);          /* SET PTR TO BEGINNING OF     0177
*                                      SEGMENT ENTRIES               */
         LA    @12,SPCTSEGS(,R4)                                   0177
         LR    R4,@12                                              0177
*   R6=ADDR(SPCTPTR1->SPCTSEGS);    /* WHERE SEG ENTRIES GO          */
         LA    R6,SPCTSEGS(,SPCTPTR1)                              0178
*MOVESEG:                                                          0179
*   GEN(MVCL  R6,R4);               /* MOVE SEG ENTRIES TO NEW SPCT  */
MOVESEG  MVCL  R6,R4
*   RESPECIFY                                                      0180
*    (SPCTPTR1,                                                    0180
*     R6,                                                          0180
*     R7) UNRESTRICTED;                                            0180
*                                                                  0180
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE OLD SPCT. NOTE, PVTPRCA COULD BE CHANGED AS A RESULT OF  */
*   /* THIS CALL TO FREEMAIN AS FREEMAIN COULD CALL PAGE RELEASE.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0181
*   RESPECIFY                                                      0181
*    (R1,                                                          0181
*     R14,                                                         0181
*     R15) RESTRICTED;                                             0181
*FREESPCT:                                                         0182
*   R1=R0;                          /* ADDRESS OF OLD SPCT           */
FREESPCT LR    R1,R0                                               0182
*   R0=R1->SPCTSIZE;                /* LENGTH TO BE FREEDED          */
         LH    R0,SPCTSIZE(,R1)                                    0183
*   R5=R3;                          /* SAVE R3 OVER FREEMAIN         */
         LR    R5,R3                                               0184
*   GENERATE NODEFS REFS(CVTPTR,CVTSPSA,CVTMAP,CVTGLMN,WSAGGMFM,WSAG,R0
*       ,R1) SETS(R3,R4,R14,R15) NOFLOWS;                          0185
    FREEMAIN RC,LV=(0),A=(1),SP=245,BRANCH=(YES,GLOBAL)
*   R3=R5;                          /* RESTORE R3                    */
         LR    R3,R5                                               0186
*   RESPECIFY                                                      0187
*    (R0,                                                          0187
*     R1,                                                          0187
*     R4,                                                          0187
*     R5,                                                          0187
*     R14) UNRESTRICTED;                                           0187
*   IF R15=0 THEN                   /* WAS FREEMAIN SUCCESSFUL       */
         LTR   R15,R15                                             0188
         BZ    @RT00188                                            0188
*     GO TO CKLOCK;                 /* PREPARE TO TEST SALLOC LOCK 0189
*                                      HELD                          */
*   ELSE                            /* FREEMAIN NOT SUCCESSFUL       */
*     RCARCRD='03'X;                /* RECORD FREEMAIN FAILURE       */
*                                                                  0190
         L     @14,RCAPTR(,R13)                                    0190
         MVI   RCARCRD(@14),X'03'                                  0190
*   /*****************************************************************/
*   /*                                                               */
*   /* FREEMAIN OF OLD SPCT (SQA IN SP 245) FAILED. RECORD ERROR.    */
*   /* SEGMENTS WILL STILL BE CREATED AS PER CALLERS REQUEST. NO     */
*   /* INDICATION OF THIS PROBLEM IS GIVEN TO THE CALLER OF CREATE.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0191
*   GENERATE NODEFS REFS(R1) SETS(R1) NOFLOWS;                     0191
*                                                                  0191
       ABEND X'C0D',,,SYSTEM
*   /*****************************************************************/
*   /*                                                               */
*   /* IF SALLOC LOCK WAS ACQUIRED, RELEASE IT                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0192
*CKLOCK:                                                           0192
*   IF LOCKHELD^='1'B THEN          /* WAS SALLOC LOCK ACQUIRED BY 0192
*                                      CREATE SEGMENT                */
CKLOCK   TM    LOCKHELD(R13),B'10000000'                           0192
         BNO   @RT00192                                            0192
*     GO TO INITPGT;                /* PREPARE TO INITIALIZE SGTE, 0193
*                                      PGT,ETC                       */
*   RESPECIFY                                                      0194
*    (R10,                                                         0194
*     R11,                                                         0194
*     R12,                                                         0194
*     R14) RESTRICTED;                                             0194
*   R10=R13;                        /* SAVE R13 VALUE OVER SETLOCK   */
*                                                                  0195
         LR    R10,R13                                             0195
*   /*****************************************************************/
*   /*                                                               */
*   /* SETLOCK ROUTINE - SALLOC RELEASE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*FREELOK2:                                                         0196
*   GENERATE NODEFS REFS(PSALITA,FLC) SETS(R11,R12,R13,R14) NOFLOWS;
FREELOK2 DS    0H                                                  0196
  SETLOCK RELEASE,TYPE=SALLOC,RELATED=(RESOURCE,IEAVCSEG(GETLOCK))
*   RESPECIFY                                                      0197
*    (R11,                                                         0197
*     R12,                                                         0197
*     R14) UNRESTRICTED;                                           0197
*   IF R13=0 THEN                   /* TEST SETLOCK RETURN CODE      */
         LTR   R13,R13                                             0198
         BNZ   @RF00198                                            0198
*     DO;                                                          0199
*       R13=R10;                    /* RESTORE R13 VALUE             */
         LR    R13,R10                                             0200
*       RCASAL='0'B;                /* REMOVE INDICATION THAT SALLOC
*                                      LOCK IS HELD                  */
         L     @14,RCAPTR(,R13)                                    0201
         NI    RCASAL(@14),B'01111111'                             0201
*       GO TO INITPGT;              /* LOCK SUCCESSFULLY RELEASED    */
         B     INITPGT                                             0202
*     END;                                                         0203
*                                                                  0203
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN CODE FROM LOCK MANAGER WAS GREATER THAN 4 WHICH        */
*   /* INDICATES THE SALLOC LOCK WAS NOT RELEASED SUCCESSFULLY.      */
*   /* RECORD THE ERROR. SEGMENTS WILL BE CREATED AS PER CALLERS     */
*   /* REQUEST. NO INDICATION OF THIS PROBLEM IS GIVEN TO THE CALLER */
*   /* OF CREATE.                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0204
*   R13=R10;                        /* RESTORE R13                   */
@RF00198 LR    R13,R10                                             0204
*   RCARCRD='06'X;                  /* RECORD ATTEMPT TO RELEASE LOCK
*                                      WHICH WAS NOT HELD            */
         L     @14,RCAPTR(,R13)                                    0205
         MVI   RCARCRD(@14),X'06'                                  0205
*   GENERATE NODEFS REFS(R1) SETS(R1) NOFLOWS;                     0206
       ABEND X'C0D',,,SYSTEM
*   RESPECIFY                                                      0207
*    (R10,                                                         0207
*     R15) UNRSTD;                                                 0207
*                                                                  0208
*/********************************************************************/
*/* INITIALIZE SGTE, PGT, XPT IF REQUESTED, SPCT IF SWAPPABLE        */
*/********************************************************************/
*                                                                  0208
*INITPGT:                                                          0208
*   SEGID=FIRSTSEG;                 /* SEGID OF SEG TO BE CREATED    */
INITPGT  SLR   @12,@12                                             0208
         IC    @12,FIRSTSEG(,R13)                                  0208
         STC   @12,SEGID(,R13)                                     0208
*   FPGTEVSA=INPUTR1;               /* SAVE VSA OF FIRST PGT         */
         MVC   FPGTEVSA(3,R13),INPUTR1+1(R13)                      0209
*   RESPECIFY                                                      0210
*    (STEPTR) RESTRICTED;                                          0210
*   RESPECIFY                                                      0211
*    (R6) RESTRICTED;                                              0211
*   R6=RSMVSTO+LENGTH(SGTSTE)*(FIRSTSEG+NSEGS-1);/* DO LOOP LIMIT    */
*                                                                  0212
         L     @10,RSMVSTO(,RSMHDPTR)                              0212
         SLR   R6,R6                                               0212
         IC    R6,NSEGS(,R13)                                      0212
         ALR   R6,@12                                              0212
         BCTR  R6,0                                                0212
         SLA   R6,2                                                0212
         ALR   R6,@10                                              0212
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE SEGMENT TABLE ENTRIES, PAGE TABLE AND EXTERNAL PAGE*/
*   /* TABLES FOR NSEGS SEGMENTS.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*   DO STEPTR=RSMVSTO+LENGTH(SGTSTE)*FIRSTSEG BY LENGTH(SGTSTE) TO R6;
*                                                                  0213
         SLA   @12,2                                               0213
         ALR   @10,@12                                             0213
         LR    STEPTR,@10                                          0213
         B     @DE00213                                            0213
@DL00213 DS    0H                                                  0214
*     /***************************************************************/
*     /*                                                             */
*     /* SET THE INVALID BIT ON IN EACH PAGE TABLE ENTRY. DO SGTE    */
*     /* AFTER PGT TO PREVENT ERRONEOUS TRANSLATION IF ADDRESS SHOULD*/
*     /* HAPPEN TO BE REFERENCED BY ANOTHER CPU DURING CREATE TIME.  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0214
*     PAGETABL=PAGEINIT;            /* FORMAT THE PAGE TABLE         */
         L     @12,INPUTR1(,R13)                                   0214
         MVC   PAGETABL(32,@12),PAGEINIT                           0214
*     RESPECIFY                                                    0215
*      (REALPGT,                                                   0215
*       R1) RESTRICTED;                                            0215
*     R1=INPUTR1;                   /* LOAD R1 FOR LRA               */
         LR    R1,@12                                              0216
*     GENERATE NODEFS REFS(R1,REALPGT) SETS(REALPGT) NOFLOWS;      0217
*                                                                  0217
        LRA    REALPGT,0(R1)     GET REAL ADDRESS OF PAGE TABLE
*     /***************************************************************/
*     /*                                                             */
*     /* THE CONDITION CODE FROM LRA NEED NOT BE CHECKED BECAUSE PAGE*/
*     /* TABLES ARE IN SQA OR LSQA AND ARE FIXED IN STORAGE.         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0218
*     SGTLK=AFOX;                   /* SET LENGTH TO F, DO THIS    0218
*                                      BEFORE STORING ADDRESS,     0218
*                                      STORING ADD AND ZEROING LOW 0218
*                                      ORDER BIT CAUSES SEGMENT TABLE
*                                      ENTRY TO BECOME VALID         */
         MVI   SGTLK(STEPTR),X'F0'                                 0218
*     SGTPTO=REALPGT;               /* REAL ADDRESS OF PAGE TABLE TO
*                                      SEGMENT TABLE ENTRY           */
         STCM  REALPGT,7,SGTPTO(STEPTR)                            0219
*     RESPECIFY                                                    0220
*      (REALPGT,                                                   0220
*       R1) UNRESTRICTED;                                          0220
*                                                                  0220
*     /***************************************************************/
*     /*                                                             */
*     /* IF AN XPT IS TO BE CREATED CREATE IT AND CLEAR EACH EXTERNAL*/
*     /* PAGE TABLE ENTRY                                    @Z40WPYD*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0221
*     RESPECIFY                                                    0221
*      (XPTEPTR,                                                   0221
*       R0,                                                        0221
*       R1,                                                        0221
*       R14,                                                       0221
*       R15) RESTRICTED;                                           0221
*     IF PASSXPT='0'B THEN          /* TEST BY-PASS XPT OPTION       */
         TM    PASSXPT(R13),B'01000000'                            0222
         BNZ   @RF00222                                            0222
*       DO;                                                        0223
*         XPTEPTR=INPUTR1+LENGTH(PAGETABL);                        0224
         L     @12,INPUTR1(,R13)                                   0224
         LA    XPTEPTR,32                                          0224
         ALR   XPTEPTR,@12                                         0224
*         XPTETABL=XPTETABL&&XPTETABL;/* CLEAR 16 EXTERNAL PAGE TABLE
*                                      ENTRIES               @Z40WPYD*/
         XC    XPTETABL(192,XPTEPTR),XPTETABL(XPTEPTR)             0225
*         RESPECIFY                                                0226
*          (PTEPTR) RESTRICTED;                                    0226
*         PTEPTR=INPUTR1;           /* SAVE VSA OF PAGE TABLE        */
         LR    PTEPTR,@12                                          0227
*         INPUTR1=INPUTR1+LENGTH(XPTETABL);/* INCREMENT AREA PTR BY
*                                      SIZE OF XPT                   */
         AH    @12,@CH01789                                        0228
         ST    @12,INPUTR1(,R13)                                   0228
*         RESPECIFY                                                0229
*          (XPTEPTR,                                               0229
*           R0,                                                    0229
*           R1,                                                    0229
*           R14,                                                   0229
*           R15) UNRESTRICTED;                                     0229
*         RESPECIFY                                                0230
*          (SEGSPTR) RESTRICTED;                                   0230
*                                                                  0230
*         /***********************************************************/
*         /*                                                         */
*         /* IF DOSPCT FLAG IS 1, PLACE THE SEGMENT ID OF THE SEGMENT*/
*         /* AND THE VIRTUAL STORAGE ADDRESS OF THE PAGE TABLE INTO A*/
*         /* SEGMENT ENTRY IN THE SPCT.                              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0231
*         IF DOSPCT='1'B THEN                                      0231
         TM    DOSPCT(R13),B'01000000'                             0231
         BNO   @RF00231                                            0231
*           DO;                                                    0232
*             SEGSPTR=ADDR(SPCTSEGS)+LENGTH(SPCTSEGE)*SPCTSSEG;    0233
         L     @12,RSMSPCT(,RSMHDPTR)                              0233
         LA    SEGSPTR,SPCTSEGS(,@12)                              0233
         SLR   @10,@10                                             0233
         IC    @10,SPCTSSEG(,@12)                                  0233
         LR    @08,@10                                             0233
         MH    @08,@CH00084                                        0233
         ALR   SEGSPTR,@08                                         0233
*             SPCTPGT=PTEPTR;       /* PAGE TABLE VSA TO SEGMENT   0234
*                                      ENTRY                         */
         STCM  PTEPTR,7,SPCTPGT(SEGSPTR)                           0234
*             SPCTSEGX=SEGID;       /* SEGMENT ID TO SEGMENT ENTRY   */
         SLR   @08,@08                                             0235
         IC    @08,SEGID(,R13)                                     0235
         STC   @08,SPCTSEGX(,SEGSPTR)                              0235
*             SPCTSSEG=SPCTSSEG+1;  /* UPDATE NUMBER OF ACTIVE     0236
*                                      SEGMENTS AFTER CREATING THE 0236
*                                      ENTRY                         */
         LA    @07,1                                               0236
         ALR   @10,@07                                             0236
         STC   @10,SPCTSSEG(,@12)                                  0236
*             SEGID=SEGID+1;        /* UPDATE SEGMENT ID NUMBER      */
         ALR   @08,@07                                             0237
         STC   @08,SEGID(,R13)                                     0237
*           END;                                                   0238
*         RESPECIFY                                                0239
*          (PTEPTR,                                                0239
*           SEGSPTR) UNRESTRICTED;                                 0239
@RF00231 DS    0H                                                  0240
*       END;                                                       0240
*NEXTSEG:                                                          0241
*     INPUTR1=INPUTR1+LENGTH(PAGETABL);/* UPDATE AREA POINTER FOR  0241
*                                      SPACE PAGE TABLE OCCUPIES     */
@RF00222 DS    0H                                                  0241
NEXTSEG  LA    @12,32                                              0241
         AL    @12,INPUTR1(,R13)                                   0241
         ST    @12,INPUTR1(,R13)                                   0241
*   END;                                                           0242
         AL    STEPTR,@CF00043                                     0242
@DE00213 CR    STEPTR,R6                                           0242
         BNH   @DL00213                                            0242
*   RESPECIFY                                                      0243
*    (STEPTR) UNRESTRICTED;                                        0243
*                                                                  0244
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL SEGMENTS HAVE BEEN CREATED.                       @Z40WPYD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0244
*/********************************************************************/
*/* SETUP RETURN PARAMETERS IN REG0 AND REG1 AND SET A RETURN        */
*/* CODE IN REG15.                                                   */
*/********************************************************************/
*                                                                  0244
*   INPUTR0=FPGTEVSA;               /* ADDRESS OF FIRST PAGE TABLE   */
         SLR   @12,@12                                             0244
         ICM   @12,7,FPGTEVSA(R13)                                 0244
         ST    @12,INPUTR0(,R13)                                   0244
*   INPUTR1=FPGTEVSA+LENGTH(PAGETABL);/* ADDRESS OF FIRST XPT        */
         AH    @12,@CH00124                                        0245
         ST    @12,INPUTR1(,R13)                                   0245
*/********************************************************************/
*/* REGISTER 1 GETS VSA OF FIRST PAGE TABLE PLUS LENGTH OF ONE PAGE  */
*/* TABLE.  THIS ADDRESS IS THE ADDRESS OF THE FIRST XPT CREATED IF  */
*/* THE XPT OPTION WAS SELECTED.                                     */
*/********************************************************************/
*                                                                  0246
*   OUTPUT15=0;                     /* SET RETURN CODE TO ZERO       */
         SLR   @12,@12                                             0246
         ST    @12,OUTPUT15(,R13)                                  0246
*/********************************************************************/
*/* IF ENTRY WAS FROM AN RSM RTN THE FRR WAS SET UPON ENTRY.         */
*/* IF THE FRR WAS SET IT MUST BE DELETED PRIOR TO RETURNING TO      */
*/* THE CALLER.                                                      */
*/********************************************************************/
*                                                                  0247
*FREEFRR:                                                          0247
*   IF ENTCSEG='1'B                 /* IF ENTERED AT IEAVCSEG, FRR 0247
*                                      MUST BE FREEDED               */
*     THEN                                                         0247
FREEFRR  TM    ENTCSEG(R13),B'00100000'                            0247
         BNO   @RF00247                                            0247
*     DO;                           /* IF YES, FREE THE FRR          */
*       RESPECIFY                                                  0249
*        (R4,                                                      0249
*         R5) RESTRICTED;                                          0249
*       GENERATE NODEFS REFS(PSACSTK,FRRSCURR,FRRSEMP,FRRSELEN,FRRS)
*           SETS(R4,R5) NOFLOWS;                                   0250
         SETFRR D,WRKREGS=(R4,R5),RELATED=(RSM,IEAVCSEG(GETFRR))
*       RESPECIFY                                                  0251
*        (R4,                                                      0251
*         R5) UNRESTRICTED;                                        0251
*     END;                                                         0252
*   ELSE                                                           0253
*     RCACSGB='0'B;                 /* ZERO CSGB ENTERED FLAG        */
         B     @RC00247                                            0253
@RF00247 L     @12,RCAPTR(,R13)                                    0253
         NI    RCACSGB(@12),B'11011111'                            0253
*CRTN:                                                             0254
*   RETURN;                         /* RETURN TO CALLER OF CREATE    */
@EL00001 DS    0H                                                  0254
@EF00001 DS    0H                                                  0254
@ER00001 LM    @14,@12,12(@13)                                     0254
         BR    @14                                                 0254
*   END IEAVCSEG                                                   0255
*                                                                  0255
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHARSMHD)                                       */
*/*%INCLUDE SYSLIB  (IHASPCT )                                       */
*/*%INCLUDE SYSLIB  (IHASGTE )                                       */
*/*%INCLUDE SYSLIB  (IHAPGTE )                                       */
*/*%INCLUDE SYSLIB  (IHAXPTE )                                       */
*/*%INCLUDE SYSLIB  (IHARCA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  0255
*       ;                                                          0255
         B     @EL00001                                            0255
@DATA    DS    0H
@CH00066 DC    H'1'
@CH00084 DC    H'6'
@CH00124 DC    H'32'
@CH00122 DC    H'96'
@CH01789 DC    H'192'
@CH01633 DC    H'256'
         DS    0F
         DS    0F
@CF00043 DC    F'4'
@CH00043 EQU   @CF00043+2
@CF00035 DC    F'8'
@CF00126 DC    F'16'
         DS    0D
PAGEINIT DS    CL32
         ORG   PAGEINIT
@NM00053 DC    16X'0008'
         ORG   PAGEINIT+32
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FRREPTR  EQU   @04
PVTPTR   EQU   @03
RSMHDPTR EQU   @02
SEGSPTR  EQU   @04
SWAPPTR  EQU   @04
STEPTR   EQU   @11
PTEPTR   EQU   @05
XPTEPTR  EQU   @04
REALPGT  EQU   @04
SPCTPTR1 EQU   @01
NEXPAND  EQU   @07
R0       EQU   @00
R1       EQU   @01
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
R2       EQU   @02
R8       EQU   @08
R9       EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTPRCA  EQU   PVT+52
PVTPRCV  EQU   PVT+156
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
RSMHD    EQU   0
RSMVSTO  EQU   RSMHD
RSMSPCT  EQU   RSMHD+4
RSMFLG1  EQU   RSMHD+12
RSMQS    EQU   RSMHD+20
RSMLFQ   EQU   RSMQS
RSMLSQA  EQU   RSMQS+4
RSMLIOQ  EQU   RSMQS+8
SPCT     EQU   0
SPCTNSEG EQU   SPCT+8
SPCTSSEG EQU   SPCT+9
SPCTFLG1 EQU   SPCT+10
SPCTSIZE EQU   SPCT+14
SPCTSEGS EQU   SPCT+72
SPCTSEGE EQU   0
SPCTSEGX EQU   SPCTSEGE
SPCTPGT  EQU   SPCTSEGE+1
SPCTSWPE EQU   0
SPCTLS   EQU   SPCTSWPE
SPCTFLAG EQU   SPCTLS
SPCTEXTM EQU   0
SPCTENT  EQU   SPCTEXTM+8
SGTSTE   EQU   0
SGTLK    EQU   SGTSTE
SGTPTO   EQU   SGTSTE+1
SGTBYTE  EQU   SGTPTO+2
SGTPAM   EQU   SGTBYTE
PGTPTE   EQU   0
PGTRSA   EQU   PGTPTE
PGTBITS  EQU   PGTRSA+1
XPTE     EQU   0
XPTFLAGS EQU   XPTE+2
XPTFLAG2 EQU   XPTE+3
XPTLPID  EQU   XPTE+4
XPTLGN   EQU   XPTLPID
XPTLPN   EQU   XPTLPID+4
RCA      EQU   0
RCACSECT EQU   RCA+9
RCAFLAGS EQU   RCA+10
RCASAL   EQU   RCAFLAGS
RCARCRD  EQU   RCA+11
RCANAMES EQU   RCA+12
RCANAME1 EQU   RCANAMES
RCACSEG  EQU   RCANAME1
RCANAME2 EQU   RCANAMES+1
RCANAME3 EQU   RCANAMES+2
RCANAME4 EQU   RCANAMES+3
RCANAME5 EQU   RCANAMES+4
RCANAME6 EQU   RCANAMES+5
RCACSGB  EQU   RCANAME6
ASXB     EQU   0
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
WSAL     EQU   0
WSAG     EQU   0
WSAGGMFM EQU   WSAG+4
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
PAGETABL EQU   0
XPTETABL EQU   0
REGSAVER EQU   0
WORKWORD EQU   REGSAVER
CHAINBK  EQU   REGSAVER+4
CHAINFWD EQU   REGSAVER+8
SAVER15  EQU   REGSAVER+16
SAVER0   EQU   REGSAVER+20
SAVER1   EQU   REGSAVER+24
PGTEND   EQU   0
SGTEND   EQU   0
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FRRSPTR  EQU   PSACSTK
ASCBPTR  EQU   PSAAOLD
RCAPTR   EQU   CHAINBK
ASXBPTR  EQU   ASCBASXB
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTGLMN  EQU   CVTS01+332
CVTSPSA  EQU   CVTS01+336
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
INPUTR1  EQU   SAVER1
DWBTEST  EQU   INPUTR1
DWBBITS  EQU   DWBTEST+3
INPUTR0  EQU   SAVER0
R0BYTEZ  EQU   INPUTR0
PASSXPT  EQU   R0BYTEZ
NSEGS    EQU   INPUTR0+2
FIRSTSEG EQU   INPUTR0+3
WORKSPAC EQU   WORKWORD
@NM00050 EQU   WORKSPAC
LOCKHELD EQU   @NM00050
DOSPCT   EQU   @NM00050
ENTCSEG  EQU   @NM00050
OUTPUT15 EQU   SAVER15
SEGID    EQU   CHAINFWD
FPGTEVSA EQU   CHAINFWD+1
*                                      START UNREFERENCED COMPONENTS
@NM00052 EQU   WORKSPAC+1
@NM00051 EQU   @NM00050
R0BYTE1  EQU   INPUTR0+1
@NM00049 EQU   R0BYTEZ
@NM00048 EQU   R0BYTEZ
@NM00047 EQU   DWBTEST
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
SAVER12  EQU   REGSAVER+68
SAVER11  EQU   REGSAVER+64
SAVER10  EQU   REGSAVER+60
SAVER9   EQU   REGSAVER+56
SAVER8   EQU   REGSAVER+52
SAVER7   EQU   REGSAVER+48
SAVER6   EQU   REGSAVER+44
SAVER5   EQU   REGSAVER+40
SAVER4   EQU   REGSAVER+36
SAVER3   EQU   REGSAVER+32
SAVER2   EQU   REGSAVER+28
SAVER14  EQU   REGSAVER+12
XPTE15   EQU   XPTETABL+180
XPTE14   EQU   XPTETABL+168
XPTE13   EQU   XPTETABL+156
XPTE12   EQU   XPTETABL+144
XPTE11   EQU   XPTETABL+132
XPTE10   EQU   XPTETABL+120
XPTE9    EQU   XPTETABL+108
XPTE8    EQU   XPTETABL+96
XPTE7    EQU   XPTETABL+84
XPTE6    EQU   XPTETABL+72
XPTE5    EQU   XPTETABL+60
XPTE4    EQU   XPTETABL+48
XPTE3    EQU   XPTETABL+36
XPTE2    EQU   XPTETABL+24
XPTE1    EQU   XPTETABL+12
XPTE0    EQU   XPTETABL
PGTE15   EQU   PAGETABL+30
PGTE14   EQU   PAGETABL+28
PGTE13   EQU   PAGETABL+26
PGTE12   EQU   PAGETABL+24
PGTE11   EQU   PAGETABL+22
PGTE10   EQU   PAGETABL+20
PGTE9    EQU   PAGETABL+18
PGTE8    EQU   PAGETABL+16
PGTE7    EQU   PAGETABL+14
PGTE6    EQU   PAGETABL+12
PGTE5    EQU   PAGETABL+10
PGTE4    EQU   PAGETABL+8
PGTE3    EQU   PAGETABL+6
PGTE2    EQU   PAGETABL+4
PGTE1    EQU   PAGETABL+2
PGTE0    EQU   PAGETABL
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00046 EQU   CVTFIX+248
@NM00045 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALSDMP EQU   WSAL+12
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
RCARETAD EQU   RCA+20
RCARES9  EQU   RCA+19
@NM00044 EQU   RCA+18
RCAPIOI  EQU   RCA+18
RCANAME7 EQU   RCANAMES+6
RCAREP1  EQU   RCANAME6
RCAPSIF  EQU   RCANAME6
RCAPSIX  EQU   RCANAME6
RCAVEQRP EQU   RCANAME6
RCARCFC  EQU   RCANAME6
RCAFXL   EQU   RCANAME6
RCAPS113 EQU   RCANAME6
RCAFREE  EQU   RCANAME5
RCARFR2  EQU   RCANAME5
RCACPBR  EQU   RCANAME5
RCAOPBR  EQU   RCANAME5
RCASORT  EQU   RCANAME5
RCASIRT  EQU   RCANAME5
RCARELV  EQU   RCANAME5
RCARELF  EQU   RCANAME5
RCAGFAD  EQU   RCANAME4
RCAVEQRI EQU   RCANAME4
RCAVEQRF EQU   RCANAME4
RCAVEQRC EQU   RCANAME4
RCATERM  EQU   RCANAME4
RCASQA   EQU   RCANAME4
RCASWIN  EQU   RCANAME4
RCASOUT  EQU   RCANAME4
RCARFR   EQU   RCANAME3
RCARELS  EQU   RCANAME3
RCARCFI  EQU   RCANAME3
RCARCF   EQU   RCANAME3
RCAPSII  EQU   RCANAME3
RCAPSIB  EQU   RCANAME3
RCAPS112 EQU   RCANAME3
RCAPIX   EQU   RCANAME3
RCAPIOP  EQU   RCANAME2
RCASWPC  EQU   RCANAME2
RCASWPP  EQU   RCANAME2
RCAPFTE  EQU   RCANAME2
RCAPCB   EQU   RCANAME2
RCAOUT   EQU   RCANAME2
RCAITAS  EQU   RCANAME2
RCAIOCP  EQU   RCANAME2
RCAINV   EQU   RCANAME1
RCAGFA   EQU   RCANAME1
RCAFXLD  EQU   RCANAME1
RCAVEQR  EQU   RCANAME1
RCADSEG  EQU   RCANAME1
RCADLAS  EQU   RCANAME1
RCAVAMSI EQU   RCANAME1
@NM00043 EQU   RCAFLAGS
RCAQS    EQU   RCAFLAGS
RCAPSIER EQU   RCAFLAGS
RCAABEND EQU   RCAFLAGS
RCALL    EQU   RCAFLAGS
RCARES7  EQU   RCA+8
RCAPARM1 EQU   RCA+4
RCAPARM0 EQU   RCA
XPTLSID2 EQU   XPTLPN
XPTLSID  EQU   XPTLGN
@NM00042 EQU   XPTFLAG2
XPTIOERR EQU   XPTFLAG2
XPTPOINP EQU   XPTFLAG2
XPTRES1  EQU   XPTFLAG2
XPTVALID EQU   XPTFLAG2
XPTRSV4  EQU   XPTFLAGS
XPTDEFER EQU   XPTFLAGS
XPTRES2  EQU   XPTFLAGS
XPTVIO   EQU   XPTFLAGS
XPTCKF   EQU   XPTFLAGS
XPTXAV   EQU   XPTFLAGS
XPTVIOLP EQU   XPTFLAGS
XPTRSV1  EQU   XPTE+1
XPTPROT  EQU   XPTE
PGTPAM   EQU   PGTBITS
@NM00041 EQU   PGTBITS
@NM00040 EQU   PGTBITS
PGTPVM   EQU   PGTBITS
@NM00039 EQU   PGTBITS
@NM00038 EQU   PGTBITS
@NM00037 EQU   PGTBITS
@NM00036 EQU   PGTBITS
PGTREAL  EQU   PGTRSA
SGTEAC   EQU   SGTBYTE
@NM00035 EQU   SGTBYTE
@NM00034 EQU   SGTBYTE
@NM00033 EQU   SGTBYTE
@NM00032 EQU   SGTBYTE
@NM00031 EQU   SGTBYTE
SGTORG   EQU   SGTPTO
SGTKEY   EQU   SGTLK
SGTPTL   EQU   SGTLK
SPCTXEND EQU   SPCTENT+48
SPCTENTS EQU   SPCTENT
@NM00030 EQU   SPCTEXTM+4
SPCTEXT  EQU   SPCTEXTM
SPCTFIXC EQU   SPCTSWPE+6
SPCTVBN  EQU   SPCTLS+4
SPCTSSID EQU   SPCTLS+1
@NM00029 EQU   SPCTFLAG
SPCTDEFR EQU   SPCTFLAG
SPCTCOMM EQU   SPCTFLAG
SPCTLSQ  EQU   SPCTFLAG
SPCTLVAL EQU   SPCTFLAG
SPCTBITM EQU   SPCTSEGE+4
SPCTSWAP EQU   SPCT+16
SPCTWSSZ EQU   SPCT+12
SPCTIDEN EQU   SPCT+11
@NM00028 EQU   SPCTFLG1
SPCTPSET EQU   SPCTFLG1
SPCTBIG  EQU   SPCTFLG1
SPCTPURG EQU   SPCTFLG1
SPCTOUT  EQU   SPCTFLG1
SPCTSWIN EQU   SPCTFLG1
SPCTLSQA EQU   SPCT+6
SPCTFIX  EQU   SPCT+4
SPCTSWRT EQU   SPCT
RSMASMHD EQU   RSMHD+40
RSMFOEQ  EQU   RSMHD+36
RSMLIOQL EQU   RSMLIOQ+4
RSMLIOQF EQU   RSMLIOQ
RSMLSQAL EQU   RSMLSQA+2
RSMLSQAF EQU   RSMLSQA
RSMLFQL  EQU   RSMLFQ+2
RSMLFQF  EQU   RSMLFQ
RSMRSV2  EQU   RSMHD+16
RSMCNTFX EQU   RSMHD+14
RSMRSV1  EQU   RSMHD+13
@NM00027 EQU   RSMFLG1
RSMFAIL  EQU   RSMFLG1
RSMGFADD EQU   RSMFLG1
RSMCPNC  EQU   RSMFLG1
RSMCPNU  EQU   RSMFLG1
RSMGFAD  EQU   RSMFLG1
RSMIOCPC EQU   RSMFLG1
RSMIOCPU EQU   RSMFLG1
RSMASCB  EQU   RSMHD+8
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
PVTEND   EQU   PVT+1840
PVTSPARE EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTCIOQL EQU   PVTQS+36
PVTCIOQF EQU   PVTQS+32
PVTGFADL EQU   PVTQS+28
PVTGFADF EQU   PVTQS+24
PVTFPCBL EQU   PVTQS+20
PVTFPCBF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTREUS  EQU   PVT+48
PVTRESV4 EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
PVTFLAG2 EQU   PVT+1
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTRESV1 EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
@NM00026 EQU   FRRSFLGS+1
@NM00025 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00092 EQU   RETURN4
@RT00094 EQU   RETURN4
@RT00096 EQU   RETURN4
@RT00112 EQU   INITPGT
@RT00114 EQU   INITPGT
@RT00117 EQU   INITPGT
@RT00143 EQU   MOVESPCT
@RT00148 EQU   RETURN4
@RT00188 EQU   CKLOCK
@RT00192 EQU   INITPGT
@RC00247 EQU   @EL00001
CRTN     EQU   @EL00001
@ENDDATA EQU   *
         END   IEAVCSEG,(C'PLS0041',0701,76087)
