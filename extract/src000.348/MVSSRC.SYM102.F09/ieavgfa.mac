         TITLE 'IEAVGFA - GENERAL FRAME ALLOCATION                     *
                        '
*                                    /*                     @Z40WPYC*/
IEAVGFA  CSECT
         MODID BR=NO
         ENTRY IEAVGFA2                                       @Z40WPYC
IEAVGFA2 DS    0H                                             @Z40WPYC
         STM   R4,R14,PVTWSA8(PVTPTR) SAVE THE NECESSARY REGISTERS
         BALR  R9,0                   ESTABLISH PROGRAM ADDRESSABILITY
GFABASE  EQU   *
         USING GFABASE,R9
         USING GFABASE+4094,R8
         LA    R8,4094(R9)       ESTABLISH SECOND BASE REG
*   RCACSECT=RCACGFA;               /* SET THE CSECT AND ENTRY POINT */
         L     @10,RCAPTR(,PVTPTR)                                 0099
         MVI   RCACSECT(@10),X'0E'                                 0099
*   RCAGFA='1'B;                    /* FLAGS IN THE RCA TO INDICATE
*                                      GFA ENTERED                   */
         OI    RCAGFA(@10),B'00000010'                             0100
*   VARIABLS=VARIABLS&&VARIABLS;    /* INITIALIZE INTERNAL VARIABLES */
         XC    VARIABLS(44,PVTPTR),VARIABLS(PVTPTR)                0101
*   PCBPTR=R1;                      /* SET THE PCB BASE REGISTER     */
         LR    PCBPTR,R1                                           0102
*   RFY                                                            0103
*     R1 UNRSTD;                                                   0103
*   GEN REFS(R15,PCBPTR,GFAENTER) SETS(R15,PCB);                   0104
*                                                                  0104
*                                            /*             @Z40WPYC*/
TRACEZG1 EQU  *                PCB TRACE - GFA ENTERED      @Z40WPYC
        B     *+16             BRANCH AROUND TRACE CODE     @Z40WPYC
        L     R15,68(PCBPTR)   GET CURRENT COUNT            @Z40WPYC
        AL    R15,GFAENTER     INCREMENT BY 1               @Z40WPYC
        ST    R15,68(PCBPTR)   STORE NEW COUNT              @Z40WPYC
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS BEGINS THE PCB PROCESSING LOOP. RETURN IS MADE HERE FOR  */
*   /* EACHINPUT PCB                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0105
*PCBPROC:                                                          0105
*   NEXTPCBP=PCBFQPA;               /* SAVE ADDRESS OF NEXT INPUT PCB*/
PCBPROC  L     @10,PCBFQPA-1(,PCBPTR)                              0105
         LA    @10,0(,@10)                                         0105
         ST    @10,NEXTPCBP(,PVTPTR)                               0105
*   PCBFQPA=0;                      /* DEQUEUE THIS PCB FROM THE   0106
*                                      INPUT LIST -- THIS PREVENTS AN
*                                      ERROR IN THE PCB MANAGER WHEN
*                                      THE PCB IS SUBSEQUENTLY     0106
*                                      ENQUEUED AFTER PROCESSING IS
*                                      COMPLETE                      */
         SLR   @10,@10                                             0106
         STCM  @10,7,PCBFQPA(PCBPTR)                               0106
*   COUNTSET='0'B;                  /* CLEAR FLAG INDICATING STATUS
*                                      OF COUNTERS DURING RECLAIM  0107
*                                      PROCESSING            @YA01572*/
         NI    COUNTSET(PVTPTR),B'11101111'                        0107
*   IF PCBSWPIN='0'B THEN                                          0108
         TM    PCBSWPIN(PCBPTR),B'01000000'                        0108
         BNZ   @RF00108                                            0108
*     DO;                           /* NOT SWAP-IN OF LSQA OR PA FIX */
*       IF XPTDEFER='0'B×XPTPOINP='1'B THEN                        0110
         L     @10,XPTEPTR(,PCBPTR)                                0110
         TM    XPTDEFER(@10),B'00000010'                           0110
         BZ    @RT00110                                            0110
         TM    XPTPOINP(@10),B'00100000'                           0110
         BNO   @RF00110                                            0110
@RT00110 DS    0H                                                  0111
*         DO;                       /* IF THE PCB DOES NOT REPRESENT
*                                      A SWAP-IN AND THE EXTERNAL  0111
*                                      PAGE TABLE DOES NOT INDICATE
*                                      ALLOCATION WAS PREVIOUSLY   0111
*                                      DEFERRED, OR THE XPTE       0111
*                                      INDICATES A PAGEOUT IN PROCESS
*                                      FOR A NON-RECLAIMABLE FRAME,
*                                      THEN ATTEMPT TO RECLAIM THE 0111
*                                      PAGE FRAME            @Z40WPYC*/
*           RBN=PGTRSA&'FFF0'X;     /* CREATE THE REAL BLOCK NUMBER
*                                      OF THE INPUT PAGE             */
         L     @10,PTEPTR(,PCBPTR)                                 0112
         MVC   RBN(2,PVTPTR),PGTRSA(@10)                           0112
         NC    RBN(2,PVTPTR),@CB02190                              0112
*           IF RBN^=0 THEN                                         0113
         ICM   @10,3,RBN(PVTPTR)                                   0113
         BZ    @RF00113                                            0113
*             DO;                   /* TEST FOR RECLAIMABLE PAGE   0114
*                                                            @Z40WPYC*/
*               CALL RECLAIM;       /* THE PAGE IS FEASIBLY        0115
*                                      RECLAIMABLE, INVOKE THE     0115
*                                      RECLAIM SUBROUTINE            */
         BAL   @14,RECLAIM                                         0115
*               RFY                                                0116
*                 R15 RSTD;                                        0116
*               IF R15=0            /* WAS THE FRAME RECLAIMED ?     */
*                 THEN                                             0117
         LTR   R15,R15                                             0117
         BZ    @RT00117                                            0117
*                 GOTO NXTPCB;      /* YES, GET THE NEXT INPUT PCB   */
*               ELSE                                               0119
*                 ;                 /* FRAME WAS NOT RECLAIMED.      */
*             END;                                                 0120
*           ELSE                                                   0121
*             ;                                                    0121
@RF00113 DS    0H                                                  0122
*           GOTO CALLALLC;          /* THE FRAME WAS NOT RECLAIMED,
*                                      OR RECLAIM WAS NOT ATTEMPTED,
*                                      TRY TO ALLOCATE A NEW FRAME   */
         B     CALLALLC                                            0122
*           RFY                                                    0123
*             R15 UNRSTD;                                          0123
*         END;                                                     0124
*       ELSE                                                       0125
*         ;                                                        0125
@RF00110 DS    0H                                                  0126
*       IF PVTAFC=0 THEN                                           0126
         LH    @10,PVTAFC(,PVTPTR)                                 0126
         LTR   @10,@10                                             0126
         BZ    @RT00126                                            0126
*         GOTO GFAPUT;              /* IF NO FRAMES ARE AVAILABLE, 0127
*                                      DEFER THIS REQUEST            */
*       ELSE                                                       0128
*         CALL GETGFAD;             /* THE REQUEST WAS PREVIOUSLY  0128
*                                      DEFERRED, AND NOW AVAILABLE 0128
*                                      FRAMES EXIST, GET ANY RELATED
*                                      PCBS FROM THE DEFER QUEUE     */
         BAL   @14,GETGFAD                                         0128
*     END;                                                         0129
*   ELSE                                                           0130
*     ;                                                            0130
@RF00108 DS    0H                                                  0131
*CALLALLC:                                                         0131
*   ;                               /* ATTEMPT TO ALLOCATE A FRAME   */
*                                                                  0131
CALLALLC DS    0H                                                  0132
*   /*****************************************************************/
*   /*                                                               */
*   /* ALLOCATE SUBROUTINE -- ALLOCATE A FRAME. ON INPUT, PCBPTR ->  */
*   /* THE PCB FOR WHICH A FRAME IS TO BE ALLOCATED. THE ROUTINE     */
*   /* SCANS THE AVAILABLE FRAME QUEUE FOR A FRAME WHICH HAS THE MOST*/
*   /* DESIRABLE ATTRIBUTES FOR ALLOCATION, WHERE THE WEIGHTING OF   */
*   /* THESE FACTORS IS DETERMINED BY THE CIRCUMSTANCES UNDER WHICH  */
*   /* THE FRAME IS BEING ALLOCATED. - FOR A PAGING EXCEPTION, THE   */
*   /* FRAME NEED ONLY BE ON THE AVAILABLE FRAME QUEUE. - THE SAME   */
*   /* RULE APPLIES TO NON-PAGE FAULT, NON-SWAP-IN REQUESTS - FOR    */
*   /* SWAP-IN REQUESTS OF PRIVATE AREA FIXED AND LSQA PAGES, THE    */
*   /* FRAME MUST BE AVAILABLE AND: - NOT IN THE V=R AREA IF THE     */
*   /* SWAP-IN IS FOR A SWAPPABLE MEMORY. - IN THE PREFERRED AREA FOR*/
*   /* A NON-SWAPPABLE MEMORY. ***** IN THE ABOVE CASES, THE V=R AREA*/
*   /* FRAME OR THE RESERVED AREA FRAME WILL BE USED IF NO FRAME     */
*   /* MEETING THE CRITERION CAN BE FOUND.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0132
*ALLOC:                                                            0132
*   IF PVTAFQF^=0 THEN                                             0132
ALLOC    LH    @10,PVTAFQF(,PVTPTR)                                0132
         N     @10,@CF02300                                        0132
         LTR   @10,@10                                             0132
         BZ    @RF00132                                            0132
*     DO;                           /* THERE ARE AVAILABLE FRAMES    */
*       LONGFLAG='0'B;              /* RESET THE INTERNAL LONG-FIX 0134
*                                      INDICATOR                     */
         NI    LONGFLAG(PVTPTR),B'01111111'                        0134
*       RBN=PVTAFQF;                /* FIRST FRAME ON THE AVAILABLE
*                                      FRAME QUEUE                   */
         MVC   RBN(2,PVTPTR),PVTAFQF(PVTPTR)                       0135
*       PFTEPTR=RBN+PVTPFTP;        /* SET UP THE PFTE ADDRESS       */
         SLR   PFTEPTR,PFTEPTR                                     0136
         ICM   PFTEPTR,3,RBN(PVTPTR)                               0136
         AL    PFTEPTR,PVTPFTP(,PVTPTR)                            0136
*       PTR1=PCBPTR;                /* SCAN THE QUEUE OF PCBS THAT 0137
*                                      ARE RELATED TO THE INPUT PCB,
*                                      LOOKING FOR A 'LONG-FIX'    0137
*                                      REQUEST                       */
         LR    PTR1,PCBPTR                                         0137
*       DO WHILE PTR1^=0;                                          0138
         B     @DE00138                                            0138
@DL00138 DS    0H                                                  0139
*         IF PTR1->PCBSWPS1='1'B×PTR1->PCBFXC^=0 THEN/* DOES PCB   0139
*                                      REPRESENT STAGE 1 SWAP OR PAGE
*                                      FIX                           */
         TM    PCBSWPS1(PTR1),B'00100000'                          0139
         BO    @RT00139                                            0139
         CLI   PCBFXC(PTR1),0                                      0139
         BE    @RF00139                                            0139
@RT00139 DS    0H                                                  0140
*           DO;                     /* YES, CHECK DEFER FIX THRESHOLD
*                                                            @YA01572*/
*             IF PVTAFC<=PVTDEFFX THEN/* SHOULD FIX REQUESTS BE    0141
*                                      DEFERRED                      */
         LH    @10,PVTAFC(,PVTPTR)                                 0141
         CH    @10,PVTDEFFX(,PVTPTR)                               0141
         BNH   @RT00141                                            0141
*               GOTO TESTDFSP;      /* YES,DEFER REQUEST OR REJECT IT
*                                                            @YA01572*/
*             IF PTR1->PCBPREFR='1'B THEN/*                  @ZA16816*/
         TM    PCBPREFR(PTR1),B'00001000'                          0143
         BNO   @RF00143                                            0143
*               LONGFLAG='1'B;      /* A LONG-FIX HAS BEEN FOUND, SET
*                                      THE INTERNAL INDICATOR        */
         OI    LONGFLAG(PVTPTR),B'10000000'                        0144
*           END;                                                   0145
*         ELSE                                                     0146
*           ;                                                      0146
@RF00139 DS    0H                                                  0147
*         PTR1=PTR1->PCBRLPA;       /* GET THE NEXT RELATED PCB      */
@RC00139 L     @10,PCBRLPA-1(,PTR1)                                0147
         LA    @10,0(,@10)                                         0147
         LR    PTR1,@10                                            0147
*       END;                                                       0148
@DE00138 LTR   PTR1,PTR1                                           0148
         BNZ   @DL00138                                            0148
*       IF LONGFLAG='1'B THEN                                      0149
         TM    LONGFLAG(PVTPTR),B'10000000'                        0149
         BNO   @RF00149                                            0149
*         DO;                                                      0150
*                                                                  0150
*           /*********************************************************/
*           /*                                                       */
*           /* THIS CODE HANDLES THE SELECTION OF A FRAME BEST SUITED*/
*           /* TO A PREFERRED FIX. FIRST CHOICE IS A PREFERRED AREA  */
*           /* FRAME. SECOND CHOICE IS A NON-PREFERRED NON V=R FRAME.*/
*           /* LAST CHOICE IS THE BEST V=R FRAME ON THE AFQ  @ZA16816*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0151
*           RESPECIFY                                              0151
*            (R5) RSTD;             /*                       @ZA16816*/
*           CALL GETAPREF;          /* TRY TO GET A PREFERRED      0152
*                                                            @ZA16816*/
         BAL   @14,GETAPREF                                        0152
*           IF R5^=0 THEN           /* IF A PREFERRED FOUND  @ZA16816*/
         LTR   R5,R5                                               0153
         BZ    @RF00153                                            0153
*             DO;                   /* THEN ALLOCATE IT.     @ZA16816*/
*               PFTEPTR=R5;         /* SET PFTE POINTER      @ZA16816*/
         LR    PFTEPTR,R5                                          0155
*               RBN=PFTEPTR-PVTPFTP;/* SET RBN               @ZA16816*/
         LR    @10,PFTEPTR                                         0156
         SL    @10,PVTPFTP(,PVTPTR)                                0156
         STCM  @10,3,RBN(PVTPTR)                                   0156
*               RESPECIFY                                          0157
*                (R5) UNRSTD;       /*                       @ZA16816*/
*             END;                  /*                       @ZA16816*/
*           ELSE                    /* HERE IF NO PREFERRED  @ZA16816*/
*             DO;                   /* TRY NON-PREF NON V=R. @ZA16816*/
         B     @RC00153                                            0159
@RF00153 DS    0H                                                  0160
*               PFTEPTR=SAVEPFTE;   /* TRY AFQ FIRST.        @ZA16816*/
         L     PFTEPTR,SAVEPFTE(,PVTPTR)                           0160
*               IF PFTEPTR^=0 THEN  /* IF THERE WAS ONE,     @ZA16816*/
         LTR   PFTEPTR,PFTEPTR                                     0161
         BZ    @RF00161                                            0161
*                 DO;               /* CONVERT BOX AND USE IT      0162
*                                                            @ZA16816*/
*                   RBN=PFTEPTR-PVTPFTP;/* SET RBN OF THE FRAME    0163
*                                                            @ZA16816*/
         LR    @10,PFTEPTR                                         0163
         SL    @10,PVTPFTP(,PVTPTR)                                0163
         STCM  @10,3,RBN(PVTPTR)                                   0163
*                   RESPECIFY                                      0164
*                    (PARM) RSTD;   /*                       @ZA16816*/
*                   PARM=RBN;       /* GET RBN FOR IEAVPREF  @ZA16816*/
         LR    PARM,@10                                            0165
*                   CALL IEAVPREF;  /* CONVERT THE BOX       @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               0166
         BALR  @14,@15                                             0166
*                   RESPECIFY                                      0167
*                    (PARM) UNRSTD; /*                       @ZA16816*/
*                 END;              /*                       @ZA16816*/
*               ELSE                /* HERE IF ONLY V=R ON AFQ     0169
*                                                            @ZA16816*/
*                 DO;               /* TRY IEAVPREF          @ZA16816*/
         B     @RC00161                                            0169
@RF00161 DS    0H                                                  0170
*                   RESPECIFY                                      0170
*                    (PASS,                                        0170
*                     PARM) RSTD;   /*                       @ZA16816*/
*                   PASS=2;         /* AFQ HAS ONLY V=R-     @ZA16816*/
         LA    PASS,2                                              0171
*                   PARM=0;         /* USE IEAVPREF TO       @ZA16816*/
         SLR   PARM,PARM                                           0172
*                   CALL IEAVPREF;  /* GET A NON-PREF NON V=R      0173
*                                                            @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               0173
         BALR  @14,@15                                             0173
*                   IF R15=0 THEN   /* IF SUCCESSFUL, THEN   @ZA16816*/
         LTR   R15,R15                                             0174
         BNZ   @RF00174                                            0174
*                     DO;           /* CONVERT BOX AND USE IT      0175
*                                                            @ZA16816*/
*                       PFTEPTR=R0; /* SET PFTE POINTER      @ZA16816*/
         LR    PFTEPTR,R0                                          0176
*                       RBN=PFTEPTR-PVTPFTP;/* SET RBN       @ZA16816*/
         LR    @10,PFTEPTR                                         0177
         SL    @10,PVTPFTP(,PVTPTR)                                0177
         STCM  @10,3,RBN(PVTPTR)                                   0177
*                       PARM=RBN;   /* SET RBN FOR IEAVPREF  @ZA16816*/
         LR    PARM,@10                                            0178
*                       CALL IEAVPREF;/* CONVERT THE BOX     @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               0179
         BALR  @14,@15                                             0179
*                       RESPECIFY                                  0180
*                        (PASS,                                    0180
*                         PARM) UNRSTD;/*                    @ZA16816*/
*                     END;          /*                       @ZA16816*/
*                   ELSE            /* HERE IF NO NON V=R AVAILABLE
*                                                            @ZA16816*/
*                                                                  0182
*                     /***********************************************/
*                     /*                                             */
*                     /* MUST USE A V=R FRAME FROM THE AVAILABLE     */
*                     /* FRAME QUEUE. BEGIN THE SPECIAL PROCESSING TO*/
*                     /* SELECT THE V=R PFTE ON THE AFQ WHICH CAUSES */
*                     /* THE LEAST POLLUTION IN THE V=R AREA OF REAL */
*                     /* STORAGE (IE. THE V=R FRAME THAT IS CLOSEST  */
*                     /* TO AN END OF THE V=R AREA).         @ZA16816*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0182
*                     DO;           /*                       @ZA16816*/
         B     @RC00174                                            0182
@RF00174 DS    0H                                                  0183
*                       ADRDIFFS=MXVROFF;/* DEFAULT OFFSETS TO     0183
*                                      MAXIMUM               @ZA31128*/
         MVC   ADRDIFFS(4,PVTPTR),MXVROFF                          0183
*                       PFTEPTR=PVTPFTP+PVTLVR;/* ADDR LAST V=R PFTE
*                                                            @ZA31128*/
         L     @10,PVTPFTP(,PVTPTR)                                0184
         LH    PFTEPTR,PVTLVR(,PVTPTR)                             0184
         N     PFTEPTR,@CF02300                                    0184
         ALR   PFTEPTR,@10                                         0184
*                       PTR1=PVTPFTP+PVTFVR;/* ADDR FIRST V=R PFTE 0185
*                                                            @ZA31128*/
*                                                                  0185
         LH    PTR1,PVTFVR(,PVTPTR)                                0185
         N     PTR1,@CF02300                                       0185
         ALR   @10,PTR1                                            0185
         LR    PTR1,@10                                            0185
*                       /*********************************************/
*                       /*                                           */
*                       /* SCAN FROM HIGH END OF V=R AREA UNTIL THE  */
*                       /* LOWEST FRAME IN THE V=R AREA OR AN        */
*                       /* AVAILABLE V=R FRAME IS FOUND.     @ZA31128*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0186
*                       DO UNTIL(PFTEPTR=PTR1)×(LVRADDIF^=NOFRAME);/*
*                                                            @ZA31128*/
@DL00186 DS    0H                                                  0187
*                         IF PFTONAVQ='1'B THEN/* AVAILABLE ?      0187
*                                                            @ZA31128*/
*                                                                  0187
         TM    PFTONAVQ(PFTEPTR),B'10000000'                       0187
         BNO   @RF00187                                            0187
*                           /*****************************************/
*                           /*                                       */
*                           /* FRAME IS AVAILABLE. CALCULATE AND SAVE*/
*                           /* ITS OFFSET FROM THE HIGH END OF THE   */
*                           /* V=R AREA.                     @ZA31128*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  0188
*                           LVRADDIF=(PVTPFTP+PVTLVR)-PFTEPTR;/*   0188
*                                                            @ZA31128*/
         LH    @10,PVTLVR(,PVTPTR)                                 0188
         N     @10,@CF02300                                        0188
         AL    @10,PVTPFTP(,PVTPTR)                                0188
         SLR   @10,PFTEPTR                                         0188
         STH   @10,LVRADDIF(,PVTPTR)                               0188
*                         ELSE      /* NOT AVAILABLE         @ZA31128*/
*                           PFTEPTR=PFTEPTR-LENGTH(PFTE);/* NEXT PFTE
*                                                            @ZA31128*/
         B     @RC00187                                            0189
@RF00187 SL    PFTEPTR,@CF00060                                    0189
*                       END;        /*                       @ZA31128*/
*                                                                  0190
@RC00187 DS    0H                                                  0190
@DE00186 CR    PFTEPTR,PTR1                                        0190
         BE    @DC00186                                            0190
         CLC   LVRADDIF(2,PVTPTR),NOFRAME                          0190
         BE    @DL00186                                            0190
@DC00186 DS    0H                                                  0191
*                       /*********************************************/
*                       /*                                           */
*                       /* NOW SCAN FROM LOW END OF V=R AREA UNTIL   */
*                       /* THE FRAME FOUND DURING THE TOP DOWN SCAN  */
*                       /* IS REACHED, OR AN AVAILABLE V=R FRAME IS  */
*                       /* FOUND.                            @ZA31128*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0191
*                       RFY                                        0191
*                         PFTE BASED(PTR1);/*                @ZA31128*/
*                       DO UNTIL(PTR1>PFTEPTR)×(FVRADDIF^=NOFRAME);/*
*                                                            @ZA31128*/
@DL00192 DS    0H                                                  0193
*                         IF PFTONAVQ='1'B THEN/* AVAILABLE ?      0193
*                                                            @ZA31128*/
*                                                                  0193
         TM    PFTONAVQ(PTR1),B'10000000'                          0193
         BNO   @RF00193                                            0193
*                           /*****************************************/
*                           /*                                       */
*                           /* FRAME IS AVAILABLE. CALCULATE AND SAVE*/
*                           /* ITS OFFSET FROM THE LOW END OF THE V=R*/
*                           /* AREA.                         @ZA31128*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  0194
*                           FVRADDIF=PTR1-(PVTPFTP+PVTFVR);/*      0194
*                                                            @ZA31128*/
         LH    @10,PVTFVR(,PVTPTR)                                 0194
         N     @10,@CF02300                                        0194
         AL    @10,PVTPFTP(,PVTPTR)                                0194
         LCR   @10,@10                                             0194
         ALR   @10,PTR1                                            0194
         STH   @10,FVRADDIF(,PVTPTR)                               0194
*                         ELSE      /* NOT AVAILABLE         @ZA31128*/
*                           PTR1=PTR1+LENGTH(PFTE);/* NEXT PFTE    0195
*                                                            @ZA31128*/
         B     @RC00193                                            0195
@RF00193 AL    PTR1,@CF00060                                       0195
*                       END;        /*                       @ZA31128*/
@RC00193 DS    0H                                                  0196
@DE00192 CR    PTR1,PFTEPTR                                        0196
         BH    @DC00192                                            0196
         CLC   FVRADDIF(2,PVTPTR),NOFRAME                          0196
         BE    @DL00192                                            0196
@DC00192 DS    0H                                                  0197
*                       RFY                                        0197
*                         PFTE BASED(PFTEPTR);/*             @ZA31128*/
*                                                                  0197
*                       /*********************************************/
*                       /*                                           */
*                       /* SCAN IS COMPLETE. IF ADRDIFFS STILL EQUALS*/
*                       /* ITS INITIAL VALUE OF F'S, THEN NO         */
*                       /* AVAILABLE FRAME WAS FOUND IN THE V=R AREA.*/
*                       /* THIS IS AN ERROR.                 @ZA31128*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0198
*                       IF ADRDIFFS=MXVROFF THEN/* ANY FRAME FOUND ?
*                                                            @ZA31128*/
         CLC   ADRDIFFS(4,PVTPTR),MXVROFF                          0198
         BE    @RT00198                                            0198
*                         GOTO DEFERXIT;/* NO, SHOULD NOT OCCUR    0199
*                                                            @ZA31128*/
*                                                                  0199
*                       /*********************************************/
*                       /*                                           */
*                       /* DETERMINE WHICH DIFFERENCE IS LESS AND SET*/
*                       /* THE RBN AND PFTEPTR ACCORDINGLY. INDICATE */
*                       /* THAT THE V=R AREA IS POLLUTED SINCE A     */
*                       /* REQUEST FOR A PREFERRED FRAME HAS BEEN    */
*                       /* SATISFIED WITH A V=R FRAME.       @ZA31128*/
*                       /*                                           */
*                       /*********************************************/
*                                                                  0200
*                       IF FVRADDIF<LVRADDIF THEN/*          @ZA31128*/
         CLC   FVRADDIF(2,PVTPTR),LVRADDIF(PVTPTR)                 0200
         BNL   @RF00200                                            0200
*                         PFTEPTR=PTR1;/*                    @ZA31128*/
         LR    PFTEPTR,PTR1                                        0201
*                       RBN=PFTEPTR-PVTPFTP;/*               @ZA31128*/
@RF00200 LR    @10,PFTEPTR                                         0202
         SL    @10,PVTPFTP(,PVTPTR)                                0202
         STCM  @10,3,RBN(PVTPTR)                                   0202
*                       PFTVRPLT='1'B;/* V=R POLLUTED        @ZA31128*/
         OI    PFTVRPLT(PFTEPTR),B'00010000'                       0203
*                     END;          /* END V=R PROCESSING    @ZA16816*/
*                 END;              /*                       @ZA16816*/
@RC00174 DS    0H                                                  0206
*             END;                  /* END NON-PREFERRED SEARCH    0206
*                                                            @ZA16816*/
@RC00161 DS    0H                                                  0207
*         END;                      /* END PREFERRED FIX PROCESSING
*                                                            @ZA16816*/
@RC00153 DS    0H                                                  0208
*SQATEST:                                                          0208
*       ;                           /* CHECK THE REQUEST FOR LSQA  0208
*                                      PAGE SWAP-IN                  */
@RF00149 DS    0H                                                  0208
SQATEST  DS    0H                                                  0209
*       IF PCBSWPLS='1'B THEN                                      0209
         TM    PCBSWPLS(PCBPTR),B'00010000'                        0209
         BNO   @RF00209                                            0209
*         DO;                                                      0210
*                                                                  0210
*           /*********************************************************/
*           /*                                                       */
*           /* PCB IS FOR SWAP-IN OF AN LSQA PAGE                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0211
*           TOQUEUE#=PFTLSQAN;      /* ENQUEUE IT ON THE LSQA QUEUE  */
         MVI   TOQUEUE#(PVTPTR),X'84'                              0211
*           PFTLSQA='1'B;           /* AND SET THE LSQA INDICATOR    */
         OI    PFTLSQA(PFTEPTR),B'00100000'                        0212
*           GOTO ASIDASGN;          /* THEN GO ADD FRAME TO THE    0213
*                                      ADDRESS SPACE         @YA01572*/
         B     ASIDASGN                                            0213
*         END;                                                     0214
*       ELSE                                                       0215
*         ;                                                        0215
@RF00209 DS    0H                                                  0216
*                                                                  0216
*       /*************************************************************/
*       /*                                                           */
*       /* THE FRAME THAT WAS SELECTED IS NOW TRANSFERRED FROM THE   */
*       /* AVAILABLE FRAME QUEUE TO EITHER THE LOCAL FRAME QUEUE OR  */
*       /* COMMON AREA FRAME QUEUE, DEPENDING ON WHETHER OR NOT THE  */
*       /* VIRTUAL ADDRESS IT REPRESENTS IS IN THE PRIVATE AREA OR   */
*       /* COMMON AREA, RESPECTIVELY.                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0216
*       IF PCBVBN>=PVTLCSA THEN                                    0216
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0216
         BL    @RF00216                                            0216
*         DO;                       /* THE PCB WAS FOR A COMMON AREA
*                                      PAGE, SET UP TO HAVE IT     0217
*                                      ENQUEUED ON THE COMMON AREA 0217
*                                      QUEUE                         */
*           PFTASID=COMMASID;       /* SET COMMON AREA 'ASID'        */
         MVC   PFTASID(2,PFTEPTR),COMMASID                         0218
*           TOQUEUE#=PFTCFQN;       /* TARGET QUEUE IS COMMON AREA 0219
*                                      FRAME QUEUE                   */
         MVI   TOQUEUE#(PVTPTR),X'08'                              0219
*         END;                                                     0220
*       ELSE                                                       0221
*         DO;                       /* THE PCB WAS FOR A PRIVATE AREA
*                                      PAGE, GET IT ENQUEUED ON THE
*                                      LOCAL FRAME QUEUE FOR THIS  0221
*                                      ADDRESS SPACE                 */
         B     @RC00216                                            0221
@RF00216 DS    0H                                                  0222
*           TOQUEUE#=PFTLFQN;       /* TARGET QUEUE IS THE LOCAL   0222
*                                      FRAME QUEUE                   */
         MVI   TOQUEUE#(PVTPTR),X'80'                              0222
*ASIDASGN:                                                         0223
*           ;                       /* ASSIGN THE FRAME      @YA01572*/
ASIDASGN DS    0H                                                  0224
*           PFTASID=ASCBASID;       /* ASSIGN THE FRAME TO THE     0224
*                                      ADDRESS SPACE                 */
         L     @10,ASCBPTR(,RSMHDPTR)                              0224
         LH    @10,ASCBASID(,@10)                                  0224
         N     @10,@CF02300                                        0224
         STH   @10,PFTASID(,PFTEPTR)                               0224
*         END;                                                     0225
*       RBNPARM=RBN;                /* SET UP PARMS FOR IEAVPFTE TO
*                                      DEQUEUE THE PFTE AND HAVE IT
*                                      ADDED TO THE APPROPRIATE QUEUE*/
@RC00216 MVC   RBNPARM(2,PVTPTR),RBN(PVTPTR)                       0226
*       RFY                                                        0227
*        (R0,                                                      0227
*         R1) RSTD;                                                0227
*       R0=PARMPFTE;                                               0228
         L     R0,PARMPFTE(,PVTPTR)                                0228
*       R1=ASCBPTR;                                                0229
         L     R1,ASCBPTR(,RSMHDPTR)                               0229
*       IF PCBSWPS1='1'B THEN       /* IF STG I SWAP-IN      @ZA16816*/
         TM    PCBSWPS1(PCBPTR),B'00100000'                        0230
         BNO   @RF00230                                            0230
*         DO;                       /* SWITCH RSMHDPTR       @ZA16816*/
*           RSMHDPTR=PSAAOLD->ASCBRSM;/* TO CURRENT FOR      @ZA16816*/
         L     @10,PSAAOLD                                         0232
         L     RSMHDPTR,ASCBRSM(,@10)                              0232
*           CALL IEAVPFTE;          /* PFTE DEQ AND ENQ      @ZA16816*/
         L     @15,PVTPFTE(,PVTPTR)                                0233
         BALR  @14,@15                                             0233
*           RSMHDPTR=PCBRASCB->ASCBRSM;/* RESTORE RSMHDPTR   @ZA16816*/
         L     @10,PCBRPTR(,PCBPTR)                                0234
         L     @10,PCBRASCB(,@10)                                  0234
         L     RSMHDPTR,ASCBRSM(,@10)                              0234
*         END;                      /*                       @ZA16816*/
*       ELSE                        /* IF NOT STG I          @ZA16816*/
*         CALL IEAVPFTE;            /* RSMHD PTR O.K.        @ZA16816*/
         B     @RC00230                                            0236
@RF00230 L     @15,PVTPFTE(,PVTPTR)                                0236
         BALR  @14,@15                                             0236
*       RFY                                                        0237
*         R0 UNRSTD;                                               0237
@RC00230 DS    0H                                                  0238
*       PCBRBN=RBN;                 /* ASSIGN THE RBN OF THE FRAME TO
*                                      THE INPUT PCB                 */
         MVC   PCBRBN(2,PCBPTR),RBN(PVTPTR)                        0238
*       PFTFXCT=PCBFXC;             /* SET THE FRAME FIX COUNT FROM
*                                      THE INPUT PCB'S FIX COUNT     */
         SLR   @10,@10                                             0239
         IC    @10,PCBFXC(,PCBPTR)                                 0239
         STH   @10,PFTFXCT(,PFTEPTR)                               0239
*       PTR1=PCBRLPA;               /* GET THE RELATED QUEUE POINTER */
         L     PTR1,PCBRLPA-1(,PCBPTR)                             0240
         LA    PTR1,0(,PTR1)                                       0240
*       DO WHILE PTR1^=0;           /* SCAN THE RELATED QUEUE AND  0241
*                                      SUMMARIZE THE FIX COUNTS OF 0241
*                                      ALL THE PCBS (IF ANY).        */
         B     @DE00241                                            0241
@DL00241 DS    0H                                                  0242
*         PFTFXCT=PFTFXCT+PTR1->PCBFXC;                            0242
         SLR   @10,@10                                             0242
         IC    @10,PCBFXC(,PTR1)                                   0242
         AH    @10,PFTFXCT(,PFTEPTR)                               0242
         STH   @10,PFTFXCT(,PFTEPTR)                               0242
*         PTR1->PCBRBN=PCBRBN;      /* ASSIGN THE FRAME TO ALL     0243
*                                      RELATED PCBS          @YA01572*/
         MVC   PCBRBN(2,PTR1),PCBRBN(PCBPTR)                       0243
*         PTR1=PTR1->PCBRLPA;                                      0244
         L     @10,PCBRLPA-1(,PTR1)                                0244
         LA    @10,0(,@10)                                         0244
         LR    PTR1,@10                                            0244
*       END;                                                       0245
@DE00241 SLR   @10,@10                                             0245
         CR    PTR1,@10                                            0245
         BNE   @DL00241                                            0245
*       IF PFTFXCT^=0×PFTLSQA='1'B THEN/* HAS THIS FRAME BEEN FIXED
*                                      OR IS THIS AN LSQA FRAME    0246
*                                                            @YA01572*/
         CH    @10,PFTFXCT(,PFTEPTR)                               0246
         BNE   @RT00246                                            0246
         TM    PFTLSQA(PFTEPTR),B'00100000'                        0246
         BNO   @RF00246                                            0246
@RT00246 DS    0H                                                  0247
*         DO;                       /* YES, UPDATE FIX COUNTERS    0247
*                                                            @YA01572*/
*           PVTCNTFX=PVTCNTFX+1;    /* INCREMENT THE GLOBAL COUNT  0248
*                                                            @YA01572*/
         LA    @10,1                                               0248
         LH    @06,PVTCNTFX(,PVTPTR)                               0248
         ALR   @06,@10                                             0248
         STH   @06,PVTCNTFX(,PVTPTR)                               0248
*           IF PCBVBN>=PVTLCSA THEN /* PCB FOR COMMON AREA PAGE    0249
*                                                            @YA01572*/
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0249
         BL    @RF00249                                            0249
*             PVTCOMFX=PVTCOMFX+1;  /* INCREMENT COMMON AREA COUNT 0250
*                                                            @YA01572*/
         AH    @10,PVTCOMFX(,PVTPTR)                               0250
         STH   @10,PVTCOMFX(,PVTPTR)                               0250
*           ELSE                                                   0251
*             RSMCNTFX=RSMCNTFX+1;  /* INCREMENT LOCAL COUNT @YA01572*/
         B     @RC00249                                            0251
@RF00249 LA    @10,1                                               0251
         AH    @10,RSMCNTFX(,RSMHDPTR)                             0251
         STH   @10,RSMCNTFX(,RSMHDPTR)                             0251
*           IF PVTCNTFX=PVTMAXFX THEN/* HAS THE FIX COUNT THRESHOLD
*                                      BEEN REACHED                  */
@RC00249 CLC   PVTCNTFX(2,PVTPTR),PVTMAXFX(PVTPTR)                 0252
         BNE   @RF00252                                            0252
*             DO;                   /* YES, NOTIFY SRM       @YA01572*/
*               RFY                                                0254
*                (R1,                                              0254
*                 R13) RSTD;                                       0254
*               R1=MAXFIXED;        /* GET CODE INDICATING FIX     0255
*                                      THRESHOLD HAS BEEN REACHED  0255
*                                                            @YA01572*/
         LA    R1,4                                                0255
*               R13=ADDR(PVTSAVE);  /* GET SRM A SAVE AREA   @YA01572*/
         LA    R13,PVTSAVE(,PVTPTR)                                0256
*               GENERATE REFS(CVT,CVTPTR,CVTOPTE) SETS(R0,R14,R15);
                SYSEVENT AVQLOW,ENTRY=BRANCH               @YA01572
*             END;                                                 0258
*         END;                      /* END OF PROCESSING FOR INITIAL
*                                      FIX OF FRAME                  */
*                                                                  0259
@RF00252 DS    0H                                                  0260
*       /*************************************************************/
*       /*                                                           */
*       /* COMPLETE INITIALIZATION OF THE FRAME --- FILL IN THE FRAME*/
*       /* TABLE FIELDS INDICATING ALLOCATION OF THE FRAME AND MAKE  */
*       /* SURE VIO FLAG IS OFF                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0260
*       PFTIRRG='0'B;                                              0260
@RF00246 NI    PFTIRRG(PFTEPTR),B'11101111'                        0260
*       PFTVBN=PCBVBN;                                             0261
         MVC   PFTVBN(2,PFTEPTR),PCBVBN(PCBPTR)                    0261
*     END;                                                         0262
*   ELSE                                                           0263
*     DO;                           /* ALLOCATION WAS DEFERRED, NO 0263
*                                      FRAME COULD BE OBTAINED WHICH
*                                      WOULD SATISFY THE CONSTRAINTS
*                                      OR THE QUEUE IS EMPTY.        */
         B     @RC00132                                            0263
@RF00132 DS    0H                                                  0264
*DEFERXIT:                                                         0264
*       IF ISSUESE3='0'B THEN       /* HAS SYSEVENT 3 BEEN ISSUED? 0264
*                                                            @YM07669*/
DEFERXIT TM    ISSUESE3(PVTPTR),B'00100000'                        0264
         BNZ   @RF00264                                            0264
*         DO;                       /* ISSUE SYSEVENT IF NOT @YM07669*/
*           RFY                                                    0266
*            (R1,                                                  0266
*             R13) RSTD;                                           0266
*           ISSUESE3='1'B;          /* TURN ON FLAG          @YM07669*/
         OI    ISSUESE3(PVTPTR),B'00100000'                        0267
*           R1=SYSLOW;              /*                       @YM07669*/
         LA    R1,3                                                0268
*           R13=ADDR(PVTSAVE);      /* SAVE AREA FOR SRM TO USE    0269
*                                                            @YM07669*/
         LA    R13,PVTSAVE(,PVTPTR)                                0269
*           GENERATE REFS(CVT,CVTPTR,CVTOPTE);                     0270
*                                       /*CAUSE SRM TO STEAL @YM07669*
         SYSEVENT  AVQLOW,ENTRY=BRANCH
*         END;                                                     0271
*       RFY                                                        0272
*        (R1,                                                      0272
*         R13) UNRSTD;                                             0272
@RF00264 DS    0H                                                  0273
*TESTDFSP:                                                         0273
*       ;                           /*                       @YA01572*/
TESTDFSP DS    0H                                                  0274
*       IF PCBSWPS1='0'B            /* DEFERRED ALLOC STAGE1 SWAPIN  */
*         THEN                                                     0274
         TM    PCBSWPS1(PCBPTR),B'00100000'                        0274
         BNZ   @RF00274                                            0274
*         DO;                       /* NOT STAGE ONE OF SWAP-IN      */
*                                                                  0275
*           /*********************************************************/
*           /*                                                       */
*           /* THE ALLOCATION OF A FRAME WAS DENIED, PUT THE PCB AND */
*           /* ANY RELATED PCBS ON THE DEFER QUEUE.                  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0276
*GFAPUT:                                                           0276
*           INTRETCD=4;             /* SET UP ASYNCHRONOUS PROCESSING
*                                      RETURN CODE                   */
GFAPUT   MVI   INTRETCD(PVTPTR),X'04'                              0276
*           IF PCBPEX='1'B THEN                                    0277
         TM    PCBPEX(PCBPTR),B'01000000'                          0277
         BNO   @RF00277                                            0277
*             DO;                   /* PAGING EXCEPTION              */
*               IF PCBRESET='0'B THEN                              0279
         TM    PCBRESET(PCBPTR),B'00010000'                        0279
         BNZ   @RF00279                                            0279
*                 DO;               /* RESET IS NOT INDICATED        */
*                   RFY                                            0281
*                    (R13,                                         0281
*                     R4,                                          0281
*                     R5,                                          0281
*                     R6) RSTD;                                    0281
*                   R13=ADDR(PVTSAVE);/* SAVE AREA FOR SUSPEND       */
         LA    R13,PVTSAVE(,PVTPTR)                                0282
*                   CALL IEAVSUSP;  /* SUSPEND THE FAULTER           */
         L     @15,@CV02161                                        0283
         BALR  @14,@15                                             0283
*                   RCAPARM1=PCBPTR;/* SAVE SUSPENDED PCB ADDRESS FOR
*                                      RECOVERY PURPUSES.            */
         L     @10,RCAPTR(,PVTPTR)                                 0284
         ST    PCBPTR,RCAPARM1(,@10)                               0284
*                   PCBRESET='1'B;  /* INDICATE THAT THE OWNER OF  0285
*                                      THIS PCB WAS SUSPENDED        */
         OI    PCBRESET(PCBPTR),B'00010000'                        0285
*                   RFY                                            0286
*                     R13 UNRSTD;                                  0286
*                   IF R5=0 THEN                                   0287
         LTR   R5,R5                                               0287
         BNZ   @RF00287                                            0287
*                     DO;           /* FAULTER WAS RUNNING UNDER AN
*                                      SRB                           */
*                       PCBSRB=R4;  /* SAVE THE SRB ADDRESS          */
         ST    R4,PCBSRB(,PCBPTR)                                  0289
*                       PCBSRBMD='1'B;/* INDICATE SRB MODE           */
         OI    PCBSRBMD(PCBPTR),B'00100000'                        0290
*                       PCBRTPA=R5; /* STORE A NULL TCB ADDRESS      */
         STCM  R5,7,PCBRTPA(PCBPTR)                                0291
*                     END;                                         0292
*                   ELSE                                           0293
*                     DO;           /* FAULTER WAS RUNNING UNDER A 0293
*                                      TCB                           */
         B     @RC00287                                            0293
@RF00287 DS    0H                                                  0294
*                       PCBRTPA=R4; /* SAVE THE TCB ADDRESS          */
         STCM  R4,7,PCBRTPA(PCBPTR)                                0294
*                       PCBRB=R5;   /* SAVE RB ADDR          @Z40WPYC*/
         ST    R5,PCBRB(,PCBPTR)                                   0295
*                     END;                                         0296
*                   IF R6=4 THEN                                   0297
@RC00287 C     R6,@CF00085                                         0297
         BNE   @RF00297                                            0297
*                     PCBLLHLD='1'B;/* IF A LOCKED PAGE-FAULT, SET 0298
*                                      THE LOCK HELD FLAG            */
         OI    PCBLLHLD(PCBPTR),B'00010000'                        0298
*                   ELSE                                           0299
*                     ;                                            0299
@RF00297 DS    0H                                                  0300
*                   RFY                                            0300
*                    (R4,                                          0300
*                     R5,                                          0300
*                     R6) UNRSTD;                                  0300
*                 END;                                             0301
*               ELSE                                               0302
*                 ;                                                0302
@RF00279 DS    0H                                                  0303
*             END;                                                 0303
*           ELSE                                                   0304
*             ;                                                    0304
@RF00277 DS    0H                                                  0305
*           RFY                                                    0305
*             R1 RSTD;                                             0305
*           R1=PCBPTR;              /* ADDRESS OF THE PCB FOR PUTGFAD*/
         LR    R1,PCBPTR                                           0306
*           CALL PUTGFAD;           /* MOVE THE PCB TO THE GFA DEFER
*                                      QUEUE                         */
         BAL   @14,PUTGFAD                                         0307
*           RFY                                                    0308
*             R1 UNRSTD;                                           0308
*           GOTO NXTPCB;            /* AND GO GET THE NEXT INPUT PCB */
         B     NXTPCB                                              0309
*         END;                                                     0310
*       ELSE                                                       0311
*         DO;                                                      0311
*                                                                  0311
@RF00274 DS    0H                                                  0312
*           /*********************************************************/
*           /*                                                       */
*           /* ..... SWAP-IN STAGE 1 HAS FAILED...THE DEFER FIX      */
*           /* THRESHOLD HAS BEEN REACHED;....OR A FRAME COULD NOT BE*/
*           /* ALLOCATED, BACK OUT ALL FRAMES ALLOCATED SO FAR, AND  */
*           /* TERMINATE ALL PAGE-INS STARTED. NOTE THAT THE STRING  */
*           /* OF PCBS FROM IEAVSWIN CONTAINS ONLY STAGE1 SWAPIN     */
*           /* PCBS.                                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0312
*           INTRETCD=8;             /* STAGE ONE FAILED RETURN CODE  */
         MVI   INTRETCD(PVTPTR),X'08'                              0312
*           ROOTPCBP=PCBRTPA;       /* SAVE THE ROOT PCB ADDRESS     */
         L     @10,PCBRTPA-1(,PCBPTR)                              0313
         LA    @10,0(,@10)                                         0313
         ST    @10,ROOTPCBP(,PVTPTR)                               0313
*           PCBRPB='1'B;            /* SET THE FREE ROOT FLAG IN THE
*                                      ROOT PCB                      */
*           PCBRETRY='1'B;          /* SET THE RETRY FLAG IN THE ROOT
*                                      PCB                           */
         L     @10,PCBRPTR(,PCBPTR)                                0315
         OI    PCBRPB(@10),B'01100000'                             0315
*           PCBFQPA=NEXTPCBP;       /* RESTORE THE PCB BEING       0316
*                                      PROCESSED TO THE FRONT OF THE
*                                      CHAIN OF PCB'S THAT HAVE NOT
*                                      YET BEEN PROCESSED            */
*                                                                  0316
         MVC   PCBFQPA(3,PCBPTR),NEXTPCBP+1(PVTPTR)                0316
*           /*********************************************************/
*           /*                                                       */
*           /* IF THERE ARE ANY RELATED PCBS, RETURN THEM TO THE     */
*           /* DEFER QUEUE. ONLY THE PCB BEING PROCESSED CAN HAVE    */
*           /* RELATED PCB'S.                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0317
*           IF PCBRLPA^=0 THEN                                     0317
         L     @10,PCBRLPA-1(,PCBPTR)                              0317
         LA    @10,0(,@10)                                         0317
         LTR   @10,@10                                             0317
         BZ    @RF00317                                            0317
*             DO;                                                  0318
*               RFY                                                0319
*                 R1 RSTD;                                         0319
*               R1=PCBRLPA;         /* ADDRESS OF RELATED PCB FOR  0320
*                                      PUTGFAD                       */
         LR    R1,@10                                              0320
*               CALL PUTGFAD;       /* PUT RELATED PCBS ON THE DEFER
*                                      QUEUE                         */
         BAL   @14,PUTGFAD                                         0321
*               RFY                                                0322
*                 R1 UNRSTD;                                       0322
*             END;                                                 0323
*           ELSE                                                   0324
*             ;                                                    0324
*                                                                  0324
@RF00317 DS    0H                                                  0325
*           /*********************************************************/
*           /*                                                       */
*           /* PUT UNPROCESSED STAGE 1 PCB'S ON THE PCBRWRK3/PCBRWRK4*/
*           /* QUEUE FOR THE SWAP-IN ROOT EXIT TO PROCESS.           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0325
*           RFY                                                    0325
*             PCBR BASED(ROOTPCBP); /*                       @ZA08771*/
*           PCBRWRK3=PCBPTR;        /* POINT FAILURE QUEUE HEADER TO
*                                      FIRST STAGE 1 PCB     @ZA08771*/
         L     @10,ROOTPCBP(,PVTPTR)                               0326
         ST    PCBPTR,PCBRWRK3(,@10)                               0326
*           RFY                                                    0327
*             R1 RSTD;              /*                       @ZA08771*/
*           DO WHILE PCBPTR^=0&PCBSWPS1='1'B;/*              @ZA08771*/
         B     @DE00328                                            0328
@DL00328 DS    0H                                                  0329
*             PCBRCNT=PCBRCNT-1;    /* REDUCE THE ROOT COMPLETION  0329
*                                      COUNT                         */
         L     @10,ROOTPCBP(,PVTPTR)                               0329
         LH    @06,PCBRCNT(,@10)                                   0329
         BCTR  @06,0                                               0329
         STH   @06,PCBRCNT(,@10)                                   0329
*             R1=PCBPTR;            /* SAVE POINTER TO LAST STAGE 1
*                                      PCB                   @ZA08771*/
         LR    R1,PCBPTR                                           0330
*             PCBPTR=PCBFQPA;       /* GET THE NEXT PCB IN THE CHAIN */
         L     @10,PCBFQPA-1(,PCBPTR)                              0331
         LA    @10,0(,@10)                                         0331
         LR    PCBPTR,@10                                          0331
*           END;                    /*                       @ZA08771*/
*                                                                  0332
@DE00328 LTR   PCBPTR,PCBPTR                                       0332
         BZ    @DC00328                                            0332
         TM    PCBSWPS1(PCBPTR),B'00100000'                        0332
         BO    @DL00328                                            0332
@DC00328 DS    0H                                                  0333
*           /*********************************************************/
*           /*                                                       */
*           /* AT THIS POINT, R1 CONTAINS THE ADDRESS OF THE LAST    */
*           /* STAGE 1, AND PCBPTR CONTAINS 0 (NO STAGE 2,S).        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0333
*           PCBRWRK4=R1;            /* POINT FAILURE QUEUE HEADER TO
*                                      LAST STAGE 1 PCB      @ZA08771*/
         L     @10,ROOTPCBP(,PVTPTR)                               0333
         ST    R1,PCBRWRK4(,@10)                                   0333
*           RFY                                                    0334
*             R1 UNRSTD;            /*                       @ZA08771*/
*           PCBRWRK3->PCBBQPA=0;    /* ZERO BKWD POINTER OF FIRST  0335
*                                      FAILED STAGE 1 PCB    @ZA08771*/
         SLR   @06,@06                                             0335
         L     @10,PCBRWRK3(,@10)                                  0335
         ST    @06,PCBBQPA(,@10)                                   0335
*           PCBRWRK4->PCBFQPA=0;    /* ZERO FWD POINTER OF LAST    0336
*                                      FAILED STAGE 1 PCB    @ZA08771*/
         L     @10,ROOTPCBP(,PVTPTR)                               0336
         L     @10,PCBRWRK4(,@10)                                  0336
         STCM  @06,7,PCBFQPA(@10)                                  0336
*           RFY                                                    0337
*            (R0,                                                  0337
*             R1) UNRSTD;                                          0337
*AIALOOP:                                                          0338
*           ;                                                      0338
*                                                                  0338
AIALOOP  DS    0H                                                  0339
*           /*********************************************************/
*           /*                                                       */
*           /* THIS ROUTINE PROCESSES THE PCBS ASSOCIATED WITH ANY   */
*           /* ACCUMULATED I/O IN SITUATIONS WHERE STAGE ONE OF      */
*           /* SWAP-IN IS ABORTED FOR EITHER LACK OF AVAILABLE FRAMES*/
*           /* OR WHEN THE AUXILIARY STORAGE MANAGER FINDS THAT IT IS*/
*           /* INCAPABLE OF STARTING ONE OF THE PAGE-IN OPERATIONS   */
*           /* FOR SWAP-IN                                           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0339
*           RFY                                                    0339
*             PCBR BASED(ROOTPCBP);                                0339
*           AIAPTR=IOHOLDQF;        /* GET THE ADDRESS OF THE FIRST
*                                      AIA ON I/O HOLD QUEUE @Z40WPYC*/
         L     @10,IOHOLDQF(,PVTPTR)                               0340
         ST    @10,AIAPTR(,PVTPTR)                                 0340
*           RFY                                                    0341
*            (R0,                                                  0341
*             R1) RSTD;                                            0341
*           DO WHILE AIAPTR^=0;                                    0342
         B     @DE00342                                            0342
@DL00342 DS    0H                                                  0343
*             PCBPTR=AIAPTR-(LENGTH(PCB)-LENGTH(PCBAIA));/* GET THE
*                                      ADDRESS OF THE PCB ASSOCIATED
*                                      WITH THIS AIA                 */
         L     PCBPTR,AIAPTR(,PVTPTR)                              0343
         SL    PCBPTR,@CF02288                                     0343
*             TOQUEUE#=PFTAFQN;     /* THE FRAME ALLOCATED FOR THIS
*                                      PCB MUST BE MADE AVAILABLE  0344
*                                      (DEALLOCATED)                 */
         MVI   TOQUEUE#(PVTPTR),X'00'                              0344
*             RBNPARM=PCBRBN;                                      0345
         MVC   RBNPARM(2,PVTPTR),PCBRBN(PCBPTR)                    0345
*             R0=PARMPFTE;                                         0346
         L     R0,PARMPFTE(,PVTPTR)                                0346
*             CALL IEAVPFTE;        /* RETURN THE ALLOCATED FRAME TO
*                                      THE AVAILABLE FRAME QUEUE     */
         L     @15,PVTPFTE(,PVTPTR)                                0347
         BALR  @14,@15                                             0347
*             IF PCBVBN>=PVTLCSA THEN/* FOR COMMON AREA FIXES,     0348
*                                      PREVENT RECLAIM OF THE FREED
*                                      FRAME                         */
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0348
         BL    @RF00348                                            0348
*               DO;                                                0349
*                 PVTCOMFX=PVTCOMFX-1;/* DECREMENT COMMON AREA COUNT
*                                                            @YA01572*/
         LH    @10,PVTCOMFX(,PVTPTR)                               0350
         BCTR  @10,0                                               0350
         STH   @10,PVTCOMFX(,PVTPTR)                               0350
*                 PGTRSA=PGTPAMB+PGTPVMB;/* ZERO THE PGTE            */
         L     @10,PTEPTR(,PCBPTR)                                 0351
         MVC   PGTRSA(2,@10),@CH00032                              0351
*               END;                                               0352
*             ELSE                                                 0353
*               RSMCNTFX=RSMCNTFX-1;/* OTHERWISE DECREMENT LOCAL   0353
*                                      COUNT                 @YA01572*/
         B     @RC00348                                            0353
@RF00348 LH    @10,RSMCNTFX(,RSMHDPTR)                             0353
         BCTR  @10,0                                               0353
         STH   @10,RSMCNTFX(,RSMHDPTR)                             0353
*             PVTCNTFX=PVTCNTFX-1;  /* DECREMENT SYSTEM COUNT      0354
*                                                            @YA01572*/
@RC00348 LH    @10,PVTCNTFX(,PVTPTR)                               0354
         BCTR  @10,0                                               0354
         STH   @10,PVTCNTFX(,PVTPTR)                               0354
*             PCBRCNT=PCBRCNT-1;    /* DECREASE THE COMPLETION COUNT
*                                      FOR THE ROOT PCB              */
         L     @10,ROOTPCBP(,PVTPTR)                               0355
         LH    @06,PCBRCNT(,@10)                                   0355
         BCTR  @06,0                                               0355
         STH   @06,PCBRCNT(,@10)                                   0355
*             IF PCBRLPA^=0 THEN                                   0356
         L     @10,PCBRLPA-1(,PCBPTR)                              0356
         LA    @10,0(,@10)                                         0356
         LTR   @10,@10                                             0356
         BZ    @RF00356                                            0356
*               DO;                 /* IF ANY RELATED PCBS EXIST,    */
*                 R1=PCBRLPA;       /* ADDRESS OF RELATED QUEUE      */
         LR    R1,@10                                              0358
*                 CALL PUTGFAD;     /* MOVE RELATED PCBS TO THE DEFER
*                                      QUEUE                         */
         BAL   @14,PUTGFAD                                         0359
*               END;                                               0360
*             ELSE                                                 0361
*               ;                                                  0361
@RF00356 DS    0H                                                  0362
*             R0=PCBDEQN;           /* CODE TO DEQUEUE THE PCB.      */
         LA    R0,255                                              0362
*             R1=PCBPTR;            /* ADDRESS OF THE PCB            */
         LR    R1,PCBPTR                                           0363
*             CALL IEAVPCB;         /* DEQUEUE THE PCB               */
         L     @15,PVTPCB(,PVTPTR)                                 0364
         BALR  @14,@15                                             0364
*             RFY                                                  0365
*              (R0,                                                0365
*               R1) UNRSTD;                                        0365
*             IF PCBRWRK3=0 THEN                                   0366
         L     @10,ROOTPCBP(,PVTPTR)                               0366
         L     @06,PCBRWRK3(,@10)                                  0366
         LTR   @06,@06                                             0366
         BNZ   @RF00366                                            0366
*               DO;                 /* FIRST PCB IN ERROR            */
*                 PCBRWRK3=PCBPTR;  /* PLACE IT ON THE FAILURE       */
         ST    PCBPTR,PCBRWRK3(,@10)                               0368
*                 PCBRWRK4=PCBPTR;  /* QUEUE BY ITSELF               */
         ST    PCBPTR,PCBRWRK4(,@10)                               0369
*               END;                                               0370
*             ELSE                                                 0371
*               DO;                 /* A PRIOR PCB EXISTS ON THE   0371
*                                      ERROR QUEUE                   */
         B     @RC00366                                            0371
@RF00366 DS    0H                                                  0372
*                 PCBRWRK3->PCBBQPA=PCBPTR;/* BACK CHAIN TO NEW      */
         L     @10,ROOTPCBP(,PVTPTR)                               0372
         L     @06,PCBRWRK3(,@10)                                  0372
         ST    PCBPTR,PCBBQPA(,@06)                                0372
*                 PCBFQPA=PCBRWRK3; /* FORWARD CHAIN OLD FROM NEW    */
         STCM  @06,7,PCBFQPA(PCBPTR)                               0373
*                 PCBRWRK3=PCBPTR;  /* ADD NEW AT TOP OF QUEUE       */
         ST    PCBPTR,PCBRWRK3(,@10)                               0374
*               END;                                               0375
*             AIAPTR=AIANXAIA;      /* GET NEXT AIA ON THE HOLD QUEUE*/
@RC00366 L     @10,AIANXAIA(,PCBPTR)                               0376
         ST    @10,AIAPTR(,PVTPTR)                                 0376
*           END;                                                   0377
@DE00342 L     @10,AIAPTR(,PVTPTR)                                 0377
         LTR   @10,@10                                             0377
         BNZ   @DL00342                                            0377
*BACKOTND:                                                         0378
*           ;                       /* END OF FAILING AIA CHAIN      */
BACKOTND DS    0H                                                  0379
*           IF PCBRCNT=0 THEN                                      0379
         L     @10,ROOTPCBP(,PVTPTR)                               0379
         LH    @06,PCBRCNT(,@10)                                   0379
         LTR   @06,@06                                             0379
         BNZ   @RF00379                                            0379
*             DO;                   /* WHEN ALL PCBS HAVE BEEN     0380
*                                      ACCOUNTED FOR,                */
*               RFY                                                0381
*                (R1,                                              0381
*                 R15) RSTD;                                       0381
*               R15=PCBRGOTO;       /* GO TO THE ROOT EXIT ROUTINE 0382
*                                      INDICATED                     */
         L     R15,PCBRGOTO(,@10)                                  0382
*               R1=ADDR(PCBR);      /* ROOT PCB ADDR IN R1           */
         LR    R1,@10                                              0383
*               CALL ROOTEXIT;      /* CALL THE ROOT EXIT ROUTINE    */
         BALR  @14,@15                                             0384
*               RFY                                                0385
*                (R1,                                              0385
*                 R15) UNRSTD;                                     0385
*               RFY                                                0386
*                 PCBR BASED(PCBRPTR);                             0386
*             END;                                                 0387
*           ELSE                                                   0388
*             ;                                                    0388
@RF00379 DS    0H                                                  0389
*           GOTO GFAEXIT;           /* AND RETURN TO GFA'S CALLER    */
         B     GFAEXIT                                             0389
*         END;                                                     0390
*     END;                                                         0391
*   DO;                                                            0392
*                                                                  0392
@RC00132 DS    0H                                                  0393
*     /***************************************************************/
*     /*                                                             */
*     /* ALLOCATION SUCCEEDED, A FRAME HAS BEEN ASSIGNED FOR THE     */
*     /* REQUEST, SUBSEQUENT PROCESSING IS DETERMINED BY THE TYPE OF */
*     /* REQUEST.                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0393
*     IF PCBSWPIN='0'B THEN                                        0393
         TM    PCBSWPIN(PCBPTR),B'01000000'                        0393
         BNZ   @RF00393                                            0393
*       DO;                         /* NOT A SWAP-IN REQUEST         */
*         IF XPTXAV='0'B×XPTPOINP='1'B THEN                        0395
         L     @10,XPTEPTR(,PCBPTR)                                0395
         TM    XPTXAV(@10),B'01000000'                             0395
         BZ    @RT00395                                            0395
         TM    XPTPOINP(@10),B'00100000'                           0395
         BNO   @RF00395                                            0395
@RT00395 DS    0H                                                  0396
*           DO;                     /* THIS IS A FIRST REFERENCE, THE
*                                      EXTERNAL PAGE IS NOT VALID, OR
*                                      THERE IS A PAGEOUT IN PROCESS
*                                      FOR A NON RECLAIMABLE FRAME 0396
*                                                            @Z40WPYC*/
*             RFY                                                  0397
*              (R0,                                                0397
*               R1,                                                0397
*               R14,                                               0397
*               R15) RSTD;                                         0397
*             R14=RBA;              /* REAL PAGE ADDRESS             */
         L     R14,RBA(,PVTPTR)                                    0398
*             R15=4096;             /* PAGE LENGTH FOR MVCL  @Z40WPYC*/
*                                                                  0399
         L     R15,@CF02220                                        0399
*             /*******************************************************/
*             /*                                                     */
*             /* DETERMINE IF A PAGEOUT IS IN PROCESS FOR A NON-     */
*             /* RECLAIMABLE FRAME. THIS CAN OCCUR IN 2 SITUATIONS:  */
*             /* IF THE FRAME HAS BEEN INTERCEPTED FOR V=R OR VARY   */
*             /* STOR AND A PAGEOUT IS IN PROCESS, OR THE REQUEST IS */
*             /* A LONG TERM FIX AND THE FRAME IS IN THE V=R AREA OR */
*             /* NON-PREFERRED AREA FOR A NON-SWAPPABLE ADDRESS SPACE*/
*             /* AND A PAGEOUT IS IN PROCESS. BOTH CASES WILL CAUSE  */
*             /* THE DATA IN THE OLD FRAME TO BE MOVED TO THE NEWLY  */
*             /* SELECTED FRAME.                             @Z40WPYC*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0400
*             IF XPTPOINP='1'B THEN /* IF PAGEOUT IN PROCESS, IT MUST
*                                      BE THE NO RECLAIM SITUATION 0400
*                                      SINCE IF NORMAL PAGEOUT THE 0400
*                                      THE FRAME WOULD HAVE BEEN   0400
*                                      RECLAIMED IMMEDIATELY.      0400
*                                                            @Z40WPYC*/
         L     @10,XPTEPTR(,PCBPTR)                                0400
         TM    XPTPOINP(@10),B'00100000'                           0400
         BNO   @RF00400                                            0400
*               DO;                 /* FRAME NOT RECLAIMABLE @Z40WPYC*/
*                 NORECPCB->PCBVBN=0;/* MAKE PCB NON-RECLAIMABLE   0402
*                                                            @Z40WPYC*/
         L     @06,NORECPCB(,PVTPTR)                               0402
         SLR   @05,@05                                             0402
         STH   @05,PCBVBN(,@06)                                    0402
*                 NORECPCB->AIAFRAUX='1'B;/* FREE AUX STOR   @Z40WPYC*/
         OI    AIAFRAUX(@06),B'10000000'                           0403
*                 XPTPOINP='0'B;    /* WHEN AIAFRAUX IS SET BY RSM 0404
*                                      FOR AN OUTPUT PCB, IT MUST  0404
*                                      ALSO ZERO XPTPOINP (CLEARED 0404
*                                      NORMALLY BY ASM EXCEPT WHEN 0404
*                                      AIAFRAUX IS SET).     @Z40WPYC*/
         NI    XPTPOINP(@10),B'11011111'                           0404
*                 XPTXAV='0'B;      /* AUX STORAGE DOES NOT EXIST  0405
*                                                            @Z40WPYC*/
*                                                                  0405
         NI    XPTXAV(@10),B'10111111'                             0405
*                 /***************************************************/
*                 /*                                                 */
*                 /* TURN ON THE CHANGE AND REFERENCE BITS IN THE    */
*                 /* XPTE COPY OF THE STORAGE PROTECT KEY. THE       */
*                 /* STORAGE KEYS OF THE NEW FRAME WILL BE SET FROM  */
*                 /* HERE. THE CHANGE BIT MUST BE ON IN THE NEW FRAME*/
*                 /* SO THAT THE DATA ON THE PAGE WILL EVENTUALLY BE */
*                 /* WRITTEN TO AUXILLARY STORAGE.           @ZA16863*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0406
*                 XPTPROT=XPTPROT×'06'X;/*                   @ZA16863*/
         OI    XPTPROT(@10),X'06'                                  0406
*                 R0=NORECPCB->PCBRBN*256;/* REAL STOR ADDR OF THE 0407
*                                      OLD PAGE              @Z40WPYC*/
         LH    R0,PCBRBN(,@06)                                     0407
         N     R0,@CF02300                                         0407
         SLA   R0,8                                                0407
*                 R1=R15;           /* LENGTH OF MOVE IS 4096      0408
*                                                            @Z40WPYC*/
         LR    R1,R15                                              0408
*                 IF PCBPREFR='1'B THEN/* IF MOVE DUE TO PREFERRED 0409
*                                      REQUEST               @ZA16816*/
         TM    PCBPREFR(PCBPTR),B'00001000'                        0409
         BNO   @RF00409                                            0409
*                   PVTMVCLC=PVTMVCLC+1;/* INCR MOVE PAGE COUNT    0410
*                                                            @ZA16816*/
         LA    @10,1                                               0410
         AL    @10,PVTMVCLC(,PVTPTR)                               0410
         ST    @10,PVTMVCLC(,PVTPTR)                               0410
*               END;                /* END NO RECLAIM        @Z40WPYC*/
*             ELSE                  /* THIS IS THE FIRST REF. CASE-
*                                      CLEAR NEW FRAME       @Z40WPYC*/
*               DO;                 /*                       @Z40WPYC*/
         B     @RC00400                                            0412
@RF00400 DS    0H                                                  0413
*                 R0=0;             /* SET PADDING CHAR FOR MVCL   0413
*                                                            @Z40WPYC*/
         SLR   R0,R0                                               0413
*                 R1=0;             /* SINCE FIRST OPERAND LESS THAN
*                                      FIRST, PROPAGATE ZEROES THRU
*                                      THE NEW PAGE          @Z40WPYC*/
         SLR   R1,R1                                               0414
*               END;                /* END FIRST REF CASE    @Z40WPYC*/
*                                                                  0415
*             /*******************************************************/
*             /*                                                     */
*             /* ADDRESS TRANSLATION IS TURNED OFF TO REFERENCE THE  */
*             /* NEW FRAME ABOUT TO BE ASSIGNED BECAUSE DATA CAN BE  */
*             /* LOST IN AN MP ENVIRONMENT IF THE PAGE IS CHANGED    */
*             /* WITH DAT ON SINCE THE PAGE MUST BE VALIDATED BEFORE */
*             /* IT CAN BE CHANGED                           @ZA30323*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0416
*             GENERATE CODE NOFLOWS REFS(TEMPSAVE);                0416
@RC00400 DS    0H                                                  0416
          STNSM TEMPSAVE(PVTPTR),X'FB'  TURN DAT OFF          @ZA30323
          MVCL  R14,R0                  CLEAR OR MOVE THE FRAME
          STOSM TEMPSAVE(PVTPTR),X'04'  TURN DAT ON           @ZA30323
*             R14=RBA;              /* RESTORE REAL PAGE ADDRESS     */
         L     R14,RBA(,PVTPTR)                                    0417
*             R1=XPTPROT;           /* PROTECTION KEY FROM THE     0418
*                                      EXTERNAL PAGE TABLE           */
*                                                                  0418
         L     @10,XPTEPTR(,PCBPTR)                                0418
         SLR   R1,R1                                               0418
         IC    R1,XPTPROT(,@10)                                    0418
*             /*******************************************************/
*             /*                                                     */
*             /* TURN OFF CHANGE AND REFERENCE BITS IN XPTE COPY OF  */
*             /* STORAGE PROTECT KEY IN CASE THEY WERE TURNED ON FOR */
*             /* THE CASE OF THE NON-RECLAIMABLE PCB.        @ZA16863*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0419
*             XPTPROT=XPTPROT&'F9'X;/*                       @ZA16863*/
         NI    XPTPROT(@10),X'F9'                                  0419
*             GEN(SSK   R1,R14);    /* SET THE PROTECT KEY FOR THE 0420
*                                      PAGE (BOTH HALVES)            */
         SSK   R1,R14
*             R15=R14+2048;         /* ADDR OF SECOND HALF OF PAGE   */
         LA    R15,2048                                            0421
         ALR   R15,R14                                             0421
*             GEN(SSK   R1,R15);                                   0422
         SSK   R1,R15
*             RFY                                                  0423
*              (R0,                                                0423
*               R14,                                               0423
*               R15) UNRSTD;                                       0423
*             PGTRSA=RBN+PGTPAMB;   /* ASSIGN THE REAL FRAME TO THE
*                                      VIRTUAL PAGE, AND SET THE   0424
*                                      ASSIGNED FLAG                 */
         L     @10,PTEPTR(,PCBPTR)                                 0424
         LA    @06,1                                               0424
         SLR   @00,@00                                             0424
         ICM   @00,3,RBN(PVTPTR)                                   0424
         ALR   @06,@00                                             0424
         STCM  @06,3,PGTRSA(@10)                                   0424
*             CALL PCBDISP;         /* DISPOSE OF THE INPUT PCB. THE
*                                      OUTPUT PCB AND FRAME WILL BE
*                                      FREED BY PIOP WHEN THE I/O  0425
*                                      COMPLETES.            @Z40WPYC*/
         BAL   @14,PCBDISP                                         0425
*             RFY                                                  0426
*               R1 UNRSTD;                                         0426
*             GOTO NXTPCB;          /* GO GET THE NEXT INPUT PCB     */
         B     NXTPCB                                              0427
*           END;                                                   0428
*         ELSE                                                     0429
*           ;                                                      0429
@RF00395 DS    0H                                                  0430
*       END;                                                       0430
*     ELSE                                                         0431
*       ;                           /* A FRAME WAS ALLOCATED FOR A 0431
*                                      SWAP-IN, OR A VALID EXTERNAL
*                                      PAGE EXISTS, PREPARE TO DO THE
*                                      I/O TO READ IN THE EXTERNAL 0431
*                                      PAGE                          */
@RF00393 DS    0H                                                  0432
*     PFTPCBSI='1'B;                /* INDICATE THAT A PCB EXISTS FOR
*                                      THE FRAME                     */
*                                                                  0432
         OI    PFTPCBSI(PFTEPTR),B'00001000'                       0432
*     /***************************************************************/
*     /*                                                             */
*     /* PREPARE FOR PAGE-IN -- SUSPEND USER IF PAGE-FAULT.          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0433
*     IF PCBPEX='1'B THEN                                          0433
         TM    PCBPEX(PCBPTR),B'01000000'                          0433
         BNO   @RF00433                                            0433
*       DO;                         /* PAGING EXCEPTION              */
*         IF PCBRESET='0'B THEN                                    0435
         TM    PCBRESET(PCBPTR),B'00010000'                        0435
         BNZ   @RF00435                                            0435
*           DO;                     /* RESET IS NOT INDICATED        */
*             RFY                                                  0437
*              (R13,                                               0437
*               R4,                                                0437
*               R5,                                                0437
*               R6) RSTD;                                          0437
*             R13=ADDR(PVTSAVE);    /* SAVE AREA FOR SUSPEND         */
         LA    R13,PVTSAVE(,PVTPTR)                                0438
*             CALL IEAVSUSP;        /* SUSPEND THE FAULTER           */
         L     @15,@CV02161                                        0439
         BALR  @14,@15                                             0439
*             RCAPARM1=PCBPTR;      /* SAVE SUSPENDED PCB ADDRESS FOR
*                                      RECOVERY PURPUSES.            */
         L     @10,RCAPTR(,PVTPTR)                                 0440
         ST    PCBPTR,RCAPARM1(,@10)                               0440
*             PCBRESET='1'B;        /* INDICATE THAT THE OWNER OF  0441
*                                      THIS PCB WAS SUSPENDED        */
         OI    PCBRESET(PCBPTR),B'00010000'                        0441
*             RFY                                                  0442
*               R13 UNRSTD;                                        0442
*             IF R5=0 THEN                                         0443
         LTR   R5,R5                                               0443
         BNZ   @RF00443                                            0443
*               DO;                 /* FAULTER WAS RUNNING UNDER AN
*                                      SRB                           */
*                 PCBSRB=R4;        /* SAVE THE SRB ADDRESS          */
         ST    R4,PCBSRB(,PCBPTR)                                  0445
*                 PCBSRBMD='1'B;    /* INDICATE SRB MODE             */
         OI    PCBSRBMD(PCBPTR),B'00100000'                        0446
*                 PCBRTPA=R5;       /* STORE A NULL TCB ADDRESS      */
         STCM  R5,7,PCBRTPA(PCBPTR)                                0447
*               END;                                               0448
*             ELSE                                                 0449
*               DO;                 /* FAULTER WAS RUNNING UNDER A 0449
*                                      TCB                           */
         B     @RC00443                                            0449
@RF00443 DS    0H                                                  0450
*                 PCBRTPA=R4;       /* SAVE THE TCB ADDRESS          */
         STCM  R4,7,PCBRTPA(PCBPTR)                                0450
*                 PCBRB=R5;         /* SAVE RB ADDR          @Z40WPYC*/
         ST    R5,PCBRB(,PCBPTR)                                   0451
*               END;                                               0452
*             IF R6=4 THEN                                         0453
@RC00443 C     R6,@CF00085                                         0453
         BNE   @RF00453                                            0453
*               PCBLLHLD='1'B;      /* IF A LOCKED PAGE-FAULT, SET 0454
*                                      THE LOCK HELD FLAG            */
         OI    PCBLLHLD(PCBPTR),B'00010000'                        0454
*             ELSE                                                 0455
*               ;                                                  0455
@RF00453 DS    0H                                                  0456
*             RFY                                                  0456
*              (R4,                                                0456
*               R5,                                                0456
*               R6) UNRSTD;                                        0456
*           END;                                                   0457
*         ELSE                                                     0458
*           ;                                                      0458
@RF00435 DS    0H                                                  0459
*       END;                                                       0459
*     ELSE                                                         0460
*       ;                                                          0460
*                                                                  0460
@RF00433 DS    0H                                                  0461
*     /***************************************************************/
*     /*                                                             */
*     /* PGIN SUBROUTINE -- SET UP TO PAGE A FRAME INTO STORAGE. THE */
*     /* APPROPRIATE COUNTERS ARE INCREMENTED TO INDICATE TO THE     */
*     /* SYSTEM WHAT KIND OF A PAGE-IN HAS OCCURRED. THE PCB IS THEN */
*     /* ADDED TO THE PROPER I/O QUEUE, DEPENDING UPON WHETHER IT    */
*     /* DESCRIBES A PRIVATE AREA ADDRESS OR A COMMON AREA ADDRESS.  */
*     /* THE INPUT PCB IS ADDRESSED BY PCBPTR. NO RETURN CODES ARE   */
*     /* GENERATED. THE AIA OF THE INPUT PCB IS ALWAYS ADDED TO THE  */
*     /* END OF THE I/O HOLD QUEUE.                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0461
*PGIN:                                                             0461
*     ;                                                            0461
PGIN     DS    0H                                                  0462
*     RFY                                                          0462
*      (R0,                                                        0462
*       R1) RSTD;                                                  0462
*                                                                  0462
*     /***************************************************************/
*     /*                                                             */
*     /* ENQUEUE THE AIA ON THE I/O HOLD QUEUE. THE FOLLOWING CODE   */
*     /* WILL INSURE LSQA REQUESTS ARE AT THE FRONT OF THE FRONT OF  */
*     /* THE I/O QUEUE FOR SWAPIN AS GUARANTEED TO ASM               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0463
*     IF IOHOLDQF=0 THEN            /* PAGEIN AIA Q EMPTY    @Z40WPYC*/
         L     @10,IOHOLDQF(,PVTPTR)                               0463
         LTR   @10,@10                                             0463
         BNZ   @RF00463                                            0463
*       DO;                         /* YES- SET FIRST/LAST PTRS    0464
*                                                            @Z40WPYC*/
*         IOHOLDQF=ADDR(PCBAIA);    /* SET PTR TO FIRST AIA  @Z40WPYC*/
         LA    @10,PCBAIA(,PCBPTR)                                 0465
         ST    @10,IOHOLDQF(,PVTPTR)                               0465
*         IOHOLDQL=ADDR(PCBAIA);    /* SET PTR TO LAST AIA   @Z40WPYC*/
         ST    @10,IOHOLDQL(,PVTPTR)                               0466
*       END;                        /* END AIA QUEUE EMPTY   @Z40WPYC*/
*     ELSE                          /* NOT EMPTY             @Z40WPYC*/
*       DO;                         /* RESET QUEUE PTRS      @Z40WPYC*/
         B     @RC00463                                            0468
@RF00463 DS    0H                                                  0469
*         R1=IOHOLDQL-(LENGTH(PCB)-LENGTH(PCBAIA));/* POINT TO PCB 0469
*                                                            @Z40WPYC*/
         L     R1,IOHOLDQL(,PVTPTR)                                0469
         SL    R1,@CF02288                                         0469
*         R1->AIANXAIA=ADDR(PCBAIA);/* CHAIN CURRENT INPUT AIA TO  0470
*                                      LAST PAGEIN AIA       @Z40WPYC*/
         LA    @10,PCBAIA(,PCBPTR)                                 0470
         ST    @10,AIANXAIA(,R1)                                   0470
*         RESPECIFY                                                0471
*          (R1) UNRESTRICTED;       /*                       @Z40WPYC*/
*         IOHOLDQL=ADDR(PCBAIA);    /* RESET LAST AIA PTR    @Z40WPYC*/
         ST    @10,IOHOLDQL(,PVTPTR)                               0472
*       END;                        /* END UPDATE AIA PTRS   @Z40WPYC*/
*     IF PCBVBN<PVTLCSA THEN                                       0474
@RC00463 CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0474
         BNL   @RF00474                                            0474
*       DO;                         /* PRIVATE AREA PAGE             */
*         IF PCBSWPIN='0'B THEN                                    0476
         TM    PCBSWPIN(PCBPTR),B'01000000'                        0476
         BNZ   @RF00476                                            0476
*           DO;                     /* NOT A STAGE1 SWAPIN REQUEST   */
*             IF PCBSWPS2='1'B THEN /* STAGE2 SWAPIN         @Z40WPYC*/
         TM    PCBSWPS2(PCBPTR),B'00000001'                        0478
         BNO   @RF00478                                            0478
*               PVTSPIN=PVTSPIN+1;  /* YES - UPDATE SWAPIN COUNT   0479
*                                                            @Z40WPYC*/
         LA    @10,1                                               0479
         AL    @10,PVTSPIN(,PVTPTR)                                0479
         ST    @10,PVTSPIN(,PVTPTR)                                0479
*             ELSE                                                 0480
*               DO;                 /* NOT STAGE2 SWAPIN     @Z40WPYC*/
         B     @RC00478                                            0480
@RF00478 DS    0H                                                  0481
*                 IF XPTVIO='1'B THEN                              0481
         L     @01,XPTEPTR(,PCBPTR)                                0481
         TM    XPTVIO(@01),B'00001000'                             0481
         BNO   @RF00481                                            0481
*                   DO;             /* COUNT THE PAGE-IN OF A PRIVATE
*                                      AREA VIO-WINDOW       @Z40WPYC*/
*                     PVTVAMI=PVTVAMI+1;                           0483
         LA    @10,1                                               0483
         L     @06,PVTVAMI(,PVTPTR)                                0483
         ALR   @06,@10                                             0483
         ST    @06,PVTVAMI(,PVTPTR)                                0483
*                     OUXBVAMI=OUXBVAMI+1;                         0484
         L     @01,ASCBPTR(,RSMHDPTR)                              0484
         L     @06,OUXBPTR(,@01)                                   0484
         AL    @10,OUXBVAMI(,@06)                                  0484
         ST    @10,OUXBVAMI(,@06)                                  0484
*                   END;                                           0485
*                 ELSE                                             0486
*                   DO;             /* COUNT THE PAGE-IN OF A PRIVATE
*                                      AREA PAGE                     */
         B     @RC00481                                            0486
@RF00481 DS    0H                                                  0487
*                     PVTNPIN=PVTNPIN+1;                           0487
         LA    @10,1                                               0487
         L     @06,PVTNPIN(,PVTPTR)                                0487
         ALR   @06,@10                                             0487
         ST    @06,PVTNPIN(,PVTPTR)                                0487
*                     OUXBPIN=OUXBPIN+1;                           0488
         L     @01,ASCBPTR(,RSMHDPTR)                              0488
         L     @06,OUXBPTR(,@01)                                   0488
         AL    @10,OUXBPIN(,@06)                                   0488
         ST    @10,OUXBPIN(,@06)                                   0488
*                   END;                                           0489
*               END;                                               0490
*           END;                                                   0491
*         ELSE                                                     0492
*           ;                                                      0492
@RF00476 DS    0H                                                  0493
*         R0=PCBLIOQN;              /* PRIVATE AREA PAGE, ENQUEUE THE
*                                      PAGE-IN PCB ON THE LOCAL I/O
*                                      QUEUE                         */
@RC00476 LA    R0,136                                              0493
*       END;                                                       0494
*     ELSE                                                         0495
*       DO;                         /* COMMON AREA PAGE              */
         B     @RC00474                                            0495
@RF00474 DS    0H                                                  0496
*         OUXBCAPI=OUXBCAPI+1;      /* INCREMENT COUNT OF COMMON AREA
*                                      PAGE INS              @Z40FPYD*/
         L     @01,ASCBPTR(,RSMHDPTR)                              0496
         L     @10,OUXBPTR(,@01)                                   0496
         LA    @06,1                                               0496
         L     @01,OUXBCAPI(,@10)                                  0496
         ALR   @01,@06                                             0496
         ST    @01,OUXBCAPI(,@10)                                  0496
*         IF PCBSWPS1='0'B THEN                                    0497
         TM    PCBSWPS1(PCBPTR),B'00100000'                        0497
         BNZ   @RF00497                                            0497
*           DO;                     /* NOT STAGE1 SWAPIN             */
*             PVTNPIN=PVTNPIN+1;    /* PAGEIN COUNT                  */
         L     @10,PVTNPIN(,PVTPTR)                                0499
         ALR   @10,@06                                             0499
         ST    @10,PVTNPIN(,PVTPTR)                                0499
*             PVTCAIN=PVTCAIN+1;    /* NON - VIO PAGEINS             */
         AL    @06,PVTCAIN(,PVTPTR)                                0500
         ST    @06,PVTCAIN(,PVTPTR)                                0500
*           END;                                                   0501
*         ELSE                                                     0502
*           ;                                                      0502
@RF00497 DS    0H                                                  0503
*         R0=PCBCIOQN;              /* COMMON AREA PAGE, ENQUEUE THE
*                                      PAGE-IN PCB ON THE COMMON I/O
*                                      QUEUE                         */
         LA    R0,32                                               0503
*       END;                                                       0504
*     RFY                                                          0505
*       R1 RSTD;                                                   0505
@RC00474 DS    0H                                                  0506
*     R1=PCBPTR;                                                   0506
         LR    R1,PCBPTR                                           0506
*     CALL IEAVPCB;                 /* CALL THE PCB MANAGER TO QUEUE
*                                      THE PCB TO THE APPROPRIATE I/O
*                                      QUEUE                         */
         L     @15,PVTPCB(,PVTPTR)                                 0507
         BALR  @14,@15                                             0507
*     RFY                                                          0508
*      (R1,                                                        0508
*       R0) UNRSTD;                                                0508
*                                                                  0509
*/*   ASSIGN THE FRAME (INVALIDATED), IF NOT SWAP-IN                 */
*                                                                  0509
*     IF PCBSWPIN='0'B THEN                                        0509
         TM    PCBSWPIN(PCBPTR),B'01000000'                        0509
         BNZ   @RF00509                                            0509
*       PGTRSA=PCBRBN+PGTPVMB+PGTPAMB;                             0510
         L     @10,PTEPTR(,PCBPTR)                                 0510
         LA    @06,9                                               0510
         LH    @15,PCBRBN(,PCBPTR)                                 0510
         N     @15,@CF02300                                        0510
         ALR   @06,@15                                             0510
         STCM  @06,3,PGTRSA(@10)                                   0510
*     ELSE                                                         0511
*       ;                                                          0511
@RF00509 DS    0H                                                  0512
*NXTPCB:                                                           0512
*     PCBPTR=NEXTPCBP;              /* GET NEXT PCB ADDRESS          */
NXTPCB   L     PCBPTR,NEXTPCBP(,PVTPTR)                            0512
*     IF PCBPTR^=0                  /* IF THERE IS ANOTHER PCB,      */
*       THEN                                                       0513
         LTR   PCBPTR,PCBPTR                                       0513
         BNZ   @RT00513                                            0513
*       GOTO PCBPROC;               /* PROCESS THE PCB               */
*CALLASM:                                                          0515
*     ;                                                            0515
*                                                                  0515
CALLASM  DS    0H                                                  0516
*     /***************************************************************/
*     /*                                                             */
*     /* INPUT PCB PROCESSING HAS FINISHED DUE TO THE EXHAUSTION OF  */
*     /* THE INPUT PCB QUEUE, CALL THE AUXILLIARY STORAGE MANAGER    */
*     /* (ASM) TO INITIATE ANY ACCUMULATED I/O REQUESTS ON THE I/O   */
*     /* HOLD QUEUE                                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0516
*     IF IOHOLDQF^=0 THEN                                          0516
         L     @10,IOHOLDQF(,PVTPTR)                               0516
         LTR   @10,@10                                             0516
         BZ    @RF00516                                            0516
*       DO;                         /* PASS THE I/O HOLD QUEUE TO ASM
*                                                            @Z40WPYC*/
*         RFY                                                      0518
*          (R1,                                                    0518
*           R15) RSTD;                                             0518
*         R1=IOHOLDQF;              /* SET PTR TO FIRST PAGEIN AIA 0519
*                                                            @Z40WPYC*/
         LR    R1,@10                                              0519
*         R15=R1-(LENGTH(PCB)-LENGTH(PCBAIA));/* POINT TO PCB      0520
*                                                            @Z40WPYC*/
*                                                                  0520
         LR    R15,R1                                              0520
         SL    R15,@CF02288                                        0520
*         /***********************************************************/
*         /*                                                         */
*         /* NOTE THAT R2 CONTAINS THE RSMHD GFA IS CURRENTLY WORKING*/
*         /* WITH (ESTABLISHED BY CALLER OF GFA), SO IT DOES NOT HAVE*/
*         /* TO BE REINITIALIZED FOR ASM.                            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0521
*         IF R15->AIALSQA='1'B THEN /* IF STAGE1 SWAPIN      @Z40WPYC*/
         TM    AIALSQA(R15),B'00001000'                            0521
         BNO   @RF00521                                            0521
*           CALL ILRSWAP;           /* ASM SWAP I/O PROCESSOR      0522
*                                                            @Z40WPYC*/
         L     @15,PVTSWPIO(,PVTPTR)                               0522
         BALR  @14,@15                                             0522
*         ELSE                      /* NORMAL PAGEIN         @Z40WPYC*/
*           CALL ILRPAGIO;          /* ASM PAGE I/O PROCESSOR      0523
*                                                            @Z40WPYC*/
         B     @RC00521                                            0523
@RF00521 L     @15,PVTPAGIO(,PVTPTR)                               0523
         BALR  @14,@15                                             0523
*         INTRETCD=4;               /* ASYNCHRONOUS COMPLETION RETURN
*                                      CODE                          */
@RC00521 MVI   INTRETCD(PVTPTR),X'04'                              0524
*         IF R15^=0 THEN                                           0525
         LTR   R15,R15                                             0525
         BZ    @RF00525                                            0525
*           DO;                                                    0526
*                                                                  0526
*             /*******************************************************/
*             /*                                                     */
*             /* THE AUXILIARY STORAGE MANAGER FOUND AN ERROR        */
*             /* CONDITION WHEN ATTEMPTING TO PROCESS THE ACCUMULATED*/
*             /* I/O. THE ADDRESS OF THE FAILING AIA IS RETURNED BY  */
*             /* THE AUXILIARY STORAGE MANAGER IN REGISTER ONE. ALL  */
*             /* SUBSEQUENT AIAS HAVE NOT BEEN ACTED UPON AND ARE    */
*             /* LINKED TO THE FAILING AIA.                          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0527
*             RFY                                                  0527
*              (R0,                                                0527
*               R15) UNRSTD;                                       0527
*             PTR1=R1;              /* SAVE THE AIA ADDRESS AROUND 0528
*                                      THE CALL TO ABEND             */
*                                                                  0528
         LR    PTR1,R1                                             0528
*             /*******************************************************/
*             /*                                                     */
*             /* OBTAIN THE PCB ADDRESS FOR THE AIA IN ERROR BY      */
*             /* BACKING UP THE AIA ADDRESS BY THE AMOUNT OF ITS     */
*             /* OFFSET INTO THE PCB                                 */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0529
*             PCBPTR=PTR1-(LENGTH(PCB)-LENGTH(PCBAIA));/*    @Z40WPYD*/
         LR    PCBPTR,PTR1                                         0529
         SL    PCBPTR,@CF02288                                     0529
*             IF AIAPRIER='0'B THEN                                0530
         TM    AIAPRIER(PCBPTR),B'00001000'                        0530
         BNZ   @RF00530                                            0530
*               DO;                 /* DO NOT RECORD AN ERROR IF   0531
*                                      THERE WAS A PREVIOUS I/O ERROR
*                                      FOR THE PAGE          @Z40WPYD*/
*                 RCARCRD=ASMERR;   /* RECORD THE ERROR              */
         L     @10,RCAPTR(,PVTPTR)                                 0532
         MVI   RCARCRD(@10),X'04'                                  0532
*                 GEN(ABEND X'C0D',,,SYSTEM);                      0533
         ABEND X'C0D',,,SYSTEM
*               END;                                               0534
*             IF PCBSWPS1='1'B THEN                                0535
@RF00530 TM    PCBSWPS1(PCBPTR),B'00100000'                        0535
         BNO   @RF00535                                            0535
*               DO;                                                0536
*                                                                  0536
*                 /***************************************************/
*                 /*                                                 */
*                 /* STAGE ONE OF SWAP-IN, GET THE ROOT PCB ADDRESS  */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0537
*                 ROOTPCBP=PCBRTPA; /* SAVE ROOT PCB ADDRESS         */
         L     @10,PCBRTPA-1(,PCBPTR)                              0537
         LA    @10,0(,@10)                                         0537
         ST    @10,ROOTPCBP(,PVTPTR)                               0537
*                 PCBRFAIL='1'B;    /* INDICATE THE I/O ERROR        */
*                 PCBRPB='1'B;      /* SET THE FREE ROOT PCB FLAG    */
         L     @10,PCBRPTR(,PCBPTR)                                0539
         OI    PCBRFAIL(@10),B'00101000'                           0539
*                 RSMFAIL='1'B;     /* INDICATE THAT LSQA IS       0540
*                                      UNAVAILABLE           @Z40WPYC*/
         OI    RSMFAIL(RSMHDPTR),B'00000010'                       0540
*                 IOHOLDQF=ADDR(PCBAIA);/* PLACE AIA ON I/O HOLD   0541
*                                      QUEUE                 @Z40WPYC*/
         LA    @10,PCBAIA(,PCBPTR)                                 0541
         ST    @10,IOHOLDQF(,PVTPTR)                               0541
*                 GOTO AIALOOP;     /* AND GO DELETE THE AIAS        */
         B     AIALOOP                                             0542
*               END;                                               0543
*             ELSE                                                 0544
*               DO;                 /* NOT SWAP-IN STAGE ONE         */
@RF00535 DS    0H                                                  0545
*                 IF PCBROOT='1'B THEN                             0545
         TM    PCBROOT(PCBPTR),B'00000100'                         0545
         BNO   @RF00545                                            0545
*                   DO;             /* THERE EXISTS A ROOT PCB       */
*                     PCBRFAIL='1'B;/* INDICATE I/O ERROR IN ROOT PCB*/
         L     @10,PCBRPTR(,PCBPTR)                                0547
         OI    PCBRFAIL(@10),B'00001000'                           0547
*                     PCBIOERR='1'B;/* INDICATE I/O ERROR IN PCB     */
         OI    PCBIOERR(PCBPTR),B'00100000'                        0548
*                   END;                                           0549
*                 ELSE                                             0550
*                   ;                                              0550
@RF00545 DS    0H                                                  0551
*               END;                                               0551
*             PTR1=PCBPTR;          /* GET THE QUEUED PCB POINTER  0552
*                                                            @YA01572*/
         LR    PTR1,PCBPTR                                         0552
*             DO WHILE PTR1^=0;                                    0553
*                                                                  0553
         B     @DE00553                                            0553
@DL00553 DS    0H                                                  0554
*               /*****************************************************/
*               /*                                                   */
*               /* SET I/O ERROR FLAG FOR ALL THE RELATED PCBS       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0554
*               PTR1->PCBIOCMP='1'B;/* INDICATE I/O COMPLETE @YA01572*/
         OI    PCBIOCMP(PTR1),B'00000001'                          0554
*               PTR1->PCBIOERR='1'B;                               0555
         OI    PCBIOERR(PTR1),B'00100000'                          0555
*               IF PTR1->PCBROOT='1'B THEN                         0556
         TM    PCBROOT(PTR1),B'00000100'                           0556
         BNO   @RF00556                                            0556
*                 PTR1->PCBRTPA->PCBRFAIL='1'B;/* SET THE FAIL BIT IN
*                                      ANY ASSOCIATED ROOT PCB       */
         L     @10,PCBRTPA-1(,PTR1)                                0557
         OI    PCBRFAIL(@10),B'00001000'                           0557
*               PTR1=PTR1->PCBRLPA; /* GET THE NEXT RELATED PCB      */
@RF00556 L     @10,PCBRLPA-1(,PTR1)                                0558
         LA    @10,0(,@10)                                         0558
         LR    PTR1,@10                                            0558
*             END;                                                 0559
@DE00553 LTR   PTR1,PTR1                                           0559
         BNZ   @DL00553                                            0559
*             IOHOLDQF=AIANXAIA;    /* DEQUEUE THE FIRST AIA ON THE
*                                      I/O HOLD QUEUE        @Z40WPYC*/
         L     @10,AIANXAIA(,PCBPTR)                               0560
         ST    @10,IOHOLDQF(,PVTPTR)                               0560
*             R1=PCBPTR;            /* GET PCB PTR FOR IEAVOPBR TO 0561
*                                      SCHED IEAVIOCP        @YA01572*/
         LR    R1,PCBPTR                                           0561
*             CALL IEAVOPBR;        /* HAVE IEAVIOCP SCHEDULED FOR 0562
*                                      THIS ADDRESS SPACE    @YA01572*/
         L     @15,PVTPOPBR(,PVTPTR)                               0562
         BALR  @14,@15                                             0562
*             GOTO CALLASM;         /* AND CALL ASM, IF REQUIRED     */
         B     CALLASM                                             0563
*           END;                                                   0564
*         ELSE                                                     0565
*           ;                                                      0565
@RF00525 DS    0H                                                  0566
*       END;                                                       0566
*     ELSE                                                         0567
*       ;                                                          0567
@RF00516 DS    0H                                                  0568
*   END;                                                           0568
*GFAEXIT:                                                          0569
*   ;                               /* EXIT FROM GFA MAINLINE -    0569
*                                      RETURN TO CALLER              */
GFAEXIT  DS    0H                                                  0570
*   RCAGFA='0'B;                    /* RESET THE GFA ENTERED FLAG    */
         L     @10,RCAPTR(,PVTPTR)                                 0570
         NI    RCAGFA(@10),B'11111101'                             0570
*   RFY                                                            0571
*     R15 RSTD;                                                    0571
*   R15=INTRETCD;                   /* PASS THE RETURN CODE          */
         SLR   R15,R15                                             0572
         IC    R15,INTRETCD(,PVTPTR)                               0572
*   GENERATE;                                                      0573
         LM    R4,R14,PVTWSA8(PVTPTR)   RESTORE THE REQUIRED REGISTERS
         BR    R14                  RETURN TO THE CALLER
      EJECT
*   RFY                                                            0574
*    (R0,                                                          0574
*     R4,                                                          0574
*     R1,                                                          0574
*     R6) UNRSTD;                                                  0574
*                                                                  0574
*   /*****************************************************************/
*   /*                                                               */
*   /* PCB RECLAIM SUBROUTINE -- CALLED BY IEAVGFA. THE RECLAIM      */
*   /* ROUTINE WILL ATTEMPT TO RECOVER (IN PLACE) THE SAME FRAME     */
*   /* PREVIOUSLY OCCUPIED BY THE PAGE REPRESENTED BY THE INPUT PCB  */
*   /* (POINTED TO BY PCBPTR). IF RECLAIM IS POSSIBLE THE FRAME IS   */
*   /* ALLOCATED TO THE INPUT PCB, AND A RETURN CODE OF ZERO IS      */
*   /* GIVEN. IF RECLAIM CANNOT BE ACCOMPLISHED (FOR ONE OF MANY     */
*   /* REASONS), A RETURN CODE OF 4 IS GIVEN.                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0575
*RECLAIM:                                                          0575
*   RCLMRET=R14;                    /* SAVE THE CONTENTS OF REG 14   */
RECLAIM  ST    R14,RCLMRET(,PVTPTR)                                0575
*   CANCEL='0'B;                                                   0576
*   LONGFLAG='0'B;                  /* RESET RECLAIM INTERNAL FLAGS  */
         NI    CANCEL(PVTPTR),B'00111111'                          0577
*   IF RBN<PVTFPFN×RBN>PVTLPFN THEN                                0578
         CLC   RBN(2,PVTPTR),PVTFPFN(PVTPTR)                       0578
         BL    @RT00578                                            0578
         CLC   RBN(2,PVTPTR),PVTLPFN(PVTPTR)                       0578
         BH    @RT00578                                            0578
*     GOTO RETCDEQ4;                /* IF INVALID BLOCK ADDRESS    0579
*                                      (BLOCK #), ERROR RETURN.      */
*   ELSE                                                           0580
*     DO;                           /* VALID VIRTUAL ADDRESS         */
*       PFTEPTR=PVTPFTP+RBN;        /* COMPUTE THE ADDRESS OF THE  0581
*                                      FRAME TABLE ENTRY             */
         SLR   PFTEPTR,PFTEPTR                                     0581
         ICM   PFTEPTR,3,RBN(PVTPTR)                               0581
         AL    PFTEPTR,PVTPFTP(,PVTPTR)                            0581
*       IF PFTIRRG='1'B×PFTVBN^=PCBVBN THEN                        0582
         TM    PFTIRRG(PFTEPTR),B'00010000'                        0582
         BO    @RT00582                                            0582
         CLC   PFTVBN(2,PFTEPTR),PCBVBN(PCBPTR)                    0582
         BNE   @RT00582                                            0582
*         GOTO RETCDEQ4;            /* IF THE FRAME IS A VIO WINDOW,
*                                      OR NO LONGER REPRESENTS THE 0583
*                                      SAME VIRTUAL ADDRESS, ERROR 0583
*                                      RETURN.                       */
*       ELSE                                                       0584
*         ;                                                        0584
*       IF PCBVBN<PVTLCSA&PFTASID^=ASCBASID THEN                   0585
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0585
         BNL   @RF00585                                            0585
         L     @14,ASCBPTR(,RSMHDPTR)                              0585
         CLC   PFTASID(2,PFTEPTR),ASCBASID(@14)                    0585
         BNE   @RT00585                                            0585
*         GOTO RETCDEQ4;            /* IF THE VIRTUAL ADDRESS      0586
*                                      REPRESENTS A PRIVATE AREA PAGE
*                                      FOR A DIFFERENT ADDRESS SPACE,
*                                      ERROR RETURN                  */
*       ELSE                                                       0587
*         ;                                                        0587
*                                                                  0587
@RF00585 DS    0H                                                  0588
*       /*************************************************************/
*       /*                                                           */
*       /* THE FRAME HAS THE SAME VIRTUAL ADDRESS AS THE REQUESTED   */
*       /* PAGE, IT IS FOR THE SAME ADDRESS SPACE OR IS A COMMON AREA*/
*       /* PAGE, AND IS NEITHER A VIO WINDOW OR AN INVALID ADDRESS   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0588
*       IF PFTONAVQ='1'B THEN                                      0588
         TM    PFTONAVQ(PFTEPTR),B'10000000'                       0588
         BNO   @RF00588                                            0588
*         DO;                       /* THE FRAME IS AVAILABLE        */
*           IF PCBFXC^=0 THEN                                      0590
         CLI   PCBFXC(PCBPTR),0                                    0590
         BE    @RF00590                                            0590
*             DO;                   /* THE PCB IS FOR A FIX REQUEST  */
*               IF PVTAFC<=PVTDEFFX THEN/* SHOULD FIX REQUESTS BE  0592
*                                      DEFERRED              @YA01572*/
         LH    @14,PVTAFC(,PVTPTR)                                 0592
         CH    @14,PVTDEFFX(,PVTPTR)                               0592
         BNH   @RT00592                                            0592
*                 GOTO TESTDFSP;    /* YES, DEFER REQUEST OR REJECT
*                                      IT                    @YA01572*/
*                                                                  0593
*               /*****************************************************/
*               /*                                                   */
*               /* IT IS A PREFERRED AREA FIX IF BIT PCBPREFR=1. IN  */
*               /* THIS CASE, REJECT THE RECLAIM IF THE LOCATED FRAME*/
*               /* IS NOT IN THE PREFERRED AREA.             @ZA16816*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0594
*               IF PCBPREFR='1'B&   /* IF PREFERRED FIX      @ZA16816*/
*                   PFTPREF='0'B THEN/* BUT NON-PREF PFTE    @ZA16816*/
         TM    PCBPREFR(PCBPTR),B'00001000'                        0594
         BNO   @RF00594                                            0594
         TM    PFTPREF(PFTEPTR),B'00000100'                        0594
         BZ    @RT00594                                            0594
*                 GOTO RETCDEQ4;    /* REJECT RECLAIM.       @ZA16816*/
*               PFTFXCT=PCBFXC;     /* SET THE FIX COUNT OF THE FRAME
*                                      EQUAL TO THE FIX COUNT OF THE
*                                      INPUT PCB                     */
@RF00594 SLR   @14,@14                                             0596
         IC    @14,PCBFXC(,PCBPTR)                                 0596
         STH   @14,PFTFXCT(,PFTEPTR)                               0596
*               IF PCBVBN<PVTLCSA THEN                             0597
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0597
         BNL   @RF00597                                            0597
*                 DO;               /* THE PAGE IS A PRIVATE AREA  0598
*                                      PAGE, INCREMENT THE FIX     0598
*                                      COUNTER FOR THIS ADDR SPACE.
*                                                            @YA01572*/
*                   RSMCNTFX=RSMCNTFX+1;/* INCREMENT LOCAL COUNT   0599
*                                                            @YA01572*/
         LA    @14,1                                               0599
         AH    @14,RSMCNTFX(,RSMHDPTR)                             0599
         STH   @14,RSMCNTFX(,RSMHDPTR)                             0599
*                 END;                                             0600
*               ELSE                                               0601
*                 DO;               /* THE PAGE IS A COMMON AREA   0601
*                                      PAGE, INCREMENT THE COMMON  0601
*                                      AREA FIX COUNTER      @YA01572*/
         B     @RC00597                                            0601
@RF00597 DS    0H                                                  0602
*                   PVTCOMFX=PVTCOMFX+1;/* INCREMENT COMMON AREA   0602
*                                      COUNT                 @YA01572*/
         LA    @14,1                                               0602
         AH    @14,PVTCOMFX(,PVTPTR)                               0602
         STH   @14,PVTCOMFX(,PVTPTR)                               0602
*                 END;                                             0603
*               PVTCNTFX=PVTCNTFX+1;/* INCREMENT GLOBAL COUNT      0604
*                                                            @YA01572*/
@RC00597 LA    @14,1                                               0604
         AH    @14,PVTCNTFX(,PVTPTR)                               0604
         STH   @14,PVTCNTFX(,PVTPTR)                               0604
*               IF PVTCNTFX=PVTMAXFX THEN/* HAS THE FIX COUNT      0605
*                                      THRESHOLD BEEN REACHED        */
         CH    @14,PVTMAXFX(,PVTPTR)                               0605
         BNE   @RF00605                                            0605
*                 DO;               /* YES, NOTIFY SRM       @YA01572*/
*                   RFY                                            0607
*                    (R1,                                          0607
*                     R13) RSTD;                                   0607
*                   R1=MAXFIXED;    /* GET CODE INDICATING FIX     0608
*                                      THRESHOLD HAS BEEN REACHED  0608
*                                                            @YA01572*/
         LA    R1,4                                                0608
*                   R13=ADDR(PVTSAVE);/* GET SRM A SAVE AREA @YA01572*/
         LA    R13,PVTSAVE(,PVTPTR)                                0609
*                   GENERATE REFS(CVT,CVTPTR,CVTOPTE) SETS(R0,R14,R15);
                SYSEVENT AVQLOW,ENTRY=BRANCH               @YA01572
*                 END;                                             0611
*             END;                                                 0612
*           ELSE                                                   0613
*             ;                                                    0613
@RF00590 DS    0H                                                  0614
*           PCBRBN=RBN;             /* ASSIGN THE REAL BLOCK TO THE
*                                      VIRTUAL PAGE                  */
@RC00590 MVC   PCBRBN(2,PCBPTR),RBN(PVTPTR)                        0614
*           RFY                                                    0615
*            (R1,                                                  0615
*             R15) RSTD;                                           0615
*           R1=RBA;                 /* GET THE PAGE ADDRESS          */
         L     R1,RBA(,PVTPTR)                                     0616
*           R15=XPTPROT;            /* AND THE PROTECTION KEY        */
         L     @10,XPTEPTR(,PCBPTR)                                0617
         SLR   R15,R15                                             0617
         IC    R15,XPTPROT(,@10)                                   0617
*           GEN(SSK   R15,R1);      /* SET THE PROTECTION KEY OF THE
*                                      PAGE (BOTH HALVES)            */
         SSK   R15,R1
*           R1=R1+2048;             /*                               */
         AL    R1,@CF02222                                         0619
*           GEN(SSK  R15,R1);       /*                               */
         SSK  R15,R1
*           RFY                                                    0621
*             R15 UNRSTD;                                          0621
*           RFY                                                    0622
*             R0 RSTD;                                             0622
*           IF PCBVBN<PVTLCSA THEN                                 0623
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0623
         BNL   @RF00623                                            0623
*             DO;                   /* THE PAGE IS A PRIVATE AREA  0624
*                                      PAGE, HAVE THE FRAME QUEUED ON
*                                      THE LOCAL FRAME QUEUE         */
*               TOQUEUE#=PFTLFQN;                                  0625
         MVI   TOQUEUE#(PVTPTR),X'80'                              0625
*             END;                                                 0626
*           ELSE                                                   0627
*             DO;                   /* THE PAGE IS A COMMON AREA   0627
*                                      PAGE, HAVE IT QUEUED ON THE 0627
*                                      COMMON AREA QUEUE             */
         B     @RC00623                                            0627
@RF00623 DS    0H                                                  0628
*               TOQUEUE#=PFTCFQN;                                  0628
         MVI   TOQUEUE#(PVTPTR),X'08'                              0628
*             END;                                                 0629
*           R1=ASCBPTR;                                            0630
@RC00623 L     R1,ASCBPTR(,RSMHDPTR)                               0630
*           RBNPARM=RBN;                                           0631
         MVC   RBNPARM(2,PVTPTR),RBN(PVTPTR)                       0631
*           R0=PARMPFTE;            /* PARMS FOR IEAVPFTE            */
         L     R0,PARMPFTE(,PVTPTR)                                0632
*           CALL IEAVPFTE;          /* QUEUE THE FRAME ON THE DESIRED
*                                      QUEUE                         */
         L     @15,PVTPFTE(,PVTPTR)                                0633
         BALR  @14,@15                                             0633
*           RFY                                                    0634
*            (R0,                                                  0634
*             R1) UNRSTD;                                          0634
*VALIDATE:                                                         0635
*           PGTPVM='0'B;            /* VALIDATE THE PAGE             */
VALIDATE L     @10,PTEPTR(,PCBPTR)                                 0635
         NI    PGTPVM(@10),B'11110111'                             0635
*INSTEXIT:                                                         0636
*           IF PCBSWPS2='1'B THEN   /* IF STAGE2 SWAPIN      @Z40WPYC*/
INSTEXIT TM    PCBSWPS2(PCBPTR),B'00000001'                        0636
         BNO   @RF00636                                            0636
*             PVTSPREC=PVTSPREC+1;  /* UPDATE SWAPIN RECLAIM COUNT.
*                                                            @Z40WPYC*/
         LA    @10,1                                               0637
         AL    @10,PVTSPREC(,PVTPTR)                               0637
         ST    @10,PVTSPREC(,PVTPTR)                               0637
*           ELSE                                                   0638
*             DO;                   /* NOT STAGE2            @Z40WPYC*/
         B     @RC00636                                            0638
@RF00636 DS    0H                                                  0639
*               IF PCBSWPS1='1'B THEN/* IS THIS A SWAP-IN    @Z40WPYC*/
         TM    PCBSWPS1(PCBPTR),B'00100000'                        0639
         BNO   @RF00639                                            0639
*                 PVTSPIN=PVTSPIN-1;/* DECREMENT SWAP-IN COUNT     0640
*                                                            @Z40WPYC*/
         L     @10,PVTSPIN(,PVTPTR)                                0640
         BCTR  @10,0                                               0640
         ST    @10,PVTSPIN(,PVTPTR)                                0640
*               ELSE                                               0641
*                 PVTNPREC=PVTNPREC+1;/* UPDATE THE RECLAIMED PAGE 0641
*                                      COUNT                         */
         B     @RC00639                                            0641
@RF00639 LA    @10,1                                               0641
         AL    @10,PVTNPREC(,PVTPTR)                               0641
         ST    @10,PVTNPREC(,PVTPTR)                               0641
*               IF PCBVBN<PVTLCSA THEN                             0642
@RC00639 CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0642
         BNL   @RF00642                                            0642
*                 OUXBPREC=OUXBPREC+1;/* UPDATE THE SRM LOCAL      0643
*                                      RECLAIMED FRAME COUNT         */
         L     @10,ASCBPTR(,RSMHDPTR)                              0643
         L     @10,OUXBPTR(,@10)                                   0643
         LA    @06,1                                               0643
         AL    @06,OUXBPREC(,@10)                                  0643
         ST    @06,OUXBPREC(,@10)                                  0643
*               ELSE                                               0644
*                 DO;                                              0644
         B     @RC00642                                            0644
@RF00642 DS    0H                                                  0645
*                   PVTCAREC=PVTCAREC+1;/* UPDATE THE COMMON AREA  0645
*                                      RECLAIMED FRAME COUNT         */
         LA    @10,1                                               0645
         L     @06,PVTCAREC(,PVTPTR)                               0645
         ALR   @06,@10                                             0645
         ST    @06,PVTCAREC(,PVTPTR)                               0645
*                   OUXBCAPR=OUXBCAPR+1;/* INCREMENT NO. OF COMMON 0646
*                                      AREA RECLAIMS FOR THIS ADDRESS
*                                      SPACE                 @Z40FPYD*/
         L     @06,ASCBPTR(,RSMHDPTR)                              0646
         L     @06,OUXBPTR(,@06)                                   0646
         AL    @10,OUXBCAPR(,@06)                                  0646
         ST    @10,OUXBCAPR(,@06)                                  0646
*                 END;                                             0647
*             END;                                                 0648
@RC00642 DS    0H                                                  0649
*RECDISP0:                                                         0649
*           CALL PCBDISP;           /* DISPOSE OF THE PCB            */
@RC00636 DS    0H                                                  0649
RECDISP0 BAL   @14,PCBDISP                                         0649
*RETCDEQ0:                                                         0650
*           ;                       /* RECLAIM HAS BEEN A SUCCESS, 0650
*                                      EXIT WITH A RETURN CODE OF  0650
*                                      ZERO.                         */
RETCDEQ0 DS    0H                                                  0651
*           R14=RCLMRET;            /* RESET THE RETURN ADDRESS      */
*                                                                  0651
         L     R14,RCLMRET(,PVTPTR)                                0651
*           /*********************************************************/
*           /*                                                       */
*           /* RETURN TO THE CALLER -- RECLAIM FROM AFQ SUCCESSFUL   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0652
*           GENERATE;                                              0652
       SR    R15,R15             ZERO RETURN CODE
       BR    R14                 RETURN TO MAINLINE
*         END;                                                     0653
*       ELSE                                                       0654
*         DO;                                                      0654
*                                                                  0654
         B     @RC00588                                            0654
@RF00588 DS    0H                                                  0655
*           /*********************************************************/
*           /*                                                       */
*           /* THE FRAME IS NOT ON THE AVAILABLE FRAME QUEUE. IF THE */
*           /* FRAME EXISTS ON AN I/O QUEUE, THE INPUT PCB WILL BE   */
*           /* RELATED TO IT.                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0655
*           IF PFTQNDX=PFTNQN THEN                                 0655
         CLI   PFTQNDX(PFTEPTR),X'FF'                              0655
         BE    @RT00655                                            0655
*             GOTO RETCDEQ4;        /* THE FRAME IS NOT RECLAIMABLE  */
*           ELSE                                                   0657
*             ;                     /* TAKE THE FRAME FROM THIS QUEUE*/
*           PCBRBN=RBN;                                            0658
         MVC   PCBRBN(2,PCBPTR),RBN(PVTPTR)                        0658
*           IF PCBPREFR='0'B&(PFTVRINT='1'B×PFTOFINT='1'B) THEN/* IS
*                                      REQUEST OTHER THAN A        0659
*                                      PREFERRED-FIX AND MARKED    0659
*                                      INTERCEPTED           @ZA16816*/
         TM    PCBPREFR(PCBPTR),B'00001000'                        0659
         BNZ   @RF00659                                            0659
         TM    PFTVRINT(PFTEPTR),B'01000001'                       0659
         BZ    @RF00659                                            0659
*             DO;                   /* YES.                  @ZA10767*/
*               CANCEL='1'B;        /* CANCEL RECLAIM OF A V=R     0661
*                                      INTERCEPTED FRAME     @ZA10767*/
         OI    CANCEL(PVTPTR),B'01000000'                          0661
*               GOTO RELATE;        /*                       @ZA10767*/
         B     RELATE                                              0662
*             END;                                                 0663
*           IF PCBFXC=0 THEN                                       0664
@RF00659 CLI   PCBFXC(PCBPTR),0                                    0664
         BE    @RT00664                                            0664
*             GOTO RELATE;          /* NOT A PAGE-FIX REQUEST,     0665
*                                      ATTEMPT TO RELATE THE REQUEST.*/
*           ELSE                                                   0666
*             ;                     /* THE INPUT PCB INDICATES A FIX,
*                                      CHECK FOR A PREFERRED FIX   0666
*                                                            @ZA16816*/
*           IF PCBPREFR='0'B THEN                                  0667
         TM    PCBPREFR(PCBPTR),B'00001000'                        0667
         BZ    @RT00667                                            0667
*             GOTO BUMPFIX;         /* THE REQUEST IS NOT FOR A    0668
*                                      PREFERRED-FIX, CONTINUE     0668
*                                                            @ZA16816*/
*           ELSE                                                   0669
*             ;                                                    0669
*                                                                  0669
*           /*********************************************************/
*           /*                                                       */
*           /* THE REQUEST IS FOR A PREFERRED FIX, CHECK FOR A       */
*           /* SPECIAL IN-STORAGE CASE PASSED BY IEAVFXLD OR IEAVSWIN*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0670
*           IF PGTPVM='1'B THEN     /* IF PAGE NOT VALID IN STORAGE,
*                                      DO NOT HAVE SPECIAL CASE.   0670
*                                                            @YM08119*/
         L     @10,PTEPTR(,PCBPTR)                                 0670
         TM    PGTPVM(@10),B'00001000'                             0670
         BNO   @RF00670                                            0670
*             DO;                   /* THE PAGE IS INVALID, SET UP TO
*                                      RECLAIM, IF THE FRAME IS    0671
*                                      ALREADY FIXED OR IS PREFERRED
*                                                            @ZA16816*/
*               IF PFTPREF='1'B THEN/* IF PAGE IS A PREFERRED,     0672
*                                                            @ZA16816*/
         TM    PFTPREF(PFTEPTR),B'00000100'                        0672
         BO    @RT00672                                            0672
*                 GOTO BUMPFIX;     /* GO DO THE RECLAIM     @ZA16816*/
*               ELSE                /* IF NOT                @ZA16816*/
*                 DO;               /* A PREFERRED           @ZA16816*/
*                   CANCEL='1'B;    /* THEN CANCEL RECLAIM   @ZA16816*/
         OI    CANCEL(PVTPTR),B'01000000'                          0675
*                   IF PFTFXCT^=0 THEN/* IF FRAME WAS FIXED  @ZA16816*/
         LH    @10,PFTFXCT(,PFTEPTR)                               0676
         LTR   @10,@10                                             0676
         BZ    @RF00676                                            0676
*                     DO;           /* DECREMENT COUNTERS    @ZA16816*/
*                       IF PCBVBN>=PVTLCSA THEN/* IF COMMON  @ZA16816*/
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0678
         BL    @RF00678                                            0678
*                         PVTCOMFX=PVTCOMFX-1;/* DEC COM CT  @ZA16816*/
         LH    @10,PVTCOMFX(,PVTPTR)                               0679
         BCTR  @10,0                                               0679
         STH   @10,PVTCOMFX(,PVTPTR)                               0679
*                       ELSE        /* IF PRIVATE            @ZA16816*/
*                         RSMCNTFX=RSMCNTFX-1;/* DEC PRV CT  @ZA16816*/
         B     @RC00678                                            0680
@RF00678 LH    @10,RSMCNTFX(,RSMHDPTR)                             0680
         BCTR  @10,0                                               0680
         STH   @10,RSMCNTFX(,RSMHDPTR)                             0680
*                       PVTCNTFX=PVTCNTFX-1;/* DEC SYS CT    @ZA16816*/
@RC00678 LH    @10,PVTCNTFX(,PVTPTR)                               0681
         BCTR  @10,0                                               0681
         STH   @10,PVTCNTFX(,PVTPTR)                               0681
*                     END;          /*                       @ZA16816*/
*                   GOTO RELATE;    /*                       @ZA16816*/
         B     RELATE                                              0683
*                 END;              /*                       @ZA16816*/
*             END;                                                 0685
*                                                                  0686
*           /*********************************************************/
*           /*                                                       */
*           /* THE VIRTUAL PAGE OWNING THE RECLAIMED FRAME IS ALREADY*/
*           /* VALID IN REAL STORAGE AND THE PAGE IS TO BE PREFERRED */
*           /* FIXED. IT IS ASSUMED THAT THE PAGE IS NOT ALREADY     */
*           /* FIXED (PFTFXCT=0) AND THE REAL FRAME IS NOT IN THE    */
*           /* PREFERRED AREA.THE PAGE SHOULD BE MIGRATED TO A       */
*           /* PREFERRED AREA FRAME IF POSSIBLE BEFORE BEING FIXED. A*/
*           /* NON-V=R AREA FRAME WILL BE THE SECOND CHOICE. IF      */
*           /* NEITHER TYPE OF FRAME IS AVAILABLE, THE PAGE WILL BE  */
*           /* FIXED IN THE CURRENT FRAME IT OCCUPIES. NONE OF THE   */
*           /* ABOVE CONDITIONS ARE TESTED HERE AS EITHER IEAVFXLD OR*/
*           /* IEAVSWIN HAVE ALREADY TESTED THEM.            @ZA16816*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0686
*           ELSE                                                   0686
*             ;                                                    0686
@RF00670 DS    0H                                                  0687
*           RFY                                                    0687
*             R1 RSTD;                                             0687
*           R1=PTEPTR;                                             0688
         L     R1,PTEPTR(,PCBPTR)                                  0688
*           CALL IEAVINV;           /* INVALIDATE THE PAGE           */
         L     @15,PVTPINV(,PVTPTR)                                0689
         BALR  @14,@15                                             0689
*           R1=RBA;                 /* REAL ADDRESS OF THE FRAME     */
         L     R1,RBA(,PVTPTR)                                     0690
*           GEN(RRB   0(R1));       /* TEST TO SEE IF THE FRAME WAS
*                                      CHANGED                       */
         RRB   0(R1)
*           BC(5,CHANGED);                                         0692
         BC    5,CHANGED                                           0692
*           GEN(RRB   2048(R1));                                   0693
         RRB   2048(R1)
*           BC(5,CHANGED);                                         0694
         BC    5,CHANGED                                           0694
*           RFY                                                    0695
*             R0 RSTD;                                             0695
*                                                                  0695
*           /*********************************************************/
*           /*                                                       */
*           /* THE FRAME HAS NOT BEEN CHANGED, MAKE IT AVAILABLE     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0696
*NOCHANGE:                                                         0696
*           ;                                                      0696
NOCHANGE DS    0H                                                  0697
*           TOQUEUE#=PFTAFQN;                                      0697
         MVI   TOQUEUE#(PVTPTR),X'00'                              0697
*           RBNPARM=RBN;            /* PARMS FOR IEAVPFTE            */
         MVC   RBNPARM(2,PVTPTR),RBN(PVTPTR)                       0698
*           R0=PARMPFTE;                                           0699
         L     R0,PARMPFTE(,PVTPTR)                                0699
*           CALL IEAVPFTE;          /* SEND PFTE TO THE AVAILABLE  0700
*                                      FRAME QUEUE                   */
         L     @15,PVTPFTE(,PVTPTR)                                0700
         BALR  @14,@15                                             0700
*           GOTO RETCDEQ4;          /* EXIT, INDICATE RECLAIM FAILED */
         B     RETCDEQ4                                            0701
*                                                                  0702
*           /*********************************************************/
*           /*                                                       */
*           /* THE FRAME WAS CHANGED, TRANSFER IT TO ANOTHER FRAME IF*/
*           /* IT IS NOT IN THE PLPA.                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0702
*CHANGED:                                                          0702
*           ;                                                      0702
CHANGED  DS    0H                                                  0703
*           IF PFTVBN>=PVTLQSA THEN                                0703
         CLC   PFTVBN(2,PFTEPTR),PVTLQSA(PVTPTR)                   0703
         BNL   @RT00703                                            0703
*             GOTO NOCHANGE;                                       0704
*           ELSE                                                   0705
*             ;                                                    0705
*                                                                  0705
*           /*********************************************************/
*           /*                                                       */
*           /* USE SUBROUTINE GETAPREF TO FIND A PREFERRED AREA FRAME*/
*           /* TO TAKE THE PLACE OF THE FRAME IN THE NON-PREFERRED   */
*           /* AREA. IF NONE IS AVAILABLE AND THE SUBJECT FRAME IS A */
*           /* V=R, SEARCH FOR A NON-PREFERRED NON V=R TO TAKE ITS   */
*           /* PLACE. IF THERE ARE NO NON-PREF NON V=R AVAILABLE,    */
*           /* THEN KEEP THE ORIGINAL FRAME.                 @ZA16816*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0706
*           RESPECIFY                                              0706
*            (R4,                                                  0706
*             R5) RSTD;             /*                       @ZA16816*/
*           CALL GETAPREF;          /* GET A PREFERRED FRAME @ZA16816*/
         BAL   @14,GETAPREF                                        0707
*           IF R5^=0 THEN           /* IF SUCCESSFUL, GET THE      0708
*                                                            @ZA16816*/
         LTR   R5,R5                                               0708
         BZ    @RF00708                                            0708
*             R4=R5-PVTPFTP;        /* RBN AND DO MOVE PAGE. @ZA16816*/
         LR    R4,R5                                               0709
         SL    R4,PVTPFTP(,PVTPTR)                                 0709
*           ELSE                    /* HERE IF NONE AVAILABLE      0710
*                                                            @ZA16816*/
*             DO;                   /*                       @ZA16816*/
         B     @RC00708                                            0710
@RF00708 DS    0H                                                  0711
*               IF PFTVR='0'B THEN  /* IF OLD FRAME NOT V=R, @ZA16816*/
         TM    PFTVR(PFTEPTR),B'00100000'                          0711
         BNZ   @RF00711                                            0711
*                 DO;               /* CANNOT DO ANY BETTER  @ZA16816*/
*                   RESPECIFY                                      0713
*                    (PARM) RSTD;   /*                       @ZA16816*/
*                   PARM=PFTEPTR-PVTPFTP;/* GET RBN OF FRAME @ZA16816*/
         LR    PARM,PFTEPTR                                        0714
         SL    PARM,PVTPFTP(,PVTPTR)                               0714
*                   CALL IEAVPREF;  /* CONVERT ITS BOX       @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               0715
         BALR  @14,@15                                             0715
*                   RESPECIFY                                      0716
*                    (PARM) UNRSTD; /*                       @ZA16816*/
*                   PGTPVM='0'B;    /* REVALIDATE PAGE       @ZA16816*/
         L     @10,PTEPTR(,PCBPTR)                                 0717
         NI    PGTPVM(@10),B'11110111'                             0717
*                   GOTO BUMPFIX;   /* GO BUMP FIX COUNT     @ZA16816*/
         B     BUMPFIX                                             0718
*                 END;              /*                       @ZA16816*/
*                                                                  0719
*               /*****************************************************/
*               /*                                                   */
*               /* THERE ARE NO PREFERRED AREA FRAMES AVAILABLE. THE */
*               /* SUBJECT FRAME HOWEVER, IS A V=R. THEREFORE, LOOK  */
*               /* FOR A NON-PREFERRED NON V=R TO MIGRATE TO.        */
*               /*                                           @ZA16816*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0720
*               R5=SAVEPFTE;        /* GET A NON V=R FROM AFQ      0720
*                                                            @ZA16816*/
@RF00711 L     R5,SAVEPFTE(,PVTPTR)                                0720
*               IF R5=0 THEN        /* IF THERE WAS NONE,    @ZA16816*/
         LTR   R5,R5                                               0721
         BNZ   @RF00721                                            0721
*                 DO;               /* USE IEAVPREF.         @ZA16816*/
*                   RESPECIFY                                      0723
*                    (PASS,                                        0723
*                     PARM) RSTD;   /*                       @ZA16816*/
*                   PASS=2;         /* INDICATE NON-PREF PASS      0724
*                                                            @ZA16816*/
         LA    PASS,2                                              0724
*                   PARM=0;         /* INDICATE STEAL OPTION @ZA16816*/
         SLR   PARM,PARM                                           0725
*                   CALL IEAVPREF;  /* GET A NON-PREFERRED   @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               0726
         BALR  @14,@15                                             0726
*                   IF R15^=0 THEN  /* IF UNSUCCESSFUL THEN  @ZA16816*/
         LTR   R15,R15                                             0727
         BZ    @RF00727                                            0727
*                     DO;           /* ACCEPT SUBJECT FRAME. @ZA16816*/
*                       PGTPVM='0'B;/* REVALIDATE PAGE       @ZA16816*/
         L     @10,PTEPTR(,PCBPTR)                                 0729
         NI    PGTPVM(@10),B'11110111'                             0729
*                       PFTVRPLT='1'B;/* V=R POLLUTED        @ZA31128*/
         OI    PFTVRPLT(PFTEPTR),B'00010000'                       0730
*                       GOTO BUMPFIX;/* GO BUMP FIX COUNTS   @ZA16816*/
         B     BUMPFIX                                             0731
*                     END;          /*                       @ZA16816*/
*                   R5=R0;          /* GET PFTE ADDRESS      @ZA16816*/
@RF00727 LR    R5,R0                                               0733
*                   RESPECIFY                                      0734
*                    (PASS,                                        0734
*                     PARM) UNRSTD; /*                       @ZA16816*/
*                 END;              /*                       @ZA16816*/
*               R4=R5-PVTPFTP;      /* GET RBN OF NEW FRAME  @ZA16816*/
@RF00721 LR    R4,R5                                               0736
         SL    R4,PVTPFTP(,PVTPTR)                                 0736
*               RESPECIFY                                          0737
*                (PARM) RSTD;       /*                       @ZA16816*/
*               PARM=R4;            /* SET RBN FOR IEAVPREF  @ZA16816*/
         LR    PARM,R4                                             0738
*               CALL IEAVPREF;      /* CONVERT THE BOX       @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               0739
         BALR  @14,@15                                             0739
*               RESPECIFY                                          0740
*                (PARM) UNRSTD;     /*                       @ZA16816*/
*             END;                  /*                       @ZA16816*/
*                                                                  0741
*           /*********************************************************/
*           /*                                                       */
*           /* TRANSFER THE NEW FRAME TO THE SAME QUEUE AS THE OLD   */
*           /* ONE.                                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0742
*MOVEPAGE:                                                         0742
*           TOQUEUE#=PFTQNDX;       /* QUEUE ID OF OLD FRAME         */
@RC00708 DS    0H                                                  0742
MOVEPAGE MVC   TOQUEUE#(1,PVTPTR),PFTQNDX(PFTEPTR)                 0742
*           RBNPARM=R4;             /* RBN FOR PFTE MANAGER.         */
         STH   R4,RBNPARM(,PVTPTR)                                 0743
*           RFY                                                    0744
*            (R0,                                                  0744
*             R1) RSTD;                                            0744
*           R0=PARMPFTE;            /* RBN AND QUEUE ID PARAMETERS   */
         L     R0,PARMPFTE(,PVTPTR)                                0745
*           R1=ASCBPTR;             /* ASCB ADDRESS PARAMETER        */
         L     R1,ASCBPTR(,RSMHDPTR)                               0746
*           IF PCBSWPS1='1'B THEN   /* IF STG I SWAP-IN      @ZA16816*/
         TM    PCBSWPS1(PCBPTR),B'00100000'                        0747
         BNO   @RF00747                                            0747
*             DO;                   /* SWITCH RSMHDPTR       @ZA16816*/
*               RSMHDPTR=PSAAOLD->ASCBRSM;/* TO CURRENT FOR  @ZA16816*/
         L     @10,PSAAOLD                                         0749
         L     RSMHDPTR,ASCBRSM(,@10)                              0749
*               CALL IEAVPFTE;      /* PFTE DEQ AND ENQ      @ZA16816*/
         L     @15,PVTPFTE(,PVTPTR)                                0750
         BALR  @14,@15                                             0750
*               RSMHDPTR=PCBRASCB->ASCBRSM;/* RESTORE RSMHDPTR     0751
*                                                            @ZA16816*/
         L     @10,PCBRPTR(,PCBPTR)                                0751
         L     @10,PCBRASCB(,@10)                                  0751
         L     RSMHDPTR,ASCBRSM(,@10)                              0751
*             END;                  /*                       @ZA16816*/
*           ELSE                    /* IF NOT STG I          @ZA16816*/
*             CALL IEAVPFTE;        /* RSMHD PTR O.K.        @ZA16816*/
*                                                                  0753
         B     @RC00747                                            0753
@RF00747 L     @15,PVTPFTE(,PVTPTR)                                0753
         BALR  @14,@15                                             0753
*           /*********************************************************/
*           /*                                                       */
*           /* TRANSFER THE NECESSARY DATA FROM THE OLD FRAME TO THE */
*           /* NEW ONE.                                              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0754
*           R5->PFTPGID=PFTPGID;    /* ASID AND VBN OF OLD FRAME     */
@RC00747 L     @10,PFTPGID(,PFTEPTR)                               0754
         ST    @10,PFTPGID(,R5)                                    0754
*                                                                  0755
*           /*********************************************************/
*           /*                                                       */
*           /* THE TWO FRAMES NOW BELONG EXCLUSIVELY TO IEAVGFA. THE */
*           /* DATA IN THE OLD FRAME WILL BE COPIED TO THE NEW FRAME */
*           /* AT THIS POINT.                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0755
*           RFY                                                    0755
*            (R14,                                                 0755
*             R15) RSTD;                                           0755
*           R0=R4*256;              /* REAL STORAGE ADDRESS OF NEW 0756
*                                      PAGE                          */
         LR    R0,R4                                               0756
         SLA   R0,8                                                0756
*           R1=4096;                /* LENGTH OF THE NEW PAGE.       */
         L     R1,@CF02220                                         0757
*           R14=RBA;                /* REAL STORAGE ADDRESS OF THE 0758
*                                      OLD PAGE.                     */
*                                                                  0758
         L     R14,RBA(,PVTPTR)                                    0758
*           /*********************************************************/
*           /*                                                       */
*           /* THE MOVE WILL BE ACCOMPLISHED WITH ADDRESS TRANSLATION*/
*           /* OFF, SINCE THE TWO PAGES HAVE EFFECTIVELY THE SAME    */
*           /* VIRTUAL ADDRESS.                              @ZA30323*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0759
*           RFY                                                    0759
*            (R13) RSTD;                                           0759
*           R13=XPTPROT;            /* GET THE PROTECT KEY FOR THIS
*                                      PAGE.                         */
         L     @10,XPTEPTR(,PCBPTR)                                0760
         SLR   R13,R13                                             0760
         IC    R13,XPTPROT(,@10)                                   0760
*           GENERATE CODE NOFLOWS REFS(TEMPSAVE);                  0761
         LR    R15,R0         GET THE NEW PAGE ADDRESS FOR SSK
         SSK   R13,R15        SET THE PROTECT KEY OF THE NEW PAGE
         LA    R15,2048(R15)  SET IT FOR BOTH HALVES
         SSK   R13,R15
         LR    R15,R1         COPY THE PAGE LENGTH FOR THE FROM FIELD
         STNSM TEMPSAVE(PVTPTR),X'FB' TURN DAT OFF            @ZA30323
         MVCL  R0,R14                 TRANSFER THE PAGE
         STOSM TEMPSAVE(PVTPTR),X'04' TURN DAT ON             @ZA30323
*           RFY                                                    0762
*            (R13,                                                 0762
*             R14,                                                 0762
*             R15) UNRSTD;                                         0762
*           PVTMVCLC=PVTMVCLC+1;    /* INCR MOVE PAGE COUNT  @ZA16816*/
*                                                                  0763
         LA    @10,1                                               0763
         AL    @10,PVTMVCLC(,PVTPTR)                               0763
         ST    @10,PVTMVCLC(,PVTPTR)                               0763
*           /*********************************************************/
*           /*                                                       */
*           /* RETURN THE OLD FRAME TO THE AVAILABLE FRAME QUEUE.    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0764
*           RBNPARM=RBN;            /* RBN PARAMETER FOR PFTE      0764
*                                      MANAGER.                      */
         MVC   RBNPARM(2,PVTPTR),RBN(PVTPTR)                       0764
*           RBN=R4;                 /* SAVE THE RBN OF THE NEW FRAME.*/
         STCM  R4,3,RBN(PVTPTR)                                    0765
*           TOQUEUE#=PFTAFQN;       /* AVAILABLE FRAME QUEUE ID    0766
*                                      PARAMETER.                    */
         MVI   TOQUEUE#(PVTPTR),X'00'                              0766
*           R0=PARMPFTE;            /* PARAMETERS FOR PFTE MANAGER.  */
         L     R0,PARMPFTE(,PVTPTR)                                0767
*           R1=ASCBPTR;             /* ASCB ADDRESS PARAMETER.       */
         L     R1,ASCBPTR(,RSMHDPTR)                               0768
*           CALL IEAVPFTE;          /* FREE THE OLD FRAME.           */
         L     @15,PVTPFTE(,PVTPTR)                                0769
         BALR  @14,@15                                             0769
*           PFTEPTR=R5;             /* SET UP TO ADDRESS NEW PFTE  0770
*                                      NORMALLY.                     */
         LR    PFTEPTR,R5                                          0770
*           RFY                                                    0771
*            (R0,                                                  0771
*             R1,                                                  0771
*             R4,                                                  0771
*             R5,                                                  0771
*             R6) UNRSTD;                                          0771
*                                                                  0771
*           /*********************************************************/
*           /*                                                       */
*           /* NOW FINISH THE JOB OF REAL FRAME ASSIGNMENT.          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0772
*           PFTIRRG='0'B;           /* TURN OFF IRREG FLAG TO PREVENT
*                                      VIO RECLAIM OF FRAME  @YM07910*/
         NI    PFTIRRG(PFTEPTR),B'11101111'                        0772
*           PGTRSA=RBN+PGTPAMB;     /* ASSIGN THE PAGE AND VALIDATE
*                                      IT                            */
         L     @10,PTEPTR(,PCBPTR)                                 0773
         LA    @06,1                                               0773
         SLR   @15,@15                                             0773
         ICM   @15,3,RBN(PVTPTR)                                   0773
         ALR   @06,@15                                             0773
         STCM  @06,3,PGTRSA(@10)                                   0773
*           PCBRBN=RBN;             /* ASSIGN THE PAGE TO THE PCB.   */
         MVC   PCBRBN(2,PCBPTR),RBN(PVTPTR)                        0774
*                                                                  0775
*           /*********************************************************/
*           /*                                                       */
*           /* ANY NECESSARY FIX PROCESSING IS COMPLETED NOW AND THE */
*           /* FINAL TESTS IN THE FIRST PHASE OF RECLAIM PROCESSING  */
*           /* PERFORMED TO DECIDE WHETHER OR NOT RELATE PROCESSING  */
*           /* IS NECESSARY                                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0775
*BUMPFIX:                                                          0775
*           IF PFTFXCT=0            /* IS THIS FRAME ABOUT TO BE   0775
*                                      FIXED FOR THE FIRST TIME    0775
*                                                            @YA01572*/
*             THEN                                                 0775
BUMPFIX  LH    @10,PFTFXCT(,PFTEPTR)                               0775
         LTR   @10,@10                                             0775
         BNZ   @RF00775                                            0775
*             DO;                   /* YES, UPDATE FIX COUNTERS    0776
*                                                            @YA01572*/
*               COUNTSET='1'B;      /* SET FLAG INDICATING COUNTS  0777
*                                      HAVE BEEN UPDATED     @YA01572*/
*                                                                  0777
         OI    COUNTSET(PVTPTR),B'00010000'                        0777
*               /*****************************************************/
*               /*                                                   */
*               /* NOTE, THIS FLAG WILL BE TESTED IF AN OUTPUT PCB IS*/
*               /* FOUND ON AN I/O QUEUE WITH PCBNOREC ON. IN THIS   */
*               /* CASE, THE COUNTERS WILL BE DECREMENTED            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0778
*               PVTCNTFX=PVTCNTFX+1;/* INCREMENT THE GLOBAL COUNT  0778
*                                                            @YA01572*/
         LA    @10,1                                               0778
         LH    @06,PVTCNTFX(,PVTPTR)                               0778
         ALR   @06,@10                                             0778
         STH   @06,PVTCNTFX(,PVTPTR)                               0778
*               IF PCBVBN>=PVTLCSA THEN/* PCB FOR COMMON AREA PAGE 0779
*                                                            @YA01572*/
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0779
         BL    @RF00779                                            0779
*                 PVTCOMFX=PVTCOMFX+1;/* INCREMENT COMMON AREA COUNT
*                                                            @YA01572*/
         AH    @10,PVTCOMFX(,PVTPTR)                               0780
         STH   @10,PVTCOMFX(,PVTPTR)                               0780
*               ELSE                                               0781
*                 RSMCNTFX=RSMCNTFX+1;/* INCREMENT LOCAL COUNT     0781
*                                                            @YA01572*/
         B     @RC00779                                            0781
@RF00779 LA    @10,1                                               0781
         AH    @10,RSMCNTFX(,RSMHDPTR)                             0781
         STH   @10,RSMCNTFX(,RSMHDPTR)                             0781
*               IF PVTCNTFX=PVTMAXFX THEN/* HAS THE FIX COUNT      0782
*                                      THRESHOLD BEEN REACHED        */
@RC00779 CLC   PVTCNTFX(2,PVTPTR),PVTMAXFX(PVTPTR)                 0782
         BNE   @RF00782                                            0782
*                 DO;               /* YES, NOTIFY SRM       @YA01572*/
*                   RFY                                            0784
*                    (R1,                                          0784
*                     R13) RSTD;                                   0784
*                   R1=MAXFIXED;    /* GET CODE INDICATING FIX     0785
*                                      THRESHOLD HAS BEEN REACHED  0785
*                                                            @YA01572*/
         LA    R1,4                                                0785
*                   R13=ADDR(PVTSAVE);/* GET SRM A SAVE AREA @YA01572*/
         LA    R13,PVTSAVE(,PVTPTR)                                0786
*                   GENERATE REFS(CVT,CVTPTR,CVTOPTE) SETS(R0,R14,R15);
                SYSEVENT AVQLOW,ENTRY=BRANCH               @YA01572
*                 END;                                             0788
*             END;                  /* END OF PROCESSING FOR INITIAL
*                                      FIX OF FRAME                  */
@RF00782 DS    0H                                                  0790
*           PFTFXCT=PFTFXCT+PCBFXC; /* INCREMENT FIX COUNT BY THE  0790
*                                      COUNT IN THE INPUT PCB        */
@RF00775 SLR   @10,@10                                             0790
         IC    @10,PCBFXC(,PCBPTR)                                 0790
         AH    @10,PFTFXCT(,PFTEPTR)                               0790
         STH   @10,PFTFXCT(,PFTEPTR)                               0790
*           IF PGTPVM='0'B THEN                                    0791
         L     @10,PTEPTR(,PCBPTR)                                 0791
         TM    PGTPVM(@10),B'00001000'                             0791
         BZ    @RT00791                                            0791
*             GOTO RECDISP0;        /* VALID PAGE, RECLAIM         0792
*                                      SUCCESSFUL, EXIT              */
*           ELSE                                                   0793
*             GOTO RELATE;          /* THE PAGE IS NOT YET VALID,  0793
*                                      RELATE THIS PCB               */
         B     RELATE                                              0793
*         END;                                                     0794
*     END;                                                         0795
@RC00588 DS    0H                                                  0796
*                                                                  0796
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL ATTEMPT TO RELATE THE INPUT PCB TO ONE      */
*   /* ALREADY ON AN I/O QUEUE --- EITHER THE LOCAL I/O QUEUE        */
*   /* (ADDRESS SPACE ORIENTED) OR THE COMMON I/O QUEUE (SYSTEM      */
*   /* ORIENTED) WILL BE SEARCHED, DEPENDING UPON WHETHER THE VIRTUAL*/
*   /* ADDRESS REFERENCED RESIDES IN THE PRIVATE AREA OR COMMON AREA,*/
*   /* RESPECTIVELY.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0796
*RELATE:                                                           0796
*   ;                                                              0796
RELATE   DS    0H                                                  0797
*   IF PFTPCBSI='0'B THEN                                          0797
         TM    PFTPCBSI(PFTEPTR),B'00001000'                       0797
         BZ    @RT00797                                            0797
*     GOTO CODABEND;                /* IF NO PCB ALREADY EXISTS FOR
*                                      THIS FRAME, THEN GO TO      0798
*                                      CODABEND                      */
*   ELSE                                                           0799
*     ;                                                            0799
*                                                                  0799
*   /*****************************************************************/
*   /*                                                               */
*   /* ATTEMPT TO RELATE THIS PCB TO ONE ALREADY ON AN I/O QUEUE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0800
*   IF PCBVBN<PVTLCSA THEN                                         0800
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0800
         BNL   @RF00800                                            0800
*     PTR1=RSMLIOQF;                /* PRIVATE AREA ADDRESS, SEARCH
*                                      THE LOCAL I/O QUEUE           */
         L     PTR1,RSMLIOQF(,RSMHDPTR)                            0801
*   ELSE                                                           0802
*     PTR1=PVTCIOQF;                /* COMMON AREA PAGE, SEARCH THE
*                                      COMMON I/O QUEUE              */
         B     @RC00800                                            0802
@RF00800 L     PTR1,PVTCIOQF(,PVTPTR)                              0802
*   DO WHILE PTR1^=0;               /* SCAN THE PCBS ON THE I/O QUEUE*/
@RC00800 B     @DE00803                                            0803
@DL00803 DS    0H                                                  0804
*     IF PCBVBN=PTR1->PCBVBN THEN                                  0804
         CLC   PCBVBN(2,PCBPTR),PCBVBN(PTR1)                       0804
         BNE   @RF00804                                            0804
*       DO;                         /* THE PCBS MATCH (THEIR VIRTUAL
*                                      ADDRESSES ARE EQUAL )         */
*         GEN REFS(R15,PTR1,GFARECLM) SETS(R15,PCB);               0806
*                                                     /* @Z40WPYC */
TRACEZG2 EQU   *           INDICATE FRAME RECLAIMED     @Z40WPYC
         B     *+16        BRANCH AROUND PCB TRACE      @Z40WPYC
         L     R15,68(PTR1) GET CURRENT COUNT           @Z40WPYC
         AL    R15,GFARECLM INCREMENT BY 1              @Z40WPYC
         ST    R15,68(PTR1) STORE NEW COUNT             @Z40WPYC
*         IF CANCEL='1'B THEN                                      0807
         TM    CANCEL(PVTPTR),B'01000000'                          0807
         BNO   @RF00807                                            0807
*           DO;                                                    0808
*                                                                  0808
*             /*******************************************************/
*             /*                                                     */
*             /* RECLAIM HAS BEEN CANCELLED                  @ZA16816*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0809
*             IF PTR1->PCBIOI='0'B THEN                            0809
         TM    PCBIOI(PTR1),B'00000010'                            0809
         BNZ   @RF00809                                            0809
*               DO;                                                0810
*                                                                  0810
*                 /***************************************************/
*                 /*                                                 */
*                 /* INPUT IS GOING ON. CANCEL IT BY NOP'ING THE PCB */
*                 /* ON THE I/O QUEUE. BUILD A NEW PCB REFLECTING    */
*                 /* THIS PCB AND RELATE IT TO THE INPUT PCB. THEN GO*/
*                 /* THROUGH NORMAL GFA ALLOCATION FOR THE INPUT PCB */
*                 /* WHERE A PREFERRED FRAME SHOULD BE ALLOCATED AND */
*                 /* INPUT RESTARTED FOR THE VIRTUAL PAGE.   @ZA16816*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0811
*                 RESPECIFY                                        0811
*                  (R0,                                            0811
*                   R1) RSTD;       /*                       @ZA16816*/
*                 R0=1;             /* REQUEST ONE PCB       @ZA16816*/
         LA    R0,1                                                0812
*                 R1=0;             /* INDICATE BUILD OPTION @ZA16816*/
         SLR   R1,R1                                               0813
*                 CALL IEAVPCB;     /* GET A PCB             @ZA16816*/
         L     @15,PVTPCB(,PVTPTR)                                 0814
         BALR  @14,@15                                             0814
*                 IF R15=0 THEN     /* IF GOT A PCB,         @ZA16816*/
         SLR   @14,@14                                             0815
         CR    R15,@14                                             0815
         BNE   @RF00815                                            0815
*                   DO;             /* CONTINUE WITH CANCEL  @ZA16816*/
*                                                                  0816
*                     /***********************************************/
*                     /*                                             */
*                     /* TO REFLECT THE I/O Q PCB IN THE NEW PCB,    */
*                     /* COPY ALL FIELDS EXCEPT THE CHAIN POINTERS.  */
*                     /* NOTE, THAT THIS ALSO WILL CAUSE ANY RELATED */
*                     /* PCBS TO NOW BE RELATED TO THE NEW PCB.      */
*                     /*                                     @ZA16816*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0817
*                     R1->PCBCOPY=PTR1->PCBCOPY;/* COPY I/O Q PCB  0817
*                                                            @ZA16816*/
*                                                                  0817
         MVC   PCBCOPY(28,R1),PCBCOPY(PTR1)                        0817
*                     /***********************************************/
*                     /*                                             */
*                     /* NEXT, NOP THE PCB ON THE I/O QUEUE  @ZA16816*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0818
*                     PTR1->PCBFREAL='1'B;/* FREE PFTE ON I/O      0818
*                                      COMPLETION            @ZA16816*/
*                     PTR1->PCBRESET='0'B;/* NO RESET NEEDED @ZA16816*/
         OI    PCBFREAL(PTR1),B'10000000'                          0819
         NI    PCBRESET(PTR1),B'11101111'                          0819
*                     PTR1->PCBROOT='0'B;/* NO ROOT EXIT NEEDED    0820
*                                                            @ZA16816*/
         NI    PCBROOT(PTR1),B'11111011'                           0820
*                     PTR1->PCBRLPA=0;/* NO RELATED PCBS     @ZA16816*/
         STCM  @14,7,PCBRLPA(PTR1)                                 0821
*                     PTR1->PCBVBN=0;/* NO VBN               @ZA16816*/
*                                                                  0822
         STH   @14,PCBVBN(,PTR1)                                   0822
*                     /***********************************************/
*                     /*                                             */
*                     /* FINALLY, RELATE THE NEW PCB TO THE INPUT PCB*/
*                     /*                                     @ZA16816*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0823
*                     PCBRLPA=R1;   /*                       @ZA16816*/
         STCM  R1,7,PCBRLPA(PCBPTR)                                0823
*                     GOTO RETCDEQ4;/* REJECT THE RECLAIM    @ZA16816*/
         B     RETCDEQ4                                            0824
*                   END;            /* END SUCCESSFUL CANCEL @ZA16816*/
*                 ELSE              /* CANNOT GET A PCB      @ZA16816*/
*                   DO;             /* CONTINUE WITH RECLAIM @ZA16816*/
@RF00815 DS    0H                                                  0827
*                     IF PCBFXC=0 THEN/* IF NOT A FIX RQST   @ZA16816*/
         CLI   PCBFXC(PCBPTR),0                                    0827
         BE    @RT00827                                            0827
*                       GOTO IMMTEST;/* CONTINUE             @ZA16816*/
*                                                                  0828
*                     /***********************************************/
*                     /*                                             */
*                     /* IF CANCEL DUE TO A PREFERRED AREA FIX,      */
*                     /* CONVERT THE BOX IF A NON V=R FRAME AND THEN */
*                     /* CONTINUE WITH THE RECLAIM.          @ZA16816*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0829
*                     IF PCBPREFR='1'B&PFTVR='0'B THEN/* IF NOT A V=R
*                                                            @ZA16816*/
         TM    PCBPREFR(PCBPTR),B'00001000'                        0829
         BNO   @RF00829                                            0829
         TM    PFTVR(PFTEPTR),B'00100000'                          0829
         BNZ   @RF00829                                            0829
*                       DO;         /* CONVERT BOX           @ZA16816*/
*                         RESPECIFY                                0831
*                          (PARM) RSTD;/*                    @ZA16816*/
*                         PARM=PCBRBN;/* GET RBN             @ZA16816*/
         LH    PARM,PCBRBN(,PCBPTR)                                0832
         N     PARM,@CF02300                                       0832
*                         CALL IEAVPREF;/* CONVERT           @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               0833
         BALR  @14,@15                                             0833
*                         RESPECIFY                                0834
*                          (PARM) UNRSTD;/*                  @ZA16816*/
*                       END;                                       0835
*                     IF PCBPREFR='1'B THEN/* IF PREFERRED FIX THEN
*                                                            @ZA16816*/
@RF00829 TM    PCBPREFR(PCBPTR),B'00001000'                        0836
         BNO   @RF00836                                            0836
*                       DO;         /* UPDATE FIX CNTRS      @ZA16816*/
*                         PVTCNTFX=PVTCNTFX+1;/* INCREMENT THE GLOBAL
*                                      COUNT                 @YA01572*/
         LA    @10,1                                               0838
         LH    @06,PVTCNTFX(,PVTPTR)                               0838
         ALR   @06,@10                                             0838
         STH   @06,PVTCNTFX(,PVTPTR)                               0838
*                         IF PCBVBN>=PVTLCSA THEN/* PCB FOR COMMON 0839
*                                      AREA PAGE             @YA01572*/
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0839
         BL    @RF00839                                            0839
*                           PVTCOMFX=PVTCOMFX+1;/* INCREMENT COMMON
*                                      AREA COUNT            @YA01572*/
         AH    @10,PVTCOMFX(,PVTPTR)                               0840
         STH   @10,PVTCOMFX(,PVTPTR)                               0840
*                         ELSE                                     0841
*                           RSMCNTFX=RSMCNTFX+1;/* INCREMENT LOCAL 0841
*                                      COUNT                 @YA01572*/
         B     @RC00839                                            0841
@RF00839 LA    @10,1                                               0841
         AH    @10,RSMCNTFX(,RSMHDPTR)                             0841
         STH   @10,RSMCNTFX(,RSMHDPTR)                             0841
*                         IF PVTCNTFX=PVTMAXFX THEN/* HAS THE FIX  0842
*                                      COUNT THRESHOLD BEEN REACHED  */
@RC00839 CLC   PVTCNTFX(2,PVTPTR),PVTMAXFX(PVTPTR)                 0842
         BNE   @RF00842                                            0842
*                           DO;     /* YES, NOTIFY SRM       @YA01572*/
*                             RFY                                  0844
*                              (R1,                                0844
*                               R13) RSTD;                         0844
*                             R1=MAXFIXED;/* GET CODE INDICATING FIX
*                                      THRESHOLD HAS BEEN REACHED  0845
*                                                            @YA01572*/
         LA    R1,4                                                0845
*                             R13=ADDR(PVTSAVE);/* GET SRM A SAVE  0846
*                                      AREA                  @YA01572*/
         LA    R13,PVTSAVE(,PVTPTR)                                0846
*                             GENERATE REFS(CVT,CVTPTR,CVTOPTE) SETS(R0
*                                 ,R14,R15);                       0847
                SYSEVENT AVQLOW,ENTRY=BRANCH               @YA01572
*                           END;    /*                       @ZA16816*/
*                       END;        /* END OF PROCESSING FOR INITIAL
*                                      FIX OF FRAME                  */
@RF00842 DS    0H                                                  0850
*                     PFTFXCT=PFTFXCT+PCBFXC;/* INITIALIZE THE FIX 0850
*                                      COUNT                 @ZA16816*/
@RF00836 SLR   @10,@10                                             0850
         IC    @10,PCBFXC(,PCBPTR)                                 0850
         AH    @10,PFTFXCT(,PFTEPTR)                               0850
         STH   @10,PFTFXCT(,PFTEPTR)                               0850
*                     GOTO IMMTEST; /* TAKE THE FRAME, IMMEDIATE   0851
*                                      RECLAIM MAY BE POSSIBLE, IF 0851
*                                      THE I/O IS COMPLETE WITHOUT 0851
*                                      ERROR.                        */
         B     IMMTEST                                             0851
*                   END;            /*                       @ZA16816*/
*                 RESPECIFY                                        0853
*                  (R0,                                            0853
*                   R1) UNRSTD;     /*                       @ZA16816*/
*               END;                /* END CANCEL WHILE INBOUND    0854
*                                                            @ZA16816*/
*             ELSE                                                 0855
*               ;                   /* PAGE-OUT REQUEST, RECLAIM IS
*                                      NOT POSSIBLE, INITIALIZE THE
*                                      RELATED QUEUE                 */
@RF00809 DS    0H                                                  0856
*             PTR1->PCBNOREC='1'B;  /* INDICATE THAT THE OUTPUT PCB
*                                      IS NOT RECLAIMABLE UNTIL THE
*                                      OUTPUT I/O COMPLETES. @Z40WPYC*/
         OI    PCBNOREC(PTR1),B'00000100'                          0856
*             PTR1->PCBFREAL='1'B;  /* SET FREE REAL STOR FLAG IN  0857
*                                      CASE PGOUT WITH KEEPREAL    0857
*                                      SPECIFIED             @Z40WPYC*/
         OI    PCBFREAL(PTR1),B'10000000'                          0857
*             NORECPCB=PTR1;        /* SAVE PTR TO NON-RECLAIMABLE 0858
*                                      PCB FOR MAINLIN ALLOCATION  0858
*                                                            @Z40WPYC*/
         ST    PTR1,NORECPCB(,PVTPTR)                              0858
*             CALL GETGFAD;         /* OBTAIN RELATEDS       @Z40WPYC*/
         BAL   @14,GETGFAD                                         0859
*             GOTO RETCDEQ4;        /* ATTEMPT FRAME ALLOCATION    0860
*                                                            @Z40WPYC*/
         B     RETCDEQ4                                            0860
*           END;                    /* END CANCEL PROCESSING @ZA16816*/
*         ELSE                                                     0862
*           ;                       /* RECLAIM HAS NOT BEEN CANCELED */
@RF00807 DS    0H                                                  0863
*         IF PTR1->PCBIOI='1'B THEN                                0863
         TM    PCBIOI(PTR1),B'00000010'                            0863
         BNO   @RF00863                                            0863
*           DO;                     /* THIS IS A PAGE OUT            */
*             IF PFTSTEAL='1'B THEN                                0865
         TM    PFTSTEAL(PFTEPTR),B'00001000'                       0865
         BNO   @RF00865                                            0865
*               DO;                 /* IF THE FRAME IS MARKED PENDING
*                                      STEAL                         */
*                 PFTSTEAL='0'B;    /* REMOVE THE FRAME FROM THE   0867
*                                      PENDING STEAL STATUS          */
         NI    PFTSTEAL(PFTEPTR),B'11110111'                       0867
*                 PFTUIC=0;         /* ZERO THE UNREFERENCED INTERVAL
*                                      COUNT                         */
         MVI   PFTUIC(PFTEPTR),X'00'                               0868
*               END;                                               0869
*             ELSE                                                 0870
*               ;                                                  0870
@RF00865 DS    0H                                                  0871
*             IF PTR1->PCBVIO='0'B THEN                            0871
         TM    PCBVIO(PTR1),B'00000100'                            0871
         BNZ   @RF00871                                            0871
*               DO;                 /* THE PAGE IS OTHER THAN A VIO
*                                      WINDOW                @Z40WPYC*/
*                 IF PTR1->PCBNOREC='1'B THEN/* IF THIS PCB HAS BEEN
*                                      MARKED NON-RECLAIMABLE DO NOT
*                                      FREE THE AUX STOR COPY      0873
*                                                            @Z40WPYC*/
         TM    PCBNOREC(PTR1),B'00000100'                          0873
         BNO   @RF00873                                            0873
*                   DO;             /* PCB IS NON-RECLAIMABLE      0874
*                                                            @Z40WPYC*/
*                     NORECPCB=PTR1;/* SAVE PTR TO THE NON -       0875
*                                      RECLAIMABLE PCB FOR MAINLINE
*                                      ALLOCATION            @Z40WPYC*/
         ST    PTR1,NORECPCB(,PVTPTR)                              0875
*                     CALL GETGFAD; /* OBTAIN RELATEDS. THESE PCBS 0876
*                                      MAY BE PLACED BACK ON THE   0876
*                                      DEFER QUEUE IF A FRAME IS NOT
*                                      AVAILABLE TO SATISFY THE    0876
*                                      REQUEST               @Z40WPYC*/
         BAL   @14,GETGFAD                                         0876
*                     IF COUNTSET='1'B THEN                        0877
         TM    COUNTSET(PVTPTR),B'00010000'                        0877
         BNO   @RF00877                                            0877
*                       DO;         /* DECREMENT COUNTS IF THEY HAVE
*                                      BEEN UPDATED          @YA01572*/
*                         IF PCBVBN>=PVTLCSA THEN                  0879
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0879
         BL    @RF00879                                            0879
*                           PVTCOMFX=PVTCOMFX-1;/* IF COMMON AREA, 0880
*                                      DECREMENT COMMON AREA COUNT 0880
*                                                            @YA01572*/
         LH    @10,PVTCOMFX(,PVTPTR)                               0880
         BCTR  @10,0                                               0880
         STH   @10,PVTCOMFX(,PVTPTR)                               0880
*                         ELSE                                     0881
*                           RSMCNTFX=RSMCNTFX-1;/* DECREMENT COUNT 0881
*                                      FOR THIS ADDRESS SPACE      0881
*                                                            @YA01572*/
         B     @RC00879                                            0881
@RF00879 LH    @10,RSMCNTFX(,RSMHDPTR)                             0881
         BCTR  @10,0                                               0881
         STH   @10,RSMCNTFX(,RSMHDPTR)                             0881
*                         PVTCNTFX=PVTCNTFX-1;/* DECREMENT SYSTEM  0882
*                                      COUNT                 @YA01572*/
@RC00879 LH    @10,PVTCNTFX(,PVTPTR)                               0882
         BCTR  @10,0                                               0882
         STH   @10,PVTCNTFX(,PVTPTR)                               0882
*                         PFTFXCT=PFTFXCT-PCBFXC;/* ADJUST PFTE FIX
*                                      COUNT                 @YA01572*/
         LH    @10,PFTFXCT(,PFTEPTR)                               0883
         SLR   @06,@06                                             0883
         IC    @06,PCBFXC(,PCBPTR)                                 0883
         SLR   @10,@06                                             0883
         STH   @10,PFTFXCT(,PFTEPTR)                               0883
*                       END;                                       0884
*                     GOTO RETCDEQ4;/* ATTEMPT FRAME ALLOCATION    0885
*                                                            @Z40WPYC*/
         B     RETCDEQ4                                            0885
*                   END;            /* END NO RECLAIM        @Z40WPYC*/
*                 ELSE                                             0887
*                   ;               /* NOP OUTPUT PCB AND VALIDATE 0887
*                                      THE FRAME             @Z40WPYC*/
@RF00873 DS    0H                                                  0888
*                 PTR1->PCBVBN=0;                                  0888
         SLR   @10,@10                                             0888
         STH   @10,PCBVBN(,PTR1)                                   0888
*                 PTR1->PCBFREAL='0'B;/* DON'T FREE REAL STORAGE ON
*                                      PAGE-OUT                      */
*                 PTR1->PCBSUPRS='1'B;/* SUPPRESS REAL FRAME       0890
*                                      PROCESSING WHEN I/O COMPLETES */
         OI    PCBSUPRS(PTR1),B'00001000'                          0890
         NI    PCBFREAL(PTR1),B'01111111'                          0890
*                 PFTPCBSI='0'B;                                   0891
         NI    PFTPCBSI(PFTEPTR),B'11110111'                       0891
*                 PTR1->AIAFRAUX='1'B;/* TELL ASM TO FREE THE SLOT 0892
*                                      WHEN I/O COMPLETES    @Z40WPYC*/
         OI    AIAFRAUX(PTR1),B'10000000'                          0892
*                 PTR1->PCBXPTA->XPTPOINP='0'B;/* RSM MUST CLEAR THE
*                                      XPTPOINP BIT WHEN FRAUX IS SET
*                                      (NORMALLY DONE BY ASM).     0893
*                                                            @Z40WPYC*/
         L     @10,PCBXPTA-1(,PTR1)                                0893
         LA    @10,0(,@10)                                         0893
         NI    XPTPOINP(@10),B'11011111'                           0893
*                 PTR1->PCBXPTA->XPTXAV='0'B;/* MUST ALSO CLEAR THE
*                                      BIT INDICATING AUX STOR IS  0894
*                                      VALID                 @Z40WPYC*/
*                                                                  0894
         NI    XPTXAV(@10),B'10111111'                             0894
*                 /***************************************************/
*                 /*                                                 */
*                 /* THE STORAGE KEY MAY HAVE TO BE SET ON THIS PATH */
*                 /* BECAUSE THE CHANGE KEY FUNCTION COULD HAVE      */
*                 /* CHANGED THE KEY.                        @ZA12459*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0895
*                 IF PTR1->PCBXPTA->XPTCKF='0'B THEN/*       @ZA12459*/
         TM    XPTCKF(@10),B'00100000'                             0895
         BZ    @RT00895                                            0895
*                   GOTO VALIDATE;  /* EXIT WITH RECLAIMED FRAME.  0896
*                                      XPTXAV WILL REMAIN ON AND THE
*                                      CHANGE BIT IN THE KEY MUST  0896
*                                      REMAIN ON IN ORDER TO PREVENT
*                                      LOSS OF DATA.                 */
*                 ELSE              /*                       @ZA12459*/
*                   DO;             /*                       @ZA12459*/
*                     RFY                                          0898
*                      (R15,                                       0898
*                       R1) RSTD;                                  0898
*                     R1=RBA;       /*                       @ZA12459*/
         L     R1,RBA(,PVTPTR)                                     0899
*                     R15=PTR1->PCBXPTA->XPTPROT;/*          @ZA12459*/
         SLR   R15,R15                                             0900
         IC    R15,XPTPROT(,@10)                                   0900
*                     R15=R15×'00000006'X;/*                 @ZA12459*/
         O     R15,@CF02253                                        0901
*                     GEN(SSK  R15,R1);/*                    @ZA12459*/
         SSK  R15,R1
*                     R1=R1+2048;   /*                       @ZA12459*/
         AL    R1,@CF02222                                         0903
*                     GEN(SSK  R15,R1);/*                    @ZA12459*/
         SSK  R15,R1
*                     GOTO VALIDATE;/* EXIT WITH RECLAIMED FRAME.  0905
*                                                            @ZA12459*/
         B     VALIDATE                                            0905
*                     RFY                                          0906
*                      (R15,                                       0906
*                       R1) UNRSTD;                                0906
*                   END;            /*                       @ZA12459*/
*               END;                                               0908
*             ELSE                                                 0909
*               GOTO IMMRLATE;      /* AUXILIARY STORAGE IS TO BE  0909
*                                      SAVED.                        */
*           END;                                                   0910
*         ELSE                                                     0911
*           DO;                     /* PAGE IN REQUEST               */
@RF00863 DS    0H                                                  0912
*IMMTEST:                                                          0912
*             ;                     /* TEST FOR THE ABILITY TO     0912
*                                      INSTANTLY RECLAIM THE FRAME   */
IMMTEST  DS    0H                                                  0913
*             IF PTR1->PCBIOCMP='1'B&PCBPEX='1'B&PTR1->PCBIOERR='0'B&
*                 PCBRESET='0'B THEN                               0913
         TM    PCBIOCMP(PTR1),B'00000001'                          0913
         BNO   @RF00913                                            0913
         TM    PCBPEX(PCBPTR),B'01000000'                          0913
         BNO   @RF00913                                            0913
         TM    PCBIOERR(PTR1),B'00100000'                          0913
         BNZ   @RF00913                                            0913
         TM    PCBRESET(PCBPTR),B'00010000'                        0913
         BNZ   @RF00913                                            0913
*               DO;                                                0914
*                                                                  0914
*                 /***************************************************/
*                 /*                                                 */
*                 /* INSTANT RECLAIM --- IF THE I/O IS COMPLETE, NO  */
*                 /* ERROR OCCURRED, AND THIS IS A PAGE FAULT (BUT   */
*                 /* THE FAULTER WAS NOT PREVIOUSLY SUSPENDED), SET  */
*                 /* THE KEY OF THE FRAME FROM XPTPROT AND TAKE THIS */
*                 /* FRAME                                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0915
*                 RFY                                              0915
*                  (R1,                                            0915
*                   R15) RSTD;                                     0915
*                 R1=RBA;           /* GET THE PAGE ADDRESS          */
         L     R1,RBA(,PVTPTR)                                     0916
*                 R15=XPTPROT;      /* AND THE PROTECTION KEY        */
         L     @10,XPTEPTR(,PCBPTR)                                0917
         SLR   R15,R15                                             0917
         IC    R15,XPTPROT(,@10)                                   0917
*                 GEN(SSK   R15,R1);/* SET THE PROTECTION KEY OF THE
*                                      PAGE                          */
         SSK   R15,R1
*                 R1=R1+2048;       /* SECOND HALF OF PAGE'S ADDRESS */
         AL    R1,@CF02222                                         0919
*                 GEN(SSK  R15,R1);                                0920
         SSK  R15,R1
*                 RFY                                              0921
*                  (R15,                                           0921
*                   R1) UNRSTD;                                    0921
*                 PGTPVM='0'B;      /* VALIDATE THE PAGE             */
*                                                                  0922
         L     @10,PTEPTR(,PCBPTR)                                 0922
         NI    PGTPVM(@10),B'11110111'                             0922
*                 /***************************************************/
*                 /*                                                 */
*                 /* NOP THE PCB SO THAT IOCP WON'T PROCESS IT AGAIN */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0923
*                 PFTPCBSI='0'B;    /* REMOVE PAGE RELATIONSHIP      */
         NI    PFTPCBSI(PFTEPTR),B'11110111'                       0923
*                 PTR1->PCBVBN=0;   /*                       @YM06853*/
         SLR   @10,@10                                             0924
         STH   @10,PCBVBN(,PTR1)                                   0924
*                 PTR1->PCBFREAL='0'B;/* MAKE SURE FRAME NOT FREED 0925
*                                                            @YM06853*/
*                 PTR1->PCBVIO='0'B;/* PREVENT RECLAIM DUE TO PAGE 0926
*                                      FAULT FROM VAM ASSIGN @ZA03282*/
*                                                                  0926
         NI    PCBFREAL(PTR1),B'01111011'                          0926
*                 /***************************************************/
*                 /*                                                 */
*                 /*                                         @Z40WPYC*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0927
*                 RFY                                              0927
*                   R1 RSTD;                                       0927
*                 R1=PTR1->PCBRLPA; /* GET RELATED PCB POINTER     0928
*                                                            @YM06853*/
         L     R1,PCBRLPA-1(,PTR1)                                 0928
         LA    R1,0(,R1)                                           0928
*                 DO WHILE R1^=0;   /* ZERO VBN IN ALL RELATED PCBS  */
         B     @DE00929                                            0929
@DL00929 DS    0H                                                  0930
*                   R1->PCBVBN=0;                                  0930
         SLR   @10,@10                                             0930
         STH   @10,PCBVBN(,R1)                                     0930
*                   R1=R1->PCBRLPA; /* PICK UP NEXT RELATED          */
         L     @10,PCBRLPA-1(,R1)                                  0931
         LA    @10,0(,@10)                                         0931
         LR    R1,@10                                              0931
*                 END;                                             0932
@DE00929 LTR   R1,R1                                               0932
         BNZ   @DL00929                                            0932
*                 RFY                                              0933
*                   R1 UNRSTD;                                     0933
*                 GOTO INSTEXIT;    /* EXIT WITH THE RECLAIMED FRAME */
         B     INSTEXIT                                            0934
*               END;                                               0935
*             ELSE                                                 0936
*               ;                                                  0936
*                                                                  0936
@RF00913 DS    0H                                                  0937
*             /*******************************************************/
*             /*                                                     */
*             /* THIS IS A PAGE OUT WITH AUX STORAGE TO BE SAVED , OR*/
*             /* THIS IS A PAGE IN WHERE THE I/O WAS NOT COMPLETE, AN*/
*             /* ERROR OCCURRED, OR THIS IS NOT A PAGE FAULT...      */
*             /* SUSPEND EXECUTION OF THE FAULTER AND ADD THE PCB TO */
*             /* THE RELATED QUEUE                           @ZA27667*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0937
*IMMRLATE:                                                         0937
*             ;                     /* INSTANT RECLAIM FAILED, RELATE
*                                      THE PCB                       */
*                                                                  0937
IMMRLATE DS    0H                                                  0938
*             /*******************************************************/
*             /*                                                     */
*             /* COPY THE I/O COMPLETION FLAGS                       */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0938
*             IF PTR1->PCBIOCMP='1'B THEN                          0938
         TM    PCBIOCMP(PTR1),B'00000001'                          0938
         BNO   @RF00938                                            0938
*               PCBIOCMP='1'B;                                     0939
         OI    PCBIOCMP(PCBPTR),B'00000001'                        0939
*             ELSE                                                 0940
*               ;                                                  0940
@RF00938 DS    0H                                                  0941
*             IF PTR1->PCBIOERR='1'B THEN                          0941
         TM    PCBIOERR(PTR1),B'00100000'                          0941
         BNO   @RF00941                                            0941
*               PCBIOERR='1'B;                                     0942
         OI    PCBIOERR(PCBPTR),B'00100000'                        0942
*             ELSE                                                 0943
*               ;                                                  0943
@RF00941 DS    0H                                                  0944
*             IF PCBPEX='1'B&PCBRESET='0'B THEN                    0944
         TM    PCBPEX(PCBPTR),B'01000000'                          0944
         BNO   @RF00944                                            0944
         TM    PCBRESET(PCBPTR),B'00010000'                        0944
         BNZ   @RF00944                                            0944
*               DO;                 /* THIS IS A PAGING EXCEPTION, 0945
*                                      AND THE PAGE-FAULTER IS NOT 0945
*                                      ALREADY SUSPENDED, SUSPEND  0945
*                                      HIM.                          */
*                 RFY                                              0946
*                  (R4,                                            0946
*                   R13,                                           0946
*                   R5,                                            0946
*                   R6) RSTD;                                      0946
*                 R13=ADDR(PVTSAVE);                               0947
         LA    R13,PVTSAVE(,PVTPTR)                                0947
*                 CALL IEAVSUSP;    /* SUSPEND THE PAGE-FAULTER.     */
         L     @15,@CV02161                                        0948
         BALR  @14,@15                                             0948
*                 RCAPARM1=PCBPTR;  /* SAVE SUSPENDED PCB ADDRESS FOR
*                                      RECOVERY PURPUSES.            */
         L     @10,RCAPTR(,PVTPTR)                                 0949
         ST    PCBPTR,RCAPARM1(,@10)                               0949
*                 RFY                                              0950
*                   R13 UNRSTD;                                    0950
*                                                                  0950
*                 /***************************************************/
*                 /*                                                 */
*                 /* SUSPEND EXECUTION OF FAULTER                    */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0951
*                 PCBRESET='1'B;    /* INDICATE SUSPENDED          0951
*                                      PAGE-FAULTER                  */
         OI    PCBRESET(PCBPTR),B'00010000'                        0951
*                 IF R5=0 THEN                                     0952
         LTR   R5,R5                                               0952
         BNZ   @RF00952                                            0952
*                   DO;             /* PAGE-FAULT OCCURRED UNDER AN
*                                      SRB                           */
*                     PCBSRB=R4;    /* SAVE THE SRB ADDRESS          */
         ST    R4,PCBSRB(,PCBPTR)                                  0954
*                     PCBSRBMD='1'B;/* INDICATE SRB MODE             */
         OI    PCBSRBMD(PCBPTR),B'00100000'                        0955
*                     PCBRTPA=R5;   /* SAVE A NULL TCB ADDRESS       */
         STCM  R5,7,PCBRTPA(PCBPTR)                                0956
*                   END;                                           0957
*                 ELSE                                             0958
*                   DO;             /* PAGE-FAULT OCCURRED UNDER A 0958
*                                      TCB                           */
         B     @RC00952                                            0958
@RF00952 DS    0H                                                  0959
*                     PCBRTPA=R4;   /* SAVE THE TCB ADDRESS          */
         STCM  R4,7,PCBRTPA(PCBPTR)                                0959
*                     PCBRB=R5;     /* SAVE THE RB ADDR      @Z40WPYC*/
         ST    R5,PCBRB(,PCBPTR)                                   0960
*                   END;                                           0961
*                 IF R6=4 THEN                                     0962
@RC00952 C     R6,@CF00085                                         0962
         BNE   @RF00962                                            0962
*                   PCBLLHLD='1'B;  /* SET THE LOCAL-LOCK HELD FLAG
*                                      IF A LOCKED PAGE-FAULT        */
         OI    PCBLLHLD(PCBPTR),B'00010000'                        0963
*                 ELSE                                             0964
*                   ;                                              0964
@RF00962 DS    0H                                                  0965
*               END;                                               0965
*                                                                  0965
*             /*******************************************************/
*             /*                                                     */
*             /* ADD PCB TO RELATED QUEUE                    @ZA27667*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0966
*             ELSE                                                 0966
*               ;                                                  0966
@RF00944 DS    0H                                                  0967
*             DO WHILE PTR1->PCBRLPA^=0;/* FIND THE END OF THE     0967
*                                      RELATED QUEUE         @ZA27667*/
         B     @DE00967                                            0967
@DL00967 DS    0H                                                  0968
*               PTR1=PTR1->PCBRLPA; /*                       @ZA27667*/
         L     @10,PCBRLPA-1(,PTR1)                                0968
         LA    @10,0(,@10)                                         0968
         LR    PTR1,@10                                            0968
*             END;                  /*                       @ZA27667*/
@DE00967 L     @10,PCBRLPA-1(,PTR1)                                0969
         LA    @10,0(,@10)                                         0969
         LTR   @10,@10                                             0969
         BNZ   @DL00967                                            0969
*             PTR1->PCBRLPA=PCBPTR; /* ENQUEUE THE PCB ON THE RELATED
*                                      QUEUE                 @ZA27667*/
         STCM  PCBPTR,7,PCBRLPA(PTR1)                              0970
*             RFY                                                  0971
*              (R4,                                                0971
*               R5,                                                0971
*               R6) UNRSTD;                                        0971
*             INTRETCD=4;           /* SET THE EXTERNAL RETURN CODE
*                                      TO 4 - THE PAGE-FAULTING USER
*                                      HAS BEEN SUSPENDED, ALTHOUGH
*                                      THE FRAME HAS BEEN          0972
*                                      SUCCESSFULLY RECLAIMED        */
         MVI   INTRETCD(PVTPTR),X'04'                              0972
*             IF PCBSWPS2='0'B THEN /* IS THIS OTHER THAN A        0973
*                                      STAGE2-SWAP           @Z40FPYD*/
         TM    PCBSWPS2(PCBPTR),B'00000001'                        0973
         BNZ   @RF00973                                            0973
*               DO;                 /* YES, THIS IS NOT A STAGE2-SWAP
*                                      PCB                           */
*                 IF PCBSWPS1='1'B THEN/* IS THIS A SWAP-IN  @Z40FPYD*/
         TM    PCBSWPS1(PCBPTR),B'00100000'                        0975
         BNO   @RF00975                                            0975
*                   PVTSPIN=PVTSPIN-1;/* YES, DECREMENT SWAP-IN COUNT
*                                                            @Z40FPYD*/
         L     @10,PVTSPIN(,PVTPTR)                                0976
         BCTR  @10,0                                               0976
         ST    @10,PVTSPIN(,PVTPTR)                                0976
*                 ELSE              /* NO, NOT A SWAP-IN             */
*                   PVTNPREC=PVTNPREC+1;/* COUNT THE RECLAIM         */
         B     @RC00975                                            0977
@RF00975 LA    @10,1                                               0977
         AL    @10,PVTNPREC(,PVTPTR)                               0977
         ST    @10,PVTNPREC(,PVTPTR)                               0977
*                 IF PCBVBN<PVTLCSA THEN                           0978
@RC00975 CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    0978
         BNL   @RF00978                                            0978
*                   OUXBPREC=OUXBPREC+1;/* COUNT A PRIVATE AREA    0979
*                                      RECLAIM FOR THE OPTOMIZER     */
         L     @10,ASCBPTR(,RSMHDPTR)                              0979
         L     @10,OUXBPTR(,@10)                                   0979
         LA    @06,1                                               0979
         AL    @06,OUXBPREC(,@10)                                  0979
         ST    @06,OUXBPREC(,@10)                                  0979
*                 ELSE                                             0980
*                   DO;                                            0980
         B     @RC00978                                            0980
@RF00978 DS    0H                                                  0981
*                     PVTCAREC=PVTCAREC+1;/* COUNT A COMMON AREA   0981
*                                      RECLAIM FOR THE SYSTEM        */
         LA    @10,1                                               0981
         L     @06,PVTCAREC(,PVTPTR)                               0981
         ALR   @06,@10                                             0981
         ST    @06,PVTCAREC(,PVTPTR)                               0981
*                     OUXBCAPR=OUXBCAPR+1;/* INCREMENT COMMON AREA 0982
*                                      RECLAIMS FOR THIS ADDRESS   0982
*                                      SPACE                 @Z40FPYD*/
         L     @06,ASCBPTR(,RSMHDPTR)                              0982
         L     @06,OUXBPTR(,@06)                                   0982
         AL    @10,OUXBCAPR(,@06)                                  0982
         ST    @10,OUXBCAPR(,@06)                                  0982
*                   END;                                           0983
*               END;                                               0984
*             GOTO RETCDEQ0;        /* EXIT RECLAIM SUCCESSFUL       */
         B     RETCDEQ0                                            0985
*           END;                                                   0986
*       END;                                                       0987
*NEXTPCB:                                                          0988
*     PTR1=PTR1->PCBFQPA;           /* GET THE NEXT PCB ON THE QUEUE */
@RF00804 DS    0H                                                  0988
NEXTPCB  L     @10,PCBFQPA-1(,PTR1)                                0988
         LA    @10,0(,@10)                                         0988
         LR    PTR1,@10                                            0988
*   END;                                                           0989
@DE00803 LTR   PTR1,PTR1                                           0989
         BNZ   @DL00803                                            0989
*                                                                  0990
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR, NO MATCH COULD BE FOUND ON THE I/O QUEUE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0990
*CODABEND:                                                         0990
*   RCARCRD=UNRELATD;                                              0990
CODABEND L     @10,RCAPTR(,PVTPTR)                                 0990
         MVI   RCARCRD(@10),X'07'                                  0990
*   GEN(ABEND X'C0D',,,SYSTEM);                                    0991
         ABEND X'C0D',,,SYSTEM
*   IF PGTPVM='0'B THEN                                            0992
         L     @10,PTEPTR(,PCBPTR)                                 0992
         TM    PGTPVM(@10),B'00001000'                             0992
         BZ    @RT00992                                            0992
*     GOTO INSTEXIT;                /* VALID PAGE, EXIT              */
*   ELSE                                                           0994
*     PGTRSA=PGTPAMB+PGTPVMB;       /* INDICATE PAGE ASSIGNED, BUT 0994
*                                      NOT VALID                     */
         MVC   PGTRSA(2,@10),@CH00032                              0994
*RETCDEQ4:                                                         0995
*   ;                               /* EXIT WITH RETURN CODE TO    0995
*                                      INDICATE ASYNCHRONOUS       0995
*                                      COMPLETIONOF THE REQUEST      */
RETCDEQ4 DS    0H                                                  0996
*   R14=RCLMRET;                    /* RESTORE RETURN ADDRESS        */
         L     R14,RCLMRET(,PVTPTR)                                0996
*   GENERATE;                                                      0997
         LA    R15,4                    RECLAIM FAILED ERROR CODE
         BR    R14                      RETURN TO THE CALLER
*                                                                  0998
*/* ******************************************************************/
*/*                                                                  */
*/*    GETAPREF SUBROUTINE                                           */
*/*                                                                  */
*/*          FUNCTION- WILL ATTEMPT TO LOCATE A PREFERRED AREA       */
*/*                    FRAME WHICH CAN BE ALLOCATED. THE AFQ IS      */
*/*                    CONSIDERED THE PRIMARY SOURCE. IF NONE CAN    */
*/*                    BE FOUND ON THE AFQ, IEAVPREF IS USED TO      */
*/*                    STEAL ONE FROM ANOTHER QUEUE.                 */
*/*                                                                  */
*/*          INPUT   - R2 = ASSUMED TO BE RSMHD ADDR FOR CUR A.S.    */
*/*                         UNLESS STAGE I SWAP-IN.  IN THIS CASE IT */
*/*                         IS ASSUMED TO BE FOR THE ASCB FOR THE    */
*/*                         SWAP-IN A.S. AS FOUND IN PCBRASCB.       */
*/*                    R3 = ADDRESS OF PVT                           */
*/*                    R11= PCB ADDRESS                              */
*/*                    R14= RETURN ADDRESS                           */
*/*                                                                  */
*/*          OUTPUT  - R5 = 0:   NO PREFERRED AREA PFTE COULD BE     */
*/*                              LOCATED. IF SAVEPFTE IS NOT ZERO,   */
*/*                              IT WILL CONTAIN THE ADDRESS OF A    */
*/*                              NON-PREFERRED NON V=R PFTE ON THE   */
*/*                              AFQ.                                */
*/*                    R5 NOT 0: R5 CONTAINS THE ADDRESS OF AN       */
*/*                              ALLOCATABLE PREFERRED AREA PFTE.    */
*/*                                                          @ZA16816*/
*/* ******************************************************************/
*                                                                  0998
*GETAPREF:                                                         0998
*   RESPECIFY                                                      0998
*    (R5,                                                          0998
*     R6) RSTD;                     /*                       @ZA16816*/
GETAPREF DS    0H                                                  0999
*   SUBRTSAV=R14;                   /* SAVE RETURN ADDRESS   @ZA16816*/
         ST    R14,SUBRTSAV(,PVTPTR)                               0999
*   R5=0;                           /* INIT OUTPUT PFTE PTR  @ZA16816*/
         SLR   R5,R5                                               1000
*   SAVEPFTE=0;                     /* INIT OUTPUT PFTE PTR  @ZA16816*/
         SLR   @10,@10                                             1001
         ST    @10,SAVEPFTE(,PVTPTR)                               1001
*   R6=PVTAFQF;                     /* GET RBN OF 1ST PFTE ON AFQ  1002
*                                                            @ZA16816*/
         LH    R6,PVTAFQF(,PVTPTR)                                 1002
         N     R6,@CF02300                                         1002
*   DO WHILE R6^=0;                 /* SCAN ENTIRE QUEUE     @ZA16816*/
         B     @DE01003                                            1003
@DL01003 DS    0H                                                  1004
*     R6=PVTPFTP+R6;                /* GET ADDRESS OF PFTE   @ZA16816*/
         AL    R6,PVTPFTP(,PVTPTR)                                 1004
*     IF R6->PFTPREF='1'B THEN      /* IF PREFERRED AREA PFTE      1005
*                                                            @ZA16816*/
         TM    PFTPREF(R6),B'00000100'                             1005
         BNO   @RF01005                                            1005
*       DO;                         /* THEN WANT THE PFTE -  @ZA16816*/
*         R5=R6;                    /* SAVE PFTR ADDRESS AND @ZA16816*/
         LR    R5,R6                                               1007
*         R6=0;                     /* KILL THE SCAN.        @ZA16816*/
         SLR   R6,R6                                               1008
*       END;                        /*                       @ZA16816*/
*     ELSE                          /* IF NON-PREFERRED PFTE,      1010
*                                                            @ZA16816*/
*       DO;                         /* LOOK FOR NON V=R      @ZA16816*/
         B     @RC01005                                            1010
@RF01005 DS    0H                                                  1011
*         IF R6->PFTVR='0'B THEN    /* IF NON V=R PFTE,      @ZA16816*/
         TM    PFTVR(R6),B'00100000'                               1011
         BNZ   @RF01011                                            1011
*           SAVEPFTE=R6;            /* SAVE PTR FOR OUTPUT   @ZA16816*/
         ST    R6,SAVEPFTE(,PVTPTR)                                1012
*         R6=R6->PFTFQPTR;          /* GET NEXT PFTE RBN ON AFQ    1013
*                                                            @ZA16816*/
@RF01011 LH    @10,PFTFQPTR(,R6)                                   1013
         N     @10,@CF02300                                        1013
         LR    R6,@10                                              1013
*       END;                        /*                       @ZA16816*/
*   END;                            /* END OF DO WHILE       @ZA16816*/
@RC01005 DS    0H                                                  1015
@DE01003 SLR   @10,@10                                             1015
         CR    R6,@10                                              1015
         BNE   @DL01003                                            1015
*   IF R5=0 THEN                    /* IF NO PREF PFTE ON AFQ      1016
*                                                            @ZA16816*/
         CR    R5,@10                                              1016
         BNE   @RF01016                                            1016
*     DO;                           /* TRY IEAVPREF NEXT.    @ZA16816*/
*       RESPECIFY                                                  1018
*        (PASS,                                                    1018
*         PARM) RSTD;               /*                       @ZA16816*/
*       PASS=1;                     /* INDICATE PASS 1       @ZA16816*/
         LA    PASS,1                                              1019
*       PARM=0;                     /* INDICATE STEAL OPTION @ZA16816*/
         SLR   PARM,PARM                                           1020
*       CALL IEAVPREF;              /* TRY TO STEAL A PREF   @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               1021
         BALR  @14,@15                                             1021
*       R5=R0;                      /* SAVE PFTE ADDRESS     @ZA16816*/
*                                                                  1022
         LR    R5,R0                                               1022
*       /*************************************************************/
*       /*                                                           */
*       /* EXIT IF RETURN CODE FROM IEAVPREF IS 0 OR 4. IF 0, THEN R5*/
*       /* WILL HOLD ADDRESS OF PREFERRED AREA PFTE. IF 4, THEN R5   */
*       /* SHOULD BE SET TO ZERO. IF RETURN CODE FROM IEAVPREF IS 8, */
*       /* THEN R5 HOLDS THE ADDRESS OF PFTE FOR A PREFERRED FRAME   */
*       /* WHICH IS BACKING A CHANGED PAGE. IN THIS CASE, TRY TO MOVE*/
*       /* THE PAGE INTO A SECOND FRAME THEREBY MAKING THE PREFERRED */
*       /* FRAME AVAILABLE.                                  @ZA16816*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1023
*       IF R15^=0 THEN              /* IF RC NOT 0, THEN     @ZA16816*/
         LTR   R15,R15                                             1023
         BZ    @RF01023                                            1023
*         DO;                       /* CHECK FOR 4 OR 8      @ZA16816*/
*           IF R15=4 THEN           /* IF RC=4 THEN CLEAR THE      1025
*                                                            @ZA16816*/
         C     R15,@CF00085                                        1025
         BNE   @RF01025                                            1025
*             R5=0;                 /* OUTPUT REG AND EXIT.  @ZA16816*/
         SLR   R5,R5                                               1026
*           ELSE                    /* HERE IF RC=8          @ZA16816*/
*             DO;                   /* SET R12 = 0 OR ASCB PTR OF  1027
*                                                            @ZA16816*/
         B     @RC01025                                            1027
@RF01025 DS    0H                                                  1028
*               R12=R1;             /* ASCB OWNING R5 PFTE.  @ZA16816*/
         LR    R12,R1                                              1028
*               R6=PVTPFTP+PVTAFQF; /* GET FIRST AFQ PFTE    @ZA16816*/
         LH    @10,PVTAFQF(,PVTPTR)                                1029
         N     @10,@CF02300                                        1029
         L     R6,PVTPFTP(,PVTPTR)                                 1029
         ALR   R6,@10                                              1029
*               IF PVTAFQF=0 THEN   /* IF THE AFQ IS EMPTY,  @ZA16816*/
         LTR   @10,@10                                             1030
         BNZ   @RF01030                                            1030
*                 DO;               /* USE IEAVPREF.         @ZA16816*/
*                   PASS=2;         /* INDICATE PASS 2       @ZA16816*/
         LA    PASS,2                                              1032
*                   PARM=0;         /* INDICATE STEAL OPTION @ZA16816*/
         SLR   PARM,PARM                                           1033
*                   CALL IEAVPREF;  /* TRY TO GET A NON-PREF @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               1034
         BALR  @14,@15                                             1034
*                   IF R15^=0 THEN  /* IF NOT SUCCESSFUL     @ZA16816*/
         LTR   R15,R15                                             1035
         BZ    @RF01035                                            1035
*                     DO;           /* TRY FOR A V=R PFTE.   @ZA16816*/
*                       PASS=3;     /* INDICATE PASS 3       @ZA16816*/
         LA    PASS,3                                              1037
*                       PARM=0;     /* INDICATE STEAL OPTION @ZA16816*/
         SLR   PARM,PARM                                           1038
*                       CALL IEAVPREF;/* TRY TO GET A V=R PFTE     1039
*                                                            @ZA16816*/
         L     @15,PVTPPREF(,PVTPTR)                               1039
         BALR  @14,@15                                             1039
*                       IF R15^=0 THEN/* IF STILL UNSUCCESSFUL,    1040
*                                                            @ZA16816*/
         LTR   R15,R15                                             1040
         BZ    @RF01040                                            1040
*                         DO;       /* THEN                  @ZA16816*/
*                           R5=0;   /* INDICATE FAILURE,     @ZA16816*/
         SLR   R5,R5                                               1042
*                           R14=SUBRTSAV;/* RESTORE RETURN ADDR,   1043
*                                                            @ZA16816*/
         L     R14,SUBRTSAV(,PVTPTR)                               1043
*                           GEN(BR R14);/* RETURN TO CALLER  @ZA16816*/
         BR R14
*                         END;      /*                       @ZA16816*/
*                     END;          /*                       @ZA16816*/
@RF01040 DS    0H                                                  1047
*                   R6=R0;          /* SAVE PFTE ADDRESS     @ZA16816*/
@RF01035 LR    R6,R0                                               1047
*                 END;              /*                       @ZA16816*/
*                                                                  1048
*               /*****************************************************/
*               /*                                                   */
*               /* AT THIS POINT, R5 POINTS TO A CHANGED PREFERRED   */
*               /* AREA FRAME AND R6 POINTS TO A NON-PREFERRED, BUT  */
*               /* AVAILABLE FRAME. MOVE THE R5 PAGE TO THE R6 FRAME.*/
*               /*                                           @ZA16816*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1049
*               R1=256*R5->PFTVBN;  /* GET VIRTUAL ADDRESS   @ZA16816*/
@RF01030 LH    R1,PFTVBN(,R5)                                      1049
         N     R1,@CF02300                                         1049
         SLA   R1,8                                                1049
*               IF R12^=0 THEN      /* IF PREF PFTE FROM A   @ZA16816*/
         LTR   R12,R12                                             1050
         BZ    @RF01050                                            1050
*                 DO;               /* FOREIGN LFQ THEN TRAS @ZA16816*/
*                   PVTTASID=R12->ASCBASID;/* SET ASID FOR RCV     1052
*                                                            @ZA16816*/
         MVC   PVTTASID(2,PVTPTR),ASCBASID(R12)                    1052
*                   LCCAASID=R12->ASCBASID;/* SET ASID FOR RTM     1053
*                                                            @ZA16816*/
         L     @10,LCCAPTR                                         1053
         XC    LCCAASID+2(2,@10),LCCAASID+2(@10)                   1053
         MVC   LCCAASID(2,@10),ASCBASID(R12)                       1053
*                   GENERATE CODE REFS(ASCBSTOR);                  1054
                LCTL 1,1,ASCBSTOR(R12)      -----TRAS -----
*                   RSMHDPTR=R12->ASCBRSM;/* GET CORRECT RSMHD     1055
*                                                            @ZA16816*/
         L     RSMHDPTR,ASCBRSM(,R12)                              1055
*                 END;              /*                       @ZA16816*/
*               ELSE                /* IF NOT FOREIGN LFQ    @ZA16816*/
*                 RSMHDPTR=PSAAOLD->ASCBRSM;/* USE CURRENT   @ZA16816*/
         B     @RC01050                                            1057
@RF01050 L     @10,PSAAOLD                                         1057
         L     RSMHDPTR,ASCBRSM(,@10)                              1057
*               CALL IEAVFP2;       /* GET PGTE ADDRESS      @ZA16816*/
@RC01050 L     @15,PVTPFP2(,PVTPTR)                                1058
         BALR  @14,@15                                             1058
*               IF R15^=0 THEN      /* IF FINDPAGE FAILED,   @ZA16816*/
         SLR   @14,@14                                             1059
         CR    R15,@14                                             1059
         BE    @RF01059                                            1059
*                 DO;               /* C0D THEN RETURN.      @ZA16816*/
*                   IF R12^=0 THEN  /* IF DID A TRAS THEN    @ZA16816*/
         CR    R12,@14                                             1061
         BE    @RF01061                                            1061
*                     DO;           /* TRAS BACK.            @ZA16816*/
*                       R15=PSAAOLD;/* GET CURRENT ASCB ADDR @ZA16816*/
         L     R15,PSAAOLD                                         1063
*                       GENERATE CODE REFS(ASCBSTOR);              1064
                  LCTL 1,1,ASCBSTOR(R15)     ----- TRAS BACK -----
*                       LCCAASID=0; /* CLEAR TRAS INDICATOR  @ZA16816*/
         SLR   @10,@10                                             1065
         L     @04,LCCAPTR                                         1065
         ST    @10,LCCAASID(,@04)                                  1065
*                       PVTTASID=0; /* CLEAR TRAS INDICATOR  @ZA16816*/
         STH   @10,PVTTASID(,PVTPTR)                               1066
*                     END;          /*                       @ZA16816*/
*                   IF PCBSWPS1='1'B THEN/* IF STG I RESTOR  @ZA16816*/
@RF01061 TM    PCBSWPS1(PCBPTR),B'00100000'                        1068
         BNO   @RF01068                                            1068
*                     RSMHDPTR=PCBRASCB->ASCBRSM;/* VIA PCBR @ZA16816*/
         L     @10,PCBRPTR(,PCBPTR)                                1069
         L     @10,PCBRASCB(,@10)                                  1069
         L     RSMHDPTR,ASCBRSM(,@10)                              1069
*                   ELSE            /* IF NOT, RESTORE       @ZA16816*/
*                     RSMHDPTR=PSAAOLD->ASCBRSM;/* VIA CUR.  @ZA16816*/
         B     @RC01068                                            1070
@RF01068 L     @10,PSAAOLD                                         1070
         L     RSMHDPTR,ASCBRSM(,@10)                              1070
*                   RCARCRD='01'X;  /* SET REASON CODE       @ZA16816*/
@RC01068 L     @10,RCAPTR(,PVTPTR)                                 1071
         MVI   RCARCRD(@10),X'01'                                  1071
*                   GEN NOFLOWS SETS(R1)(ABEND X'C0D',,,SYSTEM);   1072
         ABEND X'C0D',,,SYSTEM
*                   R5=0;           /* INDICATE FAILURE,     @ZA16816*/
         SLR   R5,R5                                               1073
*                   R14=SUBRTSAV;   /* RESTORE RETURN ADDRESS      1074
*                                                            @ZA16816*/
         L     R14,SUBRTSAV(,PVTPTR)                               1074
*                   GEN(BR R14);    /* RETURN TO CALLER      @ZA16816*/
         BR R14
*                 END;              /*                       @ZA16816*/
*               RESPECIFY                                          1077
*                (R4) RSTD;         /*                       @ZA16816*/
@RF01059 DS    0H                                                  1078
*               R4=R0;              /* SAVE PGTE ADDRESS     @ZA16816*/
         LR    R4,R0                                               1078
*               PROTKEY=R1->XPTPROT;/* SAVE XPTE PROTECT KEY @ZA16816*/
         MVC   PROTKEY(1,PVTPTR),XPTPROT(R1)                       1079
*               R1=R0;              /* SET PGTE ADDR FOR INV @ZA16816*/
         LR    R1,R0                                               1080
*               CALL IEAVINV;       /* INVALIDATE THE PAGE   @ZA16816*/
         L     @15,PVTPINV(,PVTPTR)                                1081
         BALR  @14,@15                                             1081
*               RESPECIFY                                          1082
*                (R14,                                             1082
*                 R15) RSTD;        /*                       @ZA16816*/
*               R14=PROTKEY;        /* GET PROT KEY FOR SSK  @ZA16816*/
         SLR   R14,R14                                             1083
         IC    R14,PROTKEY(,PVTPTR)                                1083
*               R15=256*(R6-PVTPFTP);/* GET RSA FOR SSK      @ZA16816*/
         LR    R15,R6                                              1084
         SL    R15,PVTPFTP(,PVTPTR)                                1084
         SLA   R15,8                                               1084
*               R0=R15;             /* SAVE FOR MVCL LATER   @ZA16816*/
         LR    R0,R15                                              1085
*               GENERATE CODE NOFLOWS;                             1086
              SSK R14,R15         SET PROTECT KEY - 1ST 2K BLOCK
              LA  R15,2048(R15)   GET RSA OF NEXT 2K BLOCK
              SSK R14,R15         SET PROTECT KEY - 2ND 2K BLOCK
*               R1=4096;            /* NO OF BYTES TO MOVE   @ZA16816*/
         L     @10,@CF02220                                        1087
         LR    R1,@10                                              1087
*               R14=256*(R5-PVTPFTP);/* GET FROM ADDR (REAL) @ZA16816*/
         LR    R14,R5                                              1088
         SL    R14,PVTPFTP(,PVTPTR)                                1088
         SLA   R14,8                                               1088
*               R15=4096;           /* NO OF BYTES TO MOVE   @ZA16816*/
*                                                                  1089
         LR    R15,@10                                             1089
*               /*****************************************************/
*               /*                                                   */
*               /* THE PAGE AT THE REAL ADDRESS IN R14 IS TO BE MOVED*/
*               /* TO THE REAL ADDRESS IN R0. DAT IS TURNED OFF SINCE*/
*               /* THE R14 PAGE IS MARKED INVALID. NOTE THAT THE     */
*               /* CHANGE BIT FOR THE R0 PAGE WILL BE TURNED ON, AS  */
*               /* IT SHOULD BE, BY THE MVCL.                @ZA16816*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  1090
*               GENERATE CODE NOFLOWS REFS(TEMPSAVE);              1090
              STNSM TEMPSAVE(PVTPTR),X'FB'  TURN DAT OFF
              MVCL  R0,R14                  MOVE PAGE-TURN CHNG BIT ON
              STOSM TEMPSAVE(PVTPTR),X'04'  TURN DAT BACK ON
*               RESPECIFY                                          1091
*                (R14,                                             1091
*                 R15) UNRSTD;      /*                       @ZA16816*/
*               PVTMVCLC=PVTMVCLC+1;/* INCR MOVED PAGES COUNT      1092
*                                                            @ZA16816*/
         LA    @10,1                                               1092
         AL    @10,PVTMVCLC(,PVTPTR)                               1092
         ST    @10,PVTMVCLC(,PVTPTR)                               1092
*               R6->PFTPGID=R5->PFTPGID;/* COPY ASID AND VBN @ZA16816*/
         L     @10,PFTPGID(,R5)                                    1093
         ST    @10,PFTPGID(,R6)                                    1093
*               R6->PFTIRRG='0'B;   /* CLEAR IRRG BIT        @ZA16816*/
         NI    PFTIRRG(R6),B'11101111'                             1094
*               R0=(65536*(R5->PFTQNDX))×(R6-PVTPFTP);/* PARM      1095
*                                                            @ZA16816*/
         SLR   R0,R0                                               1095
         IC    R0,PFTQNDX(,R5)                                     1095
         SLA   R0,16                                               1095
         LR    @10,R6                                              1095
         SL    @10,PVTPFTP(,PVTPTR)                                1095
         OR    R0,@10                                              1095
*               IF R12=0 THEN       /* IF NOT IN TRAS MODE,  @ZA16816*/
         LTR   R12,R12                                             1096
         BNZ   @RF01096                                            1096
*                 R1=PSAAOLD;       /* TO ASCB=CURRENTASCB   @ZA16816*/
         L     R1,PSAAOLD                                          1097
*               ELSE                /* IF IN TRAS MODE,      @ZA16816*/
*                 R1=R12;           /* TO ASCB=NON-CURRENT   @ZA16816*/
         B     @RC01096                                            1098
@RF01096 LR    R1,R12                                              1098
*               RSMHDPTR=PSAAOLD->ASCBRSM;/* SET RSMHDPTR FOR DEQ  1099
*                                                            @ZA16816*/
@RC01096 L     @10,PSAAOLD                                         1099
         L     RSMHDPTR,ASCBRSM(,@10)                              1099
*               CALL IEAVPFTE;      /* DEQ/ENQ THE NEW PFTE  @ZA16816*/
         L     @15,PVTPFTE(,PVTPTR)                                1100
         BALR  @14,@15                                             1100
*               R4->PGTRSA=(R6-PVTPFTP);/* PUT RBN IN PGTE   @ZA16816*/
         LR    @10,R6                                              1101
         SL    @10,PVTPFTP(,PVTPTR)                                1101
         STCM  @10,3,PGTRSA(R4)                                    1101
*               R4->PGTPAM='1'B;    /* PAGE VALID, GETMAINED @ZA16816*/
         OI    PGTPAM(R4),B'00000001'                              1102
*               RESPECIFY                                          1103
*                (R4) UNRSTD;       /*                       @ZA16816*/
*               IF R12^=0 THEN      /* IF IN TRAS MODE, TRAS @ZA16816*/
         LTR   R12,R12                                             1104
         BZ    @RF01104                                            1104
*                 DO;               /* BACK AND DEQ OLD PFTE @ZA16816*/
*                   R1=PSAAOLD;     /* GET CURRENT ASCB      @ZA16816*/
         L     R1,PSAAOLD                                          1106
*                   GENERATE CODE NOFLOWS REFS(ASCBSTOR);          1107
                 LCTL 1,1,ASCBSTOR(R1) ----- TRAS BACK -----
*                   LCCAASID=0;     /* CLEAR TRAS INDICATOR  @ZA16816*/
         SLR   @10,@10                                             1108
         L     @04,LCCAPTR                                         1108
         ST    @10,LCCAASID(,@04)                                  1108
*                   PVTTASID=0;     /* CLEAR TRAS INDICATOR  @ZA16816*/
         STH   @10,PVTTASID(,PVTPTR)                               1109
*                   R0=(65536*PFTNQN)×(R5-PVTPFTP);/* SET PARMS    1110
*                                                            @ZA16816*/
         LR    R0,R5                                               1110
         SL    R0,PVTPFTP(,PVTPTR)                                 1110
         O     R0,@CF02289                                         1110
*                   RSMHDPTR=R12->ASCBRSM;/* SET RSMHDPTR FOR DEQ  1111
*                                                            @ZA16816*/
         L     RSMHDPTR,ASCBRSM(,R12)                              1111
*                   CALL IEAVPFTE;  /* DEQ THE PREF PFTE     @ZA16816*/
         L     @15,PVTPFTE(,PVTPTR)                                1112
         BALR  @14,@15                                             1112
*                 END;              /*                       @ZA16816*/
*               IF PCBSWPS1='1'B THEN/* IF STG I RESTORE     @ZA16816*/
@RF01104 TM    PCBSWPS1(PCBPTR),B'00100000'                        1114
         BNO   @RF01114                                            1114
*                 RSMHDPTR=PCBRASCB->ASCBRSM;/* VIA PCBR     @ZA16816*/
         L     @10,PCBRPTR(,PCBPTR)                                1115
         L     @10,PCBRASCB(,@10)                                  1115
         L     RSMHDPTR,ASCBRSM(,@10)                              1115
*               ELSE                /* IF NOT, RESTORE       @ZA16816*/
*                 RSMHDPTR=PSAAOLD->ASCBRSM;/* VIA CUR.      @ZA16816*/
         B     @RC01114                                            1116
@RF01114 L     @10,PSAAOLD                                         1116
         L     RSMHDPTR,ASCBRSM(,@10)                              1116
*               R5->PFTUIC=0;       /* INITIALIZE UIC TO ZERO      1117
*                                                            @ZA16816*/
@RC01114 MVI   PFTUIC(R5),X'00'                                    1117
*               R5->PFTSTEAL='0'B;  /* CLEAR STEAL FLAG      @ZA16816*/
         NI    PFTSTEAL(R5),B'11110111'                            1118
*             END;                  /* END OF RC=8 PASS 1 PROCESSING
*                                                            @ZA16816*/
*         END;                      /* END OF RC=4 OR 8 PASS 1     1120
*                                      PROCESS               @ZA16816*/
@RC01025 DS    0H                                                  1121
*       RESPECIFY                                                  1121
*        (PASS,                                                    1121
*         PARM) UNRSTD;             /*                       @ZA16816*/
@RF01023 DS    0H                                                  1122
*     END;                          /* END OF NO PREF ON AFQ       1122
*                                      PROCESSING            @ZA16816*/
*   R14=SUBRTSAV;                   /* RESTORE RETURN ADDRESS      1123
*                                                            @ZA16816*/
@RF01016 L     R14,SUBRTSAV(,PVTPTR)                               1123
*   GEN(BR R14);                    /* RETURN TO CALLER      @ZA16816*/
         BR R14
*   RESPECIFY                                                      1125
*    (R5,                                                          1125
*     R6) UNRSTD;                   /* END OF GETAPREF SUBRTN      1125
*                                                            @ZA16816*/
*                                                                  1126
*   /*****************************************************************/
*   /*                                                               */
*   /* PCBDISP ROUTINE -- DISPOSE OF THE PCB ADDRESSED BY PCBPTR.    */
*   /* PCBS REQUIRING IEAVIOCP PROCESSING WILL BE ENQUEUED ON THE    */
*   /* APPROPRIATE I/O QUEUE AND IEAVIOCP SCHEDULED. PCBS WITH       */
*   /* ASSOCIATED ROOT PCBS WILL HAVE THE ROOT COUNTS REDUCED FOR    */
*   /* EACH PCB PROCESSED. IF THE ROOT COUNT REACHES ZERO, THE       */
*   /* REQUIRED ROOT EXIT WILL BE RUN. PCBS FOR PAGE-FAULTS          */
*   /* (FIRST-REFERENCE OR RECLAIMED PAGES), WILL BE RETURNED TO THE */
*   /* FREE PCB QUEUE. THE PAGE FAULTER WILL BE RESET IN THIS        */
*   /* ROUTINE, IF REQUIRED (I.E., HE HAS BEEN SUSPENDED).           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1126
*PCBDISP:                                                          1126
*   SUBRTSAV=R14;                   /* SAVE RETURN ADDRESS           */
PCBDISP  ST    R14,SUBRTSAV(,PVTPTR)                               1126
*   PTR1=PCBRLPA;                   /* START OF THE RELATED QUEUE    */
         L     PTR1,PCBRLPA-1(,PCBPTR)                             1127
         LA    PTR1,0(,PTR1)                                       1127
*   IF PCBPEX='0'B THEN                                            1128
         TM    PCBPEX(PCBPTR),B'01000000'                          1128
         BNZ   @RF01128                                            1128
*     DO;                           /* NOT A PAGE EXCEPTION          */
*       IF PCBROOT='0'B THEN                                       1130
         TM    PCBROOT(PCBPTR),B'00000100'                         1130
         BZ    @RT01130                                            1130
*         GOTO SCHEDPCB;            /* NO ROOT PCB EXISTS    @Z40WPYC*/
*       ELSE                                                       1132
*         DO;                       /* A ROOT PCB EXISTS             */
*           IF PCBRCNT<=1 THEN                                     1133
         L     @10,PCBRPTR(,PCBPTR)                                1133
         LH    @10,PCBRCNT(,@10)                                   1133
         C     @10,@CF00038                                        1133
         BH    @RF01133                                            1133
*             DO;                   /* ROOT COMPLETION COUNT = 1 OR 0*/
*               RFY                                                1135
*                 R13 RSTD;         /* ONLY ONE INCOMPLETELY       1135
*                                      PROCESSED PAGE                */
*               RFY                                                1136
*                (R0,                                              1136
*                 R1) RSTD;                                        1136
*               R0=PTR1;            /* SAVE REGISTERS DESTROYED BY 1137
*                                      SETLOCK                       */
         LR    R0,PTR1                                             1137
*               R1=PCBPTR;                                         1138
         LR    R1,PCBPTR                                           1138
*               GEN REFS(FLC,PSALITA)                              1139
*(SETLOCK OBTAIN,TYPE=LOCAL,MODE=COND,RELATED=(LOCAL,(IEAVGFA)));  1139
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=COND,RELATED=(LOCAL,(IEAVGFA))
*               PCBPTR=R1;          /* RESTORE SETLOCK DESTROYED   1140
*                                      REGISTERS                     */
         LR    PCBPTR,R1                                           1140
*               PTR1=R0;                                           1141
         LR    PTR1,R0                                             1141
*               RFY                                                1142
*                (R0,                                              1142
*                 R1) UNRSTD;                                      1142
*               IF R13>4 THEN                                      1143
         C     R13,@CF00085                                        1143
         BH    @RT01143                                            1143
*                 GOTO PCBDISPB;    /* LOCAL LOCK NOT OBTAINED GO  1144
*                                      ENQUEUE THE PCB               */
*               ELSE                                               1145
*                 IF R13=0 THEN                                    1145
         LTR   R13,R13                                             1145
         BNZ   @RF01145                                            1145
*                   RCALL='1'B;     /* LOCAL LOCK OBTAINED, SET FLAG
*                                      IN THE RCA TO INDICATE THIS   */
         L     @10,RCAPTR(,PVTPTR)                                 1146
         OI    RCALL(@10),B'01000000'                              1146
*                 ELSE                                             1147
*                   ;                                              1147
@RF01145 DS    0H                                                  1148
*               PCBRCNT=0;          /* SET ROOT COMPLETION COUNT TO
*                                      ZERO                          */
         L     @10,PCBRPTR(,PCBPTR)                                1148
         SLR   @06,@06                                             1148
         STH   @06,PCBRCNT(,@10)                                   1148
*               RFY                                                1149
*                (R1,                                              1149
*                 R15) RSTD;                                       1149
*               R1=PCBRPTR;         /* ADDRESS OF ROOT PCB FOR ROOT
*                                      EXIT ROUTINE                  */
         LR    R1,@10                                              1150
*               R15=PCBRGOTO;       /* ADDRESS OF THE ROOT EXIT    1151
*                                      ROUTINE                       */
         L     R15,PCBRGOTO(,@10)                                  1151
*               CALL ROOTEXIT;      /* INVOKE ROOT EXIT              */
         BALR  @14,@15                                             1152
*               RFY                                                1153
*                (R1,                                              1153
*                 R15) UNRSTD;                                     1153
*               IF R13=0 THEN                                      1154
         LTR   R13,R13                                             1154
         BNZ   @RF01154                                            1154
*                 DO;               /* IF LOCAL LOCK WAS OBTAINED BY
*                                      ME, FREE IT                   */
*                   RFY                                            1156
*                    (R0,                                          1156
*                     R1) RSTD;                                    1156
*                   R0=PTR1;        /* SAVE REGISTERS DESTROYED BY 1157
*                                      SETLOCK                       */
         LR    R0,PTR1                                             1157
*                   R1=PCBPTR;                                     1158
         LR    R1,PCBPTR                                           1158
*                   GEN                                            1159
*(SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,(IEAVGFA)));           1159
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,(IEAVGFA))
*                   PCBPTR=R1;      /* RESTORE SETLOCK DESTROYED   1160
*                                      REGISTERS                     */
         LR    PCBPTR,R1                                           1160
*                   PTR1=R0;                                       1161
         LR    PTR1,R0                                             1161
*                   RFY                                            1162
*                    (R0,                                          1162
*                     R1,                                          1162
*                     R13) UNRSTD;                                 1162
*                   RCALL='0'B;     /* RESET THE LOCAL LOCK FLAG     */
         L     @10,RCAPTR(,PVTPTR)                                 1163
         NI    RCALL(@10),B'10111111'                              1163
*                 END;                                             1164
*               ELSE                                               1165
*                 ;                                                1165
@RF01154 DS    0H                                                  1166
*             END;                                                 1166
*           ELSE                                                   1167
*             PCBRCNT=PCBRCNT-1;    /* REDUCE THE ROOT COMPLETION  1167
*                                      COUNT                         */
         B     @RC01133                                            1167
@RF01133 L     @10,PCBRPTR(,PCBPTR)                                1167
         LH    @06,PCBRCNT(,@10)                                   1167
         BCTR  @06,0                                               1167
         STH   @06,PCBRCNT(,@10)                                   1167
*         END;                                                     1168
@RC01133 DS    0H                                                  1169
*SCHEDPCB:                                                         1169
*       ;                                                          1169
SCHEDPCB DS    0H                                                  1170
*       RFY                                                        1170
*        (R0,                                                      1170
*         R1) RSTD;                                                1170
*       R1=PCBPTR;                                                 1171
         LR    R1,PCBPTR                                           1171
*       R0=PCBFREQN;                                               1172
         LA    R0,16                                               1172
*       CALL IEAVPCB;               /* ENQUEUE THIS PCB ON THE FREE
*                                      QUEUE                         */
         L     @15,PVTPCB(,PVTPTR)                                 1173
         BALR  @14,@15                                             1173
*       RFY                                                        1174
*        (R0,                                                      1174
*         R1) UNRSTD;                                              1174
*DISPLAST:                                                         1175
*       ;                                                          1175
DISPLAST DS    0H                                                  1176
*       IF PTR1^=0 THEN                                            1176
         LTR   PTR1,PTR1                                           1176
         BZ    @RF01176                                            1176
*         DO;                       /* MORE RELATED PCBS             */
*           PCBPTR=PTR1;            /* GET THE NEXT ONE AND CONTINUE */
         LR    PCBPTR,PTR1                                         1178
*           PTR1=PCBRLPA;                                          1179
         L     PTR1,PCBRLPA-1(,PCBPTR)                             1179
         LA    PTR1,0(,PTR1)                                       1179
*           GOTO PCBDISPB;                                         1180
         B     PCBDISPB                                            1180
*         END;                                                     1181
*       ELSE                                                       1182
*         DO;                       /* OTHERWISE RETURN TO CALLER    */
@RF01176 DS    0H                                                  1183
*           R14=SUBRTSAV;           /* RESTORE RETURN ADDRESS        */
         L     R14,SUBRTSAV(,PVTPTR)                               1183
*           GEN(BR    R14);         /* RETURN TO CALLER              */
         BR    R14
*         END;                                                     1185
*     END;                                                         1186
*                                                                  1187
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THIS IS A SUSPENDED PAGE-FAULTER AND RESET IS INDICATED,   */
*   /* (I.E., THE FRAME HAS BEEN ALLOCATED OR RECLAIMED), THEN RESET */
*   /* THE PAGE-FAULTER.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1187
*   ELSE                                                           1187
*     ;                             /* PAGING EXCEPTION              */
@RF01128 DS    0H                                                  1188
*   IF PCBRESET='0'B THEN                                          1188
         TM    PCBRESET(PCBPTR),B'00010000'                        1188
         BNZ   @RF01188                                            1188
*     DO;                           /* DO NOT RESET          @Z40WPYC*/
*       IF PCBPTR=PVTREUS THEN      /* IF THIS PCB IS THE CURRENT  1190
*                                      IEAVPIX PCB           @Z40WPYC*/
         C     PCBPTR,PVTREUS(,PVTPTR)                             1190
         BNE   @RF01190                                            1190
*         DO;                       /*                       @Z40WPYC*/
*           GOTO DISPLAST;          /* DONT FREE PCB         @Z40WPYC*/
         B     DISPLAST                                            1192
*         END;                      /* END REUSEABLE PCB PROC.     1193
*                                                            @Z40WPYC*/
*       ELSE                        /* NOT CURRENT INPUT     @Z40WPYC*/
*         GOTO SCHEDPCB;            /* PROCESS RELATEDS      @Z40WPYC*/
*     END;                          /* END NO RESET PROCESSING     1195
*                                                            @Z40WPYC*/
*   ELSE                                                           1196
*     ;                             /* RESET THE PAGE-FAULTER        */
@RF01188 DS    0H                                                  1197
*   IF PCBSRBMD='1'B×PCBLLHLD='1'B THEN                            1197
         TM    PCBSRBMD(PCBPTR),B'00110000'                        1197
         BZ    @RF01197                                            1197
*     DO;                           /* SRB MODE OR LOCAL LOCK HELD ? */
*       RFY                                                        1199
*        (R4,                                                      1199
*         R5,                                                      1199
*         R6,                                                      1199
*         R13) RSTD;                                               1199
*       IF PCBSRBMD='1'B THEN                                      1200
         TM    PCBSRBMD(PCBPTR),B'00100000'                        1200
         BNO   @RF01200                                            1200
*         DO;                                                      1201
*           R4=PCBSRB;              /* SRB ADDRESS FOR RESET         */
         L     R4,PCBSRB(,PCBPTR)                                  1202
*           R5=0;                                                  1203
         SLR   R5,R5                                               1203
*         END;                                                     1204
*       ELSE                                                       1205
*         DO;                                                      1205
         B     @RC01200                                            1205
@RF01200 DS    0H                                                  1206
*           R4=PCBRTPA;             /* TCB ADDRESS                   */
         L     R4,PCBRTPA-1(,PCBPTR)                               1206
         LA    R4,0(,R4)                                           1206
*           R5=PCBRB;               /* RB ADDRESS            @Z40WPYC*/
         L     R5,PCBRB(,PCBPTR)                                   1207
*         END;                                                     1208
*       R6=0;                       /* RESET ... NO PAGING ERROR     */
@RC01200 SLR   R6,R6                                               1209
*       R13=ADDR(PVTSAVE);          /* SAVE AREA FOR RESET ROUTINE   */
         LA    R13,PVTSAVE(,PVTPTR)                                1210
*       CALL IEAVRSET;              /* MAKE SRB/TCB DISPATCHABLE     */
         L     @15,PVTPRSET(,PVTPTR)                               1211
         BALR  @14,@15                                             1211
*       GOTO SCHEDPCB;                                             1212
         B     SCHEDPCB                                            1212
*     END;                                                         1213
*   ELSE                                                           1214
*     ;                             /* PAGE-FAULT UNDER AN UN-LOCKED
*                                      TCB, NO RESET IN GFA BECAUSE
*                                      STATUS OF LOCAL LOCK IS NOT 1214
*                                      KNOWN                         */
@RF01197 DS    0H                                                  1215
*   RFY                                                            1215
*    (R4,                                                          1215
*     R5,                                                          1215
*     R6,                                                          1215
*     R13) UNRSTD;                                                 1215
*   RFY                                                            1216
*     R0 RSTD;                                                     1216
*PCBDISPB:                                                         1217
*   ;                               /* ENQUEUE THE PCB ON THE PROPER
*                                      I/O QUEUE                     */
*                                                                  1217
PCBDISPB DS    0H                                                  1218
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OF CODE ENQUEUES A PCB TO THE I/O ACTIVE QUEUES, */
*   /* MARKS IT I/O COMPLETE AND SCHEDULES IEAVIOCP                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1218
*   IF PCBVBN<PVTLCSA THEN                                         1218
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    1218
         BNL   @RF01218                                            1218
*     R0=PCBLIOQN;                  /* LOCAL (PRIVATE AREA) PAGE,  1219
*                                      HAVE IT ADDED TO THE LOCAL I/O
*                                      QUEUE                         */
         LA    R0,136                                              1219
*   ELSE                                                           1220
*     R0=PCBCIOQN;                  /* COMMON AREA PAGE, HAVE IT   1220
*                                      ADDED TO THE COMMON AREA I/O
*                                      QUEUE                         */
         B     @RC01218                                            1220
@RF01218 LA    R0,32                                               1220
*   PCBIOCMP='1'B;                  /* I/O COMPLETE                  */
@RC01218 OI    PCBIOCMP(PCBPTR),B'00000001'                        1221
*   PCBRLPA=0;                      /* NO RELATED PCBS               */
         SLR   @10,@10                                             1222
         STCM  @10,7,PCBRLPA(PCBPTR)                               1222
*   PCBVBN=0;                       /* UNASSIGNED                    */
         STH   @10,PCBVBN(,PCBPTR)                                 1223
*   RFY                                                            1224
*     R1 RSTD;                                                     1224
*   R1=PCBPTR;                      /* ADDRESS OF PCB TO BE QUEUED   */
         LR    R1,PCBPTR                                           1225
*   CALL IEAVPCB;                   /* SEND PCB TO APPROPRIATE QUEUE */
         L     @15,PVTPCB(,PVTPTR)                                 1226
         BALR  @14,@15                                             1226
*   CALL IEAVOPBR;                  /* SCHEDULE IEAVIOCP     @Z40WPYC*/
         L     @15,PVTPOPBR(,PVTPTR)                               1227
         BALR  @14,@15                                             1227
*   RFY                                                            1228
*     R1 UNRSTD;                                                   1228
*   GOTO DISPLAST;                                                 1229
         B     DISPLAST                                            1229
*                                                                  1230
*   /*****************************************************************/
*   /*                                                               */
*   /* PUTGFAD -- PUT THE PCB ADDRESSED BY R1 ON THE DEFERRED QUEUE. */
*   /* THE INPUT PCB WILL BE ADDED TO THE DEFERRED QUEUE OR WILL BE  */
*   /* RELATED TO A PCB ALREADY ON THE DEFERRED QUEUE. PCB RELATING  */
*   /* WILL OCCUR WHEN THE FOLLOWING CONDITIONS EXIST: - A PCB ON THE*/
*   /* DEFERRED QUEUE HAS THE SAME VIRTUAL BLOCK ADDRESS AND: - THE  */
*   /* PCB IS FOR A COMMON AREA PAGE OR: - THE PCBS REFER TO THE SAME*/
*   /* ADDRESS SPACE (FOR PRIVATE AREA PAGES). NO RETURN CODE IS     */
*   /* PRODUCED, THE PCB IS ASSUMED TO BE QUEUED.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1230
*   RFY                                                            1230
*     PCB BASED(R1);                                               1230
*   RFY                                                            1231
*     R1 RSTD;                                                     1231
*PUTGFAD:                                                          1232
*   SUBRTSAV=R14;                   /* SAVE RETURN POINTER           */
PUTGFAD  ST    R14,SUBRTSAV(,PVTPTR)                               1232
*   PVTDFRS=PVTDFRS+1;              /* INCREASE THE DEFERRED FRAME 1233
*                                      COUNT (SYSTEM)                */
         LA    @10,1                                               1233
         AH    @10,PVTDFRS(,PVTPTR)                                1233
         STH   @10,PVTDFRS(,PVTPTR)                                1233
*   GENERATE REFS(R15,PCBPTR,GFADEFER) SETS(R15,PCB);              1234
*                                                /* @Z40WPYC  */
TRACEZG3 EQU  *           INDICATE PCB DEFERRED     @Z40WPYC
        B     *+16        BRANCH AROUND PCB TRACE   @Z40WPYC
        L     R15,68(R1)     GET CURRENT COUNT      @Z40WPYC
        AL    R15,GFADEFER INCREMENT BY ONE         @Z40WPYC
        ST    R15,68(R1)     STORE NEW COUNT        @Z40WPYC
*   IF XPTDEFER='1'B THEN                                          1235
         L     @10,XPTEPTR(,R1)                                    1235
         TM    XPTDEFER(@10),B'00000010'                           1235
         BNO   @RF01235                                            1235
*     DO;                           /* ALLOCATION IS DEFERRED      1236
*                                                            @Z40WPYC*/
*       PTR1=PVTGFADF;              /* FIRST ELEMENT ON THE DEFER  1237
*                                      QUEUE                         */
         L     PTR1,PVTGFADF(,PVTPTR)                              1237
*       DO WHILE PTR1^=0;                                          1238
*                                                                  1238
         B     @DE01238                                            1238
@DL01238 DS    0H                                                  1239
*         /***********************************************************/
*         /*                                                         */
*         /* SCAN THE DEFER QUEUE FOR A MATCHING PCB                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1239
*         IF PTR1->PCBVBN=PCBVBN THEN                              1239
         CLC   PCBVBN(2,PTR1),PCBVBN(R1)                           1239
         BNE   @RF01239                                            1239
*           DO;                     /* MAKE THE MATCHING TEST      1240
*                                      (DESCRIBED IN THE SUBROUTINE
*                                      DISCRIPTION ABOVE)            */
*             IF PCBVBN>=PVTLCSA×(PCBVBN<PVTLCSA&PCBASCB=PTR1->PCBASCB)
*               THEN                                               1241
         CLC   PCBVBN(2,R1),PVTLCSA(PVTPTR)                        1241
         BNL   @RT01241                                            1241
         CLC   PCBVBN(2,R1),PVTLCSA(PVTPTR)                        1241
         BNL   @RF01241                                            1241
         CLC   PCBASCB(4,R1),PCBASCB(PTR1)                         1241
         BNE   @RF01241                                            1241
@RT01241 DS    0H                                                  1242
*               DO;                 /* MATCH FOUND - RELATE THE PCBS */
*                 PCBRLPA=PTR1->PCBRLPA;/* ENQUEUE THE INPUT PCB AT
*                                      THE BEGINNING OF THE RELATED
*                                      QUEUE                         */
         MVC   PCBRLPA(3,R1),PCBRLPA(PTR1)                         1243
*                 PTR1->PCBRLPA=R1;                                1244
         STCM  R1,7,PCBRLPA(PTR1)                                  1244
*                 GOTO PUTEXIT;     /* AND RETURN TO THE CALLER      */
         B     PUTEXIT                                             1245
*               END;                                               1246
*             ELSE                                                 1247
*               ;                                                  1247
@RF01241 DS    0H                                                  1248
*           END;                                                   1248
*         ELSE                                                     1249
*           ;                       /* NO MATCH, CONTINUE THE SCAN   */
@RF01239 DS    0H                                                  1250
*         PTR1=PTR1->PCBFQPA;                                      1250
         L     @10,PCBFQPA-1(,PTR1)                                1250
         LA    @10,0(,@10)                                         1250
         LR    PTR1,@10                                            1250
*       END;                                                       1251
*                                                                  1251
@DE01238 LTR   PTR1,PTR1                                           1251
         BNZ   @DL01238                                            1251
*       /*************************************************************/
*       /*                                                           */
*       /* THE END OF THE QUEUE HAS BEEN REACHED AND NO MATCH FOUND, */
*       /* RECORD THE ERROR AND CONTINUE                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1252
*       RESPECIFY                                                  1252
*        (R10) RESTRICTED;          /*                       @Z40WPYC*/
*       R10=R1;                     /* SAVE PCBPTR OVER ABEND      1253
*                                                            @Z40WPYC*/
         LR    R10,R1                                              1253
*       RCARCRD=UNRELATD;           /* INDICATE XPTE MARKED DEFERRED,
*                                      BUT NO ENTRY FOUND ON GFA   1254
*                                      DEFER QUEUE.          @Z40WPYC*/
         L     @06,RCAPTR(,PVTPTR)                                 1254
         MVI   RCARCRD(@06),X'07'                                  1254
*       GEN(ABEND X'C0D',,,SYSTEM); /* RCRD ERROR            @Z40WPYC*/
         ABEND X'C0D',,,SYSTEM
*       R1=R10;                     /* RESTORE PCBPTR        @Z40WPYC*/
         LR    R1,R10                                              1256
*       RESPECIFY                                                  1257
*        (R10) UNRESTRICTED;        /*                       @Z40WPYC*/
*     END;                          /* END DEFER PROCESSING  @Z40WPYC*/
*   ELSE                                                           1259
*     ;                             /* NOT DEFERRED          @Z40WPYC*/
@RF01235 DS    0H                                                  1260
*   XPTDEFER='1'B;                                                 1260
*                                                                  1260
         L     @10,XPTEPTR(,R1)                                    1260
         OI    XPTDEFER(@10),B'00000010'                           1260
*   /*****************************************************************/
*   /*                                                               */
*   /* THE STATEMENT TO SET THE PGTE TO X'0009' TO PREVENT RECLAIM   */
*   /* HAS BEEN REMOVED AS A RESULT OF APAR OZ29825. THIS WAS        */
*   /* NECESSARY AS OF SU 7 DUE TO THE NON-RECLAIMABLE PCB. WITH THE */
*   /* NON-RECLAIMABLE PCB, THE DEFERRED PCB MUST GO THROUGH RECLAIM */
*   /* PROCESSING WHEN IT IS SENT BACK THROUGH MAINLINE GFA. THIS IS */
*   /* SO THAT IF THE OUTPUT I/O IS STILL IN PROGRESS, A PCB         */
*   /* (NORECPCB) CAN BE FOUND WHICH CONTAINS THE RBN THAT THE DATA  */
*   /* CAN BE COPIED FROM. IF THE PGTE WAS INVALIDATED, NORECPCB     */
*   /* WOULD CONTAIN A 0, AND THE 2 BYTES AT LOCATION X'18' WOULD BE */
*   /* USED AS THE RBN CAUSING GARBAGE TO BE COPIED INTO THE NEW     */
*   /* FRAME.                                                @ZA29825*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1261
*CALLPCB:                                                          1261
*   ;                               /* NO MATCH COULD/WOULD BE     1261
*                                      FOUND,ADD THE PCB TO THE DEFER
*                                      QUEUE                         */
CALLPCB  DS    0H                                                  1262
*   RFY                                                            1262
*     R0 RSTD;                                                     1262
*   R0=PCBDEFRN;                    /* DEFER QUEUE ID                */
         LA    R0,24                                               1263
*   CALL IEAVPCB;                   /* ENQUEUE THIS PCB ON THE DEFER
*                                      QUEUE                         */
         L     @15,PVTPCB(,PVTPTR)                                 1264
         BALR  @14,@15                                             1264
*   RFY                                                            1265
*    (R0,                                                          1265
*     R1) UNRSTD;                                                  1265
*PUTEXIT:                                                          1266
*   ;                                                              1266
PUTEXIT  DS    0H                                                  1267
*   R14=SUBRTSAV;                                                  1267
         L     R14,SUBRTSAV(,PVTPTR)                               1267
*   GEN(BR    R14);                                                1268
         BR    R14
*   RFY                                                            1269
*     PCB BASED(PCBPTR);                                           1269
*                                                                  1270
*   /*****************************************************************/
*   /*                                                               */
*   /* GETGFAD SUBROUTINE --- OBTAIN RELATED PCBS FROM THE DEFER     */
*   /* QUEUE. THE INPUT PCB IS ADDRESSED BY PCBPTR. ANY PCBS ON THE  */
*   /* DEFERRED QUEUE WHICH ARE RELATED TO THE INPUT PCB ARE ADDED TO*/
*   /* THE INPUT PCB'S RELATED QUEUE (PCBRLPA). TWO PCBS ARE SAID TO */
*   /* BE RELATED WHEN THEY ADDRESS THE SAME VIRTUAL PAGE IN THE     */
*   /* COMMON AREA OR IN THE SAME ADDRESS SPACE. NO RETURN CODES ARE */
*   /* GENERATED.                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1270
*   RESPECIFY                                                      1270
*    (R14) RSTD;                    /*                       @ZA16816*/
*GETGFAD:                                                          1271
*   IF PVTGFADF=0 THEN                                             1271
GETGFAD  L     @15,PVTGFADF(,PVTPTR)                               1271
         LTR   @15,@15                                             1271
         BNZ   @RF01271                                            1271
*     DO;                           /* ON EMPTY DEFER QUEUE,       1272
*                                      IMMEDIATE RETURN              */
*       GEN(BR    R14);                                            1273
         BR    R14
*     END;                                                         1274
*   ELSE                                                           1275
*     ;                                                            1275
@RF01271 DS    0H                                                  1276
*   SUBRTSAV=R14;                   /* PRESERVE THE RETURN POINT     */
         ST    R14,SUBRTSAV(,PVTPTR)                               1276
*   RFY                                                            1277
*     R1 RSTD;                                                     1277
*   R1=PVTGFADF;                    /* FIRST ELEMENT ON THE DEFER  1278
*                                      QUEUE                         */
         L     R1,PVTGFADF(,PVTPTR)                                1278
*   DO WHILE R1^=0;                 /* SCAN THE DEFERRED QUEUE       */
         B     @DE01279                                            1279
@DL01279 DS    0H                                                  1280
*     IF PCBVBN=R1->PCBVBN THEN                                    1280
         CLC   PCBVBN(2,PCBPTR),PCBVBN(R1)                         1280
         BNE   @RF01280                                            1280
*       DO;                         /* THE DEFERRED PCB ADDRESSES THE
*                                      SAME PAGE AS THE INPUT PCB    */
*         IF PCBVBN>=PVTLCSA×(PCBVBN<PVTLCSA&R1->PCBASCB=PCBASCB) THEN
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    1282
         BNL   @RT01282                                            1282
         CLC   PCBVBN(2,PCBPTR),PVTLCSA(PVTPTR)                    1282
         BNL   @RF01282                                            1282
         CLC   PCBASCB(4,R1),PCBASCB(PCBPTR)                       1282
         BNE   @RF01282                                            1282
@RT01282 DS    0H                                                  1283
*           DO;                     /* THE PAGE IS IN THE COMMON AREA
*                                      OR IN THE PRIVATE AREA OF THE
*                                      SAME ADDRESS SPACE, THEREFORE
*                                      THE DEFERRED PCB IS RELATED,
*                                      ADD IT TO THE INPUT PCB'S   1283
*                                      RELATED QUEUE                 */
*             RFY                                                  1284
*               R0 RSTD;                                           1284
*             R0=PCBDEQN;           /* CODE TO DEQUEUE THE PCB       */
         LA    R0,255                                              1285
*             CALL IEAVPCB;         /* DEQUEUE THE DEFERRED PCB      */
         L     @15,PVTPCB(,PVTPTR)                                 1286
         BALR  @14,@15                                             1286
*             PCBRLPA=R1;           /* ADD IT TO THE RELATED QUEUE OF
*                                      THE INPUT PCB                 */
         STCM  R1,7,PCBRLPA(PCBPTR)                                1287
*             GOTO GTEXIT;                                         1288
         B     GTEXIT                                              1288
*             RFY                                                  1289
*               R0 UNRSTD;                                         1289
*           END;                                                   1290
*         ELSE                                                     1291
*           ;                                                      1291
@RF01282 DS    0H                                                  1292
*       END;                                                       1292
*     ELSE                                                         1293
*       ;                                                          1293
@RF01280 DS    0H                                                  1294
*     R1=R1->PCBFQPA;               /* NO MATCH, KEEP SCANNING.      */
         L     @15,PCBFQPA-1(,R1)                                  1294
         LA    @15,0(,@15)                                         1294
         LR    R1,@15                                              1294
*   END;                                                           1295
@DE01279 LTR   R1,R1                                               1295
         BNZ   @DL01279                                            1295
*   RFY                                                            1296
*     R1 UNRSTD;                                                   1296
*GTEXIT:                                                           1297
*   XPTDEFER='0'B;                                                 1297
GTEXIT   L     @15,XPTEPTR(,PCBPTR)                                1297
         NI    XPTDEFER(@15),B'11111101'                           1297
*   R14=SUBRTSAV;                   /* RESTORE RETURN ADDRESS        */
         L     R14,SUBRTSAV(,PVTPTR)                               1298
*   GEN(BR    R14);                                                1299
         BR    R14
*   RESPECIFY                                                      1300
*    (R14) UNRSTD;                  /*                       @ZA16816*/
*                                                                  1301
*   /*****************************************************************/
*   /*                                                               */
*   /* DEFERRED FRAME ALLOCATION PROCESSOR --- IEAVGFAD. INPUT PARM =*/
*   /* R1 -> ASCB. R0 -> SRB. NORMAL LINKAGE -- BALR R14,R15         */
*   /* PROCESSES THE GFA DEFER QUEUE BACKWARDS (BEGINNING WITH THE   */
*   /* LAST PCB AND WORKING TO THE FIRST).                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1301
*   RFY                                                            1301
*     R15 UNRSTD;                                                  1301
*   RFY                                                            1302
*    (R0,                                                          1302
*     R1,                                                          1302
*     R14,                                                         1302
*     R4,                                                          1302
*     R6) RSTD;                                                    1302
*   GENERATE;                                                      1303
*                             /*     @Z40WPYC*/
IEAVGFAD CSECT
         USING *,R15
         MODID BR=NO
         ENTRY IEAVGFD2                          @Z40WPYC
IEAVGFD2 DS    0H                                @Z40WPYC
         BALR  R9,0
         USING *,R9
         DROP  R15
*   R6=R0;                          /* SAVE THE SRB ADDRESS FOR    1304
*                                      FREECELL                      */
         LR    R6,R0                                               1304
*   RTNADDR=R14;                    /* PRESERVE THE RETURN ADDR    1305
*                                      ACROSS CALLS          @YD03005*/
         ST    R14,RTNADDR(,R6)                                    1305
*   PVTPTR=CVTPVTP;                 /* ESTABLISH GFA ENTRY PARMS (PVT
*                                      ADDRESS)                      */
         L     @15,CVTPTR                                          1306
         L     PVTPTR,CVTPVTP(,@15)                                1306
*   RFY                                                            1307
*     ASCB BASED(R1);                                              1307
*   RSMHDPTR=ASCBRSM;               /* AND RSM HEADER ADDRESS        */
         L     RSMHDPTR,ASCBRSM(,R1)                               1308
*   RFY                                                            1309
*    (R14,                                                         1309
*     R0,                                                          1309
*     R1) UNRSTD;                                                  1309
*   RFY                                                            1310
*     ASCB BASED(ASCBPTR);                                         1310
*   GENERATE REFS(PSACSTK,PSA,FRRSCURR,FRRS,FRRSLAST,FRRSELEN,FRRSFRRA,
*       FRRSENTR,PVTPRCV,FRRSPARM,PSALITA,FLC,PSALSFCC,PVTPTR);    1311
         SETFRR A,PARMAD=(R4),WRKREGS=(R14,R15),FRRAD=PVTPRCV(PVTPTR)
SALLOCGT SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(IEAVGFAD)
*   PVTPRCA=R4;                     /* STORE THE RECOVERY WORK AREA
*                                      ADDR.                         */
         ST    R4,PVTPRCA(,PVTPTR)                                 1312
*   RFY                                                            1313
*     R4 UNRSTD;                                                   1313
*   RCASAL='1'B;                    /* INDICATE SALLOC LOCK ACQUIRED */
         L     @10,RCAPTR(,PVTPTR)                                 1314
         OI    RCASAL(@10),B'10000000'                             1314
*   RCACSECT=RCACGFA;               /* INDICATE IEAVGFA MODULE IN  1315
*                                      CONTROL                       */
         MVI   RCACSECT(@10),X'0E'                                 1315
*   RCAGFAD='1'B;                   /* INDICATE ENTRY AT IEAVGFAD    */
         OI    RCAGFAD(@10),B'00000001'                            1316
*   RSMGFAD='0'B;                   /* INDICATE GFA DEFER PROCESSING
*                                      STARTED FOR THIS ADDRESS SPACE*/
         NI    RSMGFAD(RSMHDPTR),B'11011111'                       1317
*   PCBPTR=PVTGFADL;                /* GET LAST PCB ON THE DEFER   1318
*                                      QUEUE                         */
         L     PCBPTR,PVTGFADL(,PVTPTR)                            1318
*                                                                  1319
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS LOOP PROCESSES THE ENTIRE GFA DEFER QUEUE, LOOKING FOR   */
*   /* DEFERRED PCBS FOR THIS ADDRESS SPACE. EACH ONE FOUND IS SENT  */
*   /* TO GFA MAINLINE FOR FRAME ASSIGNMENT.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1319
*   DO WHILE PCBPTR^=0;             /* SCAN THE DEFER QUEUE UNTIL THE
*                                      BEGINNING IS REACHED          */
         B     @DE01319                                            1319
@DL01319 DS    0H                                                  1320
*TESTASCB:                                                         1320
*     IF PCBASCB^=ASCBPTR THEN                                     1320
TESTASCB CLC   PCBASCB(4,PCBPTR),ASCBPTR(RSMHDPTR)                 1320
         BE    @RF01320                                            1320
*       PCBPTR=PCBBQPA;             /* CONTINUE BACKWARDS SCAN OF THE
*                                      PCB DEFER QUEUE IF THE PCB IS
*                                      NOT FOR THE INPUT ADDRESS   1321
*                                      SPACE                 @YA01572*/
         L     PCBPTR,PCBBQPA(,PCBPTR)                             1321
*     ELSE                                                         1322
*       DO;                         /* THE PCB IS FOR THIS ADDRESS 1322
*                                      SPACE                         */
         B     @RC01320                                            1322
@RF01320 DS    0H                                                  1323
*         PCBGFAD='0'B;             /* RESET THE GFA DEFER PROCESSING
*                                      FLAG                          */
         NI    PCBGFAD(PCBPTR),B'10111111'                         1323
*         IF PVTAFC^=0 THEN                                        1324
         LH    @10,PVTAFC(,PVTPTR)                                 1324
         LTR   @10,@10                                             1324
         BZ    @RF01324                                            1324
*           DO;                     /* AVAILABLE FRAMES EXIST        */
*             RFY                                                  1326
*               PTR1 RSTD;                                         1326
*             PTR1=PCBPTR;          /* LOOK AT THE QUEUED PCB AND ALL
*                                      PCBS THAT ARE RELATED. CHECK
*                                      FOR A FIX COUNT. IF FOUND,  1327
*                                      TEST THE DEFER FIX THRESHOLD.
*                                                            @YA01572*/
         LR    PTR1,PCBPTR                                         1327
*             DO WHILE PTR1^=0;                                    1328
         B     @DE01328                                            1328
@DL01328 DS    0H                                                  1329
*               IF PTR1->PCBFXC>0 THEN/* DOES PCB REPRESENT A FIX  1329
*                                                            @YA01572*/
         CLI   PCBFXC(PTR1),0                                      1329
         BNH   @RF01329                                            1329
*                 DO;               /* YES, CHECK THE DEFER FIX    1330
*                                      THRESHOLD             @YA01572*/
*                   IF PVTAFC<=PVTDEFFX THEN/* AT DEFER FIX THRESHOLD
*                                                            @YA01572*/
         LH    @10,PVTAFC(,PVTPTR)                                 1331
         CH    @10,PVTDEFFX(,PVTPTR)                               1331
         BH    @RF01331                                            1331
*                     DO;           /* YES, LEAVE THIS PCB ON THE GFA
*                                      DEFER QUEUE           @YA01572*/
*                       PCBPTR=PCBBQPA;/* GET NEXT PCB POINTER     1333
*                                                            @YA01572*/
         L     PCBPTR,PCBBQPA(,PCBPTR)                             1333
*                       IF PCBPTR=0 THEN                           1334
         LTR   PCBPTR,PCBPTR                                       1334
         BZ    @RT01334                                            1334
*                         GOTO GFADEXIT;/* RETURN, IF THERE ARE NO 1335
*                                      MORE PCBS ON THE GFA DEFER  1335
*                                      QUEUE                 @YA01572*/
*                       ELSE                                       1336
*                         GOTO TESTASCB;/* LOOK AT THE NEXT PCB ON 1336
*                                      THE GFA DEFER QUEUE   @YA01572*/
         B     TESTASCB                                            1336
*                     END;                                         1337
*                   ELSE                                           1338
*                     GOTO DQTHEPCB;/* A FIX WAS FOUND, BUT THE DEFER
*                                      FIX THRESHOLD HAS NOT BEEN  1338
*                                      REACHED SO THIS PCB MAY BE  1338
*                                      REMOVED FROM THE GFA DEFER  1338
*                                      QUEUE                 @YA01572*/
*                 END;                                             1339
*               ELSE                                               1340
*                 PTR1=PTR1->PCBRLPA;/* GET PTR TO NEXT RELATED PCB
*                                                            @YA01572*/
@RF01329 L     @10,PCBRLPA-1(,PTR1)                                1340
         LA    @10,0(,@10)                                         1340
         LR    PTR1,@10                                            1340
*             END;                                                 1341
@DE01328 LTR   PTR1,PTR1                                           1341
         BNZ   @DL01328                                            1341
*DQTHEPCB:                                                         1342
*             XPTDEFER='0'B;        /* TURN OFF DEFER INDICATOR    1342
*                                                            @YA01572*/
*                                                                  1342
DQTHEPCB L     @10,XPTEPTR(,PCBPTR)                                1342
         NI    XPTDEFER(@10),B'11111101'                           1342
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP PCB MANAGER PARAMETERS TO DEQUEUE THE PCB    */
*             /* FROM THE DEFER QUEUE                                */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1343
*             RFY                                                  1343
*              (R0,                                                1343
*               R1) RSTD;                                          1343
*             R0=PCBDEQN;           /* HAVE THIS PCB DEQUEUED        */
         LA    R0,255                                              1344
*             R1=PCBPTR;            /* ADDR OF THE PCB               */
         LR    R1,PCBPTR                                           1345
*             PCBPTR=PCBBQPA;       /* SAVE THE PREVIOUS PCB ADDRESS */
         L     PCBPTR,PCBBQPA(,PCBPTR)                             1346
*             CALL IEAVPCB;         /* PASS THE PCB TO BE DEQUEUED,
*                                      ITS ADDRESS WILL COME BACK IN
*                                      REGISTER 1 ALSO, SO THAT WE 1347
*                                      PASS MAY THE PCB PTR TO     1347
*                                      IEAVGFA IN REG 1              */
         L     @15,PVTPCB(,PVTPTR)                                 1347
         BALR  @14,@15                                             1347
*             CALL GFAMAIN;         /* CALL IEAVGFA TO GET A FRAME 1348
*                                      ALLOCATED FOR THE PCB         */
         L     @15,PVTPGFA(,PVTPTR)                                1348
         BALR  @14,@15                                             1348
*             RFY                                                  1349
*              (R1,                                                1349
*               R0) UNRSTD;                                        1349
*           END;                                                   1350
*         ELSE                                                     1351
*           GOTO GFADEXIT;          /* NO AVAILABLE FRAMES, EXIT     */
*       END;                                                       1352
*   END;                                                           1353
@RC01320 DS    0H                                                  1353
@DE01319 LTR   PCBPTR,PCBPTR                                       1353
         BNZ   @DL01319                                            1353
*GFADEXIT:                                                         1354
*   ;                               /* WE HAVE RUN OUT OF AVAILABLE
*                                      FRAMES OR INPUT PCBS, TIME TO
*                                      EXIT.                         */
GFADEXIT DS    0H                                                  1355
*   GEN REFS(PSALITA,FLC)                                          1355
*       (SETLOCK RELEASE,TYPE=SALLOC,RELATED=(SALLOC(IEAVGFAD)));  1355
         SETLOCK RELEASE,TYPE=SALLOC,RELATED=(SALLOC(IEAVGFAD))
*   R7=RTNADDR;                     /* RESTORE THE EXIT ADDRESS    1356
*                                                            @YD03005*/
         L     R7,RTNADDR(,R6)                                     1356
*   RFY                                                            1357
*    (R0,                                                          1357
*     R1) RSTD;                                                    1357
*   R0=PVTSRBID;                    /* QUICKCELL POOL ID FOR SRB POOL*/
         L     R0,PVTSRBID(,PVTPTR)                                1358
*   R1=R6;                          /* THE ADDRESS OF THE SRB TO BE
*                                      FREED                         */
         LR    R1,R6                                               1359
*   GENERATE REFS(CVTMAP,CVTFRECL,PSACSTK,PSA,FRRSCURR,FRRS,FRRSEMP,
*       FRRSELEN);                                                 1360
         FREECELL CPID=(0),CELL=(1),SAVE=NO,BRANCH=YES
         SETFRR D,WRKREGS=(R5,R6)
         LR    R14,R7
         BR    R14
IEAVGFA  CSECT
*   END;                                                           1361
*                                                                  1362
*/*GFA:     CHART                         GENERAL FRAME ALLOCATION   */
*/*IEAVGFA:  E      (,%GFA) GFA MAINLINE                             */
*/*%GFA:     P      SAVE REGS IN PVTWSA8                             */
*/*          P      SET ENTRY POINT AND MODULE ID IN RCA             */
*/*          P      GET FIRST PCB ADDRESS FROM REG 1                 */
*/*PCBPROC:  D      (NO,,YES,CALLALLC) SWAP-IN REQUEST               */
*/*          D      (YES,,NO,%GFA5) ALLOCATION OF THIS FRAME DEFERRED ?
*/*                                                                  */
*/*          D      (YES,,NO,GFAPUT) ANY AVAILABLE FRAMES ?          */
*/*          S      (,CALLALLC) GETGFAD: GET RELATED PCBS FROM GFADQ */
*/*%GFA5:    S      RECLAIM: RECOVER THE PAGE FRAME, IF POSSIBLE     */
*/*          D      (NO,,YES,NXTPCB) RECLAIM SUCCESSFUL ? (R15 = 0)  */
*/*CALLALLC: S      ALLOC: OBTAIN (ALLOCATE) AN AVAILABLE FRAME      */
*/*          D      (NO,,YES,%GFA11) DID A FRAME GET ALLOCATED ?     */
*/*          D      (NO,,YES,%GFAA0) SWAP-IN STAGE 1 ?               */
*/*          P      SET GFA RETURN CODE (INTRETCD) TO 4.             */
*/*          D      (YES,,NO,GFAPUT) PAGING EXCEPTION ?              */
*/*          D      (NO,,YES,GFAPUT) FAULTER PREVIOUSLY SUSPENDED  ? */
*/*          S      IEAVSUSP: SUSPEND EXECUTION OF FAULTING RB/SRB   */
*/*          D  (SRB,,RB,%GFSWX1) FAULTER WAS RUNNING UNDER AN ... ? */
*/* P  (,%GFSWX2) SAVE THE SRB ADDRESS, A NULL TCB ADDRESS, INDICATE
*/*SRB MODE                                                          */
*/*%GFSWX1:  P      (,%GFSWX2) STORE THE TCB AND RB ADDRESSES        */
*/*%GFSWX2:  D      (YES,,NO,%GFSWX3) LOCKED PAGE-FAULT ?            */
*/*          P      (,%GFSWX3) INDICATE LOCAL LOCK HELD              */
*/*%GFSWX3:  P      INDICATE THE FAULTER SHOULD BE RESET             */
*/*GFAPUT:   S      (,NXTPCB) PUTGFAD: PUT PCB ON DEFER QUEUE        */
*/*%GFA11:   D      (NO,,YES,%GFA13) SWAP-IN ?                       */
*/*          D      (YES,,NO,%GFA60) EXTERNAL PAGE VALID ?           */
*/*%GFA13:   P      INDICATE A PCB EXISTS FOR THIS FRAME             */
*/*          P      INITIALIZE PCBAIA FIELDS FOR INPUT I/O           */
*/*          D      (YES,,NO,%GFA70) PAGING EXCEPTION ?              */
*/*          D      (NO,,YES,%GFA70) FAULTER PREVIOUSLY SUSPENDED  ? */
*/*          S      IEAVSUSP: SUSPEND EXECUTION OF FAULTING RB/SRB   */
*/*          P      INDICATE THE FAULTER SHOULD BE RESET             */
*/*          D  (SRB,,RB,%GFSWP1) FAULTER WAS RUNNING UNDER AN ... ? */
*/* P  (,%GFSWP2) SAVE THE SRB ADDRESS, A NULL TCB ADDRESS, INDICATE
*/*SRB MODE                                                          */
*/*%GFSWP1:  P      (,%GFSWP2) STORE THE TCB AND RB ADDRESSES        */
*/*%GFSWP2:  D      (YES,,NO,%GFA70) LOCKED PAGE-FAULT ?             */
*/*          P      (,%GFA70) INDICATE LOCAL LOCK HELD               */
*/*%GFA70:   S      PGIN: SET UP FOR INPUT I/O                       */
*/* D (YES,NXTPCB,NO,) SWAP-IN PCB ?                                 */
*/* P (,NXTPCB) PGTE=RBN + ASSIGNED AND INVALID FLAGS                */
*/*NXTPCB:   D      (NO,CALLASM,YES,PCBPROC) ANY MORE INPUT PCBS ?   */
*/*CALLASM:  D      (YES,,NO,GFAEXIT) ANY AIAS ON I/O HOLD QUEUE ?   */
*/*          S      ILRCALL: PASS (IOHOLDQ) ACCUMULATED I/O TO ASM   */
*/*          P      SET GFA RETURN CODE (INTRETCD) TO 4.             */
*/*          D      (YES,,NO,%C0D1) RETURN CODE FROM ASM = 0?        */
*/*GFAEXIT:  P      TURN OFF GFA ENTERED FLAG IN RCA                 */
*/*          P      REG 15 = INTRETCD                                */
*/*          P      RESTORE REGISTERS FROM PVTWSA8                   */
*/*          R      EXIT VIA REG 14                                  */
*/*%C0D1:    S      ABEND: X'C0D' ABEND -- RECORD THE ERROR          */
*/*          P      GET PCB ADDRESS FROM AIA RETURNED BY ASM         */
*/*          D      (YES,,NO,%AIABK) SWAP-IN STAGE 1 ?               */
*/* P  (,AIALOOP) INDICATE FAILURE IN ROOT PCB, PUT AIA@ ON I/O HOLD
*/*QUEUE                                                             */
*/*%AIABK:   P      PCBRFAIL = 1, PCBRPB = 1                         */
*/*          P      SET PCBIOERR ON IN THIS AND ALL RELATED PCBS     */
*/*          P      SET PCBRFAIL IN ALL ASSOCIATED ROOT PCBS         */
*/*          P      PUT NEXT AIA AT HEAD OF I/O HOLD QUEUE           */
*/*          D      (YES,,NO,ERRAIA2 ) FAULTER SUSPENDED ?           */
*/*          D      (NO,,YES,%AIASRB) PAGE FAULT UNDER AN SRB ?      */
*/*          D      (YES,,NO,ERRAIA2 ) LOCAL LOCK HELD BY FAULTER ?  */
*/* P      (,%AIARST) SET UP TO RESET TCB                            */
*/*%AIASRB:  P  (,%AIARST) SET UP TO RESET SRB                       */
*/*%AIARST:  S      (,%AIADIS1) IEAVRSET: RESET THE TCB/SRB W/PAGE I/O
*/*ERR CODE                                                          */
*/*%AIADIS1: P  (,ERRAIA2 ) TURN OFF PCBRESET TO INDICATE RESET ALREADY
*/* DONE                                                             */
*/*ERRAIA2:  S      (,CALLASM)  PCBDISP: DISPOSE OF THE PCBS         */
*/*%GFA60:   P      ALLOCATE THE PAGE AND ASSIGN IT                  */
*/*          P      ZERO PAGE AND SET PROTECT ITS KEY                */
*/*          S      (,NXTPCB) PCBDISP: DISPOSE OF PCB(S)             */
*/*%GFAA0:   P      SET PCBRPB = 1, INTRETCD = 8                     */
*/*BACKOUT1:  P      DECREMENT THE ROOT COMPLETION COUNT             */
*/*          D      (YES,,NO,%BKOT3) ANY RELATED PCBS ?              */
*/*          S  (,%BKOT3) PUTGFAD: PUT RELATED PCBS BACK ON DEFER QUEUE
*/*                                                                  */
*/*%BKOT3:   S      IEAVPCB: SEND PCB TO FREE QUEUE                  */
*/*          D      (YES,,NO,AIALOOP) ARE THERE MORE INPUT PCBS ?    */
*/*          P      GET NEXT INPUT PCB                               */
*/*          D      (NO,%BKOT3,YES,BACKOUT1) STAGE 1 SWAP-IN PCB ?   */
*/*AIALOOP:  D     (YES,,NO,%BKOT9) ANY AIAS ON THE I/O HOLD QUEUE ? */
*/*          P      GET NEXT AIA AND CALCULATE PCB ADDR.             */
*/*          S      IEAVPFTE: FREE THE FRAME ADDRESSED BY PCBRBN     */
*/*          D      (YES,,NO,%BKOT5) STAGE 1 SWAP-IN ?               */
*/*          P      DECREMENT THE ROOT COMPLETION COUNT              */
*/*          D      (YES,,NO,%BKOT5) ANY RELATED PCBS ?              */
*/*          S      PUTGFAD: PUT THEM BACK ON THE DEFER QUEUE        */
*/*%BKOT5:   S      IEAVPCB: DEQ THE PCB                             */
*/* D (YES,,NO,%WRK12) PCB FOR STAGE 1 PAGE                          */
*/* P (,AIALOOP) CHAIN THE PCB TO PCBRWRK3 AND PCBRWRK4              */
*/*%WRK12: P (,AIALOOP) CHAIN THE PCB TO PCBRWRK1 AND PCBRWRK2       */
*/*%BKOT9:   D      (NO,GFAEXIT,YES,) ROOT COMPLETION COUNT = 0 ?    */
*/* S (,GFAEXIT)  ROOTEXIT: SCHEDULE THE REQUIRED ROOT EXIT ROUTINE. */
*/*RECLAIM:  E      RECLAIM SUBROUTINE                               */
*/*          P      CREATE AN RBN FROM THE REAL ADDRESS, SET CANCEL AND
*/* LONGFLAG OFF                                                   1362
*/*                                                                  */
*/*          D      (YES,,NO,%RC10) RBN = 0 ?                        */
*/*          D      (YES,,NO,RELATE2) FORCE RELATE ?                 */
*/*RETCDEQ4: R      RETURN TO MAINLINE GFA (R15 = 4)                 */
*/*%RC10:    D      (YES,,NO,RETCDEQ4) IS THE BLOCK ADDRESS DEFINED ?
*/*                                                                  */
*/*          N      LOCATE PFTE FOR PAGE'S MOST RECENT FRAME         */
*/*          P      CALCULATE THE PFTE ADDRESS = PVTPFTP + RBN       */
*/*          D      (NO,,YES,RETCDEQ4) FRAME REPRESENT VIO WINDOW ?  */
*/*          D      (YES,,NO,RETCDEQ4) VIRTUAL ADDRESS MATCH PCBVBN ?
*/*                                                                  */
*/*          D      (YES,,NO,%RC15) ADDRESS IN PRIVATE AREA ?        */
*/*          D      (YES,,NO,RETCDEQ4) SAME ADDRESS SPACE ?          */
*/*%RC15:    D      (YES,,NO,%RC40) THIS FRAME AVAILABLE ?           */
*/*%RC16:    D      (NO,,YES,%RC35) FIX REQUEST ?                    */
*/*%RC17:    P      ASSIGN THE FRAME: PCBRBN = RBN                   */
*/*          P      SET PROTECT KEY OF FRAME TO XPTPROT VALUE        */
*/*          D      (NO,,YES,%RC20) ADDRESS IN PRIVATE AREA ?        */
*/*          P      INCREMENT COMMON AREA FRAME COUNT                */
*/*          P      (,%RC21) SEND FRAME TO COMMON FRAME QUEUE        */
*/*%RC20:    P      SEND FRAME TO LOCAL FRAME QUEUE                  */
*/*          P      INCREMENT THE ADDRESS SPACE FRAME COUNT          */
*/*%RC21:    S      IEAVPFTE: MOVE PFTE TO LOCAL/ COMMON FRAME QUEUE */
*/*VALIDATE: P      VALIDATE THE PAGE                                */
*/*INSTEXIT: P      COUNT THE RECLAIM                                */
*/*          D      (NO,,YES,%RC32) PRIVATE AREA FRAME ?             */
*/*          P      (,RECDISP0) COUNT THE COMMON AREA RECLAIM        */
*/*%RC32:    P      COUNT THE PRIVATE AREA RECLAIM                   */
*/*RECDISP0: S      PCBDISP: DISPOSE OF PCB                          */
*/*RETCDEQ0: R      RETURN TO MAINLINE GFA (R15 = 0)                 */
*/*%RC35:    D      (YES,,NO,%RC36) LONG-FIX REQUEST ?               */
*/*          D      (NO,,YES,RETCDEQ4) V=R AREA FRAME ?              */
*/*          P      SET THE FRAME LONG-FIXED                         */
*/*%RC36:    P      (,%RC17) INITIALIZE THE FRAMES FIX COUNT FROM  1362
*/*PCBFXC                                                            */
*/*%RC40:    D      (NO,,YES,RETCDEQ4) IS THE FRAME CURRENTLY DEQUEUED
*/*?                                                                 */
*/*          P      PCBRBN = RBN                                     */
*/*          D      (YES,,NO,RELATE) FIX REQUEST ?                   */
*/*          D      (NO,BUMPFIX,YES,%RC42) LONG FIX REQUEST ?        */
*/*%RC42:    D      (NO,,YES,%RC44) V=R AREA FRAME ?                 */
*/*LONGFIX1: P      LONG-FIX THE FRAME                               */
*/*BUMPFIX:  P      ADD THE INPUT FIX COUNT TO THE FRAME FIX COUNT   */
*/*          D      (YES,RECDISP0,NO,RELATE) PGTPVM = 0 (PAGE IN CORE)
*/*?                                                                 */
*/*%RC44:    D      (NO,,YES,%RC49) IS THE PAGE VALID ?              */
*/*          D      (NO,,YES,LONGFIX1) IS THE FRAME FIXED ?          */
*/*          P      (,RELATE) CANCEL = 1                             */
*/*%RC46:    P      (,LONGFIX1) MAKE THE PAGE VALID                  */
*/*%RC49:    N THE PAGE CANNOT BE ALREADY FIXED (INPUT REQUIREMENT)  */
*/*          S      IEAVINV: INVALIDATE PAGE                         */
*/*          D      (YES,,NO,NOCHANGE) HAS THE FRAME BEEN CHANGED ?  */
*/*CHANGED:  D      (YES,NOCHANGE,NO,) PAGE IN QUICK START AREA ?    */
*/*          P      SEARCH THE AFQ FOR A NON-V=R AREA FRAME          */
*/*          D      (YES,MOVEPAGE,NO,) WAS A FRAME OBTAINED ?        */
*/*          S      IEAVPREF: TRY TO STEAL PREFERRED PFTE FROM LIOQ  */
*/*          D      (YES,MOVEPAGE,NO,) PREF PFTE STOLEN              */
*/*          S      IEAVPREF: TRY TO STEAL PREFERRED PFTE FROM CIOQ  */
*/*          D      (YES,MOVEPAGE,NO,) PREF PFTE STOLEN              */
*/*          D      (YES,%CONVERT,NO,) IS THERE PFTE TO CONVERT      */
*/*          P      (,LONGFIX1) REVALIDATE PAGE                      */
*/*%CONVERT: S      IEAVPREF: CONVERT BOX TO PREFERRED               */
*/*MOVEPAGE: S      IEAVPFTE: TRANSFER FRAME TO SAME QUEUE AS V=R FRAME
*/*                                                                  */
*/*          P      COPY THE NECESSARY PFTE FIELDS                   */
*/*          P      COPY THE PAGE IN NON-TRANSLATE MODE              */
*/*          S      IEAVPFTE: FREE THE V=R AREA FRAME                */
*/*%RC431:   P      (,LONGFIX1)  ASSIGN AND VALIDATE THE PAGE        */
*/*NOCHANGE: S      IEAVPFTE: SEND PFTE TO AFQ                       */
*/*          P      (,RETCDEQ4) DECREMENT THE APPROPRIATE FRAME COUNT
*/*                                                                  */
*/*RELATE:   D      (YES,,NO,C0DABEND) PCB EXIST FOR THIS FRAME ?    */
*/*RELATE2:  D      (YES,,NO,%RL3) PRIVATE AREA PAGE ?               */
*/*          P      (,%RL5) SET UP TO SEARCH THE LOCAL I/O QUEUE     */
*/*%RL3:     P      SET UP TO SEARCH THE COMMON I/O QUEUE            */
*/*%RL5:     D      (NO,,YES,%RL60) IS THE QUEUE EMPTY ?             */
*/*          D      (NO,,YES,%RL10) DOES THE VIRTUAL ADDRESS MATCH ? */
*/*%RL50:    P      (,%RL5) EXAMINE THE NEXT PCB ON THE QUEUE        */
*/*%RL10:    D      (NO,,YES,%RL40) CANCEL = 1 ?                     */
*/*          D      (YES,,NO,IMMTEST) IS THE PCB FOR OUTPUT ?        */
*/*          D      (YES,,NO,%RL50) DO THE PCBRBNS MATCH ?           */
*/*          D     (YES,,NO,%RL13) FRAME MARKED FOR STEAL ?          */
*/*          P     (,%RL13) RESET STEAL FLAG, ZERO UNREFERENCED    1362
*/*INTERVAL COUNT                                                    */
*/*%RL13:    D      (YES,,NO,%RL30) VIO VINDOW ?                     */
*/*IMMRLATE: P      ADD THE INPUT PCB TO THE HEAD OF THE RELATED   1362
*/*QUEUE                                                             */
*/*          P      COPY COMPLETION FLAGS FROM PTR.PCB TO INPUT PCB  */
*/*          D      (YES,,NO,%RL21) PAGING EXCEPTION ?               */
*/*          D      (NO,,YES,%RL21) PAGE FAULTER SUSPENDED ?         */
*/*          S      IEAVSUSP: SUSPEND EXECUTION OF FAULTER           */
*/*          P      INDICATE FAULTER HAS BEEN SUSPENDED              */
*/*          D      (SRB,,RB,%RLSUP1) FAULTER WAS UNDER AN ... ? ?   */
*/*       P  (,%RLSUP2) SAVE THE SRB ADDRESS AND INDICATE SRB MODE   */
*/*%RLSUP1:  P      (,%RLSUP2) SAVE THE TCB & RB ADDRESSES IN THE PCB
*/*                                                                  */
*/*%RLSUP2:  D      (YES,,NO,%RL21) LOCKED PAGE-FAULT ?              */
*/*          P      INDICATE LOCAL LOCK HELD                         */
*/*%RL21:    P      RETURN CODE = 4                                  */
*/*          P      COUNT THE RECLAIM                                */
*/*          D      (NO,,YES,%RL22) PRIVATE AREA PAGE ?              */
*/*          P      (,%RL23) COUNT THE COMMON AREA RECLAIM           */
*/*%RL22:    P      COUNT THE PRIVATE AREA RECLAIM                   */
*/*%RL23:    D      (YES,,NO,RETCDEQ0) FORCE RELATE ?                */
*/*          P      (,RETCDEQ0) SET PCBRBN = PTR.RBN AND UPDATE PFTFXCT
*/*                                                                  */
*/*%RL30:    P (,VALIDATE) PTR.VBN = 0, PTR.FREAL = 0, PFTPCBSI =  1362
*/*0, PTR.SUPRS = 1                                                  */
*/*%RL40:    D      (YES,,NO,%FIXCTST) OUTPUT PCB ?                  */
*/*          P      SET PCBFREAL=1, PCBVBN=0 FOR ALL RELATED PCBS    */
*/*          D      (YES,RETCDEQ4,NO,%RL50) DO PCBRBNS MATCH         */
*/*%FIXCTST: P      (,IMMTEST) INITIALIZE THE FRAME FIX COUNT FROM THE
*/*INPUT PCB                                                         */
*/*IMMTEST:  D      (YES,,NO,IMMRLATE)  IMMEDIATE RECLAIM ?          */
*/* N  I. E., I/O COMPLETE, NO I/O ERROR, PAGE-FAULT, AND NOT SUSPENDED
*/*                                                                  */
*/*          P      SET THE KEY OF THE FRAME FROM XPTPROT            */
*/* P VALIDATE THE PAGE                                              */
*/* P DISCONNECT THE PCB FROM THE PFTE: PCBVBN = 0, PCBFREAL = '0'B  */
*/*P (,INSTEXIT) ZERO THE VBN IN ALL RELATED PCBS                    */
*/*%RL60:    D      (NO,,YES,%RL65) FORCE RELATE ?                   */
*/*C0DABEND: P      SET UNRELATABLE PCB ERROR FLAG IN RCA            */
*/*          S      ABEND: X'C0D' ABEND TO RECORD ERROR              */
*/*          D      (NO,,YES,INSTEXIT) PAGE VALID ?                  */
*/*          P      (,RETCDEQ4) MARK THE PAGE ASSIGNED AND INVALID   */
*/*%RL65:    S      (,RETCDEQ4) GETGFAD: GET ANY RELATED PCBS FROM 1362
*/*THE DEFER QUEUE                                                   */
*/*ALLOC:    E      FRAME ALLOCATION SUBROUTINE                      */
*/*          P      RBN = PVTAFQF  AND SET LONGFLAG OFF              */
*/*%AL5:     D      (NO,,YES,%AL90) AVAILABLE FRAME QUEUE EMPTY ?    */
*/*          P      GENERATE PFTE ADDRESS FROM RBN, PTR1 = RELATED 1362
*/*QUEUE POINTER                                                     */
*/*%AL6:     D      (YES,%AL7,NO,) PCB INDICATE LONG-FIX ?           */
*/*          D      (NO,,YES,%NOLNGFX) END OF RELATED QUEUE ?        */
*/*          P      (,%AL6) GET ADDRESS OF NEXT RELATED PCB          */
*/*%AL7:     P      (,NSWAPTST) SET INTERNAL 'LONG' FLAG             */
*/*%NOLNGFX: D      (NO,,YES,NSWAPTST) SWAP-IN OF LOCAL FIXED OR LSQA
*/*PAGE ?                                                            */
*/*%AL10:    D      (NO,,YES,%AL17) PRIVATE AREA PAGE ?              */
*/*          P      INCREMENT COMMON AREA FRAME COUNT                */
*/*          P      (,%AL20) PFTE DESTINATION IS COMMON FRAME QUEUE,
*/*ASID = X'FFFF'                                                    */
*/*%AL17:    P      PFTE DESTINATION IS LOCAL FRAME QUEUE            */
*/*UPFRMCT:  P      INCREMENT LOCAL (PRIVATE AREA) FRAME COUNT, PFTASID
*/*= ASCBASID                                                        */
*/*%AL20:    S      IEAVPFTE: MOVE PFTE FROM AFQ TO 'TO' QUEUE       */
*/*          P      PCBRBN = RBN OF FRAME, PFTVBN = PCBVBN           */
*/*          P      SET FRAME FIX COUNT = PCBFXC PLUS SUM OF ALL   1362
*/*  RELATED PCBS FIX COUNTS                                         */
*/*%AL30:  P  RESET ALL PFTE FLAGS AND FIELDS NOT EXPLICITLY SET BY
*/*ALLOCATE                                                          */
*/*          R      RETURN TO MAINLINE                               */
*/*NSWAPTST: P      INITIALIZE RBNSAVE (LAST RESORT RBN)             */
*/*          D      (NO,%AL61,YES,) ADDRESS SPACE SWAPPABLE ?        */
*/*%AL41:    D      (YES,,NO,%AL75) V=R AREA FRAME ?                 */
*/*          P      RBNSAVE = CURRENT PFTE'S RBN                     */
*/*%AL42:    P      RBN = RBN OF NEXT AVAILABLE FRAME (PFTFQPTR)     */
*/*          D      (NO,,YES,%AL70) END OF THE QUEUE ?               */
*/*          P      (,%AL41) PFTEPTR = PVTPFTP + RBN                 */
*/*%AL61:    D      (NO,,YES,%AL65) V=R AREA FRAME ?                 */
*/*          D      (YES,,NO,%AL75) FRAME IN THE RESERVED AREA ?     */
*/*%AL62:    P      RBNSAVE = CURRENT PFTE'S RBN                     */
*/*%AL65:    P      RBN = RBN OF NEXT AVAILABLE FRAME (PFTFQPTR)     */
*/*          D      (NO,,YES,%AL71) END OF THE QUEUE ?               */
*/*          P      (,%AL61) PFTEPTR = PVTPFTP + RBN                 */
*/*%AL71:    S      IEAVPREF: TRY TO STEAL PREFERRED PFTE FROM LIOQ  */
*/*          D      (YES,%AL75,NO,) PREF PFTE STOLEN                 */
*/*          S      IEAVPREF: TRY TO STEAL PREFERRED PFTE FROM CIOQ  */
*/*          D      (YES,%AL75,NO,) PREF PFTE STOLEN                 */
*/*          D      (NO,%AL70,YES,) NEED TO CONVERT SAVED PFTE       */
*/*          S      IEAVPREF: CONVERT BOX TO PREFERRED               */
*/*%AL70:    D      (NO,,YES,%AL90) RBNSAVE = 0 ?                    */
*/*          P      PTR = PVTPFTP + RBNSAVE, RBN = RBNSAVE           */
*/*%AL75:    D      (YES,,NO,%AL80) INTERNAL 'LONG' FLAG ON ?        */
*/*          P      (,%AL80) LONG-FIX THE FRAME                      */
*/*%AL80:    D      (YES,,NO,%AL10) LSQA PAGE SWAP-IN ?              */
*/*          P      (,UPFRMCT) SEND FRAME TO LSQA QUEUE, SET LSQA FLAG
*/* IN THE PFTE                                                      */
*/*%AL90:    P      INDICATE FRAME ALLOCATION DEFERRED FOR THIS PCB  */
*/*          R      RETURN TO MAINLINE                               */
*/*IEAVGFAD: E      (,%GFAD) DEFER QUEUE PROCESSOR                   */
*/*%GFAD:    P      SET UP PVT AND RSMHD ADDRESSES FOR IEAVGFA       */
*/*          S      SETFRR: SET UP FRR AND OBTAIN RCA                */
*/*          S      SETLOCK: GET SALLOC LOCK                         */
*/*          P      INDICATE CSECT ENTERED AND LOCK HELD IN RCA, LINK
*/*RCA TO PVT                                                        */
*/*          P      RESET THE GFA-DEFER FLAG IN THE RSM HEADER       */
*/*          P      PCBPTR = LAST PCB ON THE DEFER QUEUE             */
*/*%DEF10:   D      (NO,,YES,GFADEXIT) DEFER QUEUE EMPTY ?           */
*/*          D      (YES,,NO,%DEF20) DEFERRED PCB FOR THIS MEMORY ?  */
*/*          P      RESET THE PCB DEFER FLAG                         */
*/*          D      (NO,,YES,GFADEXIT) AVAILABLE FRAME Q EMPTY ?     */
*/*          P      RESET DEFER FLAGS IN THE PCB AND ITS XPTE        */
*/*          P      PTR = ADDRESS OF PREVIOUS PCB                    */
*/*          S      IEAVPCB: DEQUEUE CURRENT PCB                     */
*/*          S      (,%DEF10) IEAVGFA: PASS PCB TO GFA FOR ALLOCATION
*/*                                                                  */
*/*%DEF20:   P      (,%DEF10) GET THE PREVIOUS PCB ADDRESS           */
*/*GFADEXIT: S      SETLOCK: RELEASE SALLOC LOCK                     */
*/*          S      FREECELL: FREE SRB                               */
*/*          S      SETFRR: DELETE FRR AND FREE RCA                  */
*/*          R      EXIT                                             */
*/*PCBDISP:  E      DISPOSE OF PCBS                                  */
*/*          P      GET FIRST RELATED PCB ADDRESS                    */
*/*          D      (YES,,NO,%PCB64) PAGING EXCEPTION ?              */
*/*          D      (YES,,NO,SCHEDPCB) PAGE FAULTER SUSPENDED ?      */
*/*          D      (YES,%PCBRST,NO,) PAGE FAULT UNDER AN SRB ?      */
*/*          D      (YES,%PCBRST,NO,) LOCKED PAGE FAULT ?            */
*/*PCBDISPB: D      (YES,%PCB62A,NO,) PRIVATE AREA PAGE ?            */
*/*          P      (,%PCB62C) PCB DESTINATION IS COMMON I/O QUEUE   */
*/*%PCB62A:  P  (,%PCB62C) PCB DESTINATION IS LOCAL I/O QUEUE        */
*/*%PCB62C:  P  INDICATE I/O COMPLETE, NO RELATED PCBS, RESET VIRTUAL
*/*ADDRESS                                                           */
*/*          S  IEAVPCB: ADD PCB TO ITS DESTINATION QUEUE            */
*/*          S  (,DISPLAST) IEAVOPBR: HAVE IEAVIOCP SCHEDULED        */
*/*%PCBRST:  S  (,SCHEDPCB) IEAVRSET: MAKE TCB OR SRB DISPATCHABLE   */
*/*%PCB64:   D      (YES,,NO,PCBDISPB) ROOT PCB EXIST ?              */
*/*          D  (YES,,NO,%PCBSTLK) ROOT COMPLETION COUNT > 1 ?       */
*/*          P  (,SCHEDPCB) DECREMENT THE ROOT COMPLETION COUNT      */
*/*%PCBSTLK: S  SETLOCK: REQUEST LOCAL LOCK CONDITIONALLY            */
*/*         D  (NO,PCBDISPB,YES,) DO WE NOW HOLD THE LOCAL LOCK?     */
*/*         D  (YES,%PCBNST,NO,) DID OUR CPU HAVE IT BEFORE?         */
*/*         P  SET RCALL TO INDICATE LOCAL LOCK OBTAINED             */
*/*%PCBNST:  P  ZERO THE ROOT COMPLETION COUNT                       */
*/*         S  ROOTEXIT: CALL THE EXIT POINTED TO BY PCBRGOTO        */
*/*         D  (NO,SCHEDPCB,YES,) DID I GET LOCAL LOCK ?             */
*/*         S  (,SCHEDPCB) SETLOCK: RELEASE LOCAL LOCK , RESET RCALL
*/*FLAG                                                              */
*/*SCHEDPCB: S      IEAVPCB: FREE THE PCB                            */
*/*DISPLAST: D      (YES,,NO,%PCB66D) END OF THE RELATED QUEUE ?     */
*/*          R      RETURN TO GFA MAINLINE                           */
*/*%PCB66D:  P      (,PCBDISPB) PTR1 = NEXT RELATED PCB ADDRESS      */
*/*PUTGFAD:  E      SUBRTN TO PUT PCBS ON DEFER QUEUE                */
*/*          P      INCREMENT THE DEFER COUNT                        */
*/*          D      (YES,,NO,%PUT30) SWAP-IN ?                       */
*/*          P      (,CALLPCB) PCBSWPIN = 0                          */
*/*%PUT30:   D      (NO,,YES,%PUT32) XPTDEFER = 1 OR XPTFREL = 1 ?   */
*/*          P      MARK THE XPTE DEFERRED, THE PAGE ASSIGNED AND  1362
*/*INVALID                                                           */
*/*CALLPCB:  S      (,PUTEXIT) IEAVPCB: PUT PCB ON END OF DEFER QUEUE
*/*                                                                  */
*/*%PUT32:   P      LOCATE FIRST PCB ON GFA DEFER QUEUE (PVTGFAD)    */
*/*%PUT33:   D      (NO,,YES,%PUT39) IS THIS THE END OF THE QUEUE ?  */
*/*          D      (NO,,YES,%PUT34) DOES VBN MATCH INPUT PCBVBN ?   */
*/*%PUT33A:  P      (,%PUT33) GET NEXT PCB ON QUEUE (PCBFQPA)        */
*/*%PUT34:   D      (YES,,NO,%PUT35) INPUT PCBVBN IN PRIVATE AREA ?  */
*/*          D      (NO,%PUT33A,YES,%PUT35) DO ASID'S MATCH ?        */
*/*%PUT35:   P      ADD THE PCB TO THE FRONT OF THE RELATED QUEUE    */
*/*PUTEXIT:  R      RETURN TO MAINLINE                               */
*/*%PUT39:   P      (,CALLPCB) MARK THE FRAME DEFERRED               */
*/*GETGFAD:  E      SUBROUTINE TO GET PCBS FROM GFADQ                */
*/*          P      PTR = PVTGFADF ( ADDRESS OF THE DEFER QUEUE)     */
*/*%GET10:   D      (NO,,YES,GTEXIT) PTR = 0 (END OF THE QUEUE ) ?   */
*/*          D      (NO,,YES,%GET20) PCB FOR SAME VIRTUAL PAGE ?     */
*/*%GET15:   P      (,%GET10) PTR = ADDRESS OF NEXT DEFERRED PCB     */
*/*%GET20:   D      (YES,,NO,%GET25) PCB FOR PRIVATE AREA PAGE ?     */
*/*          D      (YES,,NO,%GET15) PCB FOR THE SAME MEMORY ?       */
*/*%GET25: S  (,%GET30) IEAVPCB: DEQUEUE THE PCB(S) FROM THE DEFER 1362
*/*QUEUE                                                             */
*/*%GET30:   P      ENQUEUE THEM ON THE INPUT PCB'S RELATED QUEUE    */
*/*GTEXIT:   P      RESET THE XPTDEFER FLAG                          */
*/*          R      RETURN TO MAINLINE                               */
*/*PGIN:     E      PAGE-IN SET-UP SUBRTN                            */
*/*          P      PLACE PCB'S AIA ON I/O HOLD QUEUE                */
*/*          D      (YES,,NO,%PGIN30) PRIVATE AREA PAGE ?            */
*/*          D      (NO,,YES,%PGIN20) SWAP-IN ?                      */
*/*          D      (NO,,YES,%PGIN10) VIO PAGE ?                     */
*/*          P      (,%PGIN20) COUNT THE NON-VIO PAGE-IN             */
*/*%PGIN10:  P      COUNT THE VIO PAGE-IN                            */
*/*%PGIN20:  P      PCB QUEUE NUMBER IS PCBLIOQN                     */
*/*%PGIN25:  S      IEAVPCB: MOVE PCB TO AN IOQ                      */
*/*          R      RETURN                                           */
*/*%PGIN30:  D      (NO,,YES,%PGIN40) STAGE 1 SWAP-IN ?              */
*/*          D      (NO,,YES,%PGIN50) VIO PAGE ?                     */
*/*          P      COUNT THE COMMON AREA NON-VIO PAGE-IN            */
*/*%PGIN40:  P      (,%PGIN25) PCB QUEUE IS PCBCIOQN                 */
*/*%PGIN50:  P      (,%PGIN40) COUNT THE COMMON AREA VIO PAGE-IN     */
*/*IEAVGFA:  END                                                     */
@DATA    DS    0H
@CH00032 DC    H'9'
@DATD    DSECT
         DS    0F
IEAVGFA  CSECT
         DS    0F
@CF00038 DC    F'1'
@CF00085 DC    F'4'
@CF00060 DC    F'16'
@CF02288 DC    F'36'
@CF02222 DC    F'2048'
@CF02220 DC    F'4096'
@CF02289 DC    F'16711680'
@CF02253 DC    XL4'00000006'
@CF02300 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEAVGFA  CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02161 DC    V(IEAVSUSP)
         DS    0D
GFAENTER DC    XL4'01000000'
GFADEFER DC    XL4'10000000'
GFARECLM DC    XL4'00000100'
@CB02190 DC    X'FFF0'
MXVROFF  DC    X'FFFFFFFF'
         ORG   MXVROFF
NOFRAME  DS    BL2
COMMASID DS    BL2
         ORG   MXVROFF+4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PVTPTR   EQU   @03
PFTEPTR  EQU   @07
PCBPTR   EQU   @11
RSMHDPTR EQU   @02
R6       EQU   @06
R0       EQU   @00
PASS     EQU   @00
R1       EQU   @01
PARM     EQU   @01
R4       EQU   @04
R5       EQU   @05
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R12      EQU   @12
PTR1     EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTFLAG2 EQU   PVT+1
PVTAFC   EQU   PVT+2
PVTPFTP  EQU   PVT+12
PVTFPFN  EQU   PVT+16
PVTLPFN  EQU   PVT+18
PVTFVR   EQU   PVT+20
PVTLVR   EQU   PVT+22
PVTLCSA  EQU   PVT+26
PVTDFRS  EQU   PVT+34
PVTREUS  EQU   PVT+48
PVTPRCA  EQU   PVT+52
PVTLQSA  EQU   PVT+60
PVTSRBID EQU   PVT+68
PVTPGFA  EQU   PVT+84
PVTPCB   EQU   PVT+104
PVTPFTE  EQU   PVT+108
PVTPFP2  EQU   PVT+116
PVTPRCV  EQU   PVT+156
PVTPINV  EQU   PVT+172
PVTPOPBR EQU   PVT+220
PVTPPREF EQU   PVT+224
PVTSWPIO EQU   PVT+232
PVTPAGIO EQU   PVT+236
PVTPRSET EQU   PVT+244
PVTNPIN  EQU   PVT+248
PVTVAMI  EQU   PVT+256
PVTSPIN  EQU   PVT+268
PVTNPREC EQU   PVT+276
PVTCAIN  EQU   PVT+284
PVTCAREC EQU   PVT+292
PVTSPREC EQU   PVT+296
PVTQS    EQU   PVT+304
PVTAFQF  EQU   PVTQS
PVTWSAX  EQU   PVT+344
PVTWSA8  EQU   PVTWSAX+504
PVTSAVE  EQU   PVTWSAX+1328
PVTMAXFX EQU   PVT+1822
PVTDEFFX EQU   PVT+1828
PVTCNTFX EQU   PVT+1830
PVTCOMFX EQU   PVT+1834
PVTPCBQS EQU   PVT+1852
PVTGFADF EQU   PVTPCBQS+24
PVTGFADL EQU   PVTPCBQS+28
PVTCIOQF EQU   PVTPCBQS+32
PVTMVCLC EQU   PVT+1936
PVTTASID EQU   PVT+1942
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
FRREPTR  EQU   0
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBSTOR EQU   ASCB+44
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBOUXB EQU   ASCB+148
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
RCA      EQU   0
RCAPARM1 EQU   RCA+4
RCANAME7 EQU   RCA+8
RCACSECT EQU   RCA+9
RCAFLAGS EQU   RCA+10
RCASAL   EQU   RCAFLAGS
RCALL    EQU   RCAFLAGS
RCARCRD  EQU   RCA+11
RCANAMES EQU   RCA+12
RCANAME1 EQU   RCANAMES
RCAGFA   EQU   RCANAME1
RCANAME2 EQU   RCANAMES+1
RCANAME3 EQU   RCANAMES+2
RCANAME4 EQU   RCANAMES+3
RCAGFAD  EQU   RCANAME4
RCANAME5 EQU   RCANAMES+4
RCANAME6 EQU   RCANAMES+5
PFTE     EQU   0
PFTPGID  EQU   PFTE
PFTASID  EQU   PFTPGID
PFTVBN   EQU   PFTPGID+2
PFTQPTRS EQU   PFTE+4
PFTFQPTR EQU   PFTQPTRS
PFTFXCT  EQU   PFTE+8
PFTFLAGS EQU   PFTE+12
PFTFLAG1 EQU   PFTFLAGS
PFTONAVQ EQU   PFTFLAG1
PFTVRINT EQU   PFTFLAG1
PFTLSQA  EQU   PFTFLAG1
PFTVRPLT EQU   PFTFLAG1
PFTPCBSI EQU   PFTFLAG1
PFTOFINT EQU   PFTFLAG1
PFTFLAG2 EQU   PFTFLAGS+1
PFTVR    EQU   PFTFLAG2
PFTIRRG  EQU   PFTFLAG2
PFTSTEAL EQU   PFTFLAG2
PFTPREF  EQU   PFTFLAG2
PFTQNDX  EQU   PFTE+14
PFTUIC   EQU   PFTE+15
PCB      EQU   0
PCBFQP   EQU   PCB
PCBFQPA  EQU   PCBFQP+1
PCBBQP   EQU   PCB+4
PCBBQPA  EQU   PCBBQP
PCBRTP   EQU   PCB+8
PCBFL1   EQU   PCBRTP
PCBPEX   EQU   PCBFL1
PCBSRBMD EQU   PCBFL1
PCBLLHLD EQU   PCBFL1
PCBROOT  EQU   PCBFL1
PCBIOI   EQU   PCBFL1
PCBIOCMP EQU   PCBFL1
PCBRTPA  EQU   PCBRTP+1
PCBRLP   EQU   PCB+12
PCBFXC   EQU   PCBRLP
PCBRLPA  EQU   PCBRLP+1
PCBXPT   EQU   PCB+16
PCBFL2   EQU   PCBXPT
PCBFREAL EQU   PCBFL2
PCBGFAD  EQU   PCBFL2
PCBIOERR EQU   PCBFL2
PCBRESET EQU   PCBFL2
PCBSUPRS EQU   PCBFL2
PCBVIO   EQU   PCBFL2
PCBXPTA  EQU   PCBXPT+1
PCBPGT   EQU   PCB+20
PCBFL3   EQU   PCBPGT
PCBSWPIN EQU   PCBFL3
PCBSWPS1 EQU   PCBFL3
PCBSWPLS EQU   PCBFL3
PCBNOREC EQU   PCBFL3
PCBSWPS2 EQU   PCBFL3
PCBRBN   EQU   PCB+24
PCBVBN   EQU   PCB+26
PCBBLOCK EQU   PCB+28
PCBSRB   EQU   PCBBLOCK
PCBRB    EQU   PCBSRB
PCBASCB  EQU   PCB+32
PCBAIA   EQU   PCB+36
PCBR     EQU   0
PCBRTCB  EQU   PCBR
PCBRFLAG EQU   PCBRTCB
PCBRETRY EQU   PCBRFLAG
PCBRPB   EQU   PCBRFLAG
PCBRFAIL EQU   PCBRFLAG
PCBRGOTO EQU   PCBR+4
PCBRASCB EQU   PCBR+12
PCBRCNT  EQU   PCBR+16
PCBRWRK3 EQU   PCBR+28
PCBRWRK4 EQU   PCBR+32
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
RSMHD    EQU   0
RSMASCB  EQU   RSMHD+8
RSMFLG1  EQU   RSMHD+12
RSMGFAD  EQU   RSMFLG1
RSMFAIL  EQU   RSMFLG1
RSMCNTFX EQU   RSMHD+14
RSMQS    EQU   RSMHD+20
RSMLFQ   EQU   RSMQS
RSMLSQA  EQU   RSMQS+4
RSMLIOQ  EQU   RSMQS+8
RSMLIOQF EQU   RSMLIOQ
PGTPTE   EQU   0
PGTRSA   EQU   PGTPTE
PGTBITS  EQU   PGTRSA+1
PGTPVM   EQU   PGTBITS
PGTPAM   EQU   PGTBITS
XPTE     EQU   0
XPTPROT  EQU   XPTE
XPTFLAGS EQU   XPTE+2
XPTXAV   EQU   XPTFLAGS
XPTCKF   EQU   XPTFLAGS
XPTVIO   EQU   XPTFLAGS
XPTDEFER EQU   XPTFLAGS
XPTFLAG2 EQU   XPTE+3
XPTPOINP EQU   XPTFLAG2
XPTLPID  EQU   XPTE+4
XPTLGN   EQU   XPTLPID
XPTLPN   EQU   XPTLPID+4
ASMVT    EQU   0
ASMFLAG1 EQU   ASMVT
ASMFLAG2 EQU   ASMVT+1
ASMSTAGQ EQU   ASMVT+32
ASMPCCWQ EQU   ASMVT+64
ASMLSAI  EQU   ASMVT+144
ASMGOSQS EQU   ASMVT+152
ASMWKSA1 EQU   ASMVT+368
ASMWKSA2 EQU   ASMVT+448
ASMWKSA3 EQU   ASMVT+528
ASMWKSA4 EQU   ASMVT+608
ASMWKSA5 EQU   ASMVT+688
ASMPOOLS EQU   0
ASMCPAVQ EQU   ASMPOOLS+8
ASMCPRSQ EQU   ASMPOOLS+16
OUXB     EQU   0
OUXBPIN  EQU   OUXB+16
OUXBPREC EQU   OUXB+24
OUXBVAMI EQU   OUXB+28
OUXBCAPI EQU   OUXB+40
OUXBCAPR EQU   OUXB+44
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
LCCAASID EQU   LCCA+732
RTNADDR  EQU   0
IEAVFP2  EQU   0
IEAVPCB  EQU   0
IEAVINV  EQU   0
IEAVPFTE EQU   0
IEAVOPBR EQU   0
IEAVRSET EQU   0
IEAVPREF EQU   0
ROOTEXIT EQU   0
GFAMAIN  EQU   0
ILRSWAP  EQU   0
ILRPAGIO EQU   0
PCPTR    EQU   0
PGTEND   EQU   0
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FRRSPTR  EQU   PSACSTK
ASCBPTR  EQU   RSMASCB
RCAPTR   EQU   PVTPRCA
PCBRPTR  EQU   PCBRTP
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTFRECL EQU   CVTS01+148
CVTOPTE  EQU   CVTS01+188
CVTASMVT EQU   CVTS01+356
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PTEPTR   EQU   PCBPGT
XPTEPTR  EQU   PCBXPT
ASMVTPTR EQU   CVTASMVT
ASM1WKSV EQU   ASMWKSA1
ASM1RGSV EQU   ASM1WKSV
ASM1WRKA EQU   ASM1WKSV+60
ASM2WKSV EQU   ASMWKSA2
ASM2WRKA EQU   ASM2WKSV+52
ASM2FLGS EQU   ASM2WRKA+12
ASM3WKSV EQU   ASMWKSA3
ASM4WKSV EQU   ASMWKSA4
ASM4RGSV EQU   ASM4WKSV
ASM5WKSV EQU   ASMWKSA5
ASM5RGSV EQU   ASM5WKSV
RSMAIA   EQU   PCBAIA
AIA      EQU   RSMAIA
AIAFLG1  EQU   AIA+9
AIALSQA  EQU   AIAFLG1
AIAFLG2  EQU   AIA+10
AIAFRAUX EQU   AIAFLG2
AIAPRIER EQU   AIAFLG2
AIAFLG3  EQU   AIA+11
AIANXAIA EQU   AIA+12
AIAID    EQU   AIA+16
AIALPID  EQU   AIAID
AIALGID  EQU   AIALPID
AIALSID  EQU   AIALGID
AIASSID  EQU   AIALSID+1
AIARPN   EQU   AIALPID+4
AIALSID2 EQU   AIARPN
AIALPMEP EQU   AIALSID2
AIAGRPSZ EQU   AIA+24
AIALGE   EQU   AIAGRPSZ
OUXBPTR  EQU   ASCBOUXB
LCCAPTR  EQU   PSALCCAV
WORKSAVE EQU   PVTWSA8
VARIABLS EQU   WORKSAVE+44
RCLMRET  EQU   VARIABLS
SUBRTSAV EQU   VARIABLS+4
INTRETCD EQU   VARIABLS+8
INTFLGS  EQU   VARIABLS+9
LONGFLAG EQU   INTFLGS
CANCEL   EQU   INTFLGS
ISSUESE3 EQU   INTFLGS
COUNTSET EQU   INTFLGS
PROTKEY  EQU   VARIABLS+10
TEMPSAVE EQU   PROTKEY
PARMPFTE EQU   VARIABLS+12
TOQUEUE# EQU   PARMPFTE+1
RBNPARM  EQU   PARMPFTE+2
AIAPTR   EQU   VARIABLS+16
RBA      EQU   VARIABLS+20
RBN      EQU   RBA+1
NEXTPCBP EQU   VARIABLS+24
ADRDIFFS EQU   VARIABLS+28
ROOTPCBP EQU   ADRDIFFS
SAVEPFTE EQU   ROOTPCBP
LVRADDIF EQU   SAVEPFTE
FVRADDIF EQU   SAVEPFTE+2
IOHOLDQF EQU   VARIABLS+32
IOHOLDQL EQU   VARIABLS+36
NORECPCB EQU   VARIABLS+40
PCBCOPY  EQU   PCBRTP
@NM00057 EQU   PCBFL1
PCBPREFR EQU   @NM00057
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00059 EQU   @NM00057
@NM00058 EQU   @NM00057
@NM00056 EQU   RBA+3
@NM00055 EQU   RBA
FLGSPTFE EQU   PARMPFTE
@NM00054 EQU   VARIABLS+11
SAVEREGS EQU   WORKSAVE
AIADPXCT EQU   AIALGE
AIACEPTR EQU   AIALPMEP
AIASLOT  EQU   AIASSID+1
@NM00053 EQU   AIASSID
@NM00052 EQU   AIALSID
AIARCSN  EQU   AIANXAIA+2
AIACYL   EQU   AIANXAIA
AIARSV9  EQU   AIAFLG3
AIARSV8  EQU   AIAFLG3
AIARSV7  EQU   AIAFLG3
AIALPMEC EQU   AIAFLG3
AIARSV6  EQU   AIAFLG3
AIATRPSP EQU   AIAFLG3
AIAPRINO EQU   AIAFLG3
AIARSV5  EQU   AIAFLG3
AIABADID EQU   AIAFLG2
AIAERROR EQU   AIAFLG2
AIASECER EQU   AIAFLG2
AIARSV4  EQU   AIAFLG2
AIAIORTY EQU   AIAFLG2
AIATERMR EQU   AIAFLG2
AIARSV1  EQU   AIAFLG1
AIASWPFX EQU   AIAFLG1
AIAPAGDS EQU   AIAFLG1
AIADUPLX EQU   AIAFLG1
AIAVIO   EQU   AIAFLG1
AIAPRIV  EQU   AIAFLG1
AIAWRITE EQU   AIAFLG1
AIAOP    EQU   AIA+8
AIABQPA  EQU   AIA+4
AIAFQPA  EQU   AIA
ASM5FLGS EQU   ASM5WKSV+64
ASM5AIA  EQU   ASM5WKSV+60
ASM5GCTR EQU   ASM5WKSV+56
ASM5SR14 EQU   ASM5WKSV+52
@NM00051 EQU   ASM5RGSV+4
ASM5RG2  EQU   ASM5RGSV
@NM00050 EQU   ASM4RGSV+4
ASM4RG2  EQU   ASM4RGSV
ASM3SR13 EQU   ASM3WKSV+28
ASM3R14B EQU   ASM3WKSV+24
ASM3R14A EQU   ASM3WKSV+20
ASM3GRPA EQU   ASM3WKSV+16
ASM3TMPA EQU   ASM3WKSV+12
ASM3PIOP EQU   ASM3WKSV+8
ASM3GENQ EQU   ASM3WKSV+4
ASM3SWPQ EQU   ASM3WKSV
ASM2SR14 EQU   ASM2WRKA+16
@NM00049 EQU   ASM2WRKA+13
ASM2WFLG EQU   ASM2FLGS
ASM2RFLG EQU   ASM2FLGS
ASM2DUPQ EQU   ASM2WRKA+8
ASM2CAQ  EQU   ASM2WRKA+4
ASM2PAQ  EQU   ASM2WRKA
ASM2RGSV EQU   ASM2WKSV
ASM1NXTA EQU   ASM1WRKA+4
ASM1ASCB EQU   ASM1WRKA
ASM1RG15 EQU   ASM1RGSV+56
@NM00048 EQU   ASM1RGSV+4
ASM1RG1  EQU   ASM1RGSV
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCACPUS EQU   LCCA+536
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
OUXBEND  EQU   OUXB+144
OUXBTSW  EQU   OUXB+140
OUXBFIXC EQU   OUXB+138
OUXBNVC  EQU   OUXB+136
OUXBUIC  EQU   OUXB+134
OUXBVSC  EQU   OUXB+132
OUXBILS  EQU   OUXB+128
OUXBRSV1 EQU   OUXB+126
OUXBWCT  EQU   OUXB+124
OUXBPRS  EQU   OUXB+120
OUXBSTD  EQU   OUXB+116
OUXBITD  EQU   OUXB+112
OUXBMSS  EQU   OUXB+104
OUXBCPS  EQU   OUXB+96
OUXBAET  EQU   OUXB+92
OUXBTRR  EQU   OUXB+88
OUXBJBR  EQU   OUXB+84
OUXBTRT  EQU   OUXB+80
OUXBTRS  EQU   OUXB+76
OUXBJBT  EQU   OUXB+72
OUXBJBS  EQU   OUXB+68
OUXBTRC  EQU   OUXB+64
OUXBNQT  EQU   OUXB+60
OUXBIOSM EQU   OUXB+56
OUXBSTC  EQU   OUXB+54
OUXBIOS  EQU   OUXB+52
OUXBSTCT EQU   OUXB+48
OUXBVAMR EQU   OUXB+36
OUXBVAMO EQU   OUXB+32
OUXBPOUT EQU   OUXB+20
OUXBRSW  EQU   OUXB+12
OUXBMET  EQU   OUXB+8
OUXBPET  EQU   OUXB+4
OUXBNAME EQU   OUXB
ASMCPRES EQU   ASMCPRSQ+4
ASMCPTAK EQU   ASMCPRSQ
ASMCPCNT EQU   ASMCPAVQ+4
ASMCPAVL EQU   ASMCPAVQ
ASMCPEXT EQU   ASMPOOLS+6
ASMCPSIZ EQU   ASMPOOLS+4
ASMCPID  EQU   ASMPOOLS
ASMRSV12 EQU   ASMVT+1000
ASMSAVE  EQU   ASMVT+928
ASMWKSA7 EQU   ASMVT+848
ASMWKSA6 EQU   ASMVT+768
ASMACEPC EQU   ASMVT+344
ASMSWKPC EQU   ASMVT+328
ASMBWKPC EQU   ASMVT+312
ASMIOEPC EQU   ASMVT+296
ASMRSV10 EQU   ASMVT+280
ASMPVACE EQU   ASMVT+276
ASMPIOFR EQU   ASMVT+272
ASMPVACQ EQU   ASMVT+268
ASMPMSGS EQU   ASMVT+264
ASMPMSG0 EQU   ASMVT+260
ASMPFRLG EQU   ASMVT+256
ASMPRLG  EQU   ASMVT+252
ASMPACT  EQU   ASMVT+248
ASMPSAV  EQU   ASMVT+244
ASMPCMP  EQU   ASMVT+240
ASMPCMPA EQU   ASMVT+236
ASMPCMPN EQU   ASMVT+232
ASMPCMPD EQU   ASMVT+228
ASMPEX   EQU   ASMVT+224
ASMVRMTR EQU   ASMVT+220
ASMPSRBC EQU   ASMVT+216
ASMPSRMT EQU   ASMVT+212
ASMPSWPD EQU   ASMVT+208
ASMPTM   EQU   ASMVT+204
ASMPFRSW EQU   ASMVT+200
ASMPFRSL EQU   ASMVT+196
ASMPQIOE EQU   ASMVT+192
ASMRSV8  EQU   ASMVT+188
ASMVSAMW EQU   ASMVT+184
ASMTASCB EQU   ASMVT+180
ASMRLGWQ EQU   ASMVT+176
ASMRLGRQ EQU   ASMVT+172
ASMTMECB EQU   ASMVT+168
ASMTCBPT EQU   ASMVT+164
ASMREQCT EQU   ASMVT+160
ASMGOSWK EQU   ASMGOSQS+4
ASMGOSWT EQU   ASMGOSQS
ASMLSAIH EQU   ASMLSAI+4
ASMLSAIL EQU   ASMLSAI
ASMCINV  EQU   ASMVT+140
ASMSTGXA EQU   ASMVT+136
ASMLGVT  EQU   ASMVT+132
ASMSLOTV EQU   ASMVT+128
ASMERRS  EQU   ASMVT+124
ASMNVSC  EQU   ASMVT+120
ASMVSC   EQU   ASMVT+116
ASMSLOTS EQU   ASMVT+112
ASMBKSLT EQU   ASMVT+108
ASMRSV7  EQU   ASMVT+92
ASMPSRB  EQU   ASMVT+88
ASMSRBCT EQU   ASMVT+84
ASMIOCNT EQU   ASMVT+80
ASMBURST EQU   ASMVT+76
ASMPCCWN EQU   ASMVT+72
ASMPCCWC EQU   ASMPCCWQ+4
ASMPCCWA EQU   ASMPCCWQ
ASMRSV6  EQU   ASMVT+48
ASMIORQC EQU   ASMVT+44
ASMIORQR EQU   ASMVT+40
ASMSTAGL EQU   ASMSTAGQ+4
ASMSTAGF EQU   ASMSTAGQ
ASMRSV5  EQU   ASMVT+28
ASMMSGBF EQU   ASMVT+24
ASMEREC  EQU   ASMVT+20
ASMTRPAG EQU   ASMVT+16
ASMGOS   EQU   ASMVT+12
ASMPART  EQU   ASMVT+8
ASMSART  EQU   ASMVT+4
ASMDSSFS EQU   ASMVT+2
ASMWARM  EQU   ASMFLAG2
ASMQUICK EQU   ASMFLAG2
ASMNOTPT EQU   ASMFLAG2
ASMNOTMR EQU   ASMFLAG2
ASMNOSAV EQU   ASMFLAG2
ASMCALLQ EQU   ASMFLAG2
ASMPLPAS EQU   ASMFLAG1
ASMCOMMF EQU   ASMFLAG1
ASMPLPAF EQU   ASMFLAG1
ASMNODPX EQU   ASMFLAG1
ASMRSV1  EQU   ASMFLAG1
ASMNOLCL EQU   ASMFLAG1
ASMNOCWQ EQU   ASMFLAG1
ASMDUPLX EQU   ASMFLAG1
XPTLSID2 EQU   XPTLPN
XPTLSID  EQU   XPTLGN
@NM00047 EQU   XPTFLAG2
XPTIOERR EQU   XPTFLAG2
XPTRES1  EQU   XPTFLAG2
XPTVALID EQU   XPTFLAG2
XPTRSV4  EQU   XPTFLAGS
XPTRES2  EQU   XPTFLAGS
@NM00046 EQU   XPTFLAGS
XPTVIOLP EQU   XPTFLAGS
XPTRSV1  EQU   XPTE+1
@NM00045 EQU   PGTBITS
@NM00044 EQU   PGTBITS
@NM00043 EQU   PGTBITS
@NM00042 EQU   PGTBITS
@NM00041 EQU   PGTBITS
@NM00040 EQU   PGTBITS
PGTREAL  EQU   PGTRSA
RSMASMHD EQU   RSMHD+40
RSMFOEQ  EQU   RSMHD+36
RSMLIOQL EQU   RSMLIOQ+4
RSMLSQAL EQU   RSMLSQA+2
RSMLSQAF EQU   RSMLSQA
RSMLFQL  EQU   RSMLFQ+2
RSMLFQF  EQU   RSMLFQ
RSMRSV2  EQU   RSMHD+16
RSMRSV1  EQU   RSMHD+13
@NM00039 EQU   RSMFLG1
RSMGFADD EQU   RSMFLG1
RSMCPNC  EQU   RSMFLG1
RSMCPNU  EQU   RSMFLG1
RSMIOCPC EQU   RSMFLG1
RSMIOCPU EQU   RSMFLG1
RSMSPCT  EQU   RSMHD+4
RSMVSTO  EQU   RSMHD
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00038 EQU   CVTFIX+248
@NM00037 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
PCBRWRKB EQU   PCBR+60
PCBRWRKA EQU   PCBR+56
PCBRWRK9 EQU   PCBR+52
PCBRWRK8 EQU   PCBR+48
PCBRWRK7 EQU   PCBR+44
PCBRWRK6 EQU   PCBR+40
PCBRWRK5 EQU   PCBR+36
PCBRWRK2 EQU   PCBR+24
PCBRWRK1 EQU   PCBR+20
PCBRRSV1 EQU   PCBR+18
PCBRECB  EQU   PCBR+8
PCBRTCBA EQU   PCBRTCB+1
PCBRPOF  EQU   PCBRFLAG
PCBRFECB EQU   PCBRFLAG
PCBRLOAD EQU   PCBRFLAG
PCBRFPCB EQU   PCBRFLAG
PCBRINT  EQU   PCBRFLAG
PCBEND   EQU   PCB+64
PCBSPCTE EQU   PCBRB
PCBPGTA  EQU   PCBPGT+1
@NM00036 EQU   PCBFL3
PCBDFRLS EQU   PCBFL3
PCBSWPOT EQU   PCBFL3
@NM00035 EQU   PCBFL2
@NM00034 EQU   PCBFL2
PCBLFR   EQU   PCBFL1
@NM00033 EQU   PCBFL1
PCBCQN   EQU   PCBFQP
@NM00032 EQU   PFTFLAG2
@NM00031 EQU   PFTFLAG2
PFTOFFLN EQU   PFTFLAG2
PFTDFRLS EQU   PFTFLAG2
PFTVRALC EQU   PFTFLAG1
PFTBADPG EQU   PFTFLAG1
PFTRSV1  EQU   PFTE+10
PFTBQPTR EQU   PFTQPTRS+2
RCARETAD EQU   RCA+20
RCATASID EQU   RCA+18
RCAREP1  EQU   RCANAME6
RCAPSIF  EQU   RCANAME6
RCAPSIX  EQU   RCANAME6
RCAVEQRP EQU   RCANAME6
RCARCFC  EQU   RCANAME6
RCACSGB  EQU   RCANAME6
RCAFXL   EQU   RCANAME6
RCAPS113 EQU   RCANAME6
RCAFREE  EQU   RCANAME5
RCARFR2  EQU   RCANAME5
RCACPBR  EQU   RCANAME5
RCAOPBR  EQU   RCANAME5
RCASORT  EQU   RCANAME5
RCASIRT  EQU   RCANAME5
RCARELV  EQU   RCANAME5
RCARELF  EQU   RCANAME5
RCAVEQRI EQU   RCANAME4
RCAVEQRF EQU   RCANAME4
RCAVEQRC EQU   RCANAME4
RCATERM  EQU   RCANAME4
RCASQA   EQU   RCANAME4
RCASWIN  EQU   RCANAME4
RCASOUT  EQU   RCANAME4
RCARFR   EQU   RCANAME3
RCARELS  EQU   RCANAME3
RCARCFI  EQU   RCANAME3
RCARCF   EQU   RCANAME3
RCAPSII  EQU   RCANAME3
RCAPSIB  EQU   RCANAME3
RCAPS112 EQU   RCANAME3
RCAPIX   EQU   RCANAME3
RCAPIOP  EQU   RCANAME2
RCASWPC  EQU   RCANAME2
RCASWPP  EQU   RCANAME2
RCAPFTE  EQU   RCANAME2
RCAPCB   EQU   RCANAME2
RCAOUT   EQU   RCANAME2
RCAITAS  EQU   RCANAME2
RCAIOCP  EQU   RCANAME2
RCAINV   EQU   RCANAME1
RCAFXLD  EQU   RCANAME1
RCAVEQR  EQU   RCANAME1
RCADSEG  EQU   RCANAME1
RCADLAS  EQU   RCANAME1
RCACSEG  EQU   RCANAME1
RCAVAMSI EQU   RCANAME1
@NM00030 EQU   RCAFLAGS
RCADISP  EQU   RCAFLAGS
@NM00029 EQU   RCAFLAGS
RCAQS    EQU   RCAFLAGS
RCAPSIER EQU   RCAFLAGS
RCAABEND EQU   RCAFLAGS
@NM00028 EQU   RCANAME7
RCAPRSS  EQU   RCANAME7
RCAPRSR  EQU   RCANAME7
RCAPRSB  EQU   RCANAME7
RCAPSIY  EQU   RCANAME7
RCAPIOI  EQU   RCANAME7
RCAPARM0 EQU   RCA
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00027 EQU   FRRSFLGS+1
@NM00026 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
PVTEND   EQU   PVT+1944
PVTXXXXX EQU   PVT+1940
PVTVCONS EQU   PVT+1896
PVTPRSB  EQU   PVT+1892
PVTCIOQL EQU   PVTPCBQS+36
PVTFPCBL EQU   PVTPCBQS+20
PVTFPCBF EQU   PVTPCBQS+16
PVTPCBQR EQU   PVTPCBQS
PVTLPAFX EQU   PVT+1850
PVTLSQAF EQU   PVT+1848
PVTLPAR  EQU   PVT+1844
PVTLPAI  EQU   PVT+1840
PVTLPAFC EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTSQAFX EQU   PVT+1832
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTPFTQR EQU   PVTQS+20
PVTRSBQL EQU   PVTQS+18
PVTRSBQF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTCAOUT EQU   PVT+288
PVTNSWPS EQU   PVT+280
PVTSPOUT EQU   PVT+272
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTNPOUT EQU   PVT+252
PVTFRSLT EQU   PVT+240
PVTPSWPP EQU   PVT+228
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP   EQU   PVT+112
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTOROOT EQU   PVT+56
PVTSQNPC EQU   PVT+47
PVTSQVRC EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLPRIV EQU   PVT+24
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
@NM00001 EQU   PVTFLAG2
PVTRSMGM EQU   PVTFLAG2
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTAPREF EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
@NM00025 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00024 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00023 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00022 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00021 EQU   FLCFSA
@NM00020 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00019 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00018 EQU   FLCIOA
@NM00017 EQU   FLCMCLA+15
@NM00016 EQU   FLCMCLA+14
@NM00015 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00014 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00013 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00012 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00011 EQU   FLCPER
@NM00010 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00009 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00008 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00007 EQU   FLCPIILC
@NM00006 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00005 EQU   FLCSVILC
@NM00004 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00003 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00002 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00117 EQU   NXTPCB
@RT00126 EQU   GFAPUT
@RT00141 EQU   TESTDFSP
@RF00143 EQU   @RC00139
@RT00198 EQU   DEFERXIT
@RF00409 EQU   @RC00400
@RC00478 EQU   @RC00476
@RC00481 EQU   @RC00476
@RT00513 EQU   PCBPROC
@RT00578 EQU   RETCDEQ4
@RT00582 EQU   RETCDEQ4
@RT00585 EQU   RETCDEQ4
@RT00592 EQU   TESTDFSP
@RT00594 EQU   RETCDEQ4
@RF00605 EQU   @RC00590
@RT00655 EQU   RETCDEQ4
@RT00664 EQU   RELATE
@RT00667 EQU   BUMPFIX
@RT00672 EQU   BUMPFIX
@RF00676 EQU   RELATE
@RT00703 EQU   NOCHANGE
@RT00791 EQU   RECDISP0
@RF00791 EQU   RELATE
@RT00797 EQU   CODABEND
@RT00827 EQU   IMMTEST
@RF00877 EQU   RETCDEQ4
@RT00895 EQU   VALIDATE
@RF00871 EQU   IMMRLATE
@RF00973 EQU   RETCDEQ0
@RC00978 EQU   RETCDEQ0
@RT00992 EQU   INSTEXIT
@RT01130 EQU   SCHEDPCB
@RT01143 EQU   PCBDISPB
@RF01190 EQU   SCHEDPCB
@RT01334 EQU   GFADEXIT
@RF01334 EQU   TESTASCB
@RF01331 EQU   DQTHEPCB
@RF01324 EQU   GFADEXIT
@ENDDATA EQU   *
         END   IEAVGFA,(C'PLS1255',0701,78164)
