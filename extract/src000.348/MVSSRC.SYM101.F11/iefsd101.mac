         TITLE 'IEFSD101, PPT SCAN'
IEFSD101 CSECT                                                   Y01054
*        SEE CHANGE ACTIVITY IN PROLOG FOR FLAGGING INFORMATION.
* C-STATEMENTS NEAR LABEL LPPT8                                @ZA03944
* A STATEMENTS NEAR LABEL SKIPKEY                              @ZA11857
* A STATEMENTS NEAR LABEL LPPT3                                @ZA11857
* DELETED STATEMENTS THAT WERE ADDED FOR @ZA11857              @ZA16879
* CHANGED STATEMENT NEAR LPPT3 AND ADDED STATEMENTS NEAR LPPT9 @ZA16879
* C STATEMENTS AFTER LABEL CONTINUE                            @ZA20168
         BALR  R12,0
*                                                                     *
***********************************************************************
*                                                                     *
*     MODULE NAME = IEFSD101
*
*     DESCRIPTIVE NAME = PPT SCAN
*
*     COPYRIGHT = NONE
*
*     STATUS = SU7 PTF                                         @ZA20168
*
*     FUNCTION = TO SCAN THE PROGRAM PROPERTIES TABLE (PPT),
*     ASSIGN SPECIAL PROPERTIES WHERE INDICATED, AND BUILD THE
*     GETPART WORK TABLE (GWT).
*
*      OPERATION:
*
*      1) CALL IEFSMFIE FOR SMF PROCESSING.
*
*      1A) SET UP FIELDS CHSTEP AND CHPROCSN FOR USE BY         YM06960
*      THE PROCESSOR OF DISPLAY A.                              YM06960
*
*      2) IF THE STEP IS TO RUN IN V=R, MOVE THE PROTECT KEY IN
*      THE JCT TO THE TCB. IF THE STEP IS TO RUN IN V=V, MOVE A
*      PROTECT KEY OF 8 TO THE TCB. (THE KEY WILL BE PROPOGATED
*      WHEN THE DAUGHTER IS ATTACHED.)
*
*      3) BEFORE ASSIGNING ANY SPECIAL PROPERTIES TURN OFF ALL
*      PROPERTIES WHICH MAY HAVE BEEN SET FOR A PREVIOUS STEP.
*      THEN SCAN THE PPT FOR THE PROGRAM NAME. IF
*      NOT FOUND, SKIP TO STEP 4. IF FOUND, SET AN INDICATOR
*      IN THE LCT THAT THE NAME WAS IN THE PPT.
*
*         A) IF THE 'NON-CANCELABLE' PROPERTY IS INDICATED, SET
*         AN INDICATOR IN THE LCT AND SET THE CSCB NON-
*         CANCELABLE.
*
*         B) IF A SPECIAL PROTECT KEY IS INDICATED, MOVE THE     Y02656
*         PROTECT KEY FROM THE PPT TO THE CURRENT TCB. (THIS     Y02656
*         WILL OVERLAY THE KEY PREVIOUSLY SET.)                  Y02656
*
*         C) IF THE PROGRAM NAME IS AUTHORIZED TO BE NON-        Y02669
*         SWAPPABLE, SET THE CORRESPONDING INDICATOR IN THE      Y02669
*         LCT.                                                 @ZA16879
*
*         D) IF THE PROGRAM NAME IS 'PRIVILEGED' (WITH RESPECT   Y02655
*         TO THE SYSTEM RESOURCES MANAGER) SET AN INDICATOR IN   Y02655
*         THE LCT.                                               Y02655
*
*         E) IF THE 'SYSTEM TASK' PROPERTY IS INDICATED AND THE  Y02652
*         JOB IS 'STARTED' AND '1-STEP', SET THE SYSTEM TASK     Y02652
*         INDICATOR IN THE LCT. IF THE 'SYSTEM TASK' PROPERTY    Y02652
*         IS INDICATED BUT THE OTHER TWO CONDITIONS ARE NOT MET, Y02652
*         SET THE INDICATOR IN THE LCT WHICH INDICATES THAT      Y02652
*         IEFSD162 SHOULD ISSUE MESSAGE IEF188I PROBLEM PROGRAM  Y02652
*         ATTRIBUTES ASSIGNED.                                   Y02652
*
*         F) IF THE 'NO DATA SET INTEGRITY' (NDSI) PROPERTY IS   Y02652
*         INDICATED AND THE JOB IS 1-STEP, SET THE INDICATOR IN  Y02652
*         THE LCT WHICH INDICATES THAT 'NO DATA SET INTEGRITY'   Y02652
*         HAS BEEN REQUESTED. IF THERE IS NO UNAUTHORIZED JOBLIB Y02652
*         OR STEPLIB, THE PROPERTY WILL BE ASSIGNED BY IEFSD162. Y02652
*         IF THE NDSI PROPERTY IS INDICATED AND THE JOB IS MULTI-Y02652
*         STEP, SET THE INDICATOR IN THE LCT WHICH INDICATES     Y02652
*         THAT IEFSD162 SHOULD ISSUE MESSAGE IEF188I PROBLEM     Y02652
*         PROGRAM ATTRIBUTES ASSIGNED. THEN PROCEED TO STEP 4.   Y02652
*
*         G. IF THIS IS THE FIRST STEP OF A JOB, CONTINUE WITH   Y02651
*         STEP H, BECAUSE TASK AFFINITY IS SET ELSEWHERE FOR THE Y02651
*         FIRST STEP. IF THE MASK FOR CPU-TASK AFFINITY IS ALL   Y02651
*         BINARY 1'S, CONTINUE WITH STEP H (BECAUSE NO SPECIAL   Y02651
*         CPU IS REQUIRED FOR THAT PROGRAM). IF NOT ALL BINARY   Y02651
*         1'S, INVOKE IEFICPUA TO SET THE AFFINITY IN THE ASCB.  Y02651
*         IF THE RETURN CODE IS 0, CONTINUE WITH STEP H. IF THE  Y02651
*         RETURN CODE IS NON-ZERO, SET THE JOB FAILED INDICATOR  Y02651
*         IN THE JCT AND ISSUE MESSAGE IEF173I, TO INDICATE      Y02651
*         THAT THE JOB HAS BEEN FAILED.                          Y02651
*         (IEFIMASK IS INVOKED TO CONVERT THE 16-BIT MASK OF     Y02651
*         CPU'S REQUIRED FOR AFFINITY TO THE LIST OF CPU ID'S    Y02651
*         WHICH IS REQUIRED FOR THE MESSAGE.)                    Y02651
*
*         H. IF THE PROPERTY 'BYPASS PASSWORD PROTECTION' IS     Y02656
*         INDICATED, SET THE CORRESPONDING INDICATOR IN THE      Y02656
*         JSCB.                                                  Y02656
*                                                              @ZA16879
*         I. IF THE PROPERTY 'FIRST LEVEL PREFERRED USAGE'     @ZA16879
*         IS INDICATED, SET THE CORRESPONDING INDICATOR IN     @ZA16879
*         THE LCT.                                             @ZA16879
*                                                              @ZA16879
*         J. IF THE PROPERTY 'SECOND LEVEL PREFERRED USAGE'    @ZA16879
*         IS INDICATED, SET BOTH THE FIRST AND SECOND LEVEL    @ZA16879
*         PREFERRED USAGE INDICATORS IN THE LCT.               @ZA16879
*                                                              @ZA16879
*         K. IF THE PROPERTY 'NOT SECOND LEVEL PREFERRED       @ZA16879
*         USAGE' IS INDICATED, SET THE CORRESPONDING INDICATOR @ZA16879
*         IN THE LCT.                                          @ZA16879
*
*      3A. IF THIS IS A CHECKPOINT RESTART JOB STEP, THE SCT   @ZA20168
*      PROGRAM NAME FIELD WILL BE CHANGED TO IEFRSTRT WHICH    @ZA20168
*      INVOKES THE RESTART SVC. THE RESTART SVC COMPLETES      @ZA20168
*      RESTART PROCESSING. THIS IS DONE AFTER PPT PROCESSING   @ZA20168
*      IS COMPLETE FOR REAL PROGRAM NAME.                      @ZA20168
*
*      4. THE GETPART WORK TABLE (GWT) IS THEN BUILT, BUT ONLY   Y02669
*      IF THE CURRENT STEP IS TO BE EXECUTED AND ONE OF THE      Y02669
*      FOLLOWING IS TRUE:                                        Y02669
*      .  A REGION SIZE WAS SPECIFIED                            Y02669
*      .  V=R WAS SPECIFIED                                      Y02669
*      .  A REGION BEGINNING AT A SPECIFIC ADDRESS IS REQUIRED   Y02669
*         (FOR A CHECKPOINT RESTART).                            Y02669
*      (THESE ARE THE ONLY SITUATIONS UNDER WHICH A REGION IS    Y02669
*      GOTTEN FOR A STEP.)                                       Y02669
*
*      5. THEN EXIT TO IEFSD102.
*
*     NOTES
*
*      CHARACTER DEPENDENT CODE = NONE
*
*      DEPENDENCIES = IEFSDPPT, THE PROGRAM PROPERTIES TABLE
*                     CONTAINS PROGRAM NAMES
*
*      RESTRICTIONS = NONE
*
*      REGISTER CONVENTIONS = STANDARD
*
*      PATCH LABEL = PATCH
*
*     MODULE TYPE = PROCEDURE
*
*      PROCESSOR = ASSEMBLER
*
*      MODULE SIZE = 1000 BYTES
*
*      ATTRIBUTES = PAGED LPA, ZERO PSW PROTECT KEY,
*                   REENTRANT, REFRESHABLE, SUPERVISOR STATE
*
*     ENTRY POINT = IEFSD101
*
*           PURPOSE = SAME AS FUNCTION
*
*           LINKAGE =
*           FROM IEFSD161 VIA BRANCH FOR FIRST STEP OF JOB
*           FROM IEFSD164 VIA BRANCH FOR OTHER THAN FIRST STEP
*
*           INPUT DATA = REGISTER ONE POINTS TO LCT
*                        LCTSCTAD, SCT ADDRESS
*                        LCTQDRTY, CSCB ADDRESS
*
*           REGISTERS SAVED = NONE
*
*           REGISTERS CONTENTS DURING PROCESSING =
*           R10 POINTS TO LCT
*           R15 POINTS TO ENTRY IN PPT
*
*           REGISTERS RESTORED = NONE
*
*     EXIT - NORMAL = TO IEFSD102 VIA BRANCH
*
*            CONDITIONS = ALWAYS
*
*            OUTPUT DATA =   GETPART PARAMETER LIST POINTER IN LCT
*                            LCT ADDRESS IN REG 1
*
*            RETURN CODES = NONE
*
*     EXIT - ERROR = NONE
*
*     EXTERNAL REFERENCES :
*
*           ROUTINES =
*           IEFSMFIE, TO SET UP USER JOB AND STEP
*           INITIATION EXITS FOR SMF, CALLED VIA BALR
*           INPUT IS ADDRESS OF LCT IN REG 1
*
*           IEFICPUA TO SET THE MASK FOR TASK-CPU AFFINITY IN    Y02651
*              THE ASCB.                                         Y02651
*           INPUTS:                                              Y02651
*              A MASK OF ELIGIBLE CPU'S                          Y02651
*              A MASK OF ONLINE CPU'S                            Y02651
*              AN AREA TO RETURN THE MASK OF ELIGIBLE CPU'S      Y02651
*                 WHICH ARE ONLINE                               Y02651
*           LINKAGE IS VIA BALR                                  Y02651
*           OUTPUT IS THE MASK FOR TASK-CPU AFFINITY SET WHERE   Y02651
*              INDICATED (IN THE ASCB).                          Y02651
*              RETURN CODE IS 0 IF AFFINITY WAS SUCCESSFULLY     Y02651
*              SET OR NON-ZERO IF NOT SET.                       Y02651
*
*           IEFIMASK TO CONVERT A BIT STRING TO A CORRESPONDING  Y02651
*              LIST OF HEXADECIMAL CHARACTERS.                   Y02651
*           INPUT:                                               Y02651
*              THE BIT STRING TO BE CONVERTED                    Y02651
*              A HALFWORD CONTAINING THE NUMBER OF BITS TO BE    Y02651
*                 CONVERTED (16)                                 Y02651
*              AN AREA TO CONTAIN THE OUTPUT LIST                Y02651
*              A HALFWORD TO CONTAIN THE NUMBER OF ENTRIES PUT   Y02651
*                 IN THE LIST                                    Y02651
*           LINKAGE IS VIA BALR.                                 Y02651
*           OUTPUT:                                              Y02651
*              A LIST OF PRINTABLE HEXADECIMAL CHARACTERS,       Y02651
*                 REPRESENTING THE BIT POSITIONS IN THE INPUT    Y02651
*                 LIST WHICH WERE ON. THE ELEMENTS OF THE LIST   Y02651
*                 ARE SEPARATED BY COMMAS.                       Y02651
*              A HALFWORD, CONTAINING THE NUMBER OF ENTRIES      Y02651
*                 PUT IN THE LIST                                Y02651
*
*            DATA AREAS = IEFSDPPT, THE PROGRAM PROPERTIES TABLE,
*            TO ASSIGN PROPERTIES TO THE PROGRAM BEING ATTACHED.
*
*            CONTROL BLOCKS = CSCB, JCT, LCT, SCT, TCB,
*              CVT, CSD, ASCB, JSCB                            @ZA16879
*
*            TABLES = GWT (PARAMETER LIST FOR GETPART)
*
*            MACROS = GETMAIN, FREEMAIN, WTO                     Y02651
*
*            ENQUEUE RESOURCES = NONE
*
*            CHANGE LEVEL = SEE MODID MACRO AT BEGINNING OF MODULE.
*        CODE HAS BEEN ADDED FOR THE FOLLOWING SUPPORT CODES:
*                                                                Y02652
*                                                                Y02655
*                                                                Y02656
*                                                                Y02669
*                                                                Y02651
*
*        CODE HAS BEEN ADDED FOR THE FOLLOWING APARS:
*                                                              @ZA03944
*                                                              @ZA11857
*                                                              @ZA16879
*                                                              @ZA20168
*
*     MESSAGES = IEF173I JJJ FAILED, CPU (X,Y,...) OFFLINE       Y02651
*
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING *,R12
         USING  IEFLOT,R10
         USING IEFSCT,R9
IEFSD101 MODID                                                   Y01886
         LR    R10,R1                   LCT ADDRESS
***********************************************************************
*
*        CALL IEFSMFIE FOR SMF PROCESSING
*
***********************************************************************
         L     R15,VCONSMF             GO TO SMF INIT EXIT         SMF1
         BALR  R14,R15                 PASS LCT IN R1              SMF1
         L     R4,LCTJCTAD         ADDRESS OF JCT                 M0396
         USING JCT,R4              JCT ADDRESSABILITY             M0396
         L     R9,LCTSCTAD              GET SCT ADDRESS
         L     R8,LCTTCBAD         GET POINTER TO CURRENT TCB    Y02652
         USING TCB,R8                                            Y02652
***********************************************************************
*
*        SET UP FIELDS IN CSCB TO BE USED BY DISPLAY A
*
***********************************************************************
         L     R2,LCTQDRTY         ADDRESS OF CSCB               Y02652
         USING IEFCSCB,R2          CSCB ADDRESSABILITY           Y02652
         CLI   CHTRKID,CHTSID      CHECK FOR LOGON              YM06960
         BE    SKIPCODE            NO PROCESSING IS REQUIRED    YM06960
*                                  IF LOGON                     YM06960
*        DIFFERENT PROCESSING IS DONE, DEPENDING UPON WHETHER   YM06960
*        THE CSCB IS FOR A 'JOB' OR 'START OR MOUNT'            YM06960
         CLI   CHVCD,CHXSTART                                   YM06960
         BE    SMCSCB              START                        YM06960
         CLI   CHVCD,CHXMOUNT                                   YM06960
         BE    SMCSCB              MOUNT                        YM06960
*        INITIATED JOB'S PROCESSING                             YM06960
         CLC   SCTSCLPC,BLANKS     CHECK WHETHER A PROC WAS     YM06960
*                                  INVOLVED                     YM06960
         BE    NOPROC              NO PROC (OR A PROC WITH NO   YM06960
*                                  NAME ON THE EXEC PROC=       YM06960
*                                  STATEMENT)                   YM06960
         MVC   CHSTEP,SCTSCLPC     PUT NAME OF STEP WHICH       YM06960
*                                  CALLED THE PROC AS THE       YM06960
*                                  STEPNAME                     YM06960
         MVC   CHPROCSN,SCTSNAME   PUT NAME ON EXEC PGM=        YM06960
*                                  STATEMENT AS PROCSTEPNAME    YM06960
         B     SKIPCODE            SKIP ELSE CLAUSE(S)          YM06960
NOPROC   EQU   *                                                YM06960
         MVC   CHSTEP,SCTSNAME     SET STEPNAME FOR STEP WITH   YM06960
*                                  NO PROC INVOLVED             YM06960
         MVC   CHPROCSN,BLANKS     CLEAR PROCSTEPNAME           YM06960
         B     SKIPCODE            SKIP ELSE CLAUSE(S)          YM06960
SMCSCB   EQU   *                                                YM06960
         MVC   CHPROCSN,SCTSNAME   SET PROCSTEPNAME FOR START   YM06960
*                                  OR MOUNT                     YM06960
SKIPCODE EQU   *                                                YM06960
***********************************************************************
*
*        ASSIGN PROTECT KEY
*
***********************************************************************
         TM    SCTSSTAT,EAADDRBT   CHECK FOR V=R                 Y02656
         BNO   VIRTKEY             NOT V=R, SET V=V KEY          Y02656
         MVC   TCBPKF,JCTJSRNO     MOVE UNIQUE KEY FOR V=R       Y02656
         B     SKIPKEY             BRANCH AROUND 'ELSE' CLAUSE   Y02656
VIRTKEY  EQU   *                                                 Y02656
         MVI   TCBPKF,KEYVIRT      SET V=V KEY                   Y02656
SKIPKEY  EQU   *                                                 Y02656
***********************************************************************
*
*       TURN OFF PROPERTIES SET FOR PREVIOUS STEP
*
***********************************************************************
*        (THE PREVIOUS STEP MAY EVEN BE IN THE PREVIOUS JOB,     Y02652
*        BECAUSE THE LCT IS NOT AUTOMATICLY CLEARED BETWEEN      Y02652
*        JOBS.)                                                  Y02652
         L     R5,LCTJSCB          POINT TO P/P JSCB             Y02656
         USING IEZJSCB,R5                                        Y02656
         L     R7,LCTASCBA         POINT TO ASCB                 Y02652
         USING ASCB,R7                                           Y02652
         XC    LCTINTSW(D1),LCTINTSW  ZERO INTERNAL SWITCHES       I272
         MVI   LCTINTS2,CLEAR      CLEAR STEP RELATED SWITCHES   Y02652
         MVI   LCTPUBYT,CLEAR      CLEAR PREFERRED USAGE FLAGS @ZA16879
         OI    CHACT,CHCL          MAKE STEP CANCELLABLE          M0396
         NI    LCTOPSW1,FOXFOX-LCTCANF TURN OFF CANCEL AT ALLOC   M1377
         TM    SCTSDP,SCTFSTEP                                   Y02651
         BO    LEAVAFFN            TURN OFF CPU-TASK AFFINITY    Y02651
*              ONLY IF NOT FIRST STEP OF A JOB. PROCESSING FOR   Y02651
*              THE FIRST STEP IS PERFORMED IN IEFSD161.          Y02651
         MVC   ASCBAFFN,NOAFFIN    TURN OFF CPU-TASK AFFINITY    Y02651
*        (IT IS USUALLY TURNED OFF BY IEFSD263, BUT IEFSD263 WILLY02651
*        BE BYPASSED IF THERE IS AN ALLOCATION ERROR.)           Y02651
LEAVAFFN EQU   *                                                 Y02651
         NI    JSCBSWT1,X'FF'-JSCBPASS TURN OFF BYPASS PASSWORD  Y02656
*                                  PROTECTION                    Y02656
*
*        CHECK WHETHER TO SCAN PPT                               Y02652
*
         TM    CHCECB,POSTED       HAS JOB BEEN CANCELLED         M0396
         BO    CONTINUE            SKIP CHECKING PPT             Y01054
         TM    JCTJSTAT,INCMSTS    HAS JOB BEEN FAILED            M0396
         BO    CONTINUE            YES, DO NOT PERFORM SCAN       M3174
         TM    LCTOPSW3,LCTNSYS    CHECK WHETHER SPECIAL         Y02652
*                                  PROPERTIES MAY BE ASSIGNED    Y02652
         BO    CONTINUE            CANNOT BE ASSIGNED            Y02652
***********************************************************************
*
*        SCAN PROGRAM PROPERTIES TABLE AND ASSIGN PROPERTIES
*
***********************************************************************
         L     R11,IEFSDPPT        GET ADDR OF PROB PROG TABLE    20032
         USING PPT,R11                                           Y01054
CHKEND   EQU   *                                                 Y02652
         CLI   PPTNAME,FOXFOX      CHECK FOR END OF TABLE        Y01054
         BE    CONTINUE            NAME NOT IN PPT               Y02652
         CLC   PPTNAME(D8),SCTPGMNM                              Y01054
         BE    LPPT1               BRANCH IF PROGRAM NAME IS IN  Y01054
*                                  PPT                           Y01054
         LA    R11,PPTLEN(0,R11)   INCREMENT POINTER IN PPT      Y01054
         B     CHKEND              CHECK NEXT ENTRY              Y02652
         SPACE
***********************************************************************
LPPT1    EQU   *                                                 Y01054
         OI    LCTINTSW,LCTINPPT   INDICATE THAT NAME IS IN PPT  Y02652
*        NON-CANCELABLE                                          Y02652
*
         TM    PPTBYTE1,PPTNCNCL   IS PROGRAM TO BE              Y01054
*                                  NON-CANCELABLE                Y01054
         BNO   LPPT2               NO, DON'T SET INDICATOR       YO1054
         OI    LCTOPSW1,LCTCANF    YES, INDICATE NON-CANCELABLE  Y01054
         NI    CHACT,X'FF'-CHCL    SET NON-CANCELABLE            Y02652
         SPACE
***********************************************************************
LPPT2    EQU   *                                                 Y01054
*        SPECIAL PROTECT KEY                                     Y02656
*
         TM    PPTBYTE1,PPTSKEY                                  Y02656
         BNO   LPPT3               CHECK NEXT PROPERTY           Y02656
         MVC   TCBPKF,PPTKEY   MOVE SPECIAL KEY                  Y02656
         SPACE
***********************************************************************
LPPT3    EQU   *                                                 Y02652
*        NON-SWAPPABLE                                           Y02669
*
         TM    PPTBYTE1,PPTNSWP                                  Y02669
         BNO   LPPT4               CHECK NEXT PROPERTY           Y02669
         OI    LCTPUBYT,LCTNSWP    INDICATE NON-SWAPPABLE      @ZA16879
         SPACE
***********************************************************************
LPPT4    EQU   *                                                 Y02652
*        PRIVILEGED                                              Y02655
*
         TM    PPTBYTE1,PPTPRIV                                  Y02655
         BNO   LPPT5               CHECK NEXT PROPERTY           Y02655
         OI    LCTINTSW,LCTPRIV    SET TO BE PRIVILEGED          Y02655
         SPACE
***********************************************************************
LPPT5    EQU   *                                                 Y02652
*        SYSTEM TASK                                             Y02652
*
         TM    PPTBYTE1,PPTSYSTK                                 Y02652
         BNO   LPPT6               CHECK NEXT PROPERTY           Y02652
*        TO BE A SYSTEM TASK, A JOB MUST BE BOTH 'STARTED' AND   Y02652
*        '1-STEP'                                                Y02652
         TM    LCTOPSW1,LCTONEJF   CHECK FOR STARTED TASK        Y02652
         BNO   SETPPAA1            TASK IS NOT STARTED           Y02652
*        (ALTHOUGH LCTONEJF IS SET FOR LOGON, ALL PPT PROCESSING Y02652
*        IS SKIPPED FOR LOGON BECAUSE LCTNSYS IS SET.)           Y02652
         TM    SCTSDP,SCTFSTEP     FIRST HALF OF CHECK FOR 1-STEPY02652
         BNO   SETPPAA1            NOT FIRST STEP                Y02652
         L     R8,SCTANSCT         IF 1-STEP, PTR. TO NEXT SCT   Y02652
*                                  IS 0                          Y02652
         LTR   R8,R8                                             Y02652
         BZ    SETSYSTK            TASK IS 1-STEP                Y02652
SETPPAA1 EQU   *                                                 Y02652
         OI    LCTINTSW,LCTPPAA    INDICATE WARNING MSG. SHOULD  Y02652
*                                  BE WRITTEN                    Y02652
         B     LPPT6               SKIP 'ELSE' CLAUSE            Y02652
SETSYSTK EQU   *                                                 Y02652
         OI    LCTINTS2,LCTSYS     SET AS SYSTEM TASK            Y02652
         SPACE
***********************************************************************
LPPT6    EQU   *                                                 Y02652
*        NO DATA SET INTEGRITY                                   Y02652
*
         TM    PPTBYTE1,PPTNDSI                                  Y02652
         BNO   LPPT7               CHECK NEXT PROPERTY           Y02652
*        TO HAVE NDSI, A JOB MUST BE '1-STEP'                    Y02652
         TM    SCTSDP,SCTFSTEP     FIRST HALF OF CHECK FOR 1-STEPY02652
         BNO   SETPPAA2            NOT FIRST STEP                Y02652
         L     R8,SCTANSCT         IF 1-STEP, PTR. TO NEXT SCT   Y02652
*                                  IS 0                          Y02652
         LTR   R8,R8                                             Y02652
         BZ    SETNDSI             TASK IS 1-STEP                Y02652
SETPPAA2 EQU   *                                                 Y02652
         OI    LCTINTSW,LCTPPAA    INDICATE WARNING MSG. SHOULD  Y02652
*                                  BE WRITTEN                    Y02652
         B     LPPT7               SKIP 'ELSE' CLAUSE            Y02652
SETNDSI  EQU   *                                                 Y02652
         OI    LCTINTSW,LCTNDSI    SET NDSI                      Y02652
         SPACE
***********************************************************************
LPPT7    EQU   *                                                 Y02652
*        CPU-TASK AFFINITY                                       Y02651
*                                                                Y02615
         TM    SCTSDP,SCTFSTEP     CHECK FOR FIRST STEP. THE     Y02651
*                                  FIRST STEP IS CHECKED FOR     Y02651
*                                  AFFINITY IN A PREVIOUS MODULE Y02651
*                                  SO THE JOB CAN                Y02651
*                                  BE PUT ON THE HOLD QUEUE IF   Y02651
*                                  NECESSARY                     Y02651
         BO    LPPT8               CHECK NEXT PROPERTY IF FIRST  Y02651
*                                  STEP                          Y02651
         CLC   PPTCPUA,NOAFFIN     DO NOT ASSIGN AFFINITY IF     Y02651
*                                  PROGRAM CAN RUN ON ANY CPU    Y02651
         BE    LPPT8               CHECK NEXT PROPERTY           Y02651
*        GET TEMPORARY STORAGE REQUIRED TO ASSIGN CPU-TASK       Y02651
*        AFFINITY                                                Y02615
         LA    R0,GETMAIN2                                       Y02651
         GETMAIN R,LV=(0)                                        Y02651
         LR    R8,R1               SAVE PTR. TO WORKAREA         Y02651
         USING WORKAREA,R8                                       Y02651
         LA    R13,REGSAVE         POINT TO REGISTER SAVE AREA   Y02651
         SPACE
*        INVOKE IEFICPUA TO ASSIGN AFFINITY                      Y02651
         LA    R15,PPTCPUA         PASS MASK OF ELIGIBLE CPU'S   Y02651
         ST    R15,ICPUMEP                                       Y02651
*        PASS MASK OF AVAILABLE CPU'S (IN CSD)                   Y02651
         L     R15,CVTPTR                                        Y02651
         USING CVTMAP,R15                                        Y02651
         L     R15,CVTCSD                                        Y02651
         USING CSD,R15                                           Y02651
         LA    R15,CSDCPUJS                                      Y02651
         ST    R15,ICPUMAP                                       Y02651
         DROP  R15                                               Y02651
         LA    R15,ASCBAFFN        PASS AREA TO RETURN MASK OF   Y02651
*                                  ELIGIBLE AND ONLINE CPU'S     Y02651
         ST    R15,ICPUMOP                                       Y02651
         L     R15,VCONICPU                                      Y02651
         BALR  R14,R15                                           Y02651
         LTR   R15,R15             IF RETURN CODE IS 0,          Y02651
*                                  PROCESSING FOR AFFINITY IS    Y02651
*                                  COMPLETE                      Y02651
         BZ    AFFINOK             SKIP ERROR PROCESSING         Y02651
         SPACE
*        BECAUSE AFFINITY COULD NOT BE ASSIGNED (INDICATED BY A  Y02651
*        NON-ZERO RETURN CODE FROM IEFICPUA), FAIL THE JOB AND   Y02651
*        ISSUE MESSAGE IEF173I                                   Y02651
         OI    JCTJSTAT,INCMSTS    FAIL THE JOB                  Y02651
         L     R15,LCTIMSG         POINT TO TABLE AT BEGINNING   Y02651
*                                  OF MESSAGE MODULE             Y02651
         USING MESSAGES,R15                                      Y02651
         AH    R15,DISPLD          ADD DISPLACEMENT IN MESSAGE   Y02651
*                                  MODULE TO ADDRESS OF MESSAGE  Y02651
*                                  MODULE TO GET POINTER TO      Y02651
*                                  MESSAGE                       Y02651
         MVC   MSGD(MSGDLEN),0(R15) MOVE MSG. TEXT TO BUFFER     Y02651
         MVC   MSGDJOB,JCTJNAME    MOVE JOBNAME TO MESSAGE       Y02651
         SPACE
*        INVOKE IEFIMASK TO CONVERT THE BIT MASK TO A LIST       Y02651
         DROP  R15                                               Y02651
         LA    R15,MASKLEN         SET UP LENGTH OF BIT STRING   Y02651
         STH   R15,IMSKNUMI                                      Y02651
         LA    R15,PPTCPUA         PASS BIT STRING               Y02651
         ST    R15,IMSKMSKP                                      Y02651
         LA    R15,IMSKNUMI        PASS LENGTH OF BIT STRING     Y02651
         ST    R15,IMSKNUMP                                      Y02651
         LA    R15,MSGDLIST        PASS AREA TO PUT LIST         Y02651
         ST    R15,IMSKLSTP                                      Y02651
         LA    R15,IMSKNUMO        PASS AREA FOR LENGTH OF LIST  Y02651
         ST    R15,IMSKNLP                                       Y02651
         L     R15,VCONIMSK                                      Y02651
         BALR  R14,R15                                           Y02651
*        REMOVE ANY UNUSED SLOTS FROM THE END OF THE CPU LIST    Y02651
         LH    R15,IMSKNUMO        GET NUMBER OF ENTRIES PUT IN  Y02651
*                                  OUTPUT LIST                   Y02651
         SLL   R15,1                                             Y02651
         BCTR  R15,0               GET LENGTH OF OUTPUT LIST     Y02651
         LA    R14,MSGDLIST(R15)   POINT TO FIRST UNUSED SLOT IN Y02651
*                                  CPU LIST                      Y02651
         MVC   0(L'MSGDEND,R14),MSGDEND REMOVE THE BLANKS        Y02651
*        REDUCE THE WTO LENGTH TO ACCOUNT FOR THE NEW SIZE       Y02651
         LA    R14,L'MSGDLIST                                    Y02651
         SR    R14,R15             GET NUMBER OF BLANKS REMOVED  Y02651
*                                  FROM THE MESSAGE              Y02651
         LH    R15,MSGDSIZE                                      Y02651
         SR    R15,R14                                           Y02651
         STH   R15,MSGDSIZE        SET NEW WTO SIZE              Y02651
         XR    R0,R0                                             Y02651
         IC    R0,CHUCMP           GET CONSOLE ID, IN CASE THE   Y02651
*                                  JOB WAS STARTED. IF THE JOB   Y02651
*                                  WAS INITIATED, THE CONSOLE ID Y02651
*                                  WILL BE 0, INDICATING THE     Y02651
*                                  MASTER CONSOLE.               Y02651
         WTO   MF=(E,MSGD)                                       Y02651
AFFINOK  EQU   *                                                 Y02651
*        FREE THE WORKAREA GOTTEN TO ASSIGN AFFINITY             Y02651
         LA    R0,GETMAIN2                                       Y02651
         FREEMAIN R,LV=(0),A=(R8)                                Y02651
         DROP  R8                                                Y02651
         SPACE
***********************************************************************
LPPT8    EQU   *                                                 Y02651
*        BYPASS PASSWORD PROTECTION                              Y02656
*                                                                Y02656
         TM    PPTBYTE1,PPTNOPAS                                 Y02656
         BNO   LPPT9               CHECK NEXT PROPERTY           Y02656
         OI    LCTINTS2,LCTBPPAS   SET INDICATOR TO BYPASS PASSWORD
*                                  PROTECTION                  @ZA03944
         SPACE
***********************************************************************
LPPT9    EQU   *                                                 Y02656
         TM    PPTPUBYT,PPT1LPU    1ST LEVEL PREFERRED USAGE?  @ZA16879
         BNO   LPPT10              CHECK NEXT PROPERTY         @ZA16879
         OI    LCTPUBYT,LCT1LPU    YES, INDICATE 1ST LEVEL PREFERRED
*                                  USAGE                       @ZA16879
         SPACE
***********************************************************************
LPPT10   EQU   *                                               @ZA16879
         TM    PPTPUBYT,PPT2LPU    2ND LEVEL PREFERRED USAGE?  @ZA16879
         BNO   LPPT11              CHECK NEXT PROPERTY         @ZA16879
         OI    LCTPUBYT,LCT1LPU+LCT2LPU INDICATE BOTH 1ST AND  @ZA16879
*                                  2ND LEVEL PREFERRED USAGE   @ZA16879
         SPACE
***********************************************************************
LPPT11   EQU   *                                               @ZA16879
         TM    PPTPUBYT,PPTN2LP    NOT 2ND LEVEL PREFERRED     @ZA16879
         BNO   LPPT12              CHECK NEXT PROPERTY         @ZA16879
         OI    LCTPUBYT,LCTN2LP    INDICATE NOT 2ND LEVEL      @ZA16879
         SPACE
***********************************************************************
LPPT12   EQU   *                                               @ZA16879
CONTINUE EQU   *                                                  M0396
***************************************************************@ZA20168
*                                                              @ZA20168
*        IF THIS IS A CHECKPOINT/RESTART JOB, PUT PROGRAM NAME @ZA20168
*        IEFRSTRT IN CURRENT SCT SO RESTRAT SVC WILL BE INVOKED@ZA20168
*        AT ATTACH TIME TO COMPLETE RESTART PROCESSING. THIS   @ZA20168
*        CHANGE ALLOWS PROPER PPT PROCESSING FOR THE PROGRAM.  @ZA20168
*                                                              @ZA20168
***************************************************************@ZA20168
         TM    LCTOPSW2,LCTCKRST  CHKPT/RST BIT SET BY XB609?  @ZA20168
         BZ    SD101004           IF NO, CONTINUE PROCESSING   @ZA20168
         MVC   SCTPGMNM(D8),IEFRSTRT   PGM NAME TO INVOKE SVC  @ZA20168
         NI    LCTOPSW2,255-LCTCKRST   TURN OFF C/R BIT        @ZA20168
SD101004 EQU   *                                               @ZA20168
***********************************************************************
*
*        CHECK WHETHER GWT IS TO BE GOTTEN
*
***********************************************************************
         XR    R8,R8               CLEAR GWT POINTER IN CASE GWT Y02669
*                                  IS NOT TO BE GOTTEN           Y02669
*        REGIONS ARE GOTTEN ONLY IF ONE OF THE FOLLOWING IS TRUE.Y02669
*        THEY ARE THEREFORE THE ONLY CASES WHEN A GETPART WORK   Y02669
*        TABLE (GWT) IS GOTTEN.                                  Y02669
*              A SPECIFIC REGION SIZE WAS REQUESTED              Y02669
*              A V=R REGION WAS REQUESTED                        Y02669
*              A CHECKPOINT RESTART IS BEING DONE (SPECIFIC      Y02669
*               ADDRESS)                                         Y02669
         LH    R3,SCTMSSZE         GET REGION SIZE (OR 0)        Y02669
         L     R7,SCTMSADR         GET SPECIFIC ADDRESS (OR 0)   Y02669
         LTR   R3,R3               CHECK FOR SPECIFIC SIZE       Y02669
         BNZ   CHKGWT              SIZE SPECIFIED                Y02669
         TM    SCTSSTAT,EAADDRBT   CHECK FOR V=R                 Y02669
         BO    CHKGWT              V=R                           Y02669
         LTR   R7,R7               CHECK FOR SPECIFIC ADDRESS    Y02669
         BZ    SD101007            NOT A SPECIFIC ADDRESS        Y02669
CHKGWT   EQU   *                                                 Y02669
         TM    JCTJSTAT,JCTABEND   HAS ABEND OCCURED WHICH MIGHT
*                                   ALLOW A FOLLOWING STEP TO
*                                   EXECUTE
         BZ    SD101006            NO, GO TEST JOB FAIL AND JOB
*                                   FLUSH BITS
         TM    SCTABCND,SCTEVEN+SCTONLY
*                                  YES, IS THIS STEP TO RUN AFTER
*                                   THE ABEND
         BZ    SD101007            NO, SKIP GETTING GWT          Y02669
         CLI   SCTABCND+2,0        WERE EIGHT CONDITIONS PRESENT
*                                   FOR THIS STEP
         BNE   SD101007            YES, NOT EVEN/ONLY, SKIP      Y02669
*                                  GETTING GWT                   Y02669
         B     SD101008            THIS STEP WILL BE EXECUTED- GO
*                                   GET REQUESTED REGION
SD101006 EQU   *
         TM    JCTJSTAT,INCMSTS    IS JOB FAIL BIT ON            Y02652
         BZ    SD101008            NO, GO GET REQUESTED REGION
         XC    SCTMSADR+D1(D3),SCTMSADR+D1  ZERO H0 ADDRESS      A44225
         B     SD101007            DO NOT GET GWT                Y02669
SD101008 EQU   *
*****************************************************************YM2727
*                                                                YM2727
*  THIS  ROUTINE BUILDS THE GETPART WORK TABLE.THIS TABLE IS TO BE LS17
*  USED AS A PARAMETER LIST FOR LIST FORM OF GETMAIN TO OBTAIN A   LS17
*  REGION                                                          LS17
*                                                                YM2727
*****************************************************************YM2727
         L     R0,GETMAIN1         GET SP AND SIZE FOR GWT       Y01054
         GETMAIN R,LV=(0)          GET CORE FOR GETPART WK TBLE    LS17
         LR    R8,R1                                               LS17
         USING GETPTWT,R8                                          LS17
         XC    GETPTWT(GPSIZE),GETPTWT  CLEAR GWT TO ZEROES      Y01054
         LA    R3,GPSIZEH0         GET PTR. TO REGION SIZE LIST  Y01054
         ST    R3,GPSIZEA                                        Y01054
         LA    R3,GPADDH0          GET PTR. TO REGION ADDR. LIST Y01054
         ST    R3,GPADDLT                                        Y01054
         MVI   GPCODE,GPECBMOD     SET CODE FOR ECB MODE         Y01054
         LH    R3,SCTMSSZE         REGION SIZE FROM SCT          Y01054
         SLL   R3,10               CONVERT TO BYTES              Y01054
         ST    R3,GPSIZEH0         STORE SIZE                    Y01054
*        IF A SPECIFIC SIZE WAS NOT REQUESTED, A REQUEST FOR 0   Y02669
*        BYTES IS A REQUEST FOR THE DEFAULT SIZE                 Y02669
         TM    SCTSSTAT,EAADDRBT   CHECK FOR REAL OR VIRT        Y02669
         BNO   SETVIRT             GO SET VIRT                   Y02669
         OI    GPSUBP,GPREAL       SET REAL                      Y02669
         B     SETADDR             SKIP 'ELSE' CLAUSE            Y02669
SETVIRT  EQU   *                                                 Y02669
         OI    GPSUBP,GPVIRT       SET VIRT                      Y02669
SETADDR  EQU   *                                                 Y02669
*        (REG 7 WAS PREVIOUSLY SET UP TO CONTAIN THE VALUE AT    Y02669
*        SCTMSADR.)                                              Y02669
         ST    R7,GPADDH0          SET SPECIFIC ADDR. (IF ANY)   Y02669
SETEND   EQU   *                                                 Y01054
         OI    GPSIZEH0,GPENDLST   INDICATE END OF LIST          Y01054
SD101007 EQU   *                                                 Y02669
         ST    R8,LCTPARM3             GETMAIN PARAM FOR IEFSD102  LS17
         LR    R1,R10                   RESTORE LCT ADDRESS
         L     R15,VCON102                                       Y02652
         BR    R15                 EXIT TO IEFSD102              Y02652
         EJECT
VCONSMF  DC    V(IEFSMFIE)             *                           SMF1
IEFSDPPT DC    V(IEFSDPPT)         ADDR OF PROB PROG TABLE        20032
VCON102  DC    V(IEFSD102)         EXIT                          Y02652
VCONICPU DC    V(IEFICPUA)         CPU-TASK AFFINITY ROUTINE     Y02651
VCONIMSK DC    V(IEFIMASK)         MASK CONVERT ROUTINE          Y02651
GETMAIN1 DS    0F                                                Y01054
         DC    AL1(TCORE)          SUBPOOL                       Y01054
         DC    AL3(GPSIZE)         SIZE                          Y01054
NOAFFIN  DC    X'FFFF'             MASK FOR NO AFFINITY          Y02651
BLANKS   DC    C'        '         BLANKS                       YM06960
IEFRSTRT DC    C'IEFRSTRT'         TO INVOKE RESTART SVC       @ZA20168
PATCH    DC    8F'0'                                             Y02652
         SPACE 3
TCORE    EQU   253                                                 LS17
M10      EQU   10                                                  I272
D0       EQU   0                   DISPLACEMENT                   20032
D1       EQU   1                                                   I272
D3       EQU   3                                                   I272
D4       EQU   4                                                   I272
D8       EQU   8                                                   I272
POSTED   EQU   X'40'               BIT TO INDICATE POSTED ECB     M0396
FOXFOX   EQU   X'FF'               USED TO AND OFF                20032
KEYVIRT  EQU   X'80'               V=V KEY                       Y02656
CLEAR    EQU   X'00'                                             Y02652
MASKLEN  EQU   16                  LENGTH OF BIT STRING          Y02651
CHXSTART EQU   X'04'               VERB CODE FOR START COMMAND  YM06960
CHXMOUNT EQU   X'0C'               VERB CODE FOR MOUNT COMMAND  YM06960
         SPACE 3
WORKAREA DSECT                                                   Y02651
*        THIS WORKAREA MAY BE USED FOR THE FOLLOWING PURPOSES:   Y02651
*              - TO PASS PARAMETERS TO IEFICPUA                  Y02651
*              - TO PASS PARAMETERS TO IEFIMASK                  Y02651
*              - A BUFFER TO BUILD MESSAGE IEF173I               Y02651
         SPACE
*        THIS SECTION OF THE WORKAREA IS USED TO PASS            Y02651
*        PARAMETERS TO IEFICPUA                                  Y02651
ICPUMEP  DS    F                   PTR. TO MASK OF ELIGIBLE      Y02651
*                                  CPU'S                         Y02651
ICPUMAP  DS    F                   PTR. TO MASK OF AVAILABLE     Y02651
*                                  CPU'S                         Y02651
ICPUMOP  DS    F                   PTR. TO OUTPUT MASK           Y02651
         SPACE
*        THIS SECTION OF THE WORKAREA IS USED TO PASS            Y02651
*        PARAMETERS TO IEFIMASK                                  Y02651
         ORG   WORKAREA                                          Y02651
IMSKMSKP DS    F                   PTR. TO BIT MASK              Y02651
IMSKNUMP DS    F                   PTR. TO LENGTH OF BIT MASK    Y02651
IMSKLSTP DS    F                   PTR. TO OUTPUT LIST           Y02651
IMSKNLP  DS    F                   PTR. TO NUMBER OF ENTRIES PUT Y02651
*                                  IN OUTPUT LIST                Y02651
IMSKNUMI DS    H                   NUMBER OF BITS TO BE          Y02651
*                                  CONVERTED                     Y02651
IMSKNUMO DS    H                   NUMBER OF ENTRIES PUT IN      Y02651
*                                  OUTPUT LIST                   Y02651
         SPACE
*        THIS SECTION OF THE WORKAREA IS A BUFFER TO BUILD       Y02651
*        MESSAGE IEF173I                                         Y02651
MSGD     DS    0F                                                Y02651
MSGDSIZE DS    H                   MESSAGE LENGTH                Y02651
         DS    CL10                                              Y02651
MSGDJOB  DS    CL8                 JOBNAME SLOT                  Y02651
         DS    CL14                                              Y02651
MSGDLIST DS    CL31                CPU LIST                      Y02651
MSGDEND  DS    CL13                PORTION TO BE MOVED           Y02651
MSGDLEN  EQU   *-MSGDSIZE                                        Y02651
         DS    0D                  ROUND TO DOUBLEWORD FOR       Y02651
*                                  GETMAIN/FREEMAIN              Y02651
GETMAIN2 EQU   *-WORKAREA                                        Y02651
         SPACE 3
MESSAGES DSECT                                                   Y02651
*        THE TABLE AT THE BEGINNING OF IEFIB621 WHICH IS USED    Y02651
*        TO LOCATE THE MESSAGES IN IEFIB650                      Y02651
         DS    12F                 SPACE USED FOR THE FIRST 12   Y02651
*                                  MESSAGES                      Y02651
         DS    0F                  ENTRY FOR MESSAGE IEF173I     Y02651
*        MESSAGE IEF173I IS MESSAGE X'0D' WITHIN IEFIB621        Y02651
         DS    2C                                                Y02651
DISPLD   DS    H                   DISPLACEMENT OF MSG. IEF173I  Y02651
         SPACE 3
         IEFZB610                                                Y01054
         EJECT
IEFLOT   DSECT
         IEFALLCT
         SPACE 4
JCT      DSECT
         IEFAJCTB
         SPACE 4
IEFSCT   DSECT
         IEFASCTB
         SPACE 4
IEFCSCB  DSECT
         IEECHAIN
         SPACE 4
         IEFZB600                                                Y01054
         SPACE 4
         IKJTCB                                                   20029
         SPACE 4
         IHAASCB
         SPACE 4
         CVT   DSECT=YES
         SPACE 4
         IHACSD
         SPACE 4
         IEZJSCB
         END
