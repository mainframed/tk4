         TITLE 'IEFJACTL - PSEUDO ACCESS METHOD ACCESS METHOD CONTROL  *
                       '
IEFJACTL CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFJACTL  73.218'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
*                                                                  0038
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP BASED VARIABLES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0038
*   RPLPTR=R1;                      /* SAVE THE POINTER TO THE RPL   */
         LR    RPLPTR,R1                                           0038
*   RFY                                                            0039
*     IFGRPL BASED(RPLPTR);         /* THE RPL MACRO IS BASED ON   0039
*                                      RPLPTR                        */
*   RFY                                                            0040
*     IFGACB BASED(RPLDACB);        /* THE ACB IS BASED ON A PTR IN
*                                      THE RPL                       */
*   RFY                                                            0041
*     ACBPRFIX BASED(ADDR(IFGACB)-4);/* GET THE ACB PREFIX           */
*   RFY                                                            0042
*     IEFJAMWD BASED(ACBPRFIX);     /* THE ACCESS METHOD WORK AREA IS
*                                      BASED ON THE ACB PREFIX       */
*                                                                  0042
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK RPLPTR                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0043
*   IF RPLPTR=0 THEN                /* CHECK RPLPTR IF =0 ISSUE ABEND*/
         LTR   RPLPTR,RPLPTR                                       0043
         BNZ   @RF00043                                            0043
*     GEN(ABEND 177,,,SYSTEM);                                     0044
*                                                                  0044
         ABEND 177,,,SYSTEM
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE BITS IN THE RPL AND PERFORM THE OPERATION REQUESTED  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0045
*   R1=RPLPTR;                      /* MAKE SURE THAT R1 POINTS TO 0045
*                                      THE RPL                       */
@RF00043 LR    R1,RPLPTR                                           0045
*   RETCD=0;                        /* SET ZERO RETURN CODE          */
         SR    RETCD,RETCD                                         0046
*   IF(RPLREQ=0)&(RPLDIR='1'B)&(RPLUPD='1'B)THEN                   0047
         CLI   RPLREQ(RPLPTR),0                                    0047
         BNE   @RF00047                                            0047
         TM    RPLDIR(RPLPTR),B'01000000'                          0047
         BNO   @RF00047                                            0047
         TM    RPLUPD(RPLPTR),B'00000010'                          0047
         BNO   @RF00047                                            0047
*     CALL IEFJDIRD;                /* CALL DIRECT READ              */
         L     @15,@CV00045                                        0048
         BALR  @14,@15                                             0048
*   ELSE                                                           0049
*     IF(RPLREQ=0)&(RPLSEQ='1'B)THEN                               0049
         B     @RC00047                                            0049
@RF00047 CLI   RPLREQ(RPLPTR),0                                    0049
         BNE   @RF00049                                            0049
         TM    RPLSEQ(RPLPTR),B'00100000'                          0049
         BNO   @RF00049                                            0049
*       IF AMWDEOF=ON THEN          /* TEST FOR EOF SET UP BY A PRIOR
*                                      OPERATION                     */
         L     @10,RPLDACB(,RPLPTR)                                0050
         AL    @10,@CF00334                                        0050
         L     @10,ACBPRFIX(,@10)                                  0050
         TM    AMWDEOF(@10),B'10000000'                            0050
         BNO   @RF00050                                            0050
*         DO;                       /* IF ON THEN SET UP THE BITS IN
*                                      THE RPL                       */
*           RPLRTNCD=8;             /* RPL RETURN CODE               */
         MVI   RPLRTNCD(RPLPTR),X'08'                              0052
*           RETCD=8;                /* SET RETURN CODE = 8           */
         LA    RETCD,8                                             0053
*           RPLERRCD=RPLEODER;      /* NO EOD ADDRESS                */
         MVI   RPLERRCD(RPLPTR),X'04'                              0054
*         END;                                                     0055
*       ELSE                                                       0056
*         CALL IEFJREAD;            /* REQUEST IS FOR A SEQUENTIAL 0056
*                                      READ                          */
         B     @RC00050                                            0056
@RF00050 L     @15,@CV00047                                        0056
         BALR  @14,@15                                             0056
*     ELSE                                                         0057
*       IF(RPLREQ=1)&(RPLDIR='1'B)&(RPLUPD='1'B)THEN               0057
         B     @RC00049                                            0057
@RF00049 CLI   RPLREQ(RPLPTR),1                                    0057
         BNE   @RF00057                                            0057
         TM    RPLDIR(RPLPTR),B'01000000'                          0057
         BNO   @RF00057                                            0057
         TM    RPLUPD(RPLPTR),B'00000010'                          0057
         BNO   @RF00057                                            0057
*         CALL IEFJDWRT;            /* REQUEST IS DIRECT WRITE       */
         L     @15,@CV00046                                        0058
         BALR  @14,@15                                             0058
*       ELSE                                                       0059
*         IF(RPLREQ=1)&(RPLSEQ='1'B)THEN                           0059
         B     @RC00057                                            0059
@RF00057 CLI   RPLREQ(RPLPTR),1                                    0059
         BNE   @RF00059                                            0059
         TM    RPLSEQ(RPLPTR),B'00100000'                          0059
         BNO   @RF00059                                            0059
*           CALL IEFJWRTE;          /* REQUEST IS FOR A SEQUENTIAL 0060
*                                      WRITE                         */
         L     @15,@CV00048                                        0060
         BALR  @14,@15                                             0060
*         ELSE                                                     0061
*           GEN(ABEND 179,,,SYSTEM);/* IF NO THEN ABEND              */
         B     @RC00059                                            0061
@RF00059 DS    0H                                                  0061
         ABEND 179,,,SYSTEM
*   RETURN CODE(RETCD);                                            0062
@RC00059 DS    0H                                                  0062
@RC00057 DS    0H                                                  0062
@RC00049 DS    0H                                                  0062
@RC00047 L     @13,4(,@13)                                         0062
         L     @00,@SIZDATD                                        0062
         LR    @01,@11                                             0062
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@03                                             0062
         L     @14,12(,@13)                                        0062
         LM    @00,@12,20(@13)                                     0062
         BR    @14                                                 0062
*   END IEFJACTL                                                   0063
*                                                                  0063
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACBVT)                                       */
*/*%INCLUDE SYSLIB  (IEFJAMWD)                                       */
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */
*                                                                  0063
*       ;                                                          0063
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
IEFJACTL CSECT
         DS    0F
@CF00334 DC    F'-4'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFJACTL CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00045 DC    V(IEFJDIRD)
@CV00046 DC    V(IEFJDWRT)
@CV00047 DC    V(IEFJREAD)
@CV00048 DC    V(IEFJWRTE)
         DS    0D
PTCHACTL DC    X'00'
         DS    9XL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETCD    EQU   @03
RPLPTR   EQU   @02
R1       EQU   @01
ACBPRFIX EQU   0
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLREQ   EQU   RPLIDWD+2
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBK  EQU   RPLCOMN+13
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLERRCD EQU   RPLCNDCD+1
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLDIR   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPL6RBA  EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBIXLST EQU   ACBAMBL
ACBJWA   EQU   ACBIXLST
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBLFB   EQU   ACBCOMN+20
ACBBUFPL EQU   ACBLFB
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBWAPTR EQU   ACBUJFCB
IEFJAMWD EQU   0
AMWDFLG1 EQU   IEFJAMWD+8
AMWDEOF  EQU   AMWDFLG1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00013 EQU   IEFJAMWD+10
AMWDFLG2 EQU   IEFJAMWD+9
@NM00012 EQU   AMWDFLG1
AMWDMV80 EQU   AMWDFLG1
AMWDLAST EQU   IEFJAMWD+4
AMWDFRST EQU   IEFJAMWD
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBBLKSZ EQU   ACBCOMN+60
ACBBUFSP EQU   ACBCOMN+56
@NM00011 EQU   ACBWAPTR+1
ACBOPTN  EQU   ACBWAPTR
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00010 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00009 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00008 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
@NM00007 EQU   ACBCOMN+28
@NM00006 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00005 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00004 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
@NM00003 EQU   ACBBUFPL
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+14
@NM00002 EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
ACBCHN   EQU   ACBMACR2
ACBCBRD  EQU   ACBMACR2
ACBCBOPN EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
RPLGVNT  EQU   RPLEXTD1
RPLLVNT  EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPL6RBA+2
RPLS2S2  EQU   RPL6RBA
RPLS1S1  EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLRSV75 EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLFDB3  EQU   RPLERRCD
RPLFDB2  EQU   RPLCMPON
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLCOMN+12
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00050 EQU   @RC00049
@ENDDATA EQU   *
         END   IEFJACTL
