         TITLE 'IEFSD166-JOB SUSPEND/DELETE                            *
                        '
IEFSD066 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFSD066  76.091'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*   LCTPTR=LCTADDR;                 /* GET ADDR OF LCT               */
         L     LCTPTR,LCTADDR(,R1)                                 0085
*   CODESAVE=FUNCCODE;              /* SAVE CODE FROM STEP TERM      */
         L     CODESAVE,FUNCCODE(,R1)                              0086
*   R13SAVE=ADDR(REGSAVE);          /* PUT REG SAVE AREA IN R13      */
*                                                                  0087
         LA    R13SAVE,REGSAVE(,LCTPTR)                            0087
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OF CODE DETERMINES IF THE JOB TERMINATING        */
*   /* REQUIRED A UNIQUE PROTECT KEY. IF IT DID, ENQUEUE ON THE      */
*   /* PROTECT KEY RESOURCE AND RELEASE THE KEY THAT WAS ASSIGNED,   */
*   /* DEQUEUE FROM THE RESOURCE AND CONTINUE NORMAL PROCESSING      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0088
*   IF JCTJSRNO>'80'X THEN                                         0088
         L     @14,LCTJCTAD(,LCTPTR)                               0088
         CLI   JCTJSRNO(@14),128                                   0088
         BNH   @RF00088                                            0088
*     DO;                           /* IF A V=R KEY WAS ASSIGNED TO
*                                      THE JOB RELEASE IT.           */
*       RESPECIFY                                                  0090
*        (R1,                                                      0090
*         R15) RSTD;                                               0090
*       R15=1;                      /* SET UP AS PROTECT KEY MASK    */
         LA    R15,1                                               0091
*       R1=JCTJSRNO;                /* PUT KEY VALUE IN REG 1        */
         SLR   R1,R1                                               0092
         IC    R1,JCTJSRNO(,@14)                                   0092
*       R1=R1/16;                   /* PUT KEY VALUE IN LOW ORDER  0093
*                                      FOUR BITS OF REG 1            */
*                                                                  0093
         SRL   R1,4                                                0093
*       /*************************************************************/
*       /*                                                           */
*       /* NOTE: THE VALUE OF THE PROTECT KEY IS REPRESENTED BY THE  */
*       /* FOUR HIGH ORDER BITS IN JCTJSRNO                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0094
*       GEN(SLA  15,0(1));          /* SHIFT MASK TO REPRESENT THE 0094
*                                      POSITION OF THE KEY IN BAPKES */
         SLA  15,0(1)
*       PROTKEY=R15;                /* PUT KEY MASK IN PROTKEY       */
         STH   R15,PROTKEY(,LCTPTR)                                0095
*       GEN(ENQ MF=(E,IEF66QCB));   /* ENQ ON PROTECT KEY RESOURCE   */
         ENQ MF=(E,IEF66QCB)
*       BAPKES=BAPKES&&PROTKEY;     /* TURN OFF THE BIT IN BAPKES  0097
*                                      THAT REPRESENTS THE KEY BEING
*                                      RELEASED                      */
         L     @14,CVTPTR                                          0097
         L     @14,CVTMSER(,@14)                                   0097
         SLR   @10,@10                                             0097
         ICM   @10,3,PROTKEY(LCTPTR)                               0097
         LH    @00,BAPKES(,@14)                                    0097
         XR    @10,@00                                             0097
         STH   @10,BAPKES(,@14)                                    0097
*       GEN(DEQ MF=(E,IEF66QCB));   /* DEQUEUE FROM THE RESOURCE     */
         DEQ MF=(E,IEF66QCB)
*     END;                                                         0099
*   RESPECIFY                                                      0100
*    (R1,                                                          0100
*     R15) UNRSTD;                                                 0100
@RF00088 DS    0H                                                  0101
*   TCBPKF=TCBPKF&'0F'X;            /* ELIMINATE CURRENT KEY VALUE   */
         L     @10,LCTTCBAD(,LCTPTR)                               0101
         NI    TCBPKF(@10),X'0F'                                   0101
*   TCBPKF=TCBPKF×'10'X;            /* SET TCB KEY TO 1              */
         OI    TCBPKF(@10),X'10'                                   0102
*/*  THIS SECTION OF CODE DELETES THE ACCESSOR ENVIRONMENT IF      0103
*      ONE WAS GOTTEN BY IEFIB600                           @Z40RPPJ */
*                                                                  0103
*   IF LCTBPRAC='0'B                /* IF RACINIT ISSUED     @Z40RPPJ*/
*       &CHTRKID^='03'X THEN        /* IF THIS IS NOT AN INITIATOR 0103
*                                      ISSUE RACINIT DELETE  @Z40RPPJ*/
         TM    LCTBPRAC(LCTPTR),B'00000100'                        0103
         BNZ   @RF00103                                            0103
         L     @10,LCTQDRTY(,LCTPTR)                               0103
         CLI   CHTRKID(@10),X'03'                                  0103
         BE    @RF00103                                            0103
*     DO;                           /* NO,THEN DELETE ENVIRON      0104
*                                                            @Z40RPPJ*/
*       DO;                         /* RACINIT MF(E,RC,COMPLETE)   0105
*                                      ENVIR(DELETE)                 */
*         RC=RC&&RC;                /* INIT. LIST                    */
         XC    RC(28),RC                                           0106
*         RC01=28;                  /* PARM LIST LENGTH              */
         MVI   RC01,X'1C'                                          0107
*         RC02='00000000'B;         /* RESERVED FIELD                */
         MVI   RC02,B'00000000'                                    0108
*         RC03='00000000'B;         /* RESERVED FIELD                */
         MVI   RC03,B'00000000'                                    0109
*         RC04='10000000'B;         /* SET ENVIR FLAGS               */
         MVI   RC04,B'10000000'                                    0110
*         RESPECIFY                                                0111
*           GPR01P RESTRICTED;                                     0111
*         GPR01P=ADDR(RC);          /* ADDR OF RACINIT LIST          */
         LA    GPR01P,RC                                           0112
*         IF CVTRAC^=0&RCVTRNA='0'B THEN/* RACF ACTIVE               */
         L     @10,CVTPTR                                          0113
         L     @10,CVTRAC(,@10)                                    0113
         LTR   @10,@10                                             0113
         BZ    @RF00113                                            0113
         TM    RCVTRNA(@10),B'10000000'                            0113
         BNZ   @RF00113                                            0113
*           SVC(131);               /* ISSUE RACINIT SVC             */
         SVC   131                                                 0114
*         ELSE                      /* RACF NOT ACTIVE               */
*           DO;                                                    0115
         B     @RC00113                                            0115
@RF00113 DS    0H                                                  0116
*             RFY                                                  0116
*               GPR15P RSTD;                                       0116
*             GPR15P=32;            /* SET RACF NOT ACTIVE RET CODE  */
         LA    GPR15P,32                                           0117
*             RFY                                                  0118
*               GPR15P UNRSTD;                                     0118
*           END;                                                   0119
*         RESPECIFY                                                0120
*           GPR01P UNRESTRICTED;                                   0120
@RC00113 DS    0H                                                  0121
*       END;                        /* RACINIT MF(E,RC,COMPLETE)   0121
*                                      ENVIR(DELETE)         @Z40RPPJ*/
*       RFY                                                        0122
*        (R15) RSTD;                /*                       @Z40RPPJ*/
*       IF(R15^=0&R15^=RACFNACT) THEN/* DELETE SUCCESSFUL?   @Z40RPPJ*/
         LTR   R15,R15                                             0123
         BZ    @RF00123                                            0123
         CH    R15,@CH00059                                        0123
         BE    @RF00123                                            0123
*         DO;                       /* NO                    @Z40RPPJ*/
*           MSGPTR=LCTIMSG+DISPLE;  /* SET UP MSG POINTER    @Z40RPPJ*/
         L     @14,LCTIMSG(,LCTPTR)                                0125
         LH    MSGPTR,DISPLE(,@14)                                 0125
         ALR   MSGPTR,@14                                          0125
*           MSGCORE(1:MSGLTHE)=MESSAGE(1:MSGLTHE);/* MOVE MSG      0126
*                                                            @Z40RPPJ*/
         SLR   @10,@10                                             0126
         IC    @10,MSGLTHE(,@14)                                   0126
         LR    @14,@10                                             0126
         BCTR  @14,0                                               0126
         EX    @14,@SM02517                                        0126
*           JOBNM(1:LENGTH(JOBNM))=JCTJNAME(1:LENGTH(JOBNM));/* GET
*                                      JOBNAME FROM JCT      @Z40RPPJ*/
         LA    @14,MSGCORE                                         0127
         L     @01,LCTJCTAD(,LCTPTR)                               0127
         MVC   JOBNM(8,@14),JCTJNAME(@01)                          0127
*           REASONCD=REASONLN*((R15/4)-1);/* CHOOSE CORRECT REASON 0128
*                                      FOR ERROR             @Z40RPPJ*/
         LR    REASONCD,R15                                        0128
         SRL   REASONCD,2                                          0128
         BCTR  REASONCD,0                                          0128
         MH    REASONCD,@CH00103                                   0128
*           MSGPTR=MSGPTR+REASONCD+MSGLTHE;/* POINT TO REASON SECTION
*                                      OF MSG CSECT          @Z40RPPJ*/
         LR    @09,MSGPTR                                          0129
         ALR   @09,REASONCD                                        0129
         ALR   @09,@10                                             0129
         LR    MSGPTR,@09                                          0129
*           REASON(1:LENGTH(REASON))=MESSAGE(1:LENGTH(REASON));/* PUT
*                                      REASON IN MSG         @Z40RPPJ*/
         MVC   REASON(15,@14),MESSAGE(MSGPTR)                      0130
*           GEN REFS(MSGCORE);                                     0131
*                                /*ISSUE ERROR MSG          @Z40RPPJ*/
       WTO  MF=(E,MSGCORE)                                    @Z40RPPJ
*           RFY                                                    0132
*            (R15) UNRSTD;          /*                       @Z4ORPPJ*/
*         END;                      /*                       @Z40RPPJ*/
*       ELSE                                                       0134
*         ;                         /* RACINIT WENT OK       @Z40RPPJ*/
@RF00123 DS    0H                                                  0135
*     END;                          /*                       @Z40RPPJ*/
*   ELSE                                                           0136
*     ;                             /* RACINIT WAS BYPASSED  @Z40RPPJ*/
*                                                                  0136
@RF00103 DS    0H                                                  0137
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OF CODE DETERMINES IF THE JOB SHOULD BE DELETED  */
*   /* OR REENQUEUED. THIS DECISION IS MADE USING THE CODE PASSED    */
*   /* FROM STEP DELETE(IEFSD166). IF THE CODE IS FOUR,THE JOB IS TO */
*   /* BE DELETED. IF THE CODE IS EIGHT,THE JOB IS TO BE RE-ENQUEUED.*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0137
*   IF CODESAVE=4 THEN                                             0137
         CH    CODESAVE,@CH00096                                   0137
         BNE   @RF00137                                            0137
*     DO;                           /* IF THE JOB IS TO BE TERMINATED
*                                      SET UP AND ISSUE SUBSYSTEM JOB
*                                      DELETE                        */
*       RESPECIFY                                                  0139
*        (R0,                                                      0139
*         R1) RSTD;                                                0139
*       R0=LENGTH(SSJT);            /* GET LENGTH OF JOB TERMINATION
*                                      SSOB FUNCTIONAL SECTION       */
         LA    R0,24                                               0140
*       R0=R0×SUBPL255;             /* GET CORE FROM SP 255          */
         O     R0,SUBPL255                                         0141
*       SPLNSAVE=R0;                /* SAVE LENGTH AND SP #          */
         ST    R0,SPLNSAVE(,LCTPTR)                                0142
*       GEN(GETMAIN R,LV=(0));      /* GET CORE FOR SSJT             */
         GETMAIN R,LV=(0)
*       SSOBINDV=R1;                /* PUT PTR TO THE JOB TERMINATION
*                                      FUNCTIONAL SECTION IN THE SSOB
*                                      HEADER.                       */
         L     @10,LCTSSOBA(,LCTPTR)                               0144
         ST    R1,SSOBINDV(,@10)                                   0144
*       SSJT=''B;                   /* ZERO THE FUNCTIONAL SECTION   */
         L     @15,LCTSSOBA(,LCTPTR)                               0145
         L     @15,SSOBINDV(,@15)                                  0145
         XC    SSJT(24,@15),SSJT(@15)                              0145
*       SSJTLEN=LENGTH(SSJT);       /* INITIALIZE WITH LENGTH        */
         MVC   SSJTLEN(2,@15),@CH00177                             0146
*       SSJTJMR=LCTJMRAD;           /* PUT ADDR OF JMR IN SSJT       */
         MVC   SSJTJMR(4,@15),LCTJMRAD(LCTPTR)                     0147
*       SSOBFUNC=SSOBTERM;          /* PUT JOB TERMINATION FUNCTION
*                                      CODE IN THE SSOB HEADER       */
         MVC   SSOBFUNC(2,@10),@CH01985                            0148
*/********************************************************************/
*/*                                                                  */
*/* THIS SECTION OF CODE SETS UP THE JOB STATUS INFO IN THE @Z30CPPH */
*/* SSOB                                                    @Z30CPPH */
*/*                                                                  */
*/********************************************************************/
*                                                                  0149
*       IF LCTJFAIL=ON THEN         /* JOB FAILED YES, SET   @Z30CPPH*/
         TM    LCTJFAIL(LCTPTR),B'10000000'                        0149
         BNO   @RF00149                                            0149
*         SSJTJFAL=ON;              /* INDICATOR             @Z30CPPH*/
         OI    SSJTJFAL(@15),B'10000000'                           0150
*       IF LCTJCFAL=ON THEN         /* JOB FAILED BECAUSE    @Z30CPPH*/
@RF00149 TM    LCTJCFAL(LCTPTR),B'00000100'                        0151
         BNO   @RF00151                                            0151
*         SSJTCFAL=ON;              /* CONDITION CODES       @Z30CPPH*/
         L     @10,LCTSSOBA(,LCTPTR)                               0152
         L     @10,SSOBINDV(,@10)                                  0152
         OI    SSJTCFAL(@10),B'01000000'                           0152
*       IF JCTABEND=ON THEN         /* DID JOB ABEND,YES,    @Z30CPPH*/
@RF00151 L     @10,LCTJCTAD(,LCTPTR)                               0153
         TM    JCTABEND(@10),B'00001000'                           0153
         BNO   @RF00153                                            0153
*         SSJTABND=ON;              /* SET INDICATOR         @Z30CPPH*/
         L     @10,LCTSSOBA(,LCTPTR)                               0154
         L     @10,SSOBINDV(,@10)                                  0154
         OI    SSJTABND(@10),B'00100000'                           0154
*       IF JCTJSBTM='1'B THEN       /* DID STEP ENTER TERM   @ZM30478*/
@RF00153 L     @10,LCTJCTAD(,LCTPTR)                               0155
         TM    JCTJSBTM(@10),B'00000001'                           0155
         BNO   @RF00155                                            0155
*         LSTEPNUM=SCTSNUMB;        /* SET NUM OF THIS STEP TO PASS
*                                      TO JES                @ZM30478*/
         L     @10,LCTSCTAD(,LCTPTR)                               0156
         MVC   LSTEPNUM(1),SCTSNUMB(@10)                           0156
*       ELSE                                                       0157
*         LSTEPNUM=SCTSNUMB-ONE;    /* SAVE STEP NUMBER OF LAST STEP
*                                      TO COMPLETE TERM      @ZM20478*/
         B     @RC00155                                            0157
@RF00155 L     @10,LCTSCTAD(,LCTPTR)                               0157
         SLR   @15,@15                                             0157
         IC    @15,SCTSNUMB(,@10)                                  0157
         BCTR  @15,0                                               0157
         STC   @15,LSTEPNUM                                        0157
*       SSJTSNUM=ADDR(LSTEPNUM);    /* GET STEP NUMBER PTR   @Z30CPPH*/
@RC00155 L     @10,LCTSSOBA(,LCTPTR)                               0158
         L     @10,SSOBINDV(,@10)                                  0158
         LA    @15,LSTEPNUM                                        0158
         ST    @15,SSJTSNUM(,@10)                                  0158
*       IF SSJTCFAL=ON&SSJTJFAL=ON THEN/* IF JOB FAILED      @Z30CPPH*/
         TM    SSJTCFAL(@10),B'11000000'                           0159
         BNO   @RF00159                                            0159
*         DO;                       /* BECAUSE OF CONDITION  @Z30CPPH*/
*           SSJTPCOD=ADDR(SCTSEXEC);/* CODES,SUPPLY COND CODE,     0161
*                                                            @Z30CPPH*/
         L     @15,LCTSCTAD(,LCTPTR)                               0161
         LA    @14,SCTSEXEC(,@15)                                  0161
         ST    @14,SSJTPCOD(,@10)                                  0161
*           SSJTPSN1=ADDR(SCTSNAME);/* EXECUTING STEP NAME,  @Z30CPPH*/
         LA    @14,SCTSNAME(,@15)                                  0162
         ST    @14,SSJTPSN1(,@10)                                  0162
*           SSJTPSN2=ADDR(SCTSCLPC);/* STEP WHICH CALLED PROC      0163
*                                                            @Z30CPPH*/
         LA    @15,SCTSCLPC(,@15)                                  0163
         ST    @15,SSJTPSN2(,@10)                                  0163
*         END;                                                     0164
*     END;                                                         0165
*   ELSE                                                           0166
*     DO;                           /* IF JOB IS NOT TO BE TERMINATED
*                                      THEN IT IS TO BE RE-ENQUEUED  */
         B     @RC00137                                            0166
@RF00137 DS    0H                                                  0167
*       R0=LENGTH(SSRQ);            /* GET LENGTH OF JOB RE-ENQUEUE
*                                      SSOB FUNCTIONAL SECTION       */
         LA    R0,8                                                0167
*       R0=R0×SUBPL255;             /* GET CORE FROM SP 255          */
         O     R0,SUBPL255                                         0168
*       SPLNSAVE=R0;                /* SAVE LENGTH AND SP #          */
         ST    R0,SPLNSAVE(,LCTPTR)                                0169
*       GEN(GETMAIN R,LV=(0));      /* GET CORE FOR SSRQ             */
         GETMAIN R,LV=(0)
*       SSOBINDV=R1;                /* PUT PTR TO JOB RE-ENQUEUE   0171
*                                      FUNCTIONAL SECTION IN SSOB  0171
*                                      HEADER                        */
         L     @10,LCTSSOBA(,LCTPTR)                               0171
         ST    R1,SSOBINDV(,@10)                                   0171
*       SSRQ=''B;                   /* ZERO FUNCTIONAL SECTION       */
         L     @10,LCTSSOBA(,LCTPTR)                               0172
         L     @10,SSOBINDV(,@10)                                  0172
         XC    SSRQ(8,@10),SSRQ(@10)                               0172
*       SSRQLEN=LENGTH(SSRQ);       /* INITIALIZE WITH LENGTH        */
         MVC   SSRQLEN(2,@10),@CH00050                             0173
*       SSRQSTEP=JCTSCT;            /* PUT FAILING STEP # IN       0174
*                                      FUNCTIONAL SECTION            */
         L     @15,LCTJCTAD(,LCTPTR)                               0174
         SLR   @14,@14                                             0174
         IC    @14,JCTSCT(,@15)                                    0174
         STH   @14,SSRQSTEP(,@10)                                  0174
*       IF JCTSTEPR='1'B THEN                                      0175
         TM    JCTSTEPR(@15),B'00000100'                           0175
         BNO   @RF00175                                            0175
*         SSRQSTRS='1'B;            /* IF THIS IS A STEP RESTART SET
*                                      THE STEP RESTART INDICATOR IN
*                                      THE FUNCTIONAL SECTION        */
         OI    SSRQSTRS(@10),B'10000000'                           0176
*       IF JCTCKPTR='1'B THEN                                      0177
@RF00175 L     @10,LCTJCTAD(,LCTPTR)                               0177
         TM    JCTCKPTR(@10),B'00001000'                           0177
         BNO   @RF00177                                            0177
*         SSRQCHRS='1'B;            /* IF THE JOB IS BEING CHECKPOINT
*                                      RESTARTED THEN SET THE      0178
*                                      CHECKPOINT RESTART INDICATOR
*                                      IN THE FUNCTIONAL SECTION     */
         L     @10,LCTSSOBA(,LCTPTR)                               0178
         L     @10,SSOBINDV(,@10)                                  0178
         OI    SSRQCHRS(@10),B'01000000'                           0178
*       IF JCTCONTR='1'B THEN                                      0179
@RF00177 L     @10,LCTJCTAD(,LCTPTR)                               0179
         TM    JCTCONTR(@10),B'00100000'                           0179
         BNO   @RF00179                                            0179
*         SSRQCNRS='1'B;            /* IF THIS IS A CONTINUE RESTART
*                                      SET THE CONTINUE RESTART    0180
*                                      INDICATOR IN THE FUNCTIONAL 0180
*                                      SECTION                       */
         L     @10,LCTSSOBA(,LCTPTR)                               0180
         L     @10,SSOBINDV(,@10)                                  0180
         OI    SSRQCNRS(@10),B'00100000'                           0180
*       IF JCTQIDNT='01'X THEN                                     0181
@RF00179 L     @10,LCTJCTAD(,LCTPTR)                               0181
         CLI   JCTQIDNT(@10),X'01'                                 0181
         BNE   @RF00181                                            0181
*         SSRQHOLD='1'B;            /* IF THE JOB IS TO BE         0182
*                                      RE-ENQUEUED ON THE HOLD-Q SET
*                                      THE RE-ENQUEUE INDICATOR IN 0182
*                                      THE FUNCTIONAL SECTION        */
         L     @10,LCTSSOBA(,LCTPTR)                               0182
         L     @10,SSOBINDV(,@10)                                  0182
         OI    SSRQHOLD(@10),B'00010000'                           0182
*       SSOBFUNC=SSOBRENQ;          /* SET JOB RE-ENQUEUE FUNCTION 0183
*                                      CODE IN SSOB HEADER           */
@RF00181 L     @10,LCTSSOBA(,LCTPTR)                               0183
         MVC   SSOBFUNC(2,@10),@CH02004                            0183
*     END;                                                         0184
*   SSOBADDR=LCTSSOBA;              /* PUT ADDR OF SSOB IN PARMLIST  */
@RC00137 MVC   SSOBADDR(4,LCTPTR),LCTSSOBA(LCTPTR)                 0185
*   ENDLIST='1'B;                   /* SET END OF LIST INDICATOR     */
         OI    ENDLIST(LCTPTR),B'10000000'                         0186
*   R1=ADDR(PARMLIST);              /* PUT ADDR OF PARMLIST IN REG 1 */
*                                                                  0187
         LA    R1,PARMLIST(,LCTPTR)                                0187
*   /*****************************************************************/
*   /*                                                               */
*   /* ? IEFSSREQ;                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0188
*/*                                                                  */
*/*  PASS CONTROL TO JOB ENTRY SUBSYSTEM TO                          */
*/*  PROCESS REQUEST -                                               */
*/*                                                                  */
*/*    INPUT - REGISTER 1 POINTS TO A ONE-                           */
*/*            WORD PARAMETER LIST WHICH                             */
*/*            POINTS TO THE SSOB                                    */
*/*                                                                  */
*                                                                  0188
*   CALL SSREQ;                     /* ISSUE JOB RE-ENQUEUE REQUEST  */
         L     @10,CVTPTR                                          0188
         L     @10,CVTJESCT(,@10)                                  0188
         L     @15,JESSSREQ(,@10)                                  0188
         BALR  @14,@15                                             0188
*   RESPECIFY                                                      0189
*     R15 RSTD;                                                    0189
*   CODESAVE=R15;                   /* SAVE THE RETURN CODE          */
         LR    CODESAVE,R15                                        0190
*   SSIBJBID=''B;                   /* SET JOBID TO 0                */
         L     @14,LCTSSOBA(,LCTPTR)                               0191
         L     @10,SSOBSSIB(,@14)                                  0191
         XC    SSIBJBID(8,@10),SSIBJBID(@10)                       0191
*   R0=SPLNSAVE;                    /* GET SP AND LGTH OF FUNCTIONAL
*                                      SECTION                       */
         L     R0,SPLNSAVE(,LCTPTR)                                0192
*   R1=SSOBINDV;                    /* GET ADDR OF FUNCTIONAL SECTION*/
         L     R1,SSOBINDV(,@14)                                   0193
*   SSOBINDV=0;                     /* CLEAR FUNCTIONAL SECTION PTR
*                                      IN SSOB HEADER                */
         SLR   @10,@10                                             0194
         ST    @10,SSOBINDV(,@14)                                  0194
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREE THE FUNCTIONAL SECTION   */
         FREEMAIN R,LV=(0),A=(1)
*   IF CODESAVE^=0 THEN                                            0196
         LTR   CODESAVE,CODESAVE                                   0196
         BZ    @RF00196                                            0196
*     DO;                           /* IF AN ERROR WAS RETURNED FROM
*                                      THE SUBSYSTEM INTERFACE, ABEND
*                                      INDICATIN G SUBSYSTEM       0197
*                                      INTERFACE ERROR               */
*       R1=ABENCODE;                /* PUT SSI ABEND CODE IN REG 1   */
         L     R1,ABENCODE                                         0198
*       GEN(ABEND (1),,,SYSTEM);    /* ABEND                         */
         ABEND (1),,,SYSTEM
*     END;                                                         0200
*   IF(SSOBRETN^=0)&(IELRTNCD=0) THEN                              0201
@RF00196 L     @14,LCTSSOBA(,LCTPTR)                               0201
         L     @14,SSOBRETN(,@14)                                  0201
         LTR   @14,@14                                             0201
         BZ    @RF00201                                            0201
         L     @10,LCTENTR(,LCTPTR)                                0201
         L     @10,IELEXIT(,@10)                                   0201
         CLI   IELRTNCD(@10),0                                     0201
         BNE   @RF00201                                            0201
*     DO;                           /* IF A NON ZERO RETURN CODE WAS
*                                      RETURNED FROM THE SUBSYSTEM 0202
*                                      AND A RETURN CODE IS NOT    0202
*                                      ALREADY IN THE EXIT LIST,PUT
*                                      THE CODE IN THE EXIT LIST,SET
*                                      THE INTERNAL STOP INDICATOR IN
*                                      THE LCT, AND STOP             */
*       IELRTNCD=SSOBRETN;          /* PUT THE RETURN CODE IN THE  0203
*                                      EXIT LIST                     */
         STC   @14,IELRTNCD(,@10)                                  0203
*       IELRCXT='06'X;              /* INDICATE ERROR OCCURRED IN THE
*                                      SUBSYSTEM                     */
         MVI   IELRCXT(@10),X'06'                                  0204
*       LCTSTOP='1'B;               /* INDICATE THE INITIATOR IS TO
*                                      STOP                          */
         OI    LCTSTOP(LCTPTR),B'00000100'                         0205
*     END;                                                         0206
*   RESPECIFY                                                      0207
*     CODESAVE UNRSTD;                                             0207
@RF00201 DS    0H                                                  0208
*   RESPECIFY                                                      0208
*     R15 UNRSTD;                                                  0208
*                                                                  0208
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR ALL SWA ADDRESSES FROM THE LINKAGE CONTROL TABLE        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0209
*   LCTJCTVA=0;                     /* CLEAR JCT SVA IN THE LCT      */
         SLR   @10,@10                                             0209
         STCM  @10,7,LCTJCTVA(LCTPTR)                              0209
*   LCTSCTVA=0;                     /* CLEAR SCT SVA IN THE LCT      */
         STCM  @10,7,LCTSCTVA(LCTPTR)                              0210
*   LCTJCTAD=0;                     /* CLEAR JCT PTR IN LCT          */
         ST    @10,LCTJCTAD(,LCTPTR)                               0211
*   LCTSCTAD=0;                     /* CLEAR SCT PTR IN LCT          */
*                                                                  0212
         ST    @10,LCTSCTAD(,LCTPTR)                               0212
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET THE ERROR FLAGS IN THE LCT. IF LEFT ON WHEN JOBS ARE    */
*   /* BEING WARM STARTED AND ONE FAILS, ALL THE FOLLOWING JOBS FAIL.*/
*   /* THEY ARE NOT INITIALIZED UNTIL ALLOCATION TIME        @ZA06205*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*   LCTERR=LCTERR&&LCTERR;          /* CLEAR FIELD BEFORE TERMINATING
*                                      JOB DELETE            @ZA06205*/
*                                                                  0213
         XC    LCTERR(1,LCTPTR),LCTERR(LCTPTR)                     0213
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE SWA SUBPOOL IS 236 OR 237 THEN INVOKE SWA DELETE TO    */
*   /* HAVE ALL SWA SPACE ASSIGNED TO THE TERMINATING JOB DELETED.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0214
*   IF(QMSWSP='EC'X)×(QMSWSP='ED'X) THEN                           0214
         LA    @10,248                                             0214
         ALR   @10,LCTPTR                                          0214
         CLI   QMSWSP(@10),X'EC'                                   0214
         BE    @RT00214                                            0214
         CLI   QMSWSP(@10),X'ED'                                   0214
         BNE   @RF00214                                            0214
@RT00214 DS    0H                                                  0215
*     DO;                           /* CHECK FOR THE PROPER SUBPOOLS
*                                      FOR SWA                YM04232*/
*       QMPOP=QMDELETE;             /* SPECIFY SWA DELETE FUNCTION   */
         MVC   QMPOP+248(1,LCTPTR),QMDELETE                        0216
*       R1=ADDR(QMGR1);             /* PUT ADDR OF QMPA IN REG 1     */
         LA    R1,QMGR1(,LCTPTR)                                   0217
*/*      06/30/72  R2                                                */
*                                                                  0218
*       DCL                                                        0218
*         SWAMGPTR REG(15) PTR(31);                                0218
*       SWAMGPTR=CVTJESCT->JESQMGR;                                0219
         L     @10,CVTPTR                                          0219
         L     @10,CVTJESCT(,@10)                                  0219
         L     SWAMGPTR,JESQMGR(,@10)                              0219
*       GEN(BALR 14,15);            /* GO TO SWA MANAGER             */
         BALR 14,15
*     END;                                                         0221
*                                                                  0221
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ASM TO CLEANUP CONTROL BLOCKS STILL EXISTING FOR VIO DATA*/
*   /* SETS WHICH WERE CREATED FOR THE JOB WHICH IS TERMINATING      */
*   /*                                                       @Z40WPPJ*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0222
*   IF CVTJTERM^=0 THEN             /* SEE IF ASM IS THERE   @Z40WPPJ*/
@RF00214 L     @10,CVTPTR                                          0222
         L     @10,CVTJTERM(,@10)                                  0222
         LTR   @10,@10                                             0222
         BZ    @RF00222                                            0222
*     CALL ILRJTERM;                /* GO TO ASM CLEANUP     @Z40WPPJ*/
*                                                                  0223
         LR    @15,@10                                             0223
         BALR  @14,@15                                             0223
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CODE ISSUES A SYSEVENT TO INFORM THE SYSTEM     */
*   /* RESOURCE MANAGER THAT A JOB HAS BEEN TERMINATED.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0224
*   R1=ADDR(CHCLS);                 /* GET ADDR OF JOBNAME/USERID    */
@RF00222 L     R1,LCTQDRTY(,LCTPTR)                                0224
         LA    R1,CHCLS(,R1)                                       0224
*   GEN(SYSEVENT JOBTERM);          /* INFORM THE SYSTEM RESOURCE  0225
*                                      MANAGER THAT A JOB HAS      0225
*                                      TERMINATED                    */
*                                                                  0225
         SYSEVENT JOBTERM
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION OF CODE FREES ALL CONTROL BLOCKS IN SQA AND LSQA */
*   /* THAT WERE ASSOCIATED WITH THE JOB JUST TERMINATED             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0226
*   R1=LCTJSCB;                     /* GET ADDR OF JSCB              */
         L     R1,LCTJSCB(,LCTPTR)                                 0226
*   LCTJSCB=0;                      /* CLEAR JSCB PTR IN LCT         */
         SLR   @10,@10                                             0227
         ST    @10,LCTJSCB(,LCTPTR)                                0227
*   JSCBACT=TCBJSCB;                /* MAKE INIT JSCB THE ACTIVE JSCB*/
         L     @10,LCTTCBAD(,LCTPTR)                               0228
         L     @10,TCBJSCB(,@10)                                   0228
         ST    @10,JSCBACT(,@10)                                   0228
*   GEN(FREEJSCB SYSTEM=AOS);       /* FREE THE JSCB                 */
         FREEJSCB SYSTEM=AOS
*   CHCIBCTR=0;                     /* PREVENT MORE COMMANDS         */
         L     @10,LCTQDRTY(,LCTPTR)                               0230
         MVI   CHCIBCTR(@10),X'00'                                 0230
*   R1=CHCIBP;                      /* GET ADDR OF CIB OFF CSCB      */
         L     R1,CHCIBP(,@10)                                     0231
*   IF R1^=0 THEN                                                  0232
         LTR   R1,R1                                               0232
         BZ    @RF00232                                            0232
*     DO;                           /* IF THERE ARE ANY CIBS HUNG OFF
*                                      THE CSCB, FREE THEM BEFORE  0233
*                                      FREEING THE CSCB              */
*       R0=ADDR(CHCIBP);            /* PUT ORIGIN PTR IN REG 0       */
         LA    R0,CHCIBP(,@10)                                     0234
*       GEN(QEDIT ORIGIN=(0));      /* FREE ALL CIBS HUNG OFF CSCB   */
         QEDIT ORIGIN=(0)
*     END;                                                         0236
*   IF LCTONEJF^='1'B THEN                                         0237
@RF00232 TM    LCTONEJF(LCTPTR),B'00000100'                        0237
         BO    @RF00237                                            0237
*     DO;                           /* IF THIS CSCB BELONGS TO AN  0238
*                                      INITIATED TASK THEN FREE IT   */
*                                                                  0238
*       /*************************************************************/
*       /*                                                           */
*       /* NOTE: CSCBS ARE FREED HERE ONLY IF THE JOBS JUST          */
*       /* TERMINATED WERE INITIATED BY AN INITIATOR. OTHER CSCBS ARE*/
*       /* FREED BY STARTED TASK CONTROL                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0239
*       CHDL='1'B;                  /* SET DELETE INDICATOR          */
*       CHAD='0'B;                  /* TURN OFF ADDITION INDICATOR   */
*       CHFC='1'B;                  /* INDICATE FREE THIS CORE       */
         L     @10,LCTQDRTY(,LCTPTR)                               0241
         OI    CHDL(@10),B'00000110'                               0241
         NI    CHAD(@10),B'11110111'                               0241
*       ASCBJBNI=0;                 /* CLEAR PTR TO JOBNAME IN CSCB
*                                      IN THE ASCB                   */
         SLR   @03,@03                                             0242
         L     @15,LCTASCBA(,LCTPTR)                               0242
         ST    @03,ASCBJBNI(,@15)                                  0242
*       R1=LCTQDRTY;                /* PUT ADDR OF CSCB IN REG 1     */
         LR    R1,@10                                              0243
*       LCTQDRTY=0;                 /* CLEAR CSCB PTR IN LCT         */
         ST    @03,LCTQDRTY(,LCTPTR)                               0244
*       GEN(MGCR (1),CHAIN);        /* INVOKE SVC 34 TO FREE THE CSCB*/
         MGCR (1),CHAIN
*     END;                                                         0246
*   IF LCTONEJF='1'B THEN                                          0247
@RF00237 TM    LCTONEJF(LCTPTR),B'00000100'                        0247
         BNO   @RF00247                                            0247
*     LCTSTOP='1'B;                 /* IS THE CURRENT TASK IS NOT AN
*                                      INITIATOR,SET THE INTERNAL  0248
*                                      STOP INDICATOR IN THE LCT SO
*                                      JOB SELECTION WILL NOT ATTEMPT
*                                      TO SELECT A JOB USING THIS  0248
*                                      TASK                          */
         OI    LCTSTOP(LCTPTR),B'00000100'                         0248
*   ELSE                                                           0249
*     TIOCSTEP(9:16)=' ';           /* IF THIS IS AN INITIATOR, CLEAR
*                                      THE TERMINATED JOBNAME FROM 0249
*                                      THE INITIATORS TIOT.          */
         B     @RC00247                                            0249
@RF00247 L     @10,LCTTCBAD(,LCTPTR)                               0249
         L     @10,TCBTIO(,@10)                                    0249
         MVI   TIOCSTEP+9(@10),C' '                                0249
         MVC   TIOCSTEP+10(6,@10),TIOCSTEP+9(@10)                  0249
         MVI   TIOCSTEP+8(@10),C' '                                0249
*   R1=LCTPTR;                      /* PUT PTR TO REG IN REG1        */
@RC00247 LR    R1,LCTPTR                                           0250
*   RESPECIFY                                                      0251
*     R15 RSTD;                                                    0251
*   R15=ADDR(IEFSD061);             /* GET ADDR OF IEFSD061          */
         L     R15,@CV00053                                        0252
*   GEN(BR 15);                     /* GO TO IEFSD161                */
         BR 15
*   RESPECIFY                                                      0254
*    (R0,                                                          0254
*     R1,                                                          0254
*     LCTPTR,                                                      0254
*     R13SAVE,                                                     0254
*     R15) UNRSTD;                                                 0254
*   GEN DATA DEFS(IEF66QCB,IEFSQCBS,IEFQ6QCB);                     0255
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01P PTR(31) REG(1),                                       0256
*     GPR15P PTR(31) REG(15);                                      0256
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0257
*     I031F FIXED(31) BASED,                                       0257
*     I031P PTR(31) BASED,                                         0257
*     I015F FIXED(15) BASED,                                       0257
*     I015P PTR(15) BASED,                                         0257
*     I008P PTR(8) BASED,                                          0257
*     I001C CHAR(1) BASED;                                         0257
*                                                                  0257
*/* @Z40RPPJ                                                         */
*                                                                  0258
*   END IEFSD066                                                   0258
*                                                                  0258
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (ICHPRCVT)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEEBASEA)                                       */
*/*%INCLUDE SYSLIB  (IEFALLCT)                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IEZIELDF)                                       */
*/*%INCLUDE SYSLIB  (IEZIEL  )                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSIB)                                       */
*/*%INCLUDE SYSLIB  (IEFJESCT)                                       */
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                       */
*/*%INCLUDE SYSLIB  (IEFASCTB)                                       */
*/*%INCLUDE SYSLIB  (IEFQMNGR)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IEFQMREQ)                                       */
*                                                                  0258
*       ;                                                          0258
@EL00001 L     @13,4(,@13)                                         0258
@EF00001 L     @00,@SIZDATD                                        0258
         LR    @01,@11                                             0258
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0258
         BR    @14                                                 0258
@DATA    DS    0H
@CH00096 DC    H'4'
@CH00050 DC    H'8'
@CH01985 DC    H'12'
@CH02004 DC    H'13'
@CH00103 DC    H'22'
@CH00177 DC    H'24'
@CH00059 DC    H'32'
@SM02517 MVC   MSGCORE(0),MESSAGE(MSGPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
IEFSD066 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
LSTEPNUM DS    CL1
MSGCORE  DS    CL132
         DS    CL3
RC       DS    CL28
         ORG   RC
RC01     DS    AL1
RC02     DS    BL1
RC03     DS    BL1
RC04     DS    BL1
RC05     DS    AL4
RC06     DS    AL4
RC07     DS    AL4
RC08     DS    AL4
RC09     DS    AL4
RC10     DS    AL4
         ORG   RC+28
IEFSD066 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00053 DC    V(IEFSD061)
         DS    0D
SP253    DC    XL4'FD000000'
SUBPL255 DC    XL4'FF000000'
ABENCODE DC    XL4'000000BA'
PATCH    DC    CL30' '
QMDELETE DC    B'00001000'
IEFSD066 CSECT
IEF66QCB ENQ (IEFSQCBS,IEFQ6QCB,E,2,SYSTEM),MF=L
IEFSQCBS DC  C'SYSIEFSD'
IEFQ6QCB DC  C'Q6'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFSD066 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
REASONCD EQU   @05
MSGPTR   EQU   @04
R0       EQU   @00
R1       EQU   @01
LCTPTR   EQU   @02
CODESAVE EQU   @03
R13SAVE  EQU   @13
R15      EQU   @15
GPR01P   EQU   @01
GPR15P   EQU   @15
SWAMGPTR EQU   @15
R2       EQU   @02
CVTPTR   EQU   16
ILRJTERM EQU   0
INPUTLST EQU   0
LCTADDR  EQU   INPUTLST
FUNCCODE EQU   INPUTLST+4
MSGDSECT EQU   0
JOBNM    EQU   MSGDSECT+41
REASON   EQU   MSGDSECT+51
MSGRTNHD EQU   0
@NM00005 EQU   MSGRTNHD+52
MSGLTHE  EQU   @NM00005+1
DISPLE   EQU   @NM00005+2
MESSAGE  EQU   0
RCVT     EQU   0
RCVTSTAT EQU   RCVT+53
RCVTRNA  EQU   RCVTSTAT
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTMSER  EQU   CVTMAP+148
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
BASE     EQU   0
@NM00009 EQU   BASE+13
BALGSTAT EQU   BASE+24
BALOG    EQU   BALGSTAT+4
BASFL    EQU   BASE+36
BARSW    EQU   BASFL
BAPKES   EQU   BASE+40
MSLOGST  EQU   BASE+46
BASPBYTE EQU   BASE+47
BAMONITR EQU   BASE+56
@NM00031 EQU   BASE+104
MSLGCLOZ EQU   BASE+108
MSCLOSSW EQU   MSLGCLOZ
MSLGWLOG EQU   BASE+112
MSWLOGSW EQU   MSLGWLOG
MSLGWTR  EQU   BASE+116
MSWTRSW  EQU   MSLGWTR
MSLGSTRT EQU   BASE+120
MSSTRTSW EQU   MSLGSTRT
MS1BASEX EQU   BASE+136
BASES01  EQU   0
MSNTAL   EQU   BASES01
MSSSB    EQU   BASES01+1
MSBTN    EQU   MSSSB
MSPFG    EQU   BASES01+2
MSECBFL  EQU   BASES01+3
MSTUS    EQU   BASES01+4
MSSSA    EQU   MSTUS
MSINLSW  EQU   MSSSA
MSREOF   EQU   MSSSA
MSNWP    EQU   MSSSA
MSFHF    EQU   BASES01+5
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00054 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTSCTVA EQU   LCTWORKA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTJFAIL EQU   LCTERR
LCTJCFAL EQU   LCTERR
LCTPARM1 EQU   LCT+36
LCTPARM2 EQU   LCT+40
LCTPARM3 EQU   LCT+44
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00081 EQU   LCT+76
LCTINTSW EQU   @NM00081
LCTSTOP  EQU   LCTINTSW
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
REGSAVE  EQU   LCT+104
QMGR1    EQU   LCT+248
LCTASCBA EQU   LCT+320
LCTJMRAD EQU   LCT+324
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
LCTONEJF EQU   LCTOPSW1
@NM00107 EQU   LCT+356
LCTOPSW2 EQU   @NM00107
LCTBPRAC EQU   LCTOPSW2
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTSSOBA EQU   LCT+404
LCTJCTDA EQU   LCT+408
LCTJCTVA EQU   LCTJCTDA
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
@NM00120 EQU   LCT+420
LCTINTS2 EQU   @NM00120+1
LCTIMSG  EQU   LCT+432
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
IEL      EQU   0
IELLIST  EQU   IEL
IELOPLST EQU   IELLIST+8
IELEXIT  EQU   IELLIST+20
IELLAST  EQU   IELEXIT
IELOPTS  EQU   0
IELOPSW1 EQU   IELOPTS+2
IELOPSW2 EQU   IELOPTS+3
IELOPSW3 EQU   IELOPTS+5
IELEXITS EQU   0
IELEXHDR EQU   IELEXITS
IELRTNCD EQU   IELEXHDR+2
IELRCXT  EQU   IELEXHDR+3
RTNEXT   EQU   IELEXITS+8
RTNEXNM  EQU   RTNEXT+2
RTNEXAD  EQU   RTNEXNM+2
TIOT1    EQU   0
TIOCSTEP EQU   TIOT1+8
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHAD     EQU   CHSTS
CHDL     EQU   CHSTS
CHFC     EQU   CHSTS
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHCLS    EQU   CHAIN+16
CHCIBCTR EQU   CHAIN+27
CHPKE    EQU   CHAIN+28
CHTRKID  EQU   CHPKE
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
SSOB     EQU   0
SSOBFUNC EQU   SSOB+6
SSOBSSIB EQU   SSOB+8
SSOBRETN EQU   SSOB+12
SSOBINDV EQU   SSOB+16
SSJT     EQU   0
SSJTLEN  EQU   SSJT
SSJTFLG1 EQU   SSJT+2
SSJTJFAL EQU   SSJTFLG1
SSJTCFAL EQU   SSJTFLG1
SSJTABND EQU   SSJTFLG1
SSJTJMR  EQU   SSJT+4
SSJTPCOD EQU   SSJT+8
SSJTPSN1 EQU   SSJT+12
SSJTPSN2 EQU   SSJT+16
SSJTSNUM EQU   SSJT+20
SSRQ     EQU   0
SSRQLEN  EQU   SSRQ
SSRQSTEP EQU   SSRQ+4
SSRQFLG1 EQU   SSRQ+6
SSRQSTRS EQU   SSRQFLG1
SSRQCHRS EQU   SSRQFLG1
SSRQCNRS EQU   SSRQFLG1
SSRQHOLD EQU   SSRQFLG1
SSIB     EQU   0
SSIBFLG1 EQU   SSIB+6
SSIBJBID EQU   SSIB+12
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESQMGR  EQU   JESCT+12
JESSSREQ EQU   JESCT+20
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SSREQ    EQU   0
INJMJCT  EQU   0
JCTJSRNO EQU   INJMJCT+4
JCTJSTAT EQU   INJMJCT+5
JCTABEND EQU   JCTJSTAT
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTJNAME EQU   INJMJCT+8
JCTSCT   EQU   INJMJCT+52
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTCONTR EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTRSW2  EQU   INJMJCT+87
JCTQIDNT EQU   INJMJCT+94
JCTJSB   EQU   INJMJCT+111
JCTJSBTM EQU   JCTJSB
JCTSTAT2 EQU   INJMJCT+116
IEFAACTB EQU   0
INSMSCT  EQU   0
SCTSSTAT EQU   INSMSCT+4
SCTSEXEC EQU   INSMSCT+8
SCTSCLPC EQU   INSMSCT+44
SCTSNAME EQU   INSMSCT+52
SCTSNUMB EQU   INSMSCT+64
SCTSTYPE EQU   INSMSCT+67
SCTSDPTY EQU   INSMSCT+94
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTCDENT EQU   INSMSCT+118
SCTSTEND EQU   INSMSCT+172
@NM00195 EQU   0
SCTABCND EQU   @NM00195
QMPA     EQU   0
QMNAM    EQU   QMPA
QMPOP    EQU   QMPA+8
QMSTA    EQU   QMPA+16
QMPCL    EQU   QMPA+32
QMPCMNC  EQU   QMPCL
SWAQMPA  EQU   0
QMSWSP   EQU   SWAQMPA
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBJBNI EQU   ASCB+172
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
INDMDSNT EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
SWAMGR   EQU   0
PARMLIST EQU   LCTPARM2
SSOBADDR EQU   PARMLIST
ENDLIST  EQU   SSOBADDR
PROTKEY  EQU   LCTPARM1
SPLNSAVE EQU   LCTPARM3
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTRAC   EQU   CVTS01+644
CVTJTERM EQU   CVTS01+672
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCBACT  EQU   JSCBSEC3+88
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
TIOENTRY EQU   TIOT1+24
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
*                                      START UNREFERENCED COMPONENTS
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00149 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00145 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00144 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOEDDNM EQU   TIOENTRY+4
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00130 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00129 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00001 EQU   SSOBADDR
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
QMRBN    EQU   SWAQMPA+12
@NM00200 EQU   SWAQMPA+1
QMPACL   EQU   QMPCL+1
QMPNC    EQU   QMPCMNC
QMPCM    EQU   QMPCMNC
QMEIA    EQU   QMPA+28
QMWTQ    EQU   QMPA+24
QMRSD1   EQU   QMPA+22
QMTID    EQU   QMPA+20
QMLNK    EQU   QMPA+18
QMPRI    EQU   QMPA+17
@NM00199 EQU   QMSTA
QMSJNL   EQU   QMSTA
@NM00198 EQU   QMSTA
QMTPY    EQU   QMPA+15
QMNOT    EQU   QMPA+14
QMTLN    EQU   QMPA+12
QMTST    EQU   QMPA+11
QMFLT    EQU   QMPA+9
QMPEB    EQU   QMNAM+4
QMCAN    EQU   QMNAM
@NM00197 EQU   @NM00195+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00196 EQU   SCTABCND
@NM00194 EQU   INSMSCT+173
@NM00193 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00192 EQU   INSMSCT+168
SCTCATCT EQU   INSMSCT+166
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00191 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTPGMNM EQU   INSMSCT+108
SCTTIOT  EQU   INSMSCT+105
@NM00190 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00189 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00188 EQU   SCTBCT
SCTGOTTR EQU   INSMSCT+100
SCTSMF   EQU   INSMSCT+96
@NM00187 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00186 EQU   SCTSDPTY
@NM00185 EQU   SCTSDPTY
SCTNIUSL EQU   INSMSCT+92
@NM00184 EQU   INSMSCT+90
SCTMSSZE EQU   INSMSCT+88
SCTPCAT  EQU   INSMSCT+84
SCTLDSTB EQU   INSMSCT+80
SCTSRBT  EQU   INSMSCT+76
SCTMSADR EQU   INSMSCT+72
@NM00183 EQU   INSMSCT+71
SCTXBTTR EQU   INSMSCT+68
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
SCTGOSTP EQU   SCTSTYPE
@NM00182 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
@NM00181 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
@NM00180 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00179 EQU   INSMSCT+36
@NM00178 EQU   INSMSCT+35
SCTAFACT EQU   INSMSCT+32
SCTDDNT  EQU   INSMSCT+28
@NM00177 EQU   INSMSCT+27
SCTLSIOT EQU   INSMSCT+24
@NM00176 EQU   INSMSCT+23
SCTANSCT EQU   INSMSCT+20
@NM00175 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00174 EQU   INSMSCT+15
SCTFSIOT EQU   INSMSCT+12
SCTLALOC EQU   INSMSCT+10
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
EAADDRBT EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
SCTDISKA EQU   INSMSCT
ACTACCNT EQU   IEFAACTB+32
ACTJNFLD EQU   IEFAACTB+31
ACTJTIME EQU   IEFAACTB+28
ACTPRGNM EQU   IEFAACTB+8
@NM00173 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
@NM00172 EQU   INJMJCT+175
JCTVULDP EQU   INJMJCT+172
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTUSER  EQU   INJMJCT+160
JCTSSD   EQU   INJMJCT+157
@NM00171 EQU   INJMJCT+156
JCTSRBT  EQU   INJMJCT+152
JCTJMRJD EQU   INJMJCT+149
JCTJMRJT EQU   INJMJCT+146
JCTJMRSS EQU   INJMJCT+143
JCTJMRTL EQU   INJMJCT+140
JCTJMRCL EQU   INJMJCT+139
JCTJMROP EQU   INJMJCT+138
JCTJMRD  EQU   INJMJCT+137
JCTJMR   EQU   INJMJCT+134
JCTCKIDT EQU   INJMJCT+118
JCTCKIDL EQU   INJMJCT+117
@NM00170 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00169 EQU   INJMJCT+115
JCTSSTR  EQU   INJMJCT+112
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00168 EQU   JCTJSB
JCTVOLSQ EQU   INJMJCT+110
JCTNRCKP EQU   INJMJCT+108
JCTNTRK  EQU   INJMJCT+107
JCTCKTTR EQU   INJMJCT+104
JCTDEVT  EQU   INJMJCT+100
@NM00167 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTSNUMB EQU   INJMJCT+95
JCTEQREG EQU   INJMJCT+92
@NM00166 EQU   INJMJCT+91
JCTDETDA EQU   INJMJCT+88
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTNARST EQU   JCTRSW2
JCTSYSCK EQU   JCTRSW2
@NM00165 EQU   JCTRSW1
JCTCKFT  EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
JCTWARMS EQU   JCTRSW1
@NM00164 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00163 EQU   INJMJCT+53
JCTSMRBA EQU   INJMJCT+44
@NM00162 EQU   INJMJCT+43
JCTACTAD EQU   INJMJCT+40
@NM00161 EQU   INJMJCT+39
JCTJCTX  EQU   INJMJCT+36
@NM00160 EQU   INJMJCT+35
JCTSDKAD EQU   INJMJCT+32
JCTJCSMF EQU   INJMJCT+31
JCTGDGNT EQU   INJMJCT+28
@NM00159 EQU   INJMJCT+27
JCTPDIP  EQU   INJMJCT+24
JCTJTPTN EQU   INJMJCT+16
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00158 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
INCMSTS  EQU   JCTJSTAT
@NM00157 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00156 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTIDENT EQU   INJMJCT+3
JCTDSKAD EQU   INJMJCT
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESUNITS EQU   JESCT+4
@NM00155 EQU   JESCT
SSIBSUSE EQU   SSIB+32
SSIBRSV1 EQU   SSIB+28
SSIBDEST EQU   SSIB+20
SSIBSSNM EQU   SSIB+8
SSIBRESV EQU   SSIB+7
@NM00154 EQU   SSIBFLG1
SSIBPJES EQU   SSIBFLG1
SSIBLEN  EQU   SSIB+4
SSIBID   EQU   SSIB
@NM00153 EQU   SSRQ+7
@NM00152 EQU   SSRQFLG1
@NM00151 EQU   SSRQ+2
SSJTRSV1 EQU   SSJT+3
@NM00150 EQU   SSJTFLG1
SSOBLEN  EQU   SSOB+4
SSOBID   EQU   SSOB
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00148 EQU   CHSHORT+84
@NM00147 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00146 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHUNIT   EQU   CHAIN+24
CHPCOI   EQU   CHPARM
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
TIOCNJOB EQU   TIOT1
@NM00143 EQU   RTNEXAD
@NM00142 EQU   RTNEXNM
RTNEXID  EQU   RTNEXT+1
RTNEXLK  EQU   RTNEXT
IELCOM   EQU   IELEXHDR+4
IELXTLEN EQU   IELEXHDR
@NM00141 EQU   IELOPTS+7
IELSWAS  EQU   IELOPTS+6
IELNSYS  EQU   IELOPSW3
@NM00140 EQU   IELOPSW3
@NM00139 EQU   IELOPSW3
IELTSIZ  EQU   IELOPTS+4
IELOENQU EQU   IELOPSW2
IELONORC EQU   IELOPSW2
@NM00138 EQU   IELOPSW2
@NM00137 EQU   IELOPSW2
@NM00136 EQU   IELOPSW2
@NM00135 EQU   IELOPSW2
IELCRF   EQU   IELOPSW2
IELTIMEF EQU   IELOPSW2
@NM00134 EQU   IELOPSW1
IELICMDF EQU   IELOPSW1
IELONEJF EQU   IELOPSW1
IELCANF  EQU   IELOPSW1
@NM00133 EQU   IELOPSW1
@NM00132 EQU   IELOPSW1
IELDWFF  EQU   IELOPSW1
IELDPSWA EQU   IELOPSW1
IELOPLEN EQU   IELOPTS
@NM00131 EQU   IELLAST
IELEND   EQU   IELLAST
IELSTEPL EQU   IELLIST+16
IELRTNA  EQU   IELLIST+12
IELCSCB  EQU   IELLIST+4
IELSSOBA EQU   IELLIST
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00128 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00127 EQU   IEZJSCB
@NM00126 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00125 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00124 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00123 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00122 EQU   LCT+436
LCTLBWAP EQU   LCT+428
@NM00121 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00120
LCTRFB1  EQU   LCT+419
@NM00119 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBSM EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00118 EQU   LCTJCTDA+3
LCTSTEPL EQU   LCT+400
@NM00117 EQU   LCT+364
@NM00116 EQU   LCTJSCB+1
@NM00115 EQU   LCTOPSW3
@NM00114 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00113 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00112 EQU   LCTOPSW3
@NM00111 EQU   @NM00107+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
@NM00110 EQU   LCTOPSW2
@NM00109 EQU   LCTOPSW2
@NM00108 EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00106 EQU   LCTEXIT+1
@NM00105 EQU   LCTOPSW1
@NM00104 EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00103 EQU   LCTOPSW1
@NM00102 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00101 EQU   LCTTSRB4
@NM00100 EQU   LCT+340
@NM00099 EQU   LCTSPIL+3
@NM00098 EQU   LCTALCFG
@NM00097 EQU   LCTALCFG
@NM00096 EQU   LCTALCFG
@NM00095 EQU   LCTALCFG
@NM00094 EQU   LCTALCFG
@NM00093 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00092 EQU   ECBLIST+1
@NM00091 EQU   ECBLIST
@NM00090 EQU   LCT+284
@NM00089 EQU   LCTATLST+1
@NM00088 EQU   LCTATLST
@NM00087 EQU   LCTJOBLB+1
@NM00086 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00085 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00084 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00083 EQU   LCTTJTU4
@NM00082 EQU   @NM00081+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00080 EQU   LCTSREG+1
@NM00079 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00078 EQU   LCTSMBAD+1
@NM00077 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
LCTSNUMB EQU   LCT+58
@NM00076 EQU   LCTJFCBH
@NM00075 EQU   LCTJFCBH
@NM00074 EQU   LCTJFCBH
@NM00073 EQU   LCTJFCBH
@NM00072 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00071 EQU   LCTCMCBA+1
@NM00070 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
@NM00069 EQU   LCTPSPAR+1
@NM00068 EQU   LCTPSPAR
@NM00067 EQU   LCTWORKA+3
@NM00066 EQU   LCTSCTAD+1
@NM00065 EQU   LCTSCTAD
@NM00064 EQU   LCTJCTAD+1
@NM00063 EQU   LCTJCTAD
@NM00062 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00054
@NM00061 EQU   @NM00054
@NM00060 EQU   @NM00054
@NM00059 EQU   @NM00054
@NM00058 EQU   @NM00054
@NM00057 EQU   @NM00054
@NM00056 EQU   @NM00054
@NM00055 EQU   @NM00054
@NM00053 EQU   LCTTCBAD+1
@NM00052 EQU   LCTTCBAD
@NM00051 EQU   LCTSRTAD+1
@NM00050 EQU   LCTSRTAD
@NM00049 EQU   LCTQDRTY+1
@NM00048 EQU   LCTQDRTY
MSSPARE  EQU   BASES01+48
MSUCBAL  EQU   BASES01+44
MSUCBPR  EQU   BASES01+40
MSBOBECB EQU   BASES01+36
MSSJQ    EQU   BASES01+32
MSECB    EQU   BASES01+28
MSPBP    EQU   BASES01+24
MSERM    EQU   BASES01+22
MSPASS   EQU   BASES01+14
MSVRB    EQU   BASES01+6
MSQHR    EQU   MSFHF
@NM00047 EQU   MSFHF
MSPSDT   EQU   MSFHF
MSREPLYB EQU   MSFHF
MSFAX    EQU   MSFHF
MSTTT    EQU   MSFHF
MSCSD    EQU   MSFHF
MSNMF    EQU   MSFHF
MSJNF    EQU   MSSSA
MSYOUT   EQU   MSNWP
MSNRP    EQU   MSSSA
MSSRDR   EQU   MSREOF
MSWRLOG  EQU   MSSSA
MSNUPSW  EQU   MSSSA
MSWRPEN  EQU   MSSSA
MSSSSIPL EQU   MSINLSW
MSSUM    EQU   MSECBFL
MSMCR    EQU   MSECBFL
MSYSOUT  EQU   MSECBFL
MSYSIN   EQU   MSECBFL
MSATTN   EQU   MSECBFL
MSWTL    EQU   MSECBFL
MSWTO    EQU   MSECBFL
MSEXT    EQU   MSECBFL
MSCCS    EQU   MSPFG
MSBSP    EQU   MSPFG
MSSYT    EQU   MSPFG
MSSYN    EQU   MSPFG
MSICR    EQU   MSPFG
MSCMC    EQU   MSPFG
MSPNB    EQU   MSPFG
MSDATE   EQU   MSPFG
@NM00046 EQU   MSBTN
MSTN     EQU   MSBTN
@NM00045 EQU   MSBTN
@NM00044 EQU   MSBTN
MSSO     EQU   MSBTN
MSROLFLG EQU   MSBTN
MSCANFLG EQU   MSBTN
MSCONFLG EQU   MSBTN
MSPNIP   EQU   MSNTAL
MSQNIP   EQU   MSNTAL
MSCURE34 EQU   MSNTAL
@NM00043 EQU   MSNTAL
@NM00042 EQU   MSNTAL
@NM00041 EQU   MSNTAL
@NM00040 EQU   MSNTAL
MSNIP    EQU   MSNTAL
@NM00039 EQU   MS1BASEX+40
@NM00038 EQU   MS1BASEX+20
@NM00037 EQU   MS1BASEX
@NM00036 EQU   BASE+128
MSLGJSCB EQU   BASE+124
@NM00035 EQU   MSSTRTSW
MSSTRTP  EQU   MSSTRTSW
MSSTRTW  EQU   MSSTRTSW
@NM00034 EQU   MSWTRSW
MSWTRP   EQU   MSWTRSW
MSWTRW   EQU   MSWTRSW
@NM00033 EQU   MSWLOGSW
MSWLOGP  EQU   MSWLOGSW
MSWLOGW  EQU   MSWLOGSW
@NM00032 EQU   MSCLOSSW
MSCLOSP  EQU   MSCLOSSW
MSCLOSW  EQU   MSCLOSSW
MSLOGLMT EQU   @NM00031+1
MSLOGCLS EQU   @NM00031
BAASCB   EQU   BASE+100
MSSMFPRM EQU   BASE+96
MSCOMMND EQU   BASE+92
BASP12   EQU   BASE+90
BASTCNT  EQU   BASE+88
BASESCT  EQU   BASE+86
BAJNCNT  EQU   BASE+84
BASUBECB EQU   BASE+80
BALOGCOM EQU   BASE+76
BADACNT  EQU   BASE+74
BATACNT  EQU   BASE+72
BAJBNR   EQU   BASE+64
BASP11   EQU   BASE+62
BALCCNT  EQU   BASE+61
BADUMPID EQU   BASE+60
BABCMAX  EQU   BASE+58
BAMONTR2 EQU   BASE+57
@NM00030 EQU   BAMONITR
BAMACTVE EQU   BAMONITR
@NM00029 EQU   BAMONITR
@NM00028 EQU   BAMONITR
@NM00027 EQU   BAMONITR
@NM00026 EQU   BAMONITR
BASPACE  EQU   BAMONITR
BADSN    EQU   BAMONITR
BADSO    EQU   BASE+52
BALOGECB EQU   BASE+48
@NM00025 EQU   BASPBYTE
@NM00024 EQU   BASPBYTE
@NM00023 EQU   BASPBYTE
@NM00022 EQU   BASPBYTE
@NM00021 EQU   BASPBYTE
BAMASCH  EQU   BASPBYTE
BATRACE  EQU   BASPBYTE
BAMSSTAR EQU   BASPBYTE
@NM00020 EQU   MSLOGST
@NM00019 EQU   MSLOGST
MSLOGSTA EQU   MSLOGST
MSLOGIPL EQU   MSLOGST
MSLOGDAR EQU   MSLOGST
MSLOGCOM EQU   MSLOGST
MSLOGTHD EQU   MSLOGST
MSLOGENQ EQU   MSLOGST
BAMIPAR2 EQU   BASE+44
BAMINPAR EQU   BASE+42
BAICTR   EQU   BASE+38
@NM00018 EQU   BASE+37
BADSET   EQU   BARSW
BANOSET  EQU   BARSW
BAMIDNT  EQU   BARSW
BAHR     EQU   BARSW
BAVU     EQU   BARSW
BAINTSET EQU   BARSW
MSTODWTO EQU   BARSW
BAIN     EQU   BARSW
BACV     EQU   BASE+32
@NM00017 EQU   BALOG
@NM00016 EQU   BALOG
@NM00015 EQU   BALOG
@NM00014 EQU   BALOG
@NM00013 EQU   BALOG
@NM00012 EQU   BALOG
@NM00011 EQU   BALOG
BALOGINT EQU   BALOG
MSLOGSVC EQU   BALGSTAT
BAPRC    EQU   BASE+20
BAQ      EQU   BASE+16
BAIPLCC  EQU   @NM00009+2
@NM00010 EQU   @NM00009
BAIPL    EQU   BASE+12
BALAD    EQU   BASE+8
BATRM    EQU   BASE+4
BACHN    EQU   BASE
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00008 EQU   CVTFIX+248
@NM00007 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
RCVTEXTA EQU   RCVT+150
RCVTUVOL EQU   RCVT+144
RCVTUADS EQU   RCVT+100
RCVTDSN  EQU   RCVT+56
RCVTNREC EQU   RCVT+54
RCVTNDSS EQU   RCVTSTAT
RCVTNLS  EQU   RCVTSTAT
RCVTDSNL EQU   RCVT+52
RCVTISTL EQU   RCVT+48
RCVTBAM  EQU   RCVT+44
RCVTXLEN EQU   RCVT+40
RCVTRUCB EQU   RCVT+36
RCVTRDX  EQU   RCVT+32
RCVTRCX  EQU   RCVT+28
RCVTRIX  EQU   RCVT+24
RCVTHDR  EQU   RCVT+20
RCVTTEMP EQU   RCVT+16
RCVTINDX EQU   RCVT+12
RCVTDEB  EQU   RCVT+8
RCVTDCB  EQU   RCVT+4
RCVTID   EQU   RCVT
@NM00006 EQU   @NM00005
@NM00004 EQU   MSGRTNHD
@NM00003 EQU   MSGDSECT+49
@NM00002 EQU   MSGDSECT
*                                      END UNREFERENCED COMPONENTS
@RF00159 EQU   @RC00137
@ENDDATA EQU   *
         END   IEFSD066,(C'PLS1225',0701,76091)
