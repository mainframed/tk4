         TITLE 'IEFSD263, INITIATOR ATTACH ROUTINE'
IEFSD263 CSECT
* SD63010 A                                                    @ZA05673
* A STATEMENTS NEAR LABEL SETPRIV                              @ZA11857
* A STATEMENTS NEAR LABEL BYPASS                               @ZA11857
* A STATEMENTS NEAR LABEL CHKCSCB                              @ZA11857
* A STATEMENTS NEAR LABEL NOFREER                              @ZA11857
* D STMTS WHICH WERE ADDED FOR ZA11857 NEAR CHKCSCB & NOFREER  @ZA16879
* A STMTS FOLLOWING SECTION 'TAKE PRE FREEPART EXIT'           @ZA16879
* CHANGED SECTION FOR 'ISSUE REQSWAP SYSEVENT'                 @ZA16879
* A SECTION FOR 'ISSUE TRANSWAP... '                           @ZA16879
* D STMTS NEAR LABEL GETREG                                    @ZA16879
* A STMTS NEAR LABEL SETPRIV                                   @ZA16879
* A STMTS IN 'SPECIAL PROCESSING FOR GETPART ERROR' SECTION    @ZA16879
* A CONSTANTS FOLLOWING DECLARE FOR 'ABENCODE'                 @ZA16879
*        SEE CHANGE LEVEL IN PROLOG FOR FLAGGING INFORMATION.
**********************************************************************
*
*   MODULE NAME= IEFSD263
*
*   DESCRIPTIVE NAME= ATTACH MODULE
*
*   COPYRIGHT= NONE
*
*   STATUS= SU7 PTF                                            @ZA16879
*
*   FUNCTION= GET A REGION FOR THE JOB STEP IF REQUIRED. ATTACH
*   THE JOB STEP, WAIT ON THE EOT AND CANCEL ECB'S,
*   AND EVENTUALLY DETACH THE JOB STEP.
*
*      OPERATION=
*      1. TAKE THE PRE-FREEPART EXIT INDICATED BY THE IXL       YM00047
*
*      1A. IF THE JOB STEP IS AUTHORIZED TO USE THE 1ST, 2ND   @ZA16879
*      OR 'NOT 2ND' LEVEL PREFERRED STORAGE SET THE APPROPRI-  @ZA16879
*      ATE BITS IN THE ASCB.                                   @ZA16879
*                                                              @ZA16879
*      1B. IF THE JOB STEP IS V=R OR NON-SWAPPABLE, ISSUE      @ZA16879
*      SYSEVENT 'TRANSWAP'.  WAIT ON AN ECB, WHICH WILL BE     @ZA16879
*      POSTED WHEN ALL PROCESSING CAUSED BY THE TRANSWAP IS    @ZA16879
*      COMPLETE.                                               @ZA16879
*
*      1C. IF THE JOB STEP IS NOT V=R, NOT NONSWAPPABLE, AND   @ZA16879
*      THE 1ST LEVEL PREFERRED STORAGE USAGE IS REQUESTED,     @ZA16879
*      ISSUE SYSEVENT 'REQSWAP'.  WAIT ON AN ECB, WHICH WILL   @ZA16879
*      BE POSTED WHEN ALL PROCESSING CAUSED BY THE REQSWAP     @ZA16879
*      IS COMPLETE.                                            @ZA16879
*                                                              @ZA16879
*      2. FREE THE REGION.                                       Y02669
*
*      3. IF NO GWT EXISTS, GET A V=V REGION OF THE DEFAULT      Y02669
*      SIZE. THEN CONTINUE WITH STEP 9.                          Y02669
*
*      4. IF A GWT EXISTS, A SPECIAL REGION IS REQUIRED.         Y02669
*      (A GWT WILL EXIST ONLY IF ONE OF THE FOLLOWING IS TRUE:)  Y02669
*
*         A. SUBPOOL 242 IS INDICATED IN THE GWT (IE, V=R)       Y02669
*
*         B. A NON-ZERO REGION SIZE IS INDICATED IN THE GWT      Y02669
*         (ZERO WOULD INDICATE THE DEFAULT).                     Y02669
*
*         C. A SPECIFIC ADDRESS IS GIVEN IN THE GWT (IE, A       Y02669
*         CHECKPOINT RESTART).                                   Y02669
*
*      THE PROCESSING REQUIRED TO GET A SPECIAL REGION IS        Y02669
*      DESCRIBED IN STEPS 6 - 8.                                 Y02669
*
*      6. ISSUE GETMAIN, TO GET THE REGION INDICATED BY THE    @ZA16879
*         GWT.                                                 @ZA16879
*
*         A. IF THE RC=0, PROCEED WITH STEP 9.
*
*         B. IF THE RC=4 OR 12, CONTINUE WITH STEP 7.
*
*         C. FOR ANY OTHER RETURN CODE, CONTINUE WITH STEP 8.
*
*      7. ISSUE MESSAGE IEFO92I IF IT HAS NOT PREVIOUSLY BEEN    Y02669
*      ISSUED FOR THAT STEP. THEN WAIT ON THE GETPART AND CANCEL Y02669
*      ECB'S (LONG WAIT).                                        Y02669
*
*         A. IF THE CANCEL ECB IS POSTED, ISSUE FREEPART TO      Y02669
*         DELETE THE REQUEST AND GET A V=V REGION OF THE DEFAULT Y02669
*         SIZE. CONTINUE WITH STEP 10.                           Y02669
*
*         B. IF THE GETPART ECB IS POSTED WITH A CODE OF 0, THE  Y02669
*         REQUEST IS SATISFIED SO PROCEED WITH STEP 9.           Y02669
*
*         C. IF THE GETPART ECB IS POSTED WITH A CODE OF 4,      Y02669
*         CONTINUE WITH STEP 6 TO RETRY THE GETPART.             Y02669
*
*         D. IF THE GETPART ECB IS POSTED WITH A CODE OF 16,     Y02669
*         ISSUE A FREEPART TO DELETE THE REQUEST. IF THE REQUEST Y02669
*         WAS NOT FOR A SPECIFIC REGION ADDRESS, CONTINUE WITH   Y02669
*         STEP 6 TO RETRY THE GETPART. IF THE REQUEST WAS FOR A  Y02669
*         SPECIFIC REGION ADDRESS, RETRY IS NOT PRACTICAL SO     Y02669
*         CONTINUE WITH STEP 8.                                  Y02669
*
*      8. GET A V=V REGION OF THE DEFAULT SIZE. ISSUE EITHER     Y02669
*      IEF085I OR IEF186I, DEPENDING UPON WHETHER OR NOT THE     Y02669
*      REQUEST WAS FOR A SPECIFIC REGION ADDRESS. SET A          Y02669
*      GETPART-ERROR INDICATOR IN THE GWT.                       Y02669
*
*      9. IF A V=R REGION WAS GOTTEN, STORE THE BEGINNING        Y02669
*      ADDRESS OF THE REGION AND THE SIZE IN THE CSCB (FOR       Y02669
*      DISPLAY JOBS).                                            Y02669
*
*      9A. TAKE THE PRE-ATTACH EXIT AS INDICATED BY THE IXL.     Y02669
*
*      10. SET TASK NON-CANCELABLE, IF INDICATED BY LCT.
*
*      11. CALL IEFSMFAT TO BUILD THE TCTIOT.
*
*      12. MOVE THE USER PARAMETER AREA FROM SP 253 TO SP 0.
*
*      13. IF THE GETPART HAS FAILED, CONTINUE PROCESSING WITH   Y02669
*      STEP 27.                                                  Y02669
*
*      15. ATTACH THE JOB STEP. SAVE THE CURRECT ASCB PRIORITY
*      IN IEFPARAM. THEN ISSUE THE SYSEVENT FOR 'INITATT,'       Y02655
*      PASSING THE FOLLOWING INFORMATION:                        Y02655
*        .     THE PERFORMANCE GROUP NUMBER FROM IEFPARAM OR 0,  Y02655
*              IF THE LCT INDICATES THE TASK IS PRIVILEGED.      Y02655
*        .     THE MEMORY DISPATCHING PRIORITY, AS CALCULATED BY Y02655
*              IEFSD103 AND SAVED IN IEFPARAM.                   Y02655
*        .     SET FLAG IN REGISTER 1 TO INDICATE AUTHORITY    @ZA16879
*              TO ISSUE OKSWAP AND DONTSWAP FOR A NONSWAPPABLE @ZA16879
*              JOB STEP.                                       @ZA16879
*        .     IF THE ATTACH WAS NOT SUCCESSFUL ISSUE AN ABEND  YM07020
*              FOR DIAGNOSTIC PURPOSES,  THE INITIATOR ESTAE    YM07020
*              WILL TAKE CARE OF CLEAN UP AND PROVIDE A DUMP.   YM07020
*
*      15A. CLEAR BIT ASCBCEXT IN CASE IT IS ON.                 Y02669
*
*      16. CLEAR THE ELAPSED TIME FIELDS IN THE ASCB. IF THE     Y02669
*      STEP IS TO BE TIMED, SET THE STEP TIME LIMIT IN THE ASCB  Y02669
*      AND TURN OFF THE INDICATOR IN THE ASCB WHICH PREVENTS     Y02669
*      CHECKING OF TIME LIMITS. INITIALIZE THE FIELD IN THE ASCB Y02669
*      WHICH CONTAINS THE WAIT TIME LIMIT.                       Y02669
*
*      17. IF THE CANCEL ECB HAS BEEN POSTED, SKIP TO STEP 20.
*
*      18. ISSUE STATUS TO MAKE THE JOB STEP TCB DISPATCHABLE.
*
*      19. ISSUE WAIT ON A LIST OF THE EOT AND CANCEL ECB'S.    YM06276
*
*      20. IF THE CANCEL ECB IS POSTED, ISSUE STATUS TO MAKE THE
*      DAUGHTER(S) NON-DISPATCHABLE AND INVOKE MGCR FOR ABTERM.
*      THEN RETURN TO STEP 19, UNTIL THE EOT ECB IS POSTED OR
*      THE CANCEL ECB IS POSTED A SECOND TIME. (BECAUSE OF USER
*      ESTAE/ESTAI WITH TERM=YES, MULTIPLE CANCEL MAY BE
*      NECESSARY.)
*
*      21. (RESUME PROCESSING HERE AFTER THE EOT                 Y02669
*      ECB IS POSTED.)
*
*      21A. SET THE CPU-TASK AFFINITY MASK IN THE ASCB TO BINARY Y02651
*      1'S, TO INDICATE THE MEMORY CAN NOW BE RUN ON ANY ONLINE  Y02651
*      CPU (IN CASE AFFINITY HAD BEEN REQUIRED FOR THE STEP).    Y02651
*
*      22. PUT THE CURRENT TCB POINTER IN THE PQE. (IN CASE THE
*      INITIATOR IS TERMINATING, IT IS NECESSARY TO PUT A
*      POINTER TO STC'S TCB IN THE PQE. IF ANY REGIONS WERE
*      GOTTEN DURING THE LIFE OF THE INITIATOR, THE TCB WILL BE
*      POINTED TO BY THE PQE. THE TCB POINTER MUST BE UPDATED
*      BECAUSE THE INITIATOR IS ABOUT TO BE DETACHED.)
*
*      25. IF THE STEP WAS TIMED, SAVE THE STEP TIME ALLOWED,    Y02669
*      SRB TIME USED,                                            Y02669
*      AND STEP TIME USED FROM THE ASCB AND CALCULATE THE STEP   Y02669
*      TIME REMAINING.                                           Y02651
*
*
*      26. SAVE THE TASK COMPLETION CODE IN THE LCT.            YM01961
*
*      27. TAKE THE POST=ATTACH EXIT AS INDICATED BY THE IXL.    Y02669
*
*      29. IF THE GETPART HAS FAILED:                            Y02669
*
*         A. SET THE STEP TIME USED TO 0.                       YA02494
*
*         B. FREE THE GWT.                                       Y02669
*
*         C. BUILD A PARAMETER LIST FOR TERMINATION AS IF THE
*         STEP HAD FAILED WITH AN 822 SYSTEM COMPLETION CODE.
*
*         D. IF SYSEVENT TRANSWAP HAD PREVIOUSLY BEEN ISSUED   @ZA16879
*         OR IF ANY OF ASCB1LPU, ASCB2LPU, OR ASCBN2LP ARE     @ZA16879
*         TURNED ON, ISSUE SYSEVENTS 'INITATT' AND 'INITDET'.  @ZA16879
*         THE INITATT IS ISSUED TO ALLOW FOR THE INITDET WHICH @ZA16879
*         MUST BE ISSUED TO CLEANUP FROM THE GETPART ERROR.    @ZA16879
*
*         E. CONTINUE WITH STEP 33.                              Y02669
*
*      30. BUILD PARAMETER LIST FOR IEFSD164 WITH INFORMATION
*      FOR THE DUMMY TCB.
*
*      32. FREE THE CURRENTLY OWNED REGION AND GET A V=V REGION  Y02669
*      OF THE DEFAULT SIZE. IF THEY ARE NON-ZERO, CLEAR THE CSCB Y02669
*      FIELDS WHICH CONTAIN THE SIZE AND BEGINNING ADDRESS OF    Y02669
*      THE REGION.  ISSUE SYSEVENT                             @ZA16879
*      'INITDET' TO INDICATE THAT A JOB STEP IS ABOUT TO BE    @ZA03278
*      DETACHED. PASS THE FORMER ASCB PRIORITY,WHICH HAD BEEN  @ZA03278
*      SAVED IN IEFPARAM BY THIS MODULE. CLEAR THE TIME LIMIT  @ZA03278
*      AND ELAPSED TIME LIMIT FIELDS IN THE ASCB. DETACH THE   @ZA03278
*      DAUGHTER TASK. FREE THE GWT IF IT EXISTS.               @ZA03278
*
*      33. EXIT TO IEFSD164.
*
*   NOTES
*
*      CHARACTER CODE DEPENDENCIES= NONE
*
*      DEPENDENCIES= MODULE IEFIB650 CONTAINS MESSAGE TEXTS.
*
*      RESTRICTIONS= NONE
*
*      REGISTER CONVENTIONS= STANDARD
*
*      PATCH-LABEL= PATCH
*
*   MODULE TYPE= PROCEDURE
*
*      PROCESSOR= ASSEMBLER (XF)
*
*      MODULE SIZE= 4096 BYTES
*
*      ATTRIBUTES= PAGED LPA, ZERO PSW PROTECT KEY, REENTRANT,
*      REUSABLE, REFRESHABLE, SUPERVISOR STATE
*
*   ENTRY POINT= IEFSD263
*
*      PURPOSE= SAME AS FUNCTION
*
*      LINKAGE= FROM IEFSD103, VIA BRANCH
*
*      INPUT DATA= REGISTER 1 POINTS TO IEFPARAM
*                  IEFLCTAD POINTS TO LCT
*                  LCTPARM3 POINTS TO GWT
*                  CHCECB IS CANCEL ECB
*
*      REGISTERS SAVED= NONE
*
*      REGISTER CONTENTS DURING PROCESSING=
*
*      REGISTER 5 FREQUENTLY POINTS TO THE CURRENT TCB.
*      REGISTER 11 FREQUENTLY POINTS TO THE SUBTASK TCB. OTHER
*      REGISTERS ARE ALSO USED TO ADDRESS THE TCB.
*
*      REGISTERS RESTORED= NONE
*
*   EXIT - NORMAL= TO IEFSD164 VIA BRANCH
*
*      CONDITIONS= EITHER NO SPECIAL REGION WAS REQUIRED OR A
*      REGION WAS REQUIRED AND WAS SUCCESSFULLY GOTTEN.
*
*      OUTPUT DATA= REGISTER 1 POINTS TO IEFPARAM
*                   LCTPARM1 CONTAINS THE FOLLOWING:
*                      TCBFLGS
*                      TCT POINTER
*                      DISPATCHING PRIORITY
*                      TASK COMPLETION CODE
*
*      RETURN CODES= NONE
*
*   EXIT - ERROR= TO IEFSD164 VIA BRANCH
*
*      CONDITIONS= UNABLE TO OBTAIN REQUIRED REGION FOR JOB STEP.
*
*      OUTPUT DATA= REGISTER 1 POINTS TO IEFPARAM
*                   LCTPARM1 CONTAINS THE FOLLOWING:
*                      TCBFLGS (TCBFA SET ON)
*                      TCT POINTER
*                      DISPATCHING PRIORITY
*                      TASK COMPLETION CODE OF 822
*
*      RETURN CODES= NONE
*
*   EXIT - ABEND                                                YM07020
*
*      CONDITIONS= ERROR RETURN FROM ATTACH WHILE TRYING        YM07020
*                  TO ATTACH THE JOB STEP.                      YM07020
*      OUTPUT DATA= REGISTER 1 CONTAINS THE ABEND CODE.         YM07020
*                   REGISTER 15 CONTAINS THE ATTACH ERROR CODE. YM07020
*
*      RETURN CODES= NONE                                       YM07020
*
*   EXTERNAL REFERENCES=
*
*      ROUTINES= IEFSMFAT VIA BALR, TO BUILD TCTIOT AND
*      INITIALIZE TCT CORE MAP. REGISTER 0 POINTS TO CURRENT
*      TCB AND REGISTER 1 POINTS TO TIOT POINTER.
*      OUTPUT= REG 15 POINTS TO TCT.
*
*      THIS ROUTINE WILL TAKE THE FOLLOWING GENERALIZED EXITS,
*      IF INDICATED BY THE INITIATOR EXIT LIST OF THE IEL.
*
*         PRE-FREEPART                                          YM00047
*         INPUT= LCT                                            YM00047
*         OUTPUT= NONE                                          YM00047
*         RETURN CODES= NONE                                    YM00047
*
*         PRE-INVOCATION                                         Y02669
*         INPUT= LCT, TIOT                                       Y02669
*         OUTPUT= NONE                                           Y02669
*         RETURN CODES= 0 (SUCCESSFUL), NON-ZERO (NOT            Y02669
*            SUCCESSFUL)                                         Y02669
*
*         POST-INVOCATION
*         INPUT= REG 1 POINTS DIRECTLY TO LCT
*         OUTPUT= NONE
*         RETURN CODES= 0 (SUCCESSFUL), NON-0 (NOT
*            SUCCESSFUL)
*
*      DATA AREAS= IEFIB650 (CONTAINS MESSAGE TEXTS)
*
*      CONTROL BLOCKS= PQE, TCT, LCT, CSCB, JSCB, TIOT,
*      TCB, ASCB, IEL, GDA (GLOBAL DATA AREA), PSA             @ZA11857
*
*      TABLES= GWT (GETPART WORK TABLE)
*              ATTACH PARAMETER LIST
*              IEFPARAM (TO PASS DATA BETWEEN INITIATOR MODULES)
*
*      MACROS= GETMAIN, FREEMAIN, ATTACH, STATUS, WAIT, POST,    Y02655
*              MGCR, DETACH, SYSEVENT, XCTL, LINK, ABEND        YM07020
*
*      ENQUEUE RESOURCES= NONE
*
*      CHANGE LEVEL= SEE MODID MACRO AT BEGINNING OF MODULE
*      CODE HAS BEEN ADDED FOR THE FOLLOWING SUPPORT CODES:
*                                                                Y02669
*                                                                Y02655
*                                                                Y02652
*                                                                Y02651
*                                                              @Z30DNPJ
*      CODE HAS BEEN ADDED FOR THE FOLLOWING APARS:
*                                                              @ZA03278
*                                                              @ZA05650
*                                                              @ZA05662
*                                                              @ZA05673
*                                                              @ZA11857
*                                                              @ZA16879
*
*   MESSAGES=
*   IEF092I JJJ SSS PPP WAITING FOR XXXXXK REAL STORAGE          Y02669
*   IEF085I REGION UNAVAILABLE, ERROR CODE=XX                    Y02669
*   IEF186I REGION UNAVAILABLE FOR RESTART, ERROR CODE=XX        Y02669
*
*   ABEND CODE = X'0BB'  ATTACH FAILED                          YM07020
*
**********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         BALR  R12,0                    SET BASE REGISTER
         USING *,R12
         USING  IEFPARAM,R8
         USING  IEFLOT,R4
***********************************************************************
*                                                                     *
*  THIS SECTION OF CODE IS FOR PROVIDING A METHOD OF IDENTIFYING      *
*                THIS MODULE IN A MEMORY DUMP                         *
*                                                                     *
IEFSD263 MODID                                                   Y01886
*                                                                     *
***********************************************************************
         EJECT
         LR    R8,R1               SAVE PTR. TO IEFPARAM
         L     R4,IEFLCTAD         LOAD LCT POINTER              Y02669
*****************************************************************
*
*        TAKE THE PRE FREEPART EXIT INDICATED BY THE IEL        YM00047
*
*****************************************************************
         LA    R3,LCTPARM4         SET UP FOR PARM LIST         YM00047
*                                  WHILE REG 4 POINTS TO LCT    YM00047
         L     R4,LCTENTR          LOAD POINTER TO IEL          YM00047
         USING IEL,R4                                           YM00047
         L     R4,IELEXIT          LOAD PTR TO INIT EXIT LIST   YM00047
*                                  TO PASS TO SUBROUTINE        YM00047
         DROP  R4                                               YM00047
         LA    R2,IELPRFRE         INDICATE PRE FREEPART EXIT   YM00047
         MVC   0(X4,R3),IEFLCTAD   SET POINTER TO LCT IN LIST   YM00047
         BAL   R9,SETEXIT          CALL SUBROUTINE WHICH TAKES  YM00047
*                                  EXIT                         YM00047
         L     R4,IEFLCTAD                                      YM00047
         USING IEFLOT,R4                                        YM00047
***************************************************************@ZA16879
*                                                              @ZA16879
*        SET PREFERRED STORAGE BITS IN ASCB                    @ZA16879
*                                                              @ZA16879
***************************************************************@ZA16879
         TM    LCTPUBYT,LCT1LPU+LCT2LPU+LCTN2LP                @ZA16879
*                                  ANY PREFERRED USAGE WANTED? @ZA16879
         BZ    TESTRAN             NO, TEST IF TRANSWAP NEC.   @ZA16879
         ICM   R7,MSKBYT0,LCTPUBYT PUT FLAG BYTE IN BYTE 0     @ZA16879
         N     R7,E0000000         ZERO UNWANTED BITS          @ZA16879
         L     R10,LCTASCBA        GET ADDR OF ASCB            @ZA16879
         USING ASCB,R10            ESTAB. ADDRESSABILITY       @ZA16879
         L     R6,ASCBRSM          GET ORIGINAL VALUE          @ZA16879
MODASCB  EQU   *                                               @ZA16879
         LR    R5,R6               OBTAIN COPY TO MODIFY       @ZA16879
         OR    R5,R7               MODIFY: TURN ON APPROPRIATE @ZA16879
*                                  FLAGS                       @ZA16879
         CS    R6,R5,ASCBRSM       STORE NEW FLAGS UNLESS ASCB @ZA16879
*                                  VALUES WERE CHANGED         @ZA16879
         BNE   MODASCB             TRY AGAIN IF NO SWAP MADE   @ZA16879
         DROP  R10                                             @ZA16879
TESTRAN  EQU   *                                               @ZA16879
*****************************************************************
*
*        ISSUE TRANSWAP SYSEVENT IF JOB STEP IS TO BE          @ZA16879
*        NON-SWAPPABLE OR V=R                                  @ZA16879
*                                                              @ZA16879
*****************************************************************
         L     R11,LCTPARM3        ADDRESS OF GWT              @ZA16879
         USING GETPTWT,R11                                     @ZA16879
         CLI   GPSUBP,GPREAL       IS STEP V=R?                @ZA16879
         BE    TRANSWAP            YES, ISSUE TRANSWAP         @ZA16879
         DROP  R11                                             @ZA16879
         TM    LCTPUBYT,LCTNSWP    NON-SWAPPABLE?              @ZA16879
         BNO   REQSWAP             NO, SKIP TRANSWAP           @ZA16879
TRANSWAP EQU   *                                               @ZA16879
*        THE SRM WILL POST THE ECB POINTED TO BY REG 1 WHEN THE YM03531
*        TRANSWAP PROCESSING IS COMPLETE.                      @ZA16879
         LA    R1,PARSRMEC         POINT TO THE ECB IN LSQA     YM03531
*        (THE ECB WAS CLEARED WHEN IEFPARAM WAS GOTTEN.)        YM03531
*
         SYSEVENT TRANSWAP         ISSUE 'TRANSWAP'            @ZA16879
*
*        CHECK THE RETURN CODE FROM THE SRM, WHICH IS BYTE 3 OF YM03531
*        REG 1. IF THE RETURN CODE WAS NON-ZERO, (I.E. X'04'), @ZA16879
*        THEN THE TRANSWAP WAS ALREADY ISSUED, SO BYPASS       @ZA16879
*        WAITING ON THE ECB, BECAUSE IT WILL NOT BE POSTED.     YM03531
*        NOTE: IF TRANSWAP PROCESSING FINDS THE ADDRESS        @ZA16879
*        SPACE NONSWAPPABLE FOR A REASON OTHER THAN A PREVIOUS @ZA16879
*        TRANSWAP, THE ISSUER IS ABENDED EXCEPT WHEN THE       @ZA16879
*        MASTER SCHEDULER IS BEING INITIATED. WHEN THE MASTER  @ZA16879
*        SCHEDULER IS BEING INITIATED, EVEN THOUGH ITS ADDRESS @ZA16879
*        SPACE IS NONSWAPPABLE, THE TRANSWAP PROCESSING PASSES @ZA16879
*        A RETURN CODE=4.                                      @ZA16879
*                                                              @ZA16879
         CLM   R1,B'0001',RC0                                   YM03531
         BNZ   TSWPCOMP            DO NOT WAIT IF REJECTED     @ZA16879
*        WAIT TO INSURE THAT THE SWAP IS COMPLETE.              YM03531
         LA    R1,PARSRMEC                                      YM03531
         WAIT  ECB=(R1)                                         YM03531
*        CHECK POST CODE FROM TRANSWAP                         @ZA16879
         CLC   PARSRMEC(X4),ZEROPOST  IS POST CODE = 0  ?      @ZA16879
         BNE   TSWPERR                NO, PROCESS ERROR        @ZA16879
TSWPCOMP EQU   *                                               @ZA16879
         OI    LCTINTS2,LCTTSWPC      TRANSWAP COMPLETE        @ZA16879
         B     DONTSWAP               PROCEED                  @ZA16879
TSWPERR  EQU   *                                               @ZA16879
*        ISSUE ABEND 35F TO INDICATE TRANSWAP ERROR.  IEFIB620 @ZA16879
*        WILL GET CONTROL TO TAKE DUMP, THEN IEFIB621 WILL     @ZA16879
*        ISSUE ABEND 922, AND THIS JOB WILL FAIL.              @ZA16879
         ABEND X'35F',,,SYSTEM        ISSUE ABEND 35F          @ZA16879
         SPACE 2
***************************************************************@ZA16879
*                                                              @ZA16879
*        ISSUE REQSWAP SYSEVENT IF NECESSARY                   @ZA16879
*                                                              @ZA16879
***************************************************************@ZA16879
*                                                              @ZA16879
*        REQSWAP IS ISSUED IF THE JOB STEP IS NOT NONSWAPPABLE @ZA16879
*        AND NOT V=R, AND THE 1ST LEVEL PREFERRED USAGE IS     @ZA16879
*        SPECIFIED.                                            @ZA16879
*                                                              @ZA16879
REQSWAP  EQU   *                                               @ZA16879
         TM    LCTPUBYT,LCT1LPU    IS 1ST LEVEL PREF. REQUIRED @ZA16879
         BZ    DONTSWAP            NO, BYPASS REQSWAP          @ZA16879
         LA    R1,PARSRMEC         POINT TO THE ECB IN LSQA    @ZA16879
*        (THE ECB WAS CLEARED WHEN IEFPARAM WAS GOTTEN.)       @ZA16879
*                                                              @ZA16879
         SYSEVENT REQSWAP          ISSUE 'SWAP' SYSEVENT       @ZA16879
*                                                              @ZA16879
*        CHECK THE RETURN CODE FROM THE SRM,WHICH IS BYTE 3 OF @ZA16879
*        REG 1.  IF THE RETURN CODE WAS NON-ZERO, THE REQSWAP  @ZA16879
*        WAS REJECTED, THEREFORE BYPASS WAITING ON THE ECB,    @ZA16879
*        BECAUSE IT WILL NOT BE POSTED.                        @ZA16879
*                                                              @ZA16879
         CLM   R1,B'0001',RC0      TEST RETURN CODE            @ZA16879
         BNZ   DONTSWAP            DO NOT WAIT IF REJCTED      @ZA16879
*        WAIT TO INSURE REQSWAP IS COMPLETE.                   @ZA16879
         LA    R1,PARSRMEC         POINT TO ECB                @ZA16879
         WAIT  ECB=(R1)                                        @ZA16879
         SPACE 2
*        CONTINUE NORMAL PROCESSING WHEN COMPLETE.              YM03531
DONTSWAP EQU   *                                                 Y02669
         EJECT
*****************************************************************
*
*        GET A REGION
*
*****************************************************************
*                                                                Y02669
*        A SPECIAL REGION IS GOTTEN ONLY IF ONE OR MORE OF THE   Y02669
*        FOLLOWING IS TRUE:                                      Y02669
*              A SPECIFIC REGION SIZE WAS REQUESTED              Y02669
*              A V=R REGION WAS REQUESTED                        Y02669
*              A CHECKPOINT RESTART IS BEING DONE (SPECIFIC ADDR)Y02669
*        HOWEVER, A FREEPART/GETPART IS ALWAYS DONE TO INSURE    Y02669
*        THAT NO STORAGE IS ALLOCATED WITHIN THE REGION WHEN THE Y02669
*        JOB STEP IS ATTACHED EXCEPT FOR:                        Y02669
*              THE USER PARM FIELD (GOTTEN BY THIS MODULE)       Y02669
*              ANY STORAGE GOTTEN BY THE PRE-ATTACH EXIT         Y02669
*              THE REGISTER SAVE AREA GOTTEN BY ATTACH           Y02669
         L     R0,SP247            SET V=V SUBPOOL              YM00408
         LA    R1,POSITIVE         SET POSITIVE TO INDICATE A   YM00408
*                                  FREEMAIN BUT NOT A SUBPOOL   YM00408
*                                  FREEMAIN                     YM00408
         FREEMAIN R,LV=(0),A=(1)   ISSUE FREEPART               YM00408
         L     R11,LCTPARM3        ADDRESS OF GWT                  I272
         USING GETPTWT,R11                                       Y02669
         LA    R11,X0(R11)        ZERO HIGH ORDER BYTE             I272
         LTR   R11,R11             DOES GWT EXIST                  I272
         BNZ   GETREG              GET A SPECIAL REGION          Y02669
*        GET A V=V REGION OF THE DEFAULT SIZE                    Y02669
         L     R0,SP247                                          Y02669
         GETMAIN R,LV=(0)                                        Y02669
         B     SD06305             SKIP ELSE CLAUSE (GETTING A   Y02669
*                                  SPECIAL REGION)               Y02669
GETREG   EQU   *                                                 Y01054
         L     R1,LCTTCBAD         GET POINTER TO CURRENT TCB    Y01054
         L     R1,TCBJSCB-TCB(R1)  GET POINTER TO JSCB           Y01054
         USING IEZJSCB,R1                                        Y01054
         XC    JSCBSECB(X4),JSCBSECB  CLEAR ECB IN CASE IT WAS   Y01054
*                                  POSTED AFTER A PREVIOUS       Y01054
*                                  GETPART                       Y01054
*        (THE ECB MUST NOT BE CLEARED AFTER THE GETPART IS       Y02669
*        ISSUED, BECAUSE THE ECB MAY BE POSTED ANY TIME AFTER    Y02669
*        THE GETPART IS ISSUED.)                                 Y02669
         DROP  R1                                                Y01054
         SPACE
SKIPNSWP EQU   *                                                YM03531
         LR    R1,R11              POINT TO GWT                  Y01054
         GETMAIN  ,MF=(E,(1))      GET REGION                    Y01054
         LTR   R15,R15                                           Y01054
         BZ    SD06305             SUCCESSFUL GETPART            Y02669
         STC   R15,GPERROR         SAVE ERROR CODE FOR MESSAGE   Y02669
         CH    R15,RC4             CHECK FOR RC=4                Y02669
         BE    RC4OR12             GO WAIT FOR REGION            Y01054
         CH    R15,RC12            CHECK FOR RC=12               Y02669
         BNE   ERROR               UNSUCCESSFUL, WRITE ERROR MSG Y01054
*****************************************************************
*
*        ISSUE MESSAGE IEF092I PRIOR TO WAITING FOR A REGION
*
*****************************************************************
RC4OR12  EQU   *                                                 Y01054
         TM    GPFLGS,GPMSG        CHECK WHETHER IEFO92I WAS     Y01054
*                                  WRITTEN                       Y01054
         BO    REGWAIT             SKIP WRITING MESSAGE TWICE    Y01054
         OI    GPFLGS,GPMSG        SET MESSAGE IEFO92I SWITCH    Y01054
         L     R0,GETMAIN1         GET STORAGE FOR MESSAGE       Y01054
         GETMAIN R,LV=(0)                                        Y01054
         LR    R9,R1                                             Y01054
         USING MSG092I,R9                                        Y02669
         L     R14,LCTIMSG         GET POINTER TO IEFIB650       Y01054
         LA    R15,MSG3(0,R14)     GET POINTER TO ENTRY IN TABLE Y01054
*                                  AT BEGINNING OF IEFIB650      Y01054
         AH    R14,X2(0,R15)       GET ADDRESS OF MSG IEF092I    Y01054
         IC    R15,X1(0,R15)       GET LENGTH OF MESSAGE         Y01054
         BCTR  R15,0               REDUCE LENGTH FOR EXECUTE     Y01054
         EX    R15,MOVE            MOVE MSG TO BUFFER            Y01054
         L     R15,IEFTIOTA        GET PTR TO JOB STEP TIOT PTR  Y01054
         L     R15,0(0,R15)        GET POINTER TO JOB STEP TIOT  Y01054
         USING TIOT,R15                                          Y01054
         MVC   MSG3J,TIOCNJOB      MOVE JOBNAME TO MSG           Y01054
         MVC   MSG3S,TIOCSTEP      MOVE STEPNAME                 Y01054
         MVC   MSG3P,TIOCSTEP+8    MOVE PROCSTEP NAME            Y01054
         L     R1,GPSIZEH0         GET REGION SIZE FOR MESSAGE   Y02669
         LA    R1,0(0,R1)          CLEAR END OF LIST INDICATOR   Y02669
         LTR   R1,R1                                             Y02669
         BNZ   NOTDEFLT            REGION SIZE WAS SPECIFIED     Y02669
*                                  OTHERWISE GET DEFAULT VALUE   Y02669
         L     R15,CVTPTR                                        Y02669
         USING CVTMAP,R15                                        Y02669
         L     R15,CVTGDA          POINT TO GLOBAL DATA AREA     Y02669
         USING GDA,R15                                           Y02669
         L     R1,VRDREG           GET V=R DEFAULT SIZE          Y02669
NOTDEFLT EQU   *                                                 Y02669
         SRL   R1,TWOTO10          CONVERT FROM BYTES TO         Y02669
*                                  NUMBER OF 1024 UNITS ('K')    Y02669
         MH    R1,H10              THIS MULTIPLICATION HAS THE   Y02669
*              EFFECT OF SHIFTING LEFT ONE DECIMAL POSITION.     Y02669
*              THEREFORE, WHEN THE NUMBER IS CONVERTED TO        Y02669
*              DECIMAL, THE LOW ORDER DIGIT CAN BE DISCARDED.    Y02669
*              (OTHERWISE, IT WOULD BE NECESSARY TO HAVE         Y02669
*              CHARACTER DEPENDENT CODE.)                        Y02669
         CVD   R1,PACKED           CONVERT REGION SIZE TO PACKED Y02669
*                                  DECIMAL                       Y02669
         UNPK  ZONED,PACKED        UNPACK REGION SIZE            Y02669
         MVC   MSG3R,ZONED         MOVE THE SIZE TO MESSAGE (THE Y02669
*                                  EXTRA BYTE WITH +0 IS LEFT)   Y02669
         DROP  R15                                               Y02651
         WTO   MF=(E,(R9))                                       Y01054
         L     R0,GETMAIN1         FREE MESSAGE BUFFER           Y01054
         FREEMAIN R,LV=(0),A=(R9)                                Y01054
*                                                                Y01054
*        SET UP ECB LIST                                         Y01054
         L     R7,LCTTCBAD         GET POINTER TO CURRENT TCB    Y01054
         L     R7,TCBJSCB-TCB(R7)                                Y01054
         USING IEZJSCB,R7                                        Y01054
         LA    R1,JSCBSECB                                       Y01054
         ST    R1,GPGPECBP                                       Y01054
         L     R9,LCTQDRTY         GET POINTER TO CSCB           Y01054
         USING IEFCSCB,R9                                        Y01054
         LA    R1,CHCECB                                         Y01054
         ST    R1,GPCECBP                                        Y01054
         OI    GPCECBP,GPBIT       SET END OF ECB LIST           Y01054
         OI    CHACT,CHCL          SET TASK CANCELABLE DURING    Y02669
*                                  WAIT (IN CASE NOT ALREADY SO) Y02669
REGWAIT  EQU   *                                                 Y01054
*****************************************************************
*
         WAIT  ECBLIST=GPECBLST    WAIT FOR REGION              YM03531
*
*****************************************************************
         L     R9,LCTQDRTY         (THE CSCB PTR. IS NOT         Y02669
*                                  INITIALIZED IF MESSAGE        Y02669
*                                  IEF092I IS NOT WRITTEN THIS   Y02669
*                                  PATH.)                        Y02669
         TM    CHCECB,POSTBIT                                    Y01054
         BNO   NOTCANCL            CANCEL ECB WAS NOT POSTED     Y02669
*                                                                Y02669
*        CANCEL ECB WAS POSTED                                   Y02669
*                                                                Y02669
*        ISSUE FREEPART TO DELETE REQUEST                        Y02669
         L     R0,SP242            V=R                           Y02669
*        (A REQUEST FOR A REAL REGION IS THE ONLY CONDITION     YM00408
*        WHICH CAN RESULT IN A WAIT FOR A REGION.)              YM00408
         LA    R1,POSITIVE         SET POSITIVE TO INDICATE A   YM00408
*                                  FREEMAIN BUT NOT A SUBPOOL   YM00408
*                                  FREEMAIN                     YM00408
         FREEMAIN R,LV=(0),A=(1)   FREE REGION                   Y02669
*                                                                Y02669
*        GET A V=V REGION OF THE DEFAULT SIZE                    Y02669
         L     R0,SP247                                          Y02669
         GETMAIN R,LV=(0)          GET REGION                    Y02669
         B     SD06305             CONTINUE MAINLINE PROCESSING  Y02669
NOTCANCL EQU   *                                                 Y02669
         TM    JSCBSECB,POSTBIT                                  Y01054
         BNO   REGWAIT             NEITHER ECB WAS POSTED        Y01054
*                                                                Y02669
*        GETPART ECB WAS POSTED                                  Y02669
*                                                                Y02669
         XR    R14,R14                                           Y01054
         CH    R14,JSCBSECB+2      CHECK FOR POST CODE 0         Y01054
         BE    SD06305             GETPART SUCCESSFUL            Y02669
         LA    R14,X4                                            Y01054
         CH    R14,JSCBSECB+2      CHECK FOR POST CODE 4         Y01054
         BE    GETREG              RETRY GETPART                 Y01054
*                                                                Y02669
*        IF NOT 0 OR 4, THE POST CODE MUST BE 16. FOR A POST     Y02669
*        CODE OF 16, PROCESSING WILL DEPEND ON WHETHER THE       Y02669
*        REQUEST WAS FOR A SPECIFIC ADDRESS (CHECKPOINT RESTART) Y02669
*        OR A NON-SPECIFIC ADDRESS.                              Y02669
*                                                                Y02669
*        IF NON-SPECIFIC, THE REQUEST SHOULD BE RE-ISSUED (AFTER Y02669
*        FREEPART IS ISSUED TO DELETE THE REQUEST). THE          Y02669
*        SUPERVISOR WILL ATTEMPT TO SATISFY THE REQUEST WITH A   Y02669
*        DIFFERENT ADDRESS RANGE. IF THE REQUEST CANNOT BE       Y02669
*        SATISFIED, THE SUPERVISOR WILL PROVIDE A RETURN CODE    Y02669
*        OTHER THAN 0, 4, OR 12.                                 Y02669
*                                                                Y02669
*        IT IS NOT DESIRABLE TO RE-ISSUE A SPECIFIC REQUEST,     Y02669
*        BECAUSE A DIFFERENT ADDRESS RANGE CANNOT BE USED.       Y02669
*                                                                Y02669
*        IN EITHER CASE, THE INITIAL REQUEST MUST BE DELETED BY  Y02669
*        A FREEPART.                                             Y02669
*                                                                Y02669
         L     R0,SP242            V=R                           Y02669
*        (A REQUEST FOR A REAL REGION IS THE ONLY CONDITION     YM00408
*        WHICH CAN RESULT IN A WAIT FOR A REGION.)              YM00408
         LA    R1,POSITIVE         SET POSITIVE TO INDICATE A   YM00408
*                                  FREEMAIN BUT NOT A SUBPOOL   YM00408
*                                  FREEMAIN                     YM00408
         FREEMAIN R,LV=(0),A=(1)   FREE REGION                   Y02669
         L     R1,GPADDH0                                        Y02669
         LTR   R1,R1               CHECK FOR GETPART SPECIFIC    Y02669
         BZ    GETREG              RETRY REQUEST IF NOT SPECIFIC Y02669
*                                  (THE SUPERVISOR WILL TRY A    Y02669
*                                  DIFFERENT ADDRESS RANGE.)     Y02669
         MVC   GPERROR,JSCBSECB+3  SAVE POST CODE FOR MESSAGE    Y02669
ERROR    EQU   *                                                 Y01054
*****************************************************************
*
*        AN ERROR INDICATOR WAS RETURNED BY GETPART
*
*****************************************************************
*        GET A V=V REGION OF THE DEFAULT SIZE                    Y02669
         L     R0,SP247                                          Y02669
         GETMAIN R,LV=(0)          GET REGION                    Y02669
         OI    LCTPARM3,X1         SET ERROR INDICATOR SO TASK   Y01054
*                                  WILL NOT BE SET DISPATCHABLE  Y01054
*                                                                Y01054
*        THE FOLLOWING PROCESSING IS TO ISSUE MESSAGE IEF085I OR Y02669
*        MESSAGE IEF186I.                                        Y02669
         L     R0,GETMAIN1         GET MESSAGE BUFFER            Y02669
         GETMAIN R,LV=(0)                                        Y01054
         DROP  R9                                                Y02669
         LR    R9,R1                                             Y01054
*        CONVERT ERROR CODE TO DECIMAL BEFORE CHECKING WHICH     Y02669
*        MESSAGE IS TO BE ISSUED.                                Y02669
         XR    R14,R14                                           Y02669
         IC    R14,GPERROR                                       Y02669
         MH    R14,H10             THIS MULTIPLICATION HAS THE   Y02669
*              EFFECT OF SHIFTING LEFT ONE DECIMAL POSITION.     Y02669
*              THEREFORE, WHEN THE NUMBER IS CONVERTED TO        Y02669
*              DECIMAL, THE LOW ORDER DIGIT CAN BE DISCARDED.    Y02669
*              (OTHERWISE, IT WOULD BE NECESSARY TO HAVE         Y02669
*              CHARACTER DEPENDENT CODE.)                        Y02669
*                                                                Y02669
*        THE DSECT USED TO BUILD MESSAGE IEF092I IS USED HERE    Y02669
*        ONLY TO CONVERT THE ERROR CODE TO DECIMAL.              Y02669
         USING MSG092I,R9                                        Y02669
         CVD   R14,PACKED                                        Y02669
         UNPK  ZONED(X3),PACKED                                  Y02669
         L     R14,LCTIMSG         GET POINTER TO IEFIB650       Y01054
         L     R1,GPADDH0                                        Y02669
         LTR   R1,R1               CHECK FOR GETPART SPECIFIC    Y02669
         BZ    ISSUE085            NOT SPECIFIC                  Y02669
         LA    R15,MSGA(0,R14)     GET POINTER TO ENTRY IN TABLE Y02669
*                                  AT BEGINNING OF IEFIB650      Y02669
         AH    R14,X2(0,R15)       GET ADDRESS OF MSG IEF186I    Y02669
         MVC   0(MSGAE,R9),0(R14)  MOVE MESSAGE TO BUFFER        Y02669
         MVC   MSGAC(X2,R9),ZONED  MOVE ERROR CODE               Y02669
         B     ISSUEMSG            ISSUE MESSAGE                 Y02669
ISSUE085 EQU   *                                                 Y02669
         LA    R15,MSG9(0,R14)     GET POINTER TO ENTRY IN TABLE Y02669
*                                  AT BEGINNING OF IEFIB650      Y02669
         AH    R14,X2(0,R15)       GET ADDRESS OF MSG IEF085I    Y02669
         MVC   0(MSG9E,R9),0(R14)  MOVE MESSAGE                  Y02669
         MVC   MSG9C(X2,R9),ZONED  MOVE ERROR CODE               Y02669
ISSUEMSG EQU   *                                                 Y02669
         WTO   MF=(E,(R9))                                       Y01054
         L     R0,GETMAIN1         FREE MESSAGE BUFFER           Y02669
         FREEMAIN R,LV=(0),A=(R9)                                Y01054
*****************************************************************
*
*        END OF PROCESSING TO GET A REGION
*
*****************************************************************
         EJECT
SD06305  EQU   *                                                   CR17
*****************************************************************
*
*        IF A V=R REGION IS SUCCESSFULLY GOTTEN, STORE THE SIZE  Y02669
*        AND BEGINNING ADDRESS OF THE REGION IN THE CSCB FOR     Y02669
*        DISPLAY JOBS.                                           Y02669
*
*****************************************************************
         L     R5,LCTQDRTY                                      YM01857
         USING IEFCSCB,R5                                       YM01857
         L     R7,LCTTCBAD         POINT TO CURRENT TCB          Y02669
         USING TCB,R7                                          @ZA05650
         TM    TCBFLGS6,TCBRV      CHECK FOR V=R               @ZA05650
         BNO   NOSTORE             DO NOT STORE DESCRIPTION OF THE
*                                  REGION IF IT HASN'T BEEN GOTTEN
*                                  YET                         @ZA05650
         L     R7,TCBPQE-TCB(R7)   POINT TO DUMMY PQE            Y02669
         USING PQESECT,R7                                        Y02669
         L     R7,PQEFPQE          POINT TO REAL PQE             Y02669
*        THESE FIELDS MUST BE SET IN THIS ORDER SO DISPLAY       Y02669
*        JOBS WILL PICK UP EITHER BOTH A REGION SIZE AND A       Y02669
*        REGION ADDRESS OR NEITHER A REGION SIZE NOR A REGION    Y02669
*        ADDRESS.                                                Y02669
         MVC   CHRGNSZ,PQESIZE     MOVE SIZE                     Y02669
         MVC   CHRGNAD,PQEREGN     MOVE ADDRESS OF BEGINNING OF  Y02669
*                                  REGION                        Y02669
         DROP  R7                                                Y02669
NOSTORE  EQU   *                                                 Y02669
*****************************************************************Y02669
*                                                                Y02669
*        TAKE THE PRE-INVOCATION EXIT INDICATED BY THE IEL       Y02669
*                                                                Y02669
*****************************************************************Y02669
*        THE PRE-INVOCATION EXIT MUST BE TAKEN AFTER ANY         Y02669
*        FREEPART/GETPART IS DONE. THIS IS BECAUSE THE EXIT MAY  Y02669
*        LEAVE INFORMATION WITHIN THE REGION. (THE LOGON PRE-    Y02669
*        INVOCATION EXIT DOES LEAVE INFORMATION IN SP 0.)        Y02669
         LA    R3,LCTPARM1         SET UP FOR PARM LSIT WHILE    Y02669
*                                  REG 4 POINTS TO LCT           T02669
         L     R4,LCTENTR          LOAD POINTER TO IEL           Y02669
         USING IEL,R4                                            Y02669
         L     R4,IELEXIT          LOAD PTR TO INIT EXIT LIST    Y02669
         DROP  R4                                                Y02669
         LA    R2,IELPREIN         INDICATE PRE-INVOCATION EXIT  Y02669
         MVC   0(X4,R3),IEFLCTAD   SET POINTER TO LCT IN LIST    Y02669
         L     R1,IEFTIOTA         GET POINTER TO TIOT POINTER   Y02669
         MVC   X4(X4,R3),0(R1)     MOVE PTR TO TIOT TO LIST      Y02669
         BAL   R9,SETEXIT          CALL SUBROUTINE WHICH TAKES   Y02669
*                                  EXIT                          Y02669
         L     R4,IEFLCTAD                                       Y02669
         USING IEFLOT,R4                                         Y02669
         LTR   R10,R10             WAS ERROR CODE RETURNED       Y02669
         BZ    NORMA               ZERO RETURN CODE - CONTINUE    M3140
         L     R11,LCTENTR         GET ADDR OF IEL               Y02669
         USING IEL,R11             IEL ADDRESSABILITY            Y02669
         L     R11,IELEXIT         ADDR OF INIT EXIT LIST        Y02669
         DROP  R11                                               Y02669
         USING IELEXITS,R11        EXIT LIST ADDRESSABILITY      Y02669
         CLI   IELRTNCD,IELRTGD    CHECK WHETHER OTHER CODE WAS  Y02668
*                                  ALREADY STORED                Y02668
         BNE   LEAVERC             DO NOT DESTROY OLDER CODE     Y02668
         MVI   IELRTNCD,IELRTPRI   SET PRE-PROC ERROR IN IEL     Y02669
         MVI   IELRCXT,IELINIT     SET RETURN CODE ORIGIN AS     Y02669
*                                  'INITIATOR'                   Y02668
LEAVERC  EQU   *                                                 Y02668
         DROP  R11                                               Y02669
         LA    R1,CHCECB           ADDRESS OF CANCEL ECB          M3140
         L     R0,CAN622           CANCEL CODE OF 622             M3140
         POST  (1),(0)             POST CANCEL ECB                M3140
NORMA    EQU   *                                                  M3140
         TM    LCTOPSW1,LCTCANF    CHECK WHETHER TASK IS TO BE   Y01054
*                                  NON-CANCELABLE                Y01054
         BNO   LVCANCEL            LEAVE CANCELABLE              Y02669
         NI    CHACT,X'FF'-CHCL    SET NON-CANCELABLE            Y01054
         DROP  R5                                               YM00096
LVCANCEL EQU   *                                                 Y02669
*****************************************************************
*
*        CALL IEFSMFAT FOR SMF PROCESSING
*
*****************************************************************
*        THIS CHECK IS MADE PRIMARILY TO PREVENT A P/P FROM     YM03491
*        BEING CHARGED FOR THE USE OF STORAGE WHEN THE JOB      YM03491
*        STEP NEVER EVEN GOT ATTACHED (BECAUSE OF A GETPART     YM03491
*        ERROR). THE USE OF STORAGE IS CHARGED DURING THE TIME  YM03491
*        WHEN TCBSMFGF IS ON.                                   YM03491
         TM    LCTPARM3,X1         CHECK GETPART ERROR          YM03491
*                                  INDICATOR                    YM03491
         BO    SD63007             SKIP SMF PROCESSING          YM03491
         L     R0,IEFTCBAD         PASS PTR. TO TCB              Y02652
         L     R1,IEFTIOTA         PASS PTR. TO TIOT PTR.        Y02652
         L     R15,SMFAT                *                          SMF1
         BALR  R14,R15                  GO TO SMF TO BUILD TCTIOT  SMF1
         LTR   R9,R15                   IF THERE WAS SMF PRESENT   SMF1
*                                           FOR THIS JOB, R9 NOW   SMF1
*                                           POINTS TO TCT          SMF1
         USING SMFTCT,R9
         BZ    SD63007                  *
         MVC   TCTSW(1),LCTTMWRK+8      MOVE INDICATOR SET BY      SMF1
*                                           IEFSD162 OF WHETHER    SMF1
*                                           TIME LIMIT IS JOB OR   SMF1
*                                           STEP                   SMF1
*****************************************************************
*
*        MOVE USER PARM. FIELD FROM SP 253 TO SP 0
*
*****************************************************************
SD63007  EQU   *                        *
         L     R7,IEFUSADD           MOVE USER PARAMETER AREA FROM
*                                    SUBPOOL 253 TO SUBPOOL 0
         DROP  R4                                                Y02652
         L     R4,4(R7)            GET SIZE OF PARM FIELD         18428
         LA    R4,HEADER(0,R4)     ADD SIZE OF HEADER            Y02669
         LR    R0,R4                                             Y02669
         O     R0,REGPOOL          SET SUBPOOL                   Y02669
         GETMAIN R,LV=(0)            CORE FROM SUBPOOL ZERO
         LR    R0,R4          RESTORE LENGTH VALUE                 M409
         BCTR  R4,R0                 SUBTRACT ONE FROM R4
         EX    R4,IEFUSEP            MOVE USER PARM
         LA    R4,6(0,R1)          SET UP USER PARM
         ST    R4,0(0,R1)               AREA
         OI    0(R1),128                SET HIGH ORDER BIT TO ONE
         ST    R1,IEFUSADD         REPLACE USER PARM ADDR         M0204
         LR R1,R7                  LOAD ADDR OF USER PARM AREA
         L     R7,SPOOL253        FREE SUBPOOL 253                M3441
         OR    R0,R7
         FREEMAIN  R,LV=(0),A=(1)       FREE USER PARM IN 253
         L     R1,IEFUSADD         PASS PARM FIELD VIA ATTACH    Y02652
         L     R4,IEFLCTAD                                       Y02652
         L     R5,IEFTCBAD         PTR. TO INIT. TCB             Y02652
         L     R6,IEFTIOTA         PTR. TO P/P TIOT POINTER      Y02652
         USING IEFLOT,R4                                         Y02652
         TM    LCTPARM3,X1         CHECK ERROR INDICATOR         Y01054
         BO    NOATTACH            SKIP THE ATTACH IF GETPART    Y01054
*                                  ERROR                         Y01054
         EJECT
*****************************************************************
*
*        ATTACH JOB STEP
*
*****************************************************************
         MVC   PARTIOTB,TCBTIO-TCB(R5)  SAVE THE POINTER TO THE  Y02652
*                                       INITIATOR'S TIOT
*        (THE TIOT PTR. IS SAVED IN IEFPARAM SO IEFZB620 CAN
*        RESTORE THE INITIATOR TIOT PTR. IF NECESSARY.)
         MVC   TCBTIO-TCB(X4,R5),0(R6)  STORE PTR TO THE JOB STEP TIOT
*                                       INTO INITIATOR'S TCB FOR ATTACH
*                                       (R6 POINTS TO TIOT LIST)
         L     R15,IEFREMLS        LOAD PTR TO ATTACH LIST       Y02669
         ATTACH  MF=(E,(1)),SF=(E,(15))
*        THE STORAGE FOR THE ATTACH PARAMETER LIST IS GOTTEN BY  Y02652
*        IEFSD162 AND THE LIST IS INITIALIZED BY IEFSD103.       Y02652
*
*     TEST REGISTER 15 FOR A RETURN CODE OF ZERO TO SEE IF THE
*     ATTACH WAS SUCCESSFUL.  IF IT WAS NOT THEN ISSUE AN ABEND
*     FOR DIAGNOSTIC PURPOSES SINCE THIS IS AN UNUSUAL CONDITION.
*     THE INITIATOR ESTAE SHOULD TAKE CARE OF CLEAN UP AND
*     PROVIDE A DUMP.  REGISTER 15 WILL CONTAIN THE ERROR CODE
*     FROM ATTACH.                                              YM07020
         LTR   R15,R15             TEST FOR RETURN CODE FROM ATTACH
*                                                               YM07020
         BZ    SD263210            ZERO, CONTINUE               YM07020
         L     R1,ABENCODE         ATTACH DID NOT GO, LOAD ABEND CODE
*                                  IN TO REGISTER 1             YM07020
         ABEND (1),,,SYSTEM        ISSUE THE ABEND              YM07020
         SPACE 2
SD263210 LR    R11,R1              SAVE ATTACHED JOBSTEP TCB ADDR
         ST    R11,JOBSTCB         TCB ADDRESS OF JOB STEP        20030
         MVC   TCBTIO-TCB(X4,R5),PARTIOTB  RESTORE THE PTR. TO   Y02652
*                                       INITIATOR'S TIOT
         XR    R1,R1                                             Y02652
         ST    R1,PARTIOTB         CLEAR, SO THE INITIATOR TASK  Y02652
*                                  RECOVERY ROUTINE WILL NOT     Y02652
*                                  ATTEMPT TO RESTORE TIOT PTR.  Y02652
*****************************************************************
*
*        ISSUE SYSEVENT 'INITATT'                                Y02655
*
*****************************************************************
*        (REG 1 WAS JUST ZEROED)                                 Y02669
         TM    LCTINTSW,LCTPRIV    IS PROGRAM 'PRIVILEGED'       Y02655
         BO    SETPRIV             YES, PASS A PERFORMANCE GROUP Y02655
*                                  OF 0 TO INDICATE PRIVILEGED   Y02655
         IC    R1,PARPRFMF         PASS PERFORMANCE GROUP        Y02655
SETPRIV  EQU   *                                                 Y02655
         SLL   R1,S8               SHIFT PERFORMANCE GROUP TO    Y02655
*                                  BYTE 2                        Y02655
         L     R10,LCTASCBA                                      Y02655
         USING ASCB,R10                                          Y02655
         MVC   PAROMEMP,ASCBDP     SAVE CURRENT MEMORY PRIORITY  Y02655
         IC    R1,PARNMEMP         PASS NEW MEMORY PRIORITY      Y02655
         TM    LCTPUBYT,LCTNSWP    IF JOB STEP IS NON-         @ZA16879
*                                  SWAPPABLE, IT IS AUTHORIZED @ZA16879
*                                  TO ISSUE DONTSWAP & OKSWAP  @ZA16879
*                                                              @ZA16879
         BZ    SYSATTCH            SWAPPABLE: DO NOT AUTHORIZE @ZA16879
         O     R1,BYT1BIT6         SET FLAG AUTHORIZING        @ZA16879
*                                  DONTSWAP AND OKSWAP         @ZA16879
SYSATTCH EQU   *                                               @ZA16879
*
         SYSEVENT INITATT                                        Y02655
         OI    LCTINTS2,LCTATTC    INITATT HAS BEEN DONE       @ZA16879
*
*****************************************************************
*
*        SET UP JOB STEP TIME LIMIT
*
*****************************************************************
*
*        FIRST TURN OFF ASCBCEXT IN CASE IT IS ON. THE BIT IS    Y02669
*        SET BY THE SUPERVISOR IF EOT PROCESSING IS STARTED FOR  Y02669
*        THE JOB STEP TCB. THE BIT IS CHECKED TO PREVENT         Y02669
*        IEATLEXT FROM BEING SCHEDULED IF THE JOB STEP HAS       Y02669
*        ALREADY ABENDED. (IEATLEXT IS SCHEDULED IF THERE IS A   Y02669
*        TIME LIMIT OVERFLOW.)                                   Y02669
*        OBTAIN LOCAL LOCK WHILE UPDATING ASCB                 @ZA11857
         USING PSA,0                                           @ZA11857
         SETLOCK OBTAIN,TYPE=LOCAL,REGS=USE,MODE=UNCOND,               C
               RELATED=(ASCB)                                  @ZA11857
         NI    ASCBFLG2,X'FF'-ASCBCEXT                           Y02669
         SR    R7,R7               USED BOTH AS A SWITCH AND TO  Y02669
*                                  CLEAR FIELDS IN THE ASCB      Y02669
         XC    ASCBEJST,ASCBEJST   CLEAR ELAPSED TIME FIELD,     Y02669
*                                  EVEN IF STEP IS NOT TO BE     Y02669
*                                  TIMED                         Y02669
         XC    ASCBSRBT,ASCBSRBT   CLEAR SRB TIME USED           Y02669
         L     R3,LCTTSTL4         GET STEP TIME (IN .01 SEC.)   Y02669
         C     R3,HOURS24          CHECK FOR 24 HOURS            Y02669
         BL    SETTIME             SET TIME IF LIMIT LESS THAN   Y02669
*                                  THE MAXIMUM (24 HOURS)        Y02669
         ST    R3,LCTTSTR4         SET TIME REMAINING FIELD OF   Y02669
*                                  TIMER WORK AREA TO 1440 MIN
*                                  SO THAT IF THIS IS A CATALOGED
*                                  PROCEDURE THE REMAINING STEPS
*                                  WILL ALSO NOT BE TIMED
         ST    R7,LCTTSTU4         CLEAR TIME USED FOR           Y02669
*                                  IEFSD164 IF NOT TIMED         Y02669
         LA    R7,1                SET SWITCH TO INDICATE TIMER
*                                  WAS NOT SET
         B     BYPASS              BRANCH AROUND SETTING TIME LIMIT
SETTIME  EQU   *                                                 Y02669
*        LEAVE R7 = 0 TO INDICATE STEP WAS TIMED.                Y02669
         M     R2,TEN1000          CONVERT .01 SEC. TO .000001   Y02669
*                                  SECONDS (MICROSECONDS)        Y02669
         LR    R1,R3               SAVE BEFORE SHIFT, SO THE    YM03761
*                                  RESULT CAN BE ROUNDED        YM03761
         SRDL  R2,TWOTO20          CONVERT MICROSECONDS TO       Y02669
*                                  2 TO THE 20TH MICROSECONDS    Y02669
*        (THESE UNITS ARE EQUAL TO APPROXIMATELY 1.04 SECONDS.)  Y02669
         N     R1,ROUNDMSK         BIT 12 REPRESENTS THE MOST   YM03761
*                                  SIGNIFICANT BIT WHICH WILL   YM03761
*                                  NOT BE PRESENT IN THE        YM03761
*                                  ANSWER. IF IT IS ON, ROUND   YM03761
*                                  UP, BECAUSE THE BITS SHIFTED YM03761
*                                  OUT HAD A VALUE GREATER THAN YM03761
*                                  ONE HALF.                    YM03761
         BZ    NOROUND1            DO NOT ROUND                 YM03761
         A     R3,ROUNDUP          ROUND                        YM03761
NOROUND1 EQU   *                                                YM03761
         ST    R3,ASCBJSTL         SET TIME LIMIT IN ASCB        Y02669
*        SET THE WAIT TIME LIMIT FOR THE STEP IN THE ASCB. THE   Y02651
*        ASCB IS USED, BECAUSE THE FIELD IS UPDATED WHENEVER     Y02651
*        THE WAIT TIME LIMIT FOR A STEP EXPIRES AND IS EXTENDED. Y02651
         L     R15,CVTPTR                                        Y02651
         USING CVTMAP,R15                                        Y02651
         L     R15,CVTSMCA                                       Y02651
         USING SMCABASE,R15                                      Y02651
         MVC   ASCBSWTL,SMCAJWT    COPY WAIT TIME LIMIT          Y02651
         DROP R15                                                Y02651
         NI    ASCBFLG1,X'FF'-ASCBTOFF  INDICATE TIME LIMIT      Y02669
*                                  SHOULD BE CHECKED             Y02669
BYPASS   EQU   *
*        RELEASE LOCAL LOCK AFTER UPDATING ASCB                @ZA11857
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          C
               RELATED=(ASCB)                                  @ZA11857
         L     R2,CANECBAD        ADDRESS OF CANCEL ECB          A28953
         TM    X0(R2),POSTBIT     IF JOB HAS BEEN CANCELED BYPASS 20032
         BO    BYPASDSP                SETTING THE TCB DISPATHEABL20032
*****************************************************************
*
*        MAKE TASK DISPATCHABLE
*
*****************************************************************Y02669
         STATUS RESET,ND,(R11),(12),E                            Y01054
WAITAGN  EQU   *                                                  20032
         LA    R1,IEFECBLT        ADDRESS OF ECB LIST             20051
         WAIT  ECBLIST=(1)                                      YM06276
         EJECT
*****************************************************************
*
*        WAIT WHILE JOB STEP IS RUNNING
*
*****************************************************************
BYPASDSP EQU   *                                                  20032
         TM    0(R2),POSTBIT            WAS CANCEL SPECIFIED ?
         BZ    SD63010                  NO
*****************************************************************
*
*        PROCESS FOR CANCEL
*
*****************************************************************
*        THE STATUS SET,SD REPLACES THE STATUS STOP WHICH HAD    Y02669
*        BEEN LOCATED HERE BEFORE RELEASE 2. STATUS STOP WOULD   Y02669
*        NOT BE EFFECTIVE FOR A TASK FOR WHICH BIT TCBFX IS ON.  Y02669
*        (IF A TASK WITH BIT TCBFX ON WERE LOOPING IT WOULD      Y02669
*        CONTINUE LOOPING IF ONLY STATUS STOP IS ISSUED.) THE    Y02669
*        BIT MAY BE ON FOR AN SVRB OR AN IRB (PERHAPS AN         Y02669
*        ATTENTION EXIT).                                        Y02669
         STATUS SET,SD,(R11),(32)                                Y02669
         L     R3,LCTQDRTY             ADDRESS OF CSCB             I272
         USING IEFCSCB,R3          CSCB ADDRESSABLIITY             I272
         L     R1,X0(R2)          CANCEL ECB IN REGISTER         A42853
         LA    R1,0(0,R1)          CLEAR POST BIT                Y02652
         ST    R1,COMPCODE        CODE IN PARM LIST FOR SVC 34    20030
         OI    TCBFLGS2-TCB(R11),TCBFSTI INDIC NO STAE OPERATIONS  I272
         OI    CHSTS,CHABTERM      INDICATE ABTERM FOR SVC 34      I272
         LR    R15,R8             PARM LIST FOR SVC 34            20030
         LA    R1,X0(R3)           ADDRESS OF CSCB                 I272
         MGCR  (1),CHAIN                GO TO ABTERM VIA MASTER    I272
         XR    R1,R1                                            YM00083
         ST    R1,0(R2)            CLEAR CANCEL ECB BEFORE      YM00083
*                                  WAITING AGAIN                YM00083
         B     WAITAGN             WAIT FOR EOT ECB TO BE POSTED Y02669
*                                  (OR A SECOND POST OF THE      Y02669
*                                  CANCEL ECB)                   Y02669
SD63010  EQU   *                                                  20032
         L     R2,ATTECBAD         POINT TO EOT ECB              Y02652
         TM    0(R2),POSTBIT       CHECK WHETHER EOT IS POSTED   Y02652
         L     R2,CANECBAD         RESET POINTER TO CANCEL ECB @ZA05673
         BZ    WAITAGN             NO, RETURN AND RE-ISSUE WAIT  Y02652
*        (THIS BRANCH SHOULD NEVER BE TAKEN, BUT IT IS BETTER    Y02652
*        TO MAKE AN EXPLICIT CHECK. IF WE WAIT ON AN ECB WHICH   Y02652
*        HAS THE WAIT BIT ON, THE TASK WILL ABEND, WHICH IS      Y02652
*        DESIRABLE IF THE SITUATION EVER OCCURS.)                Y02652
*****************************************************************
*
*        EOT ECB HAS BEEN POSTED
*
*****************************************************************
         MVC   ASCBAFFN,NOAFFIN    SET TO INDICATE MEMORY CAN    Y02651
*                                  RUN ON ANY ONLINE CPU, IN     Y02651
*                                  CASE AFFINITY HAD BEEN SET    Y02651
*                                  FOR THE JOB STEP              Y02651
         L     R1,TCBPQE-TCB(R11)  GET DUMMY PQE PTR             A39401
*        IT IS NECESSARY TO CHECK FOR A 0 PQE PTR. BECAUSE      YM08312
*        THE PQE PTR. MAY BE CLEARED BY GETPART'S RECOVERY      YM08312
*        ROUTINE.                                               YM08312
         LTR   R1,R1                                            YM08312
         BZ    NOPQE                                            YM08312
         L     R1,X8(R1)           GET JOBSTEP PQE PTR           A39401
         LTR   R1,R1                                            YM08312
         BZ    NOPQE                                            YM08312
         USING PQESECT,R1          PQE ADDRESSABILITY            A39401
TCBMOVE  ST    R5,PQETCB           PUT INIT TCB PTR IN JOB PQE   A39401
         L     R1,PQEFPQE          GET PTR TO NEXT PQE           A39401
         LA    R1,X0(R1)           CLEAR HIGH-ORDER BYTE         A39401
         LTR   R1,R1               IS THERE ANOTHER PQE          A39401
         BNZ   TCBMOVE             YES...BRANCH                  A39401
NOPQE    EQU   *                                                YM08312
         L     R9,TCBTCT-TCB(R5)  GET PTR TO                       I272
         LA    R9,0(R9)                 TCT                         SMF
         LTR   R9,R9              DOES SMF APPLY                  M1255
         BZ    NOSMF              NO                              M1255
         NI    TCBTCTGF-TCB(R5),X'FF'-TCBSMFGF  TURN OFF INDIC SO M1255
*                                      TCT CORE TABLE WILL NOT BE M1255
*                                      UPDATED                    M1255
NOSMF    EQU   *                                                  M1255
*****************************************************************
*
*        SAVE TIME USED BY JOB STEP
*
*****************************************************************
         LTR   R7,R7                   CHECK TO SEE IF TIMER WAS SET
         BC    2,NOTEST                IF NOT BRANCH AROUND
         SPACE 2
         LM    R2,R3,ASCBEJST      GET ELAPSED TIME             YM03761
*        THE UNITS IN R2 ARE 2 TO THE TWENTIETH MICROSECONDS
*        (APPROX. 1.04 SEC.). THE UNITS IN R3 PROVIDE MORE
*        ACCURACY, BECAUSE THE ANSWER IS NEEDED IN HUNDREDTHS
*        OF A SECOND. TO CONVERT TO MICROSECONDS, THE CODE
*        SHOULD SHIFT LEFT 20 BITS (IE, MULTIPLY BY 2 TO THE
*        TWENTIETH). INSTEAD OF SHIFTING LEFT 20 BITS,
*        SHIFTING RIGHT 12 BITS PROVIDES AN EQUIVALENT
*        RESULT. BECAUSE THE HARDWARE USES AN EVEN-ODD PAIR
*        OF REGISTERS, THIS EQUIVALENT CALCULATION WORKS
*        PROPERLY, WHILE A SHIFT TO THE LEFT COULD LOSE
*        SIGNIFICANT BITS FROM R2. (THE SHIFT TO THE RIGHT
*        ONLY DROPS INSIGNIFICANT BITS FROM R3.)
         SRDL  R2,12                                            YM03761
         D     R2,TEN1000          CONVERT MICROSECONDS TO .01   Y02669
*                                  SECONDS                       Y02669
         C     R2,FIVE1000         CHECK WHETHER REMAINDER IS   YM03761
*                                  AT LEAST HALF OF DIVISOR     YM03761
         BL    NOROUND2            NO, DO NOT ROUND UP          YM03761
         A     R3,ROUNDUP          ROUND UP                     YM03761
NOROUND2 EQU   *                                                YM03761
         ST    R3,LCTTSTU4         SAVE ELAPSED TIME IN .01      Y02669
*                                  SECONDS                       Y02669
         SPACE 2
         LM    R2,R3,ASCBSRBT      GET SRB TIME USED            YM03761
         SRDL  R2,12               SEE COMMENT ON CONVERSION    YM03761
*                                  OF ELAPSED TASK TIME         YM03761
         D     R2,TEN1000          CONVERT MICROSECONDS TO .01   Y02669
*                                  SECONDS                       Y02669
         C     R2,FIVE1000         CHECK WHETHER REMAINDER IS   YM03761
*                                  AT LEAST HALF OF DIVISOR     YM03761
         BL    NOROUND3            NO, DO NOT ROUND UP          YM03761
         A     R3,ROUNDUP          ROUND UP                     YM03761
NOROUND3 EQU   *                                                YM03761
         ST    R3,LCTTSRB4         SAVE SRB TIME USED IN         Y02669
*                                  .01 MICROSECONDS              Y02669
         SPACE 2
         L     R3,ASCBJSTL         GET STEP TIME LIMIT INCLUDING Y02669
*                                  EXTENSIONS IN 2 TO THE        Y02669
*                                  TWENTIETH MICROSECONDS        Y02669
         SR    R2,R2               CLEAR FOR SHIFT               Y02669
         SLDL  R2,TWOTO20          CONVERT 2 TO THE TWENTIETH    Y02669
*                                  MICROSECONDS TO MICROSECONDS  Y02669
         D     R2,TEN1000          CONVERT MICROSECONDS TO .01   Y02669
*                                  SECONDS                       Y02669
         C     R2,FIVE1000         CHECK WHETHER REMAINDER IS   YM03761
*                                  AT LEAST HALF OF DIVISOR     YM03761
         BL    NOROUND4            NO, DO NOT ROUND UP          YM03761
         A     R3,ROUNDUP          ROUND UP                     YM03761
NOROUND4 EQU   *                                                YM03761
         ST    R3,LCTTSTL4         SAVE STEP TIME LIMIT IN .01   Y02669
*                                  SECONDS                       Y02669
         S     R3,LCTTSTU4         CALCULATE TIME REMAINING      Y02669
*        (IT WILL BE USED TO TIME SUBSEQUENT STEPS OF A PROC IF  Y02669
*        THE INDIVIDUAL STEPS DO NOT SPECIFY A TIME LIMIT.       Y02669
*        IF IT IS A NEGITIVE NUMBER NO STEP TIME REMAINS,       YM06129
*        STORE ZERO SO THE JOB WILL BE ENDED.)                  YM06129
         BNM   STREMAIN            TEST FOR MINUS-NO TIME LEFT  YM06129
         XR    R3,R3               SET NO JOB/STEP TIME REMAINS YM06129
STREMAIN ST    R3,LCTTSTR4         SAVE TIME REMAINING           Y02669
         SPACE 2
NOTEST   EQU   *
         SPACE 2
NOATTACH EQU   *                                                 Y02669
*        THE TASK'S RETURN CODE MUST BE SET BEFORE THE POST-    YM01961
*        INVOCATION EXIT IS TAKEN. (IT IS USED BY THE LOGON/    YM01961
*        LOGOFF POST INVOCATION EXIT.) ACTUALLY, THE FIELD MAY  YM01961
*        BE EITHER A RETURN CODE OR AN ABEND CODE.              YM01961
         TM    LCTPARM3,X1         CHECK FOR GETPART ERROR      YM01961
         BNO   NOERROR             NO ERROR OCCURRED, PERFORM   YM01961
*                                  NORMAL PROCESSING            YM01961
         MVC   LCTPARM4,CODE822    SET COMP. CODE OF 822 FOR    YM01961
*                                  GETPART ERROR                YM01961
         B     PIEXIT              SKIP ELSE CLAUSE             YM01961
NOERROR  EQU   *                                                YM01961
         MVC   LCTPARM4,TCBCMP-TCB(R11)  SAVE TASK COMP. CODE   YM01961
PIEXIT   EQU   *                                                YM01961
*****************************************************************Y02669
*                                                                Y02669
*        TAKE THE POST-INVOCATION EXIT INIDCATED BY THE IEL      Y02669
*                                                                Y02669
*****************************************************************Y02669
         L     R4,IEFLCTAD                                       Y02652
         USING IEFLOT,R4                                         Y02652
         L     R4,LCTENTR         ADDRESS OF IEL                  20032
         USING IEL,R4              IEL ADDRESSABILITY            Y02669
         L     R4,IELEXIT          GET ADDR OF EXIT LIST          20032
         DROP  R4                                                Y02669
         LA    R2,IELPSTIN         PUT SEARCH ID IN R2           Y02669
         L     R3,IEFLCTAD         PASS LCT AS PARM              Y02669
         BAL   R9,SETEXIT          CALL SUBROUTINE WHICH TAKES   Y02669
*                                  EXIT                          Y02669
         L     R4,IEFLCTAD                                       Y02669
         USING IEFLOT,R4                                         Y02669
         LTR   R10,R10             WAS THERE AN EXIT RETURN CODE  M0397
         BZ    NORMB               NO, CONTINUE NORMAL PROCESSINGY02669
         L     R11,LCTENTR          ADDRESS OF IEL               Y02669
         USING IEL,R11             IEL ADDRESSABILITY            Y02669
         L     R11,IELEXIT          ADDRESS OF INIT EXIT LIST    Y02669
         DROP  R11                                               Y02669
         USING IELEXITS,R11        EXIT LIST ADDRESSABILITY      Y02669
         CLI   IELRTNCD,IELRTGD    IS ERROR CODE ALREADY SET     Y02668
         BNE   NORMB               YES, BYPASS THIS SETTING      Y02669
         MVI   IELRTNCD,IELRTPTI   SET POST-PROCESSING ERROR     Y02669
         MVI   IELRCXT,IELINIT     SET RETURN CODE ORIGIN AS     Y02668
*                                  'INITIATOR'                   Y02668
         DROP  R11                                               Y02669
NORMB    EQU   *                                                 Y02669
         L     R11,JOBSTCB         RESTORE REGISTER USED BY      Y02669
*                                  SUBROUTINE                    Y02669
*****************************************************************
*
*        SPECIAL PROCESSING FOR GETPART ERROR
*
*****************************************************************
         TM    LCTPARM3,X1         CHECK FOR GETPART ERROR       Y02669
         BNO   CHKCSCB             SKIP PROCESSING IF NOT ERROR  Y02669
*        BECAUSE THERE WAS A GETPART FAILURE, THE TIME          YA02494
*        PROCESSING IN THIS MODULE WAS SKIPPED. BECAUSE THE     YA02494
*        STEP WAS NOT RUN AND IEFSD164 CAN NOT EASILY DETERMINE YA02494
*        THIS, FIELDS IN THE LCT MUST BE SET UP TO SHOW THAT    YA02494
*        THE STEP USED NO TIME.                                 YA02494
         XR    R1,R1                                            YA02494
         ST    R1,LCTTSTU4         SET TCB TIME USED TO 0       YA02494
*        (OTHERWISE, THE TIME USED FOR THE PREVIOUS STEP OF     YA02494
*        THE JOB, IF ANY, WOULD BE PASSED TO SMF.)              YA02494
*        SET UP STEP TIME REMAINING, IN CASE COND=EVEN OR       YA02494
*        ONLY IS SPECIFIED FOR SUCCEEDING STEPS AND A           YA02494
*        TIME LIMIT IS BEING USED FOR AN ENTIRE PROC.           YA02494
         L     R1,LCTTSTL4                                      YA02494
         ST    R1,LCTTSTR4                                      YA20494
         SPACE 2
         L     R0,GETMAIN2         FREE GWT                      Y02669
         L     R1,LCTPARM3         POINTER TO GWT                Y02669
         FREEMAIN R,LV=(0),A=(1)                                 Y02669
         SPACE
*        WHEN A V=R GETPART FAILS, FIELDS ARE SAVED FOR THE      Y01054
*        DUMMY TCB AND TERMINATION AS IF THE SUBTASK HAD ABENDED Y01054
*        WITH A COMPLETION CODE OF 822. THIS IS DONE SO THAT     Y01054
*        DATA SETS WILL BE DISPOSED OF PROPERLY.                 Y01054
         MVC   LCTPARM3(X1),TCBDSP-TCB(R5)  SAVE DISP. PRTY.     Y02652
*                                  FROM INIT. TCB                Y02652
         MVI   LCTPARM1,TCBFA      SET ABEND FLAG                Y02652
         MVC   LCTPARM1+X1(X3),TCBTCTB-TCB(R5)  SAVE TCT POINTER Y02652
*        THE COMPLETION CODE IS SET IN LCTPARM4 BEFORE THE      YM01961
*        POST-INVOCATION EXIT IS TAKEN.                         YM01961
         L     R10,LCTASCBA        ADDR OF ASCB                @ZA16879
         USING ASCB,R10                                        @ZA16879
         TM    LCTINTS2,LCTTSWPC  SYSEVENT 'TRANSWAP' COMPLETE @ZA16879
         BO    ISSUEDET            GO ISSUE SYSEVENT 'DETACH'  @ZA16879
         TM    ASCBRSM,ASCB1LPU+ASCB2LPU+ASCBN2LP ANY PREFERRED
*                                  STORAGE USAGE INDICATED     @ZA16879
         BZ    SD06330             NO, SKIP DETACH             @ZA16879
ISSUEDET EQU   *                                               @ZA16879
*        SRM REQUIRES THAT INITATT AND INITDET BE ISSUED IN    @ZA16879
*        PAIRS.  ON A GETPART ERROR, NO INITATT HAS BEEN       @ZA16879
*        ISSUED BECAUSE NO ATTACH HAS BEEN DONE.  IN ORDER TO  @ZA16879
*        CLEAN UP FROM THE GETPART ERROR AN INITDET WILL BE    @ZA16879
*        ISSUED, BUT FIRST AN INITATT IS ISSUED.  NOTE THAT NO @ZA16879
*        NO ATTACH WILL BE DONE.                               @ZA16879
         XR    R1,R1               CLEAR REGISTER              @ZA16879
         MVC   PAROMEMP,ASCBDP     SAVE CURRENT MEMORY PRIORITY@ZA16879
         IC    R1,PARNMEMP         PASS NEW MEMORY PRIORITY    @ZA16879
         SYSEVENT INITATT          ACTUAL ATTACH IS NOT DONE   @ZA16879
         OI    LCTINTS2,LCTATTC    INITATT HAS BEEN DONE       @ZA16879
         XR    R1,R1               CLEAR REGISTER              @ZA16879
         IC    R1,PAROMEMP         PASS MEMORY PRIORITY IN     @ZA16879
*                                  EFFECT BEFORE THE ATTACH    @ZA16879
         SYSEVENT INITDET          NOTIFY SRM OF DETACH        @ZA16879
         NI    LCTINTS2,X'FF'-LCTATTC  RESET INITATT FLAG      @ZA16879
         B     SD06330             EXIT                          Y02669
         EJECT
*****************************************************************
*
*        CONTINUE WITH NORMAL PROCESSING
*
*****************************************************************
CHKCSCB  EQU   *                                                 Y02669
*
*        SAVE FIELDS FROM TCB IF NOT A GETPART ERROR             Y02652
*
         MVC   LCTPARM3(X1),TCBDSP-TCB(R11)  SAVE DISP. PRTY.    Y02652
         MVC   LCTPARM1(X1),TCBFLGS-TCB(R11)  SAVE TCBFLAGS      Y02652
         MVC   LCTPARM1+X1(X3),TCBTCTB-TCB(R11)  SAVE TCT PTR.   Y02652
*        THE TASK COMPLETION CODE IS SET IN LCTPARM4 BEFORE THE YM01961
*        POST-INVOCATION EXIT IS TAKEN.                         YM01961
*****************************************************************
*
*        FREE THE CURRENTLY OWNED REGION AND GET A NEW V=V       Y02669
*        REGION OF THE DEFAULT SIZE. THIS IS DONE BECAUSE:       Y02669
*        1. IT IS NECESSARY TO FREE ANY STORAGE WHICH MAY        Y02669
*           BE ALLOCATED WITHIN THE REGION.                      Y02669
*        2. IF A SPECIAL REGION WAS GOTTEN FOR THE JOB STEP,     Y02669
*           A DEFAULT REGION MUST BE GOTTEN FOR TERMINATION.     Y02669
*        THE MEMORY SIZE AVAILABLE FIELD FOR THE JOB IN THE TCT YM07263
*        FILLED IN BY GETPART IS SAVED FOR SMF SINCE IT IS      YM07263
*        OVERLAID BY GETPART WHEN A DEFAULT REGION IS GOTTEN    YM07263
*        FOR TERMINATION.  THIS IS DUE TO GETPART CONSIDERING   YM07263
*        THE ONLY SPACE GOTTEN IS FOR THE JOB.                  YM07263
*
*****************************************************************
         L     R3,TCBTCT-TCB(R5)   SAVE THE TCT PTR IN REG 3    YM07263
*                                  OVER THE FREEPART/GETPART    YM07263
         L     R10,LCTSTEPL        GET STAE EXIT LIST ADDR     @ZA05662
         USING STEPL,R10           ADDR TO STAE EXIT PARAMETER @ZA05662
*                                  LIST                        @ZA05662
         ST    R3,STESMFTC      SAVE TCT PTR IN STAE EXIT LIST @ZA05662
         XR    R0,R0               CLEAR REG 0                  YM07263
         ST    R0,TCBTCT-TCB(R5)   CLEAR THE TCT PTR            YM07263
         TM    TCBFLGS6-TCB(R5),TCBRV  CHECK FOR V=R OR V=V      Y02669
         BO    FREEREA3            V=R                           Y02669
         L     R0,SP247            V=V                           Y02669
         B     FREEREG3            PRESERVE SP 247 IN REG 0      Y02669
FREEREA3 EQU   *                                                 Y02669
         L     R0,SP242            V=R                           Y02669
FREEREG3 EQU   *                                                 Y02669
         LA    R1,POSITIVE         SET POSITIVE TO INDICATE A   YM00408
*                                  FREEMAIN BUT NOT A SUBPOOL   YM00408
*                                  FREEMAIN                     YM00408
         FREEMAIN R,LV=(0),A=(1)   FREE REGION                   Y02669
*                                                                Y02669
*        GET A V=V REGION OF THE DEFAULT SIZE                    Y02669
         L     R0,SP247                                          Y02669
         GETMAIN R,LV=(0)          GET REGION                    Y02669
         ST    R3,TCBTCT-TCB(R5)   RESTORE THE TCT PTR IN TCB   YM07263
*****************************************************************
*
*        CLEAR FIELDS IN THE CSCB WHICH CONTAIN V=R REGION SIZE  Y02669
*        AND BEGINNING ADDRESS.                                  Y02669
*
*****************************************************************
         L     R3,LCTQDRTY                                       Y02669
         USING IEFCSCB,R3                                        Y02669
         L     R5,CHRGNSZ          CHECK WHETHER FIELDS SHOULD   Y02669
*                                  BE CLEARED (THEY WILL BE NON- Y02669
*                                  ZERO ONLY IF V=R)             Y02669
         LTR   R5,R5                                             Y02669
         BZ    NOFREER             ZERO, DO NOT CLEAR FIELDS     Y02669
         SR    R5,R5                                             Y02669
*        THESE FIELDS MUST BE CLEARED IN THIS ORDER SO DISPLAY   Y02669
*        JOBS WILL PICK UP EITHER BOTH A REGION SIZE AND A       Y02669
*        REGION ADDRESS OR NEITHER.                              Y02669
         ST    R5,CHRGNAD          CLEAR REGION ADDRESS          Y02669
         ST    R5,CHRGNSZ          CLEAR REGION SIZE             Y02669
***********************************************************************
*   THE FOLLOWING FUNCTIONS ARE PERFORMED NOW IN ORDER TO      @ZA03278
*   PREVENT THE MEMORY FROM BEING SWAPPED BEFORE THE FREEPART  @ZA03278
*   WAS DONE FOR V=R REQUESTS.                                 @ZA03278
***********************************************************************
NOFREER  EQU   *                                               @ZA03278
         L     R10,LCTASCBA        GET ASCB ADDR               @ZA03278
         USING ASCB,R10                                        @ZA05662
         SR    R1,R1               CLEAR R1 FOR USE LATER      @ZA03278
*        (R1 MUST BE 0 TO REACH THIS INSTRUCTION.)             @ZA03278
         IC    R1,PAROMEMP         PASS MEMORY PRIORITY IN     @ZA03278
*                                  EFFECT BEFORE THE ATTACH    @ZA03278
         SYSEVENT INITDET                                      @ZA03278
         NI    LCTINTS2,X'FF'-LCTATTC  RESET INITATT FLAG      @ZA16879
*                                                              @ZA03278
***************************************************************@ZA03278
         XR    R1,R1                                           @ZA03278
         ST    R1,ASCBJSTL         CLEAR TIME LIMIT            @ZA03278
         XC    ASCBEJST,ASCBEJST   CLEAR ELAPSED TIME          @ZA03278
         XC    ASCBSRBT,ASCBSRBT   CLEAR SRB TIME USED         @ZA03278
*  THE INITIATOR DOES NOT SET ASCBTOFF HERE, BECAUSE THE       @ZA03278
*  BIT IS SET BY THE SUPERVISOR.                               @ZA03278
*                                                              @ZA03278
***************************************************************@ZA03278
*                                                              @ZA03278
*        DETACH THE JOB STEP                                   @ZA03278
*                                                              @ZA03278
***************************************************************@ZA03278
         XC    TCBFSAB-TCB(,R11),TCBFSAB-TCB(R11) CLEAR REG SAVE
*                                  AREA ADDRESS FROM TCB TO
*                                  PREVENT DETACH FROM
*                                  ATTEMPTING TO FREE THE
*                                  SAVE AREA. IT WAS FREED
*                                  BY THE FREEPART.            @ZA03278
         LA    R1,JOBSTCB          ADDR OF PTR TO JOB TCB      @ZA03278
         DETACH (1)                                            @ZA03278
         L     R10,LCTPARM3        CHECK WHETHER GWT EXISTS      Y02669
         LA    R10,0(0,R10)        CLEAR DISPATCHING PRIORITY    Y02669
*                                  WHICH WAS SAVED IN LCTPARM3   Y02669
         LTR   R10,R10                                           Y02669
         BZ    SD06330             NO GWT TO FREE                Y02669
         L     R0,GETMAIN2         FREE GWT                      Y02669
         FREEMAIN R,LV=(0),A=(R10)                               Y02669
SD06330  EQU   *                                                   I272
         MVC   LCTADDR,IEFLCTAD    PASS FOR IEFSD164             Y02652
         LR    R1,R8               PARAMETER LIST POINTER
         L     R15,VCON064                                       Y02652
         BR    R15                 EXIT TO IEFSD164              Y02652
         EJECT
* THIS IS A GENERALIZED SUBROUTINE TO HANDLE ALL INITIATOR EXITS  20032
*   INPUT TO IT IS                                                20032
*              REGISTER 4 POINTING TO THE INTIATOR EXIT LIST      20032
*              LOW ORDER BYTE OF REGISTER 2 CONTAINS THE EXIT ID
*                    AS A SEARCH ARGUMENT.                        20032
*              REGISTER 9 CONTAINS THE ADDRESS TO WHICH THIS     Y02669
*                    SUBROUTINE SHOULD RETURN                    Y02669
*              R3 SHOULD CONTAIN THE PARM POINTER TO BE PASSED    20032
SETEXIT  EQU   *                                                 Y02669
         DROP  R4                                                Y02669
         L     R13,IEFLCTAD                                      Y02669
         USING IEFLOT,R13                                        Y02669
         LA    R13,REGSAVE         PASS REGISTER SAVE AREA       Y02669
         SR    R10,R10             PREZERO RETURN CODE            M0397
         USING IELEXITS,R4         EXIT LIST ADDRESSABILITY       20032
         LA    R4,ZERO(R4)         CLEAR HIGH-ORDER BYTE          20032
         LTR   R4,R4               IS THERE AN EXIT LIST          20032
         BZ    RETURN              NO, RETURN TO CALLER           20032
         LH    R7,IELXTLEN         LENGTH OF EXIT LIST            20032
         AR    R7,R4               R7 POINTS TO END OF EXIT LIST  20032
XITLOOP  EQU   *                                                  20032
         LA    R4,X8(R4)           R4 NOW POINTS TO FIRST ENTRY   20032
         CR    R4,R7               HAS LIST BEEN EXCEEDED         20032
         BNL   RETURN              YES, RETURN TO CALLER          20032
         EX    R2,XIDCHECK         IS THIS THE ID WE WANT         20032
         BE    GETOUT              YES, SET UP THE EXIT LINKAGE   20032
         B     XITLOOP             NO, TRY NEXT ENTRY             20032
XIDCHECK CLI   X1(R4),X0           THE EXECUTE CAUSES EXITID TO   20032
*                                       BE COMPARED AGAINST THE   20032
*                                       THE LOW ORDER BYTE IN R2  20032
GETOUT   EQU   *                                                  20032
         CLI   X0(R4),IELEXADD     IS THIS A BRANCH EXIT          20032
         BE    BRANCH              YES, PREPARE TO BRANCH         20032
         LA    R0,X16              REMOTE LIST + SUPV PARMLIST    20032
         GETMAIN R,LV=(0)          GET CORE                       20032
         XC    0(X16,R1),0(R1)     CLEAR CORE                     20032
         LR    R15,R1              ADDR OF SUPV PARMLIST          20032
         LR    R11,R1              SAVE GOTTEN CORE ADDRESS       M0397
         LA    R2,X8(R1)           ADDR OF REMOTE LIST            20032
         LR    R1,R3               EXIT LIST ADDRESS              20032
         MVC   ZERO(X6,R2),X2(R4)  MOVE IN EXIT NAME              20032
         MVI   X6(R2),BLANK        PAD NAME WITH BLANKS           20032
         MVI   X7(R2),BLANK        PAD NAME WITH BLANKS           20032
         ST    R2,ZERO(R15)        REMOTE LIST ADDRESS            20032
         CLI   X0(R4),IELEXXTL     IS EXIT BY XCTL                20032
         BE    GOXCTL              YES, PREPARE TO XCTL           20032
*  IF EXIT IS  NOT BY BRANCH OR XCTL, LINK IS ASSUMED             20032
         B     GOLINK              EXIT IS BY LINK                20032
GOXCTL   EQU   *                                                  20032
         XCTL  ,MF=(E,(1)),SF=(E,(15))  GO TO EXIT ROUTINE        20032
BRANCH   EQU   *                                                  20032
         LR    R1,R3               R1 & R3 CONTAIN EXIT PARM      20032
         L     R15,X4(R4)          ADDRESS OF EXIT ROUTINE        20032
         BALR  R14,R15             TAKE EXIT                     Y02669
         LR    R10,R15             SAVE RETURN CODE FOR CALLER @Z30DNPJ
         B     RETURN              BRANCH TO EXIT POINT OF       Y02669
*                                  SUBROUTINE                    Y02669
GOLINK   EQU    *                                                 20032
         LINK   MF=(E,(1)),SF=(E,(15))  GO TO EXIT ROUTINE        20032
         DROP  R4                                                 20032
         LR    R10,R15             SAVE RETURN CODE               M0397
         LA    R0,X16              LENGTH OF GOTTEN CORE          M0397
         LR    R1,R11              ADDR OF GOTTEN SUPRV LIST      M0397
         FREEMAIN   R,LV=(0),A=(1) FREE SUPRV LIST                M0397
RETURN   EQU   *                                                  20032
         BR    R9                  RETURN                        Y02669
         EJECT
HOURS24  DC    F'8640000'              1440 MINUTES(IN HUNDREDTHS OF
*                                      SECONDS)
SPOOL253 DC    X'FD000000'                                        M3441
GETMAIN1 DS    0F                                                Y01054
         DC    AL1(253)            SUBPOOL                       Y02669
         DC    AL3(MSG3E-MSG092I)  SIZE                          Y02669
GETMAIN2 DS    0F                  TO FREE GWT                   Y02669
         DC    AL1(TCORE)                                        Y02669
         DC    AL3(GPSIZE)                                       Y02669
SP242    DC    AL1(242)            SUBPOOL                       Y01054
         DC    AL3(0)              ENTIRE SUBPOOL                Y01054
SP247    DC    AL1(247)            SUBPOOL                       Y01054
         DC    AL3(0)              ENTIRE SUBPOOL                Y01054
SMFAT    DC    V(IEFSMFAT)              SMF TCT BUILDER            SMF1
VCON064  DC    V(IEFSD064)         EXIT POINT                    Y02652
CAN622   DC    X'00000622'         FOR PRE-INVOCATION EXIT       Y02669
*                                  FAILURE                       Y02669
CODE822  DC    X'00822000'         ABEND CODE                    Y01054
TEN1000  DC    F'10000'                                          Y02669
ROUNDMSK DC    X'00080000'         TO CHECK FOR ROUNDING        YM03761
ROUNDUP  DC    F'1'                TO ROUND UP                  YM03761
FIVE1000 DC    F'5000'             TO COMPARE AGAINST REMAINDER YM03761
*                                  AFTER DIVIDING BY 10000 TO   YM03761
*                                  DETERMINE WHETHER TO ROUND   YM03761
ABENCODE DC    X'000000BB'         ABEND CODE FOR ATTACH FAILED YM07020
MSKBYT0  EQU   B'1000'             USED TO INSERT A BYTE INTO  @ZA16879
*                                  BYTE 0 OF A REGISTER        @ZA16879
BYT1BIT6 DC    X'00020000'         USED TO TURN ON BIT 6 IN    @ZA16879
*                                  BYTE 1 OF A REGISTER        @ZA16879
E0000000 DC    X'E0000000'         'AND' MASK TO KEEP ONLY     @ZA16879
*                                  BITS 0-2 IF THEY ARE ON     @ZA16879
ZEROPOST DC    X'40000000'         FOR POST CODE = 0 TEST      @ZA16879
REGPOOL  DS    0F                                                Y02669
         DC    AL1(250)            USED TO GET SP 0 WHEN KEY 0   Y02669
*                                  AND SUPERVISOR STATE          Y02669
         DC    AL3(0)                                            Y02669
         SPACE
MOVE     MVC   0(0,R9),0(R14)      TO FILL IN MESSAGES           Y01054
IEFUSEP  MVC   0(0,R1),0(R7) MOVE USER PARM FROM 253 TO ZERO
         SPACE
RC4      DC    H'4'                RETURN CODE                   Y02669
RC12     DC    H'12'               RETURN CODE                   Y02669
H10      DC    H'10'               USED TO CONVERT TO DECIMAL    Y02669
NOAFFIN  DC    X'FFFF'             TO CLEAR AFFINITY             Y02651
RC0      DC    X'00'               RETURN CODE                  YM03531
         SPACE
PATCH    DC    50F'0'              PATCH AREA                    Y02669
         EJECT
PC16     EQU   16                  POST CODE                     Y02669
X0       EQU   0                                                   I272
X1       EQU   1                                                   I272
X2       EQU   2                                                 Y01054
X3       EQU   3                                                   I272
X4       EQU   4                                                   I272
X8       EQU   8                                                   I272
X16      EQU   16                  DISPLACEMENT                    I272
HEX00    EQU   X'00'                                             Y02669
ZERO     EQU   X'00'                                             Y02669
BLANK    EQU   C' '                                              Y02669
POSTBIT  EQU   X'40'
PKEZERO  EQU   X'00'                                               I272
X6       EQU   6                                                   I272
X7       EQU   7                                                  M2696
X12      EQU   12                                                  I272
TCORE    EQU   253                                                 I272
MSG3     EQU   8                   TO LOCATE MESSAGE IEF092I     Y01054
MSG9     EQU   32                  TO LOCATE MESSAGE IEF085I     Y01054
MSG9C    EQU   43                  DISPLCAEMENT OF CODE IN MSG   Y02669
MSG9E    EQU   MSG9C+6             TO MOVE MESSAGE               Y02669
*        THERE ARE 6 BYTES FOLLOWING THE BEGINNING OF THE CODE   Y02669
*              2 BYTES FOR THE CODE                              Y02669
*              4 BYTES FOR ROUTING AND DESC. CODES               Y02669
MSGA     EQU   36                  TO LOCATE MESSAGE IEF186I     Y02669
MSGAC    EQU   55                  DISPLACEMENT OF CODE IN MSG   Y02669
MSGAE    EQU   MSGAC+6             TO MOVE MESSAGE               Y02669
*        THERE ARE 6 BYTES FOLLOWING THE BEGINNING OF THE CODE   Y02669
*              2 BYTES FOR THE CODE                              Y02669
*              4 BYTES FOR ROUTING AND DESC. CODES               Y02669
S8       EQU   8                   TO SHIFT 1 BYTE               Y02655
TWOTO20  EQU   20                  TO MULTIPLY AND DIVIDE BY     Y02669
*                                  SHIFTING                      Y02669
TWOTO10  EQU   10                  TO DIVIDE BY 1024 BY SHIFTING Y02669
HEADER   EQU   8                   LENGTH OF HEADER TO USER PARM Y02669
*                                  FIELD                         Y02669
POSITIVE EQU   1                                                YM00408
         SPACE
MSG092I  DSECT                                                   Y02669
         DS    CL12                                              Y02669
MSG3J    DS    CL8                 JOBNAME                       Y02669
         DS    C                                                 Y02669
MSG3S    DS    CL8                 STEPNAME                      Y02669
         DS    C                                                 Y02669
MSG3P    DS    CL8                 PROCSTEP NAME                 Y02669
         DS    C' WAITING FOR '                                  Y02669
MSG3R    DS    CL5                 REGION SIZE REQUILED          Y02669
         DS    C'K REAL STORAGE'                                 Y02669
         DS    CL4                 ROUTING AND DESC. CODES       Y02669
ZONED    DS    CL6                 TO CONVERT TO ZONED DECIMAL   Y02669
PACKED   DS    D                   TO CONVERT TO PACKED DECIMAL  Y02669
MSG3E    EQU   *                   END OF BUFFER                 Y02669
         EJECT
         IEFZB630
         SPACE 4
IEFLOT   DSECT
         IEFALLCT
         SPACE 4
         IEFZB600                                                Y01054
         SPACE 4
         IEZJSCB
         SPACE 4
         IHAASCB
         SPACE 4
IEL      DSECT                                                   Y02669
         IEZIEL EXITS=RTN                                        Y02669
         SPACE 4
         IKJTCB
         SPACE 4
         IHAPQE                                                  A39401
         SPACE 4
         IEFTCT
         SPACE 4
IEFCSCB  DSECT                                                     I272
         IEECHAIN
         SPACE 4
TIOT     DSECT                                                   Y01054
         IEFTIOT1
         SPACE 4
CVTDSECT DSECT
         CVT
         SPACE 4
         IHAGDA
         SPACE 4
         IEESMCA
         SPACE 4                                               @ZA05662
         IEFZB622                                              @ZA05662
         IHAPSA                                                @ZA11857
         SPACE 4
         END
