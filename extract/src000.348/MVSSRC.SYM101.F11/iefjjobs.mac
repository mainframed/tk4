         TITLE 'I E F J J O B S - SUBSYSTEM INITIATION               '
IEFJJOBS CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFJJOBS  73.059'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
*   SSOBPTR=REG1;                   /* SSOB BASE SETUP               */
         LR    SSOBPTR,REG1                                        0018
*   IF SSOBPTR=0 THEN               /* IF PTR IS ZERO,ABEND          */
         LTR   SSOBPTR,SSOBPTR                                     0019
         BNZ   @RF00019                                            0019
*JJOBS010:                                                         0020
*     DO;                                                          0020
JJOBS010 DS    0H                                                  0021
*       GEN(ABEND  177,,,SYSTEM);                                  0021
         ABEND  177,,,SYSTEM
*     END JJOBS010;                                                0022
*   ELSE                                                           0023
*JJOBS020:                                                         0023
*     DO;                                                          0023
         B     @RC00019                                            0023
@RF00019 DS    0H                                                  0023
JJOBS020 DS    0H                                                  0024
*       SSIBPTR=SSOBSSIB;           /* SET ADDRESSABILITY TO SSIB    */
         MVC   SSIBPTR(4),SSOBSSIB(SSOBPTR)                        0024
*       WKSPNUM=10;                 /* SUBPOOL 10 FOR ALL            */
         MVI   WKSPNUM,X'0A'                                       0025
*       WKARLEN=LENGTH(IEFJAMWA);   /* AMWA LENGTH                   */
         MVC   WKARLEN(3),@CF00060+1                               0026
*       REG0=GETWKARA;              /* LENGTH OF WORKAREA            */
         L     REG0,GETWKARA                                       0027
*       GEN(GETMAIN R,LV=(0));      /* GET CORE FOR WKAREA           */
         GETMAIN R,LV=(0)
*       AMWAPTR=REG1;               /* SAVE THE ADDRESS OF GOTTEN  0029
*                                      CORE FOR AMWA ADDRESSABILITY. */
         LR    AMWAPTR,REG1                                        0029
*       IEFJAMWA=''B;               /* CLEAR AMWA                    */
         XC    IEFJAMWA(36,AMWAPTR),IEFJAMWA(AMWAPTR)              0030
*       IF SSIBSUSE=0 THEN          /* A ZERO JCLS PTR MEANS STARTING
*                                      MSTR.                         */
         L     @14,SSIBPTR                                         0031
         L     @14,SSIBSUSE(,@14)                                  0031
         LTR   @14,@14                                             0031
         BNZ   @RF00031                                            0031
*JJOBS030:                                                         0032
*         DO;                                                      0032
*                                                                  0032
JJOBS030 DS    0H                                                  0033
*           /*********************************************************/
*           /*                                                       */
*           /* VERIFY THAT THE JOBNAME IN THE SSIB IS MSTR.IF NOT, AN*/
*           /* INVALID SSIB HAS BEEN PASSED FOR STARTING THE MASTER  */
*           /* SCHEDULER.ISSUE A 0B1 ABEND.                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0033
*           IF SSIBJBID^=MSTRCHK THEN                              0033
         L     @14,SSIBPTR                                         0033
         CLC   SSIBJBID(8,@14),@CC00132                            0033
         BE    @RF00033                                            0033
*             GEN(ABEND  177,,,SYSTEM);                            0034
*                                                                  0034
         ABEND  177,,,SYSTEM
*           /*********************************************************/
*           /*                                                       */
*           /* IT HAS BEEN VERIFIED THAT THE SSIB DESIGNATION IS MSTR*/
*           /* MSTR.CONTINUE TO START MASTER SCHEDULER.              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0035
*           GEN(LOAD  EP=MSTRJCL);  /* LOAD MSTR JCL FROM THE      0035
*                                      LINKLIB.                      */
@RF00033 DS    0H                                                  0035
         LOAD  EP=MSTRJCL
*           OUTPTR2=REG0;           /* PTR TO MSTR JCL IN CORE       */
         ST    REG0,OUTPTR2                                        0036
*           INPTR2=0;               /* INITIALIZE RETURN PARAM       */
         SR    @14,@14                                             0037
         ST    @14,INPTR2                                          0037
*           CALL IEFJJCLS(OUTPTR2,INPTR2);/* CALL JCLS CON- VERSION
*                                      ROUTINE.                      */
         LA    @14,OUTPTR2                                         0038
         ST    @14,@AL00001                                        0038
         LA    @14,INPTR2                                          0038
         ST    @14,@AL00001+4                                      0038
         L     @15,@CV00145                                        0038
         LA    @01,@AL00001                                        0038
         BALR  @14,@15                                             0038
*           IF REG15=4 THEN         /* IF IEFJJCLS HAD PROBLEM       */
         CH    REG15,@CH00036                                      0039
         BNE   @RF00039                                            0039
*JJOBS040:                                                         0040
*             DO;                                                  0040
JJOBS040 DS    0H                                                  0041
*               GEN(ABEND  178,,,SYSTEM);                          0041
         ABEND  178,,,SYSTEM
*             END JJOBS040;                                        0042
*           IF INPTR2=0 THEN        /* IF INPTR2 IS 0 WITH RETURN  0043
*                                      CODE OF ZERO THEN TURN ON EOF
*                                      BIT FOR JCLS                  */
@RF00039 L     @14,INPTR2                                          0043
         LTR   @14,@14                                             0043
         BNZ   @RF00043                                            0043
*             AMWAJEOF=ON;          /* TURN ON EOF BIT               */
         OI    AMWAJEOF(AMWAPTR),B'10000000'                       0044
*           AMWAFSTJ=INPTR2;        /* POINT AMWA ENTRY TO FIRST JCLS
*                                      CHAIN REC                     */
@RF00043 L     @14,INPTR2                                          0045
         ST    @14,AMWAFSTJ(,AMWAPTR)                              0045
*           AMWALSTJ=INPTR2;        /* THIS WILL ALLOW READ TO ACCESS
*                                      FIRST REC                     */
*                                                                  0046
         ST    @14,AMWALSTJ(,AMWAPTR)                              0046
*           /*********************************************************/
*           /*                                                       */
*           /* DELETE THE MSTRJCL FROM CORE.                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0047
*           GEN(DELETE EP=MSTRJCL);                                0047
         DELETE EP=MSTRJCL
*         END JJOBS030;                                            0048
*       ELSE                                                       0049
*JJOBS050:                                                         0049
*         DO;                                                      0049
         B     @RC00031                                            0049
@RF00031 DS    0H                                                  0049
JJOBS050 DS    0H                                                  0050
*           AMWAFSTJ=SSIBSUSE;      /* TAKE PTR TO JCLS CHAIN FROM 0050
*                                      SSIB                          */
         L     @14,SSIBPTR                                         0050
         L     @14,SSIBSUSE(,@14)                                  0050
         ST    @14,AMWAFSTJ(,AMWAPTR)                              0050
*           AMWALSTJ=SSIBSUSE;      /* SET UP SAME AS ABOVE          */
         ST    @14,AMWALSTJ(,AMWAPTR)                              0051
*         END JJOBS050;                                            0052
*                                                                  0052
*/*                 SINCE JCLS HAS NO LENGTH INDICATOR LIKE THE OTHER
*                   RECORDS THE ACCESS METHOD WILL READ,A BIT HAS  0053
*                   TO SIGNAL THAT 80 BYTES MUST BE MOVED.EVERY ENTRY
*                   IN THE AMWA HAS THIS BIT AND IT CAN BE USED TO 0053
*                   MOVE ONLY 80 BYTES IF REQUIRED.                  */
*                                                                  0053
*                                                                  0053
*       AMWAJM80=ON;                /* MOVE 80 JCLS LENGTH           */
@RC00031 OI    AMWAJM80(AMWAPTR),B'01000000'                       0053
*                                                                  0054
*       /*************************************************************/
*       /*                                                           */
*       /* SETUP FOR IEFJCNTL                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0054
*       OUTPTR3=AMWAPTR;            /* AMWA PTR FOR JCNTL            */
         ST    AMWAPTR,OUTPTR3                                     0054
*       OUTPTR1=SSOBPTR;            /* SSOB PTR FOR JCNTL            */
         ST    SSOBPTR,OUTPTR1                                     0055
*       SSOBRETN=0;                 /* INITIALIZE RETURN FIELD IN  0056
*                                      SSOB                          */
         SR    @14,@14                                             0056
         ST    @14,SSOBRETN(,SSOBPTR)                              0056
*                                                                  0057
*       /*************************************************************/
*       /*                                                           */
*       /* PASS CONTROL TO IEFJCNTL                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0057
*       CALL IEFJCNTL(OUTPTR1,OUTPTR3);/* CONVERT-INTERPRET          */
*                                                                  0057
         LA    @14,OUTPTR1                                         0057
         ST    @14,@AL00001                                        0057
         LA    @14,OUTPTR3                                         0057
         ST    @14,@AL00001+4                                      0057
         L     @15,@CV00146                                        0057
         LA    @01,@AL00001                                        0057
         BALR  @14,@15                                             0057
*       /*************************************************************/
*       /*                                                           */
*       /* PASS CONTROL TO IEFJCDLT PASS POINTER TO AMWA TO FREE JCLS*/
*       /* CHAIN                                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0058
*       OUTPTR3=AMWAPTR;            /* PTR TO AMWA TO FREE JCLS CHAIN*/
         ST    AMWAPTR,OUTPTR3                                     0058
*       CALL IEFJCDLT(OUTPTR3);     /* FREE CORE USED .              */
         LA    @14,OUTPTR3                                         0059
         ST    @14,@AL00001                                        0059
         L     @15,@CV00144                                        0059
         LA    @01,@AL00001                                        0059
         BALR  @14,@15                                             0059
*     END JJOBS020;                                                0060
*                                                                  0060
*   /*****************************************************************/
*   /*                                                               */
*   /* ZERO THE SSIBSUSE FIELD WHERE THE CALLER PASSED THE JCLS CHAIN*/
*   /* POINTER.POSSIBLE SEQUENTIAL USE OF FIELD REQUIRES IT BE       */
*   /* RETURNED ZEROED.                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0061
*   SSIBSUSE=0;                                                    0061
*                                                                  0061
@RC00019 L     @14,SSIBPTR                                         0061
         SR    @10,@10                                             0061
         ST    @10,SSIBSUSE(,@14)                                  0061
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER-RETURN CODE IN SSOB A ZERO RETURN CODE IN    */
*   /* REGISTER 15 WILL CAUSE THE INITIATOR TO LOOK INTO THE SSOB FOR*/
*   /* A RETURN CODE.                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0062
*   RETURN CODE(0);                                                0062
         L     @13,4(,@13)                                         0062
         L     @00,@SIZDATD                                        0062
         LR    @01,@11                                             0062
         FREEMAIN R,LV=(0),A=(1)
         SR    @15,@15                                             0062
         L     @14,12(,@13)                                        0062
         LM    @00,@12,20(@13)                                     0062
         BR    @14                                                 0062
*   END IEFJJOBS                                                   0063
*                                                                  0063
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSIB)                                       */
*/*%INCLUDE SYSLIB  (IEFJAMWA)                                       */
*                                                                  0063
*       ;                                                          0063
@EL00001 L     @13,4(,@13)                                         0063
@EF00001 L     @00,@SIZDATD                                        0063
         LR    @01,@11                                             0063
         FREEMAIN R,LV=(0),A=(1)
@ER00001 L     @14,12(,@13)                                        0063
         LM    @00,@12,20(@13)                                     0063
         BR    @14                                                 0063
@DATA    DS    0H
@CH00036 DC    H'4'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    2A
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
IEFJJOBS CSECT
         DS    0F
@CF00060 DC    F'36'
@DATD    DSECT
         DS    0D
SSIBPTR  DS    A
OUTPTR1  DS    A
OUTPTR2  DS    A
OUTPTR3  DS    A
INPTR2   DS    A
GETWKARA DS    CL4
         ORG   GETWKARA
WKSPNUM  DS    FL1
WKARLEN  DS    FL3
         ORG   GETWKARA+4
@ENDDATD EQU   *
IEFJJOBS CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00144 DC    V(IEFJCDLT)
@CV00145 DC    V(IEFJJCLS)
@CV00146 DC    V(IEFJCNTL)
         DS    0D
@CC00132 DC    C'MSTR    '
JOBSPTCH DS    CL100
         ORG   JOBSPTCH
@NM00013 DC    100X'00'
         ORG   JOBSPTCH+100
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
AMWAPTR  EQU   @02
SSOBPTR  EQU   @03
REG1     EQU   @01
REG0     EQU   @00
REG15    EQU   @15
SSOB     EQU   0
SSOBSSIB EQU   SSOB+8
SSOBRETN EQU   SSOB+12
SSOBINDV EQU   SSOB+16
SSJS     EQU   0
SSJSFLG1 EQU   SSJS+6
SSIB     EQU   0
SSIBFLG1 EQU   SSIB+6
SSIBJBID EQU   SSIB+12
SSIBSUSE EQU   SSIB+32
IEFJAMWA EQU   0
AMWATXTE EQU   IEFJAMWA
AMWATFL1 EQU   AMWATXTE+8
AMWAJCLE EQU   IEFJAMWA+12
AMWAFSTJ EQU   AMWAJCLE
AMWALSTJ EQU   AMWAJCLE+4
AMWAJFL1 EQU   AMWAJCLE+8
AMWAJEOF EQU   AMWAJFL1
AMWAJM80 EQU   AMWAJFL1
AMWARESV EQU   IEFJAMWA+24
AMWAFLG1 EQU   AMWARESV+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00012 EQU   AMWARESV+8
AMWAFLG4 EQU   AMWARESV+7
AMWAFLG3 EQU   AMWARESV+6
AMWAFLG2 EQU   AMWARESV+5
@NM00011 EQU   AMWAFLG1
BYPINTER EQU   AMWAFLG1
CONVERR  EQU   AMWAFLG1
@NM00010 EQU   AMWARESV
@NM00009 EQU   AMWAJCLE+9
@NM00008 EQU   AMWAJFL1
@NM00007 EQU   AMWATXTE+9
@NM00006 EQU   AMWATFL1
AMWATM80 EQU   AMWATFL1
AMWATEOF EQU   AMWATFL1
AMWALSTT EQU   AMWATXTE+4
AMWAFSTT EQU   AMWATXTE
SSIBRSV1 EQU   SSIB+28
SSIBDEST EQU   SSIB+20
SSIBSSNM EQU   SSIB+8
SSIBRESV EQU   SSIB+7
@NM00005 EQU   SSIBFLG1
SSIBPJES EQU   SSIBFLG1
SSIBLEN  EQU   SSIB+4
SSIBID   EQU   SSIB
SSJSSERR EQU   SSJS+32
SSJSJMR  EQU   SSJS+28
SSJSIPRM EQU   SSJS+24
SSJSTACB EQU   SSJS+20
SSJSJACB EQU   SSJS+16
SSJSMACB EQU   SSJS+12
SSJSLCT  EQU   SSJS+8
@NM00004 EQU   SSJS+7
@NM00003 EQU   SSJSFLG1
SSJSWARM EQU   SSJSFLG1
@NM00002 EQU   SSJSFLG1
SSJSCNRS EQU   SSJSFLG1
SSJSCHRS EQU   SSJSFLG1
SSJSSTRS EQU   SSJSFLG1
SSJSSTEP EQU   SSJS+4
@NM00001 EQU   SSJS+2
SSJSLEN  EQU   SSJS
SSOBFUNC EQU   SSOB+6
SSOBLEN  EQU   SSOB+4
SSOBID   EQU   SSOB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFJJOBS
