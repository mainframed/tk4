         TITLE 'SWA CREATE CONTROL MODULE                              *
                        '
IEFIB600 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFIB600  76.356'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*                                      STATUS WAS RETURNED BY RACINIT
*                                                            @Z40RPPJ*/
*                                                                  0085
*/*  SET UP A POINTER TO THE SSOB AND LCT.                           */
*                                                                  0085
*   SSOBPTR=R1;                     /* SET UP SSOBPTR                */
         LR    SSOBPTR,R1                                          0085
*   LCTPTR=SSJSLCT;                 /* SET UP THE LCT POINTER        */
*                                                                  0086
         L     @14,SSOBINDV(,SSOBPTR)                              0086
         L     LCTPTR,SSJSLCT(,@14)                                0086
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE ESATE ENVIRONMENT OVER SWA CREATE                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0087
*   RESPECIFY                                                      0087
*    (R4,                                                          0087
*     R6) RESTRICTED;               /* ESTAE MACRO REGISTERS         */
*   RESPECIFY                                                      0088
*     ESTAELST BASED(ESTAEPTR);     /* POINTER TO ESTAE              */
*   SUBPOOL=LENGTH(ESTAELST);       /* SET UP FOR GETMAIN            */
         LA    @14,12                                              0089
         ST    @14,SUBPOOL                                         0089
*   DO;                             /* GETMAIN (R) LV(SUBPOOL)SP(255)*/
*     RESPECIFY                                                    0091
*      (GPR01F,                                                    0091
*       GPR00F) RESTRICTED;                                        0091
*     GPR00F=SUBPOOL;               /* LENGTH REQUESTED              */
         LR    GPR00F,@14                                          0092
*     GPR01F=255;                   /* SP IN REG 1                   */
         LA    GPR01F,255                                          0093
*     GEN(SLL   GPR01F,24)                                         0094
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0094
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0095
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0096
         BCTR  GPR01F,0                                            0096
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0097
*     RESPECIFY                                                    0098
*      (GPR01F,                                                    0098
*       GPR00F) UNRESTRICTED;                                      0098
*   END;                            /* GETMAIN (R) LV(SUBPOOL)SP(255)
*                                      GET AREA FOR ESTAE PARM LIST  */
*   ESTAEPTR=R1;                    /* SET ADDRESS FOR PARM LIST     */
         LR    ESTAEPTR,R1                                         0100
*   RESTAE(1:SESTAE)=LESTAE(1:SESTAE);/* MOVE IN THE ESTAE MACRO     */
         L     @14,SESTAE                                          0101
         BCTR  @14,0                                               0101
         EX    @14,@SM02541                                        0101
*   R4=ESTAEPTR;                    /* POINT TO THE ESTAE PARAMETER
*                                      LIST                          */
         LR    R4,ESTAEPTR                                         0102
*   R6=ADDR(IEFIB645);              /* POINT TO EXIT ROUTINE         */
         L     R6,@CV02391                                         0103
*   SSOBAREA=SSOBPTR;               /* PUT SSOB IN PARM LIST         */
         ST    SSOBPTR,SSOBAREA(,ESTAEPTR)                         0104
*   SAVEAREA=BACKPTR;               /* PUT CALLERS R13 IN LIST       */
         L     @14,BACKPTR(,R13)                                   0105
         ST    @14,SAVEAREA(,ESTAEPTR)                             0105
*   NELAREA=0;                      /* NEL NOT GOTTEN YET            */
         SLR   @14,@14                                             0106
         ST    @14,NELAREA(,ESTAEPTR)                              0106
*   R1=ADDR(RESTAE);                /* POINT R1 TO ESTAE LIST        */
         LA    R1,RESTAE                                           0107
*   GEN(ESTAE (6),PARAM=(4),XCTL=YES,RECORD=YES,MF=(E,(1)));       0108
         ESTAE (6),PARAM=(4),XCTL=YES,RECORD=YES,MF=(E,(1))
*   IF R15^=0 THEN                                                 0109
         LTR   R15,R15                                             0109
         BZ    @RF00109                                            0109
*     DO;                           /* IF ESTAE FAILS RETURNS TO   0110
*                                      CALLER                        */
*       DO;                         /* FREEMAIN(R)                 0111
*                                      LV(SUBPOOL)SP(255)A(ESTAELST) */
*         RESPECIFY                                                0112
*          (GPR01F,                                                0112
*           GPR00F) RESTRICTED;                                    0112
*         GPR00F=SUBPOOL;           /* LENGTH REQUESTED              */
         L     GPR00F,SUBPOOL                                      0113
*         GPR01F=255;               /* SP IN REG 1                   */
         LA    GPR01F,255                                          0114
*         GEN(SLL   GPR01F,24)                                     0115
*         NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;             0115
         SLL   GPR01F,24
*         GPR00F=GPR00F×GPR01F;     /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0116
*         GPR01F=ADDR(ESTAELST);    /* SET REGISTER ONE              */
         LR    GPR01F,ESTAEPTR                                     0117
*         SVC(10);                  /* R-FORM OF GETMAIN             */
         SVC   10                                                  0118
*         RESPECIFY                                                0119
*          (GPR01F,                                                0119
*           GPR00F) UNRESTRICTED;                                  0119
*       END;                        /* FREEMAIN(R)                 0120
*                                      LV(SUBPOOL)SP(255)A(ESTAELST)
*                                      FREE ESTAE AREA               */
*       RETURN CODE(36);            /* RETURN PROGRAM ERROR          */
         L     @13,4(,@13)                                         0121
         L     @00,@SIZDATD                                        0121
         LR    @01,@11                                             0121
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,36                                              0121
         L     @14,12(,@13)                                        0121
         LM    @00,@12,20(@13)                                     0121
         BR    @14                                                 0121
*     END;                                                         0122
*   RESPECIFY                                                      0123
*    (R4,                                                          0123
*     R6) UNRESTRICTED;             /* PLS CAN USE R4 , R6           */
@RF00109 DS    0H                                                  0124
*                                                                  0124
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE LCT FLAGS IF THIS IS A RESTART                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0124
*   LCTRFB=0;                       /* CLEAR JOB STATUS FLAGS        */
         MVI   LCTRFB(LCTPTR),X'00'                                0124
*   IF((SSJSSTRS='1'B)×(SSJSCHRS='1'B)×(SSJSCNRS='1'B)×(SSJSWARM='1'B))
*     THEN                          /* CHECK FOR A RESTART JOB     0125
*                                                            @ZA07029*/
         L     @14,SSOBINDV(,SSOBPTR)                              0125
         TM    SSJSSTRS(@14),B'11101000'                           0125
         BZ    @RF00125                                            0125
*     DO;                                                          0126
*       IF SSJSCHRS='1'B THEN       /* IF AUTO CHECKPOINT SET      0127
*                                      INDICATORS                    */
         TM    SSJSCHRS(@14),B'01000000'                           0127
         BNO   @RF00127                                            0127
*         DO;                                                      0128
*           LCTRFBMS='1'B;          /* DO NOT OVER RIDE JOB STATUS 0129
*                                      BIT ON                        */
*           LCTRFBCR='1'B;          /* AUTO CHECKPOINT BIT ON        */
         OI    LCTRFBMS(LCTPTR),B'01001000'                        0130
*         END;                                                     0131
*       IF SSJSWARM='1'B THEN       /* CHECK FOR A WARMSTART JOB     */
@RF00127 L     @14,SSOBINDV(,SSOBPTR)                              0132
         TM    SSJSWARM(@14),B'00001000'                           0132
         BNO   @RF00132                                            0132
*         LCTRFBRV='1'B;            /* SET WARMSTART BIT IN LCT      */
         OI    LCTRFBRV(LCTPTR),B'00100000'                        0133
*       LCTRFBSM='1'B;              /* SET CALL IEFXB601 BIT ON      */
@RF00132 OI    LCTRFBSM(LCTPTR),B'10000000'                        0134
*     END;                                                         0135
*                                                                  0136
*/*  BUILD THE NEL AND THEN CALL THE INTERPRETER TO CONVERT        0136
*    THE INTERNAL TEXT PASSED. ON RETURN FREE THE NEL              0136
*    AND IF THERE WAS AN ERROR CALL THE ERROR ROUTINE AND          0136
*    THEN RETURN TO CALLER                                           */
*                                                                  0136
*   CALL GETJSCB;                   /* GET THE JOBS JSCB             */
@RF00125 BAL   @14,GETJSCB                                         0136
*   CALL NELBUILD;                  /* CALL ROUTINE TO BUILD NEL     */
         BAL   @14,NELBUILD                                        0137
*   LCTJCTAD=0;                     /* CLEAR JCT AREA IN LCT         */
         SLR   @14,@14                                             0138
         ST    @14,LCTJCTAD(,LCTPTR)                               0138
*   NELAREA=NELPTR;                 /* PUT NEL POINTER IN ESTAE LIST */
         ST    NELPTR,NELAREA(,ESTAEPTR)                           0139
*   IF SSJSAIFG='1'B THEN                                          0140
         L     @14,SSOBINDV(,SSOBPTR)                              0140
         TM    SSJSAIFG(@14),B'00000100'                           0140
         BNO   @RF00140                                            0140
*     DO;                           /* IF ALTERNATE INTERPRETER THEN
*                                      BRANCH TO ADDRESS IN SSOB   0141
*                                      Y02886                        */
*       R1=NELPTR;                  /* SET R1 POINTING TO THE NEL  0142
*                                      Y02886                        */
         LR    R1,NELPTR                                           0142
*       R15=SSJSAIAD;               /* POINT R15 TO THE INTERPRETER
*                                      Y02886                        */
         L     R15,SSJSAIAD(,@14)                                  0143
*       GEN( BALR  14,15);          /* BRANCH TO THE INTERPRETER   0144
*                                      Y02886                        */
          BALR  14,15
*     END;                                                         0145
*   ELSE                                                           0146
*     DO;                           /* GO THE REGULAR INTERPRETER    */
         B     @RC00140                                            0146
@RF00140 DS    0H                                                  0147
*       R1=NELPTR;                  /* POINT R1 TO NEL               */
         LR    R1,NELPTR                                           0147
*       GEN(  LINK EP=IEFNB903 );   /* LINK TO THE INTERPRETER       */
           LINK EP=IEFNB903
*     END;                                                         0149
*   SSOBRETN=R15;                   /* MOVE RETURN CODE TO SSOB      */
@RC00140 ST    R15,SSOBRETN(,SSOBPTR)                              0150
*   LCTPARM2=NELJCT;                /* PUT SVA OF JCT IN LCT         */
         L     @14,NELJCT(,NELPTR)                                 0151
         ST    @14,LCTPARM2(,LCTPTR)                               0151
*   SUBPOOL=LENGTH(NEL)+LENGTH(NELEXITS);/* GET LENGTH OF NEL        */
         MVC   SUBPOOL(4),@CF02157                                 0152
*   SUBNUM=FOXDOG;                  /* PUT SUBPOOL NUMBER IN         */
         MVC   SUBNUM(1),FOXDOG                                    0153
*   R0=SUBPOOL;                     /* PUT IT IN REG 0               */
         L     R0,SUBPOOL                                          0154
*   NELAREA=0;                      /* CLEAR NEL PTR IN ESTAE LIST   */
         SLR   @14,@14                                             0155
         ST    @14,NELAREA(,ESTAEPTR)                              0155
*   R1=NELPTR;                      /* POINT TO THE NEL              */
         LR    R1,NELPTR                                           0156
*   GEN( FREEMAIN R,LV=(0),A=(1) ); /* FREE THE NEL                  */
          FREEMAIN R,LV=(0),A=(1)
*   IF SSOBRETN^=0 THEN             /* CALL ERROR ROUTINE IF R15 NON
*                                      ZERO                          */
         L     @14,SSOBRETN(,SSOBPTR)                              0158
         LTR   @14,@14                                             0158
         BZ    @RF00158                                            0158
*     CALL ERROR;                   /* DO ERROR CLEAN UP             */
         BAL   @14,ERROR                                           0159
*   ELSE                                                           0160
*     DO;                           /* IF NO ERROR GO ON             */
         B     @RC00158                                            0160
@RF00158 DS    0H                                                  0161
*                                                                  0161
*/*  SET UP TO READ LOCATE THE JCT FROM SWA. SET UP THE EPA        0161
*    THEN CALL THE SWA MANAGER.                                      */
*                                                                  0161
*       SWEPAPTR=ADDR(EPA1);        /* POINT TO EPA AREA             */
         LA    @14,EPA1                                            0161
         ST    @14,SWEPAPTR                                        0161
*       SWAEPA=''B;                 /* CLEAR EPA AREA                */
         XC    SWAEPA(16,@14),SWAEPA(@14)                          0162
*       SWVAFW=LCTPARM2;            /* PUT JCT SWA ADDRESS IN EPA    */
*                                                                  0163
         L     @10,LCTPARM2(,LCTPTR)                               0163
         ST    @10,SWVAFW(,@14)                                    0163
*       /*************************************************************/
*       /*                                                           */
*       /* ?SWAREQ (RL) EPA (SWEPAPTR);                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0164
*       CALL SWAMGR(SWEPAPTR,'RL'); /* CALL THE SWA MANAGER          */
         LA    @14,SWEPAPTR                                        0164
         ST    @14,@AL00001                                        0164
         LA    @14,@CC02486                                        0164
         ST    @14,@AL00001+4                                      0164
         L     @10,CVTPTR                                          0164
         L     @10,CVTJESCT(,@10)                                  0164
         L     @15,JESWAA(,@10)                                    0164
         LA    @01,@AL00001                                        0164
         BALR  @14,@15                                             0164
*       LCTJCTAD=SWBLKPTR;          /* PUT JCT ADDRESS IN LCT        */
         L     @14,SWEPAPTR                                        0165
         L     @14,SWBLKPTR(,@14)                                  0165
         ST    @14,LCTJCTAD(,LCTPTR)                               0165
*       RESPECIFY                                                  0166
*         IEZJSCB BASED(LCTJSCB);   /* BASE JSCB ON RIGHT ADDR       */
*       JCTPTR=LCTJCTAD;            /* BASE THE JCT                  */
         LR    JCTPTR,@14                                          0167
*       JSCBJCTA=JCTDSKAD;          /* PUT JCT SWA ADDRESS IN JSCB   */
         L     @14,LCTJSCB(,LCTPTR)                                0168
         SLR   @10,@10                                             0168
         ICM   @10,7,JCTDSKAD(JCTPTR)                              0168
         STCM  @10,7,JSCBJCTA(@14)                                 0168
*       LCTJCTVA=JCTDSKAD;          /* PUT JCT SWA ADDRESS IN LCT    */
         STCM  @10,7,LCTJCTVA(LCTPTR)                              0169
*       LCTSCTVA=JCTSDKAD;          /* MOVE IN THE FIRST SCT SWA ADDR*/
         MVC   LCTSCTVA(3,LCTPTR),JCTSDKAD(JCTPTR)                 0170
*       RESPECIFY                                                  0171
*         IEZJSCB BASED(TCBJSCB);   /* REBASE THE JSCB               */
*/********************************************************************/
*/*                                                                  */
*/*   SET UP ACCESSOR ENVIRONMENT FOR SECURITY CHECK         @Z40RPPJ*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0172
*       IF(LCTBPRAC='0'B&CVTRAC^='0'&RCVTRNA^='1'B) THEN/* SHOULD  0172
*                                      RACINIT BE DONE?      @ZA11863*/
         TM    LCTBPRAC(LCTPTR),B'00000100'                        0172
         BNZ   @RF00172                                            0172
         L     @14,CVTPTR                                          0172
         L     @14,CVTRAC(,@14)                                    0172
         C     @14,@CF02490                                        0172
         BE    @RF00172                                            0172
         TM    RCVTRNA(@14),B'10000000'                            0172
         BO    @RF00172                                            0172
*         DO;                       /*                       @Z40RPPJ*/
*           PROCNAME=PROCNAME&&PROCNAME;/* CLEAR NAME FIELD FOR    0174
*                                      STARTED PROCEDURE     @Z40RPPJ*/
         XC    PROCNAME(8),PROCNAME                                0174
*           DO;                     /* RACINIT MF(M,RACL,COMPLETE)   */
*             RACL=RACL&&RACL;      /* INIT. LIST                    */
         XC    RACL(48),RACL                                       0176
*             RACL01=48;            /* PARM LIST LENGTH              */
         MVI   RACL01,X'30'                                        0177
*             RACL02='00000000'B;   /* RESERVED FIELD                */
         MVI   RACL02,B'00000000'                                  0178
*             RACL03='00000000'B;   /* RESERVED FIELD                */
         MVI   RACL03,B'00000000'                                  0179
*             RACL04='00000000'B;   /* SET ENVIR FLAGS               */
         MVI   RACL04,B'00000000'                                  0180
*           END;                    /* RACINIT MF(M,RACL,COMPLETE) 0181
*                                      INIT RACINIT PRAM LIST      0181
*                                                            @Z40RPPJ*/
*           DO USERLEN=LENGTH(JCTUSER) TO ZERO BY-1 WHILE(JCTUSER( 0182
*                 USERLEN)=BLANK);  /* CALC LENGTH OF        @Z40RPPJ*/
         LA    @14,7                                               0182
         STC   @14,USERLEN                                         0182
@DL00182 ALR   @14,JCTPTR                                          0182
         CLC   JCTUSER-1(1,@14),BLANK                              0182
         BNE   @DC00182                                            0182
*           END;                    /* USERID                @Z40RPPJ*/
*                                                                  0183
         SLR   @10,@10                                             0183
         IC    @10,USERLEN                                         0183
         BCTR  @10,0                                               0183
         LR    @14,@10                                             0183
         STC   @14,USERLEN                                         0183
         LTR   @14,@14                                             0183
         BNM   @DL00182                                            0183
@DC00182 DS    0H                                                  0184
*           /*********************************************************/
*           /*                                                       */
*           /* IF USERID IS NOT ALL BLANKS OR ZERO, SETUP USERID PARM*/
*           /*                                               @Z40RPPJ*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0184
*           IF USERLEN^=ZERO THEN                                  0184
         CLI   USERLEN,0                                           0184
         BE    @RF00184                                            0184
*             DO;                                                  0185
*               USERNM=JCTUSER;     /* MOVE USERID TO LOCAL STORAGE
*                                                            @Z40RPPJ*/
         MVI   USERNM+7,C' '                                       0186
         MVC   USERNM(7),JCTUSER(JCTPTR)                           0186
*               DO;                 /* RACINIT MF(M,RACL)          0187
*                                      USERID(USER)                  */
*                 RACL05=ADDR(USER);/* ADDR OF USERID                */
         LA    @14,USER                                            0188
         ST    @14,RACL05                                          0188
*               END;                /* RACINIT MF(M,RACL)          0189
*                                      USERID(USER)          @Z40RPPJ*/
*             END;                  /*                       @Z40RPPJ*/
*           IF LCTONEJF='1'B THEN   /* STARTED TASK ?        @Z40RPPJ*/
@RF00184 TM    LCTONEJF(LCTPTR),B'00000100'                        0191
         BNO   @RF00191                                            0191
*             DO;                   /* YES                   @Z40RPPJ*/
*               CSCBPTR=LCTQDRTY;   /* GET CSCB BASE         @Z40RPPJ*/
         L     CSCBPTR,LCTQDRTY(,LCTPTR)                           0193
*               PROCNAME(1:LENGTH(PROCNAME))=CHCLS(1:LENGTH(PROCNAME));
         MVC   PROCNAME(8),CHCLS(CSCBPTR)                          0194
*                                   /* MOVE STARTED TASK NAME TO   0195
*                                      LOCAL STORAGE         @Z40RPPJ*/
*               DO;                 /* RACINIT MF(M,RACL)          0195
*                                      START(PROCNAME)               */
*                 RACL07=ADDR(PROCNAME);/* ADDR OF STARTED TASK    0196
*                                      PROCEDURE NAME                */
         LA    @14,PROCNAME                                        0196
         ST    @14,RACL07                                          0196
*               END;                /* RACINIT MF(M,RACL)          0197
*                                      START(PROCNAME)       @Z40RPPJ*/
*             END;                                                 0198
*           ELSE                                                   0199
*             ;                     /* NOT STARTED           @Z40RPPJ*/
@RF00191 DS    0H                                                  0200
*           IF JCTJCTX^=0 THEN      /* CHECK TO SEE IF JCTX EXISTS 0200
*                                                            @Z40RPPJ*/
         ICM   @14,7,JCTJCTX(JCTPTR)                               0200
         BZ    @RF00200                                            0200
*             DO;                   /* FIND IT TO GET GROUPID      0201
*                                                            @Z40RPPJ*/
*                                                                  0201
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP TO READ LOCATE THE JCTX FROM SWA. SET UP   */
*               /* THE EPA THEN CALL THE SWA MANAGER.        @Z40RPPJ*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0202
*               SWEPAPTR=ADDR(EPA1);/* POINT TO EPA AREA     @Z40RPPJ*/
         LA    @14,EPA1                                            0202
         ST    @14,SWEPAPTR                                        0202
*               SWAEPA=''B;         /* CLEAR THE AREA        @Z40RPPJ*/
         XC    SWAEPA(16,@14),SWAEPA(@14)                          0203
*               SWVA=JCTJCTX;       /* PUT JCTX SVA INTO EPA @Z40RPPJ*/
*                                                                  0204
         MVC   SWVA(3,@14),JCTJCTX(JCTPTR)                         0204
*               /*****************************************************/
*               /*                                                   */
*               /* ?SWAREQ (RL) EPA (SWEPAPTR);                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0205
*               CALL SWAMGR(SWEPAPTR,'RL');                        0205
         LA    @14,SWEPAPTR                                        0205
         ST    @14,@AL00001                                        0205
         LA    @14,@CC02486                                        0205
         ST    @14,@AL00001+4                                      0205
         L     @10,CVTPTR                                          0205
         L     @10,CVTJESCT(,@10)                                  0205
         L     @15,JESWAA(,@10)                                    0205
         LA    @01,@AL00001                                        0205
         BALR  @14,@15                                             0205
*               JCTXPTR=SWBLKPTR;                                  0206
*                                                                  0206
         L     @14,SWEPAPTR                                        0206
         L     JCTXPTR,SWBLKPTR(,@14)                              0206
*               /*****************************************************/
*               /*                                                   */
*               /* IF GROUP IS NOT ZERO OR BLANKS, SET UP GROUP      */
*               /* PARAMETERS ON RACINIT                     @Z40RPPJ*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0207
*               IF(JCTXGROP(1)^='00'X&/* GROUPID NOT ZEROES  @Z40RPPJ*/
*                   JCTXGROP(1)^='40'X) THEN/* AND NOT BLANKS      0207
*                                                            @Z40RPPJ*/
         CLI   JCTXGROP(JCTXPTR),X'00'                             0207
         BE    @RF00207                                            0207
         CLI   JCTXGROP(JCTXPTR),X'40'                             0207
         BE    @RF00207                                            0207
*                 DO;               /* MUST BE VALID         @Z40RPPJ*/
*                                                                  0208
*                   /*************************************************/
*                   /*                                               */
*                   /* BACKWARD SCAN TO FIRST NONBLANK TO GET LENGTH */
*                   /*                                       @Z40RPPJ*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0209
*                   DO GROUPLEN=LENGTH(JCTXGROP)/* START AT        0209
*                                      END@Z40RPPJ                   */
*                         TO ZERO BY-1/* WORK BACKWARDS      @Z40RPPJ*/
*                         WHILE(JCTXGROP(GROUPLEN)=/* LOOK FOR     0209
*                                      NON@Z40RPPJ                   */
*                         BLANK);   /* BLANK                 @Z40RPPJ*/
         LA    @14,8                                               0209
         STC   @14,GROUPLEN                                        0209
@DL00209 ALR   @14,JCTXPTR                                         0209
         CLC   JCTXGROP-1(1,@14),BLANK                             0209
         BNE   @DC00209                                            0209
*                   END;                                           0210
         SLR   @10,@10                                             0210
         IC    @10,GROUPLEN                                        0210
         BCTR  @10,0                                               0210
         LR    @14,@10                                             0210
         STC   @14,GROUPLEN                                        0210
         LTR   @14,@14                                             0210
         BNM   @DL00209                                            0210
@DC00209 DS    0H                                                  0211
*                   GROUPNM=JCTXGROP;/* MOVE GROUPID TO LOCAL STORAGE
*                                                            @Z40RPPJ*/
*                                                                  0211
         MVC   GROUPNM(8),JCTXGROP(JCTXPTR)                        0211
*                   /*************************************************/
*                   /*                                               */
*                   /* SET UP GROUP PARAMETER FOR RACINIT    @Z40RPPJ*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0212
*                   DO;             /* RACINIT MF(M,RACL)          0212
*                                      GROUP(GROUPID)                */
*                     RACL09=ADDR(GROUPID);/* ADDR OF GROUP          */
         LA    @14,GROUPID                                         0213
         ST    @14,RACL09                                          0213
*                   END;            /* RACINIT MF(M,RACL)          0214
*                                      GROUP(GROUPID)        @Z40RPPJ*/
*                 END;              /* END OF GROUP CODE     @Z40RPPJ*/
*               ELSE                                               0216
*                 ;                 /*                       @Z40RPPJ*/
@RF00207 DS    0H                                                  0217
*             END;                  /*                       @Z40RPPJ*/
*           ELSE                                                   0218
*             ;                     /*                       @Z40RPPJ*/
*                                                                  0218
@RF00200 DS    0H                                                  0219
*           /*********************************************************/
*           /*                                                       */
*           /* GET PROGRAMMER NAME AND ACCOUNTING INFORMATION FROM   */
*           /* ACCOUNT CONTROL TABLE - ACT                   @G32HPPJ*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0219
*           IF JCTACTAD^=ZERO THEN  /* CHECK FOR VALID ACT ADDRESS 0219
*                                                            @G32HPPJ*/
         ICM   @14,7,JCTACTAD(JCTPTR)                              0219
         BZ    @RF00219                                            0219
*             DO;                                                  0220
*                                                                  0220
*               /*****************************************************/
*               /*                                                   */
*               /* SETUP PARM LIST TO READ ACT IN FROM SWA. USE READ */
*               /* LOCATE INTERFACE                          @G32HPPJ*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0221
*               SWEPAPTR=ADDR(EPA1);/* POINT TO EPA AREA     @G32HPPJ*/
         LA    @14,EPA1                                            0221
         ST    @14,SWEPAPTR                                        0221
*               SWAEPA=''B;         /* CLEAR THE AREA        @G32HPPJ*/
         XC    SWAEPA(16,@14),SWAEPA(@14)                          0222
*               SWVA=JCTACTAD;      /* PUT ACT SVA INTO EPA  @G32HPPJ*/
*                                                                  0223
         MVC   SWVA(3,@14),JCTACTAD(JCTPTR)                        0223
*               /*****************************************************/
*               /*                                                   */
*               /* ?SWAREQ (RL) EPA (SWEPAPTR);                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0224
*               CALL SWAMGR(SWEPAPTR,'RL');                        0224
         LA    @14,SWEPAPTR                                        0224
         ST    @14,@AL00001                                        0224
         LA    @14,@CC02486                                        0224
         ST    @14,@AL00001+4                                      0224
         L     @10,CVTPTR                                          0224
         L     @10,CVTJESCT(,@10)                                  0224
         L     @15,JESWAA(,@10)                                    0224
         LA    @01,@AL00001                                        0224
         BALR  @14,@15                                             0224
*               RFY                                                0225
*                 IEFAACTB BASED(SWBLKPTR);/* SET BASE FOR MAPPING 0225
*                                      MACRO                 @G32HPPJ*/
*               DO;                 /* RACINIT MF(M,RACL)          0226
*                                      PGMNAME(ACTPRGNM)             */
*                 RACL11=ADDR(ACTPRGNM);/* ADDR OF PROGRAMMER NAME   */
         L     @14,SWEPAPTR                                        0227
         L     @14,SWBLKPTR(,@14)                                  0227
         LA    @10,ACTPRGNM(,@14)                                  0227
         ST    @10,RACL11                                          0227
*               END;                /* RACINIT MF(M,RACL)          0228
*                                      PGMNAME(ACTPRGNM) FILL IN   0228
*                                      PROGRAMMER NAME ADDR FOR    0228
*                                      RACINIT               @G32HPPJ*/
*               DO;                 /* RACINIT MF(M,RACL)          0229
*                                      ACTINFO(ACTJNFLD)             */
*                 RACL12=ADDR(ACTJNFLD);/* ADDR OF ACCOUNT         0230
*                                      INFORMATION                   */
         LA    @14,ACTJNFLD(,@14)                                  0230
         ST    @14,RACL12                                          0230
*               END;                /* RACINIT MF(M,RACL)          0231
*                                      ACTINFO(ACTJNFLD) FILL IN   0231
*                                      ACCOUNTING INFORMATION FOR  0231
*                                      RACINIT               @G32HPPJ*/
*             END;                                                 0232
*           ELSE                                                   0233
*             ;                     /* NO ACT BUILT          @G32HPPJ*/
*                                                                  0233
@RF00219 DS    0H                                                  0234
*           /*********************************************************/
*           /*                                                       */
*           /* PASS JOBNAME TO RACINIT                       @ZM44591*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0234
*           DO;                     /* RACINIT MF(M,RACL)          0234
*                                      JOBNAME(JCTJNAME)             */
*             RACL15=ADDR(JCTJNAME);/* ADDR OF JOB NAME              */
         LA    @14,JCTJNAME(,JCTPTR)                               0235
         ST    @14,RACL15                                          0235
*           END;                    /* RACINIT MF(M,RACL)          0236
*                                      JOBNAME(JCTJNAME)     @ZM45591*/
*           IF SSJSPSLN^=ZERO THEN                                 0237
         L     @14,SSOBINDV(,SSOBPTR)                              0237
         CLI   SSJSPSLN(@14),0                                     0237
         BE    @RF00237                                            0237
*             DO;                                                  0238
*               DO;                 /* RACINIT MF(M,RACL)          0239
*                                      PASSWRD(SSJSPASS)             */
*                 RACL06=ADDR(SSJSPASS);/* ADDR OF PASSWORD          */
         LA    @14,SSJSPASS(,@14)                                  0240
         ST    @14,RACL06                                          0240
*               END;                /* RACINIT MF(M,RACL)          0241
*                                      PASSWRD(SSJSPASS)     @Z40RPPJ*/
*             END;                  /*                       @Z40RPPJ
*                                      SET POINTER TO PASSWORD IF  0242
*                                      EXISTS                @Z40RPPJ*/
*           IF SSJSPSL2^=ZERO THEN                                 0243
@RF00237 L     @14,SSOBINDV(,SSOBPTR)                              0243
         CLI   SSJSPSL2(@14),0                                     0243
         BE    @RF00243                                            0243
*             DO;                   /* RACINIT MF(M,RACL)          0244
*                                      NEWPASS(SSJSPAS2)             */
*               RACL10=ADDR(SSJSPAS2);/* ADDR OF NEW PASSWORD        */
         LA    @14,SSJSPAS2(,@14)                                  0245
         ST    @14,RACL10                                          0245
*             END;                  /* RACINIT MF(M,RACL)          0246
*                                      NEWPASS(SSJSPAS2) SET POINTER
*                                      TO NEW PASSWORD IF IT       0246
*                                      EXISTS@Z40RPPJ                */
*           DO;                     /* RACINIT MF(E,RACL)            */
@RF00243 DS    0H                                                  0248
*             RACL01=48;            /* PARM LIST LENGTH              */
         MVI   RACL01,X'30'                                        0248
*             RACL02='00000000'B;   /* RESERVED FIELD                */
         MVI   RACL02,B'00000000'                                  0249
*             RACL03='00000000'B;   /* RESERVED FIELD                */
         MVI   RACL03,B'00000000'                                  0250
*             RACL04='00000000'B;   /* SET ENVIR FLAGS               */
         MVI   RACL04,B'00000000'                                  0251
*             RESPECIFY                                            0252
*               GPR01P RESTRICTED;                                 0252
*             GPR01P=ADDR(RACL);    /* ADDR OF RACINIT LIST          */
         LA    GPR01P,RACL                                         0253
*             IF CVTRAC^=0&RCVTRNA='0'B THEN/* RACF ACTIVE           */
         L     @14,CVTPTR                                          0254
         L     @14,CVTRAC(,@14)                                    0254
         LTR   @14,@14                                             0254
         BZ    @RF00254                                            0254
         TM    RCVTRNA(@14),B'10000000'                            0254
         BNZ   @RF00254                                            0254
*               SVC(131);           /* ISSUE RACINIT SVC             */
         SVC   131                                                 0255
*             ELSE                  /* RACF NOT ACTIVE               */
*               DO;                                                0256
         B     @RC00254                                            0256
@RF00254 DS    0H                                                  0257
*                 RFY                                              0257
*                   GPR15P RSTD;                                   0257
*                 GPR15P=32;        /* SET RACF NOT ACTIVE RET CODE  */
         LA    GPR15P,32                                           0258
*                 RFY                                              0259
*                   GPR15P UNRSTD;                                 0259
*               END;                                               0260
*             RESPECIFY                                            0261
*               GPR01P UNRESTRICTED;                               0261
@RC00254 DS    0H                                                  0262
*           END;                    /* RACINIT MF(E,RACL) GET      0262
*                                      ACCESSOR ENVIR        @Z40RPPJ*/
*           IF(RETCODE^=0&RETCODE^=RACFNACT) THEN/* USER TO RUN OR 0263
*                                      FAIL                  @Z40RPPJ*/
         LTR   RETCODE,RETCODE                                     0263
         BZ    @RF00263                                            0263
         C     RETCODE,@CF00034                                    0263
         BE    @RF00263                                            0263
*             DO;                   /* FAIL                  @Z40RPPJ*/
*               SSOBRETN=JOBFAIL;   /* SET ERROR CODE TO INDICATE  0265
*                                      THAT THE JOB IS TO FAIL AND 0265
*                                      CLEANUP SHOULD BE DONE BY THIS
*                                      MODULE                @Z40RPPJ*/
         MVC   SSOBRETN(4,SSOBPTR),@CF00048                        0265
*               MSGPTR=LCTIMSG+DISPLE;/* GET ADDR OF MSG     @Z40RPPJ*/
         L     @14,LCTIMSG(,LCTPTR)                                0266
         LH    MSGPTR,DISPLE(,@14)                                 0266
         ALR   MSGPTR,@14                                          0266
*               MSGCORE(1:MSGLGTHE)=MESSAGE(1:MSGLGTHE);/* MOVE    0267
*                                      MESSAGE TO GOTTEN AREA      0267
*                                                            @Z40RPPJ*/
         SLR   @10,@10                                             0267
         IC    @10,MSGLGTHE(,@14)                                  0267
         BCTR  @10,0                                               0267
         EX    @10,@SM02545                                        0267
*               JOBNM(1:LENGTH(JOBNM))=JCTJNAME(1:LENGTH(JOBNM));/*
*                                      GET JOBNAME FROM JCT  @Z40RPPJ*/
         LA    @14,MSGCORE                                         0268
         MVC   JOBNM(8,@14),JCTJNAME(JCTPTR)                       0268
*               REASONCD=REASONLN*(RETCODE/4);/* CHOOSE CORRECT    0269
*                                      REASON FOR ERROR      @Z40RPPJ*/
         LR    REASONCD,RETCODE                                    0269
         SRL   REASONCD,2                                          0269
         MH    REASONCD,@CH02469                                   0269
*               IF RETCODE>RACFMAX THEN/* WAS RETURN CODE OUTSIDE OF
*                                      RANGE SUPPORTED?      @G32HPPJ*/
         C     RETCODE,@CF02434                                    0270
         BNH   @RF00270                                            0270
*                 REASONCD=BADRC;   /* YES,ISSUE BAD RETURN CODE   0271
*                                      MESSAGE               @G32HPPJ*/
         SLR   REASONCD,REASONCD                                   0271
*               MSGPTR=MSGPTR+REASONCD+MSGLGTHE;/* POINT TO REASON 0272
*                                      SECTION OF MESSAGE CSECT    0272
*                                                            @Z40RPPJ*/
@RF00270 LR    @14,MSGPTR                                          0272
         ALR   @14,REASONCD                                        0272
         L     @10,LCTIMSG(,LCTPTR)                                0272
         SLR   @07,@07                                             0272
         IC    @07,MSGLGTHE(,@10)                                  0272
         ALR   @14,@07                                             0272
         LR    MSGPTR,@14                                          0272
*               REASON(1:REASONLN)=MESSAGE(1:REASONLN);/* MOVE REASON
*                                      TO MSG                @Z40RPPJ*/
         LA    @14,MSGCORE                                         0273
         MVC   REASON(22,@14),MESSAGE(MSGPTR)                      0273
*               GEN REFS(MSGCORE);                                 0274
*                               /*ISSUE ERROR MESSAGE       @Z40RPPJ*/
          WTO MF=(E,MSGCORE)                                  @Z40RPPJ
*               CALL ERROR;         /* IF ERROR OCCURRED DO CLEANUP
*                                                            @Z40RPPJ*/
         BAL   @14,ERROR                                           0275
*             END;                  /*                       @Z40RPPJ*/
*           ELSE                                                   0277
*             ;                     /* USER SHALL RUN        @Z40RPPJ*/
@RF00263 DS    0H                                                  0278
*         END;                      /*                       @Z40RPPJ*/
*/*  SET ADSP IN JSCB IF ON IN ACEE. THIS FIELD (ACEEADSP) IS SET  0279
*    BY RACINIT IF THE JOB IS TO HAVE AUTOMATIC DATA SET           0279
*    PROTECTION                                              @Z40RPPJ*/
*                                                                  0279
*       ASCBPTR=LCTASCBA;           /* GET ASCB ADDRESS      @Z40RPPJ*/
@RF00172 L     ASCBPTR,LCTASCBA(,LCTPTR)                           0279
*       RFY                                                        0280
*         IEZJSCB BASED(LCTJSCB);   /* REBASE THE JSCB       @Z40RPPJ*/
*       IF ASXBSENV^=ZERO           /* CHECK TO SEE ACEE EXISTS    0281
*                                                            @Z40RPPJ*/
*         THEN                                                     0281
         L     @14,ASCBASXB(,ASCBPTR)                              0281
         L     @14,ASXBSENV(,@14)                                  0281
         LTR   @14,@14                                             0281
         BZ    @RF00281                                            0281
*         DO;                                                      0282
*           IF ACEEADSP=YES THEN    /* SET AUTO DATA SET     @Z40RPPJ*/
         TM    ACEEADSP(@14),B'01000000'                           0283
         BNO   @RF00283                                            0283
*             JSCBADSP=YES;         /* PROTECTION            @Z40RPPJ*/
         L     @14,LCTJSCB(,LCTPTR)                                0284
         OI    JSCBADSP(@14),B'01000000'                           0284
*         END;                                                     0285
@RF00283 DS    0H                                                  0286
*       RFY                                                        0286
*         IEZJSCB BASED(TCBJSCB);   /* RESET JSCB BASE       @Z40RPPJ*/
@RF00281 DS    0H                                                  0287
*                                                                  0287
*/*  IF THIS IS NOT A STARTED TASK THEN A CSCB MUST                0287
*    BE BUILT.  CALL CSCBBULD WILL BUILD AND CHAIN THE CSCB.         */
*                                                                  0287
*       IF(LCTONEJF='0'B&SSOBRETN=0) THEN/* CHECK FOR A STARTED TASK
*                                                            @Z40RPPJ*/
         TM    LCTONEJF(LCTPTR),B'00000100'                        0287
         BNZ   @RF00287                                            0287
         L     @14,SSOBRETN(,SSOBPTR)                              0287
         LTR   @14,@14                                             0287
         BNZ   @RF00287                                            0287
*         CALL CSCBBULD;            /* CHAIN A CSCB FOR NON STARTED
*                                      TASKS                         */
         BAL   @14,CSCBBULD                                        0288
*                                                                  0289
*/*  CHECK FOR A DEFFERED RESTART OR ANY RESTART.  IF EITHER       0289
*    THEN IEFIB605 MUST BE CALLED TO RECONSTRUCT THE JOBS          0289
*    SWA. ON RETURN FROM IEFIB605 A CHECK FOR AN ERROR IS MADE.    0289
*    IF AN ERROR OCCURRED THEN THE ERROR ROUTINE IS CALLED         0289
*    TO CLEAN UP AND THEN CONTROL RETURNS TO IEFIB600'S            0289
*    CALLER.                                                         */
*                                                                  0289
*       IF(SSOBRETN=0&((JCTSYSCK^='0'B)×(SSJSFLG1^=0))) THEN       0289
@RF00287 L     @14,SSOBRETN(,SSOBPTR)                              0289
         LTR   @14,@14                                             0289
         BNZ   @RF00289                                            0289
         TM    JCTSYSCK(JCTPTR),B'10000000'                        0289
         BNZ   @RT00289                                            0289
         L     @14,SSOBINDV(,SSOBPTR)                              0289
         CLI   SSJSFLG1(@14),0                                     0289
         BE    @RF00289                                            0289
@RT00289 DS    0H                                                  0290
*         DO;                       /* Z40RPPJ                       */
*                                                                  0290
*           /*********************************************************/
*           /*                                                       */
*           /* IF THIS IS A DEFERRED RESTART OR ANY OTHER RESTART    */
*           /* THEN SWA HAS TO BE RECONSTRUCTED AND IEFIB605 HAS TO  */
*           /* BE CALLED                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0291
*           IF JCTSYSCK='1'B THEN   /* IS THIS A DEFFERRED RESTART?  */
         TM    JCTSYSCK(JCTPTR),B'10000000'                        0291
         BNO   @RF00291                                            0291
*             LCTRFBDC='1'B;        /* INDICTE IT IN LCT             */
         OI    LCTRFBDC(LCTPTR),B'00010000'                        0292
*           R1=SSOBPTR;             /* POINT R1 TO SSOB              */
@RF00291 LR    R1,SSOBPTR                                          0293
*           CALL IEFIB605;          /* CALL IEFIB605 TO RECONSTRUCT
*                                      SWA                           */
         L     @15,@CV02390                                        0294
         BALR  @14,@15                                             0294
*           IF SSOBRETN^=0 THEN     /* CHECK FOR ERROR IN          0295
*                                      RECONSTRUCTION                */
         L     @14,SSOBRETN(,SSOBPTR)                              0295
         LTR   @14,@14                                             0295
         BZ    @RF00295                                            0295
*             CALL ERROR;           /* DO ERROR PROCESSING           */
         BAL   @14,ERROR                                           0296
*         END;                                                     0297
@RF00295 DS    0H                                                  0298
*     END;                                                         0298
@RF00289 DS    0H                                                  0299
*   GEN( ESTAE 0 );                 /* CLEAR ESTAE ENVIRONMENT       */
@RC00158 DS    0H                                                  0299
          ESTAE 0
*   SUBPOOL=LENGTH(ESTAELST);       /* GET LENGTH FOR FREEMAIN       */
         LA    @14,12                                              0300
         ST    @14,SUBPOOL                                         0300
*   DO;                             /* FREEMAIN(R)                 0301
*                                      LV(SUBPOOL)SP(255)A(ESTAELST) */
*     RESPECIFY                                                    0302
*      (GPR01F,                                                    0302
*       GPR00F) RESTRICTED;                                        0302
*     GPR00F=SUBPOOL;               /* LENGTH REQUESTED              */
         LR    GPR00F,@14                                          0303
*     GPR01F=255;                   /* SP IN REG 1                   */
         LA    GPR01F,255                                          0304
*     GEN(SLL   GPR01F,24)                                         0305
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0305
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0306
*     GPR01F=ADDR(ESTAELST);        /* SET REGISTER ONE              */
         LR    GPR01F,ESTAEPTR                                     0307
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0308
*     RESPECIFY                                                    0309
*      (GPR01F,                                                    0309
*       GPR00F) UNRESTRICTED;                                      0309
*   END;                            /* FREEMAIN(R)                 0310
*                                      LV(SUBPOOL)SP(255)A(ESTAELST) */
*   R15=SSOBRETN;                   /* PUT RETURN CODE IN R15        */
         L     R15,SSOBRETN(,SSOBPTR)                              0311
*   SSOBRETN=0;                     /* CLEAR THE SSOB RETURN FIELD   */
         SLR   @14,@14                                             0312
         ST    @14,SSOBRETN(,SSOBPTR)                              0312
*   RETURN CODE(R15);               /* RETURN TO CALLER              */
         LR    @10,@15                                             0313
         L     @13,4(,@13)                                         0313
         L     @00,@SIZDATD                                        0313
         LR    @01,@11                                             0313
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0313
         L     @14,12(,@13)                                        0313
         LM    @00,@12,20(@13)                                     0313
         BR    @14                                                 0313
*                                                                  0314
*/*  GET A JSCB FOR THE JOB. FILL IN THE FIELDS AND CHAIN IT       0314
*    TO THE INITATORS JSCB.                                          */
*                                                                  0314
*GETJSCB:                                                          0314
*   PROC OPTIONS(NOSAVEAREA);                                      0314
@EL00001 L     @13,4(,@13)                                         0314
@EF00001 L     @00,@SIZDATD                                        0314
         LR    @01,@11                                             0314
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0314
         BR    @14                                                 0314
GETJSCB  STM   @14,@12,12(@13)                                     0314
*   GEN( GETJSCB  SYSTEM=AOS2);     /* GET A JOB JSCB                */
          GETJSCB  SYSTEM=AOS2
*   LCTJSCB=R1;                     /* SET JSCB POINTER IN LCT       */
         ST    R1,LCTJSCB(,LCTPTR)                                 0316
*   TCBPTR=LCTTCBAD;                /* SET CURRENT TCB POINTER       */
         L     TCBPTR,LCTTCBAD(,LCTPTR)                            0317
*   TJIDSAVE=JSCBTJID;              /* SAVE THE TJID                 */
         L     @14,TCBJSCB(,TCBPTR)                                0318
         LH    TJIDSAVE,JSCBTJID(,@14)                             0318
*   JSCBACT=LCTJSCB;                /* SET JSCB ACTIVE FIELD         */
         L     @10,LCTJSCB(,LCTPTR)                                0319
         ST    @10,JSCBACT(,@14)                                   0319
*   RESPECIFY                                                      0320
*     IEZJSCB BASED(LCTJSCB);       /* MAP GOTTEN JSCB               */
*   QMPAPTR=ADDR(QMGR1);            /* BASE THE QMPA                 */
         LA    QMPAPTR,QMGR1(,LCTPTR)                              0321
*   JSCBSWSP=QMSWSP;                /* PUT SWA SUBPOOL NUMBER IN JSCB*/
         IC    @14,QMSWSP(,QMPAPTR)                                0322
         STC   @14,JSCBSWSP(,@10)                                  0322
*   RESPECIFY                                                      0323
*     IFGRPL BASED(RPLPTR);         /* MAP RPL                       */
*   SUBPOOL=LENGTH(IFGRPL);         /* SET LENGTH OF RPL             */
         LA    @14,76                                              0324
         ST    @14,SUBPOOL                                         0324
*   SUBNUM=JSCBSWSP;                /* USE SWA SUBPOOL NUMBER        */
         IC    @07,JSCBSWSP(,@10)                                  0325
         STC   @07,SUBNUM                                          0325
*   IF SSJSJACB^=0 THEN             /* NO JOURNAL THEN NO RPL        */
         L     @10,SSOBINDV(,SSOBPTR)                              0326
         L     @10,SSJSJACB(,@10)                                  0326
         LTR   @10,@10                                             0326
         BZ    @RF00326                                            0326
*     SUBPOOL=SUBPOOL+LENGTH(IFGRPL);/* GET JOURNAL RPL ALSO         */
         AL    @14,SUBPOOL                                         0327
         ST    @14,SUBPOOL                                         0327
*   R0=SUBPOOL;                     /* PUT THE AMOUNT IN REG0        */
@RF00326 L     R0,SUBPOOL                                          0328
*   GEN(GETMAIN R,LV=(0));          /* GET THE RPLS OR RPL           */
         GETMAIN R,LV=(0)
*   RPLPTR=R1;                      /* POINT TO FIRST RPL            */
         LR    RPLPTR,R1                                           0330
*   IFGRPL=IFGRPL&&IFGRPL;          /* CLEAR THE RPL                 */
         XC    IFGRPL(76,RPLPTR),IFGRPL(RPLPTR)                    0331
*   RPLDACB=SSJSMACB;               /* PUT ACB POINTER IN RPL        */
         L     @14,SSOBINDV(,SSOBPTR)                              0332
         L     @10,SSJSMACB(,@14)                                  0332
         ST    @10,RPLDACB(,RPLPTR)                                0332
*   RPLTCBPT=LCTTCBAD;              /* PUT IN TCB ADDRESS            */
         L     @10,LCTTCBAD(,LCTPTR)                               0333
         ST    @10,RPLTCBPT(,RPLPTR)                               0333
*   JSCBSMLR=RPLPTR;                /* PUT RPL POINTER IN JSCB       */
         L     @07,LCTJSCB(,LCTPTR)                                0334
         ST    RPLPTR,JSCBSMLR(,@07)                               0334
*   IF SSJSJACB^=0 THEN             /* BUILD JOURNAL RPL NOW         */
         L     @14,SSJSJACB(,@14)                                  0335
         LTR   @14,@14                                             0335
         BZ    @RF00335                                            0335
*     DO;                                                          0336
*       RPLPTR=RPLPTR+LENGTH(IFGRPL);/* POINT TO SECOND HALF         */
         AL    RPLPTR,@CF02534                                     0337
*       IFGRPL=IFGRPL&&IFGRPL;      /* CLEAR THE RPL                 */
         XC    IFGRPL(76,RPLPTR),IFGRPL(RPLPTR)                    0338
*       RPLDACB=SSJSJACB;           /* PUT JOURNAL ACB IN RPL        */
         ST    @14,RPLDACB(,RPLPTR)                                0339
*       RPLTCBPT=LCTTCBAD;          /* PUT IN ADDRESS OF TCB         */
         ST    @10,RPLTCBPT(,RPLPTR)                               0340
*       JSCBJNLR=RPLPTR;            /* POINT TO JOURNAL RPL          */
         ST    RPLPTR,JSCBJNLR(,@07)                               0341
*     END;                                                         0342
*   JSCBQMPI=ADDR(QMGR1);           /* POINTER TO SWA QMPA           */
@RF00335 L     @14,LCTJSCB(,LCTPTR)                                0343
         LA    @10,QMGR1(,LCTPTR)                                  0343
         ST    @10,JSCBQMPI(,@14)                                  0343
*   JSCBTCBP=LCTTCBAD;              /* PUT MOTHER TCB ADDR IN JSCB   */
         L     @10,LCTTCBAD(,LCTPTR)                               0344
         ST    @10,JSCBTCBP(,@14)                                  0344
*   JSCBCSCB=LCTQDRTY;              /* PUT POINTER TO CSCB IF STARTED
*                                      TASK                          */
         L     @10,LCTQDRTY(,LCTPTR)                               0345
         ST    @10,JSCBCSCB(,@14)                                  0345
*   JSCBJSBI='1'B;                  /* SET JOB STATUS BIT ON         */
*                                                                  0346
         OI    JSCBJSBI(@14),B'00001000'                           0346
*   /*****************************************************************/
*   /*                                                               */
*   /* INDICATES JOB TO ENTER INTERPRETION                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0347
*   IF JSCBJNLR=0 THEN              /* IS THERE A JOURNAL?           */
         L     @10,JSCBJNLR(,@14)                                  0347
         LTR   @10,@10                                             0347
         BNZ   @RF00347                                            0347
*     JSCBJNLF='1'B;                /* IF NO JOURNAL THEN SET THAT 0348
*                                      BIT                           */
         OI    JSCBJNLF(@14),B'01000000'                           0348
*   IF SSJSFLG1^=0 THEN             /* IF ANY RESTART SET JOURNAL BIT*/
@RF00347 L     @14,SSOBINDV(,SSOBPTR)                              0349
         CLI   SSJSFLG1(@14),0                                     0349
         BE    @RF00349                                            0349
*     JSCBJNLN='1'B;                /* SET JOURNAL BIT               */
         L     @14,LCTJSCB(,LCTPTR)                                0350
         OI    JSCBJNLN(@14),B'10000000'                           0350
*   JSCBACT=LCTJSCB;                /* POINT TO ACTIVE JSCB          */
@RF00349 L     @14,LCTJSCB(,LCTPTR)                                0351
         ST    @14,JSCBACT(,@14)                                   0351
*   JSCBTJID=TJIDSAVE;              /* RESTORE THE TJID IN DAUGHTER  */
         STH   TJIDSAVE,JSCBTJID(,@14)                             0352
*   JSCBSSIB=SSOBSSIB;              /* PUT THE SSIB IN DAUGHTER      */
         L     @10,SSOBSSIB(,SSOBPTR)                              0353
         ST    @10,JSCBSSIB(,@14)                                  0353
*   RESPECIFY                                                      0354
*     IEZJSCB BASED(TCBJSCB);       /* REBASE THE JSCB               */
*   END;                                                           0355
@EL00002 DS    0H                                                  0355
@EF00002 DS    0H                                                  0355
@ER00002 LM    @14,@12,12(@13)                                     0355
         BR    @14                                                 0355
*                                                                  0356
*/*  BUILD THE NEL FOR THE INTERPRETER. IF THIS IS A RESTART       0356
*    THEN BUILD A RESTART NEL. THEN RETURN                           */
*                                                                  0356
*NELBUILD:                                                         0356
*   PROC OPTIONS(NOSAVEAREA);                                      0356
NELBUILD STM   @14,@03,12(@13)                                     0356
         STM   @05,@12,40(@13)                                     0356
*   SUBPOOL=LENGTH(NEL)+LENGTH(NELEXITS);/* LENGTH OF NEL            */
         MVC   SUBPOOL(4),@CF02157                                 0357
*   SUBNUM=FOXDOG;                  /* USE SUBPOOL 253               */
         MVC   SUBNUM(1),FOXDOG                                    0358
*   R0=SUBPOOL;                     /* PUT AMOUNT IN REG 0           */
         L     R0,SUBPOOL                                          0359
*   GEN( GETMAIN R,LV=(0) );        /* GET CORE FOR THE NEL          */
          GETMAIN R,LV=(0)
*   NELPTR=R1;                      /* SET UP THE NEL POINTER        */
         LR    NELPTR,R1                                           0361
*   NEL=NEL&&NEL;                   /* CLEAR THE NEL                 */
         XC    NEL(40,NELPTR),NEL(NELPTR)                          0362
*   NELQMPA=ADDR(QMGR1);            /* PUT POINTER TO QMPA IN THE NEL*/
         LA    @14,QMGR1(,LCTPTR)                                  0363
         ST    @14,NELQMPA(,NELPTR)                                0363
*   NELJMR=SSJSJMR;                 /* PUT JMR ADDRESS IN NEL        */
         L     @14,SSOBINDV(,SSOBPTR)                              0364
         L     @10,SSJSJMR(,@14)                                   0364
         ST    @10,NELJMR(,NELPTR)                                 0364
*   RESPECIFY                                                      0365
*     JMR BASED(NELJMR);            /* BASE THE JMR                  */
*   IF NELJMR^=0 THEN               /* MOVE FLAG IF JMR PRESENT      */
         LTR   @10,@10                                             0366
         BZ    @RF00366                                            0366
*     DO;                                                          0367
*       JMRFLG=SSJSFLG1;            /* MOVE FLAG BYTE TO JMR         */
         MVC   JMRFLG(1,@10),SSJSFLG1(@14)                         0368
*       NELSMF='1'B;                /* DO SMF PROCESSING             */
         OI    NELSMF(NELPTR),B'10000000'                          0369
*     END;                                                         0370
*   RESPECIFY                                                      0371
*     JMR BASED(JMRPTR);            /* REBASE THE JMR                */
@RF00366 DS    0H                                                  0372
*   NELTXTCB=SSJSTACB;              /* PUT POINTER TO TEXT ACB IN NEL*/
         L     @14,SSOBINDV(,SSOBPTR)                              0372
         L     @10,SSJSTACB(,@14)                                  0372
         ST    @10,NELTXTCB(,NELPTR)                               0372
*   NELMSGCB=SSJSMACB;              /* PUT POINTER TO MSG ACB IN NEL */
         L     @14,SSJSMACB(,@14)                                  0373
         ST    @14,NELMSGCB(,NELPTR)                               0373
*   IF LCTONEJF='1'B THEN           /* IS THIS A STARTED TASK?       */
         TM    LCTONEJF(LCTPTR),B'00000100'                        0374
         BNO   @RF00374                                            0374
*     DO;                           /* YES, NO SMF FOR STARTED TASKS */
*       NELSMF='0'B;                /* SET SMF PROCESSING            */
         NI    NELSMF(NELPTR),B'01111111'                          0376
*       CSCBPTR=LCTQDRTY;           /* BASE THE CSCB                 */
         L     CSCBPTR,LCTQDRTY(,LCTPTR)                           0377
*       IF CHVCD=NINEGT THEN        /* IS THIS A LOGON?              */
         CLI   CHVCD(CSCBPTR),X'98'                                0378
         BNE   @RF00378                                            0378
*         DO;                       /* YES SET LOGON BITS            */
*           NELADSPC='1'B;          /* NO ADDSPC = REAL FOR THIS JOB */
         OI    NELADSPC(NELPTR),B'10000000'                        0380
*           NELTSOP='1'B;           /* TS SUBPARAMETER OVERRIDES   0381
*                                      OTHERS                        */
*           NELSMF='1'B;            /* SET SMF FOR LOGON     @YM06093*/
         OI    NELTSOP(NELPTR),B'11000000'                         0382
*         END;                                                     0383
*     END;                                                         0384
@RF00378 DS    0H                                                  0385
*   IF LCTRFBSM='1'B THEN           /* IF RECOVERY THEN PUT THAT IN
*                                      NEL                           */
@RF00374 TM    LCTRFBSM(LCTPTR),B'10000000'                        0385
         BNO   @RF00385                                            0385
*     DO;                                                          0386
*       NELEXLST=ADDR(NEL)+LENGTH(NELLIST);/* BASE THE EXIT LIST     */
         LA    @14,40                                              0387
         ALR   @14,NELPTR                                          0387
         ST    @14,NELEXLST(,NELPTR)                               0387
*       NELEXITS=NELEXITS&&NELEXITS;/* CLEAR EXIT LIST               */
         XC    NELEXITS(16,@14),NELEXITS(@14)                      0388
*       NELEXLEN=LENGTH(NELEXITS);  /* LENGTH OF THE EXIT LIST       */
         MVC   NELEXLEN(2,@14),@CH00365                            0389
*       NELRECVY='1'B;              /* SET RECOVERY BIT ON           */
         OI    NELRECVY(NELPTR),B'00100000'                        0390
*       NELQEPLK='80'X;             /* INDICATE 6 BYTE NAME EXIT TYPE*/
         MVI   NELQEPLK(@14),X'80'                                 0391
*       NELQEPID='08'X;             /* INDICATE QMGR TYPE EXIT       */
         MVI   NELQEPID(@14),X'08'                                 0392
*       NELQEPEP=IEF602;            /* MOVE THE NAME IN THE LIST     */
         MVC   NELQEPEP(6,@14),IEF602                              0393
*     END;                                                         0394
*   END;                                                           0395
@EL00003 DS    0H                                                  0395
@EF00003 DS    0H                                                  0395
@ER00003 LM    @14,@03,12(@13)                                     0395
         LM    @05,@12,40(@13)                                     0395
         BR    @14                                                 0395
*                                                                  0396
*/*  BUILD AND CHAIN A CSCB FOR THIS JOB. GET THE CORE             0396
*    FROM SUBPOOL 245 AND THEN ADD THE CSCB TO THE CHAIN             */
*                                                                  0396
*CSCBBULD:                                                         0396
*   PROC OPTIONS(NOSAVEAREA);                                      0396
CSCBBULD STM   @14,@07,12(@13)                                     0396
         STM   @09,@12,56(@13)                                     0396
*   SUBPOOL=LENGTH(CHAIN);          /* SET IN THE LENGTH             */
         MVC   SUBPOOL(4),@CF01779                                 0397
*   SUBNUM=FOXFIVE;                 /* PUT IN SUBPOOL 245            */
         MVC   SUBNUM(1),FOXFIVE                                   0398
*   R0=SUBPOOL;                     /* PUT LENGTH OF GETMAIN         */
         L     R0,SUBPOOL                                          0399
*   GEN(GETMAIN R,LV=(0) );         /* GET THE AREA FOR THE CSCB     */
         GETMAIN R,LV=(0)
*   CSCBPTR=R1;                     /* BASE THE CSCB                 */
         LR    CSCBPTR,R1                                          0401
*   LCTQDRTY=CSCBPTR;               /* PUT THE CSCB ADDRESS IN THE 0402
*                                      LCT                           */
         ST    CSCBPTR,LCTQDRTY(,LCTPTR)                           0402
*   RESPECIFY                                                      0403
*     IEZJSCB BASED(LCTJSCB);       /* BASE THE JSCB                 */
*   JSCBCSCB=CSCBPTR;               /* PUT IN THE CSCBPTR IN JSCB    */
         L     @14,LCTJSCB(,LCTPTR)                                0404
         ST    CSCBPTR,JSCBCSCB(,@14)                              0404
*   RESPECIFY                                                      0405
*     IEZJSCB BASED(TCBJSCB);       /* REBASE THE JSCB               */
*   CHAIN=CHAIN&&CHAIN;             /* CLEAR THE CSCB                */
         XC    CHAIN(176,CSCBPTR),CHAIN(CSCBPTR)                   0406
*   CHAD='1'B;                      /* ADD THIS CSCB TO THE CHAIN    */
         OI    CHAD(CSCBPTR),B'00001000'                           0407
*   CHCL='1'B;                      /* SET THIS JOB CANCELABLE       */
         OI    CHCL(CSCBPTR),B'00001000'                           0408
*   JCTPTR=LCTJCTAD;                /* SET UP JCT POINTER            */
         L     JCTPTR,LCTJCTAD(,LCTPTR)                            0409
*   CHKEY=JCTJNAME;                 /* MOVE IN THE JOB NAME          */
         MVC   CHKEY(8,CSCBPTR),JCTJNAME(JCTPTR)                   0410
*   CHCLS=CHKEY;                    /* MOVE IN THE JOB NAME          */
         MVC   CHCLS(8,CSCBPTR),CHKEY(CSCBPTR)                     0411
*   ASCBPTR=LCTASCBA;               /* ADDRESS THE ASCB              */
         L     ASCBPTR,LCTASCBA(,LCTPTR)                           0412
*   CHASID=ASCBASID;                /* MOVE IN THE ASID              */
         LH    @14,ASCBASID(,ASCBPTR)                              0413
         N     @14,@CF02551                                        0413
         STH   @14,CHASID(,CSCBPTR)                                0413
*   ASCBJBNI=ADDR(CHKEY);           /* PUT JOBNAME ADDRESS IN ASCB 0414
*                                                              Y02677*/
         LA    @14,CHKEY(,CSCBPTR)                                 0414
         ST    @14,ASCBJBNI(,ASCBPTR)                              0414
*   CHSZE=LENGTH(CHAIN);            /* PUT LENGTH IN CHSZE           */
         LA    @14,176                                             0415
         STC   @14,CHSZE(,CSCBPTR)                                 0415
*   CHSZE=CHSZE/8;                  /* PUT DOUBLE WORD SIZE IN CSCB  */
         SRL   @14,3                                               0416
         STC   @14,CHSZE(,CSCBPTR)                                 0416
*   CHTRKID='02'X;                  /* THIS JOB IS A NON STARTED TASK*/
         MVI   CHTRKID(CSCBPTR),X'02'                              0417
*   CHECBP=ADDR(CHECB);             /* ADDRESS OF STOP ECB           */
         LA    @14,CHECB(,CSCBPTR)                                 0418
         ST    @14,CHECBP(,CSCBPTR)                                0418
*   CHUNIT=BLANKS;                  /* BLANK OUT CHUNIT              */
         MVC   CHUNIT(3,CSCBPTR),BLANKS                            0419
*   R1=CSCBPTR;                     /* POINT R1 TO THE CSCB TO CHAIN
*                                      IT                            */
         LR    R1,CSCBPTR                                          0420
*   GEN(MGCR  (1),CHAIN );          /* CHAIN THIS CSCB               */
         MGCR  (1),CHAIN
*   END;                                                           0422
@EL00004 DS    0H                                                  0422
@EF00004 DS    0H                                                  0422
@ER00004 LM    @14,@07,12(@13)                                     0422
         LM    @09,@12,56(@13)                                     0422
         BR    @14                                                 0422
*                                                                  0423
*/*  AN ERROR OCCURRED, SO FREE THE JOBS SWA, FREE THE JOBS        0423
*    JSCB, FREE THE VAT , CSCB IF PRESENT                            */
*                                                                  0423
*ERROR:                                                            0423
*   PROC;                                                          0423
ERROR    STM   @14,@12,@SA00005                                    0423
*   QMPAPTR=ADDR(QMGR1);            /* POINT TO QMPA IN LCT          */
*                                                                  0424
         LA    QMPAPTR,QMGR1(,LCTPTR)                              0424
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE SWA IF SUBPOOL 236 OR 237                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0425
*   IF(QMSWSP='EC'X)×(QMSWSP='ED'X) THEN                           0425
         CLI   QMSWSP(QMPAPTR),X'EC'                               0425
         BE    @RT00425                                            0425
         CLI   QMSWSP(QMPAPTR),X'ED'                               0425
         BNE   @RF00425                                            0425
@RT00425 DS    0H                                                  0426
*     DO;                                                          0426
*       QMPOP=QDELETE;              /* DELETE THE SUBPOOL            */
         MVI   QMPOP(QMPAPTR),X'08'                                0427
*       R1=QMPAPTR;                 /* GO TO SWA MANAGER             */
         LR    R1,QMPAPTR                                          0428
*       RFY                                                        0429
*         R1 RSTD;                  /*                       @Z40RPPJ*/
*/*      06/30/72  R2                                                */
*                                                                  0430
*       DCL                                                        0430
*         SWAMGPTR REG(15) PTR(31);                                0430
*       SWAMGPTR=CVTJESCT->JESQMGR;                                0431
         L     @10,CVTPTR                                          0431
         L     @10,CVTJESCT(,@10)                                  0431
         L     SWAMGPTR,JESQMGR(,@10)                              0431
*       GEN(BALR 14,15);            /* GO TO SWA MANAGER             */
         BALR 14,15
*       RFY                                                        0433
*         R1 UNRSTD;                /*                       @Z40RPPJ*/
*     END;                                                         0434
*   RESPECIFY                                                      0435
*     IEZJSCB BASED(LCTJSCB);       /* REBASE JSCB                   */
@RF00425 DS    0H                                                  0436
*   VATPTR=JSCBVATA;                /* POINT TO THE VAT              */
         L     @01,LCTJSCB(,LCTPTR)                                0436
         L     VATPTR,JSCBVATA(,@01)                               0436
*   DO WHILE(VATPTR^=0);            /* FREE THE VATS PRESENT         */
         B     @DE00437                                            0437
@DL00437 DS    0H                                                  0438
*     R1=VATPTR;                    /* POINT R1 TO THE VAT           */
         LR    R1,VATPTR                                           0438
*     R0=TABSIZE;                   /* PUT LENGTH IN R0              */
         LA    R0,800                                              0439
*     VATPTR=VATX;                  /* POINT TO NEXT VAT             */
         L     VATPTR,VATX(,VATPTR)                                0440
*     GEN(FREEMAIN R,LV=(0),A=(1)); /* FREE THE VAT                  */
         FREEMAIN R,LV=(0),A=(1)
*   END;                                                           0442
@DE00437 LTR   VATPTR,VATPTR                                       0442
         BNZ   @DL00437                                            0442
*   R1=LCTJSCB;                     /* POINT TO JSCB TO FREE         */
         L     R1,LCTJSCB(,LCTPTR)                                 0443
*   GEN( FREEJSCB SYSTEM=AOS2);     /* FREE THE JSCB                 */
          FREEJSCB SYSTEM=AOS2
*   RESPECIFY                                                      0445
*     IEZJSCB BASED(TCBJSCB);       /* REBASE THE JSCB               */
*   TCBPTR=LCTTCBAD;                /* ADDRESS THE TCB               */
         L     TCBPTR,LCTTCBAD(,LCTPTR)                            0446
*   JSCBACT=TCBJSCB;                /* RESET JSCB ACTIVE FIELD       */
         L     @14,TCBJSCB(,TCBPTR)                                0447
         ST    @14,JSCBACT(,@14)                                   0447
*   IF(LCTQDRTY^=0)&(LCTONEJF='0'B) THEN                           0448
         SLR   @14,@14                                             0448
         L     @10,LCTQDRTY(,LCTPTR)                               0448
         CR    @10,@14                                             0448
         BE    @RF00448                                            0448
         TM    LCTONEJF(LCTPTR),B'00000100'                        0448
         BNZ   @RF00448                                            0448
*     DO;                                                          0449
*       ASCBPTR=LCTASCBA;           /* ADDRESS THE ASCB        Y02667*/
         L     ASCBPTR,LCTASCBA(,LCTPTR)                           0450
*       ASCBJBNI=0;                 /* SET THE JOBNAME ADDRESS TO  0451
*                                      ZER0                    Y02667*/
         ST    @14,ASCBJBNI(,ASCBPTR)                              0451
*       CSCBPTR=LCTQDRTY;           /* POINT TO THE CSCB             */
         LR    CSCBPTR,@10                                         0452
*       CHDL='1'B;                  /* DELETE THIS CSCB FROM CHAIN   */
*       CHFC='1'B;                  /* FREE THE CORE FOR THIS CSCB   */
         OI    CHDL(CSCBPTR),B'00000110'                           0454
*       R1=CSCBPTR;                 /* POINT TO CSCB                 */
         LR    R1,CSCBPTR                                          0455
*       GEN(MGCR  (1),CHAIN );      /* UNCHAIN THE CSCB              */
         MGCR  (1),CHAIN
*       LCTQDRTY=0;                 /* CLEAR THE CSCB PTR            */
         SLR   @14,@14                                             0457
         ST    @14,LCTQDRTY(,LCTPTR)                               0457
*     END;                                                         0458
*   END;                                                           0459
@EL00005 DS    0H                                                  0459
@EF00005 DS    0H                                                  0459
@ER00005 LM    @14,@12,@SA00005                                    0459
         BR    @14                                                 0459
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0460
*     GPR01F FIXED(31) REG(1),                                     0460
*     GPR01P PTR(31) REG(1),                                       0460
*     GPR15P PTR(31) REG(15);                                      0460
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0461
*     I031F FIXED(31) BASED,                                       0461
*     I031P PTR(31) BASED,                                         0461
*     I015F FIXED(15) BASED,                                       0461
*     I015P PTR(15) BASED,                                         0461
*     I008P PTR(8) BASED,                                          0461
*     I001C CHAR(1) BASED;                                         0461
*   END                                                            0462
*                                                                  0462
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (ICHPRCVT)                                       */
*/*%INCLUDE SYSLIB  (IEFNELDF)                                       */
*/*%INCLUDE SYSLIB  (IEFNEL  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEFALLCT)                                       */
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IEFJCTX )                                       */
*/*%INCLUDE SYSLIB  (IEFQMNGR)                                       */
*/*%INCLUDE SYSLIB  (IEFZB505)                                       */
*/*%INCLUDE SYSLIB  (IEFJESCT)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IEFZB611)                                       */
*/*%INCLUDE SYSLIB  (IEFJMR  )                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IEFZB646)                                       */
*/*%INCLUDE SYSLIB  (IHAACEE )                                       */
*/*%INCLUDE SYSLIB  (IEFQMREQ)                                       */
*                                                                  0462
*       ;                                                          0462
@DATA    DS    0H
@CH00365 DC    H'16'
@CH02469 DC    H'22'
@SM02541 MVC   RESTAE(0),LESTAE
@SM02545 MVC   MSGCORE(0),MESSAGE(MSGPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00005 DS    15F
@AL00001 DS    2A
IEFIB600 CSECT
         DS    0F
@CF00048 DC    F'4'
@CF00034 DC    F'32'
@CF02434 DC    F'40'
@CF02157 DC    F'56'
@CF02534 DC    F'76'
@CF01779 DC    F'176'
@CF02551 DC    XL4'0000FFFF'
@CF02490 DC    XL3'0'
         DC    C'0'
@DATD    DSECT
         DS    0D
SWEPAPTR DS    A
SUBPOOL  DS    FL4
         ORG   SUBPOOL
SUBNUM   DS    CL1
@NM00159 DS    CL3
         ORG   SUBPOOL+4
PARMPTR  DS    A
EPA1     DS    CL16
USER     DS    CL9
         ORG   USER
USERLEN  DS    AL1
USERNM   DS    CL8
         ORG   USER+9
GROUPID  DS    CL9
         ORG   GROUPID
GROUPLEN DS    AL1
GROUPNM  DS    CL8
         ORG   GROUPID+9
PROCNAME DS    CL8
         DS    CL2
RACL     DS    CL48
         ORG   RACL
RACL01   DS    AL1
RACL02   DS    BL1
RACL03   DS    BL1
RACL04   DS    BL1
RACL05   DS    AL4
RACL06   DS    AL4
RACL07   DS    AL4
RACL08   DS    AL4
RACL09   DS    AL4
RACL10   DS    AL4
RACL11   DS    AL4
RACL12   DS    AL4
RACL13   DS    AL4
RACL14   DS    AL4
RACL15   DS    AL4
         ORG   RACL+48
MSGCORE  DS    CL92
IEFIB600 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02390 DC    V(IEFIB605)
@CV02391 DC    V(IEFIB645)
         DS    0D
@CC02486 DC    C'RL'
FOXDOG   DC    X'FD'
FOXFIVE  DC    X'F5'
IEF602   DC    CL6'IEF602'
BLANKS   DC    CL3'   '
BLANK    DC    CL1' '
PATCH    DC    X'00'
         DS    49XL1
IEFIB600 CSECT
LESTAE ESTAE RECORD=YES,MF=L
SESTAE1 EQU  *
SESTAE DC    A(SESTAE1-LESTAE)
@DATD    DSECT
*                               /*CORE FOR ESTAE LIST*/
RESTAE ESTAE RECORD=YES,MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFIB600 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MSGPTR   EQU   @04
REASONCD EQU   @06
TJIDSAVE EQU   @06
ESTAEPTR EQU   @09
RPLPTR   EQU   @04
VATPTR   EQU   @04
QMPAPTR  EQU   @04
JCTXPTR  EQU   @04
ASCBPTR  EQU   @04
JCTPTR   EQU   @08
CSCBPTR  EQU   @06
NELPTR   EQU   @04
TCBPTR   EQU   @04
LCTPTR   EQU   @02
SSOBPTR  EQU   @03
R0       EQU   @00
R1       EQU   @01
R4       EQU   @04
R6       EQU   @06
R13      EQU   @13
R15      EQU   @15
RETCODE  EQU   @15
GPR01F   EQU   @01
GPR00F   EQU   @00
GPR01P   EQU   @01
GPR15P   EQU   @15
SWAMGPTR EQU   @15
CVTPTR   EQU   16
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
RCVT     EQU   0
RCVTSTAT EQU   RCVT+53
RCVTRNA  EQU   RCVTSTAT
RCVTSTA1 EQU   RCVT+150
RCVTAUOP EQU   RCVT+151
RCVTFLGS EQU   RCVT+153
RCVTEROP EQU   RCVT+154
NEL      EQU   0
NELLIST  EQU   NEL
NELQMPA  EQU   NELLIST
NELEXLST EQU   NELLIST+4
NELTXTCB EQU   NELLIST+12
NELMSGCB EQU   NELLIST+16
NELJMR   EQU   NELLIST+20
NELOPSWT EQU   NELLIST+24
NELSMF   EQU   NELOPSWT
NELTSOP  EQU   NELOPSWT
NELRECVY EQU   NELOPSWT
NELJCT   EQU   NELLIST+28
NELOPSW2 EQU   NELLIST+32
NELADSPC EQU   NELOPSW2
NELEXITS EQU   0
NELEXHDR EQU   NELEXITS
NELEXLEN EQU   NELEXHDR
QEPEXT   EQU   NELEXITS+8
NELQEPLK EQU   QEPEXT
NELQEPID EQU   QEPEXT+1
NELQEPEP EQU   QEPEXT+2
NELEXENT EQU   0
NELEXEP  EQU   NELEXENT+2
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBTCBP EQU   JSCBSEC1+20
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBQMPI EQU   JSCBSEC1+56
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBCSCB EQU   JSCBSEC1+68
JSCBEND1 EQU   IEZJSCB+260
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHVCD    EQU   CHFLG
CHSZE    EQU   CHFLG+1
CHSTS    EQU   CHFLG+2
CHAD     EQU   CHSTS
CHDL     EQU   CHSTS
CHFC     EQU   CHSTS
CHACT    EQU   CHFLG+3
CHCL     EQU   CHACT
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHCLS    EQU   CHAIN+16
CHUNIT   EQU   CHAIN+24
CHPKE    EQU   CHAIN+28
CHTRKID  EQU   CHPKE
CHTJID   EQU   CHAIN+30
CHASID   EQU   CHTJID
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHECBP   EQU   CHASM
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHECB    EQU   CHASM+16
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00032 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTSCTVA EQU   LCTWORKA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTPARM2 EQU   LCT+40
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00059 EQU   LCT+76
LCTINTSW EQU   @NM00059
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
QMGR1    EQU   LCT+248
LCTASCBA EQU   LCT+320
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
LCTONEJF EQU   LCTOPSW1
@NM00085 EQU   LCT+356
LCTOPSW2 EQU   @NM00085
LCTBPRAC EQU   LCTOPSW2
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTJCTVA EQU   LCTJCTDA
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
LCTRFBSM EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
@NM00098 EQU   LCT+420
LCTINTS2 EQU   @NM00098+1
LCTIMSG  EQU   LCT+432
INJMJCT  EQU   0
JCTDSKAD EQU   INJMJCT
JCTJSTAT EQU   INJMJCT+5
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTJNAME EQU   INJMJCT+8
JCTSDKAD EQU   INJMJCT+32
JCTJCTX  EQU   INJMJCT+36
JCTACTAD EQU   INJMJCT+40
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTRSW2  EQU   INJMJCT+87
JCTSYSCK EQU   JCTRSW2
JCTJSB   EQU   INJMJCT+111
JCTSTAT2 EQU   INJMJCT+116
JCTUSER  EQU   INJMJCT+160
IEFAACTB EQU   0
ACTPRGNM EQU   IEFAACTB+8
ACTJNFLD EQU   IEFAACTB+31
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBJBNI EQU   ASCB+172
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
JCTXIN   EQU   0
JCTXGROP EQU   JCTXIN+4
QMPA     EQU   0
QMNAM    EQU   QMPA
QMPOP    EQU   QMPA+8
QMSTA    EQU   QMPA+16
QMPCL    EQU   QMPA+32
QMPCMNC  EQU   QMPCL
SWAQMPA  EQU   0
QMSWSP   EQU   SWAQMPA
SWAEPA   EQU   0
SWBLKPTR EQU   SWAEPA
SWVAFW   EQU   SWAEPA+4
SWVA     EQU   SWVAFW
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESQMGR  EQU   JESCT+12
JESSSREQ EQU   JESCT+20
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SWAMGR   EQU   0
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLTCBPT EQU   RPLCOMN+28
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
VAT      EQU   0
VATX     EQU   VAT
VATENTRY EQU   VAT+12
VATOVA   EQU   VATENTRY+4
VATNVA   EQU   VATENTRY+8
VATMSW   EQU   VATENTRY+13
JMR      EQU   0
JMRFLG   EQU   JMR+30
JMROPT   EQU   JMR+54
JMRPTR   EQU   0
SSOB     EQU   0
SSOBSSIB EQU   SSOB+8
SSOBRETN EQU   SSOB+12
SSOBINDV EQU   SSOB+16
SSJS     EQU   0
SSJSFLG1 EQU   SSJS+6
SSJSSTRS EQU   SSJSFLG1
SSJSCHRS EQU   SSJSFLG1
SSJSCNRS EQU   SSJSFLG1
SSJSWARM EQU   SSJSFLG1
SSJSAIFG EQU   SSJSFLG1
SSJSLCT  EQU   SSJS+8
SSJSMACB EQU   SSJS+12
SSJSJACB EQU   SSJS+16
SSJSTACB EQU   SSJS+20
SSJSJMR  EQU   SSJS+28
SSJSAIAD EQU   SSJS+36
SSJSPASS EQU   SSJS+40
SSJSPSLN EQU   SSJSPASS
SSJSPAS2 EQU   SSJS+49
SSJSPSL2 EQU   SSJSPAS2
ASXB     EQU   0
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBSENV EQU   ASXBSECR+1
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
ESTAELST EQU   0
SSOBAREA EQU   ESTAELST
SAVEAREA EQU   ESTAELST+4
NELAREA  EQU   ESTAELST+8
SDWAPARM EQU   0
ACEE     EQU   0
ACEECORE EQU   ACEE+4
ACEEUSER EQU   ACEE+20
ACEEGRP  EQU   ACEE+29
ACEEFLG1 EQU   ACEE+38
ACEEADSP EQU   ACEEFLG1
ACEEFLG2 EQU   ACEE+39
ACEEFLG3 EQU   ACEE+40
ACEEFLG4 EQU   ACEE+56
SAVE     EQU   0
BACKPTR  EQU   SAVE+4
MSGRTNHD EQU   0
@NM00161 EQU   MSGRTNHD+52
MSGLGTHE EQU   @NM00161+1
DISPLE   EQU   @NM00161+2
MSGAREA  EQU   0
JOBNM    EQU   MSGAREA+12
REASON   EQU   MSGAREA+32
MESSAGE  EQU   0
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
SSREQ    EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTRAC   EQU   CVTS01+644
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBTJID EQU   JSCBASID
JSCBFBYT EQU   JSCBSEC3+10
JSCBADSP EQU   JSCBFBYT
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBJNLN EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
JSCBJNLR EQU   JSCBSEC3+32
JSCBSMLR EQU   JSCBSEC3+36
JSCBSUB  EQU   JSCBSEC3+40
JSCBSSIB EQU   JSCBSEC3+56
JSCSCT   EQU   JSCBSEC3+68
JSCBVATA EQU   JSCBSEC3+76
JSCBSWSP EQU   JSCBSEC3+87
JSCBACT  EQU   JSCBSEC3+88
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
*                                      START UNREFERENCED COMPONENTS
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00025 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
@NM00021 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
@NM00020 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00164 EQU   MSGAREA+20
@NM00163 EQU   MSGAREA
@NM00162 EQU   @NM00161
@NM00160 EQU   MSGRTNHD
@NM00158 EQU   SAVE
ACEETRID EQU   ACEE+64
ACEETRDA EQU   ACEE+60
ACEETRLV EQU   ACEE+59
@NM00157 EQU   ACEE+58
@NM00156 EQU   ACEEFLG4
ACEETERM EQU   ACEEFLG4
ACEETAPE EQU   ACEEFLG4
ACEEDASD EQU   ACEEFLG4
@NM00155 EQU   ACEEFLG4
ACEEUATH EQU   ACEEFLG4
@NM00154 EQU   ACEEFLG4
@NM00153 EQU   ACEEFLG4
ACEETRMP EQU   ACEE+52
ACEEPROC EQU   ACEE+44
ACEEDATE EQU   ACEE+41
@NM00152 EQU   ACEEFLG3
@NM00151 EQU   ACEEFLG3
@NM00150 EQU   ACEEFLG3
@NM00149 EQU   ACEEFLG3
@NM00148 EQU   ACEEFLG3
@NM00147 EQU   ACEEFLG3
@NM00146 EQU   ACEEFLG3
ACEEGRPA EQU   ACEEFLG3
ACEENONE EQU   ACEEFLG2
@NM00145 EQU   ACEEFLG2
@NM00144 EQU   ACEEFLG2
@NM00143 EQU   ACEEFLG2
ACEEREAD EQU   ACEEFLG2
ACEEUPDT EQU   ACEEFLG2
ACEECNTL EQU   ACEEFLG2
ACEEALTR EQU   ACEEFLG2
ACEERACF EQU   ACEEFLG1
@NM00142 EQU   ACEEFLG1
@NM00141 EQU   ACEEFLG1
ACEELOGU EQU   ACEEFLG1
ACEEAUDT EQU   ACEEFLG1
ACEEOPER EQU   ACEEFLG1
ACEESPEC EQU   ACEEFLG1
ACEEGRPN EQU   ACEEGRP+1
ACEEGRPL EQU   ACEEGRP
ACEEUSRI EQU   ACEEUSER+1
ACEEUSRL EQU   ACEEUSER
ACEEINST EQU   ACEE+16
ACEEIEP  EQU   ACEE+12
@NM00140 EQU   ACEE+8
ACEELEN  EQU   ACEECORE+1
ACEESP   EQU   ACEECORE
ACEEACEE EQU   ACEE
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
SSJSPSW2 EQU   SSJSPAS2+1
SSJSPSWD EQU   SSJSPASS+1
SSJSSERR EQU   SSJS+32
SSJSIPRM EQU   SSJS+24
@NM00139 EQU   SSJS+7
@NM00138 EQU   SSJSFLG1
@NM00137 EQU   SSJSFLG1
SSJSSTEP EQU   SSJS+4
@NM00136 EQU   SSJS+2
SSJSLEN  EQU   SSJS
SSOBFUNC EQU   SSOB+6
SSOBLEN  EQU   SSOB+4
SSOBID   EQU   SSOB
JMRJCLCP EQU   JMR+72
JMRJCLP  EQU   JMR+68
JMRJOBP  EQU   JMR+64
@NM00135 EQU   JMR+62
JMRJCLCD EQU   JMR+61
JMRSYSOC EQU   JMR+56
@NM00134 EQU   JMR+55
JMRFIND  EQU   JMROPT
@NM00133 EQU   JMROPT
JMRXONLY EQU   JMROPT
JMREXITS EQU   JMROPT
JMRSTPSW EQU   JMROPT
JMRJOBSW EQU   JMROPT
JMRRDR   EQU   JMR+52
JMRJOBIN EQU   JMR+48
JMRDRSTP EQU   JMR+40
JMRUJVP  EQU   JMR+36
JMRUCOM  EQU   JMR+32
JMRCLASS EQU   JMR+31
@NM00132 EQU   JMRFLG
JMRWARM  EQU   JMRFLG
@NM00131 EQU   JMRFLG
JMRCNRS  EQU   JMRFLG
JMRCHRS  EQU   JMRFLG
JMRSTRS  EQU   JMRFLG
JMRINDC  EQU   JMR+29
JMRSTEP  EQU   JMR+28
JMRUSEID EQU   JMR+20
JMRCPUID EQU   JMR+16
JMREDATE EQU   JMR+12
JMRENTRY EQU   JMR+8
JMRJOB   EQU   JMR
@NM00130 EQU   VATMSW
VATDYNAM EQU   VATMSW
VATNUPDT EQU   VATMSW
VATBLKID EQU   VATENTRY+12
@NM00129 EQU   VATNVA+3
VATRNVA  EQU   VATNVA
@NM00128 EQU   VATOVA+3
VATROVA  EQU   VATOVA
VATRBN   EQU   VATENTRY
@NM00127 EQU   VAT+9
VATNO    EQU   VAT+8
VATBPTR  EQU   VAT+4
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00126 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00125 EQU   RPLRBAR+3
@NM00124 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00123 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
JESSASTA EQU   JESCT+48
JESNUCBS EQU   JESCT+44
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESUNITS EQU   JESCT+4
@NM00122 EQU   JESCT
SWCHNPTR EQU   SWAEPA+12
SWLNGTH  EQU   SWAEPA+8
SWBLKID  EQU   SWVAFW+3
QMRBN    EQU   SWAQMPA+12
@NM00121 EQU   SWAQMPA+1
QMPACL   EQU   QMPCL+1
QMPNC    EQU   QMPCMNC
QMPCM    EQU   QMPCMNC
QMEIA    EQU   QMPA+28
QMWTQ    EQU   QMPA+24
QMRSD1   EQU   QMPA+22
QMTID    EQU   QMPA+20
QMLNK    EQU   QMPA+18
QMPRI    EQU   QMPA+17
@NM00120 EQU   QMSTA
QMSJNL   EQU   QMSTA
@NM00119 EQU   QMSTA
QMTPY    EQU   QMPA+15
QMNOT    EQU   QMPA+14
QMTLN    EQU   QMPA+12
QMTST    EQU   QMPA+11
QMFLT    EQU   QMPA+9
QMPEB    EQU   QMNAM+4
QMCAN    EQU   QMNAM
JCTXRESV EQU   JCTXIN+12
JCTXIDNT EQU   JCTXIN+3
JCTXDSKA EQU   JCTXIN
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
ACTACCNT EQU   IEFAACTB+32
ACTJTIME EQU   IEFAACTB+28
@NM00118 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
@NM00117 EQU   INJMJCT+175
JCTVULDP EQU   INJMJCT+172
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTSSD   EQU   INJMJCT+157
@NM00116 EQU   INJMJCT+156
JCTSRBT  EQU   INJMJCT+152
JCTJMRJD EQU   INJMJCT+149
JCTJMRJT EQU   INJMJCT+146
JCTJMRSS EQU   INJMJCT+143
JCTJMRTL EQU   INJMJCT+140
JCTJMRCL EQU   INJMJCT+139
JCTJMROP EQU   INJMJCT+138
JCTJMRD  EQU   INJMJCT+137
JCTJMR   EQU   INJMJCT+134
JCTCKIDT EQU   INJMJCT+118
JCTCKIDL EQU   INJMJCT+117
@NM00115 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00114 EQU   INJMJCT+115
JCTSSTR  EQU   INJMJCT+112
JCTJSBTM EQU   JCTJSB
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00113 EQU   JCTJSB
JCTVOLSQ EQU   INJMJCT+110
JCTNRCKP EQU   INJMJCT+108
JCTNTRK  EQU   INJMJCT+107
JCTCKTTR EQU   INJMJCT+104
JCTDEVT  EQU   INJMJCT+100
@NM00112 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTSNUMB EQU   INJMJCT+95
JCTQIDNT EQU   INJMJCT+94
JCTEQREG EQU   INJMJCT+92
@NM00111 EQU   INJMJCT+91
JCTDETDA EQU   INJMJCT+88
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTNARST EQU   JCTRSW2
@NM00110 EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTCKFT  EQU   JCTRSW1
JCTCONTR EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
JCTWARMS EQU   JCTRSW1
@NM00109 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00108 EQU   INJMJCT+53
JCTSCT   EQU   INJMJCT+52
JCTSMRBA EQU   INJMJCT+44
@NM00107 EQU   INJMJCT+43
@NM00106 EQU   INJMJCT+39
@NM00105 EQU   INJMJCT+35
JCTJCSMF EQU   INJMJCT+31
JCTGDGNT EQU   INJMJCT+28
@NM00104 EQU   INJMJCT+27
JCTPDIP  EQU   INJMJCT+24
JCTJTPTN EQU   INJMJCT+16
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00103 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
INCMSTS  EQU   JCTJSTAT
JCTABEND EQU   JCTJSTAT
@NM00102 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00101 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTJSRNO EQU   INJMJCT+4
JCTIDENT EQU   INJMJCT+3
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00100 EQU   LCT+436
LCTLBWAP EQU   LCT+428
@NM00099 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00098
LCTRFB1  EQU   LCT+419
@NM00097 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00096 EQU   LCTJCTDA+3
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00095 EQU   LCT+364
@NM00094 EQU   LCTJSCB+1
@NM00093 EQU   LCTOPSW3
@NM00092 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00091 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00090 EQU   LCTOPSW3
@NM00089 EQU   @NM00085+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
@NM00088 EQU   LCTOPSW2
@NM00087 EQU   LCTOPSW2
@NM00086 EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00084 EQU   LCTEXIT+1
@NM00083 EQU   LCTOPSW1
@NM00082 EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00081 EQU   LCTOPSW1
@NM00080 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00079 EQU   LCTTSRB4
@NM00078 EQU   LCT+340
@NM00077 EQU   LCTSPIL+3
@NM00076 EQU   LCTALCFG
@NM00075 EQU   LCTALCFG
@NM00074 EQU   LCTALCFG
@NM00073 EQU   LCTALCFG
@NM00072 EQU   LCTALCFG
@NM00071 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00070 EQU   ECBLIST+1
@NM00069 EQU   ECBLIST
LCTJMRAD EQU   LCT+324
@NM00068 EQU   LCT+284
REGSAVE  EQU   LCT+104
@NM00067 EQU   LCTATLST+1
@NM00066 EQU   LCTATLST
@NM00065 EQU   LCTJOBLB+1
@NM00064 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00063 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00062 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00061 EQU   LCTTJTU4
@NM00060 EQU   @NM00059+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00058 EQU   LCTSREG+1
@NM00057 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00056 EQU   LCTSMBAD+1
@NM00055 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
LCTSNUMB EQU   LCT+58
@NM00054 EQU   LCTJFCBH
@NM00053 EQU   LCTJFCBH
@NM00052 EQU   LCTJFCBH
@NM00051 EQU   LCTJFCBH
@NM00050 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00049 EQU   LCTCMCBA+1
@NM00048 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTPARM1 EQU   LCT+36
LCTVTERM EQU   LCTERR
LCTJCFAL EQU   LCTERR
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
LCTJFAIL EQU   LCTERR
@NM00047 EQU   LCTPSPAR+1
@NM00046 EQU   LCTPSPAR
@NM00045 EQU   LCTWORKA+3
@NM00044 EQU   LCTSCTAD+1
@NM00043 EQU   LCTSCTAD
@NM00042 EQU   LCTJCTAD+1
@NM00041 EQU   LCTJCTAD
@NM00040 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00032
@NM00039 EQU   @NM00032
@NM00038 EQU   @NM00032
@NM00037 EQU   @NM00032
@NM00036 EQU   @NM00032
@NM00035 EQU   @NM00032
@NM00034 EQU   @NM00032
@NM00033 EQU   @NM00032
@NM00031 EQU   LCTTCBAD+1
@NM00030 EQU   LCTTCBAD
@NM00029 EQU   LCTSRTAD+1
@NM00028 EQU   LCTSRTAD
@NM00027 EQU   LCTQDRTY+1
@NM00026 EQU   LCTQDRTY
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00024 EQU   CHSHORT+84
@NM00023 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00022 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHUCMP   EQU   CHAIN+29
CHCIBCTR EQU   CHAIN+27
CHPCOI   EQU   CHPARM
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHPTR    EQU   CHAIN
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00019 EQU   JSCBSEC1+60
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00018 EQU   IEZJSCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00017 EQU   CVTFIX+248
@NM00016 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
NELEXEPA EQU   NELEXEP+2
@NM00015 EQU   NELEXEP
NELEXID  EQU   NELEXENT+1
NELEXLK  EQU   NELEXENT
@NM00014 EQU   NELQEPEP
@NM00013 EQU   NELEXHDR+4
NELXRTCD EQU   NELEXHDR+2
@NM00012 EQU   NELLIST+33
@NM00011 EQU   NELOPSW2
@NM00010 EQU   NELLIST+25
@NM00009 EQU   NELOPSWT
NELCOMID EQU   NELLIST+8
RCVTEXTA EQU   RCVT+173
RCVTVERS EQU   RCVT+172
RCVTRID0 EQU   RCVT+168
RCVTRCXP EQU   RCVT+164
RCVTRIXP EQU   RCVT+160
RCVTRAU0 EQU   RCVT+156
RCVTPINV EQU   RCVT+155
@NM00008 EQU   RCVTEROP
RCVTSAUD EQU   RCVTEROP
RCVTAVIO EQU   RCVTEROP
RCVTTUAC EQU   RCVTEROP
RCVTTERP EQU   RCVTEROP
RCVTSHR  EQU   RCVTFLGS
RCVTRDHD EQU   RCVTFLGS
RCVTROFF EQU   RCVTFLGS
RCVTAXTA EQU   RCVT+152
RCVTATER EQU   RCVTAUOP
RCVTATAP EQU   RCVTAUOP
RCVTADAS EQU   RCVTAUOP
RCVTADAT EQU   RCVTAUOP
RCVTAUSE EQU   RCVTAUOP
RCVTAGRO EQU   RCVTAUOP
@NM00007 EQU   RCVTAUOP
@NM00006 EQU   RCVTSTA1
RCVTTAPE EQU   RCVTSTA1
RCVTUVOL EQU   RCVT+144
RCVTUADS EQU   RCVT+100
RCVTDSN  EQU   RCVT+56
RCVTNREC EQU   RCVT+54
@NM00005 EQU   RCVTSTAT
RCVTNTMS EQU   RCVTSTAT
RCVTNDVS EQU   RCVTSTAT
RCVTNTVS EQU   RCVTSTAT
RCVTNDSS EQU   RCVTSTAT
RCVTNLS  EQU   RCVTSTAT
RCVTDSNL EQU   RCVT+52
RCVTISTL EQU   RCVT+48
RCVTBAM  EQU   RCVT+44
RCVTXLEN EQU   RCVT+40
RCVTRUCB EQU   RCVT+36
RCVTRDX  EQU   RCVT+32
RCVTRCX  EQU   RCVT+28
RCVTRIX  EQU   RCVT+24
RCVTHDR  EQU   RCVT+20
RCVTTEMP EQU   RCVT+16
RCVTINDX EQU   RCVT+12
RCVTDEB  EQU   RCVT+8
RCVTDCB  EQU   RCVT+4
RCVTID   EQU   RCVT
@NM00004 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00003 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00002 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00001 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
*                                      END UNREFERENCED COMPONENTS
@RF00385 EQU   @EL00003
@RF00448 EQU   @EL00005
@ENDDATA EQU   *
         END   IEFIB600,(C'PLS1237',0701,76356)
