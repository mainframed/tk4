         TITLE 'IEFJWTOM - IEFJWTOM MESSAGE WTO ROUTINE                *
                        '
IEFJWTOM CSECT ,                                                   0001
@MAINENT BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFJWTOM  73.344'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0042
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REGISTER 1 IS ZERO,THEN ABEND WITH 0B1 ABEND.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0042
*   IF REG1=0 THEN                                                 0042
         LTR   REG1,REG1                                           0042
         BNZ   @RF00042                                            0042
*     GEN(ABEND 177,,,SYSTEM);                                     0043
*                                                                  0043
         ABEND 177,,,SYSTEM
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE RPL POINTER FROM REGISTER 1                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0044
*   RPLPTR=REG1;                                                   0044
@RF00042 LR    RPLPTR,REG1                                         0044
*   RESPECIFY                                                      0045
*     IFGRPL BASED(RPLPTR);                                        0045
*                                                                  0045
*   /*****************************************************************/
*   /*                                                               */
*   /* VALIDITY CHECK RPL FIELDS - RPLAREA,RPLRLEN. IF EITHER IS     */
*   /* ZERO,THEN SET LOGICAL ERROR RETURN IN REGISTER 15 AND         */
*   /* ILLOGICAL REQUEST ERROR IN RPLRTNCD.                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0046
*   IF RPLAREA=0×RPLRLEN=0 THEN                                    0046
         SLR   @15,@15                                             0046
         C     @15,RPLAREA(,RPLPTR)                                0046
         BE    @RT00046                                            0046
         C     @15,RPLRLEN(,RPLPTR)                                0046
         BNE   @RF00046                                            0046
@RT00046 DS    0H                                                  0047
*     DO;                                                          0047
*       RTNCDE=8;                   /* LOGICAL ERROR RETURN IN R15   */
         LA    RTNCDE,8                                            0048
*       RPLRTNCD=8;                 /* ILLOGICAL REQUEST RETURN IN 0049
*                                      RPL                           */
         MVI   RPLRTNCD(RPLPTR),X'08'                              0049
*       RPLERRCD=RPLINLRQ;          /* INCORRECT REQUEST             */
         MVI   RPLERRCD(RPLPTR),X'74'                              0050
*     END;                                                         0051
*   ELSE                                                           0052
*     DO;                                                          0052
*                                                                  0052
         B     @RC00046                                            0052
@RF00046 DS    0H                                                  0053
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE MESSAGE POINTER FROM RPL                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0053
*       MSGPTR=RPLAREA;                                            0053
*                                                                  0053
         L     MSGPTR,RPLAREA(,RPLPTR)                             0053
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE MESSAGE LENGTH FROM RPL                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0054
*       MSGLEN=RPLRLEN;                                            0054
*                                                                  0054
         L     MSGLEN,RPLRLEN(,RPLPTR)                             0054
*       /*************************************************************/
*       /*                                                           */
*       /* SET RETURN CODE IN RPL AND R15 TO ZERO                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0055
*       RPLRTNCD=0;                                                0055
         MVI   RPLRTNCD(RPLPTR),X'00'                              0055
*       RTNCDE=0;                                                  0056
*                                                                  0056
         SLR   RTNCDE,RTNCDE                                       0056
*       /*************************************************************/
*       /*                                                           */
*       /* GET WTO LIST FORM BUFFER                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0057
*/*       ADCON FOR WTOLIST LENGTH HAS HIGH ORDER BYTE OF ZERO.230 0057
*         SERVES AS SUBPOOL NUMBER FOR GETMAIN AND FREEMAIN.         */
*                                                                  0057
*       REG0=WTOLEN;                                               0057
         L     REG0,WTOLEN                                         0057
*       REG0=REG0×SPNUMBER;         /* 230 INTO HIGH ORDER BYTE    0058
*                                                            @YM02481*/
         O     REG0,SPNUMBER                                       0058
*       GEN(GETMAIN R,LV=(0));                                     0059
         GETMAIN R,LV=(0)
*       WPLPTR=REG1;                /* SET UP ADDRESSABILITY FOR LIST*/
*                                                                  0060
         LR    WPLPTR,REG1                                         0060
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE GOTTEN CORE WITH LIST EXPANDED IN CSECT        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0061
*       WTOCORE(1:WTOLEN)=WTOCSECT(1:WTOLEN);                      0061
*                                                                  0061
         L     @15,WTOLEN                                          0061
         BCTR  @15,0                                               0061
         EX    @15,@SM00367                                        0061
*       /*************************************************************/
*       /*                                                           */
*       /* MOVE MESSAGE ID INTO MESSAGE BUFFER IN WTO LIST           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0062
*       WPLTXT(1:8)=MSGID;                                         0062
*                                                                  0062
         MVC   WPLTXT(8,WPLPTR),MSGID                              0062
*       /*************************************************************/
*       /*                                                           */
*       /* ADD LENGTH OF TWO FIELDS PRECEEDING MESSAGE TEXT IN WTO   */
*       /* MACRO EXPANSION TO GET LENGTH OF MESSAGE, THEN SUBTRACT   */
*       /* LENGTH OF MESSAGE ID.                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0063
*       TEXTLEN=WPLLGH-(LENGTH(WPLLGH)+LENGTH(WPLMCSF)+LENGTH(MSGID));
*                                                                  0063
         LH    TEXTLEN,WPLLGH(,WPLPTR)                             0063
         SH    TEXTLEN,@CH00167                                    0063
*       /*************************************************************/
*       /*                                                           */
*       /* SCAN MESSAGE BACKWARDS FOR BLANKS.TRUNCATE TRAILING       */
*       /* BLANKS.                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0064
*       MSGLEN=MSGLEN-1;            /* SUBTRACT 1 FOR BACK SCAN      */
         BCTR  MSGLEN,0                                            0064
*       DO MSGLEN TO 0 BY-1 WHILE SCANBLNK='40'X;                  0065
         B     @DE00065                                            0065
@DL00065 LR    @15,MSGPTR                                          0065
         ALR   @15,MSGLEN                                          0065
         CLI   SCANBLNK(@15),X'40'                                 0065
         BNE   @DC00065                                            0065
*       END;                                                       0066
*                                                                  0066
         BCTR  MSGLEN,0                                            0066
@DE00065 LTR   MSGLEN,MSGLEN                                       0066
         BNM   @DL00065                                            0066
@DC00065 DS    0H                                                  0067
*       /*************************************************************/
*       /*                                                           */
*       /* PRECEDING LOOP REDUCES MSGLEN TO LENGTH OF MSG MINUS 1    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0067
*       MSGLEN=MSGLEN+1;                                           0067
*                                                                  0067
         AH    MSGLEN,@CH00046                                     0067
*       /*************************************************************/
*       /*                                                           */
*       /* A MESSAGE LENGTH OF ZERO,MEANING A BLANK MESSAGE,WILL     */
*       /* RETURN A LOGICAL ERROR IN REG 15, AND AN ILLOGICAL REQUEST*/
*       /* CODE IN THE RPL.                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0068
*       IF MSGLEN=0 THEN                                           0068
         LTR   MSGLEN,MSGLEN                                       0068
         BNZ   @RF00068                                            0068
*         DO;                                                      0069
*           RTNCDE=8;                                              0070
         LA    RTNCDE,8                                            0070
*           RPLRTNCD=8;                                            0071
         MVI   RPLRTNCD(RPLPTR),X'08'                              0071
*           RPLERRCD=RPLINLEN;      /* INVALID LENGTH PASSED         */
         MVI   RPLERRCD(RPLPTR),X'6C'                              0072
*         END;                                                     0073
*       ELSE                                                       0074
*         DO;                                                      0074
         B     @RC00068                                            0074
@RF00068 DS    0H                                                  0075
*                                                                  0075
*           /*********************************************************/
*           /*                                                       */
*           /* SCAN MESSAGE FOR CHARACTERS OTHER THAN ALPHA-NUMERIC  */
*           /* IN ORDER TO FIND A BREAKING POINT.IF MESSAGE IS LESS  */
*           /* THAN MAXIMUM ALLOWED,THEN JUST ISSUE ONE MESSAGE.     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0075
*           DO WHILE MSGLEN>TEXTLEN;                               0075
*                                                                  0075
         B     @DE00075                                            0075
@DL00075 DS    0H                                                  0076
*             /*******************************************************/
*             /*                                                     */
*             /* SCAN BACKWARDS FROM THE MAXIMUM LENGTH OF MESSAGE TO*/
*             /* THE BEGINNING TO FIND THE SPECIAL CHARACTER TO BREAK*/
*             /* FOR THE SECOND MESSAGE.IF NO SPECIAL CHARACTERS     */
*             /* EXIST,PLACE THE MAXIMUM NUMBER OF CHARACTERS IN THE */
*             /* BUFFER AND ISSUE WTO.                               */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0076
*             LGNTH=TEXTLEN-1;      /* LENGTH OF MAXIMUM MESSAGE FOR
*                                      WTO MINUS 1 FOR BACKWARD SCAN */
         LR    LGNTH,TEXTLEN                                       0076
         BCTR  LGNTH,0                                             0076
*             DO LGNTH TO 0 BY-1 WHILE SCANCHAR^=' '&SCANCHAR^=',';
         B     @DE00077                                            0077
@DL00077 LR    @15,MSGPTR                                          0077
         ALR   @15,LGNTH                                           0077
         CLI   SCANCHAR(@15),C' '                                  0077
         BE    @DC00077                                            0077
         CLI   SCANCHAR(@15),C','                                  0077
         BE    @DC00077                                            0077
*             END;                                                 0078
         BCTR  LGNTH,0                                             0078
@DE00077 LTR   LGNTH,LGNTH                                         0078
         BNM   @DL00077                                            0078
@DC00077 DS    0H                                                  0079
*             IF LGNTH<0 THEN                                      0079
         LTR   LGNTH,LGNTH                                         0079
         BNM   @RF00079                                            0079
*               LGNTH=TEXTLEN;      /* LENGHT IS MAXIMUM WITH NO   0080
*                                      SP.CHAR                       */
         LR    LGNTH,TEXTLEN                                       0080
*             ELSE                                                 0081
*               LGNTH=LGNTH+1;      /* ADD ONE BECAUSE OF BACKWARD 0081
*                                      SCAN                          */
*                                                                  0081
         B     @RC00079                                            0081
@RF00079 AH    LGNTH,@CH00046                                      0081
*             /*******************************************************/
*             /*                                                     */
*             /* PUT LENGTH OF MESSAGE INTO WTO LIST.ADD LENGTH OF   */
*             /* FOUR BYTE WTO LIST HEADER AND EIGHT BYTE MESSAGE ID.*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0082
*             WPLLGH=LGNTH+12;      /* PUT ACTUAL LENGTH INTO WTO  0082
*                                      LIST                          */
@RC00079 LA    @15,12                                              0082
         ALR   @15,LGNTH                                           0082
         STH   @15,WPLLGH(,WPLPTR)                                 0082
*             WPLTXT(9:LGNTH+8)=MSGBUF(1:LGNTH);/* MOVE MESSAGE IN   */
*                                                                  0083
         LR    @15,LGNTH                                           0083
         BCTR  @15,0                                               0083
         EX    @15,@SM00369                                        0083
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE WTO                                           */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0084
*             GEN(WTO MF=(E,(2)));                                 0084
*                                                                  0084
         WTO MF=(E,(2))
*             /*******************************************************/
*             /*                                                     */
*             /* RESET MSGPTR AND MSGLEN TO REFLECT REMAINING PORTION*/
*             /* OF THE MESSAGE.                                     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0085
*             MSGPTR=MSGPTR+LGNTH;  /* ADJUST MSGPTR FOR REST OF MSG */
         ALR   MSGPTR,LGNTH                                        0085
*             MSGLEN=MSGLEN-LGNTH;  /* ADJUST MSGLEN FOR REST OF MSG */
         SLR   MSGLEN,LGNTH                                        0086
*           END;                                                   0087
@DE00075 CR    MSGLEN,TEXTLEN                                      0087
         BH    @DL00075                                            0087
*                                                                  0088
*           /*********************************************************/
*           /*                                                       */
*           /* PUT OUT LAST MESSAGE,OR FIRST MESSAGE IF IT IS LESS   */
*           /* THAN THE LENGTH OF THE BUFFER. MOVE MESSAGE           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0088
*           WPLTXT(9:MSGLEN+8)=MSGBUF(1:MSGLEN);                   0088
*                                                                  0088
         LR    @06,MSGLEN                                          0088
         BCTR  @06,0                                               0088
         EX    @06,@SM00369                                        0088
*           /*********************************************************/
*           /*                                                       */
*           /* LENGTH OF MESSAGE IS ACTUAL LENGTH IN MSGLEN PLUS THE */
*           /* LENGTH OF THE FOUR BYTE WTO LIST HEADER AND THE EIGHT */
*           /* BYTE MESSAGE ID.                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0089
*           WPLLGH=MSGLEN+12;                                      0089
*                                                                  0089
         LA    @06,12                                              0089
         ALR   @06,MSGLEN                                          0089
         STH   @06,WPLLGH(,WPLPTR)                                 0089
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE WTO                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0090
*           GEN(WTO MF=(E,(2)));                                   0090
         WTO MF=(E,(2))
*         END;                                                     0091
*                                                                  0091
*       /*************************************************************/
*       /*                                                           */
*       /* FREE WTO BUFFER                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0092
*       REG0=WTOLEN;                                               0092
@RC00068 L     REG0,WTOLEN                                         0092
*       REG0=REG0×SPNUMBER;         /* 230 INTO HIGH ORDER BYTE    0093
*                                                            @YM02481*/
         O     REG0,SPNUMBER                                       0093
*       REG1=WPLPTR;                                               0094
         LR    REG1,WPLPTR                                         0094
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0095
         FREEMAIN R,LV=(0),A=(1)
*     END;                                                         0096
*                                                                  0096
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER WITH RETURN CODE IN R15                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0097
*   RETURN CODE(RTNCDE);                                           0097
@RC00046 LR    @15,RTNCDE                                          0097
         L     @14,12(,@13)                                        0097
         LM    @00,@12,20(@13)                                     0097
         BR    @14                                                 0097
*   END IEFJWTOM                    /* END OF MODULE               0098
*                                                                    */
*                                                                  0098
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (IDARMRCD)                                       */
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */
*                                                                  0098
*       ;                                                          0098
@DATA    DS    0H
@CH00046 DC    H'1'
@CH00167 DC    H'12'
@SM00367 MVC   WTOCORE(0,WPLPTR),WTOCSECT
@SM00369 MVC   WPLTXT+8(0,WPLPTR),MSGBUF(MSGPTR)
@DATD    DSECT
         DS    0F
IEFJWTOM CSECT
         DS    0F
@DATD    DSECT
         DS    0D
IEFJWTOM CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SPNUMBER DC    XL4'E6000000'
MSGID    DC    CL8'IEF196I '
WTOMPTCH DS    CL25
         ORG   WTOMPTCH
@NM00003 DC    25X'00'
         ORG   WTOMPTCH+25
IEFJWTOM CSECT
WTOCSECT WTO   '72 CHARACTER MAXIMUM FOR HARDCOPY DEVICES INCLUDING MESS
               SAGE ID PREFIX   ',MCSFLAG=(HRDCPY),MF=L
WTOLEN   DC    A(*-WTOCSECT)
@DATD    DSECT
@ENDDATD EQU   *
IEFJWTOM CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
LGNTH    EQU   @03
TEXTLEN  EQU   @06
RTNCDE   EQU   @07
MSGPTR   EQU   @05
MSGLEN   EQU   @04
RPLPTR   EQU   @03
WPLPTR   EQU   @02
REG0     EQU   @00
REG1     EQU   @01
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBK  EQU   RPLCOMN+13
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLERRCD EQU   RPLCNDCD+1
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPL6RBA  EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLLGH   EQU   WPL
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
MSGBUF   EQU   0
WTOCORE  EQU   0
SCANBLNK EQU   0
SCANCHAR EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLMLLEN EQU   WPLML+1
WPLML0   EQU   WPLML
WPLLINES EQU   WPLLS01+3
WPLAREA  EQU   WPLLS01+2
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTB EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00002 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFA EQU   WPLMCSF1
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
RPLGVNT  EQU   RPLEXTD1
RPLLVNT  EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPL6RBA+2
RPLS2S2  EQU   RPL6RBA
RPLS1S1  EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLRSV75 EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
RPLSSNIN EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLFDB3  EQU   RPLERRCD
RPLFDB2  EQU   RPLCMPON
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLCOMN+12
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFJWTOM
