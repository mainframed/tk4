         TITLE 'IEFIB620, INITIATOR TASK RECOVERY EXIT ROUTINE         *
                        '
IEFIB620 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFIB620  76.155'                              01S0001
         DROP  @15
@PROLOG  BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*   R2=R1;                          /* SAVE PTR. TO RTCA (IF ANY)    */
         LR    R2,R1                                            01S0047
*   R3=R14;                         /* SAVE RETURN ADDRESS           */
         LR    R3,R14                                           01S0048
*   IF R0=NORTCA                                                01S0049
*                                                               01S0049
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO RTCA IS PRESENT, INDICATE NO RETRY AND DO NO OTHER      */
*   /* PROCESSING.                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0049
*     THEN                                                      01S0049
         CH    R0,@CH01632                                      01S0049
         BNE   @RF00049                                         01S0049
*     R15=NORETRY1;                 /* SET RETURN CODE TO INDICATE NO
*                                      RETRY                         */
         SLR   R15,R15                                          01S0050
*   ELSE                                                        01S0051
*                                                               01S0051
*     /***************************************************************/
*     /*                                                             */
*     /* IN GENERAL, AN RTCA WILL BE PROVIDED                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0051
*     DO;                                                       01S0051
         B     @RC00049                                         01S0051
@RF00049 DS    0H                                               01S0052
*       GEN;                                                    01S0052
*       AUTOMATIC STORAGE MUST BE EXPLICITLY
*       GOTTEN AND FREED, BECAUSE IT IS NECESSARY TO
*       EXAMINE BOTH REGISTERS 0 AND 1 UPON ENTRY TO THIS
*       MODULE, AND THE PLS GETMAIN WOULD DESTROY REGISTER 0
         L     R0,@SIZDATD         LOAD SUBPOOL AND SIZE
         GETMAIN R,LV=(0)
         LR    R11,R1
         USING @DATD,R11
*       RESPECIFY                                               01S0053
*        (R0,                                                   01S0053
*         R1,                                                   01S0053
*         R14,                                                  01S0053
*         R15) UNRSTD;                                          01S0053
*                                                               01S0053
*       /*************************************************************/
*       /*                                                           */
*       /* PERFORM CLEANUP PROCESSING. (RESTORE INITIATOR TIOT PTR.  */
*       /* IF NECESSARY AND DEQ OFF PROTECT KEY AND CSDCPUJS         */
*       /* RESOURCES IN CASE THEY ARE HELD.) THEN SET RETURN CODE IN */
*       /* THE IEL.                                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0054
*                                                               02S0054
*       /*************************************************************/
*       /*                                                           */
*       /* RESTORE THE FIELD IN THE LCT WHICH POINTS TO THE CURRENT  */
*       /* TCB. (IT MAY HAVE BEEN RESET TO POINT TO THE DUMMY TCB FOR*/
*       /* UNALLOCATION.) THIS INSTRUCTION HAS BEEN MOVED FOR PTM    */
*       /* 5499, TO INSURE THAT THE FIELD IS RESTORED BEFORE IT IS   */
*       /* USED.                                              YM05499*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0054
*       LCTTCBAD=PSATOLD;           /*                        YM03148*/
         L     @10,SDWAPARM(,R2)                                02S0054
         L     @01,STELCT(,@10)                                 02S0054
         L     @00,PSATOLD                                      02S0054
         ST    @00,LCTTCBAD(,@01)                               02S0054
*       IF STEPARAM^=0 THEN         /* MAKE SURE IEFPARAM EXISTS
*                                      BEFORE USING IT (IT IS NOT
*                                      SUPPOSED TO EXIST DURING THE
*                                      ENTIRE LIFE OF AN INITIATOR).
*                                                             YM02212*/
         SLR   @01,@01                                          02S0055
         L     @10,STEPARAM(,@10)                               02S0055
         CR    @10,@01                                          02S0055
         BE    @RF00055                                         02S0055
*         IF PARTIOTB^=0                                        02S0056
*                                                               02S0056
*         /***********************************************************/
*         /*                                                         */
*         /* IF PARTIOTB IS NON-ZERO, THEN IT CONTAINS THE           */
*         /* INITIATOR'S TIOT POINTER. IT IS SAVED THERE WHEN THE    */
*         /* INITIATOR'S TCB IS SET TO POINT TO THE P/P'S TIOT. THIS */
*         /* HAPPENS WHEN JOBLIB IS OPENED OR CLOSED OR WHEN THE P/P */
*         /* IS ATTACHED. THE POINTER IS RESTORED HERE, SO RETRY OR  */
*         /* TERMINATION CAN CONTINUE IN A NORMAL ENVIRONMENT.       */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0056
*           THEN                                                02S0056
         L     @15,PARTIOTB(,@10)                               02S0056
         CR    @15,@01                                          02S0056
         BE    @RF00056                                         02S0056
*           DO;                                                 02S0057
*             TCBTIO=PARTIOTB;                                  02S0058
         LR    @14,@00                                          02S0058
         ST    @15,TCBTIO(,@14)                                 02S0058
*             PARTIOTB=0;           /* CLEAR SO THE PTR. WILL NOT BE
*                                      RESTORED AGAIN                */
         ST    @01,PARTIOTB(,@10)                               02S0059
*           END;                                                02S0060
*                                                               02S0060
*       /*************************************************************/
*       /*                                                           */
*       /* IF A DAUGHTER TCB EXISTS DETACH IT                @ZM30470*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0061
*       IF TCBLTC^=0 THEN           /* CHECK FOR DAUGHTER    @ZM30470*/
@RF00056 DS    0H                                               02S0061
@RF00055 L     @10,SDWAPARM(,R2)                                02S0061
         L     @10,STELCT(,@10)                                 02S0061
         L     @10,LCTTCBAD(,@10)                               02S0061
         ICM   @15,15,TCBLTC(@10)                               02S0061
         BZ    @RF00061                                         02S0061
*         DO;                       /*                       @ZM30470*/
*           RFY                                                 02S0063
*            (R1) RSTD;                                         02S0063
*           R1=ADDR(TCBLTC);        /*                       @ZM30470*/
         LA    R1,TCBLTC(,@10)                                  02S0064
*           GEN( DETACH (1));       /* REMOVE DAUGHTER       @ZM30470*/
          DETACH (1)
*           RFY                                                 02S0066
*            (R1) UNRSTD;                                       02S0066
*         END;                      /*                       @ZM30470*/
*                                                               02S0067
*       /*************************************************************/
*       /*                                                           */
*       /* IF A POINTER TO THE P/P JSCB EXISTS, SET UP THE INITIATORS*/
*       /* JSCB TO POINT TO THAT JSCB (AS THE ACTIVE JSCB). WHEN A   */
*       /* P/P JSCB EXISTS, IT IS NORMALLY THE ACTIVE JSCB. IN ORDER */
*       /* TO PERMIT SMF EXIT ROUTINES TO OPEN DATA SETS WHICH ARE   */
*       /* ALLOCATED TO THE INITIATOR, THE INITIATOR JSCB IS POINTED */
*       /* TO AS THE ACTIVE JSCB FOR THE PERIOD OF TIME WHEN THESE   */
*       /* EXITS ARE INVOKED. THE POINTER IS RESTORED HERE, BECAUSE  */
*       /* IEFSMFIE DOES NOT HAVE ITS OWN RECOVERY ENVIRONMENT.      */
*       /*                                                    YM04108*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0068
*       IF LCTJSCB^=0               /*                        YM04108*/
*         THEN                                                  02S0068
@RF00061 L     @10,SDWAPARM(,R2)                                02S0068
         L     @10,STELCT(,@10)                                 02S0068
         L     @15,LCTJSCB(,@10)                                02S0068
         LTR   @15,@15                                          02S0068
         BZ    @RF00068                                         02S0068
*         JSCBACT=LCTJSCB;          /*                        YM04108*/
*                                                               02S0069
         L     @10,LCTTCBAD(,@10)                               02S0069
         L     @10,TCBJSCB(,@10)                                02S0069
         ST    @15,JSCBACT(,@10)                                02S0069
*       /*************************************************************/
*       /*                                                           */
*       /* DEQ FROM RESOURCES WHICH THE INITIATOR MAY HOLD, IN CASE  */
*       /* THEY ARE CURRENTLY HELD.                            Y02651*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0070
*       DEQCORE(1:DEQLEN)=DEQKEY(1:DEQLEN);/* MOVE LIST FOR PROTECT
*                                      KEY RESOURCE TO AUTOMATIC
*                                      STORAGE                 Y02651*/
@RF00068 L     @10,DEQLEN                                       02S0070
         BCTR  @10,0                                            02S0070
         EX    @10,@SM01701                                     02S0070
*       GEN REFS(DEQCORE);                                      02S0071
         DEQ   MF=(E,DEQCORE),                                        **
               RELATED=('BAPKES, ENQ AND DEQ IN IEFSD161 OR IEFSD166')
*                                                               Y02651
*       DEQCORE(1:DEQLEN)=DEQCSD(1:DEQLEN);/* MOVE LIST FOR ALIVE-CPU
*                                      MASK RESOURCE TO AUTOMATIC
*                                      STORAGE                 Y02651*/
         L     @10,DEQLEN                                       02S0072
         BCTR  @10,0                                            02S0072
         EX    @10,@SM01703                                     02S0072
*       GEN REFS(DEQCORE);                                      02S0073
*                                                       /*    Y02651*/
         DEQ   MF=(E,DEQCORE),                                        **
               RELATED=('CSDCPUJS, ENQ AND DEQ USUALLY IN IEFICPUA')
*                                                               Y02651
*       ASCBAFFN=NOAFFIN;           /* TURN OFF CPU-TASK AFFINITY IN
*                                      CASE IT HAD BEEN SET    Y02651*/
         L     @10,SDWAPARM(,R2)                                02S0074
         L     @05,STELCT(,@10)                                 02S0074
         L     @01,LCTASCBA(,@05)                               02S0074
         MVC   ASCBAFFN(2,@01),NOAFFIN                          02S0074
*       ABENDCOD=SDWAABCC&OPENMASK; /* CLEAR PRIOR TO CHECKING FOR
*                                      'OPEN' ABEND CODE             */
         L     ABENDCOD,SDWAABCC(,R2)                           02S0075
         N     ABENDCOD,OPENMASK                                02S0075
*/********************************************************************/
*/*                                                                  */
*/*       IF NO RETURN CODE IS ALREADY SET IN THE IEL, SET ONE OF    */
*/*       THE FOLLOWING CODES:                                       */
*/*          OPEN ERRORS:                                            */
*/*             JOBLIB ERROR                                         */
*/*             STEPLIB ERROR                                        */
*/*             FETCHLIB ERROR                                       */
*/*             ALLOCATION ERROR (ACTUALLY OPEN CATALOG ERROR)       */
*/*          PROGRAM ERROR (ANY ERROR NOT LISTED ABOVE)              */
*/*       IF THIS ROUTINE SETS A RETURN CODE IN THE IEL, IT WILL SET */
*/*       ONE OF THE FOLLOWING RETURN CODE ORIGINS:                  */
*/*          SUBSYSTEM INTERFACE ERROR                               */
*/*          INITIATOR ERROR                                         */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0076
*       IF IELRTNCD='00'X THEN                                  02S0076
         L     @05,LCTENTR(,@05)                                02S0076
         L     @05,IELEXIT(,@05)                                02S0076
         CLI   IELRTNCD(@05),0                                  02S0076
         BNE   @RF00076                                         02S0076
*         DO;                       /* STORE A RETURN CODE IN THE IEL
*                                      IF ONE WAS NOT ALREADY STORED */
*           IF ABENDCOD=OPENCODE THEN                           02S0078
         CL    ABENDCOD,OPENCODE                                02S0078
         BNE   @RF00078                                         02S0078
*             DO;                   /* OPEN ABEND CODE PROCESSING
*                                                            @ZA10755*/
*               SDWARCRD='0'B;      /* TURN OFF RECORDING    @ZA10755*/
         NI    SDWARCRD(R2),B'01111111'                         02S0080
*               IF STEJOBLB='1'B THEN                           02S0081
         TM    STEJOBLB(@10),B'00100000'                        02S0081
         BNO   @RF00081                                         02S0081
*                 IELRTNCD='18'X;   /* SET JOBLIB ERROR              */
         MVI   IELRTNCD(@05),X'18'                              02S0082
*               ELSE                                            02S0083
*                 IF STESTPLB='1'B THEN                         02S0083
         B     @RC00081                                         02S0083
@RF00081 L     @10,SDWAPARM(,R2)                                02S0083
         TM    STESTPLB(@10),B'00010000'                        02S0083
         BNO   @RF00083                                         02S0083
*                   IELRTNCD='1C'X; /* SET STEPLIB ERROR             */
         L     @10,STELCT(,@10)                                 02S0084
         L     @10,LCTENTR(,@10)                                02S0084
         L     @10,IELEXIT(,@10)                                02S0084
         MVI   IELRTNCD(@10),X'1C'                              02S0084
*                 ELSE                                          02S0085
*                   IF STEFCHLB='1'B THEN                       02S0085
         B     @RC00083                                         02S0085
@RF00083 L     @10,SDWAPARM(,R2)                                02S0085
         TM    STEFCHLB(@10),B'00001000'                        02S0085
         BNO   @RF00085                                         02S0085
*                     IELRTNCD='20'X;/* SET FETCHLIB ERROR           */
         L     @10,STELCT(,@10)                                 02S0086
         L     @10,LCTENTR(,@10)                                02S0086
         L     @10,IELEXIT(,@10)                                02S0086
         MVI   IELRTNCD(@10),X'20'                              02S0086
*                   ELSE                                        02S0087
*                     IELRTNCD='04'X;/* SET ALLOCATION ERROR IF NOT
*                                      JOBLIB, STEPLIB, OR FETCHLIB
*                                      (TO INDICATE AN OPEN CATALOG
*                                      FAILURE)                      */
         B     @RC00085                                         02S0087
@RF00085 L     @10,SDWAPARM(,R2)                                02S0087
         L     @10,STELCT(,@10)                                 02S0087
         L     @10,LCTENTR(,@10)                                02S0087
         L     @10,IELEXIT(,@10)                                02S0087
         MVI   IELRTNCD(@10),X'04'                              02S0087
*             END;                  /* END OPEN ABEND PROCESSING
*                                                            @ZA10755*/
*           ELSE                                                02S0089
*             IELRTNCD='24'X;       /* SET PROGRAM ERROR IF NOT AN
*                                      OPEN ERROR                    */
         B     @RC00078                                         02S0089
@RF00078 L     @10,SDWAPARM(,R2)                                02S0089
         L     @10,STELCT(,@10)                                 02S0089
         L     @10,LCTENTR(,@10)                                02S0089
         L     @10,IELEXIT(,@10)                                02S0089
         MVI   IELRTNCD(@10),X'24'                              02S0089
*           SYSCODE=SDWAABCC&ABENDMSK;/* CLEAR ALL BUT THE 3 DIGITS
*                                      OF THE SYSTEM CODE            */
@RC00078 L     SYSCODE,SDWAABCC(,R2)                            02S0090
         N     SYSCODE,ABENDMSK                                 02S0090
*           IF SYSCODE=SSICODE THEN                             02S0091
         CL    SYSCODE,SSICODE                                  02S0091
         BNE   @RF00091                                         02S0091
*             IELRCXT='05'X;        /* SET SUBSYSTEM INTERFACE ORIGIN
*                                      IF SUBSYSTEM INTERFACE ABEND
*                                      CODE                          */
         L     @10,SDWAPARM(,R2)                                02S0092
         L     @10,STELCT(,@10)                                 02S0092
         L     @10,LCTENTR(,@10)                                02S0092
         L     @10,IELEXIT(,@10)                                02S0092
         MVI   IELRCXT(@10),X'05'                               02S0092
*           ELSE                                                02S0093
*             IELRCXT='03'X;        /* OTHERWISE SET INITIATOR ORIGIN*/
         B     @RC00091                                         02S0093
@RF00091 L     @10,SDWAPARM(,R2)                                02S0093
         L     @10,STELCT(,@10)                                 02S0093
         L     @10,LCTENTR(,@10)                                02S0093
         L     @10,IELEXIT(,@10)                                02S0093
         MVI   IELRCXT(@10),X'03'                               02S0093
*         END;                                                  02S0094
@RC00091 DS    0H                                               02S0095
*                                                               01S0095
*       /*************************************************************/
*       /*                                                           */
*       /* CONTRIBUTE TO ERROR RECORDING, UNLESS USER ERROR (OPEN    */
*       /* FAILURE) OR PERCOLATION.                           YM02669*/
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0095
*       IF ABENDCOD^=OPENCODE&SDWAPERC='0'B THEN/*            YM02669*/
@RF00076 CL    ABENDCOD,OPENCODE                                01S0095
         BE    @RF00095                                         01S0095
         TM    SDWAPERC(R2),B'00010000'                         01S0095
         BNZ   @RF00095                                         01S0095
*                                                               02S0096
*         /***********************************************************/
*         /*                                                         */
*         /* ISSUE SETRP                                             */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0096
*         DO;                       /* SETRP RECORD(YES)WKAREA(R2)REC
*                                      PARM(RECINFO)                 */
*           RESPECIFY                                           02S0097
*            (GPR00P,                                           02S0097
*             GPR01P,                                           02S0097
*             GPR14P,                                           02S0097
*             GPR15P) RSTD;                                     02S0097
*           GPR01P=R2;                                          02S0098
         LR    GPR01P,R2                                        02S0098
*           GPR01P->SDWARCDE=0;     /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                           02S0099
*           GPR01P->SDWARCRD='1'B;  /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                     02S0100
*           GPR15P=ADDR(RECINFO);   /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,RECINFO                                   02S0101
*           GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD 02S0102
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                02S0102
*           RESPECIFY                                           02S0103
*            (GPR00P,                                           02S0103
*             GPR01P,                                           02S0103
*             GPR14P,                                           02S0103
*             GPR15P) UNRSTD;                                   02S0103
*         END;                                                  02S0104
*       RESPECIFY                                               02S0105
*         SDWA BASED(R2);                                       02S0105
@RF00095 DS    0H                                               02S0106
*                                                               01S0106
*       /*************************************************************/
*       /*                                                           */
*       /* TAKE DUMP IF NOT RECURSION, PERCOLATION, OPEN FAILURE, OR */
*       /* MACHINE CHECK.                                     YM02669*/
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0106
*       IF STERETRY='0'B&STETJMR='0'B&SDWAPERC='0'B&ABENDCOD^=OPENCODE&
*           SDWAMCHK='0'B           /*                        YM02669
*                                      STERETRY IS SET IN THIS MODULE
*                                      WHEN RETRY IS ATTEMPTED AND
*                                      REMAINS ON UNTIL IEFSD161 HAS
*                                      ANOTHER JOB SELECTED. IF 01S0106
*                                      STERETRY IS ON WHEN IEFSD161
*                                      IS ENTERED, IEFSD161 TURNS OFF
*                                      STERETRY AND TURNS ON STETJMR
*                                      TO INDICATE THAT THIS IS THE
*                                      JOB SELECTED IMMEDIATELY AFTER
*                                      AN ERROR WAS ENCOUNTERED AND
*                                      RETRY WILL NOT BE ATTEMPTED IF
*                                      ANOTHER ERROR IS ENCOUNTERED.
*                                      IF STETJMR IS ON WHEN IEFSD161
*                                      IS ENTERED, IT IS TURNED OFF.
*                                      THEREFORE, IF EITHER STERETRY
*                                      OR STETJMR ARE ON WHEN THIS
*                                      MODULE IS ENTERED, THE   01S0106
*                                      SITUATION IS A RECURSION.     */
*         THEN                                                  01S0106
         L     @10,SDWAPARM(,R2)                                01S0106
         TM    STERETRY(@10),B'11000000'                        01S0106
         BNZ   @RF00106                                         01S0106
         TM    SDWAPERC(R2),B'00010000'                         01S0106
         BNZ   @RF00106                                         01S0106
         CL    ABENDCOD,OPENCODE                                01S0106
         BE    @RF00106                                         01S0106
         TM    SDWAMCHK(R2),B'10000000'                         01S0106
         BNZ   @RF00106                                         01S0106
*         GEN(SDUMP MF=(E,DUMPPARM));                           01S0107
*                                                               01S0107
         SDUMP MF=(E,DUMPPARM)
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK WHETHER OR NOT TO RETRY. RETRY IS ATTEMPTED UNLESS  */
*       /* THE LCT INDICATES THAT THE ERROR OCCURED PRIOR TO OR      */
*       /* DURING ALLOCATION, OR THE ERROR OCCURED DURING OR AFTER   */
*       /* UNALLOCATION, THIS IS A RECURSION OR NO JOB HAS BEEN      */
*       /* SELECTED (IE, THE LCT DOES NOT CONTAIN BOTH A JCT SWA     */
*       /* ADDRESS AND AN SCT SWA ADDRESS. ACTUALLY, THE ONLY TIME   */
*       /* THE SCT POINTER IS EXPECTED TO BE ZERO IS BEFORE IEFSD161 */
*       /* STORES THE POINTER TO THE FIRST STEP'S SCT). FOR AN OPEN  */
*       /* FAILURE, RETRY IS ATTEMPTED BUT THE RECURSION INDICATOR   */
*       /* STERETRY IS NOT SET. (SEE 'OPERATION' IN THE PROLOG FOR AN*/
*       /* EXPLANATION.)                                      YM07219*/
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0108
*       IF LCTACOMP='1'B&STERETRY='0'B&STETJMR='0'B&/*        YM07219*/
*           LCTJCTVA^=0&LCTSCTVA^=0 THEN                        01S0108
@RF00106 L     @10,SDWAPARM(,R2)                                01S0108
         L     @05,STELCT(,@10)                                 01S0108
         TM    LCTACOMP(@05),B'00001000'                        01S0108
         BNO   @RF00108                                         01S0108
         TM    STERETRY(@10),B'11000000'                        01S0108
         BNZ   @RF00108                                         01S0108
         ICM   @15,7,LCTJCTVA(@05)                              01S0108
         BZ    @RF00108                                         01S0108
         ICM   @15,7,LCTSCTVA(@05)                              01S0108
         BZ    @RF00108                                         01S0108
*         DO;                                                   01S0109
*                                                               01S0109
*           /*********************************************************/
*           /*                                                       */
*           /* INDICATE RETRY                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0110
*                                                               02S0110
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE SETRP                                           */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0110
*           DO;                     /* SETRP RETADDR(IEFIB621)WKAREA(
*                                      R2)RC(4)DUMP(NO)              */
*             RESPECIFY                                         02S0111
*              (GPR00P,                                         02S0111
*               GPR01P,                                         02S0111
*               GPR14P,                                         02S0111
*               GPR15P) RSTD;                                   02S0111
*             GPR01P=R2;                                        02S0112
         LR    GPR01P,R2                                        02S0112
*             GPR01P->SDWARCDE=4;   /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                           02S0113
*             GPR01P->SDWARTYA=ADDR(IEFIB621);/* SAVE RETRY ADDRESS  */
         L     @05,@CV01651                                     02S0114
         ST    @05,SDWARTYA(,GPR01P)                            02S0114
*             GPR01P->SDWAREQ='0'B; /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                      02S0115
*             RESPECIFY                                         02S0116
*              (GPR00P,                                         02S0116
*               GPR01P,                                         02S0116
*               GPR14P,                                         02S0116
*               GPR15P) UNRSTD;                                 02S0116
*           END;                    /*                        YM02669*/
*           RESPECIFY                                           02S0118
*             SDWA BASED(R2);                                   02S0118
*           IF ABENDCOD^=OPENCODE THEN                          01S0119
         CL    ABENDCOD,OPENCODE                                01S0119
         BE    @RF00119                                         01S0119
*             STERETRY='1'B;                                    01S0120
         OI    STERETRY(@10),B'10000000'                        01S0120
*           IF ABENDCOD=VSMCODE THEN                            01S0121
@RF00119 CL    ABENDCOD,VSMCODE                                 01S0121
         BNE   @RF00121                                         01S0121
*             TCBTCT=STESMFTC;      /* RESTORE ADDR OF TCT IN TCB IF
*                                      FREE- PART FAILED     @ZA05662*/
         L     @10,SDWAPARM(,R2)                                01S0122
         L     @01,STELCT(,@10)                                 01S0122
         L     @01,LCTTCBAD(,@01)                               01S0122
         MVC   TCBTCT(4,@01),STESMFTC(@10)                      01S0122
*         END;                                                  01S0123
*       ELSE                                                    01S0124
*         DO;                       /*                        YM06978*/
*                                                               01S0124
         B     @RC00108                                         01S0124
@RF00108 DS    0H                                               01S0125
*           /*********************************************************/
*           /*                                                       */
*           /* INDICATE NO RETRY                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0125
*           DO;                                                 02S0125
*                                                               02S0125
*             /*******************************************************/
*             /*                                                     */
*             /* ISSUE SETRP                                         */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0126
*             DO;                   /* SETRP WKAREA(R2)RC(0)DUMP(NO) */
*               RESPECIFY                                       02S0127
*                (GPR00P,                                       02S0127
*                 GPR01P,                                       02S0127
*                 GPR14P,                                       02S0127
*                 GPR15P) RSTD;                                 02S0127
*               GPR01P=R2;                                      02S0128
         LR    GPR01P,R2                                        02S0128
*               GPR01P->SDWARCDE=0; /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                           02S0129
*               GPR01P->SDWAREQ='0'B;/* TURN OFF DUMP INDICATOR      */
         NI    SDWAREQ(GPR01P),B'01111111'                      02S0130
*               RESPECIFY                                       02S0131
*                (GPR00P,                                       02S0131
*                 GPR01P,                                       02S0131
*                 GPR14P,                                       02S0131
*                 GPR15P) UNRSTD;                               02S0131
*             END;                  /* YM02669                       */
*             RESPECIFY                                         02S0133
*               SDWA BASED(R2);     /* THIS RESPECIFY IS CODED HERE
*                                      JUST IN CASE CODE IS ADDED
*                                      AFTER HERE WHICH USES THE
*                                      SDWA.                         */
*           END;                                                02S0134
*                                                               01S0135
*           /*********************************************************/
*           /*                                                       */
*           /* ON NO RETRY SITUATIONS THE ACTIVE JSCB POINTER MAY BE */
*           /* LEFT POINTING TO AN AREA TO BE FREED. CHANGE THE      */
*           /* ACTIVE JSCB POINTER IN THE JSCB POINTED TO BY THE TCB */
*           /* TO POINT TO ITSELF AS THE ACTIVE JSCB. ZERO THE       */
*           /* LCTJSCB POINTER.                               YM06978*/
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0135
*           JSCBACT=TCBJSCB;        /* MAKE THE INIT JSCB THE ACTIVE
*                                      JSCB                   YM06978*/
         L     @10,SDWAPARM(,R2)                                01S0135
         L     @10,STELCT(,@10)                                 01S0135
         L     @01,LCTTCBAD(,@10)                               01S0135
         L     @15,TCBJSCB(,@01)                                01S0135
         ST    @15,JSCBACT(,@15)                                01S0135
*           LCTJSCB=0;              /* CLEAR THE JSCB PTR IN THE LCT
*                                                             YM06978*/
         SLR   @15,@15                                          01S0136
         ST    @15,LCTJSCB(,@10)                                01S0136
*         END;                      /*                        YM06978*/
*       GEN;                                                    01S0138
@RC00108 DS    0H                                               01S0138
*       FREE THE AUTOMATIC STORAGE WHICH HAD BEEN EXPLICITLY
*       GOTTEN
         L     R0,@SIZDATD        LOAD SUBPOOL AND SIZE TO FREE
         FREEMAIN R,LV=(0),A=(R11)
*     END;                                                      01S0139
*   RESPECIFY                                                   01S0140
*     R14 RSTD;                                                 01S0140
@RC00049 DS    0H                                               01S0141
*   R14=R3;                         /* RESTORE RETURN ADDRESS        */
*                                                               01S0141
         LR    R14,R3                                           01S0141
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOG MACRO                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0142
*                                                               02S0142
*   /*****************************************************************/
*   /*                                                               */
*   /* THESE DECLARES ARE CREATED BY THE EPILOG MACRO. EPILOG MUST BE*/
*   /* CODED IF SETRP IS CODED IN PLS, AND MUST BE AFTER THE LAST USE*/
*   /* OF SETRP.                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0142
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                    02S0142
*     GPR01P PTR(31) REG(1),                                    02S0142
*     GPR14P PTR(31) REG(14),                                   02S0142
*     GPR15P PTR(31) REG(15);                                   02S0142
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    02S0143
*     I031F FIXED(31) BASED,                                    02S0143
*     I031P PTR(31) BASED,                                      02S0143
*     I015F FIXED(15) BASED,                                    02S0143
*     I015P PTR(15) BASED,                                      02S0143
*     I008P PTR(8) BASED,                                       02S0143
*     I001C CHAR(1) BASED;                                      02S0143
*   END                                                         01S0144
*                                                               01S0144
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (IB620PRO)                                       */
*/*%INCLUDE SYSUT5  (IB620DCL)                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IEFZB622)                                       */
*/*%INCLUDE SYSLIB  (IEFZB630)                                       */
*/*%INCLUDE SYSLIB  (IEFALLCT)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IEZIELDF)                                       */
*/*%INCLUDE SYSLIB  (IEZIEL  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSUT5  (IB620MSC)                                       */
*/*%INCLUDE SYSUT5  (IB620REC)                                       */
*/*%INCLUDE SYSUT5  (IB620RET)                                       */
*/*%INCLUDE SYSUT5  (IB620NOR)                                       */
*/*%INCLUDE SYSUT5  (IB620EPI)                                       */
*                                                               01S0144
*       ;                                                       01S0144
@EL00001 DS    0H                                               01S0144
@EF00001 DS    0H                                               01S0144
@ER00001 BR    @14                                              01S0144
@DATA    DS    0H
@CH01632 DC    H'12'
@SM01701 MVC   DEQCORE(0),DEQKEY
@SM01703 MVC   DEQCORE(0),DEQCSD
@DATD    DSECT
         DS    0F
IEFIB620 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
IEFIB620 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV01651 DC    V(IEFIB621)
         DS    0D
OPENMASK DC    XL4'000FF000'
ABENDMSK DC    XL4'00FFF000'
SSICODE  DC    XL4'000BA000'
VSMCODE  DC    XL4'0000A000'
OPENCODE DC    XL4'00013000'
RECINFO  DS    CL24
         ORG   RECINFO
@NM00173 DC    CL16' '
@NM00174 DC    CL8'IEFIB620'
         ORG   RECINFO+24
NOAFFIN  DC    X'FFFF'
MAJOR    DC    CL8'SYSIEFSD'
MINOR    DC    CL2'Q6'
MAJOR2   DC    CL8'SYSZCSD '
MINOR2   DC    CL8'CSDCPUJS'
IEFIB620 CSECT
DUMPPARM SDUMP HDR='IEFIB620',SDATA=(PSA,NUC,SQA,RGN,LPA,TRT,CSA),MF=L
IEFIB620 CSECT
*                                                           /*Y02651*/
DEQKEY   DEQ   (MAJOR,MINOR,,SYSTEM),RET=HAVE,MF=L              Y02651
DEQEQU   EQU   *                                                Y02651
DEQLEN   DC    A(DEQEQU-DEQKEY)                                 Y02651
DEQCSD   DEQ   (MAJOR2,MINOR2,,SYSTEM),RET=HAVE,MF=L            Y02651
@DATD    DSECT
DEQCORE  DEQ   (MAJOR,MINOR,,SYSTEM),RET=HAVE,MF=L
IEFIB620 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFIB620 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SYSCODE  EQU   @05
ABENDCOD EQU   @04
R2       EQU   @02
R0       EQU   @00
R1       EQU   @01
R3       EQU   @03
R11      EQU   @11
R14      EQU   @14
R15      EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAMCHK EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAPERC EQU   SDWAERRC
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
STEPL    EQU   0
STELCT   EQU   STEPL
STEPARAM EQU   STEPL+4
@NM00073 EQU   STEPL+8
STEFLAGS EQU   @NM00073
STERETRY EQU   STEFLAGS
STETJMR  EQU   STEFLAGS
STEJOBLB EQU   STEFLAGS
STESTPLB EQU   STEFLAGS
STEFCHLB EQU   STEFLAGS
STESMFTC EQU   STEPL+12
IEFPARAM EQU   0
IEFUSADD EQU   IEFPARAM
IEFDCBAD EQU   IEFPARAM+4
IEFTCBAD EQU   IEFPARAM+16
IEFECBLT EQU   IEFPARAM+24
@NM00075 EQU   IEFPARAM+32
PARTIOTB EQU   IEFPARAM+40
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00082 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTSCTVA EQU   LCTWORKA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTACOMP EQU   LCTERR
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00109 EQU   LCT+76
LCTINTSW EQU   @NM00109
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
LCTASCBA EQU   LCT+320
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
@NM00135 EQU   LCT+356
LCTOPSW2 EQU   @NM00135
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTJCTVA EQU   LCTJCTDA
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
@NM00149 EQU   LCT+420
LCTINTS2 EQU   @NM00149+1
ASCB     EQU   0
ASCBFW1  EQU   ASCB+100
ASCBAFFN EQU   ASCBFW1
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
IEL      EQU   0
IELLIST  EQU   IEL
IELOPLST EQU   IELLIST+8
IELEXIT  EQU   IELLIST+20
IELLAST  EQU   IELEXIT
IELOPTS  EQU   0
IELOPSW1 EQU   IELOPTS+2
IELOPSW2 EQU   IELOPTS+3
IELOPSW3 EQU   IELOPTS+5
IELEXITS EQU   0
IELEXHDR EQU   IELEXITS
IELRTNCD EQU   IELEXHDR+2
IELRCXT  EQU   IELEXHDR+3
RTNEXT   EQU   IELEXITS+8
RTNEXNM  EQU   RTNEXT+2
RTNEXAD  EQU   RTNEXNM+2
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBLTC   EQU   TCB+136
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
I256C    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
PSARSVTE EQU   PSARSVT
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCBACT  EQU   JSCBSEC3+88
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
COMPCODE EQU   IEFDCBAD
FLC      EQU   PSA
JOBSTCB  EQU   IEFUSADD
LCTADDR  EQU   IEFUSADD
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00172 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00171 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00170 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00169 EQU   IEZJSCB
@NM00168 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00167 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00166 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00165 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00164 EQU   RTNEXAD
@NM00163 EQU   RTNEXNM
RTNEXID  EQU   RTNEXT+1
RTNEXLK  EQU   RTNEXT
IELCOM   EQU   IELEXHDR+4
IELXTLEN EQU   IELEXHDR
@NM00162 EQU   IELOPTS+7
IELSWAS  EQU   IELOPTS+6
IELNSYS  EQU   IELOPSW3
@NM00161 EQU   IELOPSW3
@NM00160 EQU   IELOPSW3
IELTSIZ  EQU   IELOPTS+4
IELOENQU EQU   IELOPSW2
IELONORC EQU   IELOPSW2
@NM00159 EQU   IELOPSW2
@NM00158 EQU   IELOPSW2
@NM00157 EQU   IELOPSW2
@NM00156 EQU   IELOPSW2
IELCRF   EQU   IELOPSW2
IELTIMEF EQU   IELOPSW2
@NM00155 EQU   IELOPSW1
IELICMDF EQU   IELOPSW1
IELONEJF EQU   IELOPSW1
IELCANF  EQU   IELOPSW1
@NM00154 EQU   IELOPSW1
@NM00153 EQU   IELOPSW1
IELDWFF  EQU   IELOPSW1
IELDPSWA EQU   IELOPSW1
IELOPLEN EQU   IELOPTS
@NM00152 EQU   IELLAST
IELEND   EQU   IELLAST
IELSTEPL EQU   IELLIST+16
IELRTNA  EQU   IELLIST+12
IELCSCB  EQU   IELLIST+4
IELSSOBA EQU   IELLIST
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00151 EQU   LCT+436
LCTIMSG  EQU   LCT+432
LCTLBWAP EQU   LCT+428
@NM00150 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00149
LCTRFB1  EQU   LCT+419
@NM00148 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBSM EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00147 EQU   LCTJCTDA+3
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00146 EQU   LCT+364
@NM00145 EQU   LCTJSCB+1
@NM00144 EQU   LCTOPSW3
@NM00143 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00142 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00141 EQU   LCTOPSW3
@NM00140 EQU   @NM00135+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
@NM00139 EQU   LCTOPSW2
@NM00138 EQU   LCTOPSW2
@NM00137 EQU   LCTOPSW2
@NM00136 EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00134 EQU   LCTEXIT+1
@NM00133 EQU   LCTOPSW1
@NM00132 EQU   LCTOPSW1
LCTONEJF EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00131 EQU   LCTOPSW1
@NM00130 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00129 EQU   LCTTSRB4
@NM00128 EQU   LCT+340
@NM00127 EQU   LCTSPIL+3
@NM00126 EQU   LCTALCFG
@NM00125 EQU   LCTALCFG
@NM00124 EQU   LCTALCFG
@NM00123 EQU   LCTALCFG
@NM00122 EQU   LCTALCFG
@NM00121 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00120 EQU   ECBLIST+1
@NM00119 EQU   ECBLIST
LCTJMRAD EQU   LCT+324
@NM00118 EQU   LCT+284
QMGR1    EQU   LCT+248
REGSAVE  EQU   LCT+104
@NM00117 EQU   LCTATLST+1
@NM00116 EQU   LCTATLST
@NM00115 EQU   LCTJOBLB+1
@NM00114 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00113 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00112 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00111 EQU   LCTTJTU4
@NM00110 EQU   @NM00109+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00108 EQU   LCTSREG+1
@NM00107 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00106 EQU   LCTSMBAD+1
@NM00105 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
LCTSNUMB EQU   LCT+58
@NM00104 EQU   LCTJFCBH
@NM00103 EQU   LCTJFCBH
@NM00102 EQU   LCTJFCBH
@NM00101 EQU   LCTJFCBH
@NM00100 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00099 EQU   LCTCMCBA+1
@NM00098 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTPARM2 EQU   LCT+40
LCTPARM1 EQU   LCT+36
LCTJCFAL EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
LCTJFAIL EQU   LCTERR
@NM00097 EQU   LCTPSPAR+1
@NM00096 EQU   LCTPSPAR
@NM00095 EQU   LCTWORKA+3
@NM00094 EQU   LCTSCTAD+1
@NM00093 EQU   LCTSCTAD
@NM00092 EQU   LCTJCTAD+1
@NM00091 EQU   LCTJCTAD
@NM00090 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00082
@NM00089 EQU   @NM00082
@NM00088 EQU   @NM00082
@NM00087 EQU   @NM00082
@NM00086 EQU   @NM00082
@NM00085 EQU   @NM00082
@NM00084 EQU   @NM00082
@NM00083 EQU   @NM00082
@NM00081 EQU   LCTTCBAD+1
@NM00080 EQU   LCTTCBAD
@NM00079 EQU   LCTSRTAD+1
@NM00078 EQU   LCTSRTAD
@NM00077 EQU   LCTQDRTY+1
@NM00076 EQU   LCTQDRTY
PARSRMEC EQU   IEFPARAM+44
IEFAECB  EQU   IEFPARAM+36
PARPRFMF EQU   @NM00075+2
PARNMEMP EQU   @NM00075+1
PAROMEMP EQU   @NM00075
CANECBAD EQU   IEFECBLT+4
ATTECBAD EQU   IEFECBLT
IEFTIOTA EQU   IEFPARAM+20
INITTCB  EQU   IEFTCBAD+1
@NM00074 EQU   IEFTCBAD
IEFLCTAD EQU   IEFPARAM+12
IEFREMLS EQU   IEFPARAM+8
@NM00072 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00071 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00070 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00069 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00068 EQU   SDWADDAT+3
@NM00067 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00066 EQU   SDWADDAT+1
@NM00065 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00064 EQU   SDWADUMP+2
@NM00063 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00062 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00061 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00060 EQU   SDWAACF3
@NM00059 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00058 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00057 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00056 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00055 EQU   SDWA+239
@NM00054 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00053 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00052 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00051 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00050 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00049 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00048 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00047 EQU   SDWAINC2
@NM00046 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00045 EQU   SDWAILC2
@NM00044 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00043 EQU   SDWANXT2
@NM00042 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00041 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00040 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00039 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00038 EQU   SDWAINC1
@NM00037 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00036 EQU   SDWAILC1
@NM00035 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00034 EQU   SDWANXT1
@NM00033 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00032 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00031 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00030 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00029 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00028 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00027 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00026 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00025 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00085 EQU   @RC00078
@RC00083 EQU   @RC00078
@RC00081 EQU   @RC00078
@RF00121 EQU   @RC00108
@ENDDATA EQU   *
         END   IEFIB620,(C'PLS1726',0701,76155)
