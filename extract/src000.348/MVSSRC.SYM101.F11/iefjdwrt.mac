         TITLE 'IEFJDWRT - PSEUDO ACCESS METHOD PERFORM A DIRECT WRIT'
IEFJDWRT CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFJDWRT  73.020'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0004
*/*         PHYSICAL ERROR CONDITIONS (REGISTER 15 = 12)             */
*/*     SET UP BASED VARIABLES                                       */
*                                                                  0005
*   RPLPTR=R1;                      /* SAVE THE POINTER IN R1 POINTS
*                                      TO THE RPL                    */
         LR    RPLPTR,R1                                           0005
*   RFY                                                            0006
*     IFGRPL BASED(RPLPTR);         /* THE RPL IS BASED ON CONTENTS
*                                      OF RPLPTR                     */
*   RFY                                                            0007
*     IEFJAREA BASED(RPLDDDP-8);    /* POINT TO THE BEGINNING OF THE
*                                      RECORD                        */
*                                                                  0007
*   /*****************************************************************/
*   /*                                                               */
*   /* PERFORM A DIRECT WRITE                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0008
*   NEWLGTH=LGTH-8;                 /* GET THE LGTH OF THE TEXT ONLY */
         LA    @10,8                                               0008
         L     @07,RPLARG(,RPLPTR)                                 0008
         L     @07,RPLDDDP(,@07)                                   0008
         SR    @07,@10                                             0008
         LCR   @10,@10                                             0008
         A     @10,LGTH(,@07)                                      0008
         LR    NEWLGTH,@10                                         0008
*   TEXTPTR=RPLAREA;                /* TEXTPTR NOW POINTS TO THE AREA
*                                      THAT THE REC WILL BE WRITTEN
*                                      FROM                          */
         L     TEXTPTR,RPLAREA(,RPLPTR)                            0009
*   RECPTR=ADDR(IEFJAREA);          /* RECPTR POINTS TO THE REC TO BE
*                                      RE-WRITTEN                    */
         LR    RECPTR,@07                                          0010
*   IF NEWLGTH<=256 THEN            /* CHECK LENGTH OF REC IF > 256
*                                      MORE THAN ONE MOVE IS       0011
*                                      NECESSARY                     */
         CH    NEWLGTH,@CH00134                                    0011
         BH    @RF00011                                            0011
*     RECTEXT(1:NEWLGTH)=TEXTAREA(1:NEWLGTH);/* LESS THAN 256 MOVE 0012
*                                      AND END                       */
         LR    @10,NEWLGTH                                         0012
         BCTR  @10,0                                               0012
         EX    @10,@SM00136                                        0012
*   ELSE                                                           0013
*     DO;                                                          0013
         B     @RC00011                                            0013
@RF00011 DS    0H                                                  0014
*       CTR=NEWLGTH/256;            /* SET CTR TO THE NUMBER OF MOVES
*                                      NECESSARY                     */
         LR    @08,NEWLGTH                                         0014
         SRDA  @08,32                                              0014
         D     @08,@CF00134                                        0014
         LR    CTR,@09                                             0014
*       DO WHILE CTR>0;             /* EXECUTE UNTIL ALL 256 BYTE  0015
*                                      BLOCKS HAVE BEEN MOVED        */
         B     @DE00015                                            0015
@DL00015 DS    0H                                                  0016
*         RECPTR->RECTEXT(1:256)=TEXTAREA(1:256);/* MOVE 256 BYTES AT
*                                      A TIME                        */
         MVC   RECTEXT(256,RECPTR),TEXTAREA(TEXTPTR)               0016
*         TEXTPTR=TEXTPTR+256;      /* UPDATE POINTER                */
         LA    @10,256                                             0017
         AR    TEXTPTR,@10                                         0017
*         RECPTR=RECPTR+256;        /* UPDATE POINTER                */
         AR    RECPTR,@10                                          0018
*         CTR=CTR-1;                /* DECREMENT COUNTER             */
         BCTR  CTR,0                                               0019
*       END;                                                       0020
@DE00015 LTR   CTR,CTR                                             0020
         BP    @DL00015                                            0020
*       CTR=NEWLGTH//256;           /* SET REMAINING LENGTH IN CTR   */
         LR    CTR,NEWLGTH                                         0021
         N     CTR,@CF00138                                        0021
*       RECPTR->RECTEXT(1:CTR)=TEXTAREA(1:CTR);/* MOVE REMAINING   0022
*                                      LENGTH                        */
         LR    @10,CTR                                             0022
         BCTR  @10,0                                               0022
         EX    @10,@SM00139                                        0022
*     END;                                                         0023
*   RPLDDDD=RPLDDDP;                /* RETURN THE ADDR OF THE RECORD
*                                      MOVED                         */
@RC00011 L     @10,RPLARG(,RPLPTR)                                 0024
         MVC   RPLDDDD(4,RPLPTR),RPLDDDP(@10)                      0024
*   END IEFJDWRT                    /* RETURN TO THE CALLER          */
*                                                                  0025
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEFJAREA)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*                                                                  0025
*       ;                                                          0025
@EL00001 DS    0H                                                  0025
@EF00001 DS    0H                                                  0025
@ER00001 LM    @14,@12,12(@13)                                     0025
         BR    @14                                                 0025
@DATA    DS    0H
@SM00136 MVC   RECTEXT(0,@07),TEXTAREA(TEXTPTR)
@SM00139 MVC   RECTEXT(0,RECPTR),TEXTAREA(TEXTPTR)
@DATD    DSECT
         DS    0F
IEFJDWRT CSECT
         DS    0F
@CF00138 DC    F'255'
@CF00134 DC    F'256'
@CH00134 EQU   @CF00134+2
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEFJDWRT CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PTCHDWRT DC    X'00'
         DS    9XL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
NEWLGTH  EQU   @05
RPLPTR   EQU   @03
RECPTR   EQU   @06
CTR      EQU   @02
TEXTPTR  EQU   @04
R1       EQU   @01
TEXTAREA EQU   0
RPLRBAP  EQU   0
RPLDDDP  EQU   RPLRBAP+4
IEFJAREA EQU   0
LGTH     EQU   IEFJAREA+4
RECTEXT  EQU   IEFJAREA+8
IFGRPL   EQU   0
RPLIDWD  EQU   IFGRPL
RPLECB   EQU   IFGRPL+8
RPLSTAT  EQU   IFGRPL+12
RPLFDBK  EQU   IFGRPL+13
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLKEYLE EQU   IFGRPL+16
RPLAREA  EQU   IFGRPL+32
RPLARG   EQU   IFGRPL+36
RPLOPTCD EQU   IFGRPL+40
RPLOPT1  EQU   RPLOPTCD
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLNXTRP EQU   IFGRPL+44
RPLRBAR  EQU   IFGRPL+60
RPL6RBA  EQU   RPLRBAR+2
RPLDDDD  EQU   RPL6RBA+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
RPLERMSA EQU   IFGRPL+72
RPLEMLEN EQU   IFGRPL+70
@NM00005 EQU   IFGRPL+68
RPLS2S2  EQU   RPL6RBA
RPLS1S1  EQU   RPLRBAR
@NM00004 EQU   IFGRPL+56
RPLBUFL  EQU   IFGRPL+52
RPLRLEN  EQU   IFGRPL+48
RPLCHAIN EQU   RPLNXTRP
RPLOPT4  EQU   RPLOPTCD+3
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00003 EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBSW EQU   RPLOPT1
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLTCBPT EQU   IFGRPL+28
RPLDACB  EQU   IFGRPL+24
RPLCCHAR EQU   IFGRPL+20
RPLSTRID EQU   IFGRPL+18
RPLKEYL  EQU   RPLKEYLE
RPLERRCD EQU   RPLCNDCD+1
RPLCMPON EQU   RPLCNDCD
RPLERREG EQU   RPLRTNCD
@NM00002 EQU   RPLSTAT
RPLEDRQI EQU   RPLSTAT
RPLCHKI  EQU   RPLSTAT
RPLACTIV EQU   RPLSTAT
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   IFGRPL+4
RPLLEN   EQU   RPLIDWD+3
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
NEXTPTR  EQU   IEFJAREA
@NM00001 EQU   RPLRBAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFJDWRT
