         TITLE 'IEFJJCLS JCL TO JCLS CONVERTER                       '
IEFJJCLS CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFJJCLS  72.323'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         LM    @00,@01,20(@13)                                     0001
         MVC   @PC00001(8),0(@01)                                  0001
*                                                                  0003
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST THE CONTENTS OF INJCL                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0003
*   IF INJCL=0 THEN                 /* CHECK FOR ZERO PARM           */
         L     @10,@PC00001                                        0003
         ICM   @00,15,INJCL(@10)                                   0003
         BNZ   @RF00003                                            0003
*     GEN(ABEND 177,,,SYSTEM);      /* IF ZERO THEN ABEND            */
         ABEND 177,,,SYSTEM
*   OUTJCLS=0;                      /* ZERO OUT PTR TO JCLS          */
@RF00003 SR    @10,@10                                             0005
         L     @05,@PC00001+4                                      0005
         ST    @10,OUTJCLS(,@05)                                   0005
*   FRSTPASS=ON;                    /* INDICATE FIRST PASS           */
         OI    FRSTPASS,B'10000000'                                0006
*   RETCD=0;                        /* SET RETURN CODE=0             */
         LR    RETCD,@10                                           0007
*   WORKPTR=INJCL;                  /* SET WORKPTR TO SCAN THRU THE
*                                      JCL DATA SET                  */
*                                                                  0008
         L     @10,@PC00001                                        0008
         L     WORKPTR,INJCL(,@10)                                 0008
*   /*****************************************************************/
*   /*                                                               */
*   /* START TO BUILD THE JCLS AS LONG AS YOU DON'T HIT A EOF NULL   */
*   /* CARD AND AS LONG AS THE FIRST TWO CHARS OF THE JCL ARE "//"   */
*   /* (VALID JCL STARTS WITH A "//")                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0009
*   DO WHILE(JCLMSG(1:72)^=EOF1)&(JCLMSG(1:72)^=EOF2)&(JCLMSG(1:2)=SS);
         B     @DE00009                                            0009
@DL00009 DS    0H                                                  0010
*     GEN(GETMAIN R,LV=88,SP=253);  /* GET 88 BYTES FOR JCLS         */
         GETMAIN R,LV=88,SP=253
*     GETMNADD=R1;                  /* SAVE ADDR OF GOTTEN CORE      */
         LR    GETMNADD,R1                                         0011
*     FILLER=0;                     /* ZERO OUT FRST 8 BYTES         */
         SR    @10,@10                                             0012
         ST    @10,FILLER(,GETMNADD)                               0012
*     NXTPTR=0;                     /* TO INDICATE LAST REC          */
         ST    @10,NXTPTR(,GETMNADD)                               0013
*     IF FRSTPASS=ON THEN           /* CHECK FOR FRST PASS           */
         TM    FRSTPASS,B'10000000'                                0014
         BNO   @RF00014                                            0014
*       DO;                         /* FOR THE FIRST PASS            */
*         FRSTPASS=OFF;             /* TURN OFF SWITCH               */
         NI    FRSTPASS,B'01111111'                                0016
*         PTRSAVE=GETMNADD;         /* SAVE THE ADDR OF THE GOTTEN 0017
*                                      AREA FOR CHAIN- ING THE JCLS  */
         ST    GETMNADD,PTRSAVE                                    0017
*         OUTJCLS=GETMNADD;         /* SET THE 2ND WORD OF THE PARM
*                                      LIST TO THE ADDR OF THE GOTTEN
*                                      AREA                          */
         L     @10,@PC00001+4                                      0018
         ST    GETMNADD,OUTJCLS(,@10)                              0018
*       END;                                                       0019
*     ELSE                          /* ON ALL OTHER PASSES           */
*       DO;                                                        0020
         B     @RC00014                                            0020
@RF00014 DS    0H                                                  0021
*         FWDPTR=GETMNADD;          /* CHAIN NEW WITH LAST           */
         L     @10,PTRSAVE                                         0021
         ST    GETMNADD,FWDPTR(,@10)                               0021
*         PTRSAVE=GETMNADD;         /* UPDATE SAVE AREA FOR          */
         ST    GETMNADD,PTRSAVE                                    0022
*       END;                        /* CHAINING OF NEXT REC          */
*     OUTJCL=JCLMSG;                /* MOVE JCL TO GOTTEN AREA       */
@RC00014 MVC   OUTJCL(80,GETMNADD),JCLMSG(WORKPTR)                 0024
*     WORKPTR=WORKPTR+80;           /* POINT TO NEXT REC IN THE JCL
*                                      DATA SET                      */
         AH    WORKPTR,@CH00037                                    0025
*   END;                                                           0026
*                                                                  0026
@DE00009 CLC   JCLMSG(72,WORKPTR),EOF1                             0026
         BE    @DC00009                                            0026
         CLC   JCLMSG(72,WORKPTR),EOF2                             0026
         BE    @DC00009                                            0026
         CLC   JCLMSG(2,WORKPTR),SS                                0026
         BE    @DL00009                                            0026
@DC00009 DS    0H                                                  0027
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST WHY PROCESSING STOPPED. IF IT WAS BECAUSE THE FIRST TWO  */
*   /* CHARS OF THE JCL WERE NOT "//" THEN BREAK THE JCLS CHAIN AND  */
*   /* CHANGE THE RETURN CODE TO FOUR.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0027
*   IF(JCLMSG(1:72)^=EOF1)&(JCLMSG(1:72)^=EOF2)THEN                0027
         CLC   JCLMSG(72,WORKPTR),EOF1                             0027
         BE    @RF00027                                            0027
         CLC   JCLMSG(72,WORKPTR),EOF2                             0027
         BE    @RF00027                                            0027
*     DO;                                                          0028
*       OUTJCLS=0;                  /* BREAK THE JCLS CHAIN BY     0029
*                                      ZEROING THE FRSTPTR           */
         L     @10,@PC00001+4                                      0029
         SR    @05,@05                                             0029
         ST    @05,OUTJCLS(,@10)                                   0029
*       RETCD=4;                    /* RETURN WITH A RETURN CODE OF
*                                      FOUR                          */
         LA    RETCD,4                                             0030
*     END;                                                         0031
*   RETURN CODE(RETCD);             /* SEND RETURN CODE              */
@RF00027 L     @00,@SIZDATD                                        0032
         LR    @01,@11                                             0032
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@04                                             0032
         L     @14,12(,@13)                                        0032
         LM    @00,@12,20(@13)                                     0032
         BR    @14                                                 0032
*   END IEFJJCLS;                   /* END IEFJJCLS                  */
@EL00001 DS    0H                                                  0033
@EF00001 L     @00,@SIZDATD                                        0033
         LR    @01,@11                                             0033
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0033
         BR    @14                                                 0033
@DATA    DS    0H
@CH00037 DC    H'80'
@DATD    DSECT
         DS    0F
@PC00001 DS    2F
IEFJJCLS CSECT
         DS    0F
@DATD    DSECT
         DS    0D
PTRSAVE  DS    A
FRSTPASS DS    BL1
@ENDDATD EQU   *
IEFJJCLS CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
EOF1     DS    CL72
         ORG   EOF1
SS       DC    CL2'//'
@NM00001 DC    CL70' '
         ORG   EOF1+72
EOF2     DS    CL72
         ORG   EOF2
SA       DC    CL2'/*'
@NM00002 DC    CL70' '
         ORG   EOF2+72
PATCH    DC    X'00'
         DS    15XL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETCD    EQU   @04
GETMNADD EQU   @03
WORKPTR  EQU   @02
R1       EQU   @01
JCLMSG   EQU   0
JCLSOUT  EQU   0
NXTPTR   EQU   JCLSOUT
FILLER   EQU   JCLSOUT+4
OUTJCL   EQU   JCLSOUT+8
SAVEIT   EQU   0
FWDPTR   EQU   SAVEIT
INJCL    EQU   0
OUTJCLS  EQU   0
@ENDDATA EQU   *
         END   IEFJJCLS
