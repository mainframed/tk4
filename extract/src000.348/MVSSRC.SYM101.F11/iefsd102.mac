         TITLE 'IEFSD102, DATA SET INTEGRITY ROUTINE                   *
                        '
IEFSD102 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFSD102  76.034'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*   LCTPTR=R1;                      /* SAVE INPUT PARAMETER (PTR TO
*                                      LCT)                          */
         LR    LCTPTR,R1                                           0037
*   IF(INCMSTS='1'B&LCTPARM1^=0) THEN                              0038
         L     @05,LCTJCTAD(,LCTPTR)                               0038
         TM    INCMSTS(@05),B'00000100'                            0038
         BNO   @RF00038                                            0038
         L     @05,LCTPARM1(,LCTPTR)                               0038
         LTR   @05,@05                                             0038
         BZ    @RF00038                                            0038
*     DO;                           /* IF JOB IS FAILED, FREE D S ENQ
*                                      LIST (IF IT EXISTS)           */
*       R1=LCTPARM1;                /* POINTER TO DSENQ LIST         */
         LR    R1,@05                                              0040
*       R0=LCTPARM2;                /* SUBPOOL AND SIZE              */
         L     R0,LCTPARM2(,LCTPTR)                                0041
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0042
         FREEMAIN R,LV=(0),A=(1)
*       LCTPARM1=0;                 /* CLEAR POINTER TO DS ENQ LIST
*                                                              Y02669*/
         SLR   @05,@05                                             0043
         ST    @05,LCTPARM1(,LCTPTR)                               0043
*     END;                                                         0044
*   IF LCTPARM1=0                   /* CHECK WHETHER DS ENQ LIST   0045
*                                      EXISTS                        */
*     THEN                                                         0045
@RF00038 SLR   @05,@05                                             0045
         L     @02,LCTPARM1(,LCTPTR)                               0045
         CR    @02,@05                                             0045
         BE    @RT00045                                            0045
*     GOTO EXIT;                    /*                         Y02669*/
*                                                                  0046
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQ ON DATA SETS USED BY JOB                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0047
*   ENQPTR=LCTPARM1;                /* POINT TO PREFIX OF DS ENQ LIST*/
         LR    ENQPTR,@02                                          0047
*   ENQECBPP=ADDR(ENQECB);          /* SET POINTER TO ENQ ECB        */
         LA    @15,ENQECB(,ENQPTR)                                 0048
         ST    @15,ENQECBPP(,ENQPTR)                               0048
*   ENQECB=0;                       /* CLEAR ENQ ECB                 */
         ST    @05,ENQECB(,ENQPTR)                                 0049
*   R1=LCTPARM1+LENGTH(QLISTPRE);   /* ISSUE ENQ                     */
         AH    @02,@CH00037                                        0050
         LR    R1,@02                                              0050
*   RESPECIFY                                                      0051
*    (R15) RESTRICTED;              /*                         Y02652*/
*   GEN(ENQ ,MF=(E,(1)));                                          0052
         ENQ ,MF=(E,(1))
*   IF R15=0 THEN                                                  0053
         LTR   R15,R15                                             0053
         BZ    @RT00053                                            0053
*     GOTO DONE;                    /* BRANCH IF ALL AVAILABLE       */
*   RESPECIFY                                                      0055
*    (R15) UNRESTRICTED;            /*                         Y02652*/
*/*  SET UP TO ISSUE MESSAGES                                        */
*                                                                  0056
*   R0=GETMAIN1;                    /* GET STORAGE FOR MESSAGES      */
         L     R0,GETMAIN1                                         0056
*   GEN(GETMAIN R,LV=(0));                                         0057
         GETMAIN R,LV=(0)
*   RESTRICT(MSGFROM,MSGTO);                                       0058
*   RESTRICT(MSGAREA);                                             0059
*   MSGAREA=R1;                                                    0060
         LR    MSGAREA,R1                                          0060
*   MSGTO=R1;                                                      0061
*                                                                  0061
         LR    MSGTO,R1                                            0061
*/*  ISSUE MESSAGE IEF861I                                           */
*                                                                  0062
*   MSGFROM=24+LCTIMSG;             /* GET POINTER TO DISPLACEMENT OF
*                                      MESSAGE IN IEFIB650           */
         L     @08,LCTIMSG(,LCTPTR)                                0062
         LA    MSGFROM,24(,@08)                                    0062
*   MSGFROM=LCTIMSG+MSGFROM->MSGPTR;/* GET POINTER TO MESSAGE        */
         AH    @08,MSGPTR(,MSGFROM)                                0063
         LR    MSGFROM,@08                                         0063
*   MSGBUF(1:61)=MESSAGE;           /* MOVE MESSAGE                  */
         MVC   MSGBUF(61,MSGTO),MESSAGE(MSGFROM)                   0064
*   RESTRICT(BLNKCTR);                                             0065
*   MSGTO=61+MSGTO;                 /* SET UP TO MOVE JOBNAME TO MSG */
         LA    MSGTO,61(,MSGTO)                                    0066
*   MSGBUF(1:8)=JCTJNAME;                                          0067
         L     @05,LCTJCTAD(,LCTPTR)                               0067
         MVC   MSGBUF(8,MSGTO),JCTJNAME(@05)                       0067
*   MSGTO=8-1+MSGTO;                                               0068
*                                                                  0068
         LA    MSGTO,7(,MSGTO)                                     0068
*/*  COUNT NUMBER OF BLANKS IN JOBNAME                               */
*                                                                  0069
*   BLNKCTR=0;                                                     0069
         SLR   BLNKCTR,BLNKCTR                                     0069
*BLNKLOOP:                                                         0070
*   IF MSGBUF(1)=' ' THEN                                          0070
BLNKLOOP CLI   MSGBUF(MSGTO),C' '                                  0070
         BNE   @RF00070                                            0070
*     DO;                                                          0071
*       BLNKCTR=BLNKCTR+1;                                         0072
         LA    BLNKCTR,1(,BLNKCTR)                                 0072
*       MSGTO=MSGTO-1;                                             0073
         BCTR  MSGTO,0                                             0073
*       GOTO BLNKLOOP;              /* GO CHECK FOR ANOTHER BLANK    */
         B     BLNKLOOP                                            0074
*     END;                                                         0075
*                                                                  0075
*/*  MOVE ROUTING AND DESC CODES IMMEDIATELY AFTER JOBNAME           */
*                                                                  0076
*   MSGTO=1+MSGTO;                  /* POINT TO FIRST BYTE AFTER TEXT*/
@RF00070 LA    MSGTO,1(,MSGTO)                                     0076
*   MSGFROM=MSGFROM+61+8;           /* POINT TO RTING AND DESC CODES */
         LA    MSGFROM,69(,MSGFROM)                                0077
*   MSGBUF(1:4)=MESSAGE;                                           0078
         MVC   MSGBUF(4,MSGTO),MESSAGE(MSGFROM)                    0078
*   MSGTO=MSGAREA;                  /* MOVE RTING AND DESC CODES     */
         LR    MSGTO,MSGAREA                                       0079
*   MSGLEN=MSGLEN-BLNKCTR;          /* ADJUST MESSAGE LENGTH         */
         LH    @05,MSGLEN(,MSGTO)                                  0080
         SLR   @05,BLNKCTR                                         0080
         STH   @05,MSGLEN(,MSGTO)                                  0080
*   RELEASE(BLNKCTR);                                              0081
*   GEN(WTO MF=(E,(MSGAREA)));      /* ISSUE MSG IEF861I             */
*                                                                  0082
         WTO MF=(E,(MSGAREA))
*   /*****************************************************************/
*   /*                                                               */
*   /* SCAN THE ENQ PARAMETER LIST TO CHECK RETURN CODES AND BUILD   */
*   /* MESSAGE IEF863I FOR THE DS NAMES WHICH REQUIRE IT             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0083
*   ENQINDEX=LCTPARM1+LENGTH(QLISTPRE);                            0083
         L     @08,LCTPARM1(,LCTPTR)                               0083
         LA    @08,24(,@08)                                        0083
         LR    ENQINDEX,@08                                        0083
*MSGLOOP:                                                          0084
*   MSGFROM=28+LCTIMSG;             /* GET POINTER TO DISPLACEMENT IN
*                                      MESSAGE MODULE                */
MSGLOOP  L     @08,LCTIMSG(,LCTPTR)                                0084
         LA    MSGFROM,28(,@08)                                    0084
*   MSGFROM=MSGFROM->MSGPTR+LCTIMSG;/* GET POINTER TO MESSAGE        */
         AH    @08,MSGPTR(,MSGFROM)                                0085
         LR    MSGFROM,@08                                         0085
*   MSGTO=MSGAREA;                  /* GET POINTER TO MESSAGE BUFFER */
         LR    MSGTO,MSGAREA                                       0086
*   IF QRETCDE=4 THEN                                              0087
         CLI   QRETCDE(ENQINDEX),4                                 0087
         BNE   @RF00087                                            0087
*     DO;                                                          0088
*       MSGBUF(1:16)=MESSAGE;       /* MOVE FIRST PART OF MESSAGE    */
         MVC   MSGBUF(16,MSGTO),MESSAGE(MSGFROM)                   0089
*       MSGTO=MSGTO+16;             /* SET UP TO MOVE DSNAME         */
         LA    MSGTO,16(,MSGTO)                                    0090
*       MSGBUF(1:QMINLGTH)=DSNAME;                                 0091
         SLR   @08,@08                                             0091
         IC    @08,QMINLGTH(,ENQINDEX)                             0091
         LR    @05,@08                                             0091
         BCTR  @05,0                                               0091
         L     @02,QMINOR(,ENQINDEX)                               0091
         EX    @05,@SM00726                                        0091
*       MSGTO=QMINLGTH+MSGTO;                                      0092
         ALR   MSGTO,@08                                           0092
*       MSGFROM=74+MSGFROM;         /* POINT TO ROUTING AND        0093
*                                      DESCRIPTOR CODES              */
         LA    MSGFROM,74(,MSGFROM)                                0093
*       MSGBUF(1:4)=MESSAGE;        /* MOVE RTING AND DESC CODES     */
         MVC   MSGBUF(4,MSGTO),MESSAGE(MSGFROM)                    0094
*       MSGTO=MSGAREA;                                             0095
         LR    MSGTO,MSGAREA                                       0095
*       MSGLEN=MSGLEN+QMINLGTH-58;  /* ADJUST MESSAGE LENGTH         */
         AH    @08,MSGLEN(,MSGTO)                                  0096
         SH    @08,@CH00704                                        0096
         STH   @08,MSGLEN(,MSGTO)                                  0096
*       GOTO WTO8;                  /* GO ISSUE MESSAGE              */
         B     WTO8                                                0097
*     END;                                                         0098
*   IF QRETCDE=12 THEN                                             0099
@RF00087 CLI   QRETCDE(ENQINDEX),12                                0099
         BNE   @RF00099                                            0099
*     DO;                                                          0100
*       LCTPRMSW='1'B;                                             0101
         OI    LCTPRMSW(LCTPTR),B'00000001'                        0101
*       MSGBUF(1:78)=MESSAGE;       /* MOVE MESSAGE (INCLUDING PERM.
*                                      UNAV.)                        */
         MVC   MSGBUF(78,MSGTO),MESSAGE(MSGFROM)                   0102
*       MSGTO=MSGTO+16;                                            0103
         LA    MSGTO,16(,MSGTO)                                    0103
*       MSGBUF(1:QMINLGTH)=DSNAME;  /* INSERT DATA SET NAME IN     0104
*                                      MESSAGE                       */
         SLR   @08,@08                                             0104
         IC    @08,QMINLGTH(,ENQINDEX)                             0104
         BCTR  @08,0                                               0104
         L     @05,QMINOR(,ENQINDEX)                               0104
         EX    @08,@SM00729                                        0104
*WTO8:                                                             0105
*       GEN(WTO MF=(E,(MSGAREA)));  /* ISSUE MESSAGE IEF863I         */
WTO8     WTO MF=(E,(MSGAREA))
*     END;                                                         0106
*   HCUET='001'B;                   /* SET FOR POSSIBLE DEQ          */
@RF00099 NI    HCUET(ENQINDEX),B'11111001'                         0107
         OI    HCUET(ENQINDEX),B'00000001'                         0107
*   QRETCDE='00'X;                  /* CLEAR RETURN CODE             */
         MVI   QRETCDE(ENQINDEX),X'00'                             0108
*   IF QLSTEND^='FF'X THEN                                         0109
         CLI   QLSTEND(ENQINDEX),255                               0109
         BE    @RF00109                                            0109
*     DO;                                                          0110
*       ENQINDEX=LENGTH(QLIST)+ENQINDEX;/* GET NEXT ENTRY IN LIST IF
*                                      NOT LAST                      */
         LA    ENQINDEX,12(,ENQINDEX)                              0111
*       GOTO MSGLOOP;                                              0112
         B     MSGLOOP                                             0112
*     END;                                                         0113
*                                                                  0113
*/*  END OF SCAN OF RETURN CODES FROM ENQ                            */
*/*  CHECK WHETHER JOB CAN WAIT FOR DATA SETS.                       */
*                                                                  0114
*   IF LCTENQU='1'B THEN                                           0114
*                                                                  0114
@RF00109 TM    LCTENQU(LCTPTR),B'00000001'                         0114
         BNO   @RF00114                                            0114
*     /***************************************************************/
*     /*                                                             */
*     /* IF LCTENQU INDICATES THE INITIATOR CANNOT WAIT FOR DATA SETS*/
*     /* AND NO RETURN CODE IS CURRENTLY SET IN THE IEL, SET THE     */
*     /* CORRESPONDING RETURN CODE AND RETURN CODE ORIGIN IN THE IEL.*/
*     /*                                                       Y02668*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0115
*     DO;                                                          0115
*       IF IELRTNCD='00'X THEN                                     0116
         L     @08,LCTENTR(,LCTPTR)                                0116
         L     @08,IELEXIT(,@08)                                   0116
         CLI   IELRTNCD(@08),0                                     0116
         BNE   @RF00116                                            0116
*         DO;                       /*                         Y02668*/
*           IELRTNCD='0C'X;         /* INDICATE JOB CANCELED BECAUSE
*                                      JOB COULD NOT WAIT FOR DATA 0118
*                                      SETS                    Y02668*/
         MVI   IELRTNCD(@08),X'0C'                                 0118
*           IELRCXT='03'X;          /* SET ORIGIN OF 'INITIATOR'   0119
*                                                              Y02668*/
         MVI   IELRCXT(@08),X'03'                                  0119
*         END;                      /*                         Y02668*/
*CANCEL2:                                                          0121
*                                                                  0121
*/*  DEQ FROM DS ENQ LIST                                            */
*                                                                  0121
*       R1=LCTPARM1+LENGTH(QLISTPRE);                              0121
@RF00116 DS    0H                                                  0121
CANCEL2  LA    R1,24                                               0121
         AL    R1,LCTPARM1(,LCTPTR)                                0121
*       GEN(DEQ ,MF=(E,(1)));                                      0122
         DEQ ,MF=(E,(1))
*CANCEL3:                                                          0123
*       INCMSTS='1'B;               /* SET JOB FAILED INDICATOR      */
CANCEL3  L     @08,LCTJCTAD(,LCTPTR)                               0123
         OI    INCMSTS(@08),B'00000100'                            0123
*FAILED:                                                           0124
*       JCTDETDA=0;                 /* CLEAR TTR OF DS ENQ LIST (SO
*                                      NO ATTEMPT WILL BE MADE TO DEQ
*                                      FROM THE DS NAMES)            */
FAILED   L     @08,LCTJCTAD(,LCTPTR)                               0124
         SLR   @05,@05                                             0124
         STCM  @05,7,JCTDETDA(@08)                                 0124
*DONE:                              /* FREE DS ENQ LIST              */
*       R1=LCTPARM1;                                               0125
DONE     L     R1,LCTPARM1(,LCTPTR)                                0125
*       R0=LCTPARM2;                                               0126
         L     R0,LCTPARM2(,LCTPTR)                                0126
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0127
         FREEMAIN R,LV=(0),A=(1)
*       GOTO EXIT;                  /* GO EXIT                 Y02669*/
         B     EXIT                                                0128
*     END;                                                         0129
*   IF LCTPRMSW='1'B THEN                                          0130
@RF00114 TM    LCTPRMSW(LCTPTR),B'00000001'                        0130
         BNO   @RF00130                                            0130
*     DO;                                                          0131
*                                                                  0131
*       /*************************************************************/
*       /*                                                           */
*       /* CANNOT WAIT FOR DATA SETS. ISSUE MESSAGE IEF100I.         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0132
*       LCTPRMSW='0'B;                                             0132
         NI    LCTPRMSW(LCTPTR),B'11111110'                        0132
*       R1=LCTPARM1+LENGTH(QLISTPRE);                              0133
         LA    R1,24                                               0133
         AL    R1,LCTPARM1(,LCTPTR)                                0133
*       GEN(DEQ ,MF=(E,(1)));                                      0134
*                                                                  0134
         DEQ ,MF=(E,(1))
*/*  SET UP MESSAGE IEF100I                                          */
*                                                                  0135
*       MSGTO=MSGAREA;                                             0135
         LR    MSGTO,MSGAREA                                       0135
*       MSGFROM=LCTIMSG+16;         /* GET POINTER TO MSG IN IEFIB650*/
         LA    @08,16                                              0136
         L     @05,LCTIMSG(,LCTPTR)                                0136
         LR    MSGFROM,@05                                         0136
         ALR   MSGFROM,@08                                         0136
*       MSGFROM=LCTIMSG+MSGFROM->MSGPTR;                           0137
         AH    @05,MSGPTR(,MSGFROM)                                0137
         LR    MSGFROM,@05                                         0137
*       MSGBUF(1:47)=MESSAGE;       /* MOVE MESSAGE                  */
         MVC   MSGBUF(47,MSGTO),MESSAGE(MSGFROM)                   0138
*       MSGTO=MSGTO+16;                                            0139
         ALR   MSGTO,@08                                           0139
*       MSGBUF(1:8)=JCTJNAME;       /* INSERT JOBNAME IN MESSAGE     */
         L     @08,LCTJCTAD(,LCTPTR)                               0140
         MVC   MSGBUF(8,MSGTO),JCTJNAME(@08)                       0140
*       GEN(WTO MF=(E,(MSGAREA)));  /* ISSUE MSG IEF100I             */
         WTO MF=(E,(MSGAREA))
*/*  FREE MESSAGE BUFFER                                             */
*                                                                  0142
*       R0=GETMAIN1;                                               0142
         L     R0,GETMAIN1                                         0142
*       GEN(FREEMAIN R,LV=(0),A=(MSGAREA));                        0143
         FREEMAIN R,LV=(0),A=(MSGAREA)
*       GOTO CANCEL3;               /* GO FAIL JOB                   */
         B     CANCEL3                                             0144
*     END;                                                         0145
*                                                                  0145
*   /*****************************************************************/
*   /*                                                               */
*   /* OTHERWISE ISSUE MESSAGE IEF099I AND WAIT FOR DATA SETS        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0146
*   MSGTO=MSGAREA;                                                 0146
@RF00130 LR    MSGTO,MSGAREA                                       0146
*   MSGFROM=LCTIMSG+12;             /* GET POINTER TO MESSAGE IN   0147
*                                      IEFIB650                      */
         L     @08,LCTIMSG(,LCTPTR)                                0147
         LA    MSGFROM,12(,@08)                                    0147
*   MSGFROM=LCTIMSG+MSGFROM->MSGPTR;                               0148
         AH    @08,MSGPTR(,MSGFROM)                                0148
         LR    MSGFROM,@08                                         0148
*   MSGBUF(1:50)=MESSAGE;           /* MOVE MESSAGE TO BUFFER        */
         MVC   MSGBUF(50,MSGTO),MESSAGE(MSGFROM)                   0149
*   MSGTO=MSGTO+16;                                                0150
         LA    MSGTO,16(,MSGTO)                                    0150
*   MSGBUF(1:8)=JCTJNAME;           /* INSERT JOBNAME IN MESSAGE     */
         L     @08,LCTJCTAD(,LCTPTR)                               0151
         MVC   MSGBUF(8,MSGTO),JCTJNAME(@08)                       0151
*   RFY                                                            0152
*    (R5) RSTD;                                                    0152
*   GEN(WTO MF=(E,(MSGAREA)));      /* ISSUE MSSSAGE IEF099I         */
         WTO MF=(E,(MSGAREA))
*   R5=R1;                          /* SAVE MSG ID FOR DOM   @ZA05168*/
         LR    R5,R1                                               0154
*   R0=GETMAIN1;                                                   0155
         L     R0,GETMAIN1                                         0155
*   GEN(FREEMAIN R,LV=(0),A=(MSGAREA));                            0156
*                                                                  0156
         FREEMAIN R,LV=(0),A=(MSGAREA)
*/*  WAIT FOR DATA SETS.                                             */
*/*  SET UP LIST OF ENQ AND CANCEL ECB'S.                            */
*                                                                  0157
*   ENQPTR=LCTPARM1;                                               0157
         L     ENQPTR,LCTPARM1(,LCTPTR)                            0157
*   CANECBP=ADDR(CHCECB);                                          0158
         L     @08,LCTQDRTY(,LCTPTR)                               0158
         LA    @02,CHCECB(,@08)                                    0158
         ST    @02,CANECBP(,ENQPTR)                                0158
*   ENQECBP=ADDR(ENQECB);                                          0159
         LA    @02,ENQECB(,ENQPTR)                                 0159
         ST    @02,ENQECBP(,ENQPTR)                                0159
*   QECBBIT='1'B;                                                  0160
         OI    QECBBIT(ENQPTR),B'10000000'                         0160
*   CHCL='1'B;                      /* SET CSCB CANCELABLE, IN CASE
*                                      NOT ALREADY CANCELABLE  Y02652*/
         OI    CHCL(@08),B'00001000'                               0161
*EWAIT:                                                            0162
*   GEN(WAIT ECBLIST=ECBLIS2(ENQPTR),LONG=YES);/* ISSUE LONG WAIT SO
*                                      MEMORY CAN BE SWAPPED OUT   0162
*                                                              Y02669*/
EWAIT    WAIT ECBLIST=ECBLIS2(ENQPTR),LONG=YES
*   GEN(DOM MSG=(R5));              /* DOM MSG IEF099I       @ZA05168*/
         DOM MSG=(R5)
*   RFY                                                            0164
*    (R5) UNRSTD;                                                  0164
*   RESTRICT(ECBPTR);                                              0165
*   ECBPTR=ADDR(CHCECB);                                           0166
         L     ECBPTR,LCTQDRTY(,LCTPTR)                            0166
         LA    ECBPTR,CHCECB(,ECBPTR)                              0166
*   IF ECBPTR->POSTED='1'B THEN                                    0167
         TM    POSTED(ECBPTR),B'01000000'                          0167
         BO    @RT00167                                            0167
*     GOTO CANCEL2;                 /* IF CANCEL ECB HAS BEEN POSTED */
*   ECBPTR=ADDR(ENQECB);                                           0169
         LA    ECBPTR,ENQECB(,ENQPTR)                              0169
*   IF ECBPTR->POSTED='1'B THEN                                    0170
         TM    POSTED(ECBPTR),B'01000000'                          0170
         BO    @RT00170                                            0170
*     GOTO DONE;                    /* ENQ ECB POSTED                */
*   ELSE                                                           0172
*     GOTO EWAIT;                   /* NEITHER ECB POSTED            */
         B     EWAIT                                               0172
*EXIT:                                                             0173
*   IF LCTCANF='1'B THEN                                           0173
EXIT     TM    LCTCANF(LCTPTR),B'00001000'                         0173
         BNO   @RF00173                                            0173
*     CHCL='0'B;                    /* SET CSCB NON-CANCELABLE IF  0174
*                                      INDICATED BY LCT (ALL TASKS 0174
*                                      ARE MADE CANCELABLE IF THEY 0174
*                                      WAIT FOR DATA SETS)     Y02652*/
         L     @05,LCTQDRTY(,LCTPTR)                               0174
         NI    CHCL(@05),B'11110111'                               0174
*   R1=LCTPTR;                                                     0175
@RF00173 LR    R1,LCTPTR                                           0175
*   RESPECIFY                                                      0176
*    (R15) RSTD;                    /*                         Y02652*/
*   R15=ADDR(IEFSD062);             /*                         Y02652*/
         L     R15,@CV00688                                        0177
*   GEN(BR R15);                    /* EXIT TO IEFSD162        Y02652*/
         BR R15
*   END                                                            0179
*                                                                  0179
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEFALLCT)                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEZIELDF)                                       */
*/*%INCLUDE SYSLIB  (IEZIEL  )                                       */
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                       */
*/*%INCLUDE SYSLIB  (IEFASCTB)                                       */
*                                                                  0179
*       ;                                                          0179
@EL00001 DS    0H                                                  0179
@EF00001 DS    0H                                                  0179
@ER00001 BR    @14                                                 0179
@DATA    DS    0H
@CH00037 DC    H'24'
@CH00704 DC    H'58'
@SM00726 MVC   MSGBUF(0,MSGTO),DSNAME(@02)
@SM00729 MVC   MSGBUF(0,MSGTO),DSNAME(@05)
@DATD    DSECT
         DS    0F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IEFSD102 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
@DATEND  EQU   *
IEFSD102 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
@CV00688 DC    V(IEFSD062)
         DS    0D
GETMAIN1 DS    FL4
         ORG   GETMAIN1
@NM00140 DC    AL1(253)
@NM00141 DC    AL3(80)
         ORG   GETMAIN1+4
PATCH    DC    50X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
R0       EQU   @00
R1       EQU   @01
ENQPTR   EQU   @03
ENQINDEX EQU   @03
R5       EQU   @05
LCTPTR   EQU   @04
R15      EQU   @15
MSGFROM  EQU   @06
MSGTO    EQU   @07
BLNKCTR  EQU   @08
MSGAREA  EQU   @09
ECBPTR   EQU   @08
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00007 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTPARM1 EQU   LCT+36
LCTPARM2 EQU   LCT+40
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00034 EQU   LCT+76
LCTINTSW EQU   @NM00034
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
LCTCANF  EQU   LCTOPSW1
@NM00060 EQU   LCT+356
LCTOPSW2 EQU   @NM00060
LCTENQU  EQU   LCTOPSW2
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
@NM00074 EQU   LCT+420
LCTINTS2 EQU   @NM00074+1
LCTIMSG  EQU   LCT+432
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHCL     EQU   CHACT
CHKEY    EQU   CHAIN+8
CHPKE    EQU   CHAIN+28
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHCECB   EQU   CHASM+20
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
IEL      EQU   0
IELLIST  EQU   IEL
IELOPLST EQU   IELLIST+8
IELEXIT  EQU   IELLIST+20
IELLAST  EQU   IELEXIT
IELOPTS  EQU   0
IELOPSW1 EQU   IELOPTS+2
IELOPSW2 EQU   IELOPTS+3
IELOPSW3 EQU   IELOPTS+5
IELEXITS EQU   0
IELEXHDR EQU   IELEXITS
IELRTNCD EQU   IELEXHDR+2
IELRCXT  EQU   IELEXHDR+3
RTNEXT   EQU   IELEXITS+8
RTNEXNM  EQU   RTNEXT+2
RTNEXAD  EQU   RTNEXNM+2
INJMJCT  EQU   0
JCTJSTAT EQU   INJMJCT+5
INCMSTS  EQU   JCTJSTAT
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTJNAME EQU   INJMJCT+8
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTRSW2  EQU   INJMJCT+87
JCTDETDA EQU   INJMJCT+88
JCTJSB   EQU   INJMJCT+111
JCTSTAT2 EQU   INJMJCT+116
INSMSCT  EQU   0
SCTSSTAT EQU   INSMSCT+4
SCTSTYPE EQU   INSMSCT+67
SCTSDPTY EQU   INSMSCT+94
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTCDENT EQU   INSMSCT+118
SCTSTEND EQU   INSMSCT+172
QLISTPRE EQU   0
ECBLIS2  EQU   QLISTPRE+8
ENQECBP  EQU   ECBLIS2
CANECBP  EQU   ECBLIS2+4
QECBBIT  EQU   CANECBP
ENQECB   EQU   QLISTPRE+16
ENQECBPP EQU   QLISTPRE+20
QLIST    EQU   0
QLSTEND  EQU   QLIST
QMINLGTH EQU   QLIST+1
QATT     EQU   QLIST+2
HCUET    EQU   QATT
QRETCDE  EQU   QLIST+3
QMINOR   EQU   QLIST+8
MSGBUF   EQU   0
MSGLEN   EQU   MSGBUF
MESSAGE  EQU   0
MSGLST   EQU   0
MSGPTR   EQU   MSGLST+2
DSNAME   EQU   0
ECB      EQU   0
@NM00138 EQU   ECB
POSTED   EQU   @NM00138
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
IEFAACTB EQU   INJMJCT+176
@NM00133 EQU   SCTCDENT+42
SCTABCND EQU   @NM00133
LCTPARMB EQU   LCTPARM1
LCTPRMSW EQU   LCTPARMB
INDMDSNT EQU   INSMSCT+176
*                                      START UNREFERENCED COMPONENTS
@NM00137 EQU   LCTPARMB
@NM00135 EQU   @NM00133+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00134 EQU   SCTABCND
ACTACCNT EQU   IEFAACTB+32
ACTJNFLD EQU   IEFAACTB+31
ACTJTIME EQU   IEFAACTB+28
ACTPRGNM EQU   IEFAACTB+8
@NM00111 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00080 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
@NM00139 EQU   @NM00138
MSGLENT  EQU   MSGLST+1
MSGKEY   EQU   MSGLST
QMAJOR   EQU   QLIST+4
@NM00136 EQU   QATT
MAJNAME  EQU   QLISTPRE
@NM00132 EQU   INSMSCT+173
@NM00131 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00130 EQU   INSMSCT+168
SCTCATCT EQU   INSMSCT+166
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00129 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTPGMNM EQU   INSMSCT+108
SCTTIOT  EQU   INSMSCT+105
@NM00128 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00127 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00126 EQU   SCTBCT
SCTGOTTR EQU   INSMSCT+100
SCTSMF   EQU   INSMSCT+96
@NM00125 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00124 EQU   SCTSDPTY
@NM00123 EQU   SCTSDPTY
SCTNIUSL EQU   INSMSCT+92
@NM00122 EQU   INSMSCT+90
SCTMSSZE EQU   INSMSCT+88
SCTPCAT  EQU   INSMSCT+84
SCTLDSTB EQU   INSMSCT+80
SCTSRBT  EQU   INSMSCT+76
SCTMSADR EQU   INSMSCT+72
@NM00121 EQU   INSMSCT+71
SCTXBTTR EQU   INSMSCT+68
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
SCTGOSTP EQU   SCTSTYPE
@NM00120 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
SCTSNUMB EQU   INSMSCT+64
@NM00119 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
SCTSNAME EQU   INSMSCT+52
SCTSCLPC EQU   INSMSCT+44
@NM00118 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00117 EQU   INSMSCT+36
@NM00116 EQU   INSMSCT+35
SCTAFACT EQU   INSMSCT+32
SCTDDNT  EQU   INSMSCT+28
@NM00115 EQU   INSMSCT+27
SCTLSIOT EQU   INSMSCT+24
@NM00114 EQU   INSMSCT+23
SCTANSCT EQU   INSMSCT+20
@NM00113 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00112 EQU   INSMSCT+15
SCTFSIOT EQU   INSMSCT+12
SCTLALOC EQU   INSMSCT+10
SCTSEXEC EQU   INSMSCT+8
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
EAADDRBT EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
SCTDISKA EQU   INSMSCT
@NM00110 EQU   INJMJCT+175
JCTVULDP EQU   INJMJCT+172
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTTSOID EQU   INJMJCT+160
JCTSSD   EQU   INJMJCT+157
@NM00109 EQU   INJMJCT+156
JCTSRBT  EQU   INJMJCT+152
JCTJMRJD EQU   INJMJCT+149
JCTJMRJT EQU   INJMJCT+146
JCTJMRSS EQU   INJMJCT+143
JCTJMRTL EQU   INJMJCT+140
JCTJMRCL EQU   INJMJCT+139
JCTJMROP EQU   INJMJCT+138
JCTJMRD  EQU   INJMJCT+137
JCTJMR   EQU   INJMJCT+134
JCTCKIDT EQU   INJMJCT+118
JCTCKIDL EQU   INJMJCT+117
@NM00108 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00107 EQU   INJMJCT+115
JCTSSTR  EQU   INJMJCT+112
JCTJSBTM EQU   JCTJSB
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00106 EQU   JCTJSB
JCTVOLSQ EQU   INJMJCT+110
JCTNRCKP EQU   INJMJCT+108
JCTNTRK  EQU   INJMJCT+107
JCTCKTTR EQU   INJMJCT+104
JCTDEVT  EQU   INJMJCT+100
@NM00105 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTSNUMB EQU   INJMJCT+95
JCTQIDNT EQU   INJMJCT+94
JCTEQREG EQU   INJMJCT+92
@NM00104 EQU   INJMJCT+91
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTNARST EQU   JCTRSW2
JCTSYSCK EQU   JCTRSW2
@NM00103 EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTCKFT  EQU   JCTRSW1
JCTCONTR EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
JCTWARMS EQU   JCTRSW1
@NM00102 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00101 EQU   INJMJCT+53
JCTSCT   EQU   INJMJCT+52
JCTSMRBA EQU   INJMJCT+44
@NM00100 EQU   INJMJCT+43
JCTACTAD EQU   INJMJCT+40
@NM00099 EQU   INJMJCT+36
@NM00098 EQU   INJMJCT+35
JCTSDKAD EQU   INJMJCT+32
JCTJCSMF EQU   INJMJCT+31
JCTGDGNT EQU   INJMJCT+28
@NM00097 EQU   INJMJCT+27
JCTPDIP  EQU   INJMJCT+24
JCTJTPTN EQU   INJMJCT+16
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00096 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
JCTABEND EQU   JCTJSTAT
@NM00095 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00094 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTJSRNO EQU   INJMJCT+4
JCTIDENT EQU   INJMJCT+3
JCTDSKAD EQU   INJMJCT
@NM00093 EQU   RTNEXAD
@NM00092 EQU   RTNEXNM
RTNEXID  EQU   RTNEXT+1
RTNEXLK  EQU   RTNEXT
IELCOM   EQU   IELEXHDR+4
IELXTLEN EQU   IELEXHDR
@NM00091 EQU   IELOPTS+7
IELSWAS  EQU   IELOPTS+6
IELNSYS  EQU   IELOPSW3
@NM00090 EQU   IELOPSW3
@NM00089 EQU   IELOPSW3
IELTSIZ  EQU   IELOPTS+4
IELOENQU EQU   IELOPSW2
IELONORC EQU   IELOPSW2
@NM00088 EQU   IELOPSW2
@NM00087 EQU   IELOPSW2
@NM00086 EQU   IELOPSW2
@NM00085 EQU   IELOPSW2
IELCRF   EQU   IELOPSW2
IELTIMEF EQU   IELOPSW2
@NM00084 EQU   IELOPSW1
IELICMDF EQU   IELOPSW1
IELONEJF EQU   IELOPSW1
IELCANF  EQU   IELOPSW1
@NM00083 EQU   IELOPSW1
@NM00082 EQU   IELOPSW1
IELDWFF  EQU   IELOPSW1
IELDPSWA EQU   IELOPSW1
IELOPLEN EQU   IELOPTS
@NM00081 EQU   IELLAST
IELEND   EQU   IELLAST
IELSTEPL EQU   IELLIST+16
IELRTNA  EQU   IELLIST+12
IELCSCB  EQU   IELLIST+4
IELSSOBA EQU   IELLIST
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00079 EQU   CHSHORT+84
@NM00078 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00077 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPARM   EQU   CHKEY
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00076 EQU   LCT+436
LCTLBWAP EQU   LCT+428
@NM00075 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00074
LCTRFB1  EQU   LCT+419
@NM00073 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBSM EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00072 EQU   LCTJCTDA+3
LCTJCTVA EQU   LCTJCTDA
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00071 EQU   LCT+364
@NM00070 EQU   LCTJSCB+1
@NM00069 EQU   LCTOPSW3
@NM00068 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00067 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00066 EQU   LCTOPSW3
@NM00065 EQU   @NM00060+1
LCTNORC  EQU   LCTOPSW2
@NM00064 EQU   LCTOPSW2
@NM00063 EQU   LCTOPSW2
@NM00062 EQU   LCTOPSW2
@NM00061 EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00059 EQU   LCTEXIT+1
@NM00058 EQU   LCTOPSW1
@NM00057 EQU   LCTOPSW1
LCTONEJF EQU   LCTOPSW1
@NM00056 EQU   LCTOPSW1
@NM00055 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00054 EQU   LCTTSRB4
@NM00053 EQU   LCT+340
@NM00052 EQU   LCTSPIL+3
@NM00051 EQU   LCTALCFG
@NM00050 EQU   LCTALCFG
@NM00049 EQU   LCTALCFG
@NM00048 EQU   LCTALCFG
@NM00047 EQU   LCTALCFG
@NM00046 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00045 EQU   ECBLIST+1
@NM00044 EQU   ECBLIST
LCTJMRAD EQU   LCT+324
LCTASCBA EQU   LCT+320
@NM00043 EQU   LCT+284
QMGR1    EQU   LCT+248
REGSAVE  EQU   LCT+104
@NM00042 EQU   LCTATLST+1
@NM00041 EQU   LCTATLST
@NM00040 EQU   LCTJOBLB+1
@NM00039 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00038 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00037 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00036 EQU   LCTTJTU4
@NM00035 EQU   @NM00034+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00033 EQU   LCTSREG+1
@NM00032 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00031 EQU   LCTSMBAD+1
@NM00030 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
LCTSNUMB EQU   LCT+58
@NM00029 EQU   LCTJFCBH
@NM00028 EQU   LCTJFCBH
@NM00027 EQU   LCTJFCBH
@NM00026 EQU   LCTJFCBH
@NM00025 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00024 EQU   LCTCMCBA+1
@NM00023 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTJCFAL EQU   LCTERR
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
LCTJFAIL EQU   LCTERR
@NM00022 EQU   LCTPSPAR+1
@NM00021 EQU   LCTPSPAR
@NM00020 EQU   LCTWORKA+3
LCTSCTVA EQU   LCTWORKA
@NM00019 EQU   LCTSCTAD+1
@NM00018 EQU   LCTSCTAD
@NM00017 EQU   LCTJCTAD+1
@NM00016 EQU   LCTJCTAD
@NM00015 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00007
@NM00014 EQU   @NM00007
@NM00013 EQU   @NM00007
@NM00012 EQU   @NM00007
@NM00011 EQU   @NM00007
@NM00010 EQU   @NM00007
@NM00009 EQU   @NM00007
@NM00008 EQU   @NM00007
@NM00006 EQU   LCTTCBAD+1
@NM00005 EQU   LCTTCBAD
@NM00004 EQU   LCTSRTAD+1
@NM00003 EQU   LCTSRTAD
@NM00002 EQU   LCTQDRTY+1
@NM00001 EQU   LCTQDRTY
*                                      END UNREFERENCED COMPONENTS
@RT00045 EQU   EXIT
@RT00053 EQU   DONE
@RT00167 EQU   CANCEL2
@RT00170 EQU   DONE
@RF00170 EQU   EWAIT
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IEFSD102,(C'PLS1715',0701,76034)
