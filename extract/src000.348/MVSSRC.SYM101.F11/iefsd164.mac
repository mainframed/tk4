         TITLE 'IEFSD164 VMS STEP DELETE'
IEFSD064 CSECT
* SD064214 C - NEAR LABEL SD064214 ADD PUT ENDREQ SYSTEM MSGS  @ZA09487
* SD16447 C - BEFORE LABEL SD16447 ADD SET ABEND INDICATOR     @ZA17354
*********************BEGINNING OF SPECIFICATION********************
*
*   MODULE NAME=IEFSD064 (IEFSD164)
*
*   DESCRIPTIVE NAME=STEP DELETE
*
*   COPYRIGHT=NONE
*
*   STATUS=OS/VS2 OZ09487                                      @ZA09487
*
*   FUNCTION=CLOSE JOBLIB,STEPLIB,AND FETCHLIB DCBS AND FREE
*        THE DCB CORE,READ THE JCT AND SCT FROM SWA,PERFORM
*        JOB AND JOB STEP TIMING,PERFORM WARMSTART PROCESSING
*        AND JOURNAL THE JCT AND SCT,PERFORM  STAE
*        PROCESSING, GET CORE AND INITIALIZE A DUMMY TCB,
*        GO TO TERMINATION,AND READ/LOCATE THE SCT FOR THE NEXT
*        STEP OF THE JOB.
*
*   OPERATION= WHEN IEFSD164 GETS CONTROL, IT WILL CHECK IN-     Y02641
*        DICATORS IN THE JCT AND LCT TO DETERMINE IF IT IS       Y02641
*        BEING ENTERED FOR WARMSTART PROCESSING OR BECAUSE OF    Y02641
*        AN ERROR DURING ALLOCATION. IF EITHER OF THESE CON-     Y02641
*        DITIONS IS TRUE, ALL DCB PROCESSING,READING THE JCT     Y02641
*        AND SCT FROM SWA, AND JOB AND STEP TIMING PROCESSING    Y02641
*        WILL BE BY-PASSED.                                      Y02641
*
*        IF NEITHER OF THE ALTERNATE PATH INDICATORS IS
*        ON, THE ADDRESS OF THE FETCHLIB DCB IN THE ATTACH
*        PARAMETER LIST IS CHECKED TO DETERMINE IF ONE EXISTS.
*        IF ONE DOES EXIST,CLOSE THE FETCHLIB DCB AND FREE ITS
*        CORE.
*
*        THE JOBLIB/STEPLIB DCB POINTER IN THE LCT IS CHECKED
*        TO DETERMINE IF ONE EXISTS. IF ONE DOES EXIST,CLOSE
*        THE DCB AND FREE ITS CORE.
*
*        THE AMOUNT OF SRB TIME USED BY THE STEP IS SAVED IN THE Y02652
*        SCT AND THE ACCUMULATED SRB TIME FOR THE JOB IS CALCU - Y02652
*        LATED AND SAVED IN THE JCT.THESE VALUES WILL BE PRESER- Y02652
*        VED WHEN  THE SCT AND JCT ARE JOURNALED .               Y02652
*
*        IEFSD164 NOW GETS CORE FOR THE JOB/STEP ACT AND READ
*        THE ACT INTO CORE. THE AMOUNT OF TIME IT TOOK THE JOB
*        STEP TO EXECUTE IS CALCULATED AND STORED IN THE STEP
*        ACT AND THE ACT IS WRITTEN TO SWA. THE JACT IS READ     Y02621
*        INTO CORE,THE AMOUNT OF JOB TIME ELAPSED AND JOB TIME
*        REMAINING IS CALCULATED AND STORED IN THE JACT.
*
*        THE JACT IS WRITTEN TO SWA.                             Y02621
*
*        THE JOB/STEP ACT CORE IS THEN FREED.
*
*        THE IEFPARAM PARAMETER LIST IS NOW FREED AND THE PTR    Y02653
*        TO IEFPARAM IN THE STAE EXIT PARAMETER LIST IS ZEROED.  Y02653
*
*        CORE IS NOW GOTTEN FOR A DUMMY TCB TO BE USED BY TERM-
*        INATION AND THE TCB STATUS AND PROGRAM COMPLETION
*        CODES ARE MOVED TO IT.
*        A. IF JOB IS 'IN EXEC' THEN SET 'IN TERM' IN JCT,       Y02641
*           ELSE GO TO G.                                       YM02685
*        B. MOVE ABEND CODE FROM LCT TO JCT AND DUMMY TCB.       Y02641
*        C. MOVE COMPLETION CODE INTO THE SCT                    Y02641
*        D. SET 'QMSJNL'  INDICATOR IN THE QMPA                  Y02641
*        E. WRITE JCT AND SCT TO SWA                             Y02641
*        F. SET 'IN TERM' IN JSCB.                              YM02685
*        G. IF JCTWARMS ON AND JOB 'IN TERM' AND NO ABEND        Y02641
*           CODE, SET CONTINUE RESTART INDICATOR IN JCT.         Y02641
*        H. CALL UNALLOCATION                                    Y02641
*                                                                Y02641
*                                                                Y02641
*        CORE IS GOTTEN FOR A REGISTER SAVE AREA AND CON-
*        TROL IS PASSED TO TERMINATION.
*
*        UPON RETURN FROM TERMINATION THE DUMMY TCB IS FREED,   YM07604
*        THE SCT IS WRITTEN TO THE JOURNAL,THE REGISTER SAVE-   YM07604
*        AREA IS FREED,AND THE TERMINATION PARAMETER LIST IS    YM07604
*        FREED.                                                 YM07604
*
*        IEFSD164 NOW CHECKS THE RETURN CODE FROM TERMINATION
*        TO DETERMINE IF THE LAST STEP OF THE JOB TERMINATED,
*        WHETHER ANOTHER STEP IS TO BE INITIATED, OR WHETHER
*        THE JOB IS TO BE SUSPENDED.
*
*        IF 'JCTCONTR OR JCTSTEPR OR JCTCKPTR' IS ON             Y02641
*        CALL JOB SUSPENSION. IF JCTWARMS IS ON CALL             Y02641
*        JOB DELETE.                                             Y02641
*
*        IF THERE IS ANOTHER STEP IN THE JOB AND JCTCONTR IS NOT ON,
*        ISSUE ENDREQ MACRO USING THE SYSTEM MESSAGE RPL       @ZA09487
*        POINTED TO BY THE JSCBSMLR TO FLUSH THE JES BUFFERS   @ZA09487
*        OF SYSTEM MESSAGES FOR THE PREVIOUS STEP,             @ZA09487
*        CLEAR THE JSCB DEB POINTER, CLEAR JSCB SHARE INDICATOR AND
*        TURN OFF THE AUTHORIZED FLAG IN THE JSCB.              YM01497
*        THE SCT FOR THE STEP IS READ INTO CORE AND
*        CONTROL IS PASSED TO IEFSD101. IF THE LAST STEP OF THE
*        JOB HAS TERMINATED CONTROL IS PASSED TO IEFSD166.
*
*        ALSO IF THE JOB IS TO BE SUSPENDED,CONTROL IS           Y02652
*        PASSED TO IEFSD166.                                     Y02652
*
*   NOTES=THIS MODULE CALLS IEFSD101 AND IEFSD166 AND DOES NOT
*        NOT RECEIVE CONTROL BACK.
*        CHARACTER CODE DEPENDENCIES=NONE
*        RESTRICTIONS=NONE
*        REGISTER CONVENTIONS=STANDARD
*        PATCH LABEL=PATCH
*
*   MODULE TYPE=CSECT
*        PROCESSOR=ASSEMBLER
*        MODULE SIZE=LESS THAN 4K
*        ATTRIBUTES=PAGED LPA,REENTRANT,ZERO PROTECT KEY,
*             REFRESHABLE,SUPV STATE
*
*   ENTRY POINT=IEFSD064
*        PURPOSE=(SAME AS FUNCTION)
*        LINKAGE=:
*        A. VIA BRANCH FROM IEFSD161 FOR WARMSTART
*        B. VIA BRANCH FROM IEFSD162 IF ERROR OCCURRED IN
*             ALLOCATION
*        C. VIA BRANCH FROM IEFSD263 FROM JOB STEP EXECUTION
*        INPUT DATA=R1 POINTS TO IEFPARAM
*        REGISTERS SAVED=NONE
*        REGISTER CONTENTS DURING PROCESSING=N/A
*        REGISTERS RESTORED=NONE
*
*   EXIT-NORMAL=:
*        A.IEFSD101 (VIA BRANCH)
*        CONDITIONS=TO INITIATE THE NEXT STEP OF THE JOB
*        OUTPUT DATA=R1 POINTS TO LCT,THE SCT FOR THE NEXT IS
*             IN CORE
*        RETURN CODES=NONE
*        B. IEFSD166 (VIA BRANCH)
*        CONDITIONS= FOR JOB DELETE OR JOB SUSPENSION
*        OUTPUT DATA=R1 POINTS 2 WORD PARAMETER LIST
*                THE FIRST WORDS POINTS TO THE LCT THE SECOND
*                CONTAINS THE FUNCTION CODE
*        RETURN CODES (FUNCTION CODE)=:
*        4-IF THE JOB IS TO BE DELETED
*        8-IF THE JOB IS TO BE SUSPENDED
*
*   EXIT-ERROR=NONE
*        CONDITIONS=N/A
*        OUTPUT DATA=N/A
*        RETURN CODES=N/A
*
*   EXTERNAL REFERENCES:
*        ROUTINES=:
*        A. TERMINATION TO PERFORM STEP AND JOB UNALLOCATION
*        B. SWA MANAGER TO READ AND WRITE SWA CONTROL BLOCKS
*        DATA AREAS=STAE EXIT PARAMETER LIST AND TERMINATION
*             PARAMETER LIST
*        CONTROL BLOCKS=LCT,SCT,JCT,TCB,QMPA,IEL,JSCB,ACT,JACT
*                       JESCT                                  @Z40FPPJ
*        TABLES=NONE
*        MACROS=GETMAIN,FREEMAIN,CLOSE,ENDREQ                  @ZA09487
*
*   CHANGE LEVEL=Y02621,Y02641,Y02652,Y02653,YM02685,YM01497,
*                YM02479,YM06015,YM06443,YM07604,YM06095,YM07219
*                @Z40FPPJ,OZ17354                              @ZA17354
*                OZ09487                                       @ZA09487
*
*   MESSAGES=NONE
*
********************END OF SPECIFICATION**************************
         EJECT
         BALR  12,0
         USING *,12
         USING IEFSCT,R5
         USING IEFLOT,R11
         USING IEFPARAM,R2
         USING IHADCB,9
***********************************************************************
*        THIS CODE WILL CAUSE THIS MODULE TO BE MORE EASILY IDENTIFIED*
*        IN A CORE DUMP.                                              *
***********************************************************************
IEFSD164 MODID                                                   Y01886
         LR    R2,R1                   SAVE INPUT PARAM LIST PTR
         L     R11,LCTADDR             GET LCT ADDR               M0138
         USING IOPARAMS,10                                       S21474
         LA    R10,QMGR1                ADDRESS OF QUEUE MANAGER S21474
*                                       PARAMETER AREA           S21474
         LA    R13,REGSAVE      GET REGSAVE ADDR                VS20443
***********************************************************************
* IF IEFSD164 IS BEING ENTERED FOR WARMSTART PROCESSING OR BECAUSE
* OF AN ERROR IN ALLOCATION, THEN BY-PASS DCB AND TIME PROCESSING.
***********************************************************************
         USING IEFJCT,R4                                         Y02641
         L     R4,LCTJCTAD         GET ADDR OF JCT               Y02641
         LA    R4,D0(R4)           CLEAR THE HIGH ORDER BYTE     Y02641
         LTR   R4,R4               IS THERE AN IN-CORE JCT       Y02641
         BZ    SD164009            NO,DO NOT CHECK FOR WARMSTART Y02641
         TM    JCTRSW1,JCTWARMS    IS 164 BEING ENTERED FOR WARM Y02641
*                                  START PROCESSING              Y02641
         BO    SD16446             YES,BYPASS DCB AND TIME PROC- Y02641
*                                  ESSING                        Y02641
SD164009 EQU   *                                                 Y02641
         TM    LCTOPSW3,LCTALERR   ERROR DURING ALLOCATION        M0475
         BO    SD16446             YES, BYPASS DCB PROCESSING     M0475
         L     R8,IEFTCBAD        ADDRESS OF INIT TCB             20030
         USING TCB,R8                  TCB ADDRESSABILITY         20029
***********************************************************************
* WHEN FETCHLIB, JOBLIB/STEPLIB ARE CLOSED, THE CURRENT TCB MUST
* POINT TO THE P/P TIOT.
* IF ENTERED, THE INITIATOR RECOVERY ROUTINE WILL RESTORE THE
* POINTER(P/P TIOT) IF PARTIOTB IS NOT ZERO.
***********************************************************************
         MVC PARTIOTB,TCBTIO       SAVE INIT TIOT PTR            Y02653
         L     R6,IEFTIOTA             GET ADDRESS OF TIOT LIST
         L     R6,0(R6)                GET ADDRESS OF JOB STEP TIOT
         ST    R6,TCBTIO               PUT PTR TO JOB STEP TIOT IN20029
*                                      INITIATOR'S TCB SO CLOSE CAN
*                                      REFERENCE IT
***********************************************************************
*     CHECK THE FETCH DCB POINTER IN THE SUPERVISOR   LIST. IF IT IS  *
*     NON-ZERO,CLOSE THE FETCH DCB AND FREE UP ITS CORE               *
***********************************************************************
         L     R1,IEFREMLS        ADDRESS OF ATTACH LIST          20030
         USING ATTCHLST,R1
         L     R5,ATDCBADA        ADDRESS OF FETCH DCB            20030
         DROP  R1                                                 20030
         LA    R5,0(R5)                ZERO OUT HIGH ORDER BYTE    CR17
         LTR   R5,R5                    IS THERE A FETCH DCB ?
         BZ    SD64010                  NO
         MVI   REGSAVE,X'80'            INDICATE LIST END
         LA    R1,REGSAVE               ADDRESS OF REMOTE LIST
         CLOSE  ((5)),MF=(E,(1))        CLOSE THE FETCH DCB
         LR    R1,R5                    ADDRESS OF DCB
         LA    R0,DCBEND-IHADCB         LENGTH OF DCB
         LA    R14,TCORE                SUBPOOL NUMBER
         SLL   R14,24                   TO HIGH ORDER BYTE OF
         OR    R0,R14                   LENGTH REGISTER
         FREEMAIN  R,LV=(0),A=(1)       FREE THE FETCH DCB
SD64010  EQU   *
***********************************************************************
*        THIS CODE WILL GETMAIN FOR THE JCT,SCT AND THE PARAMETER LIST*
*        REQUIRED BY TERMINATE. THE JCT AND SCT WILL BE READ INTO CORE*
*        AND THE PARAMETER LIST BUILT FOR TERMINATE.                  *
***********************************************************************
         GETMAIN    R,LV=24,SP=TCORE    TERMINATE PARAM LIST CORE  CR17
         LR    R3,R1               SAVE ADDR OF PARMLIST
         L     R4,LCTJCTAD         GET ADDR OF JCT             YM01566
         L     R5,LCTSCTAD         GET ADDR OF SCT             YM01566
***********************************************************************
*        BUILD PARAMETER LIST                                         *
***********************************************************************
         MVC   ZERO(D4,R3),LCTADDR  MOVE LCT ADDR TO PARM LIST    M0138
         MVC   12(4,R3),IEFTIOTA        TIOT ADDRESS TO PARM LIST
         SR    R6,R6
         ST    R6,16(R3)               STORE ZERO INTO PARAM LIST TO
*                                      MAINTAIN OLD INTERFACE FOR     *
*                                      INDICATIVE DUMP                *
         ST    R4,4(R3)                STORE POINTER TO JCT INTO
*                                      PARAM LIST                     *
         ST    R5,8(R3)                STORE POINTER TO SCT INTO
*                                      PARAM LIST                     *
*******************************************************************OC42
*        CLOSE AND FREEMAIN FOR JOBLIB OR STEPLIB DCB, IF ANY    *
*******************************************************************OC42
         L     R7,LCTJOBLB                                         CR17
         LTR   R7,R7                   WAS JOBLIB OR STEPLIB      17052
         BZ    SD064022                 NO.                        CR17
         LA    R1,REGSAVE               YES. REMOTE LIST.          CR17
         MVI   0(R1),X'80'              INDICATE END OF LIST
         CLOSE  ((7)),MF=(E,(1))        CLOSE THE DCB
         LA    R0,DCBEND-IHADCB         LENGTH OF DCB
         LA    R14,TCORE                SUBPOOL NUMBER
         SLL   R14,24                   TO HIGH ORDER BYTE
         OR    R0,R14                   OF LENGTH REGISTER
         LR    R1,R7                    ADDRESS OF DCB
         FREEMAIN  R,LV=(0),A=(1)       FREE THE DCB CORE
         XC    LCTJOBLB(4),LCTJOBLB     ZERO OUT DCB PTR IN LCT    CR17
SD064022 EQU   *
         LA    R13,REGSAVE
         DROP  R8
         LA    R7,LCTTMWRK              ADDRESS OF TIMER WORK AREA
         L     R8,LCTTSRB4          GET SRB TIME FOR STEP        Y02652
         ST    R8,SCTSRBT           PUT SRB STEP TIME IN SCT     Y02652
         L     R14,JCTSRBT         GET PREVIOUS SRB TIME FOR JOB YO2652
         AR    R14,R8               ADD IN CURRENT SRB STEP TIME Y02652
         ST    R14,JCTSRBT          PUT NEW SRB JOB TIME IN JCT  Y02652
         L     R8,D12(R7)          TIME USED                     Y02652
         MVC   D4(D4,R7),D8(R7)    NEW INITIAL STEP TIME         Y02652
         L     R14,0(0,R7)              JOB RUNNING TIME
         AR    R14,R8                   TOTAL JOB TIME
         ST    R14,0(0,R7)              PUT BACK IN TWA
         LA    R8,12(0,R7)              IN SYSGEN SLOT
         GETMAIN R,LV=176               GET CORE FOR STEP-JOB ACTS
         SR    R9,R9                    INDICATE 1ST TIME THROUGH
         LR    R7,R1                    SAVE ACT ADDRESS
         LA    R6,REGSAVE+72       ADDR OF REMOTE LIST
         MVC   4(3,R6),32(R5)           ADDRESS OF STEP ACT
SD064028 EQU   *
         LA    R1,REGSAVE+72       ADDR OF REMOTE LIST
         ST    R1,QMPCL            PUT ADDR OF REMOTE LIST IN PARM
         MVI   QMPCL,X'01'              INDICATE 1 OPERATION
         MVI   QMPOP,X'04'              INDICATE READ
         ST    R7,0(0,R6)               ACT CORE ADDRESS TO QMPA
         LR    R1,R10                   ADDRESS OF QMPA TO R1
         L     R15,QMGRVCON             ADDRESS OF Q MGR
         BALR  R14,R15                  GO TO Q MGR
         TM    SCTSSTAT,X'04'      IS THIS STEP DSDRP              CR17
         BO    FREECORE            YES, DONT PUT TIME IN ACT       CR17
         LTR   R9,R9               IS THIS FIRST PASS              CR17
         BNZ   SD16435             NO, BRANCH                      CR17
         MVC   28(3,R7),1(R8)      PUT TIME IN STEP ACT            CR17
         B     SD16436                                             CR17
SD16435  EQU   *                                                   CR17
         L     R8,0(R8)            LOAD TIME USED                  CR17
         LA    R8,0(R8)            CLEAR HIGH ORDER BYTE           CR17
         L     R14,28(R7)          LOAD TOTAL TIME USED            CR17
         SRDL  R14,8               RIGHT ADJUST AND                CR17
*                                  SAVE LOW ORDER BYTE             CR17
         AR    R14,R8              ADD STEP TIME TO TOTAL TIME     CR17
         SLDL  R14,8               RESTORE LOW ORDER BYTE          CR17
         ST    R14,28(R7)          PUT TOTAL TIME IN JOB ACT       CR17
SD16436  EQU   *                                                   CR17
         OI    QMSTA,QMSJNL        JOURNAL STEP AND JOB ACT      Y02641
         MVC   4(4,R6),0(R7)            MOVE ACT TTR TO REMOTE LIST
         LR    R1,R10                   ADDRESS OF Q MGR PARAM AREA
         MVI   QMPOP,X'03'              INDICATE WRITE
         L     R15,QMGRVCON             ADDRESS OF Q MGR
         BALR  R14,R15                  GO TO Q MGR
         LTR   R9,R9                    IS THIS FIRST TIME THRU ?
         BP    FREECORE                 NO
         LA    R9,1                     INDICATE 2ND PASS
         MVC   4(3,R6),40(R4)           TTR OF JOB ACT
         B     SD064028                 GET JOB ACT
FREECORE LR    R1,R7                    ADDRESS OF ACT
         FREEMAIN R,LV=176,A=(1)        FREE CORE FOR ACT TABLES
         NI    QMSTA,FF-QMSJNL     TURN OFF JOURNAL INDICATOR    Y02641
***********************************************************************
* RESTORE THE INITIATORS TIOT POINTER TO THE INITIATORS TCB
***********************************************************************
         L     R7,IEFTCBAD        ADDRESS OF INIT TCB             20030
         USING TCB,R7                  TCB ADDRESSABILITY         20029
         MVC   TCBTIO,PARTIOTB     RESTORE INITS TIOT PTR        Y02653
         XC    PARTIOTB,PARTIOTB   CLEAR PTR IN IEFPARAM         Y02653
         DROP  R7                                                 20029
         USING STEPL,R1                                          Y02653
         L     R1,LCTSTEPL         GET ADDR OF STEPL             Y02653
         LTR   R1,R1               DOES A STEPL EXIST            Y02653
         BZ    SD16443             NO, NO NEED TO CLEAR PTR      Y02653
         XC    STEPARAM,STEPARAM   YES, CLEAR PTR TO IEFPARAM IN Y02653
*                                  THE STEPL                     Y02653
SD16443  EQU   *                                                 Y02653
         LA    R0,ATLSTSIZ+IEFPSIZE GET LENGTH OF IEFPARAM AND   Y02653
*                                  THE ATTATCH PARAMETER LIST    Y02653
         LA    R1,TCORE                 SUBPOOL NUMBER
         SLL   R1,24                    TO HIGH ORDER BYTE OF
         OR    R0,R1                    LENGTH REGISTER
         LR    R1,R2                    ADDRESS OF INPOUT LIST
         FREEMAIN  R,LV=(0),A=(1)       FREE THE INPUT LIST
         DROP  R2                                                 20030
         LR    R2,R7              SAVE ADDRESS OF INIT TCB        20030
SD16446 EQU    *                                                 S21474
         LA    R0,TCBLEN           TCB LENGTH                      I272
         GETMAIN    R,LV=(0)       GET CORE FOR DUMMY TCB          I272
         XC    ZERO(FF,R1),ZERO(R1)            ZERO DUMMY TCB
         XC    FF(TCBLEN-FF,R1),FF(R1)       ZERO REMAINDER OF TCB
         USING TCB,R1                  TCB ADDRESSABILITY         20029
         TM    JCTRSW1,JCTWARMS    IS JOB BEING WARMSTARTED      Y02641
         BO    SD16447             YES BY-PASS                   Y02641
         TM    LCTOPSW3,LCTALERR   ERROR DURING ALLOCATION        M0475
         BZ    SD16448             NO                             M0475
         L     R4,LCTTCBAD         ADDR OF INIT TCB              S21474
         MVC   TCT(D4,R1),TCT(R4)  PUT TCT PTR IN DUMMY TCB      S21474
         XC    LCTCOMCD,LCTCOMCD   CLEAR THE COMPLETION  CODE    Y02641
         L     R9,LCTQDRTY         GET ADDR OF JOBS CSCB        YM06015
         USING IEFCSCB,R9          SET CSCB BASE                YM06015
         TM    CHACT,CHCLD         HAS THIS JOB BEEN CANCELED   YM06443
         BNO   SD16447A            NOT CANCELED, DO NOT PICK UP THE
*                                  CANCEL ECB COMP CODE         YM06443
         ST    R1,LCTTCBAD         STORE PTR TO DUMMY TCB       YM02479
         L     R5,LCTSCTAD         ADDR OF SCT(TO BE USED ON    YM02479
*                                  RETURN FROM TERMINATION      YM02479
         L     R4,LCTJCTAD         ADDRESS OF JCT               YM02479
         L     R15,CHCECB          GET CANCEL ECB FROM CSCB     YM06015
         SLL   R15,D12             CHANGE CC IN ECB TO TCB CC FORMAT
*                                                               YM06015
         ST    R15,TCBCMP          PUT CC FROM ECB IN TCB FORMAT IN THE
*                                  DUMMY TCB FOR UNALLOCATION   YM06015
         OI    TCBFLGS,TCBFA       SET ABEND INDICATOR         @ZA17354
         DROP  R9                  DROP ECB BASE                YM06015
         LR    R3,R2               STORE PARM LIST PTR          YM02479
         B     SD16449             GET SAVEAREA FOR TERMINATE   YM02479
SD16447  EQU   *                                                 Y02641
         CLC   JCTACODE(D4),ZEROS  IS THERE AN ABEND CODE        Y02641
         BE    SD16447A            NO DONT SET ABEND INDICATORTR Y02641
         OI    TCBFLGS,TCBFA       SET ABEND INDICATOR           Y02641
SD16447A EQU   *                                                 Y02641
         ST    R1,LCTTCBAD         STORE PTR TO DUMMY TCB        S21474
         L     R5,LCTSCTAD         ADDR OF SCT(TO BE USED ON     S21474
*                                  RETURN FROM TERMINATION       S21474
         L     R4,LCTJCTAD         ADDRESS OF JCT                YM1234
         MVC   TCBCMP(D4),LCTCOMCD PUT COMPLETION CODE IN TCB    Y02641
         LR    R3,R2               STORE PARM LIST PTR           S21474
         B     SD16449             GET SAVEAREA FOR TERMINATE    S21474
SD16448  EQU   *                                                 S21474
         L     R7,LCTTCBAD         ADDRESS OF INIT TCB           Y02641
         MVC   TCBPKF(D1),TCBPKF-TCB(R7)  PUT PROTECT KEY IN     Y02641
*                                   DUMMY TCB                    Y02641
         ST    R1,LCTTCBAD         ADDRESS OF TCB TO LCT           I272
         MVC   TCBTCTB(D3),LCTPARM1+D1     ADDR TCT FOR PGM       20029
         MVC   TCBFLGS(D1),LCTPARM1    TCB STATUS FLAGS FOR PGM   20029
         TM    TCBFLGS,TCBFA           ABEND BIT ON IN TCB        20029
         BNO   DONTSET                 NO-DONT SET BIT IN LCT    A30740
         OI    LCTINTSW,LCTABEND       YES-SET BIT IN LCT        A30740
DONTSET  EQU   *                                                 A30740
         MVC   TCBCMP(D4),LCTPARM4     COMP CODE FOR PGM          20029
         MVC   TCBDSP(D1),LCTPARM3     DISP PRIORITY OF JOB STEP  20029
         DROP  R1                                                 20029
SD16449 EQU    *                                                 S21474
***********************************************************************
* THIS SECTION OF CODE PERFORMS WARMSTART PROCESSING. THIS INVOLVES
* MOSTLY SETTING STATUS INDICATORS TO INDICATE WHERE IN PROCESSING
* A JOB IS,SAVING OF COMPLETION AND ABEND CODES,AND CHECKPOINTING
* THE JCT AND SCT TO SAVE THE DATA IN CASE OF A SYSTEM FAILURE.
***********************************************************************
         TM    JCTRSW1,JCTWARMS    IS JOB BEING WARMSTARTED      Y02641
         BO    SD16450             YES-BYPASS THIS PROCESSING    Y02641
         TM    JCTJSB,JCTJSBEX     DOES THE JOB STATUS INDICATE  Y02641
*                                  IN EXECUTION                  Y02641
         BNO   SD16452             IF NOT,BYPASS COMPLETION CODE Y02641
*                                  PROCESSING                    Y02641
         TM    LCTINTSW,LCTABEND   HAS THE JOB ABENDED           Y02641
         BNO   SD16451             NO, NO ABEND CODE             Y02641
         MVC   JCTACODE(D4),LCTPARM4 MOVE ABEND CODE TO JCT      Y02641
SD16451  EQU   *                                                 Y02641
         NI    JCTJSB,FF-JCTJSBEX  TURN OFF JCT'IN EXECUTION BIT'Y02641
         OI    JCTJSB,JCTJSBTM     SET IN TERMINATION INDICATOR  Y02641
         TM    LCTINTSW,LCTABEND   HAS THE JOB ABENDED           Y02641
         BO    SD16451B            YES, NO COMPLETION CODE       Y02641
         MVC   SCTSEXEC(D2),LCTPARM4+D2 PUT COMP. CODE IN SCT    Y02641
         NC    SCTSEXEC(D2),X0FFF  TURN OFF HIGH ORDER FOUR BITS Y02641
* THE COMPLETION CODE IS ONLY 12 BITS- THE LOW ORDER 12.         Y02641
SD16451B EQU   *                                                 Y02641
********************************************************************
* BUILD EPAS FOR JCT AND SCT AND INVOKE THE SWA MANAGER WRITE
* LOCATE ROUTINE TO CAUSE THE DATA IN THE TWO CONTROL BLOCKS
* TO BE JOURNALED.
********************************************************************
         LA    R1,REGSAVE+72       ADDR OF REMOTE PARMLIST       Y02641
         LA    R13,REGSAVE         ADDR OF REGISTER SAVE AREA    Y02641
         USING SMPARMS,R1                                       YM01566
         LA    R15,SMEPAPTR        GET PTR TO FIRST             YM01566
         ST R15,SMPARM1            PARAMETER (EPA PTR)          YM01566
         LA    R15,SMCODE          SET PTR TO SECOND            YM01566
         ST    R15,SMPARM2         PARAMETER                    YM01566
*
         LA    R15,SMEPA1          GET PTR TO FIRST EPA         YM01566
         ST    15,SMEPAPTR         STORE IN PARAMETER           YM01566
*
         MVC   SMCODE,WRTELCTE     SET CODE FOR WRITE LOCATE    YM01566
         XC    SMEPA1(SMEND-SMEPA1),SMEPA1 CLEAR EPAS           YM01566
*
*        SET UP EPA FOR JCT
         LA    R15,SMEPA1          ADDR OF EPA FOR JCT          YM01566
         USING ZB505,R15
         ST    R4,SWBLKPTR         PUT JCT BLOCK ADDR IN EPA    YM01566
         MVC   SWVA,LCTJCTVA       PUT JCT SVA IN EPA           YM01566
         LA    R14,SWLGTH          LENGTH OF JCT                YM01566
         ST    R14,SWLNGTH         PUT LENGTH ON EPA            YM01566
         LA    R14,SMEPA2          GET ADDR OF NEXT EPA(SCT)    YM01566
         ST    R14,SWCHNPTR        CHAIN EPAS                   YM01566
*
*        SET UP EPA FOR SCT
         LA    R15,SMEPA2          ADDR OF EPA FOR SCT          YM01566
         ST    R5,SWBLKPTR         PUT SCT BLOCK ADDR IN EPA    YM01566
         MVC   SWVA,LCTSCTVA       PUT SCT SVA IN EPA           YM01566
         LA    R14,SWLGTH          LENGTH OF SCT                YM01566
         ST    R14,SWLNGTH         PUT LENGTH ON EPA            YM01566
         DROP  R15                                              YM01566
* GET ENTRY POINT TO SWA MANAGER'S LOCATE MODE ROUTINE
         L     R15,CVTPTR          GET PTR TO CVT               YM01566
         USING CVTMAP,R15                                       YM01566
         L     R15,CVTJESCT        GET PTR TO JESCT             YM01566
         DROP  R15                                              YM01566
         USING JESCT,R15                                        YM01566
         L     R15,JESWAA          GET ADDR OF SWA MANAGER      YM01566
*                                  LOCATE ROUTINE               YM01566
         DROP  R1,R15                                           YM01566
         BALR  R14,R15             DO WRITE LOCATE FOR JCT/SCT  YM01566
********************************************************************
*  UPON RETURN FROM SWA MANAGER WRITE LOCATE, MARK THE JSCB AS
*  HAVING 'ENTERED TERMINATION' AND REMOVE 'COMPLETED ALLOCATION'.
********************************************************************
         L     R1,LCTJSCB          GET ADDR OF JSCB             YM02685
         USING IEZJSCB,R1                                       YM02685
         NI    JSCBJJSB,FF-JSCBJSBX  TURN OFF JSCB'IN EXEC BIT' YM02685
         OI    JSCBJJSB,JSCBJSBT  SET IN TERM INDICATOR IN JSCB YM02685
         DROP  R1                                               YM02685
SD16450  EQU   *                                                 Y02641
         NI   QMSTA,FF-QMSJNL      INDICATE NOT TO JOURNAL       Y02641
* IF THE JOB IS BEING WARMSTARTED,AND FAILED WHILE IN TERMINATION
* AND THERE WAS NO ABEND CODE, THEN INDICATE THE JOB IS TO BE RESTARTED
         TM    JCTRSW1,JCTWARMS    IS JOB BEING WARMSTARTED      Y02641
         BNO   SD16452             NO,DO NOT SET CONT-RESTART    Y02641
         TM    JCTJSB,JCTJSBTM     DID JOB FAIL IN TERMINATION   Y02641
         BNO   SD16452A            NO,DO NOT SET CONT -RESTART   Y02641
         CLC   JCTACODE(D4),ZEROS  DID THE JOB ABEND             Y02641
         BNE   SD16452A            YES,DO NOT SET CONT-RESTART   Y02641
         CLC   SCTANSCT(D4),ZEROS  IS THERE ANOTHER STEP         Y02641
         BE    SD16452A            NO, NO NEED TO CONTINUE       Y02641
         OI    JCTRSW1,JCTCONTR    SET CONTINUE RESTART FLAG     Y02641
         B     SD16452A            GET CORE FOR SAVE AREA        Y02641
SD16452  EQU   *                                                 Y02641
         TM    LCTOPSW3,LCTALERR   DID JOB FAIL IN ALLOCATION    Y02641
         BO    SD16452A            YES,DO NOT UPDATE JCT         Y02641
         IC    R1,JCTSNUMB         INCREMENT STEP COUNTER       YM06095
         LA    R1,1(R1)              IN                         YM06095
         STC   R1,JCTSNUMB           JCT                        YM06095
*              LCTPARM1 CONTAINS TCBFLGS FROM EXEC PGM TCB         I272
         TM    LCTPARM1,TCBFA          DID EXEC PGM ABEND         20029
         BO    SD16452A            YES                             CR17
         MVC   JCTSSTR(4),SCTANSCT DENOTE NEXT STEP IN JCT         CR17
SD16452A EQU   *                                                 Y02641
         LA    R13,REGSAVE         GET ADDR OF REG SAVEAREA     AS20443
         NI    LCTOPSW3,FF-LCTALERR   ZERO ALLOC RET. CODE        M0475
         NI    LCTERR,FF-LCTACOMP     CLEAR THE ALLOC COMP FLAG YM07219
*                                     USED FOR ESTAE RETRY TEST YM07219
         L     R15,CVTPTR          GET PTR TO CVT              @Z40FPPJ
         USING CVTMAP,R15                                      @Z40FPPJ
         L     R15,CVTJESCT        GET PTR TO JESCT            @Z40FPPJ
         DROP  R15                                             @Z40FPPJ
         USING JESCT,R15                                       @Z40FPPJ
         L     R15,JESUNALC        GET ADDRESS OF UNALLOCATION @Z40FPPJ
         LR    R1,R3               PASS PARM LIST TO UNALLOC   @Z40FPPJ
         BALR  R14,R15             GO TO UNALLOCATION          @Z40FPPJ
***********************************************************************
*        UPON RETURNING FROM TERMINATE, REG 15 WILL REFLECT A CODE    *
*        USED TO DETERMINE IF JOB TERMINATE WAS ENTERED BY STEP TERM. *
*        IF JOB TERM HAS BEEN ENTERED, CONTROL IS PASSED TO IEFSD066, *
*        THE JOB DELETE MODULE.  IF JOB TERM HAS NOT BEEN      *   I272
*        ENTERED CONTROL IS PASSED TO ALLOCATE FOR AND ATTACH  *   I272
*        ANOTHER STEP.                                         *   I272
         LR    R7,R15              SAVE RETURN CODE            *   I272
*                                                               YM07604
*        THE STEP SCT MUST BE JOURNALED AGAIN AT THIS POINT.    YM07604
*        THE MOVE MODE IS USED BECAUSE WITH THE TERMINATION     YM07604
*        INDICATORS ON,A WRITE LOCATE WOULD NOT CAUSE THE       YM07604
*        BLOCK TO BE JOURNALLED                                 YM07604
         SPACE 1                                                YM07604
         OI    QMSTA,QMSJNL        TURN ON JOURNAL BIT IN QMPA  YM07604
         LA    R14,REGSAVE+72      ADDR. OF REMOTE PARAM. LIST. YM07604
         ST    R14,QMPCL           PUT REMOTE LIST ADDR IN QMPA.YM07604
         MVI   QMPCL,ONEOP         INDICATE ONE OPERATION..     YM07604
         MVI   QMPOP,WRITEOP       INDICATE WRITE OPERATION...  YM07604
         MVC   D0(D4,R14),LCTSCTAD MOVE SCT STORAGE ADDR TO THE YM07604
*                                  REMOTE PARAMETER LIST..      YM07604
         MVC   D4(D4,R14),SCTDISKA MOVE SCT'S SELF SVA AND ID   YM07604
*                                  TO THE REMOTE PARAM. LIST..  YM07604
         L     R15,QMGRVCON        ENTRY POINT OF SWA MGR...    YM07604
         LR    R1,R10              QMPA POINTER TO REG 1....    YM07604
*        REGISTER 13 STILL POINTS TO SAVE AREA FOR SWA MGR USE. YM07604
         BALR  R14,R15             GO TO THE SWA MANAGER...     YM07604
         NI    QMSTA,FF-QMSJNL     TURN OFF JOURNAL BIT IN QMPA YM07604
         SPACE 1
         LA    R0,TCBLEN           TCB LENGTH                      I272
         L     R1,LCTTCBAD         ADDRESS OF TCB                  I272
         FREEMAIN   R,LV=(0),A=(1) FREE DUMMY TCB                  I272
         USING CVTDESCT,R1                                       Y02641
         L     R1,CVTPTR           GET ADDR OF CVT               Y02641
         L     R1,CVTTCBP          PTR TO NEXT AND CURRENT TCB   Y02641
         L     R1,D4(R1)           ADDR OF CURRENT TCB           Y02641
         ST    R1,LCTTCBAD         RESTORE CURR TCB PTR IN LCT   Y02641
         DROP R1                                                 Y02641
         L     R6,LCTENTR          GET ADDRESS OF IEL             M0397
         USING VIEL,R6             IEL ADDRESSABILITY             M0397
         L     R6,IELEXIT          GET ADDRESS OF INIT EXIT LIST  M0397
         DROP  R6                                                 M0397
         USING IELEXITS,R6         EXIT LIST ADDRESSABILITY       M0397
         CLI   IELRTNCD,HEX10      DID PRE-INVOCATION REQUEST     M2577
*                                  FLUSH PROCESSING             M2577
         BE    FLUSHBIT            YES,TEST FLUSH INDICATOR      S21474
         CLI   IELRTNCD,HEX14      DID POST INVOCATION REQUEST JOBM2577
*                                  FLUSH PROCESSING               M2577
         BNE   NORMAL              NO, BYPASS JOB FLUSH          S21474
FLUSHBIT EQU   *                                                  M2577
         TM    JCTJSTAT,JOBFLSH    HAS JOB FLUSH BIT BEEN SET     M0397
         BO    NORMAL              YES, BYPASS JOB FAIL SETTING   M0397
         OI    JCTJSTAT,INCMSTS    SET JOB FAIL BIT IN JCT        M0397
         DROP  R6                                                 M0397
NORMAL   EQU   *                                                  M0397
         LR    R1,R3                    ADDR OF TERMINATION PARAM  CR17
         FREEMAIN   R,LV=24,A=(1),SP=TCORE   FREE IT.              CR17
         LR    R1,R13                   ADDRESS OF REGSAVE
         TM    JCTRSW1,JCTCONTR+JCTCKPTR+JCTSTEPR SHOULD THE JOB Y02641
*                                  BE SUSPENDED                  Y02641
         BZ    SD16453             NO                            Y02641
         LA    R15,D8              YES, SET JOB SUSPENSION CODE  Y02641
         B     NOWTP               GO TO JOB SUSPENSION          Y02641
SD16453  EQU   *                                                 Y02641
         TM    JCTRSW1,JCTWARMS    IS JOB BEING WARMSTARTED      Y02641
         BNO   SD16454             NO,CONTINUE NORMAL PATH       Y02641
         LA    R7,D4               YES,GO TO JOB DELETE          Y02641
SD16454  EQU   *                                                 Y02641
         LA    R15,4                                               CR17
         CR    R7,R15                   IS THIS JOB TERMINATION.   CR17
         BNE   SD064214                 NO.                        CR17
*                                      YES.......                  I254
NOWTP    EQU   *                                                   I254
         ST    R11,LCTPARM1        PUT ADDR OF LCT IN PARMLIST   Y02641
         ST    R15,LCTPARM2        PUT FUNC CODE IN PARMLIST     Y02641
         LA    R1,LCTPARM1         PUT ADDR OF PARMLIST IN REG 1 Y02641
         L     R15,SD66VCON       GET ADDR OF IEFSD066
         BR    R15                      GO TO IEFSD166             CR17
SD064214 LA    R15,8                                               CR17
         CR    R7,R15                   IS JOB TO BE SUSPENDED.    CR17
         BE    NOWTP               YES,GO TO IEFSD166            Y02641
*                                                                  I254
*******************************************************************I254
*                                                                  I254
         L     R7,LCTJSCB          ADDRESS EXEC PGM JSCB          M4338
         USING IEZJSCB,R7                                          I254
         L     R1,JSCBSMLR         GET SYSTEM MESSAGE RPL ADDR @ZA09487
         ENDREQ RPL=(R1)           PUT SYSTEM MESSAGE BUFFERS  @ZA09487
         XC    JSCBDBTB(D4),JSCBDBTB           CLEAR DEB PTR
         XC    JSCHPCEA(D3),JSCHPCEA ZERO ADDR OF JES CNTL ELMNT YM4419
*                                                                  I254
         XC    JSCBSHR,JSCBSHR     CLEAR SHARE INDICATOR          S0311
         NI    JSCBOPTS,FF-JSCBAUTH TURN OFF AUTHORIZED FLAG    YM01497
         LA    R1,REGSAVE+72            YES.QMGR REMOTE AREA.      CR17
         LA    R13,REGSAVE              REGISTER SAVE AREA
         L     R0,SCTANSCT              ADDRESS OF NEXT SCT
         USING SMPARMS,R1                                       YM01566
         LA    R15,SMEPAPTR        GET PTR TO FIRST             YM01566
         ST R15,SMPARM1            PARAMETER (EPA PTR)          YM01566
         LA    R15,SMCODE          SET PTR TO SECOND            YM01566
         ST    R15,SMPARM2         PARAMETER                    YM01566
*
         LA    R15,SMEPA1          GET PTR TO FIRST EPA         YM01566
         ST    15,SMEPAPTR         STORE IN PARAMETER           YM01566
*
         MVC   SMCODE,READLCTE     SET CODE FOR READ  LOCATE    YM01566
         XC    SMEPA1(SMEND-SMEPA2),SMEPA1 CLEAR EPA            YM01566
*
*        SET UP EPA FOR SCT
         LA    R10,SMEPA1          ADDR OF EPA FOR SCT          YM01566
         USING ZB505,R10
         ST    R0,SWVA             ADDR OF NEXT SCT             YM01566
* GET ENTRY POINT TO SWA MANAGER'S LOCATE MODE ROUTINE
         L     R15,CVTPTR          GET PTR TO CVT               YM01566
         USING CVTMAP,R15                                       YM01566
         L     R15,CVTJESCT        GET PTR TO JESCT             YM01566
         DROP  R15                                              YM01566
         USING JESCT,R15                                        YM01566
         L     R15,JESWAA          GET ADDR OF SWA MANAGER      YM01566
*                                  LOCATE ROUTINE               YM01566
         BALR  R14,R15             LOCATE THE NEXT SCT          YM01566
         DROP  R15                                              YM01566
         ST    R0,LCTSCTDA         PUT SVA OF SCT IN THE LCT     Y02652
         MVC   LCTSCTAD,SWBLKPTR   PUT BOLCK ADDR IN LCT        YM01566
         DROP  R10                                              YM01566
         SR    R1,R1
         IC    R1,LCTSNUMB              UPDATE
         LA    R1,1(0,R1)               STEP NUMBER
         STC   R1,LCTSNUMB              IN LCT
***********************************************************************
*                                                                     *
* LCTPARM1 IS TESTED IN IEFSD102 FOR DATA SET ENQUEUEING,AND MUST BE  *
* SET TO ZERO BEFORE EXITING IEFSD164 TO IEFSD101.                    *
*                                                                     *
         XC    LCTPARM1,LCTPARM1
*                                                                     *
***********************************************************************
         LR    R1,R11                   LCT ADDRESS TO R1
         L     R15,SD101VCN       ADDRESS OF IEFSD101             20030
         BR    R15                     BRANCH TO SD101 TO INITIATE
*                                              ANOTHER JOB STEP
         EJECT
QMGRVCON DC    V(IEFQMRAW)
SD66VCON DC    V(IEFSD066)
SD101VCN DC    V(IEFSD101)                                        20030
ZEROS    DC    F'0'                FULL WORD OF ZEROS            Y02641
X0FFF    DC    X'0FFF'
WRTELCTE DC    CL2'WL'             CODE FOR WRITE LOCATE        YM01566
READLCTE DC    CL2'RL'             CODE FOR READ LOCATE         YM01566
         DS    0F                                                Y02641
PATCH    DS    10F                                               Y02641
HEX10    EQU   X'10'               RETURN CODE CHECKER            M1786
HEX14    EQU   X'14'               POST INVOCATION RETURN CODE    M2577
JOBFLSH  EQU   64                  FLUSH BIT IN JCT               M0397
RETCOD4 EQU    X'04'               STEP NOT ATTACHED INDICATOR   S21474
TCT      EQU   164                 DISPLACEMENT IN TCB OF TCT    S21474
POSTBIT  EQU   X'40'
TCORE    EQU   253
TWO      EQU   2
ZERO     EQU   0                   DISPLACEMENT                    I272
D0       EQU   0
D1       EQU   1                   DISPLACEMENT                    I272
D2       EQU   2
D3       EQU   3                   DISPLACEMENT                   M4338
D4       EQU   4                   DISPLACEMENT                    I272
D8       EQU   8                                                   I254
D12      EQU   12
FF       EQU   X'FF'
PGMABEND EQU   X'80'               ABEND BIT IN TCBFLGS FIELD      I272
POSTCODE EQU   X'30'                                              M4338
SWLGTH   EQU   176                 LENGTH OF JCT AND SCT        YM01566
ONEOP    EQU   X'01'               ONE SWA OPERATION REQUESTED  YM07604
WRITEOP  EQU   X'03'               WRITE OPERATION REQUESTED    YM07604
*******************************************************************I254
*                                                                  I254
SMPARMS  DSECT                     USED TO INVOKE SWA MANAGER   YM01566
*                                  LOCATE MODE                  YM01566
SMPARM1  DS    F                   PTR TO EPA PTR               YM01566
SMPARM2  DS    F                   PTR TO FUNCTION CODE         YM01566
SMEPAPTR DS    F                   PTR TO FIRST EPA             YM01566
SMCODE   DS    CL2                 FUNCTION CODE FOR LOCATE     YM01566
SMEPA1   DS    4F                  FIRST EPA                    YM01566
SMEPA2   DS    4F                  SECOND EPA                   YM01566
SMEND    EQU   *
*
         IEFZB505                                               YM01566
IEFCSCB DSECT
 IEECHAIN
*                                                                     *
         EJECT
DCBSTART EQU   *
IHADCB   DSECT
         DCB  DSORG=PO,MACRF=E
IEFXLIST DC    F'0'                     DCB EXIT LIST
DCBEND   EQU   *
*                                                                     *
         EJECT
         IEZATTCH
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING REPRESENTS A BLOCK OF MAIN STORAGE WHICH IS    *
*        ALLOCATED FOR THE LIFE OF                                    *
*        OF THIS INITIATOR.  IT CONTAINS:                             *
*                                                                     *
*              (1)  THE LCT (LINKAGE CONTROL TABLE)                   *
*              (2)  A 2 LEVEL REGISTER SAVE AREA FOLLOWED BY THE      *
*                   THE QUEUE MANAGER PARAMETER AREA                  *
*              (3)  AN ALTERNATE QUEUE MANAGER PARAMETER AREA         *
*                                                                     *
***********************************************************************
IEFLOT   DSECT
  IEFALLCT
         IEFZB630                                                Y02653
         IEFZB622                                                Y02653
CVTDESCT  DSECT                                                  Y02641
         CVT                                                     Y02621
         IEFJESCT                                                Y02621
         EJECT
IEFSCT   DSECT
  IEFASCTB
*                                                                     *
         EJECT
         IEFQMNGR
         EJECT
IEFJCT   DSECT
         IEFAJCTB
VIEL     DSECT                                                    M0397
         IEZIEL  EXITS=RTN                                        M0397
         IKJTCB                                                   20029
         IEZJSCB
         EJECT
***********************************************************************
*                         REGISTER EQUATE STATEMENTS                  *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         END
