         TITLE 'IEFDSLST - DATA SET ENQ PARM LIST BUILDER            '
IEFDSLST CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFDSLST  72.323'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
*   PARMPTR=R1;                     /* SET UP PARAMETER POINTER      */
         LR    PARMPTR,R1                                          0003
*   SAVETREE=TREEPTR;               /* SAVE THE TREE POINTER         */
         L     @10,TREEPTR(,PARMPTR)                               0004
         LR    SAVETREE,@10                                        0004
*   INDEX=12*NUMBER;                /* INDEX CONTAINS NUMBER OF BYTES
*                                      PAST BUILD AREA TO PUT FIRST
*                                      DATA SET NAME                 */
         L     INDEX,NUMBER(,PARMPTR)                              0005
         MH    INDEX,@CH00079                                      0005
*   INDEX=INDEX+BUILD;              /* INDEX NOW POINTS TO PAST BUILD
*                                      AREA                          */
         A     INDEX,BUILD(,PARMPTR)                               0006
*   CURRENT=ADDR(AREA);             /* SET CURRENT TO POINT TO FIRST
*                                      ENTRY                         */
         LA    @05,AREA(,@10)                                      0007
         ST    @05,CURRENT(,@10)                                   0007
*                                                                  0008
*/*   THIS DO LOOP INDEXES THROUGH THE TREE AND                    0008
*     BUILDS THE ENQ PARAMETER LIST FOR ALL DATA SET               0008
*     ENTRYS IN THE TREE                                             */
*                                                                  0008
*                                                                  0008
*   DO I=1 TO NUMBER;               /* FALL THROUGH IF NOT ZERO      */
         LA    I,1                                                 0008
         B     @DE00008                                            0008
@DL00008 DS    0H                                                  0009
*     MAJORPTR=MAJOR;               /* SET MAJOR POINTER IN ENQ LIST
*                                      ENTRY                         */
         L     @10,BUILD(,PARMPTR)                                 0009
         MVC   MAJORPTR(4,@10),MAJOR(PARMPTR)                      0009
*     MINORPTR=INDEX;               /* SET MINOR POINTER IN ENQ LIST
*                                      ENTRY                         */
         ST    INDEX,MINORPTR(,@10)                                0010
*     LISTEND=0;                    /* INDICATE NOT END OF ENQ LIST  */
         SR    @15,@15                                             0011
         STC   @15,LISTEND(,@10)                                   0011
*     LMINOR=DSLGH;                 /* PUT DATA SET LENGTH IN ENQ  0012
*                                      LIST                          */
         L     @14,TREEPTR(,PARMPTR)                               0012
         L     @09,CURRENT(,@14)                                   0012
         MVC   LMINOR(1,@10),DSLGH(@09)                            0012
*     PARMCDS=ENQ×EXSHR;            /* PUT ENQ TYPE INDICATOR IN ENQ
*                                      LIST                          */
         MVC   PARMCDS(1,@10),ENQ                                  0013
         OC    PARMCDS(1,@10),EXSHR(@09)                           0013
*     RETURN1=0;                    /* SET OTHER FIELD TO ZERO       */
         STC   @15,RETURN1(,@10)                                   0014
*     MINORNME(1:DSLGH)=NEW;        /* MOVE IN DATA SET NAME         */
         L     @08,BUILD(,PARMPTR)                                 0015
         L     @08,MINORPTR(,@08)                                  0015
         L     @15,TREEPTR(,PARMPTR)                               0015
         L     @15,CURRENT(,@15)                                   0015
         SR    @07,@07                                             0015
         IC    @07,DSLGH(,@15)                                     0015
         BCTR  @07,0                                               0015
         EX    @07,@SM00083                                        0015
*     INDEX=INDEX+DSLGH;            /* SET INDEX TO NEXT MINOR NAME
*                                      AREA                          */
         SR    @08,@08                                             0016
         IC    @08,DSLGH(,@09)                                     0016
         AR    INDEX,@08                                           0016
*     BUILD=BUILD+12;               /* INDEX BUILD TO NEXT DATA SET
*                                      ENQ BUILD AREA                */
         AH    @10,@CH00079                                        0017
         ST    @10,BUILD(,PARMPTR)                                 0017
*     CURRENT=CURRENT+7+DSLGH;      /* UPDATE CURRENT TO NEXT ENTRY
*                                      TO TREE                       */
*                                                                  0018
         AH    @09,@CH00082                                        0018
         AR    @09,@08                                             0018
         ST    @09,CURRENT(,@14)                                   0018
*     /***************************************************************/
*     /*                                                             */
*     /* IF FOXES THEN END OF TREE SEGMENT                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0019
*     IF SVA=FOXES THEN                                            0019
         CLC   SVA(4,@09),FOXES                                    0019
         BNE   @RF00019                                            0019
*       DO;                                                        0020
*         TREEPTR=TREE2;            /* REBASE THE TREE TO NEXT     0021
*                                      SEGMENT                       */
         L     @10,TREE2(,@14)                                     0021
         ST    @10,TREEPTR(,PARMPTR)                               0021
*         CURRENT=ADDR(AREA);       /* SET CURRENT TO POINT TO FIRST
*                                      ENTRY IN THIS SEGMENT         */
         LA    @00,AREA(,@10)                                      0022
         ST    @00,CURRENT(,@10)                                   0022
*       END;                                                       0023
*   END;                                                           0024
@RF00019 AH    I,@CH00043                                          0024
@DE00008 C     I,NUMBER(,PARMPTR)                                  0024
         BNH   @DL00008                                            0024
*   BUILD=BUILD-12;                 /* SET BUILD TO POINT TO LAST  0025
*                                      ENTRY IN ENQ LIST             */
         L     @10,BUILD(,PARMPTR)                                 0025
         SH    @10,@CH00079                                        0025
         ST    @10,BUILD(,PARMPTR)                                 0025
*   LISTEND=FOXFOX;                 /* SET END OF ENQ LIST INDICATOR */
         MVC   LISTEND(1,@10),FOXFOX                               0026
*   TREEPTR=SAVETREE;               /* SET TREE POINTER TO FIRST   0027
*                                      SEGMENT                       */
         ST    SAVETREE,TREEPTR(,PARMPTR)                          0027
*   SAVETREE=TREE2;                 /* SAVE THE POINTER TO NEXT    0028
*                                      SEGMENT                       */
*                                                                  0028
         L     @10,TREEPTR(,PARMPTR)                               0028
         L     SAVETREE,TREE2(,@10)                                0028
*/*   FREE THE TREE WITH THIS DO WHILE LOOP.  A FREEMAIN           0029
*     IS ISSUED FOR EACH 1024 BYTE SEGMENT UNTIL ALL               0029
*     THE SEGMENTS ARE FREED. THEN THE CONTROL RETURNS             0029
*     TO THE CALLER OF IEFDSLST                                      */
*                                                                  0029
*                                                                  0029
*   DO WHILE TREEPTR^=0;                                           0029
         B     @DE00029                                            0029
@DL00029 DS    0H                                                  0030
*     SAVETREE=TREE2;               /* SAVETREE POINTS TO NEXT     0030
*                                      SEGMENT                       */
         L     @10,TREEPTR(,PARMPTR)                               0030
         L     SAVETREE,TREE2(,@10)                                0030
*     R1=TREEPTR;                   /* POINT TO SEGMENT TO BE FREED  */
         LR    R1,@10                                              0031
*     GEN(FREEMAIN  R,LV=1024,A=(1),SP=0);                         0032
         FREEMAIN  R,LV=1024,A=(1),SP=0
*     TREEPTR=SAVETREE;             /* ELSE SET UP TO FREE NEXT    0033
*                                      SEGMENT                       */
         ST    SAVETREE,TREEPTR(,PARMPTR)                          0033
*     SAVETREE=TREE2;               /* SET POINTER TO NEXT SEGMENT   */
         L     @10,TREEPTR(,PARMPTR)                               0034
         L     SAVETREE,TREE2(,@10)                                0034
*   END;                                                           0035
@DE00029 ICM   @10,15,TREEPTR(PARMPTR)                             0035
         BNZ   @DL00029                                            0035
*   END IEFDSLST;                                                  0036
@EL00001 L     @13,4(,@13)                                         0036
@EF00001 L     @00,@SIZDATD                                        0036
         LR    @01,@11                                             0036
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0036
         BR    @14                                                 0036
@DATA    DS    0H
@CH00043 DC    H'1'
@CH00082 DC    H'7'
@CH00079 DC    H'12'
@SM00083 MVC   MINORNME(0,@08),NEW(@09)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
IEFDSLST CSECT
         DS    0F
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEFDSLST CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
FOXES    DC    XL4'FFFFFFFF'
ENQ      DC    X'44'
FOXFOX   DC    X'FF'
PATCH    DC    X'00'
         DS    24XL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @05
INDEX    EQU   @04
PARMPTR  EQU   @02
SAVETREE EQU   @03
R1       EQU   @01
PARMLST  EQU   0
TREEPTR  EQU   PARMLST
MAJOR    EQU   PARMLST+4
BUILD    EQU   PARMLST+8
NUMBER   EQU   PARMLST+12
TREE     EQU   0
TREE2    EQU   TREE
CURRENT  EQU   TREE+12
AREA     EQU   TREE+20
ENQLST   EQU   0
LISTEND  EQU   ENQLST
LMINOR   EQU   ENQLST+1
PARMCDS  EQU   ENQLST+2
RETURN1  EQU   ENQLST+3
MAJORPTR EQU   ENQLST+4
MINORPTR EQU   ENQLST+8
DATATREE EQU   0
SVA      EQU   DATATREE
EXSHR    EQU   DATATREE+5
DSLGH    EQU   DATATREE+6
NEW      EQU   DATATREE+7
MINOR    EQU   0
MINORNME EQU   MINOR
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
STEP     EQU   DATATREE+4
@NM00002 EQU   TREE+16
@NM00001 EQU   TREE+4
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFDSLST
