         TITLE 'I E F J C N T L - JCLS TO SWA BLOCK CONVERSION         *
                        '
IEFJCNTL CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEFJCNTL  76.190'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(8),0(@01)                                  0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*                                                                  0050
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE PLS2 DATA AREA                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0050
*/* THE DATA DEFINITIONS WITHIN THE CSECT AREA MOVED INTO THE      0050
*   CORE GOTTEN FOR THE REENTRANT DATA AREA FOR THIS MODULE.         */
*                                                                  0050
*   PROCDCBD(1:LENPROC)=PROCDCBC(1:LENPROC);                       0050
         L     @14,LENPROC                                         0050
         BCTR  @14,0                                               0050
         EX    @14,@SM01735                                        0050
*   CONATCHD(1:LENATCH)=CONATCHC(1:LENATCH);                       0051
         L     @14,LENATCH                                         0051
         BCTR  @14,0                                               0051
         EX    @14,@SM01737                                        0051
*   PROCOPND(1:PROCOLEN)=PROCOPNC(1:PROCOLEN);                     0052
         L     @14,PROCOLEN                                        0052
         BCTR  @14,0                                               0052
         EX    @14,@SM01739                                        0052
*   RESPECIFY                                                      0053
*     IFGACB BASED(ACBPTR);                                        0053
*   IF(INPUT1=0)×(INPUT2=0) THEN    /* VALIDITY CHECK THE INPUT    0054
*                                      PARAMETERS                    */
         SLR   @14,@14                                             0054
         L     @10,@PC00001                                        0054
         C     @14,INPUT1(,@10)                                    0054
         BE    @RT00054                                            0054
         L     @10,@PC00001+4                                      0054
         C     @14,INPUT2(,@10)                                    0054
         BNE   @RF00054                                            0054
@RT00054 DS    0H                                                  0055
*     GEN(ABEND  177,,,SYSTEM);     /* ISSUE ABEND-ERROR             */
         ABEND  177,,,SYSTEM
*   ELSE                                                           0056
*JCNTL010:                                                         0056
*     DO;                                                          0056
         B     @RC00054                                            0056
@RF00054 DS    0H                                                  0056
JCNTL010 DS    0H                                                  0057
*       AMWAPTR=INPUT2;             /* ADDRESSABILITY                */
         L     @14,@PC00001+4                                      0057
         L     AMWAPTR,INPUT2(,@14)                                0057
*       SSOBPTR=INPUT1;             /* ADDRESSABILITY                */
         L     @14,@PC00001                                        0058
         L     SSOBPTR,INPUT1(,@14)                                0058
*       SSIBPTR=SSOBSSIB;           /* ADDRESSABILITY                */
*                                                                  0059
         MVC   SSIBPTR(4),SSOBSSIB(SSOBPTR)                        0059
*       /*************************************************************/
*       /*                                                           */
*       /* CREATE NEL AND INITIALIZE FIELDS                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0060
*       SPLEN=LENGTH(NEL);          /* LENGTH OF NEL                 */
         MVC   SPLEN(3),@CF01733+1                                 0060
*       SPNUM=JSUBPOOL;             /* SUBPOOL IS 10                 */
         MVI   SPNUM,X'0A'                                         0061
*       CALL GETCORE;               /* DO GETMAIN                    */
         BAL   @14,GETCORE                                         0062
*       NELPTR=GETADDR;             /* PTR TO NEL AREA               */
         LR    NELPTR,GETADDR                                      0063
*       NEL=''B;                    /* INITIALIZE NEL TO ZERO        */
*                                                                  0064
         XC    NEL(66,NELPTR),NEL(NELPTR)                          0064
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE QMPA POINTER                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0065
*       LCTPTR=SSJSLCT;             /* ADDRESS OF LCT                */
         L     @14,SSOBINDV(,SSOBPTR)                              0065
         L     LCTPTR,SSJSLCT(,@14)                                0065
*       QMPAPTR=ADDR(QMGR1);        /* INITIALIZE QMPAPTR            */
         LA    @14,QMGR1(,LCTPTR)                                  0066
         ST    @14,QMPAPTR                                         0066
*       NELQMPA=QMPAPTR;            /* QMPA POINTER IN NEL           */
*                                                                  0067
         ST    @14,NELQMPA(,NELPTR)                                0067
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE CONSOLE ID POINTER                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0068
*       NELCOMID=0;                 /* NO CONSOLE ID.                */
*                                                                  0068
         SLR   @14,@14                                             0068
         ST    @14,NELCOMID(,NELPTR)                               0068
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE EXIT LIST POINTER                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0069
*       NELEXLST=0;                 /* NO EXIT LIST EXISTS           */
*                                                                  0069
         ST    @14,NELEXLST(,NELPTR)                               0069
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE OPTION SWITCHES                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0070
*       NELOPSWT=0;                 /* NO OPTIONS                    */
         MVI   NELOPSWT(NELPTR),X'00'                              0070
*                                                                  0071
*       /*************************************************************/
*       /*                                                           */
*       /* CONVERTER DEFAULTS                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0071
*/*     THE INTERNAL DEFAULTS ARE USED FOR THE CONVERTER NEL.        */
*                                                                  0071
*       DEFLTPTR=ADDR(INTDEFLT);    /* USE INTERNAL DFLTS            */
*                                                                  0071
         LA    DEFLTPTR,INTDEFLT                                   0071
*       /*************************************************************/
*       /*                                                           */
*       /* SET DEFAULTS IN NEL                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0072
*/*  B          PROG. NAME,ACCT.NO.                                  */
*                                                                  0072
*       NELPARMO=PNAM;                                             0072
*                                                                  0072
         MVC   NELPARMO(1,NELPTR),PNAM(DEFLTPTR)                   0072
*/* PP          JOB PRIORITY                                         */
*                                                                  0073
*       NELJPRTY=JOBPRI;                                           0073
*                                                                  0073
         MVC   NELJPRTY(2,NELPTR),JOBPRI(DEFLTPTR)                 0073
*/* TTTTTT      JOB STEP TIME                                        */
*                                                                  0074
*       NELTIME=JSTPTM;                                            0074
*                                                                  0074
         MVC   NELTIME(6,NELPTR),JSTPTM(DEFLTPTR)                  0074
*/* CCC         JOB STEP REGION                                      */
*                                                                  0075
*       NELREG=JSTPREG;                                            0075
*                                                                  0075
         MVC   NELREG(3,NELPTR),JSTPREG(DEFLTPTR)                  0075
*/* R           COMMAND DISPOSITION                                  */
*                                                                  0076
*       NELCOMDS=COMDISP;                                          0076
*                                                                  0076
         MVC   NELCOMDS(1,NELPTR),COMDISP(DEFLTPTR)                0076
*/* L           BYPASS LABEL OPTION                                  */
*                                                                  0077
*       NELLABEL=BYPLAB;                                           0077
*                                                                  0077
         MVC   NELLABEL(1,NELPTR),BYPLAB(DEFLTPTR)                 0077
*/* AAAA        COMMAND AUTHORITY                                    */
*                                                                  0078
*       NELAUTH=COMAUTH;                                           0078
*                                                                  0078
         MVC   NELAUTH(4,NELPTR),COMAUTH(DEFLTPTR)                 0078
*/* E           JCL MSGLEVEL                                         */
*                                                                  0079
*       NELMSGL1=JCLMSGLV;                                         0079
*                                                                  0079
         MVC   NELMSGL1(1,NELPTR),JCLMSGLV(DEFLTPTR)               0079
*/* F           ALLOCATION MSGLEVEL                                  */
*                                                                  0080
*       NELMSGL2=ALLMSGLV;                                         0080
*                                                                  0080
         MVC   NELMSGL2(1,NELPTR),ALLMSGLV(DEFLTPTR)               0080
*/* H           MSGCLASS FOR JOB                                     */
*                                                                  0081
*       NELMSGCL=MSGCLASS;                                         0081
         MVC   NELMSGCL(1,NELPTR),MSGCLASS(DEFLTPTR)               0081
*                                                                  0082
*       /*************************************************************/
*       /*                                                           */
*       /* GET CORE FOR ACB AND CHAIN TO NEL AND AMWA ENTRY INTERNAL */
*       /* TEXT ACB                                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0082
*       SPNUM=JSUBPOOL;             /* SUBPOOL 10                    */
         MVI   SPNUM,X'0A'                                         0082
*       SPLEN=LENGTH(IFGACB)+4;     /* ACB PLUS PREFIX               */
         MVC   SPLEN(3),@CF00786+1                                 0083
*       CALL GETCORE;                                              0084
         BAL   @14,GETCORE                                         0084
*       CNTLACBP=GETADDR;           /* TO ADDRESS PREFIX             */
         ST    GETADDR,CNTLACBP                                    0085
*       NELTXTCB=ADDR(ACBTEXT);     /* POINT PAST PREFIX TO SET ACB
*                                      POINTER                       */
         L     @14,CNTLACBP                                        0086
         LA    @10,ACBTEXT(,@14)                                   0086
         ST    @10,NELTXTCB(,NELPTR)                               0086
*       ACBPRFX=ADDR(AMWATXTE);     /* PUT AMWA ENTRY ADDR INTO    0087
*                                      PREFIX .                      */
*                                                                  0087
         ST    AMWAPTR,ACBPRFX(,@14)                               0087
*       /*************************************************************/
*       /*                                                           */
*       /* INPUT ACB                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0088
*       SPNUM=JSUBPOOL;             /* SUBPOOL 10                    */
         MVI   SPNUM,X'0A'                                         0088
*       SPLEN=LENGTH(IFGACB)+4;     /* ACB PLUS PREFIX               */
         MVC   SPLEN(3),@CF00786+1                                 0089
*       CALL GETCORE;                                              0090
         BAL   @14,GETCORE                                         0090
*       CNTLACBP=GETADDR;           /* TO ADDRESS PREFIX             */
         ST    GETADDR,CNTLACBP                                    0091
*       NELJCLCB=ADDR(ACBTEXT);     /* POINT PAST PREFIX TO SET ACB
*                                      POINTER                       */
         L     @14,CNTLACBP                                        0092
         LA    @10,ACBTEXT(,@14)                                   0092
         ST    @10,NELJCLCB(,NELPTR)                               0092
*       ACBPRFX=ADDR(AMWAJCLE);     /* PUT AMWA ENTRY ADDR INTO    0093
*                                      PREFIX .                      */
*                                                                  0093
         LA    @10,AMWAJCLE(,AMWAPTR)                              0093
         ST    @10,ACBPRFX(,@14)                                   0093
*       /*************************************************************/
*       /*                                                           */
*       /* MESSAGE TEXT ACB                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0094
*       SPNUM=QMSWSP;               /* SWA SUBPOOL                   */
         L     @14,QMPAPTR                                         0094
         MVC   SPNUM(1),QMSWSP(@14)                                0094
*       SPLEN=LENGTH(IFGACB);       /* ACB NO PREFIX                 */
         MVC   SPLEN(3),@CF01734+1                                 0095
*       CALL GETCORE;                                              0096
         BAL   @14,GETCORE                                         0096
*       NELMSGCB=GETADDR;           /* TO ADDRESS ACB                */
*                                                                  0097
         ST    GETADDR,NELMSGCB(,NELPTR)                           0097
*       /*************************************************************/
*       /*                                                           */
*       /* CARD IMAGE ACB                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0098
*       SPNUM=JSUBPOOL;             /* SUBPOOL 10                    */
         MVI   SPNUM,X'0A'                                         0098
*       SPLEN=LENGTH(IFGACB);       /* ACB NO PREFIX                 */
         MVC   SPLEN(3),@CF01734+1                                 0099
*       CALL GETCORE;                                              0100
         BAL   @14,GETCORE                                         0100
*       NELSTMCB=GETADDR;           /* TO ADDRESS ACB                */
*                                                                  0101
         ST    GETADDR,NELSTMCB(,NELPTR)                           0101
*       /*************************************************************/
*       /*                                                           */
*       /* PROCLIB DCB                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0102
*       SPNUM=JSUBPOOL;             /* SUBPOOL 10                    */
         MVI   SPNUM,X'0A'                                         0102
*       SPLEN=LENPROC;              /* LENGTH DCB                    */
         MVC   SPLEN(3),LENPROC+1                                  0103
*       CALL GETCORE;                                              0104
         BAL   @14,GETCORE                                         0104
*       NELPROCB=GETADDR;           /* TO ADDRESS DCB                */
         ST    GETADDR,NELPROCB(,NELPTR)                           0105
*                                                                  0106
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE EACH ACB                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0106
*/* UPDATE THE ACB POINTER FROM THE NEL .INSERT ACB ID INTO ACB    0106
*   AND TURN ON ACBOPEN FLAG TO INDICATE ACB IS OPEN.                */
*                                                                  0106
*       /*************************************************************/
*       /*                                                           */
*       /* INTERNAL TEXT ACB                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0106
*       ACBPTR=NELTXTCB;                                           0106
         L     ACBPTR,NELTXTCB(,NELPTR)                            0106
*       IFGACB=''B;                 /* ZERO ACB                      */
         XC    IFGACB(76,ACBPTR),IFGACB(ACBPTR)                    0107
*       ACBINRTN=ADDR(IEFJACTL);    /* ACCESS METHOD CONTROL RTNE    */
         L     @14,@CV01652                                        0108
         ST    @14,ACBINRTN(,ACBPTR)                               0108
*       ACBOPEN=ON;                 /* TURN ON ACB OPEN INDICATOR    */
         OI    ACBOPEN(ACBPTR),B'00010000'                         0109
*       ACBID=IDFORACB;             /* INSERT VALID ACB ID           */
*                                                                  0110
         MVI   ACBID(ACBPTR),X'A0'                                 0110
*       /*************************************************************/
*       /*                                                           */
*       /* INPUT ACB                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0111
*       ACBPTR=NELJCLCB;                                           0111
         L     ACBPTR,NELJCLCB(,NELPTR)                            0111
*       IFGACB=''B;                 /* ZERO ACB                      */
         XC    IFGACB(76,ACBPTR),IFGACB(ACBPTR)                    0112
*       ACBINRTN=ADDR(IEFJACTL);    /* ACCESS METHOD CONTROL RTNE    */
         L     @14,@CV01652                                        0113
         ST    @14,ACBINRTN(,ACBPTR)                               0113
*       ACBOPEN=ON;                 /* TURN ON ACB OPEN INDICATOR    */
         OI    ACBOPEN(ACBPTR),B'00010000'                         0114
*       ACBID=IDFORACB;             /* INSERT VALID ACB ID           */
*                                                                  0115
         MVI   ACBID(ACBPTR),X'A0'                                 0115
*       /*************************************************************/
*       /*                                                           */
*       /* MESSAGE ACB                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0116
*       ACBPTR=NELMSGCB;                                           0116
         L     ACBPTR,NELMSGCB(,NELPTR)                            0116
*       IFGACB=''B;                 /* ZERO ACB                      */
         XC    IFGACB(76,ACBPTR),IFGACB(ACBPTR)                    0117
*       ACBINRTN=ADDR(IEFJWTOM);    /* WRITE TO OPERATOR RTN         */
         L     @14,@CV01653                                        0118
         ST    @14,ACBINRTN(,ACBPTR)                               0118
*       ACBOPEN=ON;                 /* TURN ON ACB OPEN INDICATOR    */
         OI    ACBOPEN(ACBPTR),B'00010000'                         0119
*       ACBID=IDFORACB;             /* INSERT VALID ACB ID           */
*                                                                  0120
         MVI   ACBID(ACBPTR),X'A0'                                 0120
*       /*************************************************************/
*       /*                                                           */
*       /* CARD IMAGE ACB                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0121
*       ACBPTR=NELSTMCB;                                           0121
         L     ACBPTR,NELSTMCB(,NELPTR)                            0121
*       IFGACB=''B;                 /* ZERO ACB                      */
         XC    IFGACB(76,ACBPTR),IFGACB(ACBPTR)                    0122
*       ACBINRTN=ADDR(IEFJWTOM);    /* WRITE TO OPERATOR RTN         */
         L     @14,@CV01653                                        0123
         ST    @14,ACBINRTN(,ACBPTR)                               0123
*       ACBOPEN=ON;                 /* TURN ON ACB OPEN INDICATOR    */
         OI    ACBOPEN(ACBPTR),B'00010000'                         0124
*       ACBID=IDFORACB;             /* INSERT VALID ACB ID           */
         MVI   ACBID(ACBPTR),X'A0'                                 0125
*                                                                  0126
*       /*************************************************************/
*       /*                                                           */
*       /* INITIALIZE PROCLIB DCB                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0126
*       PROCLIBD(1:LENPROC)=PROCLIBD(1:LENPROC)&&PROCLIBD(1:LENPROC);
*                                                                  0126
         L     @14,NELPROCB(,NELPTR)                               0126
         L     @10,LENPROC                                         0126
         BCTR  @10,0                                               0126
         EX    @10,@SX01742                                        0126
*/*                                     ZERO GOTTEN CORE FOR DCB     */
*/* THE PROCLIB DCB WILL REMAIN ZEROED IF THE MSTR IS              0127
*   BEING STARTED.IT WILL NOT BE USED BY THE CONVERTER FOR THE     0127
*   MSTR.IF A SUBSYSTEM IS BEING STARTED,THEN THE DCB IS OPENED,   0127
*   INITIALIZED BY MOVING THE INTERNALLY DEFINED DCB TO THE GOTTEN 0127
*   CORE,THEN CLOSED WHEN CONTROL IS RETURNED FROM THE CONVERTER.    */
*                                                                  0127
*       IF SSIBSUSE^=0 THEN                                        0127
         L     @14,SSIBPTR                                         0127
         ICM   @10,15,SSIBSUSE(@14)                                0127
         BZ    @RF00127                                            0127
*JCNTL070:                                                         0128
*         DO;                                                      0128
JCNTL070 DS    0H                                                  0129
*           PROCLIBD(1:LENPROC)=PROCDCBD(1:LENPROC);               0129
*                                                                  0129
         L     @14,NELPROCB(,NELPTR)                               0129
         L     @10,LENPROC                                         0129
         BCTR  @10,0                                               0129
         EX    @10,@SM01744                                        0129
*/*                                          MODEL DCB IS MOVED TO 0130
*                                         GOTTEN CORE FOR CONVERTER  */
*                                                                  0130
*           DCBPTR=NELPROCB;        /* DCB DSECT ADDRESSABILITY      */
         LR    DCBPTR,@14                                          0130
*           REG8=NELPROCB;          /* ADDRESS CORE GOTTEN FOR DCB   */
         LR    REG8,@14                                            0131
*           REG7=ADDR(PROCOPND);    /* PROCLIB OPEN LIST             */
         LA    REG7,PROCOPND                                       0132
*           PSATOLD->TCBJSCB->JSCBACT->JSCBPASS=ON;/* SET JSCB PASS
*                                      INDICATOR TO ALLOW BYPASS OF
*                                      PASSWORD PROTECTION AROUND  0133
*                                      OPEN OF PROCLIB       @ZA11864*/
         L     @14,PSATOLD                                         0133
         L     @14,TCBJSCB(,@14)                                   0133
         L     @14,JSCBACT(,@14)                                   0133
         OI    JSCBPASS(@14),B'10000000'                           0133
*           GEN(OPEN  ((8),(INPUT)),MF=(E,(7)));                   0134
         OPEN  ((8),(INPUT)),MF=(E,(7))
*           PSATOLD->TCBJSCB->JSCBACT->JSCBPASS=OFF;/* RESET PASSWORD
*                                      INDICATOR IN JSCB TO FORCE  0135
*                                      PROTECTION IN FUTURE  @ZA11864*/
         L     @14,PSATOLD                                         0135
         L     @14,TCBJSCB(,@14)                                   0135
         L     @14,JSCBACT(,@14)                                   0135
         NI    JSCBPASS(@14),B'01111111'                           0135
*/* IF OPEN NOT SUCCESSFUL THEN ISSUE '0B4'X ABEND.DCBOFLGS FIELD  0136
*   BIT DCBOFOPN('10'X) IS ON IF DCB WAS OPENED SUCCESSFULLY.      0136
*   IF BLKSIZE IN DCB IS NOT MULTIPLE OF 80 AFTER IT IS OPENED     0136
*   SUCCESSFULLY,THEN ISSUE '0B4'X ABEND.                            */
*                                                                  0136
*           BLKSIZE=DCBBLKSI//EIGHTY;/* DIVIDE FOR REMAINDER IN    0136
*                                      BLKSIZE                       */
         LH    @04,DCBBLKSI+52(,DCBPTR)                            0136
         SRDA  @04,32                                              0136
         D     @04,@CF00786                                        0136
         STH   @04,BLKSIZE                                         0136
*           IF DCBOFOPN=OFF×BLKSIZE^=0 THEN/* IF OPEN NOT SUCCESSFUL */
         TM    DCBOFOPN+40(DCBPTR),B'00010000'                     0137
         BZ    @RT00137                                            0137
         LTR   @04,@04                                             0137
         BZ    @RF00137                                            0137
@RT00137 DS    0H                                                  0138
*             GEN(ABEND 180,,,SYSTEM);                             0138
         ABEND 180,,,SYSTEM
*         END JCNTL070;                                            0139
*       ELSE                                                       0140
*                                                                  0140
*/* IF NO DCB IS TO BE PASSED THEN ZERO NEL PROCLIB DCB POINTER      */
*                                                                  0140
*         NELPROCB=0;               /* ZERO PROCLIB DCB POINTER      */
         B     @RC00127                                            0140
@RF00127 SLR   @14,@14                                             0140
         ST    @14,NELPROCB(,NELPTR)                               0140
*                                                                  0141
*       /*************************************************************/
*       /*                                                           */
*       /* PASS CONTROL TO CONVERTER                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0141
*       SSJSSERR=0;                 /* ZERO RETURN CODE FIELD        */
@RC00127 SLR   @14,@14                                             0141
         L     @10,SSOBINDV(,SSOBPTR)                              0141
         ST    @14,SSJSSERR(,@10)                                  0141
*       REG1=NELPTR;                /* PTR TO NEL PASSED ACROSS    0142
*                                      ATTACH IN REG1                */
         LR    REG1,NELPTR                                         0142
*       REG7=ADDR(ATACHECB);        /* ADDRESS OF ECB FOR ATTACH     */
         LA    REG7,ATACHECB                                       0143
*       ATACHECB=0;                 /* ZERO ATTACH ECB FOR WAIT      */
         ST    @14,ATACHECB                                        0144
*       REG15=ADDR(CONATCHD);       /* ADDRESS OF ATTACH LIST        */
         LA    REG15,CONATCHD                                      0145
*       RESPECIFY                                                  0146
*         REG8 RSTD;                                               0146
*       GEN;                                                       0147
         ATTACH  EP=IEFVH1,ECB=(7),SHSPV=10,SF=(E,(15))
*       IF REG15^=0 THEN            /* IF ATTACH WAS NOT SUCCESSFUL  */
         LTR   REG15,REG15                                         0148
         BZ    @RF00148                                            0148
*         DO;                                                      0149
*           GEN(ABEND 181,,,SYSTEM);/* ISSUE 0B5 ABEND               */
         ABEND 181,,,SYSTEM
*         END;                                                     0151
*       CONVRTCB=REG1;              /* ADDRESS OF CONVERTER TCB      */
@RF00148 ST    REG1,CONVRTCB                                       0152
*       GEN;                                                       0153
*                                                                  0153
*                       /*WAIT FOR CONVERTER SUBTASK TO TERMINATE*/
         WAIT    1,ECB=(7)
         DETACH CONVRTCB
*/* RETURN CODE PASSED BACK FROM CONVERTER IN ATTACH ECB             */
*                                                                  0154
*       IF COMPCODE^=0 THEN         /* NON ZERO RETURN CODE FROM   0154
*                                      CONVERTER SIGNALS TROUBLE     */
         ICM   @14,7,COMPCODE                                      0154
         BZ    @RF00154                                            0154
*JCNTL080:                                                         0155
*         DO;                                                      0155
*                                                                  0155
JCNTL080 DS    0H                                                  0156
*/* A TEST MUST BE MADE TO DETERMINE IF THE RETURN CODE IS ACTUALLY
*   AN ABEND CODE.THE BITS 8-19 OF THE ECB ARE MASKED OUT.IF THE   0156
*   TEST OF THE RETURN CODE NOW SHOWS A ZERO,IT WAS AN ABEND CODE  0156
*   IN THE ECB.IN THIS CASE, A RETURN CODE OF 36 IS PLACED INTO    0156
*   SSOB AND THE BYPASS INTERPRETER SWITCH IS TURNED ON.IF NOT     0156
*   AN ABEND,RETURN CODE TESTS ARE PERFORMED.                        */
*                                                                  0156
*           COMPCODE=COMPCODE&ABENDMSK;/* MASK OUT ABEND CODE        */
         SLR   @14,@14                                             0156
         ICM   @14,7,COMPCODE                                      0156
         SLR   @10,@10                                             0156
         ICM   @10,7,ABENDMSK                                      0156
         NR    @14,@10                                             0156
         STCM  @14,7,COMPCODE                                      0156
*           IF COMPCODE=0 THEN      /* IF COMPCODE IS NOW ZERO IT WAS
*                                      AN ABEND.                     */
         LTR   @14,@14                                             0157
         BNZ   @RF00157                                            0157
*             DO;                                                  0158
*               SSJSSERR=SSJSPERR;  /* PUT 36 INTO RETURN CODE FLD   */
         L     @14,SSOBINDV(,SSOBPTR)                              0159
         MVC   SSJSSERR(4,@14),@CF00064                            0159
*               BYPINTER=ON;        /* BYPASS GOING TO INTERPRETER   */
         OI    BYPINTER(AMWAPTR),B'01000000'                       0160
*             END;                                                 0161
*           ELSE                                                   0162
*             DO;                                                  0162
         B     @RC00157                                            0162
@RF00157 DS    0H                                                  0163
*               SSJSSERR=COMPCODE;  /* RETURN CODE TO SSOB AS IS     */
         SLR   @14,@14                                             0163
         ICM   @14,7,COMPCODE                                      0163
         L     @10,SSOBINDV(,SSOBPTR)                              0163
         ST    @14,SSJSSERR(,@10)                                  0163
*               IF COMPCODE=4 THEN  /* FOUR IS A JCL ERROR           */
         CH    @14,@CH00039                                        0164
         BNE   @RF00164                                            0164
*                 CONVERR=ON;       /* TURN ON CONV.ERR SW.          */
         OI    CONVERR(AMWAPTR),B'10000000'                        0165
*               ELSE                                               0166
*                                                                  0166
*/* ANYTHING OTHER THAN A RETURN CODE OF 4 IS A TERMINATING SITUATION.
*   TURN ON THE BYPASS INTERPRETER CODE AND CONTINUE PROCESSING.     */
*                                                                  0166
*                 BYPINTER=ON;      /* BYPASS INTERPRETER            */
         B     @RC00164                                            0166
@RF00164 OI    BYPINTER(AMWAPTR),B'01000000'                       0166
*             END;                                                 0167
@RC00164 DS    0H                                                  0168
*         END JCNTL080;                                            0168
@RC00157 DS    0H                                                  0169
*       IF SSIBSUSE^=0 THEN         /* IF MSTR NOT STARTED THEN CLOSE
*                                      PROCLIB                       */
@RF00154 L     @14,SSIBPTR                                         0169
         ICM   @10,15,SSIBSUSE(@14)                                0169
         BZ    @RF00169                                            0169
*JCNTL090:                                                         0170
*         DO;                                                      0170
JCNTL090 DS    0H                                                  0171
*           REG7=ADDR(PROCOPND);    /* PTR TO PROC LIST              */
         LA    REG7,PROCOPND                                       0171
*           REG8=NELPROCB;          /* ADDRESS OF PROCLIB DCB        */
         L     REG8,NELPROCB(,NELPTR)                              0172
*           GEN(CLOSE ((8)),MF=(E,(7)));/* CLOSE PROCLIB             */
         CLOSE ((8)),MF=(E,(7))
*         END JCNTL090;                                            0174
*                                                                  0175
*       /*************************************************************/
*       /*                                                           */
*       /* SETUP FOR SWA CREATE                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0175
*       IF BYPINTER^=ON THEN        /* GIVE CONTROL TO INTERPRETER   */
*                                                                  0175
@RF00169 TM    BYPINTER(AMWAPTR),B'01000000'                       0175
         BO    @RF00175                                            0175
*         /***********************************************************/
*         /*                                                         */
*         /* RESET TEXT ENTRY IN AMWA                                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0176
*/*  SET UP TO ALLOW READING FROM TEXT STRING FROM FIRST RECORD.     */
*                                                                  0176
*JCNTL0A0:                                                         0176
*         DO;                                                      0176
JCNTL0A0 DS    0H                                                  0177
*           AMWALSTT=AMWAFSTT;                                     0177
*                                                                  0177
         MVC   AMWALSTT(4,AMWAPTR),AMWAFSTT(AMWAPTR)               0177
*           /*********************************************************/
*           /*                                                       */
*           /* S S O B                                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0178
*           SSJSMACB=NELMSGCB;      /* MSG ACB PTR INTO SSOB         */
         L     @14,SSOBINDV(,SSOBPTR)                              0178
         MVC   SSJSMACB(4,@14),NELMSGCB(NELPTR)                    0178
*           SSJSJACB=0;             /* ZERO JOURNAL ACB PTR          */
         SLR   @10,@10                                             0179
         ST    @10,SSJSJACB(,@14)                                  0179
*           SSJSJMR=0;              /* JMR POINTER ZEROED            */
         ST    @10,SSJSJMR(,@14)                                   0180
*           SSJSTACB=NELTXTCB;      /* TEXT ACB PTR TO SSOB          */
         MVC   SSJSTACB(4,@14),NELTXTCB(NELPTR)                    0181
*/*REGISTER 1 CONTAINS A POINTER TO THE SSOB                         */
*                                                                  0182
*           REG1=SSOBPTR;                                          0182
         LR    REG1,SSOBPTR                                        0182
*           GEN(LINK EP=IEFIB600);                                 0183
*                                                                  0183
         LINK EP=IEFIB600
*/*RETURN CODE FROM SWA CREATE WILL BE PASSED IN REGISTER 15.      0184
*  ANYTHING OTHER THAN ZERO IS AN ERROR CONDITION AND REQUIRES     0184
* THAT THE VALUE IN REGISTER 15 BE PUT INTO THE SSOB ALONG WITH A  0184
* RETURN CODE FOR THE INITIATOR.IF THE CONVERTER HAS ALREADY FOUND 0184
* AN ERROR,THIS RETURN CODE WILL NOT OVERLAY THE CONVERTER ERROR   0184
* CODES.IF REGISTER 15 IS ZERO,NO CODE IS PLACED INTO THE SSOB.      */
*                                                                  0184
*           IF CONVERR=OFF THEN     /* NO CONVERTER ERRORS           */
         TM    CONVERR(AMWAPTR),B'10000000'                        0184
         BNZ   @RF00184                                            0184
*             DO;                                                  0185
*               IF REG15^=0 THEN                                   0186
         LTR   REG15,REG15                                         0186
         BZ    @RF00186                                            0186
*                 DO;                                              0187
*                   SSJSSERR=REG15; /* RETURN CODE INTO SSOB         */
         L     @14,SSOBINDV(,SSOBPTR)                              0188
         ST    REG15,SSJSSERR(,@14)                                0188
*                   SSOBRETN=SSJSYSER;/* RETURN CODE IN SSOB         */
         MVC   SSOBRETN(4,SSOBPTR),@CF00055                        0189
*                 END;                                             0190
*             END;                                                 0191
*           ELSE                                                   0192
*             SSOBRETN=SSJSYSER;                                   0192
         B     @RC00184                                            0192
@RF00184 MVC   SSOBRETN(4,SSOBPTR),@CF00055                        0192
*         END JCNTL0A0;                                            0193
*       ELSE                                                       0194
*         SSOBRETN=SSJSYSER;        /* SIGNAL INITIATOR TO STOP.   0194
*                                      THERE IS NO TASK TO INITIATE  */
         B     @RC00175                                            0194
@RF00175 MVC   SSOBRETN(4,SSOBPTR),@CF00055                        0194
*     END JCNTL010;                                                0195
*                                                                  0195
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*   RETURN;                                                        0196
@EL00001 L     @13,4(,@13)                                         0196
@EF00001 L     @00,@SIZDATD                                        0196
         LR    @01,@11                                             0196
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0196
         BR    @14                                                 0196
*                                                                  0197
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINES FOR IEFJCNTL                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*GETCORE:                                                          0197
*   PROC;                                                          0197
*                                                                  0197
         B     @EL00001                                            0197
GETCORE  STM   @14,@01,@SA00002                                    0197
         STM   @03,@12,@SA00002+16                                 0197
*/* THE SUBPOOL AND LENGTH IS PUT INTO REGISTER 0 FROM GETLIST.    0198
*   THE ADDRESS OF THE GOTTEN AREA IS RETURNED VIA GETADDR PTR       */
*                                                                  0198
*   REG0=GETLIST;                   /* LOAD SUBP. AND LEN            */
         L     REG0,GETLIST                                        0198
*   GEN(GETMAIN  R,LV=(0));                                        0199
         GETMAIN  R,LV=(0)
*   GETADDR=REG1;                                                  0200
         LR    GETADDR,REG1                                        0200
*   END GETCORE;                                                   0201
@EL00002 DS    0H                                                  0201
@EF00002 DS    0H                                                  0201
@ER00002 LM    @14,@01,@SA00002                                    0201
         LM    @03,@12,@SA00002+16                                 0201
         BR    @14                                                 0201
*   END IEFJCNTL                                                   0202
*                                                                  0202
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSIB)                                       */
*/*%INCLUDE SYSLIB  (IEFJAMWA)                                       */
*/*%INCLUDE SYSLIB  (IEFNELDF)                                       */
*/*%INCLUDE SYSLIB  (IEFNEL  )                                       */
*/*%INCLUDE SYSLIB  (IEFALLCT)                                       */
*/*%INCLUDE SYSLIB  (IEFQMNGR)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*                                                                  0202
*       ;                                                          0202
@DATA    DS    0H
@CH00039 DC    H'4'
@SM01735 MVC   PROCDCBD(0),PROCDCBC
@SM01737 MVC   CONATCHD(0),CONATCHC
@SM01739 MVC   PROCOPND(0),PROCOPNC
@SX01742 XC    PROCLIBD(0,@14),PROCLIBD(@14)
@SM01744 MVC   PROCLIBD(0,@14),PROCDCBD
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00002 DS    14F
IEFJCNTL CSECT
         DS    0F
@CF00055 DC    F'16'
@CF00064 DC    F'36'
@CF01733 DC    F'66'
@CF01734 DC    F'76'
@CF00786 DC    F'80'
@DATD    DSECT
         DS    0D
SSIBPTR  DS    A
QMPAPTR  DS    A
TCBPTR   DS    A
CNTLACBP DS    A
BLKSIZE  DS    H
         DS    CL6
ATACHECB DS    CL4
         ORG   ATACHECB
@NM00159 DS    CL1
COMPCODE DS    CL3
         ORG   ATACHECB+4
CONVRTCB DS    CL4
GETLIST  DS    CL4
         ORG   GETLIST
SPNUM    DS    FL1
SPLEN    DS    FL3
         ORG   GETLIST+4
IEFJCNTL CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01652 DC    V(IEFJACTL)
@CV01653 DC    V(IEFJWTOM)
         DS    0D
TERMCODE DC    AL1(36)
ABENDMSK DC    XL3'000FFF'
CNTLPTCH DS    CL100
         ORG   CNTLPTCH
@NM00158 DC    100X'00'
         ORG   CNTLPTCH+100
INTDEFLT DC    CL21'81300000000011E00011A'
IEFJCNTL CSECT
PROCDCBC DCB   DDNAME=IEFPDSI,DSORG=PO,MACRF=(R)
LENPROC  DC    A(*-PROCDCBC)           LENGTH OF PROCDCB
CONATCHC ATTACH  EP=DUMNAMEC,SZERO=NO,JSTCB=YES,SM=SUPV,SF=L,KEY=ZERO
LENATCH  DC    A(*-CONATCHC)
PROCOPNC OPEN  (,),MF=L
PROCOLEN DC    A(*-PROCOPNC)
@DATD    DSECT
PROCDCBD DCB   DDNAME=IEFPDSI,DSORG=PO,MACRF=(R)
CONATCHD ATTACH  EP=DUMNAMED,SZERO=NO,JSTCB=YES,SM=SUPV,SF=L,KEY=ZERO
PROCOPND OPEN  (,),MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFJCNTL CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DEFLTPTR EQU   @02
GETADDR  EQU   @02
ACBPTR   EQU   @02
DCBPTR   EQU   @02
LCTPTR   EQU   @02
NELPTR   EQU   @03
AMWAPTR  EQU   @09
SSOBPTR  EQU   @06
REG0     EQU   @00
REG1     EQU   @01
REG7     EQU   @07
REG8     EQU   @08
REG15    EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
SSOB     EQU   0
SSOBSSIB EQU   SSOB+8
SSOBRETN EQU   SSOB+12
SSOBINDV EQU   SSOB+16
SSJS     EQU   0
SSJSFLG1 EQU   SSJS+6
SSJSLCT  EQU   SSJS+8
SSJSMACB EQU   SSJS+12
SSJSJACB EQU   SSJS+16
SSJSTACB EQU   SSJS+20
SSJSJMR  EQU   SSJS+28
SSJSSERR EQU   SSJS+32
SSJSPASS EQU   SSJS+40
SSJSPAS2 EQU   SSJS+49
SSIB     EQU   0
SSIBFLG1 EQU   SSIB+6
SSIBSUSE EQU   SSIB+32
IEFJAMWA EQU   0
AMWATXTE EQU   IEFJAMWA
AMWAFSTT EQU   AMWATXTE
AMWALSTT EQU   AMWATXTE+4
AMWATFL1 EQU   AMWATXTE+8
AMWAJCLE EQU   IEFJAMWA+12
AMWAJFL1 EQU   AMWAJCLE+8
AMWARESV EQU   IEFJAMWA+24
AMWAFLG1 EQU   AMWARESV+4
CONVERR  EQU   AMWAFLG1
BYPINTER EQU   AMWAFLG1
NEL      EQU   0
NELLIST  EQU   NEL
NELQMPA  EQU   NELLIST
NELEXLST EQU   NELLIST+4
NELCOMID EQU   NELLIST+8
NELTXTCB EQU   NELLIST+12
NELMSGCB EQU   NELLIST+16
NELOPSWT EQU   NELLIST+24
NELJCLCB EQU   NELLIST+28
NELPROCB EQU   NELLIST+32
NELSTMCB EQU   NELLIST+36
NELPARMO EQU   NELLIST+40
NELJPRTY EQU   NELLIST+41
NELTIME  EQU   NELLIST+43
NELREG   EQU   NELLIST+49
NELCOMDS EQU   NELLIST+52
NELLABEL EQU   NELLIST+53
NELAUTH  EQU   NELLIST+54
NELMSGL1 EQU   NELLIST+58
NELMSGL2 EQU   NELLIST+59
NELMSGCL EQU   NELLIST+60
NELEXENT EQU   0
NELEXEP  EQU   NELEXENT+2
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00024 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00051 EQU   LCT+76
LCTINTSW EQU   @NM00051
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
QMGR1    EQU   LCT+248
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
@NM00077 EQU   LCT+356
LCTOPSW2 EQU   @NM00077
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
@NM00090 EQU   LCT+420
LCTINTS2 EQU   @NM00090+1
QMPA     EQU   0
QMNAM    EQU   QMPA
QMSTA    EQU   QMPA+16
QMPCL    EQU   QMPA+32
QMPCMNC  EQU   QMPCL
SWAQMPA  EQU   0
QMSWSP   EQU   SWAQMPA
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBID    EQU   ACBCOMN
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBINRTN EQU   ACBCOMN+8
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBOPEN  EQU   ACBOFLGS
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBBLKSI EQU   IHADCS36+10
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBPASS EQU   JSCBSWT1
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
PROCLIBD EQU   0
DEFAULTS EQU   0
PNAM     EQU   DEFAULTS
JOBPRI   EQU   DEFAULTS+1
JSTPTM   EQU   DEFAULTS+3
JSTPREG  EQU   DEFAULTS+9
COMDISP  EQU   DEFAULTS+12
BYPLAB   EQU   DEFAULTS+13
COMAUTH  EQU   DEFAULTS+14
JCLMSGLV EQU   DEFAULTS+18
ALLMSGLV EQU   DEFAULTS+19
MSGCLASS EQU   DEFAULTS+20
CNTLACB  EQU   0
ACBPRFX  EQU   CNTLACB
ACBTEXT  EQU   CNTLACB+4
INPUT1   EQU   0
INPUT2   EQU   0
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCBACT  EQU   JSCBSEC3+88
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
PSARSVTE EQU   PSARSVT
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00129 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00128 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
@NM00157 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00156 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00155 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00154 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00127 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00126 EQU   IEZJSCB
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00125 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00124 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00123 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00122 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00121 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00120 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00119 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBREADA EQU   DCBWRITA
@NM00118 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00117 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00116 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00115 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00114 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00113 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00112 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00111 EQU   DCBDSRG1
@NM00110 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00109 EQU   IHADCS01+5
@NM00108 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00107 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00106 EQU   IHADCB
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00105 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00104 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00103 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00102 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00101 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00100 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00099 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00098 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00097 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00096 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
QMRBN    EQU   SWAQMPA+12
@NM00095 EQU   SWAQMPA+1
QMPACL   EQU   QMPCL+1
QMPNC    EQU   QMPCMNC
QMPCM    EQU   QMPCMNC
QMEIA    EQU   QMPA+28
QMWTQ    EQU   QMPA+24
QMRSD1   EQU   QMPA+22
QMTID    EQU   QMPA+20
QMLNK    EQU   QMPA+18
QMPRI    EQU   QMPA+17
@NM00094 EQU   QMSTA
QMSJNL   EQU   QMSTA
@NM00093 EQU   QMSTA
QMTPY    EQU   QMPA+15
QMNOT    EQU   QMPA+14
QMTLN    EQU   QMPA+12
QMTST    EQU   QMPA+11
QMFLT    EQU   QMPA+9
QMPOP    EQU   QMPA+8
QMPEB    EQU   QMNAM+4
QMCAN    EQU   QMNAM
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00092 EQU   LCT+436
LCTIMSG  EQU   LCT+432
LCTLBWAP EQU   LCT+428
@NM00091 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00090
LCTRFB1  EQU   LCT+419
@NM00089 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBSM EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00088 EQU   LCTJCTDA+3
LCTJCTVA EQU   LCTJCTDA
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00087 EQU   LCT+364
@NM00086 EQU   LCTJSCB+1
@NM00085 EQU   LCTOPSW3
@NM00084 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00083 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00082 EQU   LCTOPSW3
@NM00081 EQU   @NM00077+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
LCTBPRAC EQU   LCTOPSW2
@NM00080 EQU   LCTOPSW2
@NM00079 EQU   LCTOPSW2
@NM00078 EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00076 EQU   LCTEXIT+1
@NM00075 EQU   LCTOPSW1
@NM00074 EQU   LCTOPSW1
LCTONEJF EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00073 EQU   LCTOPSW1
@NM00072 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00071 EQU   LCTTSRB4
@NM00070 EQU   LCT+340
@NM00069 EQU   LCTSPIL+3
@NM00068 EQU   LCTALCFG
@NM00067 EQU   LCTALCFG
@NM00066 EQU   LCTALCFG
@NM00065 EQU   LCTALCFG
@NM00064 EQU   LCTALCFG
@NM00063 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00062 EQU   ECBLIST+1
@NM00061 EQU   ECBLIST
LCTJMRAD EQU   LCT+324
LCTASCBA EQU   LCT+320
@NM00060 EQU   LCT+284
REGSAVE  EQU   LCT+104
@NM00059 EQU   LCTATLST+1
@NM00058 EQU   LCTATLST
@NM00057 EQU   LCTJOBLB+1
@NM00056 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00055 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00054 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00053 EQU   LCTTJTU4
@NM00052 EQU   @NM00051+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00050 EQU   LCTSREG+1
@NM00049 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00048 EQU   LCTSMBAD+1
@NM00047 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
LCTSNUMB EQU   LCT+58
@NM00046 EQU   LCTJFCBH
@NM00045 EQU   LCTJFCBH
@NM00044 EQU   LCTJFCBH
@NM00043 EQU   LCTJFCBH
@NM00042 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00041 EQU   LCTCMCBA+1
@NM00040 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTPARM2 EQU   LCT+40
LCTPARM1 EQU   LCT+36
LCTJCFAL EQU   LCTERR
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
LCTJFAIL EQU   LCTERR
@NM00039 EQU   LCTPSPAR+1
@NM00038 EQU   LCTPSPAR
@NM00037 EQU   LCTWORKA+3
LCTSCTVA EQU   LCTWORKA
@NM00036 EQU   LCTSCTAD+1
@NM00035 EQU   LCTSCTAD
@NM00034 EQU   LCTJCTAD+1
@NM00033 EQU   LCTJCTAD
@NM00032 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00024
@NM00031 EQU   @NM00024
@NM00030 EQU   @NM00024
@NM00029 EQU   @NM00024
@NM00028 EQU   @NM00024
@NM00027 EQU   @NM00024
@NM00026 EQU   @NM00024
@NM00025 EQU   @NM00024
@NM00023 EQU   LCTTCBAD+1
@NM00022 EQU   LCTTCBAD
@NM00021 EQU   LCTSRTAD+1
@NM00020 EQU   LCTSRTAD
@NM00019 EQU   LCTQDRTY+1
@NM00018 EQU   LCTQDRTY
NELEXEPA EQU   NELEXEP+2
@NM00017 EQU   NELEXEP
NELEXID  EQU   NELEXENT+1
NELEXLK  EQU   NELEXENT
@NM00016 EQU   NELLIST+61
NELPGMN  EQU   NELPARMO
NELACCT  EQU   NELPARMO
@NM00015 EQU   NELPARMO
@NM00014 EQU   NELLIST+25
@NM00013 EQU   NELOPSWT
NELRECVY EQU   NELOPSWT
NELTSOP  EQU   NELOPSWT
NELSMF   EQU   NELOPSWT
NELJMR   EQU   NELLIST+20
@NM00012 EQU   AMWARESV+8
AMWAFLG4 EQU   AMWARESV+7
AMWAFLG3 EQU   AMWARESV+6
AMWAFLG2 EQU   AMWARESV+5
@NM00011 EQU   AMWAFLG1
@NM00010 EQU   AMWARESV
@NM00009 EQU   AMWAJCLE+9
@NM00008 EQU   AMWAJFL1
AMWAJM80 EQU   AMWAJFL1
AMWAJEOF EQU   AMWAJFL1
AMWALSTJ EQU   AMWAJCLE+4
AMWAFSTJ EQU   AMWAJCLE
@NM00007 EQU   AMWATXTE+9
@NM00006 EQU   AMWATFL1
AMWATM80 EQU   AMWATFL1
AMWATEOF EQU   AMWATFL1
SSIBRSV1 EQU   SSIB+28
SSIBDEST EQU   SSIB+20
SSIBJBID EQU   SSIB+12
SSIBSSNM EQU   SSIB+8
SSIBRESV EQU   SSIB+7
@NM00005 EQU   SSIBFLG1
SSIBPJES EQU   SSIBFLG1
SSIBLEN  EQU   SSIB+4
SSIBID   EQU   SSIB
SSJSPSW2 EQU   SSJSPAS2+1
SSJSPSL2 EQU   SSJSPAS2
SSJSPSWD EQU   SSJSPASS+1
SSJSPSLN EQU   SSJSPASS
SSJSAIAD EQU   SSJS+36
SSJSIPRM EQU   SSJS+24
@NM00004 EQU   SSJS+7
@NM00003 EQU   SSJSFLG1
SSJSAIFG EQU   SSJSFLG1
SSJSWARM EQU   SSJSFLG1
@NM00002 EQU   SSJSFLG1
SSJSCNRS EQU   SSJSFLG1
SSJSCHRS EQU   SSJSFLG1
SSJSSTRS EQU   SSJSFLG1
SSJSSTEP EQU   SSJS+4
@NM00001 EQU   SSJS+2
SSJSLEN  EQU   SSJS
SSOBFUNC EQU   SSOB+6
SSOBLEN  EQU   SSOB+4
SSOBID   EQU   SSOB
@NM00153 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00152 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00151 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00150 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00149 EQU   FLCFSA
@NM00148 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00147 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00146 EQU   FLCIOA
@NM00145 EQU   FLCMCLA+15
@NM00144 EQU   FLCMCLA+14
@NM00143 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00142 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00141 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00140 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00139 EQU   FLCPER
@NM00138 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00137 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00136 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00135 EQU   FLCPIILC
@NM00134 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00133 EQU   FLCSVILC
@NM00132 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00131 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00130 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00137 EQU   @RC00127
@RC00054 EQU   @EL00001
@RC00175 EQU   @EL00001
@RC00184 EQU   @RC00175
@RF00186 EQU   @RC00184
@ENDDATA EQU   *
         END   IEFJCNTL,(C'PLS2016',0701,76190)
