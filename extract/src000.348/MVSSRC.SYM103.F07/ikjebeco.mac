BECO     TITLE 'EDIT SERVICE ROUTINE-INITIAL COPY-IKJEBECO'
***********************************************************************
*                                                                     *
*STATUS-  VERSION NO. 01, OS/360 RELEASE NO. 20                       *
*                                                                     *
*FUNCTION/OPERATION-  IKJEBECO IS AN EDIT SERVICE ROUTINE WHICH IS    *
*   USED WHENEVER IT IS NECESSARY TO CREATE AN UTILITY DATA SET FROM  *
*   AN OLD EXISTING DATA SET WHICH MAY BE ACCESSED BY THE QUEUED      *
*   SEQUENTIAL ACCESS METHOD.  THIS ROUTINE WILL READ THE EXISTING    *
*   DATA SET SEQUENTIALLY, CHANGE THE RECORD FORMAT FROM WHAT EXISTS  *
*   ON THE OLD DATA SET TO AN EQUIVALENT RECORD FORMAT FOR THE        *
*   UTILITY DATA SET AS DESCRIBED IN THE UTILITY DATA SET STRUCTURE,  *
*   AND WRITE THE RECORDS INTO THE UTILITY DATA SET USING EITHER THE  *
*   SEQUENCE NUMBER AS THE KEY (IF THE DATA SET IS NUMBERED) OR A     *
*   GENERATED NUMBER AS THE KEY (IF THE DATA SET IS NOT NUMBERED).    *
*                                                                     *
*ENTRY POINTS-  IKJEBECO IS THE MAIN AND ONLY ENTRY POINT             *
*                                                                     *
*INPUT-  REGISTER 1 CONTAINS A POINTER TO EDIT'S COMMUNICATION AREA   *
*   WHICH HAS BEEN INITIALIZED WITH DDNAME, THE FULLY QUALIFIED       *
*   DSNAME, AND THE LOGICAL RECORD LENGTH OF THE DATA SET TO BE       *
*   COPIED.                                                           *
*                                                                     *
*OUTPUT-  A FORMATTED UTILITY DATA SET IS WRITTEN.                    *
*         REGISTERS AS DESCRIBED UNDER EXITS BELOW.                   *
*                                                                     *
*EXTERNAL REFERENCES-                                                 *
*        IKJEBEUI      -UTILITY DATA SET ACCESS INITIALIZATION        *
*        IKJEBEUT      -PERFORMS WRITING OF RECORDS ON UTILITY DATA   *
*                       SET                                           *
*        IKJEBEEX      -UTILITY DATA SET ACCESS TERMINATION           *
*        MACROS USED -                                                *
*           IKJEBESV   -SAVE CALLER'S REGISTERS AND ESTABLISH         *
*                       ADDRESSABILITY                                *
*           IKJEBERT   -RELOAD CALLER'S REGISTERS AND RETURN CONTROL  *
*                       TO CALLER                                     *
*           IKJEBESH   -LINKAGE TO EDIT MODULES                       *
*           IKJEBEML   -STANDARD MESSAGE TO TERMINAL USER             *
*           IKJEBECA   -LAYOUT AND DESCRIPTION OF COMMUNICATION AREA  *
*           FREEPOOL   -RELEASE BUFFER ACQUIRED BY OPEN MACRO TO      *
*                       SYSTEM                                        *
*           OPEN       -OPEN QSAM DATA SET                            *
*           CLOSE      -CLOSE QSAM DATA SET                           *
*           DCBD       -LAYOUT OF DCB FOR QSAM DATA SET               *
*                                                                     *
*EXITS,NORMAL-  A RETURN CODE IN REGISTER 15 AS FOLLOWS-              *
*                                                                     *
*           RETURN CODE = 0  THE EXISTING DATA SET WAS COPIED         *
*             SUCCESSFULLY.                                           *
*                                                                     *
*           RETURN CODE = 4  THE EXISTING DATA SET CONTAINS NO LOGICAL*
*             RECORDS.                                                *
*                                                                     *
*EXITS,ERROR-  RETURN CODE = 8 IN REGISTER 15 . POSSIBLE REASONS ARE- *
*           DATA SET CONTAINS INVALID LINE NUMBERS                    *
*           UNABLE TO OPEN EXISTING DATA SET                          *
*           UNABLE TO INITIALIZE EDIT ACCESS METHOD                   *
*           PERMANENT I/O ERROR                                       *
*                                                                     *
*TABLES/WORK AREAS -  THE EDIT SERVICE ROUTINE WORK AREA OF FIFTY     *
*   FULLWORDS AND A BUFFER POOL OF 98 FULLWORDS IN THE COMMUNICATION  *
*   AREA ARE USED                                                     *
*                                                                     *
*ATTRIBUTES - REFRESHABLE, ENABLED, NON-PRIVILEGED                    *
*                                                                     *
*NOTES- THIS ROUTINE DEPENDS ON THE CHARACTER CODE REPRESENTATIONS OF *
*       THE DIGITS 0 THROUGH 9 HAVING CONSECUTIVE BINARY VALUES IN    *
*       COLLATING SEQUENCE.  SEE THE SUBROUTINE  COCVBIN .            *
*                                                                     *
***********************************************************************
IKJEBECO CSECT
*A108090-108900,342070-345920,349050-349850,396700-398100,506500 A45155
*A507200-507800,546060-546900                                    A45155
*C329000-330000,333000                                           A45155
*D343000-346280,397000-398000,546200-546800                      A45155
*A137600,262500,441500-441700,500004-501904,504500,506600        A50471
*A507900-507960,514500-514780,536100-536500,538500-538700        A50471
*A542500-543000,546100-546120,546904-546928                      A50471
*C123000,262000,515000                                           A50471
*D111000,537000,545000                                           A50471
*A536050                                                          M4276
*D542500                                                          M4276
*A417010-417060,433010-433310,506510-506550,515010,517002-517006 Y01676
*C515000                                                         Y01676
*C114000                                                       @Y30NQKG
         SPACE 1
***********************************************************************
*    EQUATES OF SYMBOLIC REGISTERS
***********************************************************************
PARMREG0 EQU   0                       PARAMETER POINTER
PARMREG1 EQU   1                       PARAMETER POINTER
TESTREG  EQU   2                       WORK REGISTER
BINREG   EQU   3                       WORK REGISTER
ADDREG   EQU   4                       WORK REGISTER
DCBREG   EQU   5                       WORK REGISTER
WORKREG  EQU   6                       WORK REGISTER
EXREG    EQU   7                       WORK REGISTER
UTREG    EQU   8                       WORK REGISTER
COMMREG  EQU   9                       COMMUNICATION AREA ADDRESSING
TEMPREG  EQU   10                      WORK REGISTER
BASEREG  EQU   11                      BASE REGISTER
DATAREG  EQU   12                      WORK REGISTER
SAVEREG  EQU   13                      SAVE AREA POINTER
RETREG   EQU   14                      RETURN REGISTER
RETCDREG EQU   15                      RETURN CODE
         SPACE 2
***********************************************************************
*    EQUATES OF SYMBOLIC CONSTANTS
***********************************************************************
INTCY0   EQU   0                       CONSTANT OF 0
INTCY1   EQU   1                       CONSTANT OF 1
INTCY2   EQU   2                       CONSTANT OF 2
INTCY3   EQU   3                       CONSTANT OF 3
INTCY4   EQU   4                       CONSTANT OF 4
INTCY5   EQU   5                       CONSTANT OF 5
INTCY6   EQU   6                       CONSTANT OF 6
INTCY8   EQU   8                       CONSTANT OF 8
INTCY10  EQU   10                      CONSTANT OF 10
INTCY12  EQU   12                      CONSTANT OF 12
INTCY16  EQU   16                      CONSTANT OF 16
INTCY20  EQU   20                      CONSTANT OF 20
INTCY29  EQU   29                      CONSTANT OF 29
INTCY50  EQU   50                      CONSTANT OF 50
INTCY78  EQU   78                      CONSTANT OF 78
INTCY100 EQU   100                     CONSTANT OF 100
D0       EQU   0                       DISPLACEMENT OF 0         A45155
D3       EQU   3                       DISPLACEMENT OF 3         A45155
D7       EQU   7                       DISPLACEMENT OF 7         A45155
D8       EQU   8                       DISPLACEMENT OF 8         A45155
L0       EQU   0                       LENGTH OF 0               A45155
L1       EQU   1                       LENGTH OF 1               A45155
L4       EQU   4                       LENGTH OF 4               A45155
L5       EQU   5                       LENGTH OF 5               A45155
L8       EQU   8                       LENGTH OF 8               A45155
L9       EQU   9                       LENGTH OF 9               A45155
DCBOPEN  EQU   X'10'                   OPEN TEST FLAG
VAR      EQU   X'40'                   VARIABLE RECORD FORMAT TEST FLAG
FIXED    EQU   X'80'                   FIXED RECORD FORMAT TEST FLAG
END      EQU   X'80'                   END OF PARAMETER LIST CODE
LAST     EQU   X'21'                   WRITE RECORD ON UTILITY DATA
*                                      SET CODE                @Y30NQKG
ALL      EQU   X'FF'                   USED TO SET SWITCHES
CHAR0    EQU   C'0'                    USED TO VERIFY LINE NUMBERS
CHAR9    EQU   C'9'                    USED TO VERIFY LINE NUMBERS
BLANK    EQU   C' '                    USED IN SCANNING MESSAGE TEXT
         SPACE 2
***********************************************************************
*    MESSAGE REFERENCES
***********************************************************************
         IKJEBEMI (309,337,338,344)                              A50471
MESS1    EQU   X'80'                   MESSAGE1 TEST SWITCH
MESS5    EQU   X'40'                   MESSAGE5 TEST SWITCH
MESS6    EQU   X'20'                   MESSAGE6 TEST SWITCH
         EJECT
***********************************************************************
*    STANDARD ENTRY LINKAGE AND ESTABLISHMENT OF ADDRESSABILITY BOTH
*    IN THIS ROUTINE AND IN THE COMMUNICATION AREA
***********************************************************************
         IKJEBESV (14,12),T,*          SAVE CALLER'S REGISTERS AND
*                                      ESTABLISH ADDRESSABILITY
         LR    COMMREG,PARMREG1        LET COMMREG PT TO COMMUNICATION
*                                      AREA
         USING IKJEBECA,COMMREG        ADDRESSABILITY IN COMMUNICATION
*                                      AREA
         MVI   SW,INTCY0               TURN SWITCHES OFF
         MVI   CORDFLAG,INTCY0         TURN CONTROL BITS OFF     A50471
         SPACE 2
***********************************************************************
*    MOVE DCB WHICH HAS BEEN INITIALIZED WITH DSORG, MACRF, A SYNAD
*    EXIT ADDRESS AND AN EOD EXIT ADDRESS FOR EXISTING DATA SET TO
*    THE COMMUNICATION AREA AND ESTABLISH ITS ADDRESSABILITY HERE
***********************************************************************
         MVC   COINDCB(INDCBL),INDCB   MOVE DCB FOR EXISTING DATA SET
*                                      TO COMM. AREA
         LA    DCBREG,COINDCB          LET DCBREG POINT TO DCB IN COMM.
*                                      AREA
         USING IHADCB,DCBREG           ADDRESSABILITY IN DCB DSECT
         SPACE 2
***********************************************************************
*    DETERMINE WHETHER INITIAL COPY IS TO BE PERFORMED ON EDIT OR SAVE
*    DATA SET HERE
***********************************************************************
         TM    CAEDFLAG,CAEDINCP       TEST WHETHER INIT. COPY IS TO
*                                      BE PERFORMED ON EDIT DATA SET
         BO    EDITDATA                BRANCH IF YES TO EDITDATA
         SPACE 2
***********************************************************************
*    INITIALIZE DCB WITH THE APPROPRIATE DDNAME FROM THE COMMUNICATION
*    AREA HERE
***********************************************************************
         MVC   DCBDDNAM(INTCY8),CASADDN  MOVE SAVE DATA SET DDNAME FROM
*                                      COMM. AREA TO DCB
         SPACE 2
***********************************************************************
*    EDIT OR SAVE DATA SET IS OPENED AND TESTED IF OPEN IS SUCCESSFUL
*    HERE
***********************************************************************
NEXT     MVC   COOPENPL(INOPENL),INOPEN
         OPEN  ((DCBREG),(INPUT)),MF=(E,COOPENPL) EXECUTE FORM OF OPEN
*                                                 MACRO
         TM    DCBOFLGS,DCBOPEN        CHECK IF DCB OPENED
         BNO   MESSAGE1                BRANCH IF NOT OPEN TO ISSUE
*                                      MESSAGE1
         OI    CORDFLAG,READFLAG       TURN ON 1ST READ FLAG IN
*                                      WORKAREA OF COMM. AREA
         SPACE 2
***********************************************************************
*    IKJEBEUI IS CALLED TO ALLOCATE THE UTILITY DATA SET AND
*    INITIALIZE THE EDIT ACCESS METHOD
***********************************************************************
         LR    PARMREG1,COMMREG        LET PARMREG1 POINT TO COMM. AREA
         LINK  EP=IKJEBEUI
         LTR   RETCDREG,RETCDREG       TEST RETURN CODE FROM IKJEBEUI
         BZ    SUCCESS                 BRANCH IF ZERO TO SUCCESS
UNSUC    LA    TEMPREG,INTCY8          SET RETURN CODE TO 8 IN TEMPREG
         SPACE 2
***********************************************************************
*    TERMINATION PROCESSING
***********************************************************************
CLOSED   MVC   COOPENPL(INCLOSEL),INCLOSE
         CLOSE ((DCBREG)),MF=(E,COOPENPL)  EXECUTE FORM OF CLOSEMACRO
         FREEPOOL IHADCB
EXIT     LR    RETCDREG,TEMPREG        PUT RET. CODE IN REG 15
         IKJEBERT (14,12),T,RC=(15)    RELOAD ALL REGISTERS EXCEPT
*                                      REGISTER 15 AND RETURN
*                                      CONTROL TO CALLER
EDITDATA MVC   DCBDDNAM(INTCY8),CAEDDDN  MOVE EDIT DATA SET NAME FROM
*                                      COMM. AREA TO DCB
         B     NEXT                    BRANCH TO OPEN EDIT DATA SET
         SPACE 2
***********************************************************************
*    MSG1- 'DATA SET (EDIT OR SAVE DSNAME) NOT USABLE+.  OPEN ERROR'
*    IS ISSUED HERE
***********************************************************************
MESSAGE1 OI    SW,MESS1                TURN MESSAGE1 SWITCH ON
M135     TM    CAEDFLAG,CAEDINCP       TEST WHETHER IT IS EDIT DATA SET
*                                      OR SAVE DATA SET
         BO    EDSN1                   EDIT DATA SET THEN GO TO EDSN1
         SR    TESTREG,TESTREG         CLEAR TESTREG
         ST    TESTREG,CADSNPT2        SET CADSNPT2 TO ZERO
         LA    TESTREG,M309IN1
         STH   TESTREG,CADSNOF2        SET OFFSET VALUE IN CADSNOF2
         TM    SW,MESS1                TEST WHETHER MESSAGE1 IS ISSUED
         BO    COMBINE2                BRANCH IF ON TO COMBINE2
         TM    SW,MESS5                TEST WHETHER MESSAGE5 IS TO BE
*                                      ISSUED
         BO    COMBINE5                BRANCH TO COMBINE5 IF MESSAGE5
*                                      IS TO BE ISSUED
         B     COMBINE3                BRANCH TO COMBINE3 IF MESSAGE4
*                                      IS ISSUED
EDSN1    SR    TESTREG,TESTREG         CLEAR TESTREG
         ST    TESTREG,CADSNPTR        SET CADSNPTR TO ZERO
         LA    TESTREG,M309IN1
         STH   TESTREG,CADSNOFF        SET OFFSET VALUE IN CADSNOFF
         TM    SW,MESS1                TEST WHETHER MESSAGE1 IS ISSUED
         BO    COMBINE4                BRANCH TO COMBINE4 IF MESSAGE1
*                                      IS ISSUED
         TM    SW,MESS6                TEST WHETHER MESSAGE6 IS TO BE
*                                      ISSUED
         BO    COMBINE8                BRANCH TO COMBINE8 IF MESSAGE6
*                                      IS TO BE ISSUED
         B     COMBINE3                BRANCH TO COMBINE3 IF MESSAGE3
*                                      IS ISSUED
COMBINE2 MVC   B(INTCY12),INLIST1
ISSUE1   IKJEBEML M309,M3093,CADSNPT2,MF=(E,B)
COMBINE6 NI    SW,ALL-MESS1            TURN MESSAGE1 SWITCH OFF
         LA    TEMPREG,INTCY8          SET RETURN CODE TO 8
         B     EXIT                    BRANCH TO RETURN TO CALLING
*                                      ROUTINE
COMBINE4 MVC   B(INTCY12),INLIST1
ISSUE2   IKJEBEML M309,M3093,CADSNPTR,MF=(E,B)
         B     COMBINE6                BRANCH UNCOND. TO COMBINE6
         SPACE 2
***********************************************************************
*    THE EXISTING DATA SET IS PROCESSED HERE
***********************************************************************
SUCCESS  ST    PARMREG0,CAPTCDCB       SAVE POINTER TO UTILDCB IN COMM.
*                                      AREA
         TM    DCBRECFM,FIXED          TEST WHETHER RECFM OF EXISTING
*                                      DATA SET IS FIXED OR NOT
         BNO   VARIABLE                BRANCH ON NOT FIXED TO VARIABLE
FIX      MVC   GETAD+INTCY4(INTCY2),CALRECL  THE LENGTH FIELD IS
*                                      SET TO THE VALUE OF LOG.REC.LENG
         XC    GETAD+INTCY6(INTCY2),GETAD+INTCY6  PUT ZERO INTO 7TH
*                                      AND 8TH BYTES IN BUFFER
         LA    ADDREG,GETAD+INTCY8     PUT STARTING ADDRESS FOR
*                                      GET MACRO IN ADDREG
         B     READ                    BRANCH UNCOND. TO READ
VARIABLE LA    ADDREG,GETAD+INTCY4     PUT STARTING ADDRESS FOR
*                                      GET MACRO IN ADDREG
READ     GET   IHADCB                                            A50471
         BAL   WORKREG,MOVETRNC        CALL MOVE/TRUNCATE RTN    A50471
STEP     TM    CORDFLAG,READFLAG       TEST WHETHER 1ST READ FLAG IS ON
         BNO   OFF                     BRANCH IF NOT ON TO OFF
ON       TM    CACFLAG1,CANONUM         TEST WHETHER DATA SET IS LINE-
*                                      NUMBERED
         BO    STEP2                   NOT LINE-NUMBERED,GO TO STEP2
         SPACE 2
***********************************************************************
*    1ST READ FLAG IS ON AND DATA SET IS LINE-NUMBERED
***********************************************************************
STEP1    SR    TESTREG,TESTREG         CLEAR TESTREG
         IC    TESTREG,CALINE          PUT LINE NUMBER OFFSET FOR
*                                      FIXED RECFM IN TESTREG
         TM    DCBRECFM,FIXED          TEST WHETHER DATA SET IS FIXED
*                                      OR VARIABLE
         BO    PRECONV                 BRANCH IF RECFM IS FIXED TO
*                                      PRECONV
VAR1     LA    TESTREG,INTCY4(TESTREG)  ADD 4 TO LINE NUMBER OFFSET
*                                       FOR VARIABLE RECFM
PRECONV  BCTR  TESTREG,PARMREG0         LINE NUMBER OFFSET - 1
         LA    TESTREG,INTCY0(TESTREG,ADDREG)
         ST    TESTREG,TRULINE         PUT STARTING ADDRESS OF
*                                      LINE NO. IN TRULINE
         LA    RETCDREG,COCVBIN        PUT ENTRY ADDRESS OF BINARY
*                                      CONVERSION RTN. IN RETCDREG
         BALR  RETREG,RETCDREG         TRANSFER CONTROL TO BIN. CONV.
*                                      RTN.
SEQNUM   ST    BINREG,CASTNUM          STORE CONVERTED SEQ. NO. IN
*                                      STARTING LINE NUMBER IN COMM.
*                                      AREA
         ST    BINREG,CACURNUM         STORE CONVERTED SEQ. NO. IN
*                                      CURRENT LINE NO. IN COMM. AREA
TURNOFF  NI    CORDFLAG,ALL-READFLAG   TURN 1ST READFLAG OFF
         B     KEY                     BRANCH UNCOND. TO PLACE LINE
*                                      NO. IN OUTPUT BUFFER AS KEY
         SPACE 2
***********************************************************************
*    CONVERSION ROUTINE OF SEQ. NUMBER FROM DECIMAL TO BINARY
***********************************************************************
COCVBIN  L     TESTREG,TRULINE         PUT STARTING ADDRESS OF LINE
*                                      NUMBER IN TESTREG
         SR    WORKREG,WORKREG         CLEAR WORKREG
         IC    WORKREG,CALENGTH        PUT LENGTH OF LINE NUMBER IN
*                                      WORKREG
         LR    EXREG,TESTREG
         LR    UTREG,WORKREG           UTREG CONT. LENG. OF SEQ. NO.
LOOP     CLI   INTCY0(EXREG),CHAR0     CHECK WHETHER LINE NO. IS
*                                      DEC. NUMERIC
         BL    TEST1ST                 NOT DEC. NUMERIC THEN BRANCH TO
*                                      TEST1ST
         CLI   INTCY0(EXREG),CHAR9     CHECK WHETHER LINE NUMBER
*                                      IS DEC. NUMERIC
         BH    TEST1ST                 NOT DEC. NUMERIC THEN BRANCH TO
*                                      TEST1ST
         LA    EXREG,INTCY1(EXREG)     INCREMENT ADDRESS OF LINE NO.
*                                      BY 1
         BCT   WORKREG,LOOP            VERIFY ANY REMAINING DIGITS
CONV1    BCTR  UTREG,PARMREG0          LENGTH OF LINE NUMBER - 1
         EX    UTREG,PACKED
         CVB   BINREG,COPACKED         CONVERT LINE NO. TO BINARY
         BR    RETREG                  RETURN TO INITIAL COPY ROUTINE
TEST1ST  TM    CORDFLAG,READFLAG       TEST WHETHER 1ST READFLAG
*                                      IS ON
         BO    TESTLAN                 IF ON BRANCH TO TEST FOR THOSE
*                                      LANGUAGES THAT MUST BE LINE-
*                                      NUMBERED
         B     MSG2B                   IF NOT FIRST RECORD,      A45155
*                                      BRANCH TO ISSUE MESSAGE   A45155
TESTLAN  TM    CADSATTR,CALNNUM        TEST WHETHER ATTR. OF DATA SET
*                                      IS THAT IT MUST BE LINE-NUMBERED
         BO    MSG2A                   IF SO, BRANCH TO SEND MSG A45155
         OI    CACFLAG1,CANONUM        TURN NOT LINE-NUMBERED FLAG ON
         TM    CAEDFLAG,CAEDINCP       TEST WHETHER IT IS EDIT DATA SET
*                                      OR SAVE DATA SET
         BO    EDSN3                   EDIT DATA SET THEN GO TO EDSN3
         OI    SW,MESS5                TURN MESSAGE5 SWITCH ON
         B     M135                    BRANCH UNCOND. TO M135
EDSN3    OI    SW,MESS6                TURN MESSAGE6 SWITCH ON
         B     M135                    BRANCH UNCOND. TO M135
         SPACE 2
**************************************************************** A45155
*    THE FOLLOWING SECTION PREPARES THE FIRST-LEVEL MESSAGE FOR  A45155
*    THE CASE IN WHICH THE FIRST LINE OF THE DATA SET CONTAINS   A45155
*    AN INVALID LINE NUMBER.                                     A45155
**************************************************************** A45155
MSG2A    EQU   *                                                 A45155
         LA    ADDREG,M337A            SET MESSAGE NUMBER        A45155
         BAL   RETREG,MSG2INS1         BRANCH TO PROCESS INS.    A45155
         SR    WORKREG,WORKREG                                   A45155
         ST    WORKREG,INS1PTR         SPECIFY ONE INSERTION.    A45155
         B     MSG2LEV2                BRANCH TO PROCESS SECOND  A45155
*                                      LEVEL MESSAGE             A45155
         SPACE
**************************************************************** A45155
*    THE FOLLOWING SECTION PREPARES THE FIRST-LEVEL MESSAGE FOR  A45155
*    THE CASE IN WHICH AN INVALID LINE NUMBER (NOT IN THE FIRST  A45155
*    LINE) IS ENCOUNTERED.                                       A45155
**************************************************************** A45155
MSG2B    EQU   *                                                 A45155
         LA    ADDREG,M337B            SET MESSAGE NUMBER        A45155
         BAL   RETREG,MSG2INS1         BRANCH TO PROCESS FIRST   A45155
*                                      INSERTION (INVALID NO.)   A45155
         LA    WORKREG,INS2PTR         OBTAIN ADDRESS FOR        A45155
*                                      SECOND INSERTION          A45155
         ST    WORKREG,INS1PTR         CHAIN INSERTIONS          A45155
         SR    WORKREG,WORKREG                                   A45155
         ST    WORKREG,INS2PTR         SPECIFY 2 INSERTIONS ONLY A45155
*                                                                A45155
* PREPARE SECOND INSERTION (PRECEDING LINE NUMBER).              A45155
*                                                                A45155
         LA    WORKREG,M337IN2         OBTAIN OFFSET FOR INS.    A45155
         STH   WORKREG,INS2OFF         STORE OFFSET IN LIST      A45155
         IC    WORKREG,CALENGTH        OBTAIN LINE NO. LENGTH    A45155
         LA    WORKREG,L4(,WORKREG)    COMPUTE INSERTION LENGTH  A45155
         STH   WORKREG,INS2LEN         SET LENGTH IN LIST        A45155
         L     UTREG,CACURNUM          OBTAIN PREVIOUS LINE NO.  A45155
         CVD   UTREG,COPACKED          CONVERT IT TO DECIMAL     A45155
         UNPK  INS2TXT(L9),COPACKED+D3(L5) UNPACK RESULT         A45155
         MVZ   INS2TXT+D8(L1),INS2TXT+D7 INSURE CORRECTNESS OF   A45155
*                                      LAST DIGIT                A45155
         LA    EXREG,L8                MAXIMUM LENGTH FOR MOVE   A45155
*                                      IS EIGHT CHARACTERS       A45155
         SH    WORKREG,H13             SUBTRACT CONSTANT FROM    A45155
*                                      INSERTION LENGTH FOR      A45155
*                                      COMPUTING LENGTH FOR MOVE A45155
         AR    EXREG,WORKREG           ADD 8 TO ABOVE RESULT -   A45155
*                                      THIS IS LENGTH FOR MOVE   A45155
*                                      TO LEFT-JUSTIFY LINE NO.  A45155
         LPR   WORKREG,WORKREG         CHANGE SIGN TO POSITIVE   A45155
         LA    WORKREG,INS2TXT(WORKREG) COMPUTE START POINT FOR  A45155
*                                      MOVE                      A45155
         EX    EXREG,MOVEINS2          MOVE INSERTION 2 TO       A45155
*                                      LEFT-JUSTIFY              A45155
MSG2LEV2 EQU   *                                                 A45155
         LA    WORKREG,INS1PTR         SET POINTER TO FIRST      A45155
*                                      FIRST-LEVEL INSERTION     A45155
         TM    CADSATTR,CALNNUM        DETERMINE IF DATA SET TYPE MUST
*                                      BE LINE NUMBERED
         BO    DSTYPE                  YES,BRANCH AROUND
         SR    EXREG,EXREG             SET REG TO 0,NO SECOND LEVEL
*                                      INSERTION
         LA    UTREG,M3371             PUT ADDR OF 2ND LEVEL MSG NO. IN
*                                      UTREG
         B     MSG                     BRANCH AROUND
DSTYPE   EQU   *
         MVC   MSGTEXT(L'MSGTEXT),CADSTYPE   GET DSTYPE FROM COMM. AREA
*                                            AND MOVE TO MSGTEXT
         LA    EXREG,MSGTEXT+L'MSGTEXT-INTCY1 SET EXREG TO POINT TO END
*                                             OF MSGTEXT
LOOPIT   EQU   *
         CLI   INTCY0(EXREG),BLANK     CHECK FOR BLANK IN MSGTEXT TO
*                                      GET LENGTH
         BNE   OUTER                   IF NOT BLANK BRANCH AROUND
         BCT   EXREG,LOOPIT            GO CHECK NEXT BYTE FOR BLANK
OUTER    EQU   *
         LA    UTREG,MSGTEXT           PUT ADDR OF MSGTEXT IN UTREG
         SR    EXREG,UTREG             GET LENGTH OF DSTYPE NAME
         LA    EXREG,INTCY5(,EXREG)    ADD LENGTH OF KEY(FOUR)TO LENGTH
*                                      OF DSTYPE NAME
         STH   EXREG,MSGLEN            STORE LENGTH OF DSTYPE NAME AND
*                                      KEY INTO MSGLEN
         LA    EXREG,M3372IN1          PUT ADDR OF INSERTION FOR 2ND
*                                      LEVEL MSG IN EXREG
         STH   EXREG,MSGOFF            STORE ADDR IN MSG OFFSET
         XC    MSGPTR(L'MSGPTR),MSGPTR SET MSGPTR TO ZERO,NO 2ND 2ND
*                                      LEVEL MSG
         LA    EXREG,MSGPTR            PUT ADDR OF 2ND LEVEL INSERTION
*                                      LIST IN EXREG
         LA    UTREG,M3372             PUT ADDR OF RELATIVE 2ND LEVEL
*                                      NUMBER IN UTREG
MSG      EQU   *
         IKJEBEML   (ADDREG),(UTREG),(WORKREG),(EXREG),MF=(E,B)
         B     EX                      BRANCH UNCOND. TO EX
         SPACE
**************************************************************** A45155
*    THE FOLLOWING SECTION IS A SUBROUTINE FOR PROCESSING THE    A45155
*    FIRST FIRST-LEVEL INSERTION FOR MESSAGE IKJ52337I           A45155
**************************************************************** A45155
MSG2INS1 EQU   *                                                 A45155
         SR    EXREG,EXREG             CLEAR REGISTER FOR IC     A45155
         IC    EXREG,CALENGTH          OBTAIN LINE NO. LENGTH    A45155
         BCTR  EXREG,0                 ADJUST LENGTH FOR MVC     A45155
         EX    EXREG,MOVEINS1          MOVE LINE NO. TO          A45155
*                                      INSERTION LIST AREA       A45155
         LA    EXREG,L5(,EXREG)        COMPUTE INSERTION LENGTH  A45155
         STH   EXREG,INS1LEN           STORE LENGTH IN LIST      A45155
         LA    EXREG,M337IN1           OBTAIN INSERTION OFFSET   A45155
         STH   EXREG,INS1OFF           STORE OFFSET IN LIST      A45155
         BR    RETREG                  RETURN                    A45155
         SPACE
COMBINE5 EQU   *
         SPACE 2
***********************************************************************
*    MSG5- 'DATA SET (SAVE DSNAME) NOT LINE NUMBERED,USING NONUM' IS
*    ISSUED HERE
***********************************************************************
         MVC   B(INTCY12),INLIST5
         IKJEBEML M338,,CADSNPT2,MF=(E,B)
         NI    SW,ALL-MESS5            TURN MESSAGE5 SWITCH OFF
         B     STEP2                   BRANCH UNCOND. TO STEP2
COMBINE8 EQU   *
         SPACE 2
***********************************************************************
*    MSG6- 'DATA SET (EDIT DSNAME) NOT LINE NUMBERED, USING NONUM' IS
*    ISSUED HERE
***********************************************************************
         MVC   B(INTCY12),INLIST5
         IKJEBEML M338,,CADSNPTR,MF=(E,B)
         NI    SW,ALL-MESS6            TURN MESSAGE6 SWITCH OFF
         SPACE 2
***********************************************************************
*    1ST READ FLAG IS ON AND DATA SET IS NOT LINE-NUMBERED
***********************************************************************
STEP2    LA    WORKREG,INTCY100        PUT 100 IN WORKREG
         ST    WORKREG,CASTNUM         GENERATE STARTING LINE NUMBER IN
*                                      COMM. AREA
         ST    WORKREG,CACURNUM        STORE GENERATED LINE NO. IN
*                                      CURRENT LINE NO. IN COMM. AREA
         ST    WORKREG,CAINCRE         STORE GENEARATED INCREMENT IN
*                                      LINE NUMBER INCREMENT IN COMM.
*                                      AREA
         B     TURNOFF                 BRANCH TO TURN OFF 1ST READFLAG
OFF      TM    CACFLAG1,CANONUM         TEST WHETHER DATA SET IS LINE
*                                      NUMBERED
         BO    STEP4                   BRANCH IF NOT LINE NUMBERED TO
*                                      STEP4
         SPACE 2
***********************************************************************
*    1ST READ FLAG IS OFF AND DATA SET IS LINE-NUMBERED
***********************************************************************
STEP3    LA    RETCDREG,COCVBIN        BRANCH IF LINE NUMBERED TO
*                                      CONVERSION RTN.
         BALR  RETREG,RETCDREG         TRANSFER CONTROL TO BINARY
*                                      CONVERSION RTN.
         C     BINREG,CACURNUM         TEST WHETHER CURRENT SEQ. NO. IS
*                                      NOT GREATER THAN THE PREV. SEQ.
*                                      NO.
         BNH   MSG2B                   BRANCH IF NOT GREATER TO  A45155
*                                      INFORM USER OF INVALID    A45155
*                                      LINE NUMBER               A45155
UPDATE   ST    BINREG,CACURNUM         BRANCH IF GREATER THAN TO UPDATE
*                                      CURRENT LINE NO. IN COMM. AREA
         B     KEY                     BRANCH UNCOND. TO PLACE LINE
*                                      NO. IN OUTPUT BUFFER AS KEY
         SPACE 2
***********************************************************************
*    1ST READ FLAG IS OFF AND DATA SET IS NOT LINE-NUMBERED
***********************************************************************
STEP4    L     WORKREG,CACURNUM        PUT CURRENT LINE NO. IN WORKREG
         A     WORKREG,CAINCRE         ADD INCREMENT TO WORKREG
         ST    WORKREG,CACURNUM        UPDATE CURRENT LINE NO. IN COMM.
*                                      AREA
KEY      MVC   GETAD(INTCY4),CACURNUM  PLACE LINE NO. IN OUTPUT
*                                      BUFFER AS KEY
         SPACE 2
***********************************************************************
*    IKJEBEUT IS CALLED THROUGH IKJEBESH TO WRITE RECORD ON UTILITY
*    DATA SET
***********************************************************************
         TM    CAEDFLG2,CAEDPRTC       CHECK FOR PRINT CONTROL   Y01676
*                                      CHARACTERS IN DATA SET    Y01676
         BZ    WRITE                   IF NO, BR TO WRITE LINE   Y01676
         MVI   GETAD+INTCY8,BLANK      IF SO, OVERLAY CONTROL    Y01676
*                                      WITH BLANK CHARACTER      Y01676
WRITE    EQU   *                                                 Y01676
         MVC   COWORD1(INTCY4),CAPTCDCB  PUT ADDRESS OF CURRENT
*                                      UTILITY DCB IN COWORD1
         MVI   COWORD1,LAST            PUT X'20' IN HIGH ORDER BYTE OF
*                                      1ST PARAM. WORD
         LA    TESTREG,GETAD
         ST    TESTREG,COWORD2         PUT STARTING ADDRESS OF RECORD
*                                      IN UTILITY DATA SET IN 2ND
*                                      PARAM. WORD
         MVI   COWORD2,END             PUT X'80' IN HIGH ORDER BYTE OF
*                                      2ND PARAM. WORD
         LA    UTREG,COWORD1           LET UTREG PT. TO PARMLIST
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),(UTREG)),MF=(E,A)
         LTR   RETCDREG,RETCDREG       TEST RETURN CODE FROM IKJEBEUT
         BNZ   EX                      BRANCH IF NOT ZERO TO EX
SET      B     READ                    BRANCH IF ZERO TO READ NEXT REC.
         SPACE 2
**************************************************************** Y01676
*   DCB EXIT - ESTABLISH NO. OF BFRS. TO BE USED FOR COPY        Y01676
**************************************************************** Y01676
INDCBEXT EQU   *                                                 Y01676
         SR    WORKREG,WORKREG                                   Y01676
         IC    WORKREG,DCBBUFNO        OBTAIN BUFNO VALUE        Y01676
         LTR   WORKREG,WORKREG         CHECK FOR ZERO            Y01676
         BNZ   INDCBEX1                IF NOT, BYPASS TENTATIVE  Y01676
*                                      DEFAULT OF BUFNO VALUE    Y01676
         LA    WORKREG,INTCY3          TENTATIVE BUFNO VAL. IS 3 Y01676
INDCBEX1 EQU   *                                                 Y01676
         SR    PARMREG0,PARMREG0                                 Y01676
         LH    PARMREG1,COMAXBUF       DIVIDEND IS MAX. BFR.     Y01676
*                                      STORAGE                   Y01676
         LH    RETCDREG,DCBBLKSI       DIVISOR IS BLKSIZE        Y01676
         DR    PARMREG0,RETCDREG       COMPUTE BUFNO VALUE BASED Y01676
*                                      ON MAX. BFR. STORAGE      Y01676
         CR    PARMREG1,WORKREG                                  Y01676
         BL    INDCBEX3                IF COMPUTED<TENTATIVE,    Y01676
*                                      USE TENTATIVE VALUE       Y01676
         CH    PARMREG1,COMBUFNO       CHECK FOR BUFNO<10        Y01676
         BL    INDCBEX2                IF SO, BR TO USE COMPUTED Y01676
*                                      VALUE                     Y01676
         MVC   DCBBUFNO,COMBUFNO+INTCY1 SPECIFY 10 BUFFERS USED  Y01676
         BR    RETREG                  RETURN TO OPEN            Y01676
INDCBEX2 STC   PARMREG1,DCBBUFNO       STORE COMPUTED VALUE IN   Y01676
*                                      DCB.                      Y01676
         BR    RETREG                  RETURN TO OPEN            Y01676
INDCBEX3 LA    PARMREG1,INTCY3         OBTAIN BUFNO MINUMUM      Y01676
         CR    WORKREG,PARMREG1        COMPARE DCBBUFNO VALUE    Y01676
         BL    INDCBEX2                DCB VALUE LOW,USE MINIMUM Y01676
         STC   WORKREG,DCBBUFNO        STORE DEFAULT (OR         Y01676
*                                      OR ORIGINAL) BUFNO IN DCB Y01676
         BR    RETREG                  RETURN TO OPEN            Y01676
         SPACE 2
***********************************************************************
*    END OF FILE PROCESSING
***********************************************************************
INEOF    TM    CORDFLAG,READFLAG       TEST WHETHER 1ST READ FLAG IS ON
         BO    OUT                     BRANCH IF ON TO OUT
         SR    TEMPREG,TEMPREG         SET RET. CODE TO ZERO IN TEMPREG
         NI    CACFLAG2,ALL-CADSMODS   TURN DATA SET MODIFIED
*                                      SWITCH OFF
         TM    CORDFLAG,TRNCFLAG       CHECK FOR TRUNCATED RCDS  A50471
         BZ    CLOSED                  IF NONE, BRANCH TO CLOSE  A50471
         BAL   WORKREG,ISSUE5          OTHERWISE, SEND ERROR MSG A50471
         B     CLOSED                  BRANCH UNCOND. TO CLOSE EXISTING
*                                      DATA SET
OUT      LA    TEMPREG,INTCY4          SET RETURN CODE TO 4 (EXISTING
*                                      DATA SET IS EMPTY)
         B     CLOSED                  BRANCH UNCOND. TO CLOSE EXISTING
*                                      DATA SET
         SPACE 2
***********************************************************************
*    SYNCHRONOUS ERROR (SYNAD) PROCESSING
***********************************************************************
INSYNAD  SYNADAF  ACSMETH=QSAM         DIAGNOSE I/O ERROR
         LA    TESTREG,M3092IN1
         STH   TESTREG,OFFSET2         PUT OFFSET VALUE IN OFFSET2
         B     M135                    BRANCH UNCOND. TO M135
COMBINE3 XC    COBUILD2(INTCY4),COBUILD2  PUT 0 IN PTR FIELD OF
*                                         COBUILD2
         MVC   COBUILD2+INTCY4(INTCY2),INDC82 PUT (LENGTH OF SYNADAF
*                                             MESSAGE) +4 IN 5TH &
*                                             6TH BYTES OF COBUILD2
         MVC   COBUILD2+INTCY6(INTCY2),OFFSET2 PUT OFFSET IN 7TH &
*                                              8TH BYTES OF COBUILD2
         MVC   COBUILD2+INTCY8(INTCY78),INTCY50(PARMREG1)  PUT SYNADAF
*                                                       MESSAGE IN
*                                                       COBUILD2
         SPACE 2
***********************************************************************
*    SYNADRLS MACRO IS ISSUED TO RELEASE THE BUFFER TO THE SYSTEM
***********************************************************************
         SYNADRLS
         TM    CAEDFLAG,CAEDINCP       TEST WHETHER INITIAL COPY IS TO
*                                      BE PERFORMED ON EDIT DATA SET
*                                      OR SAVE DATA SET
         BO    EDSN2                   EDIT DATA SET THEN GO TO EDSN2
         SPACE 2
***********************************************************************
*    MSG4- 'DATA SET (SAVE DSNAME) NOT USABLE+.  I/O SYNAD ERROR
*    (SYNADINFO)' IS ISSUED HERE
***********************************************************************
         MVC   B(INTCY12),INLIST3
ISSUE3   IKJEBEML M309,M3092,CADSNPT2,MF=(E,B)
         B     EX                      BRANCH UNCOND. TO EX
EDSN2    EQU   *
         SPACE 2
***********************************************************************
*    MESSAGE3- 'DATA SET (EDIT DSNAME) NOT USABLE+.  I/O SYNAD ERROR
*    (SYNADINFO)' IS ISSUED HERE
***********************************************************************
         MVC   B(INTCY12),INLIST3
ISSUE4   IKJEBEML M309,M3092,CADSNPTR,COBUILD2,MF=(E,B)
         SPACE 2
***********************************************************************
*    IKJEBEEX IS CALLED TO TERMINATE THE EDIT ACCESS METHOD
***********************************************************************
EX       L     PARMREG0,CAPTCDCB       PUT ADDRESS OF CURRENT UTILDCB
*                                      IN PARMREG0
         LR    PARMREG1,COMMREG        LET PARMREG1 POINT TO COMM.
*                                      AREA
         LINK  EP=IKJEBEEX
         B     UNSUC                   BRANCH UNCOND. TO UNSUC.
         EJECT
**************************************************************** A50471
*                                                                A50471
* SUBROUTINE BELOW MOVES INPUT RECORDS OBTAINED BY GET-LOCATE    A50471
* LOGIC.  THIS IS ITS ONLY FUNCTION WHEN RECFM IS F OR FB.  WITH A50471
* VARIABLE RECORDS, A POSSIBILITY EXISTS FOR THE RECORD LL TO    A50471
* EXCEED CALRECL. IN THIS CIRCUMSTANCE, THE RECORD IS TRUNCATED  A50471
* (LL= CALRECL), AND A SWITCH IS SET TO INDICATE THAT RECORD(S)  A50471
* HAVE BEEN TRUNCATED. A COUNT OF TRUNCATED RECORDS (TRNCOUNT)   A50471
* IS MAINTAINED IN THE WORK AREA FOR THE INITIAL COPY ROUTINE.   A50471
*                                                                A50471
**************************************************************** A50471
MOVETRNC EQU   *                                                 A50471
         LH    TESTREG,DCBLRECL          OBTAIN RECORD LL        A50471
         CH    TESTREG,CALRECL           COMPARE TO CALRECL      A50471
         SPACE
*  NOTE -- RECORD LL CAN EXCEED CALRECL ONLY FOR VARIABLE        A50471
*  RECORDS WHOSE LL EXCEEDS LRECL IN THE FORMAT 1 DSCB.          A50471
         SPACE
         BH    MVTRTRNC                  BRANCH TO TRUNCATE IF   A50471
*                                        LL > DATA SET LRECL     A50471
         BCT   TESTREG,MVTRMOVE          DECREMENT LENGTH FOR    A50471
*                                        MOVE AND BRANCH TO EXEC A50471
MVTRTRNC EQU   *                                                 A50471
         LH    TESTREG,CALRECL           OBTAIN TRUNCATION LEN.  A50471
         TM    CORDFLAG,TRNCFLAG         TEST FOR PREVIOUS TRNC. A50471
         BZ    MVTR1ST                   IF NONE PREVIOUSLY, SET A50471
*                                        SWITCH AND INIT. COUNT  A50471
         LH    BINREG,TRNCOUNT           OBTAIN COUNT OF TRNC'S  A50471
         LA    BINREG,INTCY1(,BINREG)    INCREMENT COUNT         A50471
         B     MVTRUPDT                  BRANCH TO TRUNCATE REC. A50471
MVTR1ST  EQU   *                                                 A50471
         LA    BINREG,INTCY1             INITIAL COUNT IS 1      A50471
         OI    CORDFLAG,TRNCFLAG         INDICATE REC. TRUNCATED A50471
MVTRUPDT EQU   *                                                 A50471
         STH   BINREG,TRNCOUNT           SAVE TRUNCATION COUNT   A50471
         MVC   INTCY0(INTCY2,PARMREG1),CALRECL TRUNCATE RECORD   A50471
         BCTR  TESTREG,PARMREG0          DECREMENT LEN FOR MVC   A50471
MVTRMOVE EQU   *                                                 A50471
         EX    TESTREG,MVTRMVC           MOVE RECORD - INPUT BFR A50471
         BR    WORKREG                   RETURN TO CALLER        A50471
         EJECT
**************************************************************** A50471
* THE FOLLOWING SUBROUTINE FORMATS THE INFORMATIONAL MESSAGE FOR A50471
* TRUNCATED VARIABLE RECORDS AND REQUESTS MESSAGE OUTPUT VIA THE A50471
* MESSAGE SELECTION ROUTINE (IKJEBEMS).                          A50471
**************************************************************** A50471
         SPACE
ISSUE5   EQU   *
         LH    BINREG,TRNCOUNT         OBTAIN COUNT OF TRUNCATED A50471
*                                      LINES                     A50471
         CH    BINREG,INDC1            CHECK FOR COUNT = ONE     A50471
         BH    ISSUE510                IF NOT, BR TO PROCESS 3   A50471
*                                      INSERTIONS                A50471
         LA    ADDREG,SINGTRNC         OBTAIN ADDRESS OF SINGLE  A50471
*                                      INSERTION OTHERWISE       A50471
         B     ISSUE520                BRANCH TO PUT MESSAGE     A50471
ISSUE510 EQU   *
         MVC   MS5INS2(TRINSLEN),MULTTRNC MOVE 2ND AND 3RD       A50471
*                                      INSERTIONS TO WORK AREA   A50471
         LA    ADDREG,MS5INS3          CHAIN 3RD INSERTION       A50471
         ST    ADDREG,MS5INS2          TO 2ND INSERTION LIST     A50471
         CVD   BINREG,COPACKED         CONVERT COUNT TO DECIMAL  A50471
         MVC   EDITMASK,EDITPTRN       MOVE EDIT PATTERN TO      A50471
*                                      WORK AREA                 A50471
         EDMK  EDITMASK,COPACKED+INTCY3 SUPPRESS LEADING ZEROES  A50471
         LA    BINREG,EDITMASK+INTCY10 ADDRESS OF BYTE THAT      A50471
*                                      FOLLOWS MASK              A50471
         SR    BINREG,PARMREG1         COMPUTE LENGTH OF TEXT    A50471
         BCTR  BINREG,PARMREG0         DECREMENT LENGTH FOR MVC  A50471
         EX    BINREG,ISSUE5MV         MOVE INSERTION TEXT       A50471
         LA    BINREG,INTCY5(,BINREG)  COMPUTE INSERTION LENGTH  A50471
         STH   BINREG,MS5LEN1          SET LENGTH IN LIST        A50471
         LA    BINREG,M344IN1          OBTAIN OFFSET FOR INS. 1  A50471
         STH   BINREG,MS5OFF1          SET OFFSET IN LIST        A50471
         LA    ADDREG,MS5INS2          CHAIN 2ND INSERTION LIST  A50471
         ST    ADDREG,MS5INS1          TO FIRST INSERTION LIST   A50471
         LA    ADDREG,MS5INS1          ADDRESS OF INSERTION      A50471
*                                      CHAIN                     A50471
ISSUE520 IKJEBEML M344,0,(ADDREG),0,MF=(E,B) PUT MESSAGE         A50471
         BR    WORKREG                 RETURN TO CALLER          A50471
         EJECT
***********************************************************************
*    CONSTANT AREA FOR IKJEBECO
***********************************************************************
INDC1    DC    H'1'                    CONSTANT FOR COMPARES     A50471
INDC4    DC    F'4'                    FULLWORD OF 4
INDC82   DC    H'82'                   HALFWORD OF 82
H13      DC    H'13'                   HALFWORD CONSTANT 13      A45155
COMAXBUF DC    X'2800'                 MAXIMUM BUFFER STORAGE IF Y01676
*                                      MORE THAN 3 BUFFERS TO BE Y01676
*                                      USED IN THE COPY OPER.    Y01676
COMBUFNO DC    H'10'                   UPPER LIMIT ON NO. OF     Y01676
*                                      BFRS USED IN COPY         Y01676
EDITPTRN DC    X'40202020202020202020' PATTERN FOR EDMK OP.      A50471
PACKED   PACK  COPACKED(INTCY8),INTCY0(INTCY0,TESTREG)
MOVEINS1 MVC   INS1TXT(L0),D0(TESTREG) MOVE INSERTION TEXT FOR   A45155
*                                      INVALID LINE NUMBER       A45155
MOVEINS2 MVC   INS2TXT(L0),D0(WORKREG) MOVE PRECEDING LINE       A45155
*                                      NUMBER TO INSERTION       A45155
ISSUE5MV MVC   MS5TXT1(INTCY0),INTCY0(PARMREG1) MOVE INSERTION   A50471
*                                      FOR MSG. IKJ52344I        A50471
MVTRMVC  MVC   INTCY0(INTCY0,ADDREG),INTCY0(PARMREG1) MOVE       A50471
*                                      RECORD TO INPUT BUFFER    A50471
         SPACE 2
*    LIST FORMS OF IKJEBEML MACRO
INLIST1  IKJEBEML M309,M3091,,MF=L
INLIST3  IKJEBEML M309,M3092,,,MF=L
INLIST5  IKJEBEML M338,,,MF=L
         SPACE 2
*    IKJEBEMG MACROS FOR LOCAL INSERTION LISTS                   A50471
*    NOTE -- THESE MACROS MUST BE MAINTAINED IN EXISTING ORDER   A50471
         SPACE
MULTTRNC IKJEBEMG 0,M344IN2,'S'        IKJ52344I - 2ND INSERTION A50471
MULTTRN2 IKJEBEMG 0,M344IN3,'S'        IKJ52344I - 3RD INSERTION A50471
TRINSLEN EQU   *-MULTTRNC              LENGTH OF COMBINED LISTS  A50471
         SPACE
SINGTRNC IKJEBEMG 0,M344IN1,'1'        IKJ52344I - 1ST INSERTION A50471
         SPACE 2
INDCB    DCB   DSORG=PS,MACRF=GL,SYNAD=INSYNAD,EODAD=INEOF,      Y01676X
               EXLST=INDCBEXL                                    Y01676
INDCBEND EQU   *
INDCBL   EQU   INDCBEND-INDCB
INDCBEXL DS    0F                      ALIGNMENT.                Y01676
         DC    X'85'                   SPECIFY DCB EXIT FOR OPEN Y01676
         DC    AL3(INDCBEXT)           DCB EXIT ADDRESS          Y01676
INOPEN   OPEN  (,(INPUT)),MF=L         LIST FORM OF OPEN MACRO
OPENEND  EQU   *
INOPENL  EQU   OPENEND-INOPEN
INCLOSE  CLOSE (,),MF=L                LIST FORM OF CLOSE MACRO
CLOSEND  EQU   *
INCLOSEL EQU   CLOSEND-INCLOSE
         DCBD  DSORG=PS,DEVD=DA
         IKJEBECA
         ORG   CASRWKA                 EDIT SERVICE ROUTINE
*                                      WORK AREA
COOPENPL DS    F                       FULLWORD FOR EXEC FORM OF
*                                      OPEN MACRO
COWORD1  DS    F                       1ST PARAM WORD FOR UT
COWORD2  DS    F                       2ND PARAM WORD FOR UT
A        DS    5F                      5 FULLWORDS FOR SH MACRO
COPACKED DS    D                       DOUBLE WORD FOR CONVERTING
*                                      ZONED DEC. INTO PACKED DEC.
TRULINE  DS    F                       LOCATION FOR STARTING ADDRESS
*                                      OF LINE NO.
COINDCB  DS    24F                     STORAGE FOR DCB            M4276
TRNCOUNT DS    H                       COUNT OF TRUNCATED LINES  A50471
EDITMASK DS    CL10                    MASK FOR EDMK INSTRUCTION A50471
CORDFLAG DS    X                       1ST TIME READ SWITCH
READFLAG EQU   X'80'                   1ST TIME READ (1-YES)     A50471
TRNCFLAG EQU   X'40'                   VARIABLE RECORDS          A50471
*                                      TRUNCATED (1-YES)         A50471
SW       DS    X                       SWITCH
OFFSET2  DS    H                       1ST INSERTION FOR 2ND 2ND-
*                                      LEVEL MESSAGE OF MSG3
         ORG   CATEMPBF                TEMPORARY BUFFER POOL
GETAD    DS    66F                     STORAGE FOR LOGICAL REC.  A50471
*                                      MACRO
B        DS    10F                     10 FULLWORDS FOR ML MACRO
INSWKA   DS    22F                     INSERTION WORK AREA       A50471
         ORG   INSWKA                  GENERAL ORGANIZATION      A50471
COBUILD2 DS    22F                     INSERT. BFR FOR ML MACRO  A50471
         ORG   INSWKA                  ORGANIZATION FOR IKJ52337 A50471
MSGPTR   DS    F                       POINTER TO NEXT INSERTION A45155
MSGLEN   DS    H                       LENGTH OF INSERTION       A45155
MSGOFF   DS    H                       OFFSET OF INSERTION IN    A45155
*                                      BASIC MESSAGE             A45155
MSGTEXT  DS    CL8                     TEXT OF INSERTION         A45155
INS1PTR  DS    F                       POINTER TO NEXT INSERTION A45155
INS1LEN  DS    H                       LENGTH OF INSERTION       A45155
INS1OFF  DS    H                       OFFSET OF INSERTION IN    A45155
*                                      BASIC MESSAGE             A45155
INS1TXT  DS    12C                     TEXT OF INSERTION         A45155
INS2PTR  DS    F                       POINTER TO NEXT INSERTION A45155
INS2LEN  DS    H                       LENGTH OF INSERTION       A45155
INS2OFF  DS    H                       OFFSET OF INSERTION IN    A45155
*                                      BASIC MESSAGE             A45155
INS2TXT  DS    12C                     TEXT OF INSERTION         A45155
         ORG   INSWKA                  ORGANIZATION FOR IKJ52344 A50471
MS5INS1  DS    F                       CHAIN WORD - INSERTION 1  A50471
MS5LEN1  DS    H                       LENGTH - INSERTION 1      A50471
MS5OFF1  DS    H                       OFFSET - INSERTION 1      A50471
MS5TXT1  DS    8C                      TEXT - INSERTION 1        A50471
         DS    0F                      ALIGNMENT ONLY            A50471
MS5INS2  DS    9C                      INSERTION LIST 2          A50471
         DS    0F                      ALIGNMENT ONLY            A50471
MS5INS3  DS    9C                      INSERTION LIST 3          A50471
         ORG   ,                       END OF WORK AREA ORG.     A50471
         END
