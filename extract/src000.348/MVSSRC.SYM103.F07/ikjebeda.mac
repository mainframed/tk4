          TITLE  'TSO EDIT COMMAND   DATA SET ALLOC-UNALLOC  IKJEBEDA'
IKJEBEDA CSECT
*A371100,371820                                                  A45715
*C370500-371000,371700-371800,371900-371920,371960               A45715
*A398500-399600,844200-844300                                   YA00002
*D844100                                                        YA00002
*A294405-294425,372005-372270,844105-844120                      Y01676
*C396000,462900,528000,529800                                    Y01676
*D294900-294960                                                  Y01676
*C386000,529350                                                @YA01909
*D398500-399600,400000-424000,545500-598000,673500-698000      @YA01909
*A184050,386500-389000,398010-398350,438300-438600,            @YA01909
*A845090-845900,878100-878900                                  @YA01909
*D544500-782200                                                @YA01909
*D167000,184300,185200-186600,229600,260600-261200,267000      @YA01909
*D832000-842000,844200,884000-92000,943000                     @YA01909
*C29800-30200                                                  @YA03621
*D31800-322000                                                 @YA03621
*A316500                                                       @YA03621
*A166700,170600-171200,443260-443930,449000-453000             @YA03621
*A443580-443600,443750,443766-443772,443960,449700-450400      @YA07252
*A452600-452700                                                @YA07252
*            USE SYSGEN DEFAULT BLOCKSIZE FOR RUN              @ZA13879
*            MERGE TO EMPTY, VB DATA SET                       @ZA14272
***********************************************************************
*                                                                     *
* STATUS -- VERSION NO. 01, OS/360 RELEASE NO. 20                     *
*                                                                     *
* FUNCTION -- IKJEBEDA WILL BE CALLED TO                              *
*    1) ALLOCATE A SEQUENTIAL DATA SET WITH DISPOSITION NEW, CATLG,   *
*    DELETE                                                           *
*    2) MARK A DSE ENTRY NOT-IN-USE                                   *
*    3) UNALLOCATE A SEQUENTIAL DATA SET                              *
*    FOR ALLOCATION A DSNAME WILL BE GENERATED IN THE FORM-           *
*    'USERID.SUBCOMMANDNAME.DYYDDD.TTTTTTTT'                          *
*    IKJDAIR IS INVOKED FOR ALLOCATION AND UPON RETURN, THE DSNAME,   *
*    LENGTH AND DDNAME ARE SAVED IN THE COMMUNICATION AREA. IKJDAIR   *
*    IS INVOKED ALSO TO MARK THE DSE ENTRY AND FOR UNALLOCATION.      *
*                                                                     *
* ENTRY POINTS -- IKJEBEDA, MAIN ENTRY POINT                          *
*                                                                     *
* INPUT -- REGISTER 1 POINTS TO THE COMMUNICATION AREA WHERE CASAFLAG *
*    HAS BEEN INITIALIZED TO ONE OF THE FOLLOWING-                    *
*    XXX0 XX0X  FIRST ALLOCATION REQUEST                              *
*    XXX1 XX0X  FIRST MARK DSE REQUEST                                *
*    XXX0 XX1X  SECOND ALLOCATION REQUEST                             *
*    XXX1 XX1X  FIRST UNALLOCATION REQUEST                            *
*                                                                     *
* OUTPUT -- TWO RETURN CODES ARE POSSIBLE                             *
*                                                                     *
*    0 - NORMAL RETURN                                                *
*                                                                     *
*    4 - REQUESTED ACTION UNSUCCESSFUL                                *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         IKJDAIR   TMP SERVICE ROUTINE, ALLOCATES AND UNALLOCATES    *
*                   THE QSAM DATA SET.                                *
*                                                                     *
*         IKJEFF18  DAIRFAIL(DYNAMIC ALLOC. ERROR DIAGNOSIS RTN.)     *
*                                                                     *
*         IKJEBEMS  EDIT MESSAGE SELECTION ROUTINE, CAUSES TERMINAL   *
*                   MESSAGES TO BE PRINTED.                           *
*                                                                     *
*         MACROS USED                                                 *
*                                                                     *
*         IKJEBEMI  MESSAGE MACRO                                     *
*                                                                     *
*         IKJEBEML  CREATES PARAMETER LIST FOR IKJEBEMS               *
*                                                                     *
*         IKJEBESV  ENTRY LINKAGE                                     *
*                                                                     *
*         IKJEBERT  EXIT LINKAGE                                      *
*                                                                     *
*         IKJEBEMG  CREATES PARMLIST FOR MESSAGE INSERTIONS           *
*                                                                     *
*         IKJEBECA  DEFINES COMMUNICATION AREA DSECT                  *
*                                                                     *
*         IKJDAPL   DEFINES IKJDAIR PARAMETER LIST.                   *
*                                                                     *
*         IKJDAP08  DEFINES IKJDAIR PARAMETER BLOCK FOR ENTRY CODE 8  *
*                                                                     *
*         IKJDAP18  DEFINES IKJDAIR PARAMETER BLOCK FOR ENTRY CODE 18 *
*                                                                     *
*         IKJDAP2C  DEFINES PARAMETER BLOCK FOR DAIR ENTRY CODE 2C.   *
*                                                                     *
*         TIME      SYSTEM MACRO - RETURNS DATE AND TIME IN REGISTERS *
*                   0 AND 1                                           *
*                                                                     *
*         LINK      SYSTEM MACRO - PASSES CONTROL TO IKJDAIR          *
*                   AND TO DAIRFAIL(IKJEFF18)                         *
*                                                                     *
* EXITS, NORMAL -- TO INVOKING MODULE WITH RETURN CODE IN REGISTER 15 *
*                                                                     *
* EXITS, ERROR -- NONE                                                *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    1) IKJEBECA, EDIT COMMUNICATION AREA                             *
*    2) DATRTAB, TRANSLATION TABLE                                    *
*    3) DARCTAB, PRINTABLE CHARACTER RETURN CODE TABLE                *
*                                                                     *
* ATTRIBUTES -- REFRESHABLE, ENABLED, NON-PRIVILEGED                  *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- NONE                                   *
*                                                                     *
* NOTES -- STANDARD CONVENTIONS                                       *
*                                                                     *
***********************************************************************
         EJECT
*THE FOLLOWING EQU'S ALLOW SYMBOLIC ADDRESSING OF REGISTERS
PARMREG0 EQU   0                       CONTAINS TIME AFTER TIME MACRO
PARMREG1 EQU   1                       CONTAINS DATE AFTER TIME MACRO,
*                                      ADDRESSES SR PARMLIST AND
*                                      DAIR PARMLIST DSECT
DSECTREG EQU   2                       ADDRESSES PARM BLOCK DSECTS
DISPREG  EQU   3                       CONTAINS DISPLACEMENT TO CURRENT
*                                      POSITION IN DSNAME
OPREG    EQU   4                       CONTAINS ADDRESS OF QUALIFIER TO
*                                      BE MOVED TO DSNAME
LENREG   EQU   5                       CONTAINS LENGTH OF QUALIFIER
*                                      BEING MOVED
TLNREG   EQU   6                       CONTAINS TOTAL LENGTH OF DSNAME
WKREG    EQU   7                       GENERAL REGISTER
UPTREG   EQU   8                       ADDRSABILITY TO UPT     @YA03621
COMMREG  EQU   9                       CONTAINS ADDR OF COMMUNICATION
*                                      AREA
DAPREFIX EQU   10                      PTR TO USERID/PREFIX    @YA03621
*                                      IN UPT                  @YA03621
BASEREG  EQU   11                      USED BY IKJEBESV MACRO
SAVEREG  EQU   13                      CONTAINS ADDR OF SAVE AREA
RETREG   EQU   14                      CONTAINS ADDR OF RETURN ENTRY PT
RETCDREG EQU   15                      CONTAINS RET CODE FROM IKJDAIR
         SPACE
*THE FOLLOWING EQU'S ALLOW SYMBOLIC REFERENCE TO CHARACTER AND
*DECIMAL CONSTANTS
KZERO    EQU   0                       CONSTANT OF 0           @YA01909
KONE     EQU   1                       CONSTANT OF 1
KTWO     EQU   2                       CONSTANT OF 2
KFIVE    EQU   5                       CONSTANT OF 5
KSEVEN   EQU   7                       CONSTANT OF 7
KEIGHT   EQU   8                       CONSTANT OF 8
K16      EQU   16                      CONSTANT OF 16
K23      EQU   23                      CONSTANT OF 23
K27      EQU   27                      CONSTANT OF 27
K43      EQU   43                      CONSTANT OF 43
K76      EQU   76                      CONSTANT OF 76
K80      EQU   80                      CONSTANT OF 80
         SPACE
D0       EQU   0                       DISPLACEMENT OF 0
D1       EQU   1                       DISPLACEMENT OF 1
D2       EQU   2                       DISPLACEMENT OF 2
D3       EQU   3                       DISPLACEMENT OF 3
D4       EQU   4                       DISPLACEMENT OF 4
D8       EQU   8                       DISPLACEMENT OF 8
         SPACE
DAOFF    EQU   X'00'                   BIT MASK
DAUP     EQU   X'0F'                   BIT MASK
DAON     EQU   X'80'                   BIT MASK
DAEC8    EQU   X'08'                   DAIR ENTRY CODE 08
DAEC18   EQU   X'18'                   DAIR ENTRY CODE 18
DAEC2C   EQU   X'2C'                   DAIR ENTRY CODE 2C
DAOPC    EQU   X'01'                   DAIR OPTION CODE 01
DASCRTCH EQU   X'10'                   SCRATCH DS INDICATOR
DAALL    EQU   X'FF'                   BIT MASK
DADOT    EQU   C'.'                    CHARACTER PERIOD
DACD     EQU   C'D'                    CHARACTER D
DACM     EQU   C'M'                    CHARACTER M
DACT     EQU   C'T'                    CHARACTER T
DABLANK  EQU   C' '                    CHARACTER BLANK
         SPACE
LENGTH   EQU   0                       CONSTANT OF 0
NOBR     EQU   0                       CONSTANT OF 0
         EJECT
***********************************************************************
         IKJEBESV (14,12),,*           ENTRY LINKAGE
         SPACE
         USING IKJEBECA,COMMREG        ADDRESSIBILITY TO
*                                      COMMUNICATIONS AREA
         XC    DADAIR(K76),DADAIR      ZERO PARM BLOCK
         LA    PARMREG1,CATMPLST       ADDR OF TMP SR PARMLIST
         USING DAPL,PARMREG1           ADDRESSABILITY OF DAPL DSECT
         L     WKREG,CAPTTMP           ADDR OF TMP PARMLIST
         L     OPREG,CPPLPSCB-CPPL(WKREG) ADDR OF PSCB
         ST    OPREG,DAPLPSCB          FOURTH WD OF PARMLIST
         NI    DALAST,DAOFF            SET SW TO ZERO
         TM    CASAFLAG,CASADISP       DISP=OLD -- UNALLOC
         BO    DA000400                BR YES TO SET UP UNALLOC
         LA    DSECTREG,DAPARM8        ADDR OF ALLOC PARMBLOCK
         ST    DSECTREG,DAPLDAPB       FIFTH WD OF PARMLIST
         USING DAPB08,DSECTREG         ADDRESSABILITY OF PBLOCK DSECT
         MVI   DA08DDN,DABLANK         BLANK OUT
         MVC   DA08DDN+D1(K23),DA08DDN DDNAME AND MEMBER NAME
         MVC   DA08MNM(K16),DA08DDN    AND PASSWORD
         MVI   DA08CD+D1,DAEC8         ENTRY CODE 08
         TM    CASAFLAG,CASAUNCG       SECOND ALLOCATION
         BO    DA000250                BR YES
         MVI   DADSN8,DABLANK          INIT DSNAME TO BLANKS
         MVC   DADSN8+D1(K43),DADSN8   PROPAGATE BLANKS
         LA    DISPREG,DADSNL8         ADDR OF DSNAME LENGTH
         ST    DISPREG,DA08PDSN        PTR TO DSNAME AND LENGTH
         MVI   DA08DSP1,DA08NEW        DISP1=NEW
         MVI   DA08DPS2,DA08DEL        DISP2=DELETE
         MVI   DA08DPS3,DA08DELE       DISP3=DELETE
         MVI   DA08CTL,DA08PERM        PERMANENT ALLOCATION
         TM    CASAFLG2,CASANCTG       CHECK IF DISP OF NEW,     Y01676
*                                      CATALOG APPLIES           Y01676
         BZ    DA000000                IF NOT BR TO GENERATE     Y01676
*                                      DSNAME                    Y01676
         MVI   DA08DPS2,DA08CAT        SET DISP. 2 TO 'CATLG'    Y01676
         EJECT
***********************************************************************
*                                                                     *
*THE FIRST QUALIFIER, 'USERID', IS APPENED BY DAIR.                   *
*THE SECOND QUALIFIER, 'SUBCOMMANDNAME', IS OBTAINED                  *
*FROM THE COMMUNICATION AREA AND MOVED TO DSNAME. THE THIRD AND FOURTH*
*QUALIFIERS 'DYYDDD' AND 'TTTTTTTT' (DATE AND TIME), ARE OBTAINED BY  *
*ISSUING THE SYSTEM TIME MACRO, UNPACKING THE RESULTS AND MOVING THEM *
*TO DSNAME.                                                           *
***********************************************************************
DA000000 EQU   *
         LA    DISPREG,KTWO(DISPREG)   PTR TO DSNAME
         SR    TLNREG,TLNREG           TOTAL LENGTH INIT TO 0
         OI    DA08CTL,DA08UID         APPEND USERID           @YA03621
         L     OPREG,CAPTSCMD          ADDR OF SUBCOMMMAND NAME
         LH    LENREG,CASCMDLN         LENGTH OF SUBCOMMAND NAME
         BAL   WKREG,DAMOVE            BR TO MOVE ROUTINE
         TIME
         SPACE
         MVI   D0(DISPREG),DACD        MOVE 'D' TO DSNAME
         LA    DISPREG,KONE(DISPREG)   ADD ONE TO DISPLACEMENT
         LA    TLNREG,KONE(TLNREG)     ADD ONE TO TOTAL LENGTH
         ST    PARMREG1,DAUNPK         DATE IN PACKED DECIMAL
         OI    DAUNPK+D3,DAUP          OR LAST BYTE WITH X'0F'
         UNPK  DAUNPK2,DAUNPK          UNPACK DATE
         LA    OPREG,DAUNPK2+D3        PTR TO DATE
         LA    LENREG,KFIVE            LENGTH=5
         BAL   WKREG,DAMOVE            BR TO MOVE ROUTINE
         ST    PARMREG0,DAUNPK         TIME IN PACKED DECIMAL
         OI    DAUNPK+D3,DAUP          OR LAST BYTE WITH X'0F'
         UNPK  DAUNPK2,DAUNPK          UNPACK TIME
         MVI   D0(DISPREG),DACT        MOVE 'T' TO DSNAME
         LA    DISPREG,KONE(DISPREG)   ADD ONE TO DISPLACEMENT
         LA    TLNREG,KONE(TLNREG)     ADD ONE TO TOTAL LENGTH
         LA    OPREG,DAUNPK2           PTR TO TIME
         LA    LENREG,KSEVEN           LENGTH=7
         BAL   WKREG,DAMOVE            BR TO MOVE ROUTINE
         LA    LENREG,KEIGHT           SET MAXIMUM LENGTH=8      A45715
         LA    OPREG,CADSQUAL+KSEVEN   ADDRESS OF LAST BYTE OF   A45715
*                                       DATA SET QUALIFIER FIELD A45715
DA000005 EQU   *
         CLI   D0(OPREG),DABLANK       IS CHARACTER = ' '
         BNE   DA000006                BR NO TO MOVE QUALIFIER   A45715
         BCTR  OPREG,NOBR              DECREMENT DISPLACEMENT IN A45715
*                                         QUALIFIER FIELD BY ONE A45715
         BCT   LENREG,DA000005         DECREMENT LENGTH BY ONE,  A45715
*                                         BR TO REPEAT COMPARE   A45715
DA000006 EQU   *
         LA    OPREG,CADSQUAL          PTR TO DS QUALIFIER FIELD A45715
         OI    DALAST,DAON             TURN ON LAST TIME SWITCH
         BAL   WKREG,DAMOVE            BR TO MOVE QUALIFIER
         STH   TLNREG,DADSNL8          TOTAL LENGTH OF DSNAME
         EJECT
***************************************************************  Y01676
*                                                                Y01676
*THE SECTION BELOW ESTABLISHES THE BLOCKSIZE OF THE QSAM         Y01676
*UTILITY DATA SET, AND REQUESTS APPROPRIATE DIRECT ACCESS        Y01676
*SPACE FOR THE DATA SET.                                         Y01676
*                                                                Y01676
***************************************************************  Y01676
         SPACE
         LH    PARMREG0,CABLKS         OBTAIN QSAM UTILITY     @ZA13879
*                                      TENTATIVE BLOCKSIZE       Y01676
         TM    CACFLAG2,CARECFM        CHECK IF EDIT DATA SET    Y01676
*                                      OF VARIABLE FORMAT        Y01676
         BZ    DA000010                IF SO, USE TENTATIVE      Y01676
*                                      BLOCKSIZE                 Y01676
         LH    PARMREG1,CABLKS         OTHERWISE, OBTAIN       @ZA13879
*                                      TENTATIVE BLOCKSIZE       Y01676
*                                      FOR USE IN COMPUTATION    Y01676
*                                      OF THE FINAL COPY BLOCK   Y01676
*                                      SIZE.                     Y01676
         SR    PARMREG0,PARMREG0       CLEAR 1ST HALF DIVIDEND   Y01676
         LH    WKREG,CALRECL           OBTAIN LRECL OF DATA SET  Y01676
         SH    WKREG,CONTRLEN          ADJUST LENGTH FOR         Y01676
*                                      CONTROL WORD IN RECORDS   Y01676
         DR    PARMREG0,WKREG          DIVIDE BLKSIZE BY LRECL   Y01676
         SH    PARMREG0,CABLKS         SUBTRACT QSAM BLKSIZE   @ZA13879
*                                      FROM REMAINDER            Y01676
         LCR   PARMREG0,PARMREG0       COMPLEMENT FOR VALID      Y01676
*                                      BLOCK SIZE                Y01676
DA000010 EQU   *                                                 Y01676
         STH   PARMREG0,CABLK2         SPECIFY FINAL COPY        Y01676
*                                      BLOCKSIZE                 Y01676
         LR    WKREG,PARMREG0          SAVE IT FOR DAIR INIT   @ZA14272
         SR    PARMREG0,PARMREG0       CLEAR REGISTER            Y01676
         L     PARMREG1,CAUTILNO       OBTAIN NO. OF RECORDS     Y01676
*                                      IN UTILITY DATA SET       Y01676
         LTR   PARMREG1,PARMREG1       TEST FOR EMPTY UTILITY    Y01676
         BNP   DA000015                IF SO, SPACE REQUEST IS   Y01676
*                                      ONE PHYSICAL RECORD       Y01676
         MH    PARMREG1,CALRECL        MULTIPLY RECORD COUNT BY  Y01676
*                                      LOGICAL RECORD LENGTH     Y01676
         DR    PARMREG0,WKREG          DETERMINE NO. OF BLOCKS   Y01676
*                                      REQUIRED TO CONTAIN DATA  Y01676
*                                      SET
DA000015 EQU   *                                                 Y01676
         AH    PARMREG1,DAC1           INCREASE SPACE QUANTITY   Y01676
*                                      TO BE REQUESTED BY ONE    Y01676
         TM    CASAFLG2,CASADQTY       DOUBLE SPACE REQUEST -    Y01676
         BZ    DA000020                IF NOT, BR TO ESTABLISH   Y01676
*                                      NORMAL SPACE REQUEST      Y01676
         AR    PARMREG1,PARMREG1       DOUBLE COMPUTED SPACE     Y01676
DA000020 EQU   *                                                 Y01676
         NI    CASAFLG2,DAALL-CASADQTY-CASANCTG RESET SPECIAL    Y01676
*                                      DATA SET FLAGS TO ZERO    Y01676
         ST    WKREG,DA08BLK           ESTABLISH DAIR BLKSIZE    Y01676
         ST    PARMREG1,DA08PQTY       PRIMARY QUANTITY REQUEST  Y01676
         ST    PARMREG1,DA08SQTY       SECONDARY QUANTITY REQ.   Y01676
         OI    DA08CTL,DA08ABKL        SPECIFY REQUEST TO BE     Y01676
*                                      BASED ON PHYSICAL         Y01676
*                                      RECORDS                   Y01676
         EJECT
***********************************************************************
*                                                                     *
*IKJDAIR IS CALLED TO ALLOCATE A QSAM DATA SET WITH THE GENERATED     *
*DSNAME. IF THE ALLOCATION IS SUCCESSFUL, THE DSNAME AND LENGTH ARE   *
*STORED IN THE COMMUNICATION AREA, AND CONTROL IS RETURNED TO THE     *
*INVOKING MODULE WITH A RETURN CODE OF 0. IF THE ALLOCATION IS NOT    *
*SUCCESSFUL, DAIRFAIL(IKJEFF02) IS INVOKED TO DIAGNOSE THE            *
*ALLOCATION ERROR, WITH THE FOLLOWING EXCEPTIONS:                     *
*  RETURN CODE IS 48       -- THE RETURN CODE IS RESET TO 8 AND       *
*                             CONTROL IS RETURNED TO THE CALLER       *
*  MODULE QUALIFIER IS OBJ -- THE RETURN CODE IS SET TO 0             *
*                             AND CONTROL IS RETURNED TO THE          *
*                             CALLER                                  *
*                                                                     *
***********************************************************************
         LA    PARMREG1,CATMPLST       ADDR OF TMP SR PARMLIST
DA000040 LINK  EP=IKJDAIR              LINK TO DAIR FOR ALLOCATE Y01676
         SPACE
         LTR   RETCDREG,RETCDREG       TEST DAIR RETURN CODE   @YA01909
         BZ    DA000200                IF ZERO, BR TO CONTINUE @YA01909
         CH    RETCDREG,DARETC48       TEST FOR R.C. OF 48     @YA01909
         BNE   CONTINUE                                        @YA01909
         LA    RETCDREG,KEIGHT         IF R.C.=48, RESET TO 8  @YA01909
         B     DA000500                AND RETURN TO CALLER    @YA01909
CONTINUE EQU   *                                               @YA01909
         LA    OPREG,CASADSN           ADDRESS DSNAME          @YA01909
         LH    LENREG,CASADSNL         LENGTH OF DSNAME        @YA01909
         AR    OPREG,LENREG            ADD DISP TO END OF DSN  @YA01909
         SH    OPREG,DAC3              BACK UP THREE BYTES     @YA01909
         CLC   D0(D3,OPREG),DAOBJ      IS LAST QUALIFIER OBJ   @YA01909
         BNE   DA000025                IF NOT, DIAGNOSE ERROR  @YA01909
         LA    RETCDREG,KZERO          OTHERWISE, SET RETURN   @YA01909
*                                      CODE TO ZERO AND RETURN @YA01909
         B     DA000500                TO CALLER               @YA01909
DA000025 EQU *
         ST    RETCDREG,RETCODE        SAVE DAIR RETURN CODE   @YA01909
         LA    PARMREG1,CATMPLST       SET UP REQUIRED PARM    @YA01909
*                                      LIST  FOR DAIRFAIL      @YA01909
         ST    PARMREG1,DAPLPTR        PUT ADDR. DAIR PLST     @YA01909
*                                      INTO DAIRFAIL PLST.     @YA01909
         LA    PARMREG1,RETCODE        ADDR. DAIR RETURN CODE  @YA01909
         ST    PARMREG1,RETPTR         ST IN DAIRFAIL PLST     @YA01909
         LA    PARMREG1,MSGSIGN        ADDR. SIGNAL TO         @YA01909
*                                      DAIRFAIL TO LOAD, CALL, @YA01909
*                                      AND DELETE THE          @YA01909
*                                      MESSAGE WRITER          @YA01909
         ST    PARMREG1,MSGWTR         ST IN DAIRFAIL PLST     @YA01909
         LA    PARMREG1,CALLERID       ADDR. OF INTERFACE ID   @YA01909
         ST    PARMREG1,IDPTR          ST IN DAIRFAIL PLST     @YA01909
         LA    PARMREG1,FAILPLST       INVOKE THE DAIRFAIL     @YA01909
*                                      SERVICE ROUTINE FOR     @YA01909
*                                      DIAGNOSIS OF THE        @YA01909
         LINK  EP=IKJEFF18             ALLOCATION ERROR.       @YA01909
         SPACE
DA000050 EQU   *
         LA    RETCDREG,KEIGHT         RETURN CODE = 8
DA000100 EQU   *
         IKJEBERT (14,12),,RC=(15)     EXIT LINKAGE
         SPACE
DA000200 EQU   *
         TM    DADAIR+DA08DARC-DAPB08,DAALL  DARC FIELD = 0    @YA01909
         BNZ   DA000025             NO, BR TO DIAGNOSE ERROR   @YA01909
         TM    CASAFLAG,CASADISP       UNALLOCATION
         BO    DA000500                BR YES TO RETURN
         TM    CASAFLAG,CASAUNCG       SECOND ALLOCATION
         BO    DA000225                BR YES
         L     UPTREG,CAPTUPT       ADDRESS OF UPT             @YA03621
         USING UPT,UPTREG           ADDRESSABILITY TO UPT      @YA03621
         L     DAPREFIX,UPTPREFX+4  WORD CONTAINING PREFIX     @YA03621
         L     WKREG,DAZERO3        CONSTANT TO ZERO 3 BYTES   @YA03621
         NR    DAPREFIX,WKREG       ZERO THREE BYTES LEAVING LENGTH
*                                 OF PREFIX/USERID IN REGISTER @YA03621
         LTR   DAPREFIX,DAPREFIX     IF LENGTH IS ZERO,        @YA07252
         BZ    DA000210              BYPASS MOVING PREFIX      @YA07252
         MVC   CASADSN(DAPREFIX),UPTPREFX PUT DATASET NAME     @YA03621
*                            PREFIX IN COMM. AREA              @YA03621
         DROP  UPTREG                                          @YA03621
DA000210 EQU  *                                                @YA07252
         LA    DISPREG,CASADSN         ADDR OF DSN SAVE AREA   @YA03621
         LTR   DAPREFIX,DAPREFIX       IF LENGTH IS ZERO,      @YA07252
         BZ    DA000215                BYPASS MOVING PERIOD    @YA07252
         AR    DISPREG,DAPREFIX        1ST BYTE AFTR QUALIFIER @YA03621
         MVI   D0(DISPREG),DADOT       PUT PERIOD AFTER FIRST  @YA03621
*                                      QUALIFIER OF NAME       @YA03621
         LA    DISPREG,KONE(DISPREG)   ADD ONE FOR '.' TO LEN  @YA03621
DA000215 EQU   *                                               @YA07252
         L     WKREG,DA08PDSN          PTR TO DSNAME FIELD
         LH    LENREG,D0(WKREG)        DSNAME LENGTH
         BCTR  LENREG,NOBR             MINUS ONE FOR EXECUTE
         EX    LENREG,DACAMOVE         MOVE NAME              @YA03621
         LTR   DAPREFIX,DAPREFIX       IF LENGTH IS ZERO      @YA07252
         BZ    DA000220                PLUS ONE FOR EXECUTE   @YA07252
* FROM DAIR CONTROL BLOCK TO COMM AREA                        @YA03621
         LA    LENREG,KTWO(LENREG)     PLUS ONE FOR EXECUTE
* AND PLUS ONE FOR '.' AFTER 1ST QUALIFIER                    @YA03621
         B     DA000221                                        @YA07252
DA000220 LA    LENREG,KONE(LENREG)                             @YA07252
DA000221 AR    LENREG,DAPREFIX         ADD 1ST QUALFIER LENGTH @YA03621
         STH   LENREG,CASADSNL         SAVE LENGTH IN COMMAREA
DA000225 MVC   CASADDN(L'CASADDN),DA08DDN SAVE DAIR DDNAME
         B     DA000500                RETURN
         SPACE
DA000250 EQU   *
         LA    WKREG,CASADSNL          PTR TO DSNAME
         ST    WKREG,DA08PDSN          STORE IN PARM BLOCK
         MVI   DA08DSP1,DA08OLD        DISP=OLD
         MVI   DA08DPS2,DA08DEL        DISP2=DELETE
         MVI   DA08CTL,DA08PERM        PERMANENT ALLOCATION
         B     DA000040                BR TO LINK TO DAIR        Y01676
         EJECT
***********************************************************************
*                                                                     *
*THE FOLLOWING SUBROUTINE MOVES THE QUALIFIER TO THE DSNAME FIELD,    *
*INCREMENTS THE DISPLACEMENT AND TOTAL LENGTH BY THE LENGTH OF THE    *
*QUALIFIER, MOVES A '.' AFTER THE QUALIFIER UNLESS IT IS THE LAST,    *
*UPS THE DISPLACEMENT AND TOTAL LENGTH BY ONE, AND RETURNS.           *
*                                                                     *
***********************************************************************
DAMOVE   BCTR  LENREG,NOBR             MINUS ONE FOR EXECUTE
         EX    LENREG,DAMVC            MOVE QUALIFIER TO DSNAME
         LA    LENREG,KONE(LENREG)     PLUS ONE FOR EXECUTE
         AR    DISPREG,LENREG          INCR DISPLACEMENT
         AR    TLNREG,LENREG           INCR TOTAL LENGTH
         TM    DALAST,DAON             LAST QUALIFIER SW ON
         BO    DA000300                BR YES TO RETURN
         MVI   D0(DISPREG),DADOT       MOVE '.' TO DSNAME
         LA    DISPREG,KONE(DISPREG)   DISP+1
         LA    TLNREG,KONE(TLNREG)     TOTAL LENGTH+1
DA000300 EQU   *
         BR    WKREG                   BR TO MAIN ROUTINE
         EJECT
***********************************************************************
*                                                                     *
*SET UP PARAMETER BLOCK FOR ENTRY CODE '2C'. THE DDNAME OF THE        *
*GENERATED DSNAME IS PASSED TO IKJDAIR.                               *
*                                                                     *
***********************************************************************
DA000400 EQU   *
         TM    CASAFLAG,CASAUNCG       ENTRY FOR X'18'
         BO    DA000450                BR YES
         LA    DSECTREG,DAPARM2C       ADDR OF PARM BLOCK
         ST    DSECTREG,DAPLDAPB       FIFTH WD OF PARMLIST
         USING DAPB2C,DSECTREG         ADDRESSABILITY OF PBLOCK DSECT
         MVI   DA2CCD+D1,DAEC2C        MOVE IN ENTRY CODE
         MVC   DA2CDDN(D8),CASADDN     MOVE DDNAME
         MVI   DA2CCD+D3,DAOPC         MOVE IN OPTION CODE
         B     DA000040                BR TO CALL IKJDAIR        Y01676
         SPACE
***********************************************************************
*                                                                     *
*SET UP PARAMETER BLOCK FOR ENTRY CODE X'18'. THE DSNAME IS OBTAINED  *
*FROM THE COMMUNICATION AREA.                                         *
*                                                                     *
***********************************************************************
DA000450 EQU   *
         LA    DSECTREG,DAPARM18       ADDR OF PARM BLOCK
         ST    DSECTREG,DAPLDAPB       STORE IN PARMLIST
         USING DAPB18,DSECTREG         ESTABLISH PBLOCK ADDRESSABILITY
         MVI   DA18CD+D1,DAEC18        ENTRY CODE = X'18'
         MVI   DA18DDN,DABLANK         INIT THE REST OF THE PARM
         MVC   DA18DDN+D1(K27),DA18DDN BLOCK TO BLANKS
         XC    DA18DPS2(KTWO),DA18DPS2 ZERO DISP AND CTL       @YA01909
         MVI   DA18DPS2,DA18DEL        SET DISPOSITION TO
         MVI   DA18CTL,DASCRTCH        SET SCRATCH DS SWITCH
         LA    WKREG,CASADSNL          PTR TO DSNAME
         ST    WKREG,DA18PDSN          AND LENGTH
         B     DA000040                LINK TO IKJDAIR           Y01676
         SPACE
DA000500 EQU   *
         NI    CASAFLAG,DAALL-CASADISP-CASAUNCG TURN OFF ALL SWITCHES
         B     DA000100                BR TO EXIT
         SPACE
***********************************************************************
DACAMOVE MVC   D0(LENGTH,DISPREG),D2(WKREG)
DAMVC    MVC   D0(LENGTH,DISPREG),D0(OPREG) MOVE QUALIFIER TO DSNAME
***********************************************************************
         EJECT
IKJEBEDA CSECT
         SPACE
         SPACE
DAC1     DC    H'1'                    CONSTANT OF ONE           Y01676
CONTRLEN DC    H'4'                    CONTROL WORD LENGTH       Y01676
DABLOCKS DC    H'3156'                 MAXIMUM BLKSIZE FOR       Y01676
*                                      FINAL COPY OPERATION      Y01676
DARETC48 DC    H'48'                   RETURN CODE 48           YA00002
DAC3     DC    AL2(3)                  CONSTANT OF THREE
DAOBJ    DC    C'OBJ'                  OBJ QUALIFIER
CALLERID DC    H'1'                    USED BY IKJEFF18 TO     @YA01909
*                                      IDENTIFY INTERFACE VIA  @YA01909
*                                      WHICH AN ERROR OCCURRED @YA01909
*                                      ID=1 INDICATES THAT THE @YA01909
*                                      GENERAL CALLER IS USING @YA01909
*                                      THE DAIR INTERFACE      @YA01909
*                                      PARAMETER LIST.         @YA01909
MSGSIGN  DC    F'0'                    SIGNAL TO IKJEFF18 TO   @YA01909
*                                      LOAD, CALL, AND DELETE  @YA01909
*                                      (IKJEFF02)              @YA10909
DAZERO3  DC    X'000000FF'            CONSTANT TO ZERO 3 BYTES @YA03621
         EJECT
***********************************************************************
COMMAREA IKJEBECA                      COMMMUNICATION AREA
***********************************************************************
         EJECT
         ORG   CASRWKA                 WORK AREA
         SPACE
DADAIR   DS    0F
DAPARM8  DS    19F                     PARAMETER BLOCK FOR ALLOC
DAPARM18 EQU   DAPARM8                 PARAMETER BLOCK FOR UNALLOC
DAPARM2C EQU   DAPARM8                 PARAMETER BLOCK FOR NOT IN USE
         SPACE
         SPACE
DADSNL8  DS    H                       LENGTH OF DSNAME
DADSN8   DS    CL44                    DSNAME
         SPACE
FAILPLST DS    0F                      DAIRFAIL PARAMETER LIST @YA01909
DAPLPTR  DS    A                       PTR TO DAIR PLST        @YA01909
RETPTR   DS    A                       PTR TO DAIR RETURN CODE @YA01909
MSGWTR   DS    A                       PTR TO MSGSIGN          @YA01909
IDPTR    DS    A                       PTR TO CALLERID         @YA01909
RESERVED DS    F                       RESERVED WORD PASSED    @YA01909
*                                      TO IKJEFF18             @YA01909
RETCODE  DS    F                       IKJDAIR RETURN CODE     @YA01909
         SPACE
         ORG   CATEMPBF                WORK AREA
         SPACE
         SPACE
         DS    0F
DAUNPK   DS    1F                      UNPACK
DAUNPK2  DS    1D                      FIELDS
DALAST   DS    X                       LAST QUALIFIER SWITCH
         EJECT
         IKJDAPL
         IKJDAP08
         IKJDAP18
         IKJDAP2C
         IKJCPPL
         IKJUPT
         END
