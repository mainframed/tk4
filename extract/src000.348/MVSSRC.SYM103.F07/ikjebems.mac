         TITLE 'TSO EDIT COMMAND - IKJEBEMS - MESSAGE SELECT ROUTINE'
IKJEBEMS CSECT
***********************************************************************
*                                                                     *
* STATUS -- VERSION NO. 01, OS/360 RELEASE NO. 20                     *
*                                                                     *
* FUNCTION --                                                         *
*    THIS PROGRAM USES THE PUTLINE SERVICE ROUTINE FOR                *
*    TERMINAL OUTPUT OF EDIT MESSAGES.  IT LOADS THE APPROPRIATE      *
*    MESSAGE MODULE, AND SELECTS THE REQUESTED MESSAGE FROM IT.       *
*    INSERTIONS AND SECOND-LEVEL MESSAGES ARE PROCESSED IN            *
*    BUILDING PARAMETERS FOR PUTLINE.  PUTLINE IS INVOKED VIA         *
*    LINK MACRO FOR TERMINAL OUTPUT OF THE DESIRED MESSAGE. PRIOR TO  *
*    RETURN TO THE CALLING ROUTINE THE IN-CORE MESSAGE MODULE IS      *
*    DELETED FROM MAIN STORAGE.                                       *
*                                                                     *
*    A SECOND FUNCTION OF THIS ROUTINE IS TO CAUSE TERMINAL           *
*    OUTPUT OF THE CURRENT LINE WHEN 'VERIFY ON' IS IN EFFECT.        *
*    WHEN THE 'CATPUTVF' BIT IN THE EDIT COMMUNICATION AREA IS B'1',  *
*    THE VERIFY BUFFER ADDRESS IS LOADED FROM WORD TWO OF THE         *
*    PARAMETER LIST, AND A DATA OUTPUT DESCRIPTOR IS BUILT FOR        *
*    PUTLINE.  IKJPUTL IS THEN INVOKED VIA LINK MACRO.                *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBEMS - INVOKED BY IKJEBESH MACRO FROM ANY EDIT ROUTINE  *
*         THAT ISSUES MESSAGES                                        *
*                                                                     *
* INPUT --                                                            *
*    1. REGISTER ZERO (0) CONTAINS A POINTER TO THE EDIT COMMUNICATION*
*    AREA.                                                            *
*                                                                     *
*    2.  REGISTER ONE (1) CONTAINS A POINTER TO A PARAMETER LIST      *
*    CONTAINING -                                                     *
*                                                                     *
*    A.  BYTE MESSAGE MODULE INDICATOR (X'01'-X'07')                  *
*    B.  BYTE RELATIVE FIRST-LEVEL MESSAGE NUMBER                     *
*    C.  HALFWORD RELATIVE SECOND-LEVEL MESSAGE NUMBER                *
*    D.  FULLWORD ADDRESS OF FIRST FIRST-LEVEL INSERTION              *
*    E.  FULLWORD ADDRESS OF FIRST SECOND-LEVEL INSERTION             *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER FIFTEEN (15) CONTAINS THE IKJPUTL RETURN CODE,          *
*    INDICATING WHETHER THE MESSAGE OUTPUT WAS SUCCESSFUL OR NOT.     *
*    RETURN CODES ARE -                                               *
*                                                                     *
*    00 - SUCCESSFUL OPERATION                                        *
*    04 - PROCESSING INTERRUPTED BY ATTENTION INTERRUPT               *
*    08 - NOWAIT SPECIFIED - OUTPUT NOT SENT                          *
*    12 - INVALID PARAMETERS                                          *
*    16 - GETMAIN FAILURE                                             *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         IKJEBEM1-M7 - SEVEN EDIT MESSAGE MODULES LOADED AND DELETED *
*         AS REQUIRED.  THESE MODULES CONTAIN CONTROL LISTS FOR ALL   *
*         EDIT MESSAGES.                                              *
*                                                                     *
*         IKJPUTL - PUTLINE SERVICE ROUTINE, INVOKED VIA LINK MACRO   *
*         TO PUT EDIT MESSAGES TO THE TERMINAL                        *
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         DELETE   - CAUSES THE MAIN STORAGE AREA OCCUPIED BY A       *
*         MESSAGE MODULE TO BE RELEASED                               *
*                                                                     *
*         LOAD     - LOADS MESSAGE MODULES INTO MAIN STORAGE          *
*                                                                     *
*         IKJEBESV - SAVE CALLER'S REGISTERS AND ESTABLISH            *
*         ADDRESSABILITY                                              *
*                                                                     *
*         IKJEBERT - RESTORE CALLER'S REGISTERS AND RETURN            *
*         WITH RETURN CODE IN REGISTER FIFTEEN (15)                   *
*                                                                     *
*         PUTLINE  - ESTABLISHES IKJPUTL PARAMETER LIST AND           *
*         LINK TO IKJPUTL                                             *
*                                                                     *
*         IKJEBECA - DSECT FOR EDIT COMMUNICATION AREA                *
*                                                                     *
* EXITS, NORMAL --                                                    *
*    RETURN TO CALLER BY BRANCHING ON REGISTER FOURTEEN (14) WITH     *
*    REGISTER FIFTEEN (15) SET TO THE PUTLINE RETURN CODE             *
*                                                                     *
* EXITS, ERROR -- NONE                                                *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    THE EDIT COMMUNICATION AREA CONTAINS A WORK AREA FOR THIS MODULE,*
*    CONTROL INFORMATION AND BUFFER AREAS.                            *
*                                                                     *
*    IKJPUTL OUTPUT AREA - USED BY THE PUTLINE SERVICE ROUTINE TO     *
*    CONSTRUCT THE OUTPUT LINES FOR FIRST- AND SECOND-LEVEL MESSAGES. *
*                                                                     *
*    THERE ARE TWO POSSIBLE FORMATS -                                 *
*                                                                     *
*    1.  FIRST- AND SECOND-LEVEL SPECIFIED -                          *
*                                                                     *
*    A.  POINTER TO SECOND LEVEL OUTPUT AREA                          *
*    B.  NUMBER OF MESSAGE SEGMENTS                                   *
*    C.  POINTER TO FIRST MESSAGE SEGMENT - BASIC MESSAGE             *
*    D.  (LIST OF POINTERS TO SUCCESSIVE SEGMENTS.  THE MAXIMUM       *
*    NUMBER OF INSERTIONS IS 255 FOR THE PUTLINE ROUTINE.)            *
*                                                                     *
*    NOTE - IN THE SECOND-LEVEL OUTPUT DESCRIPTOR,  IKJEBEMS SETS     *
*    THE POINTER TO THE NEXT-LEVEL DESCRIPTOR TO X'FF000000' TO       *
*    INDICATE THAT THERE IS NO THIRD-LEVEL OUTPUT.                    *
*                                                                     *
*    2.  THE SINGLE-LEVEL FORMAT IS THE SAME EXCEPT THAT              *
*    THERE IS NO POINTER TO THE SECOND-LEVEL OUTPUT.                  *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REFRESHABLE, ENABLED, NON-PRIVILEGED                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- NONE                                   *
*                                                                     *
* NOTES --                                                            *
*    FOUR (4) INSERTIONS ARE PRESENTLY SUPPORTED FOR EDIT MESSAGES.   *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*
*                             REGISTER EQU'S
*
***********************************************************************
COMMREG  EQU   9              COMMUNICATION AREA PTR
BASEREG  EQU   11             CODE BASE REGISTER
DATAREG  EQU   12             POINTS TO DYNAMIC CORE
SAVEREG  EQU   13             POINTS TO CURRENT SAVE AREA
RETREG   EQU   14             RETURN ADDR FROM LINKAGE
RETCDREG EQU   15             CONTAINS RETURN CODE
PARMREG1 EQU   1              PARAMETER REGISTER 1
PARMREG0 EQU   0              PARAMETER REGISTER 0
NOBRANCH EQU   0              USED IN BCTR WHEN NO BRANCH IS DESIRED
WR1      EQU   2              WORK REGISTER
WR2      EQU   3              WORK REGISTER
WR3      EQU   4              WORK REGISTER
WR4      EQU   5              WORK REGISTER
WR5      EQU   6              WORK REGISTER
WR6      EQU   7              WORK REGISTER
         SPACE 2
***********************************************************************
*
*                            SPECIAL EQU'S
*
***********************************************************************
         SPACE 2
ZERO     EQU   0              DISPLACEMENT OF ZERO
ONE      EQU   1              DISPLACEMENT OF ONE
TWO      EQU   2              DISPLACEMENT OF TWO
FOUR     EQU   4              DISPLACEMENT OF FOUR
FIVE     EQU   5              DISPLACEMENT OF FIVE
LENGTH5  EQU   5              LENGTH OF FIVE
SEVEN    EQU   7              DISPLACEMENT OF SEVEN
EIGHT    EQU   8              DISPLACEMENT OF EIGHT
LENGTH8  EQU   8              LENGTH OF EIGHT
TWELVE   EQU   12             DISPLACEMENT OF TWELVE
LENGTH20 EQU   20             LENGTH OF TWENTY
BLANK    EQU   C' '           CHARACTER BLANK
CHARZERO EQU   C'0'           CHARACTER ZERO
         EJECT
         IKJEBESV (14,12),,,COMMREG=(0) ENTRY LINKAGE
         USING IKJEBECA,COMMREG         DEFINE COMM AREA
         USING DATA,DATAREG             DEFINE DYNAM DATA
         LA   DATAREG,CAMSWKA           LOAD PTR TO DYNAMIC AREA
         EJECT
***********************************************************************
*
* THIS SECTION HANDLES THE BUILDING OF THE LEVEL 1 AND LEVEL 2 MSG
* CHAINS AND THE REQUIRED PARAMETER LISTS
***********************************************************************
         LR    WR2,PARMREG1             COPY PARAMETER LIST ADDRESS
         USING INPARMD,WR2              ESTABLISH PARAMETER
*                                       ADDRESSABILITY
         TM    CACFLAG4,CATPUTVF        IS TERMINAL OUTPUT OF THE
*                                       VERIFY LINE REQUESTED
         BO    MSVERIFY                 IF SO BRANCH TO PROCESS
         LH    WR3,RLEV2MSG             GET LEVEL 2 NUMBER
         LTR   WR3,WR3                  WAS SECOND LEVEL MSG PROVIDED
         BNZ   LEVEL2                   BRANCH IF YES
         MVC   PTLPBLK(LENGTH20),PUTLNL1 MOVE PARM BLOCK TO DYNAM AREA
         B     BLDPARM                  BRANCH TO PROCESS MESSAGE
LEVEL2   MVC   PTLPBLK(LENGTH20),PUTLNL2 MOVE PARM BLOCK TO DYNAM AREA X
                                        LEVEL MESSAGES TO DYNAMIC AREA
BLDPARM  EQU   *
         SR    WR4,WR4                  ZERO INDEX REGISTER.
         IC    WR4,MSLOADMD             GET MODULE INDICATOR FROM
*                                       THE PARAMETER LIST
         LA    WR4,MSTBLOAD(WR4)        ADDRESS LAST CHARACTER OF
*                                       MODULE NAME
         MVC   MSLOADNM(SEVEN),MSNMLOAD MOVE FIRST SEVEN CHAR-
*                                       ACTERS TO WORK AREA
         MVC   MSLOADNM+SEVEN(ONE),ZERO(WR4) MOVE FINAL CHARACTER
*                                            TO WORK AREA
         LOAD  EPLOC=MSLOADNM           LOAD MESSAGE MODULE
         ST    PARMREG0,CAPTMSGM        UPDATE POINTER TO MSG MODULE
MSNOLOAD EQU   *
         SR    WR4,WR4                  ZERO INDEX
         IC    WR4,MSGRELNO             GET RELATIVE MESSAGE NUMBER
*                                       FOR INDEXING PURPOSES
         SLL   WR4,TWO                  MULTIPLY BY 4 TO GET OFFSET
*                                       INTO VECTOR TABLE
         L     WR5,CAPTMSGM             POINT TO MESSAGE MODULE
         L     WR4,ZERO(WR4,WR5)        POINT TO FIRST LEVEL MSG
         LA    WR4,FOUR(,WR4)           AT LENGTH HALFWORD
         ST    WR4,ML1SG1               STORE PTR IN PUTLINE PARM LIST
         LA    WR5,FOUR                 POINT TO SECOND LEVEL MESSAGE
         SR    WR4,WR5
         L     WR5,IN1PTR
         LTR   WR5,WR5                  WAS AN INSERTION PROVIDED
         BNZ   MSLV1INS                 IF SO BRANCH TO PROCESS
*                                       INSERTIONS
         LA    WR5,ONE                  OTHERWISE SET NO. OF
         ST    WR5,ML1SGNUM             SEGMENTS TO ONE
         B     MSL2TEST                 BRANCH TO CHECK FOR LEVEL
*                                       2 MESSAGE
MSLV1INS EQU   *
         LA    PARMREG1,ML1LST          INIT PARM BLOCK ADDRESS
         BAL   WR6,MSINSERT             INVOKE INSERTION SUBROUTINE
         ST    WR3,ML1SGNUM             STORE NUMBER OF SEGMENTS IN
*                                       PARAMETER LIST
MSL2TEST EQU   *
         LH    WR3,RLEV2MSG             LOAD RELATIVE LEVEL 2 NUMBER
         LTR   WR3,WR3                  IS A LEVEL 2 MESSAGE REQUESTED
         BNZ   MSLV2MSG                 IF SO BRANCH TO PROCESS
*                                       LEVEL 2 MESSAGE
         LA    WR3,ML1SGNUM             FOR LEVEL 1 MSGS WITH NO
         ST    WR3,PUTLOUT              LEVEL 2, STORE ADDR OF WORD
         B     OUTPUT                   CONTAINING NO. OF SEGMENTS
*                                       IN PARAMETER LIST AND BRANCH
*                                       TO LINK TO PUTLINE
MSLV2MSG EQU   *
         L     WR4,ZERO(,WR4)           CHAIN DOWN MESSAGE LISTS
         BCT   WR3,MSLV2MSG             TO ACCESS LEVEL 2 MESSAGE
         LA    WR4,FOUR(,WR4)           ADDRESS BASIC SEGMENT
         ST    WR4,ML2SG2               AND STORE IN PARAMETER BLOCK
         L     WR5,IN2PTR               LOAD INSERTION LIST ADDR
         LTR   WR5,WR5                  ANY LEVEL 2 INSERTS PROVIDED
         BZ    MSNOL2IN                 IF NOT BRANCH TO SET UP
*                                       FINAL PARAMETERS
         LA    PARMREG1,ML2LST          SPECIFY ADDR OF PARM BLOCK 2
         BAL   WR6,MSINSERT             CALL SUBRTN FOR LEV 2 INSERTS
         B     MSL2SET                  BRANCH TO COMPLETE PARAMETERS
MSNOL2IN EQU   *
         LA    WR3,ONE                  NO INSERTIONS -- ONE SEGMENT
MSL2SET  EQU   *
         ST    WR3,ML2SGNUM             SET NO. OF MESSAGE SEGMENTS
         LA    WR3,ML1LST
         ST    WR3,PUTLOUT              SET PARM LIST OUTPUT ADDR
         LA    WR3,ML2LST
         ST    WR3,ML2PTR               CHAIN PARM BLOCK 1 TO 2
         MVC   ML3PTR(FOUR),SEG3FLG     SPECIFY NO LEVEL 3 OUTPUT
*
*        PARAMETERIZATION IS COMPLETE
OUTPUT   LA    WR1,PTLPBLK
         ST    WR1,CATMPLST+IOPLIOPB-IOPL POINT TO PUTLINE PARM LIST
         PUTLINE MF=(E,CATMPLST) CALL PUTLINE
         TM    CACFLAG4,CATPUTVF        IS VERIFY SWITCH ON -
         BZ    MSDELETE                 IF NOT, BRANCH TO DELETE
*                                       MESSAGE MODULE.
         XI    CACFLAG4,CATPUTVF        IF SO, TURN SWITCH OFF
         B     MSRETURN                 AND BRANCH TO RETURN
MSDELETE EQU   *
         LR    WR4,RETCDREG             SAVE PUTLINE RETURN CODE
         DELETE EPLOC=MSLOADNM          DELETE MESSAGE MODULE
         LR    RETCDREG,WR4             RESTORE PUTLINE RETURN CODE
MSRETURN EQU   *
         IKJEBERT (14,12),,RC=(15)      RETURN LINKAGE
         EJECT
***********************************************************************
*
* THIS SUBROUTINE IS USED TO PROCESS INSERTIONS FOR EDIT MESSAGES
* UPON ENTRY REGISTER ONE POINTS TO THE PARAMETER BLOCK FOR PUTLINE
* AND REGISTER SIX ADDRESSES THE FIRST INSERTION LIST
*
***********************************************************************
         SPACE 2
MSINSERT EQU   *
         LA    WR3,FOUR                 MAXIMUM NO. OF INSERTIONS
*                                       IS FOUR
         LR    WR1,WR3                  COPY VALUE FOR INDEXING
MSINSLP  EQU   *
         LA    PARMREG0,FOUR(,WR5)      ADDRESS INSERTION
         ST    PARMREG0,TWELVE(,PARMREG1) STORE SEGMENT IN PARM BLOCK
         L     WR5,ZERO(,WR5)           CHAIN TO FIND NEXT INSERTION
         LTR   WR5,WR5                  ARE THERE ANY MORE INSERTS
         BZ    MSCNTINS                 IF NOT, BRANCH TO COUNT
*                                       MESSAGE SEGMENTS
         AR    PARMREG1,WR1             BUMP SEGMENT ADDRESS BY FOUR
         BCT   WR3,MSINSLP              LOOP FOUR TIMES
         LA    WR3,ONE(,WR3)            ADJUST COUNT BY ADDING ONE
MSCNTINS EQU   *
         IC    WR3,MSINSTAB(WR3)        DETERMINE NO. OF MSG SGMTS.
         BR    WR6                      RETURN TO MAINLINE ROUTINE
         EJECT
***********************************************************************
* THIS SECTION CAUSES THE VERIFY LINE TO BE PRINTED AT THE TERMINAL.
* THE FORMAT IS --
* 0            8    9
* LINE NUMBER  ' '  RECORD TEXT WITHOUT LINE NUMBER
***********************************************************************
         SPACE 2
MSVERIFY EQU   *
         MVC   PTLPBLK(LENGTH20),PUTLNL3 MOVE DATA PARM BLOCK TO
*                                        WORK AREA
         L     WR1,IN1PTR
         USING RECORD,WR1          ESTABLISH ADDRESSABILITY FOR RECORD
         TM    CACFLAG1,CANONUM    WAS 'NONUM' SPECIFIED
         BO    MSNOSEQ               YES - TREAT DATA SET WITH NO LINE X
                                           NUMBERS
         LH    WR4,INRECLEN          NO - GET RECORD LENGTH
         SR    WR5,WR5                    SET LINE NUMBER FIELD LENGTH
         IC    WR5,CALENGTH
         LA    WR3,FIVE(,WR5)             SET DATA LENGTH (ADJUSTING
         SR    WR4,WR3                    FOR MVC)
         CLI   CALINE,ONE          DOES LINE NUMBER BEGIN IN FIRST BYTE
         BNE   MSMVCBFR              NO - MOVE BUFFER TO SUPPRESS LINE X
                                          NUMBER FIELD
         LA    WR6,INDATA(WR5)     ADDRESS BYTE AFTER LINE NUMBER FIELD
         EX    WR4,VRFYMVC1        OVERLAY LINE NUMBER
         L     WR6,RECKEY          SAVE RECORD KEY
         B     MSSEQNO             ORGANIZE RECORD AS DATA LINE
         SPACE 2
MSMVCBFR EQU   *
         IC    WR5,CALINE          OBTAIN START POSITION FOR
*                                  SEQUENCE NUMBER
         BCTR    WR5,NOBRANCH      TRANSLATE INTO TRUE NUMBER
*                                  OF CHARACTERS THAT CAN BE
*                                  EDITED
         CR    WR4,WR5             COMPARE PREVIOUS COMPUTATION
*                                  OF NUMBER OF DATA CHARACTERS
*                                  TO BE MOVED(ADJUSTED FOR MVC)
*                                  TO TRUE NUMBER OF DATA BYTES
*
* NOTE -- THE DATA LENGTH BASED ON THE SEQUENCE NUMBER START POSITION
* CAN NEVER EXCEED THE DATA LENGTH COMPUTATION BASED ON SEQUENCE
* NUMBER LENGTH AND DECREMENTED FOR MVC BY MORE THAN ONE CHARACTER.
         BL    MSMVCBF1            IF LENGTHS ARE EQUAL, BYPASS
*                                  CODE TO ADJUST LENGTH FOR MOVE
         BCTR  WR5,NOBRANCH        ADJUST LENGTH FOR MVC
         LR    WR4,WR5             SET LENGTH FOR MVC
MSMVCBF1 EQU   *
         L     WR6,RECKEY          SAVE RECORD KEY
         EX    WR4,VRFYMVC3        MOVE RECORD TO DATA LINE
MSSEQNO  EQU   *
         LA    WR4,TWO(,WR4)       ADD 2 FOR TRUE DATA LENGTH
         MVI   OUTBLANK,BLANK      MOVE ' ' AFTER LINE NUMBER
         LR    WR2,WR4             SAVE OUTPUT RECORD LENGTH
         CVD   WR6,VRFYBUFF
         UNPK  SEQFIELD(LENGTH8),VRFYPAK(LENGTH5) CONVERT FIELD TO
         OI    SEQSIGN,CHARZERO    CHARACTER DIGITS AND ADJUST SIGN
         EJECT
         SPACE 2
*THIS SECTION ADJUSTS RECORD BY SUPPRESSING UP TO 3 LEAD ZEROES
         SPACE 2
         LH    WR4,THREE           SET COUNTER
         LA    WR5,SEQFIELD        ADDRESS LINE NUMBER
MSLZLOOP CLI   ZERO(WR5),CHARZERO  IS BYTE A CHARACTER ZERO
         BNE   MSCNTLZ               NO - COUNT LEADING ZEROES
         LA    WR5,ONE(,WR5)         YES - ADDRESS NEXT BYTE
         BCT   WR4,MSLZLOOP                REPEAT LOOP THREE TIMES
MSCNTLZ  SH    WR4,THREE           WR4 CONTAINS - NUMBER OF LEAD ZEROES
         BZ    NOZEROES            IF ZERO, NO MOVE NECESSARY
         LPR   WR4,WR4             CHANGE SIGN TO POSITIVE
         LR    WR3,WR2             GET DATA LENGTH
         LA    WR2,SEVEN           COMPUTE NUMBER OF SIGNIFICANT DIGITS
         SR    WR2,WR4             IN LINE NUMBER
         AR    WR3,WR2             COMPUTE RECORD LENGTH FOR MVC
         EX    WR3,VRFYMVC2        SUPPRESS LEADING ZEROES IN RECORD
STRECINS LA    WR3,FIVE(,WR3)      ADD 5 FOR DATA LENGTH
         STH   WR3,OUTRCLEN        STORE IN DATA LINE
         SR    WR4,WR4
         STH   WR4,OUTRCOFF        STORE OFFSET OF ZERO
         LA    WR3,OUTRCLEN        ADDRESS DATA LINE
         ST    WR3,PUTLOUT         AND STORE IN PARM BLOCK
         B     OUTPUT              BRANCH TO INVOKE PUTLINE
         SPACE 2
NOZEROES LA    WR3,SEVEN(,WR2)     LENGTH OF LINE NUMBER FIELD TO BE   X
                                   ADDED TO RECORD LENGTH
         B     STRECINS            FINISH DATA LINE
         EJECT
         SPACE 2
***********************************************************************
*
* THIS SECTION CAUSES THE VERIFY LINE TO BE PRINTED AT THE TERMINAL
* WHEN 'NONUM' WAS SPECIFIED.
*
***********************************************************************
         SPACE 2
MSNOSEQ  EQU   *
         LA    WR1,TWELVE(,WR1)     READDRESS THE DATA LINE SO
*                                   THAT THE INPUT LINE NEED NOT BE
*                                   MOVED
         LA    WR3,OUTRCLEN         ADDRESS DATA LINE
         ST    WR3,PUTLOUT          AND STORE IN PARM BLOCK
         B     OUTPUT               BRANCH TO INVOKE PUTLINE
         EJECT
***********************************************************************
*
*                            LOCAL STORAGE
*
***********************************************************************
         SPACE 2
         SPACE 2
*FOLLOWING ARE MVC'S FOR VERIFYING LINE
         SPACE 1
VRFYMVC1 MVC   OUTDATA(ZERO),ZERO(WR6)
VRFYMVC2 MVC   SEQFIELD(ZERO),ZERO(WR5)
VRFYMVC3 MVC   OUTDATA(ZERO),INDATA
         SPACE 1
THREE    DC    H'3'                     CONSTANT FOR SUPPRESSION
*                                       OF LEADING ZEROES
         SPACE 1
SEG3FLG  DC    X'FF000000'              INDICATES NO LEVEL 3 MSG
         SPACE 1
PUTLNL1  PUTLINE OUTPUT=(0,SINGLE),MF=L
         SPACE 1
PUTLNL2  PUTLINE OUTPUT=(0,MULTLVL),MF=L
         SPACE
PUTLNL3 PUTLINE OUTPUT=(0,DATA),MF=L
         SPACE 1
* THE FOLLOWING ARE THE FIRST SEVEN CHARACTERS OF ALL MESSAGE
* CSECT NAMES
         SPACE
MSNMLOAD DC    C'IKJEBEM'               7 CHARACTER PREFIX FOR
*                                       MESSAGE MODULE NAMES
         SPACE
* THE FOLLOWING TABLE CONTAINS ONE-BYTE ENTRIES FOR THE LAST
* CHARACTER OF MESSAGE MODULE NAMES
         SPACE 2
MSTBLOAD DC    C'0123456789'            THE LAST CHARACTER OF THE
*                                       MODULE NAME IS A DIGIT 0-9
*                                       1-7 ARE CURRENTLY USED
*                                       0,8, AND 9 ARE FOR EXPANSION
         SPACE
* THE FOLLOWING TABLE IS USED TO DETERMINE THE NUMBER OF MESSAGE
* SEGMENTS THAT HAVE BEEN PROCESSED BY THIS ROUTINE
         SPACE
MSINSTAB DC    X'060504030201'          INSERTION COUNT TABLE
         EJECT
         IKJEBECA     ,  DEFINE COMMUNICATION AREA
         EJECT
DATA     DSECT
         SPACE
MSLOADNM DS    CL8                      MESSAGE MODULE NAME
         SPACE
* THE NEXT SECTION DEFINES THE PARAMETER BLOCK FOR PUTLINE
PTLPBLK DS    5F                        PUTLINE PARMBLOCK
         ORG   PTLPBLK                  PARMBLOCK ORGANIZATION
PUTLCTL  DS    H                        CONTROL INFORMATION
PUTLOPT  DS    H                        OUTPUT OPTIONS
PUTLOUT  DS    F                        ADDRESS OF OUTPUT LINE
PUTLFRMT DS    F                        ADDRESS OF FORMATTED LINE
PUTLQOPT DS    F                        QUEUE OPTIONS
PUTLSA   DS    F                        ADDRESS OF SAVE AREA
         ORG   ,                        END OF PARAMETER BLOCK
         SPACE
* THE FOLLOWING BLOCK IS THE FIRST LEVEL OUTPUT DESCRIPTOR
ML1LST   DS    7F                       LEVEL 1 OUTPUT DESCRIPTOR
         ORG   ML1LST                   ORGANIZATION OF DESCRIPTOR -
ML2PTR   DS    F                        THIS ADDRESSES LEVEL 2
*                                       DESCRIPTOR IF PROVIDED. THIS
*                                       LOCATION  IS ADDRESSED IN
*                                       THE PARMBLOCK LOCATION PUTLOUT
*                                       WHEN LEVEL 2 IS PROVIDED
ML1SGNUM DS    F                        NO. OF SEGMENTS IN LEVEL 1
*                                       MSG. THIS LOCATION IS
*                                       ADDRESSED IN PUTLOUT WHEN
*                                       WHEN NO LEVEL 2 IS PROVIDED
ML1SG1   DS    5F                       SPACE FOR ADDRESS OF BASIC
*                                       SEGMENT AND UP TO FOUR
*                                       MESSAGE INSERTIONS
         ORG   ,                        END OF LEVEL 1 DESCRIPTOR
         SPACE
* THE FOLLOWING BLOCK IS THE LEVEL 2 OUTPUT DESCRIPTOR
ML2LST   DS    7F                       LEVEL 2 OUTPUT DESCRIPTOR
         SPACE
         ORG   ML2LST                   ORGANIZATION OF DESCRIPTOR -
ML3PTR   DS    F                        ADDR OF LEVEL 3 MSG IS
*                                       ALWAYS X'FF000000' SINCE EDIT
*                                       HAS NO LEVEL 3 MSGS
ML2SGNUM DS    F                        NUMBER OF SGMTS IN LEVEL 2
ML2SG2   DS    5F                       ADDR OF BASIC SEGMENT AND
*                                       UP TO FOUR INSERTIONS
         ORG   ,                        END OF DESCRIPTOR
         EJECT
INPARMD  DSECT
         SPACE
* THIS DSECT DESCRIBES THE 3 WORD PARAMETER LIST PASSED TO IKJEBEMS
* VIA REGISTER 1
         SPACE
MSGNUM   DS    0H                       LEVEL 1 MESSAGE NUMBER
MSLOADMD DS    X                        BYTE 1 - MODULE INDICATOR
MSGRELNO DS    X                        BYTE 2 - RELATIVE MSG. NO.
RLEV2MSG DS    H                        RELATIVE LEVEL 2 MSG NO.
IN1PTR   DS    F                        ADDR OF FIRST LEVEL 1 INSERT
*                                       ALSO ADDRESSES THE VERIFY
*                                       BUFFER WHEN THIS FUNCTION
*                                       IS REQUESTED
IN2PTR   DS    F                        ADDR OF FIRST LEVEL 2 INSERT
         EJECT
RECORD   DSECT                          USED TO ADDRESS INPUT AND
*                                       DATA RECORDS FOR VERIFY LINE
         SPACE
VRFYBUFF DS    276X                     MAXIMUM LENGTH OF BUFFER
         SPACE
         ORG   VRFYBUFF                 INPUT ORGANIZATION -
         SPACE
         DS    3F                       USED ONLY IN DATA LINE
RECKEY   DS    F                        INPUT RECORD KEY
INRECLEN DS    H                        INPUT RECORD LENGTH
         DS    H                        ALWAYS ZERO IN INPUT RECORD
INDATA   DS    256X                     TEXT OF INPUT RECORD
         ORG   ,                        END OF INPUT ORGANIZATION
         SPACE
         ORG   VRFYBUFF                 DATA LINE ORGANIZATION
         SPACE
         DS    3X                       NOT USED
VRFYPAK  DS    X                        UNPK BEGINS AT THIS BYTE
OUTRCLEN DS    H                        LENGTH OF DATA LINE
OUTRCOFF DS    H                        ALWAYS ZERO
SEQFIELD DS    7X                       SEVEN UNPACKED DIGITS
SEQSIGN  DS    X                        SIGNED DIGIT
OUTBLANK DS    X                        ' ' USED FOR SEPARATION
OUTDATA  DS    248X                     TEXT OF VERIFY LINE
         ORG   ,                        END OF DATA LINE ORGANIZATION
         EJECT
         IKJIOPL                        DSECT FOR I/O PARM BLOCK
         END
