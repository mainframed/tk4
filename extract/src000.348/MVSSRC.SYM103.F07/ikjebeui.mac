BEUI TITLE 'EDIT COMMAND ACCESS METHOD-UTILITY INITIALIZATION-IKJEBEUI'
IKJEBEUI CSECT
*C0-999999                                                     @Y30NQKG
*A033350                                                       @ZA08090
*A031850-031870,052350                                         @ZA26934
***********************************************************************
*                                                                     *
*STATUS -- VERSION NO. 02, VS2    RELEASE NO 03                       *
*                                                                     *
*COPYRIGHT N/A                                                        *
*FUNCTION -- THIS ROUTINE PREPARES THE EDIT UTILITY DATA SET FOR      *
*   PROCESSING BY PERFORMING THE FOLLOWING-                           *
*      -OBTAINS CORE STORAGE FOR A WORKAREA, CALLED UTILWORK. THIS    *
*       AREA IS CLEARED TO ZERO.                                      *
*       THIS WORKAREA CONTAINS THE DATA SET DIRECTORY
*       BLOCK(DSDB) AND THE BUFFER CONTROL FIELDS.
*      -THAT PORTION OF THE WORKAREA RESERVED FOR SAVEAREAS IS        *
*       INITIALIZED BY PRE-CHAINING EACH OF THE AREAS.                *
*      -THE DCB FOR THE UTILITY DATA SET IS PLACED IN THE WORKAREA.   *
*      -A UTILITY DATA SET IS ALLOCATED BY USING THE IKJDAIR ROUTINE  *
*      -THE UTILITY DATA SET IS OPENED.                               *
*      -OBTAINS CORE STORAGE FOR BUFFERS WHEN ACCESSING THE UTILITY   *
*       DATA SET.                                                     *
*      -INITIALIZES ADDITIONAL FIELDS IN THE WORKAREA, SUCH AS THE    *
*       LIST FORMS OF THE READ, WRITE, AND XDAP MACROS.               *
*      -LOADS IN THE ACCESSING LOAD MODULE (IKJEBEAA) AND SAVES       *
*       ITS ADDRESS IN THE UTILITY WORKAREA                           *
*                                                                     *
*ENTRY POINTS --                                                      *
*       IKJEBEUI             -VIA A LINK OR LOAD-CALL                 *
*                                                                     *
*INPUT --  REGISTER 1 CONTAINS THE ADDRESS OF THE EDIT COMMUNICATION  *
*   AREA, IKJEBECA                                                    *
*                                                                     *
*OUTPUT -- PERFORMS THE OPERATIONS DESCRIBED UNDER 'FUNCTION' ABOVE.  *
*   REGISTERS ARE AS DESCRIBED UNDER 'EXIT' BELOW.                    *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*       IKJDAIR              -ALLOCATES THE UTILITY DATA SET          *
*       MACROS USED                                                   *
*         GETMAIN            -CORE FOR WORKAREA AND BUFFERS           *
*         FREEMAIN           -RELEASE CORE ON ERROR CONDITIONS        *
*         OPEN               -OPENS UTILITY DATA SET                  *
*         CLOSE              -CLOSE DATA SET ON ERROR CONDITIONS      *
*         LOAD               -ACCESS LOAD MODULE, IKJEBEAA            *
*                                                                     *
*EXITS,NORMAL -- RETURNS ON REGISTER 14                               *
*   REGISTER 15 CONTAINS A RETURN CODE OF ZERO.                       *
*   REGISTER 0  CONTAIN S THE ADDRESS OF THE UTILITY WORKAREA/DCB.    *
*                                                                     *
*EXITS,ERROR--                                                        *
*   REGISTER 15 CONTAINS A RETURN CODE AS FOLLOWS-                    *
*     4- NOT ENOUGH CORE AVAILABLE                                    *
*     8- UTILITY DATA SET NOT AVAILABLE                               *
*    12 - UNABLE TO OPEN DATA SET                                     *
*                                                                     *
*TABLES/WORK AREAS --                                                 *
*       DEPENDENT ON THE EDIT COMMUNICATIONS AREA (IKJEBECA) FOR-     *
*         -INVOCATION OF IKJDAIR                                      *
*         -WRITING OUT MESSAGES                                       *
*       BUILDS AND INITIALIZES THE UTILITY WORKAREA (UTILWORK) AS     *
*       DESCRIBED ABOVE                                               *
*                                                                     *
*ATRRIBUTES -- REFRESHABLE,ENABLED,NON-PRIVILEGED                     *
*                                                                     *
*NOTES -- REGISTER DEFINITIONS AS DEFINED BELOW.                      *
*                                                                     *
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        *
*                                                                     *
***********************************************************************
       EJECT
*   THE FOLLOWING ARE REGISTER ASSIGNMENTS
PARMREG0 EQU   0                       PARM POINTER
PARMREG1 EQU   1                       PARM POINTER
WORK2    EQU   2                       WORK REGISTER
LINK5    EQU   5                        LINK REGISTER FOR MESSAGES
WORK3    EQU   3                       WORK REGISTER
WORK4    EQU   4                       WORK REGISTER
WORK5    EQU   5                       WORK REGISTER
WORK6    EQU   6                       WORK REGISTER
WORK7    EQU   7                       WORK REGISTER
WORK8    EQU   8                       TEMPORARY WORKAREA ADDRESSING
LINK9    EQU   10                      SUBROUTINE LINK REGISTER
COMMREG  EQU   9                       EDIT COMMUNICATIONS AREA
BASEREG  EQU   11                      BASE REGISTER
DATAREG  EQU   12                      UTILITY WORK AREA ADDRESSING
SAVEREG  EQU   13                      SAVE AREA ADDRESSING
RETREG   EQU   14                      RETURN REGISTER
RETCDREG EQU   15                      RETURN CODE
ENTRY    EQU   15                      ENTRY POINT ADDRESS
         SPACE
*   DEFINITIONS
OPEN     EQU   X'10'                   OPEN TEST FLAG
SAVENO   EQU   6                       NO. OF STACKED SAVE AREAS
SAVEL    EQU   72                      SAVE AREA LENGTH
K255     EQU   255                     CONSTANT OF 255
EIGHT    EQU   8                       CONSTANT OF EIGHT
FOUR     EQU   4                       CONSTANT OF FOUR
X2       EQU   2                       OFFSET OF TWO
X8       EQU   8                       OFFSET OF EIGHT
X4       EQU   4                       OFFSET OF FOUR
X12      EQU   12                      OFFSET OF TWELVE
X48      EQU   48                      OFFSET OF FORTY-EIGHT
X66      EQU   66                      OFFSET OF SIXTY-SIX
SPONE    EQU   1                       SUBPOOL NUMBER
OPENERR  EQU   12                      RETURN CODE //OPEN ERROR
SID      EQU   X'31'                   OPERATION CODE//SEARCH ID
TIC      EQU   8                       OFFSET TO TIC CCW
TICCODE  EQU   X'08'                   OPERATION CODE//TRANSFER
IOBFIRST EQU   X'01'                   FIRST AND LOWEST IOB
ONE      EQU   1                       CONSTANT OF ONE
ZERO     EQU   0                       CONSTANT OF ZERO
X20      EQU   20                      OFFSET OF TWENTY
THREE    EQU   3                       CONSTANT OF 3
FIVE     EQU   5                       CONSTANT OF 5
SIX      EQU   6                       CONSTANT OF SIX
LENGTH4  EQU   X'04'                   FOR LENGTH OF MESSAGE OPEN ERROR
X26      EQU   26                       USED TO CLEAR MESSAGE AREA
X240     EQU   240                      FOR START OF TRANSLATE TABLE
X4095    EQU   4095                    CONSTANT OF 4095
MGCOREB  EQU   40                      OFFSET TO MESSAGE BLOCK
MGCOREBO EQU   MGCOREB+6               OFFSET IN MESSAGE BLOCK
MGCOREBL EQU   MGCOREB+5               OFFSET TO LENGTH FIELD
MGCOREBM EQU   MGCOREB+8               OFFSET TO MESSAGE INSERTION
         EJECT
*   ALLOCATION ERROR CODES
CTRC0028 EQU   X'0028'                 CATALOG I/O ERROR CODE
DARC0214 EQU   X'0214'                 DYNAMIC ALLOCATION ERROR CODE
DARC021C EQU   X'021C'                 DYNAMIC ALLOCATION ERROR CODE
DARC0220 EQU   X'0220'                 DYNAMIC ALLOCATION ERROR CODE
         SPACE 2
*   MESSAGE REFERENCES
         SPACE
         SPACE
         IKJEBEMI (301,304,305,309,312,313,318)
         EJECT
*   PERFORM THE INITIALIZATION OPERATIONS HERE
         IKJEBESV  (14,12),T,*             SAVE THE REGISTERS
         USING IKJEBECA,COMMREG
         SPACE 2
*   OBTAIN A WORKAREA FOR ALL UTILITY ROUTINES AND MACROS
         SR    DATAREG,DATAREG         INDICATE NO WORKAREA
         MVC   GMLIST(GMEND-GM),GM     LIST FORM TO WORKAREA
         LA    PARMREG1,GMLIST         ADDRESS OF LIST FORM
         L     WORK3,BLOCKSZ           MAXIMUM AND DEFAULT
*                                        SIZE OF DSDB
         LA    WORK3,UTILSIZE+BUFEND(,WORK3) TOTAL SIZE
         GETMAIN EC,A=GMADDR,LV=(WORK3),BNDRY=PAGE,MF=(E,(1))
         LTR   RETCDREG,RETCDREG       WAS CORE AVAILABLE
         BNZ   UI3                     NO--GO GIVE A MESSAGE
         L     DATAREG,GMADDR          ADDRESS OF WORKAREA
         USING UTILWORK,DATAREG
         LA    WORK8,TEMPAREA          SERVICE ROUTINE WORKAREA
         USING UIWORK,WORK8
         SPACE 2
*   CLEAR DCB AND WORKAREA CORE TO ZERO
*   CLEAR WORKAREA AND BUFFER CORE TO ZERO
         LR    WORK2,DATAREG            STARTING ADDRESS
         LA    PARMREG0,UTILSIZE+BUFEND-ONE  SIZE TO CLEAR
UICLR1   LA    PARMREG1,K255           MAXIMUM AMOUNT PER PASS(256)
         CR    PARMREG0,PARMREG1       COMPARE ACTUAL TO MAXIMUM
         BNL   UICLR2                  BRANCH TO CLEAR 256 BYTES
         LR    PARMREG1,PARMREG0       USE ACTUAL, LESS THAN 256
UICLR2   EX    PARMREG1,UICLEAR        CLEAR SPECIFIED AMOUNT
         LA    PARMREG1,ONE(PARMREG1)  AMOUNT OF BYTES CLEARED
         AR    WORK2,PARMREG1          NEW STARTING ADDRESS
         SR    PARMREG0,PARMREG1       ANY MORE BYTES LEFT TO CLEAR
         BNM   UICLR1                  YES-MAKE ANOTHER PASS
         SPACE 2
*   SET UP FIRST SAVE AREA AND CHAIN ALL SAVE AREAS.                  *
         LA    PARMREG1,SAVEAREA-SAVEL START OF SAVE AREA.
         LA    WORK2,SAVENO            NUMBER OF SAVE AREAS
         LR    WORK4,SAVEREG           CALLING PROGRAMS SAVE AREA
UICHAIN  LA    PARMREG1,SAVEL(PARMREG1)  NEXT SAVEAREA
         ST    WORK4,FOUR(PARMREG1)     BACK CHAIN TO LAST
         ST    PARMREG1,EIGHT(WORK4)    FORWARD CHAIN LAST TO CURRENT
         LR    WORK4,PARMREG1          LAST IN CHAIN
         BCT   WORK2,UICHAIN           REPEAT UNTIL ALL CHAINED
         SR    PARMREG1,PARMREG1       SET LAST FORWARD
         ST    PARMREG1,EIGHT(WORK4)      CHAIN TO ZERO
         SPACE 2
         STH   WORK3,UWSIZE            SAVE SIZE OF TOTAL AREA
*                                        FOR LATER PROCESSING
         SPACE 2
*   MOVE DCB TO WORKAREA AND SET IT UP HERE
         MVC   UTILDCB(DCBEND-BSAMDCB),BSAMDCB  DCB TO WORK AREA
         SPACE 2
*   OBTAIN A UTILITY DATA SET AND PLACE DDNAME IN THE DCB
         MVC   UIDAIR(DAIRSIZE),DAIRCODE  PARM LIST FOR DAIR
         MVC   UIDAIR+DA08BLK-DAPB08(FOUR),BLOCKSZ PUT DEFAULT
*                                          BLOCKSIZE IN DAIR PARMS
         SPACE 2
*   SET UP DAIR PARM BLOCK FOR ATTEMPT TO GET EITHER
*   A PRIMARY OR SECONDARY UTILITY HERE
         TM    CACFLAG4,CADSUSED       USING PRIMARY BEFORE
         BZ    UIDS                    IF OFF, USE &EDIT
         LA    WORK3,DSNAME1           USE &EDIT2
         ST    WORK3,UIDAIR+DA08PDSN-DAPB08 NEW DSN POINTER
UIDS     XI    CACFLAG4,CADSUSED       FLIP/RESET SWITCH
           EJECT
         SPACE 2
**********************************************************************
*   HERE WE FIGURE OUT HOW MUCH SPACE WILL BE NEEDED FOR THE UTILITY
*   DATA SET--- IF THE DATASET WAS OLD THE DEFAULTED SPACE ALLOCATION
*
*    SPACE ALGORITHM FOR AN OLD DATASET IS:
*
*
*   PRIMARY SPACE -  P=PRIMARY SPACE
*                    CAUTILNO=NUMBER OF RECORDS IN THE DATASET
*                    CALRECL=NUMBER OF CHARACTERS IN THE
*                                  LOGICAL LINE SIZE
*                    BLOCKSZ=DEFAULT DSB SIZE (4096)
*                    CARECNO=ADDITIONAL RECORDS TO BE ADDED-
*                           AS REQUESTED BY THE CALLING ROUTINE
*                    BUFPAD2=A PADDING OF TWO BLOCKS
*                    TOTREC=CAUITLNO+CARECNO
*
*   P=2(((TOTREC*CALRECL)/BLOCKSZ)+BUFPAD2)
*
*   SECONDARY SPACE:
*
*                   THE SECONDARY ALLOCATION REQUEST IS ONE HALF
*                   OF THE PRIMARY ALLOCATION
*
*
*    THE SPACE ALGORITHM FOR A NEW DATASET IS:
*    PRIMARY SPACE -
*
*                     P=4(BLOCKSZ)
*
*    SECONDARY SPACE -
*                      ONE HALF OF THE PRIMARY SPACE
***************************************************************
          SPACE 2
          L     WORK4,CARECNO          PICK UP ANY EXTRA RECORDS
          LTR   WORK4,WORK4            IF THERE ARE THEN IT IS A
*                                      SECONDARY DATASET BEING USED
         BNZ    UICALC                 PROCESS AS &EDIT DSN
         TM    CAEDFLAG,CAEDDISP       IS DATA SET OLD OR NEW
         BZ    UINEW                   NEW - USE DEFAULTS
         L     WORK4,CARECNO           PICK UP EXTRA RECORDS NEEDED
         A     WORK4,CAUTILNO          ADD CURRENT NO. OF RECORDS
UICALC   EQU    *
         LH    WORK3,CALRECL           GET LRECL FOR DATA SET
         LA    WORK3,SIX(WORK3)        ACCOUNT FOR LOCATORS AND KEY
         M     WORK2,CAUTILNO          GET US TOTAL BYTES IN DATA SET
         D     WORK2,BLOCKSZ           NUMBER OF DBS NEEDED
*                                      BASED ON DEFAULT BLKSIZE
         AH    WORK3,BUFPAD2         PAD THE ALLOCATION WITH 2 BUFFERS
         ST    WORK3,UIDAIR+DA08SQTY-DAPB08 STORE SECONDARY
*                                           SPACE QUANTY
         AR    WORK3,WORK3        DOUBLE 2ND QNTY AS PRIMARY
         ST    WORK3,UIDAIR+DA08PQTY-DAPB08   STORE PRIMARY SPACE FOR
*                                       DAIR SERVICE ROUTINE
UINEW    EQU   *
         XC    CARECNO,CARECNO           CLEAR FOR NEXT USER
         LA    PARMREG1,UIDAIR         ADDRESS OF LIST
         ST    PARMREG1,CATMPLST+DAPLDAPB-DAPL BLOCK ADDRESS TO LIST
         L     PARMREG1,CAPTTMP        TMP TO CP ADDRESS LIST
         USING CPPL,PARMREG1
         MVC   CATMPLST+DAPLPSCB-DAPL(L'CPPLPSCB),CPPLPSCB PSCB ADDRESS
         DROP  PARMREG1
         LA    PARMREG1,CATMPLST       TOTAL PARM LIST
         CALLTSSR  EP=IKJDAIR           OBTAIN A UTILITY DATA
*                                       SET
          CH     RETCDREG,UIDAIR48       CHECK FOR AN ABEND IN DAIR
          BE     UIFREE                  CLEAN-UP AND RETURN
         CH    RETCDREG,UIDAIRXX        IS RC > X'14' ?        @ZA26934
         BH    UISYSER                  GO ISSUE SYERR MSG     @ZA26934
         B     UIBTAB1(RETCDREG)        START OF BRANCH TABLE
UIBTAB1  B     UIALOCOK                 RC=0  OK
         B     UISYSER                  RC=4  INVALID PARAMETER
         B     UICTLGER                 RC=8 ERROR IN CATALOG
         B     UIALOCER                 RC=12  ERROR IN ALLOCATION
         B     UINOTIOT                 RC=16  NO TIOT ENTRIES
         B     UISYSER                  RC=20  DDNAME IN USE
UIALOCOK EQU   *
         MVC   DCBDDNAM(EIGHT),UIDAIR+DA08DDN-DAPB08 DDNAME TO DCB
         SPACE 2
*   OPEN THE DCB HERE.
         MVC   UIOPEN(OPENLEND-OPENL),OPENL  LIST FORM TO WORKAREA
         LA    PARMREG1,UIOPEN               ADDRESS OF LIST FORM
         LA    WORK2,UTILDCB           DCB ADDRESS
         OPEN  ((WORK2)),MF=(E,(1))    OPEN THE UTILITY DCB
         XC    DCBEXLST+1(3),DCBEXLST+1 REMOVE PTR TO OPEN EXIT@ZA08090
         TM    DCBOFLGS,OPEN           WAS OPEN SUCCESSFUL
         BZ    UI12                    NO--
         SPACE 2
*   COMPUTE SIZE OF WORKAREA/BUFFER CONTROL/DSDB CORE HERE
         LH    WORK3,DCBBFNO           TOTAL BUFFERS
         LA    WORK5,L'BUF1            LENGTH OF BUFFER
         MR    WORK4,WORK3             TOTAL BUFFER CORE
         LH    WORK3,DCBBLKSI          BLOCKSIZE
         AR    WORK5,WORK3             PLUS BUFFER CORE
         LA    WORK5,UTILSIZE(,WORK5)  PLUS WORKAREA
         LH    WORK3,UWSIZE            ORIGINAL CORE SIZE
         SR    WORK3,WORK5             ANY DIFFERENCE
         BZ    UI60                    NO--CONTINUE
         SPACE 2
*   RETURN SOME OF CORE// MAXIMUM VALUES NOT USED.
         LA    PARMREG1,ZERO(WORK5,DATAREG) AREA ADDR. TO FREE
         FREEMAIN R,LV=(WORK3),A=(1),SP=SPONE FREE EXTRA CORE
UI60     SH    WORK5,DCBBLKSI          LESS SIZE OF DSDB
         STH   WORK5,UWSIZE            SAVE SIZE OF WORKAREA
*                                      DCB,BUFFER CONTROL
         MVC   DSDBSIZE,DCBBLKSI       INITIAL DIRECTORY SIZE
         SPACE 2
*   SET UP THE DSDB HERE
*   REGISTER WORK5 CONTAINS THE SIZE OF THE DCB AND WORKAREA
         LA    WORK7,ZERO(WORK5,DATAREG) ADDRESS OF BLOCK
         USING DATA,WORK7              ADDRESSABILITY
         ST    WORK7,DBUFBLCK          STORE BLOCK ADDRESS
         SPACE 2
*    GET CORE FOR EACH BUFFER BLOCK HERE
         LH    WORK4,DCBBFNO           TOTAL BUFFERS
         LH    WORK3,DCBBLKSI          SIZE OF EACH BLOCK
         LA    WORK6,BUF1              1ST BUFFER CNTRL.FIELD
         USING BUFFER,WORK6
         MVC   GMLIST(GMEND-GM),GM     LIST FORM
CORE     LA    PARMREG1,GMLIST         ADDR. OF LIST FORM
         LA    WORK5,X4095             CONSTANT OF 4095
         NR    WORK5,WORK3             CHECK 4K MULTIPLE
         BZ    CORE1                   YES-4K MULTIPLE
         GETMAIN EC,A=GMADDR,LV=(WORK3),MF=(E,(1)) GET BLOCK
         B     CORE2                   CHECK RETURN CODES
CORE1    EQU   *                       PAGE ALIGNED HERE
         GETMAIN EC,A=GMADDR,LV=(WORK3),BNDRY=PAGE,MF=(E,(1))
CORE2    EQU   *                       CHECK RETURN CODES
         LTR   RETCDREG,RETCDREG       IS CORE AVAILABLE
         BNZ   UI1                     NO----
         L     WORK7,GMADDR            ADDRESS OF BLOCK
         ST    WORK7,BUFBLOCK          SAVE ADDR. IN CONTROL AREA
         LA    WORK6,L'BUF1(,WORK6)    NEXT CONTROL AREA
         BCT   WORK4,CORE              GET CORE FOR EACH BLOCK
         DROP  WORK6,WORK7             RELEASE
         SPACE 2
*    CHAIN THE BUFFER CONTROL FIELDS
*        WORK3                         PREVIOUS BUFFER
*        WORK7                         NEXT BUFFER
         USING BUFFER,WORK6            CURRENT BUFFER
         LH    WORK4,DCBBFNO           TOTAL BUFFER BLOCKS
         BCTR  WORK4,ZERO              LESS ONE FOR LOOP CNTRL
         L     WORK6,DBUFBLCK          DSDB BLOCK ADDRESS
         LA    WORK7,L'BUF1            SIZE OF BUFFER CONTROL
         SR    WORK6,WORK7             START OF LAST BUFFER
         LR    WORK3,WORK6             LAST BUFFER CNTRL ADDR.
         LA    WORK6,BUF1              1ST BUFFER AREA
         LA    WORK7,BUF2              2ND OR NEXT AREA
         LA    WORK5,L'BUF1            LENGTH OF AREA
CHAIN    ST    WORK7,BUFCHAIN          ADDR. OF NEXT AREA
         ST    WORK3,BBKCHAIN          ADDR. OF PREVIOUS
         LR    WORK3,WORK6             CURRENT BECOMES PREVIOUS
         LR    WORK6,WORK7             NEXT BECOMES CURRENT
         AR    WORK7,WORK5             NEW NEXT AREA
         BCT   WORK4,CHAIN             REPEAT UNTIL FINISHED
         SPACE 1
         ST    WORK3,BBKCHAIN          LAST BACKCHAIN
         LA    WORK7,BUF1              NEXT
         ST    WORK7,BUFCHAIN          NEXT TO CURRENT LAST
         DROP  WORK6                   RELEASE
         SPACE 2
*   LOAD IN THE ACCESSING ROUTINES HERE
         LOAD   EP=IKJEBEAA            BRING IN EDIT ACCESS METHOD
         SPACE 2
*   SAVE ADDRESS OF ACCESS METHOD HERE
         LR    PARMREG1,PARMREG0       ADDRESS OF LOADED ROUTINE
         USING VECTABLE,PARMREG1
         ST    PARMREG1,VTABLE         SAVE IN WORKAREA
         MVC   DCBSYNAD(FOUR),SY       SYNAD ADDRESS TO DCB
         DROP  PARMREG1
         SPACE 2
*   INITIALIZE THE DIRECTORY BLOCK HERE
         L     WORK7,DBUFBLCK          BLOCK ADDRESS
         USING DATA,WORK7              ADDRESSABILITY
         OI    DCBSTATS,DSEMPTY        INDICATE EMPTY
         XC    NUMINDEX,NUMINDEX       NO ENTRIES
         DROP  WORK7                   RELEASE
         SPACE 2
*   SET UP THE LIST FORMS OF THE XDAP, READ, AND WRITE MACROS
         USING BUFFER,WORK6            ADDRESSABILITY
         LA    WORK6,BUF1              1ST AREA
         LH    WORK5,DCBBFNO           TOTAL BUFFERS
CCWS     MVC   BXDAPW(READEND-XDAPW),XDAPW LIST FORMS
         LA    WORK4,XWECB             ECB ADDRESS
         ST    WORK4,XWIOB+FOUR        STORE IN IOB
         LA    WORK4,XWCCWS            ADDRESS OF CCWS
         ST    WORK4,XWCCWAD           STORE IN IOB
         ST    WORK4,XWCCWS+TIC        STORE IN TIC CCW
         MVI   XWCCWS+TIC,TICCODE      RESTORE OPERATION CODE
         LA    WORK4,WCCHHR            SEARCH ADDRESS
         ST    WORK4,XWCCWS            STORE IN SEARCH CCW
         MVI   XWCCWS,SID              RESTORE OPERATION CODE
         LH    WORK4,DCBBLKSI          BLOCK SIZE
         STH   WORK4,XWBLKSIZ          UPDATE CCW
         LA    WORK4,BXDAPW            IOB ADDRESS
         ST    WORK4,BXDAPW            TO IOB PREFIX
         MVI   BXDAPW,IOBFIRST         SET INDICATOR
         SPACE 2
*   SET UP XDAP READ FORM CCWS
         LA    WORK4,XRECB             ECB ADDRESS
         ST    WORK4,XRIOB+FOUR        STORE IN IOB
         LA    WORK4,XRCCWS            ADDRESS OF CCWS
         ST    WORK4,XRCCWAD           STORE IN IOB
         ST    WORK4,XRCCWS+TIC        STORE IN TIC CCW
         MVI   XRCCWS+TIC,TICCODE      RESTORE OPERATION CODE
         LA    WORK4,RCCHHR            SEARCH ADDRESS
         ST    WORK4,XRCCWS            STORE IN SEARCH CCW
         MVI   XRCCWS,SID              RESTORE OPERATION CODE
         LH    WORK4,DCBBLKSI          BLOCK SIZE
         STH   WORK4,XRBLKSIZ          UPDATE READ CCW
         LA    WORK4,BXDAPR            IOB PREFIX
         ST    WORK4,BXDAPR            TO IOB PREFIX
         MVI   BXDAPR,IOBFIRST         SET INDICATOR
         LA    WORK6,L'BUF1(WORK6)     NEXT AREA ADDRRESS
         BCT   WORK5,CCWS              REPEAT UNTIL FINISHED
         DROP  WORK6                   RELEASE
         SPACE 2
*   EXIT HERE IF EVERYTHING IS OKAY.
UI0      SR    RETCDREG,RETCDREG       SET RETURN CODE  = 0
         L     WORK4,FOUR(SAVEREG)     PREVIOUS SAVE AREA
         ST    DATAREG,X20(WORK4)      SET UP RETURN REGISTER 0
UI00     EQU   *                       ALL RETURNS THRU HERE
         IKJEBERT (14,12),T,RC=(15)    RESTORE THE REGISTERS
         EJECT
*****************************************************************
*
*   OPEN EXIT ROUTINE
*   CONTROLS BLOCKSIZE AND # OF BUFFERS FOR UTILITY DATA SET
*
*        REG   1     DCB ADDRESS
*        REGS  2-12  (SAME CONTENTS PRIOR TO OPEN)
*          REG  9     COMMUNICATIONS AREA ADDRESS
*          REG 11     BASE REGISTER
*          REG 12     DCB ADDRESS
*        REG  14    RETURN ADDRESS
*        REG  15    ENTRY POINT
*
*****************************************************************
         SPACE 3
OPENEXIT EQU   *                       ENTER HERE
*   SET THE BLOCK SIZE HERE
         L     WORK3,BLOCKSZ           DEFAULT BLOCKSIZE
UI200    EQU   *                       EXIT
         STH   WORK3,DCBBLKSI          INSURE CORRECT BLOCKSIZE
         SPACE 2
*   SET UP THE NO. OF BUFFERS HERE
         LH    WORK3,BUFNO             DEFAULT # OF BUFFERS
UI201    STH   WORK3,DCBBFNO           SAVE # OF BUFFERS
         XC    DCBBUFNO,DCBBUFNO       INSURE =0 SO THAT BSAM
*                                      WILL NOT GET BUFFERS
         BR    RETREG                  RETURN
         SPACE 3
*****************************************************************
BUFPAD2  DC    H'2'                A TWO BUFFER PADDING FOR
*                                  THE ALLOC OF AN OLD DS
UIDAIR48 DC    H'48'               THE DAIR RETURN CODE WHEN ABEND
*
UIDAIRXX DC    H'20'               RETURN CODES NOT IN TABLE   @ZA26934
*
MINIMUM DC     F'1688'                 MINIMUM BLOCKSIZE
BLOCKSZ  DC    F'4096'                 MAXIMUM/DEFAULT BLOCKSIZE
BUFNO    DC    H'3'                    MINIMUM/DEFAULT #BUFFERS
BUFMAX   DC    H'10'                   MAXIMUM NO. OF BUFFERS
BMASK    DC    X'00007FF8'             MASK TO INSURE BLKSIZE IS
*                                        A DOUBLE WORD MULTIPLE.
*****************************************************************
         EJECT
         SPACE 2
***********************************************************************
*   CATALOG ERROR IN ALLOCATION
UICTLGER EQU   *
         LH    WORK2,UIDAIR+DA08CTRC-DAPB08  CATALOG ERROR CODE
         XC    MSGAREA(X48),MSGAREA    CLEAR MESSAGE AREA
         LA    PARMREG1,CTRC0028       WAS CATALOG ERROR
         CR    PARMREG1,WORK2            CODE X'0028'
         BE    UICTIOER                YES,GO SET UP I/O ERROR MSG
*                                      NO,ISSUE MSG WITH ERROR CODE
         LA    PARMREG1,M3042IN1       INITIALIZE OFFSET IN LEVEL
         STH   PARMREG1,MGBUILDO         2 INSERTION BLOCK
         L     PARMREG1,CTLGERPB       RELATIVE MESSAGE NUMBERS
         BAL   LINK5,UIDAIRCD          GO ISSUE MSG WITH ERROR CODE
         B     UIFREE                  GO CLEAN UP
         SPACE 2
*   CATALOG I/O ERROR MESSAGE
UICTIOER EQU   *
         L     PARMREG1,CTIOERPB       RELATIVE MESSAGE NUMBERS
UIALOCMG EQU   *
         ST    PARMREG1,MSGAREA        MSG PARM LIST, NO INSERTIONS
         BAL   LINK5,MSG               GO ISSUE MESSAGE
         B     UIFREE                  GO CLEAN UP
         SPACE 2
***********************************************************************
*   UNABLE TO ALLOCATE UTILITY DATA SET
UIALOCER EQU   *
         LH    WORK2,UIDAIR+DA08DARC-DAPB08 DYNAMIC ALLOC ERROR CODE
         XC    MSGAREA(X48),MSGAREA    CLEAR MESSAGE AREA
         LA    PARMREG1,DARC0220       WAS DYNAMIC ALLOCATION
         CR    PARMREG1,WORK2            ERROR CODE X'0220'
         BE    UIDC0220                YES,ISSUE MSG
         LA    PARMREG1,DARC0214       WAS DYNAMIC ALLOCATION
         CR    PARMREG1,WORK2            ERROR CODE X'0214'
         BE    UIDC0214                YES,ISSUE MSG
         LA    PARMREG1,DARC021C       WAS DYNAMIC ALLOCATION
         CR    PARMREG1,WORK2            ERROR CODE X'021C'
         BE    UIDC021C                YES,ISSUE MSG
*                                      NO,ISSUE MESSAGE WITH ERROR CODE
         LA    PARMREG1,M3041IN1       INITIALIZE OFFSET IN LEVEL
         STH   PARMREG1,MGBUILDO         2 INSERTION BLOCK
         L     PARMREG1,ALOCERPB       RELATIVE MESSAGE NUMBERS
         BAL   LINK5,UIDAIRCD          GO ISSUE MESSAGE WITH ERROR CODE
         B     UIFREE                  GO CLEAN UP
         SPACE 2
*   INSUFFICIENT SPACE ON VOLUMES MESSAGE
UIDC0220 EQU   *
         L     PARMREG1,DC0220PB       RELATIVE MESSAGE NUMBERS
         B     UIALOCMG                GO ISSUE MESSAGE
         SPACE 2
*   INVALID UNIT IN USER ATTRIBUTE DATA SET MESSAGE
UIDC0214 EQU   *
         L     PARMREG1,DC0214PB       RELATIVE MESSAGE NUMBERS
         B     UIALOCMG                GO ISSUE MESSAGE
         SPACE 2
*   NO UNIT AVAILABLE MESSAGE
UIDC021C EQU   *
         L     PARMREG1,DC021CPB       RELATIVE MESSAGE NUMBERS
         B     UIALOCMG                GO ISSUE MESSAGE
         SPACE 3
UINOTIOT EQU   *
         XC    MSGAREA(X12),MSGAREA    CLEAR MSG AREA
         L     PARMREG1,NOTIOTPB       RELATIVE MESSAGE NUMBERS
         B     UIALOCMG                GO ISSUE MESSAGE
         SPACE 3
UIFREE   BAL   LINK9,UI40               GO PERFORM CLEAN UP
         LA    RETCDREG,EIGHT          SET RETURN CODE
         B     UI00                    RETURN TO CALLER
         SPACE 3
***********************************************************************
*   SYSTEM ERROR, ISSUE MSG WITH RETURN CODE FROM DAIR
UISYSER  EQU   *
         XC    MSGAREA(X66),MSGAREA    CLEAR MESSAGE AREA
         MVC   MSGAREA(X4),SYSERRPB    RELATIVE MSG NUMBERS
         LA    WORK2,MGBUILD            GET ADDRESS OF 2ND LEVEL
         ST    WORK2,MSGAREA+EIGHT      INITIALIZE AREA
         LA    WORK2,MGBUILD2           SET UP 2ND 2ND LEVEL
         ST    WORK2,MGBUILD            POINT TO NEXT INSERTION
         MVI   MGBUILDL,L'IKJDAIR+FOUR  SET LENGTH FIELD
         LA    WORK2,M3131IN1           GET RELATIVE OFFSET
         STH   WORK2,MGBUILDO           STORE IN MESSAGE BLOCK
         MVC   IOMSG(L'IKJDAIR),IKJDAIR MOVE INSERTION INTO BLOCK
         LA    WORK2,M3131IN2           GET 2ND RELATIVE OFFSET
         STH   WORK2,MGBLD2O2           STORE IN MESSAGE BLOCK
         SRL   RETCDREG,ONE            SET UP FOR INSERTION PICK UP
         LH    WORK2,CODETAB-X2(RETCDREG) GET CODE IN REG
         STH   WORK2,IOMSG2             STORE 2ND INSERTION
         MVI   MGBLD2L,SIX             MOVE LENGTH INTO BLOCK
         BAL   LINK5,MSG                GO PUT OUT MESSAGE
         B     UIFREE                   GO TO CLEAN UP
         SPACE 2
***********************************************************************
*   DATA SET NOT USABLE// OPEN ERROR
UI12     EQU   *
         XC    MSGAREA(X48),MSGAREA    CLEAR MESSAGE AREA
         MVC   MSGAREA(X4),OPENERPB    RELATIVE MSG NUMBERS
         BAL   LINK5,MSG               PUT OUT MESSAGE
         BAL   LINK9,UI50              PERFORM CLEANUP
         LA    RETCDREG,OPENERR        SET RETURN CODE
         B     UI00                    RETURN TO CALLER
         SPACE 2
*   CONVERT ALLOCATION ERROR CODE TO EBCDIC HEX AND ISSUE MESSAGE
UIDAIRCD EQU   *
         STH   WORK2,SAVEAREA          ERROR CODE
         ST    PARMREG1,MSGAREA        RELATIVE MSG NUMBERS INTO LIST
         LA    PARMREG1,MGBUILD        INITIALIZE POINTER TO LEVEL
         ST    PARMREG1,MSGAREA+EIGHT    2 INSERTION BLOCK
         MVI   MGBUILDL,EIGHT          MSG TEXT LENGTH + FOUR
         UNPK  IOMSG(FIVE),SAVEAREA(THREE) TRANSLATE ERROR CODE INTO
         TR    IOMSG(FOUR),TRANTAB-X240      HEX CHARACTERS
MSG      EQU   *
         IKJEBEML ,,,,MF=(E,MSGAREA)
         BR    LINK5                   RETURN
MSGCORE  EQU   MSG+4                   USE CA FOR MESSAGE
         SPACE 3
**********************************************************************
         SPACE 2
*   FREE ANY DATA BLOCKS THAT WERE ALREADY OBTIANED
UI1      LH    WORK5,DCBBFNO           # OF BLOCKS POSSIBLE
         LA    WORK6,BUF1              1ST BUFFER ADDRESS
         USING BUFFER,WORK6            ADDRESSABILITY
         LH    WORK3,DCBBLKSI          BLOCK SIZE
UI10     L     WORK4,BUFBLOCK          BLOCK ADDRESS
         DROP  WORK6                   RELEASE
         LTR   WORK4,WORK4             IS THERE A BLOCK
         BZ    UI3                     NO--CONTINUE CLEANUP
         FREEMAIN R,LV=(WORK3),A=(WORK4),SP=SPONE FREE BLOCK
         LA    WORK6,L'BUF1(,WORK6)    NEXT CONTROL FIELD
         BCT   WORK5,UI10              REPEAT UNTIL ALL CHECKED
         SPACE 2
*   NOT ENOUGH MAIN STORAGE TO EXECUTE ---------
UI3      EQU   *
         XC    CASRWKA(X48),CASRWKA    CLEAR MESSAGE AREA
         MVC   CASRWKA(X2),NOCOREPB    RELATIVE MSG NUMBER
         LA    WORK2,CASRWKA+MGCOREB   SET UP INSERTION BLOCK
         ST    WORK2,CASRWKA+FOUR      POINT TO INSERTION BLOCK
         LA    PARMREG1,M312IN1        INITIALIZE OFFSET IN LEVEL 1
         STH   PARMREG1,CASRWKA+MGCOREBO INSERTION BLOCK
         MVI   CASRWKA+MGCOREBL,L'COMMAND+FOUR  SET UP LENGTH
         MVC   CASRWKA+MGCOREBM(L'COMMAND),COMMAND MOVE TEXT TO BLOCK
         OC    CAPTCDCB+ONE(THREE),CAPTCDCB+ONE ANY SUBCOMMANDS YET
         BZ    UI31                    NO,GO ISSUE MSG TEXT 'COMMAND'
         L     PARMREG1,CAPTTMP        ADDRESS OF CPPL
         L     PARMREG1,CPPLECT-CPPL(PARMREG1) GET ECT ADDRESS
         MVC   CASRWKA+MGCOREBM(EIGHT),ECTSCMD-ECT(PARMREG1)
UI31     LA    PARMREG1,CASRWKA        SET UP ADDRESS FOR MESSAGE
         BAL   LINK5,MSGCORE           GO PUT MESSAGE
         LTR   DATAREG,DATAREG         IS THERE A WORKAREA
         BZ    UI4                     NO--SET CODE//EXIT
         BAL   LINK9,UI50              YES-NEED TO UNALLOC DATA
*                                        SET AND FREE WORKAREA.
UI4      LA    RETCDREG,FOUR           SET RETURN CODE
         B     UI00                    RETURN TO CALLER
         EJECT
*   ENTER THIS SECTION ON ERROR CONDITIONS FOR CLEANUP
         SPACE 2
*   UNALLOCATE THE UTILITY DATA SET HERE
UI50     MVC   UIDAIR(DDSIZE),DCODE    PARM LIST FOR DAIR
         MVC   UIDAIR+DA18DDN-DAPB18(L'DCBDDNAM),DCBDDNAM DDNAME
         LA    PARMREG1,UIDAIR         ADDRESS OF LIST
         ST    PARMREG1,CATMPLST+DAPLDAPB-DAPL BLOCK ADDRESS TO LIST
         L     PARMREG1,CAPTTMP        ADDRESS OF CPPL LIST
         USING CPPL,PARMREG1
         MVC   CATMPLST+DAPLPSCB-DAPL(L'CPPLPSCB),CPPLPSCB PSCB ADDRESS
         DROP  PARMREG1
         LA    PARMREG1,CATMPLST       TOTAL PARM LIST FOR DAIR
         CALLTSSR  EP=IKJDAIR          UNALLOCATE THE DATA SET
         XI    CACFLAG4,CADSUSED       DID NOT USE DATA SET
         SPACE 2
*   FREE THE WORKAREA CORE HERE
UI40     LR    PARMREG1,DATAREG        WORKAREA ADDRESS
         FREEMAIN R,LV=UTILSIZE,A=(1),SP=SPONE  FREE WORKAREA
         BR    LINK9                   RETURN TO CALLER
         EJECT
         SPACE 2
PATCH    DC    8D'0'                   PATCH AREA
         SPACE 2
         DROP  BASEREG,COMMREG,DATAREG,WORK8
         SPACE
*   CONSTANT AREA FOR IKJEBEUI
UICLEAR  XC    ZERO(ONE,WORK2),ZERO(WORK2)  CLEARS CORE
CODETAB  DS    0H
         DC    C'0408121620'           MSG INSERTION TABLE
TRANTAB  DC    C'0123456789ABCDEF'     TRANSLATE TABLE
IKJDAIR  DC    C'DAIR'                 MESSAGE INSERTION
COMMAND  DC    C'COMMAND '             INSERTION FOR INSUFFICIENT
*                                      CORE MSG, SHOULD BE EIGHT
*                                      CHARACTERS LONG
         SPACE
*   PARAMETER LIST FOR DAIR --- UTILITY DATA SET ALLOCATION
         DS    0D
DAIRCODE DC    H'08'                   ENTRY CODE
FLAGS    DC    H'0'                    RETURN SETTINGS
DARC     DC    H'0'                    ERROR CODE---DYNAMIC ALLOCATION
CTRC     DC    H'0'                    ERROR CODE---CATALOG
DSNAMPTR DC    A(DSNAME)               POINTER TO DSNAME
DDNAME   DC    8C' '                   DDNAME RETURNED
UNITNAME DC    8C' '                   UNIT NAME
SERIALNO DC    8C' '                   VOLUME SERIAL NO.
BLCKSIZE DC    F'0'                    AVERAGE BLOCKSIZE
PRIMARY  DC    F'4'                      PRIMARY SPACE
SECOND   DC    F'2'                      SECONDARY SPACE
DIRECT   DC    F'0'                    DIRECTORY SPACE
MEMBER   DC    8C' '                   MEMBER NAME
PASSWORD DC    8C' '                   PASSWORD
DISP1    DC    X'04'                   DATA SET STATUS//NEW
DISP2    DC    X'04'                   NORMAL DISPOSITION//DELETE
DISP3    DC    X'04'                   CONDITIONAL DISPOSITION//DELETE
CONTROL  DC    X'40'                   DAIR CONTROL
RESERVED DC    AL3(0)                  NOT USED
DSORG    DC    X'00'                   DSORG TYPE RETURNED
DAIRSIZE EQU   *-DAIRCODE              LENGTH OF PARM LIST
         SPACE 2
*   DATA SET NAME FOR PERMANENTLY ALLOCATED UTILITY DATA SET
         DS    0H
DSNAME   DC    X'0005'                 LENGTH OF DSNAME
         DC    C'&&EDIT'               DSNAME
DSNAME1  DC    X'0006'                 LENGTH OF DSNAME
         DC    C'&&EDIT2'              SECONDARY UTILITY
*   PARAMETER LIST FOR DAIR --- UTILITY DATA SET UNALLOCATION
         DS    0D
DCODE    DC    H'24'                   ENTRY CODE
DFLAGS   DC    H'0'                    RETURN SETTINGS
DDARC    DC    H'0'                    ERROR CODE ---DYNAMIC ALLOCATION
DCTRC    DC    H'0'                    ERROR CODE ---CATALOG
DDSPTR   DC    F'0'                    DATA SET NAME POINTER
DDDNAME  DC    8C' '                   DDNAME
DMEMBER  DC    8C' '                   MEMBER NAME
DSYSCLS  DC    H'0'                    FOR SYSOUT DS USE
DDISP2   DC    X'40'                   NORMAL DISPOSITION//DELETE
DCONTROL DC    X'00'                   DAIR CONTROL
DDSIZE   EQU   *-DCODE                 LENGTH OF PARM LIST
         EJECT
***********************************************************************
*   RELATIVE MESSAGE NUMBERS FOR MESSAGE PARAMETER LISTS
         DS    0F
         SPACE
CTLGERPB DC    AL2(M304U)              UTILITY DS NOT ALLOCATED
         DC    AL2(M3042)              CATALOG ERROR CODE ( )
         SPACE
CTIOERPB DC    AL2(M304U)              UTILITY DS NOT ALLOCATED
         DC    AL2(M3043)              CATALOG I/O ERROR
         SPACE
ALOCERPB DC    AL2(M304U)              UTILITY DS NOT ALLOCATED
         DC    AL2(M3041)              DYNAMIC ALLOC ERROR CODE ( )
         SPACE
DC0214PB DC    AL2(M318U)              UTILITY DS NOT ALLOCATED
         DC    AL2(M3181)              INVALID UNIT IN USER ATTRIB DS
         SPACE
DC021CPB DC    AL2(M318U)              UTILITY DS NOT ALLOCATED
         DC    AL2(M3182)              NO UNIT AVAILABLE
         SPACE
DC0220PB DC    AL2(M305U)              UTILITY DS NOT ALLOCATED
         DC    AL2(M3051)              NO SPACE ON VOLUMES
         SPACE
NOTIOTPB DC    AL2(M301U)              TOO MANY DATA SETS
         DC    AL2(M3011)              USE FREE COMMAND
         SPACE
SYSERRPB DC    AL2(M313)               COMMAND SYSTEM ERROR
         DC    AL2(M3131)              (DAIR) ERROR CODE ( )
         SPACE
OPENERPB DC    AL2(M309U)              UTILITY DS NOT USABLE
         DC    AL2(M3093)              CANNOT OPEN DATA SET
         SPACE
NOCOREPB DC    AL2(M312)               NOT ENOUGH CORE TO EXECUTE ( )
         SPACE 2
         EJECT
***********************************************************************
BSAMDCB DCB    DSORG=PS,RECFM=FS,MACRF=(WP),EXLST=LIST
DCBEND   EQU   *                       END OF DCB
***********************************************************************
         SPACE 1
*****************************************************************
LIST     DC    0F'0',X'85',AL3(OPENEXIT) CONNECTS DCB/OPENEXIT
         SPACE 2
GM       GETMAIN EC,LV=0,A=0,SP=SPONE,MF=L   GETMAIN LIST
GMEND    EQU   *                       END OF GETMAIN LIST
OPENL    OPEN  (,(OUTPUT)),MF=L        LIST FORM
OPENLEND EQU   *                       END OF LIST FORM
         SPACE 2
***********************************************************************
*   THE FOLLOWING SECTION (XDAP, READ, AND WRITE FORMS) IS MOVED TO
*     THE WORKAREA WITH ONE INSTRUCTION AND SHOULD NOT BE ALTERED.
         CNOP  0,8
XDAPW    DC    F'0'                    IOB PREFIX
XDAP     XDAP  ECB,WI,0,0,0,MF=L       WRITE LIST FORM
XDAPEND  EQU   *                       END OF XDAP LIST FORM
WRITEB   WRITE WDECB,SF,MF=L           BSAM WRITE//LIST FORM
WRITEEND EQU   *                       END OF WRITE LIST FORM
         CNOP  0,8
         DC    F'0'                    IOB PREFIX
READ     XDAP  RDECB,RI,0,0,0,MF=L     READ LIST FORM
READEND  EQU   *                       END OF READ LIST FORM
***********************************************************************
         EJECT
UIWORK   DSECT
*   DESCRIPTIONS ON THE USE OF THE TEMPORARY WORK SPACE USED BY
*     THIS ROUTINE IN THE 'TEMPAREA' FIELD OF UTILWORK.
         SPACE
UIALL    EQU   *                       GENERAL LIST FORM AREA
UIDAIR   EQU   *                       DAIR CONTROL LIST
         SPACE
         ORG   UIALL                   USE SAME AREA
UIOPEN   OPEN  (,(OUTPUT)),MF=L        OPEN MACRO,  LIST FORM
         SPACE
         SPACE
UIEND    EQU   *
***********************************************************************
         IKJDAP08
***********************************************************************
         IKJDAP18
***********************************************************************
         SPACE 2
         IKJCPPL
***********************************************************************
         SPACE 2
         IKJDAPL
         SPACE 2
         IKJECT
         IKJEBEUW
         EJECT
***********************************************************************
         IKJEBECA
         SPACE 2
***********************************************************************
         ORG   CATEMPBF                TEMPORARY WORKAREA
GMLIST   GETMAIN EC,LV=0,A=0,SP=SPONE,MF=L  GETMAIN LIST
GMADDR   DS    1F                      GETMAIN ADDRESS
         CVT
***********************************************************************
          END
