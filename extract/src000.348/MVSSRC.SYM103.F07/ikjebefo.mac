BEFO     TITLE 'EDIT SUBCOMMAND - FORMAT - IKJEBEFO'
***********************************************************************
*STATUS-  VERSION NO. 01,OS/360 RELEASE NO. 20                        *
*                                                                     *
*FUNCTION/OPERATION-  IKJEBEFO IS AN EDIT SUBCOMMAND WHICH IS USED TO *
*   PRINT A PORTION OF OR AN ENTIRE DATA SET BEING EDITED IN A USER   *
*   DEFINED FORMAT.  THIS ROUTINE USES THE EDIT SERVICE               *
*   ROUTINE IKJEBEDA TO ALLOCATE A SEQUENTIAL DATA SET FOR            *
*   FINAL COPY SERVICE ROUTINE TO CONVERT EDIT UTILITY DATA SET TO    *
*   THE SEQUENTIAL DATA SET AND CREATES AN IN-CORE MODEL OF THE FORMAT*
*   COMMAND WHICH WILL BE PASSED TO THE SYSTEM FORMAT COMMAND THROUGH *
*   THE COMMAND INVOKER.  THE SYSTEM FORMAT COMMAND IS USED TO PROCESS*
*   THE SEQUENTIAL DATA SET AND THE FORMAT OF THE PRINTED OUTPUT IS   *
*   DETERMINED BY CONTROL WORDS EMBEDDED IN THE DATA SET.             *
*                                                                     *
*ENTRY POINTS-  IKJEBEFO IS THE MAIN AND ONLY ENTRY POINT.            *
*                                                                     *
*INPUT-  REGISTER 1 CONTAINS A POINTER TO EDIT'S COMMUNICATION AREA.  *
*        THE FORMAT SUBCOMMAND ENTERED BY THE TERMINAL USER.          *
*                                                                     *
*OUTPUT-  A RETURN CODE IN REGISTER 15.  POSSIBLE RETURN CODES ARE-   *
*   0 - OPERATION WAS SUCCESSFUL OR EMPTY UTILITY DATA SET            *
*   8 - QSAM I/O ERROR  OR STACK NEEDS FLUSHING                       *
*  12 - I/O ERROR IN UTILITY DATA SET                                 *
*   A PRINTED OUTPUT ON THE TERMINAL OR ON ANOTHER OUTPUT DEVICE.     *
*                                                                     *
*EXTERNAL REFERENCES-                                                 *
*        IKJEBEDA       -ALLOCATES AND FREES SEQUENTIAL DATA SET      *
*        IKJPARS        -SCANS SUBCOMMAND OPERANDS                    *
*        IKJEBEUT       -READS RECORDS FROM UTILITY DATA SET          *
*        IKJEBEFC       -COPIES EDIT UTILITY DATA SET INTO SEQUENTIAL *
*                       -DATA SET                                     *
*        IKJEBEMS       -MESSAGES TO TERMINAL USER                    *
*        IKJEBECI       -COMMAND INVOKER WHICH INVOKES THE SYSTEM     *
*                        FORMAT COMMAND                               *
*        MACROS USED-                                                 *
*        IKJEBESV       -STANDARD ENTRY LINKAGE AND ADDRESSABILITY    *
*        IKJEBERT       -STANDARD EXIT LINKAGE                        *
*        IKJEBESH       -PROVIDES LINKAGE TO EDIT SERVICE ROUTINES    *
*        IKJEBEMI       -LIST OF MESSAGES FOR THIS ROUTINE            *
*        IKJEBEML       -STANDARD MESSAGE PARAMETER LIST              *
*        IKJEBEMG       -STANDARD MESSAGE INSERTION PARAMETER LIST    *
*        IKJEBECA       -LAYOUT AND DESCRIPTION OF COMMUNICATION AREA *
*        IKJPPL         -PARSE PARAMETER LIST                         *
*        IKJCPPL        -COMMAND PROCESSOR PARAMETER LIST             *
*        MACROS OF IKJPARS USED-                                      *
*        IKJPARM                                                      *
*        IKJIDENT                                                     *
*        IKJKEYWD                                                     *
*        IKJNAME                                                      *
*        IKJSUBF                                                      *
*        IKJPOSIT                                                     *
*        IKJENDP                                                      *
*        IKJRLSA                                                      *
*                                                                     *
*EXITS - NORMAL-  STANDARD EXIT TO THE CONTROLLER WITH RETURN CODE = 0*
*   IN REGISTER 15.                                                   *
*                                                                     *
*EXITS,ERROR- STANDARD EXIT TO THE CONTROLLER WITH RETURN CODE =      *
*   8 OR 12 IN REGISTER 15.                                           *
*                                                                     *
*TABLES AND WORK AREAS-  THE EDIT SUBCOMMAND WORK AREA AND THE BUFFER *
*   POOL IN THE COMMUNICATION AREA ARE USED.                          *
*                                                                     *
*ATTRIBUTES - REFRESHABLE, ENABLED, NON-PRIVELEGED                    *
*                                                                     *
*NOTES-  THIS SUBCOMMAND IS CHARACTER CODE DEPENDENT AND HAS TO BE    *
*   REASSEMBLED WHEN CHARACTER CODE CHANGES                           *
***********************************************************************
IKJEBEFO CSECT
         SPACE 2
***********************************************************************
*    EQUATES OF SYMBOLIC REGISTERS
***********************************************************************
PARMREG0 EQU   0                       PARAMETER POINTER
PARMREG1 EQU   1                       PARAMETER POINTER
TESTREG  EQU   2                       WORK REGISTER
BINREG   EQU   3                       WORK REGISTER
ADDREG   EQU   4                       WORK REGISTER
WORK5    EQU   5                       WORK REGISTER
WORK6    EQU   6                       WORK REGISTER
PDLREG   EQU   7                       POINTER TO PDL
UTREG    EQU   8                       PARAMETERS FOR IKJEBEUT POINTER
COMMREG  EQU   9                       COMMUNICATION AREA ADDRESSING
TEMPREG  EQU   10                      WORK REGISTER
BASEREG  EQU   11                      BASE REGISTER
DATAREG  EQU   12                      WORK REGISTER
SAVEREG  EQU   13                      SAVE AREA POINTER
RETREG   EQU   14                      RETURN TO CALLER
RETCDREG EQU   15                      RETURN CODE
         SPACE 2
***********************************************************************
*    EQUATES OF SYMBOLIC CONSTANTS
***********************************************************************
FT0      EQU   0                       CONSTANT OF 0
FT1      EQU   1                       CONSTANT OF 1
FT2      EQU   2                       CONSTANT OF 2
FT3      EQU   3                       CONSTANT OF 3
FT4      EQU   4                       CONSTANT OF 4
FT5      EQU   5                       CONSTANT OF 5
FT6      EQU   6                       CONSTANT OF 6
FT7      EQU   7                       CONSTANT OF 7
FT8      EQU   8                       CONSTANT OF 8
FT11     EQU   11                      CONSTANT OF 11
FT12     EQU   12                      CONSTANT OF 12
FT16     EQU   16                      CONSTANT OF 16
FT19     EQU   19                      CONSTANT OF 19
FT20     EQU   20                      CONSTANT OF 20
FT44     EQU   44                      CONSTANT OF 44
FT76     EQU   76                      CONSTANT OF 76
CHARAST  EQU   C'*'                    CHARACTER OF *
CBLANK   EQU   C' '                    CHARACTER OF BLANK
XZERO    EQU   X'00'                   READ CURRENT REF. CODE
END      EQU   X'80'                   END OF PARAMETER CODE
FIRST    EQU   X'04'                   READ 1ST RECORD CODE
AFTER    EQU   X'02'                   READ NEXT RECORD CODE
ALL      EQU   255                     X'FF'
SW1      EQU   X'80'
SW2      EQU   X'40'
SW3      EQU   X'10'
POS      EQU   C'0'
CSLASH   EQU   C'/'                    CHAR. '/'
CQUOTE   EQU   C''''                   CHAR. QUOTE
COMMA    EQU   C','                    CHAR. ','
LEFT     EQU   C'('                    LEFT PARENTHESIS
RIGHT    EQU   C')'                    CHAR. ')'
QUOTESW  EQU   X'40'                   DSNAME QUOTED SWITCH
         SPACE 2
***********************************************************************
*    MESSAGE REFERENCES
***********************************************************************
         IKJEBEMI (312,313,501,504)
         SPACE 2
***********************************************************************
*    STANDARD ENTRY LINKAGE AND ESTABLISHMENT OF ADDRESSABILITY BOTH
*    IN THIS ROUTINE AND IN THE COMMUNICATION AREA
***********************************************************************
         IKJEBESV (14,12),T,*          SAVE CALLER'S REGISTERS AND
*                                      ESTABLISH ADDRESSABILITY
         LR    COMMREG,PARMREG1        LET COMMREG POINT TO COMM. AREA
         USING IKJEBECA,COMMREG        ADDRESSABILITY IN COMM. AREA
         MVI   ZSW,FT0                 CLEAR *=0 SWITCH
         MVI   SW,FT0                  CLEAR SWITCH
         MVI   ASW,XZERO               CLEAR ALLOCATION SWITCH
***********************************************************************
*    IKJEBESH IS CALLED THROUGH IKJEBESH MACRO TO READ FIRST RECORD OF*
*    UTILITY DATA SET                                                 *
***********************************************************************
         MVC   COWORD1(FT4),CAPTCDCB   PUT ADDRESS OF CURRENT UTILITY
*                                      DCB IN THE 3 LOW ORDER BYTES OF
*                                      1ST PARAM WORD
         MVI   COWORD1,FIRST           PUT X'04' IN HIGH ORDER BYTE OF
*                                      1ST PARAM WORD
         XC    COWORD2(FT4),COWORD2    2ND PARAM WORD DOES NOT CONTAIN
*                                      ANY POINTER
         LA    TESTREG,CABFRP2
         ST    TESTREG,COWORD3         PUT POINTER TO BUFFER POOL WHERE
*                                      THE RECORD IS TO BE PLACED IN 3
*                                      LOW ORDER BYTES OF 3RD PARAM.
*                                      WORD
         MVI   COWORD3,END             PUT END OF PARAMETER LIST CODE
*                                      IN HIGH ORDER BYTE OF 3RD PARAM.
*                                      WORD
         LA    UTREG,COWORD1           LET UTREG PT. TO PARMLIST
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),(UTREG)),MF=(E,A)
         LTR   RETCDREG,RETCDREG       TEST RETURN CODE FROM IKJEBEUT
         BZ    TESTOPND                SUC. OPERATION THEN GO TO
*                                      OPERAND TEST
         C     RETCDREG,FTDC4          TEST WHETHER R.C.=4
         BE    MSG3                    R.C.=4 THEN GO TO ISSUE MSG3
IOERR    LA    TEMPREG,FT12            SET R.C. TO 12 IN TEMPREG
         B     ACHECK                  BR TO SEE IF ALLOC WAS DONE
TESTOPND TM    CAPTIBFR,CAOPERND       TEST WHETHER THERE ARE OPERANDS
*                                      IN SUBCOMMAND
         BNO   SETSW1                  OPERAND SWITCH NOT ON THEN TURN
*                                      SW1 ON
         SPACE 2
         SPACE 2
***********************************************************************
*    CALL IKJPARSE TO SCAN OPERAND
***********************************************************************
OPERAND  LA    PARMREG1,CATMPLST       LET REG. 1 PT. TO TMP SERVICE
*                                      RTN. PARAMETER LIST
         MVC   CATMPLST+PPLPCL-PPL(FT4),ADFTPCL  PUT POINTER TO PCL IN
*                                                PPLPCL
         LA    TESTREG,CAPTPRSD
         ST    TESTREG,CATMPLST+PPLANS-PPL  PUT POINTER TO ANS. PLACE
*                                           IN PPLANS
         MVC   CATMPLST+PPLCBUF-PPL(FT4),CAPTIBFR  PUT ADDRESS OF
*                                      INPUT BUFFER IN PPLCBUF
         ST    COMMREG,CATMPLST+PPLUWA-PPL  PUT POINTER TO COMM. AREA
*                                           IN PPLVWA
         LINK  EP=IKJPARS
         SPACE 2
***********************************************************************
*    CHECK RETURN CODES FROM PARSE SERVICE ROUTINE
***********************************************************************
         LTR   RETCDREG,RETCDREG       CHECK RET. CODE FROM PARSE
         BZ    CONT                    IF SUCCESSFUL COMPLETION THEN
*                                      GO TO CONT
         C     RETCDREG,FTDC4          TEST WHETHER R.C.=4
         BE    FLUSH                   R.C.=4 THEN GO TO FLUSH
         C     RETCDREG,FTDC8          TEST WHETHER R.C.=8
         BE    NORMAL                  R.C.=8 THEN GO TO NORMAL
         C     RETCDREG,FTDC12         TEST WHETHER R.C.=12
         BE    MSG8                    R.C.=12 THEN GO TO ISSUE MSG8
         C     RETCDREG,FTDC16         TEST WHETHER R.C.=16
         BE    MSG6                    R.C.=16 THEN GO TO ISSUE MSG6
SETSW1   OI    SW,SW1                  TURN SW1 ON
         B     DA                      BRANCH TO CALL DA
         SPACE 2
***********************************************************************
*    CHECK THE FIRST 2 OPERANDS OF FORMAT SUBCOMMAND HERE-
***********************************************************************
CONT     L     PDLREG,CAPTPRSD         PUT POINTER TO PDL IN PDLREG
         USING FTPDL,PDLREG            ESTABLISH ADDRESSABILITY IN PDL
*                                      DSECT
         L     TESTREG,ASTERSK
         LTR   TESTREG,TESTREG         IS LINUM1 SPEC.
         BZ    DA                      IF SO BRANCH TO ALLOCATE
         CLI   FT0(TESTREG),CHARAST    TEST WHETHER FIRST OPERAND IS
*                                      AN *
         BE    THINK                   * SPECIFIED THEN GO TO TEST
*                                      WHETHER *=0
         SPACE 2
***********************************************************************
*    CALL IKJEBEDA TO ALLOCATE A QSAM DATA SET
***********************************************************************
DA       NI    SW,ALL-SW2              TURN SW2 OFF
         MVI   CASAFLAG,XZERO          ZERO OUT THE BYTE CASAFLAG IN
*                                      COMM. AREA
         IKJEBESH (COMMREG),IKJEBEDA,PARAM=((COMMREG)),MF=(E,A)
         SPACE 2
***********************************************************************
*    CHECK RETURN CODES FROM IKJEBEDA
***********************************************************************
         LTR   RETCDREG,RETCDREG       TEST RET. CODE FROM IKJDAIR
         BNZ   DAFLUSH                 BR RC NOT 0 TO FLUSH
M1       NI    CAEDFLAG,ALL-CAEDFNCP   FINAL COPY IS TO BE PERFORMED ON
*                                      SAVE DATA SET
         OI    ASW,SW1                 SET ALLOC SW ON
         LH    UTREG,CASADSNL          PUT LENGTH OF DSNAME IN 2 LOW
*                                      ORDER BYTES OF UTREG
         LR    TEMPREG,UTREG           LET TEMPREG CONT. LENGTH OF
*                                      DSNAME
         SPACE 2
***********************************************************************
*    BUILD BUFFER TO IKJEBECI HERE-
***********************************************************************
BUILD1   XC    CABFRP1+FT2(FT2),CABFRP1+FT2  PUT ZERO IN 3RD AND 4TH
*                                            BYTES OF CABFRP1
         MVC   CABFRP1+FT4(FT7),CHAR   PUT C'FORMAT ' IN 5TH TO 11TH
*                                      BYTES OF CABFRP1
         MVI   CABFRP1+FT11,CQUOTE     PUT QUOTE IN FRONT OF DSNAME IN
*                                      BUFFER
         BCTR  UTREG,PARMREG0          LENGTH OF DSNAME - 1 IN UTREG
         EX    UTREG,MOVE1             MOVE DSNAME INTO MODEL COMMAND
         LA    WORK5,FT12(TEMPREG)     PUT 12+LENGTH OF DSNAME IN WORK5
         LA    ADDREG,CABFRP1+FT12
         AR    ADDREG,TEMPREG          PUT ADDRESS OF CABFRP1+12+LENGTH
*                                      OF DSNAME IN ADDREG
         MVI   FT0(ADDREG),CQUOTE      PUT QUOTE AFTER DSNAME IN BUFFER
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         TM    SW,SW1                  TEST WHETHER SW1 IS ON
         BO    SW1OFF                  SW1 ON THEN GO TO SW1OFF
S2       L     WORK6,ASTERSK
         LTR   WORK6,WORK6             TEST WHETHER LINENUM1 SPEC.
         BZ    PAGEL                   NOT SPEC. THEN GO TO PAGEL
         MVI   FT0(ADDREG),CBLANK      PUT C' ' IN UPDATED ADDRESS
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         LH    TEMPREG,ASTERSK+FT4     PUT LENGTH OF LINENUM1 IN REG
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF LINENUM1 - 1
         EX    TEMPREG,MOVE2           PUT LINENUM 1 IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         L     WORK6,COUNT
         LTR   WORK6,WORK6             TEST WHETHER LINENUM2 IS SPEC.
         BZ    NUML                    NOT SPEC. THEN GO TO NUML
         MVI   FT0(ADDREG),CBLANK      PUT C' ' IN UPDATED ADDRESS
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         LH    TEMPREG,COUNT+FT4       PUT LENGTH OF LINENUM2 IN REG
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF LINENUM 2 - 1
         EX    TEMPREG,MOVE2           PUT LINENUM 2 IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         B     NUML                    BRANCH UNCOND. TO NUML
PAGEL    CLC   PAGE(FT2),FTH0          CHECK WHETHER PAGE IS SPEC.
         BE    NUML                    PAGE NOT SPEC. THEN GO TO NUML
         MVI   FT0(ADDREG),CBLANK      PUT C' ' IN UPDATED ADDRESS
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         MVC   FT0(FT5,ADDREG),CPAGE   PUT PAGE( IN BUFFER
         LA    ADDREG,FT5(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT5(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         L     WORK6,PNUM1             LET WORK6 PT. TO PNUM1
         LH    TEMPREG,PNUM1+FT4       PUT LENGTH OF PNUM1 IN REG
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF PNUM1 - 1
         EX    TEMPREG,MOVE2           PUT PNUM1 IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         L     WORK6,PNUM2
         LTR   WORK6,WORK6             TEST WHETHER PNUM2 IS SPEC.
         BZ    ENDPNUM1                PNUM2 NOT SPEC. THEN GO TO
*                                      ENDPNUM1
         MVI   FT0(ADDREG),COMMA       PUT C',' AFTER PNUM1 IN BUFFER
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         LH    TEMPREG,PNUM2+FT4       PUT LENGTH OF PNUM2 IN REG
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF PNUM2 - 1
         EX    TEMPREG,MOVE2           PUT PNUM2 IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         MVI   FT0(ADDREG),RIGHT       PUT C')' AFTER PNUM2 IN BUFFER
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
NUML     TM    CACFLAG1,CANONUM        IS DATA SET NUMBERED
         BO    NONUMB                  IF NOT NUMBERED THEN BRANCH TO
*                                      PUT IN ' NONUM'
         CLC   NUM(FT2),FTH1           TEST WHETHER 'NUM' IS SPEC.
         BNE   SNUML                   'NUM' NOT SPEC. THEN GO TO
*                                      SNUML
         MVC   FT0(FT4,ADDREG),CNUM    PUT C' NUM' IN BUFFER
         LA    ADDREG,FT4(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT4(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     PAUSEL                  BRANCH UNCOND. TO PAUSEL
*                                       SNUML
NONUMB   MVC   FT0(FT6,ADDREG),CNONUM  PUT ' NONUM' IN BUFFER
         LA    ADDREG,FT6(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT6(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     PAUSEL                  BRANCH UNCOND. TO PAUSEL
SNUML    MVC   FT0(FT5,ADDREG),CSNUM   PUT C' SNUM' IN BUFFER
         LA    ADDREG,FT5(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT5(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
PAUSEL   CLC   PAUSE(FT2),FTH1         CHECK WHETHER 'PAUSE' IS SPEC.
         BNE   PAUSE1L                 'PAUSE' NOT SPEC. THEN GO TO
*                                      PAUSE1L
         MVC   FT0(FT6,ADDREG),CPAUSE  PUT C' PAUSE' IN BUFFER
         LA    ADDREG,FT6(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT6(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     PRINTL                  BRANCH UNCOND. TO PRINTL
PAUSE1L  CLC   PAUSE(FT2),FTH2         CHECK WHETHER 'PAUSE1' IS SPEC.
         BNE   NOPAUSEL                'PAUSE1' NOT SPEC. THEN GO TO
*                                      NOPAUSEL
         MVC   FT0(FT7,ADDREG),CPAUSE1  PUT C' PAUSE1' IN BUFFER
         LA    ADDREG,FT7(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT7(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     PRINTL                  BRANCH UNCOND. TO PRINTL
NOPAUSEL MVC   FT0(FT8,ADDREG),CNOPAUSE  PUT C' NOPAUSE' IN BUFFER
         LA    ADDREG,FT8(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT8(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
PRINTL   CLC   PRINT(FT2),FTH0         CHECK WHETHER 'PRINT' IS SPEC.
         BE    LENGTH                  PRINT NOT SPEC. THEN GO TO PUT
*                                      LENGTH OF BUFFER IN BUFFER
         MVC   FT0(FT7,ADDREG),CPRINT  PUT C' PRINT(' IN BUFFER
         LA    ADDREG,FT7(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT7(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         L     WORK6,ONAME
         LTR   WORK6,WORK6             TEST WHETHER DSNAME IS SPEC.
         BZ    MEMBERL                 DSNAME NOT SPEC. THEN GO TO
*                                      TEST WHETHER MEMBER SPEC.
         LH    TEMPREG,ONAME+FT4       PUT LENGTH OF PRINT DSN IN REG.
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF PRINT DSN - 1
         TM    ONAME+FT6,QUOTESW       TEST WHETHER PRINT DSN IS QUOTED
         BO    MEM1                    IF QUOTED THEN TEST WHETHER
*                                      MEMBER IS SPEC.
         EX    TEMPREG,MOVE2           PUT PRINT DSNAME IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         B     MEMBERL                 BRANCH TO TEST WHETHER MEMBER
*                                      IS SPEC.
MEM1     L     TESTREG,ONAME+FT8
         LTR   TESTREG,TESTREG         TEST WHETHER MEMBER IS SPEC.
         BZ    QUOTEDS                 MEMBER NOT SPEC. THEN GO TO PUT
*                                      'DSNAME' IN BUFFER
         MVI   FT0(ADDREG),CQUOTE      PUT QUOTE IN BUFFER
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         EX    TEMPREG,MOVE2           PUT PRINT DSNAME IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         MVI   FT0(ADDREG),LEFT        PUT ( IN UPDATED ADDRESS
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         LH    TEMPREG,ONAME+FT12      PUT LENGTH OF MEMBER IN REG.
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF MEMBER - 1
         EX    TEMPREG,MOVE6           PUT MEMBER IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         MVC   FT0(FT2,ADDREG),RIGHTQ  PUT )' IN BUFFER
         LA    ADDREG,FT2(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT2(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     PASSL                   BRANCH TO TEST WHETHER
*                                      PASSWORD IS SPEC.
QUOTEDS  MVI   FT0(ADDREG),CQUOTE      PUT QUOTE IN UPDATED ADDRESS
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         EX    TEMPREG,MOVE2           PUT PRINT DSNAME IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         MVI   FT0(ADDREG),CQUOTE      PUT QUOTE IN UPDATED ADDRESS
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     PASSL                   BRANCH UNCOND. TO TEST WHETHER
*                                      PASSWORD IS SPEC.
MEMBERL  L     TESTREG,ONAME+FT8
         LTR   TESTREG,TESTREG         TEST WHETHER MEMBER IS SPEC.
         BZ    PASSL                   MEMBER NOT SPEC. THEN GO TO TEST
*                                      WHETHER PASSWORD IS SPEC.
         MVI   FT0(ADDREG),LEFT        PUT ( IN UPDATED ADDRESS
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         LH    TEMPREG,ONAME+FT12      PUT LENGTH OF MEMBER IN REG.
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF MEMBER - 1
         EX    TEMPREG,MOVE6           PUT MEMBER IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
         MVI   FT0(ADDREG),RIGHT       PUT ) IN BUFFER
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
PASSL    L     TESTREG,ONAME+FT16
         LTR   TESTREG,TESTREG         CHECK WHETHER PASSWORD IS SPEC.
         BZ    PCL                     PASSWORD NOT SPEC. THEN GO TO
*                                      CHECK WHETHER PC IS SPEC.
         MVI   FT0(ADDREG),CSLASH      PUT / IN BUFFER
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         LH    TEMPREG,ONAME+FT20      PUT LENGTH OF PASSWORD IN REG.
         LR    BINREG,TEMPREG
         BCTR  TEMPREG,PARMREG0        LENGTH OF PASSWORD - 1
         EX    TEMPREG,MOVE6           PUT PASSWORD IN BUFFER
         AR    ADDREG,BINREG           UPDATE ADDRESS IN ADDREG
         AR    WORK5,BINREG            UPDATE LENGTH OF BUFFER IN WORK5
PCL      CLC   OTYPE(FT2),FTH1         CHECK WHETHER 'PC' IS SPEC.
         BNE   PSL                     'PC' NOT SPEC. THEN GO TO CHECK
*                                      WHETHER PS IS SPEC.
         MVC   FT0(FT4,ADDREG),CPC     PUT ,PC) IN BUFFER
         LA    ADDREG,FT4(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT4(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     LENGTH                  BRANCH UNCOND. TO PUT LENGTH OF
*                                      BUFFER IN BUFFER
PSL      CLC   OTYPE(FT2),FTH2         CHECK WHETHER 'PS' IS SPEC.
         BNE   TL                      'PS' NOT SPEC. THEN GO TO TL
         MVC   FT0(FT4,ADDREG),CPS     PUT ,PS) IN BUFFER
         LA    ADDREG,FT4(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT4(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     LENGTH                  BRANCH UNCOND. TO PUT LENGTH OF
*                                      BUFFER IN BUFFER
TL       MVC   FT0(FT3,ADDREG),CT      PUT ,T) IN BUFFER
         LA    ADDREG,FT3(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT3(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
LENGTH   STH   WORK5,CABFRP1           PUT LENGTH OF BUFFER IN 1ST 2
*                                      BYTES OF CABFRP1
         SPACE 2
***********************************************************************
*    CALL IKJEBEFC TO COPY UTILITY DATA SET INTO QSAM DATA SET
***********************************************************************
FC       IKJEBESH (COMMREG),IKJEBEFC,PARAM=((COMMREG)),MF=(E,A)
         SPACE 2
***********************************************************************
*    CHECK RETURN CODES FROM IKJEBEFC
***********************************************************************
         LTR   RETCDREG,RETCDREG       TEST RET. CODE FROM IKJEBEFC
         BZ    CONT1                   R.C.=0 THEN GO TO CONT1
         C     RETCDREG,FTDC4          TEST WHETHER R.C.=4
         BE    MSG3                    ISSUE MSG-'NO LINES IN DATA SET'
         C     RETCDREG,FTDC8
         BE    CONT3                   R.C.=8 THEN GO TO CONT3
         B     IOERR                   PUT R.C.=12
         SPACE 2
***********************************************************************
*    CALL IKJEBEDA TO MARK THE DSE ENTRY NOT-IN-USE.
***********************************************************************
CONT1    OI    CASAFLAG,CASADISP
         IKJEBESH (COMMREG),IKJEBEDA,PARAM=((COMMREG)),MF=(E,A)
         SPACE 2
***********************************************************************
*    CHECK RETURN CODE FROM IKJEBEDA
***********************************************************************
         LTR   RETCDREG,RETCDREG       TEST RET. CODE FROM DA
         BZ    CI                      BR RC 0 TO CI
DAFLUSH  LA    TEMPREG,FT8             INDICATE FLUSH RETURN CODE
         B     ACHECK                  DO EXIT PROCESSING
         SPACE 2
***********************************************************************
*    CALL IKJEBECI TO ATTACH SYSTEM FORMAT COMMAND
***********************************************************************
CI       ST    COMMREG,CIWORD1         LET 1ST PARAM WORD POINT TO
*                                      COMM. AREA
         LA    TESTREG,CABFRP1         LET 2ND PARAM WORD POINT TO
         ST    TESTREG,CIWORD2         CABFRP1
         LA    TESTREG,CIWORD1
         IKJEBESH (COMMREG),IKJEBECI,PARAM=((TESTREG)),MF=(E,A)
         LA    TEMPREG,FT8             SET RETURN CODE TO 8
         CH    RETCDREG,FTH8           IS RETURN CODE 8
         BE    ACHECK                  BRANCH TO CHECK SWITCHES
         B     FIN                     BRANCH UNCOND. TO FIN
ENDPNUM1 MVI   FT0(ADDREG),RIGHT       PUT ')' IN BUFFER
         LA    ADDREG,FT1(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT1(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     NUML                    BRANCH UNCOND. TO NUML
SW1OFF   NI    SW,ALL-SW1              TURN SW1 OFF
         TM    CACFLAG1,CANONUM        IS DATA SET NUMBERED
         BO    NONUM                   IF NOT NUMBERED THEN BRANCH TO
*                                      PUT IN ' NONUM'
         MVC   FT0(FT5,ADDREG),CSNUM   PUT C' SNUM' IN BUFFER
         LA    ADDREG,FT5(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT5(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     NOP                     BRANCH TO NOPAUSE MOVE
NONUM    MVC   FT0(FT6,ADDREG),CNONUM  PUT ' NONUM' IN BUFFER
         LA    ADDREG,FT6(ADDREG)      UPDATE ADDRESS OF BUFFER POINTER
         LA    WORK5,FT6(WORK5)        UPDATE THE LENGTH OF THE BUFFER
NOP      MVC   FT0(FT8,ADDREG),CNOPAUSE PUT ' NOPAUSE IN BUFFER
         LA    ADDREG,FT8(ADDREG)      UPDATE ADDRESS IN ADDREG
         LA    WORK5,FT8(WORK5)        UPDATE LENGTH OF BUFFER IN WORK5
         B     LENGTH                  BRANCH TO PUT LENGTH OF BUFFER
*                                      IN 1ST 2 BYTES OF CABFRP1
         SPACE 2
***********************************************************************
*    MSG3- 'NO LINES IN DATA SET' IS ISSUED HERE
***********************************************************************
MSG3     MVC   B(INLIST3L),INLIST3
         IKJEBEML M501,MF=(E,B)        ISSUE MESSAGE3- 'NO LINES IN
*                                      DATA SET'
FIN      SR    TEMPREG,TEMPREG
ACHECK   EQU   *
         TM    ASW,SW1                 IS ALLOC SW ON
         BNO   CONT2                   BR NO
***********************************************************************
*    CALL IKJEBEDA TO UNALLOCATE THE QSAM DATA SET.
***********************************************************************
         OI    CASAFLAG,CASADISP+CASAUNCG SET SWITCH
         IKJEBESH (COMMREG),IKJEBEDA,PARAM=((COMMREG)),MF=(E,A)
         CR    RETCDREG,TEMPREG        FIND PROPER RETURN CODE VALUE
         BNH   CONT2                   IF TEMPREG LARGER DO NOT CHANGE
         LR    TEMPREG,RETCDREG        SET PROPER VALUE FOR RETURN CODE
         SPACE
CONT2    TM    CAPRSPDL,CAFREEDL       TEST WHETHER PARSE PDL REQUIRES
*                                      FREEMAIN
         BNZ   TFIN                    PDL NOT EXIST THEN SET RET. CODE
*                                      TO 0 AND RET. TO CONTROLLER
         IKJRLSA CAPRSPDL
         OI    CAPRSPDL,CAFREEDL       TURN ON THE BIT TO INDICATE THAT
*                                      PDL WAS FREED
TFIN     TM    ZSW,SW1                 WAS *=0
         BNO   FEXIT                   IF NOT EXIT
         XC    CACURNUM(FT4),CACURNUM  SET CACURNUM BACK TO 0
FEXIT    LR    RETCDREG,TEMPREG        PUT R.C.=0 IN RETCDREG
         IKJEBERT (14,12),T,RC=(15)    RELOAD ALL REGISTERS EXCEPT
*                                      REG. 15 AND RETURN CONTROL TO
*                                      CONTROLLER
NORMAL   SR    TEMPREG,TEMPREG
         B     TFIN                    BRANCH UNCOND. TO TFIN
FLUSH    LA    TEMPREG,FT8             SET 8 AS RETURN CODE
         B     TFIN                    BRANCH TO CONTROLLER
MSG8     EQU   *
         SPACE 2
***********************************************************************
*    MSG8- 'COMMAND SYSTEM ERROR+  IKJPARS ERROR CODE 12' IS ISSUED
*    HERE
***********************************************************************
         MVC   B(FT12),INLIST8
         IKJEBEML M313,M3131,,INS12,MF=(E,B)
         B     FLUSH                   BRANCH TO SET R.C. TO 8 AND
*                                      RETURN TO CONTROLLER
         SPACE 2
***********************************************************************
*    * EXISTS IN OPERAND
***********************************************************************
THINK    SR    TESTREG,TESTREG         CLEAR TESTREG
         C     TESTREG,CACURNUM
         BE    TEST1ST                 *=0 THEN TEST WHETHER THERE IS
*                                      RECORD 0
CALC     TM    CACFLAG1,CANONUM        TEST WHETHER DATA SET IS LINE-
*                                      NUMBERED
         BNO   LINENUM                 IF DATA SET IS LINE-NUMBERED
*                                      THEN GO TO LINENUM
         SPACE 2
CONT4    SR    TESTREG,TESTREG         CLEAR TESTREG
CONT5    LA    TESTREG,FT1(TESTREG)    ADD 1 TO TESTREG
         CLC   CABFRP2(FT4),CACURNUM   TEST WHETHER RECORD NUMBER
*                                      =CURRENT LINE NUMBER
         BE    FRSTNUM                 BRANCH ON EQUAL TO FRSTNUM
         SPACE 2
***********************************************************************
*    CALL IKJEBEUT RTN. THROUGH SERVICE RTN. HANDLER TO READ NEXT
*    RECORD OF UTILITY DATA SET
***********************************************************************
ACTION   MVC   COKEYA(FT4),CABFRP2     PUT KEY OF LAST LINE REFERENCED
*                                      IN COKEYA
         MVI   COWORD1,AFTER           PUT X'02' IN HIGH ORDER BYTE OF
*                                      1ST PARAM WORD
         LA    BINREG,COKEYA           PUT POINTER TO KEY OF LAST LINE
*                                      REFERENCED IN 2ND PARAM WORD
         ST    BINREG,COWORD2
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),(UTREG)),MF=(E,A)
         LTR   RETCDREG,RETCDREG       CHECK RET. CODE FROM IKJEBEUT
         BZ    CONT5                   R.C.=0 THEN GO TO CONT5
         C     RETCDREG,FTDC4          TEST WHETHER R.C.=4
         BE    MSG10                   R.C.=4 THEN GO TO MSG10
         B     IOERR                   OTHERWISE BRANCH UNCOND. TO
*                                      IOERR
FRSTNUM  ST    TESTREG,FNUM
         L     TESTREG,COUNT
         LTR   TESTREG,TESTREG         TEST WHETHER 'COUNT' IS PRESENT
         BZ    MODEL                   'COUNT' NOT SPEC. THEN GO TO
*                                      TURN SW2 ON
         LH    ADDREG,COUNT+FT4        PUT LENGTH OF COUNT IN 2 LOW
*                                      ORDER BYTES OF ADDREG
         BCTR  ADDREG,PARMREG0         CONTENT OF ADDREG - 1
         EX    ADDREG,PACKED           CONVERSION INTO BINARY
         CVB   BINREG,COPACKED         CONV. 'COUNT' INTO BINARY
         BCTR  BINREG,PARMREG0         CONTENT OF BINREG - 1
         A     BINREG,FNUM             1ST NUMBER + BINARY COUNT - 1
*                                      =2ND NUMBER
COMB     L     TESTREG,FNUM
         CVD   TESTREG,UNPACK1         CONVERT 1ST REL. REC. NUM. FROM
*                                      BINARY TO PACKED DEC.
         UNPK  DFNUM(FT8),UNPACK1(FT8) CONVERT 1ST REL. REC. NUM. FROM
*                                      PACKED DEC. TO ZONED DEC.
         OI    DFNUM+FT7,POS
         LA    TEMPREG,DFNUM
         ST    TEMPREG,ASTERSK         PUT ADDRESS OF DFNUM IN ASTERSK
         MVC   ASTERSK+FT4(FT2),FTH8   PUT LENGTH OF 8 IN ASTERSK+4
         TM    SW,SW2
         BO    DA                      SW2 ON THEN GO TO DA
         CVD   BINREG,UNPACK2          CONVERT 2ND REL. REC. NUM. FROM
*                                      BINARY TO PACKED DEC.
         UNPK  DSECNUM(FT8),UNPACK2(FT8)  CONVERT 2ND REL. REC. NUM.
*                                      FROM PACKED DEC. TO ZONED DEC.
         OI    DSECNUM+FT7,POS
         LA    TEMPREG,DSECNUM
         ST    TEMPREG,COUNT           PUT ADDRESS OF DSECNUM IN COUNT
         MVC   COUNT+FT4(FT2),FTH8     PUT LENGTH OF 8 IN COUNT +4
         B     DA                      BRANCH UNCOND. TO DA
CTOFF    XC    COUNT(FT4),COUNT        ZERO OUT COUNT FIELD
MODEL    OI    SW,SW2                  TURN SWITCH 2 ON TO BUILD BUFFER
*                                      WITH 1ST LINE NUMBER ONLY
         B     COMB                    BRANCH TO CONVERT 1ST LINE NO.
*                                      INTO ZONE DEC.
         SPACE 2
***********************************************************************
*    MSG6- 'NOT ENOUGH MAIN STORAGE TO EXECUTE FORMAT' IS ISSUED HERE
***********************************************************************
MSG6     MVC   B(FT12),INLIST6         MSG6-'NO SPACE AVAIL.' FROM
*                                      PARSE
         IKJEBEML M312,,SUBCMD,,MF=(E,B)
         B     FLUSH                   PUT R.C.=8 AND RET. TO
*                                      CONTROLLER
CONT3    LA    TEMPREG,FT8             PUT R.C.=8
         B     ACHECK                  BR TO SEE IF ALLOC WAS DONE
LINENUM  MVC   FNUM(FT4),CACURNUM      PUT CURRENT LINE VALUE IN FNUM
TESTKEY  MVC   COKEYA(FT4),CACURNUM    SET COKEYA TO *
         CLC   CABFRP2(FT4),CACURNUM   TEST WHETHER KEY VALUE OF 1ST
*                                      RECORD = *
         BE    NORM                    KEY VALUE OF 1ST REC.=* THEN
*                                      GO TO CONVERT COUNT INTO BINARY
         SPACE 2
***********************************************************************
*    IKJEBEUT IS CALLED THROUGH IKJEBESR TO READ RECORD WITH LINE NO.
*    VALUE='*'
***********************************************************************
         MVC   COWORD1(FT4),CAPTCDCB   PUT ADDRESS OF UTILITY DCB IN 3
*                                      LOW ORDER BYTES OF 1ST PARAM
*                                      WORD
         MVI   COWORD1,XZERO           PUT READ CURRENT REF. REC. CODE
*                                      IN HIGH ORDER BYTE OF 1ST PARAM
*                                      WORD
         LA    BINREG,COKEYA           LET 2ND PARAM WORD POINT TO
         ST    BINREG,COWORD2          COKEYA
         LA    BINREG,CABFRP2          LET 3RD PARAM WORD POINT TO
         ST    BINREG,COWORD3          BUFFER POOL
         MVI   COWORD3,END             PUT X'80' IN HIGH ORDER BYTE
*                                      OF 3RD PARAM WORD
         LA    UTREG,COWORD1
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),(UTREG)),MF=(E,A)
         LTR   RETCDREG,RETCDREG
         BZ    NORM                    R.C.=0 THEN GO TO NORM
         C     RETCDREG,FTDC4
         BE    MSG10                   R.C.=4 THEN GO TO MSG10
         B     IOERR                   OTHERWISE BRANCH UNCOND. TO
*                                      IOERR
NORM     L     TESTREG,COUNT
         LTR   TESTREG,TESTREG         TEST WHETHER 'COUNT' IS PRESENT
         BZ    MODEL                   IF NOT BRANCH TO MODEL
         LH    ADDREG,COUNT+FT4        PUT LENGTH OF COUNT IN ADDREG
         BCTR  ADDREG,PARMREG0         PUT COUNT - 1 IN ADDREG
         EX    ADDREG,PACKED           CONVERSION INTO BINARY
         CVB   BINREG,COPACKED
         CH    BINREG,FTH1             IS BINREG EQUAL TO 1.
         BNH   CTOFF                   IF ONE THEN BRANCH TO CTOFF
         LR    WORK6,BINREG
         BCTR  WORK6,PARMREG0          PUT COUNT - 1 IN WORK6
LOOP     MVI   COWORD1,AFTER
         LA    TESTREG,COKEYA
         ST    TESTREG,COWORD2
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),(UTREG)),MF=(E,A)
         LTR   RETCDREG,RETCDREG
         BZ    ACTION1                 R.C.=0 THEN GO TO ACTION1
         C     RETCDREG,FTDC4          TEST WHETHER R.C.=4
         BE    ACTION2                 R. C.=4 THEN GO ACTION2
         B     IOERR                   BRANCH UNCOND. TO IOERR
ACTION1  MVC   COKEYA(FT4),CABFRP2
         BCT   WORK6,LOOP              CONTENT OF WORK6 - 1 AND
*                                      BRANCH TO LOOP IF CONTENT OF
*                                      WORK6 = 0
         L     BINREG,COKEYA           2ND LINENUM IN BINREG
         B     COMB                    BRANCH UNCOND. TO COMB
ACTION2  L     BINREG,CABFRP2          PUT 2ND LINE NO. IN BINREG
         B     COMB                    BRANCH UNCOND. TO COMB
TEST1ST  C     TESTREG,CABFRP2         TEST WHETHER RECORD 0 EXISTS
         BE    CALC                    RECORD 0 EXISTS THEN GO TO CALC
         OI    ZSW,SW1                 INDICATE THAT *=0
         MVC   CACURNUM(FT4),CABFRP2   SET * TO KEY VALUE OF 1ST RECORD
         B     CALC                    BRANCH TO TEST WHETHER DATA SET
*                                      IS LINE-NUMBERED
MSG10    MVC   B(FT12),INLIST2
         IKJEBEML M504,,LINENOA,,MF=(E,B)
         B     CONT3                   BRANCH TO INDICATE FLUSH
         SPACE 3
***********************************************************************
*    CONSTANT AREA FOR IKJEBEFO
***********************************************************************
         DS    0F
         SPACE 2
***********************************************************************
*    MACROS OF IKJPARSE
***********************************************************************
IKJEBFO0 IKJPARM DSECT=FTPDL
ASTERSK  IKJIDENT 'ASTERISK OR LINE NUMBER 1',ASTERISK,MAXLNTH=8,      *
               FIRST=NUMERIC,OTHER=NUMERIC
COUNT    IKJIDENT 'COUNT OR LINE NUMBER 2',MAXLNTH=8,FIRST=NUMERIC,    *
               OTHER=NUMERIC
PAGE     IKJKEYWD
         IKJNAME  'PAGE',SUBFLD=NUMBER
NUM      IKJKEYWD DEFAULT='SNUM'
         IKJNAME  'NUM'
         IKJNAME  'NONUM'
         IKJNAME  'SNUM'
PAUSE    IKJKEYWD DEFAULT='NOPAUSE'
         IKJNAME  'PAUSE'
         IKJNAME  'PAUSE1'
         IKJNAME  'NOPAUSE'
PRINT    IKJKEYWD
         IKJNAME  'PRINT',SUBFLD=DSNAME
NUMBER   IKJSUBF
PNUM1    IKJIDENT 'PAGE NUMBER 1',MAXLNTH=8,FIRST=NUMERIC,             X
               OTHER=NUMERIC,PROMPT='PAGE NUMBER 1'
PNUM2    IKJIDENT 'PAGE NUMBER 2',MAXLNTH=8,FIRST=NUMERIC,OTHER=NUMERIC
DSNAME   IKJSUBF
ONAME    IKJPOSIT DSNAME,PROMPT='PRINT DSNAME'
OTYPE    IKJKEYWD  DEFAULT='T'
         IKJNAME 'PC'
         IKJNAME 'PS'
         IKJNAME 'T'
         IKJENDP
         SPACE 2
FTDC4    DC    F'4'                    FULLWORD OF 4
FTDC8    DC    F'8'                    FULLWORD OF 8
FTDC9    DC    F'9'                    FULLWORD OF 9
FTDC11   DC    F'11'                   FULLWORD OF 11
FTDC12   DC    F'12'                   FULLWORD OF 12
FTDC16   DC    F'16'                   FULLWORD OF 16
FTDC21   DC    F'21'                   FULLWORD OF 21
FTH0     DC    H'0'                    HALF WORD OF ZERO
FTH1     DC    H'1'                    HALF WORD OF CONSTANT 1
FTH2     DC    H'2'                    HALF WORD OF CONSTANT 2
FTH7     DC    H'7'                    HALFWORD OF CONSTANT 7
FTH8     DC    H'8'                    HALF WORD OF CONSTANT 8
FTH13    DC    H'13'                   HALF WORD OF CONSTANT 13
CHAR     DC    C'FORMAT '              CHAR. FORMAT
CPAGE    DC    CL5'PAGE('              CHAR. 'PAGE('
CNUM     DC    CL4' NUM'               CHAR. ' NUM'
CSNUM    DC    CL5' SNUM'              CHAR. ' SNUM'
CNONUM   DC    CL6' NONUM'             CHAR. ' NONUM'
CPAUSE   DC    CL6' PAUSE'             CHAR. ' PAUSE'
CPAUSE1  DC    CL7' PAUSE1'            CHAR. ' PAUSE1'
CNOPAUSE DC    CL8' NOPAUSE'           CHAR. ' NOPAUSE'
CPRINT   DC    CL7' PRINT('            CHAR. ' PRINT('
RIGHTQ   DC    C')'''                  RIGHT PARENTHESIS FOLLOWED BY
*                                      QUOTE
CPC      DC    CL4',PC)'               CHAR. ',PC)'
CPS      DC    CL4',PS)'               CHAR. ',PS)'
CT       DC    CL3',T)'                CHAR. ',T)'
MOVE1    MVC   CABFRP1+FT12(FT0),CASADSN
MOVE2    MVC   FT0(FT0,ADDREG),FT0(WORK6)  PUT LINENUM 1 IN BUFFER
MOVE6    MVC   FT0(FT0,ADDREG),FT0(TESTREG)  PUT MEMBER IN BUFFER
PACKED   PACK  COPACKED(FT8),FT0(FT0,TESTREG)
ADFTPCL  DC    A(IKJEBFO0)             ADCON OF PCL
SUBCMD   IKJEBEMG ,M312IN1,'FORMAT'
INS12    IKJEBEMG CODE12,M3131IN1,'PARSE'
CODE12   IKJEBEMG 0,M3131IN2,'12'
LINENOA  IKJEBEMG ,M504IN1,'*'
INLIST2  IKJEBEML M504,,LINENOA,,MF=L
INLIST3  IKJEBEML M501,MF=L
INLIST3L EQU  *-INLIST3
INLIST6  IKJEBEML M312,,SUBCMD,,MF=L
INLIST8  IKJEBEML M313,M3131,,INS12,MF=L
         SPACE 2
         IKJPPL
         SPACE 2
         IKJCPPL
         SPACE 2
         IKJEBECA
         SPACE 2
         ORG   CASCWKA                 SUBCOMMAND WORK AREA
UNPACK1  DS    D                       DOUBLE WORD FOR PACKED DEC.
UNPACK2  DS    D                       DOUBLE WORD FOR PACKED DEC.
DFNUM    DS    D                       ZONED DEC. FOR 1ST LINENUM
DSECNUM  DS    D                       ZONED DEC. FOR 2ND LINENUM
COPACKED DS    D                       DOUBLE WORD FOR PACKED DEC.
FNUM     DS    F                       1ST LINENUM IN ZONED DEC. FORM
CIWORD1  DS    F                       1ST PARAM WORD FOR CI
CIWORD2  DS    F                       2ND PARAM WORD FOR CI
COWORD1  DS    F                       1ST PARAM WORD FOR UT
COWORD2  DS    F                       2ND PARAM WORD FOR UT
COWORD3  DS    F                       3RD PARAM WORD FOR UT
B        DS    10F                     10 FULL WORDS FOR ML MACRO
A        DS    5F                      5 FULLWORDS FOR SH MACRO
COKEYA   DS    F                       CURRENT REF. VALUE IN UT
ZSW      DS    X                       CACURNUM=0 SWITCH
SW       DS    X                       SWITCH
ASW      DS    X                       ALLOCATION SWITCH
         SPACE 2
         ORG   CABFRPL                 BUFFER POOL IN COMM. AREA
CABFRP1  DS    67F                     MODEL COMMAND BUFFER
CABFRP2  DS    65F                     BUFFER BUILT IN THIS SUBCMD.
         END
