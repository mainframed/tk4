BEMA     TITLE 'IKJEBEMA - MAIN CONTROLLER - EDIT CP '
IKJEBEMA CSECT
*A671200,762900                                                 YA01660
*A206410-206500,208800                                           A42952
*C209600                                                         A42952
*D207000-207800                                                  A42952
*A329600,596100-596800,604900-606200                             A42953
*D326400-332800,596800,605600                                    A42953
*C936800                                                         A42956
*A651600,731126-732126                                           A45002
*D730130-730132                                                  A45002
*A330600-332600                                                  A45102
*D323200-324800                                                  A45102
*A426900                                                          M2108
*C608800                                                          M2108
*A604804-604888,605350,622400 623100                             A45155
*D622400                                                         A45155
*C604816                                                         A50475
*A356801-356805,926900,940001                                    Y01676
*C928800                                                         Y01676
*A556100-556600                                                  Y02676
*C230400-231200,714400-715200,716000                             Y02676
*A457630-459720,472900-473750,494600-495000,538470-539060,     @Y30NQKK
*A573700-574000,763020-763600,924840-926160,930800,982002      @Y30NQKK
*     PTF UZ05079                                              @ZA09473
*C730006 A730014                                               @ZA26020
       ENTRY IKJEBEMA
         EXTRN IKJEBEAE
         EXTRN IKJEBEAT
         EXTRN IKJEBEUT
         EJECT
***********************************************************************
* MODULE NAME --  IKJEBEMA                                            *
*                                                                     *
* DESCRIPTIVE NAME -- MAIN CONTROLLER - EDIT CP                       *
*                                                                     *
* COPYRIGHT -- N/A                                                    *
*                                                                     *
* CHANGE ACTIVITY -- SEE INFORMATION PRECEDING PROLOGUE               *
*                                                                     *
* STATUS -- VERSION NO. 02, VS2 RELEASE 3                             *
*                                PTF UZ05079 RECURSIVE ABENDS @ZA09473*
*                                                                     *
* FUNCTION --  THIS ROUTINE CONTROLS THE EDIT COMMAND PROCESSOR       *
*    AFTER THE INITIALIZATION PROCESS IS COMPLETE.                    *
*                                                                     *
*    INITIALLY THIS ROUTINE ISSUES THE STAX AND STAE MACRO            *
*    INSTRUCTIONS TO ESTABLISH THE ATTENTION EXIT AND THE             *
*    ABNORMAL END EXIT, RESPECTIVELY.  IF THE SCAN OPERAND WAS        *
*    SPECIFIED ON THE EDIT COMMAND OR IF THE DATA SET TYPE IS         *
*    BASIC OR IPLI, THE SCAN SUBCOMMAND (IKJEBESC) IS INVOKED TO      *
*    PERFORM INITIAL PROCESSING REQUIRED BY THE LANGUAGE              *
*    PROCESSOR (LANGPRCR).                                            *
*                                                                     *
*    AFTER ITS INITIALIZATION PROCESSING (ABOVE), IKJEBEMA            *
*    DETERMINES WHICH MODE IS TO BE ENTERED FIRST.  IF THE DATA       *
*    SET OR MEMBER IS NEW AND IS TO BE CREATED, INPUT MODE            *
*    (IKJEBEIP) IS INVOKED INITIALLY.  IF THE DATA SET OR MEMBER      *
*    IS OLD, SUBCOMMAND MODE IS ENTERED INITIALLY.                    *
*                                                                     *
*    IN SUBCOMMAND MODE, THIS ROUTINE TESTS 'CAMODMSG' TO DETERMINE   *
*    IF THE MODE MESSAGE IS TO BE ISSUED.  THE PUTGET SERVICE         *
*    ROUTINE IS INVOKED TO PUT THE MODE MESSAGE, IF NECESSARY,        *
*    AND TO GET A LINE OF INPUT (A SUBCOMMAND) FROM THE CURRENT       *
*    SOURCE.  IF THE LINE RETURNED BY PUTGET IS NULL, I.E., HAS       *
*    A LENGTH OF FOUR (4), CONTROL IS PASSED TO IKJEBEIP.             *
*    OTHERWISE, THE SCAN SERVICE ROUTINE IS CALLED TO SCAN OFF        *
*    THE SUBCOMMAND NAME.                                             *
*                                                                     *
*    WHEN A SUBCOMMAND NAME IS KNOWN, IT IS COMPARED WITH EACH        *
*    ABBREVIATION AND SUBCOMMAND NAME IN THE IBM TABLE OF             *
*    SUBCOMMANDS (IKJEBMA8).  IF NO MATCH IS FOUND, THE USER          *
*    TABLE OF SUBCOMMANDS (IKJEBMA9) IS ALSO SEARCHED.  IF A          *
*    MATCH IS FOUND, THE SUBCOMMAND PROCESSOR IS INVOKED VIA THE      *
*    IKJEBESH MACRO INSTRUCTION. UPON RETURN FROM A SUBCOMMAND        *
*    PROCESSOR, PROCESSING CONTINUES DEPENDING UPON THE RETURN        *
*    CODE  (SEE BELOW). IF NO MATCH IS FOUND,                         *
*    IMPLICIT EXEC PROCESSING IS INITIATED. IF THE COMMAND WAS NOT    *
*    AN EXEC COMMAND, AN ERROR  MESSAGE IS PUT OUT, A TCLEARQ AND     *
*    STACK WITH DELETE=ALL ARE ISSUED, AND PROCESSING CONTINUES       *
*    AS FOR SUBCOMMAND RETURN CODE 0 (SEE BELOW).                     *
*                                                                     *
*    RETURN CODE ZERO (00) -- THE ATTENTION ISSUED                    *
*    FLAG (CAATTNIS) IS CHECKED TO DETERMINE IF THE SUBCOMMAND        *
*    PROCESSOR WAS INTERRUPTED DUE TO AN ATTENTION.  IF AN            *
*    ATTENTION WAS ISSUED, CAATTNIS IS SET TO ZERO, TCLEARQ AND
*    STACK DELETE ARE ISSUED, AND THE NEXT
*    SUBCOMMAND BUFFER TO BE PROCESSED IS POINTED TO BY CAPTIBFR      *
*    (SEE NOTES BELOW).  PROCESSING CONTINUES BY INVOKING THE         *
*    SCAN SERVICE ROUTINE AS ABOVE.  WHEN AN ATTENTION INTERRUPT      *
*    WAS NOT ISSUED, A TEST IS MADE TO DETERMINE IF A VERIFY          *
*    REQUEST IS PENDING (CALNTOVF AND CAVRFYSW BOTH SET TO ONE).      *
*    WHEN VERIFY HAS BEEN REQUESTED, THE MESSAGE SELECT ROUTINE       *
*    (IKJEBEMS) IS INVOKED TO PROCESS THE VERIFY REQUEST.             *
*    PROCESSING CONTINUES BY INVOKING THE PUTGET SERVICE ROUTINE      *
*    AS ABOVE.                                                        *
*                                                                     *
*    RETURN CODE FOUR (04) -- CONTROL IS PASSED TO IKJEBEIP.          *
*                                                                     *
*    RETURN CODE EIGHT (08) -- IF THE SOURCE OF INPUT TO EDIT IS      *
*    THE TERMINAL, A TCLEARQ IS ISSUED FOR THE INPUT AND OUTPUT       *
*    QUEUES, AND PROCESSING CONTINUES AS FOR RETURN CODE ZERO (0)     *
*    ABOVE.  IF THE SOURCE OF INPUT TO EDIT IS AN IN-CORE             *
*    PROCEDURE, EDIT IS TERMINATED (CLEARING QUEUES AND DELETING      *
*    ALL BUT THE TERMINAL FROM THE INPUT STACK).                      *
*                                                                     *
*    RETURN CODE 12 -- CONTROL IS RETURNED TO THE TMP (SEE            *
*    TERMINATION PROCESSING BELOW).                                   *
*                                                                     *
*    RETURN CODE 16 -- AN ERROR OCCURRED IN LANGPRCR.  SET            *
*    CASCRC20 AND INVOKE IKJEBESC TO ATTEMPT RECOVERY.                *
*                                                                     *
*    TERMINATION PROCESSING -- THIS ROUTINE TERMINATES THE EDIT       *
*    COMMAND PROCESSOR WHENEVER A RETURN CODE 12 IS RETURNED BY       *
*    A SUBCOMMAND PROCESSOR.  IF END SUBCOMMAND PROCESSING IS         *
*    COMPLETE (MAENDPRC IS ONE), THE COMMUNICATION AREA IS            *
*    FREEMAIN'D AND CONTROL IS RETURNED TO THE TMP WITH A RETURN      *
*    CODE OF ZERO (00).  WHEN END PROCESSING IS NOT COMPLETE, THE     *
*    END SUBCOMMAND PROCESSOR IS INVOKED TO PERFORM TERMINATION       *
*    PROCESSING.  AFTER END PROCESSING IS COMPLETE, CONTROL IS        *
*    RETURNED TO THE TMP WITH A RETURN CODE OF 12.                    *
*                                                                     *
*    STAE RETRY ROUTINE -- IKJEBEMA ALSO CONTAINS THE STAE RETRY      *
*    ROUTINE.  THIS ROUTINE GAINS CONTROL ONCE THE STAE EXIT HAS      *
*    PROCESSED SUCCESSFULLY.  THE RETRY ROUTINE RESTORES IKJEBEMA     *
*    REGISTERS, BUILDS AN END SUBCOMMAND IN CORE, AND BRANCHES        *
*    INTO THE MAINLINE CODE TO PROCESS THE SUBCOMMAND.                *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBEMA -- VIA A TRANSFER OF CONTROL (XCTL) FROM THE       *
*                     INITIALIZATION ROUTINE (IKJEBEIN).              *
*                                                                     *
* INPUT --                                                            *
*    REGISTER ONE (1) CONTAINS A POINTER TO IKJEBECA, THE EDIT        *
*    COMMUNICATION AREA.                                              *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER 15 CONTAINS A RETURN CODE INDICATING WHETHER EDIT       *
*    COMPLETED SUCCESSFULLY.  RETURN CODES ARE --                     *
*    00 - SUCCESSFUL TERMINATION                                      *
*    12 - ABNORMAL TERMINATION.                                       *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IKJPTGT  - PUTGET SERVICE ROUTINE.                          *
*         IKJSCAN  - SCAN SERVICE ROUTINE.                            *
*         IKJSTACK - STACK SERVICE ROUTINE.                           *
*         IKJEBMA1 - MESSAGE PROCESSING ROUTINE.                      *
*         IKJEBMA2 - INPUT STACK CLEAN-UP ROUTINE.                    *
*         IKJEBMA3 - IMPLICIT EXEC PROCESSING                 @Y30NQKK*
*         IKJEBMA8 - IBM SUBCOMMAND TABLE.                            *
*         IKJEBMA9 - USER SUBCOMMAND TABLE.                           *
*         IKJEBEAE - ABNORMAL END EXIT.                               *
*         IKJEBEAT - ATTENTION EXIT.                                  *
*         IKJEBEUT - ACCESS METHOD INTERFACE ROUTINE.                 *
*         IKJEBEBO - BOTTOM SUBCOMMAND PROCESSOR.                     *
*         IKJEBECH - CHANGE SUBCOMMAND PROCESSOR.                     *
*         IKJEBEDE - DELETE SUBCOMMAND PROCESSOR.                     *
*         IKJEBEDO - DOWN SUBCOMMAND PROCESSOR.                       *
*         IKJEBEEN - END SUBCOMMAND PROCESSOR.                        *
*         IKJEBEFI - FIND SUBCOMMAND PROCESSOR.                       *
*         IKJEBEFO - FORMAT SUBCOMMAND PROCESSOR.                     *
*         IKJEBEHE - HELP SUBCOMMAND PROCESSOR.                       *
*         IKJEBEIP - INPUT SUBCOMMAND PROCESSOR.                      *
*         IKJEBEIS - INSERT SUBCOMMAND PROCESSOR.                     *
*         IKJEBELI - IMPLICIT SUBCOMMAND PROCESSOR.                   *
*         IKJEBELT - LIST SUBCOMMAND PROCESSOR                        *
*         IKJEBEME - MERGE SUBCOMMAND PROCESSOR.                      *
*         IKJEBEPR - PROFILE SUBCOMMAND PROCESSOR.                    *
*         IKJEBERE - RENUM SUBCOMMAND PROCESSOR.                      *
*         IKJEBERU - RUN SUBCOMMAND PROCESSOR.                        *
*         IKJEBESA - SAVE SUBCOMMAND PROCESSOR.                       *
*         IKJEBESC - SCAN SUBCOMMAND PROCESSOR.                       *
*         IKJEBETA - TABSET SUBCOMMAND PROCESSOR.                     *
*         IKJEBETO - TOP SUBCOMMAND PROCESSOR.                        *
*         IKJEBEUP - UP SUBCOMMAND PROCESSOR.                         *
*         IKJEBEVE - VERIFY SUBCOMMAND PROCESSOR.                     *
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         SAVE     - ENTRY LINKAGE.                                   *
*         STAX     - ESTABLISH ATTENTION EXIT.                        *
*         STAE     - ESTABLISH ABNORMAL END EXIT.                     *
*         LOAD     - OBTAIN LANGPRCR.                                 *
*         IKJEBESH - INVOKE EDIT ROUTINES.                            *
*         DELETE   - DELETE LANGPRCR FROM CORE.                       *
*         CALL     - BRANCH TO INTERNAL ROUTINE.                      *
*         PUTGET   - PUT MODE MESSAGE, GET SUBCOMMAND.                *
*         LINK     - INVOKE SERVICE FUNCTIONS.                        *
*         FREEMAIN - FREE COMMUNICATION AREA.                         *
*         RETURN   - RETURN CONTROL TO TMP.                           *
*         TCLEARQ  - ISSUED TO CLEAR INPUT OR OUTPUT QUEUES.          *
*         TSEVENT  - ISSUED TO PROVIDE SUBCOMMAND TRACE INFO.   Y02676*
*         STACK    - ISSUED TO INVOKE STACK SERVICE ROUTINE.          *
*         CALLTSSR - ISSUED TO INVOKE COMMAND SCAN            @Y30NQKK*
*         CVT      - MAPS COMMUNICATION VECTOR TABLE          @Y30NQKK*
*         IKJEBESV - EDIT ENTRY LINKAGE.                              *
*         IKJEBEML - INVOKE MESSAGE SELECT ROUTINE.                   *
*         IKJEBERT - EDIT EXIT LINKAGE.                               *
*         IKJEBEMG - BUILD INSERTION RECORD FOR MESSAGE.              *
*         IKJEBECA - MAPS EDIT COMMUNICATION AREA.                    *
*         IKJEBEMI - DEFINES SYMBOLIC NAMES FOR MESSAGES.             *
*         IKJCPPL  - MAPS COMMAND PROCESSOR PARAMETER LIST.           *
*         IKJECT   - MAPS ENVIRONMENT CONTROL TABLE.                  *
*         IKJCSOA  - MAPS SCAN OUTPUT AREA.                           *
*         IKJPGPB  - MAPS PUTGET PARAMETER BLOCK.                     *
*         IKJEBEST - BUILDS IBM AND USER SUBCOMMAND TABLES.           *
*                                                                     *
* * EXITS,NORMAL --                                                   *
*    RETURN TO THE TMP WITH A RETURN CODE ZERO (0) IN REGISTER 15     *
*                                                                     *
* EXITS,ERROR --                                                      *
*    RETURN TO THE TMP WITH A RETURN CODE 12 IN REGISTER 15.          *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    DATA AREAS DEFINED BY THIS MODULE --                             *
*    CAMAWKA -- IN IKJEBECA -- MAIN CONTROLLER WORK AREA.             *
*    CABFRPL -- IN IKJEBECA -- AUXILIARY BUFFER SPACE.                *
*    CASVAREA -- IN IKJEBECA -- MODULE SAVE AREA.                     *
*                                                                     *
*    DATA AREAS UPDATED BY THIS MODULE --                             *
*    IN IKJEBECA -- CAATTNIS, CAIMSC, CAINITSC, CALNTOVF, CAINPROC,   *
*    CAMODMSG, CAOPERND, CAPTGTBF, CASCRC20, CATPUTVF, CANXTSVA,      *
*    CAPTCHK, CAPTIBFR, CAPTLE, CAPTRTRY, CAPTSCMD, CASCMDLN,         *
*    CASTAEPL, CASTAXPL, CASRPLST, CAPTUT, CAPTAE, CAPTAT.            *
*                                                                     *
*    IN ECT -- ECTMSGF, ECTSCMD.                                      *
*                                                                     *
* ATTRIBUTES --                                                       *
*    READ ONLY, NON-PRIVILEGED, REFRESHABLE, RE-ENTRANT.              *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THIS MODULE IS DEPENDENT UPON THE EBCDIC COLLATING SEQUENCE      *
*    TO ISOLATE THE IMPLICIT SUBCOMMAND.                              *
*                                                                     *
* NOTES --                                                            *
*    (1) THE FOLLOWING CONVENTION IS USED BETWEEN A SUBCOMMAND        *
*    PROCESSOR AND IKJEBEMA TO INDICATE THAT THE NEXT SUBCOMMAND      *
*    IS ALREADY IN CORE --                                            *
*                                                                     *
*    CAATTNIS = 1 AND CAPTIBFR = THE ADDRESS OF THE NEW               *
*    SUBCOMMAND.                                                      *
*                                                                     *
*    (2) THE END SUBCOMMAND PROCESSOR USES THE MAIN CONTROLLER        *
*    WORK AREA (CAMAWKA) IN THE COMMUNICATION AREA.  THE              *
*    COMMUNICATION OF END PROCESSING BETWEEN THE END SUBCOMMAND       *
*    PROCESSOR AND IKJEBEMA IS DEPENDENT UPON BIT 2, BYTE 28 OF       *
*    CAMAWKA.  CARE MUST BE EXERCISED IN MODIFYING CAMAWKA IN         *
*    EITHER THIS MODULE OR IKJEBEEN.                                  *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   GENERAL PURPOSE REGISTER EQUATES FOR THIS ROUTINE.                *
*                                                                     *
***********************************************************************
PARMREG0 EQU   0
PARMREG1 EQU   1              ADDRESS OF EDIT COMMUNICATION AREA.
COMMREG  EQU   9              BASE REGISTER USED TO REFERENCE
*                                  THE COMMUNICATION AREA
BASEREG  EQU   11             BASE REGISTER FOR THIS CSECT.
DATAREG  EQU   12             ADDRESS OF PARAMETER LIST PASSED
*                                  BY IMP.
SAVEREG  EQU   13             ADDRESS OF ROUTINE SAVE AREA.
RETREG   EQU   14             ADDRESS OF RETURN POINT IN CALLING
*                                  MODULE.
RETCDREG EQU   15             RETURN CODE RETURNED TO CALLING
*                                  ROUTINE.
ATOBFREG EQU   2              ADDRESS OF ATTENTION EXIT OUTPUT
*                                  BUFFER.
ATIBFREG EQU   4              ADDRESS OF ATTENTION EXIT INPUT
*                                  BUFFER.
ATOSZREG EQU   3              SIZE OF OUTPUT BUFFER FOR ATTENTION
*                                  EXIT ROUTINE.
ATISZREG EQU   5              SIZE OF INPUT BUFFER FOR ATTENTION
*                                  EXIT ROUTINE.
EPLOCREG EQU   15             ADDRESS OF MODULE TO BE GIVEN
*                                  CONTROL.
SCKNMREG EQU   2              SYNTAX CHECKER MODULE NAME.  (THIS
*                                  IS FLOATING POINT REGISTER 2).
TMPCDREG EQU   7              TEMPORARY RETURN CODE, REGISTER
*                                  USED TO TEST RETURN CODE FROM
*                                  SUBCOMMANDS
IBFPTREG EQU   8              POINTER TO TERMINAL INPUT BUFFER.
UPTREG   EQU   2              ADDRESS OF UPT.
PSCBREG  EQU   3              ADDRESS OF PSCB.
ECTREG   EQU   4              ADDRESS OF ECT.
MODEREG  EQU   4              ADDRESS OF EDIT MODE MESSAGE.
PTGTREG  EQU   5              ADDRESS OF PARAMETER LIST FOR
*                                  PUTGET SERVICE ROUTINE.
ECBREG   EQU   3              ADDRESS OF ATTENTION ECB.
BRNCHREG EQU   3              BRANCH REGISTER USED FOR BRANCH
*                                  TABLE FOLLOWING RETURN FROM
*                                  IKJSCAN.  THIS MUST BE AN ODD
*                                  REGISTER.
PTSCMREG EQU   2              POINTER TO SUBCOMMAND NAME.
SCLENREG EQU   3              LENGTH OF SUBCOMMAND AS RETURNED BY
*                                  IKJSCAN.
TBLPTREG EQU   4              POINTER TO TABLE OF SUBCOMMANDS
*                                  (CURRENT ENTRY).
TBLENREG EQU   5              LENGTH OF ENTRY IN SUBCOMMAND
*                                  TABLE.
SCMDREG  EQU   6              ADDRESS OF SUBCOMMAND NAME FOR
*                                  IKJEBESR.
LEV1REG  EQU   2              RELATIVE NUMBER OF FIRST LEVEL
*                                  MESSAGE.
LEV2REG  EQU   3              RELATIVE NUMBER OF SECOND LEVEL
*                                  MESSAGE.
INS1REG  EQU   4              ADDRESS OF INSERTION LIST FOR FIRST
*                                  LEVEL MESSAGE.
INS2REG  EQU   5              ADDRESS OF INSERTION LIST FOR
*                                  SECOND LEVEL MESSAGE.
STAEREG  EQU   2              ADDRESS OF STAE EXIT ROUTINE.
SRRTNREG EQU   8              BRANCH REGISTER FOR RETURN FROM
*                                  SUBCOMMAND.
R2       EQU   2              GENERAL REGISTER 2.
R5       EQU   5              GENERAL REGISTER 5.
R7       EQU   7              GENERAL REGISTER 7.              @ZA09473
         EJECT
***********************************************************************
*                                                                     *
*   PROLOG                                                            *
*                                                                     *
***********************************************************************
         SAVE  (14,12),,*     SAVE ENTRY REGISTERS.
         BALR  BASEREG,X0     ESTABLISH A BASE REGISTER AND
         USING *,BASEREG           ADDRESSABILITY FOR THIS CSECT.
MA000010 EQU   *
         LR    COMMREG,PARMREG1 INITIALIZE ADDRESS OF AND
         USING IKJEBECA,COMMREG    ADDRESSABILITY TO EDITS
*                                  COMMUNICATION AREA.
         LA    DATAREG,CASVAREA ADDRESS OF FIRST SAVE AREA IN
*                                  COMMUNICATION AREA.
         ST    SAVEREG,X4(,DATAREG) CROSS CHAIN SAVE AREAS AND
         ST    DATAREG,X8(,SAVEREG) LOAD SAVEREG WITH FIRST SAVE
         LR    SAVEREG,DATAREG     AREA IN COMMUNICATION AREA.
         LA    DATAREG,X72(,DATAREG) COMPUTE ADDRESS OF NEXT SAVE
         ST    DATAREG,CANXTSVA AREA AND SAVE IN THE
*                                  COMMUNICATION AREA.
         SPACE 5
***********************************************************************
*                                                                     *
*   LOAD REMAINING PERMANENTLY RESIDENT SERVICE ROUTINE.              *
*   (IKJEBELE)                                                        *
*                                                                     *
***********************************************************************
         LOAD  EP=IKJEBELE    LOAD LINE EDIT ROUTINE.
         ST    PARMREG0,CAPTLE SAVE ADDRESS IN THE
*                                  COMMUNICATION AREA.
         MVC   CAPTUT(L'MAPTUT),MAPTUT SET UP ADDRESS OF IKJEBEUT
         EJECT
MASTAX   EQU   *
***********************************************************************
*                                                                     *
*   ESTABLISH AN ATTENTION INTERRUPT EXIT FOR THE EDIT COMMAND        *
*   PROCESSING PROGRAM.  THE MACRO SPECIFIES THE ATTENTION EXIT       *
*   BUFFER, AND THE EXIT MESSAGE CONTAINED IN THIS CSECT.  THE USER   *
*   ADDRESS SPECIFIED IS THAT OF EDITS COMMUNICATION AREA.  THIS IS   *
*   THE ONLY ATTENTION EXIT TO BE ESTABLISHED FOR THIS COMMAND        *
*   PROCESSOR.                                                        *
*                                                                     *
***********************************************************************
         L     EPLOCREG,MAPTAT OBTAIN ENTRY POINT ADDRESS OF
*                                  IKJEBEAT (ATTENTION EXIT).
         LA    ATOBFREG,CAMODETX+X1 ADDRESS OF EDIT MESSAGE TO BE
*                                  ISSUED ON ENTRY TO ATTENTION
*                                  EXIT.
         LH    ATOSZREG,CAMODELN LENGTH OF EDIT MODE MESSAGE.
         LA    PARMREG1,X5(,X0) REDUCE LENGTH BY 5 FOR INSERTION.
         SR    ATOSZREG,PARMREG1   HEADER WORD.
         LA    ATIBFREG,CATEMPBF SPECIFY VALID ADDRESS FOR INPUT A42952
*                                  BUFFER - NO DATA TRANSFER     A42952
*                                  TO THIS BUFFER WILL BE        A42952
*                                  MADE DURING ATTN PROCESSING,  A42952
*                                  HOWEVER.                      A42952
         SR    ATISZREG,ATISZREG INPUT BUFFER LENGTH OF ZERO     A42952
*                                  SPECIFIES NO DATA TRANSFER,   A42952
*                                  WHICH ALLOWS IKJEBEAT TO      A42952
*                                  OBTAIN A LOGICAL LINE FROM    A42952
*                                  THE TERMINAL                  A42952
         MVC   CASTAXPL(MASTAXLN),MASTAXLF MOVE LIST-FORM
*                                  PARAMETERS TO DYNAMIC AREA.
         STAX  (EPLOCREG),OBUF=((ATOBFREG),(ATOSZREG)),                X
               IBUF=((ATIBFREG),(ATISZREG)),USADDR=(COMMREG),    A42952X
               REPLACE=YES,MF=(E,CASTAXPL)  ESTABLISH ATTN EXIT  A42952
*
*   UPON RETURN FROM STAX, TEST RETURN CODE IN REGISTER 15 FOR
*   SUCCESSFUL COMPLETION .  WHEN NO ATTENTION EXIT WAS CREATED,
*   PUT MESSAGE TO TERMINAL AND RETURN TO TMP.
*
         LTR   RETCDREG,RETCDREG TEST FOR RETURN CODE ZERO.
         BZ    MASTAE         IF ZERO, BRANCH TO ESTABLISH
*                                  ABNORMAL END EXIT.
         LA    INS1REG,M1MLSTAX INDEX TO INSERTION FOR COMMAND
*                                  SYSTEM ERROR MESSAGE.
         B     MATERMED       BRANCH TO TERMINATE EDIT.
         EJECT
MASTAE   EQU   *
***********************************************************************
*                                                                     *
*   ESTABLISH AN ABNORMAL END EXIT FOR THE EDIT COMMAND PROCESSING    *
*   PROGRAM.  INITIALIZE THE ADDRESS OF THE STAE RETRY ROUTINE IN     *
*   THE COMMUNICATION AREA.  IF UNABLE TO ESTABLISH AN ABNORMAL       *
*   END EXIT, RETURN TO THE TMP.                                      *
*                                                                     *
***********************************************************************
         LA    EPLOCREG,MAAERTRY OBTAIN ADDRESS OF ESTAE RETRY
         ST    EPLOCREG,CAPTRTRY   ROUTINE AND SAVE IN THE
*                                  COMMUNICATION AREA.
         L     STAEREG,MAPTAE ADDRESS OF ESTAE EXIT ROUTINE.
         MVC   CASTAEPL(MASTAELN),MASTAELF MOVE LIST-FORM
*                                  PARAMETERS TO DYNAMIC AREA.
         ESTAE  (STAEREG),CT,PARAM=(COMMREG),XCTL=YES,                 X
               MF=(E,CASTAEPL),TERM=YES  ESTABLISH ESTAE EXIT.   Y02676
*
*   UPON RETURN FROM ESTAE, TEST RETURN CODE IN REGISTER 15 FOR
*   SUCCESSFUL COMPLETION.  WHEN NO ABNORMAL END EXIT WAS CREATED,
*   PUT MESSAGE TO THE TERMINAL AND RETURN TO THE TMP.
*
         LTR   RETCDREG,RETCDREG TEST FOR RETURN CODE ZERO.
         BZ    MAPREPRC       IF ZERO, BRANCH TO CHECK IF A
*                                  PREPROCESSOR IS NECESSARY.
         LA    INS1REG,M1MLSTAE INDEX TO INSERTION FOR COMMAND
*                                  SYSTEM ERROR MESSAGE.
         B     MATERMED       BRANCH TO TERMINATE EDIT.
         EJECT
MAPREPRC EQU   *
***********************************************************************
*                                                                     *
*   DETERMINE IF A PREPROCESSOR (FOR BASIC OR IPLI) OR A SYNTAX       *
*   CHECKER (FOR PLI, FORT, OR GOFORT) IS REQUIRED.                   *
*                                                                     *
*   1. TEST FOR DATA SET TYPE BASIC OR IPLI.  IF EITHER, CHECK IF     *
*      PREPROCESSOR IS AVAILABLE.  IF PREPROCESSOR IS AVAILABLE. LOAD *
*      PREPROCESSOR AND INVOKE SCAN SUBCOMMAND TO INITIALIZE          *
*      INTERFACE.  IF PREPROCESSOR NOT AVAILABLE, INVOKE MESSAGE      *
*      SELECTION ROUTINE TO INFORM USER.                              *
*                                                                     *
*   2. WHEN DATA SET TYPE IS NOT BASIC OR IPLI, TEST SCAN FLAG TO     *
*      DETERMINE IF SYNTAX CHECKING TO BE USED.  WHEN THE SCAN FLAG   *
*      IS OFF, CONTINUE PROCESSING.  WHEN THE SCAN FLAG IS ON, CHECK  *
*      IF SYNTAX CHECKER IS AVAILABLE.  IF SYNTAX ECHECKER IS         *
*      AVAILABLE, LOAD SYNTAX CHECKER AND INVOKE SCAN SUBCOMMAND TO   *
*      INITIALIZE INTERFACE.  IF SYNTAX CHECKER IS NOT AVAILABLE.     *
*      INVOKE MESSAGE SELECTION ROUTINE TO INFORM USER.               *
*                                                                     *
***********************************************************************
         OI    CACFLAG2,CAMODMSG INDICATE THAT MODE MESSAGE TO BE
*                                  ISSUED.
         CLI   CADSCODE,CABASIC CHECK IF DATA SET TYPE IS BASIC.
         BE    MA001010       BRANCH TO LOAD SYNTAX CHECKER.
         CLI   CADSCODE,CAIPLI CHECK IF DATA SET TYPE IS LEARNERS
*                                  LANGUAGE.
         BE    MA001010       BRANCH TO LOAD SYNTAX CHECKER.
         TM    CACFLAG2,CASCANON CHECK IF SYNTAX CHECKING TO BE
*                                  INVOKED.
         BZ    MADSSTAT       IF NOT, BRANCH TO CHECK DATA SET
*                                  STATUS (NEW OR OLD).
MA001010 EQU   *
         LD    SCKNMREG,CASYNAME OBTAIN NAME OF SYNTAX CHECKER
         LTDR  SCKNMREG,SCKNMREG   AND DETERMINE IF MODULE IS IN
*                                  SYSTEM.
         BZ    MADSSTAT       IF SYNTAX CHECKER NOT PRESENT,
*                                  BRANCH TO CHECK DATA SET
*                                  STATUS.
MA001020 EQU   *
         LA    PARMREG0,CASYNAME ADDRESS OF MODULE NAME FOR
*                                  SYNTAX CHECKER/PREPROCESSOR.
         LOAD  EPLOC=(0)      LOAD SYNTAX CHECKER/PREPROCESSOR.
         ST    PARMREG0,CAPTCHK SAVE ENTRY POINT ADDRESS FOR
*                                  SYNTAX CHECKER.
         EJECT
***********************************************************************
*                                                                     *
*   INVOKE SCAN SUBCOMMAND (IKJEBESC) TO INITIALIZE SYNTAX            *
*   CHECKER INTERFACE.                                                *
*                                                                     *
*   BUILD SCAN ''ON'' COMMAND IN TERMINAL INPUT BUFFER AND TURN ON    *
*   FLAG TO INDICATE THAT SCAN IS BEING CALLED BY IKJEBEMA.           *
*                                                                     *
***********************************************************************
         LA    BRNCHREG,MADSSTAT SET BRANCH ADDRESS FOR
*                                  SUCCESSFUL RETURN FROM SCAN.
*                                  SCAN CAN BE CALLED AT MOST
*                                  THREE TIMES -- 1. TO PERFORM
*                                  INITIAL ENTRY, 2. TO ATTEMPT
*                                  RECOVERY, AND 3. TO CLEAN-UP
*                                  IF RECOVERY IS NOT POSSIBLE.
*                                  THIS ADDRESS MUST REMAIN FOR
*                                  ALL THREE SITUATIONS SO THAT
*                                  THE INITIAL MODE MAY BE
*                                  DETERMINED.
MASCANON EQU   *
         OI    CACFLAG1,CAINITSC INDICATE TO SCAN THAT INITIAL
*                                  CALL IS FROM THE CONTROLLER.
         MVC   CABFRPL(SCNONEND-SCNONMSG),SCNONMSG MOVE SCAN
*                                  ON MESSAGE TO GOTTEN CORE.
         LA    PARMREG1,CABFRPL OBTAIN ADDRESS OF SCAN ON
*                                  MESSAGE
         ST    PARMREG1,CAPTIBFR PLACE ADDRESS OF DUMMY
*                                  SUBCOMMAND IN COMMUNICATION
*                                  AREA FOR IKJEBESC.
         MVI   CAPTIBFR,CAOPERND INDICATE THAT OPERANDS ARE
*                                  PRESENT ON SUBCOMMAND.
         IKJEBESH (COMMREG),IKJEBESC,PARAM=((COMMREG)),                X
               MF=(E,MASRPLST) INVOKE IKJEBESC FOR INITIAL ENTRY.
         LTR   RETCDREG,RETCDREG TEST RETURN CODE FROM IKJEBESC.
         BNZ   MASCERR        IF NOT ZERO, BRANCH TO DIAGNOSE ERROR.
         NI    CACFLAG1,X255-CAINITSC TURN OFF INITIAL CALL FLAG
*                                  FOR IKJEBESC.
         BR   BRNCHREG        BRANCH TO EXECUTE INITIAL MODE
*                                  DETERMINATION (IF SCAN WAS
*                                  CALLED FOR INITIAL ENTRY) OR
*                                  TO CHECK FOR AN ATTENTION (IF
*                                  SCAN WAS CALLED FOR RECOVERY).
MASCERR  EQU   *
         LA    TMPCDREG,RCODE12 CREATE CONSTANT FOR RETURN CODE
*                                  TEST.
         CR    TMPCDREG,RETCDREG TEST FOR RETURN CODE 12.
         BE    MAEXIT         IF RETURN CODE IS 12, BRANCH TO
*                                  TERMINATE EDIT.
         B     MASYNR20       FOR RETURN CODE = 16, BRANCH TO
*                                  ATTEMPT SYNTAX CHECKER
*                                  RECOVERY.
         EJECT
MADSSTAT EQU   *
***********************************************************************
*                                                                     *
*   DETERMINE STATUS OF EDIT DATA SET.                                *
*                                                                     *
*   TEST NEW/OLD DATA SET FLAG.  IF DATA SET IS NEW, INVOKE INPUT     *
*   MODE TO PROCESS INPUT DATA FROM TERMINAL.   IF DATA SET IS OLD,   *
*   BRANCH TO OBTAIN SUBCOMMAND FROM TERMINAL.                        *
*                                                                     *
***********************************************************************
         TM    CAEDFLAG,CAEDMEM+CAEDDISP CHECK IF MEMBER EXISTS
*                                  AND IF DATA SET IS OLD.
         BO    MAGETSUB       IF BOTH OLD, BRANCH TO GET
*                                  SUBCOMMAND.
         BZ    MAINPUT        IF BOTH NEW, BRANCH TO INVOKE INPUT
         TM    CAEDFLAG,CAEDDSOR CHECK IF A SEQUENTIAL DATA SET.
         BZ    MAGETSUB       IF SEQUENTIAL, BRANCH TO GET
*                                  SUBCOMMAND.
MAINPUT  EQU   *
         TM    CAATTN,CAATTNIS CHECK IF ATTENTION WAS ISSUED.
         BO    MA002056       YES, GO PROCESS ATTN BUFFER        A42953
         OI    CACFLAG3,CAIMSC INDICATE TO INPUT MODE THAT CALL  A45102
*                                  WAS RESULT OF NULL LINE OR    A45102
*                                  NEW DATA SET                  A45102
MA001075 EQU   *
         BAL   BRNCHREG,MAFREEBF BRANCH TO FREE INPUT BUFFER.
MA001077 EQU   *
*
*   INITIALIZE VALUES SO THAT INPUT SUBCOMMAND NAME CAN BE MOVED
*   INTO THE ENVIRONMENT CONTROL TABLE (ECT).
*
         L     SCMDREG,MAEBEIP ADDRESS OF INPUT MODE ENTRY IN
*                                  SUBCOMMAND NAME TABLE.
         LA    TBLENREG,L'MACONS2-X1(,X0) LENGTH AND ADDRESS OF
         LA    PTSCMREG,MACONS2    NAME FOR MOVE TO ECT.
         B     MA002055       BRANCH TO INVOKE INPUT SUBCOMMAND.
         EJECT
MAGETSUB EQU   *
***********************************************************************
*                                                                     *
*   OBTAIN SUBCOMMAND FROM TERMINAL USER                              *
*                                                                     *
*   AT END OF SUBCOMMAND PROCESSING OR AT COMPLETION OF INPUT MODE    *
*   PROCESSING, INVOKE THE PUTGET SERVICE ROUTINE TO PUT THE ''EDIT'' *
*   MODE MESSAGE AND TO OBTAIN THE NEXT SUBCOMMAND.  PROCESSING UPON  *
*   RETURN FROM GETLINE DEPENDS UPON RETURN CODE RECEIVED.            *
*                                                                     *
***********************************************************************
         LA    PTGTREG,MAPGPB ADDRESS OF PUTGET WORK AREA.
         MVC   MAPGPB(PTGTPLEN),PTGTPLST MOVE PARAMETER BLOCK
*                                  FOR PUTGET TO WORK AREA.
         SR    MODEREG,MODEREG SHOW NO MODE MESSAGE.
         TM    CACFLAG2,CAMODMSG CHECK IF MODE MESSAGE TO BE
*                                  ISSUED.
         BNZ   MAMODE         ISSUE MODE MESSAGE                 Y01676
         L     UPTREG,CAPTUPT ADDRESS OF USER PROFILE TABLE      Y01676
         USING UPT,UPTREG  ADDRESSABILITY TO THE UPT             Y01676
         TM    UPTSWS,UPTMODE  HAS USER REQUESTED PROMPTING      Y01676
         DROP  UPTREG                                            Y01676
         BZ    MANOMODE       IF NOT, BRANCH TO GET LINE.
MAMODE   NI    CACFLAG2,X255-CAMODMSG INDICATE MODE MESSAGE
*                                  ISSUED.
         LA    MODEREG,CAMODEMG ADDRESS OF MODE MESSAGE.
MANOMODE EQU   *
         PUTGET PARM=(PTGTREG),OUTPUT=((MODEREG),SINGLE,MODE),         X
               MF=(E,CATMPLST) GET SUBCOMMAND.
*
*   RETURN CODE BRANCH TABLE UPON RETURN FROM PUTGET.  THIS BRANCH
*   TABLE ASSUMES THAT RETURN CODES ARE 0, 4, 8, 12, 16, 20, 24,
*   OR 28.
*
         CH    RETCDREG,MAXPTGET   COMPARE PUTGET RETURN       @Y30NQKK
*                             CODE TO MAXIMUM EXPECTED         @Y30NQKK
         BH    MAPTGTER       IF HIGHER, PUT OUT ERROR MSG     @Y30NQKK
         B     MAPTBRTB(RETCDREG) BRANCH TO APPROPRIATE        @Y30NQKK
*                                  PROCESSING AFTER PUTGET.
MAPTBRTB EQU   *
         B     MASCANTM       RC = 00 -- BRANCH TO CALL IKJSCAN.
*                                  INDICATE TERMINAL AS SOURCE
*                                  OF INPUT TO EDIT.
         B     MASCANPR       RC = 04 -- BRANCH TO CALL IKJSCAN.
*                                  INDICATE IN-CORE PROCEDURE
*                                  AS SOURCE OF INPUT TO EDIT.
         B     MACKATTN       RC = 08 -- BRANCH TO PROCESS AS
*                                  ATTENTION AFTER SUBCOMMAND.
         B     MADLTMSG       RC = 12 -- BRANCH TO SET ECTSMSG
         B     MAPTGTER       RC = 16 )
         B     MAPTGTER       RC = 20 ) BRANCH TO PUT MESSAGE
         B     MAPTGTER       RC = 24 ) AND TO TERMINATE.
*                             RC = 28)
         SPACE 5
MANOCORE EQU   *
***********************************************************************
*                                                                     *
*   WHEN NO MAIN STORAGE IS AVAILABLE, BRANCH TO PUT MESSAGE AND      *
*   TO TERMINATE EDIT.                                                *
*                                                                     *
***********************************************************************
         LA    LEV1REG,M1ERROR1 RELATIVE ERROR TO BE PROCESSED.
         B     MACALMSG       BRANCH TO PUT MESSAGE.
         SPACE 5
MAPTGTER EQU   *
***********************************************************************
*                                                                     *
*   FOR A RETURN CODE WHICH IS NOT MEANINGFUL TO IKJEBEMA, ISSUE      *
*   COMMAND SYSTEM ERROR MESSAGE AND TERMINATE.                       *
*                                                                     *
***********************************************************************
         LA    INS1REG,M1MLPTGT INDEX TO INSERTION FOR COMMAND
*                                  SYSTEM ERROR MESSAGE.
         B     MATERMED       BRANCH TO TERMINATE EDIT.
         SPACE 5
MADLTMSG EQU   *              FREE SECOND LEVEL MESSAGES.
***********************************************************************
*                                                                     *
*   IKJPTGT RETURNED A RETURN CODE OF 12 - A SECOND LEVEL MESSAGE     *
*   CHAIN EXISTS AND THE USER IS IN A PROCEDURE.                      *
*                                                                     *
*   THIS SECTION OF CODE WILL RESET THE ECTMSGF IN THE ECT AND        *
*   RE-ISSUE THE PUTGET MACRO INSTRUCTION.                            *
*                                                                     *
***********************************************************************
         L     DATAREG,CAPTECT ADDRESS OF ECT.
         OI    (ECTMSGF-ECT)(DATAREG),MANO2MSG INDICATE THAT ALL
*                                  SECOND LEVEL MESSAGES ARE TO
*                                  BE FLUSHED.
         OI    MACFLAGS,MAECTMOD INDICATE THAT ECT WAS MODIFIED.
         B     MANOMODE       BRANCH TO RE-ISSUE PUTGET.
         EJECT
***********************************************************************
*                                                                     *
*   UPON RETURN FROM IKJPTGT, PLACE ADDRESS OF INPUT BUFFER IN THE    *
*   COMMUNICATION AREA AND INDICATE THAT INPUT BUFFER IS TO BE FREED  *
*   ON EXIT OUT OF A SUBCOMMAND PROCESSOR.  INVOKE THE COMMAND SCAN   *
*   SERVICE ROUTINE (IKJSCAN) TO SCAN THE INPUT BUFFER FOR A SUB-     *
*   COMMAND NAME. INDICATE TO IKJSCAN THAT INPUT BUFFER IS TO BE      *
*   SYNTAX CHECKED.  UPON RETURN FROM IKJSCAN, BRANCH TO APPROPRIATE  *
*   PROCESSING DEPENDING UPON THE RETURN FLAGS.                       *
*                                                                     *
***********************************************************************
MASCANTM EQU   *
         NI    CACFLAG4,X255-CAINPROC INDICATE THAT CURRENT
*                                  SOURCE OF INPUT IS THE TERMINAL.
         B     MASCANSC            BRANCH TO INVOKE IKJSCAN.
MASCANPR EQU   *
         OI    CACFLAG4,CAINPROC INDICATE THAT CURRENT SOURCE OF
*                                  INPUT IS AN IN-CORE PROCEDURE.
MASCANSC EQU   *
         TM    MACFLAGS,MAECTMOD CHECK IF ECT WAS MODIFIED.
         BZ    MASCAN         IF NOT, BRANCH TO INVOKE IKJSCAN.
         NI    (ECTMSGF-ECT)(DATAREG),X255-MANO2MSG RESTORE
*                                  SETTING OF SECOND LEVEL
*                                  MESSAGE FLAG IN ECT.
         NI    MACFLAGS,X255-MAECTMOD SHOW ECT NO LONGER MODIFIED
MASCAN   EQU   *
         L     IBFPTREG,(PGPBIBUF-PGPB)(,PTGTREG) ADDRESS OF
*                                  INPUT BUFFER.
         ST    IBFPTREG,CAPTIBFR SAVE ADDRESS OF INPUT BUFFER IN
*                                  THE COMMUNICATION AREA.
         OI    CACFLAG4,CAPTGTBF INDICATE THAT IKJPTGT GOT BUFFER
MA001072 EQU   *                                                  M2108
         LH    PARMREG0,X0(,IBFPTREG) GET BUFFER LENGTH FIELD OF
         LA    PARMREG1,X4(,X0)    INPUT BUFFER AND COMPARE WITH
         CR    PARMREG0,PARMREG1   LENGTH OF CONTROL WORD (4). IF
         BE    MAINPUT             EQUAL, A NULL LINE WAS ENTERED
*                                  BRANCH TO CALL INPUT MODE.
MA001080 EQU   *
         LA    UPTREG,MASCNFLG ADDRESS OF FLAG WORD.
*                                  BUFFER.
         XC    MASCNFLG(L'MASCNFLG),MASCNFLG ZERO FLAG WORD.
         LA    ECBREG,MASCNOA ADDRESS OF OUTPUT AREA FOR
*                                  IKJSCAN.
         LA    PARMREG1,CATMPLST  ADDR OF OUTPUT AREA FOR SCAN @Y30NQKK
         ST    UPTREG,FLAGOFF(PARMREG1) SET PTR TO FLAG WORD   @Y30NQKK
         ST    ECBREG,OUTOFF(PARMREG1)  SET PTR TO OUTPUT AREA @Y30NQKK
         MVC   INBUFOFF(FULLWORD,PARMREG1),CAPTIBFR  SET PTR   @Y30NQKK
*                                 TO INPUT BUFFER              @Y30NQKK
        CALLTSSR EP=IKJSCAN,MF=(E,CATMPLST) INVOKE IKJSCAN     @Y30NQKK
         LTR   RETCDREG,RETCDREG TEST RETURN CODE FROM IKJSCAN.
         BZ    MA001090       IF ZERO, BRANCH TO VERIFY
*                                  SUBCOMMAND NAME.
CMDSYSER LA    INS1REG,M1MLSCAN INDEX TO INSERTION FOR COMMAND @Y30NQKK
*                                  SYSTEM ERROR MESSAGE.
         B     MATERMED       BRANCH TO TERMINATE EDIT.
MA001090 EQU   *
         SR    BRNCHREG,BRNCHREG ZERO BRANCH TABLE REGISTER.
         IC    BRNCHREG,MASCNOA+(CSOAFLG-CSOA) OBTAIN RESULT OF
*                                  IKJSCAN PROCESSING.
         LA    BRNCHREG,X1(BRNCHREG,BRNCHREG) APPEND LOW ORDER
         SLL   BRNCHREG,X22(X0)    ONE BIT TO FLAG BYTE AND SHIFT
*                                  INTO POSITION.
         BXLE  BRNCHREG,BRNCHREG,MACMDOPN FLGS = X'80' - COMMAND
*                                  NAME VALID, CONTAINS OPERANDS.
         BXLE  BRNCHREG,BRNCHREG,MACMDNOP FLAGS = X'40' - COMMAND
*                                  NAME VALID, NO OPERANDS.
         BXLE  BRNCHREG,BRNCHREG,MA004010 FLAGS = X'20' -
*                                  QUESTION MARK ENCOUNTERED.
         BXLE  BRNCHREG,BRNCHREG,MACKATTN FLAGS = X'10' - BUFFER
*                                  IS EMPTY.
         BXLE  BRNCHREG,BRNCHREG,MA001095 FLAGS = X'08' - INVALID
*                                  COMMAND ENCOUNTERED.
*                            THE FOLLOWING THREE BRANCHES      @Y30NQKK
*                            SHOULD NEVER BE EXECUTED, SINCE   @Y30NQKK
*                            THESE FLAG BITS ARE NOT YET       @Y30NQKK
*                            DEFINED BY COMMAND SCAN.  THEY    @Y30NQKK
*                            ARE FOR FUTURE ERROR PREVENTION.  @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,CMDSYSER FLAGS = X'04' - FLAG @Y30NQKK
*                                  IS UNDEFINED NOW.           @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,CMDSYSER FLAGS = X'02' - FLAG @Y30NQKK
*                                  IS UNDEFINED NOW.           @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,CMDSYSER FLAGS = X'01' - FLAG @Y30NQKK
*                                  IS UNDEFINED NOW.           @Y30NQKK
         EJECT
MA001095 EQU   *                   SUBCOMMAND COULD BE LINE    @Y30NQKK
*                                  NUMBER OR '*' - BOTH VALID  @Y30NQKK
*                                  EDIT SUBCOMMANDS            @Y30NQKK
         LA    UPTREG,MASCNFLG     ADDRESS OF FLAG WORD        @Y30NQKK
         XC    MASCNFLG(L'MASCNFLG),MASCNFLG ZERO FLAG WORD.   @Y30NQKK
         OI    MASCNFLG,MANOSCHK  INDICATE NO SYNTAX CHECKING  @Y30NQKK
*                                 TO COMMAND SCAN              @Y30NQKK
         LA    ECBREG,MASCNOA ADDRESS OF OUTPUT AREA FOR       @Y30NQKK
*                                 IKJSCAN.                     @Y30NQKK
         LA    PARMREG1,CATMPLST  ADDR OF PARM LIST FOR SCAN   @Y30NQKK
         ST    UPTREG,FLAGOFF(PARMREG1) SET PTR TO FLAG WORD   @Y30NQKK
         ST    ECBREG,OUTOFF(PARMREG1)  SET PTR TO OUTPUT AREA @Y30NQKK
         MVC   INBUFOFF(FULLWORD,PARMREG1),CAPTIBFR  SET PTR   @Y30NQKK
*                                 TO INPUT BUFFER              @Y30NQKK
        CALLTSSR EP=IKJSCAN,MF=(E,CATMPLST) INVOKE IKJSCAN     @Y30NQKK
         LTR   RETCDREG,RETCDREG TEST RETURN CODE FROM IKJSCAN @Y30NQKK
         BZ    MA001098       IF ZERO, BRANCH TO CHECK CMD     @Y30NQKK
         LA    INS1REG,M1MLSCAN  INDEX TO INSERTION FOR        @Y30NQKK
*                                COMMAND SYSTEM ERROR MESSAGE  @Y30NQKK
         B     MATERMED          BRANCH TO TERMINATE EDIT      @Y30NQKK
MA001098 EQU  *                                                @Y30NQKK
         SR    BRNCHREG,BRNCHREG ZERO BRANCH TABLE REGISTER    @Y30NQKK
         IC    BRNCHREG,MASCNOA+(CSOAFLG-CSOA) OBTAIN RESULT   @Y30NQKK
*                                  OF IKJSCAN PROCESSING.      @Y30NQKK
         LA    BRNCHREG,X1(BRNCHREG,BRNCHREG) APPEND LOW ORDER @Y30NQKK
         SLL   BRNCHREG,X22(X0)    ONE BIT TO FLAG BYTE AND    @Y30NQKK
*                                  SHIFT INTO POSITION.        @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,MAOPS FLGS = X'80' - COMMAND  @Y30NQKK
*                                  NAME VALID, HAS OPERANDS.   @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,MANOOPS   FLAGS = X'40' - CMD @Y30NQKK
*                                  NAME VALID, NO OPERANDS.    @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,MA004010 FLAGS = X'20' -      @Y30NQKK
*                                  QUESTION MARK ENCOUNTERED.  @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,MACKATTN FLAGS = X'10' - BUFR @Y30NQKK
*                                  IS EMPTY.                   @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,MA004010 FLAGS = X'08' -      @Y30NQKK
*                                  INVALID COMMAND ENCOUNTERED @Y30NQKK
*                            THE FOLLOWING THREE BRANCHES      @Y30NQKK
*                            SHOULD NEVER BE EXECUTED, SINCE   @Y30NQKK
*                            THESE FLAG BITS ARE NOT YET       @Y30NQKK
*                            DEFINED BY COMMAND SCAN.  THEY    @Y30NQKK
*                            ARE FOR FUTURE ERROR PREVENTION.  @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,CMDSYSER FLAGS = X'04' - FLAG @Y30NQKK
*                                  IS UNDEFINED NOW.           @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,CMDSYSER FLAGS = X'02' - FLAG @Y30NQKK
*                                  IS UNDEFINED NOW.           @Y30NQKK
         BXLE  BRNCHREG,BRNCHREG,CMDSYSER FLAGS = X'01' - FLAG @Y30NQKK
*                                  IS UNDEFINED NOW.           @Y30NQKK
MAOPS    EQU   *                                               @Y30NQKK
         MVI   CAPTIBFR,CAOPERND   INDICATE THAT SUBCOMMAND    @Y30NQKK
*                                  CONTAINS OPERANDS           @Y30NQKK
         L     ECTREG,CAPTECT      GET POINTER TO ECT          @Y30NQKK
         NI    ECTSWS-ECT(ECTREG),OPSEXIST   MARK IN ECT THAT  @Y30NQKK
*                                  OPERANDS DO EXIST           @Y30NQKK
         B     MA001099                                        @Y30NQKK
MANOOPS   EQU   *                                              @Y30NQKK
         L     ECTREG,CAPTECT      GET PTR TO ECT              @Y30NQKK
         OI    ECTSWS-ECT(ECTREG),OPERANDS   MARK IN ECT THAT  @Y30NQKK
*                                  NO OPERANDS ARE PRESENT     @Y30NQKK
MA001099 L     PTSCMREG,MASCNOA+(CSOACNM-CSOA) ADDR OF CURRENT @Y30NQKK
*                                  SUBCOMMAND NAME.            @Y30NQKK
         LH    SCLENREG,MASCNOA+(CSOALNM-CSOA) LENGTH OF CUR   @Y30NQKK
*                                  SUBCOMMAND NAME.            @Y30NQKK
         CH    SCLENREG,MAMAXCLN COMPARE SUBCMD NAME LEN TO    @Y30NQKK
*                                  MAXIMUM ALLOWABLE.          @Y30NQKK
         BH    MA004010       IF LENGTH EXCEEDS MAX, BRANCH    @Y30NQKK
*                                  TO SEND 'INVALID SUBCOMMAND'@Y30NQKK
*                                  MESSAGE.                    @Y30NQKK
         ST    PTSCMREG,CAPTSCMD SAVE ADDR OF SUBCOMMAND NAME  @Y30NQKK
         STH   SCLENREG,CASCMDLN   AND LENGTH FOR USE BY A     @Y30NQKK
*                                  SUBCOMMAND PROCESSOR.       @Y30NQKK
         BCTR  SCLENREG,X0    REDUCE LENGTH BY ONE FOR LINE    @Y30NQKK
*                                  NUMBER COMPARISON.          @Y30NQKK
         EX    SCLENREG,MALNPPCK CHECK IF CURRENT SUBCOMMAND   @Y30NQKK
*                                  IS A LINE NUMBER            @Y30NQKK
         BL    MA002010       IF SUBCOMMAND NAME NOT NUMERIC,  @Y30NQKK
*                                  GO TO CHECK IF SUBCOMMAND   @Y30NQKK
         LR    TBLENREG,SCLENREG LENGTH OF SUBCOMMAND NAME     @Y30NQKK
*                                  FOR MOVE INTO ECT.          @Y30NQKK
         L     SCMDREG,MAEBELI ADDRESS OF SUBCOMMAND LOAD      @Y30NQKK
*                                  MODULE NAME.                @Y30NQKK
         B     MA002055       BRANCH TO INVOKE SUBCOMMAND      @Y30NQKK
*                                  PROCESSOR.                  @Y30NQKK
         EJECT
***********************************************************************
*                                                                     *
*   VERIFY SUBCOMMAND NAME.                                           *
*                                                                     *
*   USING THE SUBCOMMAND NAME ENTERED BY THE USER. SEARCH THE TABLE   *
*   OF VALID EDIT SUBCOMMANDS AND ABBREVIATIONS.  WHEN THE            *
*   SUBCOMMAND NAME ENTERED BY THE USER IS NOT FOUND, INVOKE          *
*   IKJEBECI TO PROCESS COMMAND AS AN IMPLICIT EXEC. IF IT IS NOT     *
*   AN EXEC COMMAND, EXEC WILL ISSUE AN INVALID SUBCOMMAND            *
*   MESSAGE TO THE TERMINAL. FOR A VALID EDIT                         *
*   SUBCOMMAND OTHER THAN ''END'', CALL THE SERVICE ROUTINE HANDLER   *
*   (IKJEBESR) TO INVOKE THE APPROPRIATE SUBCOMMAND PROCESSOR.  IF    *
*   AN ''END'' SUBCOMMAND WAS ENTERED, BRANCH TO PERFORM END          *
*   PROCESSING.                                                       *
*                                                                     *
***********************************************************************
MACMDOPN EQU   *
         MVI   CAPTIBFR,CAOPERND INDICATE TO SUBCOMMAND PROCESSOR
*                                  THAT SUBCOMMAND CONTAINS
*                                  OPERANDS.
         L     ECTREG,CAPTECT      GET POINTER TO ECT          @Y30NQKK
         NI    ECTSWS-ECT(ECTREG),OPSEXIST   MARK IN ECT THAT  @Y30NQKK
*                                  OPERANDS DO EXIST           @Y30NQKK
         B     MA002000                                        @Y30NQKK
MACMDNOP EQU   *
         L     ECTREG,CAPTECT      GET PTR TO ECT              @Y30NQKK
         OI    ECTSWS-ECT(ECTREG),OPERANDS   MARK IN ECT THAT  @Y30NQKK
*                                  NO OPERANDS ARE PRESENT     @Y30NQKK
MA002000 L     PTSCMREG,MASCNOA+(CSOACNM-CSOA) ADDRESS OF CURRENT
*                                  SUBCOMMAND NAME.
         LH    SCLENREG,MASCNOA+(CSOALNM-CSOA) LENGTH OF CURRENT
*                                  SUBCOMMAND NAME.
         ST    PTSCMREG,CAPTSCMD SAVE ADDRESS OF SUBCOMMAND NAME
         STH   SCLENREG,CASCMDLN   AND LENGTH FOR USE BY A
*                                  SUBCOMMAND PROCESSOR.
         B     MA002015                                        @Y30NQKK
MA002010 EQU   *
         LA    SCLENREG,X1(,SCLENREG) ADD ONE TO LENGTH TO
*                                  REPRESENT ACTUAL LENGTH
*                                  RETURNED BY IKJSCAN.
MA002015 SR    TBLENREG,TBLENREG INITIALIZE REGISTER TO CONTAIN
*                                  SUBCOMMAND LENGTH.
         STH   TBLENREG,MACFLAGS ZERO FLAG BYTES.
         TM    MASCNOA+(CSOAFLG-CSOA),CSOAEXEC  IS SUBCOMMAND  @Y30NQKK
*                                  IMPLICIT EXEC?              @Y30NQKK
         BO    CALLMA3             IF YES, INVOKE EXEC SUBCOMD @Y30NQKK
         L     TBLPTREG,MAIBMTBL ADDRESS OF IBM SUBCOMMAND TABLE.
MA002020 EQU   *
         IC    TBLENREG,X0(,TBLPTREG) LENGTH OF CURRENT ENTRY
*                                  IN SUBCOMMAND NAME TABLE.
         CR    TBLENREG,SCLENREG DETERMINE IF THE LENGTH OF THE
*                                  CURRENT TABLE ENTRY EQUALS
*                                  THE LENGTH OF THE SUBCOMMAND
*                                  NAME ENTERED BY THE USER.
         BE    MA002040       WHEN LENGTHS ARE EQUAL, BRANCH TO
*                                  COMPARE SUBCOMMAND NAMES.
MA002030 EQU   *
         CLI   X0(TBLPTREG),MATBLEND CHECK FOR END OF TABLE.
         BE    MA002045       IF END OF TABLE REACHED, BRANCH TO
*                                  CHECK IF BOTH SUBCOMMAND
*                                  TABLES HAVE BEEN SEARCHED.
         XI    MACFLAGS,MAABBREV INDICATE A TEST FOR HALF OF A
*                                  TABLE ENTRY.
         BNZ   MA002035       IF ABBREVIATION FLAG WAS OFF,
*                                  BRANCH TO COMPUTE POINTER TO
*                                  ABBREVIATION.
         LA    TBLPTREG,X9(TBLENREG,TBLPTREG) OTHERWISE, COMPUTE
*                                  A POINTER TO THE SUBCOMMAND
*                                  NAME IN THE NEXT TABLE ENTRY.
         B     MA002020       BRANCH TO CHECK NEXT SUBCOMMAND
*                                  NAME.
MA002035 EQU   *
         LA    TBLPTREG,X1(TBLENREG,TBLPTREG) COMPUTE ADDRESS OF
*                                  ABBREVIATION FOR THIS ENTRY.
         B     MA002020       BRANCH TO CHECK ABBREVIATION.
MA002040 EQU   *
         BCTR  TBLENREG,X0    REDUCE TABLE ENTRY LENGTH BY ONE
*                                  FOR NAME COMPARISON.
         EX    TBLENREG,MACMDCK DETERMINE IF SUBCOMMAND NAME
*                                  ENTERED BY USER IS THE SAME
*                                  AS CURRENT TABLE ENTRY.
         BE    MA002050       WHEN A MATCH IS FOUND, BRANCH TO
*                                  CALL THE SERVICE ROUTINE
*                                  HANDLER.
         XI    MACFLAGS,MAABBREV INDICATE A TEST FOR HALF OF A
*                                  TABLE ENTRY.
         BNZ   MA002043       IF ABBREVIATION FLAG WAS OFF,
*                                  BRANCH TO COMPUTE POINTER TO
*                                  ABBREVIATION.
         LA    TBLPTREG,X10(TBLENREG,TBLPTREG) OTHERWISE, COMPUTE
*                                  A POINTER TO THE SUBCOMMAND
*                                  NAME IN THE NEXT TABLE ENTRY.
         B     MA002020       BRANCH TO CHECK NEXT SUBCOMMAND
*                                  NAME.
MA002043 EQU   *
         LA    TBLPTREG,X2(TBLENREG,TBLPTREG) COMPUTE ADDRESS OF
*                                  ABBREVIATION FOR THIS ENTRY.
         B     MA002020       BRANCH TO CHECK ABBREVIATION.
MA002045 EQU   *
         XI    MACFLAG2,MATABLE1 INDICATE A TEST FOR IBM OR USER
*                                  SUBCOMMAND TABLE.
         BNZ   MA002047       BRANCH TO SEARCH USER TABLE
         TM    MASCNFLG,MANOSCHK   IF LAST CALL TO COMMAND     @Y30NQKK
*                             SCAN WAS WITHOUT SYNTAX CHECK,   @Y30NQKK
*                             AND IT IS NOT A VALID EDIT       @Y30NQKK
         BO   MA004010        SUBCOMMAND, PUT OUT 'INVALID     @Y30NQKK
*                             SUBCOMMAND' MSG                  @Y30NQKK
*                             OTHERWISE, SUBCOMMAND COULD BE   @Y30NQKK
*                             IMPLICIT EXEC                    @Y30NQKK
CALLMA3  LR    PARMREG1,COMMREG    SET UP CA POINTER           @Y30NQKK
         CALL  IKJEBMA3       CALL IMPLICIT EXEC SUBRTN.       @Y30NQKK
         B     MACKATTN       BRANCH TO FREE INPUT BFR         @Y30NQKK
*                             AND OBTAIN A SUBCOMMAND          @Y30NQKK
MA002047 EQU   *
         L     TBLPTREG,MAUSRTBL ADDRESS OF USER SUBCOMMAND TABLE
         B     MA002020       BRANCH TO SEARCH USER TABLE.
MA002050 EQU   *
         LA    SCMDREG,X2(TBLENREG,TBLPTREG) ADDRESS OF
*                                  SUBCOMMAND NAME.
         TM    MACFLAGS,MAABBREV CHECK IF THIS IS AN ABBREVIATION
*                                  ENTRY.
         BO    MA002055       IF AN ABBREVIATION, BRANCH TO
*                                  INVOKE SUBCOMMAND PROCESSOR.
         SR    TBLPTREG,TBLPTREG ZERO LENGTH REGISTER.
         IC    TBLPTREG,X0(,SCMDREG) OBTAIN LENGTH OF
*                                  ABBREVIATION.
         LA    SCMDREG,X1(TBLPTREG,SCMDREG) COMPUTE ADDRESS OF
*                                  LOAD MODULE NAME.
         BCTR  TBLPTREG,X0    REDUCE LENGTH BY ONE.
MA002055 EQU   *
         L     PARMREG1,CAPTECT ADDRESS OF ECT.
         MVI   (ECTSCMD-ECT)(PARMREG1),MABLANK MOVE IN BLANK.
         MVC   (ECTSCMD-ECT+X1)(L'ECTSCMD-X1,PARMREG1),(ECTSCMD-ECT)(PAX
               RMREG1)             BLANK OUT SUBCOMMAND NAME.
         EX    TBLENREG,MAECTSNM MOVE SUBCOMMAND NAME INTO ECT.
         L     RETCDREG,ECTSCMD-ECT+X4(,PARMREG1) OBTAIN LAST    Y02676
*                                  HALF OF SUBCOMMAND NAME.      Y02676
         L     PARMREG1,ECTSCMD-ECT(,PARMREG1) OBTAIN FIRST      Y02676
*                                  HALF OF SUBCOMMAND NAME.      Y02676
         TSEVENT PPMODE       ISSUE TSEVENT MACRO FOR TRACING    Y02676X
                                   PURPOSES.                     Y02676
         XC    MASRPLST(X8),MASRPLST ZERO PARAMETER LIST.
         CH    SCLENREG,MAENDLEN   IS SUBCOMMAND LENGTH 3      @ZA09473
         BNE   MA002058            NO, LINK TO SUBCOMMAND PROC @ZA09473
         CLC   MACONS3(L'MACONS3),X0(PTSCMREG) IS IT END       @ZA09473
         BNE   MA002058            NO, LINK TO SUBCOMMAND PROC @ZA09473
         LR    PARMREG1,COMMREG    GET COMM AREA ADDRESS       @ZA09473
         L     15,MAENVCON         GET ADDRESS OF IKJEBEEN     @ZA09473
         BALR  14,15               INVOKE IKJEBEEN             @ZA09473
         B     MASCMRET(RETCDREG)  RETURN CODE BRANCH TABLE    @ZA09473
MA002058 EQU   *                                               @ZA09473
         IKJEBESH (COMMREG),(SCMDREG),PARAM=((COMMREG)),               X
               MF=(E,MASRPLST) CALL SUBCOMMAND PROCESSOR.
         EJECT
***********************************************************************
*                                                                     *
*   UPON RETURN FROM SUBCOMMAND PROCESSOR, TEST RETURN CODES TO       *
*   DETERMINE SUBSEQUENT PROCESSING.  POSSIBLE RETURN CODES AND       *
*   CORRESPONDING ACTIONS ARE --                                      *
*        00 -- SUCCESSFUL OPERATION, OBTAIN NEXT SUBCOMMAND.          *
*        04 -- SUCCESSFUL OPERATION, INVOKE INPUT MODE.               *
*        08 -- I/O ERROR ENCOUNTERED BY A SUBCOMMAND PROCESSOR THAT   *
*              INVOKED IKJEBECO OR IKJEBEFC, SUBCOMMAND PROCESSOR     *
*              COMPLETED ABNORMALLY - OBTAIN NEXT SUBCOMMAND.         *
*        12 -- I/O ERROR ENCOUNTERED ON UTILITY DATA SET, TERMINATE   *
*              THE EDIT FUNCTION.                                     *
*        16 -- A SYNTAX CHECKER OR LANGUAGE PREPROCESSOR HAS BECOME   *
*              NON-OPERATIONAL, SUBCOMMAND PROCESSOR COMPLETED        *
*              ABNORMALLY - INVOKE SCAN PROCESSOR TO ATTEMPT          *
*              RECOVERY.                                              *
*                                                                     *
***********************************************************************
         L     PARMREG1,CAPTECT   GET ADDRESS OF ECT           @Y30NQKK
         STCM  RETCDREG,B'0111',ECTRTCD-ECT(PARMREG1) STORE    @Y30NQKK
*                                 LAST SUBCOMMAND'S RETURN     @Y30NQKK
*                                 CODE IN ECT FOR EXEC         @Y30NQKK
         B     MASCMRET(RETCDREG) RETURN CODE BRANCH TABLE.
MASCMRET EQU   *
         B     MACKATTN       CODE = 00 -- GET NEXT SUBCOMMAND.
         B     MAINPUT        CODE = 04 -- INVOKE INPUT MODE.
         B     MADELETE       CODE = 08 -- CLEAR INPUT AND OUTPUT
*                                  QUEUES UNCONDITIONALLY.
*                                  TERMINATE EDIT (DELETING INPUT
*                                  STACK) IF CURRENT INPUT SOURCE
*                                  IS AN IN-CORE PROCEDURE.
         B     MAEXIT         CODE = 12 -- TERMINATE.
*                             CODE = 16 -- ATTEMPT SYNTAX CHECKER
*                                  RECOVERY.
         BAL   BRNCHREG,MAFREEBF BRANCH TO FREE SUBCOMMAND BUFFER
*                                  BEFORE RECOVERY ATTEMPT.
         LA    BRNCHREG,MACKATTN SET BRANCH ADDRESS FOR
*                                  SUCCESSFUL RETURN FROM SCAN.
*                                  SCAN CAN BE CALLED AT MOST
*                                  TWO TIMES -- 1. TO ATTEMPT
*                                  RECOVERY AND 2. TO CLEAN-UP IF
*                                  RECOVERY IS NOT POSSIBLE.
*                                  THIS ADDRESS MUST REMAIN FOR
*                                  BOTH SITUATIONS SO THAT NORMAL
*                                  SUBCOMMAND RETURN LOGIC CAN BE
*                                  EXECUTED.
MASYNR20 EQU   *
         TM    CACFLAG4,CASCRC20 CHECK IF RECOVERY IN PROCESS.
         BZ    MASYNRCV       IF NOT IN PROCESS, BRANCH TO
*                                  INDICATE THAT RECOVERY IS TO
*                                  BE ATTEMPTED.
         NI    CACFLAG4,X255-CASCRC20 INDICATE THAT RECOVERY
*                                  FAILED AND THAT SYNTAX CHECKER
*                                  SHOULD BE DELETED.
         B     MASCANON       BRANCH TO INVOKE SCAN PROCESSOR.
MASYNRCV EQU   *
         OI    CACFLAG4,CASCRC20 INDICATE THAT SYNTAX CHECKER
*                                  RECOVERY SHOULD BE ATTEMPTED.
         B     MASCANON       BRANCH TO INVOKE SCAN PROCESSOR.
         EJECT
MADELETE EQU   *
***********************************************************************
*                                                                     *
*    ONE OF THE FOLLOWING CONDITIONS HAS OCCURRED --                  *
*                                                                     *
*         (1) A SUBCOMMAND HAS COMPLETED WITHOUT ACCOMPLISHING ITS    *
*             REQUESTED FUNCTION (RETURN CODE TO IKJEBEMA IS 8).      *
*             NOTE - THIS PROCESSING IS TRUE FOR ALL          @Y30NQKK*
*             SUBCOMMANDS EXCEPT EXEC.                        @Y30NQKK*
*                                                                     *
*         (2) AN INVALID SUBCOMMAND HAS BEEN ENCOUNTERED.             *
*                                                                     *
*    ACTION --                                                        *
*                                                                     *
*         (1) INPUT SOURCE IS THE TERMINAL -- ISSUE TCLEARQ FOR       *
*             INPUT AND FOR OUTPUT, CONTINUING PROCESSING.            *
*                                                                     *
*         (2) INPUT SOURCE IS AN IN-CORE PROCEDURE -- CLEAR           *
*             INPUT AND OUTPUT QUEUES, DELETE THE                     *
*             INPUT STACK, AND CONTINUE PROCESSING.                   *
*                                                                     *
***********************************************************************
         SPACE 2
         L     EPLOCREG,MAPTBMA2 ADDRESS OF TCLEARQ SUBROUTINE.
         TM    CACFLAG4,CAINPROC TEST FOR PROCEDURE INPUT.
         BZ    MADELET1       IF NOT, BR TO CLEAR
*                                  QUEUES ONLY.
         CALL  (15),ID=2,MF=(E,MASRPLST) IF IN-CORE INPUT              X
                                   CLEAR QUEUES AND DELETE             X
                                   INPUT STACK
         B     MACKATTN       BRANCH TO GET NEW SCMD.
MADELET1 EQU   *
         CALL  (15),ID=3,MF=(E,MASRPLST) BRANCH TO CLEAR INPUT         X
                                         QUEUE.
*
*    FALL THROUGH TO CHECK IF THE ATTENTION ECB HAS BEEN POSTED.
*
         EJECT
MACKATTN EQU   *
***********************************************************************
*                                                                     *
*   UPON RETURN FROM INPUT MODE OR A SUBCOMMAND PROCESSOR, CHECK THE  *
*   ATTENTION ISSUED FLAG AND THE LINE TO BE VERIFIED FLAGS.  WHEN    *
*   THE ATTENTION ISSUED FLAG IS ON, TURN IT AND THE LINE TO BE       *
*   VERIFIED FLAG OFF, AND CONTINUE PROCESSING BASED ON          A42593
*   THE ATTENTION BUFFER POINTER (CAATNBUF). (IF THE             A42953
*   ADDRESS IS ZERO, THE CAPTIBFR FIELD HAS ALREADY BEEN         A42593
*   UPDATED.  IF THE ADDRESS IS NON-ZERO,  IT IS TO BE PLACED    A42593
*   IN THE CAPTIBFR FIELD AFTER THE CURRENT SUBCOMMAND BUFFER    A42593
*   IS FREED.  IN EITHER CASE, A BRANCH IS TAKEN TO CALL THE     A42593
*   COMMAND SCAN SERVICE ROUTINE TO SCAN FOR THE SUBCOMMAND      A42593
*   NEXT TO BE-PROCESSED.) IF NO                                 A42593
*   ATTENTION WAS ISSUED, TEST THE LINE TO BE VERIFIED FLAG.  IF THE  *
*   LINE TO BE VERIFIED FLAG AND THE VERIFY FLAG ARE BOTH ON, INVOKE  *
*   IKJEBEMS TO VERIFY THE LAST LINE.  IF VERIFICATION WAS NOT        *
*   REQUESTED, TURN LINE TO BE VERIFIED FLAG OFF AND GET NEXT         *
*   SUBCOMMAND.                                                       *
*                                                                     *
***********************************************************************
         TM    CAATTN,CAATTNIS CHECK IF ATTENTION WAS ISSUED.
         BZ    MA002060       IF NOT, BRANCH TO CHECK IF LINE IS
*                                  TO BE VERIFIED.
         CALL  IKJEBMA2,ID=2,MF=(E,MASRPLST) MUST DELETE STACK @Y30NQKK
*                            AND TCLEARQ BEFORE CONTINUING     @Y30NQKK
         OC    CAPTNBFR(X4),CAPTNBFR DETERMINE IF LAST           A45155
*                                  SUBCOMMAND OBTAINED ANOTHER   A45155
*                                  SUBCOMMAND.                   A45155
         BZ    MA002053       IF NOT, CONTINUE PROCESSING OF     A50475
*                                  ATTENTION BUFFER.             A45155
         BAL   BRNCHREG,MAFREEBF IF SO, FREE OLD SUBCOMMAND      A45155
*                                  BUFFER.                       A45155
*    NOTE -- THE 'NEXT' SUBCOMMAND POINTER IS TRANSFERRED TO THE A45155
*    CURRENT BUFFER POINTER SO THAT IT WILL BE FREED.  THE       A45155
*    BUFFER ASSOCIATED WITH ATTENTION PROCESSING HAS THE         A45155
*    HIGHEST PRIORITY IN DETERMINING WHICH SUBCOMMAND IS TO BE   A45155
*    EXECUTED.                                                   A45155
         L     IBFPTREG,CAPTNBFR OBTAIN ADDRESS OF 'NEXT'        A45155
*                                  SUBCOMMAND BUFFER.            A45155
         ST    IBFPTREG,CAPTIBFR TRANSFER ADDRESS TO 'CURRENT'   A45155
*                                  SUBCOMMAND BUFFER POINTER.    A45155
         OI    CACFLAG4,CAPTGTBF INDICATE THAT BUFFER WAS        A45155
*                                  WAS OBTAINED THROUGH PUTGET.  A45155
         XC    CAPTNBFR(X4),CAPTNBFR ZERO 'NEXT' BUFFER POINTER. A45155
MA002053 EQU   *                                                 A45155
         BAL   BRNCHREG,MAFREEBF FREE LAST SUBCOMMAND BUFFER.    A42953
MA002056 EQU   *                                                 A42953
         MVC   CAPTIBFR+X1(X3),CAATNBUF+X1 UPDATE CURRENT BUFFER A42953
*                                  ADDRESS.                      A42953
         OI    CACFLAG4,CAPTGTBF INDICATE THAT BUFFER WAS        A42953
*                                  OBTAINED THROUGH PUTGET.      A42953
         XC    CAATNBUF(X4),CAATNBUF ZERO ATTENTION BUFFER PTR   A42953
MA002057 EQU   *                                                 A42953
         NI    CAATTN,X255-CAATTNIS TURN OFF ATTN ISSUED FLAG    A42953
         NI    CACFLAG1,X255-CALNTOVF TURN OFF LINE TO BE VERIFIED
*                                  FLAG.
         NI    CAPTIBFR,X255-CAOPERND INDICATE NO OPERANDS
         L     IBFPTREG,CAPTIBFR ADDRESS OF TERMINAL INPUT BUFFER
         B     MA001072       BRANCH TO INVOKE IKJSCAN.           M2108
MA002060 EQU   *
         BAL   BRNCHREG,MAFREEBF BRANCH TO FREE INPUT BUFFER.
MA002065 EQU   *
         TM    CACFLAG1,CALNTOVF+CAVRFYSW CHECK IF VERIFY IS
*                                  REQUESTED AND IF LINE IS TO
*                                  BE VERIFIED.
         BNO   MA002070       IF NOT, BRANCH TO MAKE SURE LINE
*                                  TO BE VERIFIED FLAG IS OFF.
         OI    CACFLAG4,CATPUTVF SET FLAG FOR IKJEBEMS TO
*                                  INDICATE THAT A VERIFY IS
*                                  REQUESTED.
         LA    LEV1REG,M1ERROR4 RELATIVE ERROR TO BE PROCESSED.
         BAL   SRRTNREG,MAMSGRTN BRANCH TO PUT ERROR MESSAGE.
MA002070 EQU   *
         NI    CACFLAG1,X255-CALNTOVF TURN OFF LINE TO BE
*                                  VERIFIED FLAG.
         OC    CAPTNBFR(X4),CAPTNBFR DETERMINE IF LAST           A45155
*                                  SUBCOMMAND OBTAINED ANOTHER   A45155
*                                  SUBCOMMAND.                   A45155
         BZ    MAGETSUB       IF NOT, BRANCH TO OBTAIN A NEW     A45155
*                                  SUBCOMMAND.                   A45155
         L     IBFPTREG,CAPTNBFR IF SO, OBTAIN ADDRESS OF NEXT   A45155
*                                  SUBCOMMAND.                   A45155
         ST    IBFPTREG,CAPTIBFR TRANSFER ADDRESS TO CURRENT     A45155
*                                  SUBCOMMAND POINTER.           A45155
         OI    CACFLAG4,CAPTGTBF INDICATE SUBCOMMAND OBTAINED    A45155
*                                  THROUGH PUTGET ROUTINE.       A45155
         XC    CAPTNBFR(X4),CAPTNBFR CLEAR 'NEXT' SUBCOMMAND     A45155
*                                  POINTER.                      A45155
         B     MA001080       BRANCH TO COMMAND SCAN THE CURRENT A45155
*                                  SUBCOMMAND BUFFER.            A45155
         EJECT
*559200,588800
***********************************************************************
*                                                                     *
*   TERMINATION PROCESSING.                                           *
*                                                                     *
*   WHEN AN I/O ERROR WAS ENCOUNTERED ON THE UTILITY DATA SET OR WHEN *
*   AN 'END' SUBCOMMAND IS ENCOUNTERED, TERMINATE THE EDIT FUNCTION.  *
*   (1.) INVOKE IKJEBEEX TO TERMINATE THE UTILITY DATA SET ACCESS     *
*   METHOD.  (2.) INVOKE THE SCAN SUBCOMMAND WITH A 'SCAN OFF'        *
*   SUBCOMMAND TO TERMINATE SYNTAX CHECKING WHEN IT HAD BEEN IN USE.  *
*   (3.) CALL IKJEBESR TO DELETE THE PERMANENTLY RESIDENT SERVICE     *
*   ROUTINES.  (4.) DELETE IKJEBESR AND (5.) ISSUE FREEMAIN MACRO     *
*   INSTRUCTIONS FOR THE TERMINAL INPUT BUFFER, ATTENTION BUFFER,     *
*   AND COMMUNICATION AREA.   (6.) RETURN TO THE TMP.                 *
*                                                                     *
***********************************************************************
MAEXIT   EQU   *
         SR    TMPCDREG,TMPCDREG SET NORMAL RETURN CODE.
         TM    MACFLAGS,MAENDPRC CHECK IF END SUBCOMMAND WAS
*                                  PROCESSED.
         BO    MAEXIT1        IF SO, BRANCH TO FREE COMMUNICATION
*                                  AREA.
         L     EPLOCREG,MAPTBMA2 ADDRESS OF FREEMAIN/INPUT STACK
*                                  CLEAN-UP ROUTINE.
         CALL  (15),ID=1,MF=(E,MASRPLST) BRANCH TO FREE INPUT          X
                                   BUFFER AND CLEAR INPUT QUEUES.
         LR    PARMREG1,COMMREG       GET IKJEBECA ADDRESS     @ZA09473
         L     15,MAXTVCON            GET ADDRESS OF XT        @ZA09473
         BALR  14,15                  INVOKE XT                @ZA09473
MAEXIT0  EQU   *
         LR    TMPCDREG,RETCDREG SAVE RETURN CODE.
MAEXIT1  EQU   *
         L     SAVEREG,X4(,SAVEREG) ADDRESS OF HIGHER SAVE AREA.
         FREEMAIN R,LV=CADLEN,A=(COMMREG),SP=SUBPOOL1 FREE             X
                                   COMMUNICATION AREA.
         LR    RETCDREG,TMPCDREG SET RETURN CODE FOR TMP.
MAEXIT2  EQU   *                                                 A45002
         RETURN (14,12),,RC=(15) RETURN TO THE TMP.
         EJECT
MATERMED EQU   *
***********************************************************************
*                                                                     *
*   WHEN THE CONTROLLER DISCOVERA A LOGIC ERROR, CALL MESSAGE ROUTINE *
*   TO PUT TERMINATION MESSAGE AND RETURN TO THE TMP.                 *
*                                                                     *
***********************************************************************
         LA    LEV1REG,M1ERROR2 RELATIVE ERROR TO BE PROCESSED.
         LR    INS2REG,RETCDREG SAVE RETURN CODE FOR INSERTION.
MACALMSG EQU   *
         LA    SRRTNREG,MAEXIT ADDRESS OF EXIT.
         SPACE 5
MAMSGRTN EQU   *
***********************************************************************
*                                                                     *
*   CALL MESSAGE ROUTINE TO PUT ERROR MESSAGE.  IF RETURN CODE IS     *
*   NOT ZERO, TERMINATE EDIT.                                         *
*                                                                     *
***********************************************************************
         CALL  IKJEBMA1,((COMMREG),(LEV1REG),(LEV2REG),(INS1REG),      X
               (INS2REG)),MF=(E,MAMGPLST) BRANCH TO PUT MESSAGE.
         LTR   RETCDREG,RETCDREG TEST FOR RETURN CODE ZERO.
         BCR   ZERO,SRRTNREG  IF ZERO, RETURN TO CALLER.
         CH    15,RETCODE4    IS RETURN CODE 4                  YA01660
         BCR   ZERO,SRRTNREG  CONTINUE IF ATTENTION             YA01660
         B     MAEXIT         AND BRANCH TO TERMINATE.
         EJECT
MAFREEBF EQU   *
***********************************************************************
*                                                                     *
*   SUBROUTINE USED TO FREE INPUT BUFFER ACQUIRED BY IKJPTGT.         *
*   ADDRESS OF BUFFER IS IN COMMUNICATION AREA AT CAPTIBFR AND LENGTH *
*   IS FIRST HALFWORD OF BUFFER.                                      *
*                                                                     *
***********************************************************************
         L     EPLOCREG,MAPTBMA2 ADDRESS OF FREEMAIN/INPUT STACK
*                                  CLEAN-UP ROUTINE.
         CALL  (15),ID=0,MF=(E,MAFREMNL) BRANCH TO FREE INPUT          X
                                   BUFFER.
         BR    BRNCHREG       RETURN TO CALLER.
         EJECT
***********************************************************************
*                                                                     *
*   USER ENTERED INVALID SUBCOMMAND.  BRANCH TO MESSAGE ROUTINE TO    *
*   PUT MESSAGE.  UPON RETURN, CHECK IF INPUT BUFFER MUST BE FREED.   *
*   BRANCH TO CHECK IF ATTENTION RECEIVED DURING PROCESSING.          *
*                                                                     *
***********************************************************************
MA004010 EQU   *
         SR    PTSCMREG,PTSCMREG SPECIFY THAT NO MESSAGE INSERTION
*                                  IS TO BE MADE.
         LR    INS1REG,PTSCMREG SET UP PARAMETERS FOR MESSAGE
         LR    INS2REG,SCLENREG    ROUTINE.
         LA    LEV1REG,M1ERROR3 RELATIVE ERROR TO BE PROCESSED.
         BAL   SRRTNREG,MAMSGRTN BRANCH TO PUT ERROR MESSAGE.
         B     MADELETE       BRANCH TO DETERMINE IF EDIT MUST
*                                  BE TERMINATED.
         EJECT
MAAERTRY EQU   *
***********************************************************************
*                                                                     *
*   THIS ABNORMAL END RETRY ROUTINE IS SPECIFIED AT THE TIME THE      *
*   ESTAE MACRO INSTRUCTION IS ISSUED.  THE RETRY ROUTINE IS GIVEN    *
*   CONTROL AFTER THE ESTAE EXIT ROUTINE (IKJEBEAE) HAS COMPLETED     *
*   PROCESSING.                                                       *
*                                                                     *
*   THE RETRY ROUTINE WILL RELOAD THE CONTROLLER REGISTERS AND        *
*   WILL BUILD AN ''END'' COMMAND TO BE PROCESSED BY THE MAIN         *
*   SECTION OF THE CONTROLLER.  AT CONCLUSION OF PROCESSING, THE      *
*   RETRY ROUTINE BRANCHES SO THAT IKJSCAN CAN SCAN THE NEW BUFFER.   *
*                                                                     *
***********************************************************************
         DROP  BASEREG        DROP BASE REGISTER.
         USING MAAERTRY,EPLOCREG ESTABLISH ADDRESSABILITY TO THIS
*                                  CODE BASED ON ENTRY ADDRESS.
         LA    TMPCDREG,X20   A CODE OF 20 IS EXPECTED--         Y02676
*                   INDICATING SDWA FREED AND PARMLIST IN REG 1  Y02676
         CR    PARMREG0,TMPCDREG   CHECK FOR 20 IN REG 0         Y02676
         BNE   MA010010       IF NOT, BRANCH TO EXIT TO TMP.
         LR    COMMREG,PARMREG1   PLACE ADDRESS OF COMMUNICA-    Y02676
*                                  TION AREA IN COMMREG.
         B     MA010020       BRANCH TO RESTORE BASE REGISTER.
MA010010 EQU   *
*
*   WHEN STAE IS UNABLE TO OBTAIN A WORK AREA, THE ADDRESS OF THE
*   COMMUNICATION AREA IS NOT AVAILABLE.  NO FURTHER PROCESSING IS
*   POSSIBLE.
*
         SVC   EXIT           RETURN TO THE TMP.
MA010020 EQU   *
         LA    SAVEREG,CASVAREA RE-INITIALIZE SAVE AREA POINTER.
         L     BASEREG,XBASEREG(,SAVEREG) RE-INITIALIZE BASE
*                             REGISTER.
         DROP  EPLOCREG       DROP TEMPORARY BASE REGISTER.
         USING MA000010,BASEREG RE-ESTABLISH ADDRESSABILITY TO
*                             THIS CODE.
         EJECT
***********************************************************************
*                                                                     *
*    THE END SUBCOMMAND PROCESSOR IS INVOKED --                       *
*                                                                     *
*    1. TO FREEMAIN PREVIOUS COMMAND BUFFER (IF NECESSARY)            *
*    2. TO ALLOW THE TERMINAL USER TO SAVE DATA SET IF                *
*       IT HAS BEEN MODIFIED SINCE LAST SAVED                         *
*    3. TO PERFORM REQUIRED TERMINATION PROCESSING                    *
*                                                                     *
*    NOTE -- AS A CONVENTION, THE 'MAENDPRC' BIT OF THE MAIN          *
*    CONTROLLER WORK AREA IS SET TO 1 PRIOR TO INVOKING IKJEBEEN.     *
*    THIS CONVENTION IS ESTABLISHED TO COMMUNICATE THE FACT           *
*    THAT THE END PROCESSOR IS BEING INVOKED WITHOUT A CORRESPONDING  *
*    COMMAND BUFFER ADDRESS IN THE EDIT COMMUNICATION AREA.           *
*                                                                     *
***********************************************************************
         OI    MACFLAGS,MAENDPRC INDICATE THAT NO SUBCOMMAND BUFFER
*                                  FOR IKJEBEEN.
         TM    CACFLAG2,CAX37ABN  IS X37 ABEND IN PROCESS      @ZA09473
         BNO   MA004030           IF NOT, RETURN               @ZA09473
         L     PARMREG1,CAESDSPL  GET CLOSE PARAMETER LIST PTR @ZA09473
         LTR   PARMREG1,PARMREG1  VERIFY ADDRESS IS NOT ZERO   @ZA26020
         BZ    MA004030           IF ZERO-X37 NOT IN SAVED DSN @ZA26020
         L     R7,0(,PARMREG1)    GET DCB ADDRESS              @ZA09473
         NI    ODISP(R7),DCBOFLWR DON'T WANT ANOTHER X37 ABEND @ZA09473
         CLOSE ,MF=(E,(1))        CLOSE IT                     @ZA09473
MA004030 EQU   *                                               @ZA09473
         LR    PARMREG1,COMMREG         GET IKJEBECA ADDRESS   @ZA09473
         L     15,MAENVCON                GET ADDRESS OF END   @ZA09473
         BALR  14,15                     INVOKE END            @ZA09473
         L     SAVEREG,X4(,SAVEREG) RESTORE SAVE AREA POINTER  @ZA09473
         B     MAEXIT2              BRANCH TO RETURN TO TMP WITH A45002
*                                   RETURN CODE 12               A45002
         EJECT
***********************************************************************
*                                                                     *
*   EQUATES, CONSTANTS AND AREAS USED BY THIS MODULE.                 *
*                                                                     *
***********************************************************************
MAECTSNM MVC   (ECTSCMD-ECT)(*-*,PARMREG1),X0(PTSCMREG) MOVE
*                                  SUBCOMMAND NAME TO ECT.
MACMDCK  CLC   X0(*-*,PTSCMREG),X1(TBLPTREG) COMPARE CURRENT
*                                  SUBCOMMAND NAME IN TABLE WITH
*                                  THAT ENTERED BY THE USER.
MALNPPCK CLC   X0(*-*,PTSCMREG),MACONS1 COMPARISON USED TO
*                                  DETECT A LINE NUMBER
*                                  SUBCOMMAND.
MACONS1  DC    CL8'00000000'  CONSTANT USED TO CHECK FOR A LINE
*                                  NUMBER COMMAND.
PTGTPLST PUTGET OUTPUT=(0,SINGLE,MODE),TERMGET=(EDIT,WAIT),            X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
PTGTPLEN EQU   *-PTGTPLST     LENGTH OF MACRO EXPANSION.
MASTAXLF STAX  0,MF=L         STAX MACRO -- LIST FORM.                 X
                                   NOTE -- THE ONLY PARAMETERS         X
                                   MAINTAINED  AS THEY APPEAR IN       X
                                   THIS EXPANSION ARE THE INPUT        X
                                   BUFFER LENGTH AND ADDRESS).
MASTAXLN EQU   *-MASTAXLF     LENGTH OF STAX PARAMETER LIST.
MASTAELF ESTAE MF=L           STAE MACRO - LIST FORM.            Y02676
MASTAELN EQU   *-MASTAELF     LENGTH OF STAE PARAMETER LIST.
SCNONMSG DC    AL2(SCNONEND-*),AL2(0),CL2'ON' SCAN ON MESSAGE.
SCNONEND EQU   *              SCAN ON MESSAGE END.
MACONS2  DC    CL5'INPUT'     INPUT SUBCOMMAND NAME.
MACONS3  DC    CL3'END'       END SUBCOMMAND NAME              @ZA09473
MAPTUT   DC    A(IKJEBEUT)    ADDRESS OF UTILITY ACCESS INTERFACE
MAPTBMA2 DC    A(IKJEBMA2)    ADDRESS OF FREEMAIN/INPUT STACK
*                                  CLEAN-UP ROUTINE.
MAEBEIP  DC    A(MA8IP002)    ADDRESS OF INPUT LOAD MODULE NAME.
MAEBELI  DC    A(MA8LI002)    ADDRESS OF LOAD MODULE NAME FOR
*                                  LINE INSERT/REPLACE/DELETE.
MAIBMTBL DC    A(IKJEBMA8)    ADDRESS OF IBM SUBCOMMAND TABLE.
MAUSRTBL DC    A(IKJEBMA9)    ADDRESS OF USER SUBCOMMAND TABLE.
MAPTAT   DC    A(IKJEBEAT)    ADDRESS OF ATTENTION EXIT.
MAPTAE   DC    A(IKJEBEAE)    ADDRESS OF ABNORMAL END EXIT.
MAENVCON DC    V(IKJEBEEN)     ADDRESS OF END                  @ZA09473
MAXTVCON DC    V(IKJEBEXT)     ADDRESS OF XT                   @ZA09473
MAENDLEN DC    H'3'            END SUBCOMMAND LENGTH           @ZA09473
MAMAXCLN DC    H'8'           MAXIMUM LENGTH FOR A SUBCOMMAND NAME.
RETCODE4 DC    H'4'           RETURN CODE 4                     YA01660
MAXPTGET DC    H'24'          MAX EXPECTED RETURN CODE FROM    @Y30NQKK
*                             PUTGET                           @Y30NQKK
FLAGOFF  EQU   12             OFFSET TO FLAGWORD               @Y30NQKK
OUTOFF   EQU   16             OFFSET TO OUTPUT AREA            @Y30NQKK
INBUFOFF EQU   20             OFFSET TO INPUT BUFFER           @Y30NQKK
FULLWORD EQU   4              LENGTH FOR FULLWORD              @Y30NQKK
OPERANDS EQU   X'80'                                           @Y30NQKK
OPSEXIST EQU   X'7F'                                           @Y30NQKK
EXIT     EQU   3              SVC NUMBER FOR SVC EXIT.
RCODE4   EQU   4              RETURN CODE 4                    @Y30NQKK
RCODE8   EQU   8              RETURN CODE 8                    @Y30NQKK
RCODE12  EQU   12             RETURN CODE 12.
SUBPOOL1 EQU   1              SUBPOOL NUMBER.
ZERO     EQU   B'1000'        CONDITION CODE ZERO.
MABLANK  EQU   C' '           CHARACTER BLANK.
MANOSCHK EQU   X'80'          INDICATE TO IKJSCAN THAT NO SYNTAX
*                                  CHECKING OF SUBCOMMAND NAME IS
*                                  TO BE DONE.
MANO2MSG EQU   X'80'          INDICATE IN ECT THAT SECOND LEVEL
*                                  MESSAGES ARE TO BE FLUSHED.
MATBLEND EQU   X'FF'          SUBCOMMAND TABLE END INDICATOR.
XBASEREG EQU   (BASEREG*4)+((6*4)-4) OFFSET IN SAVE AREA TO
*                                  BASEREG (REGISTER).
XPTGTREG EQU   (PTGTREG*4)+((6*4)-4) OFFSET IN SAVE AREA TO
*                                  PTGTREG (REGISTER).
X0       EQU   0              OFFSET ZERO.
X1       EQU   1              OFFSET 1.
X2       EQU   2              OFFSET 2.
X3       EQU   3              OFFSET 3.
X4       EQU   4              OFFSET 4.
X5       EQU   5              OFFSET 5.
X8       EQU   8              OFFSET 8.
X9       EQU   9              OFFSET 9.
X10      EQU   10             OFFSET 10.
X12      EQU   12             OFFSET 12.
X14      EQU   14             OFFSET 14.
X15      EQU   15             OFFSET 15.
X16      EQU   16             OFFSET 16.
X20      EQU   20             OFFSET 20.                         Y02676
X22      EQU   22             OFFSET 22.
X72      EQU   72             OFFSET 72.
X255     EQU   255            OFFSET 255.
DCBOFLWR EQU   X'7F'          RESET OPEN FLAG                  @ZA09473
ODISP    EQU   X'30'          OFLAGS OFFSET                    @ZA09473
         TITLE 'IKJEBMA1 - MESSAGE PROCESSING FOR IKJEBEMA'
IKJEBMA1 CSECT
***********************************************************************
*                                                                     *
*   MESSAGE ROUTINE.                                                  *
*                                                                     *
*   THIS SUBROUTINE CONVERTS THE RELATIVE ERROR NUMBER (INPUT IN      *
*   REGISTER 1) TO A MESSAGE NUMBER AND INVOKES IKJEBEMS TO PUT       *
*   THE ERROR MESSAGE.  THE RETURN CODE RETURNED BY IKJEBEMS IS       *
*   PRESERVED IN REGISTER 15 ON EXIT.                                 *
*                                                                     *
***********************************************************************
         IKJEBESV (14,12),,,                                           X
               COMMREG=X0(,PARMREG1) SAVE ENTRY REGISTERS.
         USING IKJEBECA,COMMREG ESTABLISH ADDRESSABILITY TO THE
*                                  COMMUNICATION AREA.
         LR    DATAREG,PARMREG1 SAVE PARAMETER LIST ADDRESS.
         L     PARMREG1,X4(,PARMREG1) OBTAIN RELATIVE ERROR TO BE
*                                  PROCESSED.
         B     MA005010(PARMREG1) ENTRY CODE BRANCH TABLE.
MA005010 EQU   *
         B     MA005020       1 - NO CORE AVAILABLE.
         B     MA005030       2 - COMMAND SYSTEM ERROR.
         B     MA005050       3 - INVALID SUBCOMMAND.
         B     MA005060       4 - VERIFY REQUEST.
         SPACE 2
MA005020 EQU   *
         LA    LEV1REG,M312   RELATIVE MESSAGE TO BE PUT TO THE
*                                  TERMINAL.
         LA    INS1REG,M1INS001 ADDRESS OF INSERTION RECORD FOR
*                                  FIRST LEVEL MESSAGE.
         SR    LEV2REG,LEV2REG SHOW THAT NO SECOND LEVEL MESSAGE
         SR    INS2REG,INS2REG     OR INSERTIONS ARE REQUIRED.
         B     MA005090       BRANCH TO PUT MESSAGE.
         EJECT
MA005030 EQU   *
         L     INS1REG,X12(,DATAREG) INDEX INTO SERVICE ROUTINE
*                                  NAME TABLE.
         LA    INS1REG,M1MLTABL(INS1REG) ADDRESS OF APPROPRIATE
*                                  SERVICE ROUTINE NAME.
         MVC   MALNIN1(X12),X0(INS1REG) MOVE ROUTINE NAME TO
*                                  INSERTION RECORD.
         LA    INS1REG,MAPTIN2 ADDRESS OF SECOND INSERTION RECORD
         MVC   X0(X8,INS1REG),M1CONS1 INITIALIZE POINTER, LENGTH
*                                  AND OFFSET.
         L     INS2REG,X16(,DATAREG) OBTAIN RETURN CODE AND
         CVD   INS2REG,X8(,INS1REG) CONVERT TO DECIMAL.
         OI    X15(INS1REG),M1MLZONE CHANGE ZONE ON LAST BYTE.
         UNPK  X9(X3,INS1REG),X14(X2,INS1REG) CONVERT TO EBCDIC
         MVC   X8(X2,INS1REG),X10(INS1REG) AND MOVE TO INSERTION.
         ST    INS1REG,MAPTIN1 CHAIN INSERTION RECORDS.
         LA    LEV1REG,M313   OBTAIN RELATIVE MESSAGE NUMBERS FOR
         LA    LEV2REG,M3131       FIRST AND SECOND LEVEL MESSAGE
         SR    INS1REG,INS1REG SHOW NO INSERTION IN FIRST LEVEL
         LA    INS2REG,MAMSGIN1    MESSAGE AND OBTAIN ADDRESS OF
*                                  INSERTION LIST FOR SECOND
*                                  LEVEL MESSAGE.
         B     MA005090       BRANCH TO PUT MESSAGE.
         SPACE 2
MA005050 EQU   *
         LM    PTSCMREG,SCLENREG,X12(DATAREG) OBTAIN ADDRESS OF
*                                  SUBCOMMAND NAME AND LENGTH.
         LTR   INS1REG,PTSCMREG  DETERMINE IF INSERTION IS PROVIDED.
         BNZ   MA005053       IF SO, BRANCH TO PROCESS INSERTION.
         B     MA005056       BRANCH TO PROCESS REMAINING PARAMETERS.
MA005053 EQU   *
         MVC   MAPTIN1(M1INS003-M1INS002),M1INS002 CREATE
*                                  INSERTION RECORD FOR
*                                  SUBCOMMAND NAME.
         BCTR  SCLENREG,X0    REDUCE SUBCOMMAND LENGTH BY 1 AND
         EX    SCLENREG,M1MVC001   MOVE TO INSERTION RECORD.
         LA    INS1REG,MAMSGIN1 ADDRESS OF INSERTION RECORD FOR
*                                  FIRST LEVEL MESSAGE.
MA005056 EQU   *
         LA    LEV1REG,M366   RELATIVE MESSAGE TO BE PUT TO THE
*                                  TERMINAL.
         SR    LEV2REG,LEV2REG SHOW THAT NO SECOND LEVEL MESSAGE
         SR    INS2REG,INS2REG     OR INSERTION IS REQUIRED.
         B     MA005090       BRANCH TO PUT MESSAGE.
         SPACE 2
MA005060 EQU   *
         SR    LEV1REG,LEV1REG INDICATE A VERIFY REQUEST BY
         SR    LEV2REG,LEV2REG     SPECIFYING RELATIVE MESSAGE
         LA    INS1REG,CATEMPBF ADDRESS OF VERIFY LINE.
         SR    INS2REG,INS2REG     MESSAGE OR INSERTIONS.
         SPACE 2
MA005090 EQU   *
         IKJEBEML (LEV1REG),(LEV2REG),(INS1REG),(INS2REG),             X
               MF=(E,MAMGPLST) CALL IKJEBEMS.
MA005093 EQU   *
         IKJEBERT (14,12),,RC=(15) RETURN TO CALLER.
         SPACE 2
M1ERROR1 EQU   0              RELATIVE ERROR 1 - NO CORE MESSAGE.
M1ERROR2 EQU   4              RELATIVE ERROR 2 - COMMAND SYSTEM
*                                  ERROR.
M1ERROR3 EQU   8              RELATIVE ERROR 3 - INVALID
*                                  SUBCOMMAND NAME.
M1ERROR4 EQU   12             RELATIVE ERROR 4 - VERIFY REQUEST.
M1MLTABL DS    0F             TABLE OF SERVICE ROUTINE NAMES.
M1MLSTAX EQU   0*12           OFFSET TO STAX INSERTION.
M1NAME01 EQU   *
         DC    AL2(M1NAME02-*) INSERTION LENGTH.
         DC    AL2(M3131IN1)  OFFSET TO INSERTION.
         DC    C'STAX'        SERVICE ROUTINE NAME.
M1NAME02 EQU   *
         DC    (12-(M1NAME02-M1NAME01))C' ' FILL TO 3 WORDS.
M1MLSTAE EQU   1*12           OFFSET TO STAE INSERTION.
M1NAME03 EQU   *
         DC    AL2(M1NAME04-*) INSERTION LENGTH.
         DC    AL2(M3131IN1)  OFFSET TO INSERTION.
         DC    C'STAE'        SERVICE ROUTINE NAME.
M1NAME04 EQU   *
         DC    (12-(M1NAME04-M1NAME03))C' ' FILL TO 3 WORDS.
M1MLPTGT EQU   2*12           OFFSET TO PUTGET INSERTION.
M1NAME05 EQU   *
         DC    AL2(M1NAME06-*) INSERTION LENGTH.
         DC    AL2(M3131IN1)  OFFSET TO INSERTION.
         DC    C'PUTGET'      SERVICE ROUTINE NAME.
M1NAME06 EQU   *
         DC    (12-(M1NAME06-M1NAME05))C' ' FILL TO 3 WORDS.
M1MLSCAN EQU   3*12           OFFSET TO SCAN INSERTION.
M1NAME07 EQU   *
         DC    AL2(M1NAME08-*) INSERTION LENGTH.
         DC    AL2(M3131IN1)  OFFSET TO INSERTION.
         DC    C'SCAN'        SERVICE ROUTINE NAME.
M1NAME08 EQU   *
         DC    (12-(M1NAME08-M1NAME07))C' ' FILL TO 3 WORDS.
M1CONS1  DC    A(0),H'6',AL2(M3131IN2) POINTER, LENGTH, AND
*                                  OFFSET FOR COMMAND SYSTEM
*                                  ERROR MESSAGE, RETURN CODE
*                                  INSERTION.
M1MVC001 MVC   MAINS1(*-*),X0(PTSCMREG) MOVE SUBCOMMAND NAME TO
*                                  INSERTION RECORD FOR MESSAGE.
M1INS001 IKJEBEMG 0,M312IN1,'EDIT' COMMAND NAME INSERTION.
M1INS002 IKJEBEMG 0,M366IN1,'        ' BASIC INSERTION FOR             X
                                   INVALID SUBCOMMAND MESSAGE.
M1INS003 EQU   *
M1MLZONE EQU   X'0F'          EBCDIC NUMERIC ZONE BITS.
         IKJEBEMI (312,313,366) MESSAGE EQUATES.
         TITLE 'IKJEBMA2 - INPUT STACK CLEAN-UP ROUTINE'
IKJEBMA2 CSECT
         IKJEBESV (14,12),,,COMMREG=(9) SAVE ENTRY REGISTERS.
         USING IKJEBECA,COMMREG ESTABLISH ADDRESSABILITY TO THE
*                                  COMMUNICATION AREA.
         LR    DATAREG,PARMREG1 SAVE WORKAREA ADDRESS.
         LA    PARMREG0,X1(,X0) CONSTANT = 1.
         CH    PARMREG0,X2(,RETREG) CHECK ENTRY CODE.
         BE    MA201010       ENTRY CODE = 1, BRANCH TO ISSUE
*                                  TCLEARQ AND STACK DELETE=ALL.
         BH    MA201005       ENTRY CODE = 0, CHECK IF CURRENT
*                                  INPUT BUFFER MUST BE FREED.
         LA    PARMREG0,X2    CREATE CONSTANT OF 2.
         CH    PARMREG0,X2(,RETREG) CHECK FOR ENTRY CODE 2 OR 3.
         BE    MA201030       ENTRY CODE = 2, BRANCH TO ISSUE STACK
*                                  DELETE=ALL.
         B     MA201010       ENTRY CODE = 3, BRANCH TO ISSUE
*                                  TCLEARQ ONLY.
MA201005 EQU   *
         TM    CACFLAG4,CAPTGTBF CHECK IF BUFFER MUST BE FREED.
         BZ    MA201050       IF NOT, BRANCH TO RETURN TO CALLER.
         L     IBFPTREG,CAPTIBFR ADDRESS OF BUFFER TO BE FREED.
         LH    IBFPTREG,X0(,IBFPTREG) LENGTH OF BUFFER.
         NI    CAPTIBFR,X255-CAOPERND SET OPERAND FLAG TO ZERO.
         FREEMAIN E,LV=(IBFPTREG),A=CAPTIBFR,SP=SUBPOOL1,              X
               MF=(E,(DATAREG)) FREE INPUT BUFFER.
         NI    CACFLAG4,X255-CAPTGTBF INDICATE THAT INPUT BUFFER
*                                  WAS FREED.
         B     MA201050       BRANCH TO RETURN TO CALLER.
MA201010 EQU   *
         TCLEARQ INPUT        CLEAR INPUT QUEUES.
         LA    PARMREG0,X1    CREATE CONSTANT OF 1.
         CH    PARMREG0,X2(,RETREG) DETERMINE IF ENTRY CODE IS 1
*                                 OR 3.
         BNE   MA201050       IF ENTRY CODE = 3, RETURN
*                                 TO CALLING ROUTINE.
MA201030 EQU   *
         XC    X0(X4,DATAREG),X0(DATAREG) ZERO STACK PARAMETER
*                                  BLOCK.
         LM    R2,R5,CATMPLST+X12 SAVE PREVIOUS SERVICE ROUTINE
*                                  LIST IN CASE OF ATTENTION.
         STACK PARM=(DATAREG),DELETE=ALL,MF=(E,CATMPLST) DELETE        X
                                   ALL BUT TERMINAL FROM STACK.
         STM   R2,R5,CATMPLST+X12 RESTORE PREVIOUS SERVICE
*                                  ROUTINE PARAMETER LIST.
MA201050 EQU   *
         IKJEBERT (14,12),,RC=(15) RETURN TO CALLER.
         EJECT
***********************************************************************
*     INTERNAL CSECT FOR IMPLICIT EXEC PROCESSING                     *
***********************************************************************
*
IKJEBMA3 CSECT                IMPLICIT EXEC SUBRTN             @Y30NQKK
         IKJEBESV (14,12),,*  ENTRY LINKAGE                    @Y30NQKK
         L     RETREG,CAPTECT    OBTAIN ECT ADDRESS            @Y30NQKK
         MVC   ECTSCMD-ECT(X8,RETREG),MA3EXEC MOVE 'IMPLEXEC'  @Y30NQKK
*                                TO SUBCOMMAND FIELD OF ECT    @Y30NQKK
         L     PARMREG1,TRACEXEC OBTAIN FIRST HALF OF          @Y30NQKK
*                                SUBCOMMAND NAME               @Y30NQKK
         L     RETCDREG,TRACEXEC+X4  OBTAIN LAST HALF OF       @Y30NQKK
*                                SUBCOMMAND NAME               @Y30NQKK
         TSEVENT  PPMODE   PUT SUBCOMMAND EXEC INTO TRACE INFO @Y30NQKK
*
         SR    PARMREG0,PARMREG0 CLEAR REGISTER                @Y30NQKK
         L     PARMREG1,CAPTIBFR OBTAIN CURRENT BUFFER PTR     @Y30NQKK
         STH   PARMREG0,X2(,PARMREG1) ZERO BUFFER OFFSET FIELD @Y30NQKK
         ST    PARMREG1,CASCWKA+4 STORE BUFFER PTR IN PARMLIST @Y30NQKK
         ST    COMMREG,CASCWKA STORE COMM AREA PTR             @Y30NQKK
         IKJEBESH (COMMREG),IKJEBECI,PARAM=(CASCWKA),MF=(E,CASCWKA+8)
*                                                              @Y30NQKK
         L     PARMREG1,CAPTECT   GET ADDRESS OF ECT           @Y30NQKK
         STCM  RETCDREG,B'0111',ECTRTCD-ECT(PARMREG1) STORE    @Y30NQKK
*                                 EXEC'S RETURN CODE IN ECT    @Y30NQKK
         LTR   RETCDREG,RETCDREG TEST FOR NORMAL OPERATION     @Y30NQKK
         BZ    MA3EXIT        IF NORMAL, RETURN TO CALLER.     @Y30NQKK
         CALL  IKJEBMA2,ID=2,MF=(E,MASRPLST) REQ. STACK DELETE @Y30NQKK
*                              AND TCLEARQ BEFORE CONTINUING   @Y30NQKK
         SR    RETCDREG,RETCDREG SET NORMAL RETURN CODE        @Y30NQKK
MA3EXIT  IKJEBERT (14,12),,RC=(15) RETURN TO CALLER            @Y30NQKK
         DS    0F             ALIGNMENT ONLY                   @Y30NQKK
MA3EXEC  DC    CL8'IMPLEXEC'  CONSTANT FOR ECT SCMD FIELD      @Y30NQKK
TRACEXEC DC    CL8'EXEC'      CONSTANT FOR TRACING PURPOSES    @Y30NQKK
         TITLE 'IKJEBMA8 - IBM SUPPLIED SUBCOMMAND TABLE'
         IKJEBEST (*,,IKJEBELI), LINE INSERT/REPLACE/DELETE            X
               (ALLOCATE,ALLOC,IKJEBEHE), ALLOCATE               Y01676X
               (BOTTOM,B,IKJEBEBO), BOTTOM                             X
               (CHANGE,C,IKJEBECH), CHANGE                             X
               (COPY,CO,IKJEBEMC), COPY                        @Y30NQKBX
               (DELETE,DEL,IKJEBEDE), DELETE                     Y01676X
               (DOWN,,IKJEBEDO), DOWN                                  X
               (END,,IKJEBEEN), END                                    X
               (EXEC,EX,IKJEBEHE), EXEC                        @Y30NQKKX
               (FIND,F,IKJEBEFI), FIND                                 X
               (FORMAT,FORM,IKJEBEFO), FORMAT                          X
               (HELP,H,IKJEBEHE), HELP                                 X
               (INPUT,I,IKJEBEIP), INPUT                               X
               (INSERT,IN,IKJEBEIS), INSERT                            X
               (LIST,L,IKJEBELT), LIST                                 X
               (MERGE,M,IKJEBEME), MERGE                               X
               (MOVE,MO,IKJEBEMM), MOVE                        @Y30NQKBX
               (PROFILE,PROF,IKJEBEHE), PROFILE                  A42956X
               (RENUM,REN,IKJEBERE), RENUMBER                          X
               (RUN,R,IKJEBERU), RUN                                   X
               (SAVE,S,IKJEBESA), SAVE                                 X
               (SEND,SE,IKJEBEHE), SEND                          Y01156X
               (SCAN,SC,IKJEBESC), SCAN                                X
               (SUBMIT,SUB,IKJEBESU), SUBMIT                     Y01676X
               (TABSET,TAB,IKJEBETA), TABSET                           X
               (TOP,,IKJEBETO), TOP                                    X
               (UNNUM,UNN,IKJEBEUN), UNNUMBER                  @Y30NQKHX
               (UP,,IKJEBEUP), UP                                      X
               (VERIFY,V,IKJEBEVE), VERIFY                             X
               CSECT=IBM     IBM SUPPLIED SUBCOMMAND TABLE.
         TITLE 'IKJEBMA9 - USER SUPPLIED SUBCOMMAND TABLE'
         IKJEBEST CSECT=USER  USER SUPPLIED SUBCOMMAND TABLE.
         TITLE 'IKJEBEMA - MAPPING MACRO DSECTS'
         IKJEBECA
         SPACE 2
***********************************************************************
*                                                                     *
*   DEFINE MAIN CONTROLLER WORK AREA IN THE COMMUNICATION AREA.       *
*                                                                     *
***********************************************************************
         ORG   CAMAWKA        DEFINE MAIN CONTROLLER WORK AREA.
MASRPLST DS    2F             PARAMETER LIST FOR SUBCOMMAND.
MAMGPLST DS    5F             PARAMETER LIST FOR MESSAGE ROUTINE.
*                             CONTROL FLAGS - SEE CAMAWKA IN
*                                  IKJEBECA.
         ORG   CAMAWKA        RE-USE CONTROLLER WORK AREA.
MASCNFLG DS    F              FLAG WORK FOR IKJSCAN.
MASCNOA  DS    2F             IKJSCAN OUTPUT AREA.
MALINKSF DS    2F             PARAMETER LIST FOR LINK SVC.
         ORG   CAMAWKA        OVERLAY CONTROLLER WORK AREA.
MAFREMNL DS    3F             PARAMETER LIST FOR FREEMAIN.
         ORG   CAMAWKA        DEFINE MAIN CONTROLLER WORK AREA.
MAPGPB   DS    4F             PUTGET PARAMETER BLOCK.
         ORG   CATEMPBF       DEFINE INSERTION RECORD FORMAT.
MAMSGIN1 DS    0F             INSERTION RECORD FOR IKJEBEMS.
MAPTIN1  DS    F              POINTER TO NEXT INSERTION.
MALNIN1  DS    H              LENGTH OF INSERTION RECORD.
MAOFFIN1 DS    H              OFFSET IN MESSAGE TO INSERTION.
MAINS1   DS    CL80           INSERTION TEXT.
MAMSGIN2 DS    0F             INSERTION RECORD FOR IKJEBEMS.
MAPTIN2  DS    F              POINTER TO NEXT INSERTION.
MALNIN2  DS    H              LENGTH OF INSERTION RECORD.
MAOFFIN2 DS    H              OFFSET IN MESSAGE TO INSERTION.
MAINS2   DS    CL80           INSERTION TEXT.
         EJECT
         IKJCPPL
         EJECT
         IKJECT
         EJECT
         IKJCSOA
         EJECT
         IKJPGPB
         EJECT                                                   Y01676
         IKJUPT                                                  Y01676
         EJECT                                                   Y01676
         CVT   DSECT=YES                                       @Y30NQKK
         END
