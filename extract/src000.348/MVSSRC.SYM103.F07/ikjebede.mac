BEDE     TITLE 'TSO EDIT COMMAND - IKJEBEDE - DELETE SUBCOMMAND'
IKJEBEDE CSECT
***********************************************************************
*                                                                     *
* STATUS -- VERSION NO. 01, OS/360 RELEASE NO. 20                     *
*                                                                     *
* FUNCTION -- IKJEBEDE IS THE EDIT SUBCOMMAND 'DELETE'.  IT CAUSES ONE*
*    OR MORE LINES TO BE DELETED FROM THE EDIT UTILITY DATA SET.      *
*    IKJPARS SCANS THE OPERANDS AND PROMPTS FOR VALID SYNTAX.  A      *
*    VALIDITY CHECK ROUTINE, 'DEVALCHK', GAINS CONTROL AFTER EACH     *
*    OPERAND IS PARSED.  FOR THE FIRST OPERAND, IT SETS A SWITCH      *
*    FOR '*' OR CONVERTS THE STARTING LINE NUMBER TO BINARY.          *
*    IT CONVERTS THE SECOND OPERAND TO BINARY, AND STORES IT AS       *
*    EITHER (1) A COUNT OF LINES, OR (2) THE ENDING LINE NUMBER.      *
*    IF TWO LINE NUMBERS ARE SPECIFIED, 'DEVALCHK' SETS AN INVALID    *
*    RANGE SWITCH WHEN THEY ARE IN DESCENDING ORDER.  A TEST IS MADE  *
*    FOR A COUNT OF ZERO, AND A RETURN CODE OF FOUR (4) IS SET IF     *
*    ZERO IS SPECIFIED.  IN ALL OTHER CASES THE RETURN CODE TO IKJPARS*
*    IKJPARS IS ZERO (0).                                             *
*                                                                     *
*    WHEN IKJEBEDE REGAINS CONTROL FROM IKJPARS, IT TESTS FOR         *
*    '*'.  IF '*' IS SPECIFIED, 'COUNT' LINES BEGINNING WITH THE      *
*    CURRENT LINE '*' ARE DELETED.                                    *
*    IF '*' IS NOT SPECIFIED, THE UTILITY DATA SET MUST BE LINE       *
*    NUMBERED FOR IKJEBEDE TO CONTINUE.  IF NOT, AN INFORMATIONAL     *
*    MESSAGE IS PRINTED AT THE TERMINAL AND IKJEBEDE TERMINATES.      *
*    IF AN INVALID LINE RANGE IS SPECIFIED ON THE SUBCOMMAND,         *
*    IKJEBEDE ISSUES A DIAGNOSTIC MESSAGE AND TERMINATES.             *
*    OTHERWISE DELETION OF LINES BY LINE NUMBER IN THE UTILITY DATA   *
*    SET BEGINS.                                                      *
*                                                                     *
*    DELETION OF LINES FROM THE UTILITY DATA SET IS ACCOMPLISHED BY   *
*    INVOKING IKJEBEUT TO PERFORM VARIOUS I/O OPERATIONS ON THE       *
*    DATA SET --                                                      *
*                                                                     *
*    1.  THE FIRST RECORD IS DELETED.  IF NOT FOUND, THE USER IS      *
*    INFORMED BY TERMINAL MESSAGE AND IKJEBEDE TERMINATES.            *
*                                                                     *
*    2.  THE NEXT RECORD IS READ.                                     *
*                                                                     *
*    3.  THE RECORD JUST READ IS DELETED.  IF THE READ IS             *
*    UNSUCCESSFUL, '*' IS SET TO THE KEY OF THE PREVIOUS              *
*    RECORD.  IF NO PREVIOUS RECORD EXISTS, THE USER                  *
*    IS INFORMED BY TERMINAL MESSAGE THAT THE DATA SET                *
*    IS EMPTY.                                                        *
*                                                                     *
*    4.  2. AND 3. ABOVE ARE REPEATED UNTIL A RECORD IS NOT           *
*    FOUND OR UNTIL THE LAST RECORD SPECIFIED TO BE DELETED           *
*    HAS BEEN REMOVED FROM THE DATA SET.  WHEN THE LATTER             *
*    OCCURS, '*' IS SET TO THE PREVIOUS RECORD KEY OR TO              *
*    ZERO IF NO PREVIOUS RECORDS EXIST.  (WHEN NO PREVIOUS            *
*    RECORDS EXIST, THE USER IS INFORMED BY MESSAGE THAT THE TOP OF   *
*    THE DATA SET HAS BEEN REACHED.)                                  *
*                                                                     *
*    WHEN DELETION OF LINES FROM THE UTILITY DATA SET IS COMPLETE,    *
*    A CHECK IS MADE TO DETERMINE IF THE BASIC/IPLI LANGUAGE PROCESSOR*
*    MUST BE CALLED TO REMOVE LINES FROM THE REVERSE POLISH DATA SET  *
*    MAINTAINED FOR THOSE DATA SET TYPES.  IF THE LANGUAGE PROCESSOR  *
*    EXISTS IN THE SYSTEM, IT IS INVOKED VIA THE STANDARD SYNTAX      *
*    CHECKER INTERFACE.                                               *
*                                                                     *
*    WHEN DELETION OPERATIONS ARE COMPLETE, CONTROL IS RETURNED       *
*    TO IKJEBEMA BY BRANCHING ON REGISTER FOURTEEN (14).              *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEBEDE - VIA IKJEBESH MACRO ISSUED BY IKJEBEMA            *
*         WHEN THE DELETE SUBCOMMAND IS ENTERED AT THE TERMINAL.      *
*                                                                     *
* INPUT --                                                            *
*    REGISTER ONE (1) CONTAINS THE ADDRESS OF THE EDIT COMMUNICATION  *
*    AREA.                                                            *
*                                                                     *
* OUTPUT --                                                           *
*    REGISTER FIFTEEN (15) CONTAINS ONE OF THE FOLLOWING              *
*    RETURN CODES --                                                  *
*                                                                     *
*    00 - SUCCESSFUL OPERATION                                        *
*    08 - UNABLE TO COMPLETE (SEE 'NOTES' FOR DESCRIPTION)            *
*    12 - I/O ERROR IN THE UTILITY DATA SET                           *
*    16 - LANGUAGE PROCESSOR FAILURE                                  *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         IKJEBEMS - EDIT MESSAGE SELECTION ROUTINE, INVOKED VIA      *
*                    IKJEBESH MACRO, TO CAUSE TERMINAL OUTPUT OF      *
*                    INFORMATIONAL MESSAGES                           *
*         IKJEBEUT - EDIT UTILITY INTERFACE ROUTINE, INVOKED VIA      *
*                    IKJEBESH MACRO TO PERFORM I/O OPERATIONS ON THE  *
*                    EDIT UTILITY DATA SET                            *
*         IKJPARS  - A TMP SERVICE ROUTINE, INVOKED VIA LINK TO       *
*                    SCAN OPERANDS OF THE SUBCOMMAND AND TO PROMPT    *
*                    FOR SYNTAX VALIDITY                              *
*                                                                     *
*    MACROS USED --                                                   *
*                                                                     *
*         CALL     - USED TO INVOKE THE BASIC/IPLI LANGUAGE           *
*                    PROCESSOR                                        *
*         IKJEBEMG - BUILDS LOCAL INSERTION LISTS FOR TERMINAL        *
*                    MESSAGES                                         *
*         IKJEBEMI - GENERATES RELATIVE MESSAGE NUMBERS AND INSERTION *
*                    OFFSETS                                          *
*         IKJEBEML - BUILDS MESSAGE PARAMETER LISTS                   *
*         IKJEBESH - INVOKES ANY EDIT SERVICE ROUTINE                 *
*         IKJEBESV - ENTRY LINKAGE AND ADDRESSABILITY WITHIN THE      *
*                    EDIT COMMAND PROCESSOR                           *
*         IKJPARM  - ESTABLISHES THE BEGINNING OF THE PARAMETER       *
*                    CONTROL LIST FOR IKJPARS                         *
*         IKJIDENT - ESTABLISHES PARAMETER CONTROL ENTRIES            *
*                    FOR '*', LINE NUMBERS, AND COUNT IN THE          *
*                    PARAMETER CONTROL LIST                           *
*         IKJENDP  - MARKS THE END OF THE PARAMETER CONTROL LIST      *
*         LINK     - USED TO INVOKE IKJPARS                           *
*                                                                     *
* EXITS, NORMAL --                                                    *
*    CONTROL IS RETURNED TO IKJEBEMA BY BRANCHING ON THE CONTENTS     *
*    OF REGISTER FOURTEEN (14).                                       *
*                                                                     *
* EXITS, ERROR --                                                     *
*    CONTROL IS RETURNED TO IKJEBEMA BY BRANCHING ON                  *
*    THE CONTENTS OF REGISTER FOURTEEN (14) WITH AN ERROR CODE SET IN *
*    REGISTER FIFTEEN (15).                                           *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    IKJEBECA, THE EDIT COMMUNICATION AREA CONTAINS PARAMETER LIST    *
*    STORAGE FOR SERVICE ROUTINES INVOKED BY IKJEBEDE, A WORK AREA    *
*    'CASCWKA' FOR THE USE OF ALL EDIT SUBCOMMANDS, A POINTER TO      *
*    THE CURRENT INPUT BUFFER, AND VARIOUS CONTROL INFORMATION.       *
*                                                                     *
*    THE IKJPARS PARAMETER CONTROL LIST SPECIFIES POSITIONAL          *
*    OPERANDS THAT IKJPARS IS EXPECTED TO SCAN OFF.                   *
*                                                                     *
*    THE IKJPARS PARAMETER DESCRIPTOR LIST CONTAINS POINTERS TO AND   *
*    LENGTHS OF 'PARSED' OPERANDS.  THE IKJEBEDE VALIDITY CHECK       *
*    ROUTINE, 'DEVALCHK', DETERMINES BINARY VALUES OF OPERANDS,       *
*    AND CHECKS LINE RANGES FOR VALIDITY.                             *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REFRESHABLE, ENABLED, NON-PRIVILEGED                             *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THIS ROUTINE ASSUMES THAT THE HIGH ORDER ZONE OF A SIGNED,       *
*    UNPACKED DECIMAL BYTE CONTAINS NO BITS UNCOMMON TO THE HIGH      *
*    ORDER ZONE OF A CHARACTER DIGIT.                                 *
*                                                                     *
* NOTES --                                                            *
*                                                                     *
*    EXPLANATION OF ERROR CONDITIONS --                               *
*                                                                     *
*    AN INPUT/OUTPUT ERROR OCCURS WHEN IKJEBEUT IS UNABLE             *
*    TO SUCCESSFULLY READ OR DELETE AN EXISTING RECORD.               *
*                                                                     *
*    A LANGUAGE PROCESSOR FAILURE OCCURS WHEN A RETURN CODE OF        *
*    20 IS RETURNED BY THE BASIC/IPLI LANGUAGE PROCESSOR.             *
*                                                                     *
*    A SUBCOMMAND TERMINATION ERROR (RETURN CODE 08 TO IKJEBEMA)      8
*    OCCURS WHEN ANY OF THE FOLLOWING CONDITIONS HAS BEEN             *
*    ENCOUNTERED --                                                   *
*                                                                     *
*    (1) A COMMAND SYSTEM ERROR - A SERVICE ROUTINE HAS INDICATED     *
*    THAT IT CANNOT PERFORM ITS FUNCTION.                             *
*                                                                     *
*    (2) A LINE EXPECTED TO BE IN THE UTILITY DATA SET CANNOT BE      *
*    LOCATED.                                                         *
*                                                                     *
*    (3) A LINE NUMBER OPERAND HAS BEEN SPECIFIED FOR A 'NONUM'       *
*    DATA SET.                                                        *
*                                                                     *
*    (4) AN INVALID LINE NUMBER RANGE HAS BEEN SPECIFIED.             *
*                                                                     *
*    (5) A LANGUAGE PROCESSOR RETURN CODE OTHER THAN 0,4, OR 20       *
*    HAS BEEN ENCOUNTERED WHEN 'SCAN' IS NOT IN EFFECT, OR A RETURN   *
*    CODE OTHER THAN 0 OR 20 HAS BEEN ENCOUNTERED WHEN 'SCAN' IS IN   *
*    EFFECT.                                                          *
*                                                                     *
*    (6) A CONDITIONAL GETMAIN FAILED IN A SERVICE ROUTINE.           *
*                                                                     *
*    (7) IKJPARS COULD NOT PROMPT USER FOR REQUIRED POSITIONAL        *
*    OPERAND -- USER IS NOPROMPT.                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*
* THE FOLLOWING EQU'S ALLOW SYMBOLIC ADDRESSING OF REGISTERS
*
***********************************************************************
PARMREG0 EQU   0                   PARAMETER REGISTER
PARMREG1 EQU   1                   PARAMETER REGISTER
COMMREG  EQU   9                   COMMUNICATION AREA ADDRESS
BASEREG  EQU   11                  BASE REGISTER
DATAREG  EQU   12                  DATA ADDRESS
SAVEREG  EQU   13                  SAVE AREA ADDRESS
RETREG   EQU   14                  CONTAINS RETURN ADDRESS
CALLREG  EQU   15                  ENTRY POINT FOR CALLED ROUTINES
RETCDREG EQU   15                  RETURN CODE REGISTER
REG0     EQU   0                   WORK REGISTER
REG2     EQU   2                   WORK REGISTER
REG3     EQU   3                   WORK REGISTER
REG4     EQU   4                   WORK REGISTER
REG5     EQU   5                   WORK REGISTER
REG6     EQU   6                   WORK REGISTER
REG7     EQU   7                   WORK REGISTER
REG8     EQU   8                   WORK REGISTER
REG15    EQU   15                  WORK REGISTER
         EJECT
***********************************************************************
*
* THE FOLLOWING EQU'S ALLOW SYMBOLIC REFERENCE TO CHARACTER
* AND DECIMAL CONSTANTS
*
***********************************************************************
ASTERISK EQU   C'*'                ASTERISK REPRESENTATION
CHARBLNK EQU   C' '                CHARACTER BLANK
CHARZERO EQU   C'0'                CHARACTER ZERO REPRESENTATION
DEATTNIS EQU   8                   MASK FOR BCR INSTRUCTION
ELEVEN   EQU   11                  DISPLACEMENT OF ELEVEN
FIVE     EQU   5                   DISPLACEMENT OF FIVE
FOUR     EQU   4                   CONSTANT 4 FOR COMPARISONS
IOERRRC  EQU   12                  RETURN CODE FOR I/O ERROR IS 12
LENGTH0  EQU   0                   LENGTH OF ZERO
LENGTH1  EQU   0                   LENGTH OF ONE
LENGTH5  EQU   5                   LENGTH OF FIVE
LENGTH8  EQU   8                   LENGTH OF EIGHT
LENGTH12 EQU   12                  LENGTH OF TWELVE
LENGTH15 EQU   15                  LENGTH OF FIFTEEN
LENGTH16 EQU   16                  LENGTH OF SIXTEEN
LOW      EQU   4                   MASK FOR BCR INSTRUCTION
NEXTBYTE EQU   1                   DISPLACEMENT OF ONE
NOBRANCH EQU   0                   SPECIFIES NO BRANCH FOR BCTR
ONE      EQU   1                   DISPLACEMENT OF ONE
RC8       EQU   8                  RETURN CODE 08 TO IKJEBEMA
SEVEN    EQU   7                   DISPLACEMENT OF SEVEN
SIGBYTES EQU   0                   DISPLACEMENT OF ZERO
SIXTEEN  EQU   16                  CONSTANT 16 FOR COMPARISONS
THISBYTE EQU   0                   DISPLACEMENT OF ZERO
TWENTY   EQU   20                  CONSTANT 20 FOR COMPARISONS
WORD     EQU   4                   LENGTH OF ONE WORD
WORD1    EQU   0                   DISPLACEMENT OF FIRST WORD
WORD2    EQU   4                   DISPLACEMENT OF SECOND WORD
WORD3    EQU   8                   DISPLACEMENT OF THIRD WORD
         SPACE 2
         IKJEBEMI (312,313,501,502,503,504,505) GENERATE MESSAGE DATA
         EJECT
***********************************************************************
*
*                             PROLOG
*
***********************************************************************
         SPACE 2
         IKJEBESV (14,12),,,COMMREG=(1) ENTRY LINKAGE
         USING IKJEBECA,COMMREG    ADDRESSABILITY
         ST    REG15,DESVAREA      STORE POINTER TO NEXT SAVE AREA FOR X
                                   THE VALIDITY CHECK ROUTINE
         TM    CAPTIBFR,CAOPERND   ARE ANY OPERANDS SPECIFIED
         BO    PARSEIT             YES-PARSE TO SCAN OPERANDS
         LA    REG2,ONE            INITIALIZE COUNT TO ONE
         ST    REG2,DECOUNT        IF NO OPERANDS PRESENT
         B     ASTERRTN            TREAT AS IF '*' WERE SPECIFIED
         EJECT
***********************************************************************
*IN ORDER TO INVOKE IKJPARS,A PARAMETER LIST ADDRESS IS PASSED
*IN REGISTER ONE. THE LIST INCLUDES -
*        WORD 1 PTR TO UPT
*        WORD 2 PTR TO ECT
*        WORD 3 PTR TO EDIT ATTENTION ECB
*        WORD 4 PTR TO PCL
*        WORD 5 PTR TO ANS. PLACE(ANS. PLACE POINTS TO PDL)
*        WORD 6 PTR TO COMMAND BUFFER
*        WORD 7 PTR TO COMMUNICATIONS AREA(USED BY VALIDITY CHECK
*                   ROUTINE TO ADDRESS SUBCOMMAND WORK AREA.)
*BEFORE PASSING CONTROL TO IKJPARS, FLAGS ARE INITIALIZED OFF FOR
*THE VALIDITY CHECK ROUTINE
***********************************************************************
         SPACE 2
PARSEIT  NI    DEFLAGS,DEZEROES    INITIALIZE FLAGS FOR DEVALCHK
         L     REG2,PCLADDR        POINTER TO PARSE PCL
         LA    REG3,CAPTPRSD       POINTER TO ANSWER PLACE
         L     REG4,CAPTIBFR       POINTER TO INPUT BUFFER
         ST    REG2,CATMPLST+PPLPCL-PPL STORE PCL ADDRESS
*                                       IN PARAMETER LIST
         ST    REG3,CATMPLST+PPLANS-PPL STORE ANSWER ADDRESS
*                                       IN PARAMETER LIST
         ST    REG4,CATMPLST+PPLCBUF-PPL STORE POINTER TO COMMAND
*                                    BUFFER IN PARAMETER LIST
         ST    COMMREG,CATMPLST+PPLUWA-PPL STORE COMMUNICATION AREA
*                                    ADDRESS IN PARAMETER LIST
* A 'LINK' MACRO IS USED TO DYNAMICALLY BUILD THE PARSE PARAMETER LIST
* AND PASS CONTROL TO IKJPARS
         LINK  EP=IKJPARS,DCB=0,MF=(E,CATMPLST),SF=(E,DEPARM)
         EJECT
***********************************************************************
*WHEN CONTROL IS RETURNED FROM PARSE,OPERANDS HAVE BEEN CHECKED
*FOR VALIDITY. LINE VALUES OR COUNT HAVE BEEN SET BY THE
*VALIDITY CHECK ROUTINES.  FIVE RETURN CODES ARE POSSIBLE -
*        RETURN CODE     ACTION BY IKJEBEDE
*        0-SUCCESSFUL    CONTINUE PROCESSING SUBCOMMAND
*        4-COMMAND       RETURN TO MAIN CONTROLLER WITH RETURN CODE
*          INCOMPLETE    08 (CAN'T COMPLETE)
*        8-ATTN ISSUED   RETURN TO MAIN CONTROLLER
*       12-INVALID PARMS COMMAND SYSTEM ERROR MESSAGE
*       16-NO SPACE      'NOT ENOUGH MAIN STORAGE' MESSAGE
***********************************************************************
         SPACE 2
*THIS BRANCH TABLE IS POSITION DEPENDENT
         B     NOCORE@(RETCDREG)   BRANCH ON RETURN CODE
         B     NORMAL              CONTINUE PROCESSING
         B     GOBACKR8            RETURN WITH RETURN CODE 08
         B     GOBACK              RETURN
         B     DEPRSERR            DIAGNOSE ERROR
NOCORE   LA    REG2,DENOCORE       LOAD ADDRESS OF MESSAGE LIST
         B     DEPUTRE8            BRANCH TO PUT MESSAGE AND
*                                  RETURN TO IKJEBEMA WITH RC=8.
         SPACE 2
         EJECT
NORMAL   TM    DEFLAGS,DEASTER     IF '*' WAS SPECIFIED DELETE 'COUNT'
         BO    ASTERRTN            LINES STARTING AT THE CURRENT LINE
         TM    DEFLAGS,DEBADRNG    IS LINE RANGE VALID
         BZ    VALIDRNG              YES - CONTINUE PROCESSING
         LA    REG2,RNGINVAL         NO  - INVALID RANGE MESSAGE
         B     DEPUTRE8            BRANCH TO PUT MESSAGE AND
*                                  RETURN TO IKJEBEMA (RC IS 08.)
VALIDRNG EQU   *
         TM    CACFLAG1,CANONUM    IS DATA SET LINE NUMBERED
         BZ    LINERTN               YES - BRANCH TO DELETE LINES
*                                          IN THE UTILITY DATA SET
*                                    NO  - ISSUE DIAGNOSTIC MESSAGE
         LA    REG2,DEDSNONM       ADDRESS MESSAGE PARAMETERS
         B     DEPUTRE8            BRANCH TO PUT MESSAGE AND
*                                  RETURN TO IKJEBEMA  (RC IS 08.)
         EJECT
***********************************************************************
* FOLLOWING IS THE MAIN ROUTINE THAT DELETES LINES IN A RANGE
*(LINE NUMBER 1, LINE NUMBER 2).  A TWO-WORD PARAMETER LIST
* IS PASSED TO THE EDIT SERVICE ROUTINE IKJEBEUT TO PERFORM
* READ AND DELETE OPERATIONS ON THE UTILITY DATA SET.
***********************************************************************
LINERTN  L     PARMREG1,CAPTCDCB   WORD 1 POINTS TO CURRENT DCB WITH
         ST    PARMREG1,DEPTCDCB          OPERATION CODE FOR DELETE
         MVI   DEUTOPCD,DEOPCODC          CURRENT LINE IN HIGH ORDER   X
                                          BYTE
         LA    PARMREG1,DEVALUE1   WORD 2 POINTS TO BINARY VALUE OF
         ST    PARMREG1,DECURLIN          STARTING LINE NUMBER TO
         OI    DECURLIN,DELASTWD          REPLACE CURRENT LINE NUMBER  X
                                          HIGH ORDER BIT=1 - LAST PARAM
         BAL   REG6,UTILITY        INVOKE SUBROUTINE TO CALL IKJEBEUT
         LH    REG8,H4             INIT FOR IKJEBEUT RC COMPARES
         CR    RETCDREG,REG8       WAS DELETE SUCCESSFUL
         BL    DELETELR              YES- A RANGE OF LINES ARE DELETED
         BH    IOERROR               I/O ERROR- RETURN RC=12           X
                                     LINE NOT FOUND- PRINT 'LINE NUMBERX
                                        NOT FOUND IN DATA SET' MESSAGE
         EJECT
***********************************************************************
* FALLING THROUGH THE PRECEDING CODE DENOTES THE FACT THAT THE FIRST
* LINE SPECIFIED BY THE USER DOES NOT EXIST.  THE FOLLOWING SECTION
* BUILDS THE INSERTION LIST FOR LINE NUMBER IN THE 'LINE NUMBER
* (LINE NUMBER) NOT FOUND' MESSAGE.
***********************************************************************
         SPACE 2
LINENF   L     REG5,DEVALUE1       CONVERT STARTING LINE VALUE TO
*                                  DECIMAL
         CVD   REG5,DEPACK
         UNPK  DEFIELD1(LENGTH8),DEPACK@(LENGTH5) CHANGE DEC DIGITS
*                                  CHAR DIGITS AND PLACE IN INSERTION
*                                  FIELD
         OI    DEFIELD1+SEVEN,CHARZERO INSURE LAST BYTE IS CHAR DIGIT
         LH    REG8,MAXZEROS       SET COUNTER FOR ZERO SUPPRESSION
         LA    REG7,DEFIELD1       ADDRESS CHARACTER FIELD
*THIS LOOP TESTS FOR LEADING ZEROES
LZLOOP   CLI   THISBYTE(REG7),CHARZERO   IS BYTE A CHARACTER ZERO
         BNE   LDZERO1               NO- DETERMINE COUNT OF LEAD ZEROES
         LA    REG7,NEXTBYTE(,REG7) YES- ADDRESS NEXT BYTE
         BCT   REG8,LZLOOP         REPEAT LOOP 3 TIMES
LDZERO1  EQU   *
         SH    REG8,MAXZEROS       ADJUST COUNTER TO NUMBER OF
         LPR   REG7,REG8           ZEROES ENCOUNTERED
         BNZ   LDZERO2             IF COUNTER NON-ZERO, BRANCH TO
*                                  SUPPRESS LEADING ZEROES
         LA    REG7,LENGTH12       SET INSERTION LENGTH TO 12
         STH   REG7,DELEN1
         B     LDZERO3             CONTINUE PROCESSING INSERTION
LDZERO2  EQU   *
         LA    REG8,DEFIELD1(REG7) ADDRESS FIRST SIGNIFICANT BYTE
         SH    REG7,MAXZEROS       COMPUTE FIELD LENGTH
         LPR   REG7,REG7           AND ADJUST FOR MVC
         EX    REG7,MVCLINE        MOVE LINE NUMBER TO SUPPRESS
*                                  LEADING ZEROS
         LA    REG8,LENGTH5(,REG7) COMPUTE LENGTH OF INSERTION
         STH   REG8,DELEN1         AND STORE IN LENGTH FIELD OF INSERT
LDZERO3  EQU   *
         LA    REG8,M504IN1        SET INSERTION OFFSET
         STH   REG8,DEOFF1
         SR    REG8,REG8           SPECIFY ONE INSERTION ONLY
         ST    REG8,DEPTR1
         SPACE 2
* INSERTION PROCESSING IS COMPLETE
         MVC   DEPARM(LENGTH12),DELNFLST MOVE PARM LIST TO WORK AREA
         LA    REG8,DEPTR1         ADDRESS INSERTION
         ST    REG8,DEPARM+WORD2   AND STORE IN PARAMETER LIST
         LA    REG2,DEPARM         ADDRESS PARM LIST
         B     DEPUTRE8            BRANCH TO PUT MESSAGE AND
*                                  RETURN TO IKJEBEMA (RC IS 08.)
         EJECT
***********************************************************************
*THE FOLLOWING CODE IS GIVEN CONTROL WHEN A LINE RANGE IS TO BE DELETED
*SINGLE LINES ARE TREATED AS A LINE RANGE,I.E. DEVALUE2=DEVALUE1
***********************************************************************
         SPACE 2
DELETELR LA    REG7,LINELOOP       SET REGISTER 7 FOR START ADDRESS
         LA    REG5,DETEMPBF       INITIALIZE THE THIRD WORD OF
         ST    REG5,DEREADBF       PARMLIST TO READ BUFFER ADDRESS
         MVI   DEREADBF,DELASTWD   PARMLIST HAS MAX LENGTH = 3 WORDS
         ST    REG5,DECURLIN       DECURLIN POINTS TO KEY FOR IKJEBEUT
         L     REG5,DEVALUE1       INITIALIZE KEY FIELD OF READ
         ST    REG5,DETEMPBF       BUFFER TO STARTING LINE NUMBER
LINELOOP EQU   *
         L     REG4,DETEMPBF       SAVE KEY OF LAST LINE DELETED
         MVI   DEUTOPCD,DEOPCORN   READ THE NEXT RECORD
         NI    DECURLIN,DEZEROES   WITH 3-WORD PARAMETER LIST
         BAL   REG6,UTILITY        BRANCH TO INVOKE IKJEBEUT
         LTR   RETCDREG,RETCDREG   WAS READ SUCCESSFUL
         BNZ   READPRV@(RETCDREG)    NO- BRANCH TABLE DETERMINES ACTION
         CLC   DEVALUE2(WORD),DETEMPBF YES- IS THE RECORD KEY          X
                                            GT THE ENDING LINE NUMBER
         BL    READPRV                  YES- SET '*' AND RETURN
         TM    CAATTN,CAATTNIS          NO- ATTENTION ISSUED
         BO    READPRV                     YES- SET * AND RETURN
         MVI   DEUTOPCD,DEOPCODC           NO- DELETE LINE BY KEY
         XI    DECURLIN,DELASTWD               WITH 2-WORD PARMLIST
         BAL   REG6,UTILITY        DELETE CURRENT LINE
         CR    RETCDREG,REG8       WAS DELETE SUCCESSFUL
         BCR   LOW,REG7              YES- LOOP TO READ NEXT RECORD
         BE    DECSEUTL              NO- LOGIC ERROR-LINE WAS READ
*                                        SUCCESSFULLY BUT NOT FOUND
*                                        FOR DELETION
         BH    IOERROR               NO- I/O ERROR OCCURRED
        EJECT
***********************************************************************
*THE FOLLOWING SECTION DELETES 'COUNT' LINES BEGINNING AT THE CURRENT
*LINE. THE SERVICE ROUTINE IKJEBEUT PERFORMS READS AND DELETES.
***********************************************************************
         SPACE 2
ASTERRTN TM    CAATTN,CAATTNIS     ATTN ISSUED
         BO    GOBACK              IF SO, RETURN TO IKJEBEMA
         L     REG2,CACURNUM       SAVE THE CURRENT LINE REFERENCE
         ST    REG2,DESVAREA       FOR POSSIBLE BASIC/IPLI PROCESSING
         L     REG2,CAPTCDCB       PTR TO CURRENT DCB IN WORD 1
         ST    REG2,DEPTCDCB           OF IKJEBEUT PARMLIST
         MVI   DEUTOPCD,DEOPCODC   SPECIFY DELETE CURRENT LINE
         LA    REG2,CACURNUM       SPECIFY * AS CURRENT LINE
         ST    REG2,DECURLIN
ASTDELX  EQU   *
         OI    DECURLIN,DELASTWD   A 2-WORD PARMLIST USED FOR DELETE
         BAL   REG6,UTILITY        DELETE CURRENT LINE
         LH    REG8,H4             INIT FOR IKJEBEUT RC COMPARES
         CR    RETCDREG,REG8       WAS DELETE SUCCESSFUL.
         BL    ASTINIT               YES- BRANCH TO SET UP LOOP
         BH    IOERROR               I/O ERROR- RETURN RC=12
*                                  LINE NOT FOUND - CHECK FOR
*                                     KEY=ZERO.  IF KEY IS ZERO,
*                                     DELETE COUNT LINES
*                                     BEGINNING WITH THE FIRST
*                                     LINE OF THE DATA SET.
         L     REG2,CACURNUM       ACQUIRE CURRENT LINE REFERENCE.
         LTR   REG2,REG2           TEST FOR KEY OF ZERO.
         BNE   ASTNOTFD            IF NOT ZERO, BRANCH TO ISSUE
*                                       LINE NOT FOUND MESSAGE
         MVI   DEUTOPCD,DEOPCORF   SPECIFY READ FIRST OPERATION
         BAL   REG6,UTILITY        INVOKE IKJEBEUT FOR UTILITY
*                                       I/O OPERATION
         CR    RETCDREG,REG8       TEST FOR NORMAL RETURN
         BL    ASTFIRST            BRANCH TO CONTINUE PROCESSING
*                                       IF RETURN NORMAL
         BH    IOERROR             RETURN WITH CODE 12 IF
*                                       UTILITY I/O ERROR
*                                       ENCOUNTERED
         LA    REG2,EMPTYDS        ADDRESS 'EMPTY DATA SET'
*                                       MESSAGE PARAMETERS
         B     DEPUTRET            BRANCH TO PUT MESSAGE AND
*                                  RETURN TO IKJEBEMA
ASTFIRST EQU   *
         ST    PARMREG1,DECURLIN   SPECIFY FIRST LINE AS CURRENT
         L     PARMREG1,WORD1(,PARMREG1) ACQUIRE KEY OF FIRST LINE
         ST    PARMREG1,DESVAREA   SAVE KEY IN CASE BASIC OR
*                                       IPLI DATA SET TYPE
         MVI   DEUTOPCD,DEOPCODC   SPECIFY DELETE OPERATION
         B     ASTDELX             BRANCH TO DELETE FIRST LINE
ASTNOTFD EQU   *
         LA    REG2,DELNFLST       SPECIFY LINE NOT FOUND MESSAGE
         B     DEPUTRE8            BRANCH TO PUT MESSAGE AND
*                                  RETURN TO IKJEBEMA (RC IS 08.)
ASTINIT  L     REG7,DECOUNT        SET COUNTER FOR LOOP
         LA    REG2,DETEMPBF       SPECIFY READ BUFFER FOR IKJEBEUT
         ST    REG2,DEREADBF
         BCT   REG7,ASTNXT         IF INITIAL COUNT GT 1, CONTINUE
         B     READPRV             IF NOT, SET '*' AND RETURN
ASTNXT   LA    REG5,ASTLOOP        INITIALIZE REG5 WITH LOOP ADDRESS
         ST    REG2,DECURLIN       INITIALIZE POINTER TO RECORD KEY
         L     REG2,CACURNUM       INITIALIZE KEY FIELD OF READ
         ST    REG2,DETEMPBF       BUFFER TO '*'
         MVI   DEREADBF,DELASTWD   MAX LENGTH OF PARMLIST = 3 WORDS
ASTLOOP  EQU   *
         L     REG4,DETEMPBF       SAVE KEY OF LAST LINE DELETED
         MVI   DEUTOPCD,DEOPCORN   READ NEXT RECORD WITH 3-WORD
         NI    DECURLIN,DEZEROES   PARAMETER LIST
         BAL   REG6,UTILITY        BRANCH TO INVOKE IKJEBEUT
         LTR   RETCDREG,RETCDREG   WAS READ SUCCESSFUL
         BNZ   READPRV@(RETCDREG)    NO- LINE NOT FOUND OR I/O ERROR
         TM    CAATTN,CAATTNIS       YES- ATTN ISSUED
         BO    READPRV                 YES- SET * AND RETURN
ASTDELET MVI   DEUTOPCD,DEOPCODC       NO- DELETE CURRENT LINE
         XI    DECURLIN,DELASTWD   SPECIFY 2-WORD PARAMETER LIST
         BAL   REG6,UTILITY        BRANCH TO INVOKE IKJEBEUT
         LTR   RETCDREG,RETCDREG   WAS DELETE SUCCESSFUL
         BNZ   ABNRMRC@(RETCDREG)    NO- LOGIC ERROR OR I/O ERROR
         BCTR  REG7,REG5             YES- REPEAT LOOP 'COUNT' TIMES
         SPACE 2
READPREV B     READPRV             RECORD NOT FOUND- SET * AND RETURN
         B     IOERROR             I/O ERROR- RETURN WITH RC=12
ABNORMRC EQU   *
         B     DECSEUTL            ISSUE COMMAND SYSTEM ERROR MSG
IOERROR  LA    RETCDREG,IOERRRC    SET RETURN CODE 12 TO IKJEBEMA
         B     GOBACKRC            RETURN TO IKJEBEMA
         EJECT
***********************************************************************
* THIS SECTION GAINS CONTROL UPON DELETION OF THE SPECIFIED
* LINE RANGE OR UPON AN ATTENTION INTERRUPT AFTER AT LEAST ONE
* 'DELETE' AND ONE 'READ NEXT'.  THE LINE PREVIOUS TO THE LAST
* LINE READ IS READ.  IF PRESENT, '*' IS SET AND BASIC/IPLI PROCESSING
* DONE PRIOR TO RETURN TO IKJEBEMA.  AN I/O ERROR RESULTS IN
* RETURN TO IKJEBEMA WITH RC=12.  IF NOT FOUND, A 'READ NEXT'
* IS PERFORMED, A DIAGNOSTIC ISSUED, '*' SET TO ZERO AND BASIC/IPLI
* PROCESSING DONE.
***********************************************************************
        SPACE 2
READPRV  EQU   *
         MVI   DEUTOPCD,DEOPCORP   READ PREVIOUS RECORD
         MVI   DECURLIN,DEZEROES   INSURE 3-WORD PARAMETER LIST
         BAL   REG6,UTILITY        BRANCH TO INVOKE IKJEBEUT
         CR    RETCDREG,REG8       WAS READ SUCCESSFUL
         BL    SETAST                YES- SET * AND RETURN
         BH    IOERROR               I/O ERROR- RC=12
* IF NO PREVIOUS LINE EXISTS, A 'READ FIRST' IS PERFORMED
* TO DETERMINE IF THE DATA SET IS EMPTY
         MVI   DEUTOPCD,DEOPCORF   SPECIFY READ FIRST RECORD
         BAL   REG6,UTILITY        BRANCH TO INVOKE IKJEBEUT
         CH    RETCDREG,H4         WAS READ SUCCESSFUL
         BH    IOERROR               I/O ERROR- RETURN WITH RC=12
         BE    DEEMTYDS              NO- 'NO LINES IN DS' DIAGNOSTIC
         LA    REG2,TOPDS            YES- 'TOP OF DATA SET' DIAGNOSTIC
         BAL   REG6,PUTMSG         BRANCH TO PUT MESSAGE
         B     SETAST0             SET CURRENT LINE PTR
DEEMTYDS EQU   *
         LA    REG2,EMPTYDS        SPECIFY PARAMETER LIST
         BAL   REG6,PUTMSG         BRANCH TO PUT MESSAGE
SETAST0  EQU   *
         SR    REG2,REG2           SET '*' TO ZERO
         ST    REG2,CACURNUM
         LTR   RETCDREG,RETCDREG   WAS TERMINAL OUTPUT SUCCESSFUL
         BZ    DESYNCHK              YES- BRANCH TO CHECK FOR BASIC
*                                         OR IPLI DATA SET TYPE
         BAL   REG2,DECSEPUT         NO-  DIAGNOSE PUTLINE RETURN CODE
         B     DESYNCHK            BRANCH TO CHECK BASIC/IPLI
SETAST   EQU   *
         L     REG2,DETEMPBF       '*' IS KEY OF RECORD
         ST    REG2,CACURNUM
         OI    CACFLAG1,CALNTOVF   SET LINE VERIFY SWITCH ON
         EJECT
***********************************************************************
*THE FOLLOWING SECTION INITIALIZES PARAMETERS FOR SYNTAX CHECKER
*THE BUFFER,IN COMMAND INTERFACE FORMAT,IS PROVIDED FROM THIS ROUTINE'S
*WORK AREA.  ALL OTHER PARAMETERS WITH THE EXCEPTION OF ENTRY CODE
*AND OPERATION CODE WERE INITIALIZED BEFORE IKJEBEDE GAINED CONTROL
***********************************************************************
DESYNCHK EQU   *
         SPACE 2
         CLI   CADSCODE,CAIPLI     IS DATA SET TYPE IPLI
         BE    DESYNCK1            IF SO BRANCH TO CALL IPLI SYN CHKR
         CLI   CADSCODE,CABASIC    IS DATA SET BASIC TYPE
         BNE   GOBACK              IF NOT BRANCH TO RETURN
DESYNCK1 EQU   *
         L     CALLREG,CAPTCHK     ADDRESS THE SYNTAX CHECKER
         LTR   CALLREG,CALLREG     IS THE CHECKER LOADED
         BZ    GOBACK              IF NOT BRANCH TO RETURN
         LA    PARMREG1,DESYNBFR   WORD 1 OF PARMLIST IS A PTR TO THE
         ST    PARMREG1,CASYNBFR        BUFFER
         ST    REG4,DEVALUE2       SET KEY FOR LAST LINE IN RANGE
         TM    DEFLAGS,DEASTER     ASTERISK SPECIFIED
         BZ    DESYNLIN            IF NOT BYPASS START VALUE INIT
         L     REG2,DESVAREA       SET THE START VALUE
         ST    REG2,DEVALUE1
DESYNLIN EQU   *
         MVI   CASYNCD2,DEDEL1     OPERATION IS DELETE
         SR    PARMREG1,PARMREG1   ZERO FIRST WORD OF
         ST    PARMREG1,DECOUNT    COMMAND INTERFACE BUFFER
         LA    PARMREG1,CASYNLST   ADDRESS PARAMETER LIST
         CALL  (15)                INVOKE SYNTAX CHECKER
         EJECT
***********************************************************************
*
*   THE FOLLOWING SECTION DIAGNOSES RETURN CODES FROM THE ITF
*   LANGUAGE PROCESSOR.  POSSIBLE CODES AND ACTION ARE INDICATED
*   BELOW --
*
*   CODE   MEANING            ACTION
*
*    00    NORMAL RETURN      RETURN TO IKJEBEMA WITH RC=0
*
*    04    MESSAGE RETURNED   RETURN TO IKJEBEMA WITH RC=0
*
*    NOTE -- IF RETURN CODE 04 IS ENCOUNTERED, AND 'CASCANSW'
*            IS B'1', AN ERROR MESSAGE IS ISSUED, AND THE RETURN
*            CODE TO IKJEBEMA IS 08.
*
*    16    GETMAIN FAILURE    ISSUE ERROR MESSAGE
*
*    20    PROCESSOR FAILURE  RETURN TO IKJEBEMA WITH RC=16
*
*    OTHER SYSTEM ERROR       ISSUE ERROR MESSAGE
*
***********************************************************************
         SPACE 2
         LTR   RETCDREG,RETCDREG   CHECK FOR RETURN CODE ZERO
         BZ    GOBACK              IF RC=0, RETURN TO IKJEBEMA
         LA    PARMREG1,FOUR       CREATE CONSTANT OF FOUR
         CR    PARMREG1,RETCDREG   CHECK FOR RETURN CODE = 4
         BNE   DEITF001            IF RETURN CODE IS NOT 4, BRANCH
*                                  TO CHECK FOR RC=16.
         TM    CACFLAG1,CASCANSW   IF RETURN CODE IS 4, DETER-
*                                  MINE IF 'SCAN' IS IN EFFECT.
         BO    DEITFCSE            IF SO, BRANCH TO PUT ERROR
*                                  MESSAGE.
         B     GOBACK              OTHERWISE, RETURN NORMALLY.
DEITF001 EQU   *
         LA    PARMREG1,SIXTEEN    CREATE CONSTANT OF SIXTEEN
         CR    PARMREG1,RETCDREG   CHECK FOR RETURN CODE OF 16
         BE    NOCORE              IF RC = 16, BRANCH TO ISSUE
*                                       DIAGNOSTIC MESSAGE
         LA    PARMREG1,TWENTY     CREATE CONSTANT OF TWENTY
         CR    PARMREG1,RETCDREG   CHECK FOR RETURN CODE OF 20
         BNE   DEITFCSE            IF RC IS NOT 20, BRANCH TO
*                                       ISSUE COMMAND SYSTEM ERROR
*                                       MESSAGE
         LA    RETCDREG,SIXTEEN    IF RC = 20, SET RETURN CODE 16
         B     GOBACKRC            AND RETURN TO IKJEBEMA
DEITFCSE EQU   *
         MVC   DEPARM(LENGTH12),DECSELST OTHERWISE MOVE PARAMETER
*                                        LIST TO WORK AREA
         MVC   DEPTR1(LENGTH16),DESYNAME MOVE INS LIST TO WORK AREA
         MVC   DEFIELD1(LENGTH8),CASYNAME MOVE SYNTAX CHECKER NAME
         LA    REG3,LENGTH12       SPECIFY MAX LENGTH FOR INSERTION LST
         LA    REG4,DEFIELD1+SEVEN ADDRESS LAST BYTE OF NAME FIELD
DESNLOOP EQU   *
         CLI   THISBYTE(REG4),CHARBLNK IS BYTE A BLANK
         BNE   DESYNLEN            IF NOT, EXIT FROM LOOP
         BCTR  REG4,NOBRANCH       DECREMENT ADDRESS
         BCT   REG3,DESNLOOP       REPEAT LOOP UNTIL COMPARE FAILS
DESYNLEN EQU   *
         STH   REG3,DELEN1         SET LENGTH TO REFLECT SUPPRESSION
*                                  OF TRAILING BLANKS
         MH    RETCDREG,H3         DETERMINE OFFSET INTO RETURN
*                                  CODE INSERTION TABLE
         LA    REG3,DERCTABL(RETCDREG) ADDRESS INSERTION LIST FOR RC
         ST    REG3,DEPTR1         CHAIN FIRST AND SECOND INSERTIONS
*                                  FOR SECOND LEVEL MESSAGE
         LA    REG2,DEPTR1         ADDRESS CHAINED INSERTIONS
*                                  FOR SECOND-LEVEL MESSAGE
         ST    REG2,DEPARM+WORD3   PLACE ADDR IN PARMLIST
         LA    REG2,DEPARM         ADDRESS IKJEBEMS PARAMETER LIST
*
*    FALL THROUGH TO PUT MESSAGE AND RETURN TO IKJEBEMA WITH
*    RETURN CODE 08.
*
         EJECT
***********************************************************************
*
*    THE FOLLOWING SECTION FO CODE IS EXECUTED FOR ALL MESSAGES
*    WHICH REQUIRE TERMINATION AFTER THEY ARE ISSUED.
*
***********************************************************************
         SPACE 2
DEPUTRE8 EQU   *
         OI    DEFLAGS,DESCTERM    INDICATE RETURN TO IKJEBEMA WITH
*                                  RETURN CODE 08.
DEPUTRET EQU   *
         BAL   REG6,PUTMSG         BRANCH TO PUT ERROR MESSAGE
         LTR   RETCDREG,RETCDREG   WAS TERMINAL OUTPUT SUCCESSFUL
         BZ    GOBACK              IF SO, BRANCH TO RETURN
         BAL   REG2,DECSEPUT       IF NOT, DIAGNOSE PUTLINE CODE
         B     GOBACK              AND RETURN TO IKJEBEMA
         EJECT
***********************************************************************
* THE FOLLOWING SUBROUTINE DIAGNOSES THE PUTLINE RETURN CODE
* RETURNED FROM IKJEBEMS.  THE 'COMMAND SYSTEM ERROR' DIAGNOSTIC
* IS ISSUED FOR THE FOLLOWING RETURN CODES --
*
*     RETURN CODE        MEANING
*          8             NOWAIT SPECIFIED - NO OUTPUT
*         12             INVALID PARAMETERS
*         16             GETMAIN FAILURE
*
* RETURN CODE 4 (ATTN ISSUED) IS IGNORED IF IT OCCURS.
*
***********************************************************************
         SPACE 2
DECSEPUT EQU   *
         CH    RETCDREG,H4         WAS ATTN ISSUED
         BCR   DEATTNIS,REG2       IF SO, RETURN TO MAINLINE ROUTINE
         OI    DEFLAGS,DESCTERM    INDICATE RETURN TO IKJEBEMA WITH
*                                  RETURN CODE 08.
         MVC   DEPTR1(LENGTH15),DEPUTLIN  MOVE INSERTION LIST FOR
*                                         SERVICE ROUTINE NAME
         MH    RETCDREG,H3         DETERMINE OFFSET INTO RC TABLE
         LA    REG3,DERCTABL(RETCDREG) ADDRESS INSERTION LIST
         ST    REG3,DEPTR1         CHAIN INSERTIONS
         MVC   DEPARM(LENGTH12),DECSELST MOVE IKJEBEMS PARM LIST
         LA    REG3,DEPTR1         ADDRESS FIRST LEVEL-2 INSERTION
         ST    REG3,DEPARM+WORD3   AND STORE IN PARAMETER LIST
         LR    REG6,REG2           SPECIFY RETURN ADDRESS
         LA    REG2,DEPARM         ADDRESS PARM LIST
         B     PUTMSG              BRANCH TO PUT MESSAGE
         EJECT
***********************************************************************
*
* THE FOLLOWING SECTION ISSUES THE 'COMMAND SYSTEM ERROR' DIAGNOSTIC
* FOR A RC OF 4 FROM IKJEBEUT ON A 'DELETE' AFTER A RC OF 0 ON A
* 'READ NEXT'.
*
***********************************************************************
DECSEUTL EQU   *
         OI    DEFLAGS,DESCTERM    INDICATE RETURN TO IKJEBEMA WITH
*                                  RETURN CODE 08.
         MVC   DEPARM(LENGTH12),DECSELST MOVE PARM LIST TO WORK AREA
         LA    REG2,DEUTINS        ADDRESS CHAINED INSERTIONS
         ST    REG2,DEPARM+WORD3   AND STORE IN PARM LIST
         LA    REG2,DEPARM         ADDRESS PARAMETER LIST
         BAL   REG6,PUTMSG         BRANCH TO PUT MESSAGE
         LTR   RETCDREG,RETCDREG   TERMINAL OUTPUT SUCCESSFUL
         BZ    READPREV            IF SO, BRANCH TO SET '*'
         BAL   REG2,DECSEPUT       OTHERWISE DIAGNOSE PUTLINE CODE
         B     READPRV             BRANCH TO SET THE CURRENT LINE '*'
         EJECT
***********************************************************************
*
* THIS SECTION DIAGNOSES COMMAND SYSTEM ERRORS FROM IKJPARS.
*
* RETURN CODE    MEANING
*
*    12          INVALID PARAMETERS
*
***********************************************************************
DEPRSERR EQU   *
         MVC   DEPARM(LENGTH12),DECSELST MOVE PARM LIST TO WORK AREA
         MVC   DEPTR1(LENGTH15),DEPRSINS MOVE INSERTION LIST FOR
*                                        SERVICE ROUTINE NAME
         LA    REG2,DEPTR1
         ST    REG2,DEPARM+WORD3   CHAIN INSERTION TO PARM LIST
         MH    RETCDREG,H3         DETERMINE OFFSET INTO RC TABLE
         LA    REG2,DERCTABL(RETCDREG) ADDRESS SECOND INSERTION
         ST    REG2,DEPTR1         CHAIN INSERTION TO FIRST
         LA    REG2,DEPARM         ADDRESS IKJEBEMS PARM LIST
         B     DEPUTRE8            BRANCH TO PUT MESSAGE AND
*                                  RETURN TO IKJEBEMA (RC IS 08.)
         EJECT
GOBACK   EQU   *
         TM    DEFLAGS,DESCTERM    DETERMINE IF DELETE IS ENDING
*                                  WITHOUT COMPLETING REQUESTED
*                                  FUNCTION.
         BZ    GOBACKR0            IF NOT, BRANCH TO RETURN NORMALLY.
GOBACKR8 EQU   *
         LA    RETCDREG,RC8        IF SO, SET RETURN CODE 08.
         B     GOBACKRC            BRANCH TO RETURN WITH CODE 08.
GOBACKR0 EQU   *
         SR    RETCDREG,RETCDREG   RC=0 TO CALLING ROUTINE
GOBACKRC EQU   *
         TM    CAPRSPDL,CAFREEDL   CHECK IF PDL RETURNED.
         BNZ   SKIPRLSA            IF NOT, BYPASS FREEMAIN OF PDL.
         LA    REG2,CAPTPRSD       FREE PARSE PDL
         IKJRLSA (REG2)
         OI    CAPRSPDL,CAFREEDL   INDICATE THAT ALL PDL'S HAVE
*                                  BEEN FREED.
SKIPRLSA EQU   *
         IKJEBERT (14,12),,RC=(15) RELOAD REGISTERS AND RETURN
        EJECT
***********************************************************************
*THIS SUBROUTINE IS USED FOR ALL READ AND DELETE OPERATIONS ON THE
*UTILITY DATA SET.  REG6 CONTAINS THE RETURN ADDRESS
***********************************************************************
UTILITY  LA    REG2,DEUTPARM       ADDRESS OF IKJEBEUT PARMLIST
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),(REG2)),         X
               MF=(E,DEPARM)       PERFORM REQUESTED OPERATION
         BR    REG6                RETURN TO MAIN ROUTINE
         EJECT
***********************************************************************
*THE FOLLOWING SECTION PUTS OUT ALL MESSAGES WHOSE PARAMETER LISTS
*RESIDE IN LOCAL STORAGE.  IT GAINS CONTROL THROUGH A BAL AND RETURNS
*VIA REGISTER 6.  REGISTER 2 CONTAINS THE ADDRESS OF THE PARAMETER LIST
***********************************************************************
PUTMSG   IKJEBESH (COMMREG),IKJEBEMS,PARAM=((COMMREG),(REG2)),         X
               MF=(E,DEPARM)       PRINT REQUESTED MESSAGE
         BR    REG6                RETURN TO MAINLINE ROUTINE
         EJECT
***********************************************************************
* THE FOLLOWING SUBROUTINE IS A VALIDITY CHECK EXIT FROM IKJPARS.  IT
* GAINS CONTROL AS EACH OPERAND IS PARSED AND SETS BINARY VALUES FOR
* LINE NUMBER 1, LINE NUMBER 2, AND COUNT.  IN THE CASE OF '*' IT SETS
* A FLAG BIT.  IT ALSO CHECKS FOR AN INVALID LINE RANGE AND SETS A
* SWITCH WHEN THIS OCCURS.  NORMAL RETURN IS WITH RC=0 TO IKJPARS.    *
* THE ONLY POSSIBLE INVALID OPERAND IS A ZERO COUNT.  IN THIS CASE    *
* A RETURN CODE OF 4 IS SET, AND IKJPARS WILL ISSUE A DIAGNOSTIC OR   *
* PROMPT, AS APPROPRIATE.                                             *
***********************************************************************
         SPACE 2
***********************************************************************
*                            SPECIAL EQU'S
***********************************************************************
OPADDR   EQU   0
LENGTH   EQU   4
OPERAND  EQU   0
OPNDPRES EQU   6
INVALOP  EQU   4                   RC=4 FOR PARSE PROMPT/ERROR MSG
         SPACE 2
DEVALCHK SAVE  (14,12),,*          ENTRY LINKAGE
         BALR  BASEREG,REG0        ESTABLISH ADDRESSABILITY FOR MODULE
         USING *,BASEREG
         L     COMMREG,WORD2(,PARMREG1) GET COMMUNICATIONS AREA POINTER
         USING IKJEBECA,COMMREG    AND ESTABLISH ADDRESSABILITY
         L     REG15,DESVAREA      GET POINTER TO NEXT SAVE AREA
         ST    SAVEREG,WORD2(,REG15) CROSS CHAIN NEW AND OLD SAVE AREAS
         ST    REG15,WORD3(,SAVEREG)
         LR    SAVEREG,REG15       SAVE AREA ADDRESS IN REGISTER 13
         L     PARMREG1,OPADDR(,PARMREG1)  GET POINTER TO OPERAND
         LH    REG2,LENGTH(,PARMREG1) OBTAIN LENGTH OF OPERAND
         LR    REG3,PARMREG1       SAVE POINTER TO OPERAND ADDRESS
         L     PARMREG1,WORD1(,PARMREG1) LOAD OPERAND ADDRESS
         TM    DEFLAGS,DEOPND1     FIRST OPERAND TO BE CHECKED
         BO    SETVAL2             IF NOT, CHECK SECOND OPERAND
         LA    REG5,ONE            TEST FOR LENGTH=1
         CR    REG2,REG5
         BNE   SETVAL1             IF LENGTH NE 1,* IS IMPOSSIBLE
         CLI   OPERAND(PARMREG1),ASTERISK IS FIRST OPERAND='*'
         BNE   SETVAL1             NO-BINARY VALUE OF LINE CALC
         OI    DEFLAGS,DEONEAST    YES-SET SWITCH TO INDICATE '*'
         ST    REG5,DECOUNT        SET COUNT TO ONE
         B     GOBACKPS            PREPARE RETURN TO PARSE
         EJECT
SETVAL2  TM    OPNDPRES(REG3),DE2OPS IS SECOND OPERAND PRESENT
         BZ    GOBACKPS            IF NOT, RETURN WITH RC=0
         BAL   REG6,PACKRTN        CONVERT OPERAND TO BINARY
         TM    DEFLAGS,DEASTER     WAS FIRST OPERAND='*'
         BO    SETCOUNT            YES-SECOND OPERAND IS 'COUNT'
         ST    REG2,DEVALUE2       NO-SECOND OPERAND IS 'LINE'
         XI    DEFLAGS,DE2OPS      HIGH ORDER BIT=0 FOR 2 OPNDS
         B     VALRANGE            CHECK LINE RANGE VALIDITY
SETCOUNT EQU   *
         LTR   REG2,REG2           CHECK FOR COUNT OF ZERO
         BNZ   SETCTX              IF NOT, BRANCH TO STORE COUNT
         LA    RETCDREG,INVALOP    SET RETURN CODE FOR PROMPT/ERROR
*                                  MESSAGE
         B     GOBCKPSX            BRANCH TO RETURN TO IKJPARS
SETCTX   EQU   *
         ST    REG2,DECOUNT        STORE BINARY COUNT
         B     GOBACKPS            RETURN TO IKJPARS WITH RC=0
VALRANGE CLC   DEVALUE1(WORD),DEVALUE2 IF OPND1 GT OPND2,INVALID RANGE
         BH    BADRANGE            OF LINES - SET FLAG AND RETURN
         BNH   GOBACKPS            IF OPND1 LT OPND2, RETURN
BADRANGE OI    DEFLAGS,DEBADRNG    SET SWITCH FOR INVALID LINE         X
                                   RANGE
         B     GOBACKPS            PREPARE RETURN TO PARSE
SETVAL1  BAL   REG6,PACKRTN        CONVERT OPERAND TO BINARY
         ST    REG2,DEVALUE1       SET LINE NUMBER
         ST    REG2,DEVALUE2       SET ENDING LINE NUMBER IN CASE      X
                                   OF ONE OPERAND SPECIFIED
         OI    DEFLAGS,DEOPND1     INDICATE 1ST OPERAND PROCESSED
         EJECT
***********************************************************************
* A NORMAL RETURN CODE OF ZERO IS ALWAYS RETURNED TO IKJPARS.
* IN THE EVENT OF AN INVALID LINE RANGE, DEVALCHK SETS A SWITCH
* TO INDICATE THIS ERROR - THE MAINLINE DELETE ROUTINE TAKES
* APPROPRIATE ACTION.
***********************************************************************
GOBACKPS SR    RETCDREG,RETCDREG   NORMAL RETURN - PARAMETER VALID
GOBCKPSX EQU   *                   BRANCH ADDR FOR RC=4
         IKJEBERT (14,12),,RC=(15) RETURN LINKAGE TO PARSE
PACKRTN  BCTR  REG2,NOBRANCH       CONVERT OPERAND AREA TO BINARY
         EX    REG2,PACKIT         EX INSTRUCTION NECESSARY FOR PACK
         CVB   REG2,DEPACK         LENGTH IS VARIABLE 1-8 BYTES
         BR    REG6                RETURN
PACKIT   PACK  DEPACK(LENGTH8),OPERAND(LENGTH1,PARMREG1)
         EJECT
***********************************************************************
* LOCAL STORAGE CONSTANTS AND ADDRESS CONSTANTS
***********************************************************************
         SPACE
H3       DC    H'3'                CONSTANT
         SPACE
H4       DC    H'4'                CONSTANT
         SPACE
MAXZEROS DC    H'7'                MAX. NO. OF SUPPRESSED ZEROS
*                                  IN LINE NUMBER INSERTION
         SPACE
MVCLINE  MVC   DEFIELD1(LENGTH0),SIGBYTES(REG8) SUPPRESS LEADING
*                                               ZEROES
         SPACE
PCLADDR  DC    V(IKJEBDE1)         ADDR OF IKJPARS PCL
         SPACE 2
***********************************************************************
*THE FOLLOWING STORAGE CONTAINS ALL LOCAL MESSAGE PARAMETER LISTS AND
*INSERTION LISTS.
***********************************************************************
         SPACE
DENOCORE IKJEBEML M312,,DESCNAME,,MF=L 'NOT ENOUGH STORAGE' MESSAGE
         SPACE
DESCNAME IKJEBEMG ,M312IN1,'DELETE'
         EJECT
DECSELST IKJEBEML M313,M3131,,,MF=L COMMAND SYSTEM ERROR MESSAGE
         SPACE
DEPUTLIN IKJEBEMG ,M3131IN1,'PUTLINE' PUTLINE INSERTION
         SPACE
DEPRSINS IKJEBEMG ,M3131IN1,'PARSE' PARSE INSERTION
         SPACE
DESYNAME IKJEBEMG ,M3131IN1,'        ' SYNTAX CHECKER NAME INSERTION
         SPACE
DEUTINS  IKJEBEMG DERC04,M3131IN1,'IKJEBEUT' IKJEBEUT INSERTION
         EJECT
DERCTABL DS    0F                  TABLE OF INSERTION LISTS FOR RC'S
         SPACE 2
DERC00   IKJEBEMG ,M3131IN2,'00'   RETURN CODE 0
         SPACE 2
DERC04   IKJEBEMG ,M3131IN2,'04'   RETURN CODE 4
         SPACE 2
DERC08   IKJEBEMG ,M3131IN2,'08'   RETURN CODE 8
         SPACE 2
DERC0C   IKJEBEMG ,M3131IN2,'12'   RETURN CODE 12
         SPACE 2
DERC10   IKJEBEMG ,M3131IN2,'16'   RETURN CODE 16
         EJECT
DERC14   IKJEBEMG ,M3131IN2,'20'   RETURN CODE 20
         SPACE 2
EMPTYDS  IKJEBEML M501,,,,MF=L       EMPTY DATA SET MESSAGE
         SPACE
DEDSNONM IKJEBEML M502,,,,MF=L DS NOT LINE NUMBERED MESSAGE
         SPACE
RNGINVAL IKJEBEML M503,,,,MF=L       INVALID RANGE MESSAGE
         SPACE
DELNFLST IKJEBEML M504,,ASTERNF,,MF=L LINE NOT FOUND MESSAGE
         EJECT
ASTERNF  IKJEBEMG ,M504IN1,'''*''' INSERTION FOR '*'
         SPACE
TOPDS    IKJEBEML M505,,,,MF=L       TOP OF DATA SET MESSAGE
         EJECT
***********************************************************************
* THE FOLLOWING IS THE EXPANSION OF THE PARAMETER CONTROL LIST
* THAT IS INPUT TO IKJPARS.  A CSECT IS GENERATED, SO IT IS
* NECESSARY TO INCLUDE AN EXTERNAL REFERENCE TO IT IN IKJEBEDE'S
* LOCAL STORAGE.
***********************************************************************
IKJEBDE1 IKJPARM
PCE1     IKJIDENT 'LINE NUMBER OR *',ASTERISK,MAXLNTH=8,FIRST=NUMERIC, X
               OTHER=NUMERIC,VALIDCK=DEVALCHK,                         X
               PROMPT='SINGLE LINE NUMBER OR RESPECIFY LINE RANGE'
PCE2     IKJIDENT 'LINE NUMBER OR COUNT',MAXLNTH=8,FIRST=NUMERIC,      X
               OTHER=NUMERIC,VALIDCK=DEVALCHK
ENDPDL   IKJENDP
         EJECT
         IKJPPL
         EJECT
***********************************************************************
*THE FOLLOWING SECTION IS THE EXPANSION OF IKJEBECA,THE EDIT
*COMMUNICATIONS AREA.  THE SUBCOMMAND WORK AREA,CASWKA IS ORGANIZED
*BELOW THE EXPANSION FOR SYMBOLIC ADDRESSING BY IKJEBEDE.
***********************************************************************
         SPACE 2
COMMAREA IKJEBECA                  GENERATES COMMUNICATIONS AREA DSECT
        EJECT
***********************************************************************
* THE FOLLOWING SECTION IS AN ORGANIZATION OF IKJEBEDE'S DYNAMIC
* WORK AREA, CASCWKA IN THE EDIT COMMUNICATIONS AREA.
***********************************************************************
         ORG   CASCWKA             IKJEBEDE WORK AREA ORGANIZATION
DEPACK   DS    D                   CVD INTO THIS AREA - UNPK OUT OF IT
         SPACE 2
*THE FIELD BELOW MUST BE ALIGNED ON A DOUBLE-WORD BOUNDARY AND MUST BE
*CONTIGUOUS.
DELINENO DS    0D                  LINE NUMBER INSERTION LIST
DEPTR1   DS    F                        PTR TO NEXT INSERTION-0 IF NONE
DELEN1   DS    H                        LENGTH OF DECIMAL NUMBER(1-8)
DEOFF1   DS    H                        OFFSET OF INSERTION
DEFIELD1 DS    D                        UNPACKED DECIMAL LINE NUMBER
         SPACE 2
DEDSNAME DS    0F                  DATA SET NAME INSERTION LIST
DEPTR2   DS    F                        PTR TO NEXT INSERTION-0 IF NONE
DELEN2   DS    H                        LENGTH OF USER-ENTERED DSNAME
DEOFF2   DS    H                        OFFSET OF INSERTION
DEFIELD2 DS    44X                      DATA SET NAME(1-44 CHARACTERS)
         SPACE 2
DESYNBFR DS    0F                  SYNTAX CHECKER COMMAND INTERFACE BFR
DECOUNT  DS    F                        COUNT OF LINES/WK AREA SYN CHK
DEVALUE1 DS    F                        STARTING LINE(BINARY)
DEVALUE2 DS    F                        ENDING LINE(BINARY)
*                                  SYNTAX CHECKER ENTRY CODES
DENORM1  EQU   X'80'                    ENTRY CODE FOR NORMAL ENTRY
DENORM2  EQU   X'8F'                    PRESERVES BITS 4-7
*                                  SYNTAX CHECKER OPTION CODES
DEDEL1   EQU   X'40'                    OPTION CODE FOR DELETE
DEDEL2   EQU   X'67'                    PRESERVES BITS 5-7
         SPACE 2
DEPARM   DS    10F                 REMOTE PROGRAM PARAMETER LIST
         EJECT
         SPACE 2
DEUTPARM DS    0F                  IKJEBEUT PARAMETER LIST
DELASTWD EQU   X'80'                    (HIGH ORDER BIT=1-END PARMLIST)
DEPTCDCB DS    A                        PTR TO CURRENT DCB
         ORG   DEPTCDCB                 ORGANIZATION -
DEUTOPCD DS    X                             BYTE 0 - OPTION CODE
DEOPCORC EQU   X'00'                              READ CURRENT LINE
DEOPCORP EQU   X'01'                              READ PREVIOUS LINE
DEOPCORN EQU   X'02'                              READ NEXT LINE
DEOPCORF EQU   X'04'                              READ FIRST LINE
DEOPCODC EQU   X'10'                              DELETE CURRENT LINE
         DS    AL3                           BYTES 1-3 - 3-BYTE POINTER
         ORG   DEPTCDCB+L'DEPTCDCB END OF DCB PTR ORGANIZATION.
DECURLIN DS    F                        REPLACEMENT FOR CURRENT LINE
DEREADBF DS    F                        READ BUFFER FOR IKJEBEUT
DESVAREA DS    A                   ADDRESS OF SAVE AREA FOR VALIDITY   X
                                   CHECK ROUTINE
         SPACE 2
DEANSWER DS    F                   ADDRESS OF PARSE PDL
         SPACE 2
DEFLAGS  DS    X                   IKJEBEDE CONTROL FLAGS
DEONEAST EQU   X'C0'                     1 - FIRST OPERAND,ASTERISK
DEOPND1  EQU   X'80'                     1 - FIRST OPERAND PROCESSED
DE2OPS   EQU   X'80'                     0 - SECOND OPERAND PROCESSED
DEASTER  EQU   X'40'                     1 - ASTERISK SPECIFIED
DEBADRNG EQU   X'20'                     1 - INVALID LINE RANGE
DESCTERM EQU   X'10'                     1 - RETURN CODE TO IKJEBEMA
*                                            IS 08.
*                                        0 - RETURN CODE TO IKJEBEMA
*                                            IS 00 (NORMAL).
DEZEROES EQU   X'00'                         INITIALIZATION VALUE
         ORG
         EJECT
***********************************************************************
*
* THE FOLLOWING SECTION CONTAINS EQU'S FOR SYMBOLIC ADDRESSING
*
***********************************************************************
         SPACE 2
ABNRMRC@ EQU   ABNORMRC-4
DEPACK@  EQU   DEPACK+3
DETEMPBF EQU   CATEMPBF+12              READ BUFFER ADDRESS
NOCORE@  EQU   NOCORE-16
READPRV@ EQU   READPREV-4
SIGBYTE1 EQU   DEFIELD1+1
         END
