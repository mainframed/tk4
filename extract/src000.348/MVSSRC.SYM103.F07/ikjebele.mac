         TITLE 'IKJEBELE - LINE EDIT SERVICE RTN - TSO EDIT COMMAND    *
                        '
IKJEBELE CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEBELE  76.027'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
*                                                                  0018
*           COMMREG = PARMREG0;      /* GET ADDR OF IKJEBECA         */
*                                                                  0018
         LR    COMMREG,PARMREG0                                    0018
*           RESPECIFY (GPR13P,GPR15P) RSTD;                        0019
*           GPR15P = CANXTSVA;       /* SAVE AREA FOR THIS MODULE    */
         L     GPR15P,CANXTSVA(,COMMREG)                           0020
*           EVAL(GPR15P + 4) -> CASAVPTR = GPR13P;   /* SET THIS     */
         LA    @14,4                                               0021
         ALR   @14,GPR15P                                          0021
         ST    GPR13P,CASAVPTR(,@14)                               0021
*                                    /* SAVEAREA BKWD PTR            */
*           EVAL(GPR13P + 8) -> CASAVPTR = GPR15P;   /* SET CALLER   */
         LA    @14,8                                               0022
         ALR   @14,GPR13P                                          0022
         ST    GPR15P,CASAVPTR(,@14)                               0022
*                                    /* FWD PTR                      */
*           GPR13P = GPR15P;         /* NEW SAVEAREA ADDR            */
         LR    GPR13P,GPR15P                                       0023
*           CANXTSVA = GPR13P + 72;   /* UPDATE NEX-SAVE-AREA PTR    */
         LA    @14,72                                              0024
         ALR   @14,GPR13P                                          0024
         ST    @14,CANXTSVA(,COMMREG)                              0024
*           RESPECIFY (GPR13P,GPR15P) UNRSTD;                      0025
*                                                                  0025
*           DATAREG = ADDR(CASRWKA);   /* SET BASE REG FOR WORK AREA */
         LA    DATAREG,CASRWKA(,COMMREG)                           0026
*           GEN( USING @DATD,DATAREG);   /* SET ADDRESSABILITY TO    */
          USING @DATD,DATAREG
*                                    /* CASCWKA                      */
*     /*       THESE REGISTERS REMAIN RESTRICTED                      *
*        RESPECIFY (DATAREG,COMMREG) RSTD;                         0028
*        RETCODE = 0;                  /* INIT RETURN CODE TO 0       *
         SLR   RETCODE,RETCODE                                     0029
*        RETCODX = 0;                  /* INIT OVERFLOW RET CODE TO 0 *
         SLR   @12,@12                                             0030
         ST    @12,RETCODX                                         0030
*        GETOF = 0;                    /* INIT GETMAIN PTR TO ZERO    *
*                                                                  0031
         ST    @12,GETOF                                           0031
*        /* CHECK IF NULL LINE PASSED                                 *
*        IF TEXTLEN <= 4                                           0032
*          THEN                        /* IF YES, GENERATE BLANK LINE *
         SLR   @12,@12                                             0032
         ICM   @12,7,TEXTPTR(PARMREG1)                             0032
         LH    @06,TEXTLEN(,@12)                                   0032
         CH    @06,@CH00398                                        0032
         BH    @RF00032                                            0032
*            DO;                       /* GEN BLANK LINE              *
*              TEXTLEN = 5;            /* SET LENGTH TO MINIMUM       *
         MVC   TEXTLEN(2,@12),@CH00127                             0034
*              TEXTBFR (1) = ' ';      /* INSERT BLANK IN LINE        *
         MVI   TEXTBFR(@12),C' '                                   0035
*            END;                                                  0036
*                                                                  0036
*        /* CHECK IF INPUT TEXT IS NOT A DELIMITED STRING             *
*        IF ENTRYCD ^= '80'X                                       0037
*          THEN                        /* IF YES,STRIP TRAILING BLANKS*
@RF00032 CLI   ENTRYCD(PARMREG1),X'80'                             0037
         BE    @RF00037                                            0037
*            DO;                       /* STRIP BLANKS                *
*                                                                  0038
*              /* LOOP BACKWARDS TO FIND LAST BLANK                   *
*              DO A = TEXTLEN - 4 TO 1 BY - 1;                     0039
         ICM   @12,7,TEXTPTR(PARMREG1)                             0039
         LH    @12,TEXTLEN(,@12)                                   0039
         SH    @12,@CH00398                                        0039
         STH   @12,A                                               0039
         B     @DE00039                                            0039
@DL00039 DS    0H                                                  0040
*                CURPTR = A;           /* PTR TO LAST BYTE OF TEXT    *
*                                                                  0040
         LR    CURPTR,@12                                          0040
*                /* CHECK IF LAST NON-BLANK IN TEXT FOUND             *
*                IF TEXTBFR (CURPTR) ^= ' '                        0041
*                  THEN                /* IF YES, RESET BUFFER LENGTH *
         SLR   @12,@12                                             0041
         ICM   @12,7,TEXTPTR(PARMREG1)                             0041
         LR    @06,@12                                             0041
         ALR   @06,CURPTR                                          0041
         CLI   TEXTBFR-1(@06),C' '                                 0041
         BE    @RF00041                                            0041
*                    DO;               /* RESET BFR LENGTH            *
*                      TEXTLEN = CURPTR + 4;    /* SET NEW LENGTH     *
         LA    @06,4                                               0043
         ALR   @06,CURPTR                                          0043
         STH   @06,TEXTLEN(,@12)                                   0043
*                      GO TO OUT;      /* BRANCH OUT OF LOOP          *
         B     OUT                                                 0044
*                    END;                                          0045
*              END;                    /* END OF SEARCH LOOP          *
@RF00041 SLR   @12,@12                                             0046
         BCTR  @12,0                                               0046
         AH    @12,A                                               0046
         STH   @12,A                                               0046
@DE00039 LTR   @12,@12                                             0046
         BP    @DL00039                                            0046
*              TEXTLEN = CURPTR + 4;   /* SET NEW LENGTH     @ZA08706*/
         ICM   @12,7,TEXTPTR(PARMREG1)                             0047
         LA    @06,4                                               0047
         ALR   @06,CURPTR                                          0047
         STH   @06,TEXTLEN(,@12)                                   0047
*            END;                                                  0048
*                                                                  0048
*OUT:                                  /* EXIT FROM LOOP              *
*        /* CHECK IF INPUT LINE EXCEEDS MAX MOVE LENGTH         A42945*
*        IF TEXTLEN > 260              /*                       A42945*
*          THEN                        /* IF YES, REDUCE LENGTH A42945*
@RF00037 DS    0H                                                  0049
OUT      ICM   @12,7,TEXTPTR(PARMREG1)                             0049
         LH    @12,TEXTLEN(,@12)                                   0049
         CH    @12,@CH00286                                        0049
         BNH   @RF00049                                            0049
*            DO;                       /* BEGIN REDUCING LENGTH A42945*
         ST    @12,@TF00001                                        0050
*              LNGTHREG = TEXTLEN - 260 + 4;    /* LEN OF OFLOW A42945*
         LH    LNGTHREG,@CH00450                                   0051
         AL    LNGTHREG,@TF00001                                   0051
*              SREG0 = PARMREG0;       /* SAVE REG ZERO         A42945*
         LR    SREG0,PARMREG0                                      0052
*              SREG1 = PARMREG1;       /* SAVE REG ONE          A42945*
         LR    SREG1,PARMREG1                                      0053
*    GENERATE REFS(LNGTHREG,GETOF);/* GET CORE FOR OVERFLOW  @ZM30978*/
         GETMAIN EC,LV=(LNGTHREG),A=GETOF,SP=1,MF=(E,GETAREA)    A42945
*              RESPECIFY (RETCDREG) RSTD;                          0055
*              PARMREG0 = SREG0;       /* RESTORE REG ZERO      A42945*
         LR    PARMREG0,SREG0                                      0056
*              PARMREG1 = SREG1;       /* RESTORE REG ONE       A42945*
         LR    PARMREG1,SREG1                                      0057
*                                      /*                       A42945*
*              /* IF GETMAIN FAILED                             A42945*
*              IF RETCDREG ^= 0        /*                       A42945*
*                THEN                  /* THEN                  A42945*
         SLR   @14,@14                                             0058
         CR    RETCDREG,@14                                        0058
         BE    @RF00058                                            0058
*                  DO;                 /* SET                   A42945*
*                    RESPECIFY (RETCDREG) UNRSTD;                  0060
*                    RETCODX = 8;      /* RET. CODE FOR NO CORE A42945*
         MVC   RETCODX(4),@CF00055                                 0061
*                    GETOF = 0;        /* ZERO GOTTEN CORE PTR  A42945*
         ST    @14,GETOF                                           0062
*                    GO TO NOCORS;     /* BYPASS LENGTH SETTING A42945*
         B     NOCORS                                              0063
*                  END;                /*                       A42945*
*              GETLEN = TEXTLEN - 260 + 4;    /* UPDTE OVERFLOW A42945*
@RF00058 L     @12,GETOF                                           0065
         SLR   @08,@08                                             0065
         ICM   @08,7,TEXTPTR(PARMREG1)                             0065
         LH    @06,@CH00450                                        0065
         AH    @06,TEXTLEN(,@08)                                   0065
         STH   @06,GETLEN(,@12)                                    0065
*              GETOFFS = 0;            /* ZERO THE OFFSET       A42945*
         SLR   @15,@15                                             0066
         STH   @15,GETOFFS(,@12)                                   0066
*              GETTXT (1:GETLEN - 4) =      /*                  A42945*
*                INPUTBFR (260 + 1:TEXTLEN);   /* MOVE TEXT     A42945*
         SH    @06,@CH00127                                        0067
         EX    @06,@SM00452                                        0067
*NOCORS:       RETCODE = 4;            /* SET RETCDE FOR OVERFL A42945*
NOCORS   LA    RETCODE,4                                           0068
*              TEXTLEN = 260;          /* RESET MAX MOVE LENGTH A42945*
         ICM   @12,7,TEXTPTR(PARMREG1)                             0069
         MVC   TEXTLEN(2,@12),@CH00286                             0069
*            END;                      /*                       A42945*
*                                      /*                       A42945*
*        /* CHECK IF 'CAPS' SPECIFIED ON EDIT COMMAND           A42945*
*        IF CACAPS = '1'B              /*                       A42945*
*          THEN                        /* IF YES, CONVERT TEXT  A42945
*                                         TO UPPER CASE CHARS   A42945*
@RF00049 TM    CACAPS(COMMREG),B'00000010'                         0071
         BNO   @RF00071                                            0071
*            DO;                       /* CONVERT TO UPPER CASE A42945*
*              LNGTHREG = TEXTLEN - 5;   /* LENGTH OF TRANSLATE A42945*
         SLR   @12,@12                                             0073
         ICM   @12,7,TEXTPTR(PARMREG1)                             0073
         LH    LNGTHREG,TEXTLEN(,@12)                              0073
         SH    LNGTHREG,@CH00127                                   0073
*              TXTPTREG = ADDR (TEXTBFR);/* EXECUTE TRANSLATION F42945*
         LA    TXTPTREG,TEXTBFR(,@12)                              0074
*              GEN (EX    LNGTHREG,TRNSLATE)  /* TRANSLATE      A42945*
*                REFS(LNGTHREG);       /*                       A42945*
         EX    LNGTHREG,TRNSLATE
*              /* CHECK IF ADDITIONAL TEXT TO TRANSLATE         A42945*
*              IF RETCODE = 4          /*                       A42945*
*                THEN                  /* IF YES, PREPARE TRANS A42945*
         CH    RETCODE,@CH00398                                    0076
         BNE   @RF00076                                            0076
*                  DO;                 /* CONVERT TO UPPER CASE A42945*
*                    LNGTHREG = GETLEN - 5;   /* LEN OF TRANS   A42945*
         L     @12,GETOF                                           0078
         LH    LNGTHREG,GETLEN(,@12)                               0078
         SH    LNGTHREG,@CH00127                                   0078
*                    TXTPTREG = ADDR(GETTXT); /* PTR TO TEXT    A42945*
         LA    TXTPTREG,GETTXT(,@12)                               0079
*                    GEN (EX    LNGTHREG,TRNSLATE)  /* EXEC TR  A42945*
*                      REFS(LNGTHREG);                             0080
         EX    LNGTHREG,TRNSLATE
*                  END;                /*                       A42945*
*            END;                      /*                       A42945*
@RF00076 DS    0H                                                  0083
*        LENGTH = TEXTLEN;             /* PICK UP BUFFER LENGTH A42945*
@RF00071 SLR   @12,@12                                             0083
         ICM   @12,7,TEXTPTR(PARMREG1)                             0083
         LH    LENGTH,TEXTLEN(,@12)                                0083
*                                      /*                       A42945*
*        /* CHECK IF LINE TO BE ADJUSTED FOR SEQ FIELD          A42945*
*        IF CANONUM = '0'B & CALINTAB = '1'B & ENTRYCD ^= '80'X    0084
*          THEN                        /* IF YES, SLIDE LINE OVER     *
         TM    CANONUM(COMMREG),B'00000001'                        0084
         BNZ   @RF00084                                            0084
         TM    CALINTAB(COMMREG),B'10000000'                       0084
         BNO   @RF00084                                            0084
         CLI   ENTRYCD(PARMREG1),X'80'                             0084
         BE    @RF00084                                            0084
*            DO;                       /* SLIDE LINE OVER             *
*                                                                  0085
*              /* MOVE INTO TM                                        *
*              TEMPBFR (1:LENGTH - 4) = TEXTBFR;                   0086
         LR    @06,LENGTH                                          0086
         SH    @06,@CH00127                                        0086
         EX    @06,@SM00454                                        0086
*              TEXTBFR = '';           /* BLANK OUT LINE              *
*                                                                  0087
         MVI   TEXTBFR(@12),C' '                                   0087
         MVC   TEXTBFR+1(255,@12),TEXTBFR(@12)                     0087
*              /* MOVE LINE BACK OFFSET BY LENGTH OF SEQUENCE FIELD   *
*              /* MOVE LINE                                           *
*              TEXTBFR (CALINE + CALENGTH:LENGTH + CALENGTH - 4) = 0088
*                  TEMPBFR(1:LENGTH-CALINE-3);                     0088
         SLR   @06,@06                                             0088
         IC    @06,CALENGTH(,COMMREG)                              0088
         SLR   @02,@02                                             0088
         IC    @02,CALINE(,COMMREG)                                0088
         ALR   @02,@06                                             0088
         ALR   @12,@02                                             0088
         LR    @15,LENGTH                                          0088
         ALR   @15,@06                                             0088
         SLR   @15,@02                                             0088
         SH    @15,@CH00398                                        0088
         EX    @15,@SM00456                                        0088
*              LENGTH = LENGTH + CALENGTH; /* ADJUST  LL FIELD        *
         ALR   LENGTH,@06                                          0089
*            END;                                                  0090
*                                                                  0090
*        /* CHECK IF TABULATION SPECIFIED                             *
*        IF CATABS (1) = 'FF'X                                     0091
*          THEN                        /* IF YES, CHECK TEXT TYPE CODE*
@RF00084 CLI   CATABS(COMMREG),X'FF'                               0091
         BNE   @RF00091                                            0091
*            DO;                       /* CHECK CODE                  *
*                                                                  0092
*              /* CHECK IF DELIMITTED STRING                          *
*              IF ENTRYCD = '80'X                                  0093
*                THEN                  /* IF YES, IGNORE TAB SWITCH   *
         CLI   ENTRYCD(PARMREG1),X'80'                             0093
         BE    @RT00093                                            0093
*                  GO TO NOTABS;       /* AND BR TO TURN OFF SW       *
*              TABSW = 'FF'X;          /* SET PGM TAB SWITCH ON       *
         MVI   TABSW,X'FF'                                         0095
*              GO TO TABSCAN;          /* BRANCH TO BEGIN TEXT SCAN   *
         B     TABSCAN                                             0096
*            END;                      /* END OF DELIM STRING GRP     *
*NOTABS:                               /* NO TABS SET                 *
*        TABSW = '00'X;                /* RTN FOR NO TABS SET SET PGM
*                                         TAB SWITCH OFF              *
*                                                                  0098
@RF00091 DS    0H                                                  0098
NOTABS   MVI   TABSW,X'00'                                         0098
*TABSCAN:                              /* SCAN TABS IF TO BE          *
*                                                                  0099
*        /* BLANKED OUT ONLY                                          *
*        IF TABSW = '00'X                                          0099
*          THEN                        /* IF YES, SCAN FOR TABS       *
TABSCAN  CLI   TABSW,X'00'                                         0099
         BNE   @RF00099                                            0099
*            DO;                       /* SCAN FOR TABS               *
*                                                                  0100
*              /* SEARCH FOR TAB CHARACTERS                           *
*              DO A = 1 TO LENGTH - 4;                             0101
         LA    @12,1                                               0101
         B     @DE00101                                            0101
@DL00101 DS    0H                                                  0102
*                CURTAB = A;           /* PTR TO SEARCH BYTE          *
*                                                                  0102
         STH   @12,CURTAB                                          0102
*                /* CHECK IF TABULATION CHARACTER                     *
*                IF TEXTBFR (CURTAB) = '05'X                       0103
*                  THEN                /* IF YES, BLANK OUT TAB       *
         SLR   @06,@06                                             0103
         ICM   @06,7,TEXTPTR(PARMREG1)                             0103
         ALR   @12,@06                                             0103
         CLI   TEXTBFR-1(@12),X'05'                                0103
         BNE   @RF00103                                            0103
*                    TEXTBFR (CURTAB) = ' ';   /* BLANK OUT TAB       *
         LH    @12,CURTAB                                          0104
         ALR   @06,@12                                             0104
         MVI   TEXTBFR-1(@06),C' '                                 0104
*              END;                    /* END OF SEARCH LOOP          *
*                                                                  0105
@RF00103 LA    @12,1                                               0105
         AH    @12,A                                               0105
@DE00101 STH   @12,A                                               0105
         LR    @06,LENGTH                                          0105
         SH    @06,@CH00398                                        0105
         CR    @12,@06                                             0105
         BNH   @DL00101                                            0105
*              /* CHECK IF DELIMITED STRING                           *
*              IF ENTRYCD = '80'X                                  0106
*                THEN                  /* IF YES, EXIT                *
         CLI   ENTRYCD(PARMREG1),X'80'                             0106
         BE    @RT00106                                            0106
*                  GO TO ENDSCAN;      /* EXIT FROM SCAN RTN          *
*                ELSE                  /* IF NO, FORMAT DATA AS RECORD*
*                  DO;                 /* FMT DATA                    *
*                    TABINDEX = 2;     /* SET INDEX                   *
         MVI   TABINDEX,X'02'                                      0109
*                    GO TO TABEXIT;    /* EXIT RTN                    *
         B     TABEXIT                                             0110
*                  END;                                            0111
*            END;                                                  0112
*        CURPTR = 1;                   /* SCAN TEXT TO SHIFT          *
@RF00099 LA    @12,1                                               0113
         LR    CURPTR,@12                                          0113
*        TABINDEX = 2;                 /* SET A TAB INDEX             *
         MVI   TABINDEX,X'02'                                      0114
*        LASTTAB = 0;                  /* INIT TO ZERO                *
*                                                                  0115
         SLR   @06,@06                                             0115
         STH   @06,LASTTAB                                         0115
*        /* SCAN WHOLE BUFFER                                         *
*        DO A = 1 TO LENGTH - 4;                                   0116
         B     @DE00116                                            0116
@DL00116 DS    0H                                                  0117
*          CURTAB = A;                 /* PTR TO SEARCH BYTE          *
*                                                                  0117
         STH   @12,CURTAB                                          0117
*          /* CHECK IF TABULATION CHARACTER FOUND                     *
*          IF TEXTBFR (CURTAB) = '05'X                             0118
*            THEN                      /* IF YES, PROCESS TAB         *
         ICM   @06,7,TEXTPTR(PARMREG1)                             0118
         ALR   @06,@12                                             0118
         CLI   TEXTBFR-1(@06),X'05'                                0118
         BNE   @RF00118                                            0118
*              DO;                     /* PROCESS TAB                 *
*                                                                  0119
*                /* CHECK IF END OF TABULATION TABLE REACHED          *
*                IF CATABS (TABINDEX) = '00'X                      0120
*                  THEN                /* IF YES, BLANK OUT TAB CHAR  *
         SLR   @12,@12                                             0120
         IC    @12,TABINDEX                                        0120
         ALR   @12,COMMREG                                         0120
         CLI   CATABS-1(@12),X'00'                                 0120
         BNE   @RF00120                                            0120
*                    DO;               /* BLANK TAB                   *
*                      CALL BLANKTAB;  /* BLANK OUT REST OF TABS      *
         BAL   @14,BLANKTAB                                        0122
*                      GO TO TABEXIT;  /* TEXT SCAN COMPLETED         *
         B     TABEXIT                                             0123
*                    END;                                          0124
*                                                                  0124
*                /* CHECK IF THIS IS FIRST TAB FOUND                  *
*                IF LASTTAB = 0                                    0125
*                  THEN                /* IF YES, FIRST TAB FOUND     *
@RF00120 ICM   @12,3,LASTTAB                                       0125
         BNZ   @RF00125                                            0125
*                    DO;               /* CHECK TAB                   *
*                                                                  0126
*                      /* CHECK IF TABULATION CHARACTER IS FIRST IN   *
*                      /* LINE                                        *
*                      IF CURTAB > 1                               0127
*                        THEN          /* IF NO, MOVE DATA UPTO TAB   *
*                                                                  0127
         LH    @12,CURTAB                                          0127
         CH    @12,@CH00057                                        0127
         BNH   @RF00127                                            0127
*                          /* MOVE DATA INTO TEMP BFR                 *
*                          TEMPBFR (1:CURTAB - 1) = TEXTBFR;       0128
         BCTR  @12,0                                               0128
         BCTR  @12,0                                               0128
         ICM   @02,7,TEXTPTR(PARMREG1)                             0128
         EX    @12,@SM00458                                        0128
*                      LASTTAB = CURTAB; /* SET LAST TAB TO CURRENT   *
@RF00127 LH    @12,CURTAB                                          0129
         STH   @12,LASTTAB                                         0129
*                      CURPTR = CURTAB;/* SET PTR TO CURRENT          *
         LR    CURPTR,@12                                          0130
*                      GO TO CONTSCAN; /* BR TO CONTINUE SCAN         *
         B     CONTSCAN                                            0131
*                    END;                                          0132
*                CALL TABRTN;          /* FIND TAB OFFSET & MOVE DATA *
@RF00125 BAL   @14,TABRTN                                          0133
*              END;                                                0134
*CONTSCAN:                             /* CONTINUE SCAN               *
*        END;                          /* CONTINUE SCAN END OF SCAN
*                                         ROUTINE                     *
*                                                                  0135
@RF00118 DS    0H                                                  0135
CONTSCAN LA    @12,1                                               0135
         AH    @12,A                                               0135
@DE00116 STH   @12,A                                               0135
         LR    @06,LENGTH                                          0135
         SH    @06,@CH00398                                        0135
         CR    @12,@06                                             0135
         BNH   @DL00116                                            0135
*        /* CHECK IF ONE MORE TABULATION CHARACTER TO PROCESS         *
*        IF LASTTAB ^= 0                                           0136
*          THEN                        /* IF YES, PROCESS TAB         *
         ICM   @12,3,LASTTAB                                       0136
         BZ    @RF00136                                            0136
*            DO;                       /* PROCESS TAB                 *
*              CALL TABRTN;            /* ROUTINE TO PROCESS TAB      *
         BAL   @14,TABRTN                                          0138
*            END;                                                  0139
*TABEXIT:                              /* TAB EXIT                    *
*        CURPTR = CURPTR + 1;          /* EXIT FROM TAB ROUTINES   0140
*                                         UPDATE POINTER              *
*                                                                  0140
@RF00136 DS    0H                                                  0140
TABEXIT  AH    CURPTR,@CH00057                                     0140
*        /* CHECK IF ANY TABULATION CHARACTERS FOUND                  *
*        IF TABINDEX = 2                                           0141
*          THEN                        /* IF NO, MOVE TEXT INTO TEMP. *
         CLI   TABINDEX,2                                          0141
         BNE   @RF00141                                            0141
*            DO;                       /* MOVE TEXT                   *
*                                                                  0142
*              /* MOVE INTO TM                                        *
*              TEMPBFR (1:LENGTH - 4) = TEXTBFR;                   0143
         LR    @12,LENGTH                                          0143
         SH    @12,@CH00127                                        0143
         ICM   @06,7,TEXTPTR(PARMREG1)                             0143
         EX    @12,@SM00460                                        0143
*              CURPTR = LENGTH - 3;    /* SET CURRENT PTR             *
         LR    CURPTR,LENGTH                                       0144
         SH    CURPTR,@CH00098                                     0144
*            END;                                                  0145
*                                                                  0145
*        /* CHECK IF VARIABLE LINE NUMBERED RECORD FORMAT             *
*        IF CARECFM='0'B & CANONUM='0'B & CALINTAB='0'B     /*@YM04732*
*          THEN                        /* IF YES, MOVE BACK LEAVING
*                                         ROOM FOR SEQUENCE FIELD     *
@RF00141 TM    CARECFM(COMMREG),B'01000000'                        0146
         BNZ   @RF00146                                            0146
         TM    CANONUM(COMMREG),B'00000001'                        0146
         BNZ   @RF00146                                            0146
         TM    CALINTAB(COMMREG),B'10000000'                       0146
         BNZ   @RF00146                                            0146
*            DO;                       /* MOVE NUMBER SPACE           *
*                                                                  0147
*              /* CHECK IF VARIABLE LENGTH LINE OVERFLOW              *
*              IF CURPTR > CALRECL - CALENGTH - 3                  0148
*                THEN                  /* IF YES, LINE OVERFLOW       *
         LH    @12,CALRECL(,COMMREG)                               0148
         SLR   @06,@06                                             0148
         IC    @06,CALENGTH(,COMMREG)                              0148
         LR    @15,@12                                             0148
         SLR   @15,@06                                             0148
         LR    @14,@15                                             0148
         SH    @14,@CH00098                                        0148
         CR    CURPTR,@14                                          0148
         BNH   @RF00148                                            0148
*                  DO;                 /* SET RC                      *
*                    RETCODE = 4;        /* SET RC=4                  *
         LA    RETCODE,4                                           0150
*                    TEXTBFR = '';     /* BLANK OUT BUFFER            *
*                                                                  0151
         SLR   @03,@03                                             0151
         ICM   @03,7,TEXTPTR(PARMREG1)                             0151
         MVI   TEXTBFR(@03),C' '                                   0151
         MVC   TEXTBFR+1(255,@03),TEXTBFR(@03)                     0151
*                    /* MOVE TEXT FROM TEMP                           *
*                    TEXTBFR (CALENGTH + 1:CALRECL - 4) =          0152
*                        TEMPBFR(1:CALRECL-CALENGTH-4);            0152
         ALR   @06,@03                                             0152
         LR    @14,@15                                             0152
         SH    @14,@CH00127                                        0152
         EX    @14,@SM00462                                        0152
*                    /* RESET LENGTH                                  *
*                    TEMPLEN = CURPTR - CALRECL + CALENGTH + 6;    0153
         LR    TEMPLEN,CURPTR                                      0153
         SLR   TEMPLEN,@12                                         0153
         SLR   @06,@06                                             0153
         IC    @06,CALENGTH(,COMMREG)                              0153
         ALR   TEMPLEN,@06                                         0153
         AH    TEMPLEN,@CH00423                                    0153
*                    NEWLEN = TEMPLEN; /* LENGTH OF OVERFLOW LINE     *
         STH   TEMPLEN,NEWLEN(,COMMREG)                            0154
*                    NEWOFF = 0;       /* SET OFFSET TO ZERO          *
*                                                                  0155
         SLR   @14,@14                                             0155
         STH   @14,NEWOFF(,COMMREG)                                0155
*                    /* COMPLETE TEMP BUFFER                          *
*                    MVC(TEMPBFR (5:TEMPLEN),                      0156
*                        TEMPBFR (CALRECL - CALENGTH - 3:          0156
*                                CALRECL-CALENGTH+TEMPLEN-8));     0156
         LR    @14,TEMPLEN                                         0156
         SH    @14,@CH00127                                        0156
         ALR   @15,COMMREG                                         0156
         EX    @14,@SM00464                                        0156
*                    TEXTLEN = CALRECL;/* LENGTH SET TO LRECL         *
         STH   @12,TEXTLEN(,@03)                                   0157
*                    TEXTPTR = ADDR (TEMPBFR); /* PTR TO TEMP BUFFER  *
         LA    @12,TEMPBFR(,COMMREG)                               0158
         STCM  @12,7,TEXTPTR(PARMREG1)                             0158
*                  END;                                            0159
*                ELSE                  /* IF NO, NO LINE OVERFLOW     *
*                  DO;                 /* BLANK BFR                   *
         B     @RC00148                                            0160
@RF00148 DS    0H                                                  0161
*                    TEXTBFR = '';     /* BLANK OUT BUFFER            *
         SLR   @12,@12                                             0161
         ICM   @12,7,TEXTPTR(PARMREG1)                             0161
         MVI   TEXTBFR(@12),C' '                                   0161
         MVC   TEXTBFR+1(255,@12),TEXTBFR(@12)                     0161
*                    TEMPLEN = CURPTR - 1;   /* SET TEMP LENGTH       *
*                                                                  0162
         LR    TEMPLEN,CURPTR                                      0162
         BCTR  TEMPLEN,0                                           0162
*                    /* COMPLETE TEXT BUFFER                          *
*                    TEXTBFR (CALENGTH + 1:CALENGTH + TEMPLEN) =   0163
*                        TEMPBFR(1:TEMPLEN);                       0163
*                                                                  0163
         SLR   @06,@06                                             0163
         IC    @06,CALENGTH(,COMMREG)                              0163
         ALR   @06,@12                                             0163
         LR    @03,TEMPLEN                                         0163
         BCTR  @03,0                                               0163
         EX    @03,@SM00462                                        0163
*                    /* SET LENGTH                                    *
*                    TEXTLEN = CURPTR + CALENGTH + 3;              0164
         SLR   @06,@06                                             0164
         IC    @06,CALENGTH(,COMMREG)                              0164
         ALR   @06,CURPTR                                          0164
         AH    @06,@CH00098                                        0164
         STH   @06,TEXTLEN(,@12)                                   0164
*                  END;                                            0165
*              GO TO ENDSCAN;          /* EXIT TO END OF SCAN RTN     *
         B     ENDSCAN                                             0166
*            END;                                                  0167
*                                                                  0167
*        /* CHECK IF SEQUENCE FIELD ALREADY ACCOUNTED FOR             *
*        IF CANONUM = '0'B & CALINTAB = '1'B                       0168
*          THEN                        /* IF YES, TREAT AS NOT LNUMBD *
@RF00146 TM    CANONUM(COMMREG),B'00000001'                        0168
         BNZ   @RF00168                                            0168
         TM    CALINTAB(COMMREG),B'10000000'                       0168
         BO    @RT00168                                            0168
*            GO TO NOLNUM;             /* BR TO NONUM RTN             *
*                                                                  0169
*        /* CHECK IF FIXED LINE NUMBERED RECORD FORMAT                *
*        IF CARECFM = '1'B & CANONUM = '0'B                        0170
*          THEN                        /* IF YES, PROCESS FOR SEQUENCE
*                                         FIELDS                      *
@RF00168 TM    CARECFM(COMMREG),B'01000000'                        0170
         BNO   @RF00170                                            0170
         TM    CANONUM(COMMREG),B'00000001'                        0170
         BNZ   @RF00170                                            0170
*            DO;                       /* CHECK FOR OVERFLOW          *
*                                                                  0171
*              /* CHECK IF FIXED LENGTH LINE OVERFLOW                 *
*              IF CURPTR > CALINE                                  0172
*                THEN                  /* IF YES, LINE OVERFLOW       *
         SLR   @12,@12                                             0172
         IC    @12,CALINE(,COMMREG)                                0172
         CR    CURPTR,@12                                          0172
         BNH   @RF00172                                            0172
*                  DO;                 /* SET RC                      *
*                    RETCODE = 4;        /* SET RC=4                  *
         LA    @06,4                                               0174
         LR    RETCODE,@06                                         0174
*                    TEXTBFR = '';     /* BLANK OUT BUFFER            *
         SLR   @03,@03                                             0175
         ICM   @03,7,TEXTPTR(PARMREG1)                             0175
         MVI   TEXTBFR(@03),C' '                                   0175
         MVC   TEXTBFR+1(255,@03),TEXTBFR(@03)                     0175
*                    /* RESET TEXT BUFFER                             *
*                    TEXTBFR (1:CALINE - 1) = TEMPBFR(1:CALINE-1); 0176
         LR    @15,@12                                             0176
         BCTR  @15,0                                               0176
         BCTR  @15,0                                               0176
         EX    @15,@SM00466                                        0176
*                    TEXTLEN = CALRECL;/* SET LENGTH TO LRECL         *
         MVC   TEXTLEN(2,@03),CALRECL(COMMREG)                     0177
*                    TEMPLEN = CURPTR - CALINE; /* SET TEMP LENGTH    *
         LR    TEMPLEN,CURPTR                                      0178
         SLR   TEMPLEN,@12                                         0178
*                    NEWLEN = TEMPLEN + 4;    /* LN OF OVERFLOW       *
         ALR   @06,TEMPLEN                                         0179
         STH   @06,NEWLEN(,COMMREG)                                0179
*                    NEWOFF = 0;       /* SET OFFSET TO ZERO          *
*                                                                  0180
         SLR   @03,@03                                             0180
         STH   @03,NEWOFF(,COMMREG)                                0180
*                    /* MOVE TEXT IN TEMP BFR                         *
*                    MVC(TEMPBFR (5:TEMPLEN + 4),TEMPBFR (CALINE:  0181
*                                                 CALINE+TEMPLEN-1));
         LR    @03,TEMPLEN                                         0181
         BCTR  @03,0                                               0181
         ALR   @12,COMMREG                                         0181
         EX    @03,@SM00468                                        0181
*                    TEXTPTR = ADDR (TEMPBFR); /* POINT TO TEMP BFR   *
         LA    @12,TEMPBFR(,COMMREG)                               0182
         STCM  @12,7,TEXTPTR(PARMREG1)                             0182
*                  END;                                            0183
*                ELSE                  /* IF NO, NO LINE OVERFLOW     *
*                  DO;                 /* RESET                       *
*                                                                  0184
         B     @RC00172                                            0184
@RF00172 DS    0H                                                  0185
*                    /* RESET TEXT BUFFER                             *
*                    TEXTBFR = TEMPBFR (1:CURPTR - 1);             0185
         SLR   @12,@12                                             0185
         ICM   @12,7,TEXTPTR(PARMREG1)                             0185
         MVI   TEXTBFR+1(@12),C' '                                 0185
         MVC   TEXTBFR+2(254,@12),TEXTBFR+1(@12)                   0185
         LR    @06,CURPTR                                          0185
         BCTR  @06,0                                               0185
         BCTR  @06,0                                               0185
         EX    @06,@SM00470                                        0185
*                    TEXTLEN = CALRECL; /* SET LENGTH TO LRECL        *
         MVC   TEXTLEN(2,@12),CALRECL(COMMREG)                     0186
*                  END;                                            0187
*              GO TO ENDSCAN;          /* BRANCH TO END OF SCAN RTN   *
         B     ENDSCAN                                             0188
*            END;                                                  0189
*                                                                  0189
*NOLNUM:                               /* CHECK OVERFLOW              *
*                                                                  0190
*        /* CURPTR GT DATA LEN                                        *
*        IF CURPTR > CALRECL - 3                                   0190
*          THEN                        /* IF YES                      *
@RF00170 DS    0H                                                  0190
NOLNUM   LA    @12,3                                               0190
         LH    @06,CALRECL(,COMMREG)                               0190
         LR    @15,@06                                             0190
         SLR   @15,@12                                             0190
         CR    CURPTR,@15                                          0190
         BNH   @RF00190                                            0190
*            DO;                       /* RESET TEXT BUFFER           *
*              RETCODE = 4;            /* SET RC = 4                  *
         LA    @03,4                                               0192
         LR    RETCODE,@03                                         0192
*              TEXTBFR = '';           /* BLANK OUT BUFFER            *
         SLR   @15,@15                                             0193
         ICM   @15,7,TEXTPTR(PARMREG1)                             0193
         MVI   TEXTBFR(@15),C' '                                   0193
         MVC   TEXTBFR+1(255,@15),TEXTBFR(@15)                     0193
*              TEXTBFR (1:CALRECL - 4) = TEMPBFR(1:CALRECL-4);     0194
         LR    @14,@06                                             0194
         SH    @14,@CH00127                                        0194
         EX    @14,@SM00472                                        0194
*                                      /* MOVE DATA                   *
*              TEXTLEN = CALRECL;      /* SET DATA LENGTH             *
         STH   @06,TEXTLEN(,@15)                                   0195
*              TEMPLEN = CURPTR - CALRECL + 3;     /* SET TEMP LEN    *
         LR    TEMPLEN,CURPTR                                      0196
         SLR   TEMPLEN,@06                                         0196
         ALR   TEMPLEN,@12                                         0196
*              NEWLEN = TEMPLEN + 4;   /* LENGTH OF OVERFLOW          *
         ALR   @03,TEMPLEN                                         0197
         STH   @03,NEWLEN(,COMMREG)                                0197
*              NEWOFF = 0;             /* SET OFFSET TO ZERO          *
         SLR   @12,@12                                             0198
         STH   @12,NEWOFF(,COMMREG)                                0198
*              /* MOVE DATA IN TEMP BFR                               *
*              MVC(TEMPBFR(5:TEMPLEN + 4),TEMPBFR(CALRECL - 3:     0199
*                                             CALRECL+TEMPLEN-4)); 0199
         LR    @12,TEMPLEN                                         0199
         BCTR  @12,0                                               0199
         ALR   @06,COMMREG                                         0199
         EX    @12,@SM00474                                        0199
*              TEXTPTR = ADDR (TEMPBFR); /* POINT TO TEMP BFR         *
         LA    @12,TEMPBFR(,COMMREG)                               0200
         STCM  @12,7,TEXTPTR(PARMREG1)                             0200
*            END;                      /* END OF GROUP                *
*          ELSE                        /* IF NO, NO LINE OVERFLOW     *
*            DO;                       /* MOVE DATA                   *
*                                                                  0202
         B     @RC00190                                            0202
@RF00190 DS    0H                                                  0203
*              /* MOVE DATA                                           *
*              TEXTBFR = TEMPBFR (1:CURPTR - 1);                   0203
*                                                                  0203
         SLR   @12,@12                                             0203
         ICM   @12,7,TEXTPTR(PARMREG1)                             0203
         MVI   TEXTBFR+1(@12),C' '                                 0203
         MVC   TEXTBFR+2(254,@12),TEXTBFR+1(@12)                   0203
         LR    @06,CURPTR                                          0203
         BCTR  @06,0                                               0203
         BCTR  @06,0                                               0203
         EX    @06,@SM00470                                        0203
*              /* CHECK IF FIXED LENGTH RECORD FORMAT                 *
*              IF CARECFM = '1'B                                   0204
*                THEN                  /* IF YES, SET LL TO LRECL     *
         TM    CARECFM(COMMREG),B'01000000'                        0204
         BNO   @RF00204                                            0204
*                  TEXTLEN = CALRECL;  /* SET LENGTH TO LRECL         *
         MVC   TEXTLEN(2,@12),CALRECL(COMMREG)                     0205
*                ELSE                  /* IF NO, SET LL TO DATA LEN.
*                                         PLUS 4                      *
*                  TEXTLEN = CURPTR + 3;     /* SET LEN TO DATA + 4   *
         B     @RC00204                                            0206
@RF00204 ICM   @12,7,TEXTPTR(PARMREG1)                             0206
         LA    @06,3                                               0206
         ALR   @06,CURPTR                                          0206
         STH   @06,TEXTLEN(,@12)                                   0206
*            END;                                                  0207
@RC00204 DS    0H                                                  0208
*ENDSCAN:                              /* END SCANNING PROCESS        *
*                                                                  0208
*        /* IF GOTTEN OVERFLOW EXISTS                                 *
*        IF GETOF ^= 0                                             0208
*          THEN                        /* THEN                        *
@RC00190 DS    0H                                                  0208
ENDSCAN  ICM   @12,15,GETOF                                        0208
         BZ    @RF00208                                            0208
*            DO;                       /* PREPARE LINE                *
*                                                                  0209
*              /* CLEAR OUT TABS                                      *
*              DO B = 1 TO GETLEN - 4;                             0210
         LA    @12,1                                               0210
         B     @DE00210                                            0210
@DL00210 DS    0H                                                  0211
*                INDX = B;             /* USE DUMMY VARIABLE          *
*                                                                  0211
         STC   @12,INDX                                            0211
*                /* IF A TAB                                          *
*                IF GETTXT (INDX) = '05'X                          0212
*                  THEN                /* THEN                        *
         L     @15,GETOF                                           0212
         ALR   @12,@15                                             0212
         CLI   GETTXT-1(@12),X'05'                                 0212
         BNE   @RF00212                                            0212
*                    GETTXT (INDX) = ' ';   /* BLANK IT               *
         SLR   @12,@12                                             0213
         IC    @12,INDX                                            0213
         ALR   @15,@12                                             0213
         MVI   GETTXT-1(@15),C' '                                  0213
*              END;                                                0214
*                                                                  0214
@RF00212 LA    @12,1                                               0214
         AH    @12,B                                               0214
@DE00210 STH   @12,B                                               0214
         L     @01,GETOF                                           0214
         LH    @15,GETLEN(,@01)                                    0214
         SH    @15,@CH00398                                        0214
         CR    @12,@15                                             0214
         BNH   @DL00210                                            0214
*              /* IF OVERFLOW EXISTS                                  *
*              IF TEXTPTR = ADDR (TEMPBFR)                         0215
*                THEN                  /* THEN                        *
         LA    @12,TEMPBFR(,COMMREG)                               0215
         SLR   @00,@00                                             0215
         ICM   @00,7,TEXTPTR(PARMREG1)                             0215
         CR    @12,@00                                             0215
         BNE   @RF00215                                            0215
*                  DO;                 /* MOVE DATA                   *
*                    TEMPBFR (NEWLEN + 1:NEWLEN + GETLEN - 4) =    0217
*                      GETTXT;         /* MOVE TEXT                   *
         LH    @12,NEWLEN(,COMMREG)                                0217
         ALR   @12,COMMREG                                         0217
         L     @15,GETOF                                           0217
         LH    @14,GETLEN(,@15)                                    0217
         LR    @07,@14                                             0217
         SH    @07,@CH00127                                        0217
         EX    @07,@SM00476                                        0217
*                    NEWLEN = NEWLEN + GETLEN - 4;    /* NEW LENGTH   *
         AH    @14,NEWLEN(,COMMREG)                                0218
         SH    @14,@CH00398                                        0218
         STH   @14,NEWLEN(,COMMREG)                                0218
*                  END;                                            0219
*                ELSE                  /* CREATE OVERFLOW RECORD      *
*                  DO;                 /* CREATE RECORD               *
         B     @RC00215                                            0220
@RF00215 DS    0H                                                  0221
*                    TEXTPTR = ADDR (TEMPBFR); /* SET PTR             *
         LA    @12,TEMPBFR(,COMMREG)                               0221
         STCM  @12,7,TEXTPTR(PARMREG1)                             0221
*                    NEWLEN = GETLEN;  /* SET LENGTH                  *
         L     @12,GETOF                                           0222
         LH    @15,GETLEN(,@12)                                    0222
         STH   @15,NEWLEN(,COMMREG)                                0222
*                    NEWOFF = 0;       /* SET OFFSET                  *
         SLR   @14,@14                                             0223
         STH   @14,NEWOFF(,COMMREG)                                0223
*                    TEMPBFR (5:GETLEN) = GETTXT;   /* MOVE TEXT      *
         SH    @15,@CH00127                                        0224
         EX    @15,@SM00478                                        0224
*                  END;                                            0225
*              LNGTHREG = GETLEN;      /* LENGTH OF GETMAINED CORE    *
@RC00215 L     @01,GETOF                                           0226
         LH    LNGTHREG,GETLEN(,@01)                               0226
*              SREG0 = PARMREG0;       /* SAVE REG ZERO               *
         LR    SREG0,PARMREG0                                      0227
*              SREG1 = PARMREG1;       /* SAVE REG ONE                *
         LR    SREG1,PARMREG1                                      0228
*              GENERATE REFS(LNGTHREG,GETOF);/*FREE CORE HERE @ZM30978*
         FREEMAIN  E,LV=(LNGTHREG),A=GETOF,SP=1,MF=(E,GETAREA)
*              PARMREG0 = SREG0;       /* RESTORE REG ZERO            *
         LR    PARMREG0,SREG0                                      0230
*              PARMREG1 = SREG1;       /* RESTORE REG ONE             *
         LR    PARMREG1,SREG1                                      0231
*            END;                                                  0232
*                                                                  0232
*        /* IF NO CORE WAS AVAILABLE                                  *
*        IF RETCODX ^= 0                                           0233
*          THEN                        /* SET                         *
@RF00208 ICM   @12,15,RETCODX                                      0233
         BZ    @RF00233                                            0233
*            RETCODE = 8;              /* RETURN CODE                 *
         LA    RETCODE,8                                           0234
*        RETCDREG = RETCODE;           /* END OF SCAN MOVE RETURN CODE
*                                         INTO REG 15                 *
*                                                                  0235
@RF00233 LR    RETCDREG,RETCODE                                    0235
*         RESPECIFY (GPR12P,GPR13P) RSTD;                          0236
*         CANXTSVA = GPR13P;         /* UPDATE NEXT-SAVE-AREA PTR    */
         ST    GPR13P,CANXTSVA(,COMMREG)                           0237
*         GPR12P = GPR13P;           /* SAVE PRESENT SAVE-AREA ADDR  */
         LR    GPR12P,GPR13P                                       0238
*         GPR13P = (GPR13P + 4) -> CASAVPTR; /* GET BACKWARD         */
         L     @08,CASAVPTR+4(,GPR13P)                             0239
         LR    GPR13P,@08                                          0239
*                                    /* SAVE-AREA PTR                */
*         RESPECIFY CASAVE BASED(GPR12P); /* CHANGE BASE FOR         */
*                                    /* SAVE-AREA                    */
*         CASAVE = CASAVE && CASAVE; /* ZERO OUT THIS SAVE-AREA      */
         XC    CASAVE(72,GPR12P),CASAVE(GPR12P)                    0241
*         RESPECIFY CASAVE BASED;                                  0242
*         RETURN CODE(RETCDREG);     /* RETURN WITH RETURN CODE      */
         L     @14,12(,@13)                                        0243
         LM    @00,@12,20(@13)                                     0243
         BR    @14                                                 0243
*         RESPECIFY (GPR12P,GPR13P) UNRSTD;                        0244
*                                                                  0244
*                                                                  0244
*        /* GENERATE TRANSLATE TABLE                                  *
*        GENERATE DATA REFS(TXTPTREG) DEFS(TRNSTAB);               0245
*                                                                  0245
*/* THIS SUBROUTINE SEARCHES THE TAB TABLE FOR THE CORRECT OFFSET     *
*/* FOR THE TAB CHARACTER BEING OPERATED ON.  IF THE END OF THE       *
*/* TABLE IS REACHED BEFORE THIS VALUE IS FOUND, CONTROL IS PASSED TO *
*/* THE BLANKTAB SUBROUTINE.  THE TEXT IS SHIFTED AND PADDED          *
*TABRTN:                               /* TAB SEARCH ROUTINE          *
*        PROC OPTIONS (NOSAVE (4, 5));                             0246
*                                                                  0246
@EL00001 DS    0H                                                  0246
@EF00001 DS    0H                                                  0246
@ER00001 LM    @14,@12,12(@13)                                     0246
         BR    @14                                                 0246
TABRTN   STM   @14,@03,@SA00002                                    0246
         ST    @06,@SA00002+24                                     0246
         STM   @08,@12,@SA00002+28                                 0246
*        /* RESTRICTIONS                                              *
*        RESPECIFY (PARMREG1, LNGTHREG, COMMREG,                   0247
*                      BASEREG, DATAREG) RSTD;                     0247
*                                                                  0247
*        /* SCAN TABLE FOR PROPER TAB                                 *
*        DO B = TABINDEX TO 12;                                    0248
         SLR   @12,@12                                             0248
         IC    @12,TABINDEX                                        0248
         B     @DE00248                                            0248
@DL00248 DS    0H                                                  0249
*          INDX = B;                   /* SET INDEX TO TAB INDEX      *
*                                                                  0249
         STC   @12,INDX                                            0249
*          /* CHECK IF END OF TAB TABLE REACHED                       *
*          IF CATABS (INDX) = '00'X                                0250
*            THEN                      /* IF YES, TAB GT TABLE VALS   *
         ALR   @12,COMMREG                                         0250
         CLI   CATABS-1(@12),X'00'                                 0250
         BNE   @RF00250                                            0250
*              DO;                                                 0251
*                TABINDEX = INDX;      /* SET TAB INDEX               *
         SLR   @12,@12                                             0252
         IC    @12,INDX                                            0252
         STC   @12,TABINDEX                                        0252
*                CALL BLANKTAB;        /* BLANK REST OF TABS          *
         BAL   @14,BLANKTAB                                        0253
*                RETURN;               /* RETURN TO MAILINE CODE      *
@EL00002 DS    0H                                                  0254
@EF00002 DS    0H                                                  0254
@ER00002 LM    @14,@03,@SA00002                                    0254
         L     @06,@SA00002+24                                     0254
         LM    @08,@12,@SA00002+28                                 0254
         BR    @14                                                 0254
*              END;                                                0255
*          TEMPLEN = CATABS (INDX);    /* CHECK IF PROPER TABULATION
*                                         VALUE FOUND PICK UP PROPER
*                                         TAB OFFSET                  *
*                                                                  0256
@RF00250 SLR   @12,@12                                             0256
         IC    @12,INDX                                            0256
         SLR   TEMPLEN,TEMPLEN                                     0256
         IC    TEMPLEN,CATABS-1(@12,COMMREG)                       0256
*          /* CHECK IF TAB FOUND                                      *
*          IF TEMPLEN > CURPTR         /*                       A42957*
*            THEN                      /* IF YES, PROCESS TAB         *
         CR    TEMPLEN,CURPTR                                      0257
         BH    @RT00257                                            0257
*              GO TO FOUND;            /* BR TO FOUND RTN             *
*        END;                          /* END OF SEARCH               *
         LA    @12,1                                               0259
         AH    @12,B                                               0259
@DE00248 STH   @12,B                                               0259
         CH    @12,@CH00140                                        0259
         BNH   @DL00248                                            0259
*FOUND:                                /* TAB FOUND                   *
*        SHIFT = CATABS (INDX);        /* TAB FOUND SAVE TAB POSITION *
FOUND    SLR   @12,@12                                             0260
         IC    @12,INDX                                            0260
         SLR   @06,@06                                             0260
         IC    @06,CATABS-1(@12,COMMREG)                           0260
         STC   @06,SHIFT                                           0260
*        TABINDEX = INDX + 1;          /* UPDATE TO NEXT TAB VALUE    *
         LA    @12,1(,@12)                                         0261
         STC   @12,TABINDEX                                        0261
*        TEMPBFR (CURPTR) = ' ';       /* INSERT BLANK IN BUFFER      *
*                                                                  0262
         LR    @12,COMMREG                                         0262
         ALR   @12,CURPTR                                          0262
         MVI   TEMPBFR-1(@12),C' '                                 0262
*        /* BLANK AREA UPTO TAB POSITION                              *
*        MVC(TEMPBFR (CURPTR + 1:CURPTR + SHIFT - 1),              0263
*            TEMPBFR (CURPTR:CURPTR + SHIFT - 2));                 0263
         LR    @12,COMMREG                                         0263
         ALR   @12,CURPTR                                          0263
         SLR   @05,@05                                             0263
         IC    @05,SHIFT                                           0263
         BCTR  @05,0                                               0263
         BCTR  @05,0                                               0263
         LR    @15,COMMREG                                         0263
         ALR   @15,CURPTR                                          0263
         EX    @05,@SM00480                                        0263
*        TEMPLEN = CURTAB - LASTTAB - 1;   /* DET TEXT TO BE MOVED    *
*                                                                  0264
         LH    @12,CURTAB                                          0264
         LH    @05,LASTTAB                                         0264
         LR    TEMPLEN,@12                                         0264
         SLR   TEMPLEN,@05                                         0264
         BCTR  TEMPLEN,0                                           0264
*        /* RESET TEMP BUFFER                                         *
*        TEMPBFR (SHIFT:SHIFT + TEMPLEN) = TEXTBFR (LASTTAB + 1:   0265
*                                          LASTTAB+TEMPLEN+1);     0265
         ALR   @06,COMMREG                                         0265
         ICM   @15,7,TEXTPTR(PARMREG1)                             0265
         ALR   @15,@05                                             0265
         EX    TEMPLEN,@SM00482                                    0265
*        CURPTR = SHIFT + TEMPLEN;     /* CURRENT POSITION IN TEMPAREA*
         SLR   @05,@05                                             0266
         IC    @05,SHIFT                                           0266
         ALR   @05,TEMPLEN                                         0266
         LR    CURPTR,@05                                          0266
*        LASTTAB = CURTAB;             /* CURRENT TAB NOW LAST TAB 0267
*                                         UNPROCESSED                 *
         STH   @12,LASTTAB                                         0267
*        RETURN;                       /* RETURN TO MAINLINE CODE     *
         B     @EL00002                                            0268
*        END TABRTN;                   /* END OF TAB ROUTINE          *
*                                                                  0269
*/* ROUTINE TO BLANK OUT TABS                                         *
*BLANKTAB:                             /* RTN TO BLANK TABS           *
*        /* PROC STATEMENT                                            *
*        PROC OPTIONS (NOSAVEAREA, NOSAVE (4, 5));                 0270
*                                                                  0270
BLANKTAB STM   @14,@03,12(@13)                                     0270
         ST    @06,44(,@13)                                        0270
         STM   @08,@12,52(@13)                                     0270
*        /* RESTRICTIONS THIS SUBROUTINE BLANKS OUT TABULATION        *
*        /* CHARACTERS FROM THE TEXT STARTING AT THE POSITION         *
*        /* REQUESTED BY THE CALLER AND MOVES THE REMAINING TEXT      *
*        /* INTO THE TEMPPORARY BUFFER AREA FOR RECORD FORMATING.     *
*        /* RESTRICT BASE AND WORK REGS                               *
*        RESPECIFY (PARMREG1, LNGTHREG, COMMREG,                   0271
*                      BASEREG, DATAREG) RSTD;                     0271
*        TEXTBFR (LASTTAB) = ' ';      /* BLANK OUT LAST TAB UNPRCSSD *
*                                                                  0272
         LH    @12,LASTTAB                                         0272
         ICM   @06,7,TEXTPTR(PARMREG1)                             0272
         ALR   @06,@12                                             0272
         MVI   TEXTBFR-1(@06),C' '                                 0272
*        /* CHECK IF END OF BUFFER ALREADY REACHED                    *
*        IF CURTAB >= LENGTH - 4                                   0273
*          THEN                        /* IF YES, BYPASS SCAN         *
         LH    @12,CURTAB                                          0273
         LR    @06,LENGTH                                          0273
         SH    @06,@CH00398                                        0273
         CR    @12,@06                                             0273
         BNL   @RT00273                                            0273
*            GO TO SKIPSCAN;           /* BR TO BYPASS SCAN           *
*                                                                  0274
*        /* BLANK OUT REMAINING TABS                                  *
*        DO B = CURTAB TO LENGTH - 4;                              0275
         B     @DE00275                                            0275
@DL00275 DS    0H                                                  0276
*          NEXTCHAR = B;               /* SET NEXT CHAR PTR TO INDEX  *
*                                                                  0276
         STH   @12,NEXTCHAR                                        0276
*          /* CHECK IF TABULATION CHARACTER FOUND                     *
*          IF TEXTBFR (NEXTCHAR) = '05'X                           0277
*            THEN                      /* IF YES, BLANK OUT TAB CHAR  *
         SLR   @06,@06                                             0277
         ICM   @06,7,TEXTPTR(PARMREG1)                             0277
         ALR   @12,@06                                             0277
         CLI   TEXTBFR-1(@12),X'05'                                0277
         BNE   @RF00277                                            0277
*              TEXTBFR (NEXTCHAR) = ' ';   /* INSERT BLANK INTO BFR   *
         LH    @12,NEXTCHAR                                        0278
         ALR   @06,@12                                             0278
         MVI   TEXTBFR-1(@06),C' '                                 0278
*        END;                          /* END OF BLANKING             *
@RF00277 LA    @12,1                                               0279
         AH    @12,B                                               0279
@DE00275 STH   @12,B                                               0279
         LR    @06,LENGTH                                          0279
         SH    @06,@CH00398                                        0279
         CR    @12,@06                                             0279
         BNH   @DL00275                                            0279
*SKIPSCAN:                             /* SKIP SCAN                   *
*        TEMPLEN = (LENGTH - 4) - LASTTAB;    /* SET LEN TO LAST TAB  *
*                                                                  0280
SKIPSCAN LH    @12,LASTTAB                                         0280
         LR    TEMPLEN,LENGTH                                      0280
         SH    TEMPLEN,@CH00398                                    0280
         SLR   TEMPLEN,@12                                         0280
*        /* COMPLETE MOVE INTO TEMP BFR                               *
*        TEMPBFR (CURPTR:CURPTR + TEMPLEN) = TEXTBFR (LASTTAB:     0281
*                                            LASTTAB+TEMPLEN);     0281
         LR    @06,COMMREG                                         0281
         ALR   @06,CURPTR                                          0281
         ICM   @05,7,TEXTPTR(PARMREG1)                             0281
         ALR   @05,@12                                             0281
         EX    TEMPLEN,@SM00484                                    0281
*        CURPTR = CURPTR + TEMPLEN;    /* INC CURRENT PTR BY LENGTH   *
         ALR   CURPTR,TEMPLEN                                      0282
*        RETURN;                       /* RETURN TO MAINLINE CODE     *
@EL00003 DS    0H                                                  0283
@EF00003 DS    0H                                                  0283
@ER00003 LM    @14,@03,12(@13)                                     0283
         L     @06,44(,@13)                                        0283
         LM    @08,@12,52(@13)                                     0283
         BR    @14                                                 0283
*        END BLANKTAB;                 /* END OF BLANK TAB RTN        *
*                                                                  0284
*                                                                  0284
*         DECLARE /*GENERAL PURPOSE REGISTERS */                   0285
*           GPR12P PTR(31) REG(12),                                0285
*           GPR13P PTR(31) REG(13),                                0285
*           GPR15P PTR(31) REG(15);                                0285
*                                                                  0285
*         /* VARIABLES REQUIRED BY PL/S SYSTEM MACROS */           0286
*           DECLARE CASAVPTR PTR(31) BASED;/*SAVE AREA PTR FOR IKJEBESV
*/          DECLARE COMMREG REG(9) PTR(31) RSTD;/*POINTER TO EDIT COMMO
*AREA*/     DECLARE DATAREG REG(10) PTR(31) RSTD;/*BASEREG FOR EDIT SUB
*OMMAND WORK AREA*/                                                0286
*           DECLARE CASAVE CHAR(72) BASED;/*SAVE AREA EDIT MODULE*/
*                                                                  0289
*         DECLARE /* COMMON VARIABLES */                           0290
*           I256C CHAR(256) BASED,                                 0290
*           I031F FIXED(31) BASED,                                 0290
*           I031P PTR(31)   BASED,                                 0290
*           I015F FIXED(15) BASED,                                 0290
*           I015P PTR(15)   BASED,                                 0290
*           I008P PTR(8)    BASED,                                 0290
*           I001C CHAR(1)   BASED;                                 0290
*        END IKJEBELE                  /* END OF LINE EDIT ROUTINE    *
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IKJEBECA)                                        *
*;                                                                 0291
@DATA    DS    0H
@CH00057 DC    H'1'
@CH00098 DC    H'3'
@CH00398 DC    H'4'
@CH00127 DC    H'5'
@CH00423 DC    H'6'
@CH00140 DC    H'12'
@CH00286 DC    H'260'
@CH00450 DC    H'-256'
@SM00452 MVC   GETTXT(0,@12),INPUTBFR+260(@08)
@SM00454 MVC   TEMPBFR(0,COMMREG),TEXTBFR(@12)
@SM00456 MVC   TEXTBFR-1(0,@12),TEMPBFR(COMMREG)
@SM00458 MVC   TEMPBFR(0,COMMREG),TEXTBFR(@02)
@SM00460 MVC   TEMPBFR(0,COMMREG),TEXTBFR(@06)
@SM00462 MVC   TEXTBFR(0,@06),TEMPBFR(COMMREG)
@SM00464 MVC   TEMPBFR+4(0,COMMREG),TEMPBFR-4(@15)
@SM00466 MVC   TEXTBFR(0,@03),TEMPBFR(COMMREG)
@SM00468 MVC   TEMPBFR+4(0,COMMREG),TEMPBFR-1(@12)
@SM00470 MVC   TEXTBFR(0,@12),TEMPBFR(COMMREG)
@SM00472 MVC   TEXTBFR(0,@15),TEMPBFR(COMMREG)
@SM00474 MVC   TEMPBFR+4(0,COMMREG),TEMPBFR-4(@06)
@SM00476 MVC   TEMPBFR(0,@12),GETTXT(@15)
@SM00478 MVC   TEMPBFR+4(0,COMMREG),GETTXT(@12)
@SM00480 MVC   TEMPBFR(0,@12),TEMPBFR-1(@15)
@SM00482 MVC   TEMPBFR-1(0,@06),TEXTBFR(@15)
@SM00484 MVC   TEMPBFR-1(0,@06),TEXTBFR-1(@05)
@DATD    DSECT
         DS    0F
@SA00002 DS    12F
@TF00001 DS    F
IKJEBELE CSECT
         DS    0F
@CF00055 DC    F'8'
@DATD    DSECT
         DS    0D
GETOF    DS    A
RETCODX  DS    F
LEWKAREA DS    CL24
         ORG   LEWKAREA
A        DS    FL2
B        DS    FL2
CURTAB   DS    FL2
LASTTAB  DS    FL2
NEXTCHAR DS    FL2
TABSW    DS    CL1
TABINDEX DS    AL1
GETAREA  DS    CL10
INDX     DS    AL1
SHIFT    DS    AL1
         ORG   LEWKAREA+24
IKJEBELE CSECT
         NOPR  ((@ENDDATD-@DATD)/201*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
IKJEBELE CSECT
TRNSLATE TR    0(*-*,TXTPTREG),TRNSTAB TRANSLATE TEXT
         SPACE 2
TRNSTAB  DC    256AL1(*-TRNSTAB)       TRANSLATE  TABLE
         ORG   TRNSTAB+C'a'            RESET TO SMALL A
         DC    C'ABCDEFGHI'            REPLACE WITH LARGE LETTERS
         ORG   TRNSTAB+C'j'            RESET TO SMALL J
         DC    C'JKLMNOPQR'            REPLACE WITH LARGE LETTERS
         ORG   TRNSTAB+C's'            RESET TO SMALL S
         DC    C'STUVWXYZ'             REPLACE WITH LARGE LETTERS
         ORG   ,                       RESET COUNTER
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEBELE CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TEMPLEN  EQU   @02
LENGTH   EQU   @03
CURPTR   EQU   @07
SREG1    EQU   @12
SREG0    EQU   @05
RETCODE  EQU   @08
PARMREG0 EQU   @00
PARMREG1 EQU   @01
LNGTHREG EQU   @04
TXTPTREG EQU   @05
BASEREG  EQU   @11
RETCDREG EQU   @15
COMMREG  EQU   @09
GPR13P   EQU   @13
GPR15P   EQU   @15
DATAREG  EQU   @10
GPR12P   EQU   @12
RETREG   EQU   @14
IKJEBECA EQU   0
CAPTPRSD EQU   IKJEBECA+36
CAPRSPDL EQU   CAPTPRSD
CAPTIBFR EQU   IKJEBECA+40
CAATTN   EQU   IKJEBECA+120
CACFLAG  EQU   IKJEBECA+124
CACFLAG1 EQU   CACFLAG
CACAPS   EQU   CACFLAG1
CANONUM  EQU   CACFLAG1
CACFLAG2 EQU   CACFLAG+1
CARECFM  EQU   CACFLAG2
CACFLAG3 EQU   CACFLAG+2
CAIMFLG  EQU   CACFLAG3
CACFLAG4 EQU   CACFLAG+3
CACFLAG5 EQU   CACFLAG+4
CACFLAG6 EQU   CACFLAG+5
CAPD     EQU   IKJEBECA+152
CALINE   EQU   CAPD+18
CALENGTH EQU   CAPD+19
CATABS   EQU   CAPD+20
CADSATTR EQU   CAPD+41
CADSATR2 EQU   CAPD+42
CALINTAB EQU   CADSATR2
CAPTPDXT EQU   IKJEBECA+228
CALRECL  EQU   IKJEBECA+232
CAEDFLAG EQU   IKJEBECA+236
CAEDFLG2 EQU   IKJEBECA+237
CASAFLAG EQU   IKJEBECA+376
CASAFLG2 EQU   IKJEBECA+377
CASYNLST EQU   IKJEBECA+496
CASYNWA  EQU   IKJEBECA+508
CASYNOPT EQU   IKJEBECA+524
CASYNSW  EQU   CASYNOPT+3
CATMPLST EQU   IKJEBECA+528
CAMAWKA  EQU   IKJEBECA+596
MACFLAGS EQU   CAMAWKA+28
MACFLAG2 EQU   CAMAWKA+29
CASRWKA  EQU   IKJEBECA+728
CAMODEMG EQU   IKJEBECA+928
CATEMPBF EQU   IKJEBECA+2648
CANXTSVA EQU   IKJEBECA+3896
IKJEBECX EQU   0
PARMLIST EQU   0
ENTRYCD  EQU   PARMLIST
TEXTPTR  EQU   PARMLIST+1
INPUTBFR EQU   0
TEXTLEN  EQU   INPUTBFR
TEXTBFR  EQU   INPUTBFR+4
@NM00025 EQU   0
GETLEN   EQU   @NM00025
GETOFFS  EQU   @NM00025+2
GETTXT   EQU   @NM00025+4
CASAVPTR EQU   0
CASAVE   EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
TEMPBFR  EQU   CATEMPBF
@NM00024 EQU   CATEMPBF
NEWLEN   EQU   @NM00024
NEWOFF   EQU   @NM00024+2
*                                      START UNREFERENCED COMPONENTS
@NM00023 EQU   INPUTBFR+2
COMMPTR  EQU   PARMLIST+4
CXDATEXT EQU   IKJEBECX
CAPDEXT  EQU   IKJEBECA+3984
CADSNRC2 EQU   IKJEBECA+3928
CADSNOF2 EQU   IKJEBECA+3926
CADSNLN2 EQU   IKJEBECA+3924
CADSNPT2 EQU   IKJEBECA+3920
@NM00022 EQU   IKJEBECA+3900
CASVAREA EQU   IKJEBECA+3176
CABFRPL  EQU   IKJEBECA+2120
CASCWKA  EQU   IKJEBECA+1448
CAFIBFR  EQU   IKJEBECA+1188
CAAEDCB  EQU   IKJEBECA+1096
CALDROP  EQU   IKJEBECA+1064
CAATNWKA EQU   IKJEBECA+956
CAATNBUF EQU   IKJEBECA+952
CAMODETX EQU   CAMODEMG+12
CAMODEOF EQU   CAMODEMG+10
CAMODELN EQU   CAMODEMG+8
CAMODEPT EQU   CAMODEMG+4
CAMODEIS EQU   CAMODEMG
CAMSWKA  EQU   IKJEBECA+628
@NM00021 EQU   CAMAWKA+30
@NM00020 EQU   MACFLAG2
MATABLE1 EQU   MACFLAG2
@NM00019 EQU   MACFLAGS
MAENDPRC EQU   MACFLAGS
MAABBREV EQU   MACFLAGS
MAECTMOD EQU   MACFLAGS
@NM00018 EQU   CAMAWKA
CASTAEPL EQU   IKJEBECA+576
CASTAXPL EQU   IKJEBECA+556
CASRPLST EQU   CATMPLST+12
CAPTECB  EQU   CATMPLST+8
CAPTECT  EQU   CATMPLST+4
CAPTUPT  EQU   CATMPLST
CASYNSCN EQU   CASYNSW
CASYNML  EQU   CASYNSW
CASYNSF  EQU   CASYNSW
CASYNRFM EQU   CASYNSW
CASYNIS  EQU   CASYNSW
@NM00017 EQU   CASYNSW
CASYNLN  EQU   CASYNSW
@NM00016 EQU   CASYNSW
CASYNRCL EQU   CASYNOPT+2
CASYNCD2 EQU   CASYNOPT+1
CASYNCD1 EQU   CASYNOPT
CASYNTEM EQU   CASYNWA+12
CASYNMS2 EQU   CASYNWA+8
CASYNMS1 EQU   CASYNWA+4
CASYNWAP EQU   CASYNWA+1
CASYNECD EQU   CASYNWA
CASYNPTO EQU   CASYNLST+8
CASYNPWA EQU   CASYNLST+4
CASYNBFR EQU   CASYNLST
@NM00015 EQU   IKJEBECA+484
CARECNO  EQU   IKJEBECA+480
CAINSAVE EQU   IKJEBECA+476
@NM00014 EQU   IKJEBECA+472
CAIMLINC EQU   IKJEBECA+468
CAIMLLNO EQU   IKJEBECA+464
CAINCRE  EQU   IKJEBECA+460
CACURNUM EQU   IKJEBECA+456
CANXTREC EQU   IKJEBECA+452
CASTNUM  EQU   IKJEBECA+448
CASAPSWD EQU   IKJEBECA+440
CASADDN  EQU   IKJEBECA+432
CASAMEMB EQU   IKJEBECA+424
CASADSN  EQU   IKJEBECA+380
CASADSNL EQU   IKJEBECA+378
CASADQTY EQU   CASAFLG2
CASANCTG EQU   CASAFLG2
CASAALOC EQU   CASAFLAG
CASAUNCG EQU   CASAFLAG
CASADSOR EQU   CASAFLAG
CASAMEM  EQU   CASAFLAG
CASADISP EQU   CASAFLAG
CASAINCP EQU   CASAFLAG
CASAFNCP EQU   CASAFLAG
CASAVEDS EQU   CASAFLAG
CADSNREC EQU   IKJEBECA+320
CADSNOFF EQU   IKJEBECA+318
CADSNLEN EQU   IKJEBECA+316
CADSNPTR EQU   IKJEBECA+312
CAEDTSIZ EQU   IKJEBECA+308
CAEDPSWD EQU   IKJEBECA+300
CAEDDDN  EQU   IKJEBECA+292
CAEDMEMB EQU   IKJEBECA+284
CAEDDSN  EQU   IKJEBECA+240
CAEDDSNL EQU   IKJEBECA+238
CAEDPRTC EQU   CAEDFLG2
CAEDALOC EQU   CAEDFLAG
CAEDUNCG EQU   CAEDFLAG
CAEDDSOR EQU   CAEDFLAG
CAEDMEM  EQU   CAEDFLAG
CAEDDISP EQU   CAEDFLAG
CAEDINCP EQU   CAEDFLAG
CAEDFNCP EQU   CAEDFLAG
CAEDITDS EQU   CAEDFLAG
CABLK2   EQU   IKJEBECA+234
@NM00013 EQU   IKJEBECA+226
CAPDEND  EQU   CAPD+82
CADATEXT EQU   CAPD+74
CAEXTNAM EQU   CAPD+66
CAPRNAME EQU   CAPD+58
CACHKOPT EQU   CAPD+56
CAULRLMX EQU   CAPD+54
CAULRLDF EQU   CAPD+52
CAVLRLMX EQU   CAPD+50
CAVLRLDF EQU   CAPD+48
CAFLRLMX EQU   CAPD+46
CAFLRLDF EQU   CAPD+44
CARECFMD EQU   CAPD+43
@NM00012 EQU   CADSATR2
CAINLIST EQU   CADSATR2
CARUNDS  EQU   CADSATR2
CAOBJGEN EQU   CADSATR2
CADSNDEF EQU   CADSATR2
@NM00011 EQU   CADSATTR
CALRECLX EQU   CADSATTR
CALNNUM  EQU   CADSATTR
CADSCONT EQU   CADSATTR
CACAPSDF EQU   CADSATTR
CACAPSRQ EQU   CADSATTR
CASCAN   EQU   CADSATTR
CARUN    EQU   CADSATTR
CADSCODE EQU   CAPD+40
CASYNAME EQU   CAPD+32
CABLKS   EQU   CAPD+16
CADSQUAL EQU   CAPD+8
CADSTYPE EQU   CAPD
@NM00010 EQU   CACFLAG+8
CAPLIRTM EQU   CACFLAG+7
CAPLILFM EQU   CACFLAG+6
@NM00009 EQU   CACFLAG6
CACHAR60 EQU   CACFLAG6
CACHAR48 EQU   CACFLAG6
CAFREE   EQU   CACFLAG6
@NM00008 EQU   CACFLAG5
CAEDLNDP EQU   CACFLAG5
CADSUSED EQU   CACFLAG4
CARECURS EQU   CACFLAG4
CAINPROC EQU   CACFLAG4
CASCRC20 EQU   CACFLAG4
CAABEND  EQU   CACFLAG4
CATPUTVF EQU   CACFLAG4
CAPTGTBF EQU   CACFLAG4
CAFINDIS EQU   CACFLAG4
@NM00007 EQU   CAIMFLG
CAIMINPT EQU   CAIMFLG
CAIMSFPT EQU   CAIMFLG
CAIMCIN  EQU   CAIMFLG
CAIMIR   EQU   CAIMFLG
CAIMSC   EQU   CAIMFLG
CAIMINS  EQU   CAIMFLG
CAIMPT   EQU   CAIMFLG
@NM00006 EQU   CACFLAG2
CASEQCOL EQU   CACFLAG2
CAMODMSG EQU   CACFLAG2
CASCANON EQU   CACFLAG2
CADSMODS EQU   CACFLAG2
CAENDSC  EQU   CACFLAG1
CAINITSC EQU   CACFLAG1
CASCANSW EQU   CACFLAG1
CAPROMPT EQU   CACFLAG1
CAVRFYSW EQU   CACFLAG1
CALNTOVF EQU   CACFLAG1
CAATTNIS EQU   CAATTN
@NM00005 EQU   CAATTN
@NM00004 EQU   IKJEBECA+118
CAMAXBLK EQU   IKJEBECA+116
@NM00003 EQU   IKJEBECA+88
CAPTICLN EQU   IKJEBECA+84
CAPTICDS EQU   IKJEBECA+80
CAPTNBFR EQU   IKJEBECA+76
CAPTCHK  EQU   IKJEBECA+72
CACORELN EQU   IKJEBECA+68
CAPTCORE EQU   IKJEBECA+64
CAUTILNO EQU   IKJEBECA+60
CAPTPDCB EQU   IKJEBECA+56
CAPTCDCB EQU   IKJEBECA+52
@NM00002 EQU   IKJEBECA+50
CASCMDLN EQU   IKJEBECA+48
CAPTSCMD EQU   IKJEBECA+44
CAOPERND EQU   CAPTIBFR
CAFREEDL EQU   CAPRSPDL
CAPTRTRY EQU   IKJEBECA+32
CAPTMSGM EQU   IKJEBECA+28
CAPTUT   EQU   IKJEBECA+24
CAPTMS   EQU   IKJEBECA+20
CAPTLE   EQU   IKJEBECA+16
CAPTAT   EQU   IKJEBECA+12
CAPTAE   EQU   IKJEBECA+8
@NM00001 EQU   IKJEBECA+4
CAPTTMP  EQU   IKJEBECA
*                                      END UNREFERENCED COMPONENTS
@RT00093 EQU   NOTABS
@RT00106 EQU   ENDSCAN
@RC00148 EQU   ENDSCAN
@RT00168 EQU   NOLNUM
@RC00172 EQU   ENDSCAN
@RT00257 EQU   FOUND
@RT00273 EQU   SKIPSCAN
@PB00003 EQU   @EL00001
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IKJEBELE,(C'PLS2047',0701,76027)
